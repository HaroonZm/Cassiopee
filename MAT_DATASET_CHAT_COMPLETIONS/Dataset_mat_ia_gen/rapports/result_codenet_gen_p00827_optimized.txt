================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def extended_gcd(a, b):
    if b == 0:
        return a, 1, 0
    g, x1, y1 = extended_gcd(b, a % b)
    return g, y1, x1 - (a // b) * y1

while True:
    a, b, d = map(int, input().split())
    if a == 0 and b == 0 and d == 0:
        break

    g, x0, y0 = extended_gcd(a, b)
    # Scale the solution to d/g
    x0 *= d // g
    y0 *= d // g

    # Coefficients for shifting solutions
    k1 = b // g
    k2 = a // g

    # Find t to minimize total weights x + y
    # x = x0 + k1 * t
    # y = y0 - k2 * t
    # sum = x + y = x0 + y0 + t*(k1 - k2)
    
    # Depending on sign of k1 - k2, choose t accordingly
    diff = k1 - k2

    # Candidate solutions to consider, as t integer values
    candidates = []

    # To keep x,y >= 0:
    # x0 + k1*t >= 0 => t >= -x0/k1 if k1 > 0
    # y0 - k2*t >= 0 => t <= y0/k2 if k2 > 0

    # Compute bounds on t to keep x,y nonnegative
    t_min = (-x0 + k1 - 1) // k1 if k1 != 0 else float('-inf')
    t_max = y0 // k2 if k2 != 0 else float('inf')

    # If k1 == 0 or k2 == 0, handle accordingly
    if k1 == 0:
        if x0 < 0:
            # no solution
            pass
        else:
            t_min = float('-inf')
    if k2 == 0:
        if y0 < 0:
            # no solution
            pass
        else:
            t_max = float('inf')

    # Because we want minimal x+y, which is sum = x0 + y0 + t*(k1 - k2)
    # If diff > 0, minimal sum at minimal t within bounds
    # If diff < 0, minimal sum at maximal t within bounds
    # If diff == 0, sum is constant, test all feasible t

    possible_t = []

    if diff > 0:
        # minimal sum at minimal feasible t
        # t_min and t_max can be bounds, but t integer
        t_candidate = t_min
        if t_candidate <= t_max:
            possible_t.append(t_candidate)
        else:
            # no t satisfying constraints?
            # try t_max if t_max >= t_min
            if t_max >= t_min:
                possible_t.append(t_max)
    elif diff < 0:
        # minimal sum at maximal feasible t
        t_candidate = t_max
        if t_candidate >= t_min:
            possible_t.append(t_candidate)
        else:
            if t_min <= t_max:
                possible_t.append(t_min)
    else:
        # diff==0 sum constant for all feasible t
        # try all feasible t in range t_min to t_max to find minimal total weight mass ax+by
        # to reduce complexity, try t_min, t_max and the integer t just to be sure

        # Clamp t_min and t_max inside reasonable limits
        if t_min == float('-inf'):
            t_min = -10**10
        if t_max == float('inf'):
            t_max = 10**10

        # We check t_min, t_max and t around zero since large extremes unlikely better
        checked_ts = {t_min, t_max, 0}

        # filter valid t in bounds
        possible_t = [t for t in checked_ts if t_min <= t <= t_max]

    best = None
    for t in possible_t:
        x = x0 + k1 * t
        y = y0 - k2 * t
        if x < 0 or y < 0:
            continue
        total = x + y
        mass = a * x + b * y
        if best is None or total < best[0] or (total == best[0] and mass < best[1]):
            best = (total, mass, x, y)

    # If no t found by previous logic, try searching around t_min to t_max for minimal sum and mass
    if best is None:
        # search t in range max(t_min, -100000) to min(t_max, 100000)
        start = max(t_min, -100000)
        end = min(t_max, 100000)
        for t in range(start, end+1):
            x = x0 + k1 * t
            y = y0 - k2 * t
            if x < 0 or y < 0:
                continue
            total = x + y
            mass = a * x + b * y
            if best is None or total < best[0] or (total == best[0] and mass < best[1]):
                best = (total, mass, x, y)

    print(best[2], best[3])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' extended' (ID: 17290)
  → Token d'amorce (pas de prédiction)

Token 2: '_g' (ID: 5439)
  → Token d'amorce (pas de prédiction)

Token 3: 'cd' (ID: 8301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4738072156906128
    2. 'e' → logprob: -1.4738072156906128
    3. 'enerator' → logprob: -1.7238072156906128
    4. 'enerate' → logprob: -2.4738073348999023
    5. '_e' → logprob: -2.9738073348999023
    6. '(' → logprob: -3.4738073348999023
    7. 'en' → logprob: -3.5988073348999023
    8. '(e' → logprob: -3.7238073348999023
    9. '(_' → logprob: -3.7238073348999023
    10. 'enerated' → logprob: -3.7238073348999023

Token 4: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06630532443523407
    2. '_' → logprob: -3.31630539894104
    3. '```' → logprob: -4.066305160522461
    4. '(_' → logprob: -4.816305160522461
    5. '(_:' → logprob: -7.316305160522461
    6. '`' → logprob: -7.816305160522461
    7. ''' → logprob: -8.316305160522461
    8. ' (' → logprob: -9.191305160522461
    9. '"' → logprob: -9.191305160522461
    10. '**' → logprob: -9.316305160522461

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005997759755700827
    2. '):' → logprob: -6.380997657775879
    3. ',b' → logprob: -6.630997657775879
    4. '<|end|>' → logprob: -7.130997657775879
    5. ',a' → logprob: -7.380997657775879
    6. ')' → logprob: -7.380997657775879
    7. '_,' → logprob: -8.380997657775879
    8. '```' → logprob: -8.630997657775879
    9. ' ,' → logprob: -9.130997657775879
    10. '`,' → logprob: -9.880997657775879

Token 6: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10026469081640244
    2. 'b' → logprob: -2.35026478767395
    3. ' ' → logprob: -9.975264549255371
    4. ',b' → logprob: -12.475264549255371
    5. '```' → logprob: -13.100264549255371
    6. ',' → logprob: -13.475264549255371
    7. ' ' → logprob: -13.600264549255371
    8. '    ' → logprob: -14.100264549255371
    9. ')' → logprob: -14.725264549255371
    10. ' ,' → logprob: -14.975264549255371

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005292457528412342
    2. ')' → logprob: -5.7552924156188965
    3. '):
' → logprob: -6.7552924156188965
    4. ',' → logprob: -7.6302924156188965
    5. ':' → logprob: -8.755292892456055
    6. '```' → logprob: -9.380292892456055
    7. '   ' → logprob: -9.505292892456055
    8. ''):' → logprob: -10.130292892456055
    9. '<|end|>' → logprob: -10.755292892456055
    10. '):
' → logprob: -11.380292892456055

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42388617992401123
    2. '   ' → logprob: -1.1738861799240112
    3. '```' → logprob: -4.173886299133301
    4. '():' → logprob: -5.423886299133301
    5. '    
' → logprob: -6.048886299133301
    6. '``' → logprob: -6.423886299133301
    7. '''' → logprob: -6.548886299133301
    8. ' :' → logprob: -6.673886299133301
    9. '":' → logprob: -6.673886299133301
    10. ' if' → logprob: -6.923886299133301

Token 9: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1169837936758995
    2. '```' → logprob: -3.1169838905334473
    3. '`' → logprob: -3.7419838905334473
    4. '``' → logprob: -4.241983890533447
    5. ' if' → logprob: -5.116983890533447
    6. '    
' → logprob: -5.366983890533447
    7. '       ' → logprob: -5.491983890533447
    8. 'if' (adapté à ' if') → logprob: -5.491983890533447
    9. '"""' → logprob: -6.491983890533447
    10. '    ' → logprob: -6.741983890533447

Token 10: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3325122594833374
    2. ' not' → logprob: -2.082512378692627
    3. ' ' → logprob: -2.332512378692627
    4. 'a' → logprob: -2.832512378692627
    5. ' b' → logprob: -6.582512378692627
    6. 'not' → logprob: -7.832512378692627
    7. ' ' → logprob: -8.832511901855469
    8. ' (' → logprob: -8.832511901855469
    9. 'b' → logprob: -9.082511901855469
    10. '  ' → logprob: -10.082511901855469

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014387030154466629
    2. '==' → logprob: -4.264387130737305
    3. '=' → logprob: -9.764387130737305
    4. ' ' → logprob: -10.139387130737305
    5. ' =' → logprob: -10.764387130737305
    6. ' ===' → logprob: -10.764387130737305
    7. ' !=' → logprob: -10.889387130737305
    8. ' is' → logprob: -11.139387130737305
    9. '```' → logprob: -11.389387130737305
    10. '>' → logprob: -11.764387130737305

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12694312632083893
    2. ' ' → logprob: -2.1269431114196777
    3. ' ' → logprob: -12.376943588256836
    4. 'None' → logprob: -13.251943588256836
    5. ''' → logprob: -13.376943588256836
    6. '<|end|>' → logprob: -13.376943588256836
    7. ' None' → logprob: -13.501943588256836
    8. '```' → logprob: -13.626943588256836
    9. '"' → logprob: -14.501943588256836
    10. ')' → logprob: -14.626943588256836

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'a' → logprob: -18.00004005432129
    4. '```' → logprob: -18.50004005432129
    5. 'None' → logprob: -18.50004005432129
    6. '   ' → logprob: -18.87504005432129
    7. '=' → logprob: -19.62504005432129
    8. ')' → logprob: -19.75004005432129
    9. '  ' → logprob: -20.50004005432129
    10. '`' → logprob: -20.75004005432129

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004007876385003328
    2. ':return' → logprob: -6.004007816314697
    3. ':
' → logprob: -6.504007816314697
    4. ' :' → logprob: -10.879008293151855
    5. '):' → logprob: -12.379008293151855
    6. ':

' → logprob: -13.129008293151855
    7. '':' → logprob: -13.379008293151855
    8. '   ' → logprob: -13.754008293151855
    9. '       ' → logprob: -13.879008293151855
    10. ' :
' → logprob: -14.129008293151855

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09818419069051743
    2. ':' → logprob: -3.348184108734131
    3. ' return' → logprob: -3.723184108734131
    4. ':return' → logprob: -3.723184108734131
    5. ':
' → logprob: -5.973184108734131
    6. '   ' → logprob: -6.473184108734131
    7. '    ' → logprob: -6.473184108734131
    8. 'return' → logprob: -6.848184108734131
    9. '\n' → logprob: -7.223184108734131
    10. ' :' → logprob: -7.598184108734131

Token 16: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4483880400657654
    2. 'return' (adapté à ' return') → logprob: -1.4483880996704102
    3. '       ' → logprob: -2.07338809967041
    4. '           ' → logprob: -8.07338809967041
    5. ':return' → logprob: -9.32338809967041
    6. '   ' → logprob: -9.69838809967041
    7. ' ' → logprob: -9.94838809967041
    8. '	return' → logprob: -10.19838809967041
    9. ' ' → logprob: -10.82338809967041
    10. '        ' → logprob: -11.44838809967041

Token 17: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.481647253036499
    2. 'a' → logprob: -0.981647253036499
    3. ' (' → logprob: -5.106647491455078
    4. '(a' → logprob: -6.856647491455078
    5. '(' → logprob: -8.481647491455078
    6. ' ' → logprob: -8.606647491455078
    7. '   ' → logprob: -10.481647491455078
    8. '	a' → logprob: -12.606647491455078
    9. '  ' → logprob: -12.981647491455078
    10. ' ' → logprob: -12.981647491455078

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012868296355009079
    2. ' ,' → logprob: -4.887868404388428
    3. ',
' → logprob: -5.262868404388428
    4. ',

' → logprob: -11.26286792755127
    5. '<|end|>' → logprob: -11.26286792755127
    6. ' ,
' → logprob: -11.76286792755127
    7. ',
' → logprob: -12.38786792755127
    8. ',\
' → logprob: -12.63786792755127
    9. ',\' → logprob: -12.76286792755127
    10. '`,' → logprob: -12.76286792755127

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16150599718093872
    2. ' ' → logprob: -1.911505937576294
    3. '0' → logprob: -6.661506175994873
    4. ' None' → logprob: -13.661505699157715
    5. 'None' → logprob: -15.411505699157715
    6. '<|end|>' → logprob: -16.03650665283203
    7. '```' → logprob: -16.28650665283203
    8. '  ' → logprob: -16.41150665283203
    9. '   ' → logprob: -16.78650665283203
    10. ',' → logprob: -17.53650665283203

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. '0' → logprob: -9.125109672546387
    3. ' ' → logprob: -14.750109672546387
    4. 'None' → logprob: -16.62510871887207
    5. '<|end|>' → logprob: -16.87510871887207
    6. '```' → logprob: -18.75010871887207
    7. ',' → logprob: -20.75010871887207
    8. '   ' → logprob: -20.75010871887207
    9. ' None' → logprob: -20.75010871887207
    10. '(' → logprob: -20.75010871887207

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013381359167397022
    2. ' ,' → logprob: -9.000133514404297
    3. '<|end|>' → logprob: -12.250133514404297
    4. ',
' → logprob: -13.125133514404297
    5. '0' → logprob: -13.375133514404297
    6. '   ' → logprob: -14.500133514404297
    7. ',None' → logprob: -14.875133514404297
    8. ',

' → logprob: -16.125133514404297
    9. ' ' → logprob: -16.250133514404297
    10. ',b' → logprob: -16.375133514404297

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -19.500015258789062
    4. '۰' → logprob: -21.625015258789062
    5. '   ' → logprob: -21.875015258789062
    6. ',' → logprob: -21.875015258789062
    7. '```' → logprob: -23.375015258789062
    8. '  ' → logprob: -23.375015258789062
    9. ' ' → logprob: -23.750015258789062
    10. '０' → logprob: -24.125015258789062

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -19.875
    4. '<|end|>' → logprob: -21.125
    5. '049' → logprob: -22.0
    6. '045' → logprob: -22.25
    7. '০' → logprob: -22.25
    8. '014' → logprob: -22.5
    9. '016' → logprob: -22.5
    10. '015' → logprob: -22.5

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12036716192960739
    2. '
' → logprob: -3.1203670501708984
    3. '   ' → logprob: -3.6203670501708984
    4. '    
' → logprob: -3.6203670501708984
    5. '```' → logprob: -4.745367050170898
    6. '  
' → logprob: -5.745367050170898
    7. '   
' → logprob: -6.995367050170898
    8. '\' → logprob: -7.120367050170898
    9. '' → logprob: -7.870367050170898
    10. ' 
' → logprob: -7.870367050170898

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8163208961486816
    2. '    
' → logprob: -1.0663208961486816
    3. '\n' → logprob: -2.0663208961486816
    4. '
' → logprob: -2.9413208961486816
    5. '```' → logprob: -3.5663208961486816
    6. '  
' → logprob: -6.191320896148682
    7. '   
' → logprob: -7.066320896148682
    8. '``' → logprob: -7.191320896148682
    9. '' → logprob: -7.441320896148682
    10. '\' → logprob: -8.066320419311523

Token 26: ' g' (ID: 329)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.42985799908638
    2. '   ' → logprob: -2.3048579692840576
    3. '    
' → logprob: -2.3048579692840576
    4. '```' → logprob: -2.9298579692840576
    5. '
' → logprob: -3.0548579692840576
    6. 'a' → logprob: -3.6798579692840576
    7. 'n' → logprob: -4.804858207702637
    8. '\' → logprob: -5.554858207702637
    9. 'newline' → logprob: -6.554858207702637
    10. '`' → logprob: -6.804858207702637

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007802037871442735
    2. ' ,' → logprob: -7.25078010559082
    3. '=' → logprob: -10.37578010559082
    4. ',
' → logprob: -12.12578010559082
    5. ',a' → logprob: -12.12578010559082
    6. 'eneral' → logprob: -12.12578010559082
    7. ' =' → logprob: -12.37578010559082
    8. 'a' → logprob: -13.00078010559082
    9. ' ' → logprob: -13.50078010559082
    10. ',,' → logprob: -13.62578010559082

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01105878408998251
    2. ' x' → logprob: -4.511058807373047
    3. 'y' → logprob: -11.511058807373047
    4. ' y' → logprob: -14.511058807373047
    5. '	x' → logprob: -15.386058807373047
    6. '   ' → logprob: -16.011058807373047
    7. '"x' → logprob: -17.136058807373047
    8. ' ' → logprob: -17.511058807373047
    9. ''x' → logprob: -17.511058807373047
    10. 'a' → logprob: -18.136058807373047

Token 29: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021167160011827946
    2. '_,' → logprob: -6.877116680145264
    3. '1' → logprob: -7.377116680145264
    4. 'y' → logprob: -9.002117156982422
    5. '_next' → logprob: -9.252117156982422
    6. '_' → logprob: -9.377117156982422
    7. ',y' → logprob: -10.002117156982422
    8. '2' → logprob: -10.127117156982422
    9. ' ,' → logprob: -10.752117156982422
    10. '```' → logprob: -10.877117156982422

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010390079842181876
    2. '=' → logprob: -9.875103950500488
    3. ' ,' → logprob: -10.500103950500488
    4. ' =' → logprob: -10.625103950500488
    5. '   ' → logprob: -15.625103950500488
    6. ',b' → logprob: -16.000102996826172
    7. '-' → logprob: -16.000102996826172
    8. ' ' → logprob: -17.250102996826172
    9. ',x' → logprob: -17.250102996826172
    10. ',y' → logprob: -17.250102996826172

Token 31: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011053716763854027
    2. ' y' → logprob: -4.511053562164307
    3. '	y' → logprob: -12.386054039001465
    4. 'x' → logprob: -13.636054039001465
    5. ',y' → logprob: -15.636054039001465
    6. ' ' → logprob: -16.88605308532715
    7. '```' → logprob: -16.88605308532715
    8. '<|end|>' → logprob: -17.01105308532715
    9. ',' → logprob: -17.13605308532715
    10. ''y' → logprob: -17.51105308532715

Token 32: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05601166561245918
    2. '1' → logprob: -2.93101167678833
    3. '_,' → logprob: -7.55601167678833
    4. ' =' → logprob: -8.806011199951172
    5. ',' → logprob: -9.056011199951172
    6. '=' → logprob: -9.431011199951172
    7. ' _' → logprob: -9.431011199951172
    8. '_=' → logprob: -9.431011199951172
    9. ',_' → logprob: -10.806011199951172
    10. ' ' → logprob: -11.306011199951172

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055081889033317566
    2. '=' → logprob: -2.930081844329834
    3. ',' → logprob: -8.555082321166992
    4. ' ' → logprob: -12.305082321166992
    5. '   ' → logprob: -13.680082321166992
    6. ' ,' → logprob: -15.180082321166992
    7. ')' → logprob: -15.305082321166992
    8. '  ' → logprob: -15.555082321166992
    9. '    ' → logprob: -15.680082321166992
    10. ' ' → logprob: -16.055082321166992

Token 34: ' extended' (ID: 17290)
  Prédit: ' extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extended' → logprob: -0.16023743152618408
    2. 'extended' → logprob: -1.910237431526184
    3. '   ' → logprob: -12.285237312316895
    4. ' ' → logprob: -12.660237312316895
    5. '```' → logprob: -13.535237312316895
    6. '_extended' → logprob: -14.035237312316895
    7. 'ext' → logprob: -14.410237312316895
    8. 'Extended' → logprob: -14.660237312316895
    9. ' ' → logprob: -14.847737312316895
    10. 'e' → logprob: -15.410237312316895

Token 35: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.014330738224089146
    2. '_' → logprob: -4.264330863952637
    3. ' _' → logprob: -9.889330863952637
    4. '_s' → logprob: -10.014330863952637
    5. '```' → logprob: -10.514330863952637
    6. '_f' → logprob: -11.139330863952637
    7. '_q' → logprob: -12.764330863952637
    8. '

' → logprob: -13.139330863952637
    9. '_a' → logprob: -13.264330863952637
    10. ')_' → logprob: -13.389330863952637

Token 36: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.5120287066092715e-05
    2. 'c' → logprob: -11.000035285949707
    3. '_cd' → logprob: -11.250035285949707
    4. 'cdn' → logprob: -12.750035285949707
    5. 'cdf' → logprob: -13.125035285949707
    6. 'CD' → logprob: -15.875035285949707
    7. '	cd' → logprob: -16.00003433227539
    8. 'cdr' → logprob: -16.25003433227539
    9. '(cd' → logprob: -16.62503433227539
    10. 'cdc' → logprob: -18.00003433227539

Token 37: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16023793816566467
    2. '(' → logprob: -1.9102379083633423
    3. '(
' → logprob: -11.410238265991211
    4. '(a' → logprob: -14.035238265991211
    5. ' (' → logprob: -14.535238265991211
    6. 'b' → logprob: -14.660238265991211
    7. '(B' → logprob: -15.160238265991211
    8. '(

' → logprob: -16.16023826599121
    9. '((' → logprob: -16.16023826599121
    10. ' b' → logprob: -16.78523826599121

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013641661498695612
    2. ' ,' → logprob: -6.626364231109619
    3. ')' → logprob: -10.251363754272461
    4. '),' → logprob: -13.751363754272461
    5. ' ' → logprob: -14.001363754272461
    6. '',' → logprob: -15.376363754272461
    7. '`,' → logprob: -15.501363754272461
    8. 'a' → logprob: -15.626363754272461
    9. '%' → logprob: -16.12636375427246
    10. ',a' → logprob: -16.12636375427246

Token 39: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022484004497528
    2. ' a' → logprob: -1.9102247953414917
    3. '	a' → logprob: -14.660224914550781
    4. ' ' → logprob: -15.535224914550781
    5. ')' → logprob: -16.91022491455078
    6. ')a' → logprob: -17.28522491455078
    7. '>a' → logprob: -17.78522491455078
    8. '(a' → logprob: -17.78522491455078
    9. '   ' → logprob: -18.16022491455078
    10. '%' → logprob: -18.78522491455078

Token 40: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03807936608791351
    2. '%' → logprob: -3.288079261779785
    3. '%b' → logprob: -10.288079261779785
    4. ')' → logprob: -13.288079261779785
    5. ' ' → logprob: -13.913079261779785
    6. ' %)' → logprob: -14.413079261779785
    7. '%i' → logprob: -15.288079261779785
    8. ' ' → logprob: -15.538079261779785
    9. '%s' → logprob: -16.2880802154541
    10. '%B' → logprob: -16.7880802154541

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. '	b' → logprob: -19.005233764648438
    5. ')' → logprob: -19.755233764648438
    6. ')b' → logprob: -20.005233764648438
    7. '>b' → logprob: -21.130233764648438
    8. '```' → logprob: -21.130233764648438
    9. '   ' → logprob: -21.505233764648438
    10. '  ' → logprob: -21.880233764648438

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '),' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.375001907348633
    6. '`)' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '))' → logprob: -18.375001907348633
    9. '4' → logprob: -18.375001907348633
    10. '）' → logprob: -18.500001907348633

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12813444435596466
    2. 'x' → logprob: -3.1281344890594482
    3. '\n' → logprob: -3.5031344890594482
    4. '    
' → logprob: -4.128134250640869
    5. '   ' → logprob: -5.003134250640869
    6. ',' → logprob: -5.003134250640869
    7. '  
' → logprob: -5.878134250640869
    8. ' x' → logprob: -6.003134250640869
    9. '```' → logprob: -6.003134250640869
    10. '   
' → logprob: -6.378134250640869

Token 44: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04336190223693848
    2. '   ' → logprob: -3.9183619022369385
    3. '
' → logprob: -5.418361663818359
    4. ',' → logprob: -5.418361663818359
    5. ' x' → logprob: -5.543361663818359
    6. '\n' → logprob: -5.918361663818359
    7. 'y' → logprob: -6.418361663818359
    8. ')' → logprob: -6.793361663818359
    9. '    
' → logprob: -6.918361663818359
    10. '<|end|>' → logprob: -7.418361663818359

Token 45: ' g' (ID: 329)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.028464779257774353
    2. ' y' → logprob: -3.6534647941589355
    3. 'g' → logprob: -6.1534647941589355
    4. ' g' → logprob: -10.528464317321777
    5. 'b' → logprob: -12.403464317321777
    6. 'x' → logprob: -12.778464317321777
    7. '(' → logprob: -14.403464317321777
    8. ' (' → logprob: -14.528464317321777
    9. ' ' → logprob: -14.778464317321777
    10. ',' → logprob: -14.903464317321777

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017469677550252527
    2. ' ,' → logprob: -8.750174522399902
    3. '`,' → logprob: -11.375174522399902
    4. ',x' → logprob: -13.750174522399902
    5. ',,' → logprob: -14.375174522399902
    6. '',' → logprob: -15.000174522399902
    7. '，' → logprob: -15.125174522399902
    8. ',
' → logprob: -15.125174522399902
    9. ',y' → logprob: -15.125174522399902
    10. '```' → logprob: -15.125174522399902

Token 47: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4855663721391466e-05
    2. ' y' → logprob: -11.125015258789062
    3. ',y' → logprob: -17.500015258789062
    4. ''y' → logprob: -18.625015258789062
    5. '   ' → logprob: -18.750015258789062
    6. '	y' → logprob: -18.750015258789062
    7. '(y' → logprob: -19.125015258789062
    8. '‘y' → logprob: -19.750015258789062
    9. '*y' → logprob: -20.500015258789062
    10. '-y' → logprob: -20.750015258789062

Token 48: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026797039434313774
    2. ',x' → logprob: -4.151796817779541
    3. '1' → logprob: -6.276796817779541
    4. 'x' → logprob: -6.401796817779541
    5. ',y' → logprob: -6.526796817779541
    6. ',g' → logprob: -6.526796817779541
    7. '`,' → logprob: -6.651796817779541
    8. '_,' → logprob: -7.151796817779541
    9. '```' → logprob: -7.276796817779541
    10. ',b' → logprob: -8.1517972946167

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011500573717057705
    2. '-' → logprob: -5.011500358581543
    3. '`,' → logprob: -5.761500358581543
    4. '`' → logprob: -7.261500358581543
    5. ' ,' → logprob: -8.011500358581543
    6. '```' → logprob: -9.011500358581543
    7. '',' → logprob: -9.261500358581543
    8. '1' → logprob: -9.261500358581543
    9. '",' → logprob: -9.511500358581543
    10. '`,`' → logprob: -9.511500358581543

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141392946243286
    2. ' x' → logprob: -1.701413869857788
    3. '(x' → logprob: -15.451414108276367
    4. ',x' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.451414108276367
    6. '	x' → logprob: -16.576414108276367
    7. ' (' → logprob: -17.326414108276367
    8. ',' → logprob: -17.951414108276367
    9. '```' → logprob: -18.076414108276367
    10. '_x' → logprob: -18.451414108276367

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04878811165690422
    2. '-' → logprob: -3.048788070678711
    3. ' -' → logprob: -8.923788070678711
    4. '0' → logprob: -10.423788070678711
    5. '```' → logprob: -11.048788070678711
    6. ' ' → logprob: -11.673788070678711
    7. '`' → logprob: -12.173788070678711
    8. '[' → logprob: -12.798788070678711
    9. '_' → logprob: -13.798788070678711
    10. '2' → logprob: -14.173788070678711

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06206044554710388
    2. ' -' → logprob: -2.8120603561401367
    3. '`' → logprob: -9.687060356140137
    4. ' ' → logprob: -11.437060356140137
    5. ''' → logprob: -11.937060356140137
    6. '```' → logprob: -13.312060356140137
    7. ',' → logprob: -13.437060356140137
    8. ' `' → logprob: -13.687060356140137
    9. '\-' → logprob: -13.937060356140137
    10. '"' → logprob: -14.187060356140137

Token 53: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.6673784852027893
    2. 'y' → logprob: -1.1673784255981445
    3. '(' → logprob: -1.9173784255981445
    4. '(b' → logprob: -4.5423784255981445
    5. ' y' → logprob: -4.6673784255981445
    6. ' (' → logprob: -4.9173784255981445
    7. 'b' → logprob: -6.7923784255981445
    8. '(a' → logprob: -8.417378425598145
    9. '(x' → logprob: -11.167378425598145
    10. ' ' → logprob: -11.292378425598145

Token 54: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017150469357147813
    2. '(a' → logprob: -6.501715183258057
    3. ' a' → logprob: -8.501714706420898
    4. '(' → logprob: -12.751714706420898
    5. ' (' → logprob: -12.751714706420898
    6. '	a' → logprob: -13.126714706420898
    7. 'b' → logprob: -13.876714706420898
    8. '   ' → logprob: -14.751714706420898
    9. 'y' → logprob: -16.0017147064209
    10. ' ' → logprob: -16.2517147064209

Token 55: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2019895613193512
    2. '//' → logprob: -1.7019895315170288
    3. ' ' → logprob: -7.951989650726318
    4. ' ' → logprob: -8.70198917388916
    5. ')' → logprob: -10.07698917388916
    6. '```' → logprob: -11.57698917388916
    7. '   ' → logprob: -13.95198917388916
    8. '`' → logprob: -14.20198917388916
    9. 'b' → logprob: -14.32698917388916
    10. '#' → logprob: -14.45198917388916

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. '	b' → logprob: -18.00002098083496
    4. ')b' → logprob: -18.00002098083496
    5. '   ' → logprob: -20.00002098083496
    6. ' ' → logprob: -21.87502098083496
    7. '>b' → logprob: -21.87502098083496
    8. '  ' → logprob: -22.12502098083496
    9. '*b' → logprob: -22.25002098083496
    10. ' б' → logprob: -23.00002098083496

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3338016867637634
    2. ' ' → logprob: -1.4588017463684082
    3. ' *' → logprob: -3.833801746368408
    4. '*' → logprob: -4.583801746368408
    5. ' y' → logprob: -4.833801746368408
    6. '*b' → logprob: -5.708801746368408
    7. '*y' → logprob: -6.583801746368408
    8. ' b' → logprob: -6.708801746368408
    9. '```' → logprob: -6.708801746368408
    10. ' )' → logprob: -6.833801746368408

Token 58: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1263623237609863
    2. ' y' → logprob: -1.1263623237609863
    3. 'y' → logprob: -1.5013623237609863
    4. '0' → logprob: -2.6263623237609863
    5. '1' → logprob: -4.376362323760986
    6. 'b' → logprob: -4.626362323760986
    7. '*' → logprob: -4.751362323760986
    8. '*y' → logprob: -5.001362323760986
    9. ')' → logprob: -5.251362323760986
    10. '```' → logprob: -5.626362323760986

Token 59: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.56102097814437e-05
    2. ' y' → logprob: -10.000045776367188
    3. '	y' → logprob: -16.125045776367188
    4. '   ' → logprob: -19.250045776367188
    5. '*y' → logprob: -19.250045776367188
    6. 'y's' → logprob: -19.375045776367188
    7. ' ' → logprob: -20.000045776367188
    8. ''y' → logprob: -20.375045776367188
    9. '<|end|>' → logprob: -20.750045776367188
    10. 'yb' → logprob: -20.875045776367188

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '2' → logprob: -13.625001907348633
    3. 'i' → logprob: -15.500001907348633
    4. '```' → logprob: -16.125001907348633
    5. 'y' → logprob: -17.125001907348633
    6. '0' → logprob: -17.500001907348633
    7. 's' → logprob: -17.750001907348633
    8. 'o' → logprob: -18.375001907348633
    9. '[' → logprob: -19.000001907348633
    10. 'x' → logprob: -19.500001907348633

Token 61: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011614296585321426
    2. ' ' → logprob: -4.5116143226623535
    3. ' a' → logprob: -8.261613845825195
    4. ' b' → logprob: -8.636613845825195
    5. 'True' → logprob: -10.136613845825195
    6. ' not' → logprob: -10.261613845825195
    7. ' i' → logprob: -10.636613845825195
    8. ' input' → logprob: -11.761613845825195
    9. ' False' → logprob: -12.261613845825195
    10. '  ' → logprob: -12.261613845825195

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017114708898589015
    2. ' :' → logprob: -6.876711368560791
    3. '():' → logprob: -7.376711368560791
    4. '   ' → logprob: -11.62671184539795
    5. ':**' → logprob: -11.75171184539795
    6. '):' → logprob: -11.75171184539795
    7. '<|end|>' → logprob: -12.00171184539795
    8. '(' → logprob: -12.62671184539795
    9. '(:' → logprob: -13.00171184539795
    10. ':
' → logprob: -13.12671184539795

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19286656379699707
    2. ' ' → logprob: -2.192866563796997
    3. '    ' → logprob: -3.067866563796997
    4. ' a' → logprob: -5.567866325378418
    5. ' )' → logprob: -5.567866325378418
    6. ' input' → logprob: -5.942866325378418
    7. '  ' → logprob: -6.317866325378418
    8. ' (' → logprob: -7.192866325378418
    9. ' ,' → logprob: -7.317866325378418
    10. '    
' → logprob: -7.442866325378418

Token 66: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15702243149280548
    2. ' try' → logprob: -2.032022476196289
    3. 'try' → logprob: -5.407022476196289
    4. ' user' → logprob: -5.407022476196289
    5. ' line' → logprob: -6.157022476196289
    6. ' inp' → logprob: -6.907022476196289
    7. ' a' → logprob: -7.657022476196289
    8. ' input' → logprob: -7.782022476196289
    9. ' n' → logprob: -8.032022476196289
    10. 'a' (adapté à ' a') → logprob: -8.282022476196289

Token 67: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45721957087516785
    2. ',' → logprob: -1.2072196006774902
    3. ' ,' → logprob: -3.3322196006774902
    4. '=' → logprob: -3.5822196006774902
    5. ' ' → logprob: -5.58221960067749
    6. '  ' → logprob: -8.207219123840332
    7. ' >' → logprob: -9.582219123840332
    8. '>' → logprob: -10.082219123840332
    9. '.' → logprob: -10.207219123840332
    10. ')' → logprob: -10.332219123840332

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6328125596046448
    2. ' b' → logprob: -0.7578125596046448
    3. ' ' → logprob: -8.6328125
    4. '<|end|>' → logprob: -10.3828125
    5. '>b' → logprob: -14.1328125
    6. ',b' → logprob: -14.2578125
    7. '  ' → logprob: -14.3828125
    8. ' =' → logprob: -15.0078125
    9. '<|end|>' → logprob: -15.1328125
    10. '    ' → logprob: -15.3828125

Token 69: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117457032203674
    2. '=' → logprob: -1.4061745405197144
    3. ',' → logprob: -10.781174659729004
    4. '=input' → logprob: -13.031174659729004
    5. ')' → logprob: -15.156174659729004
    6. ' ' → logprob: -15.531174659729004
    7. '>' → logprob: -15.906174659729004
    8. '   ' → logprob: -16.281173706054688
    9. ' ,' → logprob: -16.656173706054688
    10. 'input' → logprob: -16.656173706054688

Token 70: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08765542507171631
    2. 'm' → logprob: -3.962655544281006
    3. ' c' → logprob: -4.087655544281006
    4. 'n' → logprob: -4.587655544281006
    5. ' =' → logprob: -4.837655544281006
    6. '_' → logprob: -4.837655544281006
    7. 'input' → logprob: -5.087655544281006
    8. '=' → logprob: -5.337655544281006
    9. ' ' → logprob: -5.462655544281006
    10. 'map' → logprob: -7.087655544281006

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038525886833667755
    2. '=' → logprob: -3.2885258197784424
    3. ',' → logprob: -7.6635260581970215
    4. '=input' → logprob: -11.538525581359863
    5. ' ' → logprob: -13.538525581359863
    6. '  ' → logprob: -13.538525581359863
    7. ' ,' → logprob: -14.038525581359863
    8. 'input' → logprob: -15.413525581359863
    9. '=int' → logprob: -15.663525581359863
    10. '.' → logprob: -16.35102653503418

Token 72: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0043565332889556885
    2. 'map' → logprob: -5.504356384277344
    3. ' input' → logprob: -9.004356384277344
    4. ' ' → logprob: -9.504356384277344
    5. ' [' → logprob: -9.879356384277344
    6. '[' → logprob: -11.879356384277344
    7. '(map' → logprob: -12.004356384277344
    8. 'input' → logprob: -12.129356384277344
    9. '	map' → logprob: -12.504356384277344
    10. ' list' → logprob: -13.004356384277344

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.36755993962287903
    2. '(' → logprob: -1.2425599098205566
    3. '(input' → logprob: -4.867559909820557
    4. '(str' → logprob: -4.992559909820557
    5. '<|end|>' → logprob: -5.617559909820557
    6. '(eval' → logprob: -8.742560386657715
    7. '<int' → logprob: -9.242560386657715
    8. '(list' → logprob: -9.242560386657715
    9. '(lambda' → logprob: -9.367560386657715
    10. 'int' → logprob: -9.742560386657715

Token 74: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.062234651297330856
    2. ')' → logprob: -3.56223464012146
    3. 'input' → logprob: -3.56223464012146
    4. '(' → logprob: -6.187234878540039
    5. ' input' → logprob: -7.187234878540039
    6. ',input' → logprob: -7.937234878540039
    7. '=input' → logprob: -8.187234878540039
    8. ')(' → logprob: -10.312234878540039
    9. '()' → logprob: -10.687234878540039
    10. '	input' → logprob: -10.812234878540039

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04305308684706688
    2. ' input' → logprob: -3.168053150177002
    3. ')' → logprob: -10.543052673339844
    4. '(input' → logprob: -11.668052673339844
    5. '   ' → logprob: -11.918052673339844
    6. '=input' → logprob: -12.418052673339844
    7. '	input' → logprob: -12.793052673339844
    8. ',input' → logprob: -13.418052673339844
    9. '<input' → logprob: -14.043052673339844
    10. ' ' → logprob: -14.293052673339844

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04092538356781006
    2. '()' → logprob: -3.5409255027770996
    3. '('' → logprob: -4.9159255027771
    4. '(' → logprob: -6.1659255027771
    5. '())' → logprob: -7.7909255027771
    6. ')' → logprob: -7.9159255027771
    7. '("' → logprob: -8.040925025939941
    8. '(()' → logprob: -8.665925025939941
    9. '());' → logprob: -9.415925025939941
    10. '('').' → logprob: -9.415925025939941

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019769940990954638
    2. 'strip' → logprob: -8.625197410583496
    3. 'rstrip' → logprob: -11.000197410583496
    4. '(split' → logprob: -13.875197410583496
    5. ' split' → logprob: -15.125197410583496
    6. 'spl' → logprob: -15.375197410583496
    7. '().' → logprob: -16.875198364257812
    8. ' ' → logprob: -17.500198364257812
    9. ')' → logprob: -18.000198364257812
    10. '.split' → logprob: -18.000198364257812

Token 78: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04010402038693428
    2. ')' → logprob: -3.5401039123535156
    3. '()' → logprob: -4.790103912353516
    4. '()))' → logprob: -6.790103912353516
    5. '))' → logprob: -7.290103912353516
    6. '('' → logprob: -9.290103912353516
    7. '(' → logprob: -9.540103912353516
    8. ' ())' → logprob: -12.665103912353516
    9. '(','' → logprob: -12.790103912353516
    10. '())
' → logprob: -13.540103912353516

Token 79: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.35030609369277954
    2. ' d' → logprob: -1.3503060340881348
    3. 'a' → logprob: -4.350306034088135
    4. 'd' → logprob: -4.475306034088135
    5. ' ' → logprob: -4.475306034088135
    6. ' (' → logprob: -7.725306034088135
    7. ' not' → logprob: -8.475306510925293
    8. '(a' → logprob: -11.475306510925293
    9. ' b' → logprob: -11.600306510925293
    10. '(' → logprob: -12.350306510925293

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01298573985695839
    2. '==' → logprob: -4.762985706329346
    3. ' ' → logprob: -5.512985706329346
    4. ' <=' → logprob: -8.887986183166504
    5. ' <' → logprob: -9.637986183166504
    6. ' =' → logprob: -9.887986183166504
    7. ' %' → logprob: -10.512986183166504
    8. '<|end|>' → logprob: -10.637986183166504
    9. '=' → logprob: -11.762986183166504
    10. '  ' → logprob: -12.762986183166504

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22653524577617645
    2. ' ' → logprob: -1.6015352010726929
    3. 'b' → logprob: -6.976535320281982
    4. ' b' → logprob: -8.601534843444824
    5. 'd' → logprob: -13.226534843444824
    6. '  ' → logprob: -13.851534843444824
    7. '<|end|>' → logprob: -15.101534843444824
    8. '=' → logprob: -15.601534843444824
    9. '==' → logprob: -15.851534843444824
    10. '```' → logprob: -15.914034843444824

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000855001388117671
    2. ' ' → logprob: -7.250854969024658
    3. 'b' → logprob: -8.875855445861816
    4. ' b' → logprob: -12.750855445861816
    5. 'd' → logprob: -13.500855445861816
    6. '  ' → logprob: -15.625855445861816
    7. 'and' → logprob: -15.750855445861816
    8. '   ' → logprob: -16.0633544921875
    9. '```' → logprob: -16.3758544921875
    10. '-' → logprob: -16.7508544921875

Token 85: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0380566380918026
    2. 'and' → logprob: -3.2880566120147705
    3. ' or' → logprob: -12.038056373596191
    4. ' ' → logprob: -12.163056373596191
    5. ':' → logprob: -13.163056373596191
    6. ' a' → logprob: -14.163056373596191
    7. '<|end|>' → logprob: -14.288056373596191
    8. '	and' → logprob: -15.413056373596191
    9. 'a' → logprob: -16.163057327270508
    10. ' и' → logprob: -16.288057327270508

Token 86: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014162540435791
    2. 'b' → logprob: -1.701416254043579
    3. ' ' → logprob: -13.201416015625
    4. '	b' → logprob: -15.076416015625
    5. 'and' → logprob: -15.451416015625
    6. '   ' → logprob: -15.576416015625
    7. '```' → logprob: -15.576416015625
    8. ' and' → logprob: -15.826416015625
    9. ' ' → logprob: -15.951416015625
    10. '<|end|>' → logprob: -17.326416015625

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00271416874602437
    2. ' ' → logprob: -6.752714157104492
    3. '==' → logprob: -6.877714157104492
    4. '<|end|>' → logprob: -7.752714157104492
    5. ' and' → logprob: -9.752714157104492
    6. '<|end|>' → logprob: -11.127714157104492
    7. ' =' → logprob: -12.252714157104492
    8. '  ' → logprob: -13.877714157104492
    9. ' ' → logprob: -14.127714157104492
    10. '0' → logprob: -14.252714157104492

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519400119781494
    2. ' ' → logprob: -1.5019400119781494
    3. ' and' → logprob: -11.87693977355957
    4. 'and' → logprob: -12.87693977355957
    5. 'd' → logprob: -14.75193977355957
    6. ' ' → logprob: -15.12693977355957
    7. '<|end|>' → logprob: -15.75193977355957
    8. '  ' → logprob: -16.12693977355957
    9. '   ' → logprob: -16.18943977355957
    10. ' d' → logprob: -16.75193977355957

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. 'and' → logprob: -15.937761306762695
    4. '<|end|>' → logprob: -16.125261306762695
    5. ' and' → logprob: -16.187761306762695
    6. '۰' → logprob: -17.062761306762695
    7. '  ' → logprob: -17.812761306762695
    8. '```' → logprob: -17.937761306762695
    9. 'd' → logprob: -18.000261306762695
    10. '   ' → logprob: -18.250261306762695

Token 90: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002326648449525237
    2. ' and' → logprob: -6.377326488494873
    3. '   ' → logprob: -8.002326965332031
    4. ' :' → logprob: -8.377326965332031
    5. 'and' → logprob: -10.752326965332031
    6. ':
' → logprob: -10.877326965332031
    7. ':return' → logprob: -12.502326965332031
    8. '    ' → logprob: -12.627326965332031
    9. ',' → logprob: -12.752326965332031
    10. '):' → logprob: -13.377326965332031

Token 91: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20164215564727783
    2. 'd' → logprob: -1.7016421556472778
    3. '0' → logprob: -8.576642036437988
    4. ' ' → logprob: -10.201642036437988
    5. '	d' → logprob: -13.451642036437988
    6. '<|end|>' → logprob: -13.951642036437988
    7. ' ' → logprob: -15.326642036437988
    8. ' and' → logprob: -15.451642036437988
    9. 'and' → logprob: -16.201642990112305
    10. '  ' → logprob: -16.201642990112305

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014340254478156567
    2. '==' → logprob: -4.264340400695801
    3. '=' → logprob: -10.5143404006958
    4. ' ' → logprob: -10.5143404006958
    5. '<|end|>' → logprob: -10.5143404006958
    6. ' =' → logprob: -10.7643404006958
    7. ' <=' → logprob: -10.8893404006958
    8. ' ' → logprob: -10.8893404006958
    9. ':' → logprob: -11.7643404006958
    10. ')' → logprob: -12.0143404006958

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '۰' → logprob: -18.000625610351562
    4. '<|end|>' → logprob: -18.375625610351562
    5. ' ' → logprob: -18.625625610351562
    6. '  ' → logprob: -19.375625610351562
    7. '   ' → logprob: -19.938125610351562
    8. '০' → logprob: -20.188125610351562
    9. ')' → logprob: -20.250625610351562
    10. '<|end|>' → logprob: -20.688125610351562

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -17.00000762939453
    4. '   ' → logprob: -19.43750762939453
    5. '০' → logprob: -19.62500762939453
    6. '٠' → logprob: -19.75000762939453
    7. '０' → logprob: -19.93750762939453
    8. '  ' → logprob: -20.06250762939453
    9. '०' → logprob: -20.18750762939453
    10. ' ' → logprob: -20.18750762939453

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007051641005091369
    2. ':
' → logprob: -7.625705242156982
    3. '   ' → logprob: -8.625704765319824
    4. '       ' → logprob: -10.250704765319824
    5. ' :' → logprob: -13.250704765319824
    6. '    ' → logprob: -16.25070571899414
    7. '):' → logprob: -16.37570571899414
    8. '.' → logprob: -16.62570571899414
    9. '  ' → logprob: -17.12570571899414
    10. ':return' → logprob: -17.37570571899414

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011117617599666119
    2. '   ' → logprob: -4.511117458343506
    3. ':' → logprob: -9.886117935180664
    4. '	break' → logprob: -12.386117935180664
    5. '     ' → logprob: -12.886117935180664
    6. '      ' → logprob: -12.886117935180664
    7. ' break' → logprob: -12.886117935180664
    8. '    ' → logprob: -13.636117935180664
    9. '           ' → logprob: -13.761117935180664
    10. '  ' → logprob: -14.261117935180664

Token 97: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.505656361579895
    2. '   ' → logprob: -1.005656361579895
    3. 'break' (adapté à ' break') → logprob: -4.0056562423706055
    4. '       ' → logprob: -4.3806562423706055
    5. '	break' → logprob: -8.005656242370605
    6. '```' → logprob: -11.380656242370605
    7. '           ' → logprob: -12.505656242370605
    8. '_break' → logprob: -13.255656242370605
    9. '    
' → logprob: -13.505656242370605
    10. '   ' → logprob: -13.630656242370605

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.670547366142273
    2. '   ' → logprob: -1.045547366142273
    3. '    
' → logprob: -2.5455474853515625
    4. '<|end|>' → logprob: -3.4205474853515625
    5. '  
' → logprob: -4.6705474853515625
    6. '\n' → logprob: -5.2955474853515625
    7. '```' → logprob: -5.4205474853515625
    8. '   
' → logprob: -6.1705474853515625
    9. ' 
' → logprob: -6.2955474853515625
    10. '<|end|>' → logprob: -6.9205474853515625

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05868753418326378
    2. 'if' → logprob: -3.683687448501587
    3. 'result' → logprob: -4.558687686920166
    4. 'g' → logprob: -4.933687686920166
    5. '
' → logprob: -5.183687686920166
    6. 'n' → logprob: -6.183687686920166
    7. '    
' → logprob: -6.558687686920166
    8. 'x' → logprob: -6.558687686920166
    9. '```' → logprob: -6.558687686920166
    10. ' if' → logprob: -7.058687686920166

Token 100: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.09972471743822098
    2. 'x' → logprob: -2.599724769592285
    3. 'if' → logprob: -4.349724769592285
    4. '   ' → logprob: -5.724724769592285
    5. ' g' → logprob: -6.224724769592285
    6. ' if' → logprob: -7.349724769592285
    7. ' x' → logprob: -7.724724769592285
    8. '```' → logprob: -8.099724769592285
    9. 'result' → logprob: -8.349724769592285
    10. 'found' → logprob: -8.849724769592285

Token 101: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14415878057479858
    2. ',' → logprob: -2.0191588401794434
    3. '=' → logprob: -7.019158840179443
    4. ' ,' → logprob: -7.519158840179443
    5. '   ' → logprob: -10.644158363342285
    6. '    ' → logprob: -11.894158363342285
    7. ' ' → logprob: -12.269158363342285
    8. '  ' → logprob: -13.019158363342285
    9. ')' → logprob: -13.519158363342285
    10. 's' → logprob: -14.019158363342285

Token 102: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002631238894537091
    2. ' x' → logprob: -8.250263214111328
    3. '    ' → logprob: -14.375263214111328
    4. '   ' → logprob: -15.125263214111328
    5. '<|end|>' → logprob: -15.125263214111328
    6. 's' → logprob: -15.375263214111328
    7. '	x' → logprob: -15.750263214111328
    8. '"x' → logprob: -16.375263214111328
    9. '_x' → logprob: -17.000263214111328
    10. '```' → logprob: -17.000263214111328

Token 103: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. '<|end|>' → logprob: -11.000024795532227
    3. ' ,' → logprob: -12.500024795532227
    4. ',y' → logprob: -13.750024795532227
    5. '_,' → logprob: -14.250024795532227
    6. '=' → logprob: -14.375024795532227
    7. 'g' → logprob: -14.625024795532227
    8. '1' → logprob: -14.875024795532227
    9. ',g' → logprob: -15.375024795532227
    10. 's' → logprob: -15.625024795532227

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.709308167453855e-05
    2. '<|end|>' → logprob: -9.875086784362793
    3. '=' → logprob: -11.000086784362793
    4. ' ,' → logprob: -11.125086784362793
    5. ',y' → logprob: -13.375086784362793
    6. ' =' → logprob: -14.625086784362793
    7. '‌,' → logprob: -15.250086784362793
    8. '<|end|>' → logprob: -15.250086784362793
    9. ' ' → logprob: -15.375086784362793
    10. '   ' → logprob: -15.875086784362793

Token 105: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002499086782336235
    2. ' y' → logprob: -6.002499103546143
    3. '<|end|>' → logprob: -10.752498626708984
    4. '	y' → logprob: -13.627498626708984
    5. '_y' → logprob: -14.877498626708984
    6. 'x' → logprob: -16.002498626708984
    7. ' ' → logprob: -16.377498626708984
    8. ''y' → logprob: -16.627498626708984
    9. '<|end|>' → logprob: -17.127498626708984
    10. '    ' → logprob: -17.127498626708984

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014704519708175212
    2. '_' → logprob: -9.000146865844727
    3. '<|end|>' → logprob: -11.375146865844727
    4. '1' → logprob: -12.375146865844727
    5. ' ' → logprob: -12.750146865844727
    6. '۰' → logprob: -13.625146865844727
    7. '<|end|>' → logprob: -14.000146865844727
    8. '=' → logprob: -14.000146865844727
    9. ')' → logprob: -14.500146865844727
    10. ' =' → logprob: -15.000146865844727

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ',' → logprob: -15.413042068481445
    4. '<|end|>' → logprob: -15.913042068481445
    5. ')' → logprob: -16.788042068481445
    6. ' =)' → logprob: -17.413042068481445
    7. ' ' → logprob: -18.163042068481445
    8. '＝' → logprob: -18.288042068481445
    9. ' =
' → logprob: -18.788042068481445
    10. ')=' → logprob: -19.163042068481445

Token 108: ' extended' (ID: 17290)
  Prédit: 'extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extended' → logprob: -0.1002068892121315
    2. ' extended' → logprob: -2.3502068519592285
    3. '_extended' → logprob: -15.600207328796387
    4. 'Extended' → logprob: -17.10020637512207
    5. 'ext' → logprob: -17.22520637512207
    6. 'expanded' → logprob: -18.47520637512207
    7. '<|end|>' → logprob: -18.97520637512207
    8. 'extend' → logprob: -19.35020637512207
    9. ' ' → logprob: -19.72520637512207
    10. '   ' → logprob: -20.22520637512207

Token 109: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.125007629394531
    3. 'g' → logprob: -13.750007629394531
    4. '_d' → logprob: -15.750007629394531
    5. '_s' → logprob: -16.00000762939453
    6. '_c' → logprob: -16.00000762939453
    7. '_f' → logprob: -16.37500762939453
    8. ')_' → logprob: -16.62500762939453
    9. ' _' → logprob: -17.12500762939453
    10. '_a' → logprob: -17.50000762939453

Token 110: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.828512363834307e-05
    2. '_cd' → logprob: -9.625088691711426
    3. 'g' → logprob: -11.375088691711426
    4. 'c' → logprob: -12.750088691711426
    5. 'cdf' → logprob: -13.000088691711426
    6. 'CD' → logprob: -13.000088691711426
    7. 'Cd' → logprob: -14.125088691711426
    8. 'cdn' → logprob: -14.625088691711426
    9. ' gcd' → logprob: -14.750088691711426
    10. '(cd' → logprob: -15.125088691711426

Token 111: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003564904211089015
    2. '(' → logprob: -5.878564834594727
    3. '<|end|>' → logprob: -7.253564834594727
    4. '(abs' → logprob: -10.753564834594727
    5. '(b' → logprob: -11.128564834594727
    6. '(ab' → logprob: -12.128564834594727
    7. '(
' → logprob: -12.378564834594727
    8. '(ai' → logprob: -13.003564834594727
    9. '(A' → logprob: -14.128564834594727
    10. '```' → logprob: -14.878564834594727

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.274932143744081e-05
    2. ',b' → logprob: -10.250042915344238
    3. ' ,' → logprob: -12.000042915344238
    4. 'b' → logprob: -14.000042915344238
    5. ')' → logprob: -15.875042915344238
    6. ',
' → logprob: -16.625041961669922
    7. '<|end|>' → logprob: -17.375041961669922
    8. '‌,' → logprob: -17.750041961669922
    9. ' b' → logprob: -18.125041961669922
    10. '   ' → logprob: -18.625041961669922

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078758880496025
    2. ' b' → logprob: -5.5040788650512695
    3. ')b' → logprob: -15.50407886505127
    4. '<|end|>' → logprob: -17.254077911376953
    5. ')' → logprob: -17.629077911376953
    6. '   ' → logprob: -18.004077911376953
    7. 'd' → logprob: -18.379077911376953
    8. '	b' → logprob: -18.629077911376953
    9. ' ' → logprob: -19.254077911376953
    10. '    ' → logprob: -20.129077911376953

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ')
' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.125016212463379
    4. ' )' → logprob: -14.875016212463379
    5. ')

' → logprob: -16.125015258789062
    6. '<|end|>' → logprob: -16.750015258789062
    7. ')
' → logprob: -17.750015258789062
    8. '),' → logprob: -18.375015258789062
    9. '<|end|>' → logprob: -18.375015258789062
    10. ')#' → logprob: -19.000015258789062

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43189752101898193
    2. '<|end|>' → logprob: -1.056897521018982
    3. '<|end|>' → logprob: -6.5568976402282715
    4. '```' → logprob: -6.6818976402282715
    5. ' if' → logprob: -8.681897163391113
    6. '    
' → logprob: -9.181897163391113
    7. '  
' → logprob: -9.806897163391113
    8. '  ' → logprob: -9.806897163391113
    9. '    ' → logprob: -10.181897163391113
    10. ' ' → logprob: -10.806897163391113

Token 116: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15921035408973694
    2. 'if' → logprob: -2.159210443496704
    3. ' if' → logprob: -4.284210205078125
    4. '<|end|>' → logprob: -4.284210205078125
    5. '```' → logprob: -5.784210205078125
    6. '    
' → logprob: -7.534210205078125
    7. '
' → logprob: -8.409210205078125
    8. '``' → logprob: -9.159210205078125
    9. '  
' → logprob: -9.409210205078125
    10. '<|end|>' → logprob: -9.909210205078125

Token 117: ' Scale' (ID: 45648)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011685097590088844
    2. ' if' → logprob: -4.511684894561768
    3. '   ' → logprob: -7.386684894561768
    4. 'd' → logprob: -12.261685371398926
    5. '    
' → logprob: -12.636685371398926
    6. '    ' → logprob: -13.261685371398926
    7. '```' → logprob: -13.511685371398926
    8. 'print' → logprob: -13.636685371398926
    9. 'If' → logprob: -13.886685371398926
    10. 'g' → logprob: -14.261685371398926

Token 118: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23386284708976746
    2. '   ' → logprob: -2.23386287689209
    3. 'factor' → logprob: -2.85886287689209
    4. ' x' → logprob: -3.73386287689209
    5. ' factor' → logprob: -4.85886287689209
    6. '_factor' → logprob: -5.85886287689209
    7. '<|end|>' → logprob: -6.23386287689209
    8. ' if' → logprob: -6.60886287689209
    9. 'f' → logprob: -6.73386287689209
    10. 'if' → logprob: -6.98386287689209

Token 119: ' solution' (ID: 7578)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46254897117614746
    2. ' x' → logprob: -1.5875489711761475
    3. ' solution' → logprob: -3.0875489711761475
    4. ' if' → logprob: -3.2125489711761475
    5. ' coefficients' → logprob: -3.8375489711761475
    6. 'if' → logprob: -3.9625489711761475
    7. ' initial' → logprob: -5.212549209594727
    8. '   ' → logprob: -5.337549209594727
    9. ' solutions' → logprob: -5.462549209594727
    10. ' next' → logprob: -5.462549209594727

Token 120: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1847842037677765
    2. ' d' → logprob: -1.934784173965454
    3. ' match' → logprob: -4.559784412384033
    4. 'match' → logprob: -5.309784412384033
    5. 'solve' → logprob: -6.059784412384033
    6. 'find' → logprob: -6.309784412384033
    7. ' find' → logprob: -6.809784412384033
    8. ' the' → logprob: -7.184784412384033
    9. ' satisfy' → logprob: -7.684784412384033
    10. '   ' → logprob: -8.059783935546875

Token 122: '/g' (ID: 11328)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36268916726112366
    2. '<|end|>' → logprob: -2.362689256668091
    3. '   ' → logprob: -2.612689256668091
    4. '*' → logprob: -2.612689256668091
    5. ' if' → logprob: -3.112689256668091
    6. 'if' → logprob: -4.737689018249512
    7. '<|end|>' → logprob: -5.987689018249512
    8. ',' → logprob: -6.112689018249512
    9. '*x' → logprob: -6.362689018249512
    10. '    ' → logprob: -7.237689018249512

Token 123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011717147193849087
    2. ' if' → logprob: -4.761717319488525
    3. '    ' → logprob: -6.511717319488525
    4. 'if' → logprob: -7.136717319488525
    5. '    
' → logprob: -8.886716842651367
    6. '<|end|>' → logprob: -9.011716842651367
    7. 'x' → logprob: -9.136716842651367
    8. ',' → logprob: -9.261716842651367
    9. ' x' → logprob: -9.761716842651367
    10. '  ' → logprob: -10.011716842651367

Token 125: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.7477162480354309
    2. '   ' → logprob: -1.3727161884307861
    3. ' x' → logprob: -1.9977161884307861
    4. ' if' → logprob: -2.247716188430786
    5. 'if' → logprob: -3.872716188430786
    6. 'factor' → logprob: -5.247716426849365
    7. 'scale' → logprob: -6.122716426849365
    8. ' factor' → logprob: -6.497716426849365
    9. ' scale' → logprob: -7.247716426849365
    10. '    ' → logprob: -7.747716426849365

Token 126: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8642228841781616
    2. '=' → logprob: -1.1142228841781616
    3. '0' → logprob: -1.8642228841781616
    4. ',' → logprob: -2.364223003387451
    5. '   ' → logprob: -8.114222526550293
    6. ' ,' → logprob: -8.739222526550293
    7. '<|end|>' → logprob: -8.739222526550293
    8. 's' → logprob: -8.989222526550293
    9. '_' → logprob: -9.239222526550293
    10. ')' → logprob: -9.239222526550293

Token 127: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.45390772819519043
    2. ' *' → logprob: -1.3289077281951904
    3. ',' → logprob: -3.0789077281951904
    4. '*' → logprob: -3.2039077281951904
    5. '*=' → logprob: -4.5789079666137695
    6. ' =' → logprob: -6.4539079666137695
    7. '=' → logprob: -6.7039079666137695
    8. '   ' → logprob: -8.32890796661377
    9. ' ,' → logprob: -9.70390796661377
    10. '```' → logprob: -10.70390796661377

Token 128: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5764220952987671
    2. ' d' → logprob: -0.8264220952987671
    3. '(d' → logprob: -7.826422214508057
    4. ' (' → logprob: -9.451421737670898
    5. ' ' → logprob: -13.326421737670898
    6. '   ' → logprob: -13.701421737670898
    7. '(' → logprob: -13.951421737670898
    8. '	d' → logprob: -14.076421737670898
    9. '  ' → logprob: -15.326421737670898
    10. ' ' → logprob: -16.0764217376709

Token 129: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6329055428504944
    2. '//' → logprob: -0.7579055428504944
    3. '/' → logprob: -8.882905960083008
    4. 'g' → logprob: -9.882905960083008
    5. '/g' → logprob: -10.382905960083008
    6. ' /' → logprob: -10.507905960083008
    7. '   ' → logprob: -10.632905960083008
    8. '```' → logprob: -11.507905960083008
    9. ' g' → logprob: -11.632905960083008
    10. '//
' → logprob: -12.882905960083008

Token 130: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.1008713702030946e-06
    2. ' g' → logprob: -13.125001907348633
    3. '	g' → logprob: -19.875001907348633
    4. '_g' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -21.125001907348633
    6. '*g' → logprob: -22.000001907348633
    7. '#g' → logprob: -22.625001907348633
    8. ''g' → logprob: -23.000001907348633
    9. '=g' → logprob: -23.125001907348633
    10. '[g' → logprob: -23.500001907348633

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.849225640296936
    2. '   ' → logprob: -0.974225640296936
    3. 'y' → logprob: -1.974225640296936
    4. ' y' → logprob: -3.5992255210876465
    5. '<|end|>' → logprob: -3.7242255210876465
    6. '    
' → logprob: -6.0992255210876465
    7. '	y' → logprob: -7.4742255210876465
    8. ',y' → logprob: -7.8492255210876465
    9. '  
' → logprob: -8.224225997924805
    10. ' 
' → logprob: -8.474225997924805

Token 132: '   ' (ID: 271)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9598361253738403
    2. 'y' → logprob: -1.3348361253738403
    3. '   ' → logprob: -1.5848361253738403
    4. '<|end|>' → logprob: -1.9598361253738403
    5. '
' → logprob: -5.959836006164551
    6. ',y' → logprob: -6.084836006164551
    7. '	y' → logprob: -7.209836006164551
    8. ' ' → logprob: -7.459836006164551
    9. '    
' → logprob: -7.709836006164551
    10. ',' → logprob: -7.959836006164551

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.251935750246048
    2. ' y' → logprob: -1.5019357204437256
    3. '   ' → logprob: -12.626935958862305
    4. '<|end|>' → logprob: -13.251935958862305
    5. '	y' → logprob: -14.376935958862305
    6. ',y' → logprob: -14.751935958862305
    7. '```' → logprob: -14.876935958862305
    8. ',' → logprob: -16.751935958862305
    9. ' ' → logprob: -16.751935958862305
    10. ')y' → logprob: -17.501935958862305

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019258982501924038
    2. ' *=' → logprob: -6.626925945281982
    3. ' *' → logprob: -8.001925468444824
    4. '*' → logprob: -9.001925468444824
    5. ' ' → logprob: -9.251925468444824
    6. '   ' → logprob: -11.251925468444824
    7. ' ' → logprob: -11.876925468444824
    8. '    ' → logprob: -12.251925468444824
    9. '```' → logprob: -12.376925468444824
    10. '۰' → logprob: -13.001925468444824

Token 135: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0067756460048258305
    2. ' *=' → logprob: -5.131775856018066
    3. '*' → logprob: -7.131775856018066
    4. '=' → logprob: -10.006775856018066
    5. ' ' → logprob: -14.256775856018066
    6. '```' → logprob: -14.506775856018066
    7. '**' → logprob: -15.381775856018066
    8. ' *' → logprob: -15.506775856018066
    9. '   ' → logprob: -16.25677490234375
    10. ')' → logprob: -16.25677490234375

Token 136: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740793704986572
    2. 'd' → logprob: -0.9740793704986572
    3. ' ' → logprob: -14.099079132080078
    4. '	d' → logprob: -14.724079132080078
    5. '(d' → logprob: -14.974079132080078
    6. '   ' → logprob: -15.224079132080078
    7. ' (' → logprob: -15.474079132080078
    8. '  ' → logprob: -15.599079132080078
    9. ' ' → logprob: -16.599079132080078
    10. '(' → logprob: -16.974079132080078

Token 137: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02631516382098198
    2. ' //' → logprob: -3.651315212249756
    3. '#' → logprob: -12.026314735412598
    4. '/' → logprob: -12.776314735412598
    5. '```' → logprob: -13.401314735412598
    6. ' ' → logprob: -13.651314735412598
    7. '//=' → logprob: -13.901314735412598
    8. '<|end|>' → logprob: -14.651314735412598
    9. '\/\/' → logprob: -15.151314735412598
    10. ' ' → logprob: -15.276314735412598

Token 138: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0005530327325686812
    2. ' g' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -18.250553131103516
    4. ' ' → logprob: -18.500553131103516
    5. '	g' → logprob: -18.625553131103516
    6. '   ' → logprob: -18.750553131103516
    7. 'b' → logprob: -19.250553131103516
    8. '_g' → logprob: -20.375553131103516
    9. '#g' → logprob: -20.375553131103516
    10. '```' → logprob: -20.625553131103516

Token 139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42242076992988586
    2. '   ' → logprob: -1.7974207401275635
    3. '<|end|>' → logprob: -1.7974207401275635
    4. ' if' → logprob: -5.422420978546143
    5. '    
' → logprob: -5.422420978546143
    6. 'if' → logprob: -6.297420978546143
    7. '  
' → logprob: -7.297420978546143
    8. '```' → logprob: -7.422420978546143
    9. 'print' → logprob: -8.547420501708984
    10. '<|end|>' → logprob: -8.672420501708984

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09599246084690094
    2. 'print' → logprob: -3.2209925651550293
    3. 'if' → logprob: -3.4709925651550293
    4. '
' → logprob: -4.345992565155029
    5. ' if' → logprob: -5.470992565155029
    6. '    
' → logprob: -6.220992565155029
    7. '<|end|>' → logprob: -7.345992565155029
    8. '#' → logprob: -8.720992088317871
    9. '```' → logprob: -8.720992088317871
    10. ' print' → logprob: -8.970992088317871

Token 141: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08984173834323883
    2. 'print' → logprob: -2.714841842651367
    3. 'import' → logprob: -4.964841842651367
    4. '   ' → logprob: -5.589841842651367
    5. 'k' → logprob: -6.089841842651367
    6. 't' → logprob: -6.214841842651367
    7. 'solutions' → logprob: -7.089841842651367
    8. 'x' → logprob: -7.339841842651367
    9. 'steps' → logprob: -7.339841842651367
    10. 'n' → logprob: -7.589841842651367

Token 142: ' Co' (ID: 4642)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03623766079545021
    2. 'import' → logprob: -4.536237716674805
    3. '#' → logprob: -4.786237716674805
    4. 'k' → logprob: -5.786237716674805
    5. 'min' → logprob: -5.786237716674805
    6. 'print' → logprob: -6.036237716674805
    7. ' if' → logprob: -6.286237716674805
    8. 't' → logprob: -6.536237716674805
    9. 'n' → logprob: -6.786237716674805
    10. 'x' → logprob: -7.036237716674805

Token 143: 'eff' (ID: 13933)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -1.0288398265838623
    2. 'nst' → logprob: -1.2788398265838623
    3. 'unts' → logprob: -2.2788398265838623
    4. 'st' → logprob: -2.5288398265838623
    5. 'eff' → logprob: -2.5288398265838623
    6. 'n' → logprob: -3.2788398265838623
    7. 'ut' → logprob: -4.028840065002441
    8. 'ns' → logprob: -4.028840065002441
    9. 'unting' → logprob: -5.028840065002441
    10. 'ef' → logprob: -5.153840065002441

Token 144: 'icients' (ID: 63003)
  Prédit: 'icients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icients' → logprob: -0.19946932792663574
    2. '   ' → logprob: -2.1994693279266357
    3. 'fficients' → logprob: -3.3244693279266357
    4. 'fic' → logprob: -3.6994693279266357
    5. 'icient' → logprob: -4.949469566345215
    6. 'f' → logprob: -7.324469566345215
    7. 'c' → logprob: -7.824469566345215
    8. 'cient' → logprob: -8.449469566345215
    9. 's' → logprob: -8.574469566345215
    10. '       ' → logprob: -8.824469566345215

Token 145: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3467543423175812
    2. '=' → logprob: -1.4717543125152588
    3. '   ' → logprob: -4.096754550933838
    4. ',' → logprob: -4.221754550933838
    5. 'x' → logprob: -4.721754550933838
    6. ' for' → logprob: -4.846754550933838
    7. ':' → logprob: -5.096754550933838
    8. 'for' → logprob: -5.846754550933838
    9. ' x' → logprob: -6.221754550933838
    10. 's' → logprob: -7.596754550933838

Token 146: ' shifting' (ID: 53586)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8015574216842651
    2. ' the' → logprob: -1.6765574216842651
    3. 't' → logprob: -1.8015574216842651
    4. 'x' → logprob: -2.6765575408935547
    5. ' x' → logprob: -2.8015575408935547
    6. 'the' → logprob: -3.8015575408935547
    7. ' general' → logprob: -4.676557540893555
    8. ' parameter' → logprob: -5.051557540893555
    9. ' param' → logprob: -5.051557540893555
    10. ' a' → logprob: -5.301557540893555

Token 147: ' solutions' (ID: 9368)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.21025069057941437
    2. 't' → logprob: -1.960250735282898
    3. ' k' → logprob: -3.5852506160736084
    4. 'k' → logprob: -5.3352508544921875
    5. 'x' → logprob: -5.5852508544921875
    6. '   ' → logprob: -5.8352508544921875
    7. ' x' → logprob: -6.0852508544921875
    8. ' s' → logprob: -6.2102508544921875
    9. ' ' → logprob: -6.9602508544921875
    10. '=' → logprob: -6.9602508544921875

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27426257729530334
    2. ',' → logprob: -3.0242626667022705
    3. 'n' → logprob: -3.1492626667022705
    4. ':' → logprob: -3.7742626667022705
    5. ' =' → logprob: -3.7742626667022705
    6. '=' → logprob: -3.8992626667022705
    7. ' k' → logprob: -4.024262428283691
    8. 'k' → logprob: -4.274262428283691
    9. 't' → logprob: -4.899262428283691
    10. ' n' → logprob: -5.024262428283691

Token 149: '   ' (ID: 271)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.30976438522338867
    2. 't' → logprob: -1.9347643852233887
    3. ' k' → logprob: -2.6847643852233887
    4. 'k' → logprob: -3.8097643852233887
    5. '   ' → logprob: -3.8097643852233887
    6. ' n' → logprob: -5.434764385223389
    7. 'n' → logprob: -6.059764385223389
    8. ',' → logprob: -6.684764385223389
    9. '    ' → logprob: -7.934764385223389
    10. ' ' → logprob: -8.309764862060547

Token 150: ' k' (ID: 372)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39055830240249634
    2. ' b' → logprob: -1.6405582427978516
    3. 'k' (adapté à ' k') → logprob: -2.5155582427978516
    4. ' k' → logprob: -3.3905582427978516
    5. 't' → logprob: -4.890558242797852
    6. ' t' → logprob: -5.390558242797852
    7. '   ' → logprob: -6.765558242797852
    8. ' ' → logprob: -8.390558242797852
    9. 'a' → logprob: -8.515558242797852
    10. 'bx' → logprob: -8.765558242797852

Token 151: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06442563235759735
    2. '=' → logprob: -3.1894257068634033
    3. '_min' → logprob: -4.314425468444824
    4. '1' → logprob: -5.814425468444824
    5. '_max' → logprob: -6.314425468444824
    6. '_space' → logprob: -7.314425468444824
    7. 'min' → logprob: -7.439425468444824
    8. ',' → logprob: -7.939425468444824
    9. '_range' → logprob: -8.189425468444824
    10. 'max' → logprob: -8.439425468444824

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014427212066948414
    2. '=' → logprob: -4.639427185058594
    3. ',' → logprob: -5.389427185058594
    4. ' ,' → logprob: -10.264427185058594
    5. '_space' → logprob: -11.389427185058594
    6. ' ' → logprob: -11.514427185058594
    7. '0' → logprob: -12.139427185058594
    8. '    ' → logprob: -12.389427185058594
    9. 'space' → logprob: -12.514427185058594
    10. '1' → logprob: -12.889427185058594

Token 153: ' b' (ID: 287)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.6420444846153259
    2. '(-' → logprob: -1.6420445442199707
    3. '(y' → logprob: -2.3920445442199707
    4. '-' → logprob: -2.7670445442199707
    5. '(' → logprob: -3.1420445442199707
    6. '-y' → logprob: -3.3920445442199707
    7. ' (' → logprob: -4.017044544219971
    8. '(-(' → logprob: -5.017044544219971
    9. 'y' → logprob: -5.142044544219971
    10. '(b' → logprob: -5.392044544219971

Token 154: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.05506687983870506
    2. ' //' → logprob: -2.9300668239593506
    3. '#' → logprob: -9.18006706237793
    4. '<|end|>' → logprob: -10.05506706237793
    5. 'g' → logprob: -11.43006706237793
    6. '   ' → logprob: -12.43006706237793
    7. ')' → logprob: -12.80506706237793
    8. 'div' → logprob: -12.80506706237793
    9. '<|end|>' → logprob: -13.05506706237793
    10. '//=' → logprob: -13.18006706237793

Token 155: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.45848218582978e-06
    2. ' g' → logprob: -13.00000286102295
    3. '_g' → logprob: -15.87500286102295
    4. '/g' → logprob: -17.250001907348633
    5. '<|end|>' → logprob: -17.250001907348633
    6. '#g' → logprob: -18.500001907348633
    7. '(g' → logprob: -19.500001907348633
    8. ')' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.750001907348633
    10. ''g' → logprob: -19.875001907348633

Token 156: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04906555637717247
    2. 'k' → logprob: -3.549065589904785
    3. ' k' → logprob: -5.049065589904785
    4. ',' → logprob: -5.299065589904785
    5. '<|end|>' → logprob: -5.549065589904785
    6. ',k' → logprob: -6.549065589904785
    7. '*k' → logprob: -7.549065589904785
    8. '  ' → logprob: -7.674065589904785
    9. ' ' → logprob: -8.049065589904785
    10. '
' → logprob: -8.424065589904785

Token 158: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.29406940937042236
    2. 'a' → logprob: -1.4190694093704224
    3. ' k' → logprob: -4.919069290161133
    4. '-a' → logprob: -6.544069290161133
    5. '   ' → logprob: -6.544069290161133
    6. ' a' → logprob: -6.919069290161133
    7. '-' → logprob: -7.544069290161133
    8. '-k' → logprob: -7.544069290161133
    9. ' -' → logprob: -8.169069290161133
    10. 'g' → logprob: -9.919069290161133

Token 159: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20988614857196808
    2. '=' → logprob: -2.084886074066162
    3. ' =' → logprob: -3.084886074066162
    4. '2' → logprob: -4.959886074066162
    5. '<|end|>' → logprob: -5.334886074066162
    6. ' ' → logprob: -5.584886074066162
    7. '//' → logprob: -6.459886074066162
    8. ')' → logprob: -7.084886074066162
    9. '  ' → logprob: -7.709886074066162
    10. '   ' → logprob: -8.45988655090332

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740782678127289
    2. '=' → logprob: -0.9740782976150513
    3. ' ' → logprob: -15.474078178405762
    4. ',' → logprob: -15.474078178405762
    5. 's' → logprob: -15.599078178405762
    6. ')' → logprob: -15.724078178405762
    7. '=k' → logprob: -15.724078178405762
    8. 'k' → logprob: -16.224079132080078
    9. '   ' → logprob: -16.474079132080078
    10. 'a' → logprob: -16.599079132080078

Token 161: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4706552028656006
    2. ' a' → logprob: -1.9706552028656006
    3. '-a' → logprob: -2.0956552028656006
    4. ' -' → logprob: -2.4706552028656006
    5. '-' → logprob: -3.9706552028656006
    6. '-(' → logprob: -4.97065544128418
    7. ' -(' → logprob: -5.97065544128418
    8. '   ' → logprob: -9.72065544128418
    9. '(-' → logprob: -10.59565544128418
    10. '	a' → logprob: -11.34565544128418

Token 162: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0019306590547785163
    2. ' //' → logprob: -6.2519307136535645
    3. '#' → logprob: -13.876930236816406
    4. '//=' → logprob: -14.001930236816406
    5. '/' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.126930236816406
    7. '<|end|>' → logprob: -17.126930236816406
    8. '```' → logprob: -17.251930236816406
    9. '   ' → logprob: -17.876930236816406
    10. '\/\/' → logprob: -18.251930236816406

Token 163: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00012689977302215993
    2. ' g' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.000126838684082
    4. '-g' → logprob: -15.500126838684082
    5. '	g' → logprob: -15.625126838684082
    6. '_g' → logprob: -15.625126838684082
    7. ')' → logprob: -15.875126838684082
    8. '<|end|>' → logprob: -16.0001277923584
    9. ' ' → logprob: -16.6251277923584
    10. '/g' → logprob: -16.7501277923584

Token 164: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022355586290359497
    2. '<|end|>' → logprob: -4.147355556488037
    3. 'if' → logprob: -6.147355556488037
    4. '    
' → logprob: -6.397355556488037
    5. '
' → logprob: -6.772355556488037
    6. ' if' → logprob: -8.022356033325195
    7. 'n' → logprob: -8.522356033325195
    8. ',' → logprob: -8.772356033325195
    9. '  ' → logprob: -9.022356033325195
    10. '<|end|>' → logprob: -9.272356033325195

Token 166: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2628767788410187
    2. 't' → logprob: -2.3878767490386963
    3. 'import' → logprob: -2.8878767490386963
    4. '   ' → logprob: -3.5128767490386963
    5. 'min' → logprob: -3.8878767490386963
    6. 'n' → logprob: -4.637876987457275
    7. 'k' → logprob: -4.762876987457275
    8. '#' (adapté à ' #') → logprob: -5.262876987457275
    9. 'def' → logprob: -5.512876987457275
    10. '    
' → logprob: -6.512876987457275

Token 167: ' Find' (ID: 9764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2451525330543518
    2. '#' → logprob: -2.620152473449707
    3. 't' → logprob: -2.995152473449707
    4. 'min' → logprob: -3.370152473449707
    5. 'import' → logprob: -3.370152473449707
    6. 'from' → logprob: -4.995152473449707
    7. 'low' → logprob: -4.995152473449707
    8. 'x' → logprob: -6.245152473449707
    9. ' if' → logprob: -6.370152473449707
    10. '   ' → logprob: -6.620152473449707

Token 168: ' t' (ID: 260)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.5970401763916016
    2. ' minimum' → logprob: -1.7220401763916016
    3. ' min' → logprob: -1.9720401763916016
    4. ' t' → logprob: -2.2220401763916016
    5. ' k' → logprob: -2.2220401763916016
    6. 'min' → logprob: -2.9720401763916016
    7. 'k' → logprob: -3.3470401763916016
    8. 'minimum' → logprob: -3.5970401763916016
    9. ' x' → logprob: -3.7220401763916016
    10. ' the' → logprob: -3.7220401763916016

Token 169: ' to' (ID: 316)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.12380032986402512
    2. 'min' → logprob: -2.498800277709961
    3. ' =' → logprob: -3.873800277709961
    4. '1' → logprob: -5.373800277709961
    5. '_' → logprob: -5.873800277709961
    6. '_lower' → logprob: -6.248800277709961
    7. '_low' → logprob: -6.373800277709961
    8. 's' → logprob: -7.248800277709961
    9. '=' → logprob: -7.498800277709961
    10. '_start' → logprob: -8.498800277709961

Token 170: ' minimize' (ID: 41776)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5647743344306946
    2. ' minimize' → logprob: -2.18977427482605
    3. ' (' → logprob: -2.43977427482605
    4. 'max' → logprob: -2.93977427482605
    5. ' min' → logprob: -3.06477427482605
    6. ' max' → logprob: -3.43977427482605
    7. ' make' → logprob: -3.93977427482605
    8. ' ' → logprob: -4.064774513244629
    9. '(' → logprob: -4.814774513244629
    10. 'maximize' → logprob: -4.814774513244629

Token 171: ' total' (ID: 3609)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5243203043937683
    2. 'abs' → logprob: -0.8993203043937683
    3. ' y' → logprob: -8.024320602416992
    4. ' x' → logprob: -8.149320602416992
    5. 'y' → logprob: -8.274320602416992
    6. 'x' → logprob: -8.524320602416992
    7. '(abs' → logprob: -9.649320602416992
    8. ' ' → logprob: -10.274320602416992
    9. '   ' → logprob: -11.649320602416992
    10. '_abs' → logprob: -12.149320602416992

Token 172: ' weights' (ID: 28460)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.15020723640918732
    2. ' abs' → logprob: -2.025207281112671
    3. ' =' → logprob: -5.650207042694092
    4. '=' → logprob: -6.275207042694092
    5. '_abs' → logprob: -7.150207042694092
    6. 'x' → logprob: -7.650207042694092
    7. ' x' → logprob: -8.02520751953125
    8. '   ' → logprob: -8.15020751953125
    9. '(abs' → logprob: -9.52520751953125
    10. '_' → logprob: -10.15020751953125

Token 173: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0886963605880737
    2. '<|end|>' → logprob: -1.0886963605880737
    3. '
' → logprob: -2.4636964797973633
    4. ':' → logprob: -2.4636964797973633
    5. '=' → logprob: -3.2136964797973633
    6. 't' → logprob: -3.5886964797973633
    7. ' ' → logprob: -4.088696479797363
    8. ' =' → logprob: -4.213696479797363
    9. ' t' → logprob: -4.713696479797363
    10. 'import' → logprob: -4.713696479797363

Token 174: ' +' (ID: 659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11426263302564621
    2. ',' → logprob: -2.864262580871582
    3. ' =' → logprob: -3.114262580871582
    4. '=' → logprob: -6.114262580871582
    5. ' and' → logprob: -6.739262580871582
    6. ',y' → logprob: -6.989262580871582
    7. 't' → logprob: -8.114262580871582
    8. 'y' → logprob: -8.614262580871582
    9. '_total' → logprob: -8.614262580871582
    10. ' ' → logprob: -8.614262580871582

Token 175: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014236020855605602
    2. ' y' → logprob: -4.264235973358154
    3. ' ' → logprob: -9.889236450195312
    4. '   ' → logprob: -11.389236450195312
    5. 'k' → logprob: -12.389236450195312
    6. '  ' → logprob: -12.889236450195312
    7. '1' → logprob: -13.764236450195312
    8. '    ' → logprob: -14.014236450195312
    9. '	y' → logprob: -14.639236450195312
    10. 't' → logprob: -15.139236450195312

Token 176: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021678518503904343
    2. '<|end|>' → logprob: -4.396678447723389
    3. '   ' → logprob: -5.271678447723389
    4. '<|end|>' → logprob: -7.021678447723389
    5. ',' → logprob: -7.771678447723389
    6. ':' → logprob: -7.896678447723389
    7. '\n' → logprob: -8.021678924560547
    8. 't' → logprob: -8.271678924560547
    9. '=' → logprob: -8.271678924560547
    10. ',
' → logprob: -8.771678924560547

Token 177: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5978063344955444
    2. '   ' → logprob: -1.0978063344955444
    3. '
' → logprob: -2.597806453704834
    4. ' t' → logprob: -4.222806453704834
    5. '<|end|>' → logprob: -4.722806453704834
    6. 'if' → logprob: -5.347806453704834
    7. '*' → logprob: -6.222806453704834
    8. ' if' → logprob: -6.847806453704834
    9. 'from' → logprob: -6.847806453704834
    10. ',' → logprob: -6.847806453704834

Token 178: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13963888585567474
    2. ' t' → logprob: -2.264638900756836
    3. '   ' → logprob: -3.889638900756836
    4. 'from' → logprob: -6.264638900756836
    5. 'import' → logprob: -6.389638900756836
    6. 'if' → logprob: -6.764638900756836
    7. ' if' → logprob: -7.014638900756836
    8. ' from' → logprob: -8.764638900756836
    9. '    ' → logprob: -9.889638900756836
    10. '
' → logprob: -10.639638900756836

Token 179: ' x' (ID: 1215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05459550768136978
    2. 'if' → logprob: -3.304595470428467
    3. 'from' → logprob: -4.304595470428467
    4. 'import' → logprob: -6.679595470428467
    5. ' t' → logprob: -7.429595470428467
    6. ' if' → logprob: -7.804595470428467
    7. '#' → logprob: -8.304595947265625
    8. ' from' → logprob: -8.429595947265625
    9. '   ' → logprob: -9.804595947265625
    10. '```' → logprob: -10.179595947265625

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10866943746805191
    2. '=' → logprob: -2.8586695194244385
    3. ',' → logprob: -3.6086695194244385
    4. '0' → logprob: -4.733669281005859
    5. ' +' → logprob: -5.733669281005859
    6. '_min' → logprob: -5.983669281005859
    7. '+' → logprob: -6.483669281005859
    8. '_plus' → logprob: -7.233669281005859
    9. 'min' → logprob: -7.983669281005859
    10. ')' → logprob: -8.60866928100586

Token 181: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1276182383298874
    2. ' x' → logprob: -2.1276183128356934
    3. '   ' → logprob: -7.502618312835693
    4. ' ' → logprob: -10.252617835998535
    5. '    ' → logprob: -10.502617835998535
    6. '0' → logprob: -10.502617835998535
    7. '	x' → logprob: -11.002617835998535
    8. '-x' → logprob: -12.002617835998535
    9. '  ' → logprob: -12.502617835998535
    10. ' -' → logprob: -12.627617835998535

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.073596548754722e-05
    2. ' ' → logprob: -10.87505054473877
    3. '```' → logprob: -11.75005054473877
    4. ' -' → logprob: -12.12505054473877
    5. '-' → logprob: -12.81255054473877
    6. '`' → logprob: -12.81255054473877
    7. ',' → logprob: -12.93755054473877
    8. '   ' → logprob: -13.18755054473877
    9. '_' → logprob: -13.81255054473877
    10. '<|end|>' → logprob: -14.31255054473877

Token 183: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7209396958351135
    2. ' -' → logprob: -0.8459396958351135
    3. '+' → logprob: -2.7209396362304688
    4. '-' → logprob: -4.220939636230469
    5. '   ' → logprob: -6.095939636230469
    6. ' ' → logprob: -6.845939636230469
    7. '    ' → logprob: -7.970939636230469
    8. ',' → logprob: -8.720939636230469
    9. '  ' → logprob: -9.595939636230469
    10. '+t' → logprob: -10.345939636230469

Token 184: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05566330999135971
    2. ' k' → logprob: -3.1806633472442627
    3. 't' → logprob: -4.805663108825684
    4. ' t' → logprob: -5.430663108825684
    5. ' ' → logprob: -11.430663108825684
    6. '   ' → logprob: -12.180663108825684
    7. '  ' → logprob: -13.180663108825684
    8. 'tk' → logprob: -14.180663108825684
    9. '(k' → logprob: -14.180663108825684
    10. '    ' → logprob: -15.055663108825684

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.221884101862088e-05
    2. '*t' → logprob: -10.000092506408691
    3. ' ' → logprob: -11.125092506408691
    4. '*' → logprob: -11.125092506408691
    5. 't' → logprob: -11.875092506408691
    6. ' *' → logprob: -12.375092506408691
    7. '_' → logprob: -13.500092506408691
    8. '*k' → logprob: -13.625092506408691
    9. '   ' → logprob: -14.250092506408691
    10. '  ' → logprob: -14.250092506408691

Token 186: ' *' (ID: 425)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.24650423228740692
    2. ' *' → logprob: -1.6215041875839233
    3. '*' → logprob: -3.871504306793213
    4. 't' → logprob: -10.871503829956055
    5. '*k' → logprob: -11.746503829956055
    6. '   ' → logprob: -12.496503829956055
    7. ' t' → logprob: -12.746503829956055
    8. '**' → logprob: -12.871503829956055
    9. ' ' → logprob: -13.871503829956055
    10. '*n' → logprob: -13.871503829956055

Token 187: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10025348514318466
    2. ' t' → logprob: -2.3502535820007324
    3. 'k' → logprob: -10.850253105163574
    4. '`t' → logprob: -11.350253105163574
    5. ' ' → logprob: -12.725253105163574
    6. ' k' → logprob: -13.350253105163574
    7. ')t' → logprob: -13.350253105163574
    8. '-t' → logprob: -13.725253105163574
    9. '_t' → logprob: -13.850253105163574
    10. '<|end|>' → logprob: -13.850253105163574

Token 188: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1786392778158188
    2. '<|end|>' → logprob: -2.1786391735076904
    3. '   ' → logprob: -3.5536391735076904
    4. 't' → logprob: -4.5536394119262695
    5. '<|end|>' → logprob: -5.0536394119262695
    6. '\n' → logprob: -6.4286394119262695
    7. ',' → logprob: -7.1786394119262695
    8. '    
' → logprob: -7.6786394119262695
    9. '  
' → logprob: -7.8036394119262695
    10. '#' → logprob: -8.42863941192627

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2637947201728821
    2. 'y' → logprob: -2.6387946605682373
    3. '
' → logprob: -3.2637946605682373
    4. '<|end|>' → logprob: -3.2637946605682373
    5. ',' → logprob: -3.5137946605682373
    6. 't' → logprob: -4.013794898986816
    7. '    ' → logprob: -4.513794898986816
    8. '    
' → logprob: -5.388794898986816
    9. ' y' → logprob: -5.388794898986816
    10. ' t' → logprob: -5.763794898986816

Token 190: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45532912015914917
    2. 'y' → logprob: -1.455329179763794
    3. '
' → logprob: -2.580329179763794
    4. ' y' → logprob: -3.330329179763794
    5. '<|end|>' → logprob: -4.455328941345215
    6. 't' → logprob: -5.955328941345215
    7. '    ' → logprob: -6.455328941345215
    8. '#' (adapté à ' #') → logprob: -6.580328941345215
    9. ',' → logprob: -6.955328941345215
    10. ' ' → logprob: -7.455328941345215

Token 191: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3534134328365326
    2. ' y' → logprob: -1.228413462638855
    3. '   ' → logprob: -5.3534135818481445
    4. '    ' → logprob: -8.978413581848145
    5. ' ' → logprob: -10.478413581848145
    6. '  ' → logprob: -10.728413581848145
    7. '	y' → logprob: -10.853413581848145
    8. ''y' → logprob: -12.603413581848145
    9. '       ' → logprob: -12.728413581848145
    10. 'x' → logprob: -12.853413581848145

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023284267634153366
    2. '=' → logprob: -3.7732841968536377
    3. ' ' → logprob: -11.523283958435059
    4. '0' → logprob: -12.148283958435059
    5. ' *' → logprob: -12.148283958435059
    6. '<|end|>' → logprob: -12.273283958435059
    7. '   ' → logprob: -12.398283958435059
    8. '*' → logprob: -12.523283958435059
    9. ' +=' → logprob: -14.148283958435059
    10. ',' → logprob: -14.148283958435059

Token 193: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004626649431884289
    2. ' y' → logprob: -5.379626750946045
    3. '   ' → logprob: -12.379626274108887
    4. ' ' → logprob: -13.754626274108887
    5. '	y' → logprob: -14.629626274108887
    6. '  ' → logprob: -15.504626274108887
    7. '    ' → logprob: -15.879626274108887
    8. '-' → logprob: -16.129627227783203
    9. '-y' → logprob: -16.129627227783203
    10. '(y' → logprob: -16.504627227783203

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.625031471252441
    3. '   ' → logprob: -12.125031471252441
    4. '  ' → logprob: -15.000031471252441
    5. '```' → logprob: -15.375031471252441
    6. '    ' → logprob: -16.000030517578125
    7. '۰' → logprob: -16.000030517578125
    8. '=' → logprob: -16.000030517578125
    9. '_' → logprob: -16.250030517578125
    10. '<|end|>' → logprob: -16.375030517578125

Token 195: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06806879490613937
    2. '+' → logprob: -2.818068742752075
    3. ' -' → logprob: -5.193068981170654
    4. '-' → logprob: -7.818068981170654
    5. '<|end|>' → logprob: -9.818068504333496
    6. '   ' → logprob: -10.443068504333496
    7. ' ' → logprob: -12.068068504333496
    8. '=' → logprob: -12.193068504333496
    9. '<|end|>' → logprob: -12.193068504333496
    10. '    ' → logprob: -12.318068504333496

Token 196: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018150413408875465
    2. ' k' → logprob: -4.018150329589844
    3. '	k' → logprob: -15.393150329589844
    4. '   ' → logprob: -16.643150329589844
    5. ' ' → logprob: -16.768150329589844
    6. '_k' → logprob: -18.393150329589844
    7. '{k' → logprob: -18.393150329589844
    8. '1' → logprob: -18.768150329589844
    9. '<|end|>' → logprob: -18.893150329589844
    10. ',k' → logprob: -19.143150329589844

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021974841365590692
    2. ' ' → logprob: -8.625219345092773
    3. '1' → logprob: -10.625219345092773
    4. '   ' → logprob: -11.250219345092773
    5. '    ' → logprob: -13.875219345092773
    6. '  ' → logprob: -14.250219345092773
    7. '```' → logprob: -14.875219345092773
    8. '*' → logprob: -16.000219345092773
    9. '₂' → logprob: -16.062719345092773
    10. '	' → logprob: -16.187719345092773

Token 198: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04302065819501877
    2. '*' → logprob: -3.168020725250244
    3. '*t' → logprob: -12.168020248413086
    4. '   ' → logprob: -12.418020248413086
    5. ' ' → logprob: -12.543020248413086
    6. '```' → logprob: -13.293020248413086
    7. '**' → logprob: -13.293020248413086
    8. ' ' → logprob: -13.543020248413086
    9. '*object' → logprob: -14.418020248413086
    10. 'def' → logprob: -14.543020248413086

Token 199: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3132677972316742
    2. ' t' → logprob: -1.3132678270339966
    3. '*t' → logprob: -13.438267707824707
    4. '	t' → logprob: -13.688267707824707
    5. 'k' → logprob: -13.813267707824707
    6. '   ' → logprob: -13.938267707824707
    7. ' ' → logprob: -14.063267707824707
    8. '`t' → logprob: -15.063267707824707
    9. ')t' → logprob: -15.813267707824707
    10. '_t' → logprob: -16.438268661499023

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7091588973999023
    2. 't' → logprob: -1.8341588973999023
    3. '
' → logprob: -1.8341588973999023
    4. '<|end|>' → logprob: -2.5841588973999023
    5. 'import' → logprob: -3.0841588973999023
    6. 'from' → logprob: -3.4591588973999023
    7. ' t' → logprob: -3.7091588973999023
    8. '```' → logprob: -5.334158897399902
    9. '<|end|>' → logprob: -6.459158897399902
    10. '    
' → logprob: -6.584158897399902

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2638533115386963
    2. '
' → logprob: -2.2638533115386963
    3. 't' → logprob: -2.7638533115386963
    4. ' t' → logprob: -3.3888533115386963
    5. 'import' → logprob: -4.388853073120117
    6. 'from' → logprob: -4.638853073120117
    7. '    
' → logprob: -6.013853073120117
    8. '<|end|>' → logprob: -6.763853073120117
    9. ' 
' → logprob: -6.888853073120117
    10. '    ' → logprob: -7.138853073120117

Token 202: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5854499936103821
    2. 'from' → logprob: -1.4604499340057373
    3. '   ' → logprob: -2.0854499340057373
    4. 'import' → logprob: -2.8354499340057373
    5. 'if' → logprob: -4.585450172424316
    6. ' t' → logprob: -4.710450172424316
    7. ' from' → logprob: -6.085450172424316
    8. 'def' → logprob: -6.085450172424316
    9. '```' → logprob: -6.085450172424316
    10. '    
' → logprob: -7.710450172424316

Token 203: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5168541669845581
    2. 'from' → logprob: -1.141854166984558
    3. 'import' → logprob: -2.8918542861938477
    4. ' from' → logprob: -4.266854286193848
    5. ' t' → logprob: -5.141854286193848
    6. 'if' → logprob: -5.766854286193848
    7. 'def' → logprob: -6.641854286193848
    8. 'den' → logprob: -7.141854286193848
    9. '#' → logprob: -7.391854286193848
    10. ' if' → logprob: -7.891854286193848

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020485596731305122
    2. '=' → logprob: -4.2704854011535645
    3. '_' → logprob: -5.6454854011535645
    4. 's' → logprob: -6.3954854011535645
    5. 'x' → logprob: -7.8954854011535645
    6. '_=' → logprob: -8.895485877990723
    7. '_x' → logprob: -9.020485877990723
    8. '_val' → logprob: -9.020485877990723
    9. '   ' → logprob: -10.020485877990723
    10. '(x' → logprob: -10.645485877990723

Token 205: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39846596121788025
    2. ' x' → logprob: -1.2734659910202026
    3. '(x' → logprob: -3.523465871810913
    4. ' (' → logprob: -4.023466110229492
    5. ''x' → logprob: -7.523466110229492
    6. ' ' → logprob: -9.023466110229492
    7. 'abs' → logprob: -9.023466110229492
    8. '   ' → logprob: -9.148466110229492
    9. '(' → logprob: -9.148466110229492
    10. ' abs' → logprob: -9.398466110229492

Token 206: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.320616751909256
    2. '+' → logprob: -1.8206167221069336
    3. '0' → logprob: -2.1956167221069336
    4. ' ' → logprob: -7.445616722106934
    5. '  ' → logprob: -9.195616722106934
    6. '<|end|>' → logprob: -9.195616722106934
    7. '=' → logprob: -10.320616722106934
    8. '   ' → logprob: -10.695616722106934
    9. ',' → logprob: -10.695616722106934
    10. ' +
' → logprob: -11.070616722106934

Token 207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10123806446790695
    2. ' y' → logprob: -2.3512380123138428
    3. 'k' → logprob: -7.226238250732422
    4. '(k' → logprob: -8.851238250732422
    5. '(y' → logprob: -9.851238250732422
    6. ' k' → logprob: -9.851238250732422
    7. '(' → logprob: -10.601238250732422
    8. ' (' → logprob: -11.976238250732422
    9. ' ' → logprob: -12.101238250732422
    10. '	y' → logprob: -12.351238250732422

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042737435549497604
    2. '=' → logprob: -3.5427374839782715
    3. '   ' → logprob: -5.4177374839782715
    4. 't' → logprob: -6.2927374839782715
    5. 'def' → logprob: -6.2927374839782715
    6. '<|end|>' → logprob: -6.7927374839782715
    7. ' t' → logprob: -7.1677374839782715
    8. 'import' → logprob: -7.2927374839782715
    9. '<|end|>' → logprob: -7.5427374839782715
    10. ' =
' → logprob: -7.7927374839782715

Token 209: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22363820672035217
    2. ' x' → logprob: -2.2236382961273193
    3. '(x' → logprob: -2.4736382961273193
    4. ' (' → logprob: -4.84863805770874
    5. '   ' → logprob: -10.848638534545898
    6. ' ' → logprob: -10.973638534545898
    7. '	x' → logprob: -11.723638534545898
    8. '(' → logprob: -11.723638534545898
    9. '_x' → logprob: -13.473638534545898
    10. '{x' → logprob: -13.598638534545898

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.875009536743164
    3. '_' → logprob: -13.125009536743164
    4. '۰' → logprob: -15.750009536743164
    5. '```' → logprob: -16.250009536743164
    6. '+' → logprob: -16.625009536743164
    7. ' +' → logprob: -17.375009536743164
    8. '\xe2\x82' → logprob: -17.875009536743164
    9. '０' → logprob: -18.000009536743164
    10. '  ' → logprob: -18.250009536743164

Token 211: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03807671740651131
    2. '+' → logprob: -3.288076639175415
    3. ' ' → logprob: -10.788076400756836
    4. '<|end|>' → logprob: -11.913076400756836
    5. '0' → logprob: -12.413076400756836
    6. ' plus' → logprob: -14.413076400756836
    7. ' +
' → logprob: -14.413076400756836
    8. ' ' → logprob: -14.663076400756836
    9. ',' → logprob: -14.913076400756836
    10. ')' → logprob: -14.913076400756836

Token 212: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003214784199371934
    2. ' y' → logprob: -5.7532148361206055
    3. 'k' → logprob: -10.253214836120605
    4. ' ' → logprob: -14.628214836120605
    5. '	y' → logprob: -15.003214836120605
    6. 'x' → logprob: -15.628214836120605
    7. ' k' → logprob: -15.878214836120605
    8. '  ' → logprob: -15.878214836120605
    9. '_y' → logprob: -16.00321388244629
    10. '    ' → logprob: -16.12821388244629

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '۰' → logprob: -15.500001907348633
    5. '<|end|>' → logprob: -16.500001907348633
    6. 'o' → logprob: -16.625001907348633
    7. '[' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. '‌' → logprob: -18.375001907348633
    10. '０' → logprob: -18.375001907348633

Token 214: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1428108513355255
    2. '+' → logprob: -2.017810821533203
    3. '<|end|>' → logprob: -9.642810821533203
    4. ',' → logprob: -11.142810821533203
    5. ')' → logprob: -11.392810821533203
    6. ' ' → logprob: -11.642810821533203
    7. '+k' → logprob: -12.017810821533203
    8. '```' → logprob: -12.267810821533203
    9. '
' → logprob: -12.392810821533203
    10. ' +
' → logprob: -12.642810821533203

Token 215: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.73886638879776
    2. '(k' → logprob: -0.98886638879776
    3. ' t' → logprob: -1.9888663291931152
    4. 'k' → logprob: -4.488866329193115
    5. ' k' → logprob: -6.238866329193115
    6. ' (' → logprob: -8.363866806030273
    7. '(t' → logprob: -9.863866806030273
    8. '(' → logprob: -10.613866806030273
    9. ' ' → logprob: -14.613866806030273
    10. 'tk' → logprob: -15.363866806030273

Token 216: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.8381346464157104
    2. ' *' → logprob: -1.0881346464157104
    3. '(k' → logprob: -1.5881346464157104
    4. '*' → logprob: -4.213134765625
    5. ' (' → logprob: -4.713134765625
    6. '(' → logprob: -6.463134765625
    7. ' *(' → logprob: -6.963134765625
    8. '*k' → logprob: -10.338134765625
    9. '(*' → logprob: -11.838134765625
    10. ' ' → logprob: -12.588134765625

Token 217: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06256604939699173
    2. '(k' → logprob: -2.812566041946411
    3. ' k' → logprob: -7.56256628036499
    4. '(' → logprob: -10.062565803527832
    5. ' (' → logprob: -10.312565803527832
    6. '{k' → logprob: -13.187565803527832
    7. ')' → logprob: -14.187565803527832
    8. '\(' → logprob: -16.18756675720215
    9. '[k' → logprob: -16.81256675720215
    10. '```' → logprob: -17.06256675720215

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -17.625
    4. '_' → logprob: -17.75
    5. ')' → logprob: -19.625
    6. '
' → logprob: -19.625
    7. '۱' → logprob: -20.0
    8. '{' → logprob: -20.0
    9. '[' → logprob: -20.25
    10. '(' → logprob: -20.5

Token 219: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07104472070932388
    2. '-' → logprob: -2.696044683456421
    3. ')' → logprob: -7.321044921875
    4. ' ' → logprob: -8.196044921875
    5. '-k' → logprob: -9.071044921875
    6. ' )' → logprob: -10.196044921875
    7. '1' → logprob: -12.196044921875
    8. '-)' → logprob: -12.821044921875
    9. '),' → logprob: -13.071044921875
    10. '<|end|>' → logprob: -13.571044921875

Token 220: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008656765334308147
    2. ' k' → logprob: -4.758656978607178
    3. ')' → logprob: -10.38365650177002
    4. '(k' → logprob: -12.00865650177002
    5. '1' → logprob: -13.38365650177002
    6. ' ' → logprob: -13.63365650177002
    7. '(' → logprob: -13.88365650177002
    8. '	k' → logprob: -14.63365650177002
    9. '-k' → logprob: -15.25865650177002
    10. ' (' → logprob: -15.38365650177002

Token 221: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17014308273792267
    2. '1' → logprob: -2.1701431274414062
    3. ')' → logprob: -3.1701431274414062
    4. '<|end|>' → logprob: -8.420143127441406
    5. '```' → logprob: -10.670143127441406
    6. 'appa' → logprob: -11.295143127441406
    7. ' ' → logprob: -11.420143127441406
    8. ' )' → logprob: -12.420143127441406
    9. '₂' → logprob: -12.545143127441406
    10. '<|end|>' → logprob: -13.045143127441406

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004172065819147974
    2. ')
' → logprob: -8.37541675567627
    3. ' )' → logprob: -8.62541675567627
    4. ')`' → logprob: -13.62541675567627
    5. '))' → logprob: -14.00041675567627
    6. ')

' → logprob: -14.25041675567627
    7. '   ' → logprob: -14.75041675567627
    8. '')' → logprob: -14.75041675567627
    9. ')#' → logprob: -14.75041675567627
    10. '#' → logprob: -15.00041675567627

Token 223: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41374945640563965
    2. 't' → logprob: -1.9137494564056396
    3. ' if' → logprob: -2.4137494564056396
    4. 'if' → logprob: -2.7887494564056396
    5. ' t' → logprob: -3.4137494564056396
    6. '<|end|>' → logprob: -5.913749694824219
    7. ' ' → logprob: -7.038749694824219
    8. '
' → logprob: -7.163749694824219
    9. '    
' → logprob: -7.413749694824219
    10. '    ' → logprob: -7.413749694824219

Token 224: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07072000205516815
    2. '   ' → logprob: -3.4457199573516846
    3. 't' → logprob: -3.5707199573516846
    4. ' if' → logprob: -4.820720195770264
    5. ' t' → logprob: -8.820719718933105
    6. 'k' → logprob: -11.570719718933105
    7. 'from' → logprob: -11.820719718933105
    8. '```' → logprob: -11.820719718933105
    9. 'diff' → logprob: -12.195719718933105
    10. '    ' → logprob: -12.195719718933105

Token 225: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025359775871038437
    2. 't' → logprob: -3.775359869003296
    3. ' if' → logprob: -6.900359630584717
    4. 'diff' → logprob: -7.525359630584717
    5. 'k' → logprob: -8.525360107421875
    6. 'from' → logprob: -8.525360107421875
    7. '#' (adapté à ' #') → logprob: -10.025360107421875
    8. 'delta' → logprob: -10.025360107421875
    9. '```' → logprob: -11.025360107421875
    10. 'difference' → logprob: -11.150360107421875

Token 226: ' Depending' (ID: 51083)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022678107023239136
    2. ' if' → logprob: -4.022677898406982
    3. 't' → logprob: -5.772677898406982
    4. 'k' → logprob: -7.772677898406982
    5. 'from' → logprob: -8.02267837524414
    6. '#' → logprob: -8.14767837524414
    7. 'diff' → logprob: -8.77267837524414
    8. ' t' → logprob: -9.64767837524414
    9. 'abs' → logprob: -10.64767837524414
    10. '```' → logprob: -10.77267837524414

Token 227: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.03370979055762291
    2. 'on' → logprob: -3.408709764480591
    3. '   ' → logprob: -9.783709526062012
    4. '	on' → logprob: -12.783709526062012
    5. '    ' → logprob: -13.283709526062012
    6. '  ' → logprob: -13.533709526062012
    7. 'if' → logprob: -15.033709526062012
    8. 't' → logprob: -15.658709526062012
    9. ' ' → logprob: -15.658709526062012
    10. 'ly' → logprob: -15.908709526062012

Token 228: ' sign' (ID: 2232)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7028989791870117
    2. '(k' → logprob: -1.3278989791870117
    3. ' k' → logprob: -1.4528989791870117
    4. ' (' → logprob: -5.202898979187012
    5. ' the' → logprob: -8.452898979187012
    6. '(' → logprob: -9.077898979187012
    7. ' ' → logprob: -10.452898979187012
    8. 'the' → logprob: -10.452898979187012
    9. ' whether' → logprob: -12.140398979187012
    10. '	k' → logprob: -12.452898979187012

Token 229: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.486114501953125
    2. ' if' → logprob: -1.486114501953125
    3. 'if' → logprob: -2.486114501953125
    4. '   ' → logprob: -3.611114501953125
    5. ' t' → logprob: -3.736114501953125
    6. 'of' → logprob: -4.486114501953125
    7. ',' → logprob: -4.861114501953125
    8. ' s' → logprob: -6.861114501953125
    9. '    ' → logprob: -6.986114501953125
    10. 't' → logprob: -7.361114501953125

Token 230: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0519137978553772
    2. 'k' → logprob: -3.5519137382507324
    3. ' (' → logprob: -3.9269137382507324
    4. ' k' → logprob: -6.176913738250732
    5. '(' → logprob: -8.92691421508789
    6. '{k' → logprob: -14.23941421508789
    7. '\(' → logprob: -14.48941421508789
    8. ' ' → logprob: -14.67691421508789
    9. '```' → logprob: -14.67691421508789
    10. '((' → logprob: -14.92691421508789

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010783452307805419
    2. '_' → logprob: -9.250107765197754
    3. '2' → logprob: -12.000107765197754
    4. '```' → logprob: -13.875107765197754
    5. ' ' → logprob: -14.750107765197754
    6. '۱' → logprob: -15.062607765197754
    7. '\xe2\x82' → logprob: -15.062607765197754
    8. 'k' → logprob: -15.187607765197754
    9. '`' → logprob: -15.687607765197754
    10. '

' → logprob: -15.687607765197754

Token 232: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014256938360631466
    2. '-' → logprob: -4.264256954193115
    3. '-k' → logprob: -10.139256477355957
    4. ' >' → logprob: -10.639256477355957
    5. ',' → logprob: -11.764256477355957
    6. ' !=' → logprob: -12.014256477355957
    7. ' ' → logprob: -12.264256477355957
    8. '>' → logprob: -12.389256477355957
    9. '   ' → logprob: -13.764256477355957
    10. ' ,' → logprob: -14.139256477355957

Token 233: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11282410472631454
    2. ' k' → logprob: -2.2378242015838623
    3. ' ' → logprob: -14.112824440002441
    4. '	k' → logprob: -14.112824440002441
    5. '  ' → logprob: -16.487823486328125
    6. ',k' → logprob: -16.862823486328125
    7. '_k' → logprob: -16.862823486328125
    8. ' ' → logprob: -17.112823486328125
    9. '(k' → logprob: -17.237823486328125
    10. '```' → logprob: -17.237823486328125

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004166105354670435
    2. '_' → logprob: -7.8754167556762695
    3. ' ' → logprob: -11.12541675567627
    4. '₂' → logprob: -11.75041675567627
    5. '1' → logprob: -11.87541675567627
    6. '-' → logprob: -12.87541675567627
    7. '```' → logprob: -14.18791675567627
    8. ' -' → logprob: -14.43791675567627
    9. ' _' → logprob: -14.75041675567627
    10. ',' → logprob: -15.12541675567627

Token 235: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23863309621810913
    2. ',' → logprob: -1.738633155822754
    3. '   ' → logprob: -4.113633155822754
    4. ' if' → logprob: -4.488633155822754
    5. ' ,' → logprob: -5.488633155822754
    6. ':
' → logprob: -6.113633155822754
    7. 'if' → logprob: -6.738633155822754
    8. '=' → logprob: -8.113633155822754
    9. ' t' → logprob: -8.113633155822754
    10. ' =' → logprob: -8.738633155822754

Token 236: ' choose' (ID: 5655)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5554090142250061
    2. ' if' → logprob: -1.3054089546203613
    3. 't' → logprob: -2.1804089546203613
    4. ' t' → logprob: -3.1804089546203613
    5. '   ' → logprob: -7.680408954620361
    6. '    ' → logprob: -9.80540943145752
    7. '    
' → logprob: -11.55540943145752
    8. '
' → logprob: -12.68040943145752
    9. ' ' → logprob: -13.93040943145752
    10. '  ' → logprob: -14.30540943145752

Token 237: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4218434691429138
    2. 't' → logprob: -1.1718435287475586
    3. '0' → logprob: -3.6718435287475586
    4. ' (' → logprob: -5.796843528747559
    5. ' ' → logprob: -6.171843528747559
    6. '(' → logprob: -6.171843528747559
    7. '-' → logprob: -7.296843528747559
    8. ' -' → logprob: -7.546843528747559
    9. '1' → logprob: -8.296843528747559
    10. '(t' → logprob: -9.421843528747559

Token 238: ' accordingly' (ID: 44041)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24801337718963623
    2. '=' → logprob: -1.7480133771896362
    3. 'if' → logprob: -3.873013496398926
    4. ' if' → logprob: -4.248013496398926
    5. 't' → logprob: -5.623013496398926
    6. '   ' → logprob: -5.748013496398926
    7. ' t' → logprob: -6.748013496398926
    8. ' ' → logprob: -7.248013496398926
    9. ',' → logprob: -7.373013496398926
    10. 'import' → logprob: -7.998013496398926

Token 239: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6023217439651489
    2. '   ' → logprob: -1.852321743965149
    3. ':' → logprob: -2.3523216247558594
    4. ' if' → logprob: -2.7273216247558594
    5. 't' → logprob: -3.1023216247558594
    6. '-' → logprob: -3.8523216247558594
    7. '0' → logprob: -4.477321624755859
    8. ' ' → logprob: -4.477321624755859
    9. ' t' → logprob: -4.602321624755859
    10. '=' → logprob: -4.602321624755859

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.527241051197052
    2. 'if' → logprob: -1.4022409915924072
    3. 't' → logprob: -2.5272409915924072
    4. ' if' → logprob: -2.9022409915924072
    5. ' t' → logprob: -4.027241230010986
    6. '    ' → logprob: -5.402241230010986
    7. ' ' → logprob: -6.027241230010986
    8. ':' → logprob: -6.902241230010986
    9. '[' → logprob: -7.777241230010986
    10. ',' → logprob: -7.902241230010986

Token 241: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12727591395378113
    2. ' if' → logprob: -2.8772759437561035
    3. 't' → logprob: -3.5022759437561035
    4. '   ' → logprob: -3.6272759437561035
    5. 'diff' (adapté à ' diff') → logprob: -5.2522759437561035
    6. ' t' → logprob: -6.8772759437561035
    7. 'delta' → logprob: -10.127275466918945
    8. 'difference' → logprob: -10.377275466918945
    9. 'k' → logprob: -10.627275466918945
    10. '```' → logprob: -10.627275466918945

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001519503304734826
    2. '=' → logprob: -6.501519680023193
    3. '_' → logprob: -11.126519203186035
    4. ' ' → logprob: -13.376519203186035
    5. ' =(' → logprob: -15.126519203186035
    6. '_val' → logprob: -16.00152015686035
    7. '=k' → logprob: -16.00152015686035
    8. '_sign' → logprob: -16.50152015686035
    9. 's' → logprob: -17.00152015686035
    10. '_value' → logprob: -17.37652015686035

Token 243: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02087981440126896
    2. ' k' → logprob: -3.8958797454833984
    3. '(k' → logprob: -8.020879745483398
    4. ' (' → logprob: -11.770879745483398
    5. '	k' → logprob: -14.645879745483398
    6. '   ' → logprob: -14.770879745483398
    7. '(' → logprob: -15.020879745483398
    8. ' ' → logprob: -15.770879745483398
    9. '  ' → logprob: -16.0208797454834
    10. '_k' → logprob: -16.7708797454834

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. ' -' → logprob: -16.375
    5. '１' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. '' → logprob: -18.0
    8. '۱' → logprob: -18.1875
    9. '[' → logprob: -18.3125
    10. '   ' → logprob: -18.625

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0004925066023133695
    2. '-' → logprob: -7.625492572784424
    3. '<|end|>' → logprob: -13.000492095947266
    4. ' ' → logprob: -13.750492095947266
    5. '-k' → logprob: -15.625492095947266
    6. ' ' → logprob: -15.875492095947266
    7. ')' → logprob: -16.000492095947266
    8. ' -
' → logprob: -16.125492095947266
    9. '_' → logprob: -16.250492095947266
    10. '<|end|>' → logprob: -16.625492095947266

Token 246: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.001502990722656
    4. '	k' → logprob: -18.001502990722656
    5. '_k' → logprob: -20.626502990722656
    6. ' к' → logprob: -20.876502990722656
    7. '   ' → logprob: -21.126502990722656
    8. '
' → logprob: -21.376502990722656
    9. '<|end|>' → logprob: -21.376502990722656
    10. ',k' → logprob: -21.751502990722656

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.750024795532227
    3. '_' → logprob: -12.750024795532227
    4. '₂' → logprob: -15.000024795532227
    5. '۲' → logprob: -15.625024795532227
    6. 'k' → logprob: -16.125024795532227
    7. '```' → logprob: -17.125024795532227
    8. '２' → logprob: -17.125024795532227
    9. '   ' → logprob: -18.187524795532227
    10. '  ' → logprob: -18.187524795532227

Token 248: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15463513135910034
    2. '   ' → logprob: -2.404635190963745
    3. 't' → logprob: -3.279635190963745
    4. ' if' → logprob: -4.404634952545166
    5. '
' → logprob: -6.279634952545166
    6. '<|end|>' → logprob: -7.529634952545166
    7. ')' → logprob: -8.279635429382324
    8. '```' → logprob: -9.029635429382324
    9. '    
' → logprob: -9.154635429382324
    10. ',' → logprob: -10.654635429382324

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28937995433807373
    2. ' if' → logprob: -2.0393800735473633
    3. 'if' → logprob: -2.2893800735473633
    4. 't' → logprob: -4.289380073547363
    5. ' t' → logprob: -5.789380073547363
    6. '
' → logprob: -6.914380073547363
    7. '    
' → logprob: -7.039380073547363
    8. ' 
' → logprob: -8.289380073547363
    9. '    ' → logprob: -8.414380073547363
    10. '<|end|>' → logprob: -8.414380073547363

Token 250: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00990046001970768
    2. 't' → logprob: -4.6349005699157715
    3. ' if' → logprob: -9.134900093078613
    4. '0' → logprob: -10.759900093078613
    5. 'from' → logprob: -12.134900093078613
    6. '```' → logprob: -12.134900093078613
    7. ' t' → logprob: -13.509900093078613
    8. '
' → logprob: -14.009900093078613
    9. 'import' → logprob: -14.134900093078613
    10. '   ' → logprob: -14.259900093078613

Token 251: ' Candidate' (ID: 81541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05783362314105034
    2. 't' → logprob: -2.932833671569824
    3. '0' → logprob: -6.557833671569824
    4. ' if' → logprob: -6.682833671569824
    5. ' t' → logprob: -8.432833671569824
    6. 'from' → logprob: -10.557833671569824
    7. '-' → logprob: -11.932833671569824
    8. '   ' → logprob: -12.432833671569824
    9. '
' → logprob: -12.557833671569824
    10. '```' → logprob: -12.557833671569824

Token 252: ' solutions' (ID: 9368)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5981313586235046
    2. '_t' → logprob: -1.4731314182281494
    3. 'ts' → logprob: -2.2231314182281494
    4. '_ts' → logprob: -2.7231314182281494
    5. 's' → logprob: -3.4731314182281494
    6. '1' → logprob: -4.72313117980957
    7. ' t' → logprob: -5.47313117980957
    8. ' =' → logprob: -6.97313117980957
    9. '_values' → logprob: -7.34813117980957
    10. ' ts' → logprob: -7.84813117980957

Token 253: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.878781259059906
    2. 't' → logprob: -1.0037813186645508
    3. ' t' → logprob: -2.628781318664551
    4. '   ' → logprob: -2.753781318664551
    5. 'if' → logprob: -3.003781318664551
    6. ' if' → logprob: -4.878781318664551
    7. '=' → logprob: -5.003781318664551
    8. 'c' → logprob: -5.253781318664551
    9. ' candidates' → logprob: -5.878781318664551
    10. 'ts' → logprob: -6.378781318664551

Token 254: ' consider' (ID: 3331)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9104064106941223
    2. 'min' → logprob: -2.0354063510894775
    3. 'consider' → logprob: -2.0354063510894775
    4. 'test' → logprob: -2.9104063510894775
    5. '[' → logprob: -3.1604063510894775
    6. 'check' → logprob: -3.2854063510894775
    7. ' test' → logprob: -3.4104063510894775
    8. 'try' → logprob: -3.4104063510894775
    9. 'evaluate' → logprob: -3.4104063510894775
    10. 't' → logprob: -3.7854063510894775

Token 255: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6480526328086853
    2. ' t' → logprob: -1.77305269241333
    3. '   ' → logprob: -2.02305269241333
    4. '
' → logprob: -2.77305269241333
    5. 'if' → logprob: -3.27305269241333
    6. ' if' → logprob: -4.02305269241333
    7. ' candidates' → logprob: -4.14805269241333
    8. 'c' → logprob: -4.39805269241333
    9. ':' → logprob: -4.52305269241333
    10. '    
' → logprob: -4.64805269241333

Token 256: ' as' (ID: 472)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4282892942428589
    2. 't' → logprob: -1.5532892942428589
    3. ' candidates' → logprob: -2.6782894134521484
    4. 'ts' → logprob: -3.5532894134521484
    5. '[' → logprob: -3.8032894134521484
    6. ' t' → logprob: -5.303289413452148
    7. '   ' → logprob: -5.678289413452148
    8. 'for' → logprob: -6.553289413452148
    9. ' c' → logprob: -6.678289413452148
    10. '[t' → logprob: -6.803289413452148

Token 257: ' t' (ID: 260)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11677847057580948
    2. ' []' → logprob: -2.2417783737182617
    3. '[' → logprob: -5.991778373718262
    4. ' [' → logprob: -6.991778373718262
    5. ' t' → logprob: -7.991778373718262
    6. '[]}' → logprob: -9.866778373718262
    7. 't' → logprob: -10.491778373718262
    8. '[]
' → logprob: -10.491778373718262
    9. ' set' → logprob: -10.616778373718262
    10. '[t' → logprob: -10.991778373718262

Token 258: ' integer' (ID: 16336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45004144310951233
    2. '_candidates' → logprob: -1.20004141330719
    3. '_values' → logprob: -3.3250415325164795
    4. ' =' → logprob: -4.2000412940979
    5. '=' → logprob: -5.2000412940979
    6. '_vals' → logprob: -6.7000412940979
    7. 'c' → logprob: -7.2000412940979
    8. 'values' → logprob: -7.5750412940979
    9. ' s' → logprob: -7.9500412940979
    10. ' candidates' → logprob: -8.075041770935059

Token 259: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19448412954807281
    2. '_candidates' → logprob: -2.319484233856201
    3. ' =' → logprob: -2.819484233856201
    4. 'c' → logprob: -5.069484233856201
    5. '=' → logprob: -5.069484233856201
    6. '   ' → logprob: -6.444484233856201
    7. ' candidates' → logprob: -7.194484233856201
    8. '_t' → logprob: -7.444484233856201
    9. 't' → logprob: -7.569484233856201
    10. ':' → logprob: -7.819484233856201

Token 260: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7849926948547363
    2. ' t' → logprob: -1.6599926948547363
    3. '   ' → logprob: -2.5349926948547363
    4. 't' → logprob: -2.5349926948547363
    5. 'c' → logprob: -3.1599926948547363
    6. ' candidates' → logprob: -3.2849926948547363
    7. '[' → logprob: -3.4099926948547363
    8. ' =' → logprob: -3.6599926948547363
    9. '_candidates' → logprob: -3.7849926948547363
    10. '=' → logprob: -5.034992694854736

Token 261: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6523167490959167
    2. '[' → logprob: -0.9023167490959167
    3. '[]' → logprob: -3.9023168087005615
    4. '[]
' → logprob: -4.402316570281982
    5. 't' → logprob: -4.527316570281982
    6. ' ' → logprob: -4.527316570281982
    7. ' t' → logprob: -5.027316570281982
    8. ' [' → logprob: -5.402316570281982
    9. '
' → logprob: -6.152316570281982
    10. '[-' → logprob: -6.777316570281982

Token 262: ' candidates' (ID: 18116)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6951708793640137
    2. ' t' → logprob: -1.1951708793640137
    3. '[' → logprob: -2.4451708793640137
    4. '0' → logprob: -2.9451708793640137
    5. '[]' → logprob: -3.4451708793640137
    6. ' candidates' → logprob: -4.820170879364014
    7. '[]
' → logprob: -5.570170879364014
    8. '[t' → logprob: -5.695170879364014
    9. 'possible' → logprob: -6.320170879364014
    10. 'import' → logprob: -6.320170879364014

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889342308044434
    2. '=' → logprob: -2.5788934230804443
    3. ':' → logprob: -13.203893661499023
    4. ' =[' → logprob: -14.578893661499023
    5. ' ' → logprob: -14.828893661499023
    6. '=[' → logprob: -14.828893661499023
    7. 's' → logprob: -14.953893661499023
    8. ')' → logprob: -16.453893661499023
    9. '[' → logprob: -16.578893661499023
    10. '=[]' → logprob: -16.953893661499023

Token 264: ' []

' (ID: 32833)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.998903751373291
    2. '[]' → logprob: -0.998903751373291
    3. ' [' → logprob: -1.498903751373291
    4. ' []' → logprob: -3.248903751373291
    5. ' set' → logprob: -7.998903751373291
    6. '[int' → logprob: -8.498903274536133
    7. '[]
' → logprob: -8.748903274536133
    8. 'set' → logprob: -8.998903274536133
    9. '[
' → logprob: -9.123903274536133
    10. '[t' → logprob: -10.248903274536133

Token 265: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9223605990409851
    2. ' if' → logprob: -1.5473606586456299
    3. ' t' → logprob: -1.7973606586456299
    4. '   ' → logprob: -2.79736065864563
    5. 'if' → logprob: -2.92236065864563
    6. 't' → logprob: -3.54736065864563
    7. ' for' → logprob: -3.67236065864563
    8. '
' → logprob: -4.422360420227051
    9. 'for' → logprob: -4.797360420227051
    10. '0' → logprob: -5.047360420227051

Token 266: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0261921882629395
    2. 'for' → logprob: -1.2761921882629395
    3. '0' → logprob: -1.4011921882629395
    4. 'c' → logprob: -2.6511921882629395
    5. '[' → logprob: -3.9011921882629395
    6. 't' → logprob: -4.0261921882629395
    7. '   ' → logprob: -6.4011921882629395
    8. '-' → logprob: -6.6511921882629395
    9. 'import' → logprob: -6.6511921882629395
    10. '-c' → logprob: -7.0261921882629395

Token 267: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1321968138217926
    2. 'for' → logprob: -2.8821969032287598
    3. 'from' → logprob: -3.2571969032287598
    4. 'c' → logprob: -4.50719690322876
    5. 'import' → logprob: -4.75719690322876
    6. 't' → logprob: -4.88219690322876
    7. '#' → logprob: -6.88219690322876
    8. ' if' → logprob: -7.38219690322876
    9. '0' → logprob: -8.132196426391602
    10. ' for' → logprob: -10.132196426391602

Token 268: ' keep' (ID: 3357)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.8575689196586609
    2. 'min' → logprob: -1.2325689792633057
    3. 'import' → logprob: -2.3575689792633057
    4. 'find' → logprob: -3.2325689792633057
    5. 'consider' → logprob: -3.3575689792633057
    6. 'if' → logprob: -4.857568740844727
    7. 'evaluate' → logprob: -4.857568740844727
    8. ' find' → logprob: -4.857568740844727
    9. 'avoid' → logprob: -4.982568740844727
    10. '
' → logprob: -5.232568740844727

Token 269: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7229461073875427
    2. ' candidates' → logprob: -1.5979461669921875
    3. 't' → logprob: -2.0979461669921875
    4. ' t' → logprob: -2.9729461669921875
    5. 'min' → logprob: -3.2229461669921875
    6. '[min' → logprob: -3.8479461669921875
    7. 'diff' → logprob: -4.2229461669921875
    8. ' track' → logprob: -4.8479461669921875
    9. ' diff' → logprob: -5.0979461669921875
    10. '[' → logprob: -5.0979461669921875

Token 270: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3550558090209961
    2. '0' → logprob: -3.105055809020996
    3. '>=' → logprob: -3.105055809020996
    4. '_candidates' → logprob: -3.105055809020996
    5. '_positive' → logprob: -3.480055809020996
    6. ' and' → logprob: -3.480055809020996
    7. 'min' → logprob: -3.855055809020996
    8. ' >=' → logprob: -4.230055809020996
    9. ' ,' → logprob: -4.355055809020996
    10. '_min' → logprob: -4.605055809020996

Token 271: ' >=' (ID: 5064)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18397100269794464
    2. 'min' → logprob: -3.4339709281921387
    3. 's' → logprob: -4.058970928192139
    4. '_candidates' → logprob: -4.183970928192139
    5. ' =' → logprob: -4.558970928192139
    6. 'valid' → logprob: -4.683970928192139
    7. 'values' → logprob: -4.683970928192139
    8. 'for' → logprob: -5.183970928192139
    9. '_min' → logprob: -5.433970928192139
    10. 'best' → logprob: -5.433970928192139

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010349531657993793
    2. ' ' → logprob: -6.876034736633301
    3. '1' → logprob: -13.2510347366333
    4. '   ' → logprob: -15.2510347366333
    5. '```' → logprob: -16.626035690307617
    6. '  ' → logprob: -17.376035690307617
    7. '۰' → logprob: -18.438535690307617
    8. 'x' → logprob: -18.501035690307617
    9. '[' → logprob: -18.626035690307617
    10. '    ' → logprob: -18.751035690307617

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.657694418914616e-05
    2. ' ' → logprob: -9.875056266784668
    3. '1' → logprob: -12.250056266784668
    4. '   ' → logprob: -15.875056266784668
    5. '```' → logprob: -17.000057220458984
    6. '-' → logprob: -17.187557220458984
    7. 'x' → logprob: -17.437557220458984
    8. '  ' → logprob: -17.812557220458984
    9. ')' → logprob: -17.812557220458984
    10. 'min' → logprob: -18.125057220458984

Token 274: ':
' (ID: 734)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1594321727752686
    2. 'if' → logprob: -1.4094321727752686
    3. '   ' → logprob: -1.6594321727752686
    4. '
' → logprob: -2.1594321727752686
    5. 'c' → logprob: -3.4094321727752686
    6. ' if' → logprob: -3.5344321727752686
    7. 'for' → logprob: -3.9094321727752686
    8. ',' → logprob: -4.409432411193848
    9. ' t' → logprob: -4.909432411193848
    10. ' for' → logprob: -5.034432411193848

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5968286991119385
    2. 'if' → logprob: -0.9718286991119385
    3. 't' → logprob: -2.8468286991119385
    4. 'from' → logprob: -5.346828460693359
    5. 'import' → logprob: -5.721828460693359
    6. '#' → logprob: -6.221828460693359
    7. 'min' → logprob: -6.596828460693359
    8. 'for' → logprob: -6.971828460693359
    9. ' if' → logprob: -7.721828460693359
    10. '```' → logprob: -9.72182846069336

Token 276: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0951140895485878
    2. 't' → logprob: -2.47011399269104
    3. '   ' → logprob: -6.095114231109619
    4. 'from' → logprob: -6.595114231109619
    5. '#' (adapté à ' #') → logprob: -6.970114231109619
    6. 'import' → logprob: -7.595114231109619
    7. ' if' → logprob: -7.720114231109619
    8. 'min' → logprob: -8.345113754272461
    9. 'for' → logprob: -8.470113754272461
    10. '```' → logprob: -9.720113754272461

Token 277: ' x' (ID: 1215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5506143569946289
    2. 'if' → logprob: -1.050614356994629
    3. '#' → logprob: -3.175614356994629
    4. 'from' → logprob: -3.675614356994629
    5. ' t' → logprob: -6.050614356994629
    6. 'import' → logprob: -6.425614356994629
    7. ' if' → logprob: -6.550614356994629
    8. 'min' → logprob: -7.675614356994629
    9. 'If' → logprob: -8.175614356994629
    10. 'From' → logprob: -8.925614356994629

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2601813077926636
    2. '>=' → logprob: -1.2601813077926636
    3. '_min' → logprob: -1.8851813077926636
    4. ' >=' → logprob: -2.260181427001953
    5. '_constraint' → logprob: -3.885181427001953
    6. '_constraints' → logprob: -3.885181427001953
    7. ' +' → logprob: -4.010181427001953
    8. '   ' → logprob: -4.010181427001953
    9. '≥' → logprob: -4.135181427001953
    10. '+' → logprob: -4.260181427001953

Token 279: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6458826661109924
    2. '+' → logprob: -1.1458826065063477
    3. '>=' → logprob: -2.0208826065063477
    4. ' >=' → logprob: -4.770882606506348
    5. '   ' → logprob: -5.145882606506348
    6. '+t' → logprob: -5.645882606506348
    7. '    ' → logprob: -6.645882606506348
    8. ',' → logprob: -6.895882606506348
    9. '+k' → logprob: -6.895882606506348
    10. '+x' → logprob: -7.270882606506348

Token 280: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002434699417790398
    2. ' k' → logprob: -8.375243186950684
    3. '   ' → logprob: -12.125243186950684
    4. 't' → logprob: -12.500243186950684
    5. 'c' → logprob: -13.750243186950684
    6. '  ' → logprob: -14.750243186950684
    7. '(k' → logprob: -14.875243186950684
    8. 'kx' → logprob: -15.000243186950684
    9. ' ' → logprob: -15.125243186950684
    10. '    ' → logprob: -15.125243186950684

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '**' → logprob: -16.375001907348633
    5. '' → logprob: -16.687501907348633
    6. '   ' → logprob: -16.687501907348633
    7. '[' → logprob: -17.062501907348633
    8. '
' → logprob: -17.187501907348633
    9. '_' → logprob: -17.312501907348633
    10. '{' → logprob: -17.750001907348633

Token 282: '*t' (ID: 45600)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11601841449737549
    2. '*t' → logprob: -2.366018295288086
    3. ' *' → logprob: -4.241018295288086
    4. '*(-' → logprob: -7.491018295288086
    5. 't' → logprob: -8.491018295288086
    6. '   ' → logprob: -9.366018295288086
    7. '*(' → logprob: -9.866018295288086
    8. '*-' → logprob: -9.866018295288086
    9. '
' → logprob: -9.991018295288086
    10. '>' → logprob: -9.991018295288086

Token 283: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3136748671531677
    2. ' >=' → logprob: -1.3136749267578125
    3. ')>=' → logprob: -8.438674926757812
    4. ']>=' → logprob: -9.563674926757812
    5. '≥' → logprob: -10.063674926757812
    6. '   ' → logprob: -10.563674926757812
    7. ')' → logprob: -11.063674926757812
    8. ' ' → logprob: -11.938674926757812
    9. 't' → logprob: -12.313674926757812
    10. '*' → logprob: -12.313674926757812

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.00008487701416
    4. ' ' → logprob: -17.625085830688477
    5. '  ' → logprob: -18.000085830688477
    6. '-' → logprob: -18.250085830688477
    7. '۰' → logprob: -18.375085830688477
    8. '```' → logprob: -18.500085830688477
    9. ' -' → logprob: -18.625085830688477
    10. '    ' → logprob: -19.125085830688477

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.455048449221067e-05
    2. ' ' → logprob: -9.875054359436035
    3. ' -' → logprob: -13.375054359436035
    4. '-' → logprob: -13.500054359436035
    5. '   ' → logprob: -15.875054359436035
    6. '  ' → logprob: -17.62505531311035
    7. '۰' → logprob: -18.12505531311035
    8. '-zero' → logprob: -18.50005531311035
    9. '    ' → logprob: -18.75005531311035
    10. '‌' → logprob: -19.50005531311035

Token 286: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7244356870651245
    2. '<|end|>' → logprob: -1.5994356870651245
    3. '   ' → logprob: -2.099435806274414
    4. '<|end|>' → logprob: -2.224435806274414
    5. 't' → logprob: -3.474435806274414
    6. 'if' → logprob: -4.349435806274414
    7. '    
' → logprob: -4.599435806274414
    8. ',' → logprob: -5.099435806274414
    9. ')' → logprob: -5.974435806274414
    10. '-' → logprob: -6.349435806274414

Token 287: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7661144137382507
    2. ' t' → logprob: -0.7661144137382507
    3. '(-' → logprob: -3.5161144733428955
    4. ' (-' → logprob: -4.266114234924316
    5. '-t' → logprob: -4.266114234924316
    6. ' (' → logprob: -5.516114234924316
    7. '-' → logprob: -5.516114234924316
    8. ' -' → logprob: -5.891114234924316
    9. ' ' → logprob: -7.766114234924316
    10. '   ' → logprob: -8.016114234924316

Token 288: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.00727247167378664
    2. ' >=' → logprob: -5.007272243499756
    3. '=' → logprob: -8.257272720336914
    4. '≥' → logprob: -8.757272720336914
    5. ']>=' → logprob: -9.632272720336914
    6. ')>=' → logprob: -10.007272720336914
    7. '>' → logprob: -11.882272720336914
    8. '   ' → logprob: -12.007272720336914
    9. ')' → logprob: -13.132272720336914
    10. ' ' → logprob: -13.382272720336914

Token 289: ' -' (ID: 533)
  Prédit: '-ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ce' → logprob: -0.5328046679496765
    2. '(-' → logprob: -1.0328047275543213
    3. '-' → logprob: -3.7828047275543213
    4. ' -' → logprob: -4.032804489135742
    5. '-c' → logprob: -4.532804489135742
    6. ' (-' → logprob: -5.907804489135742
    7. '-t' → logprob: -7.532804489135742
    8. '-(' → logprob: -7.782804489135742
    9. '-int' → logprob: -8.282804489135742
    10. '(' → logprob: -8.407804489135742

Token 290: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002851232886314392
    2. '(x' → logprob: -5.8778510093688965
    3. ' x' → logprob: -10.252851486206055
    4. ' (' → logprob: -11.877851486206055
    5. '(' → logprob: -12.752851486206055
    6. '   ' → logprob: -14.002851486206055
    7. '{x' → logprob: -15.252851486206055
    8. ' ' → logprob: -16.377851486206055
    9. '	x' → logprob: -17.377851486206055
    10. '_x' → logprob: -17.627851486206055

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.750000953674316
    3. '_' → logprob: -15.000000953674316
    4. 'o' → logprob: -15.625000953674316
    5. '۰' → logprob: -15.875000953674316
    6. '０' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '```' → logprob: -16.625001907348633
    9. '
' → logprob: -18.062501907348633
    10. '[' → logprob: -18.125001907348633

Token 292: '/k' (ID: 28096)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5942264199256897
    2. '   ' → logprob: -1.594226360321045
    3. '<|end|>' → logprob: -2.094226360321045
    4. '<|end|>' → logprob: -2.594226360321045
    5. ' +' → logprob: -4.469226360321045
    6. '+' → logprob: -4.719226360321045
    7. '    
' → logprob: -4.719226360321045
    8. ',' → logprob: -5.844226360321045
    9. '    ' → logprob: -6.094226360321045
    10. ' 
' → logprob: -6.469226360321045

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023500648967456073
    2. 'k' → logprob: -8.375234603881836
    3. '(' → logprob: -13.750234603881836
    4. 'f' → logprob: -13.875234603881836
    5. '(k' → logprob: -14.312734603881836
    6. '```' → logprob: -15.562734603881836
    7. ' k' → logprob: -15.750234603881836
    8. 'l' → logprob: -16.000234603881836
    9. '   ' → logprob: -16.312734603881836
    10. 'i' → logprob: -16.625234603881836

Token 294: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27794012427330017
    2. ' if' → logprob: -1.6529401540756226
    3. 'if' → logprob: -3.777940034866333
    4. '\n' → logprob: -4.902940273284912
    5. '   ' → logprob: -5.027940273284912
    6. '    
' → logprob: -5.777940273284912
    7. '<|end|>' → logprob: -6.152940273284912
    8. '<|end|>' → logprob: -6.152940273284912
    9. ')' → logprob: -6.777940273284912
    10. ' 
' → logprob: -6.902940273284912

Token 295: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -19.251502990722656
    4. '{k' → logprob: -19.251502990722656
    5. '   ' → logprob: -20.251502990722656
    6. '(k' → logprob: -20.501502990722656
    7. '_k' → logprob: -21.001502990722656
    8. 'kx' → logprob: -21.126502990722656
    9. ',k' → logprob: -21.626502990722656
    10. ' к' → logprob: -21.751502990722656

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '۱' → logprob: -15.625000953674316
    3. '```' → logprob: -16.312501907348633
    4. 'ernel' → logprob: -16.437501907348633
    5. ' ' → logprob: -16.500001907348633
    6. '>' → logprob: -16.625001907348633
    7. '!=' → logprob: -16.937501907348633
    8. '১' → logprob: -17.312501907348633
    9. '１' → logprob: -17.437501907348633
    10. '१' → logprob: -17.562501907348633

Token 297: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2555324137210846
    2. ' >' → logprob: -1.7555323839187622
    3. '!=' → logprob: -3.3805325031280518
    4. ' !=' → logprob: -4.005532264709473
    5. '==' → logprob: -9.380532264709473
    6. ' ' → logprob: -10.130532264709473
    7. '0' → logprob: -10.255532264709473
    8. '">' → logprob: -10.255532264709473
    9. '   ' → logprob: -10.380532264709473
    10. '&gt' → logprob: -10.505532264709473

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.125911712646484
    4. '```' → logprob: -16.500911712646484
    5. '  ' → logprob: -17.250911712646484
    6. '>' → logprob: -17.500911712646484
    7. '`' → logprob: -18.375911712646484
    8. '۰' → logprob: -18.500911712646484
    9. '    ' → logprob: -18.625911712646484
    10. '1' → logprob: -18.688411712646484

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007111206650733948
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250711441040039
    4. '  ' → logprob: -15.813211441040039
    5. '```' → logprob: -16.12571144104004
    6. '>' → logprob: -16.81321144104004
    7. '۰' → logprob: -17.12571144104004
    8. ' ' → logprob: -17.37571144104004
    9. '1' → logprob: -17.37571144104004
    10. '`' → logprob: -17.50071144104004

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7550952434539795
    2. '\n' → logprob: -1.7550952434539795
    3. '
' → logprob: -2.0050952434539795
    4. ' if' → logprob: -2.2550952434539795
    5. '<|end|>' → logprob: -3.1300952434539795
    6. '    
' → logprob: -3.6300952434539795
    7. '<|end|>' → logprob: -4.255095481872559
    8. 'if' → logprob: -4.630095481872559
    9. ' and' → logprob: -4.630095481872559
    10. ' or' → logprob: -6.005095481872559

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06675560027360916
    2. ' if' → logprob: -2.941755533218384
    3. 'if' → logprob: -5.066755771636963
    4. ' and' → logprob: -6.691755771636963
    5. '    
' → logprob: -6.691755771636963
    6. ' or' → logprob: -7.066755771636963
    7. ',' → logprob: -7.441755771636963
    8. '\n' → logprob: -7.816755771636963
    9. '
' → logprob: -8.441755294799805
    10. '    ' → logprob: -8.691755294799805

Token 302: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019115038448944688
    2. '    
' → logprob: -7.376911640167236
    3. ' if' → logprob: -8.126911163330078
    4. ',' → logprob: -8.251911163330078
    5. '<|end|>' → logprob: -8.251911163330078
    6. '\n' → logprob: -9.501911163330078
    7. ' or' → logprob: -9.626911163330078
    8. 'if' → logprob: -9.876911163330078
    9. ' and' → logprob: -10.001911163330078
    10. '    ' → logprob: -10.626911163330078

Token 303: ' y' (ID: 342)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.21810036897659302
    2. 't' → logprob: -2.3431003093719482
    3. '   ' → logprob: -2.3431003093719482
    4. ' (' → logprob: -7.468100547790527
    5. ' None' → logprob: -7.968100547790527
    6. ' if' → logprob: -8.093100547790527
    7. '    ' → logprob: -8.218100547790527
    8. ' x' → logprob: -8.343100547790527
    9. ' k' → logprob: -8.468100547790527
    10. ' ' → logprob: -8.468100547790527

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011749001714633778
    2. '_' → logprob: -10.375117301940918
    3. '>=' → logprob: -10.875117301940918
    4. ' >=' → logprob: -11.125117301940918
    5. '   ' → logprob: -11.375117301940918
    6. '>' → logprob: -11.750117301940918
    7. '+' → logprob: -12.250117301940918
    8. ' ' → logprob: -12.250117301940918
    9. '```' → logprob: -12.500117301940918
    10. '-' → logprob: -13.187617301940918

Token 305: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08761971443891525
    2. ' >=' → logprob: -3.0876197814941406
    3. '-' → logprob: -3.5876197814941406
    4. '>=' → logprob: -4.712619781494141
    5. ' +' → logprob: -7.587619781494141
    6. ' <=' → logprob: -7.712619781494141
    7. ' ' → logprob: -8.21261978149414
    8. '   ' → logprob: -8.71261978149414
    9. '+' → logprob: -8.96261978149414
    10. '<=' → logprob: -9.83761978149414

Token 306: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11853263527154922
    2. ' k' → logprob: -2.243532657623291
    3. '(k' → logprob: -5.493532657623291
    4. ' (' → logprob: -6.993532657623291
    5. '(' → logprob: -8.493532180786133
    6. '(-' → logprob: -8.993532180786133
    7. '   ' → logprob: -9.368532180786133
    8. '1' → logprob: -10.118532180786133
    9. 't' → logprob: -10.243532180786133
    10. 'diff' → logprob: -10.493532180786133

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '_' → logprob: -14.750004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '₂' → logprob: -15.625004768371582
    6. '```' → logprob: -16.0000057220459
    7. '1' → logprob: -16.1250057220459
    8. '  ' → logprob: -16.6875057220459
    9. '
' → logprob: -17.2500057220459
    10. 'k' → logprob: -17.9375057220459

Token 308: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.2104923576116562
    2. '*' → logprob: -1.7104923725128174
    3. ' *' → logprob: -4.710492134094238
    4. '>=' → logprob: -12.210492134094238
    5. 't' → logprob: -12.335492134094238
    6. '*>' → logprob: -12.835492134094238
    7. '*y' → logprob: -12.835492134094238
    8. '*u' → logprob: -12.960492134094238
    9. '*\' → logprob: -13.210492134094238
    10. '*np' → logprob: -13.335492134094238

Token 309: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07060281932353973
    2. '>=' → logprob: -2.6956028938293457
    3. ' <=' → logprob: -7.445602893829346
    4. '<=' → logprob: -10.070602416992188
    5. ' ' → logprob: -10.695602416992188
    6. '   ' → logprob: -11.820602416992188
    7. ')>=' → logprob: -12.820602416992188
    8. ']>=' → logprob: -13.695602416992188
    9. ' ≥' → logprob: -14.195602416992188
    10. '  ' → logprob: -14.195602416992188

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931850910186768
    2. ' ' → logprob: -0.6931850910186768
    3. ' y' → logprob: -10.568184852600098
    4. 'y' → logprob: -12.568184852600098
    5. ' -' → logprob: -12.818184852600098
    6. ' (' → logprob: -13.443184852600098
    7. '   ' → logprob: -13.818184852600098
    8. ' ' → logprob: -13.943184852600098
    9. '  ' → logprob: -14.068184852600098
    10. '(' → logprob: -14.568184852600098

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889727503061295
    2. ' ' → logprob: -2.57889723777771
    3. '   ' → logprob: -13.328897476196289
    4. '  ' → logprob: -13.641397476196289
    5. ' ' → logprob: -14.016397476196289
    6. ' y' → logprob: -14.578897476196289
    7. '(' → logprob: -14.766397476196289
    8. '    ' → logprob: -14.953897476196289
    9. ' -' → logprob: -14.953897476196289
    10. '-' → logprob: -15.016397476196289

Token 312: ' =>' (ID: 871)
  Prédit: ' =>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.4337494671344757
    2. ' >=' → logprob: -1.9337494373321533
    3. '=>' → logprob: -2.3087494373321533
    4. ' if' → logprob: -3.3087494373321533
    5. ' <=' → logprob: -3.6837494373321533
    6. '>=' → logprob: -3.6837494373321533
    7. '   ' → logprob: -4.433749675750732
    8. 'if' → logprob: -5.683749675750732
    9. '<=' → logprob: -6.558749675750732
    10. ':' → logprob: -6.933749675750732

Token 313: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20145437121391296
    2. 't' → logprob: -1.7014544010162354
    3. '   ' → logprob: -11.326454162597656
    4. ' ' → logprob: -11.451454162597656
    5. '	t' → logprob: -12.451454162597656
    6. '  ' → logprob: -13.076454162597656
    7. '`t' → logprob: -13.076454162597656
    8. ' y' → logprob: -13.451454162597656
    9. ' ' → logprob: -13.701454162597656
    10. ' (' → logprob: -13.763954162597656

Token 314: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01209917850792408
    2. '<=' → logprob: -4.512099266052246
    3. ' >=' → logprob: -6.887099266052246
    4. '>=' → logprob: -10.637099266052246
    5. ' ≤' → logprob: -13.012099266052246
    6. ' ' → logprob: -13.512099266052246
    7. '   ' → logprob: -14.012099266052246
    8. ' =' → logprob: -14.637099266052246
    9. ' ' → logprob: -14.887099266052246
    10. '=' → logprob: -15.637099266052246

Token 315: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20150640606880188
    2. 'y' → logprob: -1.7015063762664795
    3. '(y' → logprob: -10.201506614685059
    4. ' ' → logprob: -10.576506614685059
    5. ' (' → logprob: -11.201506614685059
    6. '	y' → logprob: -12.076506614685059
    7. '   ' → logprob: -12.451506614685059
    8. 'int' → logprob: -12.951506614685059
    9. '  ' → logprob: -13.076506614685059
    10. '(' → logprob: -13.951506614685059

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.125001907348633
    4. '
' → logprob: -16.125001907348633
    5. 'o' → logprob: -16.562501907348633
    6. '۰' → logprob: -16.562501907348633
    7. '_' → logprob: -16.625001907348633
    8. '[' → logprob: -17.187501907348633
    9. '  ' → logprob: -17.250001907348633
    10. ',' → logprob: -17.250001907348633

Token 317: '/k' (ID: 28096)
  Prédit: '/k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/k' → logprob: -0.37065181136131287
    2. ' /' → logprob: -1.2456518411636353
    3. '/' → logprob: -3.9956517219543457
    4. ' //' → logprob: -6.870651721954346
    5. '//' → logprob: -7.245651721954346
    6. ' if' → logprob: -7.245651721954346
    7. 'if' → logprob: -7.620651721954346
    8. '   ' → logprob: -8.120652198791504
    9. ' ' → logprob: -9.870652198791504
    10. '/K' → logprob: -9.995652198791504

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '_' → logprob: -16.0
    4. '   ' → logprob: -16.375
    5. '```' → logprob: -17.5
    6. '//' → logprob: -17.625
    7. '₂' → logprob: -17.625
    8. '/' → logprob: -17.75
    9. '-' → logprob: -19.625
    10. '  ' → logprob: -19.75

Token 319: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6110459566116333
    2. '   ' → logprob: -0.8610459566116333
    3. '    
' → logprob: -4.611045837402344
    4. '<|end|>' → logprob: -5.236045837402344
    5. ',' → logprob: -5.611045837402344
    6. '<|end|>' → logprob: -6.111045837402344
    7. ':' → logprob: -6.611045837402344
    8. '_candidates' → logprob: -6.611045837402344
    9. ' if' → logprob: -6.736045837402344
    10. 'if' → logprob: -6.736045837402344

Token 320: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10021162778139114
    2. ' k' → logprob: -2.3502116203308105
    3. ' ' → logprob: -13.475212097167969
    4. '(k' → logprob: -13.600212097167969
    5. '   ' → logprob: -13.850212097167969
    6. ' (' → logprob: -14.850212097167969
    7. '  ' → logprob: -15.350212097167969
    8. '>' → logprob: -15.475212097167969
    9. '    ' → logprob: -15.600212097167969
    10. '
' → logprob: -15.975212097167969

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23216961324214935
    2. '>' → logprob: -1.8571696281433105
    3. ' >' → logprob: -2.9821696281433105
    4. '```' → logprob: -8.857169151306152
    5. '   ' → logprob: -9.482169151306152
    6. ' ' → logprob: -10.107169151306152
    7. '1' → logprob: -10.232169151306152
    8. '0' → logprob: -10.857169151306152
    9. '+' → logprob: -11.107169151306152
    10. '  ' → logprob: -11.982169151306152

Token 322: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01815474033355713
    2. '>' → logprob: -4.018154621124268
    3. ' <' → logprob: -13.018155097961426
    4. ' ' → logprob: -13.393155097961426
    5. '   ' → logprob: -15.143155097961426
    6. ')' → logprob: -15.893155097961426
    7. ' ' → logprob: -16.01815414428711
    8. '```' → logprob: -16.01815414428711
    9. ' <=' → logprob: -16.76815414428711
    10. ')>' → logprob: -16.89315414428711

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811805009841919
    2. ' ' → logprob: -1.406180500984192
    3. '>' → logprob: -10.656180381774902
    4. '```' → logprob: -12.406180381774902
    5. ' >' → logprob: -14.781180381774902
    6. ' ' → logprob: -14.906180381774902
    7. '   ' → logprob: -14.906180381774902
    8. '=' → logprob: -15.031180381774902
    9. '1' → logprob: -15.406180381774902
    10. '  ' → logprob: -15.531180381774902

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019397038267925382
    2. ' ' → logprob: -6.25193977355957
    3. '>' → logprob: -11.50193977355957
    4. '```' → logprob: -14.50193977355957
    5. '   ' → logprob: -15.37693977355957
    6. '1' → logprob: -16.37693977355957
    7. '``' → logprob: -16.87693977355957
    8. 'positive' → logprob: -16.87693977355957
    9. '  ' → logprob: -17.50193977355957
    10. '+' → logprob: -18.00193977355957

Token 325: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030031058937311172
    2. '
' → logprob: -4.405031204223633
    3. 't' → logprob: -5.155031204223633
    4. '    
' → logprob: -5.155031204223633
    5. 'if' → logprob: -6.405031204223633
    6. ' if' → logprob: -7.030031204223633
    7. ',' → logprob: -7.155031204223633
    8. ' candidates' → logprob: -7.405031204223633
    9. 'import' → logprob: -7.530031204223633
    10. '_candidates' → logprob: -8.280031204223633

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05428764224052429
    2. 't' → logprob: -3.6792876720428467
    3. '```' → logprob: -3.9292876720428467
    4. '    
' → logprob: -5.804287433624268
    5. '
' → logprob: -6.679287433624268
    6. 'if' → logprob: -6.804287433624268
    7. ' if' → logprob: -7.054287433624268
    8. ' t' → logprob: -7.804287433624268
    9. '<|end|>' → logprob: -8.304287910461426
    10. '    ' → logprob: -8.429287910461426

Token 327: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37617433071136475
    2. '   ' → logprob: -1.7511743307113647
    3. 'import' → logprob: -2.3761744499206543
    4. 't' → logprob: -3.3761744499206543
    5. ' if' → logprob: -5.251174449920654
    6. 'from' → logprob: -5.376174449920654
    7. 'min' → logprob: -6.626174449920654
    8. '    
' → logprob: -7.251174449920654
    9. '
' → logprob: -8.001173973083496
    10. '```' → logprob: -8.626173973083496

Token 328: ' Compute' (ID: 45438)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06141728162765503
    2. 'import' → logprob: -3.4364173412323
    3. 't' → logprob: -3.9364173412323
    4. 'from' → logprob: -5.686417102813721
    5. ' if' → logprob: -5.936417102813721
    6. '   ' → logprob: -6.936417102813721
    7. '#' → logprob: -7.561417102813721
    8. 'min' → logprob: -8.561417579650879
    9. ' t' → logprob: -9.686417579650879
    10. ' import' → logprob: -10.186417579650879

Token 329: ' bounds' (ID: 30227)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0761256217956543
    2. 'import' → logprob: -1.0761256217956543
    3. 'low' → logprob: -2.7011256217956543
    4. 'min' → logprob: -2.8261256217956543
    5. 'from' → logprob: -2.8261256217956543
    6. 'lower' → logprob: -2.9511256217956543
    7. 'if' → logprob: -3.5761256217956543
    8. ' import' → logprob: -4.076125621795654
    9. ' t' → logprob: -4.201125621795654
    10. '   ' → logprob: -5.201125621795654

Token 330: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014189830049872398
    2. 'if' → logprob: -4.514189720153809
    3. 't' → logprob: -6.639189720153809
    4. 'bounds' → logprob: -7.639189720153809
    5. '
' → logprob: -7.764189720153809
    6. '    
' → logprob: -7.889189720153809
    7. 'min' → logprob: -8.764189720153809
    8. '```' → logprob: -9.514189720153809
    9. 'lower' → logprob: -9.639189720153809
    10. 'import' → logprob: -9.764189720153809

Token 331: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.048743151128292084
    2. ' t' → logprob: -3.04874324798584
    3. 'import' → logprob: -9.04874324798584
    4. 'if' → logprob: -11.42374324798584
    5. '`t' → logprob: -11.67374324798584
    6. '```' → logprob: -12.29874324798584
    7. 'from' → logprob: -12.42374324798584
    8. ' import' → logprob: -12.92374324798584
    9. '	t' → logprob: -13.29874324798584
    10. ' if' → logprob: -13.54874324798584

Token 332: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1641547977924347
    2. 'if' → logprob: -2.6641547679901123
    3. 't' → logprob: -3.0391547679901123
    4. '
' → logprob: -4.539155006408691
    5. '    
' → logprob: -4.664155006408691
    6. ' if' → logprob: -5.914155006408691
    7. 'import' → logprob: -6.164155006408691
    8. ':' → logprob: -6.414155006408691
    9. 'bounds' → logprob: -6.414155006408691
    10. ',' → logprob: -6.789155006408691

Token 333: ' keep' (ID: 3357)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.5376712083816528
    2. 'ensure' → logprob: -1.1626712083816528
    3. 'keep' → logprob: -3.2876710891723633
    4. 'min' → logprob: -3.4126710891723633
    5. ' maintain' → logprob: -4.787671089172363
    6. 's' → logprob: -4.787671089172363
    7. 'make' → logprob: -5.662671089172363
    8. ' ensure' → logprob: -5.787671089172363
    9. 'consider' → logprob: -6.412671089172363
    10. 't' → logprob: -6.787671089172363

Token 334: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01804879494011402
    2. ' x' → logprob: -4.1430487632751465
    3. 'solutions' → logprob: -7.3930487632751465
    4. '   ' → logprob: -7.5180487632751465
    5. 't' → logprob: -7.7680487632751465
    6. 'the' → logprob: -9.393049240112305
    7. 'non' → logprob: -9.393049240112305
    8. 'both' → logprob: -9.893049240112305
    9. 'values' → logprob: -10.143049240112305
    10. ' solutions' → logprob: -10.268049240112305

Token 335: ',y' (ID: 16103)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.41212210059165955
    2. '0' → logprob: -1.787122130393982
    3. ' >=' → logprob: -1.787122130393982
    4. '   ' → logprob: -6.9121222496032715
    5. '≥' → logprob: -7.1621222496032715
    6. ',' → logprob: -7.6621222496032715
    7. ')>=' → logprob: -9.037121772766113
    8. ']>=' → logprob: -9.162121772766113
    9. 't' → logprob: -10.037121772766113
    10. ' ' → logprob: -10.162121772766113

Token 336: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6597990989685059
    2. '>=' → logprob: -1.2847990989685059
    3. 'min' → logprob: -2.534799098968506
    4. 'non' → logprob: -3.534799098968506
    5. '_non' → logprob: -4.534799098968506
    6. 'if' → logprob: -4.534799098968506
    7. 'ge' → logprob: -4.659799098968506
    8. '_min' → logprob: -5.034799098968506
    9. 'bounds' → logprob: -5.034799098968506
    10. '_lower' → logprob: -5.409799098968506

Token 337: 'negative' (ID: 46069)
  Prédit: 'negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.06613484025001526
    2. '-negative' → logprob: -3.0661349296569824
    3. '   ' → logprob: -4.566134929656982
    4. '_negative' → logprob: -6.191134929656982
    5. ' negative' → logprob: -6.691134929656982
    6. 'empty' → logprob: -7.191134929656982
    7. 'neg' → logprob: -7.191134929656982
    8. 'Negative' → logprob: -7.691134929656982
    9. ' negativas' → logprob: -7.941134929656982
    10. 'zero' → logprob: -8.191134452819824

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18763995170593262
    2. 't' → logprob: -2.3126399517059326
    3. '```' → logprob: -3.5626399517059326
    4. 'if' → logprob: -4.062640190124512
    5. '
' → logprob: -4.562640190124512
    6. '    
' → logprob: -5.062640190124512
    7. 'bounds' → logprob: -5.062640190124512
    8. 'min' → logprob: -6.937640190124512
    9. 'import' → logprob: -7.312640190124512
    10. 'from' → logprob: -7.687640190124512

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16605769097805023
    2. '
' → logprob: -2.666057586669922
    3. 't' → logprob: -3.416057586669922
    4. '```' → logprob: -3.791057586669922
    5. 'import' → logprob: -4.416057586669922
    6. '    
' → logprob: -4.666057586669922
    7. 'if' → logprob: -5.416057586669922
    8. 'bounds' → logprob: -7.291057586669922
    9. 'from' → logprob: -7.791057586669922
    10. 'min' → logprob: -7.916057586669922

Token 340: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.6109733581542969
    2. '   ' → logprob: -1.4859733581542969
    3. 'import' → logprob: -2.235973358154297
    4. 'if' → logprob: -2.610973358154297
    5. 'from' → logprob: -3.735973358154297
    6. 'bounds' → logprob: -4.360973358154297
    7. 'lower' → logprob: -4.610973358154297
    8. 'lb' → logprob: -6.610973358154297
    9. '```' → logprob: -7.235973358154297
    10. 'low' → logprob: -7.485973358154297

Token 341: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.2081974893808365
    2. '_lower' → logprob: -2.083197593688965
    3. '_low' → logprob: -3.208197593688965
    4. 's' → logprob: -4.833197593688965
    5. ' =' → logprob: -5.333197593688965
    6. '_candidates' → logprob: -5.833197593688965
    7. 'min' → logprob: -6.083197593688965
    8. '=' → logprob: -6.458197593688965
    9. '_bounds' → logprob: -6.458197593688965
    10. '_' → logprob: -7.333197593688965

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38694843649864197
    2. ' =' → logprob: -1.1369484663009644
    3. ',' → logprob: -9.636948585510254
    4. 's' → logprob: -11.761948585510254
    5. '=None' → logprob: -13.761948585510254
    6. '=int' → logprob: -14.136948585510254
    7. '=[]' → logprob: -14.386948585510254
    8. ' ' → logprob: -14.636948585510254
    9. ')' → logprob: -15.011948585510254
    10. '=

' → logprob: -15.136948585510254

Token 343: ' (-' (ID: 21382)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5399497747421265
    2. '(-' → logprob: -1.0399497747421265
    3. '(' → logprob: -3.039949893951416
    4. 'int' → logprob: -5.664949893951416
    5. 'max' → logprob: -5.914949893951416
    6. ' ' → logprob: -6.039949893951416
    7. '(int' → logprob: -6.414949893951416
    8. '-(' → logprob: -7.039949893951416
    9. '-int' → logprob: -7.039949893951416
    10. 'math' → logprob: -7.289949893951416

Token 344: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -13.750000953674316
    3. '(x' → logprob: -15.500000953674316
    4. ')x' → logprob: -18.375001907348633
    5. '{x' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '-x' → logprob: -19.625001907348633
    8. '"x' → logprob: -20.125001907348633
    9. '	x' → logprob: -20.375001907348633
    10. '_x' → logprob: -20.500001907348633

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. ' ' → logprob: -16.625
    4. '۰' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. 'o' → logprob: -19.5
    7. '０' → logprob: -19.875
    8. '   ' → logprob: -20.0625
    9. 'user' → logprob: -20.625
    10. ')' → logprob: -20.875

Token 346: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.622811496257782
    2. '+' → logprob: -0.872811496257782
    3. '+k' → logprob: -3.2478115558624268
    4. ')' → logprob: -5.122811317443848
    5. '   ' → logprob: -7.372811317443848
    6. ' ' → logprob: -8.997811317443848
    7. '+(' → logprob: -9.622811317443848
    8. '+x' → logprob: -10.247811317443848
    9. ')//' → logprob: -10.747811317443848
    10. '+t' → logprob: -10.997811317443848

Token 347: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0340898297727108
    2. '(k' → logprob: -3.6590898036956787
    3. ' k' → logprob: -4.909090042114258
    4. ' (' → logprob: -7.909090042114258
    5. '(' → logprob: -12.034090042114258
    6. '{k' → logprob: -12.659090042114258
    7. '   ' → logprob: -14.034090042114258
    8. ' ' → logprob: -14.159090042114258
    9. ')' → logprob: -14.284090042114258
    10. '[k' → logprob: -15.534090042114258

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.625001907348633
    3. '-' → logprob: -14.750001907348633
    4. ' -' → logprob: -15.125001907348633
    5. '```' → logprob: -16.187501907348633
    6. '   ' → logprob: -16.437501907348633
    7. '
' → logprob: -17.312501907348633
    8. '  ' → logprob: -17.312501907348633
    9. ')' → logprob: -17.687501907348633
    10. '[' → logprob: -18.125001907348633

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014138251543045
    2. ' -' → logprob: -1.701413869857788
    3. ')' → logprob: -14.701414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '   ' → logprob: -16.701414108276367
    6. '1' → logprob: -17.576414108276367
    7. '```' → logprob: -17.701414108276367
    8. '-)' → logprob: -19.201414108276367
    9. '−' → logprob: -19.951414108276367
    10. '  ' → logprob: -20.076414108276367

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -21.0
    4. '-' → logprob: -21.875
    5. ')' → logprob: -22.5
    6. '   ' → logprob: -23.0
    7. '１' → logprob: -24.375
    8. '' → logprob: -24.625
    9. '(' → logprob: -24.625
    10. '۱' → logprob: -24.75

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -21.5
    4. '-' → logprob: -23.125
    5. '   ' → logprob: -23.5
    6. ')' → logprob: -23.75
    7. '۱' → logprob: -24.0
    8. '１' → logprob: -24.25
    9. '' → logprob: -24.5
    10. '(' → logprob: -24.5

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018207184970378876
    2. ')//' → logprob: -4.01820707321167
    3. ' )' → logprob: -9.768207550048828
    4. ')
' → logprob: -17.143207550048828
    5. ')#' → logprob: -17.518207550048828
    6. '//' → logprob: -18.143207550048828
    7. ')/' → logprob: -18.143207550048828
    8. '   ' → logprob: -18.518207550048828
    9. '）' → logprob: -19.018207550048828
    10. ' ' → logprob: -19.893207550048828

Token 353: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0163317918777466
    2. ' //' → logprob: -1.1413317918777466
    3. '//' → logprob: -1.2663317918777466
    4. ')//' → logprob: -3.391331672668457
    5. '   ' → logprob: -6.516331672668457
    6. '```' → logprob: -7.391331672668457
    7. '#' → logprob: -7.641331672668457
    8. ' )' → logprob: -8.641331672668457
    9. ' ' → logprob: -9.266331672668457
    10. ']' → logprob: -9.391331672668457

Token 354: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029750484973192215
    2. ' k' → logprob: -3.5297505855560303
    3. '	k' → logprob: -18.65475082397461
    4. '{k' → logprob: -19.15475082397461
    5. ' к' → logprob: -20.65475082397461
    6. '   ' → logprob: -20.90475082397461
    7. '(k' → logprob: -21.90475082397461
    8. '```' → logprob: -22.02975082397461
    9. 'kx' → logprob: -22.15475082397461
    10. ' ' → logprob: -22.40475082397461

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -16.875
    3. 'k' → logprob: -17.375
    4. ' ' → logprob: -18.75
    5. '１' → logprob: -19.125
    6. '۱' → logprob: -19.625
    7. '_' → logprob: -20.0
    8. '' → logprob: -20.6875
    9. '   ' → logprob: -20.875
    10. '১' → logprob: -20.9375

Token 356: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1789190173149109
    2. '   ' → logprob: -2.4289190769195557
    3. '<|end|>' → logprob: -2.8039190769195557
    4. 'if' → logprob: -4.803918838500977
    5. '<|end|>' → logprob: -5.428918838500977
    6. '
' → logprob: -6.553918838500977
    7. '	if' → logprob: -7.553918838500977
    8. '    
' → logprob: -8.053918838500977
    9. '  ' → logprob: -9.928918838500977
    10. ' ' → logprob: -10.178918838500977

Token 357: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804149478673935
    2. ' k' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.913042068481445
    4. '	k' → logprob: -18.288042068481445
    5. ' ' → logprob: -19.663042068481445
    6. 'kx' → logprob: -20.163042068481445
    7. '(k' → logprob: -20.413042068481445
    8. '  ' → logprob: -20.788042068481445
    9. '{k' → logprob: -21.038042068481445
    10. 'diff' → logprob: -21.038042068481445

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -13.000005722045898
    3. '```' → logprob: -14.125005722045898
    4. 'if' → logprob: -14.500005722045898
    5. '>' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.187505722045898
    7. 'ernel' → logprob: -15.500005722045898
    8. ')' → logprob: -16.0625057220459
    9. '_' → logprob: -16.4375057220459
    10. '' → logprob: -16.6250057220459

Token 359: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931565999984741
    2. ' >' → logprob: -0.6931565999984741
    3. ' !=' → logprob: -13.193156242370605
    4. '0' → logprob: -13.318156242370605
    5. ' ' → logprob: -13.568156242370605
    6. '&gt' → logprob: -14.068156242370605
    7. ')>' → logprob: -14.443156242370605
    8. ')' → logprob: -14.443156242370605
    9. '()>' → logprob: -14.443156242370605
    10. '!=' → logprob: -14.818156242370605

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.37537956237793
    4. '  ' → logprob: -18.00037956237793
    5. '```' → logprob: -18.25037956237793
    6. '    ' → logprob: -19.12537956237793
    7. '
' → logprob: -19.12537956237793
    8. '۰' → logprob: -19.18787956237793
    9. ' ' → logprob: -19.50037956237793
    10. '>' → logprob: -19.56287956237793

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.125011444091797
    4. '```' → logprob: -19.125011444091797
    5. '۰' → logprob: -20.125011444091797
    6. '00' → logprob: -21.125011444091797
    7. '
' → logprob: -21.750011444091797
    8. '=' → logprob: -22.000011444091797
    9. '０' → logprob: -22.125011444091797
    10. '  ' → logprob: -22.250011444091797

Token 362: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10026545077562332
    2. 'else' → logprob: -2.3502655029296875
    3. '   ' → logprob: -10.100265502929688
    4. '	else' → logprob: -11.100265502929688
    5. '<|end|>' → logprob: -13.725265502929688
    6. '    ' → logprob: -14.475265502929688
    7. ' ' → logprob: -14.975265502929688
    8. 'elif' → logprob: -15.600265502929688
    9. ' elif' → logprob: -16.100265502929688
    10. ',' → logprob: -16.225265502929688

Token 363: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5801480412483215
    2. '-' → logprob: -1.4551479816436768
    3. ' float' → logprob: -2.2051479816436768
    4. ' -' → logprob: -3.0801479816436768
    5. '0' → logprob: -3.2051479816436768
    6. 'None' → logprob: -5.455148220062256
    7. ' ' → logprob: -6.205148220062256
    8. '-none' → logprob: -6.705148220062256
    9. '-f' → logprob: -7.205148220062256
    10. '   ' → logprob: -7.705148220062256

Token 364: '('-' (ID: 33343)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.40469181537628174
    2. ''' → logprob: -1.1546918153762817
    3. '('' → logprob: -4.279691696166992
    4. ''t' → logprob: -7.654691696166992
    5. ''ex' → logprob: -7.654691696166992
    6. ''il' → logprob: -8.404691696166992
    7. ''ins' → logprob: -8.404691696166992
    8. ''int' → logprob: -8.529691696166992
    9. ''any' → logprob: -8.654691696166992
    10. ''on' → logprob: -8.779691696166992

Token 365: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.128163257315464e-07
    2. 'in' → logprob: -15.125
    3. ''' → logprob: -17.0
    4. ''in' → logprob: -17.875
    5. 'info' → logprob: -18.125
    6. '_inf' → logprob: -18.125
    7. ' inf' → logprob: -18.75
    8. 'Inf' → logprob: -19.125
    9. 'oo' → logprob: -19.75
    10. '∞' → logprob: -20.0

Token 366: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12748150527477264
    2. '')
' → logprob: -2.127481460571289
    3. ')' → logprob: -7.752481460571289
    4. '')
' → logprob: -9.252481460571289
    5. ')
' → logprob: -11.752481460571289
    6. '')

' → logprob: -12.002481460571289
    7. '   ' → logprob: -12.002481460571289
    8. '")' → logprob: -12.752481460571289
    9. ''' → logprob: -13.377481460571289
    10. ' ')
' → logprob: -14.002481460571289

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06595496088266373
    2. 't' → logprob: -3.1909549236297607
    3. ' t' → logprob: -3.8159549236297607
    4. '
' → logprob: -7.81595516204834
    5. '```' → logprob: -9.69095516204834
    6. '	t' → logprob: -9.81595516204834
    7. '    ' → logprob: -9.94095516204834
    8. '    
' → logprob: -10.44095516204834
    9. ',' → logprob: -10.94095516204834
    10. '\t' → logprob: -11.19095516204834

Token 368: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38750654458999634
    2. 't' (adapté à ' t') → logprob: -1.1375064849853516
    3. ' t' → logprob: -7.387506484985352
    4. 'if' → logprob: -12.387506484985352
    5. '    ' → logprob: -12.637506484985352
    6. '```' → logprob: -12.637506484985352
    7. '    
' → logprob: -13.262506484985352
    8. '`t' → logprob: -13.887506484985352
    9. ' if' → logprob: -14.137506484985352
    10. '	t' → logprob: -14.512506484985352

Token 369: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0001576506474521011
    2. 'max' → logprob: -9.250157356262207
    3. '_min' → logprob: -9.750157356262207
    4. '_' → logprob: -13.125157356262207
    5. '_MAX' → logprob: -14.250157356262207
    6. '=' → logprob: -15.000157356262207
    7. 'Max' → logprob: -16.625158309936523
    8. ' =' → logprob: -16.750158309936523
    9. '_opt' → logprob: -18.000158309936523
    10. '_range' → logprob: -18.000158309936523

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '   ' → logprob: -18.443147659301758
    4. ')' → logprob: -19.693147659301758
    5. ' ' → logprob: -19.693147659301758
    6. '＝' → logprob: -20.068147659301758
    7. ' =)' → logprob: -20.568147659301758
    8. 's' → logprob: -20.693147659301758
    9. 'if' → logprob: -21.068147659301758
    10. '=int' → logprob: -21.068147659301758

Token 371: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2819748818874359
    2. '(y' → logprob: -1.5319749116897583
    3. ' y' → logprob: -3.5319747924804688
    4. ' (' → logprob: -8.406974792480469
    5. '(' → logprob: -9.031974792480469
    6. '   ' → logprob: -12.656974792480469
    7. 'int' → logprob: -13.781974792480469
    8. 'float' → logprob: -13.781974792480469
    9. ' ' → logprob: -13.906974792480469
    10. '	y' → logprob: -14.156974792480469

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.375000953674316
    3. 'o' → logprob: -16.25
    4. '   ' → logprob: -16.375
    5. '_' → logprob: -16.5
    6. '۰' → logprob: -16.75
    7. '```' → logprob: -17.25
    8. 'O' → logprob: -18.1875
    9. 'y' → logprob: -18.3125
    10. '０' → logprob: -18.375

Token 373: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.38687863945961
    2. ' //' → logprob: -1.1368786096572876
    3. '#' → logprob: -12.761878967285156
    4. ' ' → logprob: -13.261878967285156
    5. '   ' → logprob: -13.761878967285156
    6. ' ' → logprob: -14.136878967285156
    7. '
' → logprob: -14.386878967285156
    8. 'if' → logprob: -15.386878967285156
    9. ' if' → logprob: -16.511878967285156
    10. ' #' → logprob: -16.761878967285156

Token 374: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.5
    3. '   ' → logprob: -22.625
    4. '{k' → logprob: -23.25
    5. '(k' → logprob: -23.75
    6. '	k' → logprob: -23.875
    7. '(' → logprob: -25.375
    8. 'к' → logprob: -25.875
    9. ' ' → logprob: -26.5
    10. '  ' → logprob: -26.875

Token 375: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '₂' → logprob: -18.25
    4. '۲' → logprob: -18.625
    5. '```' → logprob: -20.0
    6. '２' → logprob: -20.0
    7. '_' → logprob: -20.8125
    8. '२' → logprob: -21.0625
    9. '২' → logprob: -21.25
    10. '   ' → logprob: -21.5625

Token 376: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03804688900709152
    2. 'if' → logprob: -3.2880468368530273
    3. '   ' → logprob: -12.288046836853027
    4. ' ' → logprob: -14.538046836853027
    5. '	if' → logprob: -15.413046836853027
    6. '<|end|>' → logprob: -16.038047790527344
    7. '    ' → logprob: -17.038047790527344
    8. '  ' → logprob: -17.913047790527344
    9. ' ' → logprob: -18.788047790527344
    10. ')' → logprob: -19.788047790527344

Token 377: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031790214125066996
    2. ' k' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.003178596496582
    4. '(k' → logprob: -15.253178596496582
    5. ' ' → logprob: -16.1281795501709
    6. '  ' → logprob: -16.7531795501709
    7. '	k' → logprob: -17.5031795501709
    8. '(' → logprob: -17.8781795501709
    9. '    ' → logprob: -18.2531795501709
    10. ' (' → logprob: -18.8781795501709

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014728360110893846
    2. 'k' → logprob: -8.875146865844727
    3. ' ' → logprob: -12.375146865844727
    4. ' k' → logprob: -13.375146865844727
    5. '!=' → logprob: -14.375146865844727
    6. '```' → logprob: -14.750146865844727
    7. '   ' → logprob: -15.375146865844727
    8. ' !=' → logprob: -15.750146865844727
    9. '  ' → logprob: -16.125146865844727
    10. '>' → logprob: -16.875146865844727

Token 379: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5985779762268066
    2. ' !=' → logprob: -0.8485779762268066
    3. '>' → logprob: -3.8485779762268066
    4. ' >' → logprob: -6.848577976226807
    5. '1' → logprob: -12.973577499389648
    6. 'else' → logprob: -13.223577499389648
    7. ' ' → logprob: -13.348577499389648
    8. '0' → logprob: -13.473577499389648
    9. ')!=' → logprob: -13.973577499389648
    10. '```' → logprob: -13.973577499389648

Token 380: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.625045776367188
    4. '```' → logprob: -16.562545776367188
    5. '
' → logprob: -17.500045776367188
    6. '>' → logprob: -17.750045776367188
    7. '۰' → logprob: -17.875045776367188
    8. ' ' → logprob: -18.125045776367188
    9. '  ' → logprob: -18.187545776367188
    10. '    ' → logprob: -18.312545776367188

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -17.000015258789062
    4. '   ' → logprob: -17.062515258789062
    5. '>' → logprob: -17.062515258789062
    6. '۰' → logprob: -18.250015258789062
    7. '
' → logprob: -18.937515258789062
    8. '  ' → logprob: -19.062515258789062
    9. '(' → logprob: -19.125015258789062
    10. '1' → logprob: -19.312515258789062

Token 382: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38691848516464233
    2. ' else' → logprob: -1.136918544769287
    3. '!=' → logprob: -10.761918067932129
    4. '   ' → logprob: -11.261918067932129
    5. ' ' → logprob: -12.136918067932129
    6. ' !=' → logprob: -12.511918067932129
    7. '    ' → logprob: -12.761918067932129
    8. ' is' → logprob: -15.011918067932129
    9. '  ' → logprob: -15.136918067932129
    10. '	else' → logprob: -16.011919021606445

Token 383: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00026169343618676066
    2. ' float' → logprob: -8.250261306762695
    3. '   ' → logprob: -14.875261306762695
    4. '  ' → logprob: -18.000261306762695
    5. '    ' → logprob: -18.000261306762695
    6. 'int' → logprob: -18.125261306762695
    7. '	float' → logprob: -18.875261306762695
    8. ' ' → logprob: -19.500261306762695
    9. 'flo' → logprob: -20.375261306762695
    10. 'f' → logprob: -21.125261306762695

Token 384: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.00418702932074666
    2. '('' → logprob: -5.879187107086182
    3. ''' → logprob: -7.004187107086182
    4. 'inf' → logprob: -8.129186630249023
    5. ''-' → logprob: -10.629186630249023
    6. ''ins' → logprob: -10.879186630249023
    7. ''act' → logprob: -11.254186630249023
    8. ''inc' → logprob: -11.504186630249023
    9. ''instant' → logprob: -11.754186630249023
    10. ''off' → logprob: -11.754186630249023

Token 385: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.05046506226062775
    2. ''in' → logprob: -3.0504651069641113
    3. ''' → logprob: -6.300465106964111
    4. ' inf' → logprob: -11.175464630126953
    5. 'float' → logprob: -11.300464630126953
    6. '-inf' → logprob: -11.925464630126953
    7. ''+' → logprob: -13.425464630126953
    8. '('' → logprob: -13.550464630126953
    9. ''inc' → logprob: -14.550464630126953
    10. ''off' → logprob: -14.675464630126953

Token 386: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16044022142887115
    2. ')' → logprob: -1.91044020652771
    3. '   ' → logprob: -8.535440444946289
    4. '')
' → logprob: -11.410440444946289
    5. '")' → logprob: -12.910440444946289
    6. '```' → logprob: -13.535440444946289
    7. '`)' → logprob: -14.035440444946289
    8. '}' → logprob: -14.160440444946289
    9. '}')' → logprob: -14.285440444946289
    10. '')

' → logprob: -14.410440444946289

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005802586209028959
    2. '```' → logprob: -6.380802631378174
    3. '    
' → logprob: -7.130802631378174
    4. '<|end|>' → logprob: -7.130802631378174
    5. 'c' → logprob: -7.255802631378174
    6. 't' → logprob: -7.505802631378174
    7. '
' → logprob: -7.755802631378174
    8. ' candidates' → logprob: -7.755802631378174
    9. '_candidates' → logprob: -8.630802154541016
    10. 'if' → logprob: -10.380802154541016

Token 388: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.174082413315773
    2. 'if' → logprob: -2.1740825176239014
    3. 'for' → logprob: -3.5490825176239014
    4. 't' → logprob: -4.674082279205322
    5. ' if' → logprob: -5.299082279205322
    6. ' for' → logprob: -6.674082279205322
    7. 'c' → logprob: -7.424082279205322
    8. '    
' → logprob: -8.29908275604248
    9. '<|end|>' → logprob: -8.42408275604248
    10. ' candidates' → logprob: -8.79908275604248

Token 389: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32944875955581665
    2. 'if' → logprob: -1.7044486999511719
    3. 'c' → logprob: -2.329448699951172
    4. 'import' → logprob: -7.329448699951172
    5. ' for' → logprob: -8.079448699951172
    6. ' candidates' → logprob: -8.704448699951172
    7. '#' → logprob: -8.829448699951172
    8. ' if' → logprob: -9.329448699951172
    9. '   ' → logprob: -10.329448699951172
    10. 'from' → logprob: -11.079448699951172

Token 390: ' k' (ID: 372)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5297823548316956
    2. ' diff' → logprob: -0.9047823548316956
    3. 'k' → logprob: -5.779782295227051
    4. 't' → logprob: -6.904782295227051
    5. ' k' → logprob: -7.029782295227051
    6. ' t' → logprob: -7.154782295227051
    7. 'abs' → logprob: -8.02978229522705
    8. ' abs' → logprob: -8.77978229522705
    9. 'd' → logprob: -9.02978229522705
    10. 'x' → logprob: -9.27978229522705

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7491250875755213e-05
    2. '2' → logprob: -11.125027656555176
    3. 'diff' → logprob: -11.875027656555176
    4. 'k' → logprob: -13.500027656555176
    5. ' ' → logprob: -14.000027656555176
    6. '_diff' → logprob: -14.437527656555176
    7. '```' → logprob: -14.687527656555176
    8. '_' → logprob: -15.125027656555176
    9. 'abs' → logprob: -15.625027656555176
    10. 'dif' → logprob: -15.625027656555176

Token 392: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4682064354419708
    2. ' !=' → logprob: -1.5932064056396484
    3. ' <=' → logprob: -2.2182064056396484
    4. ' <' → logprob: -3.4682064056396484
    5. '>' → logprob: -4.218206405639648
    6. ' >=' → logprob: -4.593206405639648
    7. '!=' → logprob: -5.593206405639648
    8. '<=' → logprob: -6.593206405639648
    9. ' ==' → logprob: -8.093206405639648
    10. '>=' → logprob: -8.718206405639648

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3695833683013916
    2. 'k' → logprob: -1.2445833683013916
    3. ' ' → logprob: -3.9945833683013916
    4. ' k' → logprob: -5.9945831298828125
    5. '   ' → logprob: -12.869583129882812
    6. '    ' → logprob: -12.994583129882812
    7. '  ' → logprob: -13.744583129882812
    8. '	k' → logprob: -14.494583129882812
    9. '=' → logprob: -14.619583129882812
    10. ')' → logprob: -14.994583129882812

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008796916343271732
    2. 'k' → logprob: -4.758796691894531
    3. ' ' → logprob: -8.633796691894531
    4. ' k' → logprob: -13.008796691894531
    5. '1' → logprob: -14.321296691894531
    6. '   ' → logprob: -15.196296691894531
    7. '```' → logprob: -15.321296691894531
    8. '#' → logprob: -16.32129669189453
    9. 'and' → logprob: -16.38379669189453
    10. '  ' → logprob: -16.57129669189453

Token 395: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015489769168198109
    2. ' or' → logprob: -4.64048957824707
    3. ':
' → logprob: -5.76548957824707
    4. '   ' → logprob: -6.64048957824707
    5. ' and' → logprob: -6.76548957824707
    6. 'and' → logprob: -9.51548957824707
    7. '       ' → logprob: -11.51548957824707
    8. '):' → logprob: -11.64048957824707
    9. ',' → logprob: -11.76548957824707
    10. ' :' → logprob: -11.89048957824707

Token 396: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.043012551963329315
    2. ' k' → logprob: -3.1680126190185547
    3. '(k' → logprob: -13.168012619018555
    4. '   ' → logprob: -13.293012619018555
    5. 't' → logprob: -13.543012619018555
    6. ' ' → logprob: -14.043012619018555
    7. '    ' → logprob: -14.168012619018555
    8. 'diff' → logprob: -14.543012619018555
    9. '	k' → logprob: -14.605512619018555
    10. '#' → logprob: -14.605512619018555

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.37500286102295
    3. '```' → logprob: -14.62500286102295
    4. ' ' → logprob: -14.75000286102295
    5. '==' → logprob: -16.437503814697266
    6. '``' → logprob: -16.625003814697266
    7. '₂' → logprob: -16.625003814697266
    8. ' ==' → logprob: -16.875003814697266
    9. '_' → logprob: -16.875003814697266
    10. '   ' → logprob: -17.062503814697266

Token 398: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2520258128643036
    2. '==' → logprob: -1.502025842666626
    3. ' !=' → logprob: -9.877025604248047
    4. '!=' → logprob: -10.877025604248047
    5. ' ' → logprob: -11.877025604248047
    6. '=' → logprob: -12.502025604248047
    7. '   ' → logprob: -12.877025604248047
    8. ' or' → logprob: -12.877025604248047
    9. '```' → logprob: -13.377025604248047
    10. '0' → logprob: -13.627025604248047

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606866303831339
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -15.007606506347656
    4. '```' → logprob: -16.007606506347656
    5. '  ' → logprob: -16.257606506347656
    6. '1' → logprob: -16.570106506347656
    7. '    ' → logprob: -17.757606506347656
    8. ' ' → logprob: -17.820106506347656
    9. '=' → logprob: -18.382606506347656
    10. '...' → logprob: -18.945106506347656

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018268341955263168
    2. ' ' → logprob: -8.62518310546875
    3. '```' → logprob: -14.25018310546875
    4. '   ' → logprob: -14.81268310546875
    5. '1' → logprob: -15.00018310546875
    6. 'zero' → logprob: -15.62518310546875
    7. '
' → logprob: -15.87518310546875
    8. 'None' → logprob: -16.12518310546875
    9. '=' → logprob: -16.31268310546875
    10. '...' → logprob: -16.43768310546875

Token 401: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028891870751976967
    2. '   ' → logprob: -3.9038918018341064
    3. ':
' → logprob: -4.9038920402526855
    4. '<|end|>' → logprob: -7.4038920402526855
    5. ',' → logprob: -8.778891563415527
    6. '<|end|>' → logprob: -10.403891563415527
    7. '       ' → logprob: -10.903891563415527
    8. '):' → logprob: -10.903891563415527
    9. '
' → logprob: -11.278891563415527
    10. ' and' → logprob: -11.403891563415527

Token 402: ' handle' (ID: 5318)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4264456629753113
    2. ' if' → logprob: -1.676445722579956
    3. 'if' → logprob: -2.426445722579956
    4. 't' → logprob: -2.926445722579956
    5. '#' → logprob: -4.926445484161377
    6. ' t' → logprob: -5.176445484161377
    7. ' candidates' → logprob: -6.551445484161377
    8. ' pass' → logprob: -6.676445484161377
    9. 'pass' → logprob: -7.301445484161377
    10. ' #' → logprob: -7.551445484161377

Token 403: ' accordingly' (ID: 44041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49690011143684387
    2. ' if' → logprob: -1.3719000816345215
    3. '   ' → logprob: -1.9969000816345215
    4. 't' → logprob: -7.4969000816345215
    5. 'continue' → logprob: -7.7469000816345215
    6. 'pass' → logprob: -8.12190055847168
    7. '```' → logprob: -8.49690055847168
    8. '    ' → logprob: -8.87190055847168
    9. ' continue' → logprob: -9.12190055847168
    10. '#' → logprob: -9.24690055847168

Token 404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005210278555750847
    2. '<|end|>' → logprob: -5.3802103996276855
    3. '    
' → logprob: -8.380209922790527
    4. '
' → logprob: -8.880209922790527
    5. ' if' → logprob: -9.130209922790527
    6. '<|end|>' → logprob: -9.880209922790527
    7. '```' → logprob: -10.755209922790527
    8. 'if' → logprob: -11.005209922790527
    9. '       ' → logprob: -12.005209922790527
    10. ',' → logprob: -12.130209922790527

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004899042658507824
    2. '<|end|>' → logprob: -5.504899024963379
    3. '    
' → logprob: -8.004899024963379
    4. ' if' → logprob: -8.879899024963379
    5. '
' → logprob: -9.004899024963379
    6. '<|end|>' → logprob: -9.629899024963379
    7. 'if' → logprob: -10.004899024963379
    8. '       ' → logprob: -10.254899024963379
    9. '    ' → logprob: -10.754899024963379
    10. ',' → logprob: -10.879899024963379

Token 406: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007847582921385765
    2. ' if' → logprob: -5.007847785949707
    3. 'if' (adapté à ' if') → logprob: -6.882847785949707
    4. '    
' → logprob: -9.882847785949707
    5. '    ' → logprob: -10.257847785949707
    6. '<|end|>' → logprob: -11.507847785949707
    7. '       ' → logprob: -13.132847785949707
    8. '
' → logprob: -13.257847785949707
    9. 't' → logprob: -13.507847785949707
    10. '```' → logprob: -14.007847785949707

Token 407: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4740963578224182
    2. 'k' → logprob: -0.9740963578224182
    3. '   ' → logprob: -11.974096298217773
    4. ' ' → logprob: -12.224096298217773
    5. '	k' → logprob: -13.099096298217773
    6. '(k' → logprob: -13.599096298217773
    7. '    ' → logprob: -13.724096298217773
    8. 'diff' → logprob: -14.099096298217773
    9. '  ' → logprob: -14.599096298217773
    10. ' diff' → logprob: -15.099096298217773

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '2' → logprob: -11.625009536743164
    3. '```' → logprob: -15.250009536743164
    4. '_' → logprob: -15.937509536743164
    5. '   ' → logprob: -16.812509536743164
    6. ' ' → logprob: -16.937509536743164
    7. '==' → logprob: -17.125009536743164
    8. '１' → logprob: -17.687509536743164
    9. ' ==' → logprob: -17.812509536743164
    10. '...' → logprob: -18.000009536743164

Token 409: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0244111567735672
    2. '==' → logprob: -3.774411201477051
    3. ' !=' → logprob: -6.774411201477051
    4. '!=' → logprob: -11.02441120147705
    5. ' ' → logprob: -12.52441120147705
    6. ' ==
' → logprob: -14.64941120147705
    7. '==
' → logprob: -14.77441120147705
    8. ')==' → logprob: -14.77441120147705
    9. ')' → logprob: -14.89941120147705
    10. '=' → logprob: -15.02441120147705

Token 410: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.62747573852539
    4. '=' → logprob: -16.00247573852539
    5. '  ' → logprob: -18.00247573852539
    6. '```' → logprob: -18.50247573852539
    7. '۰' → logprob: -18.68997573852539
    8. '    ' → logprob: -18.87747573852539
    9. '
' → logprob: -18.93997573852539
    10. '000' → logprob: -19.37747573852539

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '=' → logprob: -16.875335693359375
    5. '  ' → logprob: -18.062835693359375
    6. '۰' → logprob: -18.125335693359375
    7. '```' → logprob: -18.437835693359375
    8. '00' → logprob: -19.000335693359375
    9. '    ' → logprob: -19.187835693359375
    10. '==' → logprob: -19.187835693359375

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2558678686618805
    2. ':
' → logprob: -1.505867838859558
    3. ' and' → logprob: -6.255867958068848
    4. '   ' → logprob: -6.505867958068848
    5. '       ' → logprob: -8.505867958068848
    6. ' or' → logprob: -8.755867958068848
    7. 'and' → logprob: -9.380867958068848
    8. '):
' → logprob: -11.005867958068848
    9. '=' → logprob: -11.630867958068848
    10. ' :' → logprob: -11.755867958068848

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014035746455192566
    2. ' if' → logprob: -4.889035701751709
    3. 'if' → logprob: -5.764035701751709
    4. 't' → logprob: -6.014035701751709
    5. ' t' → logprob: -7.764035701751709
    6. '       ' → logprob: -8.139036178588867
    7. '    ' → logprob: -10.139036178588867
    8. '=' → logprob: -11.139036178588867
    9. '```' → logprob: -11.389036178588867
    10. ' for' → logprob: -11.639036178588867

Token 414: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8400946259498596
    2. 'if' (adapté à ' if') → logprob: -1.2150945663452148
    3. 't' → logprob: -1.5900945663452148
    4. ' t' → logprob: -3.090094566345215
    5. '   ' → logprob: -3.840094566345215
    6. '#' → logprob: -7.715094566345215
    7. ' for' → logprob: -9.590094566345215
    8. '    ' → logprob: -9.715094566345215
    9. 'for' → logprob: -9.715094566345215
    10. ' #' → logprob: -10.340094566345215

Token 415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5338635444641113
    2. 'y' → logprob: -1.1588635444641113
    3. ' y' → logprob: -2.6588635444641113
    4. ' x' → logprob: -3.5338635444641113
    5. '   ' → logprob: -8.533863067626953
    6. '0' → logprob: -9.033863067626953
    7. 'k' → logprob: -9.283863067626953
    8. ' ' → logprob: -9.408863067626953
    9. 't' → logprob: -10.408863067626953
    10. '  ' → logprob: -11.283863067626953

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. '_' → logprob: -16.25
    4. 'o' → logprob: -16.25
    5. '۰' → logprob: -17.5
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -18.375
    8. '1' → logprob: -18.4375
    9. '[' → logprob: -18.5625
    10. ')' → logprob: -18.625

Token 417: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3110469579696655
    2. ' <' → logprob: -1.4360469579696655
    3. '>=' → logprob: -3.686047077178955
    4. ' >=' → logprob: -5.436047077178955
    5. ' ' → logprob: -10.811046600341797
    6. ']>=' → logprob: -13.811046600341797
    7. '   ' → logprob: -14.186046600341797
    8. '[' → logprob: -14.311046600341797
    9. ')>=' → logprob: -14.311046600341797
    10. '<n' → logprob: -14.311046600341797

Token 418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '=' → logprob: -13.875020027160645
    4. '   ' → logprob: -14.750020027160645
    5. '۰' → logprob: -18.37502098083496
    6. '  ' → logprob: -19.00002098083496
    7. '```' → logprob: -19.50002098083496
    8. '       ' → logprob: -19.87502098083496
    9. '<|end|>' → logprob: -20.06252098083496
    10. '    ' → logprob: -20.31252098083496

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '=' → logprob: -16.875001907348633
    4. '۰' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.750001907348633
    6. ')' → logprob: -22.250001907348633
    7. '00' → logprob: -22.375001907348633
    8. '```' → logprob: -22.375001907348633
    9. 'zero' → logprob: -22.500001907348633
    10. '<|end|>' → logprob: -22.500001907348633

Token 420: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27501294016838074
    2. ':' → logprob: -1.9000129699707031
    3. '       ' → logprob: -2.775012969970703
    4. ' or' → logprob: -3.775012969970703
    5. '           ' → logprob: -5.650012969970703
    6. '   ' → logprob: -6.275012969970703
    7. ':return' → logprob: -9.775012969970703
    8. '):
' → logprob: -10.025012969970703
    9. ':
' → logprob: -11.025012969970703
    10. ' :
' → logprob: -11.275012969970703

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2016104757785797
    2. '       ' → logprob: -1.8266104459762573
    3. ' continue' → logprob: -3.951610565185547
    4. 'continue' → logprob: -6.326610565185547
    5. '   ' → logprob: -7.576610565185547
    6. ' break' → logprob: -10.076610565185547
    7. '	continue' → logprob: -11.576610565185547
    8. ' print' → logprob: -11.701610565185547
    9. '               ' → logprob: -11.826610565185547
    10. ' t' → logprob: -12.326610565185547

Token 422: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.012249325402081013
    2. ' continue' → logprob: -5.51224946975708
    3. 'print' → logprob: -5.51224946975708
    4. '   ' → logprob: -6.01224946975708
    5. 'break' → logprob: -7.13724946975708
    6. '       ' → logprob: -7.13724946975708
    7. '           ' → logprob: -10.762248992919922
    8. '	continue' → logprob: -11.387248992919922
    9. 'pass' → logprob: -12.012248992919922
    10. ' break' → logprob: -12.137248992919922

Token 423: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.30219489336013794
    2. ' continue' → logprob: -1.9271948337554932
    3. 'break' → logprob: -3.302194833755493
    4. '   ' → logprob: -3.427194833755493
    5. ' break' → logprob: -4.177195072174072
    6. '       ' → logprob: -4.302195072174072
    7. 'print' → logprob: -4.427195072174072
    8. '```' → logprob: -5.802195072174072
    9. ' print' → logprob: -6.927195072174072
    10. '           ' → logprob: -7.427195072174072

Token 424: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.040048133581876755
    2. 'solution' → logprob: -3.290048122406006
    3. ' solutions' → logprob: -7.790048122406006
    4. 'continue' → logprob: -8.040048599243164
    5. 'print' → logprob: -8.165048599243164
    6. ' print' → logprob: -8.290048599243164
    7. ' continue' → logprob: -8.665048599243164
    8. '   ' → logprob: -8.790048599243164
    9. ' possible' → logprob: -9.040048599243164
    10. 'solutions' → logprob: -9.290048599243164

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12910780310630798
    2. '           ' → logprob: -2.129107713699341
    3. ' continue' → logprob: -7.12910795211792
    4. '
' → logprob: -7.50410795211792
    5. ',' → logprob: -7.87910795211792
    6. 'continue' → logprob: -8.754107475280762
    7. '   ' → logprob: -9.129107475280762
    8. '        
' → logprob: -9.754107475280762
    9. '               ' → logprob: -10.504107475280762
    10. ':' → logprob: -11.129107475280762

Token 426: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1817716509103775
    2. '           ' → logprob: -1.8067716360092163
    3. ' continue' → logprob: -6.556771755218506
    4. 'continue' → logprob: -7.931771755218506
    5. '   ' → logprob: -8.681771278381348
    6. ',' → logprob: -10.556771278381348
    7. '               ' → logprob: -10.806771278381348
    8. '```' → logprob: -11.556771278381348
    9. '	continue' → logprob: -12.931771278381348
    10. '        
' → logprob: -12.931771278381348

Token 427: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06949304044246674
    2. ' continue' → logprob: -2.819493055343628
    3. 'print' → logprob: -5.444492816925049
    4. '   ' → logprob: -6.194492816925049
    5. '       ' → logprob: -7.319492816925049
    6. 'break' → logprob: -8.694493293762207
    7. ' print' → logprob: -9.194493293762207
    8. 'return' → logprob: -9.319493293762207
    9. 'pass' (adapté à ' pass') → logprob: -10.069493293762207
    10. ' break' → logprob: -11.069493293762207

Token 428: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37092825770378113
    2. '       ' → logprob: -1.2459282875061035
    3. '
' → logprob: -4.1209282875061035
    4. 'elif' → logprob: -5.2459282875061035
    5. 'else' → logprob: -7.9959282875061035
    6. '    
' → logprob: -9.245927810668945
    7. '<|end|>' → logprob: -9.620927810668945
    8. ' else' → logprob: -9.745927810668945
    9. ' elif' → logprob: -9.870927810668945
    10. '\
' → logprob: -10.370927810668945

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25412052869796753
    2. '   ' → logprob: -1.5041205883026123
    3. 'elif' → logprob: -6.504120349884033
    4. 'else' → logprob: -7.629120349884033
    5. ' else' → logprob: -9.504120826721191
    6. '<|end|>' → logprob: -10.129120826721191
    7. '           ' → logprob: -10.754120826721191
    8. ' elif' → logprob: -10.879120826721191
    9. '
' → logprob: -11.004120826721191
    10. 'continue' → logprob: -11.254120826721191

Token 430: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06576041877269745
    2. 'elif' → logprob: -2.940760374069214
    3. 'else' (adapté à ' else') → logprob: -4.565760612487793
    4. ' elif' → logprob: -8.815760612487793
    5. ' else' → logprob: -9.065760612487793
    6. '       ' → logprob: -9.315760612487793
    7. 'if' → logprob: -10.065760612487793
    8. '
' → logprob: -11.815760612487793
    9. 't' → logprob: -12.190760612487793
    10. 'continue' → logprob: -12.690760612487793

Token 431: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44810980558395386
    2. ':' → logprob: -1.5731098651885986
    3. '           ' → logprob: -2.3231098651885986
    4. ':
' → logprob: -2.9481098651885986
    5. '   ' → logprob: -5.9481096267700195
    6. ',' → logprob: -7.8231096267700195
    7. '<|end|>' → logprob: -9.57310962677002
    8. ' if' → logprob: -10.07310962677002
    9. '.' → logprob: -10.32310962677002
    10. ':

' → logprob: -10.82310962677002

Token 432: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09791270643472672
    2. '           ' → logprob: -2.8479127883911133
    3. '   ' → logprob: -4.097912788391113
    4. ' candidates' → logprob: -4.472912788391113
    5. 't' → logprob: -5.472912788391113
    6. 'c' → logprob: -6.847912788391113
    7. ' t' → logprob: -7.222912788391113
    8. ' if' → logprob: -7.222912788391113
    9. 'candidate' → logprob: -8.972912788391113
    10. ' for' → logprob: -9.222912788391113

Token 433: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07319110631942749
    2. ' candidates' → logprob: -2.9481911659240723
    3. 't' (adapté à ' t') → logprob: -4.573191165924072
    4. '   ' → logprob: -6.198191165924072
    5. ' if' → logprob: -6.198191165924072
    6. ' t' → logprob: -6.448191165924072
    7. 'if' → logprob: -6.698191165924072
    8. ' c' → logprob: -7.323191165924072
    9. ' for' → logprob: -8.948190689086914
    10. 'for' → logprob: -9.948190689086914

Token 434: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22021381556987762
    2. '_candidates' → logprob: -1.845213770866394
    3. ' =' → logprob: -3.5952138900756836
    4. '_min' → logprob: -5.595213890075684
    5. 's' → logprob: -5.845213890075684
    6. '_max' → logprob: -6.095213890075684
    7. 'c' → logprob: -6.470213890075684
    8. '.append' → logprob: -7.470213890075684
    9. '=c' → logprob: -7.845213890075684
    10. 'min' → logprob: -7.845213890075684

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.126929372549057
    2. ' =' → logprob: -2.12692928314209
    3. ',' → logprob: -13.62692928314209
    4. '0' → logprob: -17.126930236816406
    5. ' ' → logprob: -18.251930236816406
    6. '=float' → logprob: -18.501930236816406
    7. 't' → logprob: -18.626930236816406
    8. '=-' → logprob: -18.626930236816406
    9. '=int' → logprob: -18.751930236816406
    10. '=
' → logprob: -19.126930236816406

Token 436: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0017539531690999866
    2. '0' → logprob: -6.376753807067871
    3. ' float' → logprob: -10.001753807067871
    4. 'int' → logprob: -12.876753807067871
    5. 't' → logprob: -13.001753807067871
    6. '-' → logprob: -14.376753807067871
    7. '(float' → logprob: -14.876753807067871
    8. 'flo' → logprob: -15.251753807067871
    9. '=float' → logprob: -16.501754760742188
    10. ' ' → logprob: -16.626754760742188

Token 437: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.02669130265712738
    2. ''-' → logprob: -3.651691198348999
    3. '('' → logprob: -8.026691436767578
    4. '['' → logprob: -10.401691436767578
    5. '(' → logprob: -10.526691436767578
    6. '-' → logprob: -12.276691436767578
    7. '("-' → logprob: -13.651691436767578
    8. ''s' → logprob: -15.276691436767578
    9. ' ('' → logprob: -15.776691436767578
    10. '   ' → logprob: -15.901691436767578

Token 438: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ' inf' → logprob: -19.875
    3. '100' → logprob: -21.75
    4. '1' → logprob: -23.0
    5. '10' → logprob: -23.0
    6. '.inf' → logprob: -23.125
    7. '8' → logprob: -23.375
    8. 'in' → logprob: -23.5
    9. '-inf' → logprob: -23.5
    10. '_inf' → logprob: -23.75

Token 439: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22950983047485352
    2. '')' → logprob: -2.2295098304748535
    3. '')
' → logprob: -3.1045098304748535
    4. ')
' → logprob: -3.6045098304748535
    5. '   ' → logprob: -3.8545098304748535
    6. '<|end|>' → logprob: -5.8545098304748535
    7. '       ' → logprob: -7.4795098304748535
    8. '<|end|>' → logprob: -7.7295098304748535
    9. '")' → logprob: -8.979509353637695
    10. '           ' → logprob: -9.479509353637695

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010487660765647888
    2. 'if' → logprob: -7.501048564910889
    3. '<|end|>' → logprob: -8.251049041748047
    4. 'elif' → logprob: -9.626049041748047
    5. ' if' → logprob: -9.626049041748047
    6. '       ' → logprob: -10.001049041748047
    7. 'else' → logprob: -10.501049041748047
    8. '    ' → logprob: -11.876049041748047
    9. '           ' → logprob: -12.251049041748047
    10. '```' → logprob: -12.626049041748047

Token 441: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013060718774795532
    2. ' if' → logprob: -7.376306056976318
    3. 'if' (adapté à ' if') → logprob: -7.501306056976318
    4. '<|end|>' → logprob: -9.626306533813477
    5. 'elif' → logprob: -10.501306533813477
    6. '```' → logprob: -11.251306533813477
    7. '    
' → logprob: -11.751306533813477
    8. 'else' → logprob: -12.751306533813477
    9. '    ' → logprob: -13.626306533813477
    10. ')' → logprob: -13.626306533813477

Token 442: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.693148672580719
    2. ' k' → logprob: -0.693148672580719
    3. '   ' → logprob: -14.568148612976074
    4. '	k' → logprob: -14.568148612976074
    5. '(k' → logprob: -15.818148612976074
    6. ' ' → logprob: -16.19314956665039
    7. '{k' → logprob: -16.44314956665039
    8. '    ' → logprob: -17.56814956665039
    9. ' к' → logprob: -17.56814956665039
    10. 'not' → logprob: -17.56814956665039

Token 443: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -15.875
    4. '   ' → logprob: -16.75
    5. '1' → logprob: -17.125
    6. '_' → logprob: -17.4375
    7. '₂' → logprob: -17.5
    8. '۲' → logprob: -17.5625
    9. '２' → logprob: -18.0625
    10. '``' → logprob: -18.9375

Token 444: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002117469906807
    2. '==' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.350212097167969
    4. '==
' → logprob: -14.600212097167969
    5. '0' → logprob: -16.60021209716797
    6. ' !=' → logprob: -16.72521209716797
    7. ')==' → logprob: -16.85021209716797
    8. ']==' → logprob: -17.10021209716797
    9. ' ==
' → logprob: -17.10021209716797
    10. ' ' → logprob: -17.47521209716797

Token 445: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001503790495917201
    2. ' ' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.501503944396973
    4. '  ' → logprob: -16.876502990722656
    5. '    ' → logprob: -17.564002990722656
    6. ' ' → logprob: -17.814002990722656
    7. '=' → logprob: -18.626502990722656
    8. '۰' → logprob: -18.751502990722656
    9. '```' → logprob: -19.064002990722656
    10. '1' → logprob: -19.189002990722656

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.125052452087402
    4. '  ' → logprob: -16.75005340576172
    5. 'float' → logprob: -17.31255340576172
    6. '```' → logprob: -17.68755340576172
    7. '    ' → logprob: -17.81255340576172
    8. '1' → logprob: -17.87505340576172
    9. '۰' → logprob: -17.93755340576172
    10. ' ' → logprob: -18.18755340576172

Token 447: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19096529483795166
    2. '=' → logprob: -2.315965175628662
    3. ':
' → logprob: -3.315965175628662
    4. '==' → logprob: -3.440965175628662
    5. ' ==' → logprob: -5.940965175628662
    6. '       ' → logprob: -6.315965175628662
    7. ' =' → logprob: -6.565965175628662
    8. '   ' → logprob: -7.190965175628662
    9. '    ' → logprob: -10.06596565246582
    10. '>' → logprob: -10.31596565246582

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014285735785961151
    2. '   ' → logprob: -4.764285564422607
    3. ' if' → logprob: -5.389285564422607
    4. ':' → logprob: -7.764285564422607
    5. 'if' → logprob: -8.639286041259766
    6. '    ' → logprob: -8.764286041259766
    7. ':
' → logprob: -8.889286041259766
    8. '<|end|>' → logprob: -10.264286041259766
    9. '):
' → logprob: -10.264286041259766
    10. '     ' → logprob: -10.764286041259766

Token 449: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39281216263771057
    2. 'if' (adapté à ' if') → logprob: -1.1428121328353882
    3. '   ' → logprob: -5.142812252044678
    4. '       ' → logprob: -9.51781177520752
    5. '    ' → logprob: -12.26781177520752
    6. '```' → logprob: -13.39281177520752
    7. '           ' → logprob: -13.51781177520752
    8. ' ' → logprob: -14.76781177520752
    9. '	if' → logprob: -14.76781177520752
    10. 't' → logprob: -16.017812728881836

Token 450: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10027405619621277
    2. ' y' → logprob: -2.475274085998535
    3. 'x' → logprob: -4.600274085998535
    4. 't' → logprob: -7.475274085998535
    5. ' x' → logprob: -8.475274085998535
    6. '0' → logprob: -8.600274085998535
    7. 'k' → logprob: -9.225274085998535
    8. ' t' → logprob: -9.850274085998535
    9. '   ' → logprob: -10.100274085998535
    10. '-y' → logprob: -10.725274085998535

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.500000953674316
    3. 'o' → logprob: -15.125000953674316
    4. '_' → logprob: -15.750000953674316
    5. '<' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. '۰' → logprob: -17.437501907348633
    9. 'O' → logprob: -17.812501907348633
    10. '1' → logprob: -17.812501907348633

Token 452: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3868735730648041
    2. '<' → logprob: -1.1368736028671265
    3. ' ' → logprob: -13.261873245239258
    4. '<int' → logprob: -15.636873245239258
    5. '<class' → logprob: -16.636873245239258
    6. ')' → logprob: -16.636873245239258
    7. ')<' → logprob: -16.761873245239258
    8. '<float' → logprob: -16.761873245239258
    9. '[' → logprob: -16.886873245239258
    10. '   ' → logprob: -17.011873245239258

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007607339881360531
    2. ' ' → logprob: -4.882607460021973
    3. '=' → logprob: -14.007607460021973
    4. '   ' → logprob: -15.257607460021973
    5. '  ' → logprob: -16.507606506347656
    6. '1' → logprob: -16.757606506347656
    7. ' =' → logprob: -17.257606506347656
    8. '    ' → logprob: -17.382606506347656
    9. 'float' → logprob: -17.507606506347656
    10. '```' → logprob: -18.695106506347656

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.500030517578125
    4. '=' → logprob: -19.250030517578125
    5. '  ' → logprob: -19.375030517578125
    6. '۰' → logprob: -19.812530517578125
    7. 'float' → logprob: -20.125030517578125
    8. '[' → logprob: -20.187530517578125
    9. '    ' → logprob: -20.187530517578125
    10. ')' → logprob: -20.375030517578125

Token 455: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17077620327472687
    2. ':' → logprob: -1.9207762479782104
    3. '           ' → logprob: -4.7957763671875
    4. '       ' → logprob: -6.1707763671875
    5. '):
' → logprob: -9.5457763671875
    6. ' :
' → logprob: -10.9207763671875
    7. ':

' → logprob: -11.1707763671875
    8. '   ' → logprob: -11.2957763671875
    9. ',' → logprob: -12.1707763671875
    10. '          ' → logprob: -12.4207763671875

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005867527215741575
    2. '       ' → logprob: -8.12558650970459
    3. 'pass' → logprob: -9.37558650970459
    4. '#' → logprob: -9.50058650970459
    5. ' pass' → logprob: -9.50058650970459
    6. 't' → logprob: -10.75058650970459
    7. '   ' → logprob: -11.00058650970459
    8. ' t' → logprob: -12.00058650970459
    9. ' #' → logprob: -12.50058650970459
    10. '          ' → logprob: -12.87558650970459

Token 457: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.2052634060382843
    2. '       ' → logprob: -2.205263376235962
    3. 'pass' → logprob: -3.205263376235962
    4. '           ' → logprob: -3.455263376235962
    5. '#' (adapté à ' #') → logprob: -6.080263614654541
    6. ' continue' → logprob: -8.330263137817383
    7. ' #' → logprob: -8.330263137817383
    8. ' t' → logprob: -8.830263137817383
    9. '   ' → logprob: -9.580263137817383
    10. 't' → logprob: -9.580263137817383

Token 458: ' no' (ID: 860)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.22053974866867065
    2. 'pass' → logprob: -1.8455398082733154
    3. '           ' → logprob: -3.8455398082733154
    4. ' continue' → logprob: -5.220539569854736
    5. '       ' → logprob: -5.470539569854736
    6. 'continue' → logprob: -5.470539569854736
    7. ' break' → logprob: -5.845539569854736
    8. 'break' → logprob: -6.595539569854736
    9. ' t' → logprob: -8.970540046691895
    10. '#' → logprob: -9.095540046691895

Token 459: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.02725987881422043
    2. ' solution' → logprob: -3.6522598266601562
    3. 'return' → logprob: -7.152259826660156
    4. 'break' → logprob: -9.527259826660156
    5. '           ' → logprob: -10.402259826660156
    6. ' return' → logprob: -11.152259826660156
    7. 'continue' → logprob: -11.152259826660156
    8. 'pass' → logprob: -11.402259826660156
    9. '       ' → logprob: -12.027259826660156
    10. 'print' → logprob: -12.152259826660156

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12785565853118896
    2. '           ' → logprob: -2.1278557777404785
    3. '   ' → logprob: -7.7528557777404785
    4. ',' → logprob: -8.50285530090332
    5. '<|end|>' → logprob: -8.75285530090332
    6. '```' → logprob: -10.62785530090332
    7. ')' → logprob: -10.75285530090332
    8. '               ' → logprob: -10.75285530090332
    9. '
' → logprob: -11.12785530090332
    10. '<|end|>' → logprob: -11.62785530090332

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5761892199516296
    2. '       ' → logprob: -0.8261892199516296
    3. '   ' → logprob: -9.076189041137695
    4. ',' → logprob: -10.076189041137695
    5. '               ' → logprob: -10.701189041137695
    6. '```' → logprob: -11.076189041137695
    7. ' pass' → logprob: -11.451189041137695
    8. 'pass' → logprob: -11.826189041137695
    9. 'continue' → logprob: -11.951189041137695
    10. ')' → logprob: -12.451189041137695

Token 462: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.2697327136993408
    2. 'pass' (adapté à ' pass') → logprob: -1.5197327136993408
    3. '           ' → logprob: -4.769732475280762
    4. '       ' → logprob: -5.644732475280762
    5. ' continue' → logprob: -5.894732475280762
    6. 'continue' → logprob: -6.019732475280762
    7. ' break' → logprob: -8.519732475280762
    8. 'break' → logprob: -8.769732475280762
    9. 'return' → logprob: -10.644732475280762
    10. '   ' → logprob: -10.769732475280762

Token 463: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001446611131541431
    2. 'else' → logprob: -9.500144958496094
    3. '   ' → logprob: -10.625144958496094
    4. ',' → logprob: -11.000144958496094
    5. ' else' → logprob: -11.375144958496094
    6. '<|end|>' → logprob: -12.125144958496094
    7. '           ' → logprob: -12.375144958496094
    8. ')' → logprob: -13.000144958496094
    9. '
' → logprob: -13.500144958496094
    10. '```' → logprob: -13.875144958496094

Token 464: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14995288848876953
    2. '       ' → logprob: -2.0249528884887695
    3. 'else' → logprob: -5.2749528884887695
    4. ' else' → logprob: -6.5249528884887695
    5. ')' → logprob: -8.52495288848877
    6. ',' → logprob: -9.02495288848877
    7. '<|end|>' → logprob: -9.02495288848877
    8. 't' → logprob: -9.52495288848877
    9. '```' → logprob: -9.89995288848877
    10. '    ' → logprob: -11.02495288848877

Token 465: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16581249237060547
    2. '       ' → logprob: -2.0408124923706055
    3. ' else' → logprob: -4.1658124923706055
    4. '   ' → logprob: -4.9158124923706055
    5. 't' → logprob: -12.165812492370605
    6. '           ' → logprob: -12.790812492370605
    7. ' ' → logprob: -13.290812492370605
    8. ',' → logprob: -13.290812492370605
    9. '	else' → logprob: -13.290812492370605
    10. '```' → logprob: -13.415812492370605

Token 466: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008105874061584473
    2. ':' → logprob: -4.883105754852295
    3. '       ' → logprob: -8.133106231689453
    4. ':
' → logprob: -8.758106231689453
    5. '   ' → logprob: -10.758106231689453
    6. '               ' → logprob: -11.258106231689453
    7. 't' → logprob: -11.883106231689453
    8. ',' → logprob: -12.883106231689453
    9. '          ' → logprob: -13.258106231689453
    10. ' :' → logprob: -14.383106231689453

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007591364439576864
    2. '       ' → logprob: -5.007591247558594
    3. 't' → logprob: -7.382591247558594
    4. ' t' → logprob: -8.757591247558594
    5. '   ' → logprob: -9.632591247558594
    6. '        ' → logprob: -11.757591247558594
    7. '          ' → logprob: -11.757591247558594
    8. '            ' → logprob: -12.257591247558594
    9. '         ' → logprob: -12.882591247558594
    10. '               ' → logprob: -12.882591247558594

Token 468: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.2562508285045624
    2. ' t' → logprob: -1.5062508583068848
    3. '   ' → logprob: -6.006250858306885
    4. '           ' → logprob: -6.381250858306885
    5. '       ' → logprob: -9.006250381469727
    6. '    ' → logprob: -11.381250381469727
    7. '	t' → logprob: -12.256250381469727
    8. '  ' → logprob: -12.756250381469727
    9. '            ' → logprob: -12.881250381469727
    10. ' ' → logprob: -13.006250381469727

Token 469: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.025675980374217033
    2. 'max' → logprob: -3.7756760120391846
    3. '_min' → logprob: -6.0256757736206055
    4. 'min' → logprob: -11.400675773620605
    5. 'Max' → logprob: -15.275675773620605
    6. '=' → logprob: -16.025676727294922
    7. '_MAX' → logprob: -17.650676727294922
    8. ' max' → logprob: -18.525676727294922
    9. '   ' → logprob: -18.900676727294922
    10. 'maximize' → logprob: -19.275676727294922

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '   ' → logprob: -19.38604736328125
    4. '=float' → logprob: -19.76104736328125
    5. ' ' → logprob: -20.51104736328125
    6. '```' → logprob: -21.38604736328125
    7. '＝' → logprob: -21.76104736328125
    8. '=
' → logprob: -22.01104736328125
    9. '==' → logprob: -22.13604736328125
    10. '=

' → logprob: -22.38604736328125

Token 471: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.493430894101039e-05
    2. ' float' → logprob: -9.500075340270996
    3. 'int' → logprob: -17.62507438659668
    4. 'flo' → logprob: -17.62507438659668
    5. '	float' → logprob: -18.12507438659668
    6. '   ' → logprob: -18.25007438659668
    7. 'fl' → logprob: -19.87507438659668
    8. '=float' → logprob: -20.00007438659668
    9. '(float' → logprob: -20.12507438659668
    10. ' ' → logprob: -20.12507438659668

Token 472: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06217718496918678
    2. ''in' → logprob: -2.8121771812438965
    3. ''' → logprob: -8.562177658081055
    4. ''inc' → logprob: -11.937177658081055
    5. '('-' → logprob: -13.312177658081055
    6. 'inf' → logprob: -13.687177658081055
    7. ''s' → logprob: -13.812177658081055
    8. ''exp' → logprob: -13.812177658081055
    9. ''-' → logprob: -14.187177658081055
    10. '   ' → logprob: -14.312177658081055

Token 473: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.3135329484939575
    2. 'inf' → logprob: -1.3135329484939575
    3. ''' → logprob: -8.813532829284668
    4. ' inf' → logprob: -9.188532829284668
    5. ' '' → logprob: -12.063532829284668
    6. '('' → logprob: -12.313532829284668
    7. '-inf' → logprob: -12.438532829284668
    8. ''s' → logprob: -13.813532829284668
    9. '`' → logprob: -14.438532829284668
    10. '   ' → logprob: -14.688532829284668

Token 474: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18015208840370178
    2. '')' → logprob: -1.8051520586013794
    3. '   ' → logprob: -8.05515193939209
    4. '")' → logprob: -10.55515193939209
    5. '')
' → logprob: -10.93015193939209
    6. ')
' → logprob: -11.18015193939209
    7. '}' → logprob: -11.30515193939209
    8. '<|end|>' → logprob: -12.18015193939209
    9. '`)' → logprob: -12.30515193939209
    10. '       ' → logprob: -12.43015193939209

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08417066931724548
    2. '
' → logprob: -3.2091705799102783
    3. 'c' → logprob: -3.8341705799102783
    4. ' candidates' → logprob: -4.834170818328857
    5. 't' → logprob: -5.209170818328857
    6. '    
' → logprob: -6.084170818328857
    7. '<|end|>' → logprob: -6.709170818328857
    8. '_candidates' → logprob: -7.709170818328857
    9. '```' → logprob: -7.834170818328857
    10. 'if' → logprob: -8.5841703414917

Token 476: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6144726276397705
    2. 'if' → logprob: -1.3644726276397705
    3. 'c' → logprob: -1.6144726276397705
    4. '   ' → logprob: -5.489472389221191
    5. 'import' → logprob: -8.364472389221191
    6. '#' (adapté à ' #') → logprob: -9.614472389221191
    7. 't' → logprob: -10.364472389221191
    8. ' candidates' → logprob: -10.739472389221191
    9. 'possible' → logprob: -11.114472389221191
    10. ' for' → logprob: -11.114472389221191

Token 477: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6384009718894958
    2. 'if' → logprob: -1.2634010314941406
    3. 'c' → logprob: -1.7634010314941406
    4. 'import' → logprob: -4.263401031494141
    5. 'from' → logprob: -6.263401031494141
    6. '#' → logprob: -6.888401031494141
    7. ' candidates' → logprob: -8.51340103149414
    8. ' for' → logprob: -8.63840103149414
    9. '   ' → logprob: -8.63840103149414
    10. ' if' → logprob: -9.38840103149414

Token 478: ' we' (ID: 581)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6475078463554382
    2. ' diff' → logprob: -1.272507905960083
    3. 'abs' → logprob: -2.022507905960083
    4. ' abs' → logprob: -3.772507905960083
    5. '(diff' → logprob: -3.897507905960083
    6. '(abs' → logprob: -5.022507667541504
    7. ' candidates' → logprob: -5.147507667541504
    8. '(k' → logprob: -6.397507667541504
    9. 'k' → logprob: -6.522507667541504
    10. ' (' → logprob: -6.522507667541504

Token 479: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3292015790939331
    2. '#' → logprob: -2.3292016983032227
    3. 'can' → logprob: -2.4542016983032227
    4. ' want' → logprob: -3.4542016983032227
    5. ' #' → logprob: -3.9542016983032227
    6. '   ' → logprob: -4.454201698303223
    7. ' have' → logprob: -4.829201698303223
    8. 'have' → logprob: -4.954201698303223
    9. ' cannot' → logprob: -5.579201698303223
    10. 'consider' → logprob: -5.704201698303223

Token 480: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4920557737350464
    2. 'abs' → logprob: -1.8670557737350464
    3. 'min' → logprob: -1.8670557737350464
    4. ' candidates' → logprob: -1.9920557737350464
    5. '   ' → logprob: -2.367055892944336
    6. '#' → logprob: -2.492055892944336
    7. '0' → logprob: -3.117055892944336
    8. ' t' → logprob: -3.492055892944336
    9. '
' → logprob: -4.492055892944336
    10. 'int' → logprob: -4.617055892944336

Token 481: ' x' (ID: 1215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1037771701812744
    2. 'abs' → logprob: -1.1037771701812744
    3. 'total' → logprob: -1.8537771701812744
    4. 'c' → logprob: -2.4787771701812744
    5. 'sum' → logprob: -2.6037771701812744
    6. 'if' → logprob: -4.853776931762695
    7. 'for' → logprob: -5.853776931762695
    8. ' total' → logprob: -5.978776931762695
    9. ' t' → logprob: -6.103776931762695
    10. ' candidates' → logprob: -6.603776931762695

Token 482: '+y' (ID: 102753)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30294662714004517
    2. ',' → logprob: -1.5529465675354004
    3. '_candidates' → logprob: -3.9279465675354004
    4. '_min' → logprob: -4.5529465675354
    5. ' and' → logprob: -6.0529465675354
    6. '   ' → logprob: -6.0529465675354
    7. '+' → logprob: -6.1779465675354
    8. 'and' → logprob: -6.3029465675354
    9. 'or' → logprob: -6.6779465675354
    10. '#' → logprob: -6.6779465675354

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7038055062294006
    2. '   ' → logprob: -0.7038055062294006
    3. ' if' → logprob: -5.703805446624756
    4. 'if' → logprob: -6.328805446624756
    5. ':' → logprob: -6.578805446624756
    6. 'for' → logprob: -7.203805446624756
    7. 'c' → logprob: -7.328805446624756
    8. ' for' → logprob: -7.578805446624756
    9. ' candidates' → logprob: -7.578805446624756
    10. ',
' → logprob: -7.703805446624756

Token 484: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6912307739257812
    2. 'if' → logprob: -1.1912307739257812
    3. 'for' → logprob: -2.4412307739257812
    4. ' if' → logprob: -2.5662307739257812
    5. 'c' → logprob: -4.066230773925781
    6. ' for' → logprob: -4.941230773925781
    7. ' candidates' → logprob: -5.066230773925781
    8. 't' → logprob: -7.566230773925781
    9. '
' → logprob: -9.941230773925781
    10. 'import' → logprob: -10.191230773925781

Token 485: ' is' (ID: 382)
  Prédit: 'depends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depends' → logprob: -0.2656615376472473
    2. ' depends' → logprob: -2.0156614780426025
    3. '=' → logprob: -4.015661716461182
    4. ' is' → logprob: -4.140661716461182
    5. 'is' → logprob: -4.265661716461182
    6. '   ' → logprob: -4.390661716461182
    7. ' can' → logprob: -4.390661716461182
    8. 'can' → logprob: -4.515661716461182
    9. ' =' → logprob: -5.265661716461182
    10. '#' → logprob: -5.515661716461182

Token 486: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.710175096988678
    2. 'diff' → logprob: -1.8351750373840332
    3. ' t' → logprob: -2.085175037384033
    4. '   ' → logprob: -2.710175037384033
    5. 'min' → logprob: -2.710175037384033
    6. ' diff' → logprob: -4.085175037384033
    7. 'x' → logprob: -4.210175037384033
    8. '0' → logprob: -4.335175037384033
    9. ' x' → logprob: -5.085175037384033
    10. ' minimized' → logprob: -5.085175037384033

Token 487: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8493674993515015
    2. ' =' → logprob: -1.2243674993515015
    3. ',' → logprob: -1.9743674993515015
    4. '=' → logprob: -2.599367618560791
    5. '_candidates' → logprob: -3.599367618560791
    6. '#' → logprob: -4.474367618560791
    7. ' if' → logprob: -5.224367618560791
    8. ')' → logprob: -6.224367618560791
    9. ' candidates' → logprob: -6.349367618560791
    10. ' +=' → logprob: -6.724367618560791

Token 488: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020845023915171623
    2. ' x' → logprob: -3.8958449363708496
    3. '   ' → logprob: -8.895845413208008
    4. '(x' → logprob: -9.395845413208008
    5. 'int' → logprob: -10.395845413208008
    6. ' ' → logprob: -10.520845413208008
    7. '  ' → logprob: -11.145845413208008
    8. ' int' → logprob: -12.395845413208008
    9. ' (' → logprob: -13.270845413208008
    10. '    ' → logprob: -13.520845413208008

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038986308500170708
    2. '+' → logprob: -6.253898620605469
    3. ' +' → logprob: -7.378898620605469
    4. '   ' → logprob: -8.003898620605469
    5. '_sum' → logprob: -8.378898620605469
    6. 'sum' → logprob: -8.878898620605469
    7. '_' → logprob: -9.003898620605469
    8. ',' → logprob: -9.503898620605469
    9. ' =' → logprob: -10.253898620605469
    10. '=' → logprob: -10.253898620605469

Token 490: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9792270064353943
    2. 'if' → logprob: -1.354227066040039
    3. ' if' → logprob: -1.854227066040039
    4. '+' → logprob: -2.104227066040039
    5. ' +' → logprob: -3.104227066040039
    6. '   ' → logprob: -4.854227066040039
    7. '_min' → logprob: -4.979227066040039
    8. '-' → logprob: -5.354227066040039
    9. '
' → logprob: -5.479227066040039
    10. '0' → logprob: -5.729227066040039

Token 491: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011057846248149872
    2. ' y' → logprob: -4.5110578536987305
    3. '(y' → logprob: -11.88605785369873
    4. '   ' → logprob: -13.88605785369873
    5. ' ' → logprob: -14.26105785369873
    6. 'diff' → logprob: -14.38605785369873
    7. '  ' → logprob: -16.136056900024414
    8. '    ' → logprob: -16.261056900024414
    9. '+y' → logprob: -16.386056900024414
    10. '	y' → logprob: -16.511056900024414

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015038289711810648
    2. '   ' → logprob: -10.375150680541992
    3. ' ' → logprob: -10.375150680541992
    4. ',' → logprob: -11.000150680541992
    5. '_' → logprob: -11.125150680541992
    6. '+' → logprob: -11.125150680541992
    7. '_sum' → logprob: -11.875150680541992
    8. '```' → logprob: -11.875150680541992
    9. ' +' → logprob: -12.500150680541992
    10. ')' → logprob: -12.875150680541992

Token 493: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39119070768356323
    2. '   ' → logprob: -1.641190767288208
    3. '
' → logprob: -3.016190767288208
    4. ',
' → logprob: -3.391190767288208
    5. ' +' → logprob: -4.516190528869629
    6. ' if' → logprob: -4.891190528869629
    7. '+' → logprob: -5.016190528869629
    8. ' ,' → logprob: -5.141190528869629
    9. 'c' → logprob: -6.141190528869629
    10. ' candidates' → logprob: -6.391190528869629

Token 494: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3023940324783325
    2. 'diff' → logprob: -1.8023940324783325
    3. ' diff' → logprob: -3.052393913269043
    4. ' t' → logprob: -3.052393913269043
    5. '1' → logprob: -6.927393913269043
    6. '(diff' → logprob: -7.677393913269043
    7. '(' → logprob: -10.552393913269043
    8. '(t' → logprob: -10.677393913269043
    9. ' ' → logprob: -11.052393913269043
    10. ' (' → logprob: -11.302393913269043

Token 495: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4411449730396271
    2. '*(' → logprob: -1.1911449432373047
    3. ' *' → logprob: -2.9411449432373047
    4. '*((' → logprob: -12.316144943237305
    5. ' *(' → logprob: -12.566144943237305
    6. '**' → logprob: -12.566144943237305
    7. '*(-' → logprob: -12.816144943237305
    8. '*\' → logprob: -13.066144943237305
    9. '*
' → logprob: -13.941144943237305
    10. '*d' → logprob: -14.066144943237305

Token 496: 'k' (ID: 74)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0015087933279573917
    2. ' diff' → logprob: -6.501508712768555
    3. '(diff' → logprob: -12.001508712768555
    4. 'k' → logprob: -15.876508712768555
    5. '	diff' → logprob: -16.251508712768555
    6. '(k' → logprob: -17.626508712768555
    7. 'difference' → logprob: -18.251508712768555
    8. 'dif' → logprob: -19.001508712768555
    9. ' ' → logprob: -19.126508712768555
    10. ' (' → logprob: -19.626508712768555

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ')' → logprob: -11.625019073486328
    3. 'diff' → logprob: -12.875019073486328
    4. ' ' → logprob: -13.375019073486328
    5. '_diff' → logprob: -13.500019073486328
    6. '_' → logprob: -13.875019073486328
    7. '
' → logprob: -14.125019073486328
    8. ' -' → logprob: -14.750019073486328
    9. '(k' → logprob: -15.125019073486328
    10. '<|end|>' → logprob: -15.250019073486328

Token 498: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.29672661423683167
    2. ')' → logprob: -1.5467265844345093
    3. '-' → logprob: -3.421726703643799
    4. '-k' → logprob: -5.546726703643799
    5. 'diff' → logprob: -6.171726703643799
    6. '),' → logprob: -6.171726703643799
    7. ' )' → logprob: -6.796726703643799
    8. '   ' → logprob: -7.546726703643799
    9. ' ' → logprob: -7.671726703643799
    10. '_diff' → logprob: -8.54672622680664

Token 499: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00017994173686020076
    2. ' k' → logprob: -8.6251802444458
    3. '_k' → logprob: -15.7501802444458
    4. '	k' → logprob: -15.7501802444458
    5. '(k' → logprob: -17.375179290771484
    6. '{k' → logprob: -17.875179290771484
    7. '   ' → logprob: -18.875179290771484
    8. ')' → logprob: -19.250179290771484
    9. ',k' → logprob: -19.750179290771484
    10. '[k' → logprob: -20.000179290771484

Token 500: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'k' → logprob: -16.375
    3. '₂' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. '_' → logprob: -17.75
    6. ' ' → logprob: -17.75
    7. '۲' → logprob: -18.5
    8. '２' → logprob: -18.875
    9. '   ' → logprob: -19.0
    10. '२' → logprob: -19.75

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016151320189237595
    2. ')
' → logprob: -4.766151428222656
    3. '),' → logprob: -5.766151428222656
    4. '):' → logprob: -6.266151428222656
    5. '   ' → logprob: -6.391151428222656
    6. '):
' → logprob: -7.516151428222656
    7. ',' → logprob: -9.266151428222656
    8. '')' → logprob: -9.891151428222656
    9. ' )' → logprob: -10.516151428222656
    10. ')

' → logprob: -10.891151428222656

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005081149865873158
    2. 'if' → logprob: -8.625508308410645
    3. '
' → logprob: -9.375508308410645
    4. ' if' → logprob: -9.750508308410645
    5. '    
' → logprob: -10.000508308410645
    6. 'c' → logprob: -10.250508308410645
    7. ' candidates' → logprob: -10.500508308410645
    8. 't' → logprob: -10.625508308410645
    9. 'for' → logprob: -11.125508308410645
    10. 'tokens' → logprob: -11.125508308410645

Token 503: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6678237915039062
    2. '   ' → logprob: -0.9178237915039062
    3. 'c' → logprob: -3.0428237915039062
    4. 'for' → logprob: -3.2928237915039062
    5. ' if' → logprob: -6.417823791503906
    6. 't' → logprob: -7.167823791503906
    7. 'import' → logprob: -8.917823791503906
    8. ' candidates' → logprob: -8.917823791503906
    9. ' for' → logprob: -9.542823791503906
    10. '
' → logprob: -9.542823791503906

Token 504: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025788787752389908
    2. 'for' → logprob: -3.7757887840270996
    3. 'c' → logprob: -6.2757887840271
    4. '   ' → logprob: -7.9007887840271
    5. ' if' → logprob: -8.525789260864258
    6. 't' → logprob: -9.900789260864258
    7. ' for' → logprob: -11.525789260864258
    8. 'import' → logprob: -11.900789260864258
    9. ' candidates' → logprob: -11.900789260864258
    10. 'possible' → logprob: -12.025789260864258

Token 505: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.5762031078338623
    2. 'diff' → logprob: -0.8262031078338623
    3. '(diff' → logprob: -8.701203346252441
    4. 'abs' → logprob: -10.326203346252441
    5. '	diff' → logprob: -10.576203346252441
    6. 'k' → logprob: -11.326203346252441
    7. ' abs' → logprob: -11.326203346252441
    8. ' k' → logprob: -11.826203346252441
    9. ' ' → logprob: -13.201203346252441
    10. '(' → logprob: -13.826203346252441

Token 506: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.481373131275177
    2. ' >' → logprob: -0.981373131275177
    3. ' <' → logprob: -5.731373310089111
    4. '<' → logprob: -5.981373310089111
    5. '>=' → logprob: -7.106373310089111
    6. ' >=' → logprob: -7.731373310089111
    7. '<=' → logprob: -9.106372833251953
    8. ' <=' → logprob: -9.606372833251953
    9. '==' → logprob: -10.481372833251953
    10. ' ==' → logprob: -11.106372833251953

Token 507: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076099359430372715
    2. ' ' → logprob: -4.882609844207764
    3. '=' → logprob: -13.382610321044922
    4. '>' → logprob: -13.757610321044922
    5. '   ' → logprob: -13.882610321044922
    6. '  ' → logprob: -15.632610321044922
    7. '1' → logprob: -16.882610321044922
    8. '```' → logprob: -17.257610321044922
    9. '    ' → logprob: -17.445110321044922
    10. '#' → logprob: -17.757610321044922

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004895264864899218
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.000489234924316
    4. '>' → logprob: -15.375489234924316
    5. '  ' → logprob: -16.000490188598633
    6. '=' → logprob: -16.875490188598633
    7. '    ' → logprob: -17.312990188598633
    8. '<' → logprob: -17.375490188598633
    9. '#' → logprob: -17.500490188598633
    10. '1' → logprob: -17.625490188598633

Token 509: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01672356016933918
    2. '   ' → logprob: -4.7667236328125
    3. ':
' → logprob: -4.8917236328125
    4. ',' → logprob: -7.5167236328125
    5. '       ' → logprob: -11.6417236328125
    6. ' and' → logprob: -13.2667236328125
    7. ' :' → logprob: -13.7667236328125
    8. '):
' → logprob: -13.8917236328125
    9. '<|end|>' → logprob: -13.8917236328125
    10. '<|end|>' → logprob: -13.8917236328125

Token 510: ' minimal' (ID: 19957)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8919070959091187
    2. ' candidates' → logprob: -1.0169070959091187
    3. 't' → logprob: -2.141907215118408
    4. ' t' → logprob: -2.766907215118408
    5. '   ' → logprob: -3.141907215118408
    6. ' c' → logprob: -5.516907215118408
    7. '_candidates' → logprob: -8.39190673828125
    8. ' for' → logprob: -8.64190673828125
    9. 'for' → logprob: -9.51690673828125
    10. ' candidats' → logprob: -10.01690673828125

Token 511: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14271101355552673
    2. ' t' → logprob: -2.0177109241485596
    3. '_t' → logprob: -10.39271068572998
    4. '`t' → logprob: -13.51771068572998
    5. ' ' → logprob: -14.14271068572998
    6. '	t' → logprob: -14.51771068572998
    7. 'candidate' → logprob: -14.64271068572998
    8. '```' → logprob: -14.76771068572998
    9. '   ' → logprob: -15.01771068572998
    10. 'token' → logprob: -15.39271068572998

Token 512: ' at' (ID: 540)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.13656334578990936
    2. ' =' → logprob: -3.386563301086426
    3. 't' → logprob: -3.511563301086426
    4. 'is' → logprob: -3.886563301086426
    5. ' t' → logprob: -4.511563301086426
    6. ' can' → logprob: -5.011563301086426
    7. ' at' → logprob: -5.386563301086426
    8. '=' → logprob: -5.386563301086426
    9. ' occurs' → logprob: -5.636563301086426
    10. ',' → logprob: -6.261563301086426

Token 513: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17981195449829102
    2. ' t' → logprob: -1.804811954498291
    3. '   ' → logprob: -11.054811477661133
    4. ' -' → logprob: -11.054811477661133
    5. ' ' → logprob: -11.304811477661133
    6. '-' → logprob: -11.679811477661133
    7. 'int' → logprob: -13.054811477661133
    8. '-t' → logprob: -13.179811477661133
    9. '`t' → logprob: -13.179811477661133
    10. '  ' → logprob: -13.679811477661133

Token 514: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07891204208135605
    2. ' t' → logprob: -2.5789120197296143
    3. '_t' → logprob: -11.328911781311035
    4. '`t' → logprob: -12.078911781311035
    5. '(t' → logprob: -13.828911781311035
    6. '   ' → logprob: -14.078911781311035
    7. 'int' → logprob: -14.453911781311035
    8. ' ' → logprob: -14.703911781311035
    9. '```' → logprob: -14.953911781311035
    10. ')t' → logprob: -15.328911781311035

Token 515: ' within' (ID: 3518)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6921805143356323
    2. '_candidates' → logprob: -1.3171805143356323
    3. ':' → logprob: -2.067180633544922
    4. ' candidates' → logprob: -3.442180633544922
    5. '
' → logprob: -3.817180633544922
    6. ' =' → logprob: -4.442180633544922
    7. '_candidate' → logprob: -4.692180633544922
    8. ',' → logprob: -5.067180633544922
    9. '    
' → logprob: -5.567180633544922
    10. 'candidate' → logprob: -5.817180633544922

Token 516: ' bounds' (ID: 30227)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1649598479270935
    2. '[int' → logprob: -3.2899599075317383
    3. '[' → logprob: -3.5399599075317383
    4. 'range' → logprob: -3.6649599075317383
    5. '[c' → logprob: -3.9149599075317383
    6. ' candidates' → logprob: -4.414959907531738
    7. 't' → logprob: -4.664959907531738
    8. ' [' → logprob: -5.039959907531738
    9. '[t' → logprob: -5.289959907531738
    10. ' range' → logprob: -5.914959907531738

Token 517: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18346092104911804
    2. ':' → logprob: -1.9334609508514404
    3. '
' → logprob: -4.558460712432861
    4. ',' → logprob: -6.058460712432861
    5. ':
' → logprob: -6.183460712432861
    6. '    
' → logprob: -6.183460712432861
    7. '.' → logprob: -6.558460712432861
    8. ' =' → logprob: -6.683460712432861
    9. '_candidates' → logprob: -7.308460712432861
    10. ',
' → logprob: -7.808460712432861

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018113377154804766
    2. ':' → logprob: -9.750181198120117
    3. '
' → logprob: -10.000181198120117
    4. ',' → logprob: -10.500181198120117
    5. '    
' → logprob: -10.500181198120117
    6. 't' → logprob: -11.625181198120117
    7. '.' → logprob: -12.500181198120117
    8. '```' → logprob: -12.875181198120117
    9. '       ' → logprob: -13.500181198120117
    10. ':
' → logprob: -13.875181198120117

Token 519: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004420505370944738
    2. 'if' → logprob: -5.504420280456543
    3. ' if' → logprob: -8.504420280456543
    4. 'elif' → logprob: -9.504420280456543
    5. 't' → logprob: -9.879420280456543
    6. 'for' → logprob: -12.754420280456543
    7. '```' → logprob: -12.754420280456543
    8. '    
' → logprob: -13.379420280456543
    9. 'c' → logprob: -13.879420280456543
    10. '
' → logprob: -14.004420280456543

Token 520: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07781531661748886
    2. '   ' → logprob: -3.077815294265747
    3. ' if' → logprob: -3.577815294265747
    4. 'elif' → logprob: -7.202815532684326
    5. 't' → logprob: -9.827815055847168
    6. 'import' → logprob: -10.702815055847168
    7. '
' → logprob: -11.077815055847168
    8. 'for' → logprob: -11.702815055847168
    9. 'else' → logprob: -11.952815055847168
    10. 'from' → logprob: -11.952815055847168

Token 521: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.20141996443271637
    2. 'diff' → logprob: -1.7014199495315552
    3. '	diff' → logprob: -12.576419830322266
    4. '   ' → logprob: -13.451419830322266
    5. '(diff' → logprob: -14.201419830322266
    6. ' ' → logprob: -14.951419830322266
    7. ' dif' → logprob: -15.076419830322266
    8. '    ' → logprob: -15.576419830322266
    9. '  ' → logprob: -16.951419830322266
    10. ' ' → logprob: -17.326419830322266

Token 522: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008078319951891899
    2. '<' → logprob: -5.508078098297119
    3. ' <=' → logprob: -5.883078098297119
    4. ' >' → logprob: -6.758078098297119
    5. '<=' → logprob: -10.883078575134277
    6. '>' → logprob: -11.008078575134277
    7. ' ==' → logprob: -12.008078575134277
    8. ' ' → logprob: -13.633078575134277
    9. '   ' → logprob: -14.383078575134277
    10. '==' → logprob: -15.383078575134277

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38933613896369934
    2. ' ' → logprob: -1.139336109161377
    3. '=' → logprob: -6.014336109161377
    4. '   ' → logprob: -11.889336585998535
    5. ' =' → logprob: -12.514336585998535
    6. '```' → logprob: -12.889336585998535
    7. '  ' → logprob: -13.014336585998535
    8. ' ' → logprob: -14.639336585998535
    9. ',' → logprob: -14.889336585998535
    10. '
' → logprob: -14.951836585998535

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000628683075774461
    2. ' ' → logprob: -7.625628471374512
    3. '=' → logprob: -8.875628471374512
    4. '>' → logprob: -15.125628471374512
    5. '   ' → logprob: -15.375628471374512
    6. ' =' → logprob: -15.500628471374512
    7. '```' → logprob: -16.000629425048828
    8. '  ' → logprob: -16.875629425048828
    9. ',' → logprob: -17.625629425048828
    10. '
' → logprob: -17.875629425048828

Token 525: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006761787459254265
    2. ':
' → logprob: -5.38176155090332
    3. ',' → logprob: -6.63176155090332
    4. '   ' → logprob: -7.13176155090332
    5. 'else' → logprob: -11.88176155090332
    6. 'if' → logprob: -12.50676155090332
    7. ':

' → logprob: -12.75676155090332
    8. 't' → logprob: -12.88176155090332
    9. ' :' → logprob: -14.13176155090332
    10. ',
' → logprob: -14.13176155090332

Token 526: ' minimal' (ID: 19957)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3841303586959839
    2. '   ' → logprob: -1.8841303586959839
    3. ' minimal' → logprob: -1.8841303586959839
    4. 't' → logprob: -4.759130477905273
    5. 'minimal' → logprob: -5.134130477905273
    6. '    ' → logprob: -8.134130477905273
    7. '#' → logprob: -9.259130477905273
    8. 'min' → logprob: -9.634130477905273
    9. '  ' → logprob: -10.884130477905273
    10. '       ' → logprob: -11.009130477905273

Token 527: ' sum' (ID: 4215)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.02984374202787876
    2. 't' → logprob: -3.654843807220459
    3. ' sum' → logprob: -5.779843807220459
    4. 'sum' → logprob: -7.779843807220459
    5. ' ' → logprob: -11.0298433303833
    6. '_t' → logprob: -11.9048433303833
    7. '_sum' → logprob: -12.4048433303833
    8. '   ' → logprob: -13.6548433303833
    9. ' ' → logprob: -14.2798433303833
    10. ' _' → logprob: -15.1548433303833

Token 528: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.016439126804471016
    2. 'at' → logprob: -4.141438961029053
    3. ' ' → logprob: -8.516439437866211
    4. ' =' → logprob: -9.016439437866211
    5. '   ' → logprob: -10.391439437866211
    6. '=' → logprob: -10.641439437866211
    7. '	at' → logprob: -11.141439437866211
    8. 't' → logprob: -12.766439437866211
    9. '  ' → logprob: -12.891439437866211
    10. '_at' → logprob: -13.016439437866211

Token 529: ' maximal' (ID: 65414)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7905503511428833
    2. 't' → logprob: -1.2905503511428833
    3. ' t' → logprob: -1.7905503511428833
    4. ' maximal' → logprob: -2.2905502319335938
    5. ' max' → logprob: -6.040550231933594
    6. ' maximum' → logprob: -7.665550231933594
    7. 'maximum' → logprob: -8.540550231933594
    8. '   ' → logprob: -9.165550231933594
    9. '_max' → logprob: -10.790550231933594
    10. 'int' → logprob: -11.665550231933594

Token 530: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.2519350051879883
    2. 't' → logprob: -1.5019350051879883
    3. ' ' → logprob: -12.626935005187988
    4. '   ' → logprob: -13.626935005187988
    5. '_t' → logprob: -14.126935005187988
    6. ' ' → logprob: -15.376935005187988
    7. '`t' → logprob: -15.501935005187988
    8. '	t' → logprob: -16.251934051513672
    9. '  ' → logprob: -16.751934051513672
    10. '```' → logprob: -16.876934051513672

Token 531: ' within' (ID: 3518)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013758651912212372
    2. '
' → logprob: -4.513758659362793
    3. '    
' → logprob: -6.013758659362793
    4. 'if' → logprob: -9.638758659362793
    5. '

' → logprob: -9.763758659362793
    6. 't' → logprob: -10.388758659362793
    7. '
' → logprob: -10.638758659362793
    8. '#' → logprob: -11.388758659362793
    9. '    ' → logprob: -11.638758659362793
    10. '```' → logprob: -11.763758659362793

Token 532: ' bounds' (ID: 30227)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -0.03170081973075867
    2. ' bounds' → logprob: -3.906700849533081
    3. 'bound' → logprob: -5.156700611114502
    4. 't' → logprob: -5.406700611114502
    5. ' t' → logprob: -8.40670108795166
    6. 'c' → logprob: -8.40670108795166
    7. '   ' → logprob: -9.28170108795166
    8. '
' → logprob: -9.53170108795166
    9. '_bounds' → logprob: -9.65670108795166
    10. ' ' → logprob: -10.03170108795166

Token 533: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004148441832512617
    2. '
' → logprob: -5.754148483276367
    3. '    
' → logprob: -7.004148483276367
    4. '```' → logprob: -10.504148483276367
    5. 't' → logprob: -11.504148483276367
    6. 'if' → logprob: -12.254148483276367
    7. ' candidates' → logprob: -12.379148483276367
    8. '#' → logprob: -13.129148483276367
    9. '_candidates' → logprob: -13.129148483276367
    10. 'c' → logprob: -13.379148483276367

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026050140149891376
    2. '
' → logprob: -8.875260353088379
    3. '```' → logprob: -10.000260353088379
    4. '    
' → logprob: -10.500260353088379
    5. 'if' → logprob: -10.625260353088379
    6. 't' → logprob: -11.625260353088379
    7. ' candidates' → logprob: -12.125260353088379
    8. 'c' → logprob: -13.500260353088379
    9. '_candidates' → logprob: -13.500260353088379
    10. 'candidate' → logprob: -13.625260353088379

Token 535: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05758988484740257
    2. 'if' → logprob: -2.9325897693634033
    3. ' if' → logprob: -6.432590007781982
    4. 't' → logprob: -7.557590007781982
    5. '
' → logprob: -7.807590007781982
    6. '    
' → logprob: -9.307589530944824
    7. 'for' → logprob: -10.182589530944824
    8. ' candidates' → logprob: -11.682589530944824
    9. '```' → logprob: -11.807589530944824
    10. 'import' → logprob: -12.682589530944824

Token 536: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5451042652130127
    2. '   ' → logprob: -0.9201042652130127
    3. 'for' → logprob: -4.045104026794434
    4. 'c' → logprob: -6.545104026794434
    5. 't' → logprob: -6.795104026794434
    6. '
' → logprob: -7.170104026794434
    7. ' if' → logprob: -7.295104026794434
    8. '    
' → logprob: -9.170104026794434
    9. 'import' → logprob: -10.420104026794434
    10. 'possible' → logprob: -10.795104026794434

Token 537: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2014196664094925
    2. ' diff' → logprob: -1.701419711112976
    3. '	diff' → logprob: -12.701419830322266
    4. 'd' → logprob: -13.701419830322266
    5. 'abs' → logprob: -14.076419830322266
    6. '   ' → logprob: -15.201419830322266
    7. ' ' → logprob: -15.201419830322266
    8. ' abs' → logprob: -15.326419830322266
    9. '(diff' → logprob: -15.326419830322266
    10. 'not' → logprob: -16.576419830322266

Token 538: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2017984390258789
    2. '==' → logprob: -1.701798439025879
    3. '=' → logprob: -8.701798439025879
    4. ' >' → logprob: -9.201798439025879
    5. '>' → logprob: -9.576798439025879
    6. ' =' → logprob: -10.326798439025879
    7. ' <' → logprob: -12.451798439025879
    8. '   ' → logprob: -12.451798439025879
    9. '<' → logprob: -13.201798439025879
    10. ' ' → logprob: -13.201798439025879

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '=' → logprob: -15.252805709838867
    4. '   ' → logprob: -15.502805709838867
    5. '  ' → logprob: -16.877805709838867
    6. ' ' → logprob: -16.877805709838867
    7. ')' → logprob: -19.002805709838867
    8. 'None' → logprob: -19.315305709838867
    9. '  
' → logprob: -19.877805709838867
    10. '```' → logprob: -19.940305709838867

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '=' → logprob: -17.375085830688477
    4. '   ' → logprob: -17.500085830688477
    5. '```' → logprob: -19.375085830688477
    6. '  ' → logprob: -19.625085830688477
    7. '۰' → logprob: -19.875085830688477
    8. ' ' → logprob: -20.375085830688477
    9. '00' → logprob: -21.125085830688477
    10. 'zero' → logprob: -21.375085830688477

Token 541: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005272653419524431
    2. ':
' → logprob: -5.25527286529541
    3. '   ' → logprob: -10.63027286529541
    4. ',' → logprob: -11.63027286529541
    5. '):' → logprob: -13.38027286529541
    6. ' :' → logprob: -13.63027286529541
    7. '=' → logprob: -14.13027286529541
    8. ':

' → logprob: -14.50527286529541
    9. '):
' → logprob: -14.50527286529541
    10. '{' → logprob: -15.25527286529541

Token 542: ' sum' (ID: 4215)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.018604522570967674
    2. '   ' → logprob: -4.643604755401611
    3. ' t' → logprob: -5.268604755401611
    4. 't' → logprob: -6.518604755401611
    5. 'c' → logprob: -7.018604755401611
    6. '_candidates' → logprob: -8.018604278564453
    7. '#' → logprob: -8.393604278564453
    8. ' for' → logprob: -8.643604278564453
    9. ' #' → logprob: -9.018604278564453
    10. ' candidats' → logprob: -9.268604278564453

Token 543: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.140565425157547
    2. '=' → logprob: -2.2655653953552246
    3. ' is' → logprob: -4.390565395355225
    4. '   ' → logprob: -5.015565395355225
    5. 'is' → logprob: -5.765565395355225
    6. '_candidates' → logprob: -6.140565395355225
    7. ' can' → logprob: -7.390565395355225
    8. 'min' → logprob: -7.890565395355225
    9. ' remains' → logprob: -8.265565872192383
    10. ' candidates' → logprob: -8.390565872192383

Token 544: ' constant' (ID: 9594)
  Prédit: 'constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constant' → logprob: -0.12518168985843658
    2. ' constant' → logprob: -2.6251816749572754
    3. 'x' → logprob: -3.1251816749572754
    4. ' x' → logprob: -7.250181674957275
    5. '   ' → logprob: -8.000182151794434
    6. 'const' → logprob: -8.375182151794434
    7. 'ind' → logprob: -11.375182151794434
    8. ' ' → logprob: -12.000182151794434
    9. 'fixed' → logprob: -13.000182151794434
    10. 'Constant' → logprob: -13.250182151794434

Token 545: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003861593548208475
    2. '
' → logprob: -6.128861427307129
    3. '    
' → logprob: -6.753861427307129
    4. 'if' → logprob: -8.003861427307129
    5. ' candidates' → logprob: -10.003861427307129
    6. ' if' → logprob: -10.628861427307129
    7. 'candidate' → logprob: -10.878861427307129
    8. 't' → logprob: -11.003861427307129
    9. 'c' → logprob: -11.128861427307129
    10. 'for' → logprob: -11.253861427307129

Token 546: ' test' (ID: 1746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27619317173957825
    2. ' candidates' → logprob: -2.026193141937256
    3. 'c' → logprob: -3.026193141937256
    4. ' for' → logprob: -3.401193141937256
    5. 't' → logprob: -4.401193141937256
    6. 'for' → logprob: -4.776193141937256
    7. ' t' → logprob: -5.651193141937256
    8. ' c' → logprob: -7.026193141937256
    9. '#' → logprob: -7.401193141937256
    10. 'candidate' → logprob: -7.401193141937256

Token 547: ' all' (ID: 722)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6095348596572876
    2. 't' → logprob: -1.8595348596572876
    3. ' [' → logprob: -2.734534740447998
    4. '[int' → logprob: -3.109534740447998
    5. ' for' → logprob: -3.484534740447998
    6. ' max' → logprob: -3.609534740447998
    7. '[t' → logprob: -3.984534740447998
    8. 'for' → logprob: -3.984534740447998
    9. ' candidates' → logprob: -4.109534740447998
    10. 'max' → logprob: -4.109534740447998

Token 548: ' feasible' (ID: 58866)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08034513145685196
    2. 'if' → logprob: -3.5803451538085938
    3. '
' → logprob: -3.7053451538085938
    4. 'c' → logprob: -4.830345153808594
    5. ' if' → logprob: -4.955345153808594
    6. '    
' → logprob: -5.330345153808594
    7. ' candidates' → logprob: -5.955345153808594
    8. 'for' → logprob: -6.955345153808594
    9. 't' → logprob: -8.080345153808594
    10. '

' → logprob: -8.330345153808594

Token 549: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15190039575099945
    2. 't' → logprob: -3.151900291442871
    3. '_candidates' → logprob: -3.526900291442871
    4. '_t' → logprob: -3.776900291442871
    5. 'if' → logprob: -4.401900291442871
    6. 's' → logprob: -4.901900291442871
    7. ' if' → logprob: -5.151900291442871
    8. ' candidates' → logprob: -5.526900291442871
    9. ' t' → logprob: -5.526900291442871
    10. 'c' → logprob: -5.776900291442871

Token 550: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037732385098934174
    2. 'c' → logprob: -4.4127326011657715
    3. 'if' → logprob: -4.5377326011657715
    4. '
' → logprob: -5.4127326011657715
    5. ' if' → logprob: -5.6627326011657715
    6. '    
' → logprob: -6.1627326011657715
    7. ' candidates' → logprob: -6.4127326011657715
    8. 't' → logprob: -6.9127326011657715
    9. 'for' → logprob: -7.2877326011657715
    10. '_candidates' → logprob: -8.537732124328613

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0575239434838295
    2. '
' → logprob: -3.0575239658355713
    3. '    
' → logprob: -5.682523727416992
    4. 't' → logprob: -6.307523727416992
    5. 'c' → logprob: -6.682523727416992
    6. ' candidates' → logprob: -7.182523727416992
    7. 'for' → logprob: -7.557523727416992
    8. 'if' → logprob: -7.682523727416992
    9. '```' → logprob: -8.557523727416992
    10. '_candidates' → logprob: -8.807523727416992

Token 552: ' possible' (ID: 4149)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1839277744293213
    2. '   ' → logprob: -1.9339277744293213
    3. ' if' → logprob: -3.8089277744293213
    4. 'for' → logprob: -7.183927536010742
    5. '
' → logprob: -8.433927536010742
    6. 'c' → logprob: -8.808927536010742
    7. 't' → logprob: -10.058927536010742
    8. '    
' → logprob: -10.058927536010742
    9. 'import' → logprob: -11.183927536010742
    10. ' for' → logprob: -11.308927536010742

Token 553: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.29147574305534363
    2. 's' → logprob: -1.541475772857666
    3. ' =' → logprob: -4.041475772857666
    4. '_' → logprob: -5.291475772857666
    5. '_values' → logprob: -5.291475772857666
    6. '=' → logprob: -5.666475772857666
    7. '_tokens' → logprob: -5.791475772857666
    8. '_candidates' → logprob: -6.791475772857666
    9. '_s' → logprob: -7.041475772857666
    10. '=[]' → logprob: -7.291475772857666

Token 554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11472710967063904
    2. '=' → logprob: -2.239727020263672
    3. 's' → logprob: -6.364727020263672
    4. '=[]' → logprob: -9.739727020263672
    5. ' =[' → logprob: -9.989727020263672
    6. '=[' → logprob: -10.989727020263672
    7. ' ' → logprob: -10.989727020263672
    8. '_values' → logprob: -11.239727020263672
    9. ':' → logprob: -11.864727020263672
    10. '.extend' → logprob: -12.239727020263672

Token 555: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016967840492725372
    2. 'set' → logprob: -5.0169677734375
    3. '[]

' → logprob: -5.0169677734375
    4. '[]
' → logprob: -6.3919677734375
    5. '[' → logprob: -6.7669677734375
    6. 'range' → logprob: -7.7669677734375
    7. ' []' → logprob: -9.0169677734375
    8. '[int' → logprob: -9.3919677734375
    9. '[]}' → logprob: -10.3919677734375
    10. '[t' → logprob: -10.3919677734375

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040378373116254807
    2. '```' → logprob: -3.9153783321380615
    3. '[' → logprob: -4.415378570556641
    4. ' if' → logprob: -5.540378570556641
    5. '
' → logprob: -6.665378570556641
    6. 'if' → logprob: -6.790378570556641
    7. '[
' → logprob: -7.165378570556641
    8. '``' → logprob: -9.16537857055664
    9. '[-' → logprob: -9.29037857055664
    10. '[]' → logprob: -9.91537857055664

Token 557: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10556353628635406
    2. 'for' → logprob: -2.6055636405944824
    3. 'possible' → logprob: -4.355563640594482
    4. '[]
' → logprob: -5.230563640594482
    5. '[]' → logprob: -5.855563640594482
    6. '
' → logprob: -6.355563640594482
    7. '[' → logprob: -7.105563640594482
    8. ' if' → logprob: -7.230563640594482
    9. '   ' → logprob: -7.355563640594482
    10. 'import' → logprob: -7.480563640594482

Token 558: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.38688579201698303
    2. 'diff' → logprob: -1.1368857622146606
    3. '	diff' → logprob: -12.261885643005371
    4. '   ' → logprob: -12.886885643005371
    5. '(diff' → logprob: -12.886885643005371
    6. ' ' → logprob: -13.261885643005371
    7. ' t' → logprob: -14.761885643005371
    8. 't' → logprob: -14.886885643005371
    9. 'k' → logprob: -15.011885643005371
    10. 'len' → logprob: -15.136885643005371

Token 559: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.012570171616971493
    2. '>' → logprob: -4.512570381164551
    3. ' <' → logprob: -6.512570381164551
    4. ' ' → logprob: -10.88757038116455
    5. '<' → logprob: -12.01257038116455
    6. '  ' → logprob: -12.76257038116455
    7. ' ><' → logprob: -13.38757038116455
    8. ' ==' → logprob: -13.51257038116455
    9. ' ' → logprob: -13.63757038116455
    10. '   ' → logprob: -14.13757038116455

Token 560: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.386881947517395
    2. ' ' → logprob: -1.136881947517395
    3. '   ' → logprob: -12.136881828308105
    4. 't' → logprob: -12.886881828308105
    5. '  ' → logprob: -13.511881828308105
    6. ' t' → logprob: -14.511881828308105
    7. '=' → logprob: -15.699381828308105
    8. '    ' → logprob: -15.824381828308105
    9. '     ' → logprob: -16.261882781982422
    10. '1' → logprob: -16.636882781982422

Token 561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005593468667939305
    2. ' ' → logprob: -7.500559329986572
    3. 't' → logprob: -13.12555980682373
    4. '-' → logprob: -13.37555980682373
    5. '=' → logprob: -13.87555980682373
    6. 'float' → logprob: -13.87555980682373
    7. '   ' → logprob: -15.12555980682373
    8. '  ' → logprob: -16.000558853149414
    9. ' -' → logprob: -16.500558853149414
    10. '1' → logprob: -16.625558853149414

Token 562: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760603547096252
    2. ':' → logprob: -0.8260603547096252
    3. '):
' → logprob: -10.07606029510498
    4. '   ' → logprob: -10.82606029510498
    5. '=' → logprob: -10.95106029510498
    6. ':

' → logprob: -11.45106029510498
    7. ':
' → logprob: -11.82606029510498
    8. '       ' → logprob: -11.82606029510498
    9. ' =' → logprob: -12.32606029510498
    10. ',' → logprob: -12.82606029510498

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015743641182780266
    2. ' possible' → logprob: -4.890743732452393
    3. '   ' → logprob: -5.515743732452393
    4. 'possible' → logprob: -5.515743732452393
    5. '_possible' → logprob: -10.765743255615234
    6. '[' → logprob: -11.890743255615234
    7. '
' → logprob: -12.140743255615234
    8. '```' → logprob: -12.890743255615234
    9. ',' → logprob: -13.015743255615234
    10. 'Possible' → logprob: -13.140743255615234

Token 564: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.252519816160202
    2. ' possible' → logprob: -1.5025198459625244
    3. '   ' → logprob: -7.877519607543945
    4. '       ' → logprob: -9.502519607543945
    5. 'if' → logprob: -9.752519607543945
    6. '_possible' → logprob: -10.127519607543945
    7. ' if' → logprob: -10.877519607543945
    8. '
' → logprob: -11.877519607543945
    9. 'Possible' → logprob: -11.877519607543945
    10. ' posible' → logprob: -13.127519607543945

Token 565: ' minimal' (ID: 19957)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.049532849341630936
    2. ' possible' → logprob: -3.049532890319824
    3. '   ' → logprob: -7.049532890319824
    4. 'if' → logprob: -10.424532890319824
    5. '       ' → logprob: -10.549532890319824
    6. '_possible' → logprob: -11.299532890319824
    7. 'Possible' → logprob: -12.924532890319824
    8. ' if' → logprob: -13.049532890319824
    9. '```' → logprob: -13.924532890319824
    10. ' posible' → logprob: -14.049532890319824

Token 566: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13137052953243256
    2. ' t' → logprob: -2.1313705444335938
    3. ' =' → logprob: -5.881370544433594
    4. 'possible' → logprob: -7.381370544433594
    5. ' possible' → logprob: -7.756370544433594
    6. '_t' → logprob: -8.256370544433594
    7. '_possible' → logprob: -8.381370544433594
    8. '=' → logprob: -9.631370544433594
    9. '   ' → logprob: -11.756370544433594
    10. '(t' → logprob: -12.256370544433594

Token 567: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10224676877260208
    2. '=' → logprob: -2.8522467613220215
    3. 'possible' → logprob: -4.1022467613220215
    4. ' possible' → logprob: -4.2272467613220215
    5. '.append' → logprob: -5.1022467613220215
    6. '_possible' → logprob: -6.4772467613220215
    7. '   ' → logprob: -8.47724723815918
    8. 't' → logprob: -9.10224723815918
    9. ',' → logprob: -9.35224723815918
    10. ':' → logprob: -9.47724723815918

Token 568: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1004449650645256
    2. ' t' → logprob: -2.350445032119751
    3. '   ' → logprob: -8.600444793701172
    4. 'int' → logprob: -9.975444793701172
    5. ' int' → logprob: -12.850444793701172
    6. '`t' → logprob: -13.350444793701172
    7. '       ' → logprob: -14.225444793701172
    8. '    ' → logprob: -14.350444793701172
    9. '	t' → logprob: -14.725444793701172
    10. ' ' → logprob: -14.725444793701172

Token 569: ' feasible' (ID: 58866)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8305754065513611
    2. '_t' → logprob: -1.2055754661560059
    3. 't' → logprob: -1.3305754661560059
    4. ' _' → logprob: -8.705574989318848
    5. ' possible' → logprob: -9.580574989318848
    6. '_possible' → logprob: -10.205574989318848
    7. '`t' → logprob: -11.080574989318848
    8. 'possible' → logprob: -11.330574989318848
    9. ' ' → logprob: -11.330574989318848
    10. '_' → logprob: -11.955574989318848

Token 570: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7287898063659668
    2. ' t' → logprob: -0.7287898063659668
    3. '_t' → logprob: -3.353789806365967
    4. '`t' → logprob: -10.978790283203125
    5. '	t' → logprob: -11.228790283203125
    6. ' _' → logprob: -11.478790283203125
    7. '   ' → logprob: -11.853790283203125
    8. ' ' → logprob: -12.603790283203125
    9. '```' → logprob: -12.728790283203125
    10. '`' → logprob: -13.353790283203125

Token 571: '
' (ID: 198)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5058878660202026
    2. '   ' → logprob: -2.005887985229492
    3. ' =' → logprob: -2.130887985229492
    4. ' possible' → logprob: -2.880887985229492
    5. '_possible' → logprob: -3.005887985229492
    6. '
' → logprob: -3.880887985229492
    7. '       ' → logprob: -5.130887985229492
    8. ':' → logprob: -6.130887985229492
    9. '.append' → logprob: -6.130887985229492
    10. '=' → logprob: -6.255887985229492

Token 572: '       ' (ID: 309)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.0733654499053955
    2. '   ' → logprob: -1.4483654499053955
    3. ' =' → logprob: -1.6983654499053955
    4. '.append' → logprob: -2.0733654499053955
    5. ' possible' → logprob: -2.5733654499053955
    6. '_possible' → logprob: -4.573365211486816
    7. '       ' → logprob: -5.073365211486816
    8. ':' → logprob: -5.198365211486816
    9. ':
' → logprob: -5.698365211486816
    10. '
' → logprob: -6.073365211486816

Token 573: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10694995522499084
    2. ' possible' → logprob: -2.356950044631958
    3. '   ' → logprob: -5.481949806213379
    4. 'if' → logprob: -6.606949806213379
    5. 't' → logprob: -8.231949806213379
    6. '_possible' → logprob: -8.356949806213379
    7. ' t' → logprob: -8.481949806213379
    8. ' if' → logprob: -8.856949806213379
    9. '
' → logprob: -8.981949806213379
    10. '[t' → logprob: -9.856949806213379

Token 574: ' t' (ID: 260)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.13588465750217438
    2. 'if' → logprob: -2.7608847618103027
    3. ' possible' → logprob: -2.8858847618103027
    4. '   ' → logprob: -5.510884761810303
    5. ' if' → logprob: -5.760884761810303
    6. 't' → logprob: -8.010884284973145
    7. ' t' → logprob: -8.635884284973145
    8. 'import' → logprob: -8.885884284973145
    9. '
' → logprob: -9.510884284973145
    10. '       ' → logprob: -10.260884284973145

Token 575: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4341500401496887
    2. '_possible' → logprob: -2.059149980545044
    3. 'possible' → logprob: -2.184149980545044
    4. '.append' → logprob: -2.559149980545044
    5. ' =' → logprob: -3.684149980545044
    6. 'append' → logprob: -5.809150218963623
    7. '=min' → logprob: -6.309150218963623
    8. 'min' → logprob: -6.559150218963623
    9. '_min' → logprob: -6.934150218963623
    10. ' possible' → logprob: -7.559150218963623

Token 576: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.28204742074012756
    2. 't' → logprob: -1.4070473909378052
    3. ' (' → logprob: -8.032047271728516
    4. '1' → logprob: -9.282047271728516
    5. '(' → logprob: -9.407047271728516
    6. '(t' → logprob: -9.407047271728516
    7. 'int' → logprob: -9.657047271728516
    8. ' ' → logprob: -10.032047271728516
    9. 'max' → logprob: -10.157047271728516
    10. 'min' → logprob: -10.282047271728516

Token 578: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.013850008137524128
    2. 'max' → logprob: -4.388850212097168
    3. '<=' → logprob: -6.888850212097168
    4. '_min' → logprob: -8.888850212097168
    5. ' <=' → logprob: -9.513850212097168
    6. '≤' → logprob: -10.388850212097168
    7. ' =' → logprob: -10.888850212097168
    8. '```' → logprob: -11.263850212097168
    9. '=' → logprob: -11.388850212097168
    10. '_possible' → logprob: -11.888850212097168

Token 579: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.933557391166687
    2. '=' → logprob: -1.058557391166687
    3. '<=' → logprob: -2.5585575103759766
    4. 'if' → logprob: -3.4335575103759766
    5. '<|end|>' → logprob: -3.4335575103759766
    6. '   ' → logprob: -3.9335575103759766
    7. ',' → logprob: -3.9335575103759766
    8. '>=' → logprob: -4.058557510375977
    9. ' if' → logprob: -4.808557510375977
    10. ' <=' → logprob: -4.808557510375977

Token 580: ' be' (ID: 413)
  Prédit: '=float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=float' → logprob: -0.33949920535087585
    2. '=' → logprob: -2.0894992351531982
    3. 'not' → logprob: -3.0894992351531982
    4. 't' → logprob: -3.3394992351531982
    5. ' =' → logprob: -3.4644992351531982
    6. 'float' → logprob: -3.8394992351531982
    7. 'math' → logprob: -4.839498996734619
    8. ' not' → logprob: -5.339498996734619
    9. '!=' → logprob: -5.464498996734619
    10. '<=' → logprob: -5.589498996734619

Token 581: ' bounds' (ID: 30227)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5360255241394043
    2. 'float' → logprob: -1.5360255241394043
    3. 't' → logprob: -1.9110255241394043
    4. 'min' → logprob: -3.6610255241394043
    5. 'max' → logprob: -5.036025524139404
    6. 'math' → logprob: -5.411025524139404
    7. '-t' → logprob: -5.536025524139404
    8. ' int' → logprob: -5.786025524139404
    9. ' float' → logprob: -6.161025524139404
    10. '-' → logprob: -6.161025524139404

Token 582: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36714228987693787
    2. '
' → logprob: -1.4921423196792603
    3. ' if' → logprob: -3.6171422004699707
    4. '<|end|>' → logprob: -3.7421422004699707
    5. '<|end|>' → logprob: -4.117142200469971
    6. ' and' → logprob: -5.492142200469971
    7. ':' → logprob: -5.992142200469971
    8. 'if' → logprob: -6.242142200469971
    9. ',' → logprob: -6.242142200469971
    10. ' =' → logprob: -6.617142200469971

Token 583: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17717218399047852
    2. ' if' → logprob: -2.4271721839904785
    3. 'if' → logprob: -3.1771721839904785
    4. 'possible' → logprob: -4.4271721839904785
    5. '
' → logprob: -5.1771721839904785
    6. ' possible' → logprob: -5.3021721839904785
    7. '       ' → logprob: -5.6771721839904785
    8. ' t' → logprob: -5.9271721839904785
    9. 't' → logprob: -6.3021721839904785
    10. '    
' → logprob: -7.6771721839904785

Token 584: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.06308728456497192
    2. 't' → logprob: -3.188087224960327
    3. ' if' → logprob: -4.563087463378906
    4. 'if' → logprob: -4.938087463378906
    5. ' not' → logprob: -7.063087463378906
    6. '   ' → logprob: -7.313087463378906
    7. ' possible' → logprob: -8.438087463378906
    8. 'not' → logprob: -8.813087463378906
    9. 'possible' → logprob: -8.938087463378906
    10. ' (' → logprob: -9.063087463378906

Token 585: ' integer' (ID: 16336)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.4599290192127228
    2. '=' → logprob: -1.3349289894104004
    3. ' =' → logprob: -3.0849289894104004
    4. '<=' → logprob: -3.8349289894104004
    5. '=min' → logprob: -3.9599289894104004
    6. 'min' → logprob: -4.4599289894104
    7. '_max' → logprob: -6.3349289894104
    8. ' <=' → logprob: -6.3349289894104
    9. '>=' → logprob: -7.2099289894104
    10. '_possible' → logprob: -7.3349289894104

Token 586: '
' (ID: 198)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.3634400367736816
    2. ':' → logprob: -1.6134400367736816
    3. '   ' → logprob: -2.1134400367736816
    4. ' =' → logprob: -2.3634400367736816
    5. ' candidates' → logprob: -2.7384400367736816
    6. '<|end|>' → logprob: -2.7384400367736816
    7. '<|end|>' → logprob: -3.2384400367736816
    8. '=' → logprob: -3.4884400367736816
    9. '
' → logprob: -3.6134400367736816
    10. ' if' → logprob: -3.9884400367736816

Token 587: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21859243512153625
    2. '
' → logprob: -2.218592405319214
    3. ':' → logprob: -3.468592405319214
    4. '       ' → logprob: -3.593592405319214
    5. ':
' → logprob: -3.843592405319214
    6. '    
' → logprob: -6.468592643737793
    7. ' and' → logprob: -6.718592643737793
    8. '[' → logprob: -7.343592643737793
    9. ',' → logprob: -7.343592643737793
    10. '\n' → logprob: -7.968592643737793

Token 588: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6383883357048035
    2. 'possible' → logprob: -1.5133883953094482
    3. ' possible' → logprob: -1.6383883953094482
    4. ' t' → logprob: -3.6383883953094482
    5. 't' (adapté à ' t') → logprob: -4.263388156890869
    6. '
' → logprob: -4.888388156890869
    7. ' candidates' → logprob: -5.888388156890869
    8. ' if' → logprob: -6.388388156890869
    9. 'if' → logprob: -6.638388156890869
    10. ' for' → logprob: -6.888388156890869

Token 589: '_candidate' (ID: 158186)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11565117537975311
    2. '=' → logprob: -3.2406511306762695
    3. '_possible' → logprob: -3.3656511306762695
    4. 'possible' → logprob: -4.4906511306762695
    5. '.' → logprob: -4.7406511306762695
    6. ' =' → logprob: -4.7406511306762695
    7. 'append' → logprob: -6.3656511306762695
    8. 't' → logprob: -7.1156511306762695
    9. '_candidate' → logprob: -7.1156511306762695
    10. '_candidates' → logprob: -7.2406511306762695

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142892003059387
    2. ' =' → logprob: -1.7014288902282715
    3. '.append' → logprob: -11.82642936706543
    4. 's' → logprob: -12.32642936706543
    5. ' ' → logprob: -13.32642936706543
    6. '=int' → logprob: -13.95142936706543
    7. '=t' → logprob: -14.20142936706543
    8. 't' → logprob: -15.70142936706543
    9. '.' → logprob: -15.95142936706543
    10. ',' → logprob: -15.95142936706543

Token 591: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0073183816857635975
    2. ' t' → logprob: -5.507318496704102
    3. 'int' → logprob: -6.132318496704102
    4. 'max' → logprob: -7.007318496704102
    5. ' max' → logprob: -9.882318496704102
    6. ' int' → logprob: -10.007318496704102
    7. 'min' → logprob: -10.132318496704102
    8. '   ' → logprob: -11.257318496704102
    9. '`t' → logprob: -12.757318496704102
    10. ' min' → logprob: -13.382318496704102

Token 592: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9266199160483666e-05
    2. 'min' → logprob: -10.875019073486328
    3. '[min' → logprob: -15.500019073486328
    4. '_max' → logprob: -16.375019073486328
    5. '_MIN' → logprob: -18.250019073486328
    6. 'Min' → logprob: -18.250019073486328
    7. '(min' → logprob: -19.125019073486328
    8. '=min' → logprob: -19.250019073486328
    9. '[' → logprob: -19.625019073486328
    10. '_m' → logprob: -19.875019073486328

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4626646935939789
    2. '
' → logprob: -1.0876647233963013
    3. '<|end|>' → logprob: -3.8376646041870117
    4. '<|end|>' → logprob: -5.337664604187012
    5. ' if' → logprob: -5.462664604187012
    6. ')' → logprob: -7.462664604187012
    7. 'if' → logprob: -7.462664604187012
    8. '    
' → logprob: -7.962664604187012
    9. ' candidates' → logprob: -8.212664604187012
    10. ';' → logprob: -8.587664604187012

Token 594: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21756920218467712
    2. '   ' → logprob: -2.09256911277771
    3. '<|end|>' → logprob: -2.84256911277771
    4. '<|end|>' → logprob: -4.842569351196289
    5. ' if' → logprob: -5.467569351196289
    6. 'if' → logprob: -8.092569351196289
    7. '    
' → logprob: -8.092569351196289
    8. ')' → logprob: -8.717569351196289
    9. ';' → logprob: -8.717569351196289
    10. '
' → logprob: -8.842569351196289

Token 595: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14226751029491425
    2. ' if' → logprob: -2.5172674655914307
    3. '   ' → logprob: -3.0172674655914307
    4. '
' → logprob: -6.01726770401001
    5. 'possible' → logprob: -7.89226770401001
    6. 'while' → logprob: -9.892267227172852
    7. 'for' → logprob: -10.017267227172852
    8. ' candidates' → logprob: -11.392267227172852
    9. '    
' → logprob: -11.642267227172852
    10. '	if' → logprob: -11.642267227172852

Token 596: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16904640197753906
    2. ' t' → logprob: -1.919046401977539
    3. ' (' → logprob: -5.419046401977539
    4. '(t' → logprob: -6.294046401977539
    5. ' isinstance' → logprob: -6.919046401977539
    6. '   ' → logprob: -7.794046401977539
    7. 'x' → logprob: -8.044046401977539
    8. '(' → logprob: -8.169046401977539
    9. '(x' → logprob: -8.919046401977539
    10. 'is' → logprob: -9.794046401977539

Token 597: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.0049314312636852264
    2. '_min' → logprob: -6.004931449890137
    3. '<=' → logprob: -6.379931449890137
    4. ' <=' → logprob: -8.129931449890137
    5. '_candidates' → logprob: -8.254931449890137
    6. 'candidate' → logprob: -8.879931449890137
    7. '_' → logprob: -11.254931449890137
    8. '>=' → logprob: -11.379931449890137
    9. 'min' → logprob: -11.379931449890137
    10. '_max' → logprob: -12.629931449890137

Token 598: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04873361065983772
    2. ' <=' → logprob: -3.048733711242676
    3. '!=' → logprob: -9.298733711242676
    4. ' !=' → logprob: -9.923733711242676
    5. 'is' → logprob: -13.548733711242676
    6. '==' → logprob: -13.548733711242676
    7. '>=' → logprob: -13.673733711242676
    8. '<' → logprob: -15.298733711242676
    9. '>' → logprob: -15.298733711242676
    10. ' is' → logprob: -15.548733711242676

Token 599: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0017029138980433345
    2. ' t' → logprob: -6.376702785491943
    3. '`t' → logprob: -15.126703262329102
    4. '   ' → logprob: -15.251703262329102
    5. '	t' → logprob: -16.3767032623291
    6. 'int' → logprob: -16.6267032623291
    7. '(t' → logprob: -17.5017032623291
    8. ' ' → logprob: -17.6267032623291
    9. '
' → logprob: -18.8767032623291
    10. '  ' → logprob: -18.8767032623291

Token 600: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.015852877870202065
    2. 'ax' → logprob: -4.265852928161621
    3. 'max' → logprob: -6.390852928161621
    4. 'x' → logprob: -12.390852928161621
    5. 'Max' → logprob: -12.765852928161621
    6. '_ax' → logprob: -13.140852928161621
    7. 'a' → logprob: -14.640852928161621
    8. '_MAX' → logprob: -15.140852928161621
    9. '_' → logprob: -15.390852928161621
    10. 's' → logprob: -15.390852928161621

Token 601: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4340398907661438
    2. ':' → logprob: -1.059039831161499
    3. ' and' → logprob: -5.309040069580078
    4. '       ' → logprob: -8.559040069580078
    5. '   ' → logprob: -9.934040069580078
    6. '):
' → logprob: -10.059040069580078
    7. ':
' → logprob: -10.184040069580078
    8. 'and' → logprob: -11.184040069580078
    9. ' :
' → logprob: -11.184040069580078
    10. ':

' → logprob: -11.809040069580078

Token 602: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3529599606990814
    2. '           ' → logprob: -1.7279599905014038
    3. ':
' → logprob: -2.2279598712921143
    4. ' and' → logprob: -5.602960109710693
    5. ':' → logprob: -5.977960109710693
    6. 'possible' → logprob: -5.977960109710693
    7. '   ' → logprob: -6.602960109710693
    8. ' possible' → logprob: -7.102960109710693
    9. '):
' → logprob: -8.352959632873535
    10. ' candidates' → logprob: -8.977959632873535

Token 603: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.05759529396891594
    2. ' possible' → logprob: -3.0575952529907227
    3. '   ' → logprob: -5.307595252990723
    4. 'c' → logprob: -5.807595252990723
    5. ' candidates' → logprob: -7.307595252990723
    6. '       ' → logprob: -8.432595252990723
    7. ' c' → logprob: -10.557595252990723
    8. 'x' → logprob: -10.557595252990723
    9. ' x' → logprob: -11.057595252990723
    10. 'candidate' → logprob: -11.432595252990723

Token 604: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00018816311785485595
    2. '_candidates' → logprob: -8.875187873840332
    3. '_candidate' → logprob: -11.000187873840332
    4. '```' → logprob: -12.000187873840332
    5. '_' → logprob: -12.250187873840332
    6. 's' → logprob: -12.250187873840332
    7. ' _' → logprob: -13.125187873840332
    8. '_c' → logprob: -13.375187873840332
    9. 't' → logprob: -13.375187873840332
    10. ')_' → logprob: -13.625187873840332

Token 605: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003368926409166306
    2. '.' → logprob: -8.000336647033691
    3. ' .' → logprob: -14.375336647033691
    4. '.extend' → logprob: -14.500336647033691
    5. '.app' → logprob: -15.375336647033691
    6. 'append' → logprob: -16.500337600708008
    7. '.ap' → logprob: -17.375337600708008
    8. '.insert' → logprob: -18.500337600708008
    9. '.push' → logprob: -18.750337600708008
    10. '.add' → logprob: -19.125337600708008

Token 606: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.028360504657030106
    2. '(t' → logprob: -3.778360605239868
    3. ' t' → logprob: -5.278360366821289
    4. '	t' → logprob: -14.778360366821289
    5. 'int' → logprob: -15.278360366821289
    6. '(int' → logprob: -15.403360366821289
    7. ' (' → logprob: -15.778360366821289
    8. '(' → logprob: -15.778360366821289
    9. '   ' → logprob: -17.65336036682129
    10. '`t' → logprob: -18.40336036682129

Token 607: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -1.0280383548888494e-06
    2. 'candidate' → logprob: -14.000000953674316
    3. ')' → logprob: -15.875000953674316
    4. '_candidates' → logprob: -17.250001907348633
    5. 'Candidate' → logprob: -18.125001907348633
    6. ' candidate' → logprob: -18.750001907348633
    7. '_min' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.000001907348633
    9. ')_' → logprob: -19.500001907348633
    10. '(candidate' → logprob: -19.750001907348633

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.333223139634356e-05
    2. '   ' → logprob: -11.250033378601074
    3. ' )' → logprob: -11.375033378601074
    4. ')
' → logprob: -11.875033378601074
    5. '<|end|>' → logprob: -13.875033378601074
    6. '       ' → logprob: -15.125033378601074
    7. ')}' → logprob: -16.125032424926758
    8. ')#' → logprob: -16.500032424926758
    9. ')return' → logprob: -16.500032424926758
    10. '}' → logprob: -16.875032424926758

Token 609: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11037937551736832
    2. 'elif' → logprob: -3.110379457473755
    3. '<|end|>' → logprob: -3.485379457473755
    4. ')' → logprob: -3.985379457473755
    5. ' elif' → logprob: -6.235379219055176
    6. '.' → logprob: -6.360379219055176
    7. '```' → logprob: -6.360379219055176
    8. '       ' → logprob: -6.735379219055176
    9. ',' → logprob: -6.985379219055176
    10. '<|end|>' → logprob: -7.235379219055176

Token 610: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04505612328648567
    2. 'elif' → logprob: -3.170056104660034
    3. ' elif' → logprob: -7.170056343078613
    4. 'else' (adapté à ' else') → logprob: -7.420056343078613
    5. ')' → logprob: -8.295056343078613
    6. '.' → logprob: -9.045056343078613
    7. ' else' → logprob: -9.545056343078613
    8. '```' → logprob: -9.795056343078613
    9. '       ' → logprob: -10.045056343078613
    10. '<|end|>' → logprob: -10.170056343078613

Token 611: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7936964631080627
    2. '       ' → logprob: -0.9186964631080627
    3. ':' → logprob: -2.043696403503418
    4. '           ' → logprob: -4.418696403503418
    5. '   ' → logprob: -5.668696403503418
    6. ' if' → logprob: -6.293696403503418
    7. ' pass' → logprob: -7.668696403503418
    8. '<|end|>' → logprob: -8.293696403503418
    9. '.' → logprob: -8.418696403503418
    10. 'if' → logprob: -9.168696403503418

Token 612: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40964317321777344
    2. '           ' → logprob: -1.7846431732177734
    3. 'pass' → logprob: -2.6596431732177734
    4. 'continue' → logprob: -2.9096431732177734
    5. 'possible' → logprob: -4.034643173217773
    6. '   ' → logprob: -4.284643173217773
    7. 'break' → logprob: -4.784643173217773
    8. ' pass' → logprob: -6.409643173217773
    9. 't' → logprob: -6.784643173217773
    10. ' continue' → logprob: -7.409643173217773

Token 613: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.161890983581543
    2. 'break' → logprob: -1.161890983581543
    3. 'print' → logprob: -1.411890983581543
    4. 'possible' → logprob: -2.411890983581543
    5. 'continue' → logprob: -3.286890983581543
    6. '   ' → logprob: -6.786890983581543
    7. '#' (adapté à ' #') → logprob: -6.911890983581543
    8. 't' → logprob: -7.661890983581543
    9. ' pass' → logprob: -8.036890983581543
    10. ' break' → logprob: -8.161890983581543

Token 614: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7904192209243774
    2. 'possible' → logprob: -1.0404192209243774
    3. 'continue' → logprob: -2.165419101715088
    4. 'break' → logprob: -3.290419101715088
    5. 'pass' → logprob: -3.415419101715088
    6. '#' → logprob: -5.540419101715088
    7. '   ' → logprob: -6.290419101715088
    8. '           ' → logprob: -7.290419101715088
    9. 't' → logprob: -7.415419101715088
    10. '       ' → logprob: -7.665419101715088

Token 615: ' t' (ID: 260)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.018161529675126076
    2. 'solution' → logprob: -4.018161296844482
    3. ' feasible' → logprob: -12.26816177368164
    4. '_solution' → logprob: -13.14316177368164
    5. ' valid' → logprob: -13.39316177368164
    6. ' possible' → logprob: -14.26816177368164
    7. ' solutions' → logprob: -14.39316177368164
    8. 'Solution' → logprob: -14.64316177368164
    9. ' ' → logprob: -14.64316177368164
    10. 's' → logprob: -15.26816177368164

Token 616: ' satisfying' (ID: 52718)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8786597847938538
    2. '_candidate' → logprob: -1.128659725189209
    3. ' candidates' → logprob: -2.378659725189209
    4. '_possible' → logprob: -3.003659725189209
    5. ' can' → logprob: -3.128659725189209
    6. ' candidate' → logprob: -3.628659725189209
    7. ' possible' → logprob: -3.628659725189209
    8. 'possible' → logprob: -5.253659725189209
    9. 'candidate' → logprob: -5.253659725189209
    10. '_can' → logprob: -6.253659725189209

Token 617: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.47079548239707947
    2. ' constraints' → logprob: -1.8457955121994019
    3. 't' → logprob: -2.5957953929901123
    4. '0' → logprob: -3.2207953929901123
    5. 'break' → logprob: -3.4707953929901123
    6. 'conditions' → logprob: -4.095795631408691
    7. 'the' → logprob: -4.220795631408691
    8. 'pass' → logprob: -4.970795631408691
    9. 'x' → logprob: -5.095795631408691
    10. 'continue' → logprob: -5.470795631408691

Token 618: '?
' (ID: 3901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4982075095176697
    2. ' continue' → logprob: -0.9982075095176697
    3. '       ' → logprob: -4.4982075691223145
    4. '           ' → logprob: -4.7482075691223145
    5. '	continue' → logprob: -6.8732075691223145
    6. ' continues' → logprob: -6.9982075691223145
    7. '_continue' → logprob: -7.1232075691223145
    8. '   ' → logprob: -7.8732075691223145
    9. '<|end|>' → logprob: -8.123207092285156
    10. ')' → logprob: -9.123207092285156

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27090105414390564
    2. '       ' → logprob: -2.3959009647369385
    3. 'continue' → logprob: -2.7709009647369385
    4. ' continue' → logprob: -3.2709009647369385
    5. ' pass' → logprob: -3.5209009647369385
    6. 'pass' → logprob: -5.145901203155518
    7. ' break' → logprob: -5.395901203155518
    8. 'break' → logprob: -5.520901203155518
    9. '   ' → logprob: -6.645901203155518
    10. '```' → logprob: -8.14590072631836

Token 620: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14539390802383423
    2. 'pass' → logprob: -2.3953938484191895
    3. ' continue' → logprob: -3.8953938484191895
    4. ' pass' → logprob: -4.5203938484191895
    5. 'break' → logprob: -4.7703938484191895
    6. '   ' → logprob: -6.5203938484191895
    7. '       ' → logprob: -6.7703938484191895
    8. '           ' → logprob: -7.1453938484191895
    9. 'print' → logprob: -7.7703938484191895
    10. ' break' → logprob: -8.145394325256348

Token 621: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10721642524003983
    2. ' continue' → logprob: -2.4822163581848145
    3. 'print' → logprob: -4.6072163581848145
    4. 'pass' → logprob: -5.7322163581848145
    5. ' pass' → logprob: -6.1072163581848145
    6. 'break' → logprob: -6.3572163581848145
    7. '   ' → logprob: -8.107216835021973
    8. ' break' → logprob: -8.732216835021973
    9. '       ' → logprob: -8.982216835021973
    10. ' print' → logprob: -9.232216835021973

Token 622: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02896425686776638
    2. ' t' → logprob: -3.7789642810821533
    3. '[t' → logprob: -5.403964042663574
    4. '[int' → logprob: -8.528964042663574
    5. 'possible' → logprob: -8.903964042663574
    6. ' [' → logprob: -8.903964042663574
    7. 'for' → logprob: -9.153964042663574
    8. '[]' → logprob: -9.278964042663574
    9. 'None' → logprob: -9.278964042663574
    10. '[' → logprob: -9.403964042663574

Token 623: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.1356215626001358
    2. '_max' → logprob: -3.0106215476989746
    3. '=' → logprob: -3.3856215476989746
    4. 'min' → logprob: -4.010621547698975
    5. ' =' → logprob: -4.260621547698975
    6. 't' → logprob: -5.010621547698975
    7. 'max' → logprob: -6.135621547698975
    8. '_candidate' → logprob: -7.385621547698975
    9. '=t' → logprob: -7.760621547698975
    10. '_possible' → logprob: -8.135622024536133

Token 624: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.07190119475126266
    2. ' possible' → logprob: -3.3219010829925537
    3. '_possible' → logprob: -3.6969010829925537
    4. '
' → logprob: -6.071901321411133
    5. '.append' → logprob: -6.446901321411133
    6. '=' → logprob: -6.696901321411133
    7. '   ' → logprob: -7.071901321411133
    8. ' =' → logprob: -7.446901321411133
    9. '_candidates' → logprob: -8.071901321411133
    10. '       ' → logprob: -8.196901321411133

Token 625: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011988931335508823
    2. 'diff' → logprob: -4.761989116668701
    3. ' t' → logprob: -6.011989116668701
    4. 'possible' → logprob: -7.886989116668701
    5. 'True' → logprob: -8.386988639831543
    6. 'k' → logprob: -8.761988639831543
    7. ' diff' → logprob: -9.761988639831543
    8. 'abs' → logprob: -9.761988639831543
    9. 'False' → logprob: -11.136988639831543
    10. 'float' → logprob: -12.011988639831543

Token 626: '_max' (ID: 13731)
  Prédit: '_candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.3780231475830078
    2. '_max' → logprob: -1.2530231475830078
    3. '_min' → logprob: -3.628023147583008
    4. '<=' → logprob: -6.503023147583008
    5. 'max' → logprob: -7.378023147583008
    6. '_possible' → logprob: -8.878023147583008
    7. ' <=' → logprob: -9.128023147583008
    8. '>' → logprob: -9.878023147583008
    9. 'candidate' → logprob: -10.503023147583008
    10. '>=' → logprob: -10.878023147583008

Token 627: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.37250804901123047
    2. ' >=' → logprob: -1.9975080490112305
    3. '<=' → logprob: -2.1225080490112305
    4. ' <=' → logprob: -3.3725080490112305
    5. '!=' → logprob: -4.3725080490112305
    6. ' !=' → logprob: -5.7475080490112305
    7. '>' → logprob: -5.9975080490112305
    8. ' is' → logprob: -7.1225080490112305
    9. ' <' → logprob: -7.1225080490112305
    10. 'is' → logprob: -7.8725080490112305

Token 628: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010847324738278985
    2. '0' → logprob: -6.876084804534912
    3. ' t' → logprob: -9.876084327697754
    4. '`t' → logprob: -16.00108528137207
    5. '	t' → logprob: -16.37608528137207
    6. '_t' → logprob: -16.50108528137207
    7. '(t' → logprob: -17.00108528137207
    8. '   ' → logprob: -17.12608528137207
    9. '-' → logprob: -17.25108528137207
    10. ' ' → logprob: -17.62608528137207

Token 629: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0002774246677290648
    2. 'min' → logprob: -8.375277519226074
    3. '_max' → logprob: -10.750277519226074
    4. '_candidate' → logprob: -11.500277519226074
    5. '0' → logprob: -11.625277519226074
    6. 't' → logprob: -12.125277519226074
    7. 'x' → logprob: -14.375277519226074
    8. 'Min' → logprob: -16.625276565551758
    9. '_candidates' → logprob: -17.375276565551758
    10. 'candidate' → logprob: -17.500276565551758

Token 630: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38331305980682373
    2. '       ' → logprob: -2.3833131790161133
    3. 'possible' → logprob: -2.6333131790161133
    4. '   ' → logprob: -3.3833131790161133
    5. ' if' → logprob: -3.7583131790161133
    6. ' possible' → logprob: -4.133313179016113
    7. ' and' → logprob: -4.383313179016113
    8. '.append' → logprob: -4.508313179016113
    9. '_possible' → logprob: -4.508313179016113
    10. ':
' → logprob: -4.508313179016113

Token 631: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23366111516952515
    2. '           ' → logprob: -2.23366117477417
    3. '   ' → logprob: -3.48366117477417
    4. '<|end|>' → logprob: -3.60866117477417
    5. 'possible' → logprob: -4.60866117477417
    6. ' possible' → logprob: -4.73366117477417
    7. ')' → logprob: -4.85866117477417
    8. '.' → logprob: -5.60866117477417
    9. '```' → logprob: -5.73366117477417
    10. '_possible' → logprob: -6.35866117477417

Token 632: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3344583809375763
    2. 'if' (adapté à ' if') → logprob: -1.709458351135254
    3. 'pass' → logprob: -3.209458351135254
    4. '           ' → logprob: -3.334458351135254
    5. ' possible' → logprob: -5.084458351135254
    6. '       ' → logprob: -5.209458351135254
    7. ' if' → logprob: -5.334458351135254
    8. 't' → logprob: -5.459458351135254
    9. 'elif' → logprob: -5.709458351135254
    10. 'continue' → logprob: -6.584458351135254

Token 633: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1427343785762787
    2. ' t' → logprob: -2.0177342891693115
    3. '   ' → logprob: -9.89273452758789
    4. '	t' → logprob: -13.26773452758789
    5. ' ' → logprob: -13.39273452758789
    6. ' ' → logprob: -13.76773452758789
    7. '  ' → logprob: -14.01773452758789
    8. 'diff' → logprob: -14.14273452758789
    9. '`t' → logprob: -14.39273452758789
    10. '_t' → logprob: -14.64273452758789

Token 634: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.023625344038009644
    2. '_candidate' → logprob: -3.773625373840332
    3. 'max' → logprob: -8.398625373840332
    4. '_min' → logprob: -8.898625373840332
    5. '<=' → logprob: -11.773625373840332
    6. '+' → logprob: -13.148625373840332
    7. '_candidates' → logprob: -13.523625373840332
    8. 'candidate' → logprob: -13.773625373840332
    9. 'Max' → logprob: -13.773625373840332
    10. '_possible' → logprob: -14.023625373840332

Token 635: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2519380748271942
    2. ' >=' → logprob: -1.5019381046295166
    3. '   ' → logprob: -12.251937866210938
    4. ' ' → logprob: -13.626937866210938
    5. ']>=' → logprob: -14.376937866210938
    6. '	' → logprob: -14.501937866210938
    7. ')>=' → logprob: -14.501937866210938
    8. '>' → logprob: -15.001937866210938
    9. '<=' → logprob: -15.501937866210938
    10. '==' → logprob: -15.751937866210938

Token 636: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00018006093159783632
    2. ' t' → logprob: -8.6251802444458
    3. '0' → logprob: -15.2501802444458
    4. '	t' → logprob: -16.625179290771484
    5. 'float' → logprob: -17.625179290771484
    6. '`t' → logprob: -18.000179290771484
    7. '   ' → logprob: -18.125179290771484
    8. '_t' → logprob: -18.375179290771484
    9. 'int' → logprob: -18.875179290771484
    10. '1' → logprob: -19.375179290771484

Token 637: '_min' (ID: 15950)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015955570852383971
    2. ' t' → logprob: -6.501595497131348
    3. '_min' → logprob: -9.376595497131348
    4. '0' → logprob: -12.626595497131348
    5. 'min' → logprob: -12.751595497131348
    6. '_t' → logprob: -14.126595497131348
    7. '_possible' → logprob: -14.876595497131348
    8. '_candidate' → logprob: -15.126595497131348
    9. '   ' → logprob: -15.251595497131348
    10. 'possible' → logprob: -15.501595497131348

Token 638: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15592186152935028
    2. ':' → logprob: -2.0309219360351562
    3. '           ' → logprob: -4.905921936035156
    4. ' and' → logprob: -5.280921936035156
    5. '       ' → logprob: -8.155921936035156
    6. '):
' → logprob: -9.155921936035156
    7. 'and' → logprob: -9.405921936035156
    8. '               ' → logprob: -9.655921936035156
    9. ' :
' → logprob: -10.030921936035156
    10. ',' → logprob: -10.780921936035156

Token 639: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.092471644282341
    2. 'possible' → logprob: -3.0924715995788574
    3. '           ' → logprob: -3.8424715995788574
    4. ' possible' → logprob: -4.342471599578857
    5. ':
' → logprob: -4.967471599578857
    6. ':' → logprob: -6.842471599578857
    7. '):
' → logprob: -9.467472076416016
    8. 'Possible' → logprob: -9.842472076416016
    9. '_possible' → logprob: -9.842472076416016
    10. '```' → logprob: -9.967472076416016

Token 640: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.013227994553744793
    2. ' possible' → logprob: -4.388227939605713
    3. '           ' → logprob: -7.388227939605713
    4. '               ' → logprob: -9.638228416442871
    5. 't' → logprob: -11.388228416442871
    6. '                   ' → logprob: -11.513228416442871
    7. '   ' → logprob: -12.013228416442871
    8. ' t' → logprob: -13.263228416442871
    9. 'pass' → logprob: -13.263228416442871
    10. '       ' → logprob: -13.638228416442871

Token 641: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.0445127372804563e-05
    2. 't' → logprob: -11.50001049041748
    3. '\' → logprob: -17.000009536743164
    4. '_' → logprob: -17.125009536743164
    5. 's' → logprob: -17.250009536743164
    6. 'T' → logprob: -17.500009536743164
    7. '_T' → logprob: -18.250009536743164
    8. '   ' → logprob: -18.625009536743164
    9. '
' → logprob: -18.625009536743164
    10. '```' → logprob: -19.625009536743164

Token 642: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -11.875006675720215
    3. '.extend' → logprob: -17.12500762939453
    4. '.app' → logprob: -17.37500762939453
    5. ' .' → logprob: -17.50000762939453
    6. 'append' → logprob: -17.62500762939453
    7. '=' → logprob: -18.75000762939453
    8. '.add' → logprob: -20.00000762939453
    9. '.ap' → logprob: -20.12500762939453
    10. '.clear' → logprob: -20.25000762939453

Token 643: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018399493768811226
    2. '(t' → logprob: -4.018399715423584
    3. 'int' → logprob: -8.643399238586426
    4. '(int' → logprob: -9.643399238586426
    5. ' t' → logprob: -12.268399238586426
    6. '	t' → logprob: -13.018399238586426
    7. '   ' → logprob: -13.893399238586426
    8. '`t' → logprob: -15.643399238586426
    9. '(' → logprob: -16.268400192260742
    10. ')t' → logprob: -16.643400192260742

Token 644: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0005152635276317596
    2. 'max' → logprob: -8.00051498413086
    3. '_min' → logprob: -8.62551498413086
    4. 'Max' → logprob: -15.50051498413086
    5. '_MAX' → logprob: -18.25051498413086
    6. ' max' → logprob: -18.37551498413086
    7. 'min' → logprob: -18.37551498413086
    8. '	max' → logprob: -18.37551498413086
    9. ')' → logprob: -18.50051498413086
    10. 't' → logprob: -18.62551498413086

Token 645: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.12258882028982e-05
    2. ' )' → logprob: -9.87506103515625
    3. ')
' → logprob: -12.00006103515625
    4. '   ' → logprob: -13.37506103515625
    5. '       ' → logprob: -14.12506103515625
    6. '           ' → logprob: -15.12506103515625
    7. '<|end|>' → logprob: -15.12506103515625
    8. ')}' → logprob: -15.62506103515625
    9. '}' → logprob: -15.75006103515625
    10. '))' → logprob: -16.00006103515625

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4654110074043274
    2. '<|end|>' → logprob: -1.4654109477996826
    3. ')' → logprob: -2.2154109477996826
    4. 'elif' → logprob: -3.7154109477996826
    5. '<|end|>' → logprob: -5.090411186218262
    6. '```' → logprob: -8.340411186218262
    7. ']' → logprob: -8.340411186218262
    8. '.' → logprob: -8.715411186218262
    9. 'else' → logprob: -8.840411186218262
    10. '}' → logprob: -8.965411186218262

Token 647: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.20195411145687103
    2. '   ' → logprob: -2.0769541263580322
    3. 'else' → logprob: -2.9519541263580322
    4. ' elif' → logprob: -5.576953887939453
    5. ' else' → logprob: -7.201953887939453
    6. '```' → logprob: -8.201953887939453
    7. '<|end|>' → logprob: -8.576953887939453
    8. ')' → logprob: -9.201953887939453
    9. '.' → logprob: -9.576953887939453
    10. '	elif' → logprob: -10.076953887939453

Token 648: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.029750604182481766
    2. 'diff' → logprob: -3.5297505855560303
    3. '	diff' → logprob: -16.65475082397461
    4. '(diff' → logprob: -17.40475082397461
    5. ' dif' → logprob: -19.15475082397461
    6. ' ' → logprob: -19.77975082397461
    7. '0' → logprob: -20.52975082397461
    8. '.diff' → logprob: -20.52975082397461
    9. 'Diff' → logprob: -20.52975082397461
    10. '_diff' → logprob: -20.90475082397461

Token 649: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06170949712395668
    2. '<' → logprob: -2.936709403991699
    3. ' ==' → logprob: -5.061709403991699
    4. '==' → logprob: -7.686709403991699
    5. ' >' → logprob: -12.1867094039917
    6. ' ' → logprob: -13.9367094039917
    7. ' ' → logprob: -14.1867094039917
    8. '==-' → logprob: -14.3117094039917
    9. '<int' → logprob: -14.3117094039917
    10. '>' → logprob: -14.6867094039917

Token 650: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16023163497447968
    2. '0' → logprob: -1.910231590270996
    3. '=' → logprob: -12.410231590270996
    4. ' ' → logprob: -13.660231590270996
    5. '   ' → logprob: -14.035231590270996
    6. '  ' → logprob: -14.410231590270996
    7. '```' → logprob: -15.535231590270996
    8. '	' → logprob: -16.097732543945312
    9. '
' → logprob: -16.410232543945312
    10. ' =' → logprob: -16.722732543945312

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975935339927673
    2. ' ' → logprob: -1.8047593832015991
    3. '=' → logprob: -11.80475902557373
    4. '   ' → logprob: -12.42975902557373
    5. '>' → logprob: -13.80475902557373
    6. '  ' → logprob: -14.55475902557373
    7. '```' → logprob: -14.55475902557373
    8. ' ' → logprob: -15.17975902557373
    9. '1' → logprob: -15.61725902557373
    10. ' =' → logprob: -16.117259979248047

Token 652: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.632735013961792
    2. ':
' → logprob: -0.757735013961792
    3. '   ' → logprob: -9.757735252380371
    4. '       ' → logprob: -10.007735252380371
    5. ':

' → logprob: -11.132735252380371
    6. '):
' → logprob: -11.882735252380371
    7. ':
' → logprob: -12.882735252380371
    8. ',' → logprob: -13.382735252380371
    9. '```' → logprob: -13.382735252380371
    10. '=' → logprob: -13.882735252380371

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005399053916335106
    2. '   ' → logprob: -5.255399227142334
    3. '```' → logprob: -10.505398750305176
    4. '<|end|>' → logprob: -10.505398750305176
    5. ':
' → logprob: -10.880398750305176
    6. '           ' → logprob: -11.005398750305176
    7. '     ' → logprob: -11.130398750305176
    8. '[' → logprob: -11.630398750305176
    9. '        
' → logprob: -12.005398750305176
    10. ':' → logprob: -12.005398750305176

Token 654: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024643801152706146
    2. 'possible' → logprob: -4.274643898010254
    3. 't' → logprob: -5.524643898010254
    4. '   ' → logprob: -5.774643898010254
    5. '#' (adapté à ' #') → logprob: -6.274643898010254
    6. ' possible' → logprob: -7.024643898010254
    7. ' t' → logprob: -8.274643898010254
    8. '           ' → logprob: -9.024643898010254
    9. ' #' → logprob: -9.649643898010254
    10. '```' → logprob: -9.899643898010254

Token 655: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16820012032985687
    2. 'possible' → logprob: -1.918200135231018
    3. '   ' → logprob: -5.5432000160217285
    4. '       ' → logprob: -6.2932000160217285
    5. ' possible' → logprob: -7.0432000160217285
    6. ' t' → logprob: -7.2932000160217285
    7. '#' → logprob: -7.4182000160217285
    8. '```' → logprob: -11.918200492858887
    9. '`t' → logprob: -12.668200492858887
    10. '           ' → logprob: -12.668200492858887

Token 656: ' sum' (ID: 4215)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.6399497389793396
    2. 'sum' → logprob: -0.8899497389793396
    3. ' sum' → logprob: -3.3899497985839844
    4. 't' → logprob: -3.6399497985839844
    5. '_sum' → logprob: -6.514949798583984
    6. ' t' → logprob: -7.514949798583984
    7. '_s' → logprob: -11.889949798583984
    8. '_' → logprob: -12.514949798583984
    9. '   ' → logprob: -14.014949798583984
    10. 's' → logprob: -14.014949798583984

Token 657: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6041932106018066
    2. 'at' → logprob: -0.8541932106018066
    3. '=' → logprob: -3.7291932106018066
    4. ' =' → logprob: -5.979193210601807
    5. '   ' → logprob: -7.229193210601807
    6. 't' → logprob: -7.854193210601807
    7. '	at' → logprob: -9.104192733764648
    8. '_at' → logprob: -10.854192733764648
    9. 'candidate' → logprob: -11.104192733764648
    10. '_candidate' → logprob: -11.354192733764648

Token 658: ' maximal' (ID: 65414)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931765079498291
    2. ' t' → logprob: -0.6931765079498291
    3. 'max' → logprob: -10.56817626953125
    4. '   ' → logprob: -12.94317626953125
    5. '	t' → logprob: -15.06817626953125
    6. '`t' → logprob: -15.06817626953125
    7. ' maximal' → logprob: -15.31817626953125
    8. 'possible' → logprob: -16.31817626953125
    9. '_t' → logprob: -17.06817626953125
    10. ' ' → logprob: -17.44317626953125

Token 659: ' feasible' (ID: 58866)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7886874675750732
    2. ' t' → logprob: -0.7886874675750732
    3. '_t' → logprob: -2.4136874675750732
    4. '_possible' → logprob: -7.288687705993652
    5. ' possible' → logprob: -7.663687705993652
    6. ' _' → logprob: -8.788687705993652
    7. '```' → logprob: -9.288687705993652
    8. '_' → logprob: -10.038687705993652
    9. ' ' → logprob: -10.038687705993652
    10. 'possible' → logprob: -10.163687705993652

Token 660: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8115997314453125
    2. ' t' → logprob: -1.0615997314453125
    3. '_t' → logprob: -1.5615997314453125
    4. ' _' → logprob: -9.811599731445312
    5. '   ' → logprob: -10.311599731445312
    6. ' ' → logprob: -11.186599731445312
    7. '	t' → logprob: -11.186599731445312
    8. '_' → logprob: -11.436599731445312
    9. '```' → logprob: -11.436599731445312
    10. '`t' → logprob: -12.436599731445312

Token 661: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.576749324798584
    2. ':' → logprob: -1.201749324798584
    3. ' =' → logprob: -3.076749324798584
    4. '=' → logprob: -3.076749324798584
    5. ':
' → logprob: -3.576749324798584
    6. '   ' → logprob: -4.076749324798584
    7. ',' → logprob: -9.326749801635742
    8. '):
' → logprob: -9.576749801635742
    9. '```' → logprob: -9.701749801635742
    10. '	' → logprob: -10.701749801635742

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08066178858280182
    2. '   ' → logprob: -2.5806617736816406
    3. '=' → logprob: -7.705661773681641
    4. ':
' → logprob: -7.705661773681641
    5. '```' → logprob: -8.08066177368164
    6. 't' → logprob: -8.45566177368164
    7. '
' → logprob: -9.45566177368164
    8. ' =' → logprob: -9.45566177368164
    9. ':' → logprob: -9.70566177368164
    10. '           ' → logprob: -10.08066177368164

Token 663: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04094015061855316
    2. 't' (adapté à ' t') → logprob: -4.165940284729004
    3. 'possible' → logprob: -4.290940284729004
    4. '   ' → logprob: -5.415940284729004
    5. ' possible' → logprob: -5.665940284729004
    6. ' t' → logprob: -5.915940284729004
    7. '```' → logprob: -9.540940284729004
    8. '           ' → logprob: -9.540940284729004
    9. '_possible' → logprob: -10.540940284729004
    10. '     ' → logprob: -11.415940284729004

Token 664: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -6.511406809295295e-06
    2. 'candidate' → logprob: -12.125006675720215
    3. '_candidates' → logprob: -14.000006675720215
    4. 'Candidate' → logprob: -15.750006675720215
    5. '=' → logprob: -16.6250057220459
    6. '_possible' → logprob: -16.8750057220459
    7. '```' → logprob: -17.8750057220459
    8. ' =' → logprob: -18.3750057220459
    9. 'andidate' → logprob: -18.3750057220459
    10. 't' → logprob: -18.5000057220459

Token 665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=t' → logprob: -18.701414108276367
    4. ' ' → logprob: -19.701414108276367
    5. '＝' → logprob: -19.951414108276367
    6. '=
' → logprob: -20.701414108276367
    7. '=}' → logprob: -20.826414108276367
    8. '=

' → logprob: -20.951414108276367
    9. 't' → logprob: -21.201414108276367
    10. ',' → logprob: -21.451414108276367

Token 666: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023246755823493004
    2. ' t' → logprob: -3.7732467651367188
    3. '`t' → logprob: -14.523246765136719
    4. '   ' → logprob: -15.023246765136719
    5. 'int' → logprob: -15.148246765136719
    6. '	t' → logprob: -15.898246765136719
    7. ' ' → logprob: -17.02324676513672
    8. '_t' → logprob: -17.52324676513672
    9. '(t' → logprob: -18.89824676513672
    10. '$t' → logprob: -19.27324676513672

Token 667: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.011049113236367702
    2. 'max' → logprob: -4.511049270629883
    3. 'Max' → logprob: -14.011049270629883
    4. '_min' → logprob: -14.636049270629883
    5. '_MAX' → logprob: -17.886049270629883
    6. ' max' → logprob: -18.386049270629883
    7. 'maximize' → logprob: -18.511049270629883
    8. 'maks' → logprob: -18.511049270629883
    9. '	max' → logprob: -18.761049270629883
    10. '```' → logprob: -18.886049270629883

Token 668: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07121925055980682
    2. '       ' → logprob: -3.5712192058563232
    3. '<|end|>' → logprob: -3.8212192058563232
    4. '
' → logprob: -4.071219444274902
    5. 'possible' → logprob: -7.446219444274902
    6. ' possible' → logprob: -7.821219444274902
    7. '<|end|>' → logprob: -8.446219444274902
    8. ')' → logprob: -8.696219444274902
    9. ' if' → logprob: -10.071219444274902
    10. '```' → logprob: -10.446219444274902

Token 669: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026624906808137894
    2. '       ' → logprob: -3.901624917984009
    3. '<|end|>' → logprob: -5.52662467956543
    4. '```' → logprob: -7.02662467956543
    5. '
' → logprob: -7.65162467956543
    6. ')' → logprob: -8.15162467956543
    7. '.' → logprob: -9.65162467956543
    8. '    
' → logprob: -9.90162467956543
    9. '<|end|>' → logprob: -10.15162467956543
    10. ' if' → logprob: -10.27662467956543

Token 670: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7966204285621643
    2. '   ' → logprob: -1.2966203689575195
    3. 'if' (adapté à ' if') → logprob: -1.2966203689575195
    4. '       ' → logprob: -6.6716203689575195
    5. '<|end|>' → logprob: -8.04662036895752
    6. '	if' → logprob: -8.67162036895752
    7. '```' → logprob: -8.92162036895752
    8. ')' → logprob: -9.17162036895752
    9. '
' → logprob: -9.92162036895752
    10. ';if' → logprob: -10.29662036895752

Token 671: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06993954628705978
    2. ' t' → logprob: -2.694939613342285
    3. '   ' → logprob: -13.569939613342285
    4. '`t' → logprob: -14.444939613342285
    5. ' ' → logprob: -14.944939613342285
    6. ' ' → logprob: -15.319939613342285
    7. '	t' → logprob: -15.569939613342285
    8. 'possible' → logprob: -15.694939613342285
    9. '_t' → logprob: -16.06993865966797
    10. '(t' → logprob: -16.31993865966797

Token 672: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -6.301394023466855e-05
    2. 'candidate' → logprob: -9.750062942504883
    3. 'Candidate' → logprob: -13.500062942504883
    4. '_' → logprob: -13.750062942504883
    5. ' candidate' → logprob: -13.875062942504883
    6. '_max' → logprob: -15.375062942504883
    7. '_candidates' → logprob: -15.500062942504883
    8. '   ' → logprob: -15.750062942504883
    9. '<=' → logprob: -16.250062942504883
    10. '#' → logprob: -16.625062942504883

Token 673: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8892080187797546
    2. ' >=' → logprob: -1.1392080783843994
    3. '<=' → logprob: -1.8892080783843994
    4. '>=' → logprob: -2.1392080783843994
    5. '   ' → logprob: -12.38920783996582
    6. ' ' → logprob: -14.76420783996582
    7. '```' → logprob: -14.76420783996582
    8. ')>=' → logprob: -15.26420783996582
    9. ' !=' → logprob: -15.38920783996582
    10. '>' → logprob: -15.76420783996582

Token 674: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007100477814674377
    2. ' t' → logprob: -7.2507100105285645
    3. '`t' → logprob: -16.250709533691406
    4. '	t' → logprob: -17.875709533691406
    5. '   ' → logprob: -18.625709533691406
    6. '_t' → logprob: -20.125709533691406
    7. '       ' → logprob: -21.625709533691406
    8. ')t' → logprob: -21.750709533691406
    9. ' ' → logprob: -21.875709533691406
    10. ' т' → logprob: -22.125709533691406

Token 675: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.060365608893335e-05
    2. 'min' → logprob: -10.125041007995605
    3. 't' → logprob: -15.250041007995605
    4. '_max' → logprob: -16.12504005432129
    5. '_MIN' → logprob: -16.87504005432129
    6. '```' → logprob: -17.37504005432129
    7. 'Min' → logprob: -17.62504005432129
    8. '0' → logprob: -17.87504005432129
    9. 'MIN' → logprob: -18.00004005432129
    10. 'imin' → logprob: -19.75004005432129

Token 676: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04769953340291977
    2. ':
' → logprob: -3.297699451446533
    3. '       ' → logprob: -4.672699451446533
    4. '<|end|>' → logprob: -9.422699928283691
    5. '   ' → logprob: -9.922699928283691
    6. '):' → logprob: -10.047699928283691
    7. '           ' → logprob: -10.297699928283691
    8. '):
' → logprob: -10.672699928283691
    9. ',' → logprob: -12.172699928283691
    10. '.' → logprob: -12.422699928283691

Token 677: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013797338120639324
    2. '           ' → logprob: -4.763797283172607
    3. ':
' → logprob: -5.638797283172607
    4. ':' → logprob: -7.013797283172607
    5. ' possible' → logprob: -8.638797760009766
    6. '   ' → logprob: -9.138797760009766
    7. '```' → logprob: -9.263797760009766
    8. '):
' → logprob: -9.388797760009766
    9. 'possible' → logprob: -9.388797760009766
    10. '               ' → logprob: -9.888797760009766

Token 678: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.004253031220287085
    2. ' possible' → logprob: -5.504252910614014
    3. '       ' → logprob: -9.004253387451172
    4. '           ' → logprob: -9.879253387451172
    5. '   ' → logprob: -15.504253387451172
    6. '               ' → logprob: -15.754253387451172
    7. 'Possible' → logprob: -16.254253387451172
    8. '_possible' → logprob: -17.754253387451172
    9. ' posible' → logprob: -17.879253387451172
    10. ' possibile' → logprob: -18.754253387451172

Token 679: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.320199877838604e-07
    2. 't' → logprob: -14.75
    3. '\' → logprob: -18.875
    4. '.append' → logprob: -19.625
    5. '_' → logprob: -20.0
    6. ' _' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. 's' → logprob: -20.375
    9. '[' → logprob: -20.875
    10. '           ' → logprob: -20.875

Token 680: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7432603272027336e-06
    2. 'append' → logprob: -13.375001907348633
    3. '           ' → logprob: -16.625001907348633
    4. '.' → logprob: -17.500001907348633
    5. ' .' → logprob: -18.375001907348633
    6. '_append' → logprob: -18.625001907348633
    7. '.extend' → logprob: -18.875001907348633
    8. '       ' → logprob: -20.000001907348633
    9. '```' → logprob: -20.125001907348633
    10. 'appen' → logprob: -20.250001907348633

Token 681: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029756275936961174
    2. '(t' → logprob: -3.5297563076019287
    3. ' t' → logprob: -12.279756546020508
    4. '	t' → logprob: -13.904756546020508
    5. ')t' → logprob: -15.904756546020508
    6. '`t' → logprob: -16.279756546020508
    7. '(' → logprob: -17.779756546020508
    8. '_t' → logprob: -18.029756546020508
    9. ' (' → logprob: -18.779756546020508
    10. '[t' → logprob: -18.779756546020508

Token 682: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.012805575504899025
    2. '_max' → logprob: -4.387805461883545
    3. 'candidate' → logprob: -8.762805938720703
    4. 'max' → logprob: -9.137805938720703
    5. '_candidates' → logprob: -11.637805938720703
    6. '_min' → logprob: -11.887805938720703
    7. 'Candidate' → logprob: -12.137805938720703
    8. ')' → logprob: -12.762805938720703
    9. ' candidate' → logprob: -13.512805938720703
    10. '_' → logprob: -13.762805938720703

Token 683: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12885098159313202
    2. '   ' → logprob: -2.1288509368896484
    3. '<|end|>' → logprob: -6.878850936889648
    4. '       ' → logprob: -7.378850936889648
    5. '}' → logprob: -9.003850936889648
    6. '<|end|>' → logprob: -9.628850936889648
    7. ')
' → logprob: -10.503850936889648
    8. ']' → logprob: -11.503850936889648
    9. '```' → logprob: -12.003850936889648
    10. '.' → logprob: -12.128850936889648

Token 684: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07565231621265411
    2. 'else' → logprob: -2.7006523609161377
    3. 'elif' → logprob: -5.700652122497559
    4. ' else' → logprob: -6.325652122497559
    5. '```' → logprob: -7.700652122497559
    6. ' elif' → logprob: -9.825652122497559
    7. ')' → logprob: -10.825652122497559
    8. '[' → logprob: -11.825652122497559
    9. '<|end|>' → logprob: -12.075652122497559
    10. '	else' → logprob: -12.200652122497559

Token 685: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5888676047325134
    2. '   ' → logprob: -0.8388676047325134
    3. 'elif' → logprob: -4.838867664337158
    4. ' else' → logprob: -5.338867664337158
    5. '```' → logprob: -9.3388671875
    6. ' elif' → logprob: -10.2138671875
    7. '	else' → logprob: -13.0888671875
    8. '       ' → logprob: -14.8388671875
    9. '	elif' → logprob: -15.5888671875
    10. ')' → logprob: -16.0888671875

Token 686: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.721951961517334
    2. ':' → logprob: -1.221951961517334
    3. ':
' → logprob: -1.971951961517334
    4. '           ' → logprob: -2.596951961517334
    5. '```' → logprob: -5.971951961517334
    6. '   ' → logprob: -6.471951961517334
    7. '{' → logprob: -7.471951961517334
    8. '):
' → logprob: -8.096952438354492
    9. '{
' → logprob: -8.346952438354492
    10. '<|end|>' → logprob: -9.346952438354492

Token 687: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43895527720451355
    2. '       ' → logprob: -1.188955307006836
    3. 'possible' → logprob: -3.313955307006836
    4. ' possible' → logprob: -4.563955307006836
    5. '```' → logprob: -6.313955307006836
    6. 'continue' → logprob: -7.188955307006836
    7. ' continue' → logprob: -7.688955307006836
    8. 't' → logprob: -7.938955307006836
    9. ' t' → logprob: -8.688955307006836
    10. '   ' → logprob: -9.313955307006836

Token 688: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.002916022902354598
    2. 'pass' → logprob: -6.502915859222412
    3. '           ' → logprob: -6.752915859222412
    4. '       ' → logprob: -9.00291633605957
    5. ' possible' → logprob: -10.00291633605957
    6. 't' → logprob: -10.37791633605957
    7. 'continue' → logprob: -10.87791633605957
    8. '   ' → logprob: -11.62791633605957
    9. '#' → logprob: -11.87791633605957
    10. '               ' → logprob: -12.50291633605957

Token 689: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009163398644886911
    2. ' t' → logprob: -7.000916481018066
    3. '   ' → logprob: -12.250916481018066
    4. '	t' → logprob: -17.50091552734375
    5. '_t' → logprob: -17.75091552734375
    6. '       ' → logprob: -18.12591552734375
    7. '`t' → logprob: -18.12591552734375
    8. '           ' → logprob: -18.62591552734375
    9. '  ' → logprob: -19.37591552734375
    10. '(t' → logprob: -20.12591552734375

Token 690: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.04865027591586113
    2. '_max' → logprob: -3.0486502647399902
    3. '_candidate' → logprob: -9.798650741577148
    4. 'min' → logprob: -12.423650741577148
    5. '_possible' → logprob: -13.298650741577148
    6. 'max' → logprob: -13.798650741577148
    7. '_candidates' → logprob: -14.798650741577148
    8. '_diff' → logprob: -16.29865074157715
    9. '#' → logprob: -17.79865074157715
    10. '_t' → logprob: -17.79865074157715

Token 691: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020273713394999504
    2. '<=' → logprob: -4.145273685455322
    3. ' >' → logprob: -6.270273685455322
    4. ' >=' → logprob: -6.270273685455322
    5. '>' → logprob: -8.02027416229248
    6. '>=' → logprob: -9.14527416229248
    7. '```' → logprob: -12.14527416229248
    8. ' <' → logprob: -13.02027416229248
    9. ' !=' → logprob: -13.52027416229248
    10. ')' → logprob: -14.39527416229248

Token 692: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9027791495318525e-05
    2. ' t' → logprob: -10.875019073486328
    3. '`t' → logprob: -17.750019073486328
    4. '	t' → logprob: -18.625019073486328
    5. ')t' → logprob: -20.125019073486328
    6. '   ' → logprob: -20.250019073486328
    7. 'int' → logprob: -20.375019073486328
    8. '_t' → logprob: -21.125019073486328
    9. 'т' → logprob: -21.375019073486328
    10. '0' → logprob: -21.375019073486328

Token 693: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0495280846953392
    2. 'max' → logprob: -3.674528121948242
    3. 't' → logprob: -3.799528121948242
    4. '_min' → logprob: -7.799528121948242
    5. ' t' → logprob: -9.174528121948242
    6. 'x' → logprob: -11.049528121948242
    7. 'Max' → logprob: -11.299528121948242
    8. '0' → logprob: -12.049528121948242
    9. '_MAX' → logprob: -12.049528121948242
    10. '_t' → logprob: -12.174528121948242

Token 694: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3937670588493347
    2. ':' → logprob: -1.1437671184539795
    3. '):
' → logprob: -5.1437668800354
    4. '):' → logprob: -7.8937668800354
    5. '           ' → logprob: -8.018767356872559
    6. '       ' → logprob: -8.643767356872559
    7. '```' → logprob: -10.393767356872559
    8. '():
' → logprob: -10.518767356872559
    9. ')' → logprob: -10.643767356872559
    10. ':

' → logprob: -11.018767356872559

Token 695: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6169229745864868
    2. 'possible' → logprob: -1.2419229745864868
    3. '               ' → logprob: -1.8669229745864868
    4. ' possible' → logprob: -4.241922855377197
    5. '```' → logprob: -6.616922855377197
    6. '       ' → logprob: -6.866922855377197
    7. '   ' → logprob: -9.366923332214355
    8. 't' → logprob: -10.241923332214355
    9. '``' → logprob: -10.741923332214355
    10. 'Possible' → logprob: -11.491923332214355

Token 696: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.00026217024424113333
    2. '           ' → logprob: -8.500262260437012
    3. ' possible' → logprob: -9.750262260437012
    4. '               ' → logprob: -15.500262260437012
    5. '   ' → logprob: -16.000261306762695
    6. '       ' → logprob: -16.250261306762695
    7. '```' → logprob: -18.250261306762695
    8. '_possible' → logprob: -18.250261306762695
    9. 'Possible' → logprob: -18.625261306762695
    10. ' posible' → logprob: -18.875261306762695

Token 697: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9027791495318525e-05
    2. 't' → logprob: -10.875019073486328
    3. 'possible' → logprob: -19.125019073486328
    4. '\' → logprob: -19.625019073486328
    5. 's' → logprob: -21.125019073486328
    6. 'to' → logprob: -22.250019073486328
    7. '[t' → logprob: -22.375019073486328
    8. '	t' → logprob: -22.625019073486328
    9. '   ' → logprob: -22.750019073486328
    10. ''s' → logprob: -22.750019073486328

Token 698: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.250003814697266
    3. '           ' → logprob: -13.500003814697266
    4. 'append' → logprob: -15.625003814697266
    5. '.extend' → logprob: -16.375003814697266
    6. '```' → logprob: -17.875003814697266
    7. ' .' → logprob: -18.875003814697266
    8. '       ' → logprob: -19.250003814697266
    9. '.app' → logprob: -19.500003814697266
    10. '.add' → logprob: -19.875003814697266

Token 699: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.47495681833243e-05
    2. '(t' → logprob: -11.000024795532227
    3. ' t' → logprob: -11.750024795532227
    4. '	t' → logprob: -17.125024795532227
    5. '   ' → logprob: -17.375024795532227
    6. '`t' → logprob: -17.500024795532227
    7. '(' → logprob: -19.625024795532227
    8. ')t' → logprob: -20.250024795532227
    9. '       ' → logprob: -20.625024795532227
    10. '           ' → logprob: -21.375024795532227

Token 700: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.91732100979425e-05
    2. 'min' → logprob: -10.375039100646973
    3. '_max' → logprob: -11.750039100646973
    4. '_m' → logprob: -19.87504005432129
    5. 'max' → logprob: -20.00004005432129
    6. '(min' → logprob: -20.25004005432129
    7. 'Min' → logprob: -20.75004005432129
    8. '[min' → logprob: -20.87504005432129
    9. 't' → logprob: -21.00004005432129
    10. '	min' → logprob: -21.12504005432129

Token 701: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -11.125019073486328
    3. '   ' → logprob: -13.750019073486328
    4. ' )' → logprob: -14.000019073486328
    5. ')}' → logprob: -14.250019073486328
    6. '<|end|>' → logprob: -14.250019073486328
    7. '}' → logprob: -15.250019073486328
    8. '       ' → logprob: -15.500019073486328
    9. '))' → logprob: -16.375019073486328
    10. '),' → logprob: -16.500019073486328

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5834313631057739
    2. 'else' → logprob: -0.8334313631057739
    3. 'elif' → logprob: -5.333431243896484
    4. '```' → logprob: -6.083431243896484
    5. ' else' → logprob: -7.958431243896484
    6. ' elif' → logprob: -12.958431243896484
    7. '[]' → logprob: -13.708431243896484
    8. '``' → logprob: -13.833431243896484
    9. '[' → logprob: -14.833431243896484
    10. ')' → logprob: -14.833431243896484

Token 703: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.006189241539686918
    2. '   ' → logprob: -5.256189346313477
    3. 'elif' → logprob: -7.006189346313477
    4. '```' → logprob: -10.506189346313477
    5. ' else' → logprob: -10.756189346313477
    6. ' elif' → logprob: -17.256189346313477
    7. '[]' → logprob: -17.631189346313477
    8. '	else' → logprob: -17.631189346313477
    9. '}else' → logprob: -18.631189346313477
    10. '_else' → logprob: -18.881189346313477

Token 704: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026444505900144577
    2. ':
' → logprob: -3.651444435119629
    3. '   ' → logprob: -9.026444435119629
    4. '       ' → logprob: -11.526444435119629
    5. '<|end|>' → logprob: -12.401444435119629
    6. '[' → logprob: -12.651444435119629
    7. '=' → logprob: -13.651444435119629
    8. ':

' → logprob: -14.151444435119629
    9. '):
' → logprob: -14.276444435119629
    10. '{' → logprob: -14.276444435119629

Token 705: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.726595241460018e-05
    2. '```' → logprob: -10.62503719329834
    3. '       ' → logprob: -11.37503719329834
    4. '[' → logprob: -14.12503719329834
    5. '#' → logprob: -15.87503719329834
    6. ' for' → logprob: -16.500038146972656
    7. 'possible' → logprob: -16.625038146972656
    8. '``' → logprob: -16.750038146972656
    9. '   ' → logprob: -16.750038146972656
    10. 'for' → logprob: -17.125038146972656

Token 706: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.12524396181106567
    2. '   ' → logprob: -2.875243902206421
    3. 'for' → logprob: -3.125243902206421
    4. ' possible' → logprob: -4.375244140625
    5. ' for' → logprob: -5.375244140625
    6. '#' (adapté à ' #') → logprob: -9.000244140625
    7. '
' → logprob: -10.875244140625
    8. ' possibles' → logprob: -11.875244140625
    9. 't' → logprob: -12.000244140625
    10. '_possible' → logprob: -12.500244140625

Token 707: ' diff' (ID: 8868)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.27876073122024536
    2. 'for' → logprob: -1.5287606716156006
    3. '#' → logprob: -4.15376091003418
    4. '   ' → logprob: -5.15376091003418
    5. 'if' → logprob: -5.40376091003418
    6. 't' → logprob: -8.02876091003418
    7. 'candidate' → logprob: -10.27876091003418
    8. 'c' → logprob: -10.52876091003418
    9. 'poss' → logprob: -10.52876091003418
    10. ' for' → logprob: -11.02876091003418

Token 708: '==' (ID: 560)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8916993141174316
    2. ' ==' → logprob: -1.1416993141174316
    3. ' =' → logprob: -1.8916993141174316
    4. '==' → logprob: -2.8916993141174316
    5. '=' → logprob: -3.3916993141174316
    6. '_values' → logprob: -4.141699314117432
    7. '_possible' → logprob: -4.891699314117432
    8. ' in' → logprob: -6.891699314117432
    9. '   ' → logprob: -7.016699314117432
    10. 's' → logprob: -7.016699314117432

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029752805829048157
    2. ' ' → logprob: -3.529752731323242
    3. '=' → logprob: -13.029752731323242
    4. ' =' → logprob: -16.529752731323242
    5. ' ' → logprob: -16.779752731323242
    6. '   ' → logprob: -16.904752731323242
    7. '```' → logprob: -17.029752731323242
    8. '==' → logprob: -17.279752731323242
    9. '  ' → logprob: -18.654752731323242
    10. '
' → logprob: -19.279752731323242

Token 710: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.72650146484375
    2. ':
' → logprob: -1.22650146484375
    3. ':' → logprob: -1.97650146484375
    4. '
' → logprob: -2.60150146484375
    5. '       ' → logprob: -4.72650146484375
    6. '    
' → logprob: -7.72650146484375
    7. '<|end|>' → logprob: -7.85150146484375
    8. '```' → logprob: -8.22650146484375
    9. '  
' → logprob: -9.10150146484375
    10. ',' → logprob: -9.35150146484375

Token 711: ' constant' (ID: 9594)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9222469329833984
    2. ' =' → logprob: -1.2972469329833984
    3. '=' → logprob: -1.5472469329833984
    4. '_possible' → logprob: -3.2972469329833984
    5. '_candidates' → logprob: -3.4222469329833984
    6. '_range' → logprob: -4.422246932983398
    7. '.append' → logprob: -5.047246932983398
    8. 'possible' → logprob: -5.172246932983398
    9. '_min' → logprob: -5.672246932983398
    10. '_candidate' → logprob: -5.797246932983398

Token 712: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18471285700798035
    2. '
' → logprob: -1.8097128868103027
    3. ':
' → logprob: -6.059712886810303
    4. ':' → logprob: -7.434712886810303
    5. '    
' → logprob: -7.559712886810303
    6. '<|end|>' → logprob: -7.684712886810303
    7. '       ' → logprob: -8.184712409973145
    8. ',' → logprob: -8.309712409973145
    9. '```' → logprob: -8.934712409973145
    10. '  
' → logprob: -9.059712409973145

Token 713: ' all' (ID: 722)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.42973634600639343
    2. 'all' → logprob: -1.0547363758087158
    3. ' all' → logprob: -7.554736137390137
    4. 'any' → logprob: -8.304736137390137
    5. ' t' → logprob: -9.054736137390137
    6. 'int' → logprob: -9.429736137390137
    7. 'possible' → logprob: -10.554736137390137
    8. '   ' → logprob: -12.429736137390137
    9. 'valid' → logprob: -12.554736137390137
    10. '```' → logprob: -12.554736137390137

Token 714: ' feasible' (ID: 58866)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0030303560197353363
    2. 'int' → logprob: -6.628030300140381
    3. ' t' → logprob: -7.253030300140381
    4. '   ' → logprob: -8.128030776977539
    5. 'fe' → logprob: -8.253030776977539
    6. ' feasible' → logprob: -8.378030776977539
    7. 'possible' → logprob: -8.878030776977539
    8. 'valid' → logprob: -10.503030776977539
    9. 'integer' → logprob: -11.628030776977539
    10. '#' → logprob: -11.878030776977539

Token 715: ' t' (ID: 260)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.2584628164768219
    2. 't' → logprob: -1.5084627866744995
    3. '   ' → logprob: -5.383462905883789
    4. ' t' → logprob: -6.508462905883789
    5. '```' → logprob: -8.133462905883789
    6. 'ts' → logprob: -10.508462905883789
    7. '
' → logprob: -11.258462905883789
    8. '\' → logprob: -11.258462905883789
    9. ',' → logprob: -11.758462905883789
    10. 'possible' → logprob: -11.883462905883789

Token 716: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051480457186698914
    2. '
' → logprob: -3.051480531692505
    3. ':' → logprob: -6.926480293273926
    4. ':
' → logprob: -7.051480293273926
    5. '    
' → logprob: -7.926480293273926
    6. ',' → logprob: -8.801480293273926
    7. '```' → logprob: -8.926480293273926
    8. 'possible' → logprob: -9.051480293273926
    9. '  
' → logprob: -9.551480293273926
    10. '<|end|>' → logprob: -9.801480293273926

Token 717: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011508172610774636
    2. 'possible' → logprob: -7.501150608062744
    3. '```' → logprob: -7.626150608062744
    4. '
' → logprob: -10.376151084899902
    5. 'import' → logprob: -10.751151084899902
    6. 't' → logprob: -11.126151084899902
    7. '       ' → logprob: -11.626151084899902
    8. 'for' → logprob: -11.626151084899902
    9. 'from' → logprob: -12.251151084899902
    10. '#' → logprob: -12.376151084899902

Token 718: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4885769188404083
    2. 'for' → logprob: -1.363576889038086
    3. 'if' → logprob: -2.113576889038086
    4. 'from' → logprob: -5.863576889038086
    5. 'import' → logprob: -5.863576889038086
    6. 't' → logprob: -6.363576889038086
    7. '#' (adapté à ' #') → logprob: -6.488576889038086
    8. '   ' → logprob: -7.738576889038086
    9. 'c' → logprob: -8.613576889038086
    10. 'start' → logprob: -8.988576889038086

Token 719: ' try' (ID: 2075)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.196458637714386
    2. 'if' → logprob: -2.571458578109741
    3. 'for' → logprob: -3.196458578109741
    4. 't' → logprob: -3.446458578109741
    5. '#' → logprob: -3.696458578109741
    6. 'start' → logprob: -6.57145881652832
    7. 'low' → logprob: -7.44645881652832
    8. 'from' → logprob: -7.44645881652832
    9. 'lower' → logprob: -7.57145881652832
    10. 'import' → logprob: -7.82145881652832

Token 720: ' all' (ID: 722)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2540450096130371
    2. 'for' → logprob: -2.129045009613037
    3. 'possible' → logprob: -2.379045009613037
    4. '[int' → logprob: -5.129045009613037
    5. '[t' → logprob: -5.879045009613037
    6. 'int' → logprob: -6.504045009613037
    7. 'import' → logprob: -7.004045009613037
    8. ' t' → logprob: -7.129045009613037
    9. 'range' → logprob: -8.254045486450195
    10. '   ' → logprob: -8.379045486450195

Token 721: ' feasible' (ID: 58866)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04090993478894234
    2. 'for' → logprob: -3.665910005569458
    3. ' t' → logprob: -5.540909767150879
    4. 'range' → logprob: -5.665909767150879
    5. '   ' → logprob: -6.165909767150879
    6. 'int' → logprob: -6.415909767150879
    7. 'import' → logprob: -7.040909767150879
    8. '[int' → logprob: -7.290909767150879
    9. '[t' → logprob: -7.540909767150879
    10. ' for' → logprob: -7.540909767150879

Token 722: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4199446439743042
    2. '_t' → logprob: -1.1699446439743042
    3. '   ' → logprob: -4.294944763183594
    4. ' t' → logprob: -4.294944763183594
    5. 'ts' → logprob: -5.919944763183594
    6. ' =' → logprob: -7.794944763183594
    7. 's' → logprob: -8.044944763183594
    8. 'for' → logprob: -8.294944763183594
    9. '_ts' → logprob: -8.294944763183594
    10. '
' → logprob: -8.669944763183594

Token 723: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07168306410312653
    2. 'for' → logprob: -3.571683168411255
    3. ' for' → logprob: -4.071682929992676
    4. ' =' → logprob: -5.321682929992676
    5. '=' → logprob: -5.821682929992676
    6. 'c' → logprob: -5.946682929992676
    7. '[' → logprob: -5.946682929992676
    8. '```' → logprob: -5.946682929992676
    9. 'range' → logprob: -6.196682929992676
    10. 'possible' → logprob: -6.696682929992676

Token 724: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001285471604205668
    2. '[' → logprob: -7.501285552978516
    3. '[int' → logprob: -8.626285552978516
    4. '[c' → logprob: -8.626285552978516
    5. ' range' → logprob: -8.876285552978516
    6. '{' → logprob: -9.251285552978516
    7. '[t' → logprob: -9.626285552978516
    8. 'possible' → logprob: -10.001285552978516
    9. 'c' → logprob: -11.876285552978516
    10. '[pos' → logprob: -12.251285552978516

Token 725: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9664794206619263
    2. '   ' → logprob: -1.0914794206619263
    3. ' for' → logprob: -1.7164794206619263
    4. '
' → logprob: -2.7164793014526367
    5. 'range' → logprob: -3.8414793014526367
    6. 'possible' → logprob: -5.091479301452637
    7. ' range' → logprob: -6.341479301452637
    8. ' if' → logprob: -6.341479301452637
    9. 'if' → logprob: -6.466479301452637
    10. '[' → logprob: -6.591479301452637

Token 726: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.5452555418014526
    2. 'range' → logprob: -1.0452555418014526
    3. 'min' → logprob: -3.920255661010742
    4. '(range' → logprob: -3.920255661010742
    5. '_range' → logprob: -4.420255661010742
    6. '(min' → logprob: -4.795255661010742
    7. 'int' → logprob: -5.670255661010742
    8. ' range' → logprob: -6.795255661010742
    9. 'in' → logprob: -6.920255661010742
    10. '_max' → logprob: -7.420255661010742

Token 727: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6751338243484497
    2. '   ' → logprob: -1.5501338243484497
    3. '..' → logprob: -2.55013370513916
    4. '...' → logprob: -2.55013370513916
    5. ':' → logprob: -3.42513370513916
    6. ' =' → logprob: -3.80013370513916
    7. '=' → logprob: -4.67513370513916
    8. 'if' → logprob: -4.80013370513916
    9. ':
' → logprob: -5.05013370513916
    10. 'for' → logprob: -5.05013370513916

Token 728: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0016629199963063002
    2. ' t' → logprob: -6.751662731170654
    3. 'int' → logprob: -7.626662731170654
    4. ' int' → logprob: -12.501663208007812
    5. '`t' → logprob: -14.001663208007812
    6. '   ' → logprob: -14.876663208007812
    7. '(t' → logprob: -16.501663208007812
    8. '	t' → logprob: -16.501663208007812
    9. '
' → logprob: -16.751663208007812
    10. ' ' → logprob: -16.751663208007812

Token 729: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0009122979827225208
    2. 'max' → logprob: -7.000912189483643
    3. '_min' → logprob: -14.3759126663208
    4. 'int' → logprob: -16.500911712646484
    5. '_MAX' → logprob: -17.875911712646484
    6. '+' → logprob: -18.000911712646484
    7. 'Max' → logprob: -18.125911712646484
    8. '_' → logprob: -18.125911712646484
    9. '__' → logprob: -19.375911712646484
    10. ''_' → logprob: -19.375911712646484

Token 730: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17305311560630798
    2. 'for' → logprob: -2.673053026199341
    3. ' for' → logprob: -3.048053026199341
    4. '
' → logprob: -3.298053026199341
    5. '```' → logprob: -5.54805326461792
    6. ',' → logprob: -7.79805326461792
    7. ':
' → logprob: -8.048052787780762
    8. 'possible' → logprob: -8.423052787780762
    9. ':' → logprob: -9.048052787780762
    10. '    
' → logprob: -9.173052787780762

Token 731: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.09588296711444855
    2. ' find' → logprob: -2.8458828926086426
    3. 'possible' → logprob: -3.8458828926086426
    4. 't' → logprob: -6.095882892608643
    5. 'check' → logprob: -6.095882892608643
    6. 'c' → logprob: -6.095882892608643
    7. 'min' → logprob: -6.845882892608643
    8. 'consider' → logprob: -7.345882892608643
    9. ' candidates' → logprob: -7.470882892608643
    10. '   ' → logprob: -7.595882892608643

Token 732: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5306469202041626
    2. 't' → logprob: -2.155646800994873
    3. 'possible' → logprob: -2.405646800994873
    4. 'the' → logprob: -2.655646800994873
    5. 'min' → logprob: -2.905646800994873
    6. 'minimal' → logprob: -3.905646800994873
    7. 'valid' → logprob: -4.030646800994873
    8. '```' → logprob: -4.280646800994873
    9. 'x' → logprob: -5.280646800994873
    10. 'optimal' → logprob: -5.655646800994873

Token 733: ' total' (ID: 3609)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1862117499113083
    2. 'possible' → logprob: -2.4362118244171143
    3. ' t' → logprob: -3.9362118244171143
    4. '_t' → logprob: -4.186211585998535
    5. 'int' → logprob: -4.436211585998535
    6. 'for' → logprob: -4.561211585998535
    7. 'x' → logprob: -4.936211585998535
    8. '[int' → logprob: -4.936211585998535
    9. '```' → logprob: -6.436211585998535
    10. '(int' → logprob: -6.436211585998535

Token 734: ' weight' (ID: 6049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20343132317066193
    2. '_t' → logprob: -2.7034313678741455
    3. '```' → logprob: -2.7034313678741455
    4. 'x' → logprob: -3.8284313678741455
    5. 'for' → logprob: -4.578431129455566
    6. 'weights' → logprob: -5.578431129455566
    7. ' t' → logprob: -6.203431129455566
    8. '_weights' → logprob: -6.453431129455566
    9. '
' → logprob: -6.578431129455566
    10. '1' → logprob: -6.828431129455566

Token 735: ' mass' (ID: 4842)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6581882834434509
    2. '   ' → logprob: -1.0331883430480957
    3. 'for' → logprob: -2.4081883430480957
    4. ' for' → logprob: -3.4081883430480957
    5. '    
' → logprob: -7.158188343048096
    6. 'possible' → logprob: -7.158188343048096
    7. ',' → logprob: -7.783188343048096
    8. '```' → logprob: -8.533187866210938
    9. '
' → logprob: -8.908187866210938
    10. ' candidates' → logprob: -9.033187866210938

Token 736: ' ax' (ID: 6807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6979020237922668
    2. '
' → logprob: -1.572901964187622
    3. 'for' → logprob: -1.572901964187622
    4. ' for' → logprob: -2.572901964187622
    5. 'possible' → logprob: -4.822902202606201
    6. ' possible' → logprob: -7.322902202606201
    7. '    
' → logprob: -7.697902202606201
    8. '[' → logprob: -8.322901725769043
    9. 'range' → logprob: -8.447901725769043
    10. '[
' → logprob: -8.447901725769043

Token 737: '+' (ID: 10)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.45004236698150635
    2. 's' → logprob: -1.4500423669815063
    3. 't' → logprob: -2.325042247772217
    4. 'sum' → logprob: -4.700042247772217
    5. '=' → logprob: -4.825042247772217
    6. 'b' → logprob: -5.200042247772217
    7. 'ss' → logprob: -6.200042247772217
    8. '```' → logprob: -6.825042247772217
    9. 'd' → logprob: -7.075042247772217
    10. '0' → logprob: -8.200042724609375

Token 738: 'by' (ID: 2345)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0066552190110087395
    2. '+b' → logprob: -6.131655216217041
    3. 'y' → logprob: -6.256655216217041
    4. 'd' → logprob: -6.881655216217041
    5. 't' → logprob: -7.506655216217041
    6. '+' → logprob: -8.0066556930542
    7. 'by' → logprob: -8.5066556930542
    8. '```' → logprob: -9.0066556930542
    9. '+y' → logprob: -10.0066556930542
    10. 'py' → logprob: -10.2566556930542

Token 739: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14860226213932037
    2. '
' → logprob: -2.023602247238159
    3. 'for' → logprob: -5.773602485656738
    4. '```' → logprob: -7.148602485656738
    5. ' for' → logprob: -7.398602485656738
    6. ',' → logprob: -7.648602485656738
    7. '    
' → logprob: -8.023602485656738
    8. '       ' → logprob: -8.773602485656738
    9. '<|end|>' → logprob: -9.523602485656738
    10. ',
' → logprob: -9.648602485656738

Token 740: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005572033114731312
    2. 'for' → logprob: -6.1305718421936035
    3. '
' → logprob: -6.3805718421936035
    4. ' for' → logprob: -6.5055718421936035
    5. '```' → logprob: -9.255572319030762
    6. '    
' → logprob: -10.005572319030762
    7. '       ' → logprob: -10.630572319030762
    8. ',' → logprob: -11.255572319030762
    9. '#' → logprob: -13.005572319030762
    10. '    ' → logprob: -13.880572319030762

Token 741: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.719647228717804
    2. ' for' → logprob: -1.0946471691131592
    3. '   ' → logprob: -1.9696471691131592
    4. 'possible' → logprob: -3.969647169113159
    5. '       ' → logprob: -4.469647407531738
    6. 't' → logprob: -5.594647407531738
    7. '```' → logprob: -5.969647407531738
    8. ' possible' → logprob: -6.344647407531738
    9. '
' → logprob: -8.344647407531738
    10. ' t' → logprob: -8.969647407531738

Token 742: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08364977687597275
    2. ' for' → logprob: -2.8336498737335205
    3. '   ' → logprob: -4.208649635314941
    4. 't' → logprob: -5.958649635314941
    5. 'possible' → logprob: -5.958649635314941
    6. '
' → logprob: -7.458649635314941
    7. 'range' → logprob: -8.583649635314941
    8. ' possible' → logprob: -8.708649635314941
    9. 'if' → logprob: -9.083649635314941
    10. '       ' → logprob: -9.208649635314941

Token 743: ' reduce' (ID: 10389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9494791626930237
    2. 'find' → logprob: -1.324479103088379
    3. 'possible' → logprob: -1.949479103088379
    4. 'c' → logprob: -3.074479103088379
    5. 'consider' → logprob: -3.699479103088379
    6. '#' → logprob: -3.949479103088379
    7. 't' → logprob: -3.949479103088379
    8. 'min' → logprob: -4.199479103088379
    9. 'if' → logprob: -4.199479103088379
    10. 'continue' → logprob: -5.199479103088379

Token 744: ' complexity' (ID: 37588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9675818681716919
    2. 't' → logprob: -1.467581868171692
    3. 'range' → logprob: -2.3425817489624023
    4. 'possible' → logprob: -2.5925817489624023
    5. 'the' → logprob: -2.9675817489624023
    6. '#' → logprob: -3.0925817489624023
    7. 'import' → logprob: -3.2175817489624023
    8. 'search' → logprob: -4.092581748962402
    9. 'c' → logprob: -4.217581748962402
    10. '   ' → logprob: -4.717581748962402

Token 745: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021615633741021156
    2. ' for' → logprob: -4.146615505218506
    3. 'for' → logprob: -5.521615505218506
    4. '       ' → logprob: -7.146615505218506
    5. '
' → logprob: -7.271615505218506
    6. ',' → logprob: -10.396615982055664
    7. '    
' → logprob: -11.021615982055664
    8. '```' → logprob: -11.896615982055664
    9. '    ' → logprob: -12.521615982055664
    10. 'import' → logprob: -12.646615982055664

Token 746: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31170374155044556
    2. 'c' → logprob: -2.061703681945801
    3. ' for' → logprob: -2.686703681945801
    4. 'possible' → logprob: -3.561703681945801
    5. 'import' → logprob: -4.311703681945801
    6. ' candidates' → logprob: -5.061703681945801
    7. '   ' → logprob: -5.061703681945801
    8. 't' → logprob: -5.186703681945801
    9. '       ' → logprob: -5.436703681945801
    10. ' possible' → logprob: -5.936703681945801

Token 747: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.015948263928294182
    2. 'for' → logprob: -4.765948295593262
    3. ' t' → logprob: -5.765948295593262
    4. '   ' → logprob: -6.390948295593262
    5. '[t' → logprob: -6.890948295593262
    6. 'possible' → logprob: -8.015948295593262
    7. 'import' → logprob: -8.140948295593262
    8. '[' → logprob: -8.265948295593262
    9. 'c' → logprob: -8.640948295593262
    10. '0' → logprob: -9.515948295593262

Token 748: '_min' (ID: 15950)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6384369134902954
    2. 'range' → logprob: -1.8884369134902954
    3. '=' → logprob: -2.138436794281006
    4. 's' → logprob: -2.888436794281006
    5. '_min' → logprob: -3.513436794281006
    6. ' =' → logprob: -3.638436794281006
    7. '_candidates' → logprob: -3.638436794281006
    8. '_range' → logprob: -4.013436794281006
    9. 'in' → logprob: -4.513436794281006
    10. 'min' → logprob: -4.763436794281006

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5121237635612488
    2. '   ' → logprob: -1.1371238231658936
    3. ' and' → logprob: -3.2621238231658936
    4. '<|end|>' → logprob: -4.5121235847473145
    5. '
' → logprob: -4.7621235847473145
    6. '=' → logprob: -5.2621235847473145
    7. ' =' → logprob: -5.3871235847473145
    8. ')' → logprob: -6.1371235847473145
    9. ',
' → logprob: -6.6371235847473145
    10. ':' → logprob: -6.7621235847473145

Token 750: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0890948697924614
    2. ' t' → logprob: -2.464094877243042
    3. '   ' → logprob: -8.964095115661621
    4. '`t' → logprob: -10.964095115661621
    5. '0' → logprob: -12.214095115661621
    6. '```' → logprob: -13.339095115661621
    7. ' ' → logprob: -13.714095115661621
    8. '(t' → logprob: -14.339095115661621
    9. '	t' → logprob: -14.589095115661621
    10. '``' → logprob: -14.839095115661621

Token 751: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.020816178992390633
    2. '_min' → logprob: -4.145816326141357
    3. 't' → logprob: -5.645816326141357
    4. 'max' → logprob: -6.770816326141357
    5. '_t' → logprob: -9.8958158493042
    6. 'Max' → logprob: -11.5208158493042
    7. '_mid' → logprob: -11.6458158493042
    8. ' t' → logprob: -12.2708158493042
    9. 'min' → logprob: -12.5208158493042
    10. '_m' → logprob: -12.7708158493042

Token 752: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04110685735940933
    2. 'c' → logprob: -4.041106700897217
    3. 'possible' → logprob: -4.041106700897217
    4. 'for' → logprob: -5.416106700897217
    5. '
' → logprob: -8.166107177734375
    6. '    
' → logprob: -9.291107177734375
    7. 'candidate' → logprob: -9.291107177734375
    8. 't' → logprob: -9.416107177734375
    9. ' for' → logprob: -10.416107177734375
    10. '[c' → logprob: -10.666107177734375

Token 753: ' the' (ID: 290)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5909646153450012
    2. '0' → logprob: -1.2159645557403564
    3. 't' → logprob: -1.9659645557403564
    4. ' (' → logprob: -5.4659647941589355
    5. '(' → logprob: -5.8409647941589355
    6. '(int' → logprob: -6.4659647941589355
    7. ' t' → logprob: -7.8409647941589355
    8. ' ' → logprob: -7.8409647941589355
    9. '   ' → logprob: -9.340964317321777
    10. 'int' → logprob: -9.465964317321777

Token 754: ' integer' (ID: 16336)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.37578678131103516
    2. '0' → logprob: -2.250786781311035
    3. ' t' → logprob: -2.250786781311035
    4. '(t' → logprob: -2.750786781311035
    5. ' (' → logprob: -3.500786781311035
    6. ' ' → logprob: -5.375786781311035
    7. '(x' → logprob: -6.625786781311035
    8. '(' → logprob: -7.125786781311035
    9. '(int' → logprob: -7.500786781311035
    10. 'x' → logprob: -8.000786781311035

Token 755: ' t' (ID: 260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30030062794685364
    2. 't' → logprob: -1.9253005981445312
    3. 'values' → logprob: -2.4253005981445312
    4. ' values' → logprob: -4.925300598144531
    5. 'parts' → logprob: -5.175300598144531
    6. '(s' → logprob: -5.925300598144531
    7. 'points' → logprob: -6.550300598144531
    8. ' parts' → logprob: -6.675300598144531
    9. 'part' → logprob: -6.800300598144531
    10. 'vals' → logprob: -6.925300598144531

Token 756: ' just' (ID: 1327)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7177253365516663
    2. 's' → logprob: -1.3427252769470215
    3. '0' → logprob: -2.2177252769470215
    4. '_candidates' → logprob: -2.8427252769470215
    5. ' _' → logprob: -3.7177252769470215
    6. '_s' → logprob: -4.4677252769470215
    7. '```' → logprob: -4.8427252769470215
    8. '_range' → logprob: -5.4677252769470215
    9. '(s' → logprob: -5.4677252769470215
    10. '_' → logprob: -5.4677252769470215

Token 757: ' to' (ID: 316)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.7961397767066956
    2. 'below' → logprob: -0.7961397767066956
    3. 'before' → logprob: -2.421139717102051
    4. '0' → logprob: -6.546139717102051
    5. 'between' → logprob: -6.671139717102051
    6. ' above' → logprob: -6.671139717102051
    7. ' below' → logprob: -7.171139717102051
    8. 'around' → logprob: -7.171139717102051
    9. 'greater' → logprob: -7.171139717102051
    10. 'inside' → logprob: -7.296139717102051

Token 758: ' be' (ID: 413)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.8806493878364563
    2. 't' → logprob: -1.0056493282318115
    3. 'the' → logprob: -2.2556493282318115
    4. 'check' → logprob: -2.8806493282318115
    5. 'min' → logprob: -4.255649566650391
    6. '0' → logprob: -4.255649566650391
    7. 'evaluate' → logprob: -5.505649566650391
    8. 'try' → logprob: -5.880649566650391
    9. '```' → logprob: -5.880649566650391
    10. 'expl' → logprob: -6.005649566650391

Token 759: ' sure' (ID: 3239)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4235736131668091
    2. 'int' → logprob: -2.4235734939575195
    3. 'around' → logprob: -2.4235734939575195
    4. 'checked' → logprob: -3.1735734939575195
    5. 'close' → logprob: -3.5485734939575195
    6. 'between' → logprob: -3.6735734939575195
    7. 'near' → logprob: -3.7985734939575195
    8. 'in' → logprob: -4.6735734939575195
    9. ' around' → logprob: -4.7985734939575195
    10. 'x' → logprob: -5.2985734939575195

Token 760: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22918225824832916
    2. 'possible' → logprob: -1.854182243347168
    3. '
' → logprob: -3.229182243347168
    4. 'c' → logprob: -5.479182243347168
    5. ' possible' → logprob: -6.104182243347168
    6. '```' → logprob: -7.229182243347168
    7. 't' → logprob: -7.854182243347168
    8. ' candidates' → logprob: -7.979182243347168
    9. '    
' → logprob: -8.229182243347168
    10. ',' → logprob: -9.104182243347168

Token 761: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03475670516490936
    2. '
' → logprob: -3.784756660461426
    3. 'possible' → logprob: -4.534756660461426
    4. '```' → logprob: -7.659756660461426
    5. ' possible' → logprob: -9.284756660461426
    6. '    
' → logprob: -9.409756660461426
    7. 'c' → logprob: -10.659756660461426
    8. '``' → logprob: -11.534756660461426
    9. 'for' → logprob: -11.659756660461426
    10. ' candidates' → logprob: -12.409756660461426

Token 762: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.08425603061914444
    2. 'for' → logprob: -2.9592559337615967
    3. '   ' → logprob: -3.9592559337615967
    4. '       ' → logprob: -5.334256172180176
    5. ' possible' → logprob: -5.959256172180176
    6. ' for' → logprob: -6.834256172180176
    7. 'c' → logprob: -7.084256172180176
    8. 'if' → logprob: -8.209256172180176
    9. 'poss' → logprob: -9.709256172180176
    10. '
' → logprob: -9.834256172180176

Token 763: ' Clamp' (ID: 191815)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.29997506737709045
    2. 'for' → logprob: -1.424975037574768
    3. 'c' → logprob: -4.0499749183654785
    4. 'candidate' → logprob: -7.7999749183654785
    5. ' for' → logprob: -8.674975395202637
    6. 't' → logprob: -8.799975395202637
    7. 'poss' → logprob: -9.049975395202637
    8. 'if' → logprob: -9.174975395202637
    9. '   ' → logprob: -9.174975395202637
    10. ' possible' → logprob: -9.299975395202637

Token 764: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06455203145742416
    2. ' t' → logprob: -3.189552068710327
    3. '   ' → logprob: -4.189551830291748
    4. 'def' → logprob: -5.689551830291748
    5. 'import' → logprob: -6.564551830291748
    6. 'start' → logprob: -8.439552307128906
    7. 'from' → logprob: -8.814552307128906
    8. '```' → logprob: -8.939552307128906
    9. 'min' → logprob: -9.189552307128906
    10. 'int' → logprob: -9.314552307128906

Token 765: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0089953001588583
    2. 'min' → logprob: -5.008995532989502
    3. 's' → logprob: -7.133995532989502
    4. '_candidates' → logprob: -7.258995532989502
    5. 'c' → logprob: -8.258995056152344
    6. '   ' → logprob: -9.383995056152344
    7. '=' → logprob: -9.383995056152344
    8. '=min' → logprob: -9.508995056152344
    9. '_low' → logprob: -9.633995056152344
    10. ' =' → logprob: -9.633995056152344

Token 766: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0188307985663414
    2. ' =' → logprob: -4.0188307762146
    3. '=max' → logprob: -7.3938307762146
    4. '=int' → logprob: -9.768831253051758
    5. '=min' → logprob: -12.518831253051758
    6. 't' → logprob: -13.393831253051758
    7. '   ' → logprob: -14.143831253051758
    8. 'max' → logprob: -14.268831253051758
    9. 'if' → logprob: -14.893831253051758
    10. '```' → logprob: -14.893831253051758

Token 767: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09302152693271637
    2. '0' → logprob: -2.4680216312408447
    3. ' t' → logprob: -5.843021392822266
    4. 'max' → logprob: -7.343021392822266
    5. 'int' → logprob: -7.843021392822266
    6. ' ' → logprob: -9.718021392822266
    7. '`t' → logprob: -10.468021392822266
    8. ' max' → logprob: -11.593021392822266
    9. ' int' → logprob: -12.093021392822266
    10. 'float' → logprob: -12.093021392822266

Token 768: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.004195098299533129
    2. 'max' → logprob: -5.504195213317871
    3. 'ax' → logprob: -9.129195213317871
    4. 'Max' → logprob: -12.129195213317871
    5. '_min' → logprob: -13.004195213317871
    6. '0' → logprob: -16.004194259643555
    7. '_MAX' → logprob: -17.129194259643555
    8. '=' → logprob: -17.254194259643555
    9. '```' → logprob: -17.254194259643555
    10. ' max' → logprob: -17.379194259643555

Token 769: ' inside' (ID: 6772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3900468349456787
    2. ' =' → logprob: -1.1400468349456787
    3. '=max' → logprob: -6.640047073364258
    4. '   ' → logprob: -6.890047073364258
    5. '=int' → logprob: -8.140047073364258
    6. '=min' → logprob: -8.140047073364258
    7. 'if' → logprob: -8.640047073364258
    8. ' if' → logprob: -10.140047073364258
    9. '=None' → logprob: -11.265047073364258
    10. 't' → logprob: -11.390047073364258

Token 770: ' reasonable' (ID: 19599)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2786678075790405
    2. 'max' → logprob: -1.5286678075790405
    3. '[' → logprob: -1.7786678075790405
    4. '0' → logprob: -1.9036678075790405
    5. 'int' → logprob: -3.02866792678833
    6. '[max' → logprob: -3.15366792678833
    7. '[min' → logprob: -3.27866792678833
    8. '(int' → logprob: -3.77866792678833
    9. '[-' → logprob: -4.52866792678833
    10. '-' → logprob: -5.27866792678833

Token 771: ' limits' (ID: 22406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2600095272064209
    2. ' range' → logprob: -2.010009527206421
    3. 'bounds' → logprob: -3.135009527206421
    4. 'limits' → logprob: -3.885009527206421
    5. '[-' → logprob: -4.635009765625
    6. 'ranges' → logprob: -4.760009765625
    7. ' bounds' → logprob: -5.635009765625
    8. 'bound' → logprob: -5.760009765625
    9. ' limits' → logprob: -6.760009765625
    10. '-' → logprob: -7.010009765625

Token 772: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8732638955116272
    2. ' =' → logprob: -1.6232638359069824
    3. '       ' → logprob: -1.7482638359069824
    4. 't' → logprob: -1.9982638359069824
    5. '=' → logprob: -3.1232638359069824
    6. ',' → logprob: -4.623263835906982
    7. '```' → logprob: -4.623263835906982
    8. 'import' → logprob: -5.748263835906982
    9. ' t' → logprob: -6.498263835906982
    10. ' if' → logprob: -6.623263835906982

Token 773: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061429161578416824
    2. '```' → logprob: -3.436429262161255
    3. 't' → logprob: -4.436429023742676
    4. '       ' → logprob: -4.686429023742676
    5. ' t' → logprob: -6.061429023742676
    6. ',' → logprob: -6.436429023742676
    7. '
' → logprob: -7.311429023742676
    8. '``' → logprob: -7.936429023742676
    9. ' for' → logprob: -8.186429023742676
    10. ' =' → logprob: -8.436429023742676

Token 774: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8595243096351624
    2. ' t' → logprob: -0.9845243096351624
    3. 't' → logprob: -1.8595242500305176
    4. '   ' → logprob: -4.109524250030518
    5. ' max' → logprob: -4.359524250030518
    6. 'max' → logprob: -5.234524250030518
    7. 'import' → logprob: -5.359524250030518
    8. '```' → logprob: -5.609524250030518
    9. ' import' → logprob: -6.859524250030518
    10. ' lower' → logprob: -7.609524250030518

Token 775: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.019389357417821884
    2. 'abs' → logprob: -4.3943891525268555
    3. 'not' → logprob: -5.3943891525268555
    4. 'is' → logprob: -6.3943891525268555
    5. ' t' → logprob: -8.269389152526855
    6. '   ' → logprob: -8.269389152526855
    7. 'float' → logprob: -10.519389152526855
    8. 'math' → logprob: -10.769389152526855
    9. ' isinstance' → logprob: -10.894389152526855
    10. '-' → logprob: -11.394389152526855

Token 776: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0015618811594322324
    2. '_max' → logprob: -6.626562118530273
    3. 'min' → logprob: -8.376562118530273
    4. '>' → logprob: -13.876562118530273
    5. 'max' → logprob: -13.876562118530273
    6. 't' → logprob: -14.501562118530273
    7. '_' → logprob: -14.501562118530273
    8. '```' → logprob: -14.501562118530273
    9. '_MIN' → logprob: -15.126562118530273
    10. '<=' → logprob: -15.501562118530273

Token 777: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6288301944732666
    2. '==' → logprob: -1.6288301944732666
    3. '>' → logprob: -2.5038301944732666
    4. '<' → logprob: -2.6288301944732666
    5. '<=' → logprob: -3.8788301944732666
    6. ' <' → logprob: -4.0038299560546875
    7. ' >' → logprob: -4.0038299560546875
    8. ' <=' → logprob: -4.2538299560546875
    9. ' !=' → logprob: -4.3788299560546875
    10. ' is' → logprob: -4.3788299560546875

Token 778: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3902033970225602e-05
    2. ' float' → logprob: -11.250014305114746
    3. '-' → logprob: -15.250014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '	float' → logprob: -16.62501335144043
    6. '0' → logprob: -16.87501335144043
    7. '=float' → logprob: -17.62501335144043
    8. '    ' → logprob: -17.87501335144043
    9. 'flo' → logprob: -18.12501335144043
    10. '  ' → logprob: -18.12501335144043

Token 779: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.023252349346876144
    2. ''-' → logprob: -3.773252248764038
    3. '('' → logprob: -12.023252487182617
    4. '("-' → logprob: -15.398252487182617
    5. '-' → logprob: -15.523252487182617
    6. '(' → logprob: -15.523252487182617
    7. '['' → logprob: -16.148252487182617
    8. '   ' → logprob: -16.523252487182617
    9. ''s' → logprob: -18.023252487182617
    10. '"-' → logprob: -18.148252487182617

Token 780: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -19.25
    3. '-inf' → logprob: -20.125
    4. ' inf' → logprob: -21.0
    5. ''s' → logprob: -21.125
    6. '100' → logprob: -21.25
    7. ''in' → logprob: -21.75
    8. '_inf' → logprob: -22.625
    9. '   ' → logprob: -22.625
    10. '.inf' → logprob: -22.75

Token 781: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.456594854593277
    2. ')' → logprob: -1.8315948247909546
    3. '')' → logprob: -2.081594944000244
    4. '):
' → logprob: -3.081594944000244
    5. ''):' → logprob: -3.581594944000244
    6. '):' → logprob: -5.206594944000244
    7. '   ' → logprob: -6.831594944000244
    8. ' or' → logprob: -7.706594944000244
    9. '       ' → logprob: -7.831594944000244
    10. ''):
' → logprob: -8.831594467163086

Token 782: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038169484469108284
    2. ' t' → logprob: -8.625381469726562
    3. '           ' → logprob: -9.250381469726562
    4. '   ' → logprob: -9.375381469726562
    5. 't' → logprob: -11.125381469726562
    6. '```' → logprob: -12.875381469726562
    7. ',' → logprob: -13.875381469726562
    8. '               ' → logprob: -14.000381469726562
    9. '      ' → logprob: -14.375381469726562
    10. ' and' → logprob: -15.125381469726562

Token 783: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.18922339379787445
    2. '       ' → logprob: -2.189223289489746
    3. ' t' → logprob: -2.939223289489746
    4. '           ' → logprob: -4.939223289489746
    5. '   ' → logprob: -8.439223289489746
    6. '-' → logprob: -9.689223289489746
    7. '               ' → logprob: -11.064223289489746
    8. ' -' → logprob: -11.689223289489746
    9. ' ' → logprob: -12.189223289489746
    10. '                   ' → logprob: -12.314223289489746

Token 784: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00034416402922943234
    2. 'min' → logprob: -8.000344276428223
    3. '=' → logprob: -12.000344276428223
    4. '_candidates' → logprob: -13.625344276428223
    5. '_max' → logprob: -14.375344276428223
    6. '=min' → logprob: -15.125344276428223
    7. '_MIN' → logprob: -15.625344276428223
    8. 'Min' → logprob: -16.500343322753906
    9. ' =' → logprob: -16.875343322753906
    10. '   ' → logprob: -17.000343322753906

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234475247561932
    2. ' =' → logprob: -5.255234241485596
    3. '=-' → logprob: -14.505234718322754
    4. '=int' → logprob: -16.630233764648438
    5. '=}' → logprob: -18.130233764648438
    6. ',' → logprob: -18.380233764648438
    7. '＝' → logprob: -18.630233764648438
    8. '+=' → logprob: -18.630233764648438
    9. '=t' → logprob: -18.880233764648438
    10. ')' → logprob: -19.005233764648438

Token 786: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15521515905857086
    2. '-int' → logprob: -2.530215263366699
    3. '-y' → logprob: -3.405215263366699
    4. '-x' → logprob: -4.780215263366699
    5. ' -' → logprob: -5.030215263366699
    6. '0' → logprob: -5.030215263366699
    7. '-min' → logprob: -5.280215263366699
    8. '-(' → logprob: -6.530215263366699
    9. '-t' → logprob: -6.530215263366699
    10. 'int' → logprob: -7.905215263366699

Token 787: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006829274818301201
    2. '100' → logprob: -5.006829261779785
    3. '(' → logprob: -9.131829261779785
    4. '1' → logprob: -12.631829261779785
    5. 'int' → logprob: -13.006829261779785
    6. '200' → logprob: -16.2568302154541
    7. '2' → logprob: -16.6318302154541
    8. '999' → logprob: -18.2568302154541
    9. '(int' → logprob: -18.3818302154541
    10. 'sys' → logprob: -18.7568302154541

Token 788: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20387399196624756
    2. '00' → logprob: -2.078874111175537
    3. '000' → logprob: -2.953874111175537
    4. '```' → logprob: -5.328874111175537
    5. '   ' → logprob: -6.578874111175537
    6. '**' → logprob: -8.203873634338379
    7. '1' → logprob: -8.453873634338379
    8. '5' → logprob: -9.078873634338379
    9. '<|end|>' → logprob: -9.453873634338379
    10. '6' → logprob: -9.953873634338379

Token 789: '10' (ID: 702)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3947812616825104
    2. '9' → logprob: -1.394781231880188
    3. '12' → logprob: -2.8947813510894775
    4. '7' → logprob: -4.269781112670898
    5. '18' → logprob: -5.644781112670898
    6. '10' → logprob: -5.644781112670898
    7. '15' → logprob: -6.394781112670898
    8. '8' → logprob: -8.644781112670898
    9. '20' → logprob: -10.644781112670898
    10. '5' → logprob: -10.894781112670898

Token 790: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25612637400627136
    2. '
' → logprob: -1.5061264038085938
    3. '   ' → logprob: -5.881126403808594
    4. '<|end|>' → logprob: -7.756126403808594
    5. '        
' → logprob: -8.256126403808594
    6. '```' → logprob: -8.631126403808594
    7. ')' → logprob: -9.256126403808594
    8. '-' → logprob: -9.631126403808594
    9. '    
' → logprob: -9.631126403808594
    10. 'else' → logprob: -10.131126403808594

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000477620807942003
    2. '   ' → logprob: -8.25047779083252
    3. '```' → logprob: -9.37547779083252
    4. 'if' → logprob: -10.12547779083252
    5. '<|end|>' → logprob: -11.00047779083252
    6. ',' → logprob: -11.00047779083252
    7. ' if' → logprob: -11.37547779083252
    8. ')' → logprob: -11.75047779083252
    9. '           ' → logprob: -12.12547779083252
    10. '.' → logprob: -12.25047779083252

Token 792: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08286211639642715
    2. '   ' → logprob: -3.207862138748169
    3. 'if' (adapté à ' if') → logprob: -3.957862138748169
    4. ' if' → logprob: -4.08286190032959
    5. '```' → logprob: -5.83286190032959
    6. '           ' → logprob: -9.20786190032959
    7. '    ' → logprob: -11.08286190032959
    8. '`' → logprob: -11.08286190032959
    9. '``' → logprob: -11.58286190032959
    10. '        ' → logprob: -11.58286190032959

Token 793: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38688158988952637
    2. ' t' → logprob: -1.1368815898895264
    3. '   ' → logprob: -11.761881828308105
    4. '`t' → logprob: -13.636881828308105
    5. '    ' → logprob: -14.636881828308105
    6. '	t' → logprob: -14.761881828308105
    7. ' ' → logprob: -15.761881828308105
    8. '  ' → logprob: -15.761881828308105
    9. '(t' → logprob: -16.01188087463379
    10. '       ' → logprob: -16.63688087463379

Token 794: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0009716100175864995
    2. 'max' → logprob: -7.250971794128418
    3. '_min' → logprob: -8.250971794128418
    4. '10' → logprob: -15.750971794128418
    5. ' max' → logprob: -15.750971794128418
    6. 'Max' → logprob: -16.2509708404541
    7. '_MAX' → logprob: -17.0009708404541
    8. 't' → logprob: -17.2509708404541
    9. 'min' → logprob: -17.5009708404541
    10. '_' → logprob: -17.8759708404541

Token 795: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.386874258518219
    2. '==' → logprob: -1.1368741989135742
    3. '=' → logprob: -13.761874198913574
    4. ')==' → logprob: -14.636874198913574
    5. ')' → logprob: -14.886874198913574
    6. ']==' → logprob: -15.011874198913574
    7. '===' → logprob: -15.261874198913574
    8. ' =' → logprob: -15.511874198913574
    9. ' ' → logprob: -15.636874198913574
    10. '==-' → logprob: -15.761874198913574

Token 796: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.038743119686841965
    2. ' float' → logprob: -3.913743019104004
    3. '10' → logprob: -4.038743019104004
    4. ' ' → logprob: -7.788743019104004
    5. '   ' → logprob: -14.538743019104004
    6. '	float' → logprob: -14.663743019104004
    7. 'int' → logprob: -14.663743019104004
    8. '  ' → logprob: -15.163743019104004
    9. '100' → logprob: -15.538743019104004
    10. '(float' → logprob: -15.663743019104004

Token 797: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009491967968642712
    2. ''in' → logprob: -4.884491920471191
    3. '10' → logprob: -7.134491920471191
    4. ''' → logprob: -7.509491920471191
    5. '('-' → logprob: -7.759491920471191
    6. '('+' → logprob: -9.759491920471191
    7. ''-' → logprob: -11.634491920471191
    8. ''inc' → logprob: -11.759491920471191
    9. ''s' → logprob: -11.884491920471191
    10. ''int' → logprob: -12.259491920471191

Token 798: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03085058555006981
    2. '10' → logprob: -3.655850648880005
    3. ''in' → logprob: -5.905850410461426
    4. ''' → logprob: -6.405850410461426
    5. ''+' → logprob: -10.655850410461426
    6. ''int' → logprob: -10.655850410461426
    7. ''ex' → logprob: -10.780850410461426
    8. '-inf' → logprob: -11.030850410461426
    9. '('' → logprob: -11.155850410461426
    10. ''s' → logprob: -11.155850410461426

Token 799: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.5263658761978149
    2. '):
' → logprob: -0.9013658761978149
    3. '):' → logprob: -6.401365756988525
    4. ''):' → logprob: -7.276365756988525
    5. ')' → logprob: -8.151366233825684
    6. '**' → logprob: -8.526366233825684
    7. '```' → logprob: -8.776366233825684
    8. '   ' → logprob: -9.776366233825684
    9. ':
' → logprob: -10.026366233825684
    10. ':' → logprob: -10.526366233825684

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038811923004686832
    2. '=' → logprob: -6.503880977630615
    3. '       ' → logprob: -6.628880977630615
    4. '10' → logprob: -7.503880977630615
    5. ' =' → logprob: -7.878880977630615
    6. 't' → logprob: -10.378881454467773
    7. ':' → logprob: -11.003881454467773
    8. '```' → logprob: -11.003881454467773
    9. '          ' → logprob: -11.003881454467773
    10. '   ' → logprob: -11.503881454467773

Token 801: ' t' (ID: 260)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005673298146575689
    2. ' ' → logprob: -7.500567436218262
    3. '   ' → logprob: -12.000567436218262
    4. 't' (adapté à ' t') → logprob: -12.250567436218262
    5. '1' → logprob: -12.625567436218262
    6. '  ' → logprob: -15.875567436218262
    7. '100' → logprob: -16.625566482543945
    8. '+' → logprob: -18.125566482543945
    9. '    ' → logprob: -18.875566482543945
    10. ' t' → logprob: -19.000566482543945

Token 802: '_max' (ID: 13731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12298548221588135
    2. ' =' → logprob: -2.372985363006592
    3. '_max' → logprob: -3.872985363006592
    4. 'max' → logprob: -6.372985363006592
    5. '=max' → logprob: -11.49798583984375
    6. 'Max' → logprob: -12.74798583984375
    7. '_MAX' → logprob: -13.62298583984375
    8. '=_' → logprob: -13.87298583984375
    9. ' max' → logprob: -14.49798583984375
    10. '_=' → logprob: -14.62298583984375

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '   ' → logprob: -16.876928329467773
    4. ' ' → logprob: -18.126928329467773
    5. '=
' → logprob: -18.751928329467773
    6. '=int' → logprob: -19.376928329467773
    7. '+=' → logprob: -19.501928329467773
    8. '=

' → logprob: -19.626928329467773
    9. '＝' → logprob: -19.876928329467773
    10. '=-' → logprob: -20.251928329467773

Token 804: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001294030516874045
    2. ' ' → logprob: -9.000129699707031
    3. '1' → logprob: -12.125129699707031
    4. '   ' → logprob: -14.750129699707031
    5. '  ' → logprob: -16.62512969970703
    6. '+' → logprob: -17.12512969970703
    7. '100' → logprob: -17.87512969970703
    8. 'int' → logprob: -18.25012969970703
    9. '=' → logprob: -18.87512969970703
    10. '(' → logprob: -18.87512969970703

Token 805: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.500028610229492
    3. '1' → logprob: -14.125028610229492
    4. '   ' → logprob: -17.375028610229492
    5. 'int' → logprob: -17.375028610229492
    6. '100' → logprob: -17.875028610229492
    7. '+' → logprob: -18.250028610229492
    8. '(' → logprob: -18.250028610229492
    9. '  ' → logprob: -18.250028610229492
    10. '۱۰' → logprob: -20.250028610229492

Token 806: '**' (ID: 410)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5743212699890137
    2. '
' → logprob: -1.3243212699890137
    3. '```' → logprob: -2.4493212699890137
    4. 'possible' → logprob: -3.8243212699890137
    5. '       ' → logprob: -4.949321269989014
    6. '-' → logprob: -4.949321269989014
    7. '**' → logprob: -5.074321269989014
    8. ':
' → logprob: -5.199321269989014
    9. '_possible' → logprob: -5.324321269989014
    10. 'for' → logprob: -5.449321269989014

Token 807: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. '9' → logprob: -15.375
    3. '```' → logprob: -16.5
    4. '1' → logprob: -17.5
    5. '11' → logprob: -17.875
    6. '+' → logprob: -18.375
    7. '15' → logprob: -18.4375
    8. '20' → logprob: -18.5
    9. '12' → logprob: -18.625
    10. ' ' → logprob: -18.625

Token 808: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027015775442123413
    2. '       ' → logprob: -4.652015686035156
    3. '
' → logprob: -5.277015686035156
    4. 'c' → logprob: -5.777015686035156
    5. 't' → logprob: -5.777015686035156
    6. '```' → logprob: -6.152015686035156
    7. '<|end|>' → logprob: -7.027015686035156
    8. ' candidates' → logprob: -7.402015686035156
    9. ',' → logprob: -7.652015686035156
    10. '    
' → logprob: -8.027015686035156

Token 809: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6973097920417786
    2. 'c' → logprob: -1.5723097324371338
    3. 'for' → logprob: -1.9473097324371338
    4. 'possible' → logprob: -1.9473097324371338
    5. '```' → logprob: -5.572309970855713
    6. ' for' → logprob: -6.072309970855713
    7. '
' → logprob: -6.197309970855713
    8. 't' → logprob: -7.697309970855713
    9. ' possible' → logprob: -8.572309494018555
    10. ' candidates' → logprob: -8.822309494018555

Token 810: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.11000919342041016
    2. 'for' → logprob: -2.36000919342041
    3. 'c' → logprob: -4.86000919342041
    4. '   ' → logprob: -6.48500919342041
    5. '       ' → logprob: -8.48500919342041
    6. 'poss' → logprob: -9.23500919342041
    7. ' for' → logprob: -9.61000919342041
    8. ' possible' → logprob: -10.11000919342041
    9. 'candidate' → logprob: -10.23500919342041
    10. 't' → logprob: -11.36000919342041

Token 811: ' We' (ID: 1416)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2149316370487213
    2. 'for' → logprob: -1.714931607246399
    3. 'c' → logprob: -4.339931488037109
    4. 'candidate' → logprob: -8.83993148803711
    5. 'poss' → logprob: -8.83993148803711
    6. '   ' → logprob: -10.08993148803711
    7. 't' → logprob: -10.33993148803711
    8. ' for' → logprob: -11.96493148803711
    9. ' possible' → logprob: -12.46493148803711
    10. '```' → logprob: -12.96493148803711

Token 812: ' check' (ID: 2371)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.46810653805732727
    2. 'c' → logprob: -1.0931065082550049
    3. 'for' → logprob: -3.968106508255005
    4. 's' → logprob: -5.218106746673584
    5. '.append' → logprob: -5.843106746673584
    6. 'poss' → logprob: -5.843106746673584
    7. '_possible' → logprob: -5.968106746673584
    8. '_candidates' → logprob: -6.343106746673584
    9. '#' → logprob: -6.593106746673584
    10. ' possible' → logprob: -7.093106746673584

Token 813: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16720497608184814
    2. 'for' → logprob: -2.1672048568725586
    3. ' for' → logprob: -4.167204856872559
    4. ' t' → logprob: -4.292204856872559
    5. '[t' → logprob: -4.792204856872559
    6. 'possible' → logprob: -6.917204856872559
    7. '   ' → logprob: -7.417204856872559
    8. 'c' → logprob: -8.667204856872559
    9. '[' → logprob: -9.167204856872559
    10. ' possible' → logprob: -10.292204856872559

Token 814: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.6547342538833618
    2. 'for' → logprob: -1.7797342538833618
    3. 's' → logprob: -1.9047342538833618
    4. 'in' → logprob: -2.4047341346740723
    5. '_candidates' → logprob: -3.0297341346740723
    6. ' in' → logprob: -4.654734134674072
    7. 'min' → logprob: -4.779734134674072
    8. '=' → logprob: -6.279734134674072
    9. ' candidates' → logprob: -7.154734134674072
    10. '_values' → logprob: -7.154734134674072

Token 815: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01459133718162775
    2. ' candidates' → logprob: -6.014591217041016
    3. 'for' → logprob: -6.014591217041016
    4. '
' → logprob: -6.264591217041016
    5. '_candidates' → logprob: -6.389591217041016
    6. ',c' → logprob: -6.639591217041016
    7. 'and' → logprob: -6.764591217041016
    8. ',
' → logprob: -7.264591217041016
    9. ' and' → logprob: -7.389591217041016
    10. 'c' → logprob: -7.514591217041016

Token 816: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04340813308954239
    2. ' t' → logprob: -3.168408155441284
    3. '(t' → logprob: -8.043408393859863
    4. ' (' → logprob: -10.293408393859863
    5. '   ' → logprob: -10.668408393859863
    6. '0' → logprob: -10.918408393859863
    7. '(' → logprob: -11.918408393859863
    8. ' ' → logprob: -12.668408393859863
    9. '`t' → logprob: -13.418408393859863
    10. '(int' → logprob: -15.168408393859863

Token 817: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.07737154513597488
    2. '_min' → logprob: -2.827371597290039
    3. 'max' → logprob: -4.202371597290039
    4. 'min' → logprob: -8.327371597290039
    5. ',' → logprob: -10.827371597290039
    6. 'Max' → logprob: -10.952371597290039
    7. '_mid' → logprob: -11.077371597290039
    8. '   ' → logprob: -12.202371597290039
    9. '_m' → logprob: -12.327371597290039
    10. 'and' → logprob: -12.702371597290039

Token 818: ' and' (ID: 326)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.17315557599067688
    2. ',' → logprob: -2.2981555461883545
    3. '   ' → logprob: -3.4231555461883545
    4. 'and' → logprob: -4.173155784606934
    5. ' and' → logprob: -5.048155784606934
    6. ' possible' → logprob: -6.548155784606934
    7. '
' → logprob: -6.548155784606934
    8. 'c' → logprob: -8.423155784606934
    9. 'for' → logprob: -8.548155784606934
    10. '_possible' → logprob: -8.798155784606934

Token 819: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.17056956887245178
    2. '0' → logprob: -2.170569658279419
    3. 't' → logprob: -3.420569658279419
    4. '(' → logprob: -5.54556941986084
    5. ' (' → logprob: -6.04556941986084
    6. '(int' → logprob: -6.17056941986084
    7. '((' → logprob: -6.92056941986084
    8. 'int' → logprob: -8.42056941986084
    9. '(x' → logprob: -9.29556941986084
    10. ' ' → logprob: -9.29556941986084

Token 820: ' around' (ID: 2846)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.012834052555263042
    2. '0' → logprob: -5.512834072113037
    3. 'min' → logprob: -5.512834072113037
    4. '```' → logprob: -6.637834072113037
    5. '_mid' → logprob: -6.762834072113037
    6. 't' → logprob: -7.137834072113037
    7. '_max' → logprob: -8.387833595275879
    8. '_candidates' → logprob: -8.637833595275879
    9. '   ' → logprob: -8.887833595275879
    10. '_MIN' → logprob: -9.012833595275879

Token 821: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19713598489761353
    2. 't' → logprob: -1.8221359252929688
    3. ' t' → logprob: -5.197135925292969
    4. '(' → logprob: -5.572135925292969
    5. ' ' → logprob: -6.072135925292969
    6. '(t' → logprob: -6.322135925292969
    7. '   ' → logprob: -6.697135925292969
    8. 'x' → logprob: -7.322135925292969
    9. ' (' → logprob: -7.572135925292969
    10. '[' → logprob: -7.572135925292969

Token 822: ' since' (ID: 3630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40097036957740784
    2. 'possible' → logprob: -1.1509703397750854
    3. '
' → logprob: -4.650970458984375
    4. 'for' → logprob: -6.650970458984375
    5. ' possible' → logprob: -6.775970458984375
    6. 'c' → logprob: -7.275970458984375
    7. ',' → logprob: -7.650970458984375
    8. '```' → logprob: -8.150970458984375
    9. 't' → logprob: -8.650970458984375
    10. ' for' → logprob: -8.900970458984375

Token 823: ' large' (ID: 4410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5328558087348938
    2. ' ' → logprob: -0.9078558087348938
    3. ' abs' → logprob: -5.407855987548828
    4. 'abs' → logprob: -6.032855987548828
    5. ' t' → logprob: -7.032855987548828
    6. ' possible' → logprob: -7.907855987548828
    7. '[' → logprob: -7.907855987548828
    8. 't' → logprob: -7.907855987548828
    9. 'possible' → logprob: -7.907855987548828
    10. ' (' → logprob: -9.157855987548828

Token 824: ' extremes' (ID: 137517)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021154718473553658
    2. ' ' → logprob: -4.771154880523682
    3. 't' → logprob: -5.521154880523682
    4. 'values' → logprob: -5.646154880523682
    5. ' values' → logprob: -6.521154880523682
    6. '```' → logprob: -7.021154880523682
    7. '#' → logprob: -7.521154880523682
    8. ' t' → logprob: -7.896154880523682
    9. '   ' → logprob: -8.021154403686523
    10. 'range' → logprob: -8.396154403686523

Token 825: ' unlikely' (ID: 36361)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7683802843093872
    2. ' =' → logprob: -1.3933802843093872
    3. ' and' → logprob: -2.1433801651000977
    4. '=' → logprob: -3.5183801651000977
    5. '   ' → logprob: -3.5183801651000977
    6. ' for' → logprob: -4.018380165100098
    7. ' in' → logprob: -4.018380165100098
    8. 't' → logprob: -4.268380165100098
    9. 'for' → logprob: -4.518380165100098
    10. ' candidates' → logprob: -4.518380165100098

Token 826: ' better' (ID: 3432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03911071643233299
    2. ',' → logprob: -4.5391106605529785
    3. ' =' → logprob: -4.5391106605529785
    4. ' for' → logprob: -5.6641106605529785
    5. ':' → logprob: -5.9141106605529785
    6. 't' → logprob: -6.1641106605529785
    7. 'for' → logprob: -6.2891106605529785
    8. '
' → logprob: -6.2891106605529785
    9. '       ' → logprob: -6.7891106605529785
    10. ' to' → logprob: -7.1641106605529785

Token 827: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09363960474729538
    2. '
' → logprob: -2.468639612197876
    3. ' candidates' → logprob: -6.593639373779297
    4. ',' → logprob: -7.093639373779297
    5. 'possible' → logprob: -7.343639373779297
    6. 't' → logprob: -7.343639373779297
    7. 'c' → logprob: -7.843639373779297
    8. '    
' → logprob: -8.593639373779297
    9. '_candidates' → logprob: -9.093639373779297
    10. 'for' → logprob: -9.218639373779297

Token 828: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1275516152381897
    2. 'possible' → logprob: -2.377551555633545
    3. '```' → logprob: -4.377551555633545
    4. 'c' → logprob: -4.502551555633545
    5. ',' → logprob: -7.127551555633545
    6. 't' → logprob: -7.252551555633545
    7. ' possible' → logprob: -7.877551555633545
    8. '
' → logprob: -8.002552032470703
    9. 'for' → logprob: -8.502552032470703
    10. ' candidates' → logprob: -8.752552032470703

Token 829: ' checked' (ID: 15579)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0519070103764534
    2. '   ' → logprob: -3.3019070625305176
    3. ' possible' → logprob: -4.426907062530518
    4. 'for' → logprob: -6.801907062530518
    5. '       ' → logprob: -8.30190658569336
    6. ' for' → logprob: -8.30190658569336
    7. '```' → logprob: -9.42690658569336
    8. 'c' → logprob: -10.05190658569336
    9. 'candidate' → logprob: -10.42690658569336
    10. '
' → logprob: -10.55190658569336

Token 830: '_ts' (ID: 63001)
  Prédit: '_ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ts' → logprob: -0.8748109936714172
    2. ' =' → logprob: -1.2498109340667725
    3. '_t' → logprob: -1.2498109340667725
    4. 'ts' → logprob: -5.374811172485352
    5. '_values' → logprob: -6.374811172485352
    6. 's' → logprob: -6.749811172485352
    7. '=' → logprob: -7.249811172485352
    8. '   ' → logprob: -7.749811172485352
    9. '_times' → logprob: -7.749811172485352
    10. '=[' → logprob: -7.874811172485352

Token 831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740828275680542
    2. '=' → logprob: -0.9740828275680542
    3. '=[' → logprob: -12.849082946777344
    4. ' ' → logprob: -13.974082946777344
    5. ' =[' → logprob: -14.349082946777344
    6. '=[]' → logprob: -14.474082946777344
    7. '   ' → logprob: -14.724082946777344
    8. 's' → logprob: -15.599082946777344
    9. '＝' → logprob: -16.224082946777344
    10. '.extend' → logprob: -16.224082946777344

Token 832: ' {' (ID: 354)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.360317587852478
    2. '[t' → logprob: -1.360317587852478
    3. '[' → logprob: -3.6103177070617676
    4. '{' → logprob: -4.110317707061768
    5. ' {' → logprob: -6.110317707061768
    6. ' set' → logprob: -8.86031723022461
    7. 'set' → logprob: -9.48531723022461
    8. '[int' → logprob: -10.86031723022461
    9. '[-' → logprob: -10.98531723022461
    10. ' ' → logprob: -11.61031723022461

Token 833: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012130453251302242
    2. '0' → logprob: -9.500121116638184
    3. ' t' → logprob: -10.125121116638184
    4. '-' → logprob: -13.250121116638184
    5. '-t' → logprob: -13.375121116638184
    6. '   ' → logprob: -13.500121116638184
    7. 'int' → logprob: -14.250121116638184
    8. 'max' → logprob: -14.500121116638184
    9. '`t' → logprob: -15.250121116638184
    10. '	t' → logprob: -16.2501220703125

Token 834: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.21787267923355103
    2. 't' → logprob: -1.8428726196289062
    3. ' t' → logprob: -3.8428726196289062
    4. 'min' → logprob: -4.467872619628906
    5. '   ' → logprob: -7.217872619628906
    6. 'int' → logprob: -7.217872619628906
    7. '{' → logprob: -7.342872619628906
    8. '0' → logprob: -7.592872619628906
    9. '(t' → logprob: -7.592872619628906
    10. 'Min' → logprob: -8.467872619628906

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034297199454158545
    2. ',t' → logprob: -8.875343322753906
    3. ',
' → logprob: -9.250343322753906
    4. ' ,' → logprob: -9.375343322753906
    5. '}' → logprob: -11.625343322753906
    6. '   ' → logprob: -12.250343322753906
    7. '-' → logprob: -12.375343322753906
    8. ')' → logprob: -14.250343322753906
    9. ' -' → logprob: -14.750343322753906
    10. ',
' → logprob: -15.375343322753906

Token 836: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07250694185495377
    2. ' t' → logprob: -2.822506904602051
    3. '0' → logprob: -4.572506904602051
    4. ' ' → logprob: -8.94750690460205
    5. '   ' → logprob: -11.44750690460205
    6. 'max' → logprob: -12.82250690460205
    7. 'int' → logprob: -13.44750690460205
    8. '	t' → logprob: -13.69750690460205
    9. '`t' → logprob: -13.82250690460205
    10. ' max' → logprob: -14.19750690460205

Token 837: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.14699772000312805
    2. 'max' → logprob: -2.8969976902008057
    3. 't' → logprob: -3.2719976902008057
    4. '0' → logprob: -3.2719976902008057
    5. '_min' → logprob: -5.896997928619385
    6. ',' → logprob: -6.396997928619385
    7. ' t' → logprob: -7.396997928619385
    8. 'Max' → logprob: -9.021997451782227
    9. ' ' → logprob: -9.021997451782227
    10. ' max' → logprob: -9.896997451782227

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001178439473733306
    2. ' ,' → logprob: -6.75117826461792
    3. ',
' → logprob: -12.001178741455078
    4. '}' → logprob: -13.876178741455078
    5. ',t' → logprob: -13.876178741455078
    6. '   ' → logprob: -16.376178741455078
    7. 't' → logprob: -17.876178741455078
    8. ' ,
' → logprob: -17.876178741455078
    9. ',user' → logprob: -18.126178741455078
    10. ',y' → logprob: -18.251178741455078

Token 839: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010275697568431497
    2. '-' → logprob: -7.376027584075928
    3. ' ' → logprob: -7.876027584075928
    4. 'max' → logprob: -11.62602710723877
    5. ' -' → logprob: -12.00102710723877
    6. '   ' → logprob: -13.12602710723877
    7. '1' → logprob: -13.50102710723877
    8. 't' → logprob: -13.62602710723877
    9. ' max' → logprob: -15.50102710723877
    10. '-t' → logprob: -15.87602710723877

Token 840: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024870390188880265
    2. '-' → logprob: -8.375248908996582
    3. 'max' → logprob: -11.500248908996582
    4. 't' → logprob: -12.625248908996582
    5. ' ' → logprob: -12.875248908996582
    6. 'int' → logprob: -14.375248908996582
    7. '-t' → logprob: -15.125248908996582
    8. '1' → logprob: -15.250248908996582
    9. '(' → logprob: -15.375248908996582
    10. '   ' → logprob: -15.625248908996582

Token 841: '}

' (ID: 943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14309625327587128
    2. '}' → logprob: -2.0180962085723877
    3. '}
' → logprob: -8.893095970153809
    4. ' ,' → logprob: -9.018095970153809
    5. '   ' → logprob: -9.143095970153809
    6. ' }' → logprob: -10.268095970153809
    7. '}

' → logprob: -11.018095970153809
    8. ',
' → logprob: -13.393095970153809
    9. '       ' → logprob: -13.518095970153809
    10. '}
' → logprob: -14.768095970153809

Token 842: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013336466625332832
    2. 'for' → logprob: -4.513336658477783
    3. '
' → logprob: -6.263336658477783
    4. ' for' → logprob: -8.138336181640625
    5. '    
' → logprob: -9.638336181640625
    6. '```' → logprob: -11.513336181640625
    7. ',' → logprob: -12.638336181640625
    8. 'possible' → logprob: -13.388336181640625
    9. '       ' → logprob: -13.513336181640625
    10. '<|end|>' → logprob: -13.763336181640625

Token 843: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03086087666451931
    2. '   ' → logprob: -3.5308609008789062
    3. 'possible' → logprob: -7.530860900878906
    4. ' for' → logprob: -8.030860900878906
    5. '
' → logprob: -8.405860900878906
    6. '       ' → logprob: -11.030860900878906
    7. 'c' → logprob: -12.780860900878906
    8. '```' → logprob: -13.030860900878906
    9. '	for' → logprob: -14.030860900878906
    10. '    
' → logprob: -14.280860900878906

Token 844: ' filter' (ID: 6690)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011391390580683947
    2. '   ' → logprob: -9.875113487243652
    3. 'best' → logprob: -10.000113487243652
    4. '
' → logprob: -11.375113487243652
    5. ' for' → logprob: -13.000113487243652
    6. 'possible' → logprob: -13.375113487243652
    7. '       ' → logprob: -14.125113487243652
    8. 'min' → logprob: -14.750113487243652
    9. 'c' → logprob: -15.000113487243652
    10. 'results' → logprob: -16.50011444091797

Token 845: ' valid' (ID: 4529)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8907949924468994
    2. 't' → logprob: -1.3907949924468994
    3. ' =' → logprob: -1.5157949924468994
    4. 'ts' → logprob: -3.0157949924468994
    5. 'checked' → logprob: -3.0157949924468994
    6. '_ts' → logprob: -5.01579475402832
    7. '   ' → logprob: -5.64079475402832
    8. 'filtered' → logprob: -5.76579475402832
    9. '=lambda' → logprob: -6.64079475402832
    10. '={' → logprob: -6.64079475402832

Token 846: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3365665674209595
    2. '=' → logprob: -1.4615665674209595
    3. ' =' → logprob: -1.4615665674209595
    4. 'ts' → logprob: -2.08656644821167
    5. 'possible' → logprob: -2.58656644821167
    6. '_ts' → logprob: -3.21156644821167
    7. 'checked' → logprob: -4.58656644821167
    8. '{' → logprob: -5.33656644821167
    9. '_t' → logprob: -5.58656644821167
    10. '   ' → logprob: -5.58656644821167

Token 847: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18528829514980316
    2. ' =' → logprob: -1.8102883100509644
    3. '   ' → logprob: -5.310288429260254
    4. 'for' → logprob: -8.310288429260254
    5. 'valid' → logprob: -9.435288429260254
    6. 'filtered' → logprob: -9.935288429260254
    7. 't' → logprob: -10.185288429260254
    8. 'possible' → logprob: -10.185288429260254
    9. '       ' → logprob: -10.560288429260254
    10. '=set' → logprob: -10.685288429260254

Token 848: ' bounds' (ID: 30227)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.43880802392959595
    2. '[t' → logprob: -1.8138079643249512
    3. '[' → logprob: -1.9388079643249512
    4. 'range' → logprob: -3.938807964324951
    5. '{' → logprob: -4.188807964324951
    6. '[x' → logprob: -5.188807964324951
    7. '[c' → logprob: -5.813807964324951
    8. 'filter' → logprob: -6.813807964324951
    9. '[i' → logprob: -6.813807964324951
    10. 't' → logprob: -6.938807964324951

Token 849: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.24215829372406
    2. '   ' → logprob: -1.49215829372406
    3. '=' → logprob: -1.86715829372406
    4. ' =' → logprob: -2.1171584129333496
    5. 'checked' → logprob: -2.3671584129333496
    6. 'possible' → logprob: -2.4921584129333496
    7. 'valid' → logprob: -3.4921584129333496
    8. '
' → logprob: -6.61715841293335
    9. 'filtered' → logprob: -6.86715841293335
    10. 'for' → logprob: -7.24215841293335

Token 850: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20426417887210846
    2. ' =' → logprob: -1.7042641639709473
    3. '   ' → logprob: -5.954264163970947
    4. '       ' → logprob: -8.454264640808105
    5. 'checked' → logprob: -11.579264640808105
    6. 'valid' → logprob: -11.829264640808105
    7. 'filtered' → logprob: -12.204264640808105
    8. 'possible' → logprob: -12.454264640808105
    9. '           ' → logprob: -12.829264640808105
    10. '={' → logprob: -12.829264640808105

Token 851: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.19330133497714996
    2. 'checked' → logprob: -1.9433013200759888
    3. 'valid' → logprob: -3.9433014392852783
    4. 'for' → logprob: -4.943301200866699
    5. '   ' → logprob: -5.568301200866699
    6. '       ' → logprob: -6.568301200866699
    7. ' possible' → logprob: -8.1933012008667
    8. 'filtered' → logprob: -8.4433012008667
    9. ' checked' → logprob: -9.0683012008667
    10. 'poss' → logprob: -9.8183012008667

Token 852: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.020629825070500374
    2. '_ts' → logprob: -3.8956298828125
    3. '_possible' → logprob: -10.5206298828125
    4. 't' → logprob: -11.5206298828125
    5. 'possible' → logprob: -11.7706298828125
    6. 's' → logprob: -11.8956298828125
    7. ' =' → logprob: -11.8956298828125
    8. '_candidates' → logprob: -12.0206298828125
    9. '{' → logprob: -12.1456298828125
    10. '=' → logprob: -12.3956298828125

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '=set' → logprob: -15.880233764648438
    4. '={' → logprob: -17.255233764648438
    5. '   ' → logprob: -17.880233764648438
    6. '.update' → logprob: -18.130233764648438
    7. '=[' → logprob: -18.380233764648438
    8. '.=' → logprob: -18.630233764648438
    9. '+=' → logprob: -19.005233764648438
    10. '=[]' → logprob: -19.130233764648438

Token 854: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.005490110255777836
    2. '[i' → logprob: -6.005490303039551
    3. '[x' → logprob: -6.505490303039551
    4. '[' → logprob: -7.255490303039551
    5. '{' → logprob: -7.880490303039551
    6. '[v' → logprob: -8.88049030303955
    7. '[k' → logprob: -9.00549030303955
    8. '[s' → logprob: -10.38049030303955
    9. '{x' → logprob: -11.00549030303955
    10. '[j' → logprob: -11.25549030303955

Token 855: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.872261317563243e-05
    2. ' t' → logprob: -9.875059127807617
    3. '   ' → logprob: -12.375059127807617
    4. 'int' → logprob: -13.625059127807617
    5. 'tt' → logprob: -13.875059127807617
    6. 'ti' → logprob: -14.250059127807617
    7. '       ' → logprob: -16.875059127807617
    8. '
' → logprob: -17.375059127807617
    9. '_t' → logprob: -17.375059127807617
    10. 'ts' → logprob: -17.500059127807617

Token 856: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020264487713575363
    2. 'for' → logprob: -4.020264625549316
    3. '_' → logprob: -6.895264625549316
    4. 't' → logprob: -7.645264625549316
    5. '   ' → logprob: -8.145264625549316
    6. ' ' → logprob: -9.145264625549316
    7. '0' → logprob: -9.770264625549316
    8. '       ' → logprob: -10.395264625549316
    9. 'i' → logprob: -10.520264625549316
    10. '_for' → logprob: -11.270264625549316

Token 857: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16022463142871857
    2. ' t' → logprob: -1.9102246761322021
    3. ' in' → logprob: -16.16022491455078
    4. '	t' → logprob: -16.28522491455078
    5. '[t' → logprob: -16.41022491455078
    6. '(t' → logprob: -16.53522491455078
    7. '_t' → logprob: -16.53522491455078
    8. '   ' → logprob: -16.91022491455078
    9. ')t' → logprob: -17.53522491455078
    10. ' ' → logprob: -17.66022491455078

Token 858: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.325274795293808
    2. 'in' → logprob: -1.3252748250961304
    3. 't' → logprob: -4.45027494430542
    4. ' t' → logprob: -8.450274467468262
    5. ' ' → logprob: -10.700274467468262
    6. '  ' → logprob: -11.700274467468262
    7. 'for' → logprob: -11.700274467468262
    8. '   ' → logprob: -12.075274467468262
    9. 'possible' → logprob: -12.575274467468262
    10. '    ' → logprob: -13.325274467468262

Token 859: ' checked' (ID: 15579)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.0014826052356511354
    2. '{' → logprob: -7.1264824867248535
    3. ' checked' → logprob: -7.5014824867248535
    4. '[' → logprob: -9.001482963562012
    5. '(' → logprob: -14.126482963562012
    6. 'sorted' → logprob: -14.751482963562012
    7. ' {' → logprob: -15.001482963562012
    8. ' [' → logprob: -15.501482963562012
    9. 'filtered' → logprob: -16.001482009887695
    10. '
' → logprob: -16.126482009887695

Token 860: '_ts' (ID: 63001)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.016830584034323692
    2. '{' → logprob: -4.1418304443359375
    3. '_ts' → logprob: -7.8918304443359375
    4. 's' → logprob: -8.266830444335938
    5. 't' → logprob: -9.641830444335938
    6. ' {' → logprob: -10.641830444335938
    7. ' t' → logprob: -11.266830444335938
    8. '   ' → logprob: -11.266830444335938
    9. 'range' → logprob: -11.641830444335938
    10. '{-' → logprob: -12.016830444335938

Token 861: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10021551698446274
    2. 'if' → logprob: -2.350215435028076
    3. '   ' → logprob: -11.725215911865234
    4. '	if' → logprob: -15.350215911865234
    5. '       ' → logprob: -15.475215911865234
    6. '    ' → logprob: -15.600215911865234
    7. '
' → logprob: -15.975215911865234
    8. '           ' → logprob: -17.225215911865234
    9. ' ' → logprob: -19.100215911865234
    10. '        ' → logprob: -19.100215911865234

Token 862: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20341692864894867
    2. ' t' → logprob: -1.7034169435501099
    3. '   ' → logprob: -6.57841682434082
    4. 'x' → logprob: -8.20341682434082
    5. '(t' → logprob: -9.45341682434082
    6. ' (' → logprob: -9.57841682434082
    7. ' ' → logprob: -9.70341682434082
    8. ' x' → logprob: -9.95341682434082
    9. '
' → logprob: -10.32841682434082
    10. '(' → logprob: -11.70341682434082

Token 863: '_min' (ID: 15950)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03126844763755798
    2. ' >=' → logprob: -3.531268358230591
    3. '<=' → logprob: -6.53126859664917
    4. ' <=' → logprob: -10.281268119812012
    5. '0' → logprob: -11.406268119812012
    6. '   ' → logprob: -11.906268119812012
    7. ']>=' → logprob: -12.531268119812012
    8. 'x' → logprob: -13.906268119812012
    9. ')>=' → logprob: -14.656268119812012
    10. '[' → logprob: -14.781268119812012

Token 864: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3132627606391907
    2. '<=' → logprob: -1.313262701034546
    3. ']<=' → logprob: -15.938262939453125
    4. '0' → logprob: -16.063262939453125
    5. '<|end|>' → logprob: -16.063262939453125
    6. ' ' → logprob: -16.188262939453125
    7. '>=' → logprob: -16.313262939453125
    8. ' >=' → logprob: -16.438262939453125
    9. ')<=' → logprob: -16.438262939453125
    10. ' <=",' → logprob: -16.938262939453125

Token 865: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002806894714012742
    2. ' t' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.627806663513184
    4. '
' → logprob: -15.252806663513184
    5. ' ' → logprob: -15.627806663513184
    6. '_t' → logprob: -16.0028076171875
    7. '`t' → logprob: -16.6278076171875
    8. '```' → logprob: -16.6278076171875
    9. '	t' → logprob: -16.7528076171875
    10. '  ' → logprob: -17.1278076171875

Token 866: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.32511693239212036
    2. ' <=' → logprob: -1.5751168727874756
    3. 't' → logprob: -3.0751168727874756
    4. 'and' → logprob: -4.200117111206055
    5. ' and' → logprob: -5.200117111206055
    6. ' t' → logprob: -5.575117111206055
    7. '0' → logprob: -10.700117111206055
    8. '_t' → logprob: -11.075117111206055
    9. '≤' → logprob: -11.450117111206055
    10. '<t' → logprob: -11.700117111206055

Token 867: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007294706883840263
    2. ' t' → logprob: -7.250729560852051
    3. '   ' → logprob: -11.00072956085205
    4. '       ' → logprob: -14.37572956085205
    5. ' ' → logprob: -15.00072956085205
    6. '`t' → logprob: -15.12572956085205
    7. '  ' → logprob: -15.25072956085205
    8. '
' → logprob: -15.50072956085205
    9. '	t' → logprob: -15.50072956085205
    10. '    ' → logprob: -15.50072956085205

Token 868: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0005558936391025782
    2. 'max' → logprob: -7.625555992126465
    3. 'ax' → logprob: -9.625555992126465
    4. 'Max' → logprob: -14.375555992126465
    5. '_min' → logprob: -14.375555992126465
    6. ')' → logprob: -15.250555992126465
    7. 'x' → logprob: -15.500555992126465
    8. '_MAX' → logprob: -16.50055503845215
    9. 'MAX' → logprob: -17.25055503845215
    10. '0' → logprob: -17.50055503845215

Token 869: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010407903464511037
    2. '   ' → logprob: -7.751040935516357
    3. ' and' → logprob: -7.876040935516357
    4. ' ]' → logprob: -8.5010404586792
    5. 'and' → logprob: -10.8760404586792
    6. ']
' → logprob: -12.3760404586792
    7. ']

' → logprob: -13.2510404586792
    8. '()]' → logprob: -14.1260404586792
    9. ' or' → logprob: -14.7510404586792
    10. '`]' → logprob: -15.7510404586792

Token 870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6466712951660156
    2. 'best' → logprob: -0.8966712951660156
    3. 'min' → logprob: -2.7716712951660156
    4. '```' → logprob: -5.896671295166016
    5. 'minimal' → logprob: -6.521671295166016
    6. '
' → logprob: -7.396671295166016
    7. ' best' → logprob: -8.521671295166016
    8. 'results' → logprob: -8.646671295166016
    9. 'result' → logprob: -8.896671295166016
    10. 'minimum' → logprob: -9.271671295166016

Token 871: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.006596359424293041
    2. 'min' → logprob: -5.256596565246582
    3. 'res' → logprob: -7.256596565246582
    4. 'ans' → logprob: -8.256596565246582
    5. '   ' → logprob: -8.756596565246582
    6. 'answer' → logprob: -9.256596565246582
    7. 'result' → logprob: -9.881596565246582
    8. 'results' → logprob: -10.131596565246582
    9. 'minimal' → logprob: -11.131596565246582
    10. 'answers' → logprob: -11.256596565246582

Token 872: ' =' (ID: 314)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0010280465940013528
    2. '_sum' → logprob: -7.501028060913086
    3. '_solution' → logprob: -8.751028060913086
    4. '_x' → logprob: -9.126028060913086
    5. '_token' → logprob: -9.251028060913086
    6. '_val' → logprob: -10.251028060913086
    7. '_value' → logprob: -10.876028060913086
    8. '_candidate' → logprob: -11.126028060913086
    9. '_score' → logprob: -11.751028060913086
    10. '_best' → logprob: -11.751028060913086

Token 873: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.1928003813372925e-05
    2. '(None' → logprob: -10.250051498413086
    3. ' None' → logprob: -11.500051498413086
    4. 'float' → logprob: -12.250051498413086
    5. '(' → logprob: -13.375051498413086
    6. '(-' → logprob: -18.125051498413086
    7. '(float' → logprob: -18.875051498413086
    8. '   ' → logprob: -18.875051498413086
    9. '(x' → logprob: -19.250051498413086
    10. 'min' → logprob: -19.375051498413086

Token 874: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21142560243606567
    2. 'for' → logprob: -1.836425542831421
    3. ' for' → logprob: -3.586425542831421
    4. '
' → logprob: -5.71142578125
    5. '    
' → logprob: -9.46142578125
    6. '<|end|>' → logprob: -10.21142578125
    7. ',' → logprob: -10.58642578125
    8. '```' → logprob: -10.96142578125
    9. '  
' → logprob: -12.46142578125
    10. 'and' → logprob: -12.83642578125

Token 875: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020910050719976425
    2. '   ' → logprob: -4.020910263061523
    3. ' for' → logprob: -5.895910263061523
    4. '```' → logprob: -12.645910263061523
    5. '
' → logprob: -13.395910263061523
    6. '	for' → logprob: -14.645910263061523
    7. '    
' → logprob: -15.520910263061523
    8. '<|end|>' → logprob: -17.395910263061523
    9. '  ' → logprob: -17.895910263061523
    10. '``' → logprob: -18.145910263061523

Token 876: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' for' → logprob: -16.1250057220459
    4. '
' → logprob: -17.1250057220459
    5. 'best' → logprob: -17.1250057220459
    6. '```' → logprob: -19.5000057220459
    7. '    
' → logprob: -20.7500057220459
    8. '	for' → logprob: -21.7500057220459
    9. 'from' → logprob: -24.7500057220459
    10. 'import' → logprob: -25.0000057220459

Token 877: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020774602890015
    2. ' t' → logprob: -2.350207805633545
    3. '_t' → logprob: -14.475207328796387
    4. '   ' → logprob: -14.975207328796387
    5. '`t' → logprob: -16.350208282470703
    6. '	t' → logprob: -16.475208282470703
    7. 'ti' → logprob: -18.100208282470703
    8. 'T' → logprob: -18.350208282470703
    9. 'tt' → logprob: -18.725208282470703
    10. '(t' → logprob: -18.725208282470703

Token 878: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026449846103787422
    2. 'in' → logprob: -3.6514499187469482
    3. '	in' → logprob: -9.651450157165527
    4. '_in' → logprob: -10.526450157165527
    5. '_' → logprob: -10.901450157165527
    6. ' _' → logprob: -11.026450157165527
    7. ' ' → logprob: -11.526450157165527
    8. '   ' → logprob: -12.776450157165527
    9. 'n' → logprob: -13.026450157165527
    10. '    ' → logprob: -13.151450157165527

Token 879: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -2.935296834039036e-06
    2. ' possible' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.250003814697266
    4. 'poss' → logprob: -20.875003814697266
    5. '
' → logprob: -21.500003814697266
    6. 'Possible' → logprob: -23.375003814697266
    7. '_possible' → logprob: -23.625003814697266
    8. ' ' → logprob: -23.750003814697266
    9. ' posible' → logprob: -24.125003814697266
    10. '           ' → logprob: -24.250003814697266

Token 880: '_t' (ID: 838)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7877499461174011
    2. '_t' → logprob: -1.537750005722046
    3. 'able' → logprob: -1.662750005722046
    4. 'sible' → logprob: -2.412750005722046
    5. 'ible' → logprob: -3.162750005722046
    6. 't' → logprob: -6.037749767303467
    7. ' possible' → logprob: -6.787749767303467
    8. '_possible' → logprob: -7.037749767303467
    9. '   ' → logprob: -7.287749767303467
    10. 'urable' → logprob: -7.787749767303467

Token 881: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10325797647237778
    2. ':
' → logprob: -2.478257894515991
    3. '       ' → logprob: -4.35325813293457
    4. '   ' → logprob: -7.47825813293457
    5. ',' → logprob: -7.85325813293457
    6. '):
' → logprob: -8.47825813293457
    7. '<|end|>' → logprob: -10.10325813293457
    8. '=' → logprob: -11.10325813293457
    9. ':

' → logprob: -11.10325813293457
    10. '        
' → logprob: -11.10325813293457

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028970264247618616
    2. '   ' → logprob: -9.125289916992188
    3. '```' → logprob: -9.375289916992188
    4. 'x' → logprob: -10.000289916992188
    5. ' x' → logprob: -10.875289916992188
    6. '<|end|>' → logprob: -11.750289916992188
    7. '    ' → logprob: -12.500289916992188
    8. ',' → logprob: -12.500289916992188
    9. '[' → logprob: -12.750289916992188
    10. '	   ' → logprob: -12.875289916992188

Token 883: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.17649313807487488
    2. '       ' → logprob: -1.9264931678771973
    3. ' x' → logprob: -4.176493167877197
    4. '   ' → logprob: -7.551493167877197
    5. '           ' → logprob: -8.551492691040039
    6. '```' → logprob: -9.676492691040039
    7. '	x' → logprob: -13.676492691040039
    8. ' ' → logprob: -13.801492691040039
    9. '        ' → logprob: -15.176492691040039
    10. '``' → logprob: -15.426492691040039

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602325439453125
    2. ' =' → logprob: -1.9102325439453125
    3. ',' → logprob: -12.910232543945312
    4. '0' → logprob: -13.160232543945312
    5. '   ' → logprob: -13.285232543945312
    6. '    ' → logprob: -14.785232543945312
    7. '_' → logprob: -14.910232543945312
    8. 'x' → logprob: -15.285232543945312
    9. '=x' → logprob: -15.285232543945312
    10. '```' → logprob: -15.785232543945312

Token 885: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003180563682690263
    2. ' x' → logprob: -5.753180503845215
    3. '   ' → logprob: -12.753180503845215
    4. '(x' → logprob: -19.25318145751953
    5. ' ' → logprob: -19.50318145751953
    6. '	x' → logprob: -19.50318145751953
    7. '$x' → logprob: -21.25318145751953
    8. '  ' → logprob: -21.37818145751953
    9. '{x' → logprob: -21.87818145751953
    10. '"x' → logprob: -22.37818145751953

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.625001907348633
    3. '۰' → logprob: -15.500001907348633
    4. '_' → logprob: -15.625001907348633
    5. '+' → logprob: -16.000001907348633
    6. '[' → logprob: -16.125001907348633
    7. ' ' → logprob: -16.500001907348633
    8. '`' → logprob: -16.812501907348633
    9. '０' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.687501907348633

Token 887: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08894786238670349
    2. '+' → logprob: -2.4639477729797363
    3. '+x' → logprob: -12.213948249816895
    4. '   ' → logprob: -14.088948249816895
    5. '+t' → logprob: -14.088948249816895
    6. '```' → logprob: -14.588948249816895
    7. '    ' → logprob: -15.463948249816895
    8. ' +
' → logprob: -15.838948249816895
    9. '＋' → logprob: -15.838948249816895
    10. '+y' → logprob: -15.963948249816895

Token 888: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019316127290949225
    2. ' k' → logprob: -6.251931667327881
    3. 't' → logprob: -13.251931190490723
    4. '(k' → logprob: -14.126931190490723
    5. '   ' → logprob: -14.876931190490723
    6. ' t' → logprob: -16.50193214416504
    7. ' ' → logprob: -18.00193214416504
    8. '{k' → logprob: -18.62693214416504
    9. 'kx' → logprob: -19.12693214416504
    10. '	k' → logprob: -19.25193214416504

Token 889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. 't' → logprob: -13.250001907348633
    3. '```' → logprob: -16.875001907348633
    4. '*t' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.250001907348633
    6. ' t' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '**' → logprob: -17.875001907348633
    9. '[t' → logprob: -18.062501907348633
    10. '_' → logprob: -18.375001907348633

Token 890: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6210583448410034
    2. '*t' → logprob: -0.8710583448410034
    3. ' *' → logprob: -3.121058464050293
    4. '*(' → logprob: -13.246058464050293
    5. '*u' → logprob: -14.121058464050293
    6. '*object' → logprob: -14.371058464050293
    7. '*out' → logprob: -14.746058464050293
    8. '**' → logprob: -14.871058464050293
    9. '   ' → logprob: -15.121058464050293
    10. '*ft' → logprob: -15.246058464050293

Token 891: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.842555426876061e-06
    2. ' t' → logprob: -12.250004768371582
    3. '`t' → logprob: -19.3750057220459
    4. '	t' → logprob: -19.6250057220459
    5. '[t' → logprob: -21.2500057220459
    6. '(t' → logprob: -21.7500057220459
    7. '*t' → logprob: -22.0000057220459
    8. '
' → logprob: -22.1250057220459
    9. '```' → logprob: -22.1250057220459
    10. '   ' → logprob: -22.6250057220459

Token 892: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1280745565891266
    2. '<|end|>' → logprob: -2.6280746459960938
    3. '
' → logprob: -3.3780746459960938
    4. '        
' → logprob: -5.628074645996094
    5. ' 
' → logprob: -5.628074645996094
    6. ' y' → logprob: -6.753074645996094
    7. ',y' → logprob: -6.878074645996094
    8. '   ' → logprob: -6.878074645996094
    9. '        ' → logprob: -7.128074645996094
    10. ' ' → logprob: -7.878074645996094

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04902343824505806
    2. ' y' → logprob: -3.049023389816284
    3. 'y' → logprob: -7.924023628234863
    4. '```' → logprob: -10.299023628234863
    5. '<|end|>' → logprob: -11.174023628234863
    6. ',y' → logprob: -12.049023628234863
    7. '   ' → logprob: -12.299023628234863
    8. ',' → logprob: -12.674023628234863
    9. '	y' → logprob: -12.924023628234863
    10. ' ' → logprob: -13.174023628234863

Token 894: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0025147777050733566
    2. ' y' → logprob: -6.002514839172363
    3. '       ' → logprob: -10.252514839172363
    4. '   ' → logprob: -12.877514839172363
    5. '```' → logprob: -13.752514839172363
    6. '	y' → logprob: -15.627514839172363
    7. '
' → logprob: -17.002513885498047
    8. '           ' → logprob: -17.502513885498047
    9. ',y' → logprob: -18.127513885498047
    10. '    ' → logprob: -19.002513885498047

Token 895: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. '0' → logprob: -14.188262939453125
    4. '   ' → logprob: -14.938262939453125
    5. ' ' → logprob: -16.313262939453125
    6. '```' → logprob: -16.688262939453125
    7. ',' → logprob: -17.188262939453125
    8. '=y' → logprob: -17.938262939453125
    9. '＝' → logprob: -18.313262939453125
    10. ')' → logprob: -18.438262939453125

Token 896: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4974866644479334e-05
    2. ' y' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.625015258789062
    4. '	y' → logprob: -18.500015258789062
    5. '```' → logprob: -20.000015258789062
    6. '       ' → logprob: -21.500015258789062
    7. ' ' → logprob: -21.500015258789062
    8. '    ' → logprob: -21.625015258789062
    9. '  ' → logprob: -21.875015258789062
    10. '`' → logprob: -21.875015258789062

Token 897: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.875012397766113
    3. '   ' → logprob: -13.000012397766113
    4. 'y' → logprob: -13.625012397766113
    5. ' y' → logprob: -14.250012397766113
    6. '    ' → logprob: -15.250012397766113
    7. ' =' → logprob: -15.500012397766113
    8. '=' → logprob: -15.625012397766113
    9. 'o' → logprob: -15.750012397766113
    10. '_' → logprob: -16.125011444091797

Token 898: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12695246934890747
    2. '-' → logprob: -2.1269524097442627
    3. '   ' → logprob: -11.126952171325684
    4. '```' → logprob: -11.876952171325684
    5. ' ' → logprob: -13.626952171325684
    6. '       ' → logprob: -14.751952171325684
    7. ',' → logprob: -15.751952171325684
    8. '
' → logprob: -15.876952171325684
    9. '    ' → logprob: -16.001953125
    10. '  ' → logprob: -16.126953125

Token 899: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009115827269852161
    2. ' k' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.125911712646484
    4. '	k' → logprob: -18.875911712646484
    5. '    ' → logprob: -20.625911712646484
    6. '(k' → logprob: -20.875911712646484
    7. '       ' → logprob: -20.875911712646484
    8. '           ' → logprob: -22.875911712646484
    9. ' ' → logprob: -23.000911712646484
    10. '  ' → logprob: -23.250911712646484

Token 900: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004098195640835911
    2. 'k' → logprob: -7.8754096031188965
    3. ' ' → logprob: -10.625410079956055
    4. ' k' → logprob: -13.250410079956055
    5. '   ' → logprob: -13.250410079956055
    6. '```' → logprob: -14.625410079956055
    7. 't' → logprob: -14.875410079956055
    8. '  ' → logprob: -15.375410079956055
    9. '0' → logprob: -15.625410079956055
    10. '``' → logprob: -16.125410079956055

Token 901: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06233265995979309
    2. '*' → logprob: -2.8123326301574707
    3. '*t' → logprob: -7.937332630157471
    4. '   ' → logprob: -12.312333106994629
    5. '```' → logprob: -13.312333106994629
    6. ' ' → logprob: -14.437333106994629
    7. 't' → logprob: -14.562333106994629
    8. ' t' → logprob: -14.812333106994629
    9. '**' → logprob: -15.937333106994629
    10. ' ' → logprob: -16.812332153320312

Token 902: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019286326132714748
    2. ' t' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.001928329467773
    4. '*t' → logprob: -18.126928329467773
    5. '	t' → logprob: -19.501928329467773
    6. ' ' → logprob: -19.751928329467773
    7. '(t' → logprob: -20.626928329467773
    8. '`t' → logprob: -20.751928329467773
    9. '*' → logprob: -21.376928329467773
    10. ' ' → logprob: -22.126928329467773

Token 903: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039015911519527435
    2. '   ' → logprob: -3.289016008377075
    3. '
' → logprob: -7.414015769958496
    4. '        
' → logprob: -9.414015769958496
    5. ' if' → logprob: -9.414015769958496
    6. '<|end|>' → logprob: -9.414015769958496
    7. ',' → logprob: -10.039015769958496
    8. '    
' → logprob: -10.414015769958496
    9. '```' → logprob: -11.289015769958496
    10. ')' → logprob: -11.914015769958496

Token 904: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6382343173027039
    2. '       ' → logprob: -0.7632343173027039
    3. ' if' → logprob: -5.3882341384887695
    4. '<|end|>' → logprob: -7.2632341384887695
    5. '    ' → logprob: -8.76323413848877
    6. '```' → logprob: -9.88823413848877
    7. '           ' → logprob: -10.76323413848877
    8. ')' → logprob: -10.88823413848877
    9. 'if' → logprob: -11.01323413848877
    10. '    
' → logprob: -11.13823413848877

Token 905: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7291486263275146
    2. ' if' → logprob: -0.7291486263275146
    3. '   ' → logprob: -3.7291486263275146
    4. '       ' → logprob: -4.479148864746094
    5. '    ' → logprob: -13.479148864746094
    6. '```' → logprob: -13.479148864746094
    7. '	if' → logprob: -14.354148864746094
    8. '           ' → logprob: -14.479148864746094
    9. '  ' → logprob: -15.354148864746094
    10. ' ' → logprob: -16.229148864746094

Token 906: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31326377391815186
    2. 'x' → logprob: -1.3132637739181519
    3. '0' → logprob: -13.438263893127441
    4. '	x' → logprob: -15.188263893127441
    5. '   ' → logprob: -15.813263893127441
    6. ' ' → logprob: -15.938263893127441
    7. '(x' → logprob: -17.313262939453125
    8. ' ' → logprob: -17.813262939453125
    9. '$x' → logprob: -18.188262939453125
    10. '```' → logprob: -18.313262939453125

Token 907: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2015082687139511
    2. '>=' → logprob: -1.7015082836151123
    3. '   ' → logprob: -10.701508522033691
    4. '    ' → logprob: -11.076508522033691
    5. '0' → logprob: -11.451508522033691
    6. ')>=' → logprob: -11.576508522033691
    7. '[' → logprob: -11.826508522033691
    8. ' ' → logprob: -11.951508522033691
    9. ']>=' → logprob: -12.076508522033691
    10. '<|end|>' → logprob: -12.326508522033691

Token 908: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '=' → logprob: -13.500032424926758
    4. '   ' → logprob: -15.375032424926758
    5. '```' → logprob: -18.000032424926758
    6. '۰' → logprob: -18.500032424926758
    7. '       ' → logprob: -18.875032424926758
    8. ',' → logprob: -20.062532424926758
    9. '  ' → logprob: -20.312532424926758
    10. '    ' → logprob: -20.375032424926758

Token 909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '=' → logprob: -17.125001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '```' → logprob: -18.750001907348633
    6. '۰' → logprob: -19.875001907348633
    7. '``' → logprob: -21.937501907348633
    8. '  ' → logprob: -22.125001907348633
    9. '       ' → logprob: -22.312501907348633
    10. '    ' → logprob: -22.312501907348633

Token 910: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.015467704273760319
    2. 'or' → logprob: -4.765467643737793
    3. '       ' → logprob: -5.015467643737793
    4. ' and' → logprob: -9.640467643737793
    5. '           ' → logprob: -9.640467643737793
    6. '   ' → logprob: -11.015467643737793
    7. ' continue' → logprob: -11.640467643737793
    8. ':' → logprob: -11.765467643737793
    9. '	or' → logprob: -11.890467643737793
    10. 'continue' → logprob: -11.890467643737793

Token 911: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519298195838928
    2. ' y' → logprob: -1.501929759979248
    3. '   ' → logprob: -14.501930236816406
    4. '	y' → logprob: -16.251930236816406
    5. '       ' → logprob: -16.501930236816406
    6. '    ' → logprob: -18.626930236816406
    7. ' ' → logprob: -19.376930236816406
    8. '```' → logprob: -19.376930236816406
    9. '           ' → logprob: -19.501930236816406
    10. '  ' → logprob: -19.751930236816406

Token 912: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01815052703022957
    2. '<' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.018150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '<|end|>' → logprob: -17.268150329589844
    6. ')' → logprob: -17.643150329589844
    7. ' ' → logprob: -17.643150329589844
    8. '<int' → logprob: -18.143150329589844
    9. '[' → logprob: -18.143150329589844
    10. '()<' → logprob: -18.393150329589844

Token 913: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.500051498413086
    4. '```' → logprob: -18.875051498413086
    5. '  ' → logprob: -20.000051498413086
    6. '    ' → logprob: -20.375051498413086
    7. '<|end|>' → logprob: -20.500051498413086
    8. '۰' → logprob: -20.625051498413086
    9. '       ' → logprob: -20.875051498413086
    10. ',' → logprob: -21.375051498413086

Token 914: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '=' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.750011444091797
    5. '```' → logprob: -18.500011444091797
    6. '<|end|>' → logprob: -19.500011444091797
    7. '۰' → logprob: -20.375011444091797
    8. '  ' → logprob: -20.562511444091797
    9. '    ' → logprob: -20.687511444091797
    10. ',' → logprob: -20.875011444091797

Token 915: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8473024368286133
    2. '       ' → logprob: -0.8473024368286133
    3. ':
' → logprob: -2.3473024368286133
    4. '           ' → logprob: -3.0973024368286133
    5. ' continue' → logprob: -6.722302436828613
    6. 'continue' → logprob: -7.347302436828613
    7. ' or' → logprob: -9.097302436828613
    8. '               ' → logprob: -10.972302436828613
    9. '	continue' → logprob: -10.972302436828613
    10. '   ' → logprob: -11.097302436828613

Token 916: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47897472977638245
    2. '           ' → logprob: -0.9789746999740601
    3. ' continue' → logprob: -5.85397481918335
    4. 'continue' → logprob: -6.22897481918335
    5. '   ' → logprob: -10.978974342346191
    6. '```' → logprob: -11.353974342346191
    7. '	continue' → logprob: -11.478974342346191
    8. ' continues' → logprob: -13.228974342346191
    9. '               ' → logprob: -13.353974342346191
    10. '_continue' → logprob: -14.228974342346191

Token 917: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7288939952850342
    2. 'continue' (adapté à ' continue') → logprob: -0.7288939952850342
    3. ' continue' → logprob: -3.478893995285034
    4. '           ' → logprob: -5.478894233703613
    5. '	continue' → logprob: -10.103894233703613
    6. '   ' → logprob: -10.353894233703613
    7. '```' → logprob: -10.728894233703613
    8. '
' → logprob: -13.228894233703613
    9. '_continue' → logprob: -13.478894233703613
    10. '               ' → logprob: -14.478894233703613

Token 918: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014785595703870058
    2. '   ' → logprob: -6.876478672027588
    3. '
' → logprob: -8.12647819519043
    4. '    
' → logprob: -10.37647819519043
    5. '        
' → logprob: -10.62647819519043
    6. '<|end|>' → logprob: -10.75147819519043
    7. '           ' → logprob: -11.00147819519043
    8. ' if' → logprob: -11.37647819519043
    9. '```' → logprob: -11.37647819519043
    10. ')' → logprob: -11.50147819519043

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002336281817406416
    2. '   ' → logprob: -6.252336502075195
    3. ' if' → logprob: -8.127336502075195
    4. 'if' → logprob: -9.377336502075195
    5. '           ' → logprob: -11.252336502075195
    6. '```' → logprob: -11.377336502075195
    7. '
' → logprob: -14.377336502075195
    8. '        
' → logprob: -14.752336502075195
    9. '<|end|>' → logprob: -14.752336502075195
    10. '      ' → logprob: -15.002336502075195

Token 920: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38330137729644775
    2. ' if' → logprob: -2.383301258087158
    3. '       ' → logprob: -2.758301258087158
    4. 'if' → logprob: -2.758301258087158
    5. 'weight' → logprob: -3.008301258087158
    6. ' weight' → logprob: -4.758301258087158
    7. 'mass' → logprob: -4.883301258087158
    8. 'current' → logprob: -5.133301258087158
    9. 'cost' → logprob: -5.383301258087158
    10. 'total' (adapté à ' total') → logprob: -5.508301258087158

Token 921: ' =' (ID: 314)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5300204157829285
    2. '_' → logprob: -1.4050204753875732
    3. '_weights' → logprob: -2.4050204753875732
    4. ' =' → logprob: -3.5300204753875732
    5. '_sum' → logprob: -3.5300204753875732
    6. '=' → logprob: -4.280020236968994
    7. '_cost' → logprob: -6.405020236968994
    8. ' +=' → logprob: -8.655020713806152
    9. 'sum' → logprob: -8.655020713806152
    10. ' _' → logprob: -8.905020713806152

Token 922: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26896223425865173
    2. 'a' → logprob: -1.5189622640609741
    3. ' x' → logprob: -4.268962383270264
    4. ' a' → logprob: -5.893962383270264
    5. '   ' → logprob: -9.393961906433105
    6. '(x' → logprob: -10.893961906433105
    7. '(a' → logprob: -11.643961906433105
    8. ' ' → logprob: -11.643961906433105
    9. 'abs' → logprob: -12.393961906433105
    10. 'ax' → logprob: -12.643961906433105

Token 923: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519359588623047
    2. '+' → logprob: -1.5019359588623047
    3. '+
' → logprob: -13.001935958862305
    4. ' +
' → logprob: -13.126935958862305
    5. '+y' → logprob: -13.501935958862305
    6. '   ' → logprob: -15.501935958862305
    7. '+x' → logprob: -15.626935958862305
    8. '```' → logprob: -16.001935958862305
    9. '<|end|>' → logprob: -16.126935958862305
    10. '+b' → logprob: -16.251935958862305

Token 924: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.676292231422849e-05
    2. ' y' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.250017166137695
    4. '```' → logprob: -20.375017166137695
    5. '	y' → logprob: -20.375017166137695
    6. '<|end|>' → logprob: -20.500017166137695
    7. ' ' → logprob: -20.875017166137695
    8. '       ' → logprob: -21.875017166137695
    9. '(y' → logprob: -23.250017166137695
    10. '
' → logprob: -23.375017166137695

Token 925: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6800328493118286
    2. '   ' → logprob: -0.8050328493118286
    3. ' if' → logprob: -3.805032730102539
    4. '<|end|>' → logprob: -4.555032730102539
    5. '
' → logprob: -5.180032730102539
    6. ')' → logprob: -5.805032730102539
    7. ',' → logprob: -6.555032730102539
    8. 'if' → logprob: -6.930032730102539
    9. '<|end|>' → logprob: -7.180032730102539
    10. '           ' → logprob: -7.555032730102539

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6347467303276062
    2. '   ' → logprob: -0.7597467303276062
    3. ' if' → logprob: -6.384746551513672
    4. '<|end|>' → logprob: -8.259746551513672
    5. 'if' → logprob: -9.384746551513672
    6. '           ' → logprob: -10.134746551513672
    7. '<|end|>' → logprob: -11.009746551513672
    8. '```' → logprob: -11.134746551513672
    9. '    ' → logprob: -11.634746551513672
    10. '  ' → logprob: -12.009746551513672

Token 927: ' mass' (ID: 4842)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018221233040094376
    2. '       ' → logprob: -4.268221378326416
    3. ' if' → logprob: -5.518221378326416
    4. '   ' → logprob: -10.268220901489258
    5. '```' → logprob: -13.518220901489258
    6. '	if' → logprob: -15.143220901489258
    7. '           ' → logprob: -16.768220901489258
    8. '``' → logprob: -17.393220901489258
    9. 'If' → logprob: -18.268220901489258
    10. '...' → logprob: -18.518220901489258

Token 928: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341323256492615
    2. '=' → logprob: -1.3134132623672485
    3. '   ' → logprob: -9.188413619995117
    4. ',' → logprob: -10.188413619995117
    5. ')' → logprob: -12.563413619995117
    6. '    ' → logprob: -12.563413619995117
    7. ' ' → logprob: -14.063413619995117
    8. '  ' → logprob: -14.688413619995117
    9. '*' → logprob: -14.813413619995117
    10. ' =
' → logprob: -14.938413619995117

Token 929: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019180490635335445
    2. ' a' → logprob: -6.376917839050293
    3. '   ' → logprob: -8.626917839050293
    4. 'x' → logprob: -10.376917839050293
    5. ' ' → logprob: -12.876917839050293
    6. 'ax' → logprob: -14.626917839050293
    7. 'abs' → logprob: -14.751917839050293
    8. '(a' → logprob: -15.001917839050293
    9. '	a' → logprob: -15.251917839050293
    10. ' x' → logprob: -15.876917839050293

Token 930: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5793048739433289
    2. '*' → logprob: -0.8293048739433289
    3. '*x' → logprob: -5.7043046951293945
    4. '   ' → logprob: -11.704304695129395
    5. '```' → logprob: -12.079304695129395
    6. '*y' → logprob: -13.079304695129395
    7. '*(' → logprob: -13.204304695129395
    8. '**' → logprob: -13.579304695129395
    9. ' ' → logprob: -13.829304695129395
    10. '*u' → logprob: -14.079304695129395

Token 931: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9027791495318525e-05
    2. ' x' → logprob: -10.875019073486328
    3. '```' → logprob: -17.875019073486328
    4. '   ' → logprob: -18.375019073486328
    5. '(x' → logprob: -19.625019073486328
    6. ')x' → logprob: -19.625019073486328
    7. '	x' → logprob: -20.000019073486328
    8. ' ' → logprob: -20.000019073486328
    9. '<|end|>' → logprob: -20.250019073486328
    10. '[' → logprob: -20.375019073486328

Token 932: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.313529372215271
    2. '+' → logprob: -1.313529372215271
    3. '```' → logprob: -9.063529014587402
    4. '   ' → logprob: -9.688529014587402
    5. '*' → logprob: -9.688529014587402
    6. ' ' → logprob: -11.313529014587402
    7. '       ' → logprob: -11.938529014587402
    8. ' *' → logprob: -12.813529014587402
    9. '  ' → logprob: -13.688529014587402
    10. '
' → logprob: -14.438529014587402

Token 933: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00015860427811276168
    2. ' b' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.500158309936523
    4. '```' → logprob: -17.750158309936523
    5. ' ' → logprob: -18.625158309936523
    6. '       ' → logprob: -20.250158309936523
    7. '	b' → logprob: -20.375158309936523
    8. '           ' → logprob: -21.000158309936523
    9. '<|end|>' → logprob: -21.125158309936523
    10. '    ' → logprob: -21.500158309936523

Token 934: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6077350974082947
    2. ' *' → logprob: -0.8577350974082947
    3. 'y' → logprob: -3.8577351570129395
    4. '*y' → logprob: -4.7327351570129395
    5. ' y' → logprob: -6.6077351570129395
    6. ' ' → logprob: -10.982734680175781
    7. '<|end|>' → logprob: -12.482734680175781
    8. '   ' → logprob: -13.232734680175781
    9. ' ' → logprob: -13.732734680175781
    10. '	y' → logprob: -14.107734680175781

Token 935: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009118211455643177
    2. ' y' → logprob: -7.000911712646484
    3. '*y' → logprob: -15.750911712646484
    4. '   ' → logprob: -16.000911712646484
    5. '```' → logprob: -17.000911712646484
    6. ' ' → logprob: -17.125911712646484
    7. '	y' → logprob: -17.625911712646484
    8. '*' → logprob: -18.250911712646484
    9. 'x' → logprob: -18.625911712646484
    10. 'b' → logprob: -19.000911712646484

Token 936: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40083208680152893
    2. '       ' → logprob: -1.4008320569992065
    3. ' if' → logprob: -2.650832176208496
    4. 'if' → logprob: -4.400832176208496
    5. '```' → logprob: -8.400832176208496
    6. '<|end|>' → logprob: -8.775832176208496
    7. '
' → logprob: -8.900832176208496
    8. ',' → logprob: -9.150832176208496
    9. '           ' → logprob: -9.650832176208496
    10. '    ' → logprob: -9.775832176208496

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39537936449050903
    2. '   ' → logprob: -1.1453793048858643
    3. ' if' → logprob: -5.145379543304443
    4. 'if' → logprob: -6.520379543304443
    5. '```' → logprob: -7.270379543304443
    6. '<|end|>' → logprob: -8.395379066467285
    7. '           ' → logprob: -9.020379066467285
    8. '
' → logprob: -11.020379066467285
    9. '    ' → logprob: -11.145379066467285
    10. '        
' → logprob: -11.145379066467285

Token 938: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008109898306429386
    2. '       ' → logprob: -5.508110046386719
    3. ' if' → logprob: -5.758110046386719
    4. '   ' → logprob: -7.133110046386719
    5. '```' → logprob: -9.633110046386719
    6. '	if' → logprob: -14.258110046386719
    7. '``' → logprob: -14.383110046386719
    8. '           ' → logprob: -14.508110046386719
    9. 'for' → logprob: -14.633110046386719
    10. 'If' → logprob: -16.88311004638672

Token 939: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.12692968547344208
    2. ' best' → logprob: -2.126929759979248
    3. '(best' → logprob: -13.37692928314209
    4. '	best' → logprob: -16.751930236816406
    5. 'Best' → logprob: -19.376930236816406
    6. '   ' → logprob: -19.876930236816406
    7. '_best' → logprob: -20.126930236816406
    8. '.best' → logprob: -22.001930236816406
    9. 'b' → logprob: -22.251930236816406
    10. '-best' → logprob: -23.751930236816406

Token 940: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10020893067121506
    2. 'is' → logprob: -2.3502089977264404
    3. ' None' → logprob: -14.22520923614502
    4. '==' → logprob: -14.35020923614502
    5. '	is' → logprob: -15.10020923614502
    6. 'None' → logprob: -15.22520923614502
    7. '   ' → logprob: -15.60020923614502
    8. '=None' → logprob: -15.72520923614502
    9. ' ==' → logprob: -16.600208282470703
    10. '=' → logprob: -17.100208282470703

Token 941: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002478508511558175
    2. ' None' → logprob: -6.00247859954834
    3. '   ' → logprob: -12.87747859954834
    4. 'best' → logprob: -16.502477645874023
    5. '(None' → logprob: -17.377477645874023
    6. '=None' → logprob: -18.252477645874023
    7. 'none' → logprob: -18.377477645874023
    8. '  ' → logprob: -18.502477645874023
    9. '_None' → logprob: -18.877477645874023
    10. ' ' → logprob: -19.752477645874023

Token 942: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01816621422767639
    2. 'or' → logprob: -4.0181660652160645
    3. '	or' → logprob: -11.393166542053223
    4. '       ' → logprob: -12.768166542053223
    5. '   ' → logprob: -13.643166542053223
    6. '           ' → logprob: -14.643166542053223
    7. '    ' → logprob: -16.018165588378906
    8. '  ' → logprob: -16.143165588378906
    9. '        ' → logprob: -16.643165588378906
    10. '      ' → logprob: -16.768165588378906

Token 943: ' total' (ID: 3609)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -1.0082554817199707
    2. 'mass' → logprob: -1.1332554817199707
    3. 'total' → logprob: -1.6332554817199707
    4. ' mass' → logprob: -2.6332554817199707
    5. ' total' → logprob: -4.008255481719971
    6. '(m' → logprob: -4.133255481719971
    7. ' (' → logprob: -4.633255481719971
    8. '(' → logprob: -6.758255481719971
    9. '(x' → logprob: -7.758255481719971
    10. '   ' → logprob: -8.383255004882812

Token 944: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.024918487295508385
    2. ' <' → logprob: -3.774918556213379
    3. '<int' → logprob: -7.524918556213379
    4. '>' → logprob: -7.899918556213379
    5. '<size' → logprob: -8.024918556213379
    6. '```' → logprob: -9.524918556213379
    7. '[' → logprob: -9.649918556213379
    8. '<len' → logprob: -10.024918556213379
    9. '<t' → logprob: -10.649918556213379
    10. '<
' → logprob: -10.649918556213379

Token 945: ' best' (ID: 1636)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4038126766681671
    2. 'best' → logprob: -1.1538126468658447
    3. ' total' → logprob: -4.403812885284424
    4. ' best' → logprob: -5.403812885284424
    5. '   ' → logprob: -9.653812408447266
    6. '       ' → logprob: -12.903812408447266
    7. ' ' → logprob: -13.653812408447266
    8. '
' → logprob: -14.653812408447266
    9. '  ' → logprob: -15.778812408447266
    10. '    ' → logprob: -15.778812408447266

Token 946: '[' (ID: 58)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7546345591545105
    2. '[' → logprob: -1.2546346187591553
    3. '_total' → logprob: -1.8796346187591553
    4. ':' → logprob: -3.6296346187591553
    5. ' or' → logprob: -3.7546346187591553
    6. '   ' → logprob: -3.7546346187591553
    7. 'or' → logprob: -4.629634380340576
    8. ' total' → logprob: -5.629634380340576
    9. '       ' → logprob: -6.254634380340576
    10. '```' → logprob: -6.754634380340576

Token 947: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. '2' → logprob: -16.875001907348633
    5. ' ' → logprob: -16.875001907348633
    6. '
' → logprob: -17.875001907348633
    7. '```' → logprob: -19.625001907348633
    8. '    ' → logprob: -19.875001907348633
    9. '

' → logprob: -20.187501907348633
    10. '`' → logprob: -20.312501907348633

Token 948: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04990873858332634
    2. ']' → logprob: -3.1749086380004883
    3. 'or' → logprob: -5.049908638000488
    4. ')' → logprob: -8.924908638000488
    5. ':' → logprob: -9.174908638000488
    6. '   ' → logprob: -10.174908638000488
    7. ' ]' → logprob: -10.174908638000488
    8. '       ' → logprob: -10.299908638000488
    9. '}' → logprob: -10.799908638000488
    10. ',' → logprob: -11.049908638000488

Token 949: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005538831930607557
    2. 'or' → logprob: -5.2555389404296875
    3. '       ' → logprob: -8.630538940429688
    4. '```' → logprob: -10.130538940429688
    5. ':' → logprob: -10.755538940429688
    6. '[' → logprob: -11.005538940429688
    7. '   ' → logprob: -11.255538940429688
    8. ',' → logprob: -11.380538940429688
    9. ':
' → logprob: -11.880538940429688
    10. ' ' → logprob: -12.755538940429688

Token 950: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.000351670227246359
    2. ' (' → logprob: -8.625351905822754
    3. '(' → logprob: -8.750351905822754
    4. 'total' → logprob: -11.500351905822754
    5. '(m' → logprob: -14.125351905822754
    6. '(best' → logprob: -14.625351905822754
    7. '(abs' → logprob: -14.875351905822754
    8. '(t' → logprob: -15.000351905822754
    9. '   ' → logprob: -15.125351905822754
    10. '(
' → logprob: -15.500351905822754

Token 951: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.062030091881752014
    2. ' total' → logprob: -2.812030076980591
    3. '(total' → logprob: -9.687029838562012
    4. '   ' → logprob: -15.937029838562012
    5. '	total' → logprob: -16.812030792236328
    6. ' (' → logprob: -16.937030792236328
    7. '(' → logprob: -17.312030792236328
    8. '
' → logprob: -17.437030792236328
    9. ' ' → logprob: -17.562030792236328
    10. 'Total' → logprob: -18.562030792236328

Token 952: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9901074171066284
    2. '==' → logprob: -1.1151074171066284
    3. '[' → logprob: -1.2401074171066284
    4. ',' → logprob: -4.615107536315918
    5. ' >' → logprob: -7.365107536315918
    6. '>' → logprob: -7.865107536315918
    7. '=' → logprob: -9.240107536315918
    8. ' ' → logprob: -9.490107536315918
    9. '```' → logprob: -10.740107536315918
    10. '   ' → logprob: -10.865107536315918

Token 953: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03804171830415726
    2. ' best' → logprob: -3.288041830062866
    3. '	best' → logprob: -15.913042068481445
    4. '[' → logprob: -16.163042068481445
    5. '(best' → logprob: -17.163042068481445
    6. '0' → logprob: -17.788042068481445
    7. '_best' → logprob: -17.913042068481445
    8. '
' → logprob: -18.413042068481445
    9. '       ' → logprob: -18.913042068481445
    10. 'b' → logprob: -19.288042068481445

Token 954: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'and' → logprob: -16.875
    3. '```' → logprob: -17.25
    4. '0' → logprob: -18.125
    5. ' [' → logprob: -18.25
    6. '   ' → logprob: -18.625
    7. '
' → logprob: -19.25
    8. '[
' → logprob: -19.625
    9. '<|end|>' → logprob: -19.875
    10. '1' → logprob: -19.875

Token 955: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. '1' → logprob: -10.000046730041504
    3. '[' → logprob: -14.000046730041504
    4. '   ' → logprob: -15.375046730041504
    5. ' ' → logprob: -16.000045776367188
    6. '
' → logprob: -16.750045776367188
    7. '```' → logprob: -17.875045776367188
    8. '-' → logprob: -18.750045776367188
    9. '  ' → logprob: -19.312545776367188
    10. '۰' → logprob: -19.375045776367188

Token 956: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519298195838928
    2. 'and' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.126930236816406
    4. '	and' → logprob: -15.876930236816406
    5. ' ' → logprob: -16.751930236816406
    6. '[' → logprob: -17.251930236816406
    7. '    ' → logprob: -17.251930236816406
    8. ')' → logprob: -17.376930236816406
    9. '```' → logprob: -17.501930236816406
    10. ',' → logprob: -17.751930236816406

Token 957: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740975499153137
    2. 'and' → logprob: -0.9740975499153137
    3. '           ' → logprob: -12.22409725189209
    4. '          ' → logprob: -12.34909725189209
    5. '    ' → logprob: -13.34909725189209
    6. '        ' → logprob: -13.47409725189209
    7. '```' → logprob: -13.59909725189209
    8. '       ' → logprob: -13.72409725189209
    9. '            ' → logprob: -13.84909725189209
    10. '   ' → logprob: -13.84909725189209

Token 958: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.3132646679878235
    2. ' mass' → logprob: -1.3132646083831787
    3. '   ' → logprob: -13.438264846801758
    4. '(m' → logprob: -15.063264846801758
    5. '
' → logprob: -15.313264846801758
    6. 'a' → logprob: -15.688264846801758
    7. ' ' → logprob: -15.813264846801758
    8. '(' → logprob: -15.813264846801758
    9. '_mass' → logprob: -16.188264846801758
    10. ' (' → logprob: -16.688264846801758

Token 959: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06183052808046341
    2. '<' → logprob: -3.061830520629883
    3. ' >' → logprob: -4.436830520629883
    4. '>' → logprob: -6.936830520629883
    5. '[' → logprob: -8.561830520629883
    6. '<|end|>' → logprob: -9.436830520629883
    7. '   ' → logprob: -11.061830520629883
    8. ' ' → logprob: -11.311830520629883
    9. '<int' → logprob: -12.061830520629883
    10. '```' → logprob: -12.186830520629883

Token 960: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00020354038861114532
    2. ' best' → logprob: -8.500203132629395
    3. '(best' → logprob: -19.87520408630371
    4. '	best' → logprob: -20.12520408630371
    5. '
' → logprob: -21.75020408630371
    6. '.best' → logprob: -22.62520408630371
    7. '_best' → logprob: -23.25020408630371
    8. '   ' → logprob: -23.87520408630371
    9. '```' → logprob: -24.62520408630371
    10. 'b' → logprob: -24.75020408630371

Token 961: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.375
    3. '   ' → logprob: -16.625
    4. '[
' → logprob: -18.0
    5. '0' → logprob: -18.125
    6. ' [' → logprob: -18.375
    7. '][' → logprob: -18.75
    8. '1' → logprob: -18.875
    9. '
' → logprob: -19.125
    10. '\[' → logprob: -19.5

Token 962: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011331788846291602
    2. '2' → logprob: -9.125113487243652
    3. '0' → logprob: -12.500113487243652
    4. '[' → logprob: -15.375113487243652
    5. '-' → logprob: -16.000112533569336
    6. '
' → logprob: -16.625112533569336
    7. '3' → logprob: -16.875112533569336
    8. '```' → logprob: -17.250112533569336
    9. '   ' → logprob: -17.375112533569336
    10. ' ' → logprob: -17.750112533569336

Token 963: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.45147159695625305
    2. '):' → logprob: -1.2014715671539307
    3. '[' → logprob: -2.9514715671539307
    4. '       ' → logprob: -5.82647180557251
    5. ']):' → logprob: -5.95147180557251
    6. ']):
' → logprob: -6.20147180557251
    7. '   ' → logprob: -7.07647180557251
    8. ':' → logprob: -7.32647180557251
    9. ')' → logprob: -8.201471328735352
    10. ']:' → logprob: -8.201471328735352

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07799561321735382
    2. ' best' → logprob: -2.827995538711548
    3. '(best' → logprob: -5.077995777130127
    4. 'best' → logprob: -5.202995777130127
    5. '       ' → logprob: -5.577995777130127
    6. '[' → logprob: -9.202995300292969
    7. ':
' → logprob: -9.327995300292969
    8. '	best' → logprob: -9.827995300292969
    9. ':' → logprob: -10.452995300292969
    10. '```' → logprob: -10.452995300292969

Token 965: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.011048054322600365
    2. ' best' → logprob: -4.511047840118408
    3. '(best' → logprob: -15.761048316955566
    4. '           ' → logprob: -16.26104736328125
    5. '       ' → logprob: -17.01104736328125
    6. '	best' → logprob: -17.88604736328125
    7. '   ' → logprob: -18.01104736328125
    8. '_best' → logprob: -19.38604736328125
    9. 'Best' → logprob: -21.38604736328125
    10. '-best' → logprob: -22.13604736328125

Token 966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324605919420719
    2. ' =' → logprob: -3.7732460498809814
    3. '＝' → logprob: -15.273245811462402
    4. '=
' → logprob: -15.773245811462402
    5. '=(' → logprob: -16.02324676513672
    6. '<|end|>' → logprob: -17.14824676513672
    7. '=('' → logprob: -17.64824676513672
    8. '   ' → logprob: -17.64824676513672
    9. '(' → logprob: -17.77324676513672
    10. '=True' → logprob: -18.27324676513672

Token 967: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.03871558979153633
    2. ' (' → logprob: -3.2887156009674072
    3. 'total' → logprob: -7.913715362548828
    4. '(' → logprob: -9.038715362548828
    5. ' total' → logprob: -9.413715362548828
    6. '(t' → logprob: -9.788715362548828
    7. '(x' → logprob: -10.163715362548828
    8. '   ' → logprob: -11.288715362548828
    9. 'x' → logprob: -15.163715362548828
    10. ' ' → logprob: -15.788715362548828

Token 968: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -5.080963092041202e-06
    2. ' total' → logprob: -12.250004768371582
    3. 'x' → logprob: -15.250004768371582
    4. '(total' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.6250057220459
    6. 'tot' → logprob: -20.7500057220459
    7. '	total' → logprob: -21.6250057220459
    8. 't' → logprob: -22.0000057220459
    9. '       ' → logprob: -22.3750057220459
    10. 'Total' → logprob: -23.3750057220459

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005171707598492503
    2. ',x' → logprob: -7.62551736831665
    3. ' ,' → logprob: -11.125516891479492
    4. ',t' → logprob: -11.625516891479492
    5. ',
' → logprob: -13.000516891479492
    6. 'x' → logprob: -13.625516891479492
    7. '   ' → logprob: -15.000516891479492
    8. ',y' → logprob: -15.375516891479492
    9. 't' → logprob: -15.875516891479492
    10. '       ' → logprob: -16.000516891479492

Token 970: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -3.547789674485102e-05
    2. ' mass' → logprob: -10.250035285949707
    3. '_mass' → logprob: -25.250036239624023
    4. 'mask' → logprob: -25.750036239624023
    5. 'mas' → logprob: -26.750036239624023
    6. '.mass' → logprob: -26.750036239624023
    7. 'Mass' → logprob: -28.125036239624023
    8. 'massa' → logprob: -29.125036239624023
    9. 'masa' → logprob: -29.375036239624023
    10. 'm' → logprob: -29.625036239624023

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000545526563655585
    2. ',x' → logprob: -8.250545501708984
    3. ')' → logprob: -8.500545501708984
    4. ' ,' → logprob: -10.250545501708984
    5. '           ' → logprob: -10.375545501708984
    6. '),' → logprob: -12.750545501708984
    7. '       ' → logprob: -13.000545501708984
    8. '   ' → logprob: -13.375545501708984
    9. ',t' → logprob: -13.375545501708984
    10. '[' → logprob: -13.750545501708984

Token 972: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005667338264174759
    2. ' x' → logprob: -7.5005669593811035
    3. 't' → logprob: -11.250566482543945
    4. '   ' → logprob: -14.375566482543945
    5. ' t' → logprob: -16.375566482543945
    6. ' ' → logprob: -17.000566482543945
    7. '  ' → logprob: -18.375566482543945
    8. '	x' → logprob: -18.625566482543945
    9. '(x' → logprob: -18.625566482543945
    10. '    ' → logprob: -19.500566482543945

Token 973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000998751842416823
    2. ',y' → logprob: -7.0009989738464355
    3. ' ,' → logprob: -9.375998497009277
    4. 'y' → logprob: -13.750998497009277
    5. ',
' → logprob: -13.750998497009277
    6. ')' → logprob: -15.750998497009277
    7. ' y' → logprob: -16.000999450683594
    8. '<|end|>' → logprob: -16.000999450683594
    9. '   ' → logprob: -17.250999450683594
    10. ',user' → logprob: -18.625999450683594

Token 974: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.306760805164231e-05
    2. ' y' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.37501335144043
    4. '       ' → logprob: -19.87501335144043
    5. ')y' → logprob: -20.50001335144043
    6. '           ' → logprob: -20.87501335144043
    7. '	y' → logprob: -21.25001335144043
    8. '    ' → logprob: -21.62501335144043
    9. ')' → logprob: -22.00001335144043
    10. '```' → logprob: -22.37501335144043

Token 975: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -13.125017166137695
    4. '   ' → logprob: -13.875017166137695
    5. '<|end|>' → logprob: -15.250017166137695
    6. '       ' → logprob: -15.500017166137695
    7. ')}' → logprob: -16.250017166137695
    8. '),' → logprob: -17.250017166137695
    9. ')

' → logprob: -17.250017166137695
    10. ')return' → logprob: -17.375017166137695

Token 976: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24920476973056793
    2. 'if' → logprob: -1.9992047548294067
    3. '   ' → logprob: -2.4992048740386963
    4. ' if' → logprob: -6.249204635620117
    5. ' print' → logprob: -7.624204635620117
    6. '
' → logprob: -7.624204635620117
    7. '```' → logprob: -10.249204635620117
    8. ')' → logprob: -11.249204635620117
    9. '    
' → logprob: -11.374204635620117
    10. ',' → logprob: -11.874204635620117

Token 977: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005505407229065895
    2. 'print' → logprob: -5.255505561828613
    3. ' if' → logprob: -8.630505561828613
    4. '   ' → logprob: -9.380505561828613
    5. 'x' → logprob: -12.130505561828613
    6. '```' → logprob: -13.005505561828613
    7. 'for' → logprob: -14.880505561828613
    8. '    
' → logprob: -15.380505561828613
    9. ' print' → logprob: -16.005504608154297
    10. 'result' → logprob: -16.130504608154297

Token 978: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10026349872350693
    2. 'print' → logprob: -2.3502635955810547
    3. ' if' → logprob: -9.975263595581055
    4. 'x' → logprob: -11.850263595581055
    5. '   ' → logprob: -13.475263595581055
    6. ' print' → logprob: -13.475263595581055
    7. 'result' → logprob: -15.725263595581055
    8. '```' → logprob: -16.350263595581055
    9. 'for' → logprob: -16.725263595581055
    10. '#' → logprob: -18.225263595581055

Token 979: ' no' (ID: 860)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03804183006286621
    2. ' best' → logprob: -3.288041830062866
    3. '   ' → logprob: -14.788042068481445
    4. '(best' → logprob: -18.163042068481445
    5. '	best' → logprob: -18.288042068481445
    6. '
' → logprob: -19.913042068481445
    7. 'b' → logprob: -20.288042068481445
    8. ' ' → logprob: -20.788042068481445
    9. '    ' → logprob: -20.788042068481445
    10. '  ' → logprob: -21.288042068481445

Token 980: ' t' (ID: 260)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.011055718176066875
    2. 'best' → logprob: -4.511055946350098
    3. 't' → logprob: -12.136055946350098
    4. '(best' → logprob: -13.511055946350098
    5. ' ' → logprob: -14.261055946350098
    6. '	best' → logprob: -15.136055946350098
    7. ' t' → logprob: -16.26105499267578
    8. 'b' → logprob: -16.76105499267578
    9. '   ' → logprob: -17.13605499267578
    10. '_best' → logprob: -17.88605499267578

Token 981: ' found' (ID: 2491)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.812781572341919
    2. ' is' → logprob: -0.937781572341919
    3. ' best' → logprob: -2.312781572341919
    4. 'is' → logprob: -3.687781572341919
    5. ' was' → logprob: -3.812781572341919
    6. 'est' → logprob: -5.43778133392334
    7. 'found' → logprob: -5.56278133392334
    8. '(best' → logprob: -6.06278133392334
    9. 'was' → logprob: -6.31278133392334
    10. ' in' → logprob: -6.56278133392334

Token 982: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09656693041324615
    2. '   ' → logprob: -3.096566915512085
    3. ':
' → logprob: -3.221566915512085
    4. ' or' → logprob: -5.721567153930664
    5. '==' → logprob: -6.596567153930664
    6. ' ==' → logprob: -6.846567153930664
    7. ' is' → logprob: -6.971567153930664
    8. ',' → logprob: -10.221567153930664
    9. '=' → logprob: -10.346567153930664
    10. ' if' → logprob: -10.346567153930664

Token 983: ' previous' (ID: 5880)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.06284695863723755
    2. ' best' → logprob: -2.8128468990325928
    3. 'possible' → logprob: -7.062847137451172
    4. ' possible' → logprob: -11.812847137451172
    5. '(best' → logprob: -12.062847137451172
    6. 'not' → logprob: -13.062847137451172
    7. '
' → logprob: -13.187847137451172
    8. ' ' → logprob: -13.437847137451172
    9. ' not' → logprob: -14.187847137451172
    10. '	best' → logprob: -14.437847137451172

Token 984: ' logic' (ID: 18485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04250691458582878
    2. 'else' → logprob: -4.042506694793701
    3. '   ' → logprob: -4.917506694793701
    4. ':
' → logprob: -5.917506694793701
    5. ' else' → logprob: -5.917506694793701
    6. 'if' → logprob: -6.542506694793701
    7. 'steps' → logprob: -6.792506694793701
    8. 'means' → logprob: -7.042506694793701
    9. ' steps' → logprob: -7.167506694793701
    10. '```' → logprob: -7.417506694793701

Token 985: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08715842664241791
    2. ':' → logprob: -2.837158441543579
    3. ':
' → logprob: -4.087158203125
    4. ',' → logprob: -5.462158203125
    5. ' if' → logprob: -5.837158203125
    6. 'if' → logprob: -7.712158203125
    7. '
' → logprob: -8.462158203125
    8. '    
' → logprob: -9.337158203125
    9. '<|end|>' → logprob: -9.587158203125
    10. '       ' → logprob: -10.837158203125

Token 986: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6049959063529968
    2. '   ' → logprob: -1.2299959659576416
    3. 'for' → logprob: -2.3549959659576416
    4. 'if' → logprob: -2.9799959659576416
    5. 'found' → logprob: -5.6049957275390625
    6. 'print' → logprob: -5.8549957275390625
    7. ' for' → logprob: -5.9799957275390625
    8. 'possible' → logprob: -6.2299957275390625
    9. '
' → logprob: -6.8549957275390625
    10. 't' → logprob: -6.9799957275390625

Token 987: ' searching' (ID: 17437)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7499944567680359
    2. 't' → logprob: -1.2499945163726807
    3. 'range' → logprob: -2.2499945163726807
    4. 'for' → logprob: -2.4999945163726807
    5. '   ' → logprob: -3.4999945163726807
    6. ' t' → logprob: -4.749994277954102
    7. ' range' → logprob: -5.999994277954102
    8. 'possible' → logprob: -6.124994277954102
    9. '[
' → logprob: -6.249994277954102
    10. ' ' → logprob: -6.374994277954102

Token 988: ' around' (ID: 2846)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3345839977264404
    2. 'in' → logprob: -1.4595839977264404
    3. ' for' → logprob: -1.8345839977264404
    4. '   ' → logprob: -2.0845839977264404
    5. 'for' → logprob: -2.2095839977264404
    6. 't' → logprob: -2.8345839977264404
    7. ' t' → logprob: -4.0845842361450195
    8. 'from' → logprob: -4.3345842361450195
    9. '
' → logprob: -4.7095842361450195
    10. ' a' → logprob: -6.0845842361450195

Token 989: ' t' (ID: 260)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30060818791389465
    2. '-' → logprob: -1.9256081581115723
    3. 't' → logprob: -2.8006081581115723
    4. 'for' → logprob: -4.175608158111572
    5. 'best' → logprob: -4.425608158111572
    6. ' -' → logprob: -5.175608158111572
    7. ' ' → logprob: -5.300608158111572
    8. 'max' → logprob: -5.300608158111572
    9. 'range' → logprob: -5.925608158111572
    10. 'min' → logprob: -6.050608158111572

Token 990: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.9188169836997986
    2. '_range' → logprob: -1.2938170433044434
    3. 'for' → logprob: -2.0438170433044434
    4. 'range' → logprob: -2.6688170433044434
    5. 'min' → logprob: -3.2938170433044434
    6. '=' → logprob: -3.4188170433044434
    7. ' =' → logprob: -3.7938170433044434
    8. '_best' → logprob: -4.668817043304443
    9. 's' → logprob: -5.418817043304443
    10. '0' → logprob: -5.668817043304443

Token 991: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03800372779369354
    2. '
' → logprob: -3.66300368309021
    3. ',' → logprob: -5.413003921508789
    4. ':' → logprob: -6.413003921508789
    5. ' for' → logprob: -6.413003921508789
    6. ' if' → logprob: -6.913003921508789
    7. '    
' → logprob: -6.913003921508789
    8. ' =' → logprob: -7.038003921508789
    9. '<|end|>' → logprob: -8.538003921508789
    10. 'for' → logprob: -8.913003921508789

Token 992: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00016098834748845547
    2. ' t' → logprob: -8.750161170959473
    3. '`t' → logprob: -14.000161170959473
    4. '+' → logprob: -14.125161170959473
    5. '
' → logprob: -15.125161170959473
    6. 'min' → logprob: -15.250161170959473
    7. '<|end|>' → logprob: -15.625161170959473
    8. 'max' → logprob: -16.500160217285156
    9. '_t' → logprob: -16.750160217285156
    10. '+t' → logprob: -17.000160217285156

Token 993: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.12727978825569153
    2. '_max' → logprob: -2.127279758453369
    3. '+' → logprob: -8.627280235290527
    4. 'min' → logprob: -8.877280235290527
    5. 'max' → logprob: -10.377280235290527
    6. '_' → logprob: -14.752280235290527
    7. '```' → logprob: -14.877280235290527
    8. '_plus' → logprob: -15.127280235290527
    9. '=' → logprob: -16.25227928161621
    10. 'imin' → logprob: -16.62727928161621

Token 994: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022441741079092026
    2. '
' → logprob: -4.147441864013672
    3. ' for' → logprob: -5.647441864013672
    4. ' if' → logprob: -6.147441864013672
    5. 'for' → logprob: -8.147441864013672
    6. '    
' → logprob: -9.022441864013672
    7. '```' → logprob: -9.147441864013672
    8. ',' → logprob: -9.397441864013672
    9. 'if' → logprob: -9.522441864013672
    10. ':' → logprob: -11.647441864013672

Token 995: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06344860792160034
    2. ' t' → logprob: -2.813448667526245
    3. '-' → logprob: -7.313448429107666
    4. ' -' → logprob: -8.688448905944824
    5. '0' → logprob: -9.438448905944824
    6. '_' → logprob: -9.563448905944824
    7. ' ' → logprob: -9.688448905944824
    8. 'possible' → logprob: -9.688448905944824
    9. 'i' → logprob: -9.938448905944824
    10. 'range' → logprob: -10.188448905944824

Token 996: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3492394685745239
    2. ' t' → logprob: -2.0992393493652344
    3. 'total' → logprob: -2.9742393493652344
    4. ' total' → logprob: -3.3492393493652344
    5. 'possible' → logprob: -3.9742393493652344
    6. ' for' → logprob: -4.349239349365234
    7. 'for' → logprob: -4.599239349365234
    8. 'x' → logprob: -4.849239349365234
    9. 'if' → logprob: -5.099239349365234
    10. ' if' → logprob: -5.474239349365234

Token 997: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010438685305416584
    2. '
' → logprob: -5.260438919067383
    3. ' if' → logprob: -5.885438919067383
    4. ' for' → logprob: -6.385438919067383
    5. 'for' → logprob: -8.385438919067383
    6. '    
' → logprob: -8.635438919067383
    7. 'if' → logprob: -8.885438919067383
    8. '```' → logprob: -9.135438919067383
    9. ',' → logprob: -9.885438919067383
    10. '  
' → logprob: -12.885438919067383

Token 998: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.5656834244728088
    2. 't' → logprob: -1.315683364868164
    3. 'total' → logprob: -2.690683364868164
    4. 'best' → logprob: -2.815683364868164
    5. 'minimal' → logprob: -3.940683364868164
    6. ' mass' → logprob: -4.940683364868164
    7. ' total' → logprob: -6.190683364868164
    8. ' t' → logprob: -6.565683364868164
    9. 'min' → logprob: -6.565683364868164
    10. 'x' → logprob: -6.690683364868164

Token 999: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007138486485928297
    2. '
' → logprob: -5.257138252258301
    3. ' for' → logprob: -7.257138252258301
    4. 'for' → logprob: -7.632138252258301
    5. ' if' → logprob: -7.757138252258301
    6. 'if' → logprob: -8.5071382522583
    7. '    
' → logprob: -10.1321382522583
    8. ',' → logprob: -11.3821382522583
    9. '       ' → logprob: -11.3821382522583
    10. '```' → logprob: -11.7571382522583

Token 1000: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002091496018692851
    2. ' for' → logprob: -7.127091407775879
    3. 'for' → logprob: -7.127091407775879
    4. '```' → logprob: -8.502091407775879
    5. ' if' → logprob: -8.752091407775879
    6. 'if' → logprob: -9.377091407775879
    7. '
' → logprob: -10.502091407775879
    8. '``' → logprob: -12.877091407775879
    9. '    
' → logprob: -13.127091407775879
    10. 't' → logprob: -13.627091407775879

Token 1001: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07531605660915375
    2. ' if' → logprob: -3.3253159523010254
    3. 'if' (adapté à ' if') → logprob: -3.4503159523010254
    4. ' for' → logprob: -5.950315952301025
    5. 'for' → logprob: -6.200315952301025
    6. '```' → logprob: -8.700316429138184
    7. '
' → logprob: -10.575316429138184
    8. 't' → logprob: -11.075316429138184
    9. '``' → logprob: -12.700316429138184
    10. ' t' → logprob: -12.950316429138184

Token 1002: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6931484341621399
    2. 'best' → logprob: -0.6931484341621399
    3. '   ' → logprob: -13.943148612976074
    4. '	best' → logprob: -16.068147659301758
    5. '(best' → logprob: -16.193147659301758
    6. 'b' → logprob: -17.068147659301758
    7. ' not' → logprob: -17.568147659301758
    8. 'not' → logprob: -18.318147659301758
    9. ' ' → logprob: -19.193147659301758
    10. '
' → logprob: -19.568147659301758

Token 1003: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2519315779209137
    2. 'is' → logprob: -1.5019315481185913
    3. '==' → logprob: -14.001931190490723
    4. '=' → logprob: -15.126931190490723
    5. '[' → logprob: -15.126931190490723
    6. ')' → logprob: -15.251931190490723
    7. '```' → logprob: -15.251931190490723
    8. '===' → logprob: -15.751931190490723
    9. '	is' → logprob: -16.37693214416504
    10. ' =' → logprob: -16.37693214416504

Token 1004: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00043555660522542894
    2. ' None' → logprob: -7.7504353523254395
    3. '   ' → logprob: -12.250435829162598
    4. 'none' → logprob: -17.62543487548828
    5. '(None' → logprob: -18.62543487548828
    6. '=None' → logprob: -18.62543487548828
    7. '_None' → logprob: -19.00043487548828
    8. 'not' → logprob: -21.25043487548828
    9. '_none' → logprob: -21.25043487548828
    10. '
' → logprob: -22.00043487548828

Token 1005: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056092023849487305
    2. ':
' → logprob: -2.9310920238494873
    3. '   ' → logprob: -6.806092262268066
    4. '       ' → logprob: -9.681092262268066
    5. '=' → logprob: -11.681092262268066
    6. ':

' → logprob: -12.056092262268066
    7. ',' → logprob: -12.306092262268066
    8. '<|end|>' → logprob: -12.431092262268066
    9. '):
' → logprob: -12.681092262268066
    10. '[' → logprob: -13.181092262268066

Token 1006: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001064486219547689
    2. '```' → logprob: -7.126064300537109
    3. ' for' → logprob: -8.62606430053711
    4. '       ' → logprob: -9.87606430053711
    5. '
' → logprob: -11.62606430053711
    6. '<|end|>' → logprob: -12.37606430053711
    7. ':' → logprob: -12.50106430053711
    8. '    
' → logprob: -12.87606430053711
    9. 'for' → logprob: -13.12606430053711
    10. ',' → logprob: -13.37606430053711

Token 1007: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20774775743484497
    2. '   ' → logprob: -2.0827476978302
    3. ' for' → logprob: -2.9577476978302
    4. 'import' → logprob: -5.957747936248779
    5. 'search' → logprob: -6.082747936248779
    6. 'found' → logprob: -6.582747936248779
    7. 't' → logprob: -7.082747936248779
    8. 'low' → logprob: -7.457747936248779
    9. 'range' → logprob: -7.457747936248779
    10. 'step' → logprob: -7.457747936248779

Token 1008: ' search' (ID: 3684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11325988173484802
    2. 'search' → logprob: -2.988259792327881
    3. 'found' → logprob: -3.988259792327881
    4. 'low' → logprob: -4.613259792327881
    5. 'range' → logprob: -4.988259792327881
    6. '   ' → logprob: -5.238259792327881
    7. 't' → logprob: -5.363259792327881
    8. 'step' → logprob: -5.988259792327881
    9. 'import' → logprob: -5.988259792327881
    10. 'from' → logprob: -6.113259792327881

Token 1009: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05089036375284195
    2. ' for' → logprob: -3.8008904457092285
    3. '   ' → logprob: -4.1758904457092285
    4. 'range' → logprob: -4.6758904457092285
    5. 't' → logprob: -6.4258904457092285
    6. 'from' → logprob: -8.17588996887207
    7. ' range' → logprob: -8.30088996887207
    8. 'around' → logprob: -8.67588996887207
    9. '       ' → logprob: -9.05088996887207
    10. ' t' → logprob: -9.92588996887207

Token 1010: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3318239152431488
    2. 'range' → logprob: -1.7068239450454712
    3. '=' → logprob: -3.4568238258361816
    4. '   ' → logprob: -3.5818238258361816
    5. '       ' → logprob: -3.9568238258361816
    6. '_range' → logprob: -4.831823825836182
    7. 'in' → logprob: -5.206823825836182
    8. ' =' → logprob: -5.831823825836182
    9. ' for' → logprob: -6.331823825836182
    10. 'from' → logprob: -6.331823825836182

Token 1011: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.246537173457909e-06
    2. ' range' → logprob: -12.375003814697266
    3. '(range' → logprob: -17.625003814697266
    4. '
' → logprob: -18.250003814697266
    5. 'list' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '	range' → logprob: -19.875003814697266
    8. 't' → logprob: -20.000003814697266
    9. '```' → logprob: -20.875003814697266
    10. 'ranges' → logprob: -20.875003814697266

Token 1012: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3560413420200348
    2. 'range' → logprob: -1.3560413122177124
    3. 'max' → logprob: -3.731041431427002
    4. '(range' → logprob: -4.731041431427002
    5. '(t' → logprob: -5.606041431427002
    6. 't' → logprob: -6.231041431427002
    7. 'for' → logprob: -6.356041431427002
    8. '(min' → logprob: -6.856041431427002
    9. '(-' → logprob: -7.981041431427002
    10. '(int' → logprob: -8.981040954589844

Token 1013: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.32073646783828735
    2. '(int' → logprob: -1.3207364082336426
    3. '(' → logprob: -5.320736408233643
    4. '(-' → logprob: -6.695736408233643
    5. 'int' → logprob: -7.195736408233643
    6. '(min' → logprob: -7.945736408233643
    7. 't' → logprob: -8.6957368850708
    8. '(max' → logprob: -9.9457368850708
    9. '0' → logprob: -14.8207368850708
    10. '(
' → logprob: -14.9457368850708

Token 1014: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0019376773852854967
    2. 'min' → logprob: -6.2519378662109375
    3. 'int' → logprob: -12.626937866210938
    4. '_max' → logprob: -13.251937866210938
    5. '(min' → logprob: -13.751937866210938
    6. '0' → logprob: -14.501937866210938
    7. '(int' → logprob: -14.626937866210938
    8. '=int' → logprob: -14.751937866210938
    9. '_int' → logprob: -15.251937866210938
    10. '=' → logprob: -15.376937866210938

Token 1015: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31036168336868286
    2. ',' → logprob: -1.935361623764038
    3. '(' → logprob: -2.935361623764038
    4. '(-' → logprob: -3.435361623764038
    5. '(max' → logprob: -4.185361862182617
    6. '(int' → logprob: -4.560361862182617
    7. ' -' → logprob: -4.935361862182617
    8. '(t' → logprob: -6.810361862182617
    9. '   ' → logprob: -6.935361862182617
    10. 'max' → logprob: -7.560361862182617

Token 1016: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005427631549537182
    2. 'int' → logprob: -5.380427837371826
    3. '-' → logprob: -7.380427837371826
    4. '-int' → logprob: -9.630427360534668
    5. ' ' → logprob: -10.130427360534668
    6. '(int' → logprob: -10.630427360534668
    7. 't' → logprob: -11.130427360534668
    8. ' int' → logprob: -11.630427360534668
    9. 'max' → logprob: -12.505427360534668
    10. '-(' → logprob: -12.630427360534668

Token 1017: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.201427161693573
    2. '10' → logprob: -1.7014272212982178
    3. '(' → logprob: -11.951427459716797
    4. 'int' → logprob: -12.326427459716797
    5. '20' → logprob: -13.201427459716797
    6. '200' → logprob: -14.826427459716797
    7. '50' → logprob: -14.951427459716797
    8. ' ' → logprob: -16.201427459716797
    9. '500' → logprob: -16.201427459716797
    10. '101' → logprob: -16.326427459716797

Token 1018: '000' (ID: 1302)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.4140441635390744e-05
    2. '10' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.750014305114746
    4. '```' → logprob: -13.750014305114746
    5. '   ' → logprob: -14.625014305114746
    6. '  ' → logprob: -16.12501335144043
    7. '
' → logprob: -16.12501335144043
    8. '(' → logprob: -16.12501335144043
    9. '110' → logprob: -16.37501335144043
    10. ')' → logprob: -16.50001335144043

Token 1019: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13124100863933563
    2. '100' → logprob: -2.3812410831451416
    3. '0' → logprob: -3.5062410831451416
    4. '-' → logprob: -8.881240844726562
    5. ' ,' → logprob: -9.131240844726562
    6. '),' → logprob: -9.256240844726562
    7. '000' → logprob: -9.381240844726562
    8. '```' → logprob: -9.506240844726562
    9. '   ' → logprob: -11.506240844726562
    10. ',
' → logprob: -11.881240844726562

Token 1020: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026826057583093643
    2. '       ' → logprob: -5.151825904846191
    3. ' ,' → logprob: -5.401825904846191
    4. '```' → logprob: -5.651825904846191
    5. '   ' → logprob: -6.151825904846191
    6. ' -' → logprob: -6.651825904846191
    7. '-' → logprob: -6.776825904846191
    8. '=' → logprob: -7.026825904846191
    9. ',max' → logprob: -7.026825904846191
    10. ' for' → logprob: -7.151825904846191

Token 1021: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0052505917847156525
    2. ' min' → logprob: -5.255250453948975
    3. 'int' → logprob: -11.380250930786133
    4. 'max' → logprob: -12.380250930786133
    5. '(min' → logprob: -14.880250930786133
    6. '	min' → logprob: -15.130250930786133
    7. ' int' → logprob: -15.505250930786133
    8. '[min' → logprob: -15.880250930786133
    9. ' ' → logprob: -16.380250930786133
    10. '   ' → logprob: -16.505250930786133

Token 1022: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21079502999782562
    2. '(t' → logprob: -1.7107950448989868
    3. 'int' → logprob: -4.960794925689697
    4. '(int' → logprob: -6.085794925689697
    5. '100' → logprob: -10.960795402526855
    6. ' t' → logprob: -11.335795402526855
    7. '(' → logprob: -11.460795402526855
    8. ' int' → logprob: -11.835795402526855
    9. '```' → logprob: -12.460795402526855
    10. ' (' → logprob: -13.585795402526855

Token 1023: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.008616461418569088
    2. 'max' → logprob: -4.7586164474487305
    3. '_min' → logprob: -13.63361644744873
    4. 'Max' → logprob: -15.75861644744873
    5. '_MAX' → logprob: -16.008617401123047
    6. '100' → logprob: -16.133617401123047
    7. ''_' → logprob: -16.383617401123047
    8. ' max' → logprob: -16.633617401123047
    9. '```' → logprob: -16.633617401123047
    10. '_' → logprob: -17.883617401123047

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012433248339220881
    2. '+' → logprob: -7.7512431144714355
    3. '100' → logprob: -7.7512431144714355
    4. ' ,' → logprob: -8.751243591308594
    5. '(' → logprob: -9.501243591308594
    6. ' +' → logprob: -9.876243591308594
    7. '```' → logprob: -10.501243591308594
    8. '(max' → logprob: -10.751243591308594
    9. ',max' → logprob: -12.126243591308594
    10. '       ' → logprob: -12.251243591308594

Token 1025: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -7.147740689106286e-05
    2. ' ' → logprob: -9.75007152557373
    3. 't' → logprob: -12.00007152557373
    4. '   ' → logprob: -13.25007152557373
    5. '```' → logprob: -13.50007152557373
    6. 'max' → logprob: -13.87507152557373
    7. '
' → logprob: -14.12507152557373
    8. 'min' → logprob: -14.12507152557373
    9. '  ' → logprob: -15.00007152557373
    10. '10' → logprob: -15.12507152557373

Token 1026: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.750018119812012
    4. '```' → logprob: -15.250018119812012
    5. '
' → logprob: -15.375018119812012
    6. '  ' → logprob: -15.625018119812012
    7. '10' → logprob: -16.625017166137695
    8. 't' → logprob: -16.625017166137695
    9. '+' → logprob: -16.750017166137695
    10. '{' → logprob: -17.500017166137695

Token 1027: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -4.8232690460281447e-05
    2. '5' → logprob: -11.125048637390137
    3. ' ' → logprob: -11.750048637390137
    4. '```' → logprob: -11.875048637390137
    5. '100' → logprob: -12.125048637390137
    6. '005' → logprob: -12.500048637390137
    7. '   ' → logprob: -12.625048637390137
    8. '+' → logprob: -12.625048637390137
    9. '0' → logprob: -13.875048637390137
    10. '_' → logprob: -14.750048637390137

Token 1028: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.40082234144210815
    2. ',' → logprob: -2.150822401046753
    3. '+' → logprob: -2.275822401046753
    4. '   ' → logprob: -3.400822401046753
    5. '       ' → logprob: -3.400822401046753
    6. ' +' → logprob: -3.900822401046753
    7. '):' → logprob: -5.150822162628174
    8. ')' → logprob: -5.275822162628174
    9. '```' → logprob: -5.275822162628174
    10. '
' → logprob: -6.025822162628174

Token 1029: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8897759914398193
    2. '   ' → logprob: -1.1397759914398193
    3. ' for' → logprob: -1.5147759914398193
    4. '       ' → logprob: -3.5147759914398193
    5. 'for' → logprob: -4.014776229858398
    6. '``' → logprob: -6.514776229858398
    7. '\' → logprob: -10.014776229858398
    8. '	for' → logprob: -10.139776229858398
    9. ',' → logprob: -10.264776229858398
    10. '
' → logprob: -11.014776229858398

Token 1030: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36713698506355286
    2. 'for' → logprob: -1.3671369552612305
    3. '   ' → logprob: -2.9921369552612305
    4. '       ' → logprob: -6.1171369552612305
    5. '```' → logprob: -10.61713695526123
    6. '
' → logprob: -10.86713695526123
    7. '	for' → logprob: -11.99213695526123
    8. '    ' → logprob: -12.61713695526123
    9. '           ' → logprob: -12.86713695526123
    10. ' ' → logprob: -12.99213695526123

Token 1031: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4802163243293762
    2. ' =' → logprob: -0.9802163243293762
    3. '=max' → logprob: -5.1052165031433105
    4. ',' → logprob: -10.730216026306152
    5. 'max' → logprob: -11.855216026306152
    6. '=start' → logprob: -12.105216026306152
    7. '=min' → logprob: -12.230216026306152
    8. '```' → logprob: -12.605216026306152
    9. '=int' → logprob: -12.980216026306152
    10. '   ' → logprob: -13.230216026306152

Token 1032: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014205467887222767
    2. ' max' → logprob: -4.264205455780029
    3. 'int' → logprob: -10.139205932617188
    4. '   ' → logprob: -14.139205932617188
    5. 'min' → logprob: -14.139205932617188
    6. '(max' → logprob: -14.514205932617188
    7. ' int' → logprob: -15.139205932617188
    8. '	max' → logprob: -16.639205932617188
    9. '[max' → logprob: -16.764205932617188
    10. '=max' → logprob: -17.514205932617188

Token 1033: '(t' (ID: 2025)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07947791367769241
    2. '(t' → logprob: -2.8294780254364014
    3. 'int' → logprob: -4.329477787017822
    4. '(-' → logprob: -6.079477787017822
    5. '(' → logprob: -6.329477787017822
    6. 't' → logprob: -9.57947826385498
    7. '0' → logprob: -11.07947826385498
    8. '(min' → logprob: -11.45447826385498
    9. ' int' → logprob: -11.95447826385498
    10. '(start' → logprob: -12.32947826385498

Token 1034: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.09057948738336563
    2. 'min' → logprob: -3.0905795097351074
    3. 'int' → logprob: -3.8405795097351074
    4. '(int' → logprob: -4.340579509735107
    5. '(-' → logprob: -5.840579509735107
    6. '(t' → logprob: -6.340579509735107
    7. '(min' → logprob: -7.090579509735107
    8. '(' → logprob: -7.590579509735107
    9. '-' → logprob: -8.59057903289795
    10. '_int' → logprob: -9.21557903289795

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013381359167397022
    2. ' ,' → logprob: -9.000133514404297
    3. '   ' → logprob: -12.125133514404297
    4. ',
' → logprob: -14.250133514404297
    5. '```' → logprob: -14.375133514404297
    6. '0' → logprob: -14.500133514404297
    7. '-' → logprob: -14.625133514404297
    8. ',-' → logprob: -14.625133514404297
    9. ',start' → logprob: -14.750133514404297
    10. '=' → logprob: -14.875133514404297

Token 1036: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020401719666551799
    2. ' -' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.250204086303711
    4. '-int' → logprob: -15.375204086303711
    5. '100' → logprob: -18.62520408630371
    6. '-c' → logprob: -18.62520408630371
    7. '-t' → logprob: -18.87520408630371
    8. ' ' → logprob: -19.00020408630371
    9. '  ' → logprob: -19.00020408630371
    10. 'int' → logprob: -19.62520408630371

Token 1037: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -17.125
    4. '   ' → logprob: -17.25
    5. '10' → logprob: -18.0
    6. '
' → logprob: -19.5
    7. '(' → logprob: -19.625
    8. 'int' → logprob: -19.625
    9. '999' → logprob: -19.875
    10. '  ' → logprob: -20.125

Token 1038: '000' (ID: 1302)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5812244415283203
    2. '5' → logprob: -0.8312244415283203
    3. '000' → logprob: -5.33122444152832
    4. '```' → logprob: -8.33122444152832
    5. '500' → logprob: -9.33122444152832
    6. '999' → logprob: -10.45622444152832
    7. '   ' → logprob: -10.58122444152832
    8. ' ' → logprob: -10.95622444152832
    9. '3' → logprob: -11.70622444152832
    10. '4' → logprob: -11.70622444152832

Token 1039: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.001055676257237792
    2. ')' → logprob: -7.126055717468262
    3. '       ' → logprob: -8.876055717468262
    4. ',' → logprob: -9.501055717468262
    5. ')
' → logprob: -11.126055717468262
    6. '   ' → logprob: -11.126055717468262
    7. '```' → logprob: -12.376055717468262
    8. '),' → logprob: -14.126055717468262
    9. ' )
' → logprob: -14.376055717468262
    10. '0' → logprob: -14.626055717468262

Token 1040: '       ' (ID: 309)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2730347812175751
    2. ' end' → logprob: -1.8980348110198975
    3. '   ' → logprob: -2.5230348110198975
    4. '       ' → logprob: -5.148034572601318
    5. '```' → logprob: -5.898034572601318
    6. '    ' → logprob: -9.773035049438477
    7. '``' → logprob: -9.773035049438477
    8. '(end' → logprob: -10.398035049438477
    9. '[end' → logprob: -10.398035049438477
    10. '	end' → logprob: -10.398035049438477

Token 1041: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.00026264708139933646
    2. ' end' → logprob: -8.500262260437012
    3. '   ' → logprob: -9.750262260437012
    4. '```' → logprob: -14.875262260437012
    5. 'stop' → logprob: -15.125262260437012
    6. '       ' → logprob: -15.500262260437012
    7. 'start' → logprob: -17.000263214111328
    8. '``' → logprob: -17.375263214111328
    9. '	end' → logprob: -19.000263214111328
    10. 'limit' → logprob: -19.625263214111328

Token 1042: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932663321495056
    2. ' =' → logprob: -0.6932663321495056
    3. '   ' → logprob: -9.068265914916992
    4. '```' → logprob: -13.193265914916992
    5. '=
' → logprob: -15.068265914916992
    6. ' ' → logprob: -15.318265914916992
    7. '=min' → logprob: -15.443265914916992
    8. '=max' → logprob: -15.443265914916992
    9. '    ' → logprob: -15.568265914916992
    10. ',' → logprob: -15.568265914916992

Token 1043: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014163747429847717
    2. ' min' → logprob: -4.264163970947266
    3. 'int' → logprob: -15.389163970947266
    4. '	min' → logprob: -17.764163970947266
    5. '(min' → logprob: -18.014163970947266
    6. 'max' → logprob: -18.264163970947266
    7. '   ' → logprob: -18.764163970947266
    8. '[min' → logprob: -19.639163970947266
    9. ' int' → logprob: -19.889163970947266
    10. ' ' → logprob: -20.389163970947266

Token 1044: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.05428098514676094
    2. 't' → logprob: -3.054280996322632
    3. 'int' → logprob: -5.304280757904053
    4. '(int' → logprob: -7.304280757904053
    5. '(' → logprob: -11.304281234741211
    6. ' int' → logprob: -11.554281234741211
    7. ' t' → logprob: -11.679281234741211
    8. ' (' → logprob: -13.054281234741211
    9. '   ' → logprob: -13.679281234741211
    10. '100' → logprob: -15.179281234741211

Token 1045: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.07299675792455673
    2. 'max' → logprob: -2.8229968547821045
    3. 't' → logprob: -4.947996616363525
    4. '(t' → logprob: -5.572996616363525
    5. '_t' → logprob: -10.072997093200684
    6. 'Max' → logprob: -11.572997093200684
    7. '100' → logprob: -11.947997093200684
    8. ' t' → logprob: -13.072997093200684
    9. '_min' → logprob: -13.072997093200684
    10. '_MAX' → logprob: -13.072997093200684

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00445670448243618
    2. ' +' → logprob: -5.879456520080566
    3. '+' → logprob: -6.504456520080566
    4. ' ,' → logprob: -9.504456520080566
    5. '```' → logprob: -10.254456520080566
    6. ')' → logprob: -10.629456520080566
    7. '   ' → logprob: -11.629456520080566
    8. '       ' → logprob: -12.629456520080566
    9. ')+' → logprob: -13.254456520080566
    10. '+,' → logprob: -13.379456520080566

Token 1047: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0015047440538182855
    2. ' ' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.376504898071289
    4. '+' → logprob: -15.126504898071289
    5. '  ' → logprob: -15.251504898071289
    6. 't' → logprob: -16.62650489807129
    7. '    ' → logprob: -16.87650489807129
    8. 'int' → logprob: -17.12650489807129
    9. '10' → logprob: -17.12650489807129
    10. '
' → logprob: -17.37650489807129

Token 1048: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.500030517578125
    4. 't' → logprob: -14.750030517578125
    5. '  ' → logprob: -15.125030517578125
    6. '+' → logprob: -15.250030517578125
    7. '    ' → logprob: -16.125030517578125
    8. '```' → logprob: -16.500030517578125
    9. '       ' → logprob: -16.625030517578125
    10. 'int' → logprob: -16.625030517578125

Token 1049: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3144911527633667
    2. '5' → logprob: -1.3144911527633667
    3. '3' → logprob: -7.189491271972656
    4. '```' → logprob: -8.939491271972656
    5. '005' → logprob: -9.064491271972656
    6. '4' → logprob: -9.314491271972656
    7. '+' → logprob: -9.689491271972656
    8. '   ' → logprob: -10.439491271972656
    9. ' ' → logprob: -11.439491271972656
    10. '    ' → logprob: -11.814491271972656

Token 1050: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0806315541267395
    2. ' +' → logprob: -2.7056314945220947
    3. '   ' → logprob: -5.455631732940674
    4. ')' → logprob: -5.455631732940674
    5. '
' → logprob: -7.330631732940674
    6. ')+' → logprob: -7.455631732940674
    7. '```' → logprob: -7.830631732940674
    8. '):
' → logprob: -8.205631256103516
    9. ')
' → logprob: -9.080631256103516
    10. ',' → logprob: -10.330631256103516

Token 1051: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08240488171577454
    2. ' for' → logprob: -3.457404851913452
    3. '       ' → logprob: -3.707404851913452
    4. 'for' → logprob: -3.957404851913452
    5. '```' → logprob: -5.582405090332031
    6. '
' → logprob: -9.207405090332031
    7. '	for' → logprob: -10.207405090332031
    8. '``' → logprob: -10.457405090332031
    9. '           ' → logprob: -13.332405090332031
    10. ',' → logprob: -13.707405090332031

Token 1052: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007917628972791135
    2. '   ' → logprob: -7.250791549682617
    3. ' for' → logprob: -9.500791549682617
    4. '```' → logprob: -12.000791549682617
    5. '       ' → logprob: -14.375791549682617
    6. '
' → logprob: -15.875791549682617
    7. '	for' → logprob: -16.375791549682617
    8. '``' → logprob: -17.875791549682617
    9. 'if' → logprob: -19.000791549682617
    10. 'found' → logprob: -19.750791549682617

Token 1053: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0024794621858745813
    2. ' t' → logprob: -6.002479553222656
    3. '   ' → logprob: -13.002479553222656
    4. '`t' → logprob: -13.752479553222656
    5. '_t' → logprob: -14.752479553222656
    6. '	t' → logprob: -17.127479553222656
    7. '```' → logprob: -17.627479553222656
    8. '       ' → logprob: -19.627479553222656
    9. ' ' → logprob: -19.627479553222656
    10. '  ' → logprob: -20.127479553222656

Token 1054: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005935313180088997
    2. 'in' → logprob: -5.130935192108154
    3. '	' → logprob: -12.255935668945312
    4. '	in' → logprob: -14.380935668945312
    5. '		' → logprob: -15.505935668945312
    6. '_' → logprob: -15.630935668945312
    7. '        ' → logprob: -15.755935668945312
    8. ' ' → logprob: -15.755935668945312
    9. ' 	' → logprob: -16.130935668945312
    10. '_in' → logprob: -16.255935668945312

Token 1055: ' range' (ID: 3352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16555249691009521
    2. 'range' → logprob: -1.9155524969100952
    3. 'int' → logprob: -5.290552616119385
    4. ' start' → logprob: -8.665552139282227
    5. ' range' → logprob: -9.290552139282227
    6. ' int' → logprob: -12.665552139282227
    7. '(start' → logprob: -12.665552139282227
    8. '[start' → logprob: -12.915552139282227
    9. '=start' → logprob: -15.040552139282227
    10. 't' → logprob: -15.415552139282227

Token 1056: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7179659008979797
    2. '(start' → logprob: -0.7179659008979797
    3. '(int' → logprob: -4.342966079711914
    4. 'int' → logprob: -4.467966079711914
    5. ' start' → logprob: -10.967966079711914
    6. '(' → logprob: -11.217966079711914
    7. ' (' → logprob: -12.092966079711914
    8. ' int' → logprob: -12.342966079711914
    9. '[start' → logprob: -13.717966079711914
    10. '   ' → logprob: -13.842966079711914

Token 1057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005818653153255582
    2. ',end' → logprob: -7.500581741333008
    3. ',start' → logprob: -11.250581741333008
    4. ' ,' → logprob: -11.500581741333008
    5. '   ' → logprob: -13.375581741333008
    6. ',int' → logprob: -13.375581741333008
    7. ',
' → logprob: -13.875581741333008
    8. '       ' → logprob: -14.750581741333008
    9. ',t' → logprob: -15.000581741333008
    10. '+' → logprob: -15.250581741333008

Token 1058: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -2.2723104848410003e-05
    2. ' end' → logprob: -10.750022888183594
    3. '(end' → logprob: -13.875022888183594
    4. 'int' → logprob: -15.875022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '       ' → logprob: -17.000022888183594
    7. '           ' → logprob: -17.750022888183594
    8. '=end' → logprob: -17.750022888183594
    9. '[end' → logprob: -19.000022888183594
    10. '	end' → logprob: -19.875022888183594

Token 1059: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05488995462656021
    2. ' +' → logprob: -2.9298899173736572
    3. '   ' → logprob: -12.179889678955078
    4. '()+' → logprob: -14.179889678955078
    5. ',' → logprob: -14.679889678955078
    6. '```' → logprob: -14.929889678955078
    7. '+
' → logprob: -15.554889678955078
    8. '＋' → logprob: -15.804889678955078
    9. '       ' → logprob: -15.929889678955078
    10. '):
' → logprob: -16.054889678955078

Token 1060: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -17.25
    5. '100' → logprob: -20.5
    6. ')' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. '``' → logprob: -20.875
    9. '2' → logprob: -21.0
    10. '0' → logprob: -21.25

Token 1061: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1454913169145584
    2. '):
' → logprob: -2.020491361618042
    3. '       ' → logprob: -6.395491123199463
    4. '   ' → logprob: -7.270491123199463
    5. ':' → logprob: -8.520491600036621
    6. '+' → logprob: -9.645491600036621
    7. '):
' → logprob: -9.645491600036621
    8. '```' → logprob: -10.770491600036621
    9. '<|end|>' → logprob: -11.270491600036621
    10. '**' → logprob: -11.395491600036621

Token 1062: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010126473382115364
    2. '   ' → logprob: -4.63512659072876
    3. '```' → logprob: -8.010126113891602
    4. ' x' → logprob: -11.385126113891602
    5. '<|end|>' → logprob: -11.760126113891602
    6. ' if' → logprob: -12.385126113891602
    7. 'x' → logprob: -13.010126113891602
    8. '	   ' → logprob: -13.135126113891602
    9. '``' → logprob: -13.510126113891602
    10. '[' → logprob: -13.635126113891602

Token 1063: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12998735904693604
    2. '   ' → logprob: -2.1299872398376465
    3. 'x' (adapté à ' x') → logprob: -6.3799872398376465
    4. ' x' → logprob: -7.0049872398376465
    5. '           ' → logprob: -8.379987716674805
    6. '```' → logprob: -8.504987716674805
    7. ' ' → logprob: -12.129987716674805
    8. '   ' → logprob: -12.504987716674805
    9. '               ' → logprob: -12.879987716674805
    10. '    ' → logprob: -13.504987716674805

Token 1064: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740830957889557
    2. ' =' → logprob: -0.9740830659866333
    3. '=x' → logprob: -12.724082946777344
    4. '   ' → logprob: -13.224082946777344
    5. '0' → logprob: -14.599082946777344
    6. '```' → logprob: -14.849082946777344
    7. 'x' → logprob: -15.099082946777344
    8. '=
' → logprob: -15.849082946777344
    9. ' ' → logprob: -17.474082946777344
    10. ')' → logprob: -17.599082946777344

Token 1065: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000432695698691532
    2. ' x' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.125432968139648
    4. '```' → logprob: -17.37543296813965
    5. '	x' → logprob: -18.37543296813965
    6. ' ' → logprob: -19.87543296813965
    7. '"x' → logprob: -19.87543296813965
    8. '(x' → logprob: -20.00043296813965
    9. '       ' → logprob: -20.12543296813965
    10. '           ' → logprob: -20.62543296813965

Token 1066: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013109555002301931
    2. 'x' → logprob: -7.1263108253479
    3. ' ' → logprob: -8.126311302185059
    4. '   ' → logprob: -9.001311302185059
    5. ' x' → logprob: -10.626311302185059
    6. '```' → logprob: -10.626311302185059
    7. '           ' → logprob: -11.376311302185059
    8. '`' → logprob: -11.626311302185059
    9. '    ' → logprob: -11.876311302185059
    10. '       ' → logprob: -12.626311302185059

Token 1067: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197911128401756
    2. '+' → logprob: -2.811979055404663
    3. '+x' → logprob: -12.311979293823242
    4. '```' → logprob: -12.561979293823242
    5. '+t' → logprob: -12.811979293823242
    6. '   ' → logprob: -16.186979293823242
    7. ' ' → logprob: -16.186979293823242
    8. ' plus' → logprob: -16.311979293823242
    9. '+k' → logprob: -16.686979293823242
    10. '-' → logprob: -17.061979293823242

Token 1068: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.031157969729975e-05
    2. ' k' → logprob: -9.375090599060059
    3. '   ' → logprob: -12.875090599060059
    4. '(k' → logprob: -13.125090599060059
    5. '```' → logprob: -15.250090599060059
    6. '           ' → logprob: -15.375090599060059
    7. '       ' → logprob: -15.875090599060059
    8. '    ' → logprob: -16.500089645385742
    9. ' ' → logprob: -17.250089645385742
    10. 'kx' → logprob: -17.375089645385742

Token 1069: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. 'k' → logprob: -12.250007629394531
    3. '*' → logprob: -13.625007629394531
    4. '```' → logprob: -14.750007629394531
    5. ' ' → logprob: -14.875007629394531
    6. '**' → logprob: -16.12500762939453
    7. '   ' → logprob: -16.37500762939453
    8. '_' → logprob: -16.50000762939453
    9. '*k' → logprob: -16.50000762939453
    10. ' *' → logprob: -16.68750762939453

Token 1070: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.019578875973820686
    2. ' *' → logprob: -4.51957893371582
    3. '*t' → logprob: -4.76957893371582
    4. '   ' → logprob: -11.76957893371582
    5. '```' → logprob: -13.14457893371582
    6. 't' → logprob: -14.76957893371582
    7. '**' → logprob: -15.76957893371582
    8. '*(' → logprob: -16.14457893371582
    9. '\t' → logprob: -16.14457893371582
    10. '*object' → logprob: -16.26957893371582

Token 1071: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.36574100604048e-06
    2. ' t' → logprob: -12.375004768371582
    3. '`t' → logprob: -17.000003814697266
    4. '*t' → logprob: -19.250003814697266
    5. '```' → logprob: -19.500003814697266
    6. '	t' → logprob: -19.500003814697266
    7. '[t' → logprob: -20.000003814697266
    8. '(t' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.625003814697266
    10. ')t' → logprob: -21.625003814697266

Token 1072: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25853002071380615
    2. '           ' → logprob: -1.6335300207138062
    3. '<|end|>' → logprob: -4.133530139923096
    4. '```' → logprob: -5.133530139923096
    5. '   ' → logprob: -5.383530139923096
    6. '
' → logprob: -6.258530139923096
    7. 'if' → logprob: -6.883530139923096
    8. ' if' → logprob: -7.008530139923096
    9. '        
' → logprob: -7.258530139923096
    10. ',y' → logprob: -8.133529663085938

Token 1073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02088787406682968
    2. '       ' → logprob: -4.645887851715088
    3. '```' → logprob: -5.145887851715088
    4. ' y' → logprob: -5.395887851715088
    5. 'y' → logprob: -8.145888328552246
    6. '   ' → logprob: -8.270888328552246
    7. '            ' → logprob: -10.895888328552246
    8. '          ' → logprob: -10.895888328552246
    9. '``' → logprob: -11.020888328552246
    10. '        ' → logprob: -11.145888328552246

Token 1074: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.07903090119361877
    2. ' y' → logprob: -2.579030990600586
    3. '           ' → logprob: -9.329030990600586
    4. '       ' → logprob: -10.329030990600586
    5. '   ' → logprob: -11.079030990600586
    6. '	y' → logprob: -12.704030990600586
    7. '```' → logprob: -14.079030990600586
    8. '    ' → logprob: -16.079030990600586
    9. '        ' → logprob: -16.829030990600586
    10. ',y' → logprob: -17.454030990600586

Token 1075: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04868195205926895
    2. '=' → logprob: -3.0486819744110107
    3. '```' → logprob: -9.67368221282959
    4. '0' → logprob: -11.29868221282959
    5. '   ' → logprob: -11.54868221282959
    6. ' y' → logprob: -12.42368221282959
    7. ' ' → logprob: -12.67368221282959
    8. '``' → logprob: -14.67368221282959
    9. 'y' → logprob: -14.79868221282959
    10. '=y' → logprob: -14.92368221282959

Token 1076: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019294669618830085
    2. ' y' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.12692928314209
    4. '	y' → logprob: -17.001930236816406
    5. '```' → logprob: -17.251930236816406
    6. '(y' → logprob: -17.501930236816406
    7. ' ' → logprob: -19.126930236816406
    8. '       ' → logprob: -19.501930236816406
    9. '`' → logprob: -19.751930236816406
    10. '0' → logprob: -19.876930236816406

Token 1077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006334475474432111
    2. 'y' → logprob: -8.750633239746094
    3. ' y' → logprob: -8.750633239746094
    4. '-' → logprob: -8.875633239746094
    5. ' ' → logprob: -9.000633239746094
    6. ' -' → logprob: -10.375633239746094
    7. '```' → logprob: -11.750633239746094
    8. '   ' → logprob: -11.875633239746094
    9. '-y' → logprob: -13.000633239746094
    10. '_' → logprob: -13.750633239746094

Token 1078: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.474109411239624
    2. '-' → logprob: -0.974109411239624
    3. '```' → logprob: -10.474109649658203
    4. '   ' → logprob: -12.724109649658203
    5. ' ' → logprob: -15.224109649658203
    6. '+' → logprob: -15.849109649658203
    7. '
' → logprob: -16.224109649658203
    8. ' ' → logprob: -16.224109649658203
    9. '-y' → logprob: -16.724109649658203
    10. '       ' → logprob: -16.724109649658203

Token 1079: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012356207298580557
    2. ' k' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.125123977661133
    4. '       ' → logprob: -19.375123977661133
    5. '	k' → logprob: -19.375123977661133
    6. '           ' → logprob: -19.750123977661133
    7. '    ' → logprob: -20.125123977661133
    8. ' ' → logprob: -20.250123977661133
    9. '  ' → logprob: -21.625123977661133
    10. '        ' → logprob: -21.625123977661133

Token 1080: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.659005157416686e-05
    2. 'k' → logprob: -9.625066757202148
    3. 't' → logprob: -15.750066757202148
    4. ' k' → logprob: -16.37506675720215
    5. ' ' → logprob: -16.50006675720215
    6. '```' → logprob: -16.87506675720215
    7. '_' → logprob: -17.75006675720215
    8. '₂' → logprob: -18.00006675720215
    9. '_k' → logprob: -18.87506675720215
    10. 'y' → logprob: -19.12506675720215

Token 1081: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.022162284702062607
    2. '*t' → logprob: -4.022162437438965
    3. '*' → logprob: -5.522162437438965
    4. '```' → logprob: -12.522162437438965
    5. 't' → logprob: -13.147162437438965
    6. ' t' → logprob: -14.147162437438965
    7. '   ' → logprob: -14.772162437438965
    8. ' ' → logprob: -15.647162437438965
    9. '`t' → logprob: -16.52216148376465
    10. ' ' → logprob: -17.27216148376465

Token 1082: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000431861262768507
    2. ' t' → logprob: -7.750432014465332
    3. '`t' → logprob: -13.750432014465332
    4. '	t' → logprob: -17.750431060791016
    5. '   ' → logprob: -17.875431060791016
    6. '*t' → logprob: -18.250431060791016
    7. '```' → logprob: -19.375431060791016
    8. ')t' → logprob: -19.625431060791016
    9. ''t' → logprob: -19.875431060791016
    10. '[t' → logprob: -20.500431060791016

Token 1083: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14412422478199005
    2. '           ' → logprob: -2.1441242694854736
    3. '```' → logprob: -4.6441240310668945
    4. ' if' → logprob: -5.1441240310668945
    5. '               ' → logprob: -7.3941240310668945
    6. '<|end|>' → logprob: -7.5191240310668945
    7. '   ' → logprob: -8.269124031066895
    8. '``' → logprob: -9.644124031066895
    9. 'if' → logprob: -10.769124031066895
    10. ',' → logprob: -11.019124031066895

Token 1084: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015162922209128737
    2. '```' → logprob: -6.751516342163086
    3. '           ' → logprob: -8.251516342163086
    4. '   ' → logprob: -10.001516342163086
    5. ' if' → logprob: -10.501516342163086
    6. '               ' → logprob: -12.376516342163086
    7. '<|end|>' → logprob: -12.501516342163086
    8. '``' → logprob: -13.251516342163086
    9. 'if' → logprob: -14.501516342163086
    10. ' ' → logprob: -14.751516342163086

Token 1085: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20331013202667236
    2. ' if' → logprob: -1.9533101320266724
    3. 'if' (adapté à ' if') → logprob: -3.453310012817383
    4. '           ' → logprob: -4.578310012817383
    5. '   ' → logprob: -8.453310012817383
    6. '```' → logprob: -11.078310012817383
    7. '               ' → logprob: -11.578310012817383
    8. ' ' → logprob: -11.703310012817383
    9. '	if' → logprob: -12.078310012817383
    10. ' ' → logprob: -12.703310012817383

Token 1086: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931542754173279
    2. ' x' → logprob: -0.6931542754173279
    3. '   ' → logprob: -12.443154335021973
    4. '(x' → logprob: -13.943154335021973
    5. ' y' → logprob: -14.193154335021973
    6. '    ' → logprob: -14.818154335021973
    7. 'y' → logprob: -15.068154335021973
    8. '0' → logprob: -15.318154335021973
    9. ' ' → logprob: -15.443154335021973
    10. '```' → logprob: -15.568154335021973

Token 1087: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05590176209807396
    2. '<' → logprob: -2.9309017658233643
    3. ' >=' → logprob: -6.930901527404785
    4. '>=' → logprob: -10.805901527404785
    5. '   ' → logprob: -11.180901527404785
    6. '```' → logprob: -12.430901527404785
    7. ' ' → logprob: -14.180901527404785
    8. '       ' → logprob: -14.430901527404785
    9. '           ' → logprob: -14.805901527404785
    10. ')' → logprob: -15.055901527404785

Token 1088: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005300374468788505
    2. '=' → logprob: -8.125530242919922
    3. ' ' → logprob: -8.375530242919922
    4. '   ' → logprob: -12.625530242919922
    5. '```' → logprob: -16.000530242919922
    6. '  ' → logprob: -17.625530242919922
    7. '<|end|>' → logprob: -18.375530242919922
    8. '[' → logprob: -18.375530242919922
    9. ' =' → logprob: -18.625530242919922
    10. ' ' → logprob: -18.625530242919922

Token 1089: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -10.875020980834961
    3. '=' → logprob: -13.375020980834961
    4. '   ' → logprob: -14.250020980834961
    5. '```' → logprob: -17.62502098083496
    6. '       ' → logprob: -18.50002098083496
    7. '  ' → logprob: -19.50002098083496
    8. '۰' → logprob: -20.12502098083496
    9. '<|end|>' → logprob: -20.50002098083496
    10. '     ' → logprob: -20.62502098083496

Token 1090: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.024925461038947105
    2. 'or' → logprob: -3.774925470352173
    3. '           ' → logprob: -6.399925231933594
    4. '               ' → logprob: -11.274925231933594
    5. '```' → logprob: -13.649925231933594
    6. '	or' → logprob: -14.399925231933594
    7. '       ' → logprob: -14.774925231933594
    8. '            ' → logprob: -15.149925231933594
    9. 'continue' → logprob: -15.149925231933594
    10. '          ' → logprob: -15.399925231933594

Token 1091: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132690191268921
    2. 'y' → logprob: -1.313269019126892
    3. '```' → logprob: -12.313268661499023
    4. '           ' → logprob: -13.063268661499023
    5. '   ' → logprob: -15.688268661499023
    6. '	y' → logprob: -15.813268661499023
    7. '``' → logprob: -16.063268661499023
    8. '       ' → logprob: -16.563268661499023
    9. ' ' → logprob: -17.438268661499023
    10. '               ' → logprob: -17.438268661499023

Token 1092: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0077408975921571255
    2. ' >' → logprob: -5.5077409744262695
    3. '<' → logprob: -6.2577409744262695
    4. ' >=' → logprob: -6.7577409744262695
    5. '>' → logprob: -7.5077409744262695
    6. '   ' → logprob: -11.00774097442627
    7. '>=' → logprob: -12.00774097442627
    8. ' ' → logprob: -12.88274097442627
    9. '```' → logprob: -12.88274097442627
    10. ' ' → logprob: -15.00774097442627

Token 1093: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014193473383784294
    2. ' ' → logprob: -4.264193534851074
    3. '=' → logprob: -10.514193534851074
    4. '   ' → logprob: -13.264193534851074
    5. '```' → logprob: -14.389193534851074
    6. '>' → logprob: -15.014193534851074
    7. '  ' → logprob: -16.764192581176758
    8. ' =' → logprob: -17.139192581176758
    9. '1' → logprob: -18.014192581176758
    10. '[' → logprob: -18.264192581176758

Token 1094: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002981624274980277
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.750298500061035
    4. '=' → logprob: -14.000298500061035
    5. '```' → logprob: -16.25029754638672
    6. '>' → logprob: -16.62529754638672
    7. '  ' → logprob: -17.37529754638672
    8. '       ' → logprob: -17.62529754638672
    9. '    ' → logprob: -18.25029754638672
    10. '[' → logprob: -18.87529754638672

Token 1095: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03435605764389038
    2. '           ' → logprob: -3.909356117248535
    3. ':
' → logprob: -5.284356117248535
    4. ':' → logprob: -5.409356117248535
    5. 'continue' → logprob: -6.159356117248535
    6. ' continue' → logprob: -6.409356117248535
    7. '       ' → logprob: -7.909356117248535
    8. '```' → logprob: -11.409356117248535
    9. ' continues' → logprob: -11.659356117248535
    10. '	continue' → logprob: -11.909356117248535

Token 1096: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10475454479455948
    2. '               ' → logprob: -2.3547544479370117
    3. ' continue' → logprob: -6.104754447937012
    4. 'continue' → logprob: -6.104754447937012
    5. '       ' → logprob: -9.854754447937012
    6. '   ' → logprob: -12.354754447937012
    7. '```' → logprob: -12.354754447937012
    8. '                   ' → logprob: -12.979754447937012
    9. 'Continue' → logprob: -13.479754447937012
    10. '_continue' → logprob: -13.479754447937012

Token 1097: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8051943778991699
    2. 'continue' (adapté à ' continue') → logprob: -0.8051943778991699
    3. '           ' → logprob: -2.30519437789917
    4. ' continue' → logprob: -5.18019437789917
    5. '```' → logprob: -8.180194854736328
    6. '	continue' → logprob: -8.805194854736328
    7. '   ' → logprob: -9.055194854736328
    8. '               ' → logprob: -9.555194854736328
    9. '		' → logprob: -12.305194854736328
    10. '_continue' → logprob: -12.680194854736328

Token 1098: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031033538281917572
    2. '       ' → logprob: -3.531033515930176
    3. '               ' → logprob: -7.531033515930176
    4. '   ' → logprob: -7.906033515930176
    5. '```' → logprob: -8.531033515930176
    6. '
' → logprob: -8.781033515930176
    7. '<|end|>' → logprob: -12.031033515930176
    8. '            
' → logprob: -12.406033515930176
    9. '          ' → logprob: -12.781033515930176
    10. '            ' → logprob: -13.031033515930176

Token 1099: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008345892652869225
    2. '       ' → logprob: -5.008346080780029
    3. '```' → logprob: -6.508346080780029
    4. '               ' → logprob: -9.133345603942871
    5. '   ' → logprob: -10.883345603942871
    6. '          ' → logprob: -12.133345603942871
    7. '``' → logprob: -13.633345603942871
    8. '
' → logprob: -13.758345603942871
    9. ' ' → logprob: -14.383345603942871
    10. '`' → logprob: -14.508345603942871

Token 1100: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0957651138305664
    2. '       ' → logprob: -2.5957651138305664
    3. '           ' → logprob: -4.345765113830566
    4. '```' → logprob: -6.470765113830566
    5. '   ' → logprob: -7.095765113830566
    6. 'for' → logprob: -7.595765113830566
    7. ' total' → logprob: -7.595765113830566
    8. 'if' → logprob: -7.970765113830566
    9. 'mass' → logprob: -10.970765113830566
    10. '``' → logprob: -11.720765113830566

Token 1101: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02641373686492443
    2. '=' → logprob: -3.901413679122925
    3. ' =' → logprob: -5.651413917541504
    4. ' ,' → logprob: -6.276413917541504
    5. ')' → logprob: -8.276413917541504
    6. '```' → logprob: -9.651413917541504
    7. '   ' → logprob: -10.151413917541504
    8. '<|end|>' → logprob: -10.401413917541504
    9. '),' → logprob: -11.526413917541504
    10. '           ' → logprob: -11.526413917541504

Token 1102: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.006715774536133
    4. '(x' → logprob: -17.256715774536133
    5. '	x' → logprob: -19.006715774536133
    6. '```' → logprob: -19.881715774536133
    7. ' ' → logprob: -21.131715774536133
    8. '{x' → logprob: -21.256715774536133
    9. '$x' → logprob: -21.506715774536133
    10. '"x' → logprob: -21.631715774536133

Token 1103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03369491919875145
    2. '+' → logprob: -3.4086949825286865
    3. '```' → logprob: -10.158695220947266
    4. ')' → logprob: -12.533695220947266
    5. '   ' → logprob: -13.158695220947266
    6. ' ' → logprob: -13.783695220947266
    7. ',' → logprob: -13.908695220947266
    8. ' +
' → logprob: -14.283695220947266
    9. '0' → logprob: -14.408695220947266
    10. '    ' → logprob: -15.033695220947266

Token 1104: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '0' → logprob: -17.375261306762695
    4. '	y' → logprob: -17.625261306762695
    5. '   ' → logprob: -18.875261306762695
    6. '```' → logprob: -19.250261306762695
    7. '(y' → logprob: -19.625261306762695
    8. '_y' → logprob: -19.625261306762695
    9. ' ' → logprob: -20.000261306762695
    10. 'y's' → logprob: -20.250261306762695

Token 1105: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010929559357464314
    2. '           ' → logprob: -5.135929584503174
    3. '       ' → logprob: -5.635929584503174
    4. '```' → logprob: -7.010929584503174
    5. ',
' → logprob: -8.010929107666016
    6. 'if' → logprob: -9.635929107666016
    7. ' ,' → logprob: -10.010929107666016
    8. ' if' → logprob: -10.510929107666016
    9. '   ' → logprob: -10.760929107666016
    10. '<|end|>' → logprob: -11.385929107666016

Token 1106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03514912724494934
    2. '```' → logprob: -3.910149097442627
    3. '       ' → logprob: -4.410149097442627
    4. ',' → logprob: -7.285149097442627
    5. ' if' → logprob: -7.285149097442627
    6. '   ' → logprob: -7.285149097442627
    7. '               ' → logprob: -8.660149574279785
    8. '          ' → logprob: -10.035149574279785
    9. '``' → logprob: -10.660149574279785
    10. '            ' → logprob: -11.660149574279785

Token 1107: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' (adapté à ' mass') → logprob: -0.07265627384185791
    2. '           ' → logprob: -3.3226561546325684
    3. ' mass' → logprob: -3.5726561546325684
    4. 'if' → logprob: -5.447656154632568
    5. '       ' → logprob: -6.572656154632568
    6. ' if' → logprob: -9.072656631469727
    7. '```' → logprob: -9.072656631469727
    8. '   ' → logprob: -12.822656631469727
    9. '_mass' → logprob: -13.322656631469727
    10. '          ' → logprob: -14.072656631469727

Token 1108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010055788792669773
    2. '=' → logprob: -4.635056018829346
    3. ',' → logprob: -8.510055541992188
    4. '```' → logprob: -10.385055541992188
    5. '   ' → logprob: -10.885055541992188
    6. ' <' → logprob: -11.135055541992188
    7. '           ' → logprob: -11.635055541992188
    8. ' ==' → logprob: -11.885055541992188
    9. ')' → logprob: -12.010055541992188
    10. '       ' → logprob: -12.510055541992188

Token 1109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004080062732100487
    2. ' a' → logprob: -5.504080295562744
    3. '(a' → logprob: -13.504079818725586
    4. '	a' → logprob: -16.379079818725586
    5. '   ' → logprob: -16.754079818725586
    6. '```' → logprob: -18.004079818725586
    7. '_a' → logprob: -18.879079818725586
    8. '[a' → logprob: -19.129079818725586
    9. ' ' → logprob: -19.629079818725586
    10. ''a' → logprob: -19.754079818725586

Token 1110: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868778944015503
    2. ' *' → logprob: -1.1368778944015503
    3. '*x' → logprob: -12.13687801361084
    4. '*y' → logprob: -14.51187801361084
    5. '```' → logprob: -14.76187801361084
    6. ' ' → logprob: -16.011877059936523
    7. '**' → logprob: -16.136877059936523
    8. '`' → logprob: -16.636877059936523
    9. 'x' → logprob: -16.761877059936523
    10. ' ' → logprob: -16.761877059936523

Token 1111: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005234121344983578
    2. ' x' → logprob: -5.255234241485596
    3. ' ' → logprob: -16.880233764648438
    4. '(x' → logprob: -17.130233764648438
    5. '```' → logprob: -17.380233764648438
    6. '
' → logprob: -17.755233764648438
    7. ')x' → logprob: -18.255233764648438
    8. '[' → logprob: -18.255233764648438
    9. '	x' → logprob: -18.630233764648438
    10. '`' → logprob: -18.755233764648438

Token 1112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.005932828411459923
    2. '+' → logprob: -5.130932807922363
    3. '```' → logprob: -12.880932807922363
    4. '+b' → logprob: -13.755932807922363
    5. '   ' → logprob: -15.880932807922363
    6. '
' → logprob: -15.880932807922363
    7. '           ' → logprob: -16.25593376159668
    8. ',' → logprob: -16.75593376159668
    9. '       ' → logprob: -17.00593376159668
    10. ' ' → logprob: -17.25593376159668

Token 1113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245595395565033
    2. ' b' → logprob: -3.7732455730438232
    3. '```' → logprob: -17.398244857788086
    4. ' ' → logprob: -18.023244857788086
    5. '+b' → logprob: -18.898244857788086
    6. '(b' → logprob: -19.023244857788086
    7. ')b' → logprob: -19.023244857788086
    8. '+' → logprob: -19.398244857788086
    9. '	b' → logprob: -19.523244857788086
    10. '[b' → logprob: -20.273244857788086

Token 1114: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.27084261178970337
    2. ' y' → logprob: -1.8958425521850586
    3. '*' → logprob: -2.8958425521850586
    4. ' *' → logprob: -4.145842552185059
    5. '*y' → logprob: -4.145842552185059
    6. '```' → logprob: -9.145842552185059
    7. ' ' → logprob: -10.895842552185059
    8. ' ' → logprob: -11.520842552185059
    9. '   ' → logprob: -12.020842552185059
    10. '`' → logprob: -12.520842552185059

Token 1115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007115975022315979
    2. ' y' → logprob: -7.250711441040039
    3. 'b' → logprob: -14.500711441040039
    4. '   ' → logprob: -15.000711441040039
    5. '```' → logprob: -15.000711441040039
    6. '	y' → logprob: -16.62571144104004
    7. '*y' → logprob: -16.62571144104004
    8. '(y' → logprob: -16.87571144104004
    9. '`' → logprob: -16.87571144104004
    10. ' ' → logprob: -17.00071144104004

Token 1116: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41464143991470337
    2. '       ' → logprob: -1.2896413803100586
    3. ' if' → logprob: -3.0396413803100586
    4. '   ' → logprob: -4.414641380310059
    5. 'if' → logprob: -5.664641380310059
    6. '```' → logprob: -8.164641380310059
    7. '               ' → logprob: -8.789641380310059
    8. '<|end|>' → logprob: -9.289641380310059
    9. '          ' → logprob: -10.414641380310059
    10. ',' → logprob: -10.789641380310059

Token 1117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17010807991027832
    2. '       ' → logprob: -1.9201080799102783
    3. '```' → logprob: -4.795107841491699
    4. '   ' → logprob: -7.295107841491699
    5. '               ' → logprob: -7.545107841491699
    6. ' if' → logprob: -8.2951078414917
    7. '          ' → logprob: -10.2951078414917
    8. '``' → logprob: -11.1701078414917
    9. 'if' → logprob: -11.2951078414917
    10. '                   ' → logprob: -11.9201078414917

Token 1118: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7261372208595276
    2. '           ' → logprob: -0.9761372208595276
    3. ' if' → logprob: -1.9761371612548828
    4. '```' → logprob: -7.351137161254883
    5. '               ' → logprob: -8.726137161254883
    6. '       ' → logprob: -10.101137161254883
    7. '``' → logprob: -11.851137161254883
    8. '   ' → logprob: -12.601137161254883
    9. '                   ' → logprob: -14.351137161254883
    10. '          ' → logprob: -14.601137161254883

Token 1119: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.006723183207213879
    2. ' best' → logprob: -5.006723403930664
    3. '(best' → logprob: -11.756723403930664
    4. '	best' → logprob: -17.256723403930664
    5. '           ' → logprob: -17.881723403930664
    6. '   ' → logprob: -19.006723403930664
    7. '_best' → logprob: -20.006723403930664
    8. 'Best' → logprob: -20.131723403930664
    9. '
' → logprob: -20.131723403930664
    10. '-best' → logprob: -21.131723403930664

Token 1120: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.42875680327415466
    2. 'is' → logprob: -1.053756833076477
    3. '[' → logprob: -10.553756713867188
    4. '==' → logprob: -11.178756713867188
    5. '           ' → logprob: -12.553756713867188
    6. '=None' → logprob: -12.928756713867188
    7. ')' → logprob: -13.303756713867188
    8. '            ' → logprob: -13.553756713867188
    9. '=' → logprob: -13.803756713867188
    10. 'Is' → logprob: -13.928756713867188

Token 1121: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.392824874026701e-05
    2. ' None' → logprob: -10.37503433227539
    3. '   ' → logprob: -13.50003433227539
    4. '(None' → logprob: -14.37503433227539
    5. 'best' → logprob: -15.00003433227539
    6. '           ' → logprob: -15.37503433227539
    7. '  ' → logprob: -17.50003433227539
    8. '       ' → logprob: -17.87503433227539
    9. '=None' → logprob: -18.00003433227539
    10. '
' → logprob: -18.50003433227539

Token 1122: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018669569864869118
    2. 'or' → logprob: -4.018669605255127
    3. '           ' → logprob: -8.143669128417969
    4. '               ' → logprob: -9.018669128417969
    5. '```' → logprob: -9.768669128417969
    6. '<|end|>' → logprob: -11.268669128417969
    7. '          ' → logprob: -11.768669128417969
    8. '	or' → logprob: -11.893669128417969
    9. '[' → logprob: -12.393669128417969
    10. ')' → logprob: -12.518669128417969

Token 1123: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04912615939974785
    2. ' total' → logprob: -3.049126148223877
    3. '(total' → logprob: -7.549126148223877
    4. '   ' → logprob: -11.674126625061035
    5. ' (' → logprob: -13.674126625061035
    6. '           ' → logprob: -13.799126625061035
    7. ' ' → logprob: -14.299126625061035
    8. '               ' → logprob: -15.549126625061035
    9. '	total' → logprob: -15.799126625061035
    10. '  ' → logprob: -16.42412567138672

Token 1124: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16172140836715698
    2. '<' → logprob: -1.9117214679718018
    3. '[' → logprob: -7.536721229553223
    4. '```' → logprob: -7.536721229553223
    5. '           ' → logprob: -8.911721229553223
    6. '<int' → logprob: -9.286721229553223
    7. '          ' → logprob: -10.411721229553223
    8. ' >' → logprob: -10.536721229553223
    9. '   ' → logprob: -10.661721229553223
    10. '<size' → logprob: -11.036721229553223

Token 1125: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0004307884373702109
    2. ' best' → logprob: -7.750430583953857
    3. '(best' → logprob: -16.500431060791016
    4. '	best' → logprob: -18.875431060791016
    5. '_best' → logprob: -20.625431060791016
    6. '.best' → logprob: -21.750431060791016
    7. 'Best' → logprob: -22.250431060791016
    8. 'total' → logprob: -23.750431060791016
    9. '-best' → logprob: -23.875431060791016
    10. '```' → logprob: -23.875431060791016

Token 1126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022940391500014812
    2. '```' → logprob: -9.000229835510254
    3. ' [' → logprob: -9.375229835510254
    4. '   ' → logprob: -12.000229835510254
    5. '][' → logprob: -12.750229835510254
    6. '+' → logprob: -12.875229835510254
    7. ',' → logprob: -13.625229835510254
    8. '0' → logprob: -13.625229835510254
    9. ' +' → logprob: -13.625229835510254
    10. ')' → logprob: -13.875229835510254

Token 1127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.75000286102295
    3. '[' → logprob: -14.12500286102295
    4. '   ' → logprob: -14.75000286102295
    5. '1' → logprob: -15.25000286102295
    6. '
' → logprob: -15.62500286102295
    7. '```' → logprob: -15.62500286102295
    8. 'best' → logprob: -16.375003814697266
    9. '       ' → logprob: -16.875003814697266
    10. '``' → logprob: -16.875003814697266

Token 1128: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04670035466551781
    2. 'or' → logprob: -3.1717002391815186
    3. '           ' → logprob: -5.671700477600098
    4. '       ' → logprob: -9.171700477600098
    5. ')' → logprob: -9.546700477600098
    6. '          ' → logprob: -10.546700477600098
    7. '               ' → logprob: -10.671700477600098
    8. '```' → logprob: -11.796700477600098
    9. ']' → logprob: -12.421700477600098
    10. '[' → logprob: -13.296700477600098

Token 1129: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.006860293447971344
    2. 'or' → logprob: -5.256860256195068
    3. '           ' → logprob: -6.506860256195068
    4. '               ' → logprob: -9.756860733032227
    5. '```' → logprob: -10.006860733032227
    6. '          ' → logprob: -11.131860733032227
    7. '       ' → logprob: -12.256860733032227
    8. '            ' → logprob: -13.256860733032227
    9. '              ' → logprob: -13.256860733032227
    10. ')' → logprob: -13.756860733032227

Token 1130: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.06283733248710632
    2. ' (' → logprob: -2.8128373622894287
    3. '(' → logprob: -7.06283712387085
    4. 'total' → logprob: -11.687837600708008
    5. ' total' → logprob: -12.687837600708008
    6. '           ' → logprob: -13.937837600708008
    7. '(t' → logprob: -15.562837600708008
    8. '          ' → logprob: -15.812837600708008
    9. '```' → logprob: -16.812837600708008
    10. '            ' → logprob: -17.062837600708008

Token 1131: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0022111583966761827
    2. '(total' → logprob: -6.502211093902588
    3. ' total' → logprob: -7.252211093902588
    4. ' (' → logprob: -16.75221061706543
    5. 'best' → logprob: -17.87721061706543
    6. '           ' → logprob: -19.25221061706543
    7. '(' → logprob: -19.37721061706543
    8. '	total' → logprob: -19.50221061706543
    9. '$total' → logprob: -19.50221061706543
    10. ',total' → logprob: -19.87721061706543

Token 1132: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07890190184116364
    2. '==' → logprob: -2.578902006149292
    3. '[' → logprob: -11.828902244567871
    4. '```' → logprob: -12.578902244567871
    5. '==
' → logprob: -14.828902244567871
    6. ']==' → logprob: -15.453902244567871
    7. '=' → logprob: -15.453902244567871
    8. ' ==
' → logprob: -15.578902244567871
    9. ')==' → logprob: -16.203901290893555
    10. '``' → logprob: -16.328901290893555

Token 1133: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0024756586644798517
    2. ' best' → logprob: -6.002475738525391
    3. '(best' → logprob: -18.75247573852539
    4. '	best' → logprob: -18.75247573852539
    5. 'Best' → logprob: -21.37747573852539
    6. '.best' → logprob: -21.37747573852539
    7. '-best' → logprob: -21.87747573852539
    8. '_best' → logprob: -21.87747573852539
    9. 'b' → logprob: -22.25247573852539
    10. '
' → logprob: -22.25247573852539

Token 1134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -12.500004768371582
    3. '``' → logprob: -15.250004768371582
    4. ' [' → logprob: -15.625004768371582
    5. '==' → logprob: -15.875004768371582
    6. '0' → logprob: -15.875004768371582
    7. '][' → logprob: -16.375003814697266
    8. '<|end|>' → logprob: -16.625003814697266
    9. ' ==' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.500003814697266

Token 1135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8590300139039755e-05
    2. '[' → logprob: -10.500048637390137
    3. '1' → logprob: -11.125048637390137
    4. '   ' → logprob: -12.500048637390137
    5. ' ' → logprob: -13.625048637390137
    6. '
' → logprob: -15.000048637390137
    7. '```' → logprob: -15.125048637390137
    8. '2' → logprob: -15.500048637390137
    9. '<|end|>' → logprob: -16.50004768371582
    10. '  ' → logprob: -16.50004768371582

Token 1136: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029760906472802162
    2. 'and' → logprob: -3.5297608375549316
    3. '[' → logprob: -12.15476131439209
    4. '           ' → logprob: -12.65476131439209
    5. '```' → logprob: -14.27976131439209
    6. ']' → logprob: -15.27976131439209
    7. ')' → logprob: -15.27976131439209
    8. '          ' → logprob: -15.27976131439209
    9. '       ' → logprob: -15.90476131439209
    10. '        ' → logprob: -16.529760360717773

Token 1137: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04861881211400032
    2. 'and' → logprob: -3.048618793487549
    3. '```' → logprob: -10.673619270324707
    4. '           ' → logprob: -12.423619270324707
    5. '               ' → logprob: -13.548619270324707
    6. '            ' → logprob: -14.048619270324707
    7. ')' → logprob: -14.548619270324707
    8. '          ' → logprob: -15.173619270324707
    9. '[' → logprob: -15.173619270324707
    10. '``' → logprob: -15.298619270324707

Token 1138: ' mass' (ID: 4842)
  Prédit: ' mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.4740770161151886
    2. 'mass' → logprob: -0.9740769863128662
    3. '_mass' → logprob: -20.349077224731445
    4. '(m' → logprob: -20.974077224731445
    5. '.mass' → logprob: -21.224077224731445
    6. 'm' → logprob: -21.599077224731445
    7. 'Mass' → logprob: -21.974077224731445
    8. '```' → logprob: -22.224077224731445
    9. '
' → logprob: -22.724077224731445
    10. ' ' → logprob: -22.724077224731445

Token 1139: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008757212199270725
    2. '<' → logprob: -4.7587571144104
    3. ' >' → logprob: -9.258757591247559
    4. '<|end|>' → logprob: -11.258757591247559
    5. '[' → logprob: -11.383757591247559
    6. '```' → logprob: -12.133757591247559
    7. '>' → logprob: -12.508757591247559
    8. ')' → logprob: -12.758757591247559
    9. '<int' → logprob: -12.883757591247559
    10. '<size' → logprob: -13.133757591247559

Token 1140: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00033546582562848926
    2. ' best' → logprob: -8.000335693359375
    3. '(best' → logprob: -18.000335693359375
    4. '	best' → logprob: -19.875335693359375
    5. '.best' → logprob: -21.250335693359375
    6. '-best' → logprob: -22.000335693359375
    7. '_best' → logprob: -23.000335693359375
    8. 'Best' → logprob: -23.125335693359375
    9. '
' → logprob: -24.000335693359375
    10. '```' → logprob: -24.625335693359375

Token 1141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.375001907348633
    3. '0' → logprob: -17.500001907348633
    4. '1' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '``' → logprob: -18.625001907348633
    7. '(' → logprob: -18.875001907348633
    8. ' [' → logprob: -18.875001907348633
    9. '][' → logprob: -19.000001907348633
    10. '[
' → logprob: -19.125001907348633

Token 1142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037192381569184363
    2. '2' → logprob: -8.000371932983398
    3. '[' → logprob: -10.875371932983398
    4. 'best' → logprob: -11.250371932983398
    5. '0' → logprob: -12.750371932983398
    6. '-' → logprob: -14.375371932983398
    7. ' ' → logprob: -14.875371932983398
    8. '   ' → logprob: -15.250371932983398
    9. ' best' → logprob: -15.750371932983398
    10. '
' → logprob: -16.1253719329834

Token 1143: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2773703634738922
    2. '           ' → logprob: -1.6523703336715698
    3. '               ' → logprob: -4.152370452880859
    4. ')' → logprob: -4.777370452880859
    5. '       ' → logprob: -4.777370452880859
    6. ']):
' → logprob: -4.902370452880859
    7. '):' → logprob: -5.027370452880859
    8. '          ' → logprob: -6.527370452880859
    9. ':' → logprob: -7.402370452880859
    10. '```' → logprob: -7.777370452880859

Token 1144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20934849977493286
    2. '           ' → logprob: -1.709348440170288
    3. '```' → logprob: -5.084348678588867
    4. '       ' → logprob: -8.084348678588867
    5. '                   ' → logprob: -8.209348678588867
    6. '[' → logprob: -8.334348678588867
    7. '                               ' → logprob: -8.584348678588867
    8. '                       ' → logprob: -8.709348678588867
    9. '                                       ' → logprob: -9.209348678588867
    10. '                                   ' → logprob: -9.459348678588867

Token 1145: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0052350712940096855
    2. ' best' → logprob: -5.255235195159912
    3. '(best' → logprob: -13.755234718322754
    4. '           ' → logprob: -16.75523567199707
    5. '               ' → logprob: -17.88023567199707
    6. '	best' → logprob: -18.50523567199707
    7. '```' → logprob: -18.75523567199707
    8. '_best' → logprob: -19.00523567199707
    9. 'Best' → logprob: -19.50523567199707
    10. '(' → logprob: -20.50523567199707

Token 1146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009773324243724346
    2. ' =' → logprob: -4.634773254394531
    3. '[' → logprob: -11.759773254394531
    4. ')' → logprob: -12.384773254394531
    5. '```' → logprob: -12.759773254394531
    6. '=
' → logprob: -14.134773254394531
    7. ')=' → logprob: -14.759773254394531
    8. '<|end|>' → logprob: -15.509773254394531
    9. '   ' → logprob: -15.634773254394531
    10. ' is' → logprob: -15.759773254394531

Token 1147: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.01846385933458805
    2. ' (' → logprob: -4.018464088439941
    3. '(best' → logprob: -8.768464088439941
    4. '(' → logprob: -8.768464088439941
    5. '   ' → logprob: -13.393464088439941
    6. 'total' → logprob: -14.143464088439941
    7. '(t' → logprob: -14.643464088439941
    8. ' total' → logprob: -16.893463134765625
    9. '(target' → logprob: -17.518463134765625
    10. '  ' → logprob: -18.268463134765625

Token 1148: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0001025895617203787
    2. '0' → logprob: -9.250102996826172
    3. ' total' → logprob: -12.125102996826172
    4. '(total' → logprob: -13.875102996826172
    5. '   ' → logprob: -17.000102996826172
    6. 't' → logprob: -18.125102996826172
    7. '                   ' → logprob: -18.625102996826172
    8. '1' → logprob: -18.625102996826172
    9. ' ' → logprob: -18.750102996826172
    10. '$total' → logprob: -18.750102996826172

Token 1149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.968934758333489e-05
    2. ' ,' → logprob: -9.750069618225098
    3. '           ' → logprob: -13.250069618225098
    4. ',
' → logprob: -13.250069618225098
    5. '[' → logprob: -13.875069618225098
    6. ',user' → logprob: -13.875069618225098
    7. ',None' → logprob: -14.250069618225098
    8. '   ' → logprob: -14.375069618225098
    9. '       ' → logprob: -14.500069618225098
    10. '               ' → logprob: -14.750069618225098

Token 1150: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.006715370807796717
    2. ' mass' → logprob: -5.006715297698975
    3. 'mas' → logprob: -19.006715774536133
    4. '_mass' → logprob: -19.131715774536133
    5. 'Mass' → logprob: -20.631715774536133
    6. 'mask' → logprob: -20.881715774536133
    7. 'm' → logprob: -21.006715774536133
    8. 'best' → logprob: -21.131715774536133
    9. '.mass' → logprob: -21.381715774536133
    10. '0' → logprob: -21.506715774536133

Token 1151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005166939808987081
    2. ',x' → logprob: -7.625516891479492
    3. ' ,' → logprob: -11.375516891479492
    4. '               ' → logprob: -12.125516891479492
    5. '`,' → logprob: -12.750516891479492
    6. '           ' → logprob: -13.000516891479492
    7. ',t' → logprob: -13.500516891479492
    8. '                   ' → logprob: -13.875516891479492
    9. ',user' → logprob: -14.125516891479492
    10. ',
' → logprob: -14.375516891479492

Token 1152: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -19.250261306762695
    4. ')x' → logprob: -20.250261306762695
    5. '```' → logprob: -20.250261306762695
    6. '   ' → logprob: -20.750261306762695
    7. '0' → logprob: -21.000261306762695
    8. '       ' → logprob: -22.375261306762695
    9. '_x' → logprob: -22.500261306762695
    10. ' ' → logprob: -22.625261306762695

Token 1153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. ' ,' → logprob: -10.875043869018555
    3. ',y' → logprob: -10.875043869018555
    4. '`,' → logprob: -12.875043869018555
    5. ',x' → logprob: -14.500043869018555
    6. '```' → logprob: -14.500043869018555
    7. ',t' → logprob: -15.000043869018555
    8. ',user' → logprob: -15.125043869018555
    9. '<|end|>' → logprob: -15.250043869018555
    10. '       ' → logprob: -15.375043869018555

Token 1154: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.00020408630371
    4. '       ' → logprob: -19.75020408630371
    5. '```' → logprob: -20.12520408630371
    6. '           ' → logprob: -20.37520408630371
    7. '	y' → logprob: -20.75020408630371
    8. '
' → logprob: -20.87520408630371
    9. ',y' → logprob: -20.87520408630371
    10. ')y' → logprob: -21.50020408630371

Token 1155: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.933173426659778e-05
    2. ')
' → logprob: -9.750069618225098
    3. '   ' → logprob: -11.875069618225098
    4. '       ' → logprob: -13.125069618225098
    5. '```' → logprob: -14.750069618225098
    6. '           ' → logprob: -14.875069618225098
    7. ' )' → logprob: -15.500069618225098
    8. ')return' → logprob: -15.750069618225098
    9. ',' → logprob: -16.00006866455078
    10. '               ' → logprob: -16.12506866455078

Token 1156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022444885224103928
    2. '
' → logprob: -3.8974449634552
    3. '    
' → logprob: -6.647444725036621
    4. '```' → logprob: -7.522444725036621
    5. 'print' → logprob: -10.022444725036621
    6. '  
' → logprob: -12.022444725036621
    7. '``' → logprob: -12.147444725036621
    8. '        
' → logprob: -13.147444725036621
    9. '

' → logprob: -13.772444725036621
    10. '       ' → logprob: -13.897444725036621

Token 1157: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2841881513595581
    2. 'print' (adapté à ' print') → logprob: -1.784188151359558
    3. '   ' → logprob: -2.5341882705688477
    4. '```' → logprob: -9.159188270568848
    5. ' if' → logprob: -11.909188270568848
    6. '``' → logprob: -13.034188270568848
    7. '
' → logprob: -14.284188270568848
    8. ' print' → logprob: -15.034188270568848
    9. '    
' → logprob: -15.159188270568848
    10. 'x' → logprob: -16.15918731689453

Token 1158: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0034073973074555397
    2. '(f' → logprob: -6.3784074783325195
    3. 'best' → logprob: -6.8784074783325195
    4. '(*' → logprob: -7.3784074783325195
    5. '(' → logprob: -10.00340747833252
    6. 'f' → logprob: -13.50340747833252
    7. '((' → logprob: -14.25340747833252
    8. '(b' → logprob: -15.12840747833252
    9. ' best' → logprob: -15.25340747833252
    10. '*' → logprob: -15.25340747833252

Token 1159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04870864003896713
    2. ')' → logprob: -3.04870867729187
    3. ')[' → logprob: -9.54870891571045
    4. '```' → logprob: -10.79870891571045
    5. ')
' → logprob: -11.17370891571045
    6. '   ' → logprob: -12.04870891571045
    7. '[
' → logprob: -12.92370891571045
    8. '))' → logprob: -13.54870891571045
    9. ')`' → logprob: -14.17370891571045
    10. '[]' → logprob: -14.29870891571045

Token 1160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025433204136788845
    2. '3' → logprob: -6.0025434494018555
    3. '-' → logprob: -9.627543449401855
    4. '1' → logprob: -14.502543449401855
    5. '0' → logprob: -14.627543449401855
    6. '
' → logprob: -15.377543449401855
    7. '```' → logprob: -15.877543449401855
    8. '[' → logprob: -16.94004249572754
    9. '``' → logprob: -16.94004249572754
    10. '۲' → logprob: -17.06504249572754

Token 1161: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ' ,' → logprob: -9.250142097473145
    3. ')' → logprob: -10.750142097473145
    4. ',end' → logprob: -10.875142097473145
    5. ',b' → logprob: -12.250142097473145
    6. '),' → logprob: -15.875142097473145
    7. ',
' → logprob: -17.125141143798828
    8. ' )' → logprob: -17.250141143798828
    9. ',y' → logprob: -17.625141143798828
    10. '(best' → logprob: -18.000141143798828

Token 1162: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00033558503491804004
    2. ' best' → logprob: -8.000335693359375
    3. '(best' → logprob: -16.250335693359375
    4. '	best' → logprob: -17.750335693359375
    5. '.best' → logprob: -19.625335693359375
    6. '-best' → logprob: -20.875335693359375
    7. '_best' → logprob: -21.000335693359375
    8. '```' → logprob: -21.625335693359375
    9. 'Best' → logprob: -21.875335693359375
    10. ')' → logprob: -23.125335693359375

Token 1163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0040895589627325535
    2. '3' → logprob: -5.50408935546875
    3. '][' → logprob: -11.87908935546875
    4. ']' → logprob: -13.37908935546875
    5. '```' → logprob: -13.87908935546875
    6. '1' → logprob: -14.87908935546875
    7. '-' → logprob: -15.00408935546875
    8. '
' → logprob: -15.37908935546875
    9. '[
' → logprob: -15.37908935546875
    10. '])' → logprob: -16.00408935546875

Token 1164: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. '``' → logprob: -19.875
    4. '
' → logprob: -20.375
    5. '۳' → logprob: -20.75
    6. '[' → logprob: -21.125
    7. '   ' → logprob: -21.125
    8. ' ' → logprob: -21.5
    9. '３' → logprob: -21.625
    10. '৩' → logprob: -21.75

Token 1165: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '])' → logprob: -13.500004768371582
    3. '})' → logprob: -13.625004768371582
    4. ',' → logprob: -14.375004768371582
    5. ' )' → logprob: -14.500004768371582
    6. '))' → logprob: -14.625004768371582
    7. ')
' → logprob: -15.250004768371582
    8. ')}' → logprob: -15.750004768371582
    9. '),' → logprob: -16.7500057220459
    10. '`)' → logprob: -17.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1163
Tokens correctement prédits (1ère position, stricte): 418
Tokens correctement prédits (1ère position, avec adaptation): 450
Tokens correctement prédits (top 10): 926
Précision stricte (1ère position): 35.94%
Précision adaptée (1ère position): 38.69%
Précision (top 10): 79.62%
================================================================================
