================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    events = []
    for _ in range(n):
        m, a, b = map(int, input().split())
        events.append((a, +m))
        events.append((b, -m))
    events.sort(key=lambda x: (x[0], -x[1]))
    total = 0
    broken = False
    for _, w in events:
        total += w
        if total > 150:
            broken = True
            break
    print("NG" if broken else "OK")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25863146781921387
    2. ' ' → logprob: -2.383631467819214
    3. '    ' → logprob: -3.508631467819214
    4. '```' → logprob: -3.633631467819214
    5. '\' → logprob: -3.758631467819214
    6. '    
' → logprob: -4.508631706237793
    7. '\n' → logprob: -4.633631706237793
    8. '<|end|>' → logprob: -5.258631706237793
    9. '`' → logprob: -5.758631706237793
    10. ''' → logprob: -5.758631706237793

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7391331195831299
    2. 'u' → logprob: -1.6141331195831299
    3. '=' → logprob: -2.11413311958313
    4. 'o' → logprob: -2.73913311958313
    5. '   ' → logprob: -2.98913311958313
    6. 'e' → logprob: -4.114132881164551
    7. ' =' → logprob: -4.114132881164551
    8. '_' → logprob: -4.739132881164551
    9. '+' → logprob: -4.989132881164551
    10. '  ' → logprob: -5.114132881164551

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9547040462493896
    2. ' ' → logprob: -1.8297040462493896
    3. ' if' → logprob: -2.0797040462493896
    4. ':' → logprob: -2.5797040462493896
    5. '<|end|>' → logprob: -2.7047040462493896
    6. '  ' → logprob: -3.2047040462493896
    7. '    ' → logprob: -3.4547040462493896
    8. ')' → logprob: -3.7047040462493896
    9. '  
' → logprob: -3.9547040462493896
    10. '    
' → logprob: -4.079704284667969

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.1928003813372925e-05
    2. ':
' → logprob: -10.250051498413086
    3. ' :' → logprob: -11.750051498413086
    4. '   ' → logprob: -12.750051498413086
    5. ':return' → logprob: -13.375051498413086
    6. '       ' → logprob: -13.625051498413086
    7. ':\' → logprob: -13.875051498413086
    8. '):' → logprob: -14.000051498413086
    9. '    ' → logprob: -15.000051498413086
    10. ':**' → logprob: -15.625051498413086

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014877833425998688
    2. '       ' → logprob: -4.514877796173096
    3. 'break' (adapté à ' break') → logprob: -5.889877796173096
    4. '   ' → logprob: -7.264877796173096
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. ' ' → logprob: -11.514878273010254
    10. '_break' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9910358190536499
    2. '   ' → logprob: -0.9910358190536499
    3. '\n' → logprob: -1.86603581905365
    4. '\' → logprob: -3.1160359382629395
    5. '```' → logprob: -3.9910359382629395
    6. '    
' → logprob: -4.1160359382629395
    7. 'n' → logprob: -5.1160359382629395
    8. '\r' → logprob: -5.6160359382629395
    9. '
' → logprob: -5.9910359382629395
    10. ':
' → logprob: -6.3660359382629395

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' events' (ID: 6124)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.709631621837616
    2. ' =' → logprob: -1.0846316814422607
    3. '.' → logprob: -2.5846316814422607
    4. '=' → logprob: -2.8346316814422607
    5. '   ' → logprob: -4.709631443023682
    6. '.setdefault' → logprob: -4.709631443023682
    7. '.append' → logprob: -5.209631443023682
    8. '_' → logprob: -5.834631443023682
    9. ')' → logprob: -6.084631443023682
    10. '[]' → logprob: -6.959631443023682

Token 22: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12730687856674194
    2. '[]' → logprob: -2.1273069381713867
    3. '{}' → logprob: -8.627306938171387
    4. ' {}' → logprob: -9.002306938171387
    5. ' [' → logprob: -10.627306938171387
    6. '[' → logprob: -10.752306938171387
    7. 'list' → logprob: -11.877306938171387
    8. ' list' → logprob: -12.377306938171387
    9. ' []
' → logprob: -12.502306938171387
    10. '[]}' → logprob: -13.127306938171387

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08590249717235565
    2. '<|end|>' → logprob: -3.085902452468872
    3. '    
' → logprob: -4.960902690887451
    4. ' ' → logprob: -5.085902690887451
    5. '[' → logprob: -5.460902690887451
    6. ' for' → logprob: -5.585902690887451
    7. '    ' → logprob: -5.835902690887451
    8. 'for' → logprob: -6.085902690887451
    9. ')' → logprob: -6.210902690887451
    10. '\' → logprob: -6.460902690887451

Token 24: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32228535413742065
    2. ' for' → logprob: -1.9472854137420654
    3. '   ' → logprob: -2.3222854137420654
    4. ' ' → logprob: -4.072285175323486
    5. 'n' → logprob: -5.572285175323486
    6. '	for' → logprob: -5.697285175323486
    7. '\t' → logprob: -5.947285175323486
    8. '    ' → logprob: -5.947285175323486
    9. 't' → logprob: -6.697285175323486
    10. '[' → logprob: -7.197285175323486

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21110877394676208
    2. ' _' → logprob: -2.086108684539795
    3. ' ' → logprob: -2.836108684539795
    4. '_' → logprob: -4.961108684539795
    5. 'i' → logprob: -8.336109161376953
    6. ' ‌' → logprob: -9.336109161376953
    7. ' range' → logprob: -9.711109161376953
    8. ' ▁' → logprob: -10.461109161376953
    9. ' ' → logprob: -10.836109161376953
    10. '  ' → logprob: -11.586109161376953

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033025972079485655
    2. 'in' → logprob: -5.878302574157715
    3. ' ' → logprob: -7.628302574157715
    4. ' i' → logprob: -12.628302574157715
    5. '	in' → logprob: -13.253302574157715
    6. '  ' → logprob: -13.878302574157715
    7. 'range' → logprob: -14.253302574157715
    8. '<|end|>' → logprob: -14.253302574157715
    9. '```' → logprob: -14.503302574157715
    10. '_' → logprob: -14.753302574157715

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002088338136673
    2. ' range' → logprob: -2.3502087593078613
    3. '	range' → logprob: -13.60020923614502
    4. 'rang' → logprob: -14.72520923614502
    5. '(range' → logprob: -15.72520923614502
    6. 'ran' → logprob: -15.72520923614502
    7. '_range' → logprob: -16.225208282470703
    8. ' ' → logprob: -17.100208282470703
    9. 'ranges' → logprob: -17.850208282470703
    10. '.range' → logprob: -17.850208282470703

Token 28: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20564772188663483
    2. '(n' → logprob: -1.8306477069854736
    3. 'n' → logprob: -4.205647945404053
    4. '(' → logprob: -4.705647945404053
    5. ' (' → logprob: -6.580647945404053
    6. ' ' → logprob: -8.580647468566895
    7. ' )' → logprob: -11.705647468566895
    8. ')n' → logprob: -11.955647468566895
    9. ' range' → logprob: -12.205647468566895
    10. '	n' → logprob: -12.330647468566895

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011901400052011013
    2. ')' → logprob: -4.511901378631592
    3. ' ):' → logprob: -7.761901378631592
    4. ':' → logprob: -8.26190185546875
    5. '):
' → logprob: -9.13690185546875
    6. '   ' → logprob: -10.38690185546875
    7. ' )' → logprob: -11.01190185546875
    8. '+' → logprob: -12.88690185546875
    9. '():' → logprob: -13.38690185546875
    10. ',' → logprob: -13.51190185546875

Token 30: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28391385078430176
    2. '    ' → logprob: -2.0339138507843018
    3. '       ' → logprob: -2.5339138507843018
    4. ' 
' → logprob: -4.158913612365723
    5. '   ' → logprob: -4.283913612365723
    6. '<|end|>' → logprob: -6.158913612365723
    7. '     
' → logprob: -7.033913612365723
    8. ' s' → logprob: -7.408913612365723
    9. '        ' → logprob: -7.533913612365723
    10. ' )' → logprob: -7.908913612365723

Token 31: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.676715612411499
    2. ' events' → logprob: -1.676715612411499
    3. ' event' → logprob: -2.176715612411499
    4. 'events' → logprob: -2.801715612411499
    5. ' start' → logprob: -3.801715612411499
    6. 'event' → logprob: -3.801715612411499
    7. '   ' → logprob: -4.426715850830078
    8. 'line' → logprob: -4.551715850830078
    9. ' time' → logprob: -4.676715850830078
    10. ' name' → logprob: -4.676715850830078

Token 32: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7255723476409912
    2. ' =' → logprob: -1.2255723476409912
    3. 'a' → logprob: -2.350572347640991
    4. ',' → logprob: -3.350572347640991
    5. 'ap' → logprob: -3.350572347640991
    6. '=input' → logprob: -4.47557258605957
    7. '=' → logprob: -4.97557258605957
    8. '   ' → logprob: -4.97557258605957
    9. 'essage' → logprob: -5.10057258605957
    10. ' ' → logprob: -5.10057258605957

Token 33: ' a' (ID: 261)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7402498722076416
    2. ' s' → logprob: -1.1152498722076416
    3. ' t' → logprob: -2.3652498722076416
    4. 'd' → logprob: -3.1152498722076416
    5. 's' → logprob: -3.6152498722076416
    6. ' p' → logprob: -5.1152496337890625
    7. ' c' → logprob: -5.7402496337890625
    8. ' ' → logprob: -6.1152496337890625
    9. 't' → logprob: -6.1152496337890625
    10. ' h' → logprob: -6.1152496337890625

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5525676608085632
    2. ',' → logprob: -1.552567720413208
    3. '=' → logprob: -1.552567720413208
    4. ' ' → logprob: -7.802567481994629
    5. ' ,' → logprob: -8.552567481994629
    6. 'pp' → logprob: -8.927567481994629
    7. 'm' → logprob: -9.302567481994629
    8. 'r' → logprob: -10.177567481994629
    9. ',b' → logprob: -10.427567481994629
    10. '=input' → logprob: -10.552567481994629

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4310024380683899
    2. ' b' → logprob: -1.8060023784637451
    3. 'd' → logprob: -2.806002378463745
    4. 't' → logprob: -3.056002378463745
    5. 's' → logprob: -4.056002616882324
    6. ' d' → logprob: -4.056002616882324
    7. ' t' → logprob: -4.181002616882324
    8. 'c' → logprob: -5.056002616882324
    9. 'h' → logprob: -5.306002616882324
    10. ' s' → logprob: -5.431002616882324

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800650656223297
    2. '=' → logprob: -1.8050650358200073
    3. ',' → logprob: -8.180065155029297
    4. ' ' → logprob: -11.055065155029297
    5. '   ' → logprob: -11.805065155029297
    6. ')' → logprob: -12.055065155029297
    7. '    ' → logprob: -12.180065155029297
    8. '=input' → logprob: -13.055065155029297
    9. '  ' → logprob: -13.680065155029297
    10. ' ,' → logprob: -14.180065155029297

Token 37: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14508606493473053
    2. ' input' → logprob: -2.0200860500335693
    3. 'map' → logprob: -6.645086288452148
    4. 'input' → logprob: -7.145086288452148
    5. '   ' → logprob: -9.020086288452148
    6. ' ' → logprob: -9.395086288452148
    7. ' [' → logprob: -10.520086288452148
    8. ' list' → logprob: -10.520086288452148
    9. '[' → logprob: -10.895086288452148
    10. '    ' → logprob: -11.145086288452148

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009543364867568016
    2. '(' → logprob: -7.0009541511535645
    3. 'int' → logprob: -10.750954627990723
    4. '(str' → logprob: -11.375954627990723
    5. '(input' → logprob: -12.000954627990723
    6. '```' → logprob: -13.500954627990723
    7. '(lambda' → logprob: -14.000954627990723
    8. '<int' → logprob: -14.250954627990723
    9. '[int' → logprob: -15.250954627990723
    10. '(list' → logprob: -15.500954627990723

Token 39: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4743337035179138
    2. ',' → logprob: -0.9743337035179138
    3. 'input' → logprob: -8.974333763122559
    4. '(input' → logprob: -9.474333763122559
    5. ' ,' → logprob: -9.974333763122559
    6. '(' → logprob: -12.974333763122559
    7. ',int' → logprob: -13.849333763122559
    8. ' input' → logprob: -13.849333763122559
    9. '   ' → logprob: -14.724333763122559
    10. ')' → logprob: -14.974333763122559

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061969365924596786
    2. ' input' → logprob: -2.81196928024292
    3. ')' → logprob: -13.686969757080078
    4. ',input' → logprob: -15.686969757080078
    5. '=input' → logprob: -16.061969757080078
    6. '	input' → logprob: -16.061969757080078
    7. '(input' → logprob: -16.311969757080078
    8. '   ' → logprob: -16.561969757080078
    9. ' ' → logprob: -17.061969757080078
    10. '[input' → logprob: -17.811969757080078

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.375011444091797
    3. ' ().' → logprob: -15.750011444091797
    4. ')' → logprob: -17.750011444091797
    5. '.split' → logprob: -18.000011444091797
    6. '(' → logprob: -18.250011444091797
    7. '()
' → logprob: -19.000011444091797
    8. '())' → logprob: -19.375011444091797
    9. 'split' → logprob: -19.375011444091797
    10. '.' → logprob: -19.625011444091797

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009236076730303466
    2. 'strip' → logprob: -7.0009236335754395
    3. 'rstrip' → logprob: -11.500923156738281
    4. ' split' → logprob: -13.625923156738281
    5. '(split' → logprob: -14.500923156738281
    6. ')' → logprob: -15.750923156738281
    7. 'spl' → logprob: -15.875923156738281
    8. 'sp' → logprob: -17.00092315673828
    9. 's' → logprob: -17.50092315673828
    10. ' ' → logprob: -17.75092315673828

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07068069279193878
    2. ')' → logprob: -2.820680618286133
    3. '()' → logprob: -4.820680618286133
    4. '())
' → logprob: -8.195680618286133
    5. '()))' → logprob: -8.570680618286133
    6. '))' → logprob: -9.195680618286133
    7. '(' → logprob: -10.570680618286133
    8. '('' → logprob: -12.820680618286133
    9. ' )' → logprob: -12.945680618286133
    10. '(),' → logprob: -13.070680618286133

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2533794939517975
    2. '<|end|>' → logprob: -2.2533795833587646
    3. '   ' → logprob: -2.7533795833587646
    4. ')' → logprob: -3.1283795833587646
    5. '\n' → logprob: -6.3783793449401855
    6. ' ' → logprob: -6.3783793449401855
    7. '<|end|>' → logprob: -6.7533793449401855
    8. 'events' → logprob: -7.1283793449401855
    9. ',' → logprob: -7.1283793449401855
    10. '
' → logprob: -7.2533793449401855

Token 45: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' (adapté à ' events') → logprob: -0.4798329770565033
    2. ' events' → logprob: -1.3548330068588257
    3. '       ' → logprob: -2.354832887649536
    4. ')' → logprob: -5.354833126068115
    5. '   ' → logprob: -5.354833126068115
    6. ' if' → logprob: -5.479833126068115
    7. ' 
' → logprob: -5.729833126068115
    8. '(events' → logprob: -6.229833126068115
    9. '        
' → logprob: -6.354833126068115
    10. '        ' → logprob: -6.604833126068115

Token 46: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004104758147150278
    2. '.' → logprob: -5.5041046142578125
    3. '.extend' → logprob: -10.629104614257812
    4. 'append' → logprob: -14.504104614257812
    5. '.add' → logprob: -14.879104614257812
    6. '.app' → logprob: -14.879104614257812
    7. '.push' → logprob: -15.254104614257812
    8. ' .' → logprob: -15.379104614257812
    9. '.ap' → logprob: -15.629104614257812
    10. '.Append' → logprob: -16.254104614257812

Token 47: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000737442634999752
    2. '(' → logprob: -7.37573766708374
    3. '(m' → logprob: -9.625737190246582
    4. '(((' → logprob: -10.875737190246582
    5. '([' → logprob: -11.125737190246582
    6. '(('' → logprob: -12.375737190246582
    7. '(([' → logprob: -12.750737190246582
    8. '((-' → logprob: -14.625737190246582
    9. '([(' → logprob: -14.750737190246582
    10. '(a' → logprob: -14.875737190246582

Token 48: 'a' (ID: 64)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17851532995700836
    2. 'a' → logprob: -1.9285153150558472
    3. ' m' → logprob: -4.178515434265137
    4. 'b' → logprob: -6.678515434265137
    5. ' a' → logprob: -6.678515434265137
    6. ' ' → logprob: -10.178515434265137
    7. ' b' → logprob: -10.303515434265137
    8. '   ' → logprob: -10.303515434265137
    9. 't' → logprob: -10.428515434265137
    10. 'n' → logprob: -10.553515434265137

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011656993301585317
    2. ',b' → logprob: -7.501165866851807
    3. ' ,' → logprob: -7.501165866851807
    4. '+' → logprob: -10.876165390014648
    5. ')' → logprob: -11.876165390014648
    6. ',)' → logprob: -12.001165390014648
    7. ' ' → logprob: -12.126165390014648
    8. ' +' → logprob: -12.376165390014648
    9. ',m' → logprob: -12.376165390014648
    10. '-' → logprob: -12.751165390014648

Token 50: ' +' (ID: 659)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18007442355155945
    2. ' b' → logprob: -2.180074453353882
    3. '1' → logprob: -3.430074453353882
    4. ' ' → logprob: -5.555074214935303
    5. '+' → logprob: -5.930074214935303
    6. '0' → logprob: -6.055074214935303
    7. 'm' → logprob: -6.305074214935303
    8. ' m' → logprob: -6.305074214935303
    9. ' True' → logprob: -6.430074214935303
    10. 'a' → logprob: -6.680074214935303

Token 51: 'm' (ID: 76)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004808414727449417
    2. 'm' → logprob: -5.37980842590332
    3. ' ' → logprob: -8.87980842590332
    4. 'b' → logprob: -10.37980842590332
    5. ' m' → logprob: -11.62980842590332
    6. '0' → logprob: -12.37980842590332
    7. 'a' → logprob: -14.00480842590332
    8. '2' → logprob: -14.25480842590332
    9. '+' → logprob: -14.81730842590332
    10. '-' → logprob: -14.87980842590332

Token 52: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012766609899699688
    2. ')' → logprob: -5.1377668380737305
    3. ',' → logprob: -5.1377668380737305
    4. '))
' → logprob: -7.5127668380737305
    5. ' ))' → logprob: -8.51276683807373
    6. '),' → logprob: -9.51276683807373
    7. '))

' → logprob: -10.76276683807373
    8. '-' → logprob: -11.13776683807373
    9. '1' → logprob: -11.38776683807373
    10. ')))' → logprob: -11.51276683807373

Token 53: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6073042154312134
    2. '<|end|>' → logprob: -1.9823042154312134
    3. ',
' → logprob: -2.232304096221924
    4. ' ,' → logprob: -2.607304096221924
    5. '       ' → logprob: -3.357304096221924
    6. ' 
' → logprob: -3.607304096221924
    7. '        
' → logprob: -4.357304096221924
    8. '    
' → logprob: -4.482304096221924
    9. '   ' → logprob: -4.607304096221924
    10. ' ' → logprob: -4.982304096221924

Token 54: ' events' (ID: 6124)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12095726281404495
    2. '(' → logprob: -3.245957374572754
    3. '(events' → logprob: -3.245957374572754
    4. 'events' (adapté à ' events') → logprob: -4.245957374572754
    5. '(b' → logprob: -5.120957374572754
    6. ' events' → logprob: -5.370957374572754
    7. '('' → logprob: -6.120957374572754
    8. '<|end|>' → logprob: -6.120957374572754
    9. '       ' → logprob: -6.495957374572754
    10. ''' → logprob: -6.745957374572754

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003196727717295289
    2. '.' → logprob: -5.753196716308594
    3. 'append' → logprob: -11.753196716308594
    4. ' .' → logprob: -12.378196716308594
    5. '<|end|>' → logprob: -12.378196716308594
    6. ').' → logprob: -13.878196716308594
    7. '.extend' → logprob: -14.128196716308594
    8. '.Append' → logprob: -15.003196716308594
    9. '.setdefault' → logprob: -15.378196716308594
    10. '.app' → logprob: -16.253196716308594

Token 56: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44982805848121643
    2. '((' → logprob: -1.074828028678894
    3. '(b' → logprob: -3.9498281478881836
    4. ' (' → logprob: -6.449828147888184
    5. ' ((' → logprob: -10.824828147888184
    6. '(None' → logprob: -12.074828147888184
    7. '(a' → logprob: -12.199828147888184
    8. '(B' → logprob: -12.449828147888184
    9. ' ' → logprob: -12.699828147888184
    10. '(
' → logprob: -12.699828147888184

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018165279179811478
    2. ' b' → logprob: -4.018165111541748
    3. ')b' → logprob: -12.768165588378906
    4. '   ' → logprob: -13.018165588378906
    5. ' ' → logprob: -13.643165588378906
    6. '(b' → logprob: -13.643165588378906
    7. '+' → logprob: -13.643165588378906
    8. ' (' → logprob: -14.018165588378906
    9. '    ' → logprob: -14.143165588378906
    10. ')' → logprob: -14.143165588378906

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035810720873996615
    2. ' ,' → logprob: -8.000358581542969
    3. ',m' → logprob: -11.625358581542969
    4. '-' → logprob: -11.875358581542969
    5. ' -' → logprob: -12.875358581542969
    6. ',-' → logprob: -13.500358581542969
    7. '+' → logprob: -14.375358581542969
    8. ' ' → logprob: -14.500358581542969
    9. ',
' → logprob: -15.000358581542969
    10. '   ' → logprob: -15.250358581542969

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020891256630420685
    2. '-m' → logprob: -3.8958911895751953
    3. '-' → logprob: -8.020891189575195
    4. '-ms' → logprob: -12.270891189575195
    5. '-M' → logprob: -12.770891189575195
    6. '<|end|>' → logprob: -12.895891189575195
    7. '-md' → logprob: -13.020891189575195
    8. ' ' → logprob: -13.145891189575195
    9. '-mm' → logprob: -14.520891189575195
    10. ',-' → logprob: -14.770891189575195

Token 60: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.718606891809031e-05
    2. ' m' → logprob: -9.625066757202148
    3. '1' → logprob: -13.875066757202148
    4. '   ' → logprob: -16.75006675720215
    5. '0' → logprob: -17.50006675720215
    6. ' ' → logprob: -17.75006675720215
    7. ')' → logprob: -18.00006675720215
    8. ')m' → logprob: -18.00006675720215
    9. '+m' → logprob: -18.25006675720215
    10. '	m' → logprob: -18.37506675720215

Token 61: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.021098697558045387
    2. ')' → logprob: -3.8960986137390137
    3. '))
' → logprob: -7.521098613739014
    4. ' ))' → logprob: -12.021099090576172
    5. ')
' → logprob: -12.646099090576172
    6. ')))' → logprob: -12.896099090576172
    7. '),' → logprob: -14.396099090576172
    8. '))

' → logprob: -14.396099090576172
    9. '   ' → logprob: -14.521099090576172
    10. ' )' → logprob: -14.646099090576172

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024707773700356483
    2. 'events' → logprob: -4.149707794189453
    3. '    
' → logprob: -5.149707794189453
    4. ' events' → logprob: -6.524707794189453
    5. '
' → logprob: -7.399707794189453
    6. '```' → logprob: -8.399707794189453
    7. '  
' → logprob: -8.899707794189453
    8. ' 
' → logprob: -9.399707794189453
    9. ')' → logprob: -9.649707794189453
    10. '   
' → logprob: -9.774707794189453

Token 63: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' (adapté à ' events') → logprob: -0.032697200775146484
    2. '   ' → logprob: -3.7826972007751465
    3. ' events' → logprob: -4.9076972007751465
    4. '```' → logprob: -6.7826972007751465
    5. ' ' → logprob: -7.7826972007751465
    6. ')' → logprob: -8.657697677612305
    7. '    
' → logprob: -8.907697677612305
    8. '(events' → logprob: -9.532697677612305
    9. '
' → logprob: -10.907697677612305
    10. ' 
' → logprob: -11.532697677612305

Token 64: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00019829542725346982
    2. '.' → logprob: -8.625198364257812
    3. 'sort' → logprob: -11.250198364257812
    4. '<|end|>' → logprob: -12.250198364257812
    5. '.append' → logprob: -15.500198364257812
    6. '_sorted' → logprob: -15.625198364257812
    7. ' sort' → logprob: -15.750198364257812
    8. '<|end|>' → logprob: -16.750198364257812
    9. '	sort' → logprob: -17.000198364257812
    10. 'sorted' → logprob: -17.000198364257812

Token 65: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16211803257465363
    2. '(' → logprob: -1.9121180772781372
    3. '(events' → logprob: -7.037117958068848
    4. '(()' → logprob: -8.162117958068848
    5. '(key' → logprob: -8.287117958068848
    6. '((' → logprob: -9.037117958068848
    7. 'events' → logprob: -9.537117958068848
    8. '(open' → logprob: -10.412117958068848
    9. '```' → logprob: -10.537117958068848
    10. ' ()' → logprob: -10.662117958068848

Token 66: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.006715728435665369
    2. '=' → logprob: -5.006715774536133
    3. '=len' → logprob: -15.881715774536133
    4. '=item' → logprob: -16.006715774536133
    5. '=str' → logprob: -16.381715774536133
    6. 'lambda' → logprob: -17.506715774536133
    7. '=
' → logprob: -18.631715774536133
    8. ' =' → logprob: -18.631715774536133
    9. '=}' → logprob: -19.006715774536133
    10. '=int' → logprob: -19.131715774536133

Token 67: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020943084731698036
    2. 'x' → logprob: -3.8959431648254395
    3. ' e' → logprob: -8.395942687988281
    4. 'e' → logprob: -9.270942687988281
    5. ' lambda' → logprob: -10.645942687988281
    6. ' event' → logprob: -10.895942687988281
    7. ' s' → logprob: -11.395942687988281
    8. ' events' → logprob: -12.145942687988281
    9. 'event' → logprob: -12.270942687988281
    10. ' ' → logprob: -12.520942687988281

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007553085451945662
    2. ':x' → logprob: -7.375755310058594
    3. ' :' → logprob: -9.625755310058594
    4. 'x' → logprob: -9.750755310058594
    5. '1' → logprob: -13.250755310058594
    6. ' x' → logprob: -14.500755310058594
    7. ':
' → logprob: -14.875755310058594
    8. '[' → logprob: -15.000755310058594
    9. '0' → logprob: -15.000755310058594
    10. ' ' → logprob: -15.500755310058594

Token 69: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001506528351455927
    2. ' x' → logprob: -6.501506328582764
    3. '(x' → logprob: -12.876506805419922
    4. '(' → logprob: -13.876506805419922
    5. ' (' → logprob: -14.376506805419922
    6. '   ' → logprob: -16.751506805419922
    7. 'lambda' → logprob: -17.251506805419922
    8. ' ' → logprob: -17.751506805419922
    9. '	x' → logprob: -17.751506805419922
    10. '    ' → logprob: -17.876506805419922

Token 70: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012403888104017824
    2. ' x' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. '-' → logprob: -16.500123977661133
    5. '    ' → logprob: -17.000123977661133
    6. '-x' → logprob: -17.125123977661133
    7. '	x' → logprob: -18.000123977661133
    8. ')x' → logprob: -18.000123977661133
    9. '0' → logprob: -18.250123977661133
    10. '1' → logprob: -18.375123977661133

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. ' [' → logprob: -12.500009536743164
    3. ')' → logprob: -13.250009536743164
    4. '0' → logprob: -13.500009536743164
    5. ' ' → logprob: -13.500009536743164
    6. '[
' → logprob: -14.500009536743164
    7. ':' → logprob: -14.750009536743164
    8. '1' → logprob: -15.000009536743164
    9. '.' → logprob: -15.250009536743164
    10. ' )' → logprob: -17.625009536743164

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.847109812544659e-05
    2. ' ' → logprob: -10.000048637390137
    3. '1' → logprob: -12.750048637390137
    4. '[' → logprob: -15.875048637390137
    5. '   ' → logprob: -17.00004768371582
    6. ')' → logprob: -17.50004768371582
    7. 'x' → logprob: -19.12504768371582
    8. '    ' → logprob: -19.37504768371582
    9. '  ' → logprob: -19.56254768371582
    10. '.' → logprob: -19.68754768371582

Token 73: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000526107382029295
    2. ',x' → logprob: -8.125526428222656
    3. '))' → logprob: -8.875526428222656
    4. ' ,' → logprob: -9.875526428222656
    5. ',
' → logprob: -11.375526428222656
    6. '[' → logprob: -11.625526428222656
    7. ',int' → logprob: -12.625526428222656
    8. ')' → logprob: -13.125526428222656
    9. ' ))' → logprob: -13.750526428222656
    10. 'x' → logprob: -14.000526428222656

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.2659043073654175
    2. '-' → logprob: -1.3909043073654175
    3. 'x' → logprob: -1.3909043073654175
    4. ' x' → logprob: -1.6409043073654175
    5. '-x' → logprob: -3.890904426574707
    6. '0' → logprob: -5.640904426574707
    7. ' ' → logprob: -6.640904426574707
    8. '1' → logprob: -7.390904426574707
    9. ' abs' → logprob: -8.890904426574707
    10. 'abs' → logprob: -9.015904426574707

Token 75: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7432603272027336e-06
    2. ' x' → logprob: -13.750001907348633
    3. '1' → logprob: -15.375001907348633
    4. ')x' → logprob: -15.500001907348633
    5. '	x' → logprob: -17.375001907348633
    6. ')' → logprob: -17.875001907348633
    7. 'abs' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.250001907348633
    9. 'xec' → logprob: -18.562501907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3935180902481079
    2. 'x' → logprob: -1.143518090248108
    3. '1' → logprob: -5.018517971038818
    4. ' x' → logprob: -12.393518447875977
    5. '[
' → logprob: -13.643518447875977
    6. ')x' → logprob: -13.893518447875977
    7. ' [' → logprob: -14.643518447875977
    8. ' ' → logprob: -14.768518447875977
    9. ')' → logprob: -14.768518447875977
    10. '(' → logprob: -14.893518447875977

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. '۱' → logprob: -18.5
    4. '' → logprob: -18.5
    5. '[' → logprob: -19.125
    6. '0' → logprob: -19.125
    7. '१' → logprob: -19.4375
    8. '১' → logprob: -19.8125
    9. '１' → logprob: -19.875
    10. ' ' → logprob: -20.125

Token 78: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001884015218820423
    2. ')' → logprob: -9.375188827514648
    3. ')))' → logprob: -9.750188827514648
    4. ' ))' → logprob: -10.375188827514648
    5. '))
' → logprob: -11.375188827514648
    6. '0' → logprob: -14.750188827514648
    7. '[' → logprob: -15.000188827514648
    8. '1' → logprob: -15.250188827514648
    9. '))

' → logprob: -15.500188827514648
    10. '),' → logprob: -15.500188827514648

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6139381527900696
    2. 'current' → logprob: -1.4889380931854248
    3. 'max' → logprob: -2.363938093185425
    4. '```' → logprob: -3.488938093185425
    5. 'capacity' → logprob: -3.988938093185425
    6. '
' → logprob: -4.113938331604004
    7. ' current' → logprob: -4.488938331604004
    8. ' max' → logprob: -4.863938331604004
    9. 'c' → logprob: -4.988938331604004
    10. '``' → logprob: -5.238938331604004

Token 80: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.888654887676239
    2. 'current' → logprob: -1.6386549472808838
    3. 'capacity' → logprob: -2.388654947280884
    4. 'load' → logprob: -2.888654947280884
    5. 'c' → logprob: -3.638654947280884
    6. 'curr' → logprob: -3.763654947280884
    7. 'count' → logprob: -4.138654708862305
    8. 'peak' → logprob: -4.263654708862305
    9. ' max' → logprob: -4.388654708862305
    10. 'acc' → logprob: -4.388654708862305

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42129039764404297
    2. '=' → logprob: -1.171290397644043
    3. ' +=' → logprob: -3.921290397644043
    4. '_load' → logprob: -5.421290397644043
    5. '_' → logprob: -5.546290397644043
    6. '_usage' → logprob: -6.421290397644043
    7. '+=' → logprob: -6.671290397644043
    8. '_capacity' → logprob: -6.796290397644043
    9. '_space' → logprob: -7.796290397644043
    10. '_m' → logprob: -8.796290397644043

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0263022743165493
    2. ' ' → logprob: -3.6513023376464844
    3. '   ' → logprob: -14.026302337646484
    4. '  ' → logprob: -15.276302337646484
    5. 'm' → logprob: -15.526302337646484
    6. 'max' → logprob: -16.151302337646484
    7. ' ' → logprob: -16.276302337646484
    8. '100' → logprob: -16.463802337646484
    9. 'events' → logprob: -16.651302337646484
    10. ' m' → logprob: -17.151302337646484

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. 'max' → logprob: -15.937704086303711
    5. 'events' → logprob: -16.37520408630371
    6. 'm' → logprob: -16.50020408630371
    7. '100' → logprob: -16.50020408630371
    8. 'sum' → logprob: -16.62520408630371
    9. '  ' → logprob: -16.75020408630371
    10. '000' → logprob: -17.31270408630371

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020322421565651894
    2. '<|end|>' → logprob: -4.520322322845459
    3. ' for' → logprob: -5.645322322845459
    4. '
' → logprob: -6.270322322845459
    5. '    
' → logprob: -6.270322322845459
    6. '\n' → logprob: -7.645322322845459
    7. '```' → logprob: -8.395322799682617
    8. ',' → logprob: -8.395322799682617
    9. 'for' → logprob: -8.770322799682617
    10. '  
' → logprob: -8.895322799682617

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023916717618703842
    2. ' for' → logprob: -3.898916721343994
    3. 'for' → logprob: -6.648916721343994
    4. '<|end|>' → logprob: -7.023916721343994
    5. '```' → logprob: -7.898916721343994
    6. '    
' → logprob: -7.898916721343994
    7. '\n' → logprob: -8.648916244506836
    8. '
' → logprob: -9.398916244506836
    9. ' 
' → logprob: -10.398916244506836
    10. '  
' → logprob: -10.523916244506836

Token 86: ' broken' (ID: 17162)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2489224523305893
    2. 'max' → logprob: -1.7489224672317505
    3. ' for' → logprob: -3.248922348022461
    4. '   ' → logprob: -5.498922348022461
    5. 'maximum' → logprob: -6.748922348022461
    6. ' max' → logprob: -7.123922348022461
    7. 'result' → logprob: -7.498922348022461
    8. 'possible' → logprob: -8.498922348022461
    9. 'ans' → logprob: -9.123922348022461
    10. 'res' → logprob: -9.248922348022461

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6677610874176025
    2. '=' → logprob: -1.5427610874176025
    3. ' +=' → logprob: -2.2927610874176025
    4. '+' → logprob: -2.9177610874176025
    5. ' >' → logprob: -3.2927610874176025
    6. '+=' → logprob: -4.042760848999023
    7. '>' → logprob: -4.542760848999023
    8. '[' → logprob: -4.542760848999023
    9. ' ' → logprob: -4.542760848999023
    10. ' >=' → logprob: -4.917760848999023

Token 88: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4741361439228058
    2. ' False' → logprob: -0.9741361141204834
    3. '0' → logprob: -9.974136352539062
    4. '(False' → logprob: -11.849136352539062
    5. ' ' → logprob: -13.099136352539062
    6. '=False' → logprob: -13.349136352539062
    7. ' True' → logprob: -13.974136352539062
    8. 'True' → logprob: -14.849136352539062
    9. '   ' → logprob: -15.099136352539062
    10. '.False' → logprob: -16.474136352539062

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0590364970266819
    2. ':' → logprob: -3.1840364933013916
    3. '
' → logprob: -5.684036731719971
    4. '<|end|>' → logprob: -5.934036731719971
    5. '    
' → logprob: -6.059036731719971
    6. '\n' → logprob: -6.434036731719971
    7. ' for' → logprob: -6.434036731719971
    8. ' ' → logprob: -6.809036731719971
    9. ':
' → logprob: -7.309036731719971
    10. '  
' → logprob: -7.684036731719971

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015367581509053707
    2. ' for' → logprob: -4.64036750793457
    3. ':' → logprob: -6.14036750793457
    4. 'for' → logprob: -7.14036750793457
    5. '    
' → logprob: -7.39036750793457
    6. ' 
' → logprob: -7.64036750793457
    7. '
' → logprob: -7.76536750793457
    8. '<|end|>' → logprob: -7.89036750793457
    9. ' ' → logprob: -8.76536750793457
    10. '\n' → logprob: -8.89036750793457

Token 91: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7515594959259033
    2. 'for' (adapté à ' for') → logprob: -0.7515594959259033
    3. '   ' → logprob: -2.8765594959259033
    4. ' ' → logprob: -8.251559257507324
    5. ' 
' → logprob: -10.126559257507324
    6. '    
' → logprob: -10.251559257507324
    7. '
' → logprob: -10.501559257507324
    8. '	for' → logprob: -10.751559257507324
    9. '  ' → logprob: -11.751559257507324
    10. '```' → logprob: -12.251559257507324

Token 92: ' _,' (ID: 18042)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.22333991527557373
    2. 'time' → logprob: -2.0983400344848633
    3. ' _,' → logprob: -3.7233400344848633
    4. '_,' → logprob: -3.8483400344848633
    5. ' t' → logprob: -4.098340034484863
    6. ' e' → logprob: -5.723340034484863
    7. 'e' → logprob: -5.723340034484863
    8. 't' → logprob: -5.973340034484863
    9. ' event' → logprob: -6.223340034484863
    10. ',' → logprob: -6.848340034484863

Token 93: ' w' (ID: 286)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.0833185911178589
    2. 'delta' → logprob: -1.3333185911178589
    3. 'm' → logprob: -1.8333185911178589
    4. 'val' → logprob: -2.7083187103271484
    5. 'v' → logprob: -3.5833187103271484
    6. 'value' → logprob: -3.5833187103271484
    7. 'diff' → logprob: -3.9583187103271484
    8. ' delta' → logprob: -4.083318710327148
    9. 'e' → logprob: -4.208318710327148
    10. ' change' → logprob: -4.583318710327148

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017714601010084152
    2. 'in' → logprob: -4.142714500427246
    3. 'w' → logprob: -6.517714500427246
    4. '<|end|>' → logprob: -9.392714500427246
    5. 'm' → logprob: -10.517714500427246
    6. 'change' → logprob: -10.517714500427246
    7. '<|end|>' → logprob: -11.142714500427246
    8. '_change' → logprob: -11.392714500427246
    9. ' ' → logprob: -11.892714500427246
    10. '_in' → logprob: -12.642714500427246

Token 95: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.47407910227775574
    2. ' events' → logprob: -0.9740791320800781
    3. '(events' → logprob: -13.224079132080078
    4. '.events' → logprob: -16.349079132080078
    5. 'Events' → logprob: -16.724079132080078
    6. '_events' → logprob: -16.724079132080078
    7. ' eventos' → logprob: -16.849079132080078
    8. 'ed' → logprob: -17.974079132080078
    9. ' ' → logprob: -18.099079132080078
    10. '```' → logprob: -18.474079132080078

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012523665092885494
    2. ':
' → logprob: -4.387523651123047
    3. ':

' → logprob: -12.012523651123047
    4. ':
' → logprob: -13.012523651123047
    5. '):' → logprob: -13.512523651123047
    6. '):
' → logprob: -14.137523651123047
    7. '<|end|>' → logprob: -14.137523651123047
    8. ' in' → logprob: -14.262523651123047
    9. ' :' → logprob: -14.637523651123047
    10. '<|end|>' → logprob: -14.762523651123047

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05285988003015518
    2. '<|end|>' → logprob: -3.6778597831726074
    3. '   ' → logprob: -4.052859783172607
    4. ' total' → logprob: -5.427859783172607
    5. ' ' → logprob: -6.677859783172607
    6. '    ' → logprob: -7.052859783172607
    7. ' if' → logprob: -7.552859783172607
    8. ':' → logprob: -7.552859783172607
    9. '<|end|>' → logprob: -8.802860260009766
    10. '        
' → logprob: -9.052860260009766

Token 98: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1269645392894745
    2. ' total' → logprob: -2.126964569091797
    3. '   ' → logprob: -10.376964569091797
    4. '	total' → logprob: -12.751964569091797
    5. 'if' → logprob: -14.251964569091797
    6. ' ' → logprob: -14.251964569091797
    7. '
' → logprob: -15.126964569091797
    8. '       ' → logprob: -15.251964569091797
    9. ' if' → logprob: -15.251964569091797
    10. '    ' → logprob: -16.376964569091797

Token 99: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4298360049724579
    2. '+=' → logprob: -1.0548360347747803
    3. '+' → logprob: -6.804835796356201
    4. ' +' → logprob: -11.67983627319336
    5. ']+=' → logprob: -11.80483627319336
    6. '<|end|>' → logprob: -12.80483627319336
    7. '+='' → logprob: -13.05483627319336
    8. '=' → logprob: -13.30483627319336
    9. ' ' → logprob: -13.92983627319336
    10. '+=(' → logprob: -14.42983627319336

Token 100: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25192907452583313
    2. ' w' → logprob: -1.5019290447235107
    3. ' ' → logprob: -18.001928329467773
    4. '	w' → logprob: -18.126928329467773
    5. ' ' → logprob: -18.251928329467773
    6. '*w' → logprob: -21.251928329467773
    7. '   ' → logprob: -21.751928329467773
    8. '​' → logprob: -21.751928329467773
    9. '<w' → logprob: -22.001928329467773
    10. '_w' → logprob: -22.126928329467773

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010571630671620369
    2. '   ' → logprob: -4.885571479797363
    3. '       ' → logprob: -6.260571479797363
    4. '
' → logprob: -7.635571479797363
    5. ' if' → logprob: -8.010571479797363
    6. '    
' → logprob: -9.635571479797363
    7. ' 
' → logprob: -9.635571479797363
    8. 'if' → logprob: -10.385571479797363
    9. '  
' → logprob: -10.635571479797363
    10. '<|end|>' → logprob: -11.010571479797363

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2537229061126709
    2. '       ' → logprob: -2.128722906112671
    3. '
' → logprob: -2.878722906112671
    4. ' if' → logprob: -3.128722906112671
    5. '```' → logprob: -6.75372314453125
    6. ' ' → logprob: -7.12872314453125
    7. '    
' → logprob: -7.25372314453125
    8. 'if' → logprob: -7.37872314453125
    9. ' 
' → logprob: -7.62872314453125
    10. '  
' → logprob: -7.75372314453125

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3907039761543274
    2. 'if' (adapté à ' if') → logprob: -1.1407039165496826
    3. '   ' → logprob: -6.265704154968262
    4. '       ' → logprob: -6.265704154968262
    5. ' ' → logprob: -11.890704154968262
    6. '
' → logprob: -12.015704154968262
    7. '    ' → logprob: -12.390704154968262
    8. '           ' → logprob: -12.640704154968262
    9. '  ' → logprob: -13.515704154968262
    10. '```' → logprob: -14.390704154968262

Token 104: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04862097650766373
    2. 'total' → logprob: -3.0486209392547607
    3. ' ' → logprob: -11.29862117767334
    4. '(total' → logprob: -11.42362117767334
    5. '   ' → logprob: -12.92362117767334
    6. '	total' → logprob: -13.29862117767334
    7. ' ' → logprob: -13.54862117767334
    8. '  ' → logprob: -14.36112117767334
    9. '100' → logprob: -14.86112117767334
    10. ' n' → logprob: -14.86112117767334

Token 105: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34887242317199707
    2. '>' → logprob: -1.223872423171997
    3. '<' → logprob: -8.598872184753418
    4. ' <' → logprob: -8.848872184753418
    5. ' ' → logprob: -9.723872184753418
    6. ' ' → logprob: -12.098872184753418
    7. '&gt' → logprob: -12.348872184753418
    8. ' >
' → logprob: -13.223872184753418
    9. '<|end|>' → logprob: -13.223872184753418
    10. '>#' → logprob: -13.286372184753418

Token 106: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.056403838098049164
    2. '200' → logprob: -4.181403636932373
    3. '20' → logprob: -4.681403636932373
    4. ' ' → logprob: -4.681403636932373
    5. '10' → logprob: -4.931403636932373
    6. '400' → logprob: -5.056403636932373
    7. '1' → logprob: -6.181403636932373
    8. '210' → logprob: -6.931403636932373
    9. '40' → logprob: -7.056403636932373
    10. '500' → logprob: -7.306403636932373

Token 107: '150' (ID: 5215)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07662740349769592
    2. '200' → logprob: -3.701627492904663
    3. '10' → logprob: -4.451627254486084
    4. '20' → logprob: -4.701627254486084
    5. '1' → logprob: -5.076627254486084
    6. '400' → logprob: -5.326627254486084
    7. '500' → logprob: -5.576627254486084
    8. '210' → logprob: -5.951627254486084
    9. '600' → logprob: -6.451627254486084
    10. '300' → logprob: -6.701627254486084

Token 108: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5233608484268188
    2. ':' → logprob: -0.8983608484268188
    3. ':
' → logprob: -8.648361206054688
    4. ' :' → logprob: -10.898361206054688
    5. '00' → logprob: -11.398361206054688
    6. ':return' → logprob: -11.898361206054688
    7. ':

' → logprob: -12.023361206054688
    8. '):' → logprob: -12.148361206054688
    9. '000' → logprob: -12.773361206054688
    10. '.' → logprob: -12.898361206054688

Token 109: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5917332768440247
    2. '       ' → logprob: -1.3417332172393799
    3. '           ' → logprob: -1.7167332172393799
    4. ' broken' → logprob: -6.466733455657959
    5. '
' → logprob: -6.591733455657959
    6. 'broken' → logprob: -6.716733455657959
    7. '```' → logprob: -7.716733455657959
    8. '    ' → logprob: -8.4667329788208
    9. ' broke' → logprob: -8.4667329788208
    10. '\n' → logprob: -9.0917329788208

Token 110: ' broken' (ID: 17162)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6310434341430664
    2. 'broken' (adapté à ' broken') → logprob: -1.7560434341430664
    3. ' broken' → logprob: -1.8810434341430664
    4. 'print' → logprob: -2.7560434341430664
    5. '           ' → logprob: -3.3810434341430664
    6. ' print' → logprob: -4.006043434143066
    7. ' 
' → logprob: -5.381043434143066
    8. '       ' → logprob: -5.506043434143066
    9. '   ' → logprob: -5.506043434143066
    10. '```' → logprob: -5.631043434143066

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788988247513771
    2. '=' → logprob: -2.5788989067077637
    3. '=True' → logprob: -12.078898429870605
    4. ' ' → logprob: -12.828898429870605
    5. '   ' → logprob: -15.828898429870605
    6. 's' → logprob: -15.953898429870605
    7. ' =
' → logprob: -16.203899383544922
    8. '=False' → logprob: -16.328899383544922
    9. '```' → logprob: -17.203899383544922
    10. ')' → logprob: -17.328899383544922

Token 112: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07888978719711304
    2. ' True' → logprob: -2.578889846801758
    3. '(True' → logprob: -18.078889846801758
    4. 'Tr' → logprob: -18.328889846801758
    5. '=True' → logprob: -18.328889846801758
    6. ' Tru' → logprob: -18.953889846801758
    7. '1' → logprob: -19.953889846801758
    8. ' ' → logprob: -20.703889846801758
    9. 'False' → logprob: -21.203889846801758
    10. 'T' → logprob: -21.453889846801758

Token 113: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.051066520740278e-05
    2. '       ' → logprob: -10.750060081481934
    3. '   ' → logprob: -11.000060081481934
    4. '
' → logprob: -11.500060081481934
    5. '		' → logprob: -11.625060081481934
    6. ' break' → logprob: -14.375060081481934
    7. '               ' → logprob: -14.875060081481934
    8. '            
' → logprob: -15.000060081481934
    9. '    
' → logprob: -15.000060081481934
    10. '	       ' → logprob: -15.125060081481934

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006951583200134337
    2. '   ' → logprob: -7.87569522857666
    3. '       ' → logprob: -8.12569522857666
    4. '		' → logprob: -11.62569522857666
    5. 'print' → logprob: -13.37569522857666
    6. '               ' → logprob: -13.75069522857666
    7. 'break' → logprob: -13.87569522857666
    8. ' ' → logprob: -14.12569522857666
    9. '  ' → logprob: -14.37569522857666
    10. '    
' → logprob: -14.37569522857666

Token 115: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25866690278053284
    2. ' break' → logprob: -1.5086668729782104
    3. '   ' → logprob: -5.5086669921875
    4. '       ' → logprob: -6.5086669921875
    5. 'print' → logprob: -7.2586669921875
    6. '           ' → logprob: -8.2586669921875
    7. '	break' → logprob: -9.1336669921875
    8. ' print' → logprob: -10.3836669921875
    9. '```' → logprob: -11.1336669921875
    10. '    
' → logprob: -11.5086669921875

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08985525369644165
    2. 'print' → logprob: -3.089855194091797
    3. '
' → logprob: -3.339855194091797
    4. '    
' → logprob: -6.089855194091797
    5. '\n' → logprob: -6.839855194091797
    6. 'if' → logprob: -6.964855194091797
    7. '  
' → logprob: -8.339855194091797
    8. ' print' → logprob: -9.339855194091797
    9. ' if' → logprob: -9.464855194091797
    10. 'n' → logprob: -9.714855194091797

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46725788712501526
    2. 'print' → logprob: -1.0922578573226929
    3. 'if' → logprob: -3.3422579765319824
    4. '    
' → logprob: -7.092257976531982
    5. '
' → logprob: -7.467257976531982
    6. ' if' → logprob: -7.592257976531982
    7. ' print' → logprob: -8.342257499694824
    8. '\n' → logprob: -9.467257499694824
    9. '  
' → logprob: -9.842257499694824
    10. '       ' → logprob: -10.217257499694824

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4057116210460663
    2. 'if' → logprob: -1.1557116508483887
    3. '   ' → logprob: -4.405711650848389
    4. ' if' → logprob: -5.155711650848389
    5. ' print' → logprob: -7.405711650848389
    6. '    
' → logprob: -9.78071117401123
    7. '  
' → logprob: -11.90571117401123
    8. '
' → logprob: -12.15571117401123
    9. '```' → logprob: -12.40571117401123
    10. ' 
' → logprob: -13.03071117401123

Token 119: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.009968327358365059
    2. '(' → logprob: -5.009968280792236
    3. '('' → logprob: -5.759968280792236
    4. '(b' → logprob: -10.134968757629395
    5. '()' → logprob: -10.634968757629395
    6. ' ("' → logprob: -11.134968757629395
    7. '(("' → logprob: -12.009968757629395
    8. '(""' → logprob: -12.759968757629395
    9. '(not' → logprob: -12.884968757629395
    10. '"' → logprob: -13.509968757629395

Token 120: 'NG' (ID: 19236)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5032209157943726
    2. 'YES' → logprob: -1.2532209157943726
    3. 'NO' → logprob: -4.003221035003662
    4. 'N' → logprob: -5.003221035003662
    5. 'NA' → logprob: -5.003221035003662
    6. 'No' → logprob: -5.003221035003662
    7. 'Fail' → logprob: -5.003221035003662
    8. 'Fuse' → logprob: -5.003221035003662
    9. 'F' → logprob: -5.378221035003662
    10. 'FAIL' → logprob: -5.503221035003662

Token 121: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0141702089458704
    2. '")' → logprob: -4.264170169830322
    3. '!"' → logprob: -13.01417064666748
    4. '")
' → logprob: -13.88917064666748
    5. 'if' → logprob: -14.13917064666748
    6. ' if' → logprob: -14.63917064666748
    7. '```' → logprob: -14.88917064666748
    8. '!' → logprob: -15.13917064666748
    9. ')' → logprob: -15.26417064666748
    10. '""' → logprob: -15.38917064666748

Token 122: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01887606456875801
    2. ' if' → logprob: -4.143876075744629
    3. 'if' → logprob: -5.893876075744629
    4. '")' → logprob: -9.643876075744629
    5. '()' → logprob: -11.893876075744629
    6. ' )' → logprob: -12.893876075744629
    7. '"' → logprob: -13.518876075744629
    8. '```' → logprob: -13.643876075744629
    9. ')`' → logprob: -13.768876075744629
    10. ');' → logprob: -14.518876075744629

Token 123: ' broken' (ID: 17162)
  Prédit: ' broken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' broken' → logprob: -0.0015029559144750237
    2. 'broken' → logprob: -6.501502990722656
    3. ' broke' → logprob: -14.376502990722656
    4. ' ' → logprob: -17.126502990722656
    5. 'Broken' → logprob: -17.626502990722656
    6. ' ' → logprob: -18.126502990722656
    7. 'bro' → logprob: -19.001502990722656
    8. ' break' → logprob: -19.001502990722656
    9. ' Broken' → logprob: -19.501502990722656
    10. 'break' → logprob: -19.626502990722656

Token 124: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3868740200996399
    2. 'else' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.886874198913574
    4. '	else' → logprob: -14.261874198913574
    5. '
' → logprob: -14.761874198913574
    6. '```' → logprob: -14.761874198913574
    7. '   ' → logprob: -15.511874198913574
    8. '

' → logprob: -16.011873245239258
    9. ' ' → logprob: -16.261873245239258
    10. '[]' → logprob: -16.636873245239258

Token 125: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02981853485107422
    2. ' "' → logprob: -3.529818534851074
    3. ' ' → logprob: -10.529818534851074
    4. ''' → logprob: -10.904818534851074
    5. '("' → logprob: -12.404818534851074
    6. ')' → logprob: -12.404818534851074
    7. '   ' → logprob: -12.654818534851074
    8. '"N' → logprob: -13.279818534851074
    9. '"I' → logprob: -13.654818534851074
    10. '  ' → logprob: -13.654818534851074

Token 126: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.0003171121352352202
    2. '"' → logprob: -8.250317573547363
    3. 'ok' → logprob: -11.000317573547363
    4. ' OK' → logprob: -11.375317573547363
    5. 'Ok' → logprob: -11.500317573547363
    6. 'Okay' → logprob: -12.125317573547363
    7. '_OK' → logprob: -12.625317573547363
    8. '""' → logprob: -13.125317573547363
    9. 'PASS' → logprob: -14.125317573547363
    10. 'NG' → logprob: -14.125317573547363

Token 127: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0036459225229918957
    2. ')")' → logprob: -6.003645896911621
    3. ')' → logprob: -6.753645896911621
    4. ')"' → logprob: -13.503645896911621
    5. '")
' → logprob: -14.128645896911621
    6. '"' → logprob: -14.753645896911621
    7. '!")' → logprob: -16.128646850585938
    8. ' )' → logprob: -16.628646850585938
    9. '}")' → logprob: -16.753646850585938
    10. '())' → logprob: -17.003646850585938


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 48.80%
Précision adaptée (1ère position): 53.60%
Précision (top 10): 89.60%
================================================================================
