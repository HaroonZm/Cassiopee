================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:34:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading

def main():
    input = sys.stdin.readline
    while True:
        n = int(input())
        if n == 0:
            break
        p = list(map(int, input().split()))
        j = list(map(int, input().split()))
        dp = [0]*(n+1)
        # dp[i]: max salary using first i pipes
        for i in range(1, n+1):
            # not connect pipe i with i-1
            dp[i] = dp[i-1] + p[i-1]
            if i > 1:
                # connect pipe i-1 and i into one
                combined = dp[i-2] + (p[i-2] + j[i-2] + p[i-1])*1
                # check if it's better to combine or not; but combined represents merging two pipes into one pipe,
                # so count of pipes decreases by one, but salary depends on count*sum_length
                # here dp contains max salary so far for i pipes, so for combined: using (i-2) pipes + combined pipe
                # actually we must account for count * sum_length.
                # To handle multiple merges, we should keep dp with maximum sum possible with partitions.

                # Actually problem is equivalent to maximizing sum over groups:
                # sum over groups: group_count * group_length
                # where groups are formed by merging adjacent pipes with joints.

                # So, at each step, dp[i] = max over k < i of dp[k] + (i-k)*(sum_pipes + sum_joints in [k,i))

                # Optimize with prefix sums:

                pass

        # Implementation with prefix sums and DP:

def main():
    import sys
    sys.setrecursionlimit(1 << 25)
    input = sys.stdin.readline

    while True:
        n = int(input())
        if n == 0:
            break
        p = list(map(int, input().split()))
        j = list(map(int, input().split()))
        prefix = [0]*(n+1)
        for i in range(n):
            prefix[i+1] = prefix[i] + p[i]
        prefix_j = [0]*(n)
        for i in range(n-1):
            prefix_j[i+1] = prefix_j[i] + j[i]

        # dp[i]: max salary using first i pipes
        dp = [0]*(n+1)
        # To optimize naive O(n^2), use convex hull trick

        # Each segment (k,i) length sum = prefix[i] - prefix[k] + prefix_j[i-1] - prefix_j[k]
        # count = i - k
        # value = count * segment_length + dp[k] = (i-k)*(prefix[i]-prefix[k]+prefix_j[i-1]-prefix_j[k]) + dp[k]
        # = (i-k)*(prefix[i] + prefix_j[i-1]) - (i-k)*(prefix[k] + prefix_j[k]) + dp[k]

        # We want to compute dp[i] = max over k < i of dp[k] + (i-k)* (prefix[i]+prefix_j[i-1]) - (i-k)*(prefix[k]+prefix_j[k])
        # = max over k < i of dp[k] - (prefix[k]+prefix_j[k]) * (i-k) + (i-k)*(prefix[i]+prefix_j[i-1])
        # since prefix[i]+prefix_j[i-1] is constant for given i, dp[i] = (prefix[i]+prefix_j[i-1])*i + max_k[dp[k] - (prefix[k]+prefix_j[k])*i - dp[k] + (prefix[k]+prefix_j[k])*k]

        # Rearranged for easier DP and convex hull usage:

        # Let A = prefix[i] + prefix_j[i-1]
        # Then dp[i] = max over k < i of dp[k] + (i-k)*A - (i-k)* B_k, where B_k = prefix[k]+prefix_j[k]
        # = max_k (dp[k] - B_k*(-k) ) + i*(A - B_k)

        # Let's build lines: y = m*x + c with m=B_k, c=dp[k] - B_k*k
        # At dp[i], x = i, value = line(x) + i*A

        # So we maintain lines with slope = B_k and intercept = dp[k] - B_k*k
        # and query at x=i, get max line value, then add i*A to get dp[i]

        class ConvexHull:
            def __init__(self):
                self.lines = []
                self.pos = 0

            # add line m x + b, slopes m in increasing order
            def add(self, m, b):
                while len(self.lines) >= 2 and self._is_bad(self.lines[-2], self.lines[-1], (m, b)):
                    self.lines.pop()
                self.lines.append((m, b))

            def _is_bad(self, l1, l2, l3):
                # Check if l2 is unnecessary
                return (l2[1]-l1[1])*(l1[0]-l3[0]) >= (l3[1]-l1[1])*(l1[0]-l2[0])

            def query(self, x):
                if not self.lines:
                    return -float('inf')
                # Move pos to best line for x
                while self.pos+1 < len(self.lines) and self._value(self.lines[self.pos], x) <= self._value(self.lines[self.pos+1], x):
                    self.pos += 1
                return self._value(self.lines[self.pos], x)

            def _value(self, line, x):
                return line[0]*x + line[1]

        dp[0] = 0
        ch = ConvexHull()
        B0 = prefix[0] + prefix_j[0]  # prefix_j[0] = 0
        ch.add(B0, dp[0] - B0*0)

        for i in range(1, n+1):
            A = prefix[i] + prefix_j[i-1] if i > 0 else 0
            val = ch.query(i) + i*A
            dp[i] = val
            if i < n:
                B = prefix[i] + prefix_j[i]
                ch.add(B, dp[i] - B*i)

        print(dp[n])

threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1822601556777954
    2. '\n' → logprob: -2.057260036468506
    3. '<|end|>' → logprob: -4.182260036468506
    4. '\' → logprob: -4.432260036468506
    5. 'newline' → logprob: -5.557260036468506
    6. 'import' → logprob: -6.057260036468506
    7. '<|end|>' → logprob: -6.682260036468506
    8. '```' → logprob: -7.432260036468506
    9. ';' → logprob: -7.557260036468506
    10. '' → logprob: -7.682260036468506

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8563584685325623
    2. '\n' → logprob: -1.231358528137207
    3. '
' → logprob: -2.106358528137207
    4. '\' → logprob: -2.606358528137207
    5. '

' → logprob: -3.606358528137207
    6. '.Thread' → logprob: -4.106358528137207
    7. '```' → logprob: -4.356358528137207
    8. 'import' → logprob: -4.731358528137207
    9. ',' → logprob: -5.231358528137207
    10. '' → logprob: -5.481358528137207

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7178463935852051
    2. 'def' → logprob: -1.717846393585205
    3. '```' → logprob: -1.717846393585205
    4. '\' → logprob: -2.467846393585205
    5. '\n' → logprob: -3.342846393585205
    6. ':' → logprob: -5.092846393585205
    7. 'import' → logprob: -5.092846393585205
    8. 'class' → logprob: -5.592846393585205
    9. '
' → logprob: -5.592846393585205
    10. ',' → logprob: -6.342846393585205

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030577950179576874
    2. '_' → logprob: -4.155578136444092
    3. ' _' → logprob: -4.905578136444092
    4. ' main' → logprob: -5.155578136444092
    5. ' start' → logprob: -8.530577659606934
    6. ' run' → logprob: -8.530577659606934
    7. '_main' → logprob: -8.780577659606934
    8. ' my' → logprob: -8.905577659606934
    9. '  ' → logprob: -9.780577659606934
    10. ' threading' → logprob: -9.780577659606934

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004567661788314581
    2. '():' → logprob: -5.754567623138428
    3. ':' → logprob: -7.004567623138428
    4. '(:' → logprob: -8.379568099975586
    5. '(
' → logprob: -9.379568099975586
    6. '):' → logprob: -9.879568099975586
    7. ' (' → logprob: -9.879568099975586
    8. ')' → logprob: -11.254568099975586
    9. '(":' → logprob: -11.504568099975586
    10. '```' → logprob: -11.879568099975586

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6161590218544006
    2. '(' → logprob: -1.7411589622497559
    3. '\' → logprob: -1.7411589622497559
    4. '    ' → logprob: -2.991158962249756
    5. ' ' → logprob: -3.491158962249756
    6. ' (' → logprob: -4.991158962249756
    7. '\n' → logprob: -5.741158962249756
    8. '    
' → logprob: -5.991158962249756
    9. ' threading' → logprob: -6.241158962249756
    10. '(thread' → logprob: -6.491158962249756

Token 10: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2027236223220825
    2. '    ' → logprob: -1.3277236223220825
    3. 't' → logprob: -1.8277236223220825
    4. ' t' → logprob: -2.327723503112793
    5. ' pass' → logprob: -3.577723503112793
    6. ' ' → logprob: -3.827723503112793
    7. ' print' → logprob: -3.827723503112793
    8. '_' → logprob: -4.202723503112793
    9. 'r' → logprob: -4.202723503112793
    10. ' threading' → logprob: -4.202723503112793

Token 11: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5444794297218323
    2. '()' → logprob: -1.2944793701171875
    3. '_' → logprob: -2.4194793701171875
    4. '_data' → logprob: -3.7944793701171875
    5. '_line' → logprob: -3.9194793701171875
    6. '_str' → logprob: -5.7944793701171875
    7. '_text' → logprob: -6.2944793701171875
    8. '_string' → logprob: -6.7944793701171875
    9. '('' → logprob: -7.1694793701171875
    10. '.' → logprob: -7.4194793701171875

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.012641259469091892
    2. 'sys' → logprob: -4.887641429901123
    3. ' input' → logprob: -5.387641429901123
    4. 'input' → logprob: -7.762641429901123
    5. '	sys' → logprob: -11.762640953063965
    6. ' ' → logprob: -12.137640953063965
    7. ' threading' → logprob: -12.262640953063965
    8. '=sys' → logprob: -12.887640953063965
    9. '(sys' → logprob: -13.637640953063965
    10. ' iter' → logprob: -14.137640953063965

Token 13: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5309720635414124
    2. '.stdin' → logprob: -0.9059720635414124
    3. '.readline' → logprob: -5.655972003936768
    4. ' .' → logprob: -5.905972003936768
    5. '.stdout' → logprob: -6.780972003936768
    6. '.argv' → logprob: -8.030972480773926
    7. '.std' → logprob: -10.280972480773926
    8. '.input' → logprob: -10.530972480773926
    9. '.setdefault' → logprob: -10.780972480773926
    10. '.stderr' → logprob: -11.655972480773926

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2231437712907791
    2. '.' → logprob: -1.7231438159942627
    3. '.read' → logprob: -3.8481438159942627
    4. '.Read' → logprob: -9.348143577575684
    5. '.readlines' → logprob: -10.598143577575684
    6. 'read' → logprob: -10.723143577575684
    7. '```' → logprob: -11.348143577575684
    8. ' .' → logprob: -11.973143577575684
    9. '.buffer' → logprob: -12.473143577575684
    10. '.READ' → logprob: -12.973143577575684

Token 15: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046415552496910095
    2. '(' → logprob: -3.1714155673980713
    3. '   ' → logprob: -6.921415328979492
    4. ')' → logprob: -7.171415328979492
    5. '(
' → logprob: -7.171415328979492
    6. '()
' → logprob: -7.421415328979492
    7. '
' → logprob: -10.421415328979492
    8. '()\' → logprob: -10.421415328979492
    9. '().' → logprob: -10.546415328979492
    10. '\' → logprob: -10.796415328979492

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21246974170207977
    2. '()' → logprob: -2.2124698162078857
    3. '    
' → logprob: -2.9624698162078857
    4. '(' → logprob: -3.7124698162078857
    5. '()
' → logprob: -6.212469577789307
    6. '(
' → logprob: -6.962469577789307
    7. '
' → logprob: -7.587469577789307
    8. '```' → logprob: -7.837469577789307
    9. ')' → logprob: -8.087470054626465
    10. ' ' → logprob: -8.712470054626465

Token 17: ' while' (ID: 2049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9265298843383789
    2. '   ' → logprob: -1.176529884338379
    3. '(' → logprob: -1.301529884338379
    4. 'data' → logprob: -4.426529884338379
    5. 'for' → logprob: -6.426529884338379
    6. ')' → logprob: -6.551529884338379
    7. 'user' → logprob: -6.676529884338379
    8. ' ' → logprob: -7.301529884338379
    9. '    
' → logprob: -7.426529884338379
    10. 's' → logprob: -7.551529884338379

Token 18: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01156833115965128
    2. '(True' → logprob: -5.386568546295166
    3. 'True' → logprob: -5.886568546295166
    4. ' ' → logprob: -6.136568546295166
    5. '(' → logprob: -6.511568546295166
    6. ' (' → logprob: -7.886568546295166
    7. ' not' → logprob: -9.386568069458008
    8. '  ' → logprob: -11.386568069458008
    9. ' ()' → logprob: -11.886568069458008
    10. '    ' → logprob: -12.011568069458008

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029129309114068747
    2. '():' → logprob: -6.127912998199463
    3. '):' → logprob: -8.377912521362305
    4. ' :' → logprob: -8.752912521362305
    5. '       ' → logprob: -9.127912521362305
    6. ':**' → logprob: -9.127912521362305
    7. '   ' → logprob: -10.377912521362305
    8. '(' → logprob: -10.627912521362305
    9. '(:' → logprob: -11.127912521362305
    10. '    ' → logprob: -11.252912521362305

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012301957234740257
    2. '    ' → logprob: -5.262301921844482
    3. '(' → logprob: -5.637301921844482
    4. ' (' → logprob: -7.137301921844482
    5. '        
' → logprob: -7.512301921844482
    6. '        ' → logprob: -7.637301921844482
    7. '   ' → logprob: -8.01230239868164
    8. ' ' → logprob: -8.01230239868164
    9. '      ' → logprob: -8.38730239868164
    10. ''' → logprob: -9.63730239868164

Token 21: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.25356054306030273
    2. '    ' → logprob: -2.7535605430603027
    3. 'line' → logprob: -2.7535605430603027
    4. '       ' → logprob: -3.3785605430603027
    5. '   ' → logprob: -3.3785605430603027
    6. 'data' → logprob: -5.003560543060303
    7. ' ' → logprob: -5.128560543060303
    8. 'user' → logprob: -5.628560543060303
    9. '        ' → logprob: -5.753560543060303
    10. ' user' → logprob: -6.628560543060303

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06810353696346283
    2. ' ==' → logprob: -3.568103551864624
    3. '=' → logprob: -3.943103551864624
    4. ' ' → logprob: -4.693103313446045
    5. ' >' → logprob: -5.193103313446045
    6. ' :=' → logprob: -6.318103313446045
    7. ' <' → logprob: -7.693103313446045
    8. ' <=' → logprob: -7.818103313446045
    9. '==' → logprob: -8.318103790283203
    10. '>' → logprob: -8.818103790283203

Token 23: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.21851378679275513
    2. ' int' → logprob: -2.0935137271881104
    3. 'input' → logprob: -2.8435137271881104
    4. 'int' → logprob: -4.2185139656066895
    5. ' ' → logprob: -9.593513488769531
    6. '    ' → logprob: -11.968513488769531
    7. ' n' → logprob: -12.343513488769531
    8. ' sys' → logprob: -12.468513488769531
    9. '   ' → logprob: -13.343513488769531
    10. ' s' → logprob: -14.218513488769531

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07890763878822327
    2. '(' → logprob: -2.5789077281951904
    3. 'input' → logprob: -11.57890796661377
    4. ' (' → logprob: -12.82890796661377
    5. '(
' → logprob: -12.82890796661377
    6. '(sys' → logprob: -13.82890796661377
    7. '(in' → logprob: -13.95390796661377
    8. '(

' → logprob: -14.45390796661377
    9. '('' → logprob: -15.57890796661377
    10. '()' → logprob: -15.70390796661377

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0021014907397329807
    2. '().' → logprob: -6.752101421356201
    3. '()' → logprob: -7.002101421356201
    4. ' ())' → logprob: -11.25210189819336
    5. '())
' → logprob: -12.50210189819336
    6. '()))' → logprob: -12.75210189819336
    7. '(' → logprob: -15.12710189819336
    8. ')' → logprob: -15.25210189819336
    9. '();)' → logprob: -15.37710189819336
    10. '())

' → logprob: -15.87710189819336

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38351598381996155
    2. ' ' → logprob: -2.2585160732269287
    3. '<|end|>' → logprob: -2.7585160732269287
    4. ' ==' → logprob: -2.8835160732269287
    5. '       ' → logprob: -3.1335160732269287
    6. '    ' → logprob: -4.25851583480835
    7. '        ' → logprob: -4.50851583480835
    8. 'if' (adapté à ' if') → logprob: -4.75851583480835
    9. '   ' → logprob: -5.50851583480835
    10. '<|end|>' → logprob: -5.88351583480835

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006559174973517656
    2. ' not' → logprob: -5.131559371948242
    3. 'n' → logprob: -7.381559371948242
    4. 'not' → logprob: -12.631559371948242
    5. ' ' → logprob: -12.756559371948242
    6. '	n' → logprob: -14.006559371948242
    7. ' ' → logprob: -14.256559371948242
    8. '(n' → logprob: -17.631559371948242
    9. 'n't' → logprob: -17.881559371948242
    10. ' n't' → logprob: -17.881559371948242

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011163247749209404
    2. '==' → logprob: -4.511163234710693
    3. ' <=' → logprob: -9.386163711547852
    4. ' <' → logprob: -10.886163711547852
    5. ' ' → logprob: -12.261163711547852
    6. '<=' → logprob: -12.511163711547852
    7. ')' → logprob: -13.511163711547852
    8. '=' → logprob: -14.136163711547852
    9. '<' → logprob: -14.261163711547852
    10. ')==' → logprob: -14.886163711547852

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008615399710834026
    2. '0' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.383615493774414
    4. ' -' → logprob: -16.758615493774414
    5. '  ' → logprob: -17.071115493774414
    6. ' EOF' → logprob: -17.508615493774414
    7. '-' → logprob: -18.258615493774414
    8. '_' → logprob: -18.758615493774414
    9. '=' → logprob: -18.821115493774414
    10. '   ' → logprob: -18.883615493774414

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00150390958879143
    2. ' ' → logprob: -6.501503944396973
    3. '-' → logprob: -13.626503944396973
    4. ' -' → logprob: -16.126502990722656
    5. '1' → logprob: -16.939002990722656
    6. '  ' → logprob: -16.939002990722656
    7. '```' → logprob: -16.939002990722656
    8. ''' → logprob: -17.251502990722656
    9. 'EOF' → logprob: -17.314002990722656
    10. '	' → logprob: -17.439002990722656

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036406738217920065
    2. ':
' → logprob: -8.000364303588867
    3. ':return' → logprob: -11.500364303588867
    4. ' :' → logprob: -11.750364303588867
    5. '       ' → logprob: -12.125364303588867
    6. '   ' → logprob: -12.750364303588867
    7. '	break' → logprob: -14.625364303588867
    8. ' break' → logprob: -14.750364303588867
    9. '```' → logprob: -15.625364303588867
    10. '<|end|>' → logprob: -15.750364303588867

Token 33: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18697085976600647
    2. '           ' → logprob: -1.811970829963684
    3. ':' → logprob: -5.5619707107543945
    4. '\n' → logprob: -6.4369707107543945
    5. '   ' → logprob: -6.9369707107543945
    6. '        ' → logprob: -8.561970710754395
    7. ' break' → logprob: -8.811970710754395
    8. '\' → logprob: -9.186970710754395
    9. '<|end|>' → logprob: -10.061970710754395
    10. '      ' → logprob: -10.186970710754395

Token 34: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5020121335983276
    2. '       ' → logprob: -1.6270121335983276
    3. '           ' → logprob: -1.8770121335983276
    4. 'break' (adapté à ' break') → logprob: -3.127012252807617
    5. '	break' → logprob: -7.877012252807617
    6. '   ' → logprob: -8.752012252807617
    7. '\n' → logprob: -8.877012252807617
    8. '        
' → logprob: -9.127012252807617
    9. '
' → logprob: -9.502012252807617
    10. '        ' → logprob: -9.627012252807617

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05649171397089958
    2. '<|end|>' → logprob: -4.306491851806641
    3. '\' → logprob: -4.431491851806641
    4. '
' → logprob: -4.931491851806641
    5. '\n' → logprob: -5.056491851806641
    6. '        
' → logprob: -5.556491851806641
    7. '   ' → logprob: -6.056491851806641
    8. '        ' → logprob: -6.056491851806641
    9. '    ' → logprob: -6.181491851806641
    10. ')' → logprob: -6.556491851806641

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03631537780165672
    2. '\' → logprob: -4.411315441131592
    3. '   ' → logprob: -5.036315441131592
    4. '<|end|>' → logprob: -5.161315441131592
    5. '        
' → logprob: -5.911315441131592
    6. '
' → logprob: -6.161315441131592
    7. '\n' → logprob: -6.411315441131592
    8. '```' → logprob: -6.911315441131592
    9. '    ' → logprob: -7.286315441131592
    10. '#' → logprob: -7.661315441131592

Token 37: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11519614607095718
    2. '        ' → logprob: -2.8651962280273438
    3. '<|end|>' → logprob: -3.8651962280273438
    4. ' ' → logprob: -4.240196228027344
    5. '    ' → logprob: -5.115196228027344
    6. '   ' → logprob: -5.490196228027344
    7. '<|end|>' → logprob: -6.115196228027344
    8. ')' → logprob: -7.365196228027344
    9. '\' → logprob: -7.615196228027344
    10. '      ' → logprob: -7.615196228027344

Token 38: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0274345763027668
    2. 'layers' → logprob: -4.777434349060059
    3. ' =' → logprob: -5.402434349060059
    4. 'e' → logprob: -6.027434349060059
    5. 'l' → logprob: -6.527434349060059
    6. 'ar' → logprob: -6.902434349060059
    7. '=' → logprob: -7.027434349060059
    8. 'laces' → logprob: -7.152434349060059
    9. 'ri' → logprob: -7.402434349060059
    10. 'refix' → logprob: -7.527434349060059

Token 39: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6269487738609314
    2. ' []' → logprob: -1.1269488334655762
    3. '[]' → logprob: -2.876948833465576
    4. ' list' → logprob: -3.126948833465576
    5. '[' → logprob: -3.626948833465576
    6. 'list' → logprob: -4.626948833465576
    7. '[n' → logprob: -5.876948833465576
    8. '[list' → logprob: -7.126948833465576
    9. '[int' → logprob: -7.501948833465576
    10. '[p' → logprob: -8.126948356628418

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011817998252809048
    2. '(' → logprob: -4.511817932128906
    3. '(range' → logprob: -7.511817932128906
    4. '(input' → logprob: -9.136817932128906
    5. '()' → logprob: -9.761817932128906
    6. '(int' → logprob: -10.011817932128906
    7. '(p' → logprob: -12.011817932128906
    8. '(filter' → logprob: -13.011817932128906
    9. 'map' → logprob: -13.761817932128906
    10. '(eval' → logprob: -14.136817932128906

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13064995408058167
    2. '(' → logprob: -2.130650043487549
    3. '(str' → logprob: -6.005650043487549
    4. '(lambda' → logprob: -7.005650043487549
    5. 'int' → logprob: -9.13064956665039
    6. '(
' → logprob: -9.25564956665039
    7. ')' → logprob: -10.00564956665039
    8. '<|end|>' → logprob: -10.25564956665039
    9. '(float' → logprob: -11.75564956665039
    10. '```' → logprob: -11.75564956665039

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8452640175819397
    2. '<|end|>' → logprob: -1.595263957977295
    3. '(' → logprob: -1.720263957977295
    4. '(input' → logprob: -2.220263957977295
    5. ',input' → logprob: -2.845263957977295
    6. ')' → logprob: -4.595263957977295
    7. '<|end|>' → logprob: -4.970263957977295
    8. ' ,' → logprob: -7.845263957977295
    9. '(p' → logprob: -7.970263957977295
    10. ',(' → logprob: -8.095264434814453

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759532451629639
    2. 'input' → logprob: -0.8259532451629639
    3. ',input' → logprob: -12.700953483581543
    4. 'lambda' → logprob: -12.950953483581543
    5. '(input' → logprob: -13.200953483581543
    6. '	input' → logprob: -13.200953483581543
    7. ' lambda' → logprob: -13.575953483581543
    8. '=input' → logprob: -13.700953483581543
    9. ')' → logprob: -14.700953483581543
    10. ' sys' → logprob: -14.950953483581543

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.698698704596609e-05
    2. '()' → logprob: -9.500097274780273
    3. '()))' → logprob: -11.000097274780273
    4. '())' → logprob: -12.750097274780273
    5. ' ().' → logprob: -14.375097274780273
    6. '())))' → logprob: -14.375097274780273
    7. '()));' → logprob: -14.875097274780273
    8. '(' → logprob: -15.250097274780273
    9. ')' → logprob: -15.375097274780273
    10. '()
' → logprob: -16.250097274780273

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16233617067337036
    2. 'strip' → logprob: -1.9123361110687256
    3. 'rstrip' → logprob: -6.162336349487305
    4. ' split' → logprob: -13.662336349487305
    5. 'read' → logprob: -14.287336349487305
    6. ' strip' → logprob: -15.287336349487305
    7. '(split' → logprob: -15.412336349487305
    8. 'rs' → logprob: -16.162336349487305
    9. 'spl' → logprob: -16.162336349487305
    10. ')' → logprob: -17.912336349487305

Token 46: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4482692778110504
    2. '()))' → logprob: -1.323269248008728
    3. ')' → logprob: -2.9482693672180176
    4. '(' → logprob: -3.8232693672180176
    5. '())' → logprob: -4.573269367218018
    6. '()' → logprob: -4.698269367218018
    7. ')))' → logprob: -6.948269367218018
    8. '(p' → logprob: -8.94826889038086
    9. '())))' → logprob: -9.57326889038086
    10. '(','' → logprob: -11.07326889038086

Token 47: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6318843364715576
    2. '       ' → logprob: -0.8818843364715576
    3. '<|end|>' → logprob: -3.6318843364715576
    4. ')' → logprob: -5.006884574890137
    5. '        
' → logprob: -5.756884574890137
    6. '
' → logprob: -5.756884574890137
    7. ' p' → logprob: -5.881884574890137
    8. ' ' → logprob: -6.131884574890137
    9. '    
' → logprob: -6.381884574890137
    10. '[' → logprob: -6.756884574890137

Token 48: ' j' (ID: 441)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6197327375411987
    2. ' stack' → logprob: -1.3697327375411987
    3. ' p' → logprob: -2.6197328567504883
    4. 'sorted' → logprob: -4.744732856750488
    5. ' positions' → logprob: -4.869732856750488
    6. 'p' → logprob: -4.869732856750488
    7. 's' → logprob: -4.994732856750488
    8. 'positions' → logprob: -4.994732856750488
    9. '       ' → logprob: -4.994732856750488
    10. 'pos' → logprob: -5.119732856750488

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12433967739343643
    2. ' =' → logprob: -2.2493395805358887
    3. 'udge' → logprob: -5.499339580535889
    4. '=i' → logprob: -6.624339580535889
    5. '=len' → logprob: -6.999339580535889
    6. 'j' → logprob: -7.374339580535889
    7. 'oin' → logprob: -7.624339580535889
    8. 'obs' → logprob: -7.624339580535889
    9. '```' → logprob: -7.624339580535889
    10. '   ' → logprob: -7.874339580535889

Token 50: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22671647369861603
    2. '0' → logprob: -1.6017165184020996
    3. ' n' → logprob: -7.7267165184021
    4. '1' → logprob: -7.9767165184021
    5. 'n' → logprob: -9.101716041564941
    6. ' -' → logprob: -9.101716041564941
    7. 'len' → logprob: -9.601716041564941
    8. ' len' → logprob: -9.851716041564941
    9. ' p' → logprob: -9.976716041564941
    10. '-' → logprob: -10.476716041564941

Token 51: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.012983035296201706
    2. '(' → logprob: -4.3879828453063965
    3. '(int' → logprob: -7.8879828453063965
    4. '(p' → logprob: -9.762983322143555
    5. '(range' → logprob: -11.137983322143555
    6. '(
' → logprob: -11.512983322143555
    7. '()' → logprob: -12.012983322143555
    8. 'map' → logprob: -13.637983322143555
    9. '.map' → logprob: -13.887983322143555
    10. '((' → logprob: -13.887983322143555

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.6550729419104755e-05
    2. '<int' → logprob: -11.250036239624023
    3. '=int' → logprob: -11.625036239624023
    4. ',int' → logprob: -12.125036239624023
    5. '[int' → logprob: -12.625036239624023
    6. '(' → logprob: -13.375036239624023
    7. 'int' → logprob: -13.500036239624023
    8. ']int' → logprob: -13.625036239624023
    9. ')' → logprob: -13.750036239624023
    10. ':int' → logprob: -16.000036239624023

Token 53: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02001691237092018
    2. ',int' → logprob: -4.020017147064209
    3. ',' → logprob: -6.895017147064209
    4. '<int' → logprob: -8.39501667022705
    5. '=int' → logprob: -8.52001667022705
    6. 'int' → logprob: -8.77001667022705
    7. '[int' → logprob: -9.39501667022705
    8. '(' → logprob: -9.52001667022705
    9. ')' → logprob: -10.02001667022705
    10. ':int' → logprob: -11.52001667022705

Token 54: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10453144460916519
    2. ' int' → logprob: -2.9795315265655518
    3. 'input' → logprob: -3.6045315265655518
    4. ' input' → logprob: -3.8545315265655518
    5. '(int' → logprob: -10.104531288146973
    6. ' sys' → logprob: -12.979531288146973
    7. '<int' → logprob: -13.354531288146973
    8. ',int' → logprob: -13.479531288146973
    9. 'sys' → logprob: -13.854531288146973
    10. ' ' → logprob: -13.854531288146973

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.625003814697266
    3. '.' → logprob: -16.000003814697266
    4. '()).' → logprob: -16.250003814697266
    5. '()))' → logprob: -17.000003814697266
    6. ' ().' → logprob: -17.000003814697266
    7. '().'' → logprob: -17.375003814697266
    8. '().__' → logprob: -17.625003814697266
    9. '())' → logprob: -17.875003814697266
    10. '(),' → logprob: -18.000003814697266

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.537868779967539e-06
    2. 'strip' → logprob: -11.750008583068848
    3. ' split' → logprob: -14.875008583068848
    4. 'rstrip' → logprob: -15.625008583068848
    5. 'plit' → logprob: -16.75000762939453
    6. 'read' → logprob: -17.00000762939453
    7. '.split' → logprob: -17.62500762939453
    8. '(split' → logprob: -17.75000762939453
    9. 'spl' → logprob: -19.25000762939453
    10. ')' → logprob: -19.75000762939453

Token 57: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04501476511359215
    2. '))' → logprob: -3.4200148582458496
    3. '()' → logprob: -5.04501485824585
    4. '())' → logprob: -5.42001485824585
    5. '(' → logprob: -8.795014381408691
    6. '()))
' → logprob: -8.795014381408691
    7. ')' → logprob: -9.420014381408691
    8. '()));' → logprob: -10.795014381408691
    9. '()))

' → logprob: -11.920014381408691
    10. '   ' → logprob: -12.170014381408691

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002857535844668746
    2. '        
' → logprob: -7.002857685089111
    3. 't' → logprob: -7.752857685089111
    4. '<|end|>' → logprob: -8.002857208251953
    5. '   ' → logprob: -8.877857208251953
    6. 's' → logprob: -8.877857208251953
    7. 'n' → logprob: -9.002857208251953
    8. ' for' → logprob: -9.127857208251953
    9. '[' → logprob: -9.252857208251953
    10. '#' → logprob: -9.752857208251953

Token 59: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5921359062194824
    2. 's' → logprob: -2.8421359062194824
    3. 'r' → logprob: -2.9671359062194824
    4. 'd' → logprob: -2.9671359062194824
    5. '   ' → logprob: -3.8421359062194824
    6. 'p' → logprob: -3.8421359062194824
    7. ' result' → logprob: -3.9671359062194824
    8. '        
' → logprob: -4.217135906219482
    9. 't' → logprob: -4.342135906219482
    10. 'result' → logprob: -4.467135906219482

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004393440205603838
    2. '=' → logprob: -5.879393577575684
    3. '[' → logprob: -6.629393577575684
    4. ' ' → logprob: -8.504393577575684
    5. '_' → logprob: -10.129393577575684
    6. ' =[' → logprob: -11.754393577575684
    7. '[]' → logprob: -12.879393577575684
    8. ')' → logprob: -13.129393577575684
    9. ',' → logprob: -13.379393577575684
    10. '[:]' → logprob: -13.879393577575684

Token 61: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3043677508831024
    2. ' [' → logprob: -1.5543677806854248
    3. '[[' → logprob: -3.554367780685425
    4. ' [[' → logprob: -3.804367780685425
    5. '[p' → logprob: -9.554368019104004
    6. '[-' → logprob: -9.929368019104004
    7. '[n' → logprob: -10.054368019104004
    8. '[len' → logprob: -10.804368019104004
    9. '[j' → logprob: -11.304368019104004
    10. '{}' → logprob: -12.929368019104004

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03976072371006012
    2. '[' → logprob: -3.4147608280181885
    3. ' [' → logprob: -6.039760589599609
    4. 'float' → logprob: -6.289760589599609
    5. 'False' → logprob: -6.789760589599609
    6. ' ' → logprob: -7.914760589599609
    7. '-' → logprob: -9.28976058959961
    8. ' float' → logprob: -9.91476058959961
    9. '(' → logprob: -10.16476058959961
    10. '1' → logprob: -10.28976058959961

Token 63: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02582097239792347
    2. ' ]' → logprob: -4.275821208953857
    3. ']*(' → logprob: -4.650821208953857
    4. ']*' → logprob: -6.525821208953857
    5. ' for' → logprob: -7.900821208953857
    6. ']+' → logprob: -9.0258207321167
    7. 'for' → logprob: -10.1508207321167
    8. ',' → logprob: -10.6508207321167
    9. '])' → logprob: -12.6508207321167
    10. '[' → logprob: -12.9008207321167

Token 64: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018467707559466362
    2. '100' → logprob: -7.501846790313721
    3. '(n' → logprob: -8.001846313476562
    4. '101' → logprob: -8.001846313476562
    5. ' n' → logprob: -9.376846313476562
    6. '1' → logprob: -9.626846313476562
    7. '11' → logprob: -9.751846313476562
    8. 'len' → logprob: -9.751846313476562
    9. '2' → logprob: -9.876846313476562
    10. '10' → logprob: -10.376846313476562

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000340945553034544
    2. ' +' → logprob: -8.000341415405273
    3. ')' → logprob: -12.750341415405273
    4. '+)' → logprob: -13.375341415405273
    5. '+
' → logprob: -14.500341415405273
    6. '*' → logprob: -15.125341415405273
    7. '1' → logprob: -15.875341415405273
    8. '```' → logprob: -17.625341415405273
    9. '2' → logprob: -18.000341415405273
    10. ' )' → logprob: -18.250341415405273

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037561915814876556
    2. ' ' → logprob: -8.500375747680664
    3. '2' → logprob: -8.750375747680664
    4. '10' → logprob: -12.125375747680664
    5. '5' → logprob: -13.000375747680664
    6. '100' → logprob: -13.500375747680664
    7. '   ' → logprob: -13.625375747680664
    8. '3' → logprob: -13.750375747680664
    9. '  ' → logprob: -14.687875747680664
    10. '50' → logprob: -15.187875747680664

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6934557505883276e-05
    2. ' )' → logprob: -10.000057220458984
    3. ')
' → logprob: -11.750057220458984
    4. '<|end|>' → logprob: -14.500057220458984
    5. '))' → logprob: -14.750057220458984
    6. '}' → logprob: -15.000057220458984
    7. '*' → logprob: -15.375057220458984
    8. '       ' → logprob: -15.375057220458984
    9. ']' → logprob: -15.625057220458984
    10. '`)' → logprob: -15.750057220458984

Token 68: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.832851231098175
    2. '
' → logprob: -1.5828511714935303
    3. '<|end|>' → logprob: -1.7078511714935303
    4. '       ' → logprob: -3.0828511714935303
    5. ' 
' → logprob: -3.2078511714935303
    6. '   ' → logprob: -3.3328511714935303
    7. '    
' → logprob: -3.9578511714935303
    8. 'for' → logprob: -4.207851409912109
    9. ' ' → logprob: -5.082851409912109
    10. '    ' → logprob: -5.207851409912109

Token 69: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17080815136432648
    2. 'for' → logprob: -1.92080819606781
    3. ' ' → logprob: -5.0458083152771
    4. '	for' → logprob: -6.6708083152771
    5. ' 
' → logprob: -7.0458083152771
    6. '   ' → logprob: -7.2958083152771
    7. '    ' → logprob: -7.4208083152771
    8. '\t' → logprob: -9.295807838439941
    9. 'dp' → logprob: -9.295807838439941
    10. '       ' → logprob: -9.420807838439941

Token 70: ' dp' (ID: 21546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.572394609451294
    2. ' ' → logprob: -1.197394609451294
    3. 'for' → logprob: -2.322394609451294
    4. '    ' → logprob: -4.572394371032715
    5. ' \' → logprob: -5.197394371032715
    6. '	for' → logprob: -5.572394371032715
    7. '\t' → logprob: -5.822394371032715
    8. '   ' → logprob: -6.072394371032715
    9. 'f' → logprob: -6.197394371032715
    10. ' ' → logprob: -6.197394371032715

Token 71: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11177173256874084
    2. '<|end|>' → logprob: -2.736771821975708
    3. ' =' → logprob: -3.736771821975708
    4. '[i' → logprob: -5.236771583557129
    5. ' ' → logprob: -5.486771583557129
    6. '<|end|>' → logprob: -6.361771583557129
    7. ' for' → logprob: -6.986771583557129
    8. '[j' → logprob: -7.111771583557129
    9. ')' → logprob: -7.361771583557129
    10. '=' → logprob: -7.861771583557129

Token 72: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17384929955005646
    2. ' ]' → logprob: -1.92384934425354
    3. '+' → logprob: -4.673849105834961
    4. ' +' → logprob: -6.923849105834961
    5. ']=' → logprob: -7.298849105834961
    6. '-' → logprob: -7.423849105834961
    7. ')' → logprob: -7.923849105834961
    8. '[' → logprob: -8.298849105834961
    9. ' -' → logprob: -8.423849105834961
    10. ' )' → logprob: -8.548849105834961

Token 73: ' max' (ID: 2999)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0152052640914917
    2. ' The' → logprob: -2.0152053833007812
    3. ' maximum' → logprob: -2.0152053833007812
    4. ' the' → logprob: -2.1402053833007812
    5. ' max' → logprob: -3.3902053833007812
    6. 'The' → logprob: -3.5152053833007812
    7. ' p' → logprob: -3.7652053833007812
    8. ' 최대' → logprob: -3.7652053833007812
    9. 'Maximum' → logprob: -4.140205383300781
    10. '最大' → logprob: -4.265205383300781

Token 74: ' salary' (ID: 21627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4624159336090088
    2. '_' → logprob: -2.212415933609009
    3. '_score' → logprob: -2.962415933609009
    4. '_profit' → logprob: -3.212415933609009
    5. '_value' → logprob: -3.337415933609009
    6. 'score' → logprob: -4.08741569519043
    7. 'profit' → logprob: -4.21241569519043
    8. '_sum' → logprob: -4.46241569519043
    9. 'sum' → logprob: -4.71241569519043
    10. '    ' → logprob: -4.83741569519043

Token 75: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25728851556777954
    2. ' for' → logprob: -2.0072884559631348
    3. ' ' → logprob: -3.2572884559631348
    4. '=' → logprob: -3.7572884559631348
    5. ' at' → logprob: -4.882288455963135
    6. ' up' → logprob: -4.882288455963135
    7. '<|end|>' → logprob: -5.257288455963135
    8. ' if' → logprob: -6.632288455963135
    9. ' with' → logprob: -6.757288455963135
    10. '   ' → logprob: -7.257288455963135

Token 76: ' first' (ID: 1577)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9418905973434448
    2. ' the' → logprob: -1.0668905973434448
    3. ' first' → logprob: -1.8168905973434448
    4. ' employees' → logprob: -3.8168907165527344
    5. 'the' → logprob: -3.9418907165527344
    6. 'i' → logprob: -4.066890716552734
    7. ' p' → logprob: -4.566890716552734
    8. ' players' → logprob: -4.691890716552734
    9. 'first' → logprob: -5.066890716552734
    10. ' up' → logprob: -5.066890716552734

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.632691502571106
    2. ' i' → logprob: -0.757691502571106
    3. ' ' → logprob: -10.257691383361816
    4. '`' → logprob: -10.882691383361816
    5. '	i' → logprob: -11.382691383361816
    6. '[i' → logprob: -11.507691383361816
    7. ''i' → logprob: -12.007691383361816
    8. 'space' → logprob: -12.632691383361816
    9. ' `' → logprob: -13.382691383361816
    10. '_i' → logprob: -14.007691383361816

Token 78: ' pipes' (ID: 46808)
  Prédit: ' employees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' employees' → logprob: -1.043630838394165
    2. ' players' → logprob: -2.168630838394165
    3. ' workers' → logprob: -2.293630838394165
    4. 'employees' → logprob: -2.293630838394165
    5. ' programmers' → logprob: -2.418630838394165
    6. 'developers' → logprob: -3.418630838394165
    7. 'players' → logprob: -3.543630838394165
    8. 'program' → logprob: -3.543630838394165
    9. ' developers' → logprob: -3.793630838394165
    10. ' elements' → logprob: -4.043630599975586

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1564584970474243
    2. '<|end|>' → logprob: -1.5314584970474243
    3. '   ' → logprob: -2.0314583778381348
    4. ' ' → logprob: -2.0314583778381348
    5. ' for' → logprob: -3.0314583778381348
    6. ' 
' → logprob: -3.2814583778381348
    7. ' \' → logprob: -3.4064583778381348
    8. '\n' → logprob: -3.9064583778381348
    9. '        
' → logprob: -4.531458377838135
    10. '  
' → logprob: -5.156458377838135

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12229393422603607
    2. '   ' → logprob: -3.3722939491271973
    3. ' for' → logprob: -3.6222939491271973
    4. '<|end|>' → logprob: -3.8722939491271973
    5. ' ' → logprob: -4.372293949127197
    6. ' 
' → logprob: -4.872293949127197
    7. '        
' → logprob: -5.372293949127197
    8. '\n' → logprob: -6.622293949127197
    9. '    ' → logprob: -6.747293949127197
    10. ' \' → logprob: -7.247293949127197

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20201966166496277
    2. 'for' (adapté à ' for') → logprob: -1.7020196914672852
    3. '	for' → logprob: -8.202019691467285
    4. '   ' → logprob: -8.327019691467285
    5. ' 
' → logprob: -10.077019691467285
    6. ' ' → logprob: -10.452019691467285
    7. '
' → logprob: -12.452019691467285
    8. ' \' → logprob: -12.577019691467285
    9. ' ' → logprob: -12.952019691467285
    10. '       ' → logprob: -13.452019691467285

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0005944972508586943
    2. 'i' → logprob: -7.625594615936279
    3. ' ' → logprob: -9.375594139099121
    4. '	i' → logprob: -12.125594139099121
    5. ' _' → logprob: -12.500594139099121
    6. ' in' → logprob: -12.750594139099121
    7. '_' → logprob: -13.000594139099121
    8. ' range' → logprob: -13.375594139099121
    9. '_i' → logprob: -13.500594139099121
    10. 'range' → logprob: -13.625594139099121

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005461663007736206
    2. 'in' → logprob: -5.255461692810059
    3. ' ' → logprob: -8.505461692810059
    4. '	in' → logprob: -11.255461692810059
    5. '```' → logprob: -13.130461692810059
    6. '1' → logprob: -13.380461692810059
    7. '+' → logprob: -13.630461692810059
    8. '<|end|>' → logprob: -13.630461692810059
    9. '  ' → logprob: -13.755461692810059
    10. '    ' → logprob: -13.755461692810059

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005242652725428343
    2. 'range' → logprob: -5.255242824554443
    3. ' ' → logprob: -12.380242347717285
    4. ' xrange' → logprob: -13.255242347717285
    5. '	range' → logprob: -13.630242347717285
    6. '(range' → logprob: -14.255242347717285
    7. '   ' → logprob: -15.505242347717285
    8. '  ' → logprob: -15.630242347717285
    9. '[' → logprob: -15.755242347717285
    10. 'ange' → logprob: -15.880242347717285

Token 85: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004754664842039347
    2. ' (' → logprob: -5.379754543304443
    3. ' ' → logprob: -9.254755020141602
    4. '(n' → logprob: -10.629755020141602
    5. '1' → logprob: -11.504755020141602
    6. '	' → logprob: -13.129755020141602
    7. '(i' → logprob: -13.754755020141602
    8. '(
' → logprob: -14.254755020141602
    9. '   ' → logprob: -15.754755020141602
    10. '  ' → logprob: -16.2547550201416

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03073379211127758
    2. 'n' → logprob: -3.530733823776245
    3. ' n' → logprob: -7.655733585357666
    4. ' ' → logprob: -7.780733585357666
    5. '   ' → logprob: -9.405734062194824
    6. '(n' → logprob: -12.530734062194824
    7. '(' → logprob: -13.655734062194824
    8. '2' → logprob: -13.905734062194824
    9. '	n' → logprob: -14.280734062194824
    10. ')n' → logprob: -14.280734062194824

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5300072431564331
    2. ' ,' → logprob: -0.9050072431564331
    3. ' ' → logprob: -5.405007362365723
    4. ',n' → logprob: -6.905007362365723
    5. ' )' → logprob: -7.655007362365723
    6. '(n' → logprob: -8.655007362365723
    7. '(' → logprob: -8.655007362365723
    8. '        ' → logprob: -9.780007362365723
    9. '    ' → logprob: -9.780007362365723
    10. ' n' → logprob: -9.780007362365723

Token 88: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0699601098895073
    2. 'n' → logprob: -2.694960117340088
    3. '	n' → logprob: -11.44495964050293
    4. ' ' → logprob: -12.06995964050293
    5. '    ' → logprob: -12.44495964050293
    6. ')' → logprob: -14.19495964050293
    7. '   ' → logprob: -14.31995964050293
    8. ')n' → logprob: -14.44495964050293
    9. '(n' → logprob: -14.69495964050293
    10. '<|end|>' → logprob: -14.94495964050293

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0336616076529026
    2. ' +' → logprob: -3.4086616039276123
    3. '):
' → logprob: -11.783661842346191
    4. '   ' → logprob: -13.283661842346191
    5. '):' → logprob: -13.408661842346191
    6. '1' → logprob: -13.658661842346191
    7. '()+' → logprob: -14.283661842346191
    8. ')+' → logprob: -14.283661842346191
    9. '+
' → logprob: -14.408661842346191
    10. '       ' → logprob: -14.658661842346191

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010616567305987701
    2. ' ' → logprob: -9.375105857849121
    3. ')' → logprob: -11.250105857849121
    4. '   ' → logprob: -13.000105857849121
    5. '```' → logprob: -13.000105857849121
    6. '       ' → logprob: -13.375105857849121
    7. '):
' → logprob: -14.250105857849121
    8. '+' → logprob: -14.500105857849121
    9. '2' → logprob: -14.750105857849121
    10. '-' → logprob: -15.625105857849121

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005019801668822765
    2. ':' → logprob: -5.630019664764404
    3. '):
' → logprob: -6.880019664764404
    4. ' ):' → logprob: -8.380020141601562
    5. ')' → logprob: -8.880020141601562
    6. '):
' → logprob: -12.005020141601562
    7. ',' → logprob: -12.130020141601562
    8. '       ' → logprob: -12.880020141601562
    9. '   ' → logprob: -13.130020141601562
    10. ' :' → logprob: -13.880020141601562

Token 92: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4211694002151489
    2. '       ' → logprob: -1.671169400215149
    3. '        ' → logprob: -2.5461692810058594
    4. '<|end|>' → logprob: -3.5461692810058594
    5. ':' → logprob: -4.546169281005859
    6. '    ' → logprob: -4.921169281005859
    7. '           ' → logprob: -5.296169281005859
    8. '   ' → logprob: -5.296169281005859
    9. ' :' → logprob: -5.921169281005859
    10. ' 
' → logprob: -6.046169281005859

Token 93: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0824657678604126
    2. ' for' → logprob: -1.2074657678604126
    3. ' dp' → logprob: -1.5824657678604126
    4. 'for' → logprob: -2.457465648651123
    5. ' if' → logprob: -3.582465648651123
    6. 'if' → logprob: -4.707465648651123
    7. '       ' → logprob: -4.957465648651123
    8. '   ' → logprob: -5.082465648651123
    9. ' ' → logprob: -5.207465648651123
    10. '    ' → logprob: -5.707465648651123

Token 94: ' not' (ID: 625)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.2485064268112183
    2. ' if' → logprob: -1.4985064268112183
    3. ' for' → logprob: -1.6235064268112183
    4. 'dp' → logprob: -2.123506546020508
    5. 'if' → logprob: -2.623506546020508
    6. 'for' → logprob: -2.748506546020508
    7. ' p' → logprob: -3.998506546020508
    8. 'p' → logprob: -5.998506546020508
    9. ' j' → logprob: -6.248506546020508
    10. 'max' → logprob: -6.498506546020508

Token 95: ' connect' (ID: 4837)
  Prédit: ' taking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' taking' → logprob: -0.7736743092536926
    2. ' using' → logprob: -0.8986743092536926
    3. 'using' → logprob: -3.023674249649048
    4. 'taking' → logprob: -3.398674249649048
    5. '_using' → logprob: -3.648674249649048
    6. '_taken' → logprob: -4.773674488067627
    7. ' choosing' → logprob: -5.773674488067627
    8. 'Taking' → logprob: -6.523674488067627
    9. ' including' → logprob: -6.648674488067627
    10. 'dp' → logprob: -6.648674488067627

Token 96: ' pipe' (ID: 22906)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6383693814277649
    2. ' dp' → logprob: -2.13836932182312
    3. 'dp' → logprob: -2.26336932182312
    4. '[i' → logprob: -2.63836932182312
    5. ' ' → logprob: -3.76336932182312
    6. ' or' → logprob: -3.88836932182312
    7. 'ing' → logprob: -3.88836932182312
    8. 's' → logprob: -4.263369560241699
    9. '   ' → logprob: -4.388369560241699
    10. '           ' → logprob: -4.763369560241699

Token 97: ' i' (ID: 575)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.46359002590179443
    2. 'dp' → logprob: -1.4635900259017944
    3. '[i' → logprob: -2.463590145111084
    4. ')' → logprob: -4.088590145111084
    5. 's' → logprob: -4.338590145111084
    6. '_dp' → logprob: -4.838590145111084
    7. '       ' → logprob: -5.588590145111084
    8. '(dp' → logprob: -5.838590145111084
    9. '   ' → logprob: -6.463590145111084
    10. ' =' → logprob: -6.588590145111084

Token 98: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2283899486064911
    2. ',' → logprob: -2.2283899784088135
    3. ':' → logprob: -3.4783899784088135
    4. '   ' → logprob: -4.978389739990234
    5. '           ' → logprob: -4.978389739990234
    6. '<|end|>' → logprob: -4.978389739990234
    7. '       ' → logprob: -5.103389739990234
    8. ' =' → logprob: -5.228389739990234
    9. ' or' → logprob: -5.353389739990234
    10. '),' → logprob: -5.978389739990234

Token 99: ' i' (ID: 575)
  Prédit: 'pipe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pipe' → logprob: -0.9657595157623291
    2. 'j' → logprob: -1.590759515762329
    3. ' j' → logprob: -1.840759515762329
    4. 'p' → logprob: -2.590759515762329
    5. ' pipe' → logprob: -2.715759515762329
    6. 'dp' → logprob: -3.215759515762329
    7. ' p' → logprob: -3.965759515762329
    8. 'the' → logprob: -4.46575927734375
    9. ' dp' → logprob: -4.71575927734375
    10. 'previous' → logprob: -5.09075927734375

Token 100: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01850622147321701
    2. ' -' → logprob: -4.018506050109863
    3. ')' → logprob: -8.768506050109863
    4. ' ' → logprob: -10.018506050109863
    5. '   ' → logprob: -10.018506050109863
    6. '       ' → logprob: -11.018506050109863
    7. 'nd' → logprob: -11.143506050109863
    8. '<|end|>' → logprob: -11.143506050109863
    9. 's' → logprob: -11.893506050109863
    10. '```' → logprob: -11.956006050109863

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4060561776859686e-05
    2. '2' → logprob: -11.375043869018555
    3. '-' → logprob: -11.500043869018555
    4. ' ' → logprob: -11.750043869018555
    5. '```' → logprob: -12.750043869018555
    6. '   ' → logprob: -13.000043869018555
    7. 'i' → logprob: -13.125043869018555
    8. 'prev' → logprob: -13.625043869018555
    9. 'j' → logprob: -14.250043869018555
    10. '`' → logprob: -14.312543869018555

Token 102: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6351978778839111
    2. ':' → logprob: -1.3851978778839111
    3. ',' → logprob: -3.135197877883911
    4. '       ' → logprob: -3.135197877883911
    5. '):' → logprob: -3.260197877883911
    6. '           ' → logprob: -3.385197877883911
    7. '   ' → logprob: -4.760197639465332
    8. ' or' → logprob: -4.760197639465332
    9. '<|end|>' → logprob: -5.010197639465332
    10. ' and' → logprob: -5.135197639465332

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24970385432243347
    2. '       ' → logprob: -1.7497038841247559
    3. '<|end|>' → logprob: -4.624703884124756
    4. ',' → logprob: -4.749703884124756
    5. ' if' → logprob: -4.749703884124756
    6. ')' → logprob: -4.874703884124756
    7. ':' → logprob: -6.499703884124756
    8. 'dp' → logprob: -6.499703884124756
    9. '
' → logprob: -6.999703884124756
    10. ' and' → logprob: -7.124703884124756

Token 104: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2857432961463928
    2. ' dp' → logprob: -1.410743236541748
    3. '           ' → logprob: -5.535743236541748
    4. '
' → logprob: -8.160743713378906
    5. '	dp' → logprob: -9.160743713378906
    6. '_dp' → logprob: -9.910743713378906
    7. ')' → logprob: -10.035743713378906
    8. ',' → logprob: -10.285743713378906
    9. '(dp' → logprob: -10.410743713378906
    10. '```' → logprob: -11.160743713378906

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001290236134082079
    2. '[' → logprob: -6.751290321350098
    3. '[I' → logprob: -9.751290321350098
    4. ' [' → logprob: -10.001290321350098
    5. ')[' → logprob: -12.501290321350098
    6. '```' → logprob: -12.751290321350098
    7. '][' → logprob: -13.501290321350098
    8. '\[' → logprob: -13.626290321350098
    9. ' `[' → logprob: -13.876290321350098
    10. '[j' → logprob: -14.001290321350098

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002320460742339492
    2. ' ]' → logprob: -6.252320289611816
    3. ']=' → logprob: -7.877320289611816
    4. ')' → logprob: -11.877320289611816
    5. '=' → logprob: -13.502320289611816
    6. '])' → logprob: -13.502320289611816
    7. '[' → logprob: -14.377320289611816
    8. '-' → logprob: -14.752320289611816
    9. '']' → logprob: -15.127320289611816
    10. ')]' → logprob: -15.252320289611816

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062031541019678116
    2. '=' → logprob: -2.8120315074920654
    3. '=max' → logprob: -9.687031745910645
    4. 'max' → logprob: -13.812031745910645
    5. ' +=' → logprob: -15.187031745910645
    6. ' max' → logprob: -15.312031745910645
    7. '+=' → logprob: -16.562030792236328
    8. ' ' → logprob: -16.812030792236328
    9. '>' → logprob: -17.062030792236328
    10. ',' → logprob: -17.812030792236328

Token 108: ' dp' (ID: 21546)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.224192813038826
    2. ' dp' → logprob: -1.7241928577423096
    3. 'max' → logprob: -4.2241926193237305
    4. 'dp' → logprob: -4.8491926193237305
    5. ' p' → logprob: -10.84919261932373
    6. ' ' → logprob: -12.09919261932373
    7. '	dp' → logprob: -12.22419261932373
    8. 'p' → logprob: -12.47419261932373
    9. '    ' → logprob: -13.03669261932373
    10. '            ' → logprob: -13.09919261932373

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.625
    3. '[I' → logprob: -19.125
    4. 'i' → logprob: -19.25
    5. '```' → logprob: -19.875
    6. '[j' → logprob: -20.125
    7. ' [' → logprob: -20.75
    8. '
' → logprob: -21.375
    9. '[
' → logprob: -21.375
    10. '\[' → logprob: -21.875

Token 110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008249913225881755
    2. ' -' → logprob: -7.500824928283691
    3. '[i' → logprob: -8.500824928283691
    4. '[-' → logprob: -10.500824928283691
    5. ']' → logprob: -10.625824928283691
    6. '[' → logprob: -12.000824928283691
    7. 'i' → logprob: -12.000824928283691
    8. '1' → logprob: -13.500824928283691
    9. ']-' → logprob: -13.500824928283691
    10. '-i' → logprob: -13.875824928283691

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.250041007995605
    3. '```' → logprob: -14.062541007995605
    4. '<|end|>' → logprob: -14.250041007995605
    5. '-' → logprob: -14.375041007995605
    6. '0' → logprob: -14.562541007995605
    7. ')' → logprob: -14.562541007995605
    8. '   ' → logprob: -14.687541007995605
    9. '2' → logprob: -15.312541007995605
    10. ']' → logprob: -15.375041007995605

Token 112: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052986059337854385
    2. ' )' → logprob: -3.5529861450195312
    3. ')
' → logprob: -4.927986145019531
    4. ']' → logprob: -5.552986145019531
    5. '       ' → logprob: -5.677986145019531
    6. ' +' → logprob: -6.302986145019531
    7. '+' → logprob: -6.427986145019531
    8. ')+' → logprob: -6.552986145019531
    9. '])' → logprob: -7.302986145019531
    10. ',' → logprob: -7.302986145019531

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7277235388755798
    2. '
' → logprob: -0.9777235388755798
    3. ' +' → logprob: -2.1027235984802246
    4. '<|end|>' → logprob: -4.477723598480225
    5. '+
' → logprob: -5.727723598480225
    6. '
' → logprob: -6.727723598480225
    7. '       ' → logprob: -7.227723598480225
    8. ' if' → logprob: -7.977723598480225
    9. ' 
' → logprob: -8.352723121643066
    10. '<|end|>' → logprob: -8.477723121643066

Token 114: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04714634269475937
    2. ' p' → logprob: -3.2971463203430176
    3. 'j' → logprob: -4.797146320343018
    4. ' j' → logprob: -7.297146320343018
    5. '   ' → logprob: -10.047146797180176
    6. ' ' → logprob: -10.297146797180176
    7. 'max' → logprob: -11.047146797180176
    8. '    ' → logprob: -12.047146797180176
    9. '  ' → logprob: -12.109646797180176
    10. '(p' → logprob: -12.109646797180176

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.500014305114746
    3. '[j' → logprob: -12.750014305114746
    4. '][' → logprob: -14.250014305114746
    5. '[s' → logprob: -15.375014305114746
    6. 'i' → logprob: -15.625014305114746
    7. '```' → logprob: -15.875014305114746
    8. '\[' → logprob: -15.875014305114746
    9. '[I' → logprob: -16.000015258789062
    10. 's' → logprob: -17.000015258789062

Token 116: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0020183324813842773
    2. ' -' → logprob: -6.252018451690674
    3. ']' → logprob: -10.502017974853516
    4. ']-' → logprob: -11.127017974853516
    5. '[i' → logprob: -11.252017974853516
    6. '1' → logprob: -11.377017974853516
    7. 'i' → logprob: -11.377017974853516
    8. '[' → logprob: -12.877017974853516
    9. '-i' → logprob: -13.127017974853516
    10. '   ' → logprob: -13.377017974853516

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.750004768371582
    3. '-' → logprob: -14.500004768371582
    4. '2' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '```' → logprob: -15.500004768371582
    7. '۱' → logprob: -16.625003814697266
    8. ')' → logprob: -17.187503814697266
    9. ']' → logprob: -17.187503814697266
    10. '１' → logprob: -17.437503814697266

Token 118: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27718237042427063
    2. ')' → logprob: -1.9021823406219482
    3. '])' → logprob: -2.4021823406219482
    4. ')]' → logprob: -7.152182579040527
    5. '       ' → logprob: -7.277182579040527
    6. ' ]' → logprob: -8.652182579040527
    7. ')])' → logprob: -9.402182579040527
    8. ' )' → logprob: -9.527182579040527
    9. ']
' → logprob: -9.652182579040527
    10. '   ' → logprob: -9.652182579040527

Token 119: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08655034005641937
    2. ' 
' → logprob: -2.836550235748291
    3. '       ' → logprob: -5.336550235748291
    4. '
' → logprob: -5.336550235748291
    5. ' ' → logprob: -5.836550235748291
    6. '  
' → logprob: -5.961550235748291
    7. '        
' → logprob: -5.961550235748291
    8. '<|end|>' → logprob: -5.961550235748291
    9. '    
' → logprob: -6.586550235748291
    10. '           ' → logprob: -6.961550235748291

Token 120: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3515506684780121
    2. ' if' → logprob: -1.7265506982803345
    3. 'if' (adapté à ' if') → logprob: -2.351550579071045
    4. '       ' → logprob: -4.601550579071045
    5. '
' → logprob: -4.851550579071045
    6. '   ' → logprob: -5.726550579071045
    7. ' for' → logprob: -7.101550579071045
    8. 'for' → logprob: -7.976550579071045
    9. ' ' → logprob: -8.226551055908203
    10. '        
' → logprob: -8.601551055908203

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.658058226108551
    2. 'i' → logprob: -0.783058226108551
    3. ' j' → logprob: -4.533058166503906
    4. 'j' → logprob: -5.158058166503906
    5. ' p' → logprob: -5.158058166503906
    6. 'p' → logprob: -6.033058166503906
    7. ' ' → logprob: -8.783058166503906
    8. '   ' → logprob: -8.908058166503906
    9. '(i' → logprob: -9.283058166503906
    10. ' (' → logprob: -10.283058166503906

Token 122: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3487919569015503
    2. '>' → logprob: -1.7237919569015503
    3. ' >=' → logprob: -2.47379207611084
    4. '>=' → logprob: -3.47379207611084
    5. ' ' → logprob: -7.34879207611084
    6. '   ' → logprob: -9.84879207611084
    7. '-' → logprob: -10.34879207611084
    8. '<|end|>' → logprob: -11.09879207611084
    9. '%' → logprob: -11.34879207611084
    10. ' ≥' → logprob: -11.84879207611084

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005582740413956344
    2. ' ' → logprob: -7.500558376312256
    3. '=' → logprob: -12.250557899475098
    4. '<|end|>' → logprob: -15.750557899475098
    5. '   ' → logprob: -16.250558853149414
    6. '0' → logprob: -17.000558853149414
    7. '  ' → logprob: -17.438058853149414
    8. '>' → logprob: -17.563058853149414
    9. '```' → logprob: -17.875558853149414
    10. ' =' → logprob: -17.938058853149414

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.102680633077398e-05
    2. ' ' → logprob: -9.375090599060059
    3. '=' → logprob: -12.500090599060059
    4. '0' → logprob: -13.375090599060059
    5. '   ' → logprob: -15.250090599060059
    6. '<|end|>' → logprob: -15.875090599060059
    7. '2' → logprob: -16.750091552734375
    8. '```' → logprob: -16.875091552734375
    9. '[' → logprob: -17.062591552734375
    10. '  ' → logprob: -17.562591552734375

Token 125: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020253507420420647
    2. ':' → logprob: -4.645253658294678
    3. 'and' → logprob: -4.895253658294678
    4. ':
' → logprob: -6.270253658294678
    5. '           ' → logprob: -6.895253658294678
    6. '               ' → logprob: -11.27025318145752
    7. '       ' → logprob: -11.39525318145752
    8. '            ' → logprob: -12.02025318145752
    9. ',' → logprob: -12.14525318145752
    10. '<|end|>' → logprob: -12.27025318145752

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018990350887179375
    2. ' and' → logprob: -4.518990516662598
    3. ' dp' → logprob: -5.268990516662598
    4. '           ' → logprob: -6.893990516662598
    5. 'dp' → logprob: -7.268990516662598
    6. ':' → logprob: -7.518990516662598
    7. ':
' → logprob: -7.768990516662598
    8. 'and' → logprob: -10.643990516662598
    9. ' for' → logprob: -11.268990516662598
    10. ' if' → logprob: -11.393990516662598

Token 127: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.18432191014289856
    2. 'dp' → logprob: -1.8093218803405762
    3. '           ' → logprob: -6.559321880340576
    4. ' if' → logprob: -6.559321880340576
    5. '               ' → logprob: -6.559321880340576
    6. 'if' → logprob: -8.559322357177734
    7. '                   ' → logprob: -10.184322357177734
    8. '	dp' → logprob: -10.184322357177734
    9. '
' → logprob: -10.809322357177734
    10. '            ' → logprob: -12.559322357177734

Token 128: ' connect' (ID: 4837)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022094301879405975
    2. 'if' → logprob: -4.147094249725342
    3. ' dp' → logprob: -5.272094249725342
    4. '           ' → logprob: -7.647094249725342
    5. ' if' → logprob: -8.2720947265625
    6. '               ' → logprob: -9.0220947265625
    7. '#' → logprob: -11.2720947265625
    8. '	dp' → logprob: -11.3970947265625
    9. '   ' → logprob: -12.0220947265625
    10. '                   ' → logprob: -12.0220947265625

Token 129: ' pipe' (ID: 22906)
  Prédit: ' pipe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pipe' → logprob: -0.7195744514465332
    2. 'pipe' → logprob: -1.4695744514465332
    3. ' pipes' → logprob: -1.9695744514465332
    4. ' dp' → logprob: -2.719574451446533
    5. 'dp' → logprob: -2.969574451446533
    6. 'pipes' → logprob: -3.969574451446533
    7. ' p' → logprob: -6.594574451446533
    8. 'p' → logprob: -6.844574451446533
    9. '_pipe' → logprob: -6.969574451446533
    10. ' i' → logprob: -7.344574451446533

Token 130: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6068831086158752
    2. 'i' → logprob: -1.4818830490112305
    3. '[i' → logprob: -1.7318830490112305
    4. ' with' → logprob: -3.9818830490112305
    5. ' (' → logprob: -4.3568830490112305
    6. '(i' → logprob: -4.6068830490112305
    7. 'with' → logprob: -5.9818830490112305
    8. ' =' → logprob: -6.6068830490112305
    9. '           ' → logprob: -6.6068830490112305
    10. 's' → logprob: -6.8568830490112305

Token 131: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36233481764793396
    2. ' with' → logprob: -1.7373348474502563
    3. ' -' → logprob: -2.862334728240967
    4. ' and' → logprob: -3.237334728240967
    5. 'with' → logprob: -3.737334728240967
    6. ' to' → logprob: -5.737334728240967
    7. 'and' → logprob: -6.237334728240967
    8. '           ' → logprob: -6.862334728240967
    9. 'to' → logprob: -7.987334728240967
    10. ' ' → logprob: -8.112335205078125

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001518907374702394
    2. '2' → logprob: -6.626518726348877
    3. ' ' → logprob: -8.626519203186035
    4. '   ' → logprob: -12.501519203186035
    5. '-' → logprob: -12.751519203186035
    6. '```' → logprob: -12.939019203186035
    7. '           ' → logprob: -14.189019203186035
    8. 'i' → logprob: -14.501519203186035
    9. '  ' → logprob: -15.189019203186035
    10. '       ' → logprob: -15.314019203186035

Token 133: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6251571774482727
    2. 'and' → logprob: -0.8751571774482727
    3. ' with' → logprob: -3.625157117843628
    4. 'with' → logprob: -3.875157117843628
    5. ' to' → logprob: -8.875157356262207
    6. ',' → logprob: -9.000157356262207
    7. 'to' → logprob: -9.125157356262207
    8. '<|end|>' → logprob: -10.125157356262207
    9. '
' → logprob: -10.375157356262207
    10. '               ' → logprob: -10.500157356262207

Token 134: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.711642324924469
    2. ' i' → logprob: -0.711642324924469
    3. 'pipe' → logprob: -4.211642265319824
    4. ' pipe' → logprob: -5.711642265319824
    5. ' ' → logprob: -10.086642265319824
    6. '_pipe' → logprob: -10.586642265319824
    7. 'p' → logprob: -10.961642265319824
    8. '	i' → logprob: -10.961642265319824
    9. ' pipes' → logprob: -11.024142265319824
    10. 'pipes' → logprob: -11.336642265319824

Token 135: ' into' (ID: 1511)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21055293083190918
    2. '           ' → logprob: -2.585552930831909
    3. ':' → logprob: -3.085552930831909
    4. ' and' → logprob: -3.835552930831909
    5. ',' → logprob: -4.335553169250488
    6. ' with' → logprob: -4.460553169250488
    7. ' if' → logprob: -4.585553169250488
    8. ':
' → logprob: -5.710553169250488
    9. ' for' → logprob: -6.085553169250488
    10. '                   ' → logprob: -6.335553169250488

Token 136: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.7952390313148499
    2. ' a' → logprob: -1.295238971710205
    3. 'a' → logprob: -1.545238971710205
    4. 'one' → logprob: -3.045238971710205
    5. 'j' → logprob: -5.420238971710205
    6. ' j' → logprob: -5.545238971710205
    7. ' ' → logprob: -6.170238971710205
    8. 'pipe' → logprob: -6.920238971710205
    9. 'single' → logprob: -7.545238971710205
    10. ' single' → logprob: -7.670238971710205

Token 137: '
' (ID: 198)
  Prédit: 'pipe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pipe' → logprob: -0.2472853809595108
    2. 'segment' → logprob: -2.7472853660583496
    3. 'piece' → logprob: -3.2472853660583496
    4. ' pipe' → logprob: -3.7472853660583496
    5. ' segment' → logprob: -3.8722853660583496
    6. 'job' → logprob: -4.12228536605835
    7. ' job' → logprob: -5.24728536605835
    8. 'joint' → logprob: -5.49728536605835
    9. 'line' → logprob: -5.62228536605835
    10. '           ' → logprob: -5.62228536605835

Token 138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02324850670993328
    2. '           ' → logprob: -3.8982484340667725
    3. '                   ' → logprob: -7.398248672485352
    4. ':' → logprob: -7.648248672485352
    5. 'dp' → logprob: -7.773248672485352
    6. ',' → logprob: -8.398248672485352
    7. ' dp' → logprob: -8.773248672485352
    8. ' with' → logprob: -8.898248672485352
    9. ' and' → logprob: -9.398248672485352
    10. ' for' → logprob: -9.648248672485352

Token 139: ' combined' (ID: 15890)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7064369320869446
    2. ' dp' → logprob: -0.7064369320869446
    3. ' if' → logprob: -5.081437110900879
    4. 'if' → logprob: -5.581437110900879
    5. '               ' → logprob: -6.206437110900879
    6. '           ' → logprob: -7.081437110900879
    7. '	dp' → logprob: -9.456437110900879
    8. '                   ' → logprob: -9.581437110900879
    9. '   ' → logprob: -10.206437110900879
    10. '
' → logprob: -10.706437110900879

Token 140: ' =' (ID: 314)
  Prédit: '_salary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_salary' → logprob: -0.09846901148557663
    2. ' =' → logprob: -2.4734690189361572
    3. '_value' → logprob: -5.848468780517578
    4. '=' → logprob: -5.848468780517578
    5. '_val' → logprob: -6.723468780517578
    6. '_cost' → logprob: -7.348468780517578
    7. '_pay' → logprob: -7.598468780517578
    8. '_sal' → logprob: -7.973468780517578
    9. '_profit' → logprob: -8.098468780517578
    10. '_' → logprob: -8.223468780517578

Token 141: ' dp' (ID: 21546)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7683899402618408
    2. 'p' → logprob: -1.0183899402618408
    3. ' j' → logprob: -2.518389940261841
    4. ' p' → logprob: -2.768389940261841
    5. 'dp' → logprob: -4.143389701843262
    6. ' dp' → logprob: -5.268389701843262
    7. 'max' → logprob: -5.518389701843262
    8. ' max' → logprob: -6.143389701843262
    9. '   ' → logprob: -6.393389701843262
    10. ' ' → logprob: -6.518389701843262

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '<|end|>' → logprob: -17.5
    3. '[max' → logprob: -17.625
    4. 'i' → logprob: -18.0
    5. '[
' → logprob: -18.5
    6. '[' → logprob: -18.75
    7. '```' → logprob: -19.375
    8. ' ' → logprob: -19.625
    9. ' i' → logprob: -20.125
    10. '[int' → logprob: -20.25

Token 143: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.908022285439074e-05
    2. ' -' → logprob: -10.500059127807617
    3. '[' → logprob: -11.375059127807617
    4. '[-' → logprob: -11.375059127807617
    5. '2' → logprob: -12.750059127807617
    6. '[i' → logprob: -13.250059127807617
    7. '```' → logprob: -13.375059127807617
    8. '<|end|>' → logprob: -13.625059127807617
    9. ']-' → logprob: -14.625059127807617
    10. '[
' → logprob: -15.750059127807617

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.921253225300461e-05
    2. ' ' → logprob: -9.750069618225098
    3. '1' → logprob: -12.250069618225098
    4. '   ' → logprob: -13.250069618225098
    5. '```' → logprob: -13.500069618225098
    6. '3' → logprob: -14.000069618225098
    7. '
' → logprob: -15.187569618225098
    8. '-' → logprob: -15.312569618225098
    9. '       ' → logprob: -15.812569618225098
    10. ')' → logprob: -15.812569618225098

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39467108249664307
    2. ' +' → logprob: -1.269671082496643
    3. '+' → logprob: -3.6446709632873535
    4. ']+' → logprob: -4.0196709632873535
    5. ' ]' → logprob: -7.0196709632873535
    6. '+j' → logprob: -10.269671440124512
    7. '']' → logprob: -10.519671440124512
    8. '"]' → logprob: -10.894671440124512
    9. '+]' → logprob: -11.019671440124512
    10. ' ' → logprob: -11.019671440124512

Token 146: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22573113441467285
    2. '+' → logprob: -1.6007311344146729
    3. '+j' → logprob: -8.100730895996094
    4. '+c' → logprob: -12.725730895996094
    5. '+p' → logprob: -12.725730895996094
    6. ' ' → logprob: -13.100730895996094
    7. '           ' → logprob: -13.725730895996094
    8. '+k' → logprob: -13.850730895996094
    9. ' plus' → logprob: -14.225730895996094
    10. '+s' → logprob: -14.350730895996094

Token 147: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01831803470849991
    2. ' j' → logprob: -4.393318176269531
    3. 'max' → logprob: -5.643318176269531
    4. ' ' → logprob: -7.393318176269531
    5. 'p' → logprob: -7.643318176269531
    6. ' max' → logprob: -7.893318176269531
    7. '   ' → logprob: -8.643318176269531
    8. '(j' → logprob: -8.643318176269531
    9. ' (' → logprob: -9.768318176269531
    10. '100' → logprob: -10.018318176269531

Token 148: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23679780960083008
    2. 'j' → logprob: -1.61179780960083
    3. 'max' → logprob: -5.11179780960083
    4. ' p' → logprob: -6.86179780960083
    5. '100' → logprob: -7.11179780960083
    6. '(p' → logprob: -7.73679780960083
    7. '2' → logprob: -7.86179780960083
    8. ' ' → logprob: -8.236797332763672
    9. ' j' → logprob: -8.236797332763672
    10. '   ' → logprob: -8.236797332763672

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.250000953674316
    3. '[' → logprob: -15.750000953674316
    4. ')[' → logprob: -17.5
    5. '[j' → logprob: -17.875
    6. '```' → logprob: -18.5
    7. '[
' → logprob: -19.875
    8. '   ' → logprob: -20.375
    9. '(i' → logprob: -20.375
    10. '][' → logprob: -20.375

Token 150: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.157039049663581e-05
    2. 'i' → logprob: -10.625051498413086
    3. '-' → logprob: -11.125051498413086
    4. '][' → logprob: -11.875051498413086
    5. ')[' → logprob: -13.250051498413086
    6. '[' → logprob: -13.625051498413086
    7. ' [' → logprob: -13.875051498413086
    8. 's' → logprob: -15.625051498413086
    9. '```' → logprob: -15.750051498413086
    10. '   ' → logprob: -15.875051498413086

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519906163215637
    2. '1' → logprob: -1.501990556716919
    3. ' ' → logprob: -10.50199031829834
    4. '   ' → logprob: -11.62699031829834
    5. '-' → logprob: -11.75199031829834
    6. '```' → logprob: -11.81449031829834
    7. '[' → logprob: -13.31449031829834
    8. '       ' → logprob: -14.06449031829834
    9. ']' → logprob: -14.18949031829834
    10. '  ' → logprob: -14.56449031829834

Token 152: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29396113753318787
    2. ']+' → logprob: -2.0439610481262207
    3. ' +' → logprob: -2.4189610481262207
    4. ']' → logprob: -3.5439610481262207
    5. '+p' → logprob: -5.543961048126221
    6. '+j' → logprob: -5.793961048126221
    7. ' p' → logprob: -9.543961524963379
    8. 'p' → logprob: -10.168961524963379
    9. ' ]' → logprob: -10.793961524963379
    10. ' ' → logprob: -10.918961524963379

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15846216678619385
    2. ' +' → logprob: -2.4084620475769043
    3. '+j' → logprob: -2.9084620475769043
    4. '+p' → logprob: -6.908462047576904
    5. '*' → logprob: -8.533462524414062
    6. '-' → logprob: -9.283462524414062
    7. ' j' → logprob: -9.283462524414062
    8. '[j' → logprob: -9.408462524414062
    9. 'j' → logprob: -9.408462524414062
    10. ')' → logprob: -9.533462524414062

Token 154: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0055036297999322414
    2. ' p' → logprob: -5.3805036544799805
    3. 'j' → logprob: -7.1305036544799805
    4. ' ' → logprob: -10.63050365447998
    5. ' j' → logprob: -11.38050365447998
    6. '   ' → logprob: -11.50550365447998
    7. '
' → logprob: -11.81800365447998
    8. ')' → logprob: -11.88050365447998
    9. ')p' → logprob: -12.81800365447998
    10. '  ' → logprob: -13.06800365447998

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. 'i' → logprob: -15.875003814697266
    4. ' [' → logprob: -17.000003814697266
    5. ')' → logprob: -18.375003814697266
    6. '[j' → logprob: -18.375003814697266
    7. '[
' → logprob: -18.625003814697266
    8. '[I' → logprob: -19.000003814697266
    9. '<|end|>' → logprob: -19.500003814697266
    10. ' i' → logprob: -20.250003814697266

Token 156: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.686778503237292e-05
    2. ' -' → logprob: -9.250097274780273
    3. '[' → logprob: -14.625097274780273
    4. '<|end|>' → logprob: -16.875097274780273
    5. ']-' → logprob: -16.875097274780273
    6. ']' → logprob: -17.375097274780273
    7. '[-' → logprob: -17.625097274780273
    8. '1' → logprob: -17.625097274780273
    9. '[i' → logprob: -17.750097274780273
    10. '2' → logprob: -18.125097274780273

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34959468245506287
    2. '1' → logprob: -1.2245947122573853
    3. '3' → logprob: -7.224594593048096
    4. '-' → logprob: -8.349595069885254
    5. '0' → logprob: -9.474595069885254
    6. ' ' → logprob: -9.474595069885254
    7. '   ' → logprob: -10.849595069885254
    8. '<|end|>' → logprob: -12.349595069885254
    9. '  ' → logprob: -13.349595069885254
    10. ' -' → logprob: -14.099595069885254

Token 158: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5031865239143372
    2. '])' → logprob: -1.1281864643096924
    3. '[i' → logprob: -3.1281864643096924
    4. ')' → logprob: -4.5031867027282715
    5. ' -' → logprob: -5.0031867027282715
    6. ']' → logprob: -5.2531867027282715
    7. '[' → logprob: -6.3781867027282715
    8. '][' → logprob: -7.2531867027282715
    9. ')])' → logprob: -7.5031867027282715
    10. ' ])' → logprob: -7.7531867027282715

Token 159: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03405090048909187
    2. '+' → logprob: -4.034050941467285
    3. ' +' → logprob: -4.909050941467285
    4. '[i' → logprob: -5.784050941467285
    5. '[' → logprob: -6.284050941467285
    6. ' )' → logprob: -6.534050941467285
    7. '-' → logprob: -7.409050941467285
    8. ')*' → logprob: -7.784050941467285
    9. ')
' → logprob: -8.159050941467285
    10. ')+' → logprob: -9.159050941467285

Token 160: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3075943887233734
    2. 'j' → logprob: -1.4325944185256958
    3. ' p' → logprob: -4.182594299316406
    4. ' j' → logprob: -4.557594299316406
    5. ' ' → logprob: -8.432594299316406
    6. '   ' → logprob: -9.682594299316406
    7. '  ' → logprob: -10.557594299316406
    8. '(p' → logprob: -11.870094299316406
    9. '       ' → logprob: -12.245094299316406
    10. ')' → logprob: -12.745094299316406

Token 161: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.125
    5. '[
' → logprob: -17.5
    6. '   ' → logprob: -17.625
    7. '][' → logprob: -17.875
    8. ' i' → logprob: -18.375
    9. ')[' → logprob: -18.5
    10. '[j' → logprob: -18.625

Token 162: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.255023956531659e-05
    2. ' -' → logprob: -10.000072479248047
    3. '[' → logprob: -10.875072479248047
    4. '[i' → logprob: -12.375072479248047
    5. 'i' → logprob: -13.625072479248047
    6. '<|end|>' → logprob: -14.375072479248047
    7. ']' → logprob: -14.625072479248047
    8. '])' → logprob: -14.625072479248047
    9. '[-' → logprob: -14.875072479248047
    10. '1' → logprob: -15.500072479248047

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004142268560826778
    2. '2' → logprob: -5.5041422843933105
    3. ' ' → logprob: -10.004141807556152
    4. '-' → logprob: -12.379141807556152
    5. '0' → logprob: -12.504141807556152
    6. '3' → logprob: -12.629141807556152
    7. '   ' → logprob: -12.754141807556152
    8. '])' → logprob: -13.379141807556152
    9. '```' → logprob: -14.379141807556152
    10. ']' → logprob: -14.441641807556152

Token 164: '])*' (ID: 114661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002470186213031411
    2. ' )' → logprob: -6.127470016479492
    3. ')
' → logprob: -9.002470016479492
    4. '])' → logprob: -9.877470016479492
    5. '))' → logprob: -10.502470016479492
    6. ')])' → logprob: -10.502470016479492
    7. '<|end|>' → logprob: -11.127470016479492
    8. '       ' → logprob: -11.877470016479492
    9. '   ' → logprob: -12.502470016479492
    10. ')]' → logprob: -12.627470016479492

Token 165: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006369420792907476
    2. '1' → logprob: -6.381369590759277
    3. ' ' → logprob: -6.381369590759277
    4. '100' → logprob: -7.256369590759277
    5. '10' → logprob: -7.506369590759277
    6. '3' → logprob: -7.631369590759277
    7. '0' → logprob: -7.756369590759277
    8. '(' → logprob: -8.756369590759277
    9. '5' → logprob: -9.256369590759277
    10. '4' → logprob: -9.506369590759277

Token 166: '
' (ID: 198)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.031600676476955414
    2. '0' → logprob: -4.156600475311279
    3. '1' → logprob: -5.281600475311279
    4. '.' → logprob: -5.531600475311279
    5. ' ' → logprob: -6.156600475311279
    6. '5' → logprob: -6.906600475311279
    7. '3' → logprob: -7.281600475311279
    8. '-' → logprob: -7.781600475311279
    9. ')' → logprob: -8.156600952148438
    10. '10' → logprob: -8.156600952148438

Token 167: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03188823163509369
    2. '               ' → logprob: -4.031888008117676
    3. ' if' → logprob: -4.531888008117676
    4. ')' → logprob: -6.781888008117676
    5. 'if' → logprob: -6.781888008117676
    6. '
' → logprob: -9.031888008117676
    7. ')
' → logprob: -9.281888008117676
    8. ',' → logprob: -9.281888008117676
    9. '            
' → logprob: -9.781888008117676
    10. '       ' → logprob: -10.031888008117676

Token 168: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4954039454460144
    2. 'if' → logprob: -0.9954039454460144
    3. ' if' → logprob: -4.49540376663208
    4. ' dp' → logprob: -4.62040376663208
    5. '           ' → logprob: -10.245404243469238
    6. '
' → logprob: -10.620404243469238
    7. '	dp' → logprob: -10.995404243469238
    8. '(dp' → logprob: -11.745404243469238
    9. '       ' → logprob: -12.995404243469238
    10. '_dp' → logprob: -13.745404243469238

Token 169: ' check' (ID: 2371)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.24413514137268066
    2. 'dp' → logprob: -1.9941351413726807
    3. ' if' → logprob: -2.8691351413726807
    4. 'if' → logprob: -3.7441351413726807
    5. '           ' → logprob: -9.619134902954102
    6. '	dp' → logprob: -11.869134902954102
    7. '               ' → logprob: -12.119134902954102
    8. ' ' → logprob: -13.994134902954102
    9. '(dp' → logprob: -14.119134902954102
    10. '_dp' → logprob: -14.619134902954102

Token 170: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07964139431715012
    2. 'if' → logprob: -2.829641342163086
    3. ' dp' → logprob: -4.079641342163086
    4. 'dp' → logprob: -7.579641342163086
    5. ' combined' → logprob: -9.579641342163086
    6. '(dp' → logprob: -10.829641342163086
    7. 'combined' → logprob: -12.579641342163086
    8. ' for' → logprob: -14.704641342163086
    9. '[' → logprob: -14.829641342163086
    10. ' ' → logprob: -14.954641342163086

Token 171: ' it's' (ID: 4275)
  Prédit: ' combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combined' → logprob: -0.16421033442020416
    2. 'combined' → logprob: -1.914210319519043
    3. ' dp' → logprob: -5.914210319519043
    4. 'dp' → logprob: -6.664210319519043
    5. 'comb' → logprob: -15.039210319519043
    6. 'Combined' → logprob: -15.164210319519043
    7. ' ' → logprob: -15.164210319519043
    8. '(com' → logprob: -15.664210319519043
    9. 'com' → logprob: -15.789210319519043
    10. '(dp' → logprob: -15.914210319519043

Token 172: ' better' (ID: 3432)
  Prédit: ' better'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' better' → logprob: -0.985057532787323
    2. ' greater' → logprob: -1.1100575923919678
    3. 'greater' → logprob: -1.4850575923919678
    4. 'better' → logprob: -3.6100575923919678
    5. 'dp' → logprob: -4.235057353973389
    6. '>' → logprob: -4.485057353973389
    7. ' dp' → logprob: -4.860057353973389
    8. ' higher' → logprob: -5.735057353973389
    9. ' larger' → logprob: -6.110057353973389
    10. 'higher' → logprob: -6.610057353973389

Token 173: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.404805064201355
    2. ' if' → logprob: -2.4048051834106445
    3. ' and' → logprob: -2.6548051834106445
    4. '<|end|>' → logprob: -3.2798051834106445
    5. ':' → logprob: -3.5298051834106445
    6. '               ' → logprob: -3.7798051834106445
    7. ' to' → logprob: -3.9048051834106445
    8. '<|end|>' → logprob: -4.0298051834106445
    9. ':
' → logprob: -4.4048051834106445
    10. '       ' → logprob: -4.5298051834106445

Token 174: ' combine' (ID: 21700)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4566687047481537
    2. 'dp' → logprob: -1.206668734550476
    3. 'max' → logprob: -3.3316686153411865
    4. ' max' → logprob: -3.4566686153411865
    5. '	dp' → logprob: -10.581668853759766
    6. ' use' → logprob: -10.706668853759766
    7. ' replace' → logprob: -11.081668853759766
    8. ' continue' → logprob: -11.206668853759766
    9. '(dp' → logprob: -11.206668853759766
    10. 'replace' → logprob: -11.581668853759766

Token 175: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6518290638923645
    2. 'dp' → logprob: -1.4018290042877197
    3. ' dp' → logprob: -2.4018290042877197
    4. 'if' → logprob: -2.6518290042877197
    5. '           ' → logprob: -3.2768290042877197
    6. '
' → logprob: -3.9018290042877197
    7. '(dp' → logprob: -5.401829242706299
    8. ')
' → logprob: -6.401829242706299
    9. ')' → logprob: -6.526829242706299
    10. '               ' → logprob: -6.901829242706299

Token 176: ' not' (ID: 625)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5139510035514832
    2. ' not' → logprob: -1.263951063156128
    3. 'dp' → logprob: -2.263951063156128
    4. 'not' → logprob: -4.263950824737549
    5. ' continue' → logprob: -8.263951301574707
    6. ' keep' → logprob: -8.888951301574707
    7. ' p' → logprob: -9.013951301574707
    8. 'max' → logprob: -9.138951301574707
    9. 'continue' → logprob: -9.263951301574707
    10. ' max' → logprob: -9.388951301574707

Token 177: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07452835887670517
    2. '               ' → logprob: -2.949528455734253
    3. '
' → logprob: -4.699528217315674
    4. ')' → logprob: -5.324528217315674
    5. ',' → logprob: -6.949528217315674
    6. ')
' → logprob: -7.199528217315674
    7. ' if' → logprob: -7.449528217315674
    8. '            
' → logprob: -7.824528217315674
    9. '[i' → logprob: -8.074528694152832
    10. '       ' → logprob: -8.199528694152832

Token 178: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6762916445732117
    2. ' if' → logprob: -0.9262916445732117
    3. '               ' → logprob: -3.1762917041778564
    4. 'if' → logprob: -4.051291465759277
    5. ' dp' → logprob: -4.176291465759277
    6. '
' → logprob: -4.676291465759277
    7. 'dp' → logprob: -5.426291465759277
    8. '            
' → logprob: -6.051291465759277
    9. ' 
' → logprob: -6.926291465759277
    10. ')' → logprob: -7.176291465759277

Token 179: ' combined' (ID: 15890)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.06654404103755951
    2. ' combined' → logprob: -3.5665440559387207
    3. 'dp' → logprob: -3.5665440559387207
    4. 'combined' → logprob: -5.441544055938721
    5. ' if' → logprob: -5.941544055938721
    6. 'if' → logprob: -7.441544055938721
    7. '(dp' → logprob: -8.816543579101562
    8. ' not' → logprob: -9.566543579101562
    9. '	dp' → logprob: -11.191543579101562
    10. '
' → logprob: -11.566543579101562

Token 180: ' represents' (ID: 18627)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5958797931671143
    2. ' >' → logprob: -1.0958797931671143
    3. '=' → logprob: -2.9708797931671143
    4. ' =' → logprob: -3.0958797931671143
    5. ')' → logprob: -4.470879554748535
    6. ' if' → logprob: -6.595879554748535
    7. ',' → logprob: -6.720879554748535
    8. 'dp' → logprob: -6.845879554748535
    9. 'if' → logprob: -7.095879554748535
    10. ')>' → logprob: -7.220879554748535

Token 181: ' merging' (ID: 107009)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6098238229751587
    2. ' max' → logprob: -0.9848238229751587
    3. 'dp' → logprob: -3.359823703765869
    4. 'the' → logprob: -4.609823703765869
    5. 'min' → logprob: -4.609823703765869
    6. ' dp' → logprob: -4.609823703765869
    7. ' min' → logprob: -4.859823703765869
    8. ' the' → logprob: -5.484823703765869
    9. 'combined' → logprob: -6.234823703765869
    10. ' combined' → logprob: -6.359823703765869

Token 182: ' two' (ID: 1920)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3248733580112457
    2. 'dp' → logprob: -2.699873447418213
    3. ' if' → logprob: -2.699873447418213
    4. ' dp' → logprob: -3.449873447418213
    5. ')
' → logprob: -3.574873447418213
    6. '<|end|>' → logprob: -3.949873447418213
    7. ',' → logprob: -4.699873447418213
    8. 'if' → logprob: -4.824873447418213
    9. '[i' → logprob: -5.199873447418213
    10. '(dp' → logprob: -5.574873447418213

Token 183: ' pipes' (ID: 46808)
  Prédit: ' pipes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pipes' → logprob: -0.07805989682674408
    2. 'pipes' → logprob: -2.9530599117279053
    3. '<|end|>' → logprob: -4.703059673309326
    4. ' segments' → logprob: -5.578059673309326
    5. ' tokens' → logprob: -5.953059673309326
    6. ')' → logprob: -6.203059673309326
    7. 'tokens' → logprob: -6.828059673309326
    8. 'dp' → logprob: -6.953059673309326
    9. ' elements' → logprob: -7.953059673309326
    10. ' adjacent' → logprob: -8.078060150146484

Token 184: ' into' (ID: 1511)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27151811122894287
    2. 'if' → logprob: -2.2715182304382324
    3. '
' → logprob: -3.0215182304382324
    4. ')' → logprob: -3.3965182304382324
    5. '           ' → logprob: -3.5215182304382324
    6. ')
' → logprob: -5.021518230438232
    7. ',' → logprob: -5.896518230438232
    8. '<|end|>' → logprob: -5.896518230438232
    9. '<|end|>' → logprob: -6.146518230438232
    10. '\n' → logprob: -6.646518230438232

Token 185: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.48092958331108093
    2. ' one' → logprob: -0.9809296131134033
    3. 'a' → logprob: -5.355929374694824
    4. ' a' → logprob: -6.855929374694824
    5. 'dp' → logprob: -8.355929374694824
    6. 'the' → logprob: -8.605929374694824
    7. ' dp' → logprob: -8.855929374694824
    8. 'single' → logprob: -9.105929374694824
    9. 'combined' → logprob: -9.230929374694824
    10. 'i' → logprob: -9.855929374694824

Token 186: ' pipe' (ID: 22906)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48869648575782776
    2. ' if' → logprob: -1.3636964559555054
    3. '
' → logprob: -2.988696575164795
    4. 'if' → logprob: -3.363696575164795
    5. '<|end|>' → logprob: -4.113696575164795
    6. ')' → logprob: -4.238696575164795
    7. '               ' → logprob: -5.363696575164795
    8. '<|end|>' → logprob: -5.988696575164795
    9. ',' → logprob: -6.238696575164795
    10. '            
' → logprob: -6.238696575164795

Token 187: ',
' (ID: 412)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4592108726501465
    2. '
' → logprob: -1.5842108726501465
    3. '<|end|>' → logprob: -1.7092108726501465
    4. '           ' → logprob: -1.8342108726501465
    5. ')' → logprob: -1.9592108726501465
    6. '<|end|>' → logprob: -3.5842108726501465
    7. 'if' → logprob: -3.8342108726501465
    8. '               ' → logprob: -4.5842108726501465
    9. ')
' → logprob: -5.4592108726501465
    10. '       ' → logprob: -5.7092108726501465

Token 188: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8280366659164429
    2. '               ' → logprob: -1.3280366659164429
    3. '           ' → logprob: -1.8280366659164429
    4. ' if' → logprob: -3.0780367851257324
    5. '\n' → logprob: -3.9530367851257324
    6. ' so' → logprob: -4.578036785125732
    7. ' )' → logprob: -4.703036785125732
    8. ' and' → logprob: -4.828036785125732
    9. ' 
' → logprob: -5.078036785125732
    10. 'if' → logprob: -5.078036785125732

Token 189: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2040080577135086
    2. '<|end|>' → logprob: -2.704008102416992
    3. '           ' → logprob: -3.454008102416992
    4. '               ' → logprob: -3.704008102416992
    5. ' )' → logprob: -4.079008102416992
    6. ' 
' → logprob: -4.579008102416992
    7. '<|end|>' → logprob: -4.829008102416992
    8. ' if' → logprob: -5.329008102416992
    9. '\n' → logprob: -5.454008102416992
    10. ' ' → logprob: -5.954008102416992

Token 190: ' so' (ID: 813)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3645879030227661
    2. ' dp' → logprob: -2.4895877838134766
    3. '           ' → logprob: -2.6145877838134766
    4. 'if' → logprob: -2.6145877838134766
    5. ' if' → logprob: -2.7395877838134766
    6. '               ' → logprob: -4.489587783813477
    7. '	dp' → logprob: -9.239587783813477
    8. '       ' → logprob: -10.114587783813477
    9. ')' → logprob: -10.239587783813477
    10. '(dp' → logprob: -10.364587783813477

Token 191: ' count' (ID: 3605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.777280867099762
    2. ' dp' → logprob: -0.777280867099762
    3. ' if' → logprob: -3.152280807495117
    4. 'if' → logprob: -3.277280807495117
    5. '           ' → logprob: -8.777280807495117
    6. '               ' → logprob: -10.527280807495117
    7. '	dp' → logprob: -11.277280807495117
    8. ')' → logprob: -13.277280807495117
    9. '   ' → logprob: -13.402280807495117
    10. '(dp' → logprob: -13.527280807495117

Token 192: ' of' (ID: 328)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.09621185064315796
    2. 'combined' → logprob: -3.3462119102478027
    3. ' combined' → logprob: -4.096211910247803
    4. 'ed' → logprob: -4.096211910247803
    5. 's' → logprob: -4.846211910247803
    6. '[i' → logprob: -5.471211910247803
    7. 'ing' → logprob: -5.721211910247803
    8. '=' → logprob: -6.346211910247803
    9. 'i' → logprob: -6.596211910247803
    10. ' =' → logprob: -6.596211910247803

Token 193: ' pipes' (ID: 46808)
  Prédit: 'pipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pipes' → logprob: -0.5842636227607727
    2. 'i' → logprob: -1.834263563156128
    3. 'dp' → logprob: -2.459263563156128
    4. ' pipes' → logprob: -2.584263563156128
    5. 'connected' → logprob: -3.459263563156128
    6. ' connected' → logprob: -3.959263563156128
    7. 'combined' → logprob: -4.084263801574707
    8. ' i' → logprob: -4.709263801574707
    9. ' dp' → logprob: -4.709263801574707
    10. '1' → logprob: -5.084263801574707

Token 194: ' decreases' (ID: 70943)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9427934885025024
    2. ' connected' → logprob: -2.192793369293213
    3. ' is' → logprob: -2.567793369293213
    4. 'dp' → logprob: -2.692793369293213
    5. '-' → logprob: -2.942793369293213
    6. ' combined' → logprob: -3.567793369293213
    7. 'i' → logprob: -3.692793369293213
    8. ' must' → logprob: -3.817793369293213
    9. ')' → logprob: -4.067793369293213
    10. ' -' → logprob: -4.067793369293213

Token 195: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5086361765861511
    2. '           ' → logprob: -1.133636236190796
    3. 'if' → logprob: -3.383636236190796
    4. ')' → logprob: -3.508636236190796
    5. '               ' → logprob: -5.383635997772217
    6. '
' → logprob: -6.008635997772217
    7. ',' → logprob: -6.383635997772217
    8. '<|end|>' → logprob: -7.633635997772217
    9. '            
' → logprob: -7.758635997772217
    10. ')
' → logprob: -7.758635997772217

Token 196: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3954463510308415e-05
    2. ' ' → logprob: -10.375054359436035
    3. 'one' → logprob: -11.000054359436035
    4. ' one' → logprob: -12.250054359436035
    5. '2' → logprob: -14.375054359436035
    6. '```' → logprob: -14.750054359436035
    7. '   ' → logprob: -16.50005340576172
    8. 'One' → logprob: -17.00005340576172
    9. '<|end|>' → logprob: -17.12505340576172
    10. '-' → logprob: -17.81255340576172

Token 197: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7168886661529541
    2. '
' → logprob: -0.9668886661529541
    3. ')' → logprob: -3.216888666152954
    4. 'if' → logprob: -3.466888666152954
    5. '           ' → logprob: -3.716888666152954
    6. ')
' → logprob: -4.591888427734375
    7. '               ' → logprob: -5.091888427734375
    8. ',' → logprob: -5.216888427734375
    9. ' and' → logprob: -5.341888427734375
    10. '<|end|>' → logprob: -6.216888427734375

Token 198: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4743320941925049
    2. ' and' → logprob: -2.599332094192505
    3. ' but' → logprob: -2.849332094192505
    4. '           ' → logprob: -3.474332094192505
    5. ' 
' → logprob: -3.599332094192505
    6. 'dp' → logprob: -3.849332094192505
    7. ' dp' → logprob: -3.849332094192505
    8. '\n' → logprob: -3.974332094192505
    9. ')' → logprob: -4.224331855773926
    10. ' if' → logprob: -4.224331855773926

Token 199: ' salary' (ID: 21627)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.45246878266334534
    2. 'dp' → logprob: -1.452468752861023
    3. ' the' → logprob: -3.8274688720703125
    4. ' continue' → logprob: -3.8274688720703125
    5. ' combined' → logprob: -3.8274688720703125
    6. 'combined' → logprob: -4.9524688720703125
    7. ' not' → logprob: -5.3274688720703125
    8. ' max' → logprob: -5.3274688720703125
    9. '#' → logprob: -5.4524688720703125
    10. 'the' → logprob: -5.7024688720703125

Token 200: ' depends' (ID: 20102)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7477104663848877
    2. ' +=' → logprob: -1.9977104663848877
    3. ' =' → logprob: -2.7477104663848877
    4. ')' → logprob: -2.9977104663848877
    5. '<|end|>' → logprob: -3.2477104663848877
    6. ' is' → logprob: -3.3727104663848877
    7. ' continues' → logprob: -3.4977104663848877
    8. '=' → logprob: -3.7477104663848877
    9. '+=' → logprob: -3.9977104663848877
    10. 'dp' → logprob: -4.372710227966309

Token 201: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.09333006292581558
    2. 'on' → logprob: -2.718330144882202
    3. '=' → logprob: -4.593329906463623
    4. '<|end|>' → logprob: -4.968329906463623
    5. '+' → logprob: -5.843329906463623
    6. ' =' → logprob: -7.593329906463623
    7. '<|end|>' → logprob: -7.593329906463623
    8. ')' → logprob: -8.218330383300781
    9. ' only' → logprob: -8.343330383300781
    10. 'if' → logprob: -8.593330383300781

Token 202: ' count' (ID: 3605)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.7557217478752136
    2. ' combined' → logprob: -2.0057218074798584
    3. 'dp' → logprob: -2.5057218074798584
    4. 'the' → logprob: -2.7557218074798584
    5. ' the' → logprob: -2.8807218074798584
    6. ' dp' → logprob: -3.0057218074798584
    7. 'max' → logprob: -3.2557218074798584
    8. ' p' → logprob: -3.5057218074798584
    9. 'p' → logprob: -3.7557218074798584
    10. ' max' → logprob: -4.505721569061279

Token 203: '*' (ID: 9)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28666746616363525
    2. ')' → logprob: -1.9116674661636353
    3. '           ' → logprob: -3.9116673469543457
    4. ' and' → logprob: -4.161667346954346
    5. 'if' → logprob: -4.286667346954346
    6. '
' → logprob: -4.536667346954346
    7. '<|end|>' → logprob: -4.536667346954346
    8. ')
' → logprob: -5.036667346954346
    9. ',' → logprob: -5.161667346954346
    10. '[i' → logprob: -5.661667346954346

Token 204: 'sum' (ID: 12298)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13108721375465393
    2. '1' → logprob: -3.256087303161621
    3. '(' → logprob: -4.131087303161621
    4. ' ' → logprob: -4.256087303161621
    5. '(p' → logprob: -4.256087303161621
    6. 'combined' → logprob: -4.631087303161621
    7. ' (' → logprob: -4.881087303161621
    8. 'p' → logprob: -5.506087303161621
    9. '(i' → logprob: -5.631087303161621
    10. '```' → logprob: -6.256087303161621

Token 205: '_length' (ID: 11514)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0000383853912354
    2. '
' → logprob: -1.2500383853912354
    3. '           ' → logprob: -1.7500383853912354
    4. ' and' → logprob: -3.5000383853912354
    5. '               ' → logprob: -3.6250383853912354
    6. ')
' → logprob: -3.7500383853912354
    7. ')' → logprob: -3.8750383853912354
    8. ',' → logprob: -4.000038146972656
    9. 'if' → logprob: -4.750038146972656
    10. ',
' → logprob: -5.000038146972656

Token 207: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.268436998128891
    2. ' if' → logprob: -1.6434370279312134
    3. '               ' → logprob: -4.018436908721924
    4. ')' → logprob: -4.768436908721924
    5. '<|end|>' → logprob: -5.268436908721924
    6. 'if' → logprob: -5.768436908721924
    7. '<|end|>' → logprob: -5.893436908721924
    8. ',' → logprob: -6.393436908721924
    9. ' and' → logprob: -7.643436908721924
    10. '       ' → logprob: -7.768436908721924

Token 208: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6256128549575806
    2. '           ' → logprob: -1.8756128549575806
    3. ' dp' → logprob: -2.125612735748291
    4. 'if' → logprob: -2.250612735748291
    5. ' if' → logprob: -2.500612735748291
    6. '               ' → logprob: -5.500612735748291
    7. '
' → logprob: -8.75061321258545
    8. '	dp' → logprob: -8.75061321258545
    9. ')' → logprob: -8.87561321258545
    10. '(dp' → logprob: -9.12561321258545

Token 209: ' here' (ID: 2105)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5710511207580566
    2. ' dp' → logprob: -2.0710511207580566
    3. 'dp' → logprob: -2.1960511207580566
    4. '           ' → logprob: -2.3210511207580566
    5. 'if' → logprob: -2.3210511207580566
    6. '               ' → logprob: -7.196051120758057
    7. '
' → logprob: -8.571050643920898
    8. ')' → logprob: -9.321050643920898
    9. '	dp' → logprob: -9.321050643920898
    10. '       ' → logprob: -9.696050643920898

Token 210: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7525956034660339
    2. ' if' → logprob: -0.8775956034660339
    3. '               ' → logprob: -3.0025956630706787
    4. ' dp' → logprob: -3.6275956630706787
    5. 'if' → logprob: -4.1275954246521
    6. 'dp' → logprob: -4.6275954246521
    7. ')' → logprob: -5.6275954246521
    8. ' =' → logprob: -6.2525954246521
    9. '
' → logprob: -6.7525954246521
    10. '=' → logprob: -6.8775954246521

Token 211: ' contains' (ID: 8895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022055702283978462
    2. '[' → logprob: -6.8772053718566895
    3. ')' → logprob: -8.002205848693848
    4. '<|end|>' → logprob: -8.502205848693848
    5. '<|end|>' → logprob: -8.502205848693848
    6. ']' → logprob: -9.127205848693848
    7. ' is' → logprob: -9.627205848693848
    8. '[next' → logprob: -10.002205848693848
    9. 'i' → logprob: -10.502205848693848
    10. ' =' → logprob: -11.252205848693848

Token 212: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7142254710197449
    2. 'max' → logprob: -0.9642254710197449
    3. 'dp' → logprob: -2.7142255306243896
    4. ' dp' → logprob: -3.4642255306243896
    5. ' the' → logprob: -3.9642255306243896
    6. 'the' → logprob: -5.0892252922058105
    7. ' only' → logprob: -6.7142252922058105
    8. ')' → logprob: -6.8392252922058105
    9. ' previous' → logprob: -7.4642252922058105
    10. 'previous' → logprob: -7.9642252922058105

Token 213: ' salary' (ID: 21627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7845618724822998
    2. '[i' → logprob: -1.0345618724822998
    3. '(' → logprob: -2.1595618724823
    4. 'dp' → logprob: -3.7845618724823
    5. '(dp' → logprob: -3.7845618724823
    6. '(i' → logprob: -4.659562110900879
    7. '(max' → logprob: -5.284562110900879
    8. 'max' → logprob: -5.409562110900879
    9. ')' → logprob: -6.409562110900879
    10. '   ' → logprob: -6.659562110900879

Token 214: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2839648127555847
    2. ' if' → logprob: -1.6589648723602295
    3. '               ' → logprob: -3.4089648723602295
    4. ',' → logprob: -5.03396463394165
    5. '
' → logprob: -5.03396463394165
    6. 'if' → logprob: -5.28396463394165
    7. ')' → logprob: -6.40896463394165
    8. ' and' → logprob: -7.40896463394165
    9. '            
' → logprob: -7.53396463394165
    10. '       ' → logprob: -7.78396463394165

Token 215: ' far' (ID: 4150)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.764535665512085
    2. ' dp' → logprob: -1.264535665512085
    3. '           ' → logprob: -2.014535665512085
    4. 'dp' → logprob: -2.639535665512085
    5. 'if' → logprob: -3.139535665512085
    6. '               ' → logprob: -7.139535903930664
    7. '	dp' → logprob: -7.264535903930664
    8. '       ' → logprob: -7.639535903930664
    9. ',' → logprob: -7.889535903930664
    10. '(dp' → logprob: -7.889535903930664

Token 216: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2491290420293808
    2. ' if' → logprob: -1.749129056930542
    3. ',' → logprob: -4.124128818511963
    4. '
' → logprob: -4.874128818511963
    5. ')' → logprob: -5.124128818511963
    6. '               ' → logprob: -5.374128818511963
    7. 'if' → logprob: -5.624128818511963
    8. '<|end|>' → logprob: -5.624128818511963
    9. '<|end|>' → logprob: -6.624128818511963
    10. '            
' → logprob: -6.624128818511963

Token 217: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7219323515892029
    2. ' i' → logprob: -0.7219323515892029
    3. ' the' → logprob: -4.471932411193848
    4. 'the' → logprob: -5.346932411193848
    5. 'max' → logprob: -5.721932411193848
    6. ' max' → logprob: -5.846932411193848
    7. ')' → logprob: -6.596932411193848
    8. ' at' → logprob: -7.721932411193848
    9. ' previous' → logprob: -7.971932411193848
    10. 'dp' → logprob: -8.221932411193848

Token 218: ' pipes' (ID: 46808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6163650751113892
    2. ']' → logprob: -1.4913650751113892
    3. '-' → logprob: -2.1163649559020996
    4. '<|end|>' → logprob: -2.4913649559020996
    5. ' -' → logprob: -5.4913649559021
    6. ' )' → logprob: -5.7413649559021
    7. '])' → logprob: -5.7413649559021
    8. ']+' → logprob: -5.9913649559021
    9. '<|end|>' → logprob: -5.9913649559021
    10. ']==' → logprob: -6.7413649559021

Token 219: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6181458234786987
    2. ' if' → logprob: -1.1181458234786987
    3. '               ' → logprob: -3.1181459426879883
    4. '
' → logprob: -3.2431459426879883
    5. ',' → logprob: -4.618145942687988
    6. '<|end|>' → logprob: -4.618145942687988
    7. ')' → logprob: -4.743145942687988
    8. 'if' → logprob: -5.368145942687988
    9. '<|end|>' → logprob: -5.368145942687988
    10. '       ' → logprob: -5.368145942687988

Token 220: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3332233428955078
    2. ' if' → logprob: -2.083223342895508
    3. 'dp' → logprob: -2.708223342895508
    4. ' dp' → logprob: -3.083223342895508
    5. '               ' → logprob: -3.583223342895508
    6. 'if' → logprob: -4.333223342895508
    7. ')' → logprob: -5.708223342895508
    8. ' but' → logprob: -8.083223342895508
    9. ' and' → logprob: -8.083223342895508
    10. '
' → logprob: -8.333223342895508

Token 221: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4592146575450897
    2. ' dp' → logprob: -1.459214687347412
    3. 'if' → logprob: -2.334214687347412
    4. ' if' → logprob: -3.334214687347412
    5. '           ' → logprob: -6.459214687347412
    6. '               ' → logprob: -6.709214687347412
    7. '	dp' → logprob: -8.709214210510254
    8. 'continue' → logprob: -9.584214210510254
    9. '                   ' → logprob: -9.709214210510254
    10. 'for' → logprob: -10.209214210510254

Token 222: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.6635003685951233
    2. 'i' → logprob: -1.0385003089904785
    3. ' combined' → logprob: -2.2885003089904785
    4. ' i' → logprob: -3.7885003089904785
    5. 'dp' → logprob: -6.6635003089904785
    6. 'comb' → logprob: -6.6635003089904785
    7. 'the' → logprob: -7.1635003089904785
    8. 'merged' → logprob: -7.5385003089904785
    9. 'two' → logprob: -7.6635003089904785
    10. ' two' → logprob: -7.7885003089904785

Token 223: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9991058707237244
    2. ':' → logprob: -1.8741059303283691
    3. ')' → logprob: -2.124105930328369
    4. '<|end|>' → logprob: -2.749105930328369
    5. ',' → logprob: -3.124105930328369
    6. '           ' → logprob: -3.249105930328369
    7. 'if' → logprob: -3.249105930328369
    8. '):' → logprob: -3.249105930328369
    9. '<|end|>' → logprob: -3.374105930328369
    10. '>' → logprob: -4.124105930328369

Token 224: ' using' (ID: 2360)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7719288468360901
    2. ' dp' → logprob: -1.3969287872314453
    3. 'if' → logprob: -2.0219287872314453
    4. ' if' → logprob: -2.1469287872314453
    5. '           ' → logprob: -3.7719287872314453
    6. '               ' → logprob: -4.146928787231445
    7. ')' → logprob: -6.646928787231445
    8. '                   ' → logprob: -8.521928787231445
    9. '	dp' → logprob: -8.896928787231445
    10. 'i' → logprob: -9.396928787231445

Token 225: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5329864025115967
    2. '2' → logprob: -1.5329864025115967
    3. ' i' → logprob: -2.2829864025115967
    4. ' ' → logprob: -3.5329864025115967
    5. ' two' → logprob: -4.032986640930176
    6. '1' → logprob: -4.657986640930176
    7. 'two' → logprob: -4.907986640930176
    8. ' combined' → logprob: -4.907986640930176
    9. 'combined' → logprob: -4.907986640930176
    10. 'dp' → logprob: -5.532986640930176

Token 226: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01647113263607025
    2. ' i' → logprob: -4.141470909118652
    3. ' ' → logprob: -9.141470909118652
    4. ')' → logprob: -9.516470909118652
    5. '   ' → logprob: -9.516470909118652
    6. '[i' → logprob: -9.891470909118652
    7. '2' → logprob: -10.016470909118652
    8. ']' → logprob: -11.828970909118652
    9. ' two' → logprob: -12.016470909118652
    10. 'combined' → logprob: -12.016470909118652

Token 227: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20163601636886597
    2. ' -' → logprob: -1.7016360759735107
    3. ')' → logprob: -8.95163631439209
    4. ' ' → logprob: -10.07663631439209
    5. '   ' → logprob: -10.82663631439209
    6. ')-' → logprob: -11.20163631439209
    7. ' )' → logprob: -11.95163631439209
    8. '  ' → logprob: -12.70163631439209
    9. '	' → logprob: -13.20163631439209
    10. '```' → logprob: -14.51413631439209

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027432930655777454
    2. ' ' → logprob: -6.127743244171143
    3. '1' → logprob: -7.502743244171143
    4. '   ' → logprob: -12.3777437210083
    5. '```' → logprob: -14.5027437210083
    6. ')' → logprob: -14.8152437210083
    7. '  ' → logprob: -15.3777437210083
    8. '3' → logprob: -15.8152437210083
    9. '       ' → logprob: -15.9402437210083
    10. '	' → logprob: -16.065242767333984

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3780703842639923
    2. ']' → logprob: -1.25307035446167
    3. '])' → logprob: -4.25307035446167
    4. ']+' → logprob: -5.37807035446167
    5. ' )' → logprob: -5.50307035446167
    6. ')+' → logprob: -6.37807035446167
    7. ' ]' → logprob: -7.00307035446167
    8. 'dp' → logprob: -7.12807035446167
    9. ')]' → logprob: -7.25307035446167
    10. ']-' → logprob: -8.253070831298828

Token 230: ' pipes' (ID: 46808)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7982950806617737
    2. ']' → logprob: -1.423295021057129
    3. ')' → logprob: -2.298295021057129
    4. ' dp' → logprob: -3.048295021057129
    5. ']+' → logprob: -3.548295021057129
    6. ' and' → logprob: -3.673295021057129
    7. ' -' → logprob: -4.048295021057129
    8. ' ]' → logprob: -4.548295021057129
    9. ' )' → logprob: -4.798295021057129
    10. '-' → logprob: -5.048295021057129

Token 231: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3346197009086609
    2. ' if' → logprob: -1.8346197605133057
    3. ' and' → logprob: -3.2096197605133057
    4. ')' → logprob: -3.9596197605133057
    5. ',' → logprob: -4.084619522094727
    6. '
' → logprob: -4.334619522094727
    7. '               ' → logprob: -4.459619522094727
    8. ')
' → logprob: -5.459619522094727
    9. 'if' → logprob: -5.709619522094727
    10. '       ' → logprob: -5.709619522094727

Token 232: ' combined' (ID: 15890)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8789564371109009
    2. ' ' → logprob: -1.3789564371109009
    3. ' combined' → logprob: -2.1289563179016113
    4. ' j' → logprob: -2.3789563179016113
    5. 'combined' → logprob: -3.0039563179016113
    6. ' (' → logprob: -3.5039563179016113
    7. 'j' → logprob: -4.253956317901611
    8. ' p' → logprob: -5.378956317901611
    9. ' max' → logprob: -5.753956317901611
    10. '(p' → logprob: -6.003956317901611

Token 233: ' pipe' (ID: 22906)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2835550606250763
    2. 'if' → logprob: -1.658555030822754
    3. ')' → logprob: -4.158555030822754
    4. '           ' → logprob: -4.533555030822754
    5. 'token' → logprob: -5.283555030822754
    6. '   ' → logprob: -5.908555030822754
    7. '               ' → logprob: -6.408555030822754
    8. '       ' → logprob: -6.783555030822754
    9. '[i' → logprob: -6.783555030822754
    10. ' token' → logprob: -6.783555030822754

Token 234: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5846818089485168
    2. ' if' → logprob: -1.584681749343872
    3. '               ' → logprob: -1.709681749343872
    4. ')' → logprob: -4.084681987762451
    5. '
' → logprob: -4.584681987762451
    6. 'if' → logprob: -4.584681987762451
    7. ',' → logprob: -4.584681987762451
    8. ')
' → logprob: -6.459681987762451
    9. '       ' → logprob: -6.584681987762451
    10. ' =' → logprob: -6.959681987762451

Token 235: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6411325335502625
    2. ' if' → logprob: -0.8911325335502625
    3. 'if' → logprob: -4.016132354736328
    4. ')' → logprob: -4.141132354736328
    5. '               ' → logprob: -4.641132354736328
    6. ',' → logprob: -5.391132354736328
    7. '
' → logprob: -5.516132354736328
    8. '<|end|>' → logprob: -5.766132354736328
    9. ')
' → logprob: -6.391132354736328
    10. '       ' → logprob: -6.766132354736328

Token 236: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5199103951454163
    2. ')' → logprob: -2.2699103355407715
    3. '           ' → logprob: -2.2699103355407715
    4. 'if' → logprob: -2.2699103355407715
    5. '
' → logprob: -3.2699103355407715
    6. ')
' → logprob: -3.6449103355407715
    7. '               ' → logprob: -4.3949103355407715
    8. ',' → logprob: -5.1449103355407715
    9. 'dp' → logprob: -6.1449103355407715
    10. '):
' → logprob: -6.5199103355407715

Token 237: ' actually' (ID: 4771)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3804025650024414
    2. ' dp' → logprob: -1.6304025650024414
    3. 'dp' → logprob: -2.7554025650024414
    4. 'if' → logprob: -3.0054025650024414
    5. '           ' → logprob: -5.255402565002441
    6. ')' → logprob: -7.130402565002441
    7. '
' → logprob: -7.255402565002441
    8. '               ' → logprob: -8.380402565002441
    9. ')
' → logprob: -9.255402565002441
    10. '	dp' → logprob: -9.505402565002441

Token 238: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6962538361549377
    2. ' dp' → logprob: -1.321253776550293
    3. 'if' → logprob: -2.321253776550293
    4. 'dp' → logprob: -2.571253776550293
    5. ' combined' → logprob: -3.571253776550293
    6. 'combined' → logprob: -4.196253776550293
    7. ')' → logprob: -5.071253776550293
    8. '
' → logprob: -5.571253776550293
    9. ' continue' → logprob: -6.696253776550293
    10. ' max' → logprob: -7.321253776550293

Token 239: ' must' (ID: 2804)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3732922375202179
    2. ')' → logprob: -2.4982922077178955
    3. 'continue' → logprob: -2.8732922077178955
    4. ']' → logprob: -3.3732922077178955
    5. '[i' → logprob: -3.6232922077178955
    6. '=' → logprob: -3.8732922077178955
    7. ' should' → logprob: -4.248292446136475
    8. '           ' → logprob: -4.373292446136475
    9. ' can' → logprob: -4.998292446136475
    10. '       ' → logprob: -4.998292446136475

Token 240: ' account' (ID: 3527)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.6593289375305176
    2. 'compare' → logprob: -1.1593289375305176
    3. 'continue' → logprob: -3.5343289375305176
    4. 'check' → logprob: -3.6593289375305176
    5. ' consider' → logprob: -4.159328937530518
    6. ' reconsider' → logprob: -4.159328937530518
    7. 'choose' → logprob: -4.284328937530518
    8. 'store' → logprob: -4.659328937530518
    9. 'also' → logprob: -4.909328937530518
    10. ' compare' → logprob: -5.409328937530518

Token 241: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43178021907806396
    2. '=' → logprob: -2.3067803382873535
    3. ' ' → logprob: -2.9317803382873535
    4. ' =' → logprob: -3.1817803382873535
    5. ' if' → logprob: -3.4317803382873535
    6. '           ' → logprob: -3.4317803382873535
    7. 'for' → logprob: -3.4317803382873535
    8. '    ' → logprob: -4.1817803382873535
    9. '            ' → logprob: -4.8067803382873535
    10. '   ' → logprob: -5.3067803382873535

Token 242: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4606248140335083
    2. ' dp' → logprob: -1.7106248140335083
    3. '2' → logprob: -1.8356248140335083
    4. 'dp' → logprob: -2.2106246948242188
    5. '1' → logprob: -2.5856246948242188
    6. ' (' → logprob: -2.8356246948242188
    7. ' j' → logprob: -3.3356246948242188
    8. ' combined' → logprob: -3.8356246948242188
    9. '(' → logprob: -3.8356246948242188
    10. ' the' → logprob: -4.085624694824219

Token 243: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.889546275138855
    2. '[i' → logprob: -1.639546275138855
    3. ' ' → logprob: -2.1395463943481445
    4. ' and' → logprob: -2.8895463943481445
    5. '   ' → logprob: -3.0145463943481445
    6. ' if' → logprob: -3.7645463943481445
    7. ' +' → logprob: -3.8895463943481445
    8. '
' → logprob: -4.2645463943481445
    9. ':' → logprob: -4.2645463943481445
    10. ' )' → logprob: -4.5145463943481445

Token 244: ' sum' (ID: 4215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7751424312591553
    2. '1' → logprob: -2.4001424312591553
    3. ' ' → logprob: -2.6501424312591553
    4. ' (' → logprob: -2.7751424312591553
    5. 'j' → logprob: -3.2751424312591553
    6. '(' → logprob: -3.4001424312591553
    7. '(p' → logprob: -3.6501424312591553
    8. ' j' → logprob: -3.6501424312591553
    9. 'dp' → logprob: -3.7751424312591553
    10. 'p' → logprob: -3.7751424312591553

Token 245: '_length' (ID: 11514)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.27533432841300964
    2. ')' → logprob: -1.650334358215332
    3. '   ' → logprob: -4.900334358215332
    4. ' *' → logprob: -5.025334358215332
    5. '(i' → logprob: -5.150334358215332
    6. ' )' → logprob: -5.650334358215332
    7. '[' → logprob: -5.900334358215332
    8. ']' → logprob: -6.025334358215332
    9. '       ' → logprob: -6.650334358215332
    10. '_' → logprob: -6.650334358215332

Token 246: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6874552965164185
    2. '           ' → logprob: -0.9374552965164185
    3. '               ' → logprob: -3.437455177307129
    4. ')' → logprob: -3.687455177307129
    5. '<|end|>' → logprob: -4.062455177307129
    6. '       ' → logprob: -5.187455177307129
    7. 'if' → logprob: -5.187455177307129
    8. ')
' → logprob: -5.687455177307129
    9. ',' → logprob: -5.687455177307129
    10. '<|end|>' → logprob: -5.812455177307129

Token 248: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31494417786598206
    2. '           ' → logprob: -1.8149441480636597
    3. 'if' → logprob: -2.939944267272949
    4. '               ' → logprob: -3.939944267272949
    5. 'dp' → logprob: -4.064944267272949
    6. ')' → logprob: -5.064944267272949
    7. ' dp' → logprob: -5.314944267272949
    8. '
' → logprob: -5.689944267272949
    9. ',' → logprob: -7.814944267272949
    10. ')
' → logprob: -7.814944267272949

Token 249: ' To' (ID: 2514)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3471742272377014
    2. 'if' → logprob: -1.5971741676330566
    3. '           ' → logprob: -3.3471741676330566
    4. ' dp' → logprob: -3.5971741676330566
    5. 'dp' → logprob: -3.5971741676330566
    6. '               ' → logprob: -7.847174167633057
    7. '       ' → logprob: -9.722174644470215
    8. ')' → logprob: -9.847174644470215
    9. '
' → logprob: -9.847174644470215
    10. '#' → logprob: -10.472174644470215

Token 250: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6565637588500977
    2. ' continue' → logprob: -0.7815637588500977
    3. ' complete' → logprob: -5.156563758850098
    4. '       ' → logprob: -5.906563758850098
    5. 'complete' → logprob: -5.906563758850098
    6. ' clarify' → logprob: -6.156563758850098
    7. '           ' → logprob: -6.531563758850098
    8. 'i' → logprob: -7.031563758850098
    9. ']' → logprob: -7.906563758850098
    10. 'solve' → logprob: -8.031563758850098

Token 251: ' multiple' (ID: 7598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38511526584625244
    2. ' )' → logprob: -1.6351152658462524
    3. '<|end|>' → logprob: -3.135115146636963
    4. ' ' → logprob: -3.635115146636963
    5. 'i' → logprob: -4.135115146636963
    6. ' i' → logprob: -4.260115146636963
    7. '<|end|>' → logprob: -5.135115146636963
    8. '_' → logprob: -5.260115146636963
    9. ' the' → logprob: -5.760115146636963
    10. '    ' → logprob: -6.885115146636963

Token 252: ' merges' (ID: 176901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0893990993499756
    2. '<|end|>' → logprob: -1.3393990993499756
    3. ',' → logprob: -1.7143990993499756
    4. '<|end|>' → logprob: -2.2143990993499756
    5. '       ' → logprob: -3.8393990993499756
    6. ':
' → logprob: -4.339399337768555
    7. '           ' → logprob: -4.339399337768555
    8. ')' → logprob: -4.339399337768555
    9. '   ' → logprob: -4.714399337768555
    10. '):' → logprob: -5.214399337768555

Token 254: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8942482471466064
    2. ' continue' → logprob: -1.5192482471466064
    3. '       ' → logprob: -2.5192482471466064
    4. '<|end|>' → logprob: -2.7692482471466064
    5. 'continue' → logprob: -2.8942482471466064
    6. '               ' → logprob: -2.8942482471466064
    7. '...' → logprob: -3.7692482471466064
    8. '            
' → logprob: -4.394248008728027
    9. '<|end|>' → logprob: -4.519248008728027
    10. '#' → logprob: -4.519248008728027

Token 255: ' should' (ID: 1757)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.05938613787293434
    2. ' should' → logprob: -4.184386253356934
    3. 'need' → logprob: -4.309386253356934
    4. ' must' → logprob: -4.809386253356934
    5. ' continue' → logprob: -4.809386253356934
    6. ' might' → logprob: -5.434386253356934
    7. ' may' → logprob: -6.309386253356934
    8. ' would' → logprob: -6.309386253356934
    9. 'continue' → logprob: -6.684386253356934
    10. '       ' → logprob: -6.934386253356934

Token 256: ' keep' (ID: 3357)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4842907786369324
    2. ' continue' → logprob: -1.2342908382415771
    3. 'consider' → logprob: -3.359290838241577
    4. ' reconsider' → logprob: -3.984290838241577
    5. ' consider' → logprob: -4.234290599822998
    6. 'pass' → logprob: -4.609290599822998
    7. ' pass' → logprob: -5.484290599822998
    8. 'store' → logprob: -6.984290599822998
    9. '#' → logprob: -7.109290599822998
    10. 'maint' → logprob: -7.234290599822998

Token 257: ' dp' (ID: 21546)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.5049037933349609
    2. ' track' → logprob: -1.004903793334961
    3. ' not' → logprob: -4.629903793334961
    4. 'not' → logprob: -4.629903793334961
    5. 'tracking' → logprob: -5.254903793334961
    6. 'count' → logprob: -7.004903793334961
    7. 'two' → logprob: -7.004903793334961
    8. 'a' → logprob: -7.379903793334961
    9. 'additional' → logprob: -7.379903793334961
    10. 'both' → logprob: -7.379903793334961

Token 258: ' with' (ID: 483)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3107157051563263
    2. ')' → logprob: -2.185715675354004
    3. '<|end|>' → logprob: -2.310715675354004
    4. '<|end|>' → logprob: -3.935715675354004
    5. '[' → logprob: -4.810715675354004
    6. ']' → logprob: -5.560715675354004
    7. '_' → logprob: -5.560715675354004
    8. '   ' → logprob: -5.810715675354004
    9. '
' → logprob: -5.935715675354004
    10. 's' → logprob: -6.185715675354004

Token 259: ' maximum' (ID: 10562)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.6475979089736938
    2. ' tuples' → logprob: -1.6475979089736938
    3. '(count' → logprob: -1.8975979089736938
    4. 'both' → logprob: -2.3975977897644043
    5. 'pairs' → logprob: -3.1475977897644043
    6. 'the' → logprob: -3.2725977897644043
    7. 'two' → logprob: -3.2725977897644043
    8. '(' → logprob: -3.2725977897644043
    9. ' both' → logprob: -3.5225977897644043
    10. ' (' → logprob: -3.6475977897644043

Token 260: ' sum' (ID: 4215)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.3339282274246216
    2. 'dp' → logprob: -1.5839282274246216
    3. ' salary' → logprob: -1.9589282274246216
    4. ')' → logprob: -2.583928108215332
    5. '[i' → logprob: -3.083928108215332
    6. ' tokens' → logprob: -3.208928108215332
    7. ' value' → logprob: -3.583928108215332
    8. ' count' → logprob: -3.958928108215332
    9. 'salary' → logprob: -4.208928108215332
    10. '(dp' → logprob: -4.333928108215332

Token 261: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4692067503929138
    2. '[i' → logprob: -1.5942068099975586
    3. '   ' → logprob: -2.7192068099975586
    4. ']' → logprob: -3.2192068099975586
    5. ' )' → logprob: -4.594206809997559
    6. '       ' → logprob: -4.594206809997559
    7. '_' → logprob: -4.969206809997559
    8. '])' → logprob: -5.469206809997559
    9. ' ]' → logprob: -5.844206809997559
    10. 'max' → logprob: -5.969206809997559

Token 262: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9588009715080261
    2. '<|end|>' → logprob: -0.9588009715080261
    3. '[i' → logprob: -1.958801031112671
    4. '<|end|>' → logprob: -3.458801031112671
    5. '
' → logprob: -3.833801031112671
    6. ' ' → logprob: -5.333800792694092
    7. '[' → logprob: -5.458800792694092
    8. '\n' → logprob: -5.583800792694092
    9. '   ' → logprob: -5.708800792694092
    10. ' )' → logprob: -6.083800792694092

Token 263: ' partitions' (ID: 89097)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.391359567642212
    2. 'count' → logprob: -2.266359567642212
    3. 'the' → logprob: -2.266359567642212
    4. ' the' → logprob: -2.641359567642212
    5. ' i' → logprob: -2.891359567642212
    6. 'different' → logprob: -3.016359567642212
    7. ' current' → logprob: -3.391359567642212
    8. 'current' → logprob: -3.516359567642212
    9. ' merging' → logprob: -3.516359567642212
    10. ' different' → logprob: -3.766359567642212

Token 264: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48763683438301086
    2. 'if' → logprob: -1.8626368045806885
    3. '           ' → logprob: -2.3626368045806885
    4. 'dp' → logprob: -3.4876368045806885
    5. ' max' → logprob: -3.6126368045806885
    6. ' dp' → logprob: -3.8626368045806885
    7. 'max' → logprob: -3.9876368045806885
    8. '
' → logprob: -4.862637042999268
    9. '               ' → logprob: -5.112637042999268
    10. '       ' → logprob: -5.612637042999268

Token 267: ' Actually' (ID: 50557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3889525830745697
    2. 'dp' → logprob: -1.513952612876892
    3. ' if' → logprob: -3.8889524936676025
    4. 'for' → logprob: -4.388952732086182
    5. 'from' → logprob: -4.388952732086182
    6. '           ' → logprob: -4.638952732086182
    7. 'combined' → logprob: -4.888952732086182
    8. 'prev' → logprob: -5.013952732086182
    9. 'length' → logprob: -5.013952732086182
    10. '#' → logprob: -5.263952732086182

Token 268: ' problem' (ID: 4792)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8455669283866882
    2. ' pass' → logprob: -2.095566987991333
    3. ' dp' → logprob: -2.345566987991333
    4. 'dp' → logprob: -2.720566987991333
    5. '           ' → logprob: -2.970566987991333
    6. 'if' → logprob: -3.220566987991333
    7. '#' → logprob: -3.345566987991333
    8. 'pass' → logprob: -3.720566987991333
    9. ' continue' → logprob: -3.720566987991333
    10. ' for' → logprob: -4.095566749572754

Token 269: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' equivalent' (ID: 23458)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.363951563835144
    2. ' dp' → logprob: -1.488951563835144
    3. '<|end|>' → logprob: -2.2389516830444336
    4. 'dp' → logprob: -2.3639516830444336
    5. ' not' → logprob: -2.6139516830444336
    6. '#' → logprob: -2.6139516830444336
    7. ' ' → logprob: -3.2389516830444336
    8. ' )' → logprob: -3.7389516830444336
    9. '    ' → logprob: -4.613951683044434
    10. '_' → logprob: -4.738951683044434

Token 271: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3948611915111542
    2. '           ' → logprob: -1.8948612213134766
    3. 'to' → logprob: -2.6448612213134766
    4. '=' → logprob: -3.6448612213134766
    5. '               ' → logprob: -4.144861221313477
    6. ')' → logprob: -4.394861221313477
    7. ' =' → logprob: -4.769861221313477
    8. '[i' → logprob: -4.894861221313477
    9. '       ' → logprob: -5.019861221313477
    10. ']' → logprob: -5.269861221313477

Token 272: ' maximizing' (ID: 130999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.562629759311676
    2. 'max' → logprob: -1.6876296997070312
    3. 'mer' → logprob: -3.6876296997070312
    4. 'comb' → logprob: -3.6876296997070312
    5. 'def' → logprob: -3.8126296997070312
    6. 'the' → logprob: -3.9376296997070312
    7. 'merge' → logprob: -4.187629699707031
    8. '"' → logprob: -4.437629699707031
    9. ' merging' → logprob: -4.562629699707031
    10. 'finding' → logprob: -4.687629699707031

Token 273: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11403524875640869
    2. 'max' → logprob: -3.114035129547119
    3. ' dp' → logprob: -3.239035129547119
    4. '(dp' → logprob: -4.989035129547119
    5. 'the' → logprob: -5.114035129547119
    6. ' the' → logprob: -5.614035129547119
    7. ' max' → logprob: -5.739035129547119
    8. 'sum' → logprob: -7.114035129547119
    9. ')' → logprob: -7.614035129547119
    10. '...' → logprob: -7.739035129547119

Token 274: ' over' (ID: 1072)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9912395477294922
    2. ')' → logprob: -1.6162395477294922
    3. '_' → logprob: -2.241239547729492
    4. '           ' → logprob: -2.991239547729492
    5. '+' → logprob: -3.241239547729492
    6. ' of' → logprob: -3.491239547729492
    7. '       ' → logprob: -3.616239547729492
    8. '<|end|>' → logprob: -3.616239547729492
    9. '   ' → logprob: -4.116239547729492
    10. '(i' → logprob: -4.366239547729492

Token 275: ' groups' (ID: 8896)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8544228672981262
    2. 'all' → logprob: -1.7294228076934814
    3. ' all' → logprob: -1.8544228076934814
    4. 'segments' → logprob: -2.9794228076934814
    5. 'partition' → logprob: -3.6044228076934814
    6. ' partitions' → logprob: -3.6044228076934814
    7. 'dp' → logprob: -3.6044228076934814
    8. 'the' → logprob: -4.2294230461120605
    9. 'i' → logprob: -4.4794230461120605
    10. 'sub' → logprob: -4.4794230461120605

Token 276: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8771036267280579
    2. '<|end|>' → logprob: -1.627103567123413
    3. '           ' → logprob: -2.252103567123413
    4. '               ' → logprob: -2.752103567123413
    5. '            ' → logprob: -3.502103567123413
    6. '       ' → logprob: -3.502103567123413
    7. ' )' → logprob: -3.877103567123413
    8. '                ' → logprob: -4.002103805541992
    9. ' ' → logprob: -4.502103805541992
    10. ',' → logprob: -4.877103805541992

Token 278: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5479685068130493
    2. '...' → logprob: -1.6729685068130493
    3. ')' → logprob: -2.0479683876037598
    4. '           ' → logprob: -2.5479683876037598
    5. 'dp' → logprob: -3.0479683876037598
    6. '                ' → logprob: -3.2979683876037598
    7. '       ' → logprob: -3.4229683876037598
    8. 'i' → logprob: -3.9229683876037598
    9. ' i' → logprob: -4.04796838760376
    10. ' dp' → logprob: -4.04796838760376

Token 279: ' sum' (ID: 4215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.560972273349762
    2. '<|end|>' → logprob: -1.8109722137451172
    3. ' i' → logprob: -3.185972213745117
    4. '...' → logprob: -3.685972213745117
    5. ' if' → logprob: -4.060972213745117
    6. 'i' → logprob: -4.185972213745117
    7. ' )' → logprob: -4.435972213745117
    8. 'dp' → logprob: -4.435972213745117
    9. ' for' → logprob: -4.685972213745117
    10. ' ' → logprob: -4.810972213745117

Token 280: ' over' (ID: 1072)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.169830083847046
    2. ')' → logprob: -2.544830083847046
    3. '+' → logprob: -2.544830083847046
    4. ' of' → logprob: -2.794830083847046
    5. ' +' → logprob: -2.794830083847046
    6. '       ' → logprob: -3.044830083847046
    7. '_' → logprob: -3.044830083847046
    8. '(i' → logprob: -3.419830083847046
    9. '(dp' → logprob: -3.544830083847046
    10. '   ' → logprob: -3.669830083847046

Token 281: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -1.0820080041885376
    2. ' groups' → logprob: -1.4570080041885376
    3. ' i' → logprob: -1.8320080041885376
    4. 'i' → logprob: -2.082007884979248
    5. 'dp' → logprob: -4.082007884979248
    6. ')' → logprob: -4.207007884979248
    7. ' group' → logprob: -4.457007884979248
    8. ' dp' → logprob: -4.457007884979248
    9. '   ' → logprob: -4.832007884979248
    10. ' (' → logprob: -4.832007884979248

Token 282: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0175790786743164
    2. '<|end|>' → logprob: -1.2675790786743164
    3. ' of' → logprob: -2.3925790786743164
    4. '           ' → logprob: -3.3925790786743164
    5. ':' → logprob: -3.3925790786743164
    6. '       ' → logprob: -3.5175790786743164
    7. '<|end|>' → logprob: -3.7675790786743164
    8. ' +' → logprob: -4.392579078674316
    9. '[i' → logprob: -4.392579078674316
    10. '):' → logprob: -4.517579078674316

Token 283: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -1.8066548109054565
    2. 'group' → logprob: -1.8066548109054565
    3. 'dp' → logprob: -1.9316548109054565
    4. ' (' → logprob: -2.431654930114746
    5. ' dp' → logprob: -2.431654930114746
    6. '(group' → logprob: -2.431654930114746
    7. 'max' → logprob: -3.431654930114746
    8. 'length' → logprob: -3.556654930114746
    9. 'count' → logprob: -3.806654930114746
    10. ' length' → logprob: -3.806654930114746

Token 284: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4667966961860657
    2. '_' → logprob: -2.091796636581421
    3. ' _' → logprob: -2.966796636581421
    4. '_s' → logprob: -3.466796636581421
    5. '_size' → logprob: -3.591796636581421
    6. '[' → logprob: -3.716796636581421
    7. '_lengths' → logprob: -3.716796636581421
    8. '_sizes' → logprob: -3.966796636581421
    9. '[i' → logprob: -4.216796875
    10. '   ' → logprob: -4.966796875

Token 285: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32493674755096436
    2. '<|end|>' → logprob: -1.8249367475509644
    3. 's' → logprob: -3.199936866760254
    4. '<|end|>' → logprob: -3.949936866760254
    5. ']' → logprob: -4.324936866760254
    6. '[i' → logprob: -4.824936866760254
    7. '   ' → logprob: -5.074936866760254
    8. '           ' → logprob: -5.449936866760254
    9. '_' → logprob: -5.699936866760254
    10. ' )' → logprob: -5.824936866760254

Token 286: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.7137603163719177
    2. ' group' → logprob: -1.4637603759765625
    3. 'sum' → logprob: -1.8387603759765625
    4. ' sum' → logprob: -2.8387603759765625
    5. '(group' → logprob: -3.8387603759765625
    6. '(sum' → logprob: -4.0887603759765625
    7. ' (' → logprob: -4.3387603759765625
    8. 'length' → logprob: -5.9637603759765625
    9. '(' → logprob: -5.9637603759765625
    10. 'len' → logprob: -6.5887603759765625

Token 287: '_length' (ID: 11514)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.4603710174560547
    2. '_length' → logprob: -1.5853710174560547
    3. 's' → logprob: -2.4603710174560547
    4. '_size' → logprob: -4.585371017456055
    5. ' lengths' → logprob: -4.835371017456055
    6. '_len' → logprob: -4.835371017456055
    7. '_sizes' → logprob: -4.835371017456055
    8. '[i' → logprob: -4.835371017456055
    9. 'length' → logprob: -5.335371017456055
    10. ')' → logprob: -5.460371017456055

Token 288: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8264064192771912
    2. '           ' → logprob: -1.076406478881836
    3. '               ' → logprob: -2.326406478881836
    4. '<|end|>' → logprob: -2.826406478881836
    5. '<|end|>' → logprob: -4.076406478881836
    6. ' if' → logprob: -4.576406478881836
    7. '...' → logprob: -5.201406478881836
    8. ' )' → logprob: -5.451406478881836
    9. ',' → logprob: -5.576406478881836
    10. '
' → logprob: -5.951406478881836

Token 290: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46944230794906616
    2. '           ' → logprob: -1.469442367553711
    3. ' if' → logprob: -2.719442367553711
    4. ')' → logprob: -3.344442367553711
    5. '<|end|>' → logprob: -4.344442367553711
    6. ',' → logprob: -5.594442367553711
    7. '
' → logprob: -5.719442367553711
    8. 'if' → logprob: -5.719442367553711
    9. '<|end|>' → logprob: -5.844442367553711
    10. '                
' → logprob: -6.094442367553711

Token 291: ' where' (ID: 1919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8012386560440063
    2. ')' → logprob: -1.4262386560440063
    3. '<|end|>' → logprob: -2.426238536834717
    4. '           ' → logprob: -2.926238536834717
    5. ' )' → logprob: -3.551238536834717
    6. '<|end|>' → logprob: -3.801238536834717
    7. '               ' → logprob: -3.926238536834717
    8. 'if' → logprob: -3.926238536834717
    9. ' and' → logprob: -4.676238536834717
    10. ' ' → logprob: -4.801238536834717

Token 292: ' groups' (ID: 8896)
  Prédit: ' groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groups' → logprob: -1.2863961458206177
    2. ')' → logprob: -1.4113961458206177
    3. ' the' → logprob: -1.9113961458206177
    4. ' group' → logprob: -3.161396026611328
    5. 'groups' → logprob: -3.161396026611328
    6. 'the' → logprob: -3.286396026611328
    7. 'dp' → logprob: -3.411396026611328
    8. '<|end|>' → logprob: -3.536396026611328
    9. ' dp' → logprob: -3.911396026611328
    10. ' i' → logprob: -4.161396026611328

Token 293: ' are' (ID: 553)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32037344574928284
    2. '<|end|>' → logprob: -1.9453734159469604
    3. ')' → logprob: -2.82037353515625
    4. '<|end|>' → logprob: -3.57037353515625
    5. '[' → logprob: -4.69537353515625
    6. ']' → logprob: -4.94537353515625
    7. 's' → logprob: -5.57037353515625
    8. '   ' → logprob: -5.82037353515625
    9. ':' → logprob: -5.94537353515625
    10. '=' → logprob: -6.07037353515625

Token 294: ' formed' (ID: 20680)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.38255971670150757
    2. 'cont' → logprob: -2.5075597763061523
    3. 'non' → logprob: -3.0075597763061523
    4. 'formed' → logprob: -3.2575597763061523
    5. 'dis' → logprob: -3.5075597763061523
    6. 'merged' → logprob: -4.132559776306152
    7. ' formed' → logprob: -4.257559776306152
    8. 'adj' → logprob: -4.632559776306152
    9. 'continuous' → logprob: -4.882559776306152
    10. 'sub' → logprob: -4.882559776306152

Token 295: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' merging' (ID: 107009)
  Prédit: 'mer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.35981300473213196
    2. 'comb' → logprob: -2.3598129749298096
    3. ' merging' → logprob: -2.3598129749298096
    4. 'spl' → logprob: -3.3598129749298096
    5. 'either' → logprob: -3.9848129749298096
    6. ' either' → logprob: -4.984813213348389
    7. 'joining' → logprob: -4.984813213348389
    8. ' combining' → logprob: -5.234813213348389
    9. 'partition' → logprob: -5.609813213348389
    10. 'con' → logprob: -5.609813213348389

Token 297: ' adjacent' (ID: 39069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7465136647224426
    2. '<|end|>' → logprob: -0.9965136647224426
    3. ' )' → logprob: -3.371513605117798
    4. '<|end|>' → logprob: -3.746513605117798
    5. '[i' → logprob: -3.996513605117798
    6. '       ' → logprob: -3.996513605117798
    7. '   ' → logprob: -4.496513843536377
    8. 's' → logprob: -5.121513843536377
    9. ' tokens' → logprob: -5.246513843536377
    10. 'tokens' → logprob: -5.496513843536377

Token 298: ' pipes' (ID: 46808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7861282825469971
    2. '<|end|>' → logprob: -0.7861282825469971
    3. '_' → logprob: -3.786128282546997
    4. 's' → logprob: -4.286128044128418
    5. ' pipes' → logprob: -4.286128044128418
    6. '<|end|>' → logprob: -4.786128044128418
    7. '   ' → logprob: -5.286128044128418
    8. '-' → logprob: -5.286128044128418
    9. 'pipes' → logprob: -5.911128044128418
    10. '       ' → logprob: -6.536128044128418

Token 299: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.113903522491455
    2. ' no' → logprob: -2.363903522491455
    3. ' j' → logprob: -2.488903522491455
    4. '+' → logprob: -2.613903522491455
    5. ' spaces' → logprob: -2.613903522491455
    6. ')' → logprob: -2.988903522491455
    7. 'spaces' → logprob: -3.238903522491455
    8. ' a' → logprob: -3.488903522491455
    9. 'no' → logprob: -3.613903522491455
    10. 'p' → logprob: -3.738903522491455

Token 301: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5432552099227905
    2. ' if' → logprob: -1.1682552099227905
    3. 'if' → logprob: -3.04325532913208
    4. '               ' → logprob: -3.16825532913208
    5. ')' → logprob: -4.66825532913208
    6. '       ' → logprob: -6.41825532913208
    7. 'dp' → logprob: -6.66825532913208
    8. '<|end|>' → logprob: -6.79325532913208
    9. ' for' → logprob: -7.04325532913208
    10. ' dp' → logprob: -7.29325532913208

Token 304: ' So' (ID: 2632)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4402141571044922
    2. '<|end|>' → logprob: -1.4402141571044922
    3. '       ' → logprob: -2.065214157104492
    4. 'if' → logprob: -2.315214157104492
    5. ')' → logprob: -2.815214157104492
    6. '           ' → logprob: -3.190214157104492
    7. 'dp' → logprob: -3.565214157104492
    8. ' for' → logprob: -4.065214157104492
    9. '<|end|>' → logprob: -4.190214157104492
    10. '...' → logprob: -4.565214157104492

Token 305: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3711873292922974
    2. '       ' → logprob: -1.6211873292922974
    3. ' for' → logprob: -2.121187210083008
    4. ' if' → logprob: -2.121187210083008
    5. ')' → logprob: -3.246187210083008
    6. ' dp' → logprob: -3.496187210083008
    7. ' continue' → logprob: -3.621187210083008
    8. '               ' → logprob: -3.746187210083008
    9. 'for' → logprob: -3.746187210083008
    10. '...' → logprob: -3.746187210083008

Token 306: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026214372366666794
    2. ' i' → logprob: -4.526214599609375
    3. ')' → logprob: -5.276214599609375
    4. 'least' → logprob: -6.276214599609375
    5. ' least' → logprob: -6.526214599609375
    6. '[i' → logprob: -7.151214599609375
    7. 'the' → logprob: -7.276214599609375
    8. 'this' → logprob: -7.651214599609375
    9. '    ' → logprob: -7.776214599609375
    10. 'if' → logprob: -8.026214599609375

Token 308: ' step' (ID: 5983)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5249146223068237
    2. ' i' → logprob: -1.1499146223068237
    3. ' step' → logprob: -3.0249147415161133
    4. ')' → logprob: -4.399914741516113
    5. ' token' → logprob: -6.024914741516113
    6. ' if' → logprob: -6.024914741516113
    7. '    ' → logprob: -6.024914741516113
    8. ' iteration' → logprob: -6.024914741516113
    9. 'token' → logprob: -6.024914741516113
    10. '   ' → logprob: -6.149914741516113

Token 309: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2803581953048706
    2. '           ' → logprob: -2.78035831451416
    3. '<|end|>' → logprob: -2.90535831451416
    4. '):' → logprob: -3.40535831451416
    5. ',' → logprob: -3.65535831451416
    6. ' :' → logprob: -4.03035831451416
    7. '<|end|>' → logprob: -4.40535831451416
    8. ')' → logprob: -5.15535831451416
    9. ':
' → logprob: -5.28035831451416
    10. ' =' → logprob: -5.65535831451416

Token 310: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1760354042053223
    2. 'dp' → logprob: -1.9260354042053223
    3. ')' → logprob: -2.0510354042053223
    4. ' dp' → logprob: -2.0510354042053223
    5. '<|end|>' → logprob: -2.4260354042053223
    6. '       ' → logprob: -2.4260354042053223
    7. '               ' → logprob: -3.9260354042053223
    8. ' if' → logprob: -4.051035404205322
    9. '...' → logprob: -4.301035404205322
    10. '<|end|>' → logprob: -4.926035404205322

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06687859445810318
    2. '[' → logprob: -3.6918785572052
    3. '<|end|>' → logprob: -3.8168785572052
    4. ')' → logprob: -4.691878795623779
    5. '<|end|>' → logprob: -5.816878795623779
    6. ' =' → logprob: -6.941878795623779
    7. '=' → logprob: -7.316878795623779
    8. ']' → logprob: -7.316878795623779
    9. '.append' → logprob: -8.066878318786621
    10. ',' → logprob: -8.191878318786621

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024333905428647995
    2. '[i' → logprob: -4.274333953857422
    3. '-' → logprob: -5.024333953857422
    4. ' ]' → logprob: -6.399333953857422
    5. ' -' → logprob: -8.024333953857422
    6. '[' → logprob: -8.024333953857422
    7. ']+' → logprob: -8.399333953857422
    8. '[-' → logprob: -8.899333953857422
    9. ']==' → logprob: -8.899333953857422
    10. ']=' → logprob: -9.024333953857422

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775005221366882
    2. '=' → logprob: -0.8275005221366882
    3. '=max' → logprob: -6.827500343322754
    4. '<|end|>' → logprob: -9.077500343322754
    5. ' +=' → logprob: -9.202500343322754
    6. '+=' → logprob: -9.827500343322754
    7. ')' → logprob: -10.202500343322754
    8. ']' → logprob: -10.702500343322754
    9. ']=' → logprob: -10.827500343322754
    10. ',' → logprob: -10.827500343322754

Token 314: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02648189663887024
    2. ' max' → logprob: -3.651481866836548
    3. 'dp' → logprob: -8.651481628417969
    4. '   ' → logprob: -12.901481628417969
    5. ' dp' → logprob: -13.026481628417969
    6. '	max' → logprob: -14.901481628417969
    7. '0' → logprob: -14.901481628417969
    8. '[max' → logprob: -15.526481628417969
    9. '(max' → logprob: -15.776481628417969
    10. ' ' → logprob: -15.776481628417969

Token 315: ' over' (ID: 1072)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5774357318878174
    2. '(' → logprob: -0.8274357318878174
    3. 'dp' → logprob: -7.077435493469238
    4. ' (' → logprob: -8.077435493469238
    5. '(
' → logprob: -8.827435493469238
    6. ' dp' → logprob: -8.952435493469238
    7. ')' → logprob: -11.452435493469238
    8. ',' → logprob: -11.702435493469238
    9. '_dp' → logprob: -11.952435493469238
    10. '	dp' → logprob: -12.202435493469238

Token 316: ' k' (ID: 372)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9133111238479614
    2. 'k' → logprob: -1.0383111238479614
    3. 'j' → logprob: -2.663311004638672
    4. 'i' → logprob: -2.913311004638672
    5. 'all' → logprob: -3.663311004638672
    6. ' all' → logprob: -4.288311004638672
    7. ' dp' → logprob: -4.538311004638672
    8. ' k' → logprob: -4.538311004638672
    9. 'groups' → logprob: -4.913311004638672
    10. ' j' → logprob: -5.163311004638672

Token 317: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8156526684761047
    2. '+' → logprob: -1.44065260887146
    3. ' +' → logprob: -2.31565260887146
    4. '<|end|>' → logprob: -2.31565260887146
    5. '[' → logprob: -3.31565260887146
    6. ']' → logprob: -3.56565260887146
    7. '<|end|>' → logprob: -4.190652847290039
    8. '[i' → logprob: -4.690652847290039
    9. '=' → logprob: -5.440652847290039
    10. ' )' → logprob: -5.440652847290039

Token 318: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25551190972328186
    2. ' i' → logprob: -1.6305118799209595
    3. '=' → logprob: -4.00551176071167
    4. '=i' → logprob: -4.50551176071167
    5. ' =' → logprob: -8.630512237548828
    6. '	i' → logprob: -9.880512237548828
    7. '[i' → logprob: -10.380512237548828
    8. ' ' → logprob: -10.380512237548828
    9. ',' → logprob: -11.255512237548828
    10. ')' → logprob: -11.255512237548828

Token 319: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6553165316581726
    2. '<|end|>' → logprob: -2.0303165912628174
    3. '):' → logprob: -2.1553165912628174
    4. ':' → logprob: -2.6553165912628174
    5. ' +' → logprob: -3.5303165912628174
    6. '+' → logprob: -3.7803165912628174
    7. '<|end|>' → logprob: -3.9053165912628174
    8. ',' → logprob: -4.155316352844238
    9. ']' → logprob: -4.530316352844238
    10. '           ' → logprob: -4.780316352844238

Token 320: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.1380254626274109
    2. 'dp' → logprob: -2.1380255222320557
    3. ' max' → logprob: -5.138025283813477
    4. 'max' → logprob: -6.013025283813477
    5. '(dp' → logprob: -7.263025283813477
    6. ' ' → logprob: -7.638025283813477
    7. '```' → logprob: -8.763025283813477
    8. ' i' → logprob: -8.888025283813477
    9. ' p' → logprob: -9.013025283813477
    10. '1' → logprob: -9.013025283813477

Token 321: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10240666568279266
    2. '[k' → logprob: -2.7274067401885986
    3. '[' → logprob: -3.7274067401885986
    4. ')' → logprob: -5.8524065017700195
    5. '[max' → logprob: -7.2274065017700195
    6. ']' → logprob: -7.6024065017700195
    7. '<|end|>' → logprob: -7.6024065017700195
    8. 'i' → logprob: -8.10240650177002
    9. '[j' → logprob: -8.35240650177002
    10. '[
' → logprob: -8.47740650177002

Token 322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021949470043182373
    2. ']+' → logprob: -4.021949291229248
    3. ' ]' → logprob: -6.021949291229248
    4. ' +' → logprob: -7.521949291229248
    5. '+' → logprob: -8.021949768066406
    6. '])' → logprob: -8.646949768066406
    7. ')' → logprob: -9.146949768066406
    8. '],' → logprob: -9.271949768066406
    9. '[' → logprob: -10.396949768066406
    10. '[i' → logprob: -11.271949768066406

Token 323: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7930241227149963
    2. '<|end|>' → logprob: -0.7930241227149963
    3. '<|end|>' → logprob: -3.1680240631103516
    4. ' )' → logprob: -4.168024063110352
    5. '[' → logprob: -5.043024063110352
    6. ' ' → logprob: -5.668024063110352
    7. '           ' → logprob: -5.668024063110352
    8. ']' → logprob: -5.668024063110352
    9. '
' → logprob: -5.793024063110352
    10. '[i' → logprob: -6.168024063110352

Token 324: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26107192039489746
    2. '(p' → logprob: -1.7610719203948975
    3. ' sum' → logprob: -4.636072158813477
    4. '((' → logprob: -4.886072158813477
    5. ' ((' → logprob: -5.011072158813477
    6. 'sum' → logprob: -5.136072158813477
    7. '(' → logprob: -5.136072158813477
    8. '(sum' → logprob: -5.136072158813477
    9. '(j' → logprob: -5.761072158813477
    10. '(i' → logprob: -6.011072158813477

Token 325: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1687786877155304
    2. ' (' → logprob: -2.918778657913208
    3. '((' → logprob: -3.043778657913208
    4. 'i' → logprob: -3.668778657913208
    5. '(len' → logprob: -4.793778896331787
    6. '(' → logprob: -5.668778896331787
    7. 'len' → logprob: -5.668778896331787
    8. '(j' → logprob: -6.418778896331787
    9. ' ((' → logprob: -6.543778896331787
    10. '(sum' → logprob: -6.668778896331787

Token 326: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16567473113536835
    2. '-' → logprob: -1.9156746864318848
    3. '-k' → logprob: -5.290674686431885
    4. ')' → logprob: -8.415675163269043
    5. ']' → logprob: -10.290675163269043
    6. '[k' → logprob: -10.415675163269043
    7. '   ' → logprob: -10.915675163269043
    8. '-token' → logprob: -10.915675163269043
    9. '```' → logprob: -11.415675163269043
    10. ')-' → logprob: -11.540675163269043

Token 327: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1530754715204239
    2. ')*' → logprob: -2.0280754566192627
    3. ' )' → logprob: -5.528075695037842
    4. ')*(' → logprob: -6.153075695037842
    5. ' *' → logprob: -6.528075695037842
    6. '*' → logprob: -6.653075695037842
    7. ']' → logprob: -7.903075695037842
    8. ']*' → logprob: -8.153075218200684
    9. '   ' → logprob: -8.903075218200684
    10. ' -' → logprob: -9.028075218200684

Token 328: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.30729836225509644
    2. 'p' → logprob: -1.4322984218597412
    3. '(sum' → logprob: -4.682298183441162
    4. ' sum' → logprob: -4.932298183441162
    5. '(p' → logprob: -5.307298183441162
    6. 'j' → logprob: -6.182298183441162
    7. ' p' → logprob: -7.057298183441162
    8. ')' → logprob: -8.05729866027832
    9. 'lambda' → logprob: -8.43229866027832
    10. ' (' → logprob: -8.43229866027832

Token 329: '_p' (ID: 1359)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07267778366804123
    2. '(' → logprob: -2.6976778507232666
    3. 'p' → logprob: -6.5726776123046875
    4. '(
' → logprob: -7.4476776123046875
    5. ')' → logprob: -8.822677612304688
    6. ' (' → logprob: -8.822677612304688
    7. '[' → logprob: -9.322677612304688
    8. '   ' → logprob: -9.822677612304688
    9. '[p' → logprob: -9.947677612304688
    10. '(

' → logprob: -10.197677612304688

Token 330: 'ipes' (ID: 10113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7829353213310242
    2. '[i' → logprob: -1.032935380935669
    3. '[k' → logprob: -1.907935380935669
    4. '_' → logprob: -4.53293514251709
    5. '[j' → logprob: -4.90793514251709
    6. '[p' → logprob: -5.03293514251709
    7. '_p' → logprob: -5.28293514251709
    8. '_[' → logprob: -6.03293514251709
    9. '[:' → logprob: -6.15793514251709
    10. ')' → logprob: -6.28293514251709

Token 331: ' +' (ID: 659)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.018919114023447037
    2. '[' → logprob: -4.768918991088867
    3. '[p' → logprob: -5.393918991088867
    4. '[j' → logprob: -5.643918991088867
    5. '[i' → logprob: -6.893918991088867
    6. '[:' → logprob: -7.518918991088867
    7. ')' → logprob: -8.018918991088867
    8. '   ' → logprob: -9.393918991088867
    9. ' [' → logprob: -10.018918991088867
    10. '           ' → logprob: -11.143918991088867

Token 332: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.56563401222229
    2. 'sum' → logprob: -1.56563401222229
    3. ' j' → logprob: -1.94063401222229
    4. 'j' → logprob: -2.56563401222229
    5. '(sum' → logprob: -7.065633773803711
    6. ' (' → logprob: -7.440633773803711
    7. '   ' → logprob: -8.690633773803711
    8. ' ' → logprob: -9.065633773803711
    9. '    ' → logprob: -9.315633773803711
    10. '_j' → logprob: -9.440633773803711

Token 333: '_j' (ID: 12021)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8972621560096741
    2. 'p' → logprob: -1.1472620964050293
    3. '_j' → logprob: -2.2722620964050293
    4. '(j' → logprob: -2.6472620964050293
    5. 'j' → logprob: -3.1472620964050293
    6. '_p' → logprob: -3.3972620964050293
    7. '[j' → logprob: -4.647262096405029
    8. '(' → logprob: -5.397262096405029
    9. '_' → logprob: -5.397262096405029
    10. '   ' → logprob: -7.022262096405029

Token 334: 'oints' (ID: 28687)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5836787819862366
    2. 'oints' → logprob: -1.2086787223815918
    3. '[k' → logprob: -2.833678722381592
    4. 'k' → logprob: -3.958678722381592
    5. '[' → logprob: -4.208678722381592
    6. 'ks' → logprob: -4.833678722381592
    7. 'ects' → logprob: -5.083678722381592
    8. 'acks' → logprob: -5.208678722381592
    9. 's' → logprob: -5.208678722381592
    10. 'cts' → logprob: -5.833678722381592

Token 335: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0200814101845026
    2. ' )' → logprob: -4.520081520080566
    3. '[i' → logprob: -5.020081520080566
    4. '   ' → logprob: -7.895081520080566
    5. ' +' → logprob: -7.895081520080566
    6. '[' → logprob: -8.395081520080566
    7. ')
' → logprob: -8.520081520080566
    8. '       ' → logprob: -8.645081520080566
    9. '           ' → logprob: -8.770081520080566
    10. '+' → logprob: -9.395081520080566

Token 336: ' [' (ID: 723)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.33012038469314575
    2. ' p' → logprob: -2.455120325088501
    3. 'range' → logprob: -2.830120325088501
    4. 'k' → logprob: -3.330120325088501
    5. ' range' → logprob: -3.830120325088501
    6. '[p' → logprob: -4.20512056350708
    7. '[k' → logprob: -4.58012056350708
    8. '[j' → logprob: -4.58012056350708
    9. '(p' → logprob: -5.08012056350708
    10. ')' → logprob: -5.45512056350708

Token 337: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009381395066156983
    2. ' k' → logprob: -7.0009379386901855
    3. 'i' → logprob: -11.125938415527344
    4. '[k' → logprob: -12.625938415527344
    5. '   ' → logprob: -12.875938415527344
    6. '(k' → logprob: -13.375938415527344
    7. '_k' → logprob: -13.500938415527344
    8. '	k' → logprob: -14.125938415527344
    9. '{k' → logprob: -14.375938415527344
    10. ',k' → logprob: -15.125938415527344

Token 338: ',i' (ID: 25032)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.003050438826903701
    2. ':' → logprob: -6.753050327301025
    3. ' :' → logprob: -7.378050327301025
    4. ':k' → logprob: -7.503050327301025
    5. 'i' → logprob: -7.628050327301025
    6. ',i' → logprob: -8.878050804138184
    7. 'k' → logprob: -11.253050804138184
    8. ':j' → logprob: -11.253050804138184
    9. ',' → logprob: -11.503050804138184
    10. '[i' → logprob: -12.253050804138184

Token 339: '))

' (ID: 9746)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01500714011490345
    2. '])' → logprob: -4.640007019042969
    3. ':' → logprob: -5.640007019042969
    4. ')' → logprob: -7.140007019042969
    5. '-k' → logprob: -8.515007019042969
    6. '1' → logprob: -9.265007019042969
    7. ' -' → logprob: -9.640007019042969
    8. ')])' → logprob: -9.640007019042969
    9. '-)' → logprob: -9.890007019042969
    10. ']' → logprob: -9.890007019042969

Token 340: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42506352066993713
    2. ' ' → logprob: -2.4250636100769043
    3. '<|end|>' → logprob: -2.4250636100769043
    4. '[' → logprob: -2.8000636100769043
    5. '       ' → logprob: -4.175063610076904
    6. '    ' → logprob: -4.425063610076904
    7. '\' → logprob: -4.550063610076904
    8. '   ' → logprob: -4.675063610076904
    9. '[i' → logprob: -4.925063610076904
    10. '<|end|>' → logprob: -4.925063610076904

Token 341: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11113233864307404
    2. '       ' → logprob: -4.2361321449279785
    3. '           ' → logprob: -4.3611321449279785
    4. ' )' → logprob: -4.4861321449279785
    5. ' ' → logprob: -4.6111321449279785
    6. ']' → logprob: -4.9861321449279785
    7. '<|end|>' → logprob: -5.1111321449279785
    8. '    ' → logprob: -5.4861321449279785
    9. '<|end|>' → logprob: -5.6111321449279785
    10. '   ' → logprob: -5.6111321449279785

Token 342: ' Optimize' (ID: 167174)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0334653854370117
    2. ' ' → logprob: -1.4084653854370117
    3. '+' → logprob: -2.7834653854370117
    4. '    ' → logprob: -3.2834653854370117
    5. ' 
' → logprob: -3.4084653854370117
    6. '\' → logprob: -3.5334653854370117
    7. ' )' → logprob: -3.7834653854370117
    8. '=' → logprob: -3.9084653854370117
    9. '<|end|>' → logprob: -4.033465385437012
    10. 'if' → logprob: -4.158465385437012

Token 343: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12637963891029358
    2. ')' → logprob: -3.0013797283172607
    3. '<|end|>' → logprob: -3.2513797283172607
    4. ' )' → logprob: -4.626379489898682
    5. '<|end|>' → logprob: -5.501379489898682
    6. '    ' → logprob: -5.876379489898682
    7. ' 
' → logprob: -6.751379489898682
    8. '[' → logprob: -6.751379489898682
    9. '+' → logprob: -6.876379489898682
    10. '  ' → logprob: -7.001379489898682

Token 344: ' prefix' (ID: 18633)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5445269346237183
    2. 'prefix' → logprob: -2.169527053833008
    3. 'dp' → logprob: -2.544527053833008
    4. ' range' → logprob: -2.669527053833008
    5. ')' → logprob: -2.794527053833008
    6. ' itertools' → logprob: -2.919527053833008
    7. ' prefix' → logprob: -3.044527053833008
    8. 'i' → logprob: -3.169527053833008
    9. ' sys' → logprob: -3.169527053833008
    10. 'sum' → logprob: -3.544527053833008

Token 345: ' sums' (ID: 73121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002950243651866913
    2. '_sum' → logprob: -6.877950191497803
    3. '_s' → logprob: -7.127950191497803
    4. ')' → logprob: -7.752950191497803
    5. 's' → logprob: -7.877950191497803
    6. ' _' → logprob: -9.377950668334961
    7. '_)' → logprob: -9.377950668334961
    8. 'sum' → logprob: -9.877950668334961
    9. '_prefix' → logprob: -10.627950668334961
    10. ' sums' → logprob: -11.377950668334961

Token 346: ':

' (ID: 1402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024732304736971855
    2. '<|end|>' → logprob: -4.5247321128845215
    3. '           ' → logprob: -6.0247321128845215
    4. '   ' → logprob: -6.0247321128845215
    5. '        ' → logprob: -6.5247321128845215
    6. '        
' → logprob: -6.7747321128845215
    7. '<|end|>' → logprob: -6.7747321128845215
    8. 'import' → logprob: -7.0247321128845215
    9. '...' → logprob: -7.7747321128845215
    10. ',' → logprob: -8.27473258972168

Token 348: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2253698110580444
    2. '        ' → logprob: -1.3503698110580444
    3. '           ' → logprob: -2.600369930267334
    4. 'prefix' → logprob: -3.100369930267334
    5. '<|end|>' → logprob: -3.225369930267334
    6. ' p' → logprob: -3.475369930267334
    7. '#' → logprob: -3.600369930267334
    8. '   ' → logprob: -3.975369930267334
    9. '    ' → logprob: -4.100369930267334
    10. 'p' → logprob: -4.225369930267334

Token 349: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42237168550491333
    2. '   ' → logprob: -2.2973716259002686
    3. '           ' → logprob: -2.7973716259002686
    4. '    ' → logprob: -3.0473716259002686
    5. '        ' → logprob: -3.1723716259002686
    6. 'import' → logprob: -4.172371864318848
    7. '#' → logprob: -4.172371864318848
    8. '<|end|>' → logprob: -4.422371864318848
    9. ' ' → logprob: -4.672371864318848
    10. '\' → logprob: -5.047371864318848

Token 351: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3959214389324188
    2. '           ' → logprob: -2.770921468734741
    3. 'continue' → logprob: -3.020921468734741
    4. '<|end|>' → logprob: -3.270921468734741
    5. 'if' → logprob: -3.520921468734741
    6. 'import' → logprob: -3.645921468734741
    7. '   ' → logprob: -3.895921468734741
    8. '#' (adapté à ' #') → logprob: -3.895921468734741
    9. 'from' → logprob: -4.020921230316162
    10. '        ' → logprob: -4.895921230316162

Token 352: ' Implementation' (ID: 60216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.00174081325531
    2. '#' → logprob: -1.75174081325531
    3. 'import' → logprob: -2.3767409324645996
    4. '<|end|>' → logprob: -2.5017409324645996
    5. 'continue' → logprob: -3.0017409324645996
    6. '   ' → logprob: -3.1267409324645996
    7. '        ' → logprob: -3.3767409324645996
    8. '...' → logprob: -3.7517409324645996
    9. 'prefix' → logprob: -3.8767409324645996
    10. '           ' → logprob: -3.8767409324645996

Token 353: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.12226049602031708
    2. 'pass' → logprob: -2.997260570526123
    3. 'import' → logprob: -3.497260570526123
    4. ' prefix' → logprob: -3.997260570526123
    5. 'sys' → logprob: -5.622260570526123
    6. '```' → logprob: -5.997260570526123
    7. '#' → logprob: -6.247260570526123
    8. '...' → logprob: -6.372260570526123
    9. 'from' → logprob: -6.997260570526123
    10. 'continue' → logprob: -7.122260570526123

Token 355: ' sums' (ID: 73121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01965438388288021
    2. '_s' → logprob: -4.019654273986816
    3. '_sum' → logprob: -6.894654273986816
    4. ' _' → logprob: -8.644654273986816
    5. 's' → logprob: -8.894654273986816
    6. 'sum' → logprob: -9.394654273986816
    7. ' sums' → logprob: -10.394654273986816
    8. '_
' → logprob: -10.769654273986816
    9. '_)' → logprob: -11.769654273986816
    10. '_prefix' → logprob: -12.519654273986816

Token 356: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029356524348258972
    2. '   ' → logprob: -4.779356479644775
    3. '<|end|>' → logprob: -4.904356479644775
    4. 'import' → logprob: -5.404356479644775
    5. '        
' → logprob: -6.654356479644775
    6. '        ' → logprob: -7.029356479644775
    7. 'prefix' → logprob: -7.029356479644775
    8. '#' → logprob: -7.154356479644775
    9. '    ' → logprob: -7.154356479644775
    10. '
' → logprob: -7.404356479644775

Token 357: ' DP' (ID: 51992)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8203028440475464
    2. ' continue' → logprob: -2.070302963256836
    3. '...' → logprob: -2.195302963256836
    4. '#' → logprob: -2.445302963256836
    5. 'import' → logprob: -2.820302963256836
    6. 'break' → logprob: -3.070302963256836
    7. 'dp' → logprob: -3.820302963256836
    8. 'prefix' → logprob: -4.070302963256836
    9. 'from' → logprob: -4.570302963256836
    10. ' break' → logprob: -4.820302963256836

Token 358: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11082261055707932
    2. '<|end|>' → logprob: -3.1108226776123047
    3. 'import' → logprob: -3.3608226776123047
    4. '   ' → logprob: -4.360822677612305
    5. '#' → logprob: -5.735822677612305
    6. '        ' → logprob: -5.985822677612305
    7. '        
' → logprob: -6.360822677612305
    8. '
' → logprob: -6.860822677612305
    9. '           ' → logprob: -7.235822677612305
    10. '...' → logprob: -7.360822677612305

Token 359: 'def' (ID: 1314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0995657667517662
    2. 'import' → logprob: -3.0995657444000244
    3. 'from' → logprob: -3.8495657444000244
    4. '#' → logprob: -4.8495659828186035
    5. '   ' → logprob: -5.0995659828186035
    6. 'prefix' → logprob: -5.3495659828186035
    7. 'length' → logprob: -5.7245659828186035
    8. 'n' → logprob: -6.9745659828186035
    9. 'sum' → logprob: -7.0995659828186035
    10. ' length' → logprob: -7.5995659828186035

Token 360: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21902815997600555
    2. ' prefix' → logprob: -2.3440282344818115
    3. '_' → logprob: -3.2190282344818115
    4. ' _' → logprob: -3.7190282344818115
    5. ' solve' → logprob: -3.8440282344818115
    6. '_prefix' → logprob: -5.094027996063232
    7. 'prefix' → logprob: -6.094027996063232
    8. ' calculate' → logprob: -6.344027996063232
    9. ' compute' → logprob: -6.344027996063232
    10. ' ' → logprob: -6.844027996063232

Token 361: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016854150220751762
    2. ':' → logprob: -4.641854286193848
    3. '()' → logprob: -5.141854286193848
    4. '_' → logprob: -7.766854286193848
    5. '():
' → logprob: -8.141854286193848
    6. 'import' → logprob: -9.266854286193848
    7. '(' → logprob: -9.516854286193848
    8. '<|end|>' → logprob: -9.766854286193848
    9. '<|end|>' → logprob: -9.891854286193848
    10. '.' → logprob: -10.891854286193848

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006867402233183384
    2. 'import' → logprob: -5.256867408752441
    3. ' import' → logprob: -7.506867408752441
    4. '       ' → logprob: -7.756867408752441
    5. '<|end|>' → logprob: -7.756867408752441
    6. '...' → logprob: -10.506867408752441
    7. '#' → logprob: -10.756867408752441
    8. '```' → logprob: -10.881867408752441
    9. '    
' → logprob: -11.256867408752441
    10. ':' → logprob: -11.381867408752441

Token 363: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05120765045285225
    2. 'import' (adapté à ' import') → logprob: -3.6762075424194336
    3. ' import' → logprob: -4.176207542419434
    4. ' sys' → logprob: -5.301207542419434
    5. '    ' → logprob: -6.176207542419434
    6. 'from' → logprob: -7.551207542419434
    7. ' n' → logprob: -8.051207542419434
    8. '   ' → logprob: -8.801207542419434
    9. ' from' → logprob: -9.051207542419434
    10. ' p' → logprob: -9.301207542419434

Token 364: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008158236742019653
    2. ' sys' → logprob: -7.2508158683776855
    3. 'it' → logprob: -9.750815391540527
    4. 'bis' → logprob: -10.875815391540527
    5. 'math' → logprob: -11.000815391540527
    6. ' itertools' → logprob: -11.625815391540527
    7. 'collections' → logprob: -13.750815391540527
    8. '=sys' → logprob: -14.000815391540527
    9. 'os' → logprob: -15.375815391540527
    10. 'thread' → logprob: -15.750815391540527

Token 365: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12902513146400452
    2. 'import' → logprob: -2.8790252208709717
    3. '<|end|>' → logprob: -3.1290252208709717
    4. '.readline' → logprob: -4.754024982452393
    5. '<|end|>' → logprob: -6.129024982452393
    6. '_' → logprob: -6.379024982452393
    7. ',' → logprob: -6.629024982452393
    8. '=sys' → logprob: -6.629024982452393
    9. '
' → logprob: -7.254024982452393
    10. 'def' → logprob: -7.379024982452393

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11649034172296524
    2. '_' → logprob: -3.491490364074707
    3. 'import' → logprob: -3.491490364074707
    4. '.readline' → logprob: -4.366490364074707
    5. '<|end|>' → logprob: -4.991490364074707
    6. '=sys' → logprob: -5.116490364074707
    7. ',' → logprob: -5.241490364074707
    8. '.' → logprob: -5.366490364074707
    9. '.stdin' → logprob: -5.866490364074707
    10. '=' → logprob: -6.366490364074707

Token 367: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04648713394999504
    2. 'input' → logprob: -4.296487331390381
    3. 'import' → logprob: -4.421487331390381
    4. 'stdin' → logprob: -5.046487331390381
    5. ' readline' → logprob: -6.046487331390381
    6. '.readline' → logprob: -6.046487331390381
    7. '
' → logprob: -6.421487331390381
    8. '.stdin' → logprob: -6.671487331390381
    9. 'def' → logprob: -6.921487331390381
    10. 'stdout' → logprob: -7.296487331390381

Token 368: '.set' (ID: 1230)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.9655476808547974
    2. '.stdin' → logprob: -0.9655476808547974
    3. '.stdout' → logprob: -1.4655476808547974
    4. '.' → logprob: -5.340547561645508
    5. '.argv' → logprob: -6.715547561645508
    6. '.set' → logprob: -6.840547561645508
    7. '.stderr' → logprob: -8.215547561645508
    8. '.setdefault' → logprob: -9.215547561645508
    9. ' .' → logprob: -11.465547561645508
    10. 'exit' → logprob: -11.715547561645508

Token 369: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -1.0206720617134124e-05
    2. 'trace' → logprob: -12.50001049041748
    3. 'limit' → logprob: -12.75001049041748
    4. ' recursion' → logprob: -13.37501049041748
    5. 're' → logprob: -14.50001049041748
    6. 'set' → logprob: -14.87501049041748
    7. '_rec' → logprob: -15.00001049041748
    8. '   ' → logprob: -15.62501049041748
    9. 'thread' → logprob: -16.125009536743164
    10. 'def' → logprob: -16.500009536743164

Token 370: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.4656579120783135e-05
    2. 'ur' → logprob: -11.125044822692871
    3. 'limit' → logprob: -11.500044822692871
    4. 'ursive' → logprob: -11.625044822692871
    5. 'urs' → logprob: -12.125044822692871
    6. 'urse' → logprob: -13.875044822692871
    7. '   ' → logprob: -14.125044822692871
    8. '(' → logprob: -14.125044822692871
    9. 'c' → logprob: -14.375044822692871
    10. 'urity' → logprob: -14.875044822692871

Token 371: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.228420689702034
    2. '_limit' → logprob: -1.6034207344055176
    3. ' limit' → logprob: -5.853420734405518
    4. '_depth' → logprob: -9.60342025756836
    5. 'depth' → logprob: -10.35342025756836
    6. '_limits' → logprob: -12.10342025756836
    7. 'rec' → logprob: -12.35342025756836
    8. '_LIMIT' → logprob: -12.72842025756836
    9. '_' → logprob: -12.85342025756836
    10. '   ' → logprob: -13.10342025756836

Token 372: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '=' → logprob: -11.50002384185791
    3. ' (' → logprob: -12.00002384185791
    4. '(
' → logprob: -12.50002384185791
    5. '   ' → logprob: -13.75002384185791
    6. '100' → logprob: -14.12502384185791
    7. '(int' → logprob: -14.37502384185791
    8. ' =' → logprob: -14.75002384185791
    9. '  ' → logprob: -15.75002384185791
    10. '1' → logprob: -15.87502384185791

Token 373: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005968777113594115
    2. '100' → logprob: -8.00059700012207
    3. '1' → logprob: -8.25059700012207
    4. 'int' → logprob: -16.25059700012207
    5. '200' → logprob: -16.87559700012207
    6. '300' → logprob: -17.00059700012207
    7. '１０' → logprob: -17.12559700012207
    8. '999' → logprob: -17.62559700012207
    9. 'pow' → logprob: -17.75059700012207
    10. '500' → logprob: -18.00059700012207

Token 374: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.004997855518013239
    2. '00' → logprob: -5.879997730255127
    3. '<<' → logprob: -6.504997730255127
    4. '0' → logprob: -7.754997730255127
    5. '=' → logprob: -9.504998207092285
    6. '8' → logprob: -9.879998207092285
    7. '500' → logprob: -10.504998207092285
    8. '   ' → logprob: -10.504998207092285
    9. '28' → logprob: -11.504998207092285
    10. '_' → logprob: -11.754998207092285

Token 375: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0019306590547785163
    2. '20' → logprob: -6.2519307136535645
    3. '27' → logprob: -13.126930236816406
    4. '28' → logprob: -19.251930236816406
    5. '26' → logprob: -20.001930236816406
    6. '30' → logprob: -20.751930236816406
    7. '24' → logprob: -21.376930236816406
    8. '21' → logprob: -21.626930236816406
    9. '=' → logprob: -22.126930236816406
    10. 'Twenty' → logprob: -22.126930236816406

Token 376: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0004307884373702109
    2. '20' → logprob: -7.750430583953857
    3. '27' → logprob: -16.500431060791016
    4. '30' → logprob: -19.375431060791016
    5. '26' → logprob: -20.750431060791016
    6. '28' → logprob: -21.625431060791016
    7. '15' → logprob: -22.375431060791016
    8. '29' → logprob: -23.250431060791016
    9. '18' → logprob: -23.750431060791016
    10. '24' → logprob: -23.875431060791016

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005047675222158432
    2. '   ' → logprob: -5.505047798156738
    3. '
' → logprob: -7.380047798156738
    4. ' )' → logprob: -9.130047798156738
    5. '<|end|>' → logprob: -9.505047798156738
    6. '    
' → logprob: -9.880047798156738
    7. ')
' → logprob: -10.005047798156738
    8. ' ' → logprob: -11.255047798156738
    9. '  
' → logprob: -11.755047798156738
    10. '' → logprob: -12.255047798156738

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025963976979255676
    2. '
' → logprob: -4.65096378326416
    3. '    
' → logprob: -5.52596378326416
    4. 'prefix' → logprob: -5.52596378326416
    5. 'input' → logprob: -6.02596378326416
    6. 'import' → logprob: -6.15096378326416
    7. '\' → logprob: -7.27596378326416
    8. '    ' → logprob: -7.52596378326416
    9. 'def' → logprob: -7.65096378326416
    10. ' 
' → logprob: -8.52596378326416

Token 379: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.43444588780403137
    2. '   ' → logprob: -1.684445858001709
    3. 'prefix' → logprob: -2.559445858001709
    4. 'from' → logprob: -3.434445858001709
    5. 'n' → logprob: -3.934445858001709
    6. 'thread' → logprob: -4.309445858001709
    7. ' threading' → logprob: -5.184445858001709
    8. 'def' → logprob: -5.934445858001709
    9. 'pass' → logprob: -5.934445858001709
    10. 'main' → logprob: -6.059445858001709

Token 380: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20741936564445496
    2. '=' → logprob: -1.9574193954467773
    3. ' =' → logprob: -3.4574193954467773
    4. '(' → logprob: -4.582419395446777
    5. ')' → logprob: -6.207419395446777
    6. '()='' → logprob: -7.332419395446777
    7. '())' → logprob: -7.707419395446777
    8. '<|end|>' → logprob: -8.957419395446777
    9. '()]' → logprob: -9.332419395446777
    10. '().' → logprob: -9.457419395446777

Token 381: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04858771339058876
    2. ' sys' → logprob: -3.0485877990722656
    3. '	sys' → logprob: -15.548587799072266
    4. '=sys' → logprob: -16.923587799072266
    5. '(sys' → logprob: -17.923587799072266
    6. 'lambda' → logprob: -20.673587799072266
    7. '.sys' → logprob: -21.423587799072266
    8. '   ' → logprob: -22.173587799072266
    9. '_sys' → logprob: -22.173587799072266
    10. 'input' → logprob: -22.173587799072266

Token 382: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004462812503334135
    2. '.stdout' → logprob: -8.000446319580078
    3. '.readline' → logprob: -10.250446319580078
    4. '=sys' → logprob: -10.625446319580078
    5. ' .' → logprob: -10.875446319580078
    6. '.' → logprob: -10.875446319580078
    7. 'stdin' → logprob: -12.500446319580078
    8. '.sys' → logprob: -12.625446319580078
    9. '.stderr' → logprob: -12.750446319580078
    10. '.argv' → logprob: -13.625446319580078

Token 383: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.660315895918757e-05
    2. 'read' → logprob: -10.500076293945312
    3. '.read' → logprob: -10.750076293945312
    4. '.' → logprob: -11.500076293945312
    5. '.readlines' → logprob: -12.125076293945312
    6. ' readline' → logprob: -12.125076293945312
    7. '_read' → logprob: -13.375076293945312
    8. '._' → logprob: -13.875076293945312
    9. '.stdin' → logprob: -14.250076293945312
    10. 'sys' → logprob: -14.250076293945312

Token 384: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12510070204734802
    2. '
' → logprob: -3.000100612640381
    3. '    
' → logprob: -3.875100612640381
    4. '<|end|>' → logprob: -4.375100612640381
    5. 'def' → logprob: -4.500100612640381
    6. 'import' → logprob: -4.625100612640381
    7. 'n' → logprob: -5.250100612640381
    8. '#' → logprob: -5.750100612640381
    9. 'from' → logprob: -6.875100612640381
    10. 'prefix' → logprob: -7.500100612640381

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.556997537612915
    2. 'n' → logprob: -1.056997537612915
    3. 'prefix' → logprob: -3.306997537612915
    4. 'def' → logprob: -4.056997299194336
    5. 'p' → logprob: -4.181997299194336
    6. 'from' → logprob: -4.931997299194336
    7. '#' → logprob: -7.431997299194336
    8. '       ' → logprob: -7.681997299194336
    9. 'pass' → logprob: -8.056997299194336
    10. ' n' → logprob: -8.181997299194336

Token 386: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00829304102808237
    2. '   ' → logprob: -5.008293151855469
    3. 'from' → logprob: -6.883293151855469
    4. 'prefix' → logprob: -8.508293151855469
    5. 'N' → logprob: -8.883293151855469
    6. ' n' → logprob: -9.508293151855469
    7. 'def' → logprob: -9.883293151855469
    8. '#' → logprob: -10.883293151855469
    9. 'p' → logprob: -11.258293151855469
    10. '
' → logprob: -11.383293151855469

Token 387: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019287518225610256
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -16.001928329467773
    4. '   ' → logprob: -17.126928329467773
    5. ' ' → logprob: -17.376928329467773
    6. 'true' → logprob: -18.001928329467773
    7. '    ' → logprob: -19.126928329467773
    8. '1' → logprob: -19.251928329467773
    9. '
' → logprob: -20.126928329467773
    10. '```' → logprob: -20.501928329467773

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039845842868089676
    2. '       ' → logprob: -3.7898459434509277
    3. '():' → logprob: -4.664845943450928
    4. ':
' → logprob: -5.664845943450928
    5. '(n' → logprob: -7.664845943450928
    6. ' :' → logprob: -7.664845943450928
    7. '<|end|>' → logprob: -7.664845943450928
    8. ',' → logprob: -7.789845943450928
    9. '):' → logprob: -7.789845943450928
    10. '=' → logprob: -8.16484546661377

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030109254643321037
    2. 'n' → logprob: -4.155109405517578
    3. ' n' → logprob: -4.405109405517578
    4. ' line' → logprob: -6.530109405517578
    5. 'line' → logprob: -9.155109405517578
    6. '<|end|>' → logprob: -9.530109405517578
    7. '   ' → logprob: -9.780109405517578
    8. ' ' → logprob: -11.530109405517578
    9. 's' → logprob: -12.155109405517578
    10. 'token' → logprob: -12.405109405517578

Token 390: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.08607848733663559
    2. 'line' → logprob: -2.586078405380249
    3. ' line' → logprob: -5.586078643798828
    4. ' n' → logprob: -6.586078643798828
    5. '       ' → logprob: -6.586078643798828
    6. '   ' → logprob: -7.711078643798828
    7. 's' → logprob: -8.711078643798828
    8. '           ' → logprob: -11.086078643798828
    9. 'l' → logprob: -12.086078643798828
    10. 'data' → logprob: -12.211078643798828

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0792105421423912
    2. '=' → logprob: -2.5792105197906494
    3. ' ==' → logprob: -8.32921028137207
    4. '==' → logprob: -10.45421028137207
    5. '   ' → logprob: -10.70421028137207
    6. '=int' → logprob: -11.57921028137207
    7. ':' → logprob: -12.32921028137207
    8. ')' → logprob: -12.82921028137207
    9. ' ' → logprob: -13.32921028137207
    10. '=line' → logprob: -13.57921028137207

Token 392: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804183006286621
    2. ' int' → logprob: -3.288041830062866
    3. '=int' → logprob: -15.913042068481445
    4. '0' → logprob: -16.038042068481445
    5. 'n' → logprob: -16.788042068481445
    6. '(int' → logprob: -17.038042068481445
    7. '       ' → logprob: -17.163042068481445
    8. '[int' → logprob: -17.538042068481445
    9. 'ints' → logprob: -17.913042068481445
    10. '   ' → logprob: -18.038042068481445

Token 393: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006716674659401178
    2. 'input' → logprob: -5.006716728210449
    3. '(' → logprob: -14.25671672821045
    4. '(sys' → logprob: -14.75671672821045
    5. ' input' → logprob: -16.131715774536133
    6. 'sys' → logprob: -16.131715774536133
    7. '=input' → logprob: -17.256715774536133
    8. ' (' → logprob: -17.631715774536133
    9. '(
' → logprob: -17.756715774536133
    10. '<input' → logprob: -18.006715774536133

Token 394: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00018101456225849688
    2. '().' → logprob: -9.000181198120117
    3. '())
' → logprob: -10.250181198120117
    4. '()' → logprob: -10.750181198120117
    5. ')' → logprob: -15.000181198120117
    6. ' ())' → logprob: -15.375181198120117
    7. '())

' → logprob: -16.125181198120117
    8. '())
' → logprob: -17.125181198120117
    9. '()
' → logprob: -17.250181198120117
    10. '(' → logprob: -17.375181198120117

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05267566069960594
    2. '<|end|>' → logprob: -3.177675724029541
    3. ')' → logprob: -5.677675724029541
    4. '()' → logprob: -5.677675724029541
    5. 'if' → logprob: -7.052675724029541
    6. ' if' → logprob: -7.552675724029541
    7. '<|end|>' → logprob: -7.802675724029541
    8. '())' → logprob: -8.927675247192383
    9. '(n' → logprob: -9.552675247192383
    10. '   ' → logprob: -9.677675247192383

Token 396: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6399452686309814
    2. ' if' → logprob: -0.7649452686309814
    3. '       ' → logprob: -5.514945030212402
    4. '0' → logprob: -5.889945030212402
    5. '<|end|>' → logprob: -8.389945030212402
    6. ' ' → logprob: -9.389945030212402
    7. '=' → logprob: -9.889945030212402
    8. '	if' → logprob: -10.139945030212402
    9. 'n' → logprob: -10.389945030212402
    10. '.' → logprob: -11.264945030212402

Token 397: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10030566155910492
    2. ' n' → logprob: -2.3503055572509766
    3. '0' → logprob: -9.225305557250977
    4. ' ' → logprob: -15.100305557250977
    5. '	n' → logprob: -16.350305557250977
    6. ' not' → logprob: -17.850305557250977
    7. ')n' → logprob: -18.350305557250977
    8. '(n' → logprob: -18.475305557250977
    9. ' н' → logprob: -18.475305557250977
    10. '   ' → logprob: -19.350305557250977

Token 398: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029769811779260635
    2. '==' → logprob: -3.5297698974609375
    3. '()==' → logprob: -11.029769897460938
    4. ')==' → logprob: -13.904769897460938
    5. ' ' → logprob: -14.029769897460938
    6. '=' → logprob: -14.779769897460938
    7. '()' → logprob: -15.279769897460938
    8. ')' → logprob: -15.279769897460938
    9. ' ' → logprob: -15.404769897460938
    10. ' =' → logprob: -16.779769897460938

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -21.125
    5. '۰' → logprob: -21.125
    6. ''' → logprob: -22.125
    7. '00' → logprob: -22.25
    8. '=' → logprob: -22.25
    9. '０' → logprob: -22.375
    10. '       ' → logprob: -23.0

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -19.75
    4. '```' → logprob: -19.875
    5. ''' → logprob: -20.25
    6. '   ' → logprob: -20.625
    7. ')' → logprob: -21.0
    8. '０' → logprob: -21.0
    9. '০' → logprob: -21.625
    10. '00' → logprob: -21.75

Token 401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0197544377297163
    2. ':
' → logprob: -4.644754409790039
    3. '           ' → logprob: -4.644754409790039
    4. '       ' → logprob: -9.144754409790039
    5. '<|end|>' → logprob: -9.519754409790039
    6. '():' → logprob: -10.019754409790039
    7. '():
' → logprob: -10.769754409790039
    8. ':return' → logprob: -11.019754409790039
    9. '		' → logprob: -11.394754409790039
    10. ' :' → logprob: -11.394754409790039

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003526075044646859
    2. ':' → logprob: -5.753526210784912
    3. '		' → logprob: -9.003525733947754
    4. ':
' → logprob: -9.128525733947754
    5. '   ' → logprob: -10.378525733947754
    6. '       ' → logprob: -10.378525733947754
    7. '<|end|>' → logprob: -11.128525733947754
    8. ' break' → logprob: -11.628525733947754
    9. '          ' → logprob: -12.128525733947754
    10. '	break' → logprob: -12.503525733947754

Token 403: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -7.896309739408025e-07
    2. ' break' → logprob: -14.250000953674316
    3. 'return' → logprob: -16.0
    4. '	break' → logprob: -21.75
    5. '_break' → logprob: -23.875
    6. 'Break' → logprob: -24.0
    7. 'BREAK' → logprob: -24.75
    8. '   ' → logprob: -25.625
    9. 'b' → logprob: -25.75
    10. 'breaking' → logprob: -26.25

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02360869199037552
    2. '<|end|>' → logprob: -3.773608684539795
    3. '        
' → logprob: -8.523609161376953
    4. '<|end|>' → logprob: -9.398609161376953
    5. '
' → logprob: -10.773609161376953
    6. '        ' → logprob: -11.023609161376953
    7. '   ' → logprob: -11.648609161376953
    8. '[' → logprob: -12.273609161376953
    9. '#' → logprob: -12.273609161376953
    10. '      ' → logprob: -12.523609161376953

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.7689099018462e-05
    2. '<|end|>' → logprob: -10.37508773803711
    3. '        
' → logprob: -10.62508773803711
    4. '   ' → logprob: -10.75008773803711
    5. '        ' → logprob: -12.87508773803711
    6. '      ' → logprob: -13.25008773803711
    7. '           ' → logprob: -13.50008773803711
    8. '	' → logprob: -14.62508773803711
    9. '#' → logprob: -14.75008773803711
    10. 'import' → logprob: -14.75008773803711

Token 406: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.006417874712496996
    2. '       ' → logprob: -5.131417751312256
    3. ' p' → logprob: -8.756418228149414
    4. 'length' → logprob: -9.006418228149414
    5. 'prefix' → logprob: -9.256418228149414
    6. '   ' → logprob: -10.131418228149414
    7. 'import' → logprob: -11.131418228149414
    8. 'P' → logprob: -11.506418228149414
    9. '	p' → logprob: -11.756418228149414
    10. 'pipe' → logprob: -11.881418228149414

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17976871132850647
    2. ' =' → logprob: -1.804768681526184
    3. ')' → logprob: -11.054768562316895
    4. 's' → logprob: -12.554768562316895
    5. ',' → logprob: -13.679768562316895
    6. ']' → logprob: -14.304768562316895
    7. '[' → logprob: -14.554768562316895
    8. '_' → logprob: -14.679768562316895
    9. 'p' → logprob: -15.304768562316895
    10. '=p' → logprob: -15.304768562316895

Token 408: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005530327325686812
    2. ' list' → logprob: -7.500553131103516
    3. '[list' → logprob: -16.750553131103516
    4. '[' → logprob: -18.500553131103516
    5. '=list' → logprob: -19.375553131103516
    6. 'List' → logprob: -19.875553131103516
    7. '(list' → logprob: -20.875553131103516
    8. '	list' → logprob: -20.875553131103516
    9. 'lst' → logprob: -20.875553131103516
    10. 'lis' → logprob: -21.000553131103516

Token 409: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004597439547069371
    2. 'map' → logprob: -7.875459671020508
    3. '(' → logprob: -9.750459671020508
    4. '=' → logprob: -11.000459671020508
    5. '(int' → logprob: -14.000459671020508
    6. '<|end|>' → logprob: -14.125459671020508
    7. ',map' → logprob: -14.250459671020508
    8. '(
' → logprob: -14.250459671020508
    9. '.map' → logprob: -14.750459671020508
    10. '(range' → logprob: -14.875459671020508

Token 410: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012827336322516203
    2. 'int' → logprob: -6.751282691955566
    3. '(' → logprob: -9.751282691955566
    4. '[int' → logprob: -11.001282691955566
    5. '<int' → logprob: -11.001282691955566
    6. '=int' → logprob: -11.876282691955566
    7. ']int' → logprob: -12.501282691955566
    8. ',int' → logprob: -12.626282691955566
    9. '(lambda' → logprob: -13.376282691955566
    10. ' int' → logprob: -13.751282691955566

Token 411: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009046725463122129
    2. ',input' → logprob: -7.125904560089111
    3. '(' → logprob: -10.00090503692627
    4. 'input' → logprob: -10.62590503692627
    5. ',' → logprob: -11.37590503692627
    6. '=input' → logprob: -12.00090503692627
    7. '[input' → logprob: -12.00090503692627
    8. '(sys' → logprob: -13.62590503692627
    9. '<input' → logprob: -13.75090503692627
    10. ')' → logprob: -13.87590503692627

Token 412: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00029708960209973156
    2. ' input' → logprob: -8.125297546386719
    3. 'sys' → logprob: -14.250297546386719
    4. 'int' → logprob: -15.000297546386719
    5. 'lambda' → logprob: -16.87529754638672
    6. '(input' → logprob: -19.00029754638672
    7. '<input' → logprob: -19.12529754638672
    8. 'p' → logprob: -19.37529754638672
    9. ' sys' → logprob: -19.37529754638672
    10. 'import' → logprob: -20.25029754638672

Token 413: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()))' → logprob: -14.625000953674316
    3. '()' → logprob: -15.500000953674316
    4. ' ().' → logprob: -18.875
    5. '()))
' → logprob: -19.375
    6. '())' → logprob: -20.375
    7. '(' → logprob: -20.5
    8. '.split' → logprob: -20.75
    9. '()));' → logprob: -20.75
    10. '))' → logprob: -21.25

Token 414: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. 'strip' → logprob: -12.750003814697266
    3. ' split' → logprob: -14.375003814697266
    4. 'sys' → logprob: -16.625003814697266
    5. '(split' → logprob: -17.500003814697266
    6. 'rstrip' → logprob: -17.500003814697266
    7. '.split' → logprob: -18.875003814697266
    8. 'spl' → logprob: -19.250003814697266
    9. 'read' → logprob: -19.500003814697266
    10. ')' → logprob: -20.250003814697266

Token 415: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.027953224256634712
    2. '()))
' → logprob: -3.7779531478881836
    3. '))' → logprob: -5.777953147888184
    4. '()' → logprob: -6.527953147888184
    5. '()));' → logprob: -9.777953147888184
    6. '())' → logprob: -10.277953147888184
    7. '       ' → logprob: -11.402953147888184
    8. '()))

' → logprob: -11.402953147888184
    9. '))
' → logprob: -11.527953147888184
    10. '()))
' → logprob: -12.152953147888184

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018305042758584023
    2. 'j' → logprob: -4.018304824829102
    3. '   ' → logprob: -10.018304824829102
    4. ' j' → logprob: -10.018304824829102
    5. '	j' → logprob: -10.893304824829102
    6. 'n' → logprob: -11.518304824829102
    7. '<|end|>' → logprob: -11.643304824829102
    8. '```' → logprob: -11.768304824829102
    9. '           ' → logprob: -12.393304824829102
    10. 'import' → logprob: -12.393304824829102

Token 417: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.01734023541212082
    2. ' j' → logprob: -4.642340183258057
    3. 's' → logprob: -5.392340183258057
    4. 'prefix' → logprob: -6.267340183258057
    5. '       ' → logprob: -7.392340183258057
    6. 'n' → logprob: -9.392340660095215
    7. ' prefix' → logprob: -9.517340660095215
    8. '   ' → logprob: -9.517340660095215
    9. 'sum' → logprob: -9.517340660095215
    10. 'p' → logprob: -9.892340660095215

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740886092185974
    2. ' =' → logprob: -0.9740886092185974
    3. ')' → logprob: -11.474088668823242
    4. '[' → logprob: -15.724088668823242
    5. '   ' → logprob: -16.099088668823242
    6. ')=' → logprob: -16.224088668823242
    7. 's' → logprob: -16.224088668823242
    8. ' ' → logprob: -16.224088668823242
    9. '.' → logprob: -16.599088668823242
    10. ']' → logprob: -16.724088668823242

Token 419: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015054593095555902
    2. ' list' → logprob: -6.501505374908447
    3. 'map' → logprob: -13.376505851745605
    4. '[' → logprob: -13.626505851745605
    5. '(list' → logprob: -15.251505851745605
    6. '[list' → logprob: -15.876505851745605
    7. '=list' → logprob: -17.25150489807129
    8. ' [' → logprob: -18.87650489807129
    9. 'List' → logprob: -19.12650489807129
    10. '0' → logprob: -19.12650489807129

Token 420: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07001634687185287
    2. 'map' → logprob: -2.695016384124756
    3. 'maps' → logprob: -10.320015907287598
    4. '.map' → logprob: -10.445015907287598
    5. ',map' → logprob: -11.695015907287598
    6. '	map' → logprob: -13.070015907287598
    7. '```' → logprob: -13.695015907287598
    8. '(' → logprob: -13.945015907287598
    9. ' map' → logprob: -13.945015907287598
    10. 'mapper' → logprob: -14.570015907287598

Token 421: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3138069212436676
    2. '(int' → logprob: -1.3138068914413452
    3. '[int' → logprob: -8.188806533813477
    4. '=int' → logprob: -8.313806533813477
    5. ',int' → logprob: -11.563806533813477
    6. '<int' → logprob: -12.063806533813477
    7. ':int' → logprob: -13.063806533813477
    8. ']int' → logprob: -13.063806533813477
    9. '```' → logprob: -13.938806533813477
    10. ' int' → logprob: -14.438806533813477

Token 422: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10497136414051056
    2. '(int' → logprob: -2.354971408843994
    3. '=int' → logprob: -5.729971408843994
    4. ',int' → logprob: -6.979971408843994
    5. '[int' → logprob: -7.854971408843994
    6. ',' → logprob: -8.979970932006836
    7. ':int' → logprob: -10.604970932006836
    8. '<int' → logprob: -11.229970932006836
    9. 'def' → logprob: -12.354970932006836
    10. '```' → logprob: -12.354970932006836

Token 423: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3306015716807451e-05
    2. 'input' → logprob: -11.25001335144043
    3. ' int' → logprob: -16.00001335144043
    4. '(int' → logprob: -16.12501335144043
    5. '[int' → logprob: -17.75001335144043
    6. 'str' → logprob: -19.87501335144043
    7. 'ints' → logprob: -20.12501335144043
    8. 'map' → logprob: -20.25001335144043
    9. '
' → logprob: -21.62501335144043
    10. '=int' → logprob: -21.62501335144043

Token 424: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.750001907348633
    3. '()))' → logprob: -14.125001907348633
    4. '>().' → logprob: -16.375001907348633
    5. '()))
' → logprob: -16.500001907348633
    6. ' ().' → logprob: -16.750001907348633
    7. '```' → logprob: -16.875001907348633
    8. '()[' → logprob: -17.250001907348633
    9. '.split' → logprob: -17.250001907348633
    10. '())' → logprob: -18.000001907348633

Token 425: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. 'read' → logprob: -13.625003814697266
    3. 'strip' → logprob: -14.125003814697266
    4. '().' → logprob: -14.875003814697266
    5. ' split' → logprob: -14.875003814697266
    6. 'spl' → logprob: -15.375003814697266
    7. '```' → logprob: -15.750003814697266
    8. '(split' → logprob: -16.250003814697266
    9. '1' → logprob: -16.375003814697266
    10. '.split' → logprob: -16.375003814697266

Token 426: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20557977259159088
    2. '()))
' → logprob: -1.7055797576904297
    3. '))' → logprob: -5.70557975769043
    4. '()' → logprob: -7.33057975769043
    5. '))
' → logprob: -9.58057975769043
    6. '()))

' → logprob: -10.33057975769043
    7. '())' → logprob: -10.45557975769043
    8. '()))
' → logprob: -11.08057975769043
    9. '()[' → logprob: -11.83057975769043
    10. '       ' → logprob: -12.08057975769043

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002470350591465831
    2. '        
' → logprob: -9.25024700164795
    3. 'dp' → logprob: -10.00024700164795
    4. '<|end|>' → logprob: -10.50024700164795
    5. '
' → logprob: -10.62524700164795
    6. '```' → logprob: -10.87524700164795
    7. 'prefix' → logprob: -11.62524700164795
    8. '[' → logprob: -12.00024700164795
    9. '   ' → logprob: -12.62524700164795
    10. 'import' → logprob: -13.00024700164795

Token 428: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.00471930718049407
    2. 'pref' → logprob: -6.129719257354736
    3. 'psum' → logprob: -6.629719257354736
    4. 'pre' → logprob: -7.254719257354736
    5. 'sum' → logprob: -8.629719734191895
    6. 'length' → logprob: -9.504719734191895
    7. 'dp' → logprob: -9.754719734191895
    8. '       ' → logprob: -9.754719734191895
    9. 'ps' → logprob: -10.129719734191895
    10. 's' → logprob: -10.504719734191895

Token 429: ' =' (ID: 314)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.11928273737430573
    2. '_sum' → logprob: -2.3692827224731445
    3. '_' → logprob: -4.9942827224731445
    4. '_lengths' → logprob: -5.4942827224731445
    5. '_length' → logprob: -5.8692827224731445
    6. '_len' → logprob: -5.9942827224731445
    7. ' =' → logprob: -6.8692827224731445
    8. '_s' → logprob: -6.9942827224731445
    9. '=' → logprob: -8.619282722473145
    10. '_=' → logprob: -8.869282722473145

Token 430: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027751552406698465
    2. ' [' → logprob: -6.252775192260742
    3. '[p' → logprob: -7.127775192260742
    4. '[j' → logprob: -10.252775192260742
    5. 'p' → logprob: -12.002775192260742
    6. '[len' → logprob: -14.502775192260742
    7. '   ' → logprob: -14.627775192260742
    8. '0' → logprob: -14.752775192260742
    9. '[n' → logprob: -14.752775192260742
    10. '([' → logprob: -16.252775192260742

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -18.000001907348633
    4. '۰' → logprob: -18.750001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '{' → logprob: -19.000001907348633
    7. 'p' → logprob: -19.000001907348633
    8. '(' → logprob: -19.875001907348633
    9. '00' → logprob: -20.500001907348633
    10. '000' → logprob: -21.062501907348633

Token 432: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017312824726104736
    2. ']
' → logprob: -4.767313003540039
    3. ']*(' → logprob: -4.892313003540039
    4. '0' → logprob: -7.767313003540039
    5. 'for' → logprob: -8.142313003540039
    6. '(' → logprob: -9.267313003540039
    7. '()]' → logprob: -9.392313003540039
    8. '*(' → logprob: -9.392313003540039
    9. ']+' → logprob: -10.142313003540039
    10. ']()' → logprob: -10.517313003540039

Token 433: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010247035970678553
    2. 'len' → logprob: -9.500102043151855
    3. '2' → logprob: -10.625102043151855
    4. ' n' → logprob: -13.250102043151855
    5. '   ' → logprob: -13.625102043151855
    6. '(n' → logprob: -15.250102043151855
    7. '	n' → logprob: -17.500102996826172
    8. '1' → logprob: -17.625102996826172
    9. '[n' → logprob: -18.250102996826172
    10. '    ' → logprob: -18.625102996826172

Token 434: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.919942486798391e-05
    2. ' +' → logprob: -9.750059127807617
    3. '+
' → logprob: -14.000059127807617
    4. '
' → logprob: -17.125059127807617
    5. '+n' → logprob: -18.125059127807617
    6. '+[' → logprob: -19.625059127807617
    7. '＋' → logprob: -19.750059127807617
    8. '+p' → logprob: -20.125059127807617
    9. '```' → logprob: -20.250059127807617
    10. '+j' → logprob: -20.500059127807617

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03365446254611015
    2. '2' → logprob: -3.4086544513702393
    3. ' ' → logprob: -11.78365421295166
    4. '   ' → logprob: -15.15865421295166
    5. '+' → logprob: -15.65865421295166
    6. '3' → logprob: -15.65865421295166
    7. '
' → logprob: -15.78365421295166
    8. '{' → logprob: -16.408655166625977
    9. '7' → logprob: -16.783655166625977
    10. '```' → logprob: -16.783655166625977

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759727954864502
    2. ')' → logprob: -0.8259727954864502
    3. ')
' → logprob: -10.700972557067871
    4. ')p' → logprob: -12.450972557067871
    5. ')

' → logprob: -13.075972557067871
    6. ' )
' → logprob: -13.575972557067871
    7. '+' → logprob: -14.075972557067871
    8. ' )' → logprob: -14.950972557067871
    9. ')#' → logprob: -15.075972557067871
    10. '```' → logprob: -15.200972557067871

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029141999781131744
    2. ' for' → logprob: -3.779141902923584
    3. 'for' → logprob: -5.154141902923584
    4. '<|end|>' → logprob: -9.654142379760742
    5. '   ' → logprob: -10.404142379760742
    6. '	for' → logprob: -12.154142379760742
    7. '```' → logprob: -13.779142379760742
    8. ' ' → logprob: -14.029142379760742
    9. '[' → logprob: -14.779142379760742
    10. '	' → logprob: -14.779142379760742

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017639553407207131
    2. ' for' → logprob: -6.501763820648193
    3. '       ' → logprob: -8.251764297485352
    4. '	for' → logprob: -14.251764297485352
    5. '   ' → logprob: -16.00176429748535
    6. '```' → logprob: -17.00176429748535
    7. 'prefix' → logprob: -18.62676429748535
    8. ' ' → logprob: -19.25176429748535
    9. 'next' → logprob: -20.37676429748535
    10. 'For' → logprob: -20.50176429748535

Token 439: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.531315314830863e-06
    2. ' i' → logprob: -12.750003814697266
    3. '_i' → logprob: -14.625003814697266
    4. 'k' → logprob: -16.250003814697266
    5. '	i' → logprob: -17.750003814697266
    6. '_' → logprob: -18.000003814697266
    7. 'x' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.000003814697266
    9. 'idx' → logprob: -19.625003814697266
    10. 'ii' → logprob: -20.250003814697266

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006717974785715342
    2. 'in' → logprob: -5.006718158721924
    3. '1' → logprob: -13.756717681884766
    4. '	in' → logprob: -14.256717681884766
    5. 'In' → logprob: -15.006717681884766
    6. ' ' → logprob: -15.506717681884766
    7. 'import' → logprob: -16.381717681884766
    8. '```' → logprob: -16.631717681884766
    9. '  ' → logprob: -16.756717681884766
    10. 'd' → logprob: -16.756717681884766

Token 441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019291093340143561
    2. ' range' → logprob: -6.25192928314209
    3. 'in' → logprob: -14.62692928314209
    4. ' in' → logprob: -17.251928329467773
    5. '   ' → logprob: -18.251928329467773
    6. '	range' → logprob: -18.501928329467773
    7. ' ' → logprob: -18.626928329467773
    8. '(range' → logprob: -19.001928329467773
    9. '1' → logprob: -20.001928329467773
    10. '  ' → logprob: -20.126928329467773

Token 442: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7707138657569885
    2. '1' → logprob: -0.8957138657569885
    3. ' in' → logprob: -2.1457138061523438
    4. ' ' → logprob: -5.145713806152344
    5. 'in' → logprob: -5.145713806152344
    6. '   ' → logprob: -8.520713806152344
    7. 'range' → logprob: -9.395713806152344
    8. '(n' → logprob: -10.020713806152344
    9. 'n' → logprob: -11.395713806152344
    10. 'In' → logprob: -12.270713806152344

Token 443: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32997092604637146
    2. '):
' → logprob: -1.7049709558486938
    3. '):' → logprob: -2.4549708366394043
    4. '1' → logprob: -4.454970836639404
    5. ' +' → logprob: -7.204970836639404
    6. '   ' → logprob: -7.704970836639404
    7. '       ' → logprob: -8.579971313476562
    8. ')' → logprob: -8.954971313476562
    9. '-' → logprob: -9.079971313476562
    10. ':' → logprob: -11.079971313476562

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006849141791462898
    2. 'prefix' → logprob: -7.75068473815918
    3. ' prefix' → logprob: -8.87568473815918
    4. '   ' → logprob: -9.25068473815918
    5. '	       ' → logprob: -11.87568473815918
    6. '       ' → logprob: -12.00068473815918
    7. '(prefix' → logprob: -13.37568473815918
    8. '```' → logprob: -13.50068473815918
    9. '    	   ' → logprob: -14.37568473815918
    10. '	   ' → logprob: -14.75068473815918

Token 445: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.03315236046910286
    2. ' prefix' → logprob: -3.9081523418426514
    3. '           ' → logprob: -4.4081525802612305
    4. '   ' → logprob: -8.15815258026123
    5. '       ' → logprob: -9.78315258026123
    6. '(prefix' → logprob: -12.03315258026123
    7. '               ' → logprob: -12.90815258026123
    8. '_prefix' → logprob: -14.03315258026123
    9. '```' → logprob: -14.65815258026123
    10. '	       ' → logprob: -14.78315258026123

Token 446: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002137882256647572
    2. 'prefix' → logprob: -9.500213623046875
    3. '[p' → logprob: -9.625213623046875
    4. '][' → logprob: -10.250213623046875
    5. '[' → logprob: -11.625213623046875
    6. '=' → logprob: -11.750213623046875
    7. ' [' → logprob: -12.625213623046875
    8. '```' → logprob: -12.875213623046875
    9. '
' → logprob: -13.250213623046875
    10. '\[' → logprob: -13.625213623046875

Token 447: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007207724265754223
    2. ' +' → logprob: -7.625720977783203
    3. ']' → logprob: -8.375720977783203
    4. '1' → logprob: -13.500720977783203
    5. ']=' → logprob: -15.375720977783203
    6. '=' → logprob: -15.500720977783203
    7. ']+=' → logprob: -15.625720977783203
    8. '+]' → logprob: -16.000720977783203
    9. ']+' → logprob: -16.500720977783203
    10. '＋' → logprob: -17.000720977783203

Token 448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.37503719329834
    3. ']' → logprob: -13.37503719329834
    4. '+' → logprob: -13.50003719329834
    5. '   ' → logprob: -13.50003719329834
    6. 'i' → logprob: -15.25003719329834
    7. ']+=' → logprob: -15.62503719329834
    8. '```' → logprob: -15.62503719329834
    9. '=' → logprob: -15.81253719329834
    10. 'prefix' → logprob: -16.187536239624023

Token 449: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033189378678798676
    2. ' =' → logprob: -3.533189296722412
    3. ']' → logprob: -6.158189296722412
    4. '+=' → logprob: -7.408189296722412
    5. '=p' → logprob: -8.03318977355957
    6. ']=' → logprob: -8.65818977355957
    7. ' +=' → logprob: -9.53318977355957
    8. 'prefix' → logprob: -9.53318977355957
    9. ']+=' → logprob: -9.65818977355957
    10. '(prefix' → logprob: -13.65818977355957

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013541470281779766
    2. ' =' → logprob: -4.5135416984558105
    3. '=p' → logprob: -6.0135416984558105
    4. '+=' → logprob: -10.138541221618652
    5. ' +=' → logprob: -13.013541221618652
    6. '=s' → logprob: -13.888541221618652
    7. '=
' → logprob: -14.013541221618652
    8. ']=' → logprob: -15.138541221618652
    9. '.=' → logprob: -15.513541221618652
    10. 'prefix' → logprob: -15.513541221618652

Token 451: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -7.505351095460355e-05
    2. ' prefix' → logprob: -9.500075340270996
    3. '(prefix' → logprob: -16.62507438659668
    4. '   ' → logprob: -19.12507438659668
    5. 'refix' → logprob: -20.37507438659668
    6. '_prefix' → logprob: -20.62507438659668
    7. '.prefix' → logprob: -21.62507438659668
    8. 'pref' → logprob: -22.25007438659668
    9. ' ' → logprob: -22.25007438659668
    10. 'p' → logprob: -22.87507438659668

Token 452: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.130576806142926e-05
    2. 'i' → logprob: -10.375031471252441
    3. '+i' → logprob: -17.125030517578125
    4. '`' → logprob: -17.500030517578125
    5. '```' → logprob: -17.500030517578125
    6. '(i' → logprob: -17.750030517578125
    7. '+' → logprob: -18.000030517578125
    8. '{i' → logprob: -18.250030517578125
    9. ' [' → logprob: -18.750030517578125
    10. '[' → logprob: -18.875030517578125

Token 453: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08471483737230301
    2. ']+' → logprob: -2.584714889526367
    3. '+' → logprob: -5.334714889526367
    4. ' +' → logprob: -6.959714889526367
    5. ' ]' → logprob: -10.334714889526367
    6. '+p' → logprob: -12.834714889526367
    7. '+]' → logprob: -13.709714889526367
    8. ']+=' → logprob: -14.834714889526367
    9. ')' → logprob: -15.459714889526367
    10. ')+' → logprob: -15.834714889526367

Token 454: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2578473389148712
    2. ' +' → logprob: -1.5078473091125488
    3. '+p' → logprob: -5.132847309112549
    4. 'p' → logprob: -15.257847785949707
    5. '+j' → logprob: -15.257847785949707
    6. ' ' → logprob: -16.13284683227539
    7. '+
' → logprob: -17.00784683227539
    8. '＋' → logprob: -17.00784683227539
    9. ']+' → logprob: -17.25784683227539
    10. ' p' → logprob: -17.38284683227539

Token 455: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003357006062287837
    2. ' p' → logprob: -8.000335693359375
    3. '(p' → logprob: -15.375335693359375
    4. '   ' → logprob: -18.750335693359375
    5. '+p' → logprob: -19.625335693359375
    6. ' ' → logprob: -19.750335693359375
    7. '	p' → logprob: -19.875335693359375
    8. '(' → logprob: -20.250335693359375
    9. '<p' → logprob: -20.375335693359375
    10. '_p' → logprob: -20.750335693359375

Token 456: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. ' [' → logprob: -17.250001907348633
    4. '[
' → logprob: -18.125001907348633
    5. 'i' → logprob: -18.250001907348633
    6. '[j' → logprob: -18.875001907348633
    7. '[I' → logprob: -19.375001907348633
    8. '
' → logprob: -19.750001907348633
    9. '```' → logprob: -19.750001907348633
    10. '[user' → logprob: -20.250001907348633

Token 457: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038703777827322483
    2. '<|end|>' → logprob: -6.503870487213135
    3. '```' → logprob: -7.128870487213135
    4. ',' → logprob: -8.253870010375977
    5. '        
' → logprob: -8.253870010375977
    6. '	' → logprob: -8.253870010375977
    7. '
' → logprob: -8.878870010375977
    8. ' for' → logprob: -9.003870010375977
    9. '.' → logprob: -9.128870010375977
    10. '           ' → logprob: -9.628870010375977

Token 459: ' prefix' (ID: 18633)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1573099046945572
    2. '       ' → logprob: -2.4073100090026855
    3. 'for' → logprob: -3.0323100090026855
    4. 'max' → logprob: -5.5323100090026855
    5. ' for' → logprob: -7.0323100090026855
    6. 'prefix' (adapté à ' prefix') → logprob: -7.4073100090026855
    7. ' dp' → logprob: -7.7823100090026855
    8. 'result' → logprob: -8.032309532165527
    9. 'ans' → logprob: -8.157309532165527
    10. 'res' → logprob: -8.532309532165527

Token 460: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.48951348662376404
    2. '<|end|>' → logprob: -1.7395135164260864
    3. '_lengths' → logprob: -2.864513397216797
    4. 'j' → logprob: -2.989513397216797
    5. 's' → logprob: -3.614513397216797
    6. '+' → logprob: -4.614513397216797
    7. '_length' → logprob: -4.739513397216797
    8. '[' → logprob: -4.864513397216797
    9. 'length' → logprob: -4.989513397216797
    10. '_' → logprob: -5.489513397216797

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16044417023658752
    2. '=' → logprob: -2.5354442596435547
    3. '[' → logprob: -2.7854442596435547
    4. '<|end|>' → logprob: -6.160444259643555
    5. '=[' → logprob: -6.410444259643555
    6. 'sum' → logprob: -6.910444259643555
    7. '_sum' → logprob: -7.035444259643555
    8. ' =[' → logprob: -8.285444259643555
    9. ' ' → logprob: -8.410444259643555
    10. '=sum' → logprob: -8.660444259643555

Token 462: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0181527491658926
    2. ' [' → logprob: -4.018152713775635
    3. '0' → logprob: -12.893153190612793
    4. ' ' → logprob: -16.143152236938477
    5. ' ' → logprob: -17.143152236938477
    6. '[j' → logprob: -17.768152236938477
    7. '{' → logprob: -18.018152236938477
    8. '=[' → logprob: -18.018152236938477
    9. '   ' → logprob: -18.143152236938477
    10. '([' → logprob: -18.643152236938477

Token 463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.375
    3. '[' → logprob: -21.375
    4. '۰' → logprob: -24.125
    5. '000' → logprob: -24.375
    6. '00' → logprob: -24.625
    7. '012' → logprob: -26.0
    8. '(' → logprob: -26.375
    9. '{' → logprob: -26.75
    10. '010' → logprob: -26.75

Token 464: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.1004379540681839
    2. '*(' → logprob: -2.350437879562378
    3. ']' → logprob: -8.600438117980957
    4. ']*' → logprob: -11.225438117980957
    5. ']+' → logprob: -11.975438117980957
    6. '[' → logprob: -12.100438117980957
    7. '](' → logprob: -12.475438117980957
    8. ')*(' → logprob: -12.725438117980957
    9. '(' → logprob: -12.850438117980957
    10. '(n' → logprob: -12.850438117980957

Token 465: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009496912243776023
    2. '(n' → logprob: -7.000949859619141
    3. 'len' → logprob: -10.87594985961914
    4. ' n' → logprob: -11.00094985961914
    5. '(len' → logprob: -13.50094985961914
    6. ' (' → logprob: -15.00094985961914
    7. '{' → logprob: -15.37594985961914
    8. '
' → logprob: -15.62594985961914
    9. '(' → logprob: -15.62594985961914
    10. '[n' → logprob: -15.75094985961914

Token 466: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0280383548888494e-06
    2. '+
' → logprob: -14.250000953674316
    3. ' +' → logprob: -15.625000953674316
    4. '+j' → logprob: -16.750001907348633
    5. '+n' → logprob: -16.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '
' → logprob: -18.250001907348633
    8. '1' → logprob: -18.500001907348633
    9. 'n' → logprob: -18.625001907348633
    10. ']+' → logprob: -20.375001907348633

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012776151997968554
    2. ' for' → logprob: -7.251277446746826
    3. 'for' → logprob: -8.626277923583984
    4. '	' → logprob: -8.876277923583984
    5. '<|end|>' → logprob: -8.876277923583984
    6. '	for' → logprob: -9.876277923583984
    7. '   ' → logprob: -10.751277923583984
    8. '	   ' → logprob: -11.876277923583984
    9. '	       ' → logprob: -12.001277923583984
    10. '[' → logprob: -12.001277923583984

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014760562917217612
    2. '       ' → logprob: -6.751476287841797
    3. ' for' → logprob: -8.126476287841797
    4. '	for' → logprob: -11.626476287841797
    5. 'prefix' → logprob: -14.126476287841797
    6. '   ' → logprob: -15.001476287841797
    7. '```' → logprob: -16.626476287841797
    8. '	' → logprob: -17.376476287841797
    9. 'For' → logprob: -17.751476287841797
    10. '
' → logprob: -17.751476287841797

Token 469: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '_i' → logprob: -16.87502098083496
    4. '	i' → logprob: -19.12502098083496
    5. 'k' → logprob: -19.87502098083496
    6. '_' → logprob: -21.00002098083496
    7. '   ' → logprob: -21.62502098083496
    8. '`' → logprob: -22.00002098083496
    9. 'x' → logprob: -22.00002098083496
    10. 'idx' → logprob: -22.00002098083496

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007609228603541851
    2. 'in' → logprob: -4.8826093673706055
    3. 'range' → logprob: -13.132609367370605
    4. ' ' → logprob: -15.132609367370605
    5. 'n' → logprob: -15.632609367370605
    6. 'In' → logprob: -16.00760841369629
    7. '+' → logprob: -16.00760841369629
    8. 'import' → logprob: -16.38260841369629
    9. ' range' → logprob: -16.50760841369629
    10. 'i' → logprob: -17.13260841369629

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015028368216007948
    2. ' range' → logprob: -6.501502990722656
    3. 'in' → logprob: -15.001502990722656
    4. ' ' → logprob: -16.876502990722656
    5. '
' → logprob: -17.751502990722656
    6. '   ' → logprob: -17.876502990722656
    7. ' in' → logprob: -18.126502990722656
    8. '	range' → logprob: -18.126502990722656
    9. '(range' → logprob: -18.501502990722656
    10. '0' → logprob: -19.126502990722656

Token 472: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.49975550174713135
    2. 'n' → logprob: -1.2497555017471313
    3. '(' → logprob: -2.624755382537842
    4. '1' → logprob: -3.374755382537842
    5. 'range' → logprob: -9.999755859375
    6. '   ' → logprob: -12.249755859375
    7. ' n' → logprob: -12.374755859375
    8. ' (' → logprob: -13.624755859375
    9. '
' → logprob: -13.624755859375
    10. '0' → logprob: -14.249755859375

Token 473: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43845582008361816
    2. '-' → logprob: -1.4384558200836182
    3. '):' → logprob: -2.313455820083618
    4. '+' → logprob: -4.688455581665039
    5. '1' → logprob: -5.063455581665039
    6. ' -' → logprob: -7.063455581665039
    7. '0' → logprob: -7.188455581665039
    8. ')' → logprob: -7.313455581665039
    9. '       ' → logprob: -7.688455581665039
    10. '   ' → logprob: -8.313455581665039

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.37500286102295
    4. ')' → logprob: -14.75000286102295
    5. '-' → logprob: -15.25000286102295
    6. '   ' → logprob: -16.875001907348633
    7. '2' → logprob: -17.875001907348633
    8. '```' → logprob: -18.250001907348633
    9. '
' → logprob: -18.562501907348633
    10. ')
' → logprob: -19.625001907348633

Token 475: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023508328944444656
    2. '):' → logprob: -3.773508310317993
    3. '+' → logprob: -8.523508071899414
    4. '):
' → logprob: -10.773508071899414
    5. ':
' → logprob: -11.523508071899414
    6. ':' → logprob: -11.523508071899414
    7. '1' → logprob: -12.273508071899414
    8. ']:
' → logprob: -12.398508071899414
    9. '       ' → logprob: -12.523508071899414
    10. '   ' → logprob: -12.523508071899414

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07597818970680237
    2. '	       ' → logprob: -3.3259782791137695
    3. 'prefix' → logprob: -4.2009782791137695
    4. '   ' → logprob: -4.3259782791137695
    5. ' prefix' → logprob: -4.9509782791137695
    6. '	   ' → logprob: -7.0759782791137695
    7. '		   ' → logprob: -8.07597827911377
    8. '       ' → logprob: -8.32597827911377
    9. '		' → logprob: -8.82597827911377
    10. '(prefix' → logprob: -9.20097827911377

Token 477: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.2522636353969574
    2. ' prefix' → logprob: -1.5022636651992798
    3. '   ' → logprob: -8.502264022827148
    4. '           ' → logprob: -9.002264022827148
    5. '       ' → logprob: -12.502264022827148
    6. '(prefix' → logprob: -12.752264022827148
    7. '_prefix' → logprob: -14.127264022827148
    8. ' ' → logprob: -15.377264022827148
    9. '.prefix' → logprob: -15.377264022827148
    10. '-prefix' → logprob: -15.877264022827148

Token 478: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00011999329581158236
    2. 'j' → logprob: -9.625120162963867
    3. '_i' → logprob: -10.000120162963867
    4. '[i' → logprob: -12.750120162963867
    5. '[j' → logprob: -12.875120162963867
    6. '```' → logprob: -13.875120162963867
    7. 's' → logprob: -15.000120162963867
    8. 'i' → logprob: -15.000120162963867
    9. '   ' → logprob: -15.375120162963867
    10. '[' → logprob: -15.500120162963867

Token 479: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.512283980846405
    2. '[i' → logprob: -1.0122840404510498
    3. ' =' → logprob: -3.38728404045105
    4. '[' → logprob: -6.012283802032471
    5. '   ' → logprob: -7.512283802032471
    6. '=i' → logprob: -8.262284278869629
    7. ']' → logprob: -8.387284278869629
    8. ']=' → logprob: -9.137284278869629
    9. '=[' → logprob: -10.762284278869629
    10. ')' → logprob: -11.262284278869629

Token 480: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001170225441455841
    2. ']' → logprob: -7.2511701583862305
    3. ' +' → logprob: -8.00117015838623
    4. '1' → logprob: -9.50117015838623
    5. '=' → logprob: -10.50117015838623
    6. ']=' → logprob: -11.62617015838623
    7. '+]' → logprob: -11.87617015838623
    8. '+i' → logprob: -12.50117015838623
    9. ' =' → logprob: -13.87617015838623
    10. '   ' → logprob: -14.50117015838623

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012177363969385624
    2. 'i' → logprob: -7.376217842102051
    3. '+' → logprob: -8.62621784210205
    4. ']' → logprob: -8.62621784210205
    5. 'j' → logprob: -9.37621784210205
    6. '=' → logprob: -10.37621784210205
    7. '0' → logprob: -10.50121784210205
    8. ' ' → logprob: -10.62621784210205
    9. 'p' → logprob: -11.62621784210205
    10. ']+' → logprob: -11.62621784210205

Token 482: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05358542874455452
    2. ' =' → logprob: -3.5535855293273926
    3. ']' → logprob: -3.8035855293273926
    4. ']=' → logprob: -6.678585529327393
    5. '=p' → logprob: -13.053585052490234
    6. ')' → logprob: -13.928585052490234
    7. ' ]' → logprob: -14.553585052490234
    8. '=
' → logprob: -15.303585052490234
    9. ')=' → logprob: -15.428585052490234
    10. ']+=' → logprob: -15.803585052490234

Token 483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=p' → logprob: -16.523244857788086
    4. '+=' → logprob: -18.398244857788086
    5. '=index' → logprob: -18.898244857788086
    6. ' +=' → logprob: -19.273244857788086
    7. '=
' → logprob: -19.398244857788086
    8. '=sum' → logprob: -19.523244857788086
    9. '=j' → logprob: -20.023244857788086
    10. '=int' → logprob: -20.023244857788086

Token 484: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -5.848420551046729e-05
    2. ' prefix' → logprob: -9.7500581741333
    3. '(prefix' → logprob: -16.125059127807617
    4. '_prefix' → logprob: -18.250059127807617
    5. 'refix' → logprob: -19.750059127807617
    6. '<|end|>' → logprob: -19.875059127807617
    7. '.prefix' → logprob: -19.875059127807617
    8. '-prefix' → logprob: -20.750059127807617
    9. '0' → logprob: -21.250059127807617
    10. 'PREFIX' → logprob: -21.375059127807617

Token 485: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -7.896309739408025e-07
    2. '[j' → logprob: -15.375000953674316
    3. 'prefix' → logprob: -15.375000953674316
    4. '_i' → logprob: -15.625000953674316
    5. 'j' → logprob: -15.875000953674316
    6. '+j' → logprob: -17.625
    7. '+' → logprob: -18.25
    8. '[' → logprob: -18.375
    9. '[i' → logprob: -18.75
    10. '   ' → logprob: -19.375

Token 486: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.125001907348633
    3. '[j' → logprob: -14.625001907348633
    4. '[
' → logprob: -14.625001907348633
    5. 'i' → logprob: -15.500001907348633
    6. ' [' → logprob: -16.000001907348633
    7. '_j' → logprob: -16.375001907348633
    8. '[I' → logprob: -17.000001907348633
    9. 'j' → logprob: -17.250001907348633
    10. '
' → logprob: -17.375001907348633

Token 487: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47516030073165894
    2. '+' → logprob: -0.9751603007316589
    3. '+j' → logprob: -7.600160121917725
    4. ']+' → logprob: -7.850160121917725
    5. ']' → logprob: -8.600160598754883
    6. '+p' → logprob: -12.475160598754883
    7. '+
' → logprob: -13.475160598754883
    8. '+]' → logprob: -14.350160598754883
    9. ' plus' → logprob: -14.850160598754883
    10. '+i' → logprob: -15.225160598754883

Token 488: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16122226417064667
    2. ' +' → logprob: -1.911222219467163
    3. '+j' → logprob: -6.911222457885742
    4. '+
' → logprob: -14.536222457885742
    5. '+p' → logprob: -14.786222457885742
    6. '+k' → logprob: -16.786222457885742
    7. ' +
' → logprob: -17.036222457885742
    8. ' ' → logprob: -17.161222457885742
    9. '+i' → logprob: -17.286222457885742
    10. '＋' → logprob: -17.661222457885742

Token 489: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008622024208307266
    2. ' j' → logprob: -4.758622169494629
    3. '   ' → logprob: -12.383622169494629
    4. ' ' → logprob: -13.883622169494629
    5. '	j' → logprob: -14.883622169494629
    6. '       ' → logprob: -15.008622169494629
    7. '[j' → logprob: -15.133622169494629
    8. '    ' → logprob: -15.258622169494629
    9. '(j' → logprob: -15.383622169494629
    10. '  ' → logprob: -15.883622169494629

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8550976164988242e-05
    2. '[' → logprob: -11.125018119812012
    3. ' [' → logprob: -12.750018119812012
    4. 'i' → logprob: -14.875018119812012
    5. '[j' → logprob: -15.875018119812012
    6. '   ' → logprob: -16.750019073486328
    7. '[I' → logprob: -17.000019073486328
    8. '<|end|>' → logprob: -17.000019073486328
    9. ' i' → logprob: -17.250019073486328
    10. '```' → logprob: -17.250019073486328

Token 491: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3400266766548157
    2. ')' → logprob: -1.715026617050171
    3. '<|end|>' → logprob: -2.340026617050171
    4. '+' → logprob: -4.71502685546875
    5. ' ]' → logprob: -6.46502685546875
    6. '<|end|>' → logprob: -7.59002685546875
    7. ')]' → logprob: -8.46502685546875
    8. '       ' → logprob: -8.96502685546875
    9. '])' → logprob: -9.21502685546875
    10. '']' → logprob: -9.46502685546875

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017688281368464231
    2. 'dp' → logprob: -6.626769065856934
    3. '<|end|>' → logprob: -8.501769065856934
    4. ' dp' → logprob: -9.501769065856934
    5. '	dp' → logprob: -9.876769065856934
    6. '   ' → logprob: -10.751769065856934
    7. '```' → logprob: -10.751769065856934
    8. '	' → logprob: -11.376769065856934
    9. '(dp' → logprob: -11.626769065856934
    10. '[' → logprob: -11.626769065856934

Token 493: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008271370315924287
    2. '       ' → logprob: -7.125827312469482
    3. ' dp' → logprob: -11.625826835632324
    4. '```' → logprob: -11.625826835632324
    5. '	dp' → logprob: -13.125826835632324
    6. 'from' → logprob: -13.625826835632324
    7. 'import' → logprob: -14.250826835632324
    8. '_dp' → logprob: -14.625826835632324
    9. '   ' → logprob: -15.375826835632324
    10. '(dp' → logprob: -15.750826835632324

Token 494: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00036406738217920065
    2. '       ' → logprob: -8.125364303588867
    3. ' dp' → logprob: -9.750364303588867
    4. 'from' → logprob: -12.000364303588867
    5. '   ' → logprob: -13.750364303588867
    6. 'import' → logprob: -13.875364303588867
    7. '	dp' → logprob: -14.375364303588867
    8. 'for' → logprob: -14.750364303588867
    9. '
' → logprob: -14.875364303588867
    10. '```' → logprob: -16.000364303588867

Token 495: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048667192459106445
    2. '=' → logprob: -3.0486671924591064
    3. '=[' → logprob: -9.923666954040527
    4. '[' → logprob: -11.423666954040527
    5. '   ' → logprob: -11.548666954040527
    6. ' ' → logprob: -12.798666954040527
    7. ' =[' → logprob: -13.298666954040527
    8. '  ' → logprob: -13.673666954040527
    9. ']' → logprob: -13.923666954040527
    10. '    ' → logprob: -14.423666954040527

Token 496: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.593682587146759
    2. ' =' → logprob: -0.843682587146759
    3. ' ]' → logprob: -4.593682765960693
    4. '=' → logprob: -5.843682765960693
    5. '[' → logprob: -6.468682765960693
    6. ')' → logprob: -6.468682765960693
    7. ']=' → logprob: -6.843682765960693
    8. ' )' → logprob: -9.343682289123535
    9. '<|end|>' → logprob: -9.718682289123535
    10. '])' → logprob: -9.968682289123535

Token 497: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24585409462451935
    2. ' ' → logprob: -1.870854139328003
    3. '[' → logprob: -3.620854139328003
    4. ' [' → logprob: -3.620854139328003
    5. ' max' → logprob: -5.745853900909424
    6. 'max' → logprob: -5.745853900909424
    7. ' -' → logprob: -6.745853900909424
    8. 'float' → logprob: -7.120853900909424
    9. ' float' → logprob: -7.120853900909424
    10. '-' → logprob: -7.870853900909424

Token 498: ' salary' (ID: 21627)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3060394525527954
    2. '_salary' → logprob: -2.306039333343506
    3. ' dp' → logprob: -2.681039333343506
    4. ' salary' → logprob: -3.556039333343506
    5. 'dp' → logprob: -3.556039333343506
    6. 'salary' → logprob: -4.681039333343506
    7. '_' → logprob: -5.056039333343506
    8. '[i' → logprob: -5.181039333343506
    9. '_dp' → logprob: -5.181039333343506
    10. '[' → logprob: -5.681039333343506

Token 499: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13088195025920868
    2. '[i' → logprob: -2.2558820247650146
    3. '=' → logprob: -5.0058817863464355
    4. '[' → logprob: -5.1308817863464355
    5. '   ' → logprob: -6.2558817863464355
    6. ' for' → logprob: -6.2558817863464355
    7. '       ' → logprob: -8.130882263183594
    8. '=[' → logprob: -8.755882263183594
    9. ')' → logprob: -9.005882263183594
    10. '```' → logprob: -9.255882263183594

Token 500: ' first' (ID: 1577)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0336470827460289
    2. 'i' → logprob: -3.408647060394287
    3. '[i' → logprob: -15.533647537231445
    4. ' ' → logprob: -15.658647537231445
    5. ' ' → logprob: -15.783647537231445
    6. ' dp' → logprob: -16.158647537231445
    7. '(i' → logprob: -16.283647537231445
    8. ' all' → logprob: -16.408647537231445
    9. '	i' → logprob: -16.408647537231445
    10. ' the' → logprob: -16.783647537231445

Token 501: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20145398378372192
    2. ' i' → logprob: -1.7014539241790771
    3. '   ' → logprob: -11.576454162597656
    4. '1' → logprob: -11.701454162597656
    5. ' ' → logprob: -12.076454162597656
    6. '`' → logprob: -12.076454162597656
    7. '```' → logprob: -12.826454162597656
    8. ' tokens' → logprob: -12.951454162597656
    9. 'tokens' → logprob: -13.326454162597656
    10. '[i' → logprob: -14.326454162597656

Token 502: ' pipes' (ID: 46808)
  Prédit: 'pipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pipes' → logprob: -0.7236503958702087
    2. ' pipes' → logprob: -1.2236504554748535
    3. '_p' → logprob: -1.9736504554748535
    4. '_' → logprob: -3.3486504554748535
    5. '_tokens' → logprob: -3.5986504554748535
    6. '_pipe' → logprob: -5.2236504554748535
    7. 'tokens' → logprob: -5.4736504554748535
    8. '   ' → logprob: -6.4736504554748535
    9. ')' → logprob: -6.7236504554748535
    10. ' _' → logprob: -6.7236504554748535

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4573919177055359
    2. ' =' → logprob: -1.4573919773101807
    3. '[' → logprob: -2.4573919773101807
    4. '   ' → logprob: -4.207391738891602
    5. '=' → logprob: -4.457391738891602
    6. '[i' → logprob: -5.582391738891602
    7. ',' → logprob: -5.707391738891602
    8. '[
' → logprob: -6.332391738891602
    9. '```' → logprob: -6.457391738891602
    10. ')' → logprob: -6.582391738891602

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.767171323299408
    2. ' =' → logprob: -0.767171323299408
    3. '=' → logprob: -3.6421713829040527
    4. '[' → logprob: -3.7671713829040527
    5. '   ' → logprob: -5.142171382904053
    6. 'dp' → logprob: -5.767171382904053
    7. ',' → logprob: -5.892171382904053
    8. ' for' → logprob: -6.142171382904053
    9. '[i' → logprob: -6.267171382904053
    10. ' dp' → logprob: -6.392171382904053

Token 505: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.008219154551625252
    2. '       ' → logprob: -5.633219242095947
    3. ' dp' → logprob: -5.883219242095947
    4. 'for' → logprob: -7.008219242095947
    5. ' for' → logprob: -7.508219242095947
    6. '[' → logprob: -8.258218765258789
    7. ' =' → logprob: -10.633218765258789
    8. 'from' → logprob: -10.758218765258789
    9. '   ' → logprob: -10.883218765258789
    10. '=' → logprob: -11.133218765258789

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13094720244407654
    2. '[' → logprob: -2.3809471130371094
    3. '=' → logprob: -4.130947113037109
    4. '[i' → logprob: -4.505947113037109
    5. '=[' → logprob: -5.880947113037109
    6. ' =[' → logprob: -8.75594711303711
    7. ')' → logprob: -9.75594711303711
    8. ' [' → logprob: -9.88094711303711
    9. ']' → logprob: -11.00594711303711
    10. '   ' → logprob: -11.38094711303711

Token 507: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015028368216007948
    2. ' [' → logprob: -6.501502990722656
    3. '[n' → logprob: -15.251502990722656
    4. '0' → logprob: -15.751502990722656
    5. '[-' → logprob: -16.126502990722656
    6. '[i' → logprob: -18.001502990722656
    7. ' ' → logprob: -19.001502990722656
    8. '[len' → logprob: -20.251502990722656
    9. '([' → logprob: -20.376502990722656
    10. '   ' → logprob: -20.876502990722656

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011582943610846996
    2. 'float' → logprob: -4.511582851409912
    3. '-' → logprob: -7.636582851409912
    4. '[' → logprob: -11.01158332824707
    5. ' ' → logprob: -11.38658332824707
    6. '-(' → logprob: -11.88658332824707
    7. '-f' → logprob: -12.01158332824707
    8. ' float' → logprob: -12.26158332824707
    9. '(' → logprob: -13.01158332824707
    10. '(float' → logprob: -13.13658332824707

Token 509: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.35271260142326355
    2. ']' → logprob: -1.227712631225586
    3. '*(' → logprob: -5.977712631225586
    4. ']+' → logprob: -6.727712631225586
    5. ']*' → logprob: -8.227712631225586
    6. 'for' → logprob: -9.602712631225586
    7. '(n' → logprob: -9.852712631225586
    8. '(i' → logprob: -10.477712631225586
    9. '(' → logprob: -10.727712631225586
    10. '](' → logprob: -10.852712631225586

Token 510: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. '(n' → logprob: -14.500000953674316
    3. ' n' → logprob: -14.750000953674316
    4. '   ' → logprob: -17.000001907348633
    5. 'len' → logprob: -19.750001907348633
    6. '?n' → logprob: -20.000001907348633
    7. '	n' → logprob: -20.000001907348633
    8. '       ' → logprob: -20.625001907348633
    9. '100' → logprob: -20.750001907348633
    10. '{' → logprob: -20.750001907348633

Token 511: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.3458322731312364e-06
    2. ' +' → logprob: -12.000007629394531
    3. '+
' → logprob: -14.375007629394531
    4. '+i' → logprob: -15.250007629394531
    5. '```' → logprob: -15.875007629394531
    6. '1' → logprob: -16.25000762939453
    7. '+n' → logprob: -17.75000762939453
    8. '
' → logprob: -17.87500762939453
    9. '[' → logprob: -17.87500762939453
    10. '+[' → logprob: -18.50000762939453

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '+' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '2' → logprob: -14.000004768371582
    5. '   ' → logprob: -16.875003814697266
    6. '```' → logprob: -16.875003814697266
    7. '
' → logprob: -17.125003814697266
    8. '{' → logprob: -18.375003814697266
    9. '6' → logprob: -18.625003814697266
    10. '１' → logprob: -18.937503814697266

Token 513: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005431069526821375
    2. ')
' → logprob: -5.255431175231934
    3. '       ' → logprob: -9.005431175231934
    4. '   ' → logprob: -10.630431175231934
    5. ']' → logprob: -11.005431175231934
    6. '
' → logprob: -12.005431175231934
    7. '<|end|>' → logprob: -12.005431175231934
    8. '```' → logprob: -12.630431175231934
    9. ')]' → logprob: -12.755431175231934
    10. ' )' → logprob: -13.005431175231934

Token 514: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6486526727676392
    2. '       ' → logprob: -1.3986526727676392
    3. '   ' → logprob: -1.8986526727676392
    4. 'for' → logprob: -2.5236525535583496
    5. '	for' → logprob: -8.648653030395508
    6. ' ' → logprob: -9.273653030395508
    7. '    ' → logprob: -10.648653030395508
    8. '```' → logprob: -10.773653030395508
    9. '  ' → logprob: -11.398653030395508
    10. '[' → logprob: -11.398653030395508

Token 515: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31798139214515686
    2. 'for' → logprob: -1.3179813623428345
    3. '   ' → logprob: -5.817981243133545
    4. '       ' → logprob: -6.567981243133545
    5. '	for' → logprob: -8.192981719970703
    6. '```' → logprob: -10.192981719970703
    7. '\t' → logprob: -13.192981719970703
    8. 'i' → logprob: -13.192981719970703
    9. '[' → logprob: -13.567981719970703
    10. ' i' → logprob: -13.567981719970703

Token 516: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3080716346157715e-05
    2. 'from' → logprob: -11.500022888183594
    3. ' for' → logprob: -11.750022888183594
    4. '   ' → logprob: -12.250022888183594
    5. 'import' → logprob: -15.625022888183594
    6. '       ' → logprob: -16.000022888183594
    7. '```' → logprob: -18.000022888183594
    8. '	for' → logprob: -19.625022888183594
    9. '
' → logprob: -19.875022888183594
    10. 'i' → logprob: -21.250022888183594

Token 517: ' optimize' (ID: 40398)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8920451998710632
    2. 'i' → logprob: -1.142045259475708
    3. ' for' → logprob: -1.517045259475708
    4. 'for' → logprob: -3.642045259475708
    5. ' in' → logprob: -4.267045021057129
    6. '   ' → logprob: -5.892045021057129
    7. ' ' → logprob: -5.892045021057129
    8. ' range' → logprob: -6.767045021057129
    9. ')' → logprob: -7.017045021057129
    10. 'in' → logprob: -8.017045021057129

Token 518: ' naive' (ID: 105687)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3082289695739746
    2. 'for' → logprob: -1.4332289695739746
    3. '       ' → logprob: -3.8082289695739746
    4. '   ' → logprob: -5.808228969573975
    5. ' i' → logprob: -7.683228969573975
    6. 'range' → logprob: -8.183229446411133
    7. '```' → logprob: -8.308229446411133
    8. ' range' → logprob: -8.433229446411133
    9. 'i' → logprob: -9.058229446411133
    10. 'from' → logprob: -10.433229446411133

Token 519: ' O' (ID: 532)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5801658034324646
    2. ' for' → logprob: -0.9551658034324646
    3. ' loop' → logprob: -4.705165863037109
    4. ' i' → logprob: -5.080165863037109
    5. '   ' → logprob: -5.330165863037109
    6. ' O' → logprob: -5.330165863037109
    7. 'dp' → logprob: -5.330165863037109
    8. 'O' → logprob: -5.580165863037109
    9. ' dp' → logprob: -5.580165863037109
    10. ' approach' → logprob: -5.830165863037109

Token 520: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0036205046344548464
    2. '(N' → logprob: -6.128620624542236
    3. '(' → logprob: -7.003620624542236
    4. '(i' → logprob: -7.753620624542236
    5. '((' → logprob: -10.003620147705078
    6. 'dp' → logprob: -11.253620147705078
    7. ' (' → logprob: -12.128620147705078
    8. '(dp' → logprob: -12.253620147705078
    9. '(len' → logprob: -12.378620147705078
    10. '   ' → logprob: -12.753620147705078

Token 521: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4782320559024811
    2. '[' → logprob: -1.7282320261001587
    3. '^' → logprob: -2.4782321453094482
    4. '*' → logprob: -3.4782321453094482
    5. '2' → logprob: -4.228231906890869
    6. '[i' → logprob: -4.353231906890869
    7. ')
' → logprob: -4.478231906890869
    8. '+' → logprob: -4.853231906890869
    9. '
' → logprob: -5.103231906890869
    10. '```' → logprob: -5.103231906890869

Token 522: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007469753036275506
    2. '²' → logprob: -7.625747203826904
    3. '^' → logprob: -9.125746726989746
    4. ' ' → logprob: -9.625746726989746
    5. '1' → logprob: -10.125746726989746
    6. ')' → logprob: -11.625746726989746
    7. '```' → logprob: -11.875746726989746
    8. '+' → logprob: -12.125746726989746
    9. '*' → logprob: -12.250746726989746
    10. '(' → logprob: -12.375746726989746

Token 523: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03627777844667435
    2. '+' → logprob: -3.5362777709960938
    3. ' )' → logprob: -6.411277770996094
    4. ')+' → logprob: -6.911277770996094
    5. 'for' → logprob: -7.161277770996094
    6. '+)' → logprob: -7.661277770996094
    7. ' +' → logprob: -7.911277770996094
    8. '*' → logprob: -8.161277770996094
    9. '):
' → logprob: -8.286277770996094
    10. ')
' → logprob: -8.411277770996094

Token 524: ' use' (ID: 1199)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4147604703903198
    2. ' for' → logprob: -1.6647604703903198
    3. ' import' → logprob: -1.6647604703903198
    4. 'import' → logprob: -1.7897604703903198
    5. ' from' → logprob: -1.9147604703903198
    6. 'for' → logprob: -3.1647605895996094
    7. ' pass' → logprob: -4.539760589599609
    8. '       ' → logprob: -5.414760589599609
    9. 'stack' → logprob: -6.164760589599609
    10. '   ' → logprob: -6.789760589599609

Token 525: ' convex' (ID: 142423)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8334219455718994
    2. 'mon' → logprob: -1.8334219455718994
    3. 'conv' → logprob: -2.0834219455718994
    4. 'stack' → logprob: -2.2084219455718994
    5. 'deque' → logprob: -2.2084219455718994
    6. 'import' → logprob: -3.9584219455718994
    7. 'segment' → logprob: -4.33342170715332
    8. 'for' → logprob: -5.45842170715332
    9. 'a' → logprob: -5.58342170715332
    10. 'mono' → logprob: -5.83342170715332

Token 526: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.015698105096817017
    2. '_h' → logprob: -4.640697956085205
    3. ' hull' → logprob: -5.265697956085205
    4. 'dp' → logprob: -7.390697956085205
    5. '-h' → logprob: -9.890698432922363
    6. '   ' → logprob: -10.640698432922363
    7. '_dp' → logprob: -11.640698432922363
    8. ' dp' → logprob: -11.765698432922363
    9. 'Hull' → logprob: -11.765698432922363
    10. '	h' → logprob: -11.765698432922363

Token 527: ' trick' (ID: 28864)
  Prédit: '_tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.1226244792342186
    2. '_dp' → logprob: -2.997624397277832
    3. 'dp' → logprob: -3.247624397277832
    4. 'tr' → logprob: -4.747624397277832
    5. '[]' → logprob: -5.372624397277832
    6. '_' → logprob: -5.997624397277832
    7. '[' → logprob: -6.122624397277832
    8. ' Trick' → logprob: -6.747624397277832
    9. ' trick' → logprob: -7.122624397277832
    10. ']' → logprob: -7.247624397277832

Token 528: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7219776511192322
    2. '
' → logprob: -1.096977710723877
    3. '   ' → logprob: -2.346977710723877
    4. ':' → logprob: -4.096977710723877
    5. '        
' → logprob: -4.221977710723877
    6. ' =' → logprob: -4.471977710723877
    7. ' for' → logprob: -4.971977710723877
    8. '    
' → logprob: -5.096977710723877
    9. '<|end|>' → logprob: -5.471977710723877
    10. ' 
' → logprob: -5.596977710723877

Token 529: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6893187761306763
    2. '       ' → logprob: -1.3143187761306763
    3. '   ' → logprob: -2.6893186569213867
    4. 'for' → logprob: -2.6893186569213867
    5. '
' → logprob: -2.9393186569213867
    6. '```' → logprob: -4.189318656921387
    7. '\n' → logprob: -5.189318656921387
    8. '    
' → logprob: -5.314318656921387
    9. ' 
' → logprob: -5.439318656921387
    10. '        
' → logprob: -5.814318656921387

Token 530: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47573208808898926
    2. 'from' → logprob: -0.9757320880889893
    3. 'import' → logprob: -6.60073184967041
    4. '   ' → logprob: -9.47573184967041
    5. 'class' → logprob: -9.60073184967041
    6. ' for' → logprob: -9.97573184967041
    7. 'stack' → logprob: -10.10073184967041
    8. '```' → logprob: -10.60073184967041
    9. '       ' → logprob: -11.22573184967041
    10. 'deque' → logprob: -11.97573184967041

Token 531: ' Each' (ID: 11555)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1560143679380417
    2. 'for' → logprob: -2.1560144424438477
    3. 'dp' → logprob: -4.281014442443848
    4. 'def' → logprob: -5.781014442443848
    5. 'class' → logprob: -5.781014442443848
    6. 'stack' → logprob: -6.281014442443848
    7. 'deque' → logprob: -6.281014442443848
    8. '   ' → logprob: -6.906014442443848
    9. '       ' → logprob: -7.031014442443848
    10. '#' → logprob: -7.531014442443848

Token 532: ' segment' (ID: 14806)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5663337707519531
    2. ' line' → logprob: -1.5663337707519531
    3. 'i' → logprob: -1.9413337707519531
    4. ' dp' → logprob: -2.066333770751953
    5. ' i' → logprob: -2.441333770751953
    6. 'dp' → logprob: -2.566333770751953
    7. ' for' → logprob: -3.441333770751953
    8. '=' → logprob: -3.441333770751953
    9. 'line' → logprob: -4.066333770751953
    10. 'for' → logprob: -4.191333770751953

Token 533: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5460185408592224
    2. ' ends' → logprob: -2.671018600463867
    3. 'ends' → logprob: -3.046018600463867
    4. 'for' → logprob: -3.171018600463867
    5. 'i' → logprob: -3.546018600463867
    6. '[i' → logprob: -3.671018600463867
    7. 'from' → logprob: -3.921018600463867
    8. ' represents' → logprob: -3.921018600463867
    9. '=' → logprob: -4.046018600463867
    10. ' =' → logprob: -4.171018600463867

Token 534: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6143056750297546
    2. ' i' → logprob: -0.9893056750297546
    3. ')' → logprob: -3.6143057346343994
    4. '       ' → logprob: -4.23930549621582
    5. ' [' → logprob: -4.61430549621582
    6. ' line' → logprob: -5.73930549621582
    7. 'def' → logprob: -5.73930549621582
    8. ' =' → logprob: -6.11430549621582
    9. 'from' → logprob: -6.11430549621582
    10. ' from' → logprob: -6.11430549621582

Token 535: ',i' (ID: 25032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39975377917289734
    2. ',' → logprob: -1.3997538089752197
    3. '+' → logprob: -3.2747538089752197
    4. '=' → logprob: -4.899753570556641
    5. ')+' → logprob: -4.899753570556641
    6. '       ' → logprob: -5.399753570556641
    7. ']' → logprob: -5.524753570556641
    8. ')=' → logprob: -5.774753570556641
    9. '):' → logprob: -5.899753570556641
    10. ',
' → logprob: -6.274753570556641

Token 536: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03107387199997902
    2. '):' → logprob: -3.656073808670044
    3. ' )' → logprob: -7.156074047088623
    4. ']' → logprob: -7.156074047088623
    5. '):
' → logprob: -7.156074047088623
    6. '])' → logprob: -7.656074047088623
    7. '+' → logprob: -7.906074047088623
    8. '-' → logprob: -8.031073570251465
    9. ')
' → logprob: -8.281073570251465
    10. ')=' → logprob: -8.406073570251465

Token 537: ' length' (ID: 5517)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12636525928974152
    2. '           ' → logprob: -3.6263651847839355
    3. ')' → logprob: -4.2513651847839355
    4. ' represents' → logprob: -4.3763651847839355
    5. '):' → logprob: -4.5013651847839355
    6. '=' → logprob: -4.7513651847839355
    7. '       ' → logprob: -5.0013651847839355
    8. ' =' → logprob: -5.2513651847839355
    9. ':
' → logprob: -5.3763651847839355
    10. ',' → logprob: -5.6263651847839355

Token 538: ' sum' (ID: 4215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8043028116226196
    2. ' =' → logprob: -0.8043028116226196
    3. ')' → logprob: -2.92930269241333
    4. '+' → logprob: -4.30430269241333
    5. '       ' → logprob: -5.67930269241333
    6. ':' → logprob: -5.67930269241333
    7. '```' → logprob: -5.67930269241333
    8. 's' → logprob: -5.80430269241333
    9. ',' → logprob: -5.92930269241333
    10. ' is' → logprob: -6.17930269241333

Token 539: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1466326713562012
    2. '+' → logprob: -1.2716326713562012
    3. ' =' → logprob: -1.8966326713562012
    4. ')' → logprob: -2.521632671356201
    5. '       ' → logprob: -3.271632671356201
    6. ']' → logprob: -3.521632671356201
    7. ' +' → logprob: -4.521632671356201
    8. '_j' → logprob: -5.021632671356201
    9. '_p' → logprob: -5.021632671356201
    10. '   ' → logprob: -5.146632671356201

Token 540: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.29620903730392456
    2. ' prefix' → logprob: -1.4212090969085693
    3. ' p' → logprob: -5.29620885848999
    4. 'p' → logprob: -5.92120885848999
    5. ' (' → logprob: -6.42120885848999
    6. '(prefix' → logprob: -7.04620885848999
    7. ' k' → logprob: -7.23370885848999
    8. 'k' → logprob: -7.60870885848999
    9. '    ' → logprob: -8.046209335327148
    10. '1' → logprob: -8.171209335327148

Token 541: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8020630478858948
    2. '_j' → logprob: -1.17706298828125
    3. '[j' → logprob: -2.42706298828125
    4. '_i' → logprob: -3.42706298828125
    5. '[k' → logprob: -3.80206298828125
    6. 'prefix' → logprob: -4.05206298828125
    7. 'sum' → logprob: -4.30206298828125
    8. '[' → logprob: -4.67706298828125
    9. '
' → logprob: -4.67706298828125
    10. 'length' → logprob: -4.92706298828125

Token 542: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014257056638598442
    2. ']-' → logprob: -4.264256954193115
    3. '[' → logprob: -10.264257431030273
    4. '-' → logprob: -11.139257431030273
    5. '][' → logprob: -11.514257431030273
    6. ']
' → logprob: -11.639257431030273
    7. ' ]' → logprob: -11.889257431030273
    8. ']+' → logprob: -12.139257431030273
    9. '1' → logprob: -13.264257431030273
    10. '']' → logprob: -13.514257431030273

Token 543: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1179199144244194
    2. '-' → logprob: -2.242919921875
    3. ')' → logprob: -6.242919921875
    4. '[' → logprob: -7.367919921875
    5. '<|end|>' → logprob: -7.867919921875
    6. '-k' → logprob: -7.992919921875
    7. '
' → logprob: -7.992919921875
    8. ']' → logprob: -8.617919921875
    9. ')-' → logprob: -8.742919921875
    10. '```' → logprob: -8.992919921875

Token 544: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0009152670972980559
    2. ' prefix' → logprob: -7.000915050506592
    3. '(prefix' → logprob: -12.62591552734375
    4. '_prefix' → logprob: -15.37591552734375
    5. 'refix' → logprob: -15.87591552734375
    6. '```' → logprob: -17.50091552734375
    7. 'k' → logprob: -17.50091552734375
    8. '
' → logprob: -17.62591552734375
    9. 'PREFIX' → logprob: -17.87591552734375
    10. '.prefix' → logprob: -17.87591552734375

Token 545: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0027476961258798838
    2. '[' → logprob: -6.252747535705566
    3. 'k' → logprob: -8.002747535705566
    4. '[i' → logprob: -8.377747535705566
    5. '```' → logprob: -9.502747535705566
    6. '\[' → logprob: -10.252747535705566
    7. '[j' → logprob: -10.377747535705566
    8. '(k' → logprob: -10.877747535705566
    9. '{k' → logprob: -11.252747535705566
    10. '
' → logprob: -11.502747535705566

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023930801078677177
    2. ']
' → logprob: -4.52393102645874
    3. ')' → logprob: -4.89893102645874
    4. '])' → logprob: -5.52393102645874
    5. '],' → logprob: -7.39893102645874
    6. '       ' → logprob: -8.273930549621582
    7. ']+' → logprob: -8.898930549621582
    8. ')
' → logprob: -9.148930549621582
    9. ')]' → logprob: -9.898930549621582
    10. '+' → logprob: -10.148930549621582

Token 547: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08549578487873077
    2. ',' → logprob: -3.960495710372925
    3. '        ' → logprob: -4.210495948791504
    4. ')' → logprob: -4.585495948791504
    5. '<|end|>' → logprob: -4.960495948791504
    6. '+' → logprob: -5.210495948791504
    7. ' +' → logprob: -5.585495948791504
    8. ' for' → logprob: -5.710495948791504
    9. '        
' → logprob: -6.210495948791504
    10. ' ' → logprob: -6.210495948791504

Token 548: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00814666599035263
    2. '(prefix' → logprob: -5.0081467628479
    3. ' prefix' → logprob: -6.6331467628479
    4. '
' → logprob: -10.383146286010742
    5. ' (' → logprob: -10.633146286010742
    6. '   ' → logprob: -11.008146286010742
    7. '(' → logprob: -11.633146286010742
    8. '           ' → logprob: -11.758146286010742
    9. ' ' → logprob: -12.633146286010742
    10. 'j' → logprob: -13.258146286010742

Token 549: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.17662771046161652
    2. '[k' → logprob: -2.5516276359558105
    3. '_k' → logprob: -2.8016276359558105
    4. '[j' → logprob: -4.5516276359558105
    5. '[i' → logprob: -5.4266276359558105
    6. '[' → logprob: -6.1766276359558105
    7. '_i' → logprob: -6.4266276359558105
    8. '```' → logprob: -6.9266276359558105
    9. '[n' → logprob: -7.3016276359558105
    10. 'k' → logprob: -7.3016276359558105

Token 550: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1981135904788971
    2. 'k' → logprob: -2.1981136798858643
    3. '[i' → logprob: -3.3231136798858643
    4. '[' → logprob: -5.448113441467285
    5. ')' → logprob: -5.698113441467285
    6. '_k' → logprob: -5.823113441467285
    7. ']' → logprob: -5.823113441467285
    8. '(k' → logprob: -6.198113441467285
    9. ' [' → logprob: -6.323113441467285
    10. 'i' → logprob: -6.448113441467285

Token 551: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7027918696403503
    2. ']' → logprob: -0.7027918696403503
    3. ']-' → logprob: -5.452791690826416
    4. '[k' → logprob: -6.077791690826416
    5. ' -' → logprob: -6.452791690826416
    6. 'k' → logprob: -7.327791690826416
    7. '-k' → logprob: -8.327792167663574
    8. '][' → logprob: -9.577792167663574
    9. '])' → logprob: -9.577792167663574
    10. '[' → logprob: -9.827792167663574

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002737330214586109
    2. 'k' → logprob: -9.375273704528809
    3. '0' → logprob: -9.750273704528809
    4. '-' → logprob: -9.750273704528809
    5. ' ' → logprob: -9.750273704528809
    6. '```' → logprob: -12.625273704528809
    7. '2' → logprob: -12.750273704528809
    8. ']' → logprob: -12.750273704528809
    9. ' -' → logprob: -13.000273704528809
    10. ')' → logprob: -14.250273704528809

Token 553: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005809343885630369
    2. '-' → logprob: -6.005809307098389
    3. ']-' → logprob: -6.255809307098389
    4. '])' → logprob: -7.630809307098389
    5. ' ]' → logprob: -8.380809783935547
    6. ' -' → logprob: -8.380809783935547
    7. '+' → logprob: -8.880809783935547
    8. ']+' → logprob: -9.005809783935547
    9. '[k' → logprob: -10.130809783935547
    10. ')' → logprob: -10.380809783935547

Token 554: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2473170757293701
    2. ']' → logprob: -1.3723170757293701
    3. ' -' → logprob: -1.6223170757293701
    4. '+' → logprob: -2.49731707572937
    5. '<|end|>' → logprob: -3.24731707572937
    6. '[k' → logprob: -3.62231707572937
    7. ' +' → logprob: -4.122317314147949
    8. '-token' → logprob: -4.497317314147949
    9. ')' → logprob: -4.622317314147949
    10. '[i' → logprob: -4.747317314147949

Token 555: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0004317420825827867
    2. ' prefix' → logprob: -7.750431537628174
    3. '(prefix' → logprob: -14.000432014465332
    4. '       ' → logprob: -16.500431060791016
    5. '   ' → logprob: -16.750431060791016
    6. '           ' → logprob: -17.000431060791016
    7. '_prefix' → logprob: -17.875431060791016
    8. '
' → logprob: -18.750431060791016
    9. '```' → logprob: -19.125431060791016
    10. '          ' → logprob: -19.500431060791016

Token 556: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.02010980062186718
    2. '_k' → logprob: -4.0201096534729
    3. '[k' → logprob: -6.7701096534729
    4. '[j' → logprob: -8.145110130310059
    5. 'j' → logprob: -9.020110130310059
    6. '```' → logprob: -9.270110130310059
    7. '[' → logprob: -9.895110130310059
    8. '[
' → logprob: -10.395110130310059
    9. 'k' → logprob: -10.395110130310059
    10. '{k' → logprob: -10.520110130310059

Token 557: '[k' (ID: 14298)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07695318758487701
    2. '[k' → logprob: -2.701953172683716
    3. '[' → logprob: -5.451953411102295
    4. '(k' → logprob: -6.701953411102295
    5. '{k' → logprob: -7.076953411102295
    6. '[
' → logprob: -8.576952934265137
    7. '_k' → logprob: -9.076952934265137
    8. ' k' → logprob: -9.701952934265137
    9. '```' → logprob: -10.576952934265137
    10. '{' → logprob: -10.826952934265137

Token 558: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.324420303106308
    2. ')' → logprob: -1.9494203329086304
    3. '])' → logprob: -2.574420213699341
    4. '+' → logprob: -3.199420213699341
    5. '-' → logprob: -5.19942045211792
    6. ']+' → logprob: -5.82442045211792
    7. '<|end|>' → logprob: -6.07442045211792
    8. ')]' → logprob: -6.57442045211792
    9. '<|end|>' → logprob: -7.32442045211792
    10. ' ]' → logprob: -7.57442045211792

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019278990104794502
    2. ' for' → logprob: -5.3942790031433105
    3. ' =' → logprob: -6.0192790031433105
    4. ' +' → logprob: -6.3942790031433105
    5. ')' → logprob: -6.6442790031433105
    6. '+' → logprob: -6.8942790031433105
    7. '\n' → logprob: -7.0192790031433105
    8. '
' → logprob: -7.3942790031433105
    9. '```' → logprob: -7.3942790031433105
    10. 'for' → logprob: -7.3942790031433105

Token 560: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10708577185869217
    2. 'for' → logprob: -2.732085704803467
    3. ' for' → logprob: -3.357085704803467
    4. '
' → logprob: -7.482085704803467
    5. ')' → logprob: -8.232086181640625
    6. ',' → logprob: -8.732086181640625
    7. '   ' → logprob: -9.107086181640625
    8. '```' → logprob: -9.232086181640625
    9. '        
' → logprob: -9.607086181640625
    10. '           ' → logprob: -9.732086181640625

Token 561: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3731243908405304
    2. 'for' → logprob: -1.873124361038208
    3. '       ' → logprob: -1.873124361038208
    4. '   ' → logprob: -7.123124599456787
    5. '           ' → logprob: -7.498124599456787
    6. '        ' → logprob: -7.498124599456787
    7. 'For' → logprob: -7.873124599456787
    8. ')' → logprob: -7.998124599456787
    9. ' ' → logprob: -8.248124122619629
    10. ' For' → logprob: -8.748124122619629

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2573188245296478
    2. '=' → logprob: -1.8823188543319702
    3. '       ' → logprob: -4.25731897354126
    4. '[i' → logprob: -4.38231897354126
    5. 'for' → logprob: -4.63231897354126
    6. ')' → logprob: -5.25731897354126
    7. '*(' → logprob: -5.50731897354126
    8. 's' → logprob: -5.88231897354126
    9. '=i' → logprob: -6.00731897354126
    10. '+' → logprob: -6.50731897354126

Token 563: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.234808549284935
    2. ' i' → logprob: -1.6098085641860962
    3. ' (' → logprob: -4.859808444976807
    4. '(i' → logprob: -6.984808444976807
    5. '   ' → logprob: -7.859808444976807
    6. '(' → logprob: -9.359808921813965
    7. ' ' → logprob: -9.359808921813965
    8. '`' → logprob: -10.484808921813965
    9. '{i' → logprob: -11.109808921813965
    10. '	i' → logprob: -11.234808921813965

Token 564: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0248725414276123
    2. '-' → logprob: -1.5248725414276123
    3. 'for' → logprob: -2.5248725414276123
    4. ']' → logprob: -2.6498725414276123
    5. ' -' → logprob: -2.7748725414276123
    6. '       ' → logprob: -2.8998725414276123
    7. '<|end|>' → logprob: -3.0248725414276123
    8. '   ' → logprob: -4.274872779846191
    9. 'def' → logprob: -4.524872779846191
    10. ',' → logprob: -4.524872779846191

Token 565: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011048289015889168
    2. ' k' → logprob: -4.511048316955566
    3. '1' → logprob: -14.761048316955566
    4. ' ' → logprob: -17.01104736328125
    5. '{k' → logprob: -17.63604736328125
    6. '	k' → logprob: -17.76104736328125
    7. '```' → logprob: -18.76104736328125
    8. '_k' → logprob: -19.01104736328125
    9. '[k' → logprob: -19.51104736328125
    10. ' к' → logprob: -19.88604736328125

Token 566: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17357946932315826
    2. '
' → logprob: -2.548579454421997
    3. ' for' → logprob: -3.298579454421997
    4. 'for' → logprob: -3.798579454421997
    5. '\n' → logprob: -4.923579692840576
    6. '   ' → logprob: -5.548579692840576
    7. '        
' → logprob: -5.673579692840576
    8. ')' → logprob: -6.673579692840576
    9. ' 
' → logprob: -6.923579692840576
    10. '  
' → logprob: -6.923579692840576

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008273298852145672
    2. ' for' → logprob: -5.383273124694824
    3. 'for' → logprob: -7.633273124694824
    4. '   ' → logprob: -7.633273124694824
    5. '        
' → logprob: -7.883273124694824
    6. ',' → logprob: -8.008273124694824
    7. '           ' → logprob: -8.133273124694824
    8. ')' → logprob: -8.383273124694824
    9. ' =' → logprob: -8.508273124694824
    10. '\' → logprob: -8.758273124694824

Token 568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1583113670349121
    2. 'for' → logprob: -2.283311367034912
    3. ' for' → logprob: -3.158311367034912
    4. '   ' → logprob: -7.158311367034912
    5. ')' → logprob: -8.90831184387207
    6. '           ' → logprob: -8.90831184387207
    7. '```' → logprob: -8.90831184387207
    8. ',' → logprob: -9.15831184387207
    9. '
' → logprob: -9.65831184387207
    10. '[' → logprob: -9.78331184387207

Token 569: ' value' (ID: 1432)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3867652118206024
    2. ' for' → logprob: -1.3867652416229248
    3. '       ' → logprob: -2.886765241622925
    4. 'dp' → logprob: -4.761765003204346
    5. '   ' → logprob: -6.261765003204346
    6. 'def' → logprob: -7.011765003204346
    7. 'For' → logprob: -7.136765003204346
    8. ' dp' → logprob: -7.511765003204346
    9. '=' → logprob: -8.136765480041504
    10. 'from' → logprob: -8.386765480041504

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08160722255706787
    2. '=' → logprob: -2.5816073417663574
    3. ' +=' → logprob: -6.581607341766357
    4. '[i' → logprob: -7.706607341766357
    5. ')' → logprob: -8.4566068649292
    6. '[' → logprob: -8.9566068649292
    7. '   ' → logprob: -8.9566068649292
    8. '_' → logprob: -9.3316068649292
    9. ']' → logprob: -9.8316068649292
    10. ' ' → logprob: -9.8316068649292

Token 571: ' count' (ID: 3605)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21212519705295563
    2. '(i' → logprob: -2.462125301361084
    3. '(dp' → logprob: -2.837125301361084
    4. 'dp' → logprob: -3.587125301361084
    5. ' dp' → logprob: -4.712125301361084
    6. '(prefix' → logprob: -5.337125301361084
    7. '(count' → logprob: -6.962125301361084
    8. '(' → logprob: -7.337125301361084
    9. ' ' → logprob: -7.337125301361084
    10. '(k' → logprob: -7.462125301361084

Token 572: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05959393084049225
    2. '*' → logprob: -3.059593915939331
    3. '*(' → logprob: -5.18459415435791
    4. ')' → logprob: -6.68459415435791
    5. '[' → logprob: -7.30959415435791
    6. '*[' → logprob: -7.43459415435791
    7. '*i' → logprob: -7.80959415435791
    8. '[i' → logprob: -7.93459415435791
    9. '<|end|>' → logprob: -7.93459415435791
    10. '*k' → logprob: -8.05959415435791

Token 573: ' segment' (ID: 14806)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.08564023673534393
    2. ' (' → logprob: -2.5856401920318604
    3. '((' → logprob: -5.0856404304504395
    4. ' ((' → logprob: -8.085639953613281
    5. '(' → logprob: -9.210639953613281
    6. '(sum' → logprob: -9.960639953613281
    7. '(pref' → logprob: -10.335639953613281
    8. '(p' → logprob: -11.335639953613281
    9. ' ' → logprob: -12.085639953613281
    10. '(i' → logprob: -12.335639953613281

Token 574: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.713546872138977
    2. '_' → logprob: -1.588546872138977
    3. ']' → logprob: -2.7135467529296875
    4. ')' → logprob: -2.8385467529296875
    5. 's' → logprob: -3.5885467529296875
    6. '_sum' → logprob: -3.8385467529296875
    7. '_len' → logprob: -3.8385467529296875
    8. '_count' → logprob: -4.0885467529296875
    9. '_lengths' → logprob: -4.4635467529296875
    10. '[' → logprob: -4.8385467529296875

Token 575: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028365256264805794
    2. ' for' → logprob: -4.153365135192871
    3. '
' → logprob: -5.403365135192871
    4. '        
' → logprob: -6.278365135192871
    5. ' =' → logprob: -6.403365135192871
    6. 'for' → logprob: -6.653365135192871
    7. '=' → logprob: -7.403365135192871
    8. '\n' → logprob: -7.778365135192871
    9. ',' → logprob: -8.028365135192871
    10. ')' → logprob: -8.403365135192871

Token 576: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.285703182220459
    2. ' dp' → logprob: -1.410703182220459
    3. 'max' → logprob: -6.660703182220459
    4. ' max' → logprob: -7.035703182220459
    5. 'prefix' → logprob: -7.160703182220459
    6. ' prefix' → logprob: -8.035703659057617
    7. '(dp' → logprob: -8.160703659057617
    8. '```' → logprob: -8.848203659057617
    9. ' (' → logprob: -9.410703659057617
    10. '0' → logprob: -9.535703659057617

Token 577: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04841940104961395
    2. '[' → logprob: -3.42341947555542
    3. '[k' → logprob: -4.79841947555542
    4. ')' → logprob: -5.67341947555542
    5. '[
' → logprob: -7.42341947555542
    6. ']' → logprob: -7.79841947555542
    7. ' [' → logprob: -7.92341947555542
    8. '=' → logprob: -8.673418998718262
    9. '<|end|>' → logprob: -8.923418998718262
    10. '\[' → logprob: -9.048418998718262

Token 578: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007903526537120342
    2. ')' → logprob: -5.507903575897217
    3. '])' → logprob: -6.757903575897217
    4. ')]' → logprob: -6.757903575897217
    5. ']
' → logprob: -7.507903575897217
    6. '[k' → logprob: -8.007903099060059
    7. '[i' → logprob: -8.507903099060059
    8. '-' → logprob: -9.007903099060059
    9. ' ]' → logprob: -9.382903099060059
    10. '   ' → logprob: -9.757903099060059

Token 579: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10635730624198914
    2. '
' → logprob: -2.6063573360443115
    3. ' =' → logprob: -4.106357097625732
    4. '        
' → logprob: -5.606357097625732
    5. '=' → logprob: -6.106357097625732
    6. ',' → logprob: -7.106357097625732
    7. ' for' → logprob: -7.106357097625732
    8. '<|end|>' → logprob: -7.731357097625732
    9. '   ' → logprob: -8.10635757446289
    10. '\n' → logprob: -8.23135757446289

Token 580: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17931008338928223
    2. 'dp' → logprob: -2.3043100833892822
    3. ' max' → logprob: -3.1793100833892822
    4. ' dp' → logprob: -4.554309844970703
    5. 'prefix' → logprob: -4.804309844970703
    6. ' prefix' → logprob: -6.554309844970703
    7. '0' → logprob: -7.179309844970703
    8. 'float' → logprob: -8.429309844970703
    9. '[' → logprob: -8.679309844970703
    10. 'count' → logprob: -8.929309844970703

Token 581: 'i' (ID: 72)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6034437417984009
    2. 'i' → logprob: -1.8534437417984009
    3. 'dp' → logprob: -2.6034436225891113
    4. ' prefix' → logprob: -2.7284436225891113
    5. ' (' → logprob: -3.1034436225891113
    6. 'count' → logprob: -3.3534436225891113
    7. '(prefix' → logprob: -3.6034436225891113
    8. '(i' → logprob: -4.103443622589111
    9. ' dp' → logprob: -4.853443622589111
    10. ' i' → logprob: -4.978443622589111

Token 582: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1713353991508484
    2. '-' → logprob: -1.9213354587554932
    3. '-k' → logprob: -4.546335220336914
    4. ')' → logprob: -8.171335220336914
    5. '-token' → logprob: -10.171335220336914
    6. ',' → logprob: -10.671335220336914
    7. ' ' → logprob: -11.546335220336914
    8. '  ' → logprob: -11.671335220336914
    9. ')-(' → logprob: -11.671335220336914
    10. '-
' → logprob: -11.796335220336914

Token 583: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10213913768529892
    2. ')*' → logprob: -2.7271392345428467
    3. ' -' → logprob: -4.227138996124268
    4. '-' → logprob: -4.852138996124268
    5. '-k' → logprob: -5.977138996124268
    6. ']' → logprob: -6.352138996124268
    7. ')*(' → logprob: -6.477138996124268
    8. ',' → logprob: -6.977138996124268
    9. ' )' → logprob: -7.852138996124268
    10. ')-' → logprob: -7.977138996124268

Token 584: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.11324083805084229
    2. '(prefix' → logprob: -2.2382407188415527
    3. ' prefix' → logprob: -7.988240718841553
    4. ' (' → logprob: -9.988241195678711
    5. '((' → logprob: -12.238241195678711
    6. '-prefix' → logprob: -12.238241195678711
    7. '
' → logprob: -12.488241195678711
    8. '(' → logprob: -12.988241195678711
    9. '```' → logprob: -12.988241195678711
    10. '_prefix' → logprob: -13.738241195678711

Token 585: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.16512326896190643
    2. '[i' → logprob: -2.415123224258423
    3. '[' → logprob: -3.290123224258423
    4. ']' → logprob: -4.665123462677002
    5. ')' → logprob: -5.040123462677002
    6. '[j' → logprob: -5.165123462677002
    7. '_k' → logprob: -6.665123462677002
    8. '-' → logprob: -7.915123462677002
    9. ']-' → logprob: -8.290122985839844
    10. '[-' → logprob: -8.415122985839844

Token 586: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015233141602948308
    2. ']-' → logprob: -6.501523494720459
    3. ' ]' → logprob: -11.7515230178833
    4. '])' → logprob: -12.1265230178833
    5. '-' → logprob: -12.8765230178833
    6. ' -' → logprob: -13.5015230178833
    7. ')' → logprob: -13.7515230178833
    8. ']
' → logprob: -14.0015230178833
    9. '[' → logprob: -14.6265230178833
    10. '']' → logprob: -14.8765230178833

Token 587: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0005968777113594115
    2. 'k' → logprob: -7.50059700012207
    3. ' prefix' → logprob: -10.25059700012207
    4. '```' → logprob: -12.87559700012207
    5. '(prefix' → logprob: -13.25059700012207
    6. '[k' → logprob: -13.25059700012207
    7. '
' → logprob: -14.50059700012207
    8. '_prefix' → logprob: -14.87559700012207
    9. 'refix' → logprob: -15.12559700012207
    10. ')' → logprob: -15.50059700012207

Token 588: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.011846511624753475
    2. 'k' → logprob: -4.511846542358398
    3. '[' → logprob: -7.511846542358398
    4. '{k' → logprob: -9.136846542358398
    5. '(k' → logprob: -10.011846542358398
    6. '[i' → logprob: -10.261846542358398
    7. '_k' → logprob: -10.636846542358398
    8. ' k' → logprob: -11.261846542358398
    9. '[j' → logprob: -11.761846542358398
    10. '	k' → logprob: -12.136846542358398

Token 589: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09374716877937317
    2. '])' → logprob: -2.593747138977051
    3. ')' → logprob: -4.593747138977051
    4. ']-' → logprob: -6.218747138977051
    5. '-' → logprob: -6.343747138977051
    6. ' -' → logprob: -7.843747138977051
    7. '])-' → logprob: -9.21874713897705
    8. '```' → logprob: -9.71874713897705
    9. ']+' → logprob: -10.09374713897705
    10. '[' → logprob: -10.21874713897705

Token 590: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0037959229666739702
    2. ' prefix' → logprob: -5.628796100616455
    3. '(prefix' → logprob: -8.628795623779297
    4. ' ' → logprob: -12.378795623779297
    5. ')' → logprob: -13.378795623779297
    6. '`' → logprob: -13.628795623779297
    7. '```' → logprob: -13.628795623779297
    8. '   ' → logprob: -14.003795623779297
    9. ' (' → logprob: -14.128795623779297
    10. '_prefix' → logprob: -14.128795623779297

Token 591: '_j' (ID: 12021)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.7739675641059875
    2. '_j' → logprob: -1.1489675045013428
    3. '[j' → logprob: -2.7739675045013428
    4. '_k' → logprob: -2.8989675045013428
    5. 'j' → logprob: -3.0239675045013428
    6. 'k' → logprob: -3.2739675045013428
    7. '[i' → logprob: -4.648967742919922
    8. 'i' → logprob: -5.898967742919922
    9. '_i' → logprob: -6.148967742919922
    10. '[' → logprob: -6.273967742919922

Token 592: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1215130165219307
    2. '[i' → logprob: -2.2465131282806396
    3. 'k' → logprob: -4.8715128898620605
    4. ')' → logprob: -7.9965128898620605
    5. 'i' → logprob: -8.121513366699219
    6. ']' → logprob: -9.496513366699219
    7. '])' → logprob: -10.246513366699219
    8. '[' → logprob: -10.621513366699219
    9. ')]' → logprob: -10.746513366699219
    10. '
' → logprob: -10.746513366699219

Token 593: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005768624832853675
    2. '[-' → logprob: -8.750576972961426
    3. ' -' → logprob: -8.875576972961426
    4. '])' → logprob: -9.125576972961426
    5. ']' → logprob: -9.375576972961426
    6. '[' → logprob: -10.500576972961426
    7. ']-' → logprob: -10.875576972961426
    8. '```' → logprob: -11.375576972961426
    9. '[k' → logprob: -12.000576972961426
    10. '[i' → logprob: -12.375576972961426

Token 594: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008237993461079895
    2. 'k' → logprob: -7.125823974609375
    3. ' ' → logprob: -11.125823974609375
    4. ' k' → logprob: -13.250823974609375
    5. 'i' → logprob: -14.125823974609375
    6. '   ' → logprob: -14.625823974609375
    7. '2' → logprob: -14.750823974609375
    8. ']' → logprob: -15.563323974609375
    9. '-' → logprob: -15.813323974609375
    10. ')' → logprob: -15.875823974609375

Token 595: ']-' (ID: 27107)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05335602909326553
    2. ']' → logprob: -3.3033559322357178
    3. '])' → logprob: -4.553356170654297
    4. '[' → logprob: -7.178356170654297
    5. ')-' → logprob: -7.178356170654297
    6. '-' → logprob: -7.428356170654297
    7. ')]' → logprob: -7.553356170654297
    8. ' -' → logprob: -7.678356170654297
    9. ' )' → logprob: -7.803356170654297
    10. '])-' → logprob: -8.053356170654297

Token 596: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00014048899174667895
    2. ' prefix' → logprob: -8.875140190124512
    3. '(prefix' → logprob: -14.875140190124512
    4. '_prefix' → logprob: -15.250140190124512
    5. 'k' → logprob: -18.000141143798828
    6. 'refix' → logprob: -18.875141143798828
    7. '.prefix' → logprob: -18.875141143798828
    8. '```' → logprob: -19.000141143798828
    9. '   ' → logprob: -19.625141143798828
    10. '-prefix' → logprob: -19.625141143798828

Token 597: '_j' (ID: 12021)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13728490471839905
    2. '_k' → logprob: -3.012284994125366
    3. '[k' → logprob: -3.387284994125366
    4. '_j' → logprob: -3.387284994125366
    5. 'j' → logprob: -4.637284755706787
    6. '{k' → logprob: -6.512284755706787
    7. '[j' → logprob: -8.637285232543945
    8. ' k' → logprob: -10.262285232543945
    9. '	k' → logprob: -10.512285232543945
    10. '```' → logprob: -11.137285232543945

Token 598: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.006754682399332523
    2. 'k' → logprob: -5.0067548751831055
    3. '][' → logprob: -11.381754875183105
    4. '[' → logprob: -11.381754875183105
    5. '{k' → logprob: -12.381754875183105
    6. '```' → logprob: -12.756754875183105
    7. '[i' → logprob: -13.256754875183105
    8. '
' → logprob: -13.256754875183105
    9. '[
' → logprob: -13.381754875183105
    10. '(k' → logprob: -14.256754875183105

Token 599: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051580656319856644
    2. '])' → logprob: -3.0515806674957275
    3. ' )' → logprob: -6.801580429077148
    4. ']' → logprob: -7.551580429077148
    5. ')]' → logprob: -8.051580429077148
    6. ')+' → logprob: -8.426580429077148
    7. ')])' → logprob: -9.051580429077148
    8. '))' → logprob: -9.176580429077148
    9. '])*' → logprob: -9.301580429077148
    10. ')
' → logprob: -9.551580429077148

Token 600: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32198768854141235
    2. '
' → logprob: -1.5719876289367676
    3. '\n' → logprob: -4.696987628936768
    4. ')' → logprob: -4.946987628936768
    5. '        
' → logprob: -4.946987628936768
    6. 'for' → logprob: -5.071987628936768
    7. ' =' → logprob: -5.071987628936768
    8. '   ' → logprob: -5.446987628936768
    9. '=' → logprob: -5.446987628936768
    10. ' for' → logprob: -5.446987628936768

Token 601: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2820626199245453
    2. ' dp' → logprob: -1.4070626497268677
    3. '"' → logprob: -7.782062530517578
    4. ''' → logprob: -9.032062530517578
    5. '0' → logprob: -9.407062530517578
    6. ' ' → logprob: -10.282062530517578
    7. ' ' → logprob: -10.282062530517578
    8. '`' → logprob: -10.407062530517578
    9. '
' → logprob: -10.407062530517578
    10. '(dp' → logprob: -10.657062530517578

Token 602: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19772671163082123
    2. '_' → logprob: -2.3227267265319824
    3. '=' → logprob: -3.9477267265319824
    4. '[k' → logprob: -4.072726726531982
    5. '[i' → logprob: -4.197726726531982
    6. ')' → logprob: -4.572726726531982
    7. ']' → logprob: -4.947726726531982
    8. '\[' → logprob: -5.572726726531982
    9. '[
' → logprob: -6.447726726531982
    10. '       ' → logprob: -6.447726726531982

Token 603: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017691530287265778
    2. ']' → logprob: -4.267691612243652
    3. '+' → logprob: -7.017691612243652
    4. '       ' → logprob: -7.142691612243652
    5. ')
' → logprob: -7.267691612243652
    6. ')]' → logprob: -7.642691612243652
    7. ' )' → logprob: -8.892691612243652
    8. '])' → logprob: -9.267691612243652
    9. ')])' → logprob: -9.517691612243652
    10. '           ' → logprob: -9.767691612243652

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29671844840049744
    2. ' 
' → logprob: -2.9217183589935303
    3. '\' → logprob: -3.2967183589935303
    4. '
' → logprob: -3.5467183589935303
    5. '        
' → logprob: -3.6717183589935303
    6. '[' → logprob: -4.046718597412109
    7. '_' → logprob: -4.171718597412109
    8. '\n' → logprob: -4.421718597412109
    9. ' ' → logprob: -4.671718597412109
    10. '   ' → logprob: -5.046718597412109

Token 605: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13863399624824524
    2. ' 
' → logprob: -3.388633966445923
    3. '        
' → logprob: -3.638633966445923
    4. '\n' → logprob: -3.888633966445923
    5. '
' → logprob: -4.138634204864502
    6. '\' → logprob: -4.513634204864502
    7. ' for' → logprob: -6.138634204864502
    8. '  
' → logprob: -6.138634204864502
    9. ' =' → logprob: -6.263634204864502
    10. '    
' → logprob: -6.388634204864502

Token 606: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09536120295524597
    2. ' for' → logprob: -2.7203612327575684
    3. '       ' → logprob: -3.7203612327575684
    4. '
' → logprob: -7.595361232757568
    5. '   ' → logprob: -8.84536075592041
    6. '```' → logprob: -9.59536075592041
    7. 'from' → logprob: -9.72036075592041
    8. ')' → logprob: -10.22036075592041
    9. 'i' → logprob: -10.22036075592041
    10. '_' → logprob: -12.22036075592041

Token 607: ' (' (ID: 350)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9081218242645264
    2. ' prefix' → logprob: -1.0331218242645264
    3. ' (' → logprob: -2.4081218242645264
    4. '(i' → logprob: -2.7831218242645264
    5. '"' → logprob: -3.7831218242645264
    6. '(prefix' → logprob: -3.9081218242645264
    7. ' dp' → logprob: -4.5331220626831055
    8. '(' → logprob: -4.6581220626831055
    9. 'dp' → logprob: -4.7831220626831055
    10. ''' → logprob: -5.6581220626831055

Token 608: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42573127150535583
    2. 'prefix' → logprob: -1.4257313013076782
    3. '(i' → logprob: -2.8007311820983887
    4. 'dp' → logprob: -4.300731182098389
    5. 'count' → logprob: -4.300731182098389
    6. '(prefix' → logprob: -5.050731182098389
    7. ' (' → logprob: -5.175731182098389
    8. ' prefix' → logprob: -5.800731182098389
    9. ' i' → logprob: -6.550731182098389
    10. '(dp' → logprob: -7.800731182098389

Token 609: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5213294625282288
    2. '-' → logprob: -1.271329402923584
    3. '-k' → logprob: -2.146329402923584
    4. ')' → logprob: -5.146329402923584
    5. ')-(' → logprob: -6.646329402923584
    6. '-
' → logprob: -8.021329879760742
    7. ')-' → logprob: -8.146329879760742
    8. '
' → logprob: -8.396329879760742
    9. '-)' → logprob: -9.271329879760742
    10. '   ' → logprob: -9.271329879760742

Token 610: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5773819088935852
    2. ')*' → logprob: -0.9523819088935852
    3. ')*(' → logprob: -3.4523818492889404
    4. '*' → logprob: -4.0773820877075195
    5. ' *' → logprob: -6.3273820877075195
    6. '*)' → logprob: -6.5773820877075195
    7. '*(' → logprob: -7.2023820877075195
    8. ' )' → logprob: -9.57738208770752
    9. '**' → logprob: -10.32738208770752
    10. '*(-' → logprob: -10.45238208770752

Token 611: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3515620529651642
    2. '(prefix' → logprob: -1.2265620231628418
    3. ' prefix' → logprob: -5.976562023162842
    4. ' (' → logprob: -7.601562023162842
    5. ')' → logprob: -11.4765625
    6. '(' → logprob: -11.4765625
    7. '((' → logprob: -11.6015625
    8. '_prefix' → logprob: -12.2265625
    9. '(p' → logprob: -12.4140625
    10. '-prefix' → logprob: -12.6015625

Token 612: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.8707026243209839
    2. '[' → logprob: -0.9957026243209839
    3. '[i' → logprob: -1.6207026243209839
    4. ')' → logprob: -4.495702743530273
    5. '[j' → logprob: -6.495702743530273
    6. '[
' → logprob: -7.495702743530273
    7. ']' → logprob: -8.245702743530273
    8. '[]' → logprob: -9.370702743530273
    9. ')]' → logprob: -9.995702743530273
    10. '   ' → logprob: -9.995702743530273

Token 613: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01616387441754341
    2. ']-' → logprob: -4.1411638259887695
    3. '])' → logprob: -9.76616382598877
    4. ' ]' → logprob: -10.64116382598877
    5. ']
' → logprob: -11.14116382598877
    6. '-' → logprob: -11.76616382598877
    7. '])-' → logprob: -11.76616382598877
    8. ')' → logprob: -11.89116382598877
    9. ' -' → logprob: -12.39116382598877
    10. '']' → logprob: -13.89116382598877

Token 614: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09234610944986343
    2. ')' → logprob: -2.71734619140625
    3. '-' → logprob: -3.84234619140625
    4. ' ' → logprob: -8.59234619140625
    5. ')-' → logprob: -9.09234619140625
    6. '[' → logprob: -9.21734619140625
    7. '<|end|>' → logprob: -9.59234619140625
    8. ')-(' → logprob: -9.84234619140625
    9. '```' → logprob: -10.34234619140625
    10. ']' → logprob: -10.59234619140625

Token 615: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0011174732353538275
    2. ' prefix' → logprob: -7.501117706298828
    3. '-prefix' → logprob: -7.751117706298828
    4. '(prefix' → logprob: -9.876117706298828
    5. '   ' → logprob: -11.126117706298828
    6. 'j' → logprob: -11.251117706298828
    7. ' -' → logprob: -11.501117706298828
    8. '_prefix' → logprob: -11.626117706298828
    9. '-' → logprob: -11.751117706298828
    10. '-j' → logprob: -11.751117706298828

Token 616: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.1133369579911232
    2. '[k' → logprob: -2.8633370399475098
    3. '_k' → logprob: -3.3633370399475098
    4. '[j' → logprob: -4.73833703994751
    5. '[' → logprob: -5.36333703994751
    6. '[_' → logprob: -7.48833703994751
    7. 'j' → logprob: -8.238336563110352
    8. '[-' → logprob: -8.738336563110352
    9. '[
' → logprob: -8.863336563110352
    10. '```' → logprob: -8.863336563110352

Token 617: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7488680481910706
    2. '[k' → logprob: -0.7488680481910706
    3. ')' → logprob: -3.873867988586426
    4. '[-' → logprob: -4.123867988586426
    5. '-' → logprob: -4.623867988586426
    6. '[' → logprob: -5.373867988586426
    7. '[:-' → logprob: -7.373867988586426
    8. '[j' → logprob: -7.873867988586426
    9. '-k' → logprob: -8.623867988586426
    10. 'k' → logprob: -8.748867988586426

Token 618: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5411854982376099
    2. ']' → logprob: -0.9161854982376099
    3. '])' → logprob: -4.16618537902832
    4. '[-' → logprob: -7.16618537902832
    5. '[i' → logprob: -7.79118537902832
    6. ']-' → logprob: -7.79118537902832
    7. ')' → logprob: -8.54118537902832
    8. '```' → logprob: -8.66618537902832
    9. '[' → logprob: -9.66618537902832
    10. '']' → logprob: -10.04118537902832

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003175456076860428
    2. '-' → logprob: -6.253175258636475
    3. 'i' → logprob: -7.003175258636475
    4. 'k' → logprob: -8.503175735473633
    5. '
' → logprob: -9.503175735473633
    6. '   ' → logprob: -11.128175735473633
    7. '```' → logprob: -11.128175735473633
    8. ' ' → logprob: -12.378175735473633
    9. ']' → logprob: -12.628175735473633
    10. '(i' → logprob: -12.878175735473633

Token 620: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07470857352018356
    2. '])' → logprob: -3.3247084617614746
    3. ')' → logprob: -3.4497084617614746
    4. ' -' → logprob: -6.699708461761475
    5. ' ]' → logprob: -7.074708461761475
    6. ']-' → logprob: -7.199708461761475
    7. '-' → logprob: -8.074708938598633
    8. '])-' → logprob: -8.199708938598633
    9. ' )' → logprob: -8.824708938598633
    10. '```' → logprob: -9.199708938598633

Token 621: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3736494183540344
    2. '-' → logprob: -2.2486493587493896
    3. '       ' → logprob: -2.2486493587493896
    4. ')' → logprob: -2.4986493587493896
    5. ' +' → logprob: -5.123649597167969
    6. '*' → logprob: -6.623649597167969
    7. ' *' → logprob: -6.748649597167969
    8. '           ' → logprob: -6.748649597167969
    9. '[' → logprob: -6.748649597167969
    10. ']' → logprob: -7.123649597167969

Token 622: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5358627438545227
    2. ' (' → logprob: -0.9108627438545227
    3. '(k' → logprob: -4.660862922668457
    4. 'dp' → logprob: -6.410862922668457
    5. '((' → logprob: -7.410862922668457
    6. 'k' → logprob: -8.410862922668457
    7. '(' → logprob: -8.660862922668457
    8. '(dp' → logprob: -9.285862922668457
    9. '(p' → logprob: -9.410862922668457
    10. ' ((' → logprob: -9.785862922668457

Token 623: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.612682580947876
    2. '(k' → logprob: -1.237682580947876
    3. 'k' → logprob: -2.237682580947876
    4. ' (' → logprob: -2.862682580947876
    5. 'prefix' → logprob: -6.237682342529297
    6. 'dp' → logprob: -7.362682342529297
    7. '(prefix' → logprob: -7.487682342529297
    8. '(dp' → logprob: -8.112682342529297
    9. 'i' → logprob: -8.612682342529297
    10. '(' → logprob: -8.987682342529297

Token 624: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.006840760353952646
    2. '-' → logprob: -5.131840705871582
    3. ' -' → logprob: -7.006840705871582
    4. '-
' → logprob: -13.131840705871582
    5. '-j' → logprob: -13.506840705871582
    6. '
' → logprob: -14.506840705871582
    7. ')' → logprob: -14.881840705871582
    8. '-K' → logprob: -15.256840705871582
    9. '-p' → logprob: -15.381840705871582
    10. '-token' → logprob: -15.506840705871582

Token 625: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.7755758166313171
    2. ')*' → logprob: -0.9005758166313171
    3. ')' → logprob: -2.025575876235962
    4. '*' → logprob: -6.900575637817383
    5. '*(' → logprob: -8.525575637817383
    6. '*)' → logprob: -9.525575637817383
    7. ' )' → logprob: -11.900575637817383
    8. ' *' → logprob: -12.775575637817383
    9. '-' → logprob: -12.900575637817383
    10. ')(' → logprob: -13.025575637817383

Token 626: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.6394375562667847
    2. 'prefix' → logprob: -0.7644375562667847
    3. ' (' → logprob: -5.389437675476074
    4. ' prefix' → logprob: -6.139437675476074
    5. '(' → logprob: -10.264437675476074
    6. '(p' → logprob: -11.514437675476074
    7. '_prefix' → logprob: -11.764437675476074
    8. '
' → logprob: -12.014437675476074
    9. '((' → logprob: -12.014437675476074
    10. '-prefix' → logprob: -12.389437675476074

Token 627: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.009419816546142101
    2. '_k' → logprob: -5.009419918060303
    3. '[' → logprob: -6.134419918060303
    4. '_j' → logprob: -8.134419441223145
    5. '[j' → logprob: -9.259419441223145
    6. 'k' → logprob: -9.759419441223145
    7. '```' → logprob: -11.009419441223145
    8. '(k' → logprob: -11.384419441223145
    9. ')' → logprob: -11.759419441223145
    10. '[
' → logprob: -11.884419441223145

Token 628: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029588129371404648
    2. '])' → logprob: -3.904588222503662
    3. ')' → logprob: -4.904588222503662
    4. ']-' → logprob: -7.279588222503662
    5. ']+' → logprob: -7.404588222503662
    6. ')]' → logprob: -9.904587745666504
    7. '])-' → logprob: -10.154587745666504
    8. '[k' → logprob: -10.279587745666504
    9. ' ]' → logprob: -10.779587745666504
    10. '[' → logprob: -11.029587745666504

Token 629: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21137301623821259
    2. '-' → logprob: -2.8363730907440186
    3. ']' → logprob: -2.8363730907440186
    4. ' -' → logprob: -3.3363730907440186
    5. '+' → logprob: -4.0863728523254395
    6. '[' → logprob: -4.3363728523254395
    7. ')-' → logprob: -6.7113728523254395
    8. ' +' → logprob: -6.9613728523254395
    9. '])' → logprob: -7.0863728523254395
    10. ']-' → logprob: -7.0863728523254395

Token 630: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00020067949662916362
    2. ' prefix' → logprob: -8.750200271606445
    3. 'j' → logprob: -10.750200271606445
    4. '
' → logprob: -11.500200271606445
    5. '(prefix' → logprob: -12.250200271606445
    6. '```' → logprob: -12.625200271606445
    7. '   ' → logprob: -14.500200271606445
    8. '_prefix' → logprob: -14.750200271606445
    9. '``' → logprob: -15.000200271606445
    10. '`' → logprob: -15.875200271606445

Token 631: '_j' (ID: 12021)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.7349889874458313
    2. '[k' → logprob: -0.8599889874458313
    3. '_j' → logprob: -2.3599889278411865
    4. 'k' → logprob: -6.109989166259766
    5. '```' → logprob: -8.109989166259766
    6. '{k' → logprob: -9.359989166259766
    7. '[
' → logprob: -9.734989166259766
    8. '[j' → logprob: -9.984989166259766
    9. '[' → logprob: -10.234989166259766
    10. '	k' → logprob: -10.734989166259766

Token 632: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.522638169466518e-05
    2. 'k' → logprob: -10.625024795532227
    3. '[
' → logprob: -15.125024795532227
    4. '[' → logprob: -15.500024795532227
    5. '{k' → logprob: -16.000024795532227
    6. '_k' → logprob: -16.250024795532227
    7. '[i' → logprob: -16.500024795532227
    8. '	k' → logprob: -16.625024795532227
    9. '
' → logprob: -17.125024795532227
    10. '```' → logprob: -17.500024795532227

Token 633: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002912692492827773
    2. ']' → logprob: -6.502912521362305
    3. ')' → logprob: -6.752912521362305
    4. '])*' → logprob: -9.627912521362305
    5. '])
' → logprob: -10.377912521362305
    6. '])]' → logprob: -10.377912521362305
    7. ''])' → logprob: -10.877912521362305
    8. ')]' → logprob: -11.252912521362305
    9. '])+' → logprob: -11.377912521362305
    10. ')])' → logprob: -11.377912521362305

Token 634: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027178095653653145
    2. ')' → logprob: -4.4021782875061035
    3. '\n' → logprob: -6.4021782875061035
    4. '\' → logprob: -6.6521782875061035
    5. ' +' → logprob: -6.6521782875061035
    6. '
' → logprob: -6.6521782875061035
    7. '[' → logprob: -6.9021782875061035
    8. '           ' → logprob: -6.9021782875061035
    9. '        
' → logprob: -6.9021782875061035
    10. '<|end|>' → logprob: -7.2771782875061035

Token 635: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42900630831718445
    2. ' dp' → logprob: -1.0540063381195068
    3. '\n' → logprob: -9.054006576538086
    4. '_dp' → logprob: -10.304006576538086
    5. '`' → logprob: -10.554006576538086
    6. '(dp' → logprob: -10.804006576538086
    7. '\' → logprob: -10.804006576538086
    8. '0' → logprob: -11.179006576538086
    9. '	dp' → logprob: -11.179006576538086
    10. '```' → logprob: -11.304006576538086

Token 636: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28728631138801575
    2. '[k' → logprob: -1.4122862815856934
    3. '[i' → logprob: -5.912286281585693
    4. '[
' → logprob: -7.162286281585693
    5. '_' → logprob: -7.287286281585693
    6. ')' → logprob: -7.287286281585693
    7. '\[' → logprob: -7.412286281585693
    8. ']' → logprob: -8.787286758422852
    9. '```' → logprob: -9.537286758422852
    10. '[token' → logprob: -9.537286758422852

Token 637: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021621352061629295
    2. ']' → logprob: -3.8966214656829834
    3. '+' → logprob: -9.021621704101562
    4. '[i' → logprob: -9.021621704101562
    5. ')
' → logprob: -9.146621704101562
    6. '       ' → logprob: -9.146621704101562
    7. ')]' → logprob: -9.146621704101562
    8. '[' → logprob: -9.271621704101562
    9. '])' → logprob: -9.271621704101562
    10. ' )' → logprob: -9.771621704101562

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09175876528024673
    2. '[' → logprob: -3.3417587280273438
    3. '        
' → logprob: -4.716758728027344
    4. '\' → logprob: -4.716758728027344
    5. '        ' → logprob: -5.216758728027344
    6. '[i' → logprob: -5.216758728027344
    7. '\n' → logprob: -5.341758728027344
    8. '[
' → logprob: -6.091758728027344
    9. '   ' → logprob: -6.341758728027344
    10. '_' → logprob: -6.341758728027344

Token 639: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0877651795744896
    2. 'for' → logprob: -4.337765216827393
    3. ' for' → logprob: -4.587765216827393
    4. '
' → logprob: -4.587765216827393
    5. 'dp' → logprob: -4.712765216827393
    6. 'k' → logprob: -5.087765216827393
    7. ' dp' → logprob: -5.212765216827393
    8. '[' → logprob: -5.462765216827393
    9. '        ' → logprob: -5.712765216827393
    10. '[
' → logprob: -6.587765216827393

Token 640: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2567288875579834
    2. 'h' → logprob: -2.1317288875579834
    3. 'class' → logprob: -2.8817288875579834
    4. 'lines' → logprob: -4.1317291259765625
    5. 'dp' → logprob: -4.6317291259765625
    6. 'conv' → logprob: -4.7567291259765625
    7. '#' → logprob: -5.1317291259765625
    8. 'for' → logprob: -6.1317291259765625
    9. 'line' → logprob: -6.3817291259765625
    10. 'k' → logprob: -7.0067291259765625

Token 641: ' want' (ID: 1682)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19443105161190033
    2. '_' → logprob: -2.0694310665130615
    3. ''' → logprob: -3.9444310665130615
    4. '=' → logprob: -4.694430828094482
    5. ']' → logprob: -5.444430828094482
    6. ' ' → logprob: -5.569430828094482
    7. '[
' → logprob: -5.694430828094482
    8. '.' → logprob: -6.069430828094482
    9. ' =' → logprob: -6.444430828094482
    10. '#' → logprob: -6.569430828094482

Token 642: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09192375093698502
    2. 'to' → logprob: -3.466923713684082
    3. ' dp' → logprob: -3.716923713684082
    4. ')' → logprob: -4.716923713684082
    5. ' ' → logprob: -5.341923713684082
    6. 'dp' → logprob: -5.966923713684082
    7. '    ' → logprob: -6.091923713684082
    8. ' (' → logprob: -6.466923713684082
    9. '       ' → logprob: -6.591923713684082
    10. '(' → logprob: -6.591923713684082

Token 643: ' compute' (ID: 23864)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -1.1781638860702515
    2. 'add' → logprob: -1.4281638860702515
    3. 'maximize' → logprob: -1.6781638860702515
    4. 'query' → logprob: -2.178164005279541
    5. 'find' → logprob: -2.678164005279541
    6. 'dp' → logprob: -3.178164005279541
    7. 'use' → logprob: -3.928164005279541
    8. 'opt' → logprob: -5.178164005279541
    9. 'implement' → logprob: -6.053164005279541
    10. 'max' → logprob: -6.178164005279541

Token 644: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.40210390090942383
    2. 'dp' → logprob: -1.1521039009094238
    3. 'i' → logprob: -5.402103900909424
    4. ' i' → logprob: -6.152103900909424
    5. ' max' → logprob: -6.277103900909424
    6. 'max' → logprob: -6.527103900909424
    7. ' k' → logprob: -7.277103900909424
    8. '_dp' → logprob: -7.527103900909424
    9. ' for' → logprob: -7.777103900909424
    10. 'k' → logprob: -7.902103900909424

Token 645: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006658772937953472
    2. '[' → logprob: -5.756658554077148
    3. '=' → logprob: -6.131658554077148
    4. ' =' → logprob: -6.881658554077148
    5. '.append' → logprob: -10.006658554077148
    6. '[next' → logprob: -10.381658554077148
    7. '```' → logprob: -10.631658554077148
    8. '\[' → logprob: -10.631658554077148
    9. 'i' → logprob: -10.756658554077148
    10. ')' → logprob: -10.756658554077148

Token 646: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5134495496749878
    2. '[' → logprob: -1.0134495496749878
    3. ']' → logprob: -4.013449668884277
    4. '[
' → logprob: -4.638449668884277
    5. '=' → logprob: -5.263449668884277
    6. ' =' → logprob: -6.013449668884277
    7. ')' → logprob: -7.138449668884277
    8. '```' → logprob: -7.138449668884277
    9. '   ' → logprob: -7.513449668884277
    10. '[k' → logprob: -8.513449668884277

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04408910125494003
    2. '=' → logprob: -3.4190890789031982
    3. '[' → logprob: -5.294089317321777
    4. '[i' → logprob: -5.544089317321777
    5. '       ' → logprob: -7.169089317321777
    6. '```' → logprob: -8.919089317321777
    7. '   ' → logprob: -9.294089317321777
    8. ',' → logprob: -9.544089317321777
    9. ' =
' → logprob: -9.794089317321777
    10. ':' → logprob: -9.919089317321777

Token 648: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04923749342560768
    2. ' max' → logprob: -3.0492374897003174
    3. '0' → logprob: -7.6742377281188965
    4. 'float' → logprob: -9.174237251281738
    5. '   ' → logprob: -9.674237251281738
    6. '```' → logprob: -12.549237251281738
    7. ' ' → logprob: -12.924237251281738
    8. 'min' → logprob: -12.924237251281738
    9. '`' → logprob: -13.299237251281738
    10. ' float' → logprob: -13.424237251281738

Token 649: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09684440493583679
    2. '[' → logprob: -3.096844434738159
    3. '_' → logprob: -3.471844434738159
    4. '(
' → logprob: -5.84684419631958
    5. ' (' → logprob: -5.97184419631958
    6. 'dp' → logprob: -6.22184419631958
    7. '(dp' → logprob: -6.22184419631958
    8. '```' → logprob: -7.09684419631958
    9. ' over' → logprob: -7.22184419631958
    10. '_{' → logprob: -7.59684419631958

Token 650: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04486889764666557
    2. ' k' → logprob: -3.1698689460754395
    3. '(k' → logprob: -6.7948689460754395
    4. '_k' → logprob: -7.6698689460754395
    5. '```' → logprob: -8.919868469238281
    6. ' ' → logprob: -10.419868469238281
    7. '(' → logprob: -10.544868469238281
    8. ' (' → logprob: -10.794868469238281
    9. '_' → logprob: -10.919868469238281
    10. '`' → logprob: -11.419868469238281

Token 651: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2551400363445282
    2. '[k' → logprob: -1.8801400661468506
    3. '```' → logprob: -3.7551400661468506
    4. '[
' → logprob: -4.0051398277282715
    5. '+' → logprob: -5.5051398277282715
    6. '_' → logprob: -5.5051398277282715
    7. '[i' → logprob: -5.5051398277282715
    8. 'of' → logprob: -5.7551398277282715
    9. ' of' → logprob: -5.8801398277282715
    10. '[token' → logprob: -6.7551398277282715

Token 652: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16033440828323364
    2. ' i' → logprob: -1.9103343486785889
    3. '=i' → logprob: -10.035334587097168
    4. '=' → logprob: -10.535334587097168
    5. '`' → logprob: -10.910334587097168
    6. '```' → logprob: -11.660334587097168
    7. ''i' → logprob: -12.535334587097168
    8. '{i' → logprob: -12.910334587097168
    9. '	i' → logprob: -13.160334587097168
    10. ' ' → logprob: -14.160334587097168

Token 653: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4546941816806793
    2. '[' → logprob: -1.579694151878357
    3. ':' → logprob: -3.3296942710876465
    4. '_' → logprob: -4.2046942710876465
    5. '        ' → logprob: -4.2046942710876465
    6. '   ' → logprob: -4.4546942710876465
    7. '(' → logprob: -4.5796942710876465
    8. '    ' → logprob: -4.9546942710876465
    9. '```' → logprob: -5.0796942710876465
    10. ' (' → logprob: -5.2046942710876465

Token 654: ' dp' (ID: 21546)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.621432363986969
    2. ' prefix' → logprob: -1.8714323043823242
    3. 'dp' → logprob: -2.246432304382324
    4. ' dp' → logprob: -2.246432304382324
    5. '(prefix' → logprob: -3.121432304382324
    6. ' (' → logprob: -3.371432304382324
    7. '(dp' → logprob: -5.121432304382324
    8. '(' → logprob: -5.621432304382324
    9. 'k' → logprob: -6.371432304382324
    10. '```' → logprob: -6.621432304382324

Token 655: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.27763310074806213
    2. '[i' → logprob: -1.9026330709457397
    3. '[' → logprob: -2.4026331901550293
    4. '+' → logprob: -7.027633190155029
    5. '[
' → logprob: -7.527633190155029
    6. '+k' → logprob: -8.277632713317871
    7. '[j' → logprob: -8.527632713317871
    8. '[token' → logprob: -8.527632713317871
    9. '```' → logprob: -9.027632713317871
    10. 'k' → logprob: -9.152632713317871

Token 656: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08169279992580414
    2. ']+' → logprob: -2.831692695617676
    3. '+' → logprob: -4.456692695617676
    4. ' +' → logprob: -5.581692695617676
    5. '[k' → logprob: -7.081692695617676
    6. ')' → logprob: -7.331692695617676
    7. '[' → logprob: -7.456692695617676
    8. '+k' → logprob: -7.706692695617676
    9. '-' → logprob: -8.581692695617676
    10. '][' → logprob: -8.581692695617676

Token 657: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05556836351752281
    2. '+' → logprob: -2.9305684566497803
    3. ' +
' → logprob: -7.680568218231201
    4. '+
' → logprob: -9.80556869506836
    5. ')' → logprob: -10.18056869506836
    6. '```' → logprob: -10.55556869506836
    7. ',' → logprob: -11.05556869506836
    8. '+k' → logprob: -11.18056869506836
    9. '<|end|>' → logprob: -11.30556869506836
    10. '       ' → logprob: -11.43056869506836

Token 658: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3145339787006378
    2. '(i' → logprob: -1.3145339488983154
    3. '(prefix' → logprob: -7.1895341873168945
    4. '(' → logprob: -9.064534187316895
    5. '((' → logprob: -9.564534187316895
    6. '(count' → logprob: -9.564534187316895
    7. ' ((' → logprob: -9.689534187316895
    8. 'prefix' → logprob: -10.314534187316895
    9. ' ' → logprob: -10.439534187316895
    10. 'count' → logprob: -10.439534187316895

Token 659: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03136076778173447
    2. '(i' → logprob: -3.6563608646392822
    3. ' (' → logprob: -5.531360626220703
    4. ' i' → logprob: -7.781360626220703
    5. 'prefix' → logprob: -8.156360626220703
    6. ')' → logprob: -9.156360626220703
    7. '(prefix' → logprob: -9.281360626220703
    8. '```' → logprob: -10.156360626220703
    9. ')(' → logprob: -10.656360626220703
    10. '(' → logprob: -11.031360626220703

Token 660: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.6218897700309753
    2. '-' → logprob: -1.2468898296356201
    3. ' -' → logprob: -1.7468898296356201
    4. '-token' → logprob: -7.121889591217041
    5. ')-(' → logprob: -8.1218900680542
    6. ')' → logprob: -9.1218900680542
    7. '   ' → logprob: -10.3718900680542
    8. ')-' → logprob: -10.6218900680542
    9. '-
' → logprob: -10.9968900680542
    10. '-t' → logprob: -11.1218900680542

Token 661: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26510530710220337
    2. ')*' → logprob: -1.6401052474975586
    3. ')*(' → logprob: -3.2651052474975586
    4. '-' → logprob: -8.015105247497559
    5. ')
' → logprob: -9.265105247497559
    6. ' -' → logprob: -9.265105247497559
    7. ' )' → logprob: -9.390105247497559
    8. '*' → logprob: -10.515105247497559
    9. '   ' → logprob: -11.140105247497559
    10. ')(' → logprob: -11.515105247497559

Token 662: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.004899161867797375
    2. ' (' → logprob: -5.879899024963379
    3. '(' → logprob: -6.254899024963379
    4. '(p' → logprob: -9.129899024963379
    5. 'prefix' → logprob: -11.129899024963379
    6. '((' → logprob: -11.254899024963379
    7. '(pref' → logprob: -11.254899024963379
    8. '(
' → logprob: -12.254899024963379
    9. '```' → logprob: -12.754899024963379
    10. '(P' → logprob: -12.754899024963379

Token 663: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0902024582028389
    2. 'prefix' → logprob: -2.465202569961548
    3. ' (' → logprob: -7.215202331542969
    4. ' prefix' → logprob: -7.590202331542969
    5. '(' → logprob: -11.090202331542969
    6. '(p' → logprob: -13.340202331542969
    7. '(pref' → logprob: -13.590202331542969
    8. ')' → logprob: -14.340202331542969
    9. '_prefix' → logprob: -14.715202331542969
    10. '-prefix' → logprob: -14.840202331542969

Token 664: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13008429110050201
    2. '[k' → logprob: -2.505084276199341
    3. '[i' → logprob: -3.255084276199341
    4. ')' → logprob: -7.13008451461792
    5. '[
' → logprob: -8.130084037780762
    6. '```' → logprob: -8.630084037780762
    7. '\[' → logprob: -9.380084037780762
    8. '<|end|>' → logprob: -9.755084037780762
    9. '[]' → logprob: -10.255084037780762
    10. '[n' → logprob: -10.380084037780762

Token 665: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010142299579456449
    2. ']-' → logprob: -7.751014232635498
    3. ']+' → logprob: -7.876014232635498
    4. ')' → logprob: -9.00101375579834
    5. ' ]' → logprob: -10.75101375579834
    6. '-' → logprob: -11.00101375579834
    7. ' -' → logprob: -11.37601375579834
    8. '```' → logprob: -11.75101375579834
    9. '[' → logprob: -12.00101375579834
    10. '])' → logprob: -12.25101375579834

Token 666: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.011108418926596642
    2. ' prefix' → logprob: -4.5111083984375
    3. '(prefix' → logprob: -10.6361083984375
    4. 'j' → logprob: -11.6361083984375
    5. ' ' → logprob: -11.7611083984375
    6. ' j' → logprob: -12.2611083984375
    7. '```' → logprob: -12.7611083984375
    8. '_prefix' → logprob: -13.1361083984375
    9. 'space' → logprob: -13.1361083984375
    10. ' ' → logprob: -13.6361083984375

Token 667: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00011963568249484524
    2. '_k' → logprob: -9.62511920928955
    3. '[' → logprob: -11.00011920928955
    4. '   ' → logprob: -11.25011920928955
    5. '```' → logprob: -12.12511920928955
    6. ')' → logprob: -13.12511920928955
    7. '\' → logprob: -13.12511920928955
    8. ' ' → logprob: -13.12511920928955
    9. '_i' → logprob: -13.12511920928955
    10. ' _' → logprob: -13.50011920928955

Token 668: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018547463696449995
    2. '[k' → logprob: -6.62685489654541
    3. '[-' → logprob: -8.87685489654541
    4. '[' → logprob: -8.87685489654541
    5. '[_' → logprob: -9.50185489654541
    6. ')' → logprob: -10.25185489654541
    7. '```' → logprob: -10.50185489654541
    8. '`' → logprob: -10.62685489654541
    9. 'i' → logprob: -11.50185489654541
    10. '_i' → logprob: -11.87685489654541

Token 669: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.110668618930504e-05
    2. '[-' → logprob: -10.50006103515625
    3. ' -' → logprob: -10.62506103515625
    4. '])' → logprob: -12.62506103515625
    5. '[' → logprob: -12.75006103515625
    6. '```' → logprob: -14.00006103515625
    7. '[i' → logprob: -14.75006103515625
    8. '−' → logprob: -15.00006103515625
    9. '_minus' → logprob: -15.25006103515625
    10. '{-' → logprob: -15.25006103515625

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00490224314853549
    2. '-' → logprob: -5.379902362823486
    3. 'k' → logprob: -9.129901885986328
    4. '
' → logprob: -9.629901885986328
    5. ' ' → logprob: -10.754901885986328
    6. '   ' → logprob: -10.754901885986328
    7. '```' → logprob: -10.754901885986328
    8. ')' → logprob: -11.629901885986328
    9. 'i' → logprob: -11.754901885986328
    10. ' -' → logprob: -12.004901885986328

Token 671: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1040758565068245
    2. ']' → logprob: -2.3540759086608887
    3. ')' → logprob: -6.354075908660889
    4. '])
' → logprob: -7.604075908660889
    5. '])+' → logprob: -7.729075908660889
    6. ']+' → logprob: -7.854075908660889
    7. ']))' → logprob: -8.85407543182373
    8. '])*' → logprob: -8.97907543182373
    9. ' ])' → logprob: -9.35407543182373
    10. '+' → logprob: -9.35407543182373

Token 672: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.139751672744751
    2. '[' → logprob: -1.264751672744751
    3. '[k' → logprob: -1.639751672744751
    4. '[i' → logprob: -2.389751672744751
    5. ')' → logprob: -3.764751672744751
    6. ' +' → logprob: -4.139751434326172
    7. '```' → logprob: -4.389751434326172
    8. '[
' → logprob: -4.514751434326172
    9. '   ' → logprob: -4.764751434326172
    10. '_' → logprob: -5.139751434326172

Token 673: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5306235551834106
    2. ' (' → logprob: -0.9056235551834106
    3. '(k' → logprob: -5.905623435974121
    4. '(prefix' → logprob: -5.905623435974121
    5. '(' → logprob: -7.280623435974121
    6. '((' → logprob: -7.780623435974121
    7. '1' → logprob: -8.405623435974121
    8. '```' → logprob: -8.530623435974121
    9. '(p' → logprob: -8.655623435974121
    10. 'prefix' → logprob: -9.155623435974121

Token 674: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01433461345732212
    2. ' (' → logprob: -4.514334678649902
    3. 'i' → logprob: -6.014334678649902
    4. 'k' → logprob: -7.514334678649902
    5. '(k' → logprob: -8.764334678649902
    6. '```' → logprob: -9.889334678649902
    7. '1' → logprob: -10.889334678649902
    8. 'prefix' → logprob: -11.264334678649902
    9. '(' → logprob: -11.389334678649902
    10. '   ' → logprob: -11.514334678649902

Token 675: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.10381455719470978
    2. '-' → logprob: -2.3538146018981934
    3. ' -' → logprob: -5.728814601898193
    4. '-token' → logprob: -8.853814125061035
    5. '*' → logprob: -10.103814125061035
    6. '-
' → logprob: -10.603814125061035
    7. '-p' → logprob: -10.978814125061035
    8. '-j' → logprob: -11.103814125061035
    9. '*k' → logprob: -11.478814125061035
    10. '-key' → logprob: -11.603814125061035

Token 676: ')*(' (ID: 44406)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.8226379156112671
    2. ')*(' → logprob: -1.072637915611267
    3. ')' → logprob: -1.572637915611267
    4. '*' → logprob: -4.572638034820557
    5. '*(' → logprob: -7.322638034820557
    6. '*)' → logprob: -8.947637557983398
    7. ' *' → logprob: -13.697637557983398
    8. ']*(' → logprob: -13.697637557983398
    9. '*)(' → logprob: -14.072637557983398
    10. ')(' → logprob: -14.072637557983398

Token 677: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.003908607643097639
    2. ' (' → logprob: -6.128908634185791
    3. 'prefix' → logprob: -6.378908634185791
    4. ' prefix' → logprob: -11.003908157348633
    5. '(' → logprob: -12.503908157348633
    6. '(p' → logprob: -12.753908157348633
    7. '(pref' → logprob: -15.128908157348633
    8. '(P' → logprob: -15.253908157348633
    9. ' ' → logprob: -15.253908157348633
    10. '
' → logprob: -15.503908157348633

Token 678: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005841302336193621
    2. '[' → logprob: -7.500584125518799
    3. '_k' → logprob: -10.500584602355957
    4. 'k' → logprob: -13.125584602355957
    5. '[
' → logprob: -14.125584602355957
    6. '[i' → logprob: -15.625584602355957
    7. '```' → logprob: -15.625584602355957
    8. '(k' → logprob: -16.25058364868164
    9. '	k' → logprob: -16.50058364868164
    10. '[_' → logprob: -16.62558364868164

Token 679: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06656568497419357
    2. ']+' → logprob: -2.941565752029419
    3. '+' → logprob: -4.94156551361084
    4. ')' → logprob: -5.56656551361084
    5. ' +' → logprob: -8.56656551361084
    6. ')+' → logprob: -8.69156551361084
    7. '])' → logprob: -9.31656551361084
    8. ' ]' → logprob: -10.44156551361084
    9. '[' → logprob: -10.56656551361084
    10. '+]' → logprob: -10.94156551361084

Token 680: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0006290406454354525
    2. ' prefix' → logprob: -7.37562894821167
    3. '(prefix' → logprob: -13.625629425048828
    4. '```' → logprob: -14.000629425048828
    5. '_prefix' → logprob: -15.125629425048828
    6. '
' → logprob: -17.375629425048828
    7. '   ' → logprob: -18.250629425048828
    8. '``' → logprob: -18.375629425048828
    9. '.prefix' → logprob: -18.375629425048828
    10. 'PREFIX' → logprob: -18.375629425048828

Token 681: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.580929347255733e-05
    2. '```' → logprob: -11.750016212463379
    3. 'j' → logprob: -12.000016212463379
    4. '_k' → logprob: -13.750016212463379
    5. '
' → logprob: -15.375016212463379
    6. '[j' → logprob: -16.125015258789062
    7. '``' → logprob: -16.500015258789062
    8. '   ' → logprob: -16.750015258789062
    9. '[' → logprob: -16.875015258789062
    10. '\' → logprob: -17.000015258789062

Token 682: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004092235758434981
    2. 'k' → logprob: -7.875409126281738
    3. '```' → logprob: -11.250409126281738
    4. '[
' → logprob: -12.000409126281738
    5. '[i' → logprob: -12.875409126281738
    6. '[' → logprob: -13.000409126281738
    7. '
' → logprob: -13.375409126281738
    8. '{k' → logprob: -13.875409126281738
    9. '\[' → logprob: -14.750409126281738
    10. ']' → logprob: -15.125409126281738

Token 683: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4086582064628601
    2. ')' → logprob: -1.2836582660675049
    3. ']' → logprob: -2.908658266067505
    4. ')]' → logprob: -6.408658027648926
    5. '])+' → logprob: -7.408658027648926
    6. ')])' → logprob: -7.783658027648926
    7. ']+' → logprob: -7.908658027648926
    8. '])]' → logprob: -8.783658027648926
    9. '   ' → logprob: -8.908658027648926
    10. ')+' → logprob: -9.158658027648926

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16896888613700867
    2. '   ' → logprob: -2.543968915939331
    3. '\' → logprob: -4.293968677520752
    4. '[' → logprob: -4.543968677520752
    5. '\n' → logprob: -4.543968677520752
    6. 'for' → logprob: -5.043968677520752
    7. ' for' → logprob: -5.043968677520752
    8. '
' → logprob: -5.543968677520752
    9. '\t' → logprob: -5.543968677520752
    10. '[
' → logprob: -5.793968677520752

Token 685: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14452530443668365
    2. '   ' → logprob: -3.2695252895355225
    3. '[' → logprob: -3.3945252895355225
    4. '[i' → logprob: -3.7695252895355225
    5. '[
' → logprob: -4.519525527954102
    6. '\n' → logprob: -5.394525527954102
    7. '_' → logprob: -5.519525527954102
    8. '=' → logprob: -5.644525527954102
    9. ' =' → logprob: -5.894525527954102
    10. '\' → logprob: -6.019525527954102

Token 686: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8742932677268982
    2. '[i' → logprob: -1.374293327331543
    3. '[' → logprob: -1.624293327331543
    4. '[
' → logprob: -3.499293327331543
    5. 'for' → logprob: -3.749293327331543
    6. '   ' → logprob: -3.999293327331543
    7. ' =' → logprob: -4.249293327331543
    8. ' for' → logprob: -4.874293327331543
    9. '=' → logprob: -4.999293327331543
    10. '```' → logprob: -5.499293327331543

Token 687: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5407674312591553
    2. 'prefix' → logprob: -1.2907674312591553
    3. ' prefix' → logprob: -2.5407674312591553
    4. ' max' → logprob: -3.0407674312591553
    5. 'dp' → logprob: -4.290767669677734
    6. ' dp' → logprob: -6.665767669677734
    7. '(max' → logprob: -8.665767669677734
    8. '   ' → logprob: -8.665767669677734
    9. '(prefix' → logprob: -8.790767669677734
    10. '(' → logprob: -8.915767669677734

Token 688: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -1.422607421875
    2. 'over' → logprob: -1.797607421875
    3. '[' → logprob: -1.922607421875
    4. '(' → logprob: -1.922607421875
    5. '_' → logprob: -2.672607421875
    6. ' _' → logprob: -2.797607421875
    7. '[(' → logprob: -3.672607421875
    8. '_over' → logprob: -3.672607421875
    9. ' (' → logprob: -3.797607421875
    10. '[
' → logprob: -4.047607421875

Token 689: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10027718544006348
    2. ' k' → logprob: -2.3502771854400635
    3. '_k' → logprob: -10.475276947021484
    4. '```' → logprob: -10.975276947021484
    5. '`' → logprob: -11.350276947021484
    6. '{k' → logprob: -12.350276947021484
    7. '[k' → logprob: -12.725276947021484
    8. '(k' → logprob: -13.350276947021484
    9. ',k' → logprob: -14.225276947021484
    10. '	k' → logprob: -14.600276947021484

Token 690: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4631020426750183
    2. '[k' → logprob: -1.338102102279663
    3. '+' → logprob: -2.838102102279663
    4. '[i' → logprob: -3.588102102279663
    5. '[
' → logprob: -5.088101863861084
    6. ' +' → logprob: -5.588101863861084
    7. '```' → logprob: -5.588101863861084
    8. '+k' → logprob: -6.338101863861084
    9. '*' → logprob: -6.588101863861084
    10. '_k' → logprob: -7.213101863861084

Token 691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01816820353269577
    2. ' i' → logprob: -4.018167972564697
    3. '{i' → logprob: -12.143168449401855
    4. '_i' → logprob: -12.268168449401855
    5. '[i' → logprob: -12.393168449401855
    6. '```' → logprob: -12.768168449401855
    7. '(i' → logprob: -15.268168449401855
    8. '<i' → logprob: -15.643168449401855
    9. '=i' → logprob: -15.893168449401855
    10. '*i' → logprob: -16.14316749572754

Token 692: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.893150269985199
    2. '[' → logprob: -1.8931503295898438
    3. ' (' → logprob: -2.1431503295898438
    4. '(dp' → logprob: -2.1431503295898438
    5. '(' → logprob: -3.6431503295898438
    6. 'of' → logprob: -3.7681503295898438
    7. '```' → logprob: -3.7681503295898438
    8. '[k' → logprob: -4.018150329589844
    9. ' for' → logprob: -4.018150329589844
    10. 'for' → logprob: -4.143150329589844

Token 693: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11359257996082306
    2. ' dp' → logprob: -2.2385926246643066
    3. '   ' → logprob: -7.613592624664307
    4. ' ' → logprob: -9.238592147827148
    5. '(dp' → logprob: -9.863592147827148
    6. 'prefix' → logprob: -10.863592147827148
    7. '```' → logprob: -10.988592147827148
    8. '`' → logprob: -11.113592147827148
    9. '  ' → logprob: -11.238592147827148
    10. '    ' → logprob: -11.363592147827148

Token 694: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.004292322788387537
    2. '[' → logprob: -5.5042924880981445
    3. '[i' → logprob: -8.879292488098145
    4. '[
' → logprob: -10.879292488098145
    5. 'k' → logprob: -11.754292488098145
    6. '_k' → logprob: -11.754292488098145
    7. '[token' → logprob: -12.129292488098145
    8. '{k' → logprob: -12.129292488098145
    9. '[j' → logprob: -12.254292488098145
    10. '```' → logprob: -12.504292488098145

Token 695: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11383058875799179
    2. '+' → logprob: -2.23883056640625
    3. ')' → logprob: -7.11383056640625
    4. ' -' → logprob: -9.86383056640625
    5. ' +
' → logprob: -10.36383056640625
    6. ')+' → logprob: -10.73883056640625
    7. '<|end|>' → logprob: -11.73883056640625
    8. '-' → logprob: -11.86383056640625
    9. '[' → logprob: -11.86383056640625
    10. ' ' → logprob: -11.98883056640625

Token 696: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5421452522277832
    2. '+' → logprob: -1.6671452522277832
    3. '[k' → logprob: -2.167145252227783
    4. ' -' → logprob: -3.292145252227783
    5. '+k' → logprob: -3.792145252227783
    6. '-' → logprob: -4.167145252227783
    7. '[' → logprob: -4.917145252227783
    8. ')' → logprob: -5.292145252227783
    9. '-k' → logprob: -5.667145252227783
    10. '```' → logprob: -5.917145252227783

Token 697: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5628079175949097
    2. '(prefix' → logprob: -1.4378079175949097
    3. ' (' → logprob: -1.9378079175949097
    4. '(k' → logprob: -3.937808036804199
    5. 'k' → logprob: -4.562808036804199
    6. '((' → logprob: -4.687808036804199
    7. 'prefix' → logprob: -5.187808036804199
    8. '(' → logprob: -6.187808036804199
    9. '(P' → logprob: -7.062808036804199
    10. '(p' → logprob: -7.687808036804199

Token 698: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.17719843983650208
    2. '(i' → logprob: -3.0521984100341797
    3. ' (' → logprob: -3.3021984100341797
    4. 'k' → logprob: -3.6771984100341797
    5. '(k' → logprob: -3.6771984100341797
    6. 'prefix' → logprob: -3.6771984100341797
    7. '((' → logprob: -7.17719841003418
    8. 'i' → logprob: -8.05219841003418
    9. '(' → logprob: -8.17719841003418
    10. '(p' → logprob: -8.30219841003418

Token 699: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.003360816277563572
    2. 'k' → logprob: -6.503360748291016
    3. '_k' → logprob: -6.503360748291016
    4. '[' → logprob: -8.128360748291016
    5. '[
' → logprob: -11.003360748291016
    6. '```' → logprob: -11.128360748291016
    7. '(k' → logprob: -12.253360748291016
    8. '{k' → logprob: -12.378360748291016
    9. ' [' → logprob: -12.503360748291016
    10. ')' → logprob: -12.503360748291016

Token 700: ']+' (ID: 15344)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04883057624101639
    2. '+k' → logprob: -3.548830509185791
    3. ']+' → logprob: -5.298830509185791
    4. '+' → logprob: -5.298830509185791
    5. ']' → logprob: -5.423830509185791
    6. ')' → logprob: -6.298830509185791
    7. 'k' → logprob: -7.298830509185791
    8. ' +' → logprob: -7.673830509185791
    9. ')+' → logprob: -7.673830509185791
    10. '[' → logprob: -8.67383098602295

Token 701: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.004150818567723036
    2. 'j' → logprob: -5.504150867462158
    3. ' prefix' → logprob: -10.004150390625
    4. '_j' → logprob: -11.129150390625
    5. '```' → logprob: -11.629150390625
    6. ' j' → logprob: -13.754150390625
    7. '[j' → logprob: -14.254150390625
    8. '_prefix' → logprob: -14.379150390625
    9. '   ' → logprob: -15.254150390625
    10. '
' → logprob: -15.254150390625

Token 702: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -5.264322317088954e-05
    2. '_k' → logprob: -10.375052452087402
    3. '```' → logprob: -11.250052452087402
    4. 'j' → logprob: -12.500052452087402
    5. '\' → logprob: -13.250052452087402
    6. '[j' → logprob: -13.375052452087402
    7. '   ' → logprob: -15.625052452087402
    8. '``' → logprob: -15.625052452087402
    9. '
' → logprob: -15.750052452087402
    10. ')' → logprob: -16.12505340576172

Token 703: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.759734732331708e-05
    2. 'k' → logprob: -11.750017166137695
    3. '```' → logprob: -12.375017166137695
    4. ')' → logprob: -12.875017166137695
    5. '[' → logprob: -13.750017166137695
    6. ')[' → logprob: -14.250017166137695
    7. '[
' → logprob: -14.750017166137695
    8. '{k' → logprob: -15.875017166137695
    9. '
' → logprob: -16.250017166137695
    10. '\[' → logprob: -16.625017166137695

Token 704: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31954967975616455
    2. ')*' → logprob: -1.3195496797561646
    3. '[k' → logprob: -5.444549560546875
    4. ')*(' → logprob: -7.194549560546875
    5. ' )' → logprob: -8.444549560546875
    6. '])' → logprob: -8.569549560546875
    7. '[i' → logprob: -8.569549560546875
    8. ')]' → logprob: -8.819549560546875
    9. '])*' → logprob: -9.194549560546875
    10. '[' → logprob: -9.444549560546875

Token 705: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8838580846786499
    2. '+' → logprob: -1.75885808467865
    3. '*' → logprob: -1.88385808467865
    4. ' *' → logprob: -2.1338582038879395
    5. ')' → logprob: -3.0088582038879395
    6. '[' → logprob: -3.7588582038879395
    7. '*(' → logprob: -4.0088582038879395
    8. '*k' → logprob: -4.2588582038879395
    9. '[k' → logprob: -4.8838582038879395
    10. '_' → logprob: -5.3838582038879395

Token 706: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.071552574634552
    2. ' (' → logprob: -3.0715525150299072
    3. '(k' → logprob: -4.446552753448486
    4. '(' → logprob: -5.446552753448486
    5. 'i' → logprob: -5.446552753448486
    6. 'k' → logprob: -6.321552753448486
    7. '1' → logprob: -8.196552276611328
    8. '((' → logprob: -9.321552276611328
    9. ' i' → logprob: -10.071552276611328
    10. '(n' → logprob: -11.071552276611328

Token 707: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.17723789811134338
    2. 'i' → logprob: -2.1772379875183105
    3. ' (' → logprob: -3.0522379875183105
    4. '(' → logprob: -7.0522379875183105
    5. ' i' → logprob: -7.4272379875183105
    6. 'k' → logprob: -9.302237510681152
    7. '(k' → logprob: -10.177237510681152
    8. '1' → logprob: -10.427237510681152
    9. '[i' → logprob: -10.427237510681152
    10. '((' → logprob: -10.427237510681152

Token 708: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04452746734023094
    2. ' -' → logprob: -4.044527530670166
    3. ')' → logprob: -4.294527530670166
    4. '-k' → logprob: -4.544527530670166
    5. '-)' → logprob: -7.419527530670166
    6. '<|end|>' → logprob: -8.419527053833008
    7. ')-(' → logprob: -8.544527053833008
    8. '[-' → logprob: -8.794527053833008
    9. ')-' → logprob: -9.294527053833008
    10. '-
' → logprob: -9.294527053833008

Token 709: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018025112804025412
    2. '+' → logprob: -6.751802444458008
    3. ' )' → logprob: -8.501802444458008
    4. ' +' → logprob: -8.876802444458008
    5. ']' → logprob: -9.501802444458008
    6. ')+' → logprob: -9.626802444458008
    7. '[' → logprob: -10.126802444458008
    8. '-' → logprob: -10.751802444458008
    9. '```' → logprob: -10.751802444458008
    10. ')
' → logprob: -10.876802444458008

Token 710: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9501674175262451
    2. '[' → logprob: -1.0751674175262451
    3. '[
' → logprob: -2.950167417526245
    4. '_' → logprob: -3.075167417526245
    5. ')' → logprob: -3.450167417526245
    6. '[i' → logprob: -3.700167417526245
    7. '```' → logprob: -4.200167655944824
    8. ' +' → logprob: -4.200167655944824
    9. '   ' → logprob: -4.450167655944824
    10. '+' → logprob: -4.950167655944824

Token 711: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8853235840797424
    2. '(prefix' → logprob: -1.2603235244750977
    3. '(i' → logprob: -1.3853235244750977
    4. 'prefix' → logprob: -3.5103235244750977
    5. ' prefix' → logprob: -4.260323524475098
    6. '1' → logprob: -5.010323524475098
    7. '0' → logprob: -7.510323524475098
    8. '```' → logprob: -7.760323524475098
    9. '(' → logprob: -8.260323524475098
    10. ' ((' → logprob: -8.385323524475098

Token 712: 'i' (ID: 72)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.1458573341369629
    2. ' prefix' → logprob: -3.020857334136963
    3. 'i' → logprob: -3.520857334136963
    4. '(prefix' → logprob: -3.645857334136963
    5. '(i' → logprob: -3.895857334136963
    6. ' (' → logprob: -4.770857334136963
    7. ' i' → logprob: -6.145857334136963
    8. '1' → logprob: -9.395856857299805
    9. '   ' → logprob: -10.020856857299805
    10. '(' → logprob: -10.270856857299805

Token 713: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17835813760757446
    2. ' -' → logprob: -1.9283580780029297
    3. '-k' → logprob: -4.55335807800293
    4. ')' → logprob: -5.30335807800293
    5. '*' → logprob: -6.80335807800293
    6. ')*' → logprob: -7.55335807800293
    7. '   ' → logprob: -8.55335807800293
    8. '-p' → logprob: -9.17835807800293
    9. '-s' → logprob: -9.42835807800293
    10. '	' → logprob: -9.55335807800293

Token 714: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5823367238044739
    2. ')*' → logprob: -0.8323367238044739
    3. '*' → logprob: -5.707336902618408
    4. ')*(' → logprob: -5.832336902618408
    5. '*)' → logprob: -9.08233642578125
    6. ' )' → logprob: -12.83233642578125
    7. '*(' → logprob: -12.83233642578125
    8. ' *' → logprob: -13.83233642578125
    9. '```' → logprob: -13.95733642578125
    10. '**' → logprob: -14.58233642578125

Token 715: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.026459017768502235
    2. ' (' → logprob: -4.026459217071533
    3. 'prefix' → logprob: -4.901459217071533
    4. ' prefix' → logprob: -7.401459217071533
    5. '(' → logprob: -8.776458740234375
    6. ')' → logprob: -11.026458740234375
    7. '(p' → logprob: -11.151458740234375
    8. ' ' → logprob: -11.776458740234375
    9. '(pref' → logprob: -11.901458740234375
    10. '```' → logprob: -12.776458740234375

Token 716: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.043081749230623245
    2. '[' → logprob: -3.168081760406494
    3. '[k' → logprob: -10.043081283569336
    4. '[
' → logprob: -10.793081283569336
    5. '\[' → logprob: -12.293081283569336
    6. '```' → logprob: -12.418081283569336
    7. '[I' → logprob: -13.043081283569336
    8. '[user' → logprob: -13.793081283569336
    9. '[j' → logprob: -13.918081283569336
    10. ' [' → logprob: -14.043081283569336

Token 717: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7008532881736755
    2. ']+' → logprob: -0.7008532881736755
    3. ')' → logprob: -5.32585334777832
    4. ')+' → logprob: -6.57585334777832
    5. ']-' → logprob: -7.20085334777832
    6. '])+' → logprob: -8.07585334777832
    7. '])' → logprob: -8.45085334777832
    8. '-' → logprob: -10.57585334777832
    9. ']+\' → logprob: -10.57585334777832
    10. '   ' → logprob: -10.70085334777832

Token 718: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0004931025905534625
    2. ' prefix' → logprob: -7.625493049621582
    3. '(prefix' → logprob: -12.750493049621582
    4. '_prefix' → logprob: -14.125493049621582
    5. '```' → logprob: -14.125493049621582
    6. ' ' → logprob: -15.250493049621582
    7. '   ' → logprob: -15.750493049621582
    8. '
' → logprob: -16.7504940032959
    9. 'PREFIX' → logprob: -17.3754940032959
    10. ' ' → logprob: -17.3754940032959

Token 719: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.1186566047836095e-05
    2. '```' → logprob: -11.250031471252441
    3. '_k' → logprob: -11.875031471252441
    4. '\' → logprob: -12.750031471252441
    5. '   ' → logprob: -12.875031471252441
    6. ' ' → logprob: -13.750031471252441
    7. 'j' → logprob: -14.125031471252441
    8. '
' → logprob: -14.500031471252441
    9. ' _' → logprob: -14.500031471252441
    10. '_i' → logprob: -14.500031471252441

Token 720: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.827200897736475e-05
    2. 'i' → logprob: -10.250078201293945
    3. '[' → logprob: -11.375078201293945
    4. '```' → logprob: -11.750078201293945
    5. ')' → logprob: -12.500078201293945
    6. '_i' → logprob: -12.500078201293945
    7. '[
' → logprob: -12.750078201293945
    8. '[-' → logprob: -12.875078201293945
    9. '[k' → logprob: -13.250078201293945
    10. '`' → logprob: -13.750078201293945

Token 721: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001645644661039114
    2. '])' → logprob: -8.875164985656738
    3. ' -' → logprob: -12.000164985656738
    4. ']' → logprob: -12.625164985656738
    5. ']))' → logprob: -12.750164985656738
    6. '   ' → logprob: -13.000164985656738
    7. '[-' → logprob: -13.250164985656738
    8. '```' → logprob: -13.250164985656738
    9. '−' → logprob: -13.625164985656738
    10. '_' → logprob: -13.625164985656738

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.250000953674316
    5. '-' → logprob: -15.875000953674316
    6. '
' → logprob: -16.500001907348633
    7. '])' → logprob: -17.750001907348633
    8. ']' → logprob: -18.125001907348633
    9. '`' → logprob: -18.125001907348633
    10. 'j' → logprob: -18.125001907348633

Token 723: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008695332217030227
    2. ']' → logprob: -8.500869750976562
    3. ' )' → logprob: -8.750869750976562
    4. ')]' → logprob: -9.000869750976562
    5. '])' → logprob: -9.500869750976562
    6. ')`' → logprob: -9.750869750976562
    7. ')
' → logprob: -9.875869750976562
    8. '+' → logprob: -10.375869750976562
    9. '```' → logprob: -10.750869750976562
    10. ')+' → logprob: -10.750869750976562

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8891603350639343
    2. '[' → logprob: -1.639160394668579
    3. '[i' → logprob: -2.014160394668579
    4. '   ' → logprob: -2.764160394668579
    5. '\n' → logprob: -2.889160394668579
    6. '[
' → logprob: -3.014160394668579
    7. '_' → logprob: -3.264160394668579
    8. '\t' → logprob: -5.26416015625
    9. ' _' → logprob: -5.26416015625
    10. ' =' → logprob: -5.26416015625

Token 725: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6473422050476074
    2. '[i' → logprob: -1.0223422050476074
    3. '       ' → logprob: -2.8973422050476074
    4. '_' → logprob: -3.8973422050476074
    5. '[
' → logprob: -4.647342205047607
    6. '   ' → logprob: -4.897342205047607
    7. '```' → logprob: -5.272342205047607
    8. '\n' → logprob: -5.897342205047607
    9. ':' → logprob: -6.022342205047607
    10. '=' → logprob: -6.272342205047607

Token 726: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0253868103027344
    2. '[' → logprob: -1.1503868103027344
    3. '_' → logprob: -2.4003868103027344
    4. '[i' → logprob: -2.5253868103027344
    5. '   ' → logprob: -3.0253868103027344
    6. '=' → logprob: -3.2753868103027344
    7. '[
' → logprob: -3.9003868103027344
    8. 'for' → logprob: -4.650386810302734
    9. 'def' → logprob: -5.775386810302734
    10. '\t' → logprob: -5.775386810302734

Token 727: ' prefix' (ID: 18633)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9245197772979736
    2. '(i' → logprob: -1.9245197772979736
    3. 'prefix' → logprob: -2.1745197772979736
    4. 'i' → logprob: -2.2995197772979736
    5. ' i' → logprob: -2.6745197772979736
    6. 'k' → logprob: -3.0495197772979736
    7. ' prefix' → logprob: -3.1745197772979736
    8. '(' → logprob: -3.5495197772979736
    9. 'dp' → logprob: -4.4245195388793945
    10. ' k' → logprob: -4.6745195388793945

Token 728: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4745858907699585
    2. '[' → logprob: -1.2245858907699585
    3. '_j' → logprob: -2.849586009979248
    4. '[k' → logprob: -4.474586009979248
    5. '[j' → logprob: -5.224586009979248
    6. '[
' → logprob: -6.349586009979248
    7. ')' → logprob: -6.474586009979248
    8. '_i' → logprob: -6.474586009979248
    9. '```' → logprob: -6.849586009979248
    10. '[(' → logprob: -7.349586009979248

Token 729: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0878721475601196
    2. ']' → logprob: -1.4628721475601196
    3. '[' → logprob: -2.21287202835083
    4. ')' → logprob: -2.58787202835083
    5. '+' → logprob: -2.71287202835083
    6. ']+' → logprob: -2.83787202835083
    7. ')]' → logprob: -3.33787202835083
    8. '][' → logprob: -3.71287202835083
    9. ')+' → logprob: -4.58787202835083
    10. '[k' → logprob: -4.71287202835083

Token 730: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00045319506898522377
    2. '_prefix' → logprob: -8.000452995300293
    3. '_j' → logprob: -9.250452995300293
    4. ' prefix' → logprob: -10.875452995300293
    5. '(prefix' → logprob: -13.250452995300293
    6. 'j' → logprob: -14.750452995300293
    7. '
' → logprob: -15.875452995300293
    8. '```' → logprob: -16.12545394897461
    9. '   ' → logprob: -16.25045394897461
    10. '_' → logprob: -16.37545394897461

Token 731: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.12030871212482452
    2. '[i' → logprob: -2.7453086376190186
    3. '[j' → logprob: -3.4953086376190186
    4. '[' → logprob: -4.370308876037598
    5. '```' → logprob: -5.995308876037598
    6. '[
' → logprob: -7.370308876037598
    7. '+' → logprob: -7.495308876037598
    8. '`' → logprob: -7.495308876037598
    9. ']' → logprob: -7.745308876037598
    10. '+j' → logprob: -8.245308876037598

Token 732: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001290454383706674
    2. '[' → logprob: -9.875128746032715
    3. '
' → logprob: -10.625128746032715
    4. '[
' → logprob: -11.500128746032715
    5. '_i' → logprob: -12.000128746032715
    6. '```' → logprob: -12.000128746032715
    7. ')[' → logprob: -12.375128746032715
    8. '`' → logprob: -12.500128746032715
    9. 'i' → logprob: -12.500128746032715
    10. '   ' → logprob: -12.875128746032715

Token 733: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015502817404922098
    2. '[-' → logprob: -9.625155448913574
    3. '[i' → logprob: -10.500155448913574
    4. ']' → logprob: -10.625155448913574
    5. ' -' → logprob: -10.750155448913574
    6. '   ' → logprob: -11.875155448913574
    7. '[' → logprob: -12.625155448913574
    8. '])' → logprob: -14.000155448913574
    9. '```' → logprob: -14.000155448913574
    10. '_minus' → logprob: -14.500155448913574

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008401192026212811
    2. '-' → logprob: -7.125840187072754
    3. 'i' → logprob: -10.500840187072754
    4. '0' → logprob: -12.750840187072754
    5. '```' → logprob: -13.250840187072754
    6. '   ' → logprob: -13.625840187072754
    7. '
' → logprob: -13.750840187072754
    8. ' ' → logprob: -14.125840187072754
    9. '       ' → logprob: -16.625839233398438
    10. '(i' → logprob: -16.625839233398438

Token 735: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6586632132530212
    2. ')' → logprob: -1.408663272857666
    3. '])' → logprob: -2.283663272857666
    4. ']+' → logprob: -2.408663272857666
    5. ')+' → logprob: -4.033663272857666
    6. '])+' → logprob: -4.158663272857666
    7. ')]' → logprob: -4.658663272857666
    8. '[i' → logprob: -6.658663272857666
    9. ')])' → logprob: -7.658663272857666
    10. '+' → logprob: -8.283662796020508

Token 736: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12943191826343536
    2. '+' → logprob: -3.254431962966919
    3. ' )' → logprob: -3.629431962966919
    4. ' +' → logprob: -4.12943172454834
    5. ':' → logprob: -4.75443172454834
    6. '):' → logprob: -5.25443172454834
    7. ')+' → logprob: -5.37943172454834
    8. ' is' → logprob: -5.50443172454834
    9. ']' → logprob: -5.62943172454834
    10. '[' → logprob: -5.87943172454834

Token 737: ' constant' (ID: 9594)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4265949726104736
    2. ' constant' → logprob: -1.5515949726104736
    3. ')' → logprob: -1.8015949726104736
    4. '1' → logprob: -2.1765949726104736
    5. ' ' → logprob: -2.1765949726104736
    6. ' )' → logprob: -2.8015949726104736
    7. ' dp' → logprob: -3.5515949726104736
    8. ' known' → logprob: -5.1765947341918945
    9. 'constant' → logprob: -5.4265947341918945
    10. '0' → logprob: -5.5515947341918945

Token 738: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1039570569992065
    2. '       ' → logprob: -1.3539570569992065
    3. '[' → logprob: -1.7289570569992065
    4. ')' → logprob: -2.853957176208496
    5. '   ' → logprob: -3.228957176208496
    6. '=' → logprob: -3.853957176208496
    7. '```' → logprob: -4.603957176208496
    8. ',' → logprob: -4.728957176208496
    9. ']' → logprob: -4.728957176208496
    10. '(' → logprob: -4.728957176208496

Token 739: ' given' (ID: 4335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3438778519630432
    2. ' i' → logprob: -2.2188777923583984
    3. 'the' → logprob: -2.2188777923583984
    4. ' the' → logprob: -3.0938777923583984
    5. ' current' → logprob: -4.718877792358398
    6. 'each' → logprob: -5.218877792358398
    7. 'current' → logprob: -5.343877792358398
    8. ' each' → logprob: -5.718877792358398
    9. ')' → logprob: -6.468877792358398
    10. '```' → logprob: -6.968877792358398

Token 740: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014180675148963928
    2. ' i' → logprob: -4.264180660247803
    3. '`' → logprob: -11.639181137084961
    4. ' ' → logprob: -12.014181137084961
    5. '   ' → logprob: -13.889181137084961
    6. '
' → logprob: -15.014181137084961
    7. '[i' → logprob: -15.889181137084961
    8. '  ' → logprob: -16.26418113708496
    9. '```' → logprob: -16.38918113708496
    10. '    ' → logprob: -16.51418113708496

Token 741: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01500596385449171
    2. ' +' → logprob: -5.515006065368652
    3. ',' → logprob: -6.515006065368652
    4. '+' → logprob: -6.765006065368652
    5. '   ' → logprob: -6.765006065368652
    6. '[i' → logprob: -6.890006065368652
    7. ')' → logprob: -6.890006065368652
    8. ' =' → logprob: -7.015006065368652
    9. ' for' → logprob: -7.640006065368652
    10. '[' → logprob: -7.765006065368652

Token 742: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11657946556806564
    2. '_' → logprob: -3.241579532623291
    3. ')' → logprob: -4.116579532623291
    4. '=' → logprob: -4.991579532623291
    5. '           ' → logprob: -5.116579532623291
    6. '        ' → logprob: -5.116579532623291
    7. '   ' → logprob: -5.366579532623291
    8. ':' → logprob: -5.991579532623291
    9. 'dp' → logprob: -5.991579532623291
    10. 'for' → logprob: -6.241579532623291

Token 743: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012503175064921379
    2. '[' → logprob: -5.137503147125244
    3. '[k' → logprob: -5.262503147125244
    4. '=' → logprob: -7.762503147125244
    5. '.append' → logprob: -8.262503623962402
    6. ' =' → logprob: -8.387503623962402
    7. ']' → logprob: -10.012503623962402
    8. '_i' → logprob: -10.137503623962402
    9. ')' → logprob: -10.262503623962402
    10. '
' → logprob: -10.387503623962402

Token 744: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19592174887657166
    2. '[' → logprob: -2.4459216594696045
    3. '=' → logprob: -2.5709216594696045
    4. ']' → logprob: -4.445921897888184
    5. ' =' → logprob: -6.820921897888184
    6. '[
' → logprob: -8.070921897888184
    7. '       ' → logprob: -8.195921897888184
    8. '+=' → logprob: -8.195921897888184
    9. ')' → logprob: -8.820921897888184
    10. ' +=' → logprob: -8.820921897888184

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20362253487110138
    2. '[' → logprob: -2.453622579574585
    3. ' =' → logprob: -2.453622579574585
    4. '[i' → logprob: -4.578622341156006
    5. '   ' → logprob: -7.453622341156006
    6. ' +=' → logprob: -7.578622341156006
    7. ']' → logprob: -8.578622817993164
    8. '       ' → logprob: -8.703622817993164
    9. ')' → logprob: -8.953622817993164
    10. '+=' → logprob: -9.328622817993164

Token 746: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3255247473716736
    2. ' max' → logprob: -1.9505248069763184
    3. 'prefix' → logprob: -2.5755248069763184
    4. ' prefix' → logprob: -3.5755248069763184
    5. '0' → logprob: -4.450524806976318
    6. '(max' → logprob: -4.950524806976318
    7. ' (' → logprob: -5.325524806976318
    8. '(prefix' → logprob: -5.825524806976318
    9. 'dp' → logprob: -6.825524806976318
    10. '(' → logprob: -7.075524806976318

Token 747: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.011629851534962654
    2. 'i' → logprob: -5.511630058288574
    3. '(prefix' → logprob: -5.511630058288574
    4. ' prefix' → logprob: -5.761630058288574
    5. '(i' → logprob: -8.261630058288574
    6. ' (' → logprob: -10.886630058288574
    7. '   ' → logprob: -11.511630058288574
    8. '[i' → logprob: -11.636630058288574
    9. '_prefix' → logprob: -12.011630058288574
    10. 'p' → logprob: -12.011630058288574

Token 748: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025907461531460285
    2. '[' → logprob: -8.375259399414062
    3. '[j' → logprob: -10.750259399414062
    4. '[
' → logprob: -12.625259399414062
    5. '   ' → logprob: -13.875259399414062
    6. ')' → logprob: -14.375259399414062
    7. '[++' → logprob: -14.625259399414062
    8. '```' → logprob: -15.250259399414062
    9. 'i' → logprob: -15.500259399414062
    10. '['' → logprob: -15.500259399414062

Token 749: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7769954800605774
    2. ']+' → logprob: -0.7769954800605774
    3. ')' → logprob: -3.1519954204559326
    4. ')+' → logprob: -3.7769954204559326
    5. '[i' → logprob: -4.651995658874512
    6. '   ' → logprob: -6.526995658874512
    7. '][' → logprob: -6.901995658874512
    8. '])+' → logprob: -6.901995658874512
    9. '[' → logprob: -7.401995658874512
    10. '])' → logprob: -8.276995658874512

Token 750: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00016325322212651372
    2. ' prefix' → logprob: -8.750163078308105
    3. '(prefix' → logprob: -12.750163078308105
    4. '```' → logprob: -14.125163078308105
    5. '   ' → logprob: -15.000163078308105
    6. '_prefix' → logprob: -15.125163078308105
    7. '1' → logprob: -16.000164031982422
    8. 'preced' → logprob: -16.625164031982422
    9. ' ' → logprob: -16.875164031982422
    10. '    ' → logprob: -16.875164031982422

Token 751: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00048632267862558365
    2. '[j' → logprob: -8.250486373901367
    3. '[_' → logprob: -9.500486373901367
    4. '   ' → logprob: -10.375486373901367
    5. '[i' → logprob: -10.375486373901367
    6. '```' → logprob: -10.750486373901367
    7. '[' → logprob: -10.875486373901367
    8. ')' → logprob: -11.000486373901367
    9. '_i' → logprob: -12.000486373901367
    10. '+' → logprob: -12.500486373901367

Token 752: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011832444579340518
    2. '[' → logprob: -10.375118255615234
    3. '   ' → logprob: -10.375118255615234
    4. ')[' → logprob: -10.375118255615234
    5. ')' → logprob: -11.750118255615234
    6. '```' → logprob: -12.625118255615234
    7. '[
' → logprob: -12.875118255615234
    8. '[j' → logprob: -13.000118255615234
    9. '`' → logprob: -13.750118255615234
    10. '[-' → logprob: -13.875118255615234

Token 753: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8074162653647363e-05
    2. '[-' → logprob: -11.750018119812012
    3. ' -' → logprob: -12.625018119812012
    4. '   ' → logprob: -12.875018119812012
    5. '[' → logprob: -13.250018119812012
    6. '])' → logprob: -13.375018119812012
    7. '```' → logprob: -15.375018119812012
    8. ']' → logprob: -15.500018119812012
    9. '−' → logprob: -16.000017166137695
    10. '       ' → logprob: -17.000017166137695

Token 754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8670179997570813e-05
    2. '   ' → logprob: -12.250019073486328
    3. '
' → logprob: -12.250019073486328
    4. ' ' → logprob: -13.000019073486328
    5. '```' → logprob: -13.000019073486328
    6. '])' → logprob: -13.875019073486328
    7. ']' → logprob: -14.000019073486328
    8. 'i' → logprob: -14.625019073486328
    9. 'k' → logprob: -15.000019073486328
    10. '-' → logprob: -15.000019073486328

Token 755: '])*' (ID: 114661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012805575504899025
    2. ']' → logprob: -4.637805461883545
    3. '])' → logprob: -6.262805461883545
    4. ')+' → logprob: -8.012805938720703
    5. ')*' → logprob: -8.262805938720703
    6. ' )' → logprob: -8.512805938720703
    7. ')]' → logprob: -9.137805938720703
    8. '[i' → logprob: -10.262805938720703
    9. '   ' → logprob: -10.387805938720703
    10. '[' → logprob: -10.637805938720703

Token 756: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01204864215105772
    2. '(i' → logprob: -4.762048721313477
    3. ' i' → logprob: -6.637048721313477
    4. '[i' → logprob: -7.137048721313477
    5. '<|end|>' → logprob: -8.512048721313477
    6. ' (' → logprob: -8.637048721313477
    7. '1' → logprob: -9.012048721313477
    8. '
' → logprob: -9.387048721313477
    9. 'dp' → logprob: -9.512048721313477
    10. '0' → logprob: -9.637048721313477

Token 757: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4715847671031952
    2. ' +' → logprob: -2.0965847969055176
    3. ')' → logprob: -2.2215847969055176
    4. ']' → logprob: -2.7215847969055176
    5. '-' → logprob: -2.9715847969055176
    6. '+' → logprob: -4.471584796905518
    7. '[' → logprob: -6.096584796905518
    8. '[i' → logprob: -6.346584796905518
    9. '       ' → logprob: -6.471584796905518
    10. ',' → logprob: -6.596584796905518

Token 758: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17417354881763458
    2. 'dp' → logprob: -2.424173593521118
    3. ' max' → logprob: -3.424173593521118
    4. '0' → logprob: -3.924173593521118
    5. ' dp' → logprob: -5.299173355102539
    6. '"' → logprob: -6.049173355102539
    7. '[' → logprob: -6.424173355102539
    8. ')' → logprob: -6.549173355102539
    9. '(max' → logprob: -6.799173355102539
    10. '(' → logprob: -6.924173355102539

Token 759: '_k' (ID: 11637)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5453341603279114
    2. 'over' → logprob: -1.4203341007232666
    3. '(lambda' → logprob: -2.7953341007232666
    4. '_over' → logprob: -2.9203341007232666
    5. '[' → logprob: -3.5453341007232666
    6. ' over' → logprob: -4.545334339141846
    7. 'lambda' → logprob: -5.170334339141846
    8. '(
' → logprob: -5.670334339141846
    9. '_lambda' → logprob: -5.920334339141846
    10. '([' → logprob: -6.170334339141846

Token 760: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7612595558166504
    2. '```' → logprob: -1.5112595558166504
    3. '[
' → logprob: -2.5112595558166504
    4. '`' → logprob: -3.0112595558166504
    5. '"' → logprob: -3.0112595558166504
    6. ' _' → logprob: -3.1362595558166504
    7. '_' → logprob: -3.6362595558166504
    8. '``' → logprob: -5.13625955581665
    9. '(' → logprob: -5.26125955581665
    10. '[k' → logprob: -5.38625955581665

Token 761: 'dp' (ID: 19037)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.962893009185791
    2. 'dp' → logprob: -1.087893009185791
    3. ' dp' → logprob: -2.462893009185791
    4. ' ' → logprob: -2.962893009185791
    5. '-' → logprob: -3.587893009185791
    6. '(dp' → logprob: -3.587893009185791
    7. '(' → logprob: -3.837893009185791
    8. '0' → logprob: -3.837893009185791
    9. ' -' → logprob: -4.337893009185791
    10. ' (' → logprob: -4.587893009185791

Token 762: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0029242297168821096
    2. '[' → logprob: -5.87792444229126
    3. '[
' → logprob: -9.752923965454102
    4. '_k' → logprob: -10.752923965454102
    5. '[token' → logprob: -11.002923965454102
    6. '[i' → logprob: -11.627923965454102
    7. 'k' → logprob: -12.252923965454102
    8. '[j' → logprob: -13.127923965454102
    9. '[user' → logprob: -13.252923965454102
    10. '```' → logprob: -13.627923965454102

Token 763: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11976200342178345
    2. '-' → logprob: -2.2447619438171387
    3. ']' → logprob: -5.119761943817139
    4. ' ' → logprob: -8.369762420654297
    5. '-k' → logprob: -8.744762420654297
    6. ']-' → logprob: -8.994762420654297
    7. '  ' → logprob: -9.369762420654297
    8. '    ' → logprob: -9.619762420654297
    9. ')' → logprob: -9.744762420654297
    10. '   ' → logprob: -9.994762420654297

Token 764: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04906997084617615
    2. '-' → logprob: -3.049069881439209
    3. ')' → logprob: -9.549070358276367
    4. ' ' → logprob: -9.799070358276367
    5. '    ' → logprob: -10.174070358276367
    6. '-p' → logprob: -10.424070358276367
    7. '   ' → logprob: -10.424070358276367
    8. '```' → logprob: -10.549070358276367
    9. '           ' → logprob: -10.799070358276367
    10. ']' → logprob: -10.924070358276367

Token 765: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.19922798871994019
    2. ' (' → logprob: -1.824228048324585
    3. '(p' → logprob: -4.449227809906006
    4. '(i' → logprob: -5.699227809906006
    5. '(k' → logprob: -6.449227809906006
    6. '(P' → logprob: -7.449227809906006
    7. 'k' → logprob: -7.574227809906006
    8. 'prefix' → logprob: -7.699227809906006
    9. '((' → logprob: -8.324228286743164
    10. '(pref' → logprob: -8.699228286743164

Token 766: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.02235628291964531
    2. 'prefix' → logprob: -4.1473565101623535
    3. ' (' → logprob: -5.1473565101623535
    4. '(p' → logprob: -9.147356033325195
    5. '(pref' → logprob: -9.147356033325195
    6. '(k' → logprob: -9.647356033325195
    7. ' prefix' → logprob: -9.647356033325195
    8. '(' → logprob: -10.272356033325195
    9. 'k' → logprob: -10.397356033325195
    10. '((' → logprob: -11.272356033325195

Token 767: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.7014437364414334e-05
    2. '[' → logprob: -11.25002670288086
    3. '[i' → logprob: -11.75002670288086
    4. 'k' → logprob: -12.75002670288086
    5. '_k' → logprob: -13.75002670288086
    6. '[
' → logprob: -14.00002670288086
    7. '{k' → logprob: -14.37502670288086
    8. '(k' → logprob: -15.62502670288086
    9. '*k' → logprob: -16.25002670288086
    10. '	k' → logprob: -16.25002670288086

Token 768: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.20221689343452454
    2. ']' → logprob: -1.7022168636322021
    3. ')+' → logprob: -7.702217102050781
    4. '+' → logprob: -8.827217102050781
    5. ')' → logprob: -9.077217102050781
    6. ']+\' → logprob: -10.327217102050781
    7. '])+' → logprob: -11.702217102050781
    8. ']+=' → logprob: -11.827217102050781
    9. '[' → logprob: -11.827217102050781
    10. ']+"' → logprob: -11.952217102050781

Token 769: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -2.5107177862082608e-05
    2. '(prefix' → logprob: -11.000024795532227
    3. ' prefix' → logprob: -11.750024795532227
    4. '
' → logprob: -15.375024795532227
    5. '_prefix' → logprob: -16.375024795532227
    6. '```' → logprob: -16.625024795532227
    7. 'PREFIX' → logprob: -18.375024795532227
    8. 'preced' → logprob: -18.375024795532227
    9. '-prefix' → logprob: -18.375024795532227
    10. '.prefix' → logprob: -19.250024795532227

Token 770: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00021152703266125172
    2. '```' → logprob: -8.500211715698242
    3. 'j' → logprob: -12.625211715698242
    4. '_js' → logprob: -14.000211715698242
    5. '[' → logprob: -14.250211715698242
    6. '``' → logprob: -14.500211715698242
    7. '_k' → logprob: -14.500211715698242
    8. 'prefix' → logprob: -15.000211715698242
    9. '
' → logprob: -15.000211715698242
    10. '[j' → logprob: -15.125211715698242

Token 771: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004925066023133695
    2. 'k' → logprob: -7.625492572784424
    3. '{k' → logprob: -12.875492095947266
    4. '[' → logprob: -14.375492095947266
    5. '```' → logprob: -14.375492095947266
    6. '[
' → logprob: -15.125492095947266
    7. '(k' → logprob: -15.500492095947266
    8. '_k' → logprob: -16.375492095947266
    9. '
' → logprob: -17.000492095947266
    10. '	k' → logprob: -17.125492095947266

Token 772: '])*' (ID: 114661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1894637942314148
    2. '])' → logprob: -1.9394638538360596
    3. ')]' → logprob: -4.8144636154174805
    4. ']' → logprob: -4.9394636154174805
    5. ')*' → logprob: -4.9394636154174805
    6. '])*' → logprob: -5.3144636154174805
    7. '[k' → logprob: -7.5644636154174805
    8. ']*' → logprob: -8.06446361541748
    9. ')])' → logprob: -8.68946361541748
    10. '[i' → logprob: -8.93946361541748

Token 773: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018221698701381683
    2. '(i' → logprob: -5.018221855163574
    3. 'k' → logprob: -5.268221855163574
    4. '(' → logprob: -5.893221855163574
    5. ' (' → logprob: -6.518221855163574
    6. ' i' → logprob: -7.518221855163574
    7. '1' → logprob: -7.643221855163574
    8. '(k' → logprob: -7.893221855163574
    9. '```' → logprob: -8.393221855163574
    10. '0' → logprob: -8.518221855163574

Token 774: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3935738205909729
    2. ')' → logprob: -2.268573760986328
    3. ')]' → logprob: -2.393573760986328
    4. '+' → logprob: -2.518573760986328
    5. ' +' → logprob: -3.268573760986328
    6. '])' → logprob: -6.018573760986328
    7. '*' → logprob: -6.143573760986328
    8. ']+' → logprob: -6.643573760986328
    9. '+k' → logprob: -7.143573760986328
    10. ']*' → logprob: -7.518573760986328

Token 775: ' dp' (ID: 21546)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0318045616149902
    2. '(-' → logprob: -1.1568045616149902
    3. '-d' → logprob: -2.1568045616149902
    4. ' -' → logprob: -2.1568045616149902
    5. 'dp' → logprob: -3.1568045616149902
    6. '-(' → logprob: -3.7818045616149902
    7. '(dp' → logprob: -4.03180456161499
    8. '(' → logprob: -5.90680456161499
    9. ' ' → logprob: -6.40680456161499
    10. '-p' → logprob: -6.53180456161499

Token 776: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.046107225120067596
    2. 'k' → logprob: -3.546107292175293
    3. '(k' → logprob: -4.796107292175293
    4. '_k' → logprob: -5.921107292175293
    5. '[' → logprob: -6.421107292175293
    6. '[(' → logprob: -6.546107292175293
    7. ' (' → logprob: -7.046107292175293
    8. 'prefix' → logprob: -8.171107292175293
    9. '_prefix' → logprob: -8.921107292175293
    10. ' [' → logprob: -9.046107292175293

Token 777: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.048200976103544235
    2. ']' → logprob: -3.673201084136963
    3. '][' → logprob: -5.423201084136963
    4. '[' → logprob: -5.423201084136963
    5. '_k' → logprob: -5.798201084136963
    6. ')' → logprob: -6.298201084136963
    7. '*k' → logprob: -6.673201084136963
    8. 'k' → logprob: -6.798201084136963
    9. '])' → logprob: -7.173201084136963
    10. '*(' → logprob: -7.298201084136963

Token 778: ' +' (ID: 659)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6980491876602173
    2. ']' → logprob: -1.4480491876602173
    3. '[' → logprob: -2.6980490684509277
    4. ')' → logprob: -3.0730490684509277
    5. ' +' → logprob: -3.5730490684509277
    6. '`' → logprob: -3.8230490684509277
    7. '+' → logprob: -4.198049068450928
    8. '][' → logprob: -4.323049068450928
    9. '```' → logprob: -4.323049068450928
    10. '[
' → logprob: -5.073049068450928

Token 779: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.22780489921569824
    2. '0' → logprob: -1.9778048992156982
    3. 'prefix' → logprob: -4.102805137634277
    4. '(k' → logprob: -4.102805137634277
    5. ' (' → logprob: -4.727805137634277
    6. '1' → logprob: -5.227805137634277
    7. 'k' → logprob: -5.352805137634277
    8. '(i' → logprob: -5.352805137634277
    9. '(' → logprob: -6.102805137634277
    10. '((' → logprob: -6.852805137634277

Token 780: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.6300631165504456
    2. '0' → logprob: -1.6300630569458008
    3. 'prefix' → logprob: -2.380063056945801
    4. '(k' → logprob: -2.880063056945801
    5. 'k' → logprob: -3.255063056945801
    6. ' (' → logprob: -3.505063056945801
    7. '(i' → logprob: -3.630063056945801
    8. '(' → logprob: -4.880063056945801
    9. 'i' → logprob: -5.630063056945801
    10. ' ' → logprob: -5.630063056945801

Token 781: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1098887175321579
    2. '[i' → logprob: -2.359888792037964
    3. '[' → logprob: -4.859888553619385
    4. '[j' → logprob: -6.484888553619385
    5. 'k' → logprob: -9.484889030456543
    6. 'i' → logprob: -9.484889030456543
    7. '[
' → logprob: -9.734889030456543
    8. '_k' → logprob: -10.359889030456543
    9. '_i' → logprob: -10.859889030456543
    10. '_j' → logprob: -10.984889030456543

Token 782: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.011130588129162788
    2. ']' → logprob: -5.1361308097839355
    3. ')+' → logprob: -5.7611308097839355
    4. '+' → logprob: -6.6361308097839355
    5. '+j' → logprob: -8.386130332946777
    6. ')' → logprob: -8.761130332946777
    7. '+k' → logprob: -9.136130332946777
    8. ']+\' → logprob: -9.761130332946777
    9. '])+' → logprob: -10.261130332946777
    10. '])' → logprob: -10.511130332946777

Token 783: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0005066845333203673
    2. 'j' → logprob: -8.375506401062012
    3. '(prefix' → logprob: -9.250506401062012
    4. ' prefix' → logprob: -9.250506401062012
    5. '```' → logprob: -10.125506401062012
    6. '_prefix' → logprob: -11.875506401062012
    7. '-prefix' → logprob: -11.875506401062012
    8. '0' → logprob: -11.875506401062012
    9. '
' → logprob: -12.375506401062012
    10. ')' → logprob: -12.625506401062012

Token 784: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0011239065788686275
    2. '[j' → logprob: -7.376123905181885
    3. 'j' → logprob: -8.251124382019043
    4. '```' → logprob: -9.126124382019043
    5. '[' → logprob: -9.501124382019043
    6. '[
' → logprob: -11.251124382019043
    7. '_k' → logprob: -11.376124382019043
    8. '[k' → logprob: -11.751124382019043
    9. ')' → logprob: -12.251124382019043
    10. ')]' → logprob: -12.751124382019043

Token 785: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.47626737493556e-05
    2. 'k' → logprob: -10.50003433227539
    3. '_k' → logprob: -13.25003433227539
    4. '[i' → logprob: -13.50003433227539
    5. ')[' → logprob: -13.75003433227539
    6. '{k' → logprob: -14.25003433227539
    7. '[j' → logprob: -14.50003433227539
    8. '```' → logprob: -14.50003433227539
    9. '[' → logprob: -14.62503433227539
    10. ')' → logprob: -15.25003433227539

Token 786: '])*' (ID: 114661)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.07151872664690018
    2. ')' → logprob: -2.946518659591675
    3. ']*' → logprob: -4.696518898010254
    4. ')]' → logprob: -5.696518898010254
    5. '])*' → logprob: -6.071518898010254
    6. ')])' → logprob: -7.821518898010254
    7. ')*(' → logprob: -8.196518898010254
    8. '])' → logprob: -8.196518898010254
    9. ']' → logprob: -8.696518898010254
    10. '*)' → logprob: -8.821518898010254

Token 787: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05929941311478615
    2. 'i' → logprob: -3.5592994689941406
    3. '1' → logprob: -4.059299468994141
    4. '(k' → logprob: -5.934299468994141
    5. '```' → logprob: -6.059299468994141
    6. '(' → logprob: -6.684299468994141
    7. ' k' → logprob: -6.809299468994141
    8. ''' → logprob: -7.184299468994141
    9. '`' → logprob: -7.184299468994141
    10. ' ' → logprob: -7.559299468994141

Token 788: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6994297504425049
    2. ')' → logprob: -1.3244297504425049
    3. '[' → logprob: -2.324429750442505
    4. '[k' → logprob: -2.949429750442505
    5. ')]' → logprob: -3.824429750442505
    6. '[i' → logprob: -4.074429512023926
    7. '+' → logprob: -5.199429512023926
    8. '][' → logprob: -5.449429512023926
    9. '```' → logprob: -5.449429512023926
    10. '])' → logprob: -5.699429512023926

Token 789: '       ' (ID: 309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5760494470596313
    2. '[' → logprob: -0.9510494470596313
    3. '       ' → logprob: -4.701049327850342
    4. ')' → logprob: -4.951049327850342
    5. '   ' → logprob: -5.076049327850342
    6. '+' → logprob: -5.576049327850342
    7. '[i' → logprob: -5.951049327850342
    8. '`' → logprob: -5.951049327850342
    9. ' _' → logprob: -6.076049327850342
    10. ']' → logprob: -6.076049327850342

Token 790: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5894259214401245
    2. '_' → logprob: -1.3394259214401245
    3. '[i' → logprob: -3.339426040649414
    4. '   ' → logprob: -3.464426040649414
    5. '+' → logprob: -3.714426040649414
    6. ')' → logprob: -4.214426040649414
    7. '(' → logprob: -4.214426040649414
    8. '[
' → logprob: -4.964426040649414
    9. ']' → logprob: -5.089426040649414
    10. '       ' → logprob: -5.089426040649414

Token 791: ' Rear' (ID: 69048)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5271403789520264
    2. '   ' → logprob: -3.2771403789520264
    3. 'dp' → logprob: -3.2771403789520264
    4. ')' → logprob: -3.5271403789520264
    5. '[' → logprob: -3.5271403789520264
    6. ']' → logprob: -3.5271403789520264
    7. '_' → logprob: -3.6521403789520264
    8. 'i' → logprob: -3.6521403789520264
    9. 'for' → logprob: -3.7771403789520264
    10. '[i' → logprob: -3.7771403789520264

Token 792: 'r' (ID: 81)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.725419819355011
    2. 'mainder' → logprob: -1.7254197597503662
    3. 'n' → logprob: -3.350419759750366
    4. 'r' → logprob: -3.600419759750366
    5. 'nder' → logprob: -3.725419759750366
    6. 'd' → logprob: -3.725419759750366
    7. 'x' → logprob: -3.975419759750366
    8. 'ma' → logprob: -3.975419759750366
    9. 'struct' → logprob: -4.100419998168945
    10. 'a' → logprob: -4.225419998168945

Token 793: 'anged' (ID: 5717)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3572580814361572
    2. 'anged' → logprob: -2.3572580814361572
    3. '#' → logprob: -2.4822580814361572
    4. 'def' → logprob: -2.6072580814361572
    5. 'r' → logprob: -2.7322580814361572
    6. 'n' → logprob: -2.9822580814361572
    7. 'angement' → logprob: -2.9822580814361572
    8. ']' → logprob: -3.1072580814361572
    9. '```' → logprob: -3.2322580814361572
    10. ' =' → logprob: -3.6072580814361572

Token 794: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5912695527076721
    2. '_' → logprob: -1.4662694931030273
    3. '   ' → logprob: -2.3412694931030273
    4. '       ' → logprob: -3.8412694931030273
    5. '```' → logprob: -3.8412694931030273
    6. ' _' → logprob: -4.591269493103027
    7. '`' → logprob: -4.716269493103027
    8. 'def' → logprob: -4.841269493103027
    9. '[i' → logprob: -5.091269493103027
    10. ':' → logprob: -5.091269493103027

Token 795: ' easier' (ID: 11087)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0450042486190796
    2. 'i' → logprob: -1.1700042486190796
    3. 'dp' → logprob: -1.2950042486190796
    4. ' range' → logprob: -3.670004367828369
    5. 'k' → logprob: -4.170004367828369
    6. 'the' → logprob: -5.545004367828369
    7. ' dp' → logprob: -6.045004367828369
    8. 'lines' → logprob: -6.170004367828369
    9. 'x' → logprob: -6.670004367828369
    10. ' lines' → logprob: -7.045004367828369

Token 796: ' DP' (ID: 51992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2732566595077515
    2. 'def' → logprob: -2.273256778717041
    3. ']' → logprob: -2.398256778717041
    4. 'dp' → logprob: -2.398256778717041
    5. 'for' → logprob: -2.523256778717041
    6. 'addition' → logprob: -2.898256778717041
    7. 'i' → logprob: -3.023256778717041
    8. ' addition' → logprob: -3.398256778717041
    9. '```' → logprob: -4.148256778717041
    10. '[i' → logprob: -4.148256778717041

Token 797: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13731202483177185
    2. '   ' → logprob: -3.2623119354248047
    3. '[' → logprob: -3.5123119354248047
    4. '       ' → logprob: -4.012311935424805
    5. ' =' → logprob: -4.387311935424805
    6. ' _' → logprob: -5.137311935424805
    7. '=' → logprob: -5.387311935424805
    8. '```' → logprob: -5.762311935424805
    9. '`' → logprob: -5.887311935424805
    10. 'def' → logprob: -6.137311935424805

Token 798: ' convex' (ID: 142423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9825010299682617
    2. ' range' → logprob: -2.1075010299682617
    3. ' prefix' → logprob: -2.3575010299682617
    4. 'def' → logprob: -2.4825010299682617
    5. 'range' → logprob: -2.4825010299682617
    6. ' for' → logprob: -2.6075010299682617
    7. 'k' → logprob: -2.7325010299682617
    8. 'i' → logprob: -2.8575010299682617
    9. ')' → logprob: -3.1075010299682617
    10. 'from' → logprob: -3.3575010299682617

Token 799: ' hull' (ID: 74912)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.39643269777297974
    2. 'h' → logprob: -1.146432638168335
    3. ' hull' → logprob: -5.396432876586914
    4. ')' → logprob: -6.646432876586914
    5. 'def' → logprob: -7.646432876586914
    6. '```' → logprob: -7.646432876586914
    7. '_dp' → logprob: -7.771432876586914
    8. '_' → logprob: -7.896432876586914
    9. 'Hull' → logprob: -8.021432876586914
    10. '       ' → logprob: -8.146432876586914

Token 800: ' usage' (ID: 16622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47577208280563354
    2. '[i' → logprob: -1.4757721424102783
    3. '```' → logprob: -3.3507721424102783
    4. '       ' → logprob: -3.4757721424102783
    5. '   ' → logprob: -3.6007721424102783
    6. '_' → logprob: -4.475771903991699
    7. '[
' → logprob: -4.725771903991699
    8. '`' → logprob: -4.725771903991699
    9. ':' → logprob: -5.600771903991699
    10. ']' → logprob: -5.850771903991699

Token 801: ':

' (ID: 1402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2678796947002411
    2. '   ' → logprob: -1.8928797245025635
    3. '`' → logprob: -4.142879486083984
    4. '```' → logprob: -4.517879486083984
    5. '       ' → logprob: -4.642879486083984
    6. ' _' → logprob: -5.017879486083984
    7. ' =' → logprob: -5.142879486083984
    8. '[' → logprob: -5.267879486083984
    9. 'i' → logprob: -5.392879486083984
    10. ':' → logprob: -5.642879486083984

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016036832705140114
    2. '```' → logprob: -5.1410369873046875
    3. 'from' → logprob: -6.5160369873046875
    4. ' for' → logprob: -6.7660369873046875
    5. '   ' → logprob: -6.7660369873046875
    6. '`' → logprob: -7.1410369873046875
    7. '[' → logprob: -7.1410369873046875
    8. 'for' → logprob: -7.3910369873046875
    9. ' =' → logprob: -7.8910369873046875
    10. ' from' → logprob: -8.016036987304688

Token 803: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.818152666091919
    2. ' dp' → logprob: -1.943152666091919
    3. 'class' → logprob: -2.068152666091919
    4. 'from' → logprob: -2.943152666091919
    5. 'dp' → logprob: -3.068152666091919
    6. ' class' → logprob: -3.568152666091919
    7. '```' → logprob: -3.943152666091919
    8. ' lines' → logprob: -4.06815242767334
    9. 'n' → logprob: -4.19315242767334
    10. '   ' → logprob: -4.31815242767334

Token 804: ' Let' (ID: 9024)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5490790009498596
    2. 'dp' → logprob: -1.6740789413452148
    3. '       ' → logprob: -2.299078941345215
    4. 'class' → logprob: -3.049078941345215
    5. 'for' → logprob: -3.549078941345215
    6. 'def' → logprob: -4.424078941345215
    7. '   ' → logprob: -5.049078941345215
    8. ' from' → logprob: -5.049078941345215
    9. ' lines' → logprob: -5.174078941345215
    10. 'k' → logprob: -5.549078941345215

Token 805: ' A' (ID: 355)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2094097137451172
    2. 'prefix' → logprob: -1.7094097137451172
    3. 'from' → logprob: -2.209409713745117
    4. 's' → logprob: -2.709409713745117
    5. 'lines' → logprob: -2.834409713745117
    6. 'S' → logprob: -2.834409713745117
    7. 'x' → logprob: -3.334409713745117
    8. ' lines' → logprob: -3.459409713745117
    9. 'class' → logprob: -3.834409713745117
    10. 'def' → logprob: -4.084409713745117

Token 806: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5947803854942322
    2. '[' → logprob: -1.719780445098877
    3. ' =' → logprob: -1.844780445098877
    4. '=' → logprob: -3.469780445098877
    5. '_i' → logprob: -3.719780445098877
    6. 'i' → logprob: -3.969780445098877
    7. '[
' → logprob: -4.469780445098877
    8. ')' → logprob: -5.719780445098877
    9. '[k' → logprob: -5.844780445098877
    10. 'k' → logprob: -5.969780445098877

Token 807: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.15881137549877167
    2. '(prefix' → logprob: -2.783811330795288
    3. ' prefix' → logprob: -3.283811330795288
    4. 'dp' → logprob: -4.283811569213867
    5. '(p' → logprob: -5.033811569213867
    6. '[p' → logprob: -5.158811569213867
    7. 'p' → logprob: -5.533811569213867
    8. ' (' → logprob: -5.658811569213867
    9. 'lambda' → logprob: -6.033811569213867
    10. '[i' → logprob: -6.533811569213867

Token 808: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.721998393535614
    2. '[i' → logprob: -1.3469984531402588
    3. '```' → logprob: -2.221998453140259
    4. '`' → logprob: -3.096998453140259
    5. '``' → logprob: -3.846998453140259
    6. '_j' → logprob: -3.971998453140259
    7. '[j' → logprob: -4.47199821472168
    8. '\[' → logprob: -4.59699821472168
    9. '_' → logprob: -4.72199821472168
    10. '_i' → logprob: -4.84699821472168

Token 809: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.33672896027565
    2. ']' → logprob: -1.4617289304733276
    3. '_j' → logprob: -4.211729049682617
    4. '+' → logprob: -4.586729049682617
    5. '[j' → logprob: -4.836729049682617
    6. '+j' → logprob: -5.211729049682617
    7. ')' → logprob: -5.586729049682617
    8. ')+' → logprob: -5.586729049682617
    9. '[' → logprob: -6.086729049682617
    10. '[i' → logprob: -7.086729049682617

Token 810: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8851139545440674
    2. '[i' → logprob: -1.0101139545440674
    3. '```' → logprob: -2.2601139545440674
    4. '_' → logprob: -3.7601139545440674
    5. ']' → logprob: -3.8851139545440674
    6. '+' → logprob: -4.260113716125488
    7. '`' → logprob: -4.635113716125488
    8. '[
' → logprob: -4.885113716125488
    9. '``' → logprob: -4.885113716125488
    10. '\[' → logprob: -5.010113716125488

Token 811: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.05885028839111328
    2. 'j' → logprob: -3.5588502883911133
    3. '_j' → logprob: -3.5588502883911133
    4. ' prefix' → logprob: -8.933850288391113
    5. '_prefix' → logprob: -10.933850288391113
    6. '(prefix' → logprob: -11.183850288391113
    7. '```' → logprob: -11.308850288391113
    8. '   ' → logprob: -11.433850288391113
    9. ' j' → logprob: -11.808850288391113
    10. '           ' → logprob: -12.808850288391113

Token 812: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0011021106038242579
    2. '[j' → logprob: -7.626101970672607
    3. '```' → logprob: -8.376102447509766
    4. '   ' → logprob: -9.876102447509766
    5. '[_' → logprob: -10.001102447509766
    6. '[i' → logprob: -10.001102447509766
    7. '\' → logprob: -10.126102447509766
    8. 'j' → logprob: -10.126102447509766
    9. '[' → logprob: -10.251102447509766
    10. '``' → logprob: -10.751102447509766

Token 813: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3229040503501892
    2. '[' → logprob: -2.572904109954834
    3. '_i' → logprob: -2.822904109954834
    4. '```' → logprob: -3.072904109954834
    5. '`' → logprob: -3.447904109954834
    6. '_j' → logprob: -4.197904109954834
    7. ']' → logprob: -4.822904109954834
    8. '``' → logprob: -4.947904109954834
    9. ')' → logprob: -5.072904109954834
    10. '[
' → logprob: -5.322904109954834

Token 814: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002795703476294875
    2. ']' → logprob: -9.000279426574707
    3. ' -' → logprob: -9.375279426574707
    4. '   ' → logprob: -11.000279426574707
    5. '])' → logprob: -11.250279426574707
    6. '[-' → logprob: -11.750279426574707
    7. '```' → logprob: -11.750279426574707
    8. '[i' → logprob: -12.000279426574707
    9. '[' → logprob: -12.625279426574707
    10. ']-' → logprob: -12.875279426574707

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012856863031629473
    2. '-' → logprob: -9.000128746032715
    3. ']' → logprob: -14.000128746032715
    4. '   ' → logprob: -14.000128746032715
    5. '```' → logprob: -14.000128746032715
    6. 'i' → logprob: -14.125128746032715
    7. '
' → logprob: -14.125128746032715
    8. ' ' → logprob: -14.250128746032715
    9. '0' → logprob: -15.875128746032715
    10. '`' → logprob: -16.8751277923584

Token 816: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12209877371788025
    2. ']
' → logprob: -2.372098684310913
    3. ']+' → logprob: -4.247098922729492
    4. '])' → logprob: -5.622098922729492
    5. ')' → logprob: -6.997098922729492
    6. '])
' → logprob: -7.622098922729492
    7. '[i' → logprob: -7.622098922729492
    8. ')
' → logprob: -7.997098922729492
    9. ']
' → logprob: -8.372098922729492
    10. ')]' → logprob: -8.497098922729492

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.304329752922058
    2. '[' → logprob: -1.679329752922058
    3. '   ' → logprob: -2.1793298721313477
    4. ':' → logprob: -2.4293298721313477
    5. '[i' → logprob: -2.4293298721313477
    6. '```' → logprob: -3.0543298721313477
    7. '`' → logprob: -3.1793298721313477
    8. ')' → logprob: -3.5543298721313477
    9. '[
' → logprob: -3.9293298721313477
    10. ' +' → logprob: -4.554329872131348

Token 818: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.330511212348938
    2. '   ' → logprob: -2.8305110931396484
    3. ' =' → logprob: -2.9555110931396484
    4. ':' → logprob: -3.3305110931396484
    5. '[' → logprob: -4.455511093139648
    6. ' +' → logprob: -4.580511093139648
    7. ',' → logprob: -4.830511093139648
    8. '=' → logprob: -4.830511093139648
    9. ')' → logprob: -4.955511093139648
    10. 'def' → logprob: -5.080511093139648

Token 819: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.198020577430725
    2. ')' → logprob: -2.1980204582214355
    3. 'for' → logprob: -2.4480204582214355
    4. '[
' → logprob: -2.5730204582214355
    5. '[' → logprob: -2.9480204582214355
    6. '   ' → logprob: -3.0730204582214355
    7. '=' → logprob: -3.3230204582214355
    8. '(
' → logprob: -3.3230204582214355
    9. 'dp' → logprob: -3.6980204582214355
    10. ' for' → logprob: -3.8230204582214355

Token 820: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2921764850616455
    2. ' dp' → logprob: -2.2921764850616455
    3. ' for' → logprob: -2.6671764850616455
    4. 'for' → logprob: -2.7921764850616455
    5. '       ' → logprob: -5.292176246643066
    6. '   ' → logprob: -5.417176246643066
    7. 'def' → logprob: -5.417176246643066
    8. 'i' → logprob: -6.542176246643066
    9. 'max' → logprob: -6.667176246643066
    10. '```' → logprob: -6.792176246643066

Token 821: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00048143533058464527
    2. '[' → logprob: -8.375481605529785
    3. '=' → logprob: -9.375481605529785
    4. 'i' → logprob: -9.625481605529785
    5. '[
' → logprob: -10.500481605529785
    6. '```' → logprob: -10.875481605529785
    7. ' =' → logprob: -11.000481605529785
    8. '\[' → logprob: -11.500481605529785
    9. ']' → logprob: -12.500481605529785
    10. ')' → logprob: -12.625481605529785

Token 822: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14764297008514404
    2. ']' → logprob: -2.0226430892944336
    3. '[' → logprob: -5.772643089294434
    4. '[
' → logprob: -7.522643089294434
    5. '=' → logprob: -8.147643089294434
    6. ']=' → logprob: -8.272643089294434
    7. '   ' → logprob: -8.397643089294434
    8. 'i' → logprob: -9.397643089294434
    9. ' =' → logprob: -9.397643089294434
    10. ')' → logprob: -9.397643089294434

Token 823: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3332802951335907
    2. '[i' → logprob: -1.333280324935913
    3. '[' → logprob: -4.208280086517334
    4. ' =' → logprob: -5.458280086517334
    5. '```' → logprob: -8.458280563354492
    6. '[
' → logprob: -8.583280563354492
    7. '=
' → logprob: -9.458280563354492
    8. '
' → logprob: -9.958280563354492
    9. '   ' → logprob: -10.333280563354492
    10. '`' → logprob: -10.333280563354492

Token 824: ' max' (ID: 2999)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4439108967781067
    2. 'max' → logprob: -1.068910837173462
    3. ' max' → logprob: -4.693911075592041
    4. ' A' → logprob: -5.318911075592041
    5. '0' → logprob: -7.818911075592041
    6. 'dp' → logprob: -8.193910598754883
    7. '   ' → logprob: -9.318910598754883
    8. '(' → logprob: -9.693910598754883
    9. 'i' → logprob: -10.193910598754883
    10. '(max' → logprob: -10.318910598754883

Token 825: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5494316816329956
    2. '[' → logprob: -1.7994316816329956
    3. '(dp' → logprob: -2.299431800842285
    4. '(
' → logprob: -3.049431800842285
    5. '[i' → logprob: -3.049431800842285
    6. 'dp' → logprob: -3.549431800842285
    7. '[
' → logprob: -4.799431800842285
    8. '([' → logprob: -5.424431800842285
    9. '```' → logprob: -5.674431800842285
    10. 'over' → logprob: -6.049431800842285

Token 826: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006637929007411003
    2. '_k' → logprob: -6.131638050079346
    3. ' k' → logprob: -6.131638050079346
    4. '`' → logprob: -7.256638050079346
    5. '(k' → logprob: -7.381638050079346
    6. '```' → logprob: -8.131637573242188
    7. '(' → logprob: -8.631637573242188
    8. '_' → logprob: -9.131637573242188
    9. '{k' → logprob: -10.006637573242188
    10. 'i' → logprob: -10.006637573242188

Token 827: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28979453444480896
    2. '[
' → logprob: -2.414794445037842
    3. '```' → logprob: -2.414794445037842
    4. '[i' → logprob: -3.164794445037842
    5. '[k' → logprob: -4.414794445037842
    6. '`' → logprob: -5.289794445037842
    7. '``' → logprob: -6.164794445037842
    8. '   ' → logprob: -6.164794445037842
    9. '"' → logprob: -6.789794445037842
    10. '_' → logprob: -6.914794445037842

Token 828: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004718126263469458
    2. ' i' → logprob: -5.87971830368042
    3. '`' → logprob: -6.50471830368042
    4. '```' → logprob: -8.879717826843262
    5. ')' → logprob: -10.004717826843262
    6. '(i' → logprob: -10.129717826843262
    7. ' ' → logprob: -10.129717826843262
    8. ''i' → logprob: -10.254717826843262
    9. ''' → logprob: -10.504717826843262
    10. 'k' → logprob: -11.129717826843262

Token 829: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20631444454193115
    2. '[
' → logprob: -3.0813145637512207
    3. ' (' → logprob: -3.4563145637512207
    4. '(' → logprob: -3.4563145637512207
    5. ' of' → logprob: -3.7063145637512207
    6. '```' → logprob: -4.081314563751221
    7. ']' → logprob: -5.206314563751221
    8. '(
' → logprob: -5.456314563751221
    9. '   ' → logprob: -5.581314563751221
    10. ' [' → logprob: -6.206314563751221

Token 830: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10886286199092865
    2. ' dp' → logprob: -2.98386287689209
    3. 'A' → logprob: -3.10886287689209
    4. ' A' → logprob: -5.60886287689209
    5. '(dp' → logprob: -6.48386287689209
    6. 'prefix' → logprob: -7.48386287689209
    7. '   ' → logprob: -7.85886287689209
    8. ' (' → logprob: -7.85886287689209
    9. '(A' → logprob: -7.98386287689209
    10. ' ' → logprob: -8.23386287689209

Token 831: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.549370527267456
    2. '[' → logprob: -1.049370527267456
    3. '[i' → logprob: -2.924370527267456
    4. '[
' → logprob: -4.174370765686035
    5. '```' → logprob: -5.924370765686035
    6. '   ' → logprob: -8.924370765686035
    7. '+' → logprob: -9.299370765686035
    8. '\[' → logprob: -9.424370765686035
    9. '_k' → logprob: -9.549370765686035
    10. '+k' → logprob: -9.924370765686035

Token 832: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5828887224197388
    2. ']' → logprob: -1.5828887224197388
    3. ' +' → logprob: -1.8328887224197388
    4. '-' → logprob: -2.832888603210449
    5. ']+' → logprob: -4.957888603210449
    6. '+' → logprob: -5.332888603210449
    7. '```' → logprob: -6.707888603210449
    8. '           ' → logprob: -7.082888603210449
    9. '       ' → logprob: -7.457888603210449
    10. ']-' → logprob: -8.08288860321045

Token 833: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4923821985721588
    2. '[' → logprob: -1.9923821687698364
    3. '[k' → logprob: -2.492382287979126
    4. '-' → logprob: -2.867382287979126
    5. '```' → logprob: -3.992382287979126
    6. '[i' → logprob: -3.992382287979126
    7. ']' → logprob: -4.117382049560547
    8. ' +' → logprob: -4.617382049560547
    9. '[-' → logprob: -4.617382049560547
    10. ')' → logprob: -4.867382049560547

Token 834: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7174786329269409
    2. ' (' → logprob: -1.092478632926941
    3. 'A' → logprob: -1.842478632926941
    4. ' A' → logprob: -4.9674787521362305
    5. 'i' → logprob: -5.2174787521362305
    6. '(A' → logprob: -6.2174787521362305
    7. '(' → logprob: -6.5924787521362305
    8. '(prefix' → logprob: -6.9674787521362305
    9. ' i' → logprob: -7.7174787521362305
    10. '(p' → logprob: -8.09247875213623

Token 835: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04870352894067764
    2. '(i' → logprob: -3.67370343208313
    3. ' i' → logprob: -4.548703670501709
    4. ' (' → logprob: -4.548703670501709
    5. 'A' → logprob: -7.923703670501709
    6. '(A' → logprob: -9.42370319366455
    7. '   ' → logprob: -9.42370319366455
    8. 'prefix' → logprob: -9.67370319366455
    9. '(' → logprob: -9.79870319366455
    10. ' ' → logprob: -9.79870319366455

Token 836: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9582198858261108
    2. '-k' → logprob: -0.9582198858261108
    3. ' -' → logprob: -1.4582198858261108
    4. ')' → logprob: -9.208219528198242
    5. '  ' → logprob: -10.833219528198242
    6. '   ' → logprob: -11.208219528198242
    7. '-t' → logprob: -11.458219528198242
    8. '-
' → logprob: -11.458219528198242
    9. ')-(' → logprob: -11.708219528198242
    10. ' ' → logprob: -11.833219528198242

Token 837: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.5300082564353943
    2. ')' → logprob: -0.9050082564353943
    3. ')*(' → logprob: -5.030008316040039
    4. '*)' → logprob: -8.780008316040039
    5. '*' → logprob: -9.030008316040039
    6. '```' → logprob: -11.530008316040039
    7. ')`' → logprob: -12.280008316040039
    8. '-' → logprob: -12.405008316040039
    9. ' )' → logprob: -12.530008316040039
    10. ')
' → logprob: -12.530008316040039

Token 838: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03170451149344444
    2. ' A' → logprob: -3.5317044258117676
    3. ' (' → logprob: -7.281704425811768
    4. '(' → logprob: -7.281704425811768
    5. '(A' → logprob: -7.531704425811768
    6. '```' → logprob: -11.656704902648926
    7. '   ' → logprob: -12.031704902648926
    8. ' ' → logprob: -12.031704902648926
    9. '`' → logprob: -12.531704902648926
    10. '(p' → logprob: -13.031704902648926

Token 839: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4425674080848694
    2. '[i' → logprob: -1.3175673484802246
    3. '       ' → logprob: -3.4425673484802246
    4. '```' → logprob: -4.442567348480225
    5. '[
' → logprob: -4.442567348480225
    6. ']' → logprob: -4.817567348480225
    7. '   ' → logprob: -5.192567348480225
    8. ')' → logprob: -5.317567348480225
    9. ':' → logprob: -5.817567348480225
    10. '`' → logprob: -6.317567348480225

Token 840: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35315921902656555
    2. '(prefix' → logprob: -1.2281591892242432
    3. '(p' → logprob: -5.478159427642822
    4. '((' → logprob: -8.603158950805664
    5. ' ((' → logprob: -8.978158950805664
    6. '(' → logprob: -10.103158950805664
    7. '(P' → logprob: -10.353158950805664
    8. ' prefix' → logprob: -10.353158950805664
    9. 'prefix' → logprob: -10.603158950805664
    10. '(pref' → logprob: -10.728158950805664

Token 841: 'i' (ID: 72)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.21782629191875458
    2. ' (' → logprob: -1.967826247215271
    3. 'prefix' → logprob: -3.0928263664245605
    4. '(k' → logprob: -5.2178263664245605
    5. ' prefix' → logprob: -6.3428263664245605
    6. '(' → logprob: -7.0928263664245605
    7. 'k' → logprob: -7.2178263664245605
    8. '(i' → logprob: -7.3428263664245605
    9. '(p' → logprob: -7.8428263664245605
    10. '(P' → logprob: -9.342825889587402

Token 842: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.00563236977905035
    2. '-' → logprob: -5.880632400512695
    3. ' -' → logprob: -5.880632400512695
    4. ')' → logprob: -11.630632400512695
    5. '
' → logprob: -12.130632400512695
    6. '-j' → logprob: -12.255632400512695
    7. '-
' → logprob: -12.380632400512695
    8. ')-' → logprob: -13.630632400512695
    9. '-t' → logprob: -14.005632400512695
    10. ')-(' → logprob: -14.130632400512695

Token 843: ')*' (ID: 11043)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.4749283194541931
    2. ')*' → logprob: -1.099928379058838
    3. ')' → logprob: -3.099928379058838
    4. '*)' → logprob: -9.84992790222168
    5. '*(' → logprob: -10.47492790222168
    6. '*' → logprob: -10.97492790222168
    7. '#' → logprob: -12.34992790222168
    8. ' )' → logprob: -12.59992790222168
    9. ')(' → logprob: -12.72492790222168
    10. '```' → logprob: -12.97492790222168

Token 844: ' B' (ID: 418)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.028055695816874504
    2. ' (' → logprob: -3.9030556678771973
    3. '(p' → logprob: -4.903055667877197
    4. '((' → logprob: -11.278056144714355
    5. '(pref' → logprob: -11.403056144714355
    6. 'prefix' → logprob: -11.778056144714355
    7. '(' → logprob: -12.028056144714355
    8. '(P' → logprob: -12.153056144714355
    9. '(pred' → logprob: -13.153056144714355
    10. '(pid' → logprob: -13.153056144714355

Token 845: '_k' (ID: 11637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3166385889053345
    2. '_' → logprob: -2.191638469696045
    3. '[
' → logprob: -2.816638469696045
    4. '[i' → logprob: -3.941638469696045
    5. ')' → logprob: -4.066638469696045
    6. '[k' → logprob: -4.441638469696045
    7. ']' → logprob: -4.566638469696045
    8. 'k' → logprob: -5.066638469696045
    9. '```' → logprob: -5.691638469696045
    10. '   ' → logprob: -5.941638469696045

Token 846: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1939915418624878
    2. '[' → logprob: -1.4439915418624878
    3. '+' → logprob: -2.1939916610717773
    4. '[i' → logprob: -2.5689916610717773
    5. ')' → logprob: -3.3189916610717773
    6. '=' → logprob: -3.4439916610717773
    7. '   ' → logprob: -3.6939916610717773
    8. '(' → logprob: -3.8189916610717773
    9. '`' → logprob: -4.318991661071777
    10. '```' → logprob: -4.443991661071777

Token 847: ' where' (ID: 1919)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.2531555891036987
    2. '```' → logprob: -2.3781557083129883
    3. 'k' → logprob: -2.6281557083129883
    4. '       ' → logprob: -2.7531557083129883
    5. '[' → logprob: -2.7531557083129883
    6. '[k' → logprob: -2.8781557083129883
    7. ')' → logprob: -3.0031557083129883
    8. '(k' → logprob: -3.5031557083129883
    9. '[i' → logprob: -3.5031557083129883
    10. ' \' → logprob: -3.6281557083129883

Token 848: ' B' (ID: 418)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.604533851146698
    2. 'prefix' → logprob: -1.6045339107513428
    3. 'B' → logprob: -2.1045339107513428
    4. ' B' → logprob: -2.9795339107513428
    5. ' (' → logprob: -3.4795339107513428
    6. ' prefix' → logprob: -3.7295339107513428
    7. '(k' → logprob: -4.979533672332764
    8. 'k' → logprob: -5.104533672332764
    9. '(p' → logprob: -5.479533672332764
    10. '(' → logprob: -5.854533672332764

Token 849: '_k' (ID: 11637)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.335816890001297
    2. '_k' → logprob: -1.5858168601989746
    3. '[' → logprob: -3.4608168601989746
    4. '_' → logprob: -3.9608168601989746
    5. '[i' → logprob: -5.210816860198975
    6. '[
' → logprob: -5.335816860198975
    7. '```' → logprob: -6.085816860198975
    8. '=' → logprob: -6.335816860198975
    9. '[_' → logprob: -6.335816860198975
    10. ')' → logprob: -6.335816860198975

Token 850: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28324994444847107
    2. '=' → logprob: -2.033249855041504
    3. '[k' → logprob: -2.408249855041504
    4. '```' → logprob: -4.783249855041504
    5. '=k' → logprob: -5.158249855041504
    6. '_k' → logprob: -5.908249855041504
    7. ' is' → logprob: -6.408249855041504
    8. '[i' → logprob: -6.533249855041504
    9. 'k' → logprob: -6.533249855041504
    10. '[' → logprob: -6.783249855041504

Token 851: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.30771225690841675
    2. '(prefix' → logprob: -1.5577123165130615
    3. ' prefix' → logprob: -2.9327123165130615
    4. ' (' → logprob: -6.932712078094482
    5. '```' → logprob: -11.93271255493164
    6. '(p' → logprob: -12.68271255493164
    7. '`' → logprob: -12.68271255493164
    8. '   ' → logprob: -13.18271255493164
    9. '_prefix' → logprob: -13.55771255493164
    10. 'suffix' → logprob: -13.68271255493164

Token 852: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0034787857439368963
    2. '_k' → logprob: -6.12847900390625
    3. '[i' → logprob: -7.50347900390625
    4. '[' → logprob: -8.25347900390625
    5. 'k' → logprob: -8.87847900390625
    6. '```' → logprob: -9.37847900390625
    7. ')' → logprob: -9.87847900390625
    8. '_i' → logprob: -10.00347900390625
    9. '[
' → logprob: -10.37847900390625
    10. '   ' → logprob: -10.62847900390625

Token 853: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10029282420873642
    2. ']+' → logprob: -2.350292921066284
    3. ']_' → logprob: -10.725293159484863
    4. ']+\' → logprob: -11.100293159484863
    5. ']+"' → logprob: -11.225293159484863
    6. ' ]' → logprob: -11.475293159484863
    7. '[' → logprob: -12.225293159484863
    8. '+' → logprob: -12.350293159484863
    9. '   ' → logprob: -12.475293159484863
    10. ']
' → logprob: -13.600293159484863

Token 854: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.4855663721391466e-05
    2. ' prefix' → logprob: -11.250015258789062
    3. '```' → logprob: -14.125015258789062
    4. 'j' → logprob: -14.875015258789062
    5. '(prefix' → logprob: -14.875015258789062
    6. '   ' → logprob: -15.875015258789062
    7. '
' → logprob: -16.750015258789062
    8. '_prefix' → logprob: -17.125015258789062
    9. '``' → logprob: -18.375015258789062
    10. ' ' → logprob: -19.500015258789062

Token 855: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0010706812608987093
    2. 'j' → logprob: -7.626070499420166
    3. '_k' → logprob: -8.501070976257324
    4. '```' → logprob: -8.626070976257324
    5. '\' → logprob: -10.251070976257324
    6. ' _' → logprob: -10.501070976257324
    7. ' ' → logprob: -10.626070976257324
    8. '[j' → logprob: -10.626070976257324
    9. '   ' → logprob: -11.001070976257324
    10. '[' → logprob: -11.126070976257324

Token 856: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.45002108812332153
    2. '_k' → logprob: -1.0750210285186768
    3. '_j' → logprob: -4.200021266937256
    4. '[_' → logprob: -6.450021266937256
    5. '[' → logprob: -6.700021266937256
    6. ')' → logprob: -7.450021266937256
    7. '[j' → logprob: -7.700021266937256
    8. '`' → logprob: -7.825021266937256
    9. '```' → logprob: -7.825021266937256
    10. '_i' → logprob: -8.075020790100098

Token 857: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21916736662387848
    2. '])' → logprob: -2.344167470932007
    3. ']*' → logprob: -2.969167470932007
    4. ')' → logprob: -3.469167470932007
    5. ')]' → logprob: -5.219167232513428
    6. '[k' → logprob: -5.844167232513428
    7. ']+' → logprob: -6.094167232513428
    8. ']
' → logprob: -6.344167232513428
    9. '])*' → logprob: -6.969167232513428
    10. ')*' → logprob: -7.219167232513428

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21536009013652802
    2. '[' → logprob: -2.715360164642334
    3. '[i' → logprob: -3.590360164642334
    4. ' =' → logprob: -4.215360164642334
    5. '   ' → logprob: -4.465360164642334
    6. '        ' → logprob: -4.715360164642334
    7. ' +' → logprob: -4.715360164642334
    8. '```' → logprob: -4.840360164642334
    9. '[
' → logprob: -5.215360164642334
    10. '+' → logprob: -5.215360164642334

Token 859: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0625032186508179
    2. '[' → logprob: -1.1875032186508179
    3. '       ' → logprob: -1.8125032186508179
    4. '```' → logprob: -3.0625033378601074
    5. '[
' → logprob: -3.1875033378601074
    6. '   ' → logprob: -3.5625033378601074
    7. '`' → logprob: -4.687503337860107
    8. ')' → logprob: -5.437503337860107
    9. '\n' → logprob: -5.437503337860107
    10. '\' → logprob: -5.562503337860107

Token 860: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27314186096191406
    2. '   ' → logprob: -2.523141860961914
    3. '[' → logprob: -3.523141860961914
    4. 'i' → logprob: -3.773141860961914
    5. '```' → logprob: -4.023141860961914
    6. '           ' → logprob: -4.773141860961914
    7. 'for' → logprob: -5.023141860961914
    8. ' \' → logprob: -5.023141860961914
    9. '[i' → logprob: -5.273141860961914
    10. '\' → logprob: -5.273141860961914

Token 861: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.35042473673820496
    2. 'dp' → logprob: -2.1004247665405273
    3. ' max' → logprob: -2.2254247665405273
    4. 'prefix' → logprob: -4.350424766540527
    5. 'A' → logprob: -4.600424766540527
    6. '(max' → logprob: -4.725424766540527
    7. ' dp' → logprob: -4.975424766540527
    8. ' (' → logprob: -4.975424766540527
    9. ' prefix' → logprob: -5.100424766540527
    10. ' A' → logprob: -5.475424766540527

Token 862: '_k' (ID: 11637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.834237277507782
    2. 'over' → logprob: -1.7092373371124268
    3. ' over' → logprob: -1.9592373371124268
    4. '(' → logprob: -2.4592373371124268
    5. '_' → logprob: -2.9592373371124268
    6. '_k' → logprob: -3.4592373371124268
    7. ' _' → logprob: -4.084237098693848
    8. '(k' → logprob: -4.459237098693848
    9. 'k' → logprob: -4.584237098693848
    10. '[k' → logprob: -4.959237098693848

Token 863: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048513103276491165
    2. '_' → logprob: -3.923513174057007
    3. '[
' → logprob: -4.423512935638428
    4. '[i' → logprob: -5.798512935638428
    5. ' _' → logprob: -5.923512935638428
    6. '(' → logprob: -6.048512935638428
    7. '```' → logprob: -6.798512935638428
    8. '[k' → logprob: -7.048512935638428
    9. '`' → logprob: -7.173512935638428
    10. ' [' → logprob: -7.673512935638428

Token 864: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1495116800069809
    2. ' dp' → logprob: -2.1495115756988525
    3. 'k' → logprob: -5.399511814117432
    4. ')' → logprob: -6.024511814117432
    5. 'prefix' → logprob: -6.024511814117432
    6. '(dp' → logprob: -6.149511814117432
    7. ' (' → logprob: -6.149511814117432
    8. 'B' → logprob: -7.024511814117432
    9. '   ' → logprob: -7.024511814117432
    10. ' k' → logprob: -7.524511814117432

Token 865: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5842817425727844
    2. '[' → logprob: -0.8342817425727844
    3. '[
' → logprob: -5.584281921386719
    4. '[i' → logprob: -5.709281921386719
    5. '_k' → logprob: -7.709281921386719
    6. ')' → logprob: -8.084281921386719
    7. '```' → logprob: -9.584281921386719
    8. '   ' → logprob: -9.709281921386719
    9. '\[' → logprob: -9.959281921386719
    10. ' [' → logprob: -9.959281921386719

Token 866: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8066938519477844
    2. '[k' → logprob: -1.5566937923431396
    3. ']' → logprob: -2.4316937923431396
    4. ')' → logprob: -2.9316937923431396
    5. '+' → logprob: -2.9316937923431396
    6. ' +' → logprob: -3.5566937923431396
    7. '-' → logprob: -3.8066937923431396
    8. '][' → logprob: -4.056694030761719
    9. '[i' → logprob: -4.181694030761719
    10. '[
' → logprob: -4.306694030761719

Token 867: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.046634480357170105
    2. '-' → logprob: -3.1716344356536865
    3. ' +' → logprob: -6.921634674072266
    4. ')' → logprob: -7.296634674072266
    5. '-k' → logprob: -7.796634674072266
    6. '```' → logprob: -7.921634674072266
    7. '[-' → logprob: -8.296634674072266
    8. '+' → logprob: -8.546634674072266
    9. '           ' → logprob: -9.046634674072266
    10. '[' → logprob: -9.421634674072266

Token 868: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04277238994836807
    2. ' B' → logprob: -3.9177722930908203
    3. '(B' → logprob: -4.54277229309082
    4. '(prefix' → logprob: -5.29277229309082
    5. ' (' → logprob: -5.54277229309082
    6. '(' → logprob: -7.29277229309082
    7. '((' → logprob: -7.79277229309082
    8. 'prefix' → logprob: -7.91777229309082
    9. '(p' → logprob: -8.29277229309082
    10. '(k' → logprob: -8.54277229309082

Token 869: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.06237029284238815
    2. '[k' → logprob: -2.8123703002929688
    3. '[_' → logprob: -8.937370300292969
    4. '[' → logprob: -9.062370300292969
    5. ')' → logprob: -10.187370300292969
    6. '```' → logprob: -10.437370300292969
    7. 'k' → logprob: -10.687370300292969
    8. ''_' → logprob: -11.437370300292969
    9. ')_' → logprob: -11.562370300292969
    10. '_j' → logprob: -11.937370300292969

Token 870: '*(-' (ID: 78771)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4040980637073517
    2. ')' → logprob: -1.7790980339050293
    3. '*' → logprob: -1.9040980339050293
    4. ')*' → logprob: -5.029098033905029
    5. '[i' → logprob: -5.654098033905029
    6. '*k' → logprob: -6.279098033905029
    7. '[' → logprob: -7.529098033905029
    8. '[k' → logprob: -7.779098033905029
    9. '*[' → logprob: -8.029098510742188
    10. '*(' → logprob: -8.279098510742188

Token 871: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026460761204361916
    2. '1' → logprob: -4.401460647583008
    3. '(i' → logprob: -4.651460647583008
    4. 'k' → logprob: -6.651460647583008
    5. ' (' → logprob: -6.651460647583008
    6. '(' → logprob: -6.901460647583008
    7. ' i' → logprob: -7.651460647583008
    8. ')' → logprob: -9.776460647583008
    9. '(k' → logprob: -10.026460647583008
    10. '((' → logprob: -10.401460647583008

Token 872: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022068072110414505
    2. '))' → logprob: -4.022068023681641
    3. ')+' → logprob: -6.647068023681641
    4. ')*' → logprob: -6.897068023681641
    5. '+' → logprob: -7.147068023681641
    6. ')))' → logprob: -8.77206802368164
    7. '*' → logprob: -9.52206802368164
    8. 'k' → logprob: -9.89706802368164
    9. ' )' → logprob: -10.02206802368164
    10. ']' → logprob: -10.14706802368164

Token 873: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1250145584344864
    2. '*' → logprob: -3.500014543533325
    3. '+' → logprob: -3.500014543533325
    4. ' +' → logprob: -3.625014543533325
    5. ' *' → logprob: -5.000014781951904
    6. '[k' → logprob: -5.375014781951904
    7. ')*' → logprob: -5.750014781951904
    8. '*)' → logprob: -5.875014781951904
    9. '))' → logprob: -6.500014781951904
    10. ']' → logprob: -6.750014781951904

Token 874: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44535258412361145
    2. ')' → logprob: -2.320352554321289
    3. '[i' → logprob: -2.445352554321289
    4. '_' → logprob: -3.320352554321289
    5. '```' → logprob: -3.445352554321289
    6. ']' → logprob: -3.570352554321289
    7. '[
' → logprob: -4.195352554321289
    8. '   ' → logprob: -4.445352554321289
    9. '=' → logprob: -4.820352554321289
    10. '[k' → logprob: -4.820352554321289

Token 875: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7050949335098267
    2. ' A' → logprob: -1.7050949335098267
    3. 'B' → logprob: -1.9550949335098267
    4. ' B' → logprob: -2.080094814300537
    5. ' (' → logprob: -3.455094814300537
    6. 'i' → logprob: -4.955094814300537
    7. ' i' → logprob: -5.080094814300537
    8. '(' → logprob: -5.455094814300537
    9. 'k' → logprob: -6.580094814300537
    10. '(i' → logprob: -6.580094814300537

Token 876: '*(' (ID: 14793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49323657155036926
    2. ')' → logprob: -1.8682365417480469
    3. '[i' → logprob: -2.368236541748047
    4. '_' → logprob: -3.743236541748047
    5. '[k' → logprob: -3.743236541748047
    6. ']' → logprob: -3.868236541748047
    7. '```' → logprob: -3.993236541748047
    8. '+' → logprob: -4.618236541748047
    9. '=' → logprob: -5.118236541748047
    10. '[
' → logprob: -5.118236541748047

Token 877: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14019308984279633
    2. 'B' → logprob: -2.890192985534668
    3. '(' → logprob: -3.640192985534668
    4. '1' → logprob: -4.765192985534668
    5. '(A' → logprob: -4.890192985534668
    6. '(-' → logprob: -5.140192985534668
    7. '-' → logprob: -5.265192985534668
    8. ' (' → logprob: -5.265192985534668
    9. ' A' → logprob: -5.390192985534668
    10. '-A' → logprob: -5.640192985534668

Token 878: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.468058705329895
    2. '-' → logprob: -1.218058705329895
    3. ' -' → logprob: -2.5930585861206055
    4. '+' → logprob: -7.2180585861206055
    5. '-k' → logprob: -7.2180585861206055
    6. ' )' → logprob: -7.7180585861206055
    7. '*' → logprob: -8.093058586120605
    8. '-)' → logprob: -8.093058586120605
    9. '))' → logprob: -9.218058586120605
    10. ' +' → logprob: -9.718058586120605

Token 879: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.003225837368518114
    2. ' B' → logprob: -6.003225803375244
    3. '(B' → logprob: -7.753225803375244
    4. '(' → logprob: -8.753226280212402
    5. '1' → logprob: -9.503226280212402
    6. ' (' → logprob: -10.378226280212402
    7. ')' → logprob: -10.628226280212402
    8. '0' → logprob: -12.003226280212402
    9. 'Bk' → logprob: -12.003226280212402
    10. '(-' → logprob: -12.378226280212402

Token 880: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00011987409379798919
    2. '_i' → logprob: -9.250120162963867
    3. '```' → logprob: -11.250120162963867
    4. '[k' → logprob: -12.625120162963867
    5. ')_' → logprob: -13.000120162963867
    6. 'k' → logprob: -13.500120162963867
    7. ')' → logprob: -14.250120162963867
    8. ''_' → logprob: -14.375120162963867
    9. '_j' → logprob: -14.625120162963867
    10. '[' → logprob: -15.000120162963867

Token 881: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03547467291355133
    2. '[i' → logprob: -4.41047477722168
    3. '[' → logprob: -4.66047477722168
    4. '[k' → logprob: -5.78547477722168
    5. ']' → logprob: -6.28547477722168
    6. 'k' → logprob: -6.28547477722168
    7. '_k' → logprob: -6.41047477722168
    8. '```' → logprob: -7.41047477722168
    9. '#' → logprob: -7.53547477722168
    10. '-' → logprob: -7.66047477722168

Token 882: '       ' (ID: 309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4186607599258423
    2. '[' → logprob: -1.5436607599258423
    3. '       ' → logprob: -3.2936606407165527
    4. '\' → logprob: -3.7936606407165527
    5. '   ' → logprob: -3.9186606407165527
    6. ')' → logprob: -5.168660640716553
    7. ':' → logprob: -5.168660640716553
    8. '\t' → logprob: -5.668660640716553
    9. '(' → logprob: -5.793660640716553
    10. '=' → logprob: -5.918660640716553

Token 883: ' #' (ID: 1069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34558531641960144
    2. '       ' → logprob: -2.220585346221924
    3. '[' → logprob: -2.720585346221924
    4. '   ' → logprob: -4.095585346221924
    5. '\' → logprob: -4.220585346221924
    6. 'i' → logprob: -4.720585346221924
    7. ':' → logprob: -4.720585346221924
    8. '(' → logprob: -4.720585346221924
    9. '```' → logprob: -4.845585346221924
    10. ')' → logprob: -5.095585346221924

Token 884: ' Let's' (ID: 41021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2773181200027466
    2. '_' → logprob: -1.9023181200027466
    3. '[' → logprob: -2.027318000793457
    4. ')' → logprob: -2.402318000793457
    5. '       ' → logprob: -2.652318000793457
    6. ']' → logprob: -3.027318000793457
    7. '(' → logprob: -3.152318000793457
    8. 'for' → logprob: -3.777318000793457
    9. '[
' → logprob: -3.902318000793457
    10. '[i' → logprob: -3.902318000793457

Token 885: ' build' (ID: 3024)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7422493100166321
    2. ' define' → logprob: -1.6172492504119873
    3. 'continue' → logprob: -2.2422492504119873
    4. ' add' → logprob: -2.3672492504119873
    5. 'define' → logprob: -2.9922492504119873
    6. ' implement' → logprob: -3.8672492504119873
    7. 'def' → logprob: -4.242249488830566
    8. 'implement' → logprob: -5.117249488830566
    9. 'add' → logprob: -5.367249488830566
    10. ' def' → logprob: -5.867249488830566

Token 886: ' lines' (ID: 8698)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.1715420484542847
    2. '[]' → logprob: -1.7965420484542847
    3. ' lines' → logprob: -2.296542167663574
    4. '[
' → logprob: -2.546542167663574
    5. 'dp' → logprob: -2.546542167663574
    6. '[' → logprob: -3.421542167663574
    7. 'lines' → logprob: -3.546542167663574
    8. 'from' → logprob: -3.921542167663574
    9. ' dp' → logprob: -3.921542167663574
    10. '   ' → logprob: -4.296542167663574

Token 887: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4536845684051514
    2. '_' → logprob: -1.5786845684051514
    3. ':' → logprob: -2.3286845684051514
    4. '   ' → logprob: -2.4536845684051514
    5. '[' → logprob: -2.7036845684051514
    6. '#' → logprob: -3.4536845684051514
    7. ' =' → logprob: -3.7036845684051514
    8. '```' → logprob: -3.8286845684051514
    9. 'd' → logprob: -3.9536845684051514
    10. '.' → logprob: -4.0786848068237305

Token 888: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1908818483352661
    2. '```' → logprob: -1.3158818483352661
    3. '   ' → logprob: -3.0658817291259766
    4. ')' → logprob: -3.3158817291259766
    5. 'from' → logprob: -3.3158817291259766
    6. '`' → logprob: -3.3158817291259766
    7. '(' → logprob: -3.9408817291259766
    8. '[' → logprob: -3.9408817291259766
    9. 'import' → logprob: -4.065881729125977
    10. ' for' → logprob: -4.065881729125977

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23235154151916504
    2. ' =' → logprob: -1.982351541519165
    3. '(' → logprob: -3.607351541519165
    4. '[' → logprob: -4.732351303100586
    5. ' (' → logprob: -5.732351303100586
    6. '<|end|>' → logprob: -5.732351303100586
    7. '(i' → logprob: -5.857351303100586
    8. '[i' → logprob: -6.232351303100586
    9. '```' → logprob: -6.232351303100586
    10. ',' → logprob: -6.232351303100586

Token 890: ' m' (ID: 284)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2792872190475464
    2. 'm' → logprob: -2.779287338256836
    3. 'dp' → logprob: -3.029287338256836
    4. 'lambda' → logprob: -3.404287338256836
    5. '-m' → logprob: -4.029287338256836
    6. 'mx' → logprob: -4.654287338256836
    7. 'A' → logprob: -4.654287338256836
    8. 'prefix' → logprob: -4.904287338256836
    9. '(-' → logprob: -5.154287338256836
    10. 'i' → logprob: -5.154287338256836

Token 891: '*x' (ID: 46987)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767986178398132
    2. ' =' → logprob: -1.826798677444458
    3. 'i' → logprob: -2.826798677444458
    4. ')' → logprob: -3.576798677444458
    5. 'x' → logprob: -3.576798677444458
    6. ' *' → logprob: -3.826798677444458
    7. ' (' → logprob: -4.076798439025879
    8. '*' → logprob: -4.201798439025879
    9. ' i' → logprob: -4.201798439025879
    10. '(' → logprob: -4.451798439025879

Token 892: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8973461389541626
    2. ')' → logprob: -1.8973461389541626
    3. '+' → logprob: -2.522346019744873
    4. '(' → logprob: -2.647346019744873
    5. '*' → logprob: -2.647346019744873
    6. '[' → logprob: -3.147346019744873
    7. ' +' → logprob: -3.272346019744873
    8. ' =' → logprob: -3.522346019744873
    9. '{' → logprob: -4.147346019744873
    10. '[i' → logprob: -4.522346019744873

Token 893: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023500990122556686
    2. 'c' → logprob: -3.773500919342041
    3. 'dp' → logprob: -8.8985013961792
    4. ' b' → logprob: -9.6485013961792
    5. ' ' → logprob: -10.2735013961792
    6. ' c' → logprob: -12.6485013961792
    7. '
' → logprob: -12.6485013961792
    8. 'q' → logprob: -12.6485013961792
    9. '   ' → logprob: -12.8985013961792
    10. '```' → logprob: -13.1485013961792

Token 894: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.950182557106018
    2. '\n' → logprob: -1.950182557106018
    3. ')' → logprob: -2.3251824378967285
    4. '(' → logprob: -2.3251824378967285
    5. '[i' → logprob: -2.5751824378967285
    6. '   ' → logprob: -2.7001824378967285
    7. '=' → logprob: -2.9501824378967285
    8. '(i' → logprob: -3.3251824378967285
    9. '```' → logprob: -3.4501824378967285
    10. 'i' → logprob: -3.5751824378967285

Token 895: ' m' (ID: 284)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3876258134841919
    2. 'prefix' → logprob: -2.0126256942749023
    3. ' B' → logprob: -2.8876256942749023
    4. 'k' → logprob: -3.0126256942749023
    5. '(prefix' → logprob: -4.012625694274902
    6. ' prefix' → logprob: -4.262625694274902
    7. 'A' → logprob: -5.137625694274902
    8. 'dp' → logprob: -5.262625694274902
    9. 'j' → logprob: -5.262625694274902
    10. 'i' → logprob: -5.512625694274902

Token 896: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09698917716741562
    2. ' =' → logprob: -2.471989154815674
    3. '<|end|>' → logprob: -5.846989154815674
    4. ')' → logprob: -6.471989154815674
    5. '```' → logprob: -7.221989154815674
    6. ',' → logprob: -7.471989154815674
    7. '=k' → logprob: -7.971989154815674
    8. '+' → logprob: -8.221989631652832
    9. '<|end|>' → logprob: -8.846989631652832
    10. '*' → logprob: -8.971989631652832

Token 897: '_k' (ID: 11637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5366025567054749
    2. '[k' → logprob: -1.53660249710083
    3. ')' → logprob: -3.16160249710083
    4. '[
' → logprob: -3.53660249710083
    5. '[i' → logprob: -3.78660249710083
    6. '_k' → logprob: -3.91160249710083
    7. ']' → logprob: -4.03660249710083
    8. '_j' → logprob: -4.16160249710083
    9. '```' → logprob: -4.53660249710083
    10. '[j' → logprob: -5.41160249710083

Token 898: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6012048125267029
    2. '[' → logprob: -1.9762048721313477
    3. '_' → logprob: -2.7262048721313477
    4. '=' → logprob: -2.9762048721313477
    5. ':' → logprob: -3.2262048721313477
    6. 'i' → logprob: -3.6012048721313477
    7. ')' → logprob: -3.7262048721313477
    8. '+' → logprob: -4.101204872131348
    9. '   ' → logprob: -4.226204872131348
    10. '#' → logprob: -4.851204872131348

Token 899: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4626557528972626
    2. 'c' → logprob: -1.337655782699585
    3. 'x' → logprob: -2.712655782699585
    4. ' x' → logprob: -3.712655782699585
    5. '```' → logprob: -5.587655544281006
    6. ')' → logprob: -5.587655544281006
    7. '`' → logprob: -6.837655544281006
    8. 'n' → logprob: -7.087655544281006
    9. ' y' → logprob: -7.212655544281006
    10. '    ' → logprob: -7.212655544281006

Token 900: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3180569112300873
    2. ' =' → logprob: -1.3180569410324097
    3. ')' → logprob: -6.818057060241699
    4. '```' → logprob: -7.068057060241699
    5. '=-' → logprob: -7.443057060241699
    6. '=k' → logprob: -7.568057060241699
    7. ',' → logprob: -8.6930570602417
    8. '`' → logprob: -8.8180570602417
    9. ':' → logprob: -9.0680570602417
    10. 'dp' → logprob: -9.0680570602417

Token 901: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003461444517597556
    2. ' dp' → logprob: -6.1284613609313965
    3. '-d' → logprob: -7.0034613609313965
    4. '-' → logprob: -9.253461837768555
    5. '`' → logprob: -9.878461837768555
    6. '(dp' → logprob: -10.128461837768555
    7. ' -' → logprob: -10.378461837768555
    8. '```' → logprob: -10.503461837768555
    9. 'd' → logprob: -10.628461837768555
    10. '	dp' → logprob: -11.003461837768555

Token 902: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.47211185097694397
    2. ')' → logprob: -1.5971118211746216
    3. '[' → logprob: -2.472111940383911
    4. '_k' → logprob: -3.097111940383911
    5. '[i' → logprob: -4.472111701965332
    6. '[m' → logprob: -5.222111701965332
    7. '```' → logprob: -5.722111701965332
    8. '=' → logprob: -5.972111701965332
    9. 'k' → logprob: -6.097111701965332
    10. ' =' → logprob: -6.347111701965332

Token 903: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7059009075164795
    2. '[k' → logprob: -1.4559009075164795
    3. '-' → logprob: -2.7059009075164795
    4. ' -' → logprob: -2.9559009075164795
    5. '-k' → logprob: -3.4559009075164795
    6. ')' → logprob: -3.4559009075164795
    7. '[' → logprob: -3.5809009075164795
    8. '[i' → logprob: -4.205901145935059
    9. ']-' → logprob: -4.705901145935059
    10. '_k' → logprob: -4.955901145935059

Token 904: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8918448686599731
    2. '_' → logprob: -1.6418448686599731
    3. '=' → logprob: -2.5168447494506836
    4. '(' → logprob: -2.6418447494506836
    5. ')' → logprob: -2.7668447494506836
    6. ':' → logprob: -3.6418447494506836
    7. 'def' → logprob: -3.6418447494506836
    8. '.' → logprob: -4.141844749450684
    9. '+' → logprob: -4.391844749450684
    10. '\' → logprob: -4.516844749450684

Token 905: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0027816968504339457
    2. ' B' → logprob: -6.127781867980957
    3. '(B' → logprob: -8.002781867980957
    4. 'prefix' → logprob: -8.502781867980957
    5. '   ' → logprob: -11.127781867980957
    6. '(' → logprob: -11.252781867980957
    7. 'm' → logprob: -11.752781867980957
    8. ' (' → logprob: -12.377781867980957
    9. '(prefix' → logprob: -12.627781867980957
    10. ' prefix' → logprob: -13.252781867980957

Token 906: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0002574057725723833
    2. 'k' → logprob: -8.50025749206543
    3. '_i' → logprob: -10.75025749206543
    4. '[k' → logprob: -11.25025749206543
    5. '_j' → logprob: -12.37525749206543
    6. '```' → logprob: -13.50025749206543
    7. '
' → logprob: -13.62525749206543
    8. '\' → logprob: -13.75025749206543
    9. ''_' → logprob: -14.25025749206543
    10. '_prefix' → logprob: -14.37525749206543

Token 907: '*k' (ID: 81061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4592280387878418
    2. '[i' → logprob: -1.4592280387878418
    3. '[' → logprob: -1.9592280387878418
    4. ')' → logprob: -2.209228038787842
    5. '=' → logprob: -2.834228038787842
    6. '```' → logprob: -3.959228038787842
    7. '*(' → logprob: -3.959228038787842
    8. 'def' → logprob: -4.084228038787842
    9. '_' → logprob: -4.084228038787842
    10. '[
' → logprob: -4.459228038787842

Token 908: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9198434352874756
    2. '       ' → logprob: -1.4198434352874756
    3. '(' → logprob: -2.4198434352874756
    4. ' =' → logprob: -3.2948434352874756
    5. 'def' → logprob: -3.4198434352874756
    6. '(
' → logprob: -3.4198434352874756
    7. '\' → logprob: -3.6698434352874756
    8. '\n' → logprob: -4.294843673706055
    9. '    ' → logprob: -4.544843673706055
    10. '(n' → logprob: -4.669843673706055

Token 909: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.521195411682129
    2. '   ' → logprob: -1.646195411682129
    3. '       ' → logprob: -2.271195411682129
    4. '[' → logprob: -2.271195411682129
    5. '`' → logprob: -3.021195411682129
    6. '(
' → logprob: -3.021195411682129
    7. ' =' → logprob: -3.146195411682129
    8. '_' → logprob: -3.271195411682129
    9. '```' → logprob: -3.521195411682129
    10. '[
' → logprob: -3.896195411682129

Token 910: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2734605669975281
    2. '   ' → logprob: -2.273460626602173
    3. ')' → logprob: -4.148460388183594
    4. ' for' → logprob: -4.273460388183594
    5. 'i' → logprob: -4.398460388183594
    6. '```' → logprob: -4.648460388183594
    7. 'for' → logprob: -4.773460388183594
    8. '\' → logprob: -5.148460388183594
    9. '\n' → logprob: -5.148460388183594
    10. '(' → logprob: -5.273460388183594

Token 911: ' At' (ID: 3604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5049076080322266
    2. '   ' → logprob: -1.6299076080322266
    3. '(' → logprob: -2.5049076080322266
    4. '(
' → logprob: -2.8799076080322266
    5. 'class' → logprob: -3.1299076080322266
    6. ' =' → logprob: -3.1299076080322266
    7. '=' → logprob: -3.3799076080322266
    8. 'def' → logprob: -3.6299076080322266
    9. '`' → logprob: -3.8799076080322266
    10. '"' → logprob: -4.004907608032227

Token 912: ' dp' (ID: 21546)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2604549825191498
    2. 'i' → logprob: -1.5104550123214722
    3. 'each' → logprob: -5.885455131530762
    4. ' x' → logprob: -6.760455131530762
    5. 'point' → logprob: -6.760455131530762
    6. '=' → logprob: -7.010455131530762
    7. 'query' → logprob: -7.760455131530762
    8. ' i' → logprob: -7.885455131530762
    9. ')' → logprob: -8.260455131530762
    10. ' each' → logprob: -8.635455131530762

Token 913: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31496113538742065
    2. '[i' → logprob: -1.3149611949920654
    3. '[' → logprob: -6.939960956573486
    4. ' i' → logprob: -8.189961433410645
    5. ']' → logprob: -8.814961433410645
    6. '_i' → logprob: -9.439961433410645
    7. '   ' → logprob: -10.064961433410645
    8. ' [' → logprob: -10.189961433410645
    9. '       ' → logprob: -10.314961433410645
    10. 'index' → logprob: -10.939961433410645

Token 914: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5040454268455505
    2. '[i' → logprob: -1.5040454864501953
    3. '[' → logprob: -2.1290454864501953
    4. '=' → logprob: -4.754045486450195
    5. '   ' → logprob: -4.754045486450195
    6. ' =' → logprob: -5.254045486450195
    7. '[
' → logprob: -5.254045486450195
    8. '][' → logprob: -5.629045486450195
    9. 'i' → logprob: -5.629045486450195
    10. ']=' → logprob: -5.754045486450195

Token 915: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018314877524971962
    2. 'i' → logprob: -4.768314838409424
    3. ' x' → logprob: -4.768314838409424
    4. 'A' → logprob: -7.518314838409424
    5. 'query' → logprob: -9.018315315246582
    6. ' i' → logprob: -9.143315315246582
    7. '   ' → logprob: -9.643315315246582
    8. ' A' → logprob: -10.143315315246582
    9. 'prefix' → logprob: -10.143315315246582
    10. 'B' → logprob: -10.268315315246582

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.732435405254364
    2. ' =' → logprob: -0.732435405254364
    3. '=i' → logprob: -3.357435464859009
    4. 'i' → logprob: -5.73243522644043
    5. ' i' → logprob: -7.98243522644043
    6. ')' → logprob: -10.35743522644043
    7. '   ' → logprob: -10.85743522644043
    8. ' ' → logprob: -10.98243522644043
    9. '[i' → logprob: -11.60743522644043
    10. '`' → logprob: -11.73243522644043

Token 917: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005265804938971996
    2. 'prefix' → logprob: -7.875526428222656
    3. ' i' → logprob: -9.375526428222656
    4. 'A' → logprob: -10.250526428222656
    5. '   ' → logprob: -11.000526428222656
    6. 'n' → logprob: -13.625526428222656
    7. ' prefix' → logprob: -13.625526428222656
    8. '(i' → logprob: -13.750526428222656
    9. ' ' → logprob: -14.125526428222656
    10. '  ' → logprob: -14.500526428222656

Token 918: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.234823077917099
    2. ' lines' → logprob: -2.609822988510132
    3. ' =' → logprob: -3.609822988510132
    4. 'dp' → logprob: -3.734822988510132
    5. '   ' → logprob: -3.859822988510132
    6. ')' → logprob: -4.609823226928711
    7. 'conv' → logprob: -4.734823226928711
    8. '```' → logprob: -5.359823226928711
    9. '=' → logprob: -5.484823226928711
    10. ']' → logprob: -5.734823226928711

Token 919: ' value' (ID: 1432)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.513498842716217
    2. 'y' → logprob: -2.6384987831115723
    3. ' prefix' → logprob: -3.1384987831115723
    4. 'prefix' → logprob: -3.1384987831115723
    5. ' A' → logprob: -3.2634987831115723
    6. '       ' → logprob: -3.5134987831115723
    7. ' lines' → logprob: -3.7634987831115723
    8. 'x' → logprob: -3.8884987831115723
    9. 'B' → logprob: -4.388498783111572
    10. ')' → logprob: -4.513498783111572

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6138427257537842
    2. ')' → logprob: -1.4888427257537842
    3. '+' → logprob: -2.113842725753784
    4. ' =' → logprob: -2.738842725753784
    5. ':' → logprob: -4.363842964172363
    6. '(' → logprob: -5.488842964172363
    7. '```' → logprob: -5.863842964172363
    8. '[' → logprob: -6.113842964172363
    9. '(
' → logprob: -6.488842964172363
    10. '**' → logprob: -6.488842964172363

Token 921: ' line' (ID: 2543)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7457077503204346
    2. 'A' → logprob: -1.4957077503204346
    3. 'prefix' → logprob: -2.1207077503204346
    4. ' dp' → logprob: -2.7457077503204346
    5. ' prefix' → logprob: -3.6207077503204346
    6. '(prefix' → logprob: -3.8707077503204346
    7. ' A' → logprob: -3.8707077503204346
    8. ' (' → logprob: -4.1207075119018555
    9. '(dp' → logprob: -4.4957075119018555
    10. 'i' → logprob: -4.8707075119018555

Token 922: '(x' (ID: 4061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7383562326431274
    2. '[i' → logprob: -2.113356113433838
    3. '.evaluate' → logprob: -2.238356113433838
    4. '.eval' → logprob: -2.863356113433838
    5. '.query' → logprob: -3.113356113433838
    6. ')' → logprob: -3.238356113433838
    7. '(i' → logprob: -3.738356113433838
    8. '.value' → logprob: -3.738356113433838
    9. '.' → logprob: -3.738356113433838
    10. '.get' → logprob: -4.363356113433838

Token 923: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033268341794610023
    2. ')+' → logprob: -6.878326892852783
    3. ' )' → logprob: -7.128326892852783
    4. '=' → logprob: -7.753326892852783
    5. ')
' → logprob: -8.003326416015625
    6. '[i' → logprob: -8.878326416015625
    7. '+' → logprob: -9.003326416015625
    8. '))' → logprob: -9.503326416015625
    9. ' +' → logprob: -9.753326416015625
    10. ')*' → logprob: -10.503326416015625

Token 924: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10217992961406708
    2. ' =' → logprob: -3.227180004119873
    3. '```' → logprob: -4.227180004119873
    4. '=' → logprob: -4.727180004119873
    5. '   ' → logprob: -4.852180004119873
    6. ')' → logprob: -5.602180004119873
    7. ' lines' → logprob: -5.602180004119873
    8. ':' → logprob: -5.977180004119873
    9. ' +' → logprob: -6.352180004119873
    10. '+' → logprob: -6.602180004119873

Token 925: ' i' (ID: 575)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5547013878822327
    2. 'i' → logprob: -1.554701328277588
    3. 'A' → logprob: -1.929701328277588
    4. '(prefix' → logprob: -3.054701328277588
    5. '(i' → logprob: -4.929701328277588
    6. ' prefix' → logprob: -5.429701328277588
    7. 'x' → logprob: -5.929701328277588
    8. ' (' → logprob: -6.179701328277588
    9. '(A' → logprob: -6.554701328277588
    10. ' i' → logprob: -6.929701328277588

Token 926: '*A' (ID: 166365)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8049479722976685
    2. '(' → logprob: -2.304947853088379
    3. '+' → logprob: -2.429947853088379
    4. '\n' → logprob: -2.804947853088379
    5. '=' → logprob: -3.179947853088379
    6. '0' → logprob: -3.554947853088379
    7. '\' → logprob: -3.929947853088379
    8. '(
' → logprob: -3.929947853088379
    9. '```' → logprob: -3.929947853088379
    10. ':' → logprob: -4.054947853088379

Token 927: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036238234490156174
    2. '```' → logprob: -4.911238193511963
    3. '           ' → logprob: -5.161238193511963
    4. '   ' → logprob: -5.286238193511963
    5. '\n' → logprob: -5.536238193511963
    6. '
' → logprob: -5.911238193511963
    7. ')' → logprob: -6.661238193511963
    8. ' =' → logprob: -6.911238193511963
    9. '\' → logprob: -6.911238193511963
    10. '`' → logprob: -7.036238193511963

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5274100303649902
    2. '   ' → logprob: -2.0274100303649902
    3. '\n' → logprob: -2.7774100303649902
    4. '\' → logprob: -3.2774100303649902
    5. '```' → logprob: -3.2774100303649902
    6. '[
' → logprob: -4.40241003036499
    7. ':' → logprob: -4.52741003036499
    8. ' =' → logprob: -4.77741003036499
    9. '(' → logprob: -4.77741003036499
    10. 'from' → logprob: -4.77741003036499

Token 929: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20522284507751465
    2. '   ' → logprob: -2.7052228450775146
    3. '
' → logprob: -3.7052228450775146
    4. '`' → logprob: -3.9552228450775146
    5. ' 
' → logprob: -4.205223083496094
    6. '\' → logprob: -4.830223083496094
    7. '        
' → logprob: -5.330223083496094
    8. ' \' → logprob: -5.455223083496094
    9. '\n' → logprob: -5.580223083496094
    10. '"' → logprob: -5.705223083496094

Token 930: ' So' (ID: 2632)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5958560109138489
    2. 'from' → logprob: -0.9708560109138489
    3. 'lines' → logprob: -2.970855951309204
    4. 'conv' → logprob: -5.095856189727783
    5. 'ch' → logprob: -5.720856189727783
    6. 'cht' → logprob: -5.845856189727783
    7. 'dp' → logprob: -6.345856189727783
    8. '   ' → logprob: -7.220856189727783
    9. 'import' → logprob: -7.470856189727783
    10. '```' → logprob: -7.595856189727783

Token 931: ' we' (ID: 581)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3740794360637665
    2. 'from' → logprob: -1.6240794658660889
    3. 'h' → logprob: -2.999079465866089
    4. '   ' → logprob: -3.499079465866089
    5. 'cht' → logprob: -4.12407922744751
    6. 'lines' → logprob: -4.87407922744751
    7. '
' → logprob: -5.99907922744751
    8. 'ch' → logprob: -6.49907922744751
    9. ' class' → logprob: -6.49907922744751
    10. 'import' → logprob: -6.62407922744751

Token 932: ' maintain' (ID: 12930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8015126585960388
    2. ' need' → logprob: -1.3015127182006836
    3. ' continue' → logprob: -3.4265127182006836
    4. ' add' → logprob: -3.4265127182006836
    5. '#' → logprob: -3.8015127182006836
    6. ' will' → logprob: -3.9265127182006836
    7. '=' → logprob: -3.9265127182006836
    8. 'need' → logprob: -3.9265127182006836
    9. '.append' → logprob: -4.051512718200684
    10. '
' → logprob: -4.301512718200684

Token 933: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.31243133544921875
    2. 'a' → logprob: -1.5624313354492188
    3. 'class' → logprob: -3.1874313354492188
    4. '[]' → logprob: -5.312431335449219
    5. '[
' → logprob: -6.062431335449219
    6. ' lines' → logprob: -6.062431335449219
    7. 'the' → logprob: -6.062431335449219
    8. 'from' → logprob: -6.312431335449219
    9. ' a' → logprob: -6.812431335449219
    10. '[(' → logprob: -7.562431335449219

Token 934: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8250083923339844
    2. '=' → logprob: -1.4500083923339844
    3. '[' → logprob: -2.3250083923339844
    4. '```' → logprob: -2.8250083923339844
    5. '(' → logprob: -3.3250083923339844
    6. '   ' → logprob: -3.5750083923339844
    7. '[
' → logprob: -3.5750083923339844
    8. 'def' → logprob: -3.8250083923339844
    9. '`' → logprob: -4.450008392333984
    10. ':' → logprob: -4.575008392333984

Token 935: ' slope' (ID: 56134)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13610514998435974
    2. 'B' → logprob: -2.1361050605773926
    3. 's' → logprob: -5.011105060577393
    4. 'sl' → logprob: -7.511105060577393
    5. 'prefix' → logprob: -7.511105060577393
    6. '(m' → logprob: -7.636105060577393
    7. 'M' → logprob: -8.38610553741455
    8. ' slopes' → logprob: -9.26110553741455
    9. '(B' → logprob: -9.38610553741455
    10. '```' → logprob: -9.76110553741455

Token 936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02128927782177925
    2. '=B' → logprob: -5.021289348602295
    3. ' =' → logprob: -5.146289348602295
    4. '+' → logprob: -5.646289348602295
    5. 'B' → logprob: -6.146289348602295
    6. 's' → logprob: -7.271289348602295
    7. '(B' → logprob: -7.771289348602295
    8. '+=' → logprob: -7.771289348602295
    9. '=
' → logprob: -8.771288871765137
    10. '```' → logprob: -8.896288871765137

Token 937: ' B' (ID: 418)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.30034565925598145
    2. '(prefix' → logprob: -1.6753456592559814
    3. '-(' → logprob: -3.0503456592559814
    4. 'B' → logprob: -4.550345420837402
    5. ' prefix' → logprob: -5.425345420837402
    6. ' (' → logprob: -5.800345420837402
    7. '-prefix' → logprob: -6.050345420837402
    8. '-' → logprob: -6.425345420837402
    9. '(B' → logprob: -6.800345420837402
    10. ' -(' → logprob: -7.550345420837402

Token 938: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.029818760231137276
    2. '_' → logprob: -4.154818534851074
    3. ')' → logprob: -5.404818534851074
    4. '_i' → logprob: -5.779818534851074
    5. '_j' → logprob: -6.154818534851074
    6. '+' → logprob: -7.279818534851074
    7. '[' → logprob: -7.404818534851074
    8. '[k' → logprob: -7.529818534851074
    9. 'k' → logprob: -7.779818534851074
    10. ')_' → logprob: -8.029818534851074

Token 939: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7397179007530212
    2. '[' → logprob: -1.239717960357666
    3. ',' → logprob: -2.864717960357666
    4. '+' → logprob: -3.114717960357666
    5. '_' → logprob: -3.364717960357666
    6. '(' → logprob: -3.739717960357666
    7. ' =' → logprob: -3.989717960357666
    8. '*' → logprob: -4.614717960357666
    9. ')' → logprob: -5.114717960357666
    10. '#' → logprob: -5.114717960357666

Token 940: ' intercept' (ID: 61339)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.013719022274017334
    2. '-inter' → logprob: -4.513719081878662
    3. ' intercept' → logprob: -6.388719081878662
    4. 'c' → logprob: -7.013719081878662
    5. 'Intercept' → logprob: -10.388718605041504
    6. 'y' → logprob: -10.513718605041504
    7. '_inter' → logprob: -11.013718605041504
    8. '(inter' → logprob: -12.763718605041504
    9. 'const' → logprob: -13.513718605041504
    10. '-c' → logprob: -13.513718605041504

Token 941: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07915349304676056
    2. ' =' → logprob: -2.579153537750244
    3. '=c' → logprob: -9.579153060913086
    4. '=k' → logprob: -9.579153060913086
    5. '`' → logprob: -11.204153060913086
    6. '=`' → logprob: -11.204153060913086
    7. '=
' → logprob: -11.579153060913086
    8. '='' → logprob: -11.579153060913086
    9. 'c' → logprob: -11.704153060913086
    10. '=lambda' → logprob: -11.704153060913086

Token 942: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010230550542473793
    2. ' dp' → logprob: -4.760230541229248
    3. '(dp' → logprob: -6.510230541229248
    4. '   ' → logprob: -9.760231018066406
    5. '(' → logprob: -11.260231018066406
    6. ' (' → logprob: -11.385231018066406
    7. ' ' → logprob: -11.635231018066406
    8. '	dp' → logprob: -11.885231018066406
    9. '-' → logprob: -12.385231018066406
    10. '(-' → logprob: -12.385231018066406

Token 943: '[k' (ID: 14298)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0611594058573246
    2. '[k' → logprob: -3.061159372329712
    3. '_lines' → logprob: -5.436159610748291
    4. 'k' → logprob: -6.061159610748291
    5. '[i' → logprob: -6.936159610748291
    6. '```' → logprob: -6.936159610748291
    7. '[' → logprob: -7.186159610748291
    8. '_i' → logprob: -7.561159610748291
    9. ')' → logprob: -8.686159133911133
    10. '   ' → logprob: -8.811159133911133

Token 944: ']' (ID: 60)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.4730567932128906
    2. '-k' → logprob: -1.8480567932128906
    3. ' -' → logprob: -2.0980567932128906
    4. '-' → logprob: -3.0980567932128906
    5. '[k' → logprob: -3.4730567932128906
    6. 'k' → logprob: -4.348056793212891
    7. '*k' → logprob: -7.098056793212891
    8. '*' → logprob: -7.098056793212891
    9. '       ' → logprob: -7.223056793212891
    10. ']' → logprob: -7.223056793212891

Token 945: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6887893080711365
    2. '_k' → logprob: -1.1887893676757812
    3. ' +' → logprob: -3.3137893676757812
    4. '-' → logprob: -3.4387893676757812
    5. '-k' → logprob: -3.8137893676757812
    6. '[k' → logprob: -3.9387893676757812
    7. 'k' → logprob: -4.688789367675781
    8. '[i' → logprob: -4.813789367675781
    9. ')' → logprob: -4.938789367675781
    10. '[' → logprob: -5.063789367675781

Token 946: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019801415037363768
    2. ' B' → logprob: -6.251980304718018
    3. '(B' → logprob: -10.12697982788086
    4. '(' → logprob: -12.25197982788086
    5. ' (' → logprob: -12.50197982788086
    6. 'k' → logprob: -13.62697982788086
    7. '   ' → logprob: -14.00197982788086
    8. ' ' → logprob: -15.00197982788086
    9. 'Bk' → logprob: -15.12697982788086
    10. '```' → logprob: -16.37697982788086

Token 947: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -3.7697225252486533e-06
    2. 'k' → logprob: -13.125003814697266
    3. '_i' → logprob: -13.750003814697266
    4. '[k' → logprob: -16.125003814697266
    5. '_' → logprob: -16.250003814697266
    6. '*k' → logprob: -16.875003814697266
    7. '*_' → logprob: -17.000003814697266
    8. '(k' → logprob: -17.125003814697266
    9. '
' → logprob: -17.250003814697266
    10. '_j' → logprob: -17.250003814697266

Token 948: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.001332263695076108
    2. 'k' → logprob: -7.5013322830200195
    3. '*' → logprob: -7.6263322830200195
    4. '*i' → logprob: -9.00133228302002
    5. ' *' → logprob: -9.12633228302002
    6. '```' → logprob: -10.37633228302002
    7. '*(' → logprob: -11.75133228302002
    8. '_k' → logprob: -12.12633228302002
    9. '**' → logprob: -12.37633228302002
    10. '*x' → logprob: -12.62633228302002

Token 949: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0171326398849487
    2. '   ' → logprob: -1.3921326398849487
    3. 'class' → logprob: -1.7671326398849487
    4. '```' → logprob: -2.2671327590942383
    5. 'def' → logprob: -3.2671327590942383
    6. '``' → logprob: -4.642132759094238
    7. '
' → logprob: -4.767132759094238
    8. ' lines' → logprob: -5.017132759094238
    9. '`' → logprob: -5.017132759094238
    10. '\' → logprob: -5.142132759094238

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.095308318734169
    2. '   ' → logprob: -3.720308303833008
    3. '```' → logprob: -3.970308303833008
    4. '        
' → logprob: -5.220308303833008
    5. '\' → logprob: -5.345308303833008
    6. '\n' → logprob: -5.345308303833008
    7. ' 
' → logprob: -5.595308303833008
    8. '`' → logprob: -5.595308303833008
    9. 'def' → logprob: -5.720308303833008
    10. ' for' → logprob: -5.720308303833008

Token 951: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6942038536071777
    2. '```' → logprob: -1.1942038536071777
    3. '
' → logprob: -2.3192038536071777
    4. 'class' → logprob: -3.1942038536071777
    5. '   ' → logprob: -3.6942038536071777
    6. '``' → logprob: -4.819203853607178
    7. 'def' → logprob: -5.444203853607178
    8. ' lines' → logprob: -5.944203853607178
    9. '`' → logprob: -6.194203853607178
    10. ' for' → logprob: -6.319203853607178

Token 952: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4027833938598633
    2. 'class' → logprob: -1.4027833938598633
    3. '   ' → logprob: -1.7777833938598633
    4. '```' → logprob: -2.6527833938598633
    5. 'def' → logprob: -2.7777833938598633
    6. ' for' → logprob: -3.2777833938598633
    7. 'dp' → logprob: -3.4027833938598633
    8. 'for' → logprob: -3.7777833938598633
    9. '
' → logprob: -3.9027833938598633
    10. ' class' → logprob: -4.527783393859863

Token 953: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.7685506343841553
    2. 'for' → logprob: -1.3935506343841553
    3. 'x' → logprob: -1.6435506343841553
    4. ' for' → logprob: -3.8935506343841553
    5. ' query' → logprob: -3.8935506343841553
    6. 'def' → logprob: -4.268550872802734
    7. ' x' → logprob: -4.893550872802734
    8. 'i' → logprob: -5.643550872802734
    9. 'use' → logprob: -6.018550872802734
    10. 'prefix' → logprob: -6.018550872802734

Token 954: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0257226824760437
    2. '(i' → logprob: -4.775722503662109
    3. ' =' → logprob: -5.150722503662109
    4. ' i' → logprob: -5.275722503662109
    5. '=' → logprob: -6.150722503662109
    6. ' for' → logprob: -7.150722503662109
    7. 'x' → logprob: -7.525722503662109
    8. 'for' → logprob: -7.525722503662109
    9. ')' → logprob: -7.650722503662109
    10. ' (' → logprob: -7.775722503662109

Token 955: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020616286201402545
    2. ' i' → logprob: -8.500205993652344
    3. 'x' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.750205993652344
    5. '=i' → logprob: -15.875205993652344
    6. '`' → logprob: -16.000205993652344
    7. '{i' → logprob: -16.000205993652344
    8. ' ' → logprob: -17.875205993652344
    9. ')i' → logprob: -17.875205993652344
    10. '_i' → logprob: -17.875205993652344

Token 956: '=i' (ID: 48141)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12880770862102509
    2. '=' → logprob: -2.503807783126831
    3. '=i' → logprob: -3.628807783126831
    4. ' =' → logprob: -4.753807544708252
    5. '`' → logprob: -6.378807544708252
    6. ' i' → logprob: -7.253807544708252
    7. '```' → logprob: -7.628807544708252
    8. '   ' → logprob: -8.25380802154541
    9. '[i' → logprob: -8.37880802154541
    10. '_i' → logprob: -8.50380802154541

Token 957: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2790336608886719
    2. '   ' → logprob: -2.279033660888672
    3. '```' → logprob: -3.154033660888672
    4. 'from' → logprob: -3.404033660888672
    5. 'import' → logprob: -4.154033660888672
    6. '       ' → logprob: -4.404033660888672
    7. 'def' → logprob: -4.404033660888672
    8. ' class' → logprob: -5.279033660888672
    9. '
' → logprob: -5.279033660888672
    10. 'dp' → logprob: -5.654033660888672

Token 958: ' get' (ID: 717)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17559053003787994
    2. 'i' → logprob: -3.0505905151367188
    3. ' A' → logprob: -3.5505905151367188
    4. 'x' → logprob: -3.9255905151367188
    5. '0' → logprob: -4.175590515136719
    6. 'prefix' → logprob: -4.675590515136719
    7. ' prefix' → logprob: -5.050590515136719
    8. ')' → logprob: -5.175590515136719
    9. '-' → logprob: -5.425590515136719
    10. 'lambda' → logprob: -5.425590515136719

Token 959: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6763020157814026
    2. 'line' → logprob: -1.6763019561767578
    3. ' dp' → logprob: -1.6763019561767578
    4. ' line' → logprob: -2.801301956176758
    5. 'i' → logprob: -3.801301956176758
    6. ' i' → logprob: -4.926301956176758
    7. 'lines' → logprob: -5.051301956176758
    8. ' lines' → logprob: -5.551301956176758
    9. 'value' → logprob: -5.551301956176758
    10. 'max' → logprob: -6.301301956176758

Token 960: ' line' (ID: 2543)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1036309003829956
    2. '_' → logprob: -1.3536309003829956
    3. '   ' → logprob: -1.8536309003829956
    4. '       ' → logprob: -2.978631019592285
    5. 'def' → logprob: -3.603631019592285
    6. '=' → logprob: -3.603631019592285
    7. ' _' → logprob: -3.978631019592285
    8. '[' → logprob: -4.353631019592285
    9. '```' → logprob: -4.353631019592285
    10. '(' → logprob: -4.478631019592285

Token 961: ' value' (ID: 1432)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23630298674106598
    2. '=' → logprob: -3.3613030910491943
    3. '```' → logprob: -3.8613030910491943
    4. '(' → logprob: -3.9863030910491943
    5. '(
' → logprob: -4.111302852630615
    6. '_' → logprob: -4.236302852630615
    7. 'def' → logprob: -4.361302852630615
    8. '   ' → logprob: -4.361302852630615
    9. '(i' → logprob: -4.611302852630615
    10. '[' → logprob: -4.861302852630615

Token 962: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7866914868354797
    2. '   ' → logprob: -2.036691427230835
    3. ' =' → logprob: -2.036691427230835
    4. 'from' → logprob: -2.536691427230835
    5. '       ' → logprob: -3.411691427230835
    6. '(
' → logprob: -3.786691427230835
    7. '=' → logprob: -3.911691427230835
    8. 'import' → logprob: -4.036691665649414
    9. '```' → logprob: -4.036691665649414
    10. 'def' → logprob: -4.161691665649414

Token 963: ' then' (ID: 1815)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.797056257724762
    2. '+' → logprob: -1.2970561981201172
    3. '       ' → logprob: -2.797056198120117
    4. ' then' → logprob: -3.422056198120117
    5. ' +' → logprob: -3.422056198120117
    6. ' and' → logprob: -3.422056198120117
    7. ' )' → logprob: -4.672056198120117
    8. '+
' → logprob: -4.797056198120117
    9. 'i' → logprob: -4.922056198120117
    10. ' 
' → logprob: -4.922056198120117

Token 964: ' add' (ID: 1147)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6523758172988892
    2. '+' → logprob: -1.2773758172988892
    3. ' dp' → logprob: -2.5273756980895996
    4. ' +' → logprob: -3.2773756980895996
    5. 'result' → logprob: -3.4023756980895996
    6. 'ans' → logprob: -4.0273756980896
    7. 'add' → logprob: -4.9023756980896
    8. 'answer' → logprob: -5.2773756980896
    9. '```' → logprob: -5.5273756980896
    10. ' add' → logprob: -5.9023756980896

Token 965: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1677626520395279
    2. 'A' → logprob: -2.9177627563476562
    3. ' prefix' → logprob: -3.1677627563476562
    4. ' (' → logprob: -3.5427627563476562
    5. ' i' → logprob: -4.167762756347656
    6. 'prefix' → logprob: -5.542762756347656
    7. ' ' → logprob: -5.917762756347656
    8. '+' → logprob: -6.542762756347656
    9. '(A' → logprob: -6.917762756347656
    10. 'i' → logprob: -7.042762756347656

Token 966: '*A' (ID: 166365)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9282025694847107
    2. '`' → logprob: -1.5532026290893555
    3. 'A' → logprob: -2.6782026290893555
    4. '*(' → logprob: -2.6782026290893555
    5. '+' → logprob: -2.8032026290893555
    6. '   ' → logprob: -3.0532026290893555
    7. '```' → logprob: -4.0532026290893555
    8. ' +' → logprob: -4.0532026290893555
    9. '*i' → logprob: -4.3032026290893555
    10. ')' → logprob: -4.4282026290893555

Token 967: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14907027781009674
    2. '   ' → logprob: -2.8990702629089355
    3. ' lines' → logprob: -3.7740702629089355
    4. '```' → logprob: -4.1490702629089355
    5. '
' → logprob: -4.3990702629089355
    6. 'def' → logprob: -5.1490702629089355
    7. '        ' → logprob: -5.5240702629089355
    8. 'lines' → logprob: -5.8990702629089355
    9. '`' → logprob: -6.1490702629089355
    10. '        
' → logprob: -6.1490702629089355

Token 968: ' get' (ID: 717)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7813101410865784
    2. 'complete' → logprob: -1.4063100814819336
    3. 'get' → logprob: -2.2813100814819336
    4. ' dp' → logprob: -2.7813100814819336
    5. ' complete' → logprob: -3.2813100814819336
    6. 'compute' → logprob: -4.031310081481934
    7. 'the' → logprob: -4.281310081481934
    8. 'lines' → logprob: -4.406310081481934
    9. 'line' → logprob: -4.656310081481934
    10. ' get' → logprob: -4.656310081481934

Token 969: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002890944480895996
    2. ' dp' → logprob: -6.1278910636901855
    3. 'the' → logprob: -7.6278910636901855
    4. 'value' → logprob: -9.752890586853027
    5. 'result' → logprob: -9.877890586853027
    6. 'final' → logprob: -10.002890586853027
    7. 'ans' → logprob: -11.002890586853027
    8. 'answer' → logprob: -11.127890586853027
    9. '(dp' → logprob: -12.002890586853027
    10. ' the' → logprob: -12.127890586853027

Token 970: '[i' (ID: 1768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.667636513710022
    2. ' =' → logprob: -1.292636513710022
    3. '   ' → logprob: -2.9176363945007324
    4. 'def' → logprob: -3.5426363945007324
    5. 'class' → logprob: -3.6676363945007324
    6. '
' → logprob: -4.167636394500732
    7. '```' → logprob: -4.167636394500732
    8. 'import' → logprob: -4.792636394500732
    9. '=' → logprob: -4.792636394500732
    10. ' def' → logprob: -4.917636394500732

Token 971: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10733379423618317
    2. '       ' → logprob: -3.1073338985443115
    3. ':' → logprob: -3.7323338985443115
    4. ')
' → logprob: -4.232333660125732
    5. '   ' → logprob: -5.107333660125732
    6. '):' → logprob: -5.857333660125732
    7. '\n' → logprob: -5.982333660125732
    8. ']' → logprob: -5.982333660125732
    9. ':
' → logprob: -6.982333660125732
    10. '[' → logprob: -7.732333660125732

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11162012815475464
    2. '   ' → logprob: -2.9866201877593994
    3. '```' → logprob: -3.9866201877593994
    4. '
' → logprob: -4.48661994934082
    5. ' lines' → logprob: -4.48661994934082
    6. ' for' → logprob: -5.61161994934082
    7. '        
' → logprob: -6.11161994934082
    8. 'for' → logprob: -6.48661994934082
    9. ' 
' → logprob: -7.36161994934082
    10. '`' → logprob: -7.36161994934082

Token 973: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.7367722392082214
    2. '       ' → logprob: -1.4867722988128662
    3. '   ' → logprob: -1.6117722988128662
    4. 'from' → logprob: -3.486772298812866
    5. 'conv' → logprob: -3.736772298812866
    6. '
' → logprob: -4.236772060394287
    7. ' class' → logprob: -4.986772060394287
    8. ' from' → logprob: -5.736772060394287
    9. 'def' → logprob: -5.861772060394287
    10. 'import' → logprob: -5.986772060394287

Token 974: ' Conv' (ID: 52133)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.08784421533346176
    2. 'Conv' → logprob: -2.962844133377075
    3. ' Line' → logprob: -3.712844133377075
    4. ' Conv' → logprob: -5.587844371795654
    5. '_line' → logprob: -6.462844371795654
    6. '_Line' → logprob: -6.837844371795654
    7. 'Deque' → logprob: -7.712844371795654
    8. 'Lines' → logprob: -8.087843894958496
    9. 'Hull' → logprob: -8.212843894958496
    10. 'Li' → logprob: -8.587843894958496

Token 975: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.069664333248511e-05
    2. 'exp' → logprob: -11.125020980834961
    3. '```' → logprob: -12.750020980834961
    4. 'ext' → logprob: -13.625020980834961
    5. 'Hull' → logprob: -14.250020980834961
    6. '   ' → logprob: -15.125020980834961
    7. 'class' → logprob: -15.125020980834961
    8. 'exit' → logprob: -15.750020980834961
    9. '
' → logprob: -15.750020980834961
    10. 'expr' → logprob: -15.875020980834961

Token 976: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -1.4498052223643754e-05
    2. ' hull' → logprob: -11.875014305114746
    3. '
' → logprob: -12.625014305114746
    4. ' Hull' → logprob: -13.750014305114746
    5. 'h' → logprob: -14.125014305114746
    6. 'Line' → logprob: -14.125014305114746
    7. '

' → logprob: -15.125014305114746
    8. '_h' → logprob: -15.625014305114746
    9. 'Container' → logprob: -15.750014305114746
    10. 'HBox' → logprob: -15.750014305114746

Token 977: ':
' (ID: 734)
  Prédit: 'Tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tr' → logprob: -0.0030355898197740316
    2. '_tr' → logprob: -6.378035545349121
    3. ':
' → logprob: -7.503035545349121
    4. ' trick' → logprob: -8.128035545349121
    5. 'tr' → logprob: -9.003035545349121
    6. 'Dynamic' → logprob: -9.253035545349121
    7. ' Trick' → logprob: -9.378035545349121
    8. ':' → logprob: -9.753035545349121
    9. 'Optimization' → logprob: -10.128035545349121
    10. '_Tr' → logprob: -11.128035545349121

Token 978: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7627412676811218
    2. '   ' → logprob: -1.2627413272857666
    3. ':
' → logprob: -1.6377413272857666
    4. '(object' → logprob: -3.7627413272857666
    5. '       ' → logprob: -4.0127410888671875
    6. '
' → logprob: -5.1377410888671875
    7. '```' → logprob: -5.5127410888671875
    8. '():
' → logprob: -7.3877410888671875
    9. '{' → logprob: -7.3877410888671875
    10. '    ' → logprob: -7.5127410888671875

Token 979: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.44822975993156433
    2. '   ' → logprob: -1.0732297897338867
    3. ' def' → logprob: -4.448229789733887
    4. '           ' → logprob: -6.073229789733887
    5. '       ' → logprob: -7.073229789733887
    6. '	def' → logprob: -7.073229789733887
    7. '               ' → logprob: -7.198229789733887
    8. '__' → logprob: -7.573229789733887
    9. '```' → logprob: -7.573229789733887
    10. ' ' → logprob: -7.823229789733887

Token 980: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00021176543668843806
    2. '__' → logprob: -8.500211715698242
    3. '```' → logprob: -12.750211715698242
    4. '_init' → logprob: -13.375211715698242
    5. ' __' → logprob: -13.625211715698242
    6. ' init' → logprob: -13.750211715698242
    7. '`' → logprob: -14.625211715698242
    8. 'append' → logprob: -14.875211715698242
    9. '  ' → logprob: -15.750211715698242
    10. '**' → logprob: -16.250211715698242

Token 981: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'lt' → logprob: -18.0
    3. 'inite' → logprob: -18.375
    4. 'in' → logprob: -18.875
    5. 'int' → logprob: -19.0
    6. 'iter' → logprob: -19.125
    7. 'append' → logprob: -19.375
    8. 'ini' → logprob: -19.5
    9. '`' → logprob: -20.125
    10. ' init' → logprob: -20.25

Token 982: '__(' (ID: 8241)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08981253951787949
    2. '():
' → logprob: -2.4648125171661377
    3. '().__' → logprob: -7.839812755584717
    4. '()' → logprob: -8.214812278747559
    5. ':' → logprob: -9.089812278747559
    6. '(self' → logprob: -10.464812278747559
    7. '():
' → logprob: -10.714812278747559
    8. '()):
' → logprob: -10.964812278747559
    9. '():

' → logprob: -12.339812278747559
    10. '()(' → logprob: -12.464812278747559

Token 983: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42937782406806946
    2. '):
' → logprob: -1.304377794265747
    3. '):' → logprob: -2.804377794265747
    4. ')' → logprob: -4.179378032684326
    5. '[]' → logprob: -7.429378032684326
    6. '[]):' → logprob: -7.554378032684326
    7. 'lambda' → logprob: -8.179377555847168
    8. '   ' → logprob: -9.429377555847168
    9. ').__' → logprob: -9.679377555847168
    10. '=lambda' → logprob: -9.929377555847168

Token 984: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31988954544067383
    2. '):' → logprob: -1.3198895454406738
    3. '():
' → logprob: -5.694889545440674
    4. '()):
' → logprob: -6.444889545440674
    5. ')' → logprob: -7.694889545440674
    6. '():' → logprob: -7.694889545440674
    7. '()' → logprob: -8.569889068603516
    8. '   ' → logprob: -8.819889068603516
    9. '[]):' → logprob: -8.944889068603516
    10. ':' → logprob: -9.194889068603516

Token 985: '               ' (ID: 506)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9150959253311157
    2. '               ' → logprob: -1.2900959253311157
    3. '           ' → logprob: -1.9150959253311157
    4. '):
' → logprob: -2.790095806121826
    5. 'self' → logprob: -3.165095806121826
    6. '[]
' → logprob: -3.790095806121826
    7. '                   ' → logprob: -4.915095806121826
    8. '   ' → logprob: -4.915095806121826
    9. ')' → logprob: -5.040095806121826
    10. '):' → logprob: -5.540095806121826

Token 986: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011096985079348087
    2. 'self' (adapté à ' self') → logprob: -4.636096954345703
    3. '[]
' → logprob: -7.386096954345703
    4. '[' → logprob: -8.761096954345703
    5. '[self' → logprob: -8.886096954345703
    6. 'lines' → logprob: -9.636096954345703
    7. '__' → logprob: -9.886096954345703
    8. ' []' → logprob: -10.136096954345703
    9. '[])' → logprob: -10.136096954345703
    10. '[]):' → logprob: -10.386096954345703

Token 987: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3051111698150635
    2. '.lines' → logprob: -1.5551111698150635
    3. '_lines' → logprob: -3.0551111698150635
    4. '=' → logprob: -6.305110931396484
    5. '	lines' → logprob: -6.680110931396484
    6. 'sl' → logprob: -7.430110931396484
    7. ' lines' → logprob: -8.555110931396484
    8. 'data' → logprob: -8.680110931396484
    9. '.append' → logprob: -9.055110931396484
    10. '```' → logprob: -9.180110931396484

Token 988: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4426705539226532
    2. '=' → logprob: -1.4426705837249756
    3. '.append' → logprob: -2.1926705837249756
    4. '=[]' → logprob: -4.6926703453063965
    5. ':' → logprob: -7.5676703453063965
    6. '=[]
' → logprob: -10.567670822143555
    7. '.' → logprob: -11.317670822143555
    8. '   ' → logprob: -11.567670822143555
    9. '[]' → logprob: -11.692670822143555
    10. '=[' → logprob: -11.692670822143555

Token 989: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.054500666621607e-06
    2. '[]
' → logprob: -12.87500286102295
    3. '[]}' → logprob: -16.000003814697266
    4. '[]"' → logprob: -16.500003814697266
    5. '[],' → logprob: -16.750003814697266
    6. ' []' → logprob: -17.000003814697266
    7. '[' → logprob: -17.125003814697266
    8. '[]

' → logprob: -17.125003814697266
    9. '[]>' → logprob: -17.375003814697266
    10. '[]=' → logprob: -18.625003814697266

Token 990: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2141289860010147
    2. '   ' → logprob: -2.5891289710998535
    3. '           ' → logprob: -2.9641289710998535
    4. '       ' → logprob: -3.7141289710998535
    5. '    
' → logprob: -3.7141289710998535
    6. '        
' → logprob: -4.5891289710998535
    7. '            
' → logprob: -5.9641289710998535
    8. '[' → logprob: -7.3391289710998535
    9. '		
' → logprob: -7.7141289710998535
    10. '  
' → logprob: -7.7141289710998535

Token 991: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1646525859832764
    2. '           ' → logprob: -1.4146525859832764
    3. 'def' → logprob: -1.4146525859832764
    4. '   ' → logprob: -2.0396525859832764
    5. '       ' → logprob: -2.7896525859832764
    6. ' def' → logprob: -6.1646528244018555
    7. '            
' → logprob: -6.2896528244018555
    8. '               ' → logprob: -6.5396528244018555
    9. '	def' → logprob: -6.9146528244018555
    10. '        
' → logprob: -6.9146528244018555

Token 992: '.pos' (ID: 25321)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9021180868148804
    2. 'add' → logprob: -2.15211820602417
    3. 'pos' → logprob: -2.15211820602417
    4. '_add' → logprob: -2.27711820602417
    5. 'pointer' → logprob: -2.40211820602417
    6. 'idx' → logprob: -3.90211820602417
    7. '_pointer' → logprob: -3.90211820602417
    8. 'append' → logprob: -4.02711820602417
    9. '_ptr' → logprob: -4.02711820602417
    10. '_pos' → logprob: -4.15211820602417

Token 993: ' =' (ID: 314)
  Prédit: 'sible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.6598512530326843
    2. '=' → logprob: -1.159851312637329
    3. ' =' → logprob: -1.909851312637329
    4. 's' → logprob: -4.40985107421875
    5. 'ition' → logprob: -5.40985107421875
    6. 't' → logprob: -6.03485107421875
    7. 'itions' → logprob: -7.65985107421875
    8. 'itional' → logprob: -8.03485107421875
    9. '_pointer' → logprob: -8.03485107421875
    10. 'tion' → logprob: -8.78485107421875

Token 994: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.500019073486328
    3. '-' → logprob: -11.625019073486328
    4. '```' → logprob: -17.750019073486328
    5. '   ' → logprob: -18.500019073486328
    6. ' -' → logprob: -18.500019073486328
    7. '[' → logprob: -18.500019073486328
    8. '1' → logprob: -18.625019073486328
    9. '=' → logprob: -19.125019073486328
    10. '{' → logprob: -19.500019073486328

Token 995: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '[' → logprob: -19.75
    4. '-' → logprob: -19.875
    5. '
' → logprob: -20.125
    6. '[]' → logprob: -20.25
    7. '```' → logprob: -20.625
    8. '1' → logprob: -21.25
    9. '   ' → logprob: -21.25
    10. '۰' → logprob: -21.5

Token 996: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14591936767101288
    2. '       ' → logprob: -2.3959193229675293
    3. '   ' → logprob: -4.020919322967529
    4. '        
' → logprob: -4.520919322967529
    5. '           ' → logprob: -4.645919322967529
    6. '    
' → logprob: -6.395919322967529
    7. '		
' → logprob: -6.520919322967529
    8. '	' → logprob: -7.770919322967529
    9. '            
' → logprob: -8.020919799804688
    10. '	
' → logprob: -8.020919799804688

Token 997: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8422203660011292
    2. '
' → logprob: -0.9672203660011292
    3. '   ' → logprob: -2.7172203063964844
    4. '        
' → logprob: -2.7172203063964844
    5. '    
' → logprob: -3.5922203063964844
    6. '           ' → logprob: -3.9672203063964844
    7. '		
' → logprob: -5.717220306396484
    8. '            
' → logprob: -6.217220306396484
    9. '	
' → logprob: -6.717220306396484
    10. '	' → logprob: -6.967220306396484

Token 998: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3237066864967346
    2. 'def' → logprob: -1.3237066268920898
    3. '       ' → logprob: -5.07370662689209
    4. '	def' → logprob: -6.07370662689209
    5. ' def' → logprob: -6.44870662689209
    6. '
' → logprob: -8.69870662689209
    7. '           ' → logprob: -9.94870662689209
    8. '    ' → logprob: -11.94870662689209
    9. '```' → logprob: -12.07370662689209
    10. ' ' → logprob: -12.57370662689209

Token 999: ' add' (ID: 1147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3335994780063629
    2. '           ' → logprob: -2.08359956741333
    3. 'append' → logprob: -2.95859956741333
    4. 'add' → logprob: -3.33359956741333
    5. ' def' → logprob: -3.45859956741333
    6. '
' → logprob: -3.83359956741333
    7. '       ' → logprob: -5.58359956741333
    8. '   ' → logprob: -6.08359956741333
    9. ')' → logprob: -6.08359956741333
    10. 'insert' → logprob: -6.08359956741333

Token 1000: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5777771472930908
    2. '_line' → logprob: -0.8277771472930908
    3. '   ' → logprob: -7.452776908874512
    4. ' line' → logprob: -7.452776908874512
    5. 'Line' → logprob: -7.702776908874512
    6. 'def' → logprob: -9.327776908874512
    7. '(self' → logprob: -9.952776908874512
    8. '       ' → logprob: -10.577776908874512
    9. '(line' → logprob: -11.327776908874512
    10. 'self' → logprob: -11.702776908874512

Token 1001: ' m' (ID: 284)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6547513008117676
    2. '(self' → logprob: -1.7797513008117676
    3. '(' → logprob: -2.1547513008117676
    4. '(
' → logprob: -2.9047513008117676
    5. 'def' → logprob: -2.9047513008117676
    6. '   ' → logprob: -3.0297513008117676
    7. ' (' → logprob: -4.529751300811768
    8. ' def' → logprob: -4.779751300811768
    9. '       ' → logprob: -5.529751300811768
    10. '(int' → logprob: -5.654751300811768

Token 1002: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02232411690056324
    2. ' ,' → logprob: -4.022324085235596
    3. ',x' → logprob: -5.897324085235596
    4. ',s' → logprob: -8.397324562072754
    5. ',value' → logprob: -8.397324562072754
    6. '=' → logprob: -8.647324562072754
    7. ',p' → logprob: -9.147324562072754
    8. ',b' → logprob: -9.272324562072754
    9. ',e' → logprob: -9.647324562072754
    10. ',a' → logprob: -9.647324562072754

Token 1003: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03386375308036804
    2. ' +' → logprob: -3.4088637828826904
    3. '+b' → logprob: -8.78386402130127
    4. '+c' → logprob: -10.78386402130127
    5. '+m' → logprob: -11.65886402130127
    6. ' plus' → logprob: -12.15886402130127
    7. '+self' → logprob: -12.15886402130127
    8. 'plus' → logprob: -12.40886402130127
    9. '+B' → logprob: -12.78386402130127
    10. '+s' → logprob: -13.15886402130127

Token 1004: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10024376213550568
    2. 'c' → logprob: -2.3502438068389893
    3. ' b' → logprob: -10.35024356842041
    4. ' c' → logprob: -12.22524356842041
    5. '```' → logprob: -15.85024356842041
    6. '
' → logprob: -17.100244522094727
    7. ' ' → logprob: -17.100244522094727
    8. 'x' → logprob: -17.475244522094727
    9. '   ' → logprob: -18.225244522094727
    10. '_b' → logprob: -18.725244522094727

Token 1005: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10222631692886353
    2. ':' → logprob: -3.7272262573242188
    3. '           ' → logprob: -3.9772262573242188
    4. '(m' → logprob: -4.227226257324219
    5. '   ' → logprob: -4.227226257324219
    6. ',' → logprob: -4.977226257324219
    7. ' (' → logprob: -5.477226257324219
    8. '(' → logprob: -5.977226257324219
    9. '       ' → logprob: -6.102226257324219
    10. 'def' → logprob: -6.227226257324219

Token 1006: ' slopes' (ID: 88649)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11856111139059067
    2. 'def' → logprob: -2.868561029434204
    3. ' m' → logprob: -3.618561029434204
    4. 'm' → logprob: -4.743561267852783
    5. '           ' → logprob: -5.243561267852783
    6. '
' → logprob: -6.243561267852783
    7. '       ' → logprob: -6.743561267852783
    8. '   ' → logprob: -6.868561267852783
    9. '               ' → logprob: -6.868561267852783
    10. ' True' → logprob: -6.868561267852783

Token 1007: ' m' (ID: 284)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46190810203552246
    2. ' ,' → logprob: -1.2119081020355225
    3. ' =' → logprob: -3.4619081020355225
    4. ' must' → logprob: -4.336908340454102
    5. '.append' → logprob: -4.586908340454102
    6. '=' → logprob: -5.086908340454102
    7. ' are' → logprob: -6.461908340454102
    8. '<|end|>' → logprob: -6.836908340454102
    9. ' and' → logprob: -6.961908340454102
    10. ' is' → logprob: -6.961908340454102

Token 1008: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.202993243932724
    2. '):
' → logprob: -2.952993154525757
    3. ' ,' → logprob: -3.702993154525757
    4. ':' → logprob: -3.952993154525757
    5. '           ' → logprob: -4.202993392944336
    6. '   ' → logprob: -4.452993392944336
    7. '=' → logprob: -4.577993392944336
    8. ')' → logprob: -4.702993392944336
    9. '):' → logprob: -4.952993392944336
    10. ',
' → logprob: -5.202993392944336

Token 1009: ' increasing' (ID: 11293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.017050813883543015
    2. 'de' → logprob: -4.642050743103027
    3. 'strict' → logprob: -5.017050743103027
    4. 'mon' → logprob: -8.017050743103027
    5. 'descending' → logprob: -8.642050743103027
    6. 'ascending' → logprob: -9.767050743103027
    7. 'creasing' → logprob: -9.892050743103027
    8. ' increasing' → logprob: -12.267050743103027
    9. 'deque' → logprob: -12.517050743103027
    10. 'increase' → logprob: -12.517050743103027

Token 1010: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.40065720677375793
    2. 'order' → logprob: -1.1506571769714355
    3. '<|end|>' → logprob: -4.5256571769714355
    4. '<|end|>' → logprob: -7.5256571769714355
    5. 'def' → logprob: -7.7756571769714355
    6. '+' → logprob: -8.025657653808594
    7. ')' → logprob: -8.275657653808594
    8. '_order' → logprob: -8.525657653808594
    9. ',' → logprob: -8.650657653808594
    10. 'value' → logprob: -8.775657653808594

Token 1011: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1679561585187912
    2. '       ' → logprob: -2.4179561138153076
    3. ':' → logprob: -3.2929561138153076
    4. ':
' → logprob: -5.167956352233887
    5. '           ' → logprob: -5.542956352233887
    6. '
' → logprob: -5.667956352233887
    7. '    
' → logprob: -5.667956352233887
    8. ' def' → logprob: -5.792956352233887
    9. '):
' → logprob: -6.292956352233887
    10. ',' → logprob: -6.792956352233887

Token 1012: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1851644665002823
    2. '    
' → logprob: -3.185164451599121
    3. '       ' → logprob: -3.310164451599121
    4. ' def' → logprob: -3.935164451599121
    5. '        
' → logprob: -4.185164451599121
    6. '
' → logprob: -4.435164451599121
    7. 'def' → logprob: -4.810164451599121
    8. '           ' → logprob: -4.935164451599121
    9. ' (' → logprob: -5.685164451599121
    10. ' 
' → logprob: -5.935164451599121

Token 1013: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7478578090667725
    2. 'def' (adapté à ' def') → logprob: -0.8728578090667725
    3. ' def' → logprob: -2.3728578090667725
    4. '    
' → logprob: -4.872858047485352
    5. '       ' → logprob: -5.872858047485352
    6. '
' → logprob: -5.872858047485352
    7. '	def' → logprob: -7.372858047485352
    8. '        
' → logprob: -7.622858047485352
    9. ' 
' → logprob: -7.997858047485352
    10. '  
' → logprob: -8.247858047485352

Token 1014: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.039275430142879486
    2. '_add' → logprob: -3.2892754077911377
    3. 'append' → logprob: -6.914275646209717
    4. '__' → logprob: -9.164275169372559
    5. '_line' → logprob: -9.914275169372559
    6. '_append' → logprob: -9.914275169372559
    7. 'is' → logprob: -11.289275169372559
    8. '_lines' → logprob: -12.164275169372559
    9. '_' → logprob: -12.539275169372559
    10. ' add' → logprob: -12.789275169372559

Token 1015: '(self' (ID: 2402)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.17506492137908936
    2. '(self' → logprob: -1.9250649213790894
    3. '(' → logprob: -4.300065040588379
    4. 'line' → logprob: -7.675065040588379
    5. 'Line' → logprob: -8.425065040588379
    6. ' (' → logprob: -8.675065040588379
    7. '(
' → logprob: -9.300065040588379
    8. '   ' → logprob: -9.550065040588379
    9. '(line' → logprob: -10.550065040588379
    10. ' line' → logprob: -10.800065040588379

Token 1016: ',' (ID: 11)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4292326271533966
    2. '(' → logprob: -2.429232597351074
    3. '(self' → logprob: -2.804232597351074
    4. ',' → logprob: -3.054232597351074
    5. '_' → logprob: -3.429232597351074
    6. '):
' → logprob: -3.929232597351074
    7. '```' → logprob: -4.054232597351074
    8. '):' → logprob: -4.304232597351074
    9. '(line' → logprob: -4.554232597351074
    10. '(_' → logprob: -4.929232597351074

Token 1017: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003019660711288452
    2. ' m' → logprob: -5.8780198097229
    3. ')' → logprob: -9.128019332885742
    4. 'self' → logprob: -10.128019332885742
    5. 'B' → logprob: -10.503019332885742
    6. '   ' → logprob: -11.628019332885742
    7. ')m' → logprob: -11.628019332885742
    8. '(m' → logprob: -12.753019332885742
    9. '):
' → logprob: -13.003019332885742
    10. ' (' → logprob: -13.003019332885742

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023654208052903414
    2. ' ,' → logprob: -6.127365589141846
    3. '):' → logprob: -9.002365112304688
    4. '=' → logprob: -12.002365112304688
    5. ',m' → logprob: -12.252365112304688
    6. ',
' → logprob: -12.377365112304688
    7. '):
' → logprob: -12.502365112304688
    8. ',line' → logprob: -12.502365112304688
    9. '_,' → logprob: -12.627365112304688
    10. ':' → logprob: -12.627365112304688

Token 1019: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020937025547028
    2. ' b' → logprob: -2.3502094745635986
    3. '-b' → logprob: -13.22520923614502
    4. ',b' → logprob: -15.22520923614502
    5. ')b' → logprob: -15.47520923614502
    6. '    ' → logprob: -15.97520923614502
    7. ' -' → logprob: -16.350210189819336
    8. '   ' → logprob: -17.350210189819336
    9. '>b' → logprob: -17.350210189819336
    10. ',' → logprob: -17.600210189819336

Token 1020: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07909489423036575
    2. '):' → logprob: -2.579094886779785
    3. '):
' → logprob: -9.454094886779785
    4. ':' → logprob: -10.204094886779785
    5. ',' → logprob: -10.329094886779785
    6. ' ):
' → logprob: -10.829094886779785
    7. ')' → logprob: -10.954094886779785
    8. ':
' → logprob: -12.454094886779785
    9. '   ' → logprob: -12.454094886779785
    10. '=' → logprob: -12.579094886779785

Token 1021: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048173144459724426
    2. '       ' → logprob: -3.173173189163208
    3. '
' → logprob: -6.673172950744629
    4. '   ' → logprob: -7.423172950744629
    5. '           ' → logprob: -7.798172950744629
    6. ' 
' → logprob: -8.048172950744629
    7. ' ' → logprob: -8.048172950744629
    8. '    
' → logprob: -8.173172950744629
    9. '  
' → logprob: -8.298172950744629
    10. '                   ' → logprob: -8.548172950744629

Token 1022: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.45930832624435425
    2. ' while' → logprob: -1.084308385848999
    3. '               ' → logprob: -4.83430814743042
    4. '
' → logprob: -5.20930814743042
    5. 'def' → logprob: -5.33430814743042
    6. '       ' → logprob: -5.33430814743042
    7. '   ' → logprob: -6.33430814743042
    8. ' def' → logprob: -6.70930814743042
    9. '```' → logprob: -6.83430814743042
    10. 'self' → logprob: -7.20930814743042

Token 1023: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5686265230178833
    2. 'self' → logprob: -1.0686265230178833
    3. ' len' → logprob: -2.5686264038085938
    4. ' self' → logprob: -4.318626403808594
    5. '(len' → logprob: -8.318626403808594
    6. '(self' → logprob: -11.318626403808594
    7. ' ' → logprob: -14.693626403808594
    8. '           ' → logprob: -14.943626403808594
    9. '   ' → logprob: -14.943626403808594
    10. '               ' → logprob: -15.193626403808594

Token 1024: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000680265249684453
    2. 'self' → logprob: -7.375680446624756
    3. '(' → logprob: -9.875679969787598
    4. ' self' → logprob: -13.250679969787598
    5. ' (' → logprob: -15.250679969787598
    6. '(
' → logprob: -16.375680923461914
    7. '>' → logprob: -16.875680923461914
    8. '[self' → logprob: -17.125680923461914
    9. '=self' → logprob: -17.500680923461914
    10. '```' → logprob: -17.500680923461914

Token 1025: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.625006675720215
    3. 'lines' → logprob: -14.125006675720215
    4. ' .' → logprob: -14.125006675720215
    5. '               ' → logprob: -14.250006675720215
    6. '	lines' → logprob: -14.250006675720215
    7. '(lines' → logprob: -15.750006675720215
    8. '.layers' → logprob: -15.875006675720215
    9. '                   ' → logprob: -16.00000762939453
    10. ')' → logprob: -16.00000762939453

Token 1026: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.035473182797431946
    2. ' >' → logprob: -3.785473108291626
    3. '>=' → logprob: -5.285473346710205
    4. ')' → logprob: -6.285473346710205
    5. ')>' → logprob: -6.285473346710205
    6. '[-' → logprob: -6.660473346710205
    7. ' and' → logprob: -7.285473346710205
    8. '>-' → logprob: -7.285473346710205
    9. ' >=' → logprob: -8.035472869873047
    10. 'and' → logprob: -8.910472869873047

Token 1027: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5052615404129028
    2. '>' → logprob: -1.0052615404129028
    3. ' >=' → logprob: -3.7552614212036133
    4. ' >' → logprob: -5.255261421203613
    5. '>-' → logprob: -7.005261421203613
    6. ')>=' → logprob: -7.630261421203613
    7. '()>' → logprob: -8.755261421203613
    8. ' and' → logprob: -8.880261421203613
    9. 'and' → logprob: -9.255261421203613
    10. ')>' → logprob: -9.505261421203613

Token 1028: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007671575993299484
    2. '1' → logprob: -4.882671356201172
    3. ' ' → logprob: -9.757671356201172
    4. '
' → logprob: -11.882671356201172
    5. '3' → logprob: -15.132671356201172
    6. '   ' → logprob: -15.507671356201172
    7. ')' → logprob: -16.382671356201172
    8. '  ' → logprob: -17.382671356201172
    9. '```' → logprob: -17.382671356201172
    10. '>' → logprob: -17.632671356201172

Token 1029: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005741207860410213
    2. '1' → logprob: -7.500574111938477
    3. ' ' → logprob: -11.250574111938477
    4. '3' → logprob: -11.750574111938477
    5. '
' → logprob: -17.000574111938477
    6. '   ' → logprob: -17.000574111938477
    7. ')' → logprob: -17.000574111938477
    8. '```' → logprob: -17.250574111938477
    9. '{
' → logprob: -17.625574111938477
    10. '(' → logprob: -17.750574111938477

Token 1030: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28116539120674133
    2. 'and' → logprob: -1.406165361404419
    3. '	and' → logprob: -12.03116512298584
    4. '                   ' → logprob: -13.53116512298584
    5. '   ' → logprob: -13.65616512298584
    6. ' ' → logprob: -13.90616512298584
    7. '           ' → logprob: -13.90616512298584
    8. '               ' → logprob: -14.15616512298584
    9. ':
' → logprob: -14.28116512298584
    10. '```' → logprob: -14.40616512298584

Token 1031: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5892892479896545
    2. ' (' → logprob: -0.9642892479896545
    3. 'self' → logprob: -3.4642891883850098
    4. ' self' → logprob: -4.46428918838501
    5. '(m' → logprob: -5.08928918838501
    6. '(b' → logprob: -5.46428918838501
    7. 'b' → logprob: -5.58928918838501
    8. '(' → logprob: -5.96428918838501
    9. '((' → logprob: -6.21428918838501
    10. '(lambda' → logprob: -6.71428918838501

Token 1032: '._' (ID: 2697)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0033765037078410387
    2. '[-' → logprob: -6.378376483917236
    3. '```' → logprob: -6.753376483917236
    4. '.' → logprob: -8.753376960754395
    5. 'lines' → logprob: -8.878376960754395
    6. '
' → logprob: -9.503376960754395
    7. '[' → logprob: -10.503376960754395
    8. '``' → logprob: -10.753376960754395
    9. '	lines' → logprob: -10.753376960754395
    10. '(lines' → logprob: -11.503376960754395

Token 1033: 'is' (ID: 276)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0275551900267601
    2. 'check' → logprob: -4.527554988861084
    3. 'remove' → logprob: -5.152554988861084
    4. 'is' → logprob: -5.152554988861084
    5. 'inter' → logprob: -5.902554988861084
    6. 'bad' → logprob: -6.527554988861084
    7. '_lines' → logprob: -8.277555465698242
    8. 'intersection' → logprob: -8.902555465698242
    9. 'add' → logprob: -9.527555465698242
    10. ' lines' → logprob: -11.027555465698242

Token 1034: '_bad' (ID: 78670)
  Prédit: '_bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bad' → logprob: -0.3138364553451538
    2. 'bad' → logprob: -1.3138364553451538
    3. ' Bad' → logprob: -8.938836097717285
    4. 'ect' → logprob: -9.313836097717285
    5. ' bad' → logprob: -9.563836097717285
    6. 'Bad' → logprob: -10.188836097717285
    7. '\' → logprob: -10.688836097717285
    8. '_conv' → logprob: -10.688836097717285
    9. '_parallel' → logprob: -10.813836097717285
    10. 'conv' → logprob: -11.313836097717285

Token 1035: '(self' (ID: 2402)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3930964767932892
    2. '(-' → logprob: -1.1430964469909668
    3. '(' → logprob: -5.893096446990967
    4. '(
' → logprob: -6.643096446990967
    5. '(self' → logprob: -7.018096446990967
    6. '   ' → logprob: -7.518096446990967
    7. '-' → logprob: -8.768096923828125
    8. '```' → logprob: -9.143096923828125
    9. '               ' → logprob: -9.268096923828125
    10. '           ' → logprob: -9.518096923828125

Token 1036: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.17981724441051483
    2. '.lines' → logprob: -2.0548171997070312
    3. '-' → logprob: -3.4298171997070312
    4. '-lines' → logprob: -6.304817199707031
    5. '_lines' → logprob: -7.304817199707031
    6. ',' → logprob: -7.554817199707031
    7. ')' → logprob: -8.554817199707031
    8. ' lines' → logprob: -8.554817199707031
    9. '	lines' → logprob: -8.554817199707031
    10. 'len' → logprob: -9.304817199707031

Token 1037: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -8.41866585687967e-06
    2. '-' → logprob: -13.125008583068848
    3. '   ' → logprob: -13.250008583068848
    4. '```' → logprob: -13.250008583068848
    5. '(-' → logprob: -13.750008583068848
    6. ',' → logprob: -14.375008583068848
    7. '][-' → logprob: -15.125008583068848
    8. '
' → logprob: -15.250008583068848
    9. '``' → logprob: -15.500008583068848
    10. '{-' → logprob: -16.25000762939453

Token 1038: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43519988656044006
    2. '-' → logprob: -1.1851998567581177
    3. '2' → logprob: -3.0601999759674072
    4. ' -' → logprob: -8.185199737548828
    5. '   ' → logprob: -11.935199737548828
    6. '(-' → logprob: -12.060199737548828
    7. '```' → logprob: -12.060199737548828
    8. '  ' → logprob: -13.810199737548828
    9. '
' → logprob: -13.935199737548828
    10. 'len' → logprob: -14.685199737548828

Token 1039: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009691165760159492
    2. '],' → logprob: -4.88469123840332
    3. ' ,' → logprob: -7.38469123840332
    4. '[-' → logprob: -7.63469123840332
    5. ',-' → logprob: -7.88469123840332
    6. '   ' → logprob: -8.75969123840332
    7. '][' → logprob: -9.13469123840332
    8. '-' → logprob: -9.63469123840332
    9. ',
' → logprob: -10.13469123840332
    10. ']' → logprob: -10.13469123840332

Token 1040: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00027682865038514137
    2. ' self' → logprob: -8.375276565551758
    3. '                   ' → logprob: -10.125276565551758
    4. '               ' → logprob: -12.250276565551758
    5. '(self' → logprob: -14.375276565551758
    6. '                       ' → logprob: -15.375276565551758
    7. '	self' → logprob: -15.875276565551758
    8. '[self' → logprob: -16.000276565551758
    9. '   ' → logprob: -16.250276565551758
    10. '                               ' → logprob: -16.375276565551758

Token 1041: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2703413963317871
    2. '-lines' → logprob: -2.270341396331787
    3. '-' → logprob: -2.645341396331787
    4. '.lines' → logprob: -3.145341396331787
    5. '[-' → logprob: -4.395341396331787
    6. ' lines' → logprob: -5.645341396331787
    7. '_lines' → logprob: -6.520341396331787
    8. '	lines' → logprob: -7.770341396331787
    9. ' -' → logprob: -7.895341396331787
    10. 's' → logprob: -8.645341873168945

Token 1042: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.464347173576243e-05
    2. '-' → logprob: -10.37503433227539
    3. '[
' → logprob: -14.00003433227539
    4. '][-' → logprob: -14.25003433227539
    5. '               ' → logprob: -15.12503433227539
    6. '                   ' → logprob: -15.12503433227539
    7. '           ' → logprob: -15.12503433227539
    8. '(-' → logprob: -15.62503433227539
    9. '```' → logprob: -15.87503433227539
    10. '   ' → logprob: -16.12503433227539

Token 1043: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.375
    3. '2' → logprob: -16.625
    4. '3' → logprob: -17.25
    5. '
' → logprob: -18.5
    6. '[-' → logprob: -18.5
    7. '0' → logprob: -20.25
    8. '(-' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. '_' → logprob: -21.625

Token 1044: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001835141738411039
    2. ' ,' → logprob: -9.00018310546875
    3. ',
' → logprob: -10.87518310546875
    4. '               ' → logprob: -11.62518310546875
    5. ',m' → logprob: -12.00018310546875
    6. '           ' → logprob: -12.12518310546875
    7. '                   ' → logprob: -12.50018310546875
    8. '   ' → logprob: -12.87518310546875
    9. ',b' → logprob: -12.87518310546875
    10. '```' → logprob: -13.87518310546875

Token 1045: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.7118960022926331
    2. 'm' → logprob: -0.9618960022926331
    3. '                   ' → logprob: -2.5868959426879883
    4. ' (' → logprob: -3.2118959426879883
    5. '               ' → logprob: -4.961895942687988
    6. 'self' → logprob: -7.211895942687988
    7. '                ' → logprob: -7.586895942687988
    8. '           ' → logprob: -7.711895942687988
    9. ' m' → logprob: -7.711895942687988
    10. '(' → logprob: -8.086895942687988

Token 1046: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.034500379115343094
    2. '(m' → logprob: -3.5345003604888916
    3. '                   ' → logprob: -5.909500598907471
    4. ' (' → logprob: -6.784500598907471
    5. '               ' → logprob: -8.034500122070312
    6. 'self' → logprob: -8.159500122070312
    7. ' m' → logprob: -9.159500122070312
    8. '                       ' → logprob: -10.034500122070312
    9. '   ' → logprob: -10.159500122070312
    10. '(' → logprob: -10.909500122070312

Token 1047: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04361391440033913
    2. ',b' → logprob: -3.168613910675049
    3. ' ,' → logprob: -7.418613910675049
    4. ',
' → logprob: -13.043614387512207
    5. ',m' → logprob: -13.418614387512207
    6. 'b' → logprob: -13.543614387512207
    7. '),' → logprob: -13.668614387512207
    8. '               ' → logprob: -14.043614387512207
    9. '[' → logprob: -14.418614387512207
    10. '           ' → logprob: -14.418614387512207

Token 1048: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5451681974809617e-05
    2. ' b' → logprob: -11.625015258789062
    3. '               ' → logprob: -13.875015258789062
    4. '                               ' → logprob: -13.875015258789062
    5. '                   ' → logprob: -13.875015258789062
    6. '                                   ' → logprob: -14.000015258789062
    7. '           ' → logprob: -14.500015258789062
    8. '   ' → logprob: -15.250015258789062
    9. '                           ' → logprob: -15.250015258789062
    10. '
' → logprob: -15.625015258789062

Token 1049: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0006721630343236029
    2. '):' → logprob: -7.500672340393066
    3. '               ' → logprob: -9.875672340393066
    4. '                   ' → logprob: -10.625672340393066
    5. '):

' → logprob: -11.250672340393066
    6. ' ):
' → logprob: -11.250672340393066
    7. ')' → logprob: -11.750672340393066
    8. ')):
' → logprob: -12.250672340393066
    9. '):
' → logprob: -13.375672340393066
    10. ',' → logprob: -14.000672340393066

Token 1050: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.234443798661232
    2. '               ' → logprob: -2.3594439029693604
    3. '):
' → logprob: -3.1094439029693604
    4. '                ' → logprob: -4.984443664550781
    5. ''\' → logprob: -5.109443664550781
    6. '                       ' → logprob: -5.234443664550781
    7. '('\' → logprob: -5.359443664550781
    8. ')' → logprob: -5.734443664550781
    9. 'return' → logprob: -6.109443664550781
    10. '                  ' → logprob: -6.109443664550781

Token 1051: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08332989364862442
    2. ' self' → logprob: -2.583329916000366
    3. '                   ' → logprob: -5.458329677581787
    4. '                       ' → logprob: -9.958330154418945
    5. 'pop' → logprob: -10.958330154418945
    6. '1' → logprob: -11.083330154418945
    7. '               ' → logprob: -11.083330154418945
    8. '-' → logprob: -11.208330154418945
    9. '(self' → logprob: -11.458330154418945
    10. '```' → logprob: -11.833330154418945

Token 1052: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0004245972086209804
    2. 'lines' → logprob: -7.875424385070801
    3. '	lines' → logprob: -10.6254243850708
    4. '```' → logprob: -12.1254243850708
    5. '(lines' → logprob: -12.5004243850708
    6. '['' → logprob: -12.6254243850708
    7. '.' → logprob: -12.7504243850708
    8. '.tokens' → logprob: -13.3754243850708
    9. '[-' → logprob: -14.2504243850708
    10. ').' → logprob: -14.3754243850708

Token 1053: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.194110756041482e-05
    2. 'pop' → logprob: -10.250061988830566
    3. '[-' → logprob: -11.375061988830566
    4. '].' → logprob: -11.500061988830566
    5. ').' → logprob: -13.125061988830566
    6. '.' → logprob: -13.750061988830566
    7. ' pop' → logprob: -14.000061988830566
    8. '	pop' → logprob: -14.625061988830566
    9. '                   ' → logprob: -15.875061988830566
    10. '][-' → logprob: -16.37506103515625

Token 1054: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032029079739004374
    2. '()
' → logprob: -5.75320291519165
    3. '(-' → logprob: -11.003202438354492
    4. '()

' → logprob: -12.253202438354492
    5. '()-' → logprob: -13.253202438354492
    6. '()\' → logprob: -13.753202438354492
    7. '()`' → logprob: -15.378202438354492
    8. '()
' → logprob: -15.878202438354492
    9. '-' → logprob: -15.878202438354492
    10. '()]' → logprob: -16.378202438354492

Token 1055: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21385306119918823
    2. '                   ' → logprob: -2.963853120803833
    3. '()' → logprob: -3.213853120803833
    4. ')' → logprob: -3.588853120803833
    5. '```' → logprob: -4.088852882385254
    6. ')
' → logprob: -4.713852882385254
    7. '(' → logprob: -4.713852882385254
    8. '(
' → logprob: -4.838852882385254
    9. '()
' → logprob: -5.463852882385254
    10. ',' → logprob: -5.713852882385254

Token 1056: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044728122651576996
    2. ' (' → logprob: -3.6697280406951904
    3. ',' → logprob: -5.7947282791137695
    4. '(' → logprob: -5.9197282791137695
    5. '                   ' → logprob: -6.0447282791137695
    6. '(self' → logprob: -6.2947282791137695
    7. ' self' → logprob: -6.4197282791137695
    8. 'def' → logprob: -6.4197282791137695
    9. 'self' (adapté à ' self') → logprob: -6.9197282791137695
    10. '```' → logprob: -7.0447282791137695

Token 1057: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0004374638374429196
    2. '.add' → logprob: -8.87543773651123
    3. 'lines' → logprob: -9.25043773651123
    4. '.' → logprob: -9.25043773651123
    5. ' .' → logprob: -9.87543773651123
    6. '(lines' → logprob: -10.75043773651123
    7. '.append' → logprob: -11.50043773651123
    8. '	lines' → logprob: -11.62543773651123
    9. '   ' → logprob: -12.50043773651123
    10. '```' → logprob: -12.75043773651123

Token 1058: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -10.5000581741333
    3. ' .' → logprob: -10.8750581741333
    4. 'append' → logprob: -11.8750581741333
    5. '.app' → logprob: -12.8750581741333
    6. '           ' → logprob: -13.8750581741333
    7. '.add' → logprob: -15.0000581741333
    8. 'Append' → logprob: -15.1250581741333
    9. '[-' → logprob: -15.2500581741333
    10. '_append' → logprob: -15.8750581741333

Token 1059: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.019986294209957123
    2. ' (' → logprob: -4.769986152648926
    3. '(' → logprob: -4.894986152648926
    4. '(m' → logprob: -6.144986152648926
    5. ' ((' → logprob: -6.394986152648926
    6. '   ' → logprob: -12.519986152648926
    7. ' ' → logprob: -13.144986152648926
    8. '(
' → logprob: -13.144986152648926
    9. '  ' → logprob: -13.894986152648926
    10. '(((' → logprob: -15.144986152648926

Token 1060: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.5597102396423e-05
    2. ' m' → logprob: -10.250035285949707
    3. '                   ' → logprob: -16.625036239624023
    4. ')m' → logprob: -17.750036239624023
    5. '               ' → logprob: -18.250036239624023
    6. '   ' → logprob: -18.375036239624023
    7. '(m' → logprob: -18.875036239624023
    8. '	m' → logprob: -19.125036239624023
    9. '                       ' → logprob: -20.250036239624023
    10. ',m' → logprob: -20.750036239624023

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067611983977258205
    2. ',b' → logprob: -5.006761074066162
    3. ' ,' → logprob: -10.13176155090332
    4. ',
' → logprob: -13.00676155090332
    5. '<|end|>' → logprob: -14.13176155090332
    6. 'b' → logprob: -14.88176155090332
    7. ',n' → logprob: -15.00676155090332
    8. ',p' → logprob: -15.25676155090332
    9. ',m' → logprob: -15.38176155090332
    10. '	' → logprob: -15.50676155090332

Token 1062: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.000335693359375
    4. '
' → logprob: -19.125335693359375
    5. ')b' → logprob: -19.250335693359375
    6. ' ' → logprob: -19.750335693359375
    7. '    ' → logprob: -19.750335693359375
    8. '	b' → logprob: -19.750335693359375
    9. ',b' → logprob: -20.875335693359375
    10. '```' → logprob: -21.000335693359375

Token 1063: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2018740326166153
    2. '))' → logprob: -1.701874017715454
    3. '))
' → logprob: -8.701873779296875
    4. '               ' → logprob: -8.826873779296875
    5. ')
' → logprob: -9.826873779296875
    6. ',' → logprob: -9.951873779296875
    7. ' )' → logprob: -11.201873779296875
    8. '),' → logprob: -11.326873779296875
    9. ')))' → logprob: -12.326873779296875
    10. '                   ' → logprob: -12.951873779296875

Token 1064: '           ' (ID: 352)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.1623930931091309
    2. '           ' → logprob: -1.5373930931091309
    3. '
' → logprob: -2.162393093109131
    4. '       ' → logprob: -2.537393093109131
    5. '        
' → logprob: -2.787393093109131
    6. '```' → logprob: -3.162393093109131
    7. '	
' → logprob: -3.412393093109131
    8. '		
' → logprob: -3.787393093109131
    9. '		' → logprob: -3.787393093109131
    10. '   ' → logprob: -3.912393093109131

Token 1065: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6433331966400146
    2. '   ' → logprob: -1.2683331966400146
    3. '       ' → logprob: -2.6433331966400146
    4. '
' → logprob: -3.0183331966400146
    5. 'def' (adapté à ' def') → logprob: -3.0183331966400146
    6. ' def' → logprob: -4.643333435058594
    7. '	def' → logprob: -4.643333435058594
    8. '```' → logprob: -6.018333435058594
    9. '               ' → logprob: -7.268333435058594
    10. ' ' → logprob: -7.518333435058594

Token 1066: ' _' (ID: 1175)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0013577328063547611
    2. '_is' → logprob: -6.751357555389404
    3. 'pos' → logprob: -9.001358032226562
    4. '_pos' → logprob: -10.876358032226562
    5. '_lines' → logprob: -11.001358032226562
    6. ' is' → logprob: -11.251358032226562
    7. 'lines' → logprob: -12.001358032226562
    8. '_query' → logprob: -13.126358032226562
    9. '
' → logprob: -13.251358032226562
    10. 'get' → logprob: -13.626358032226562

Token 1067: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: 0.0
    2. '
' → logprob: -18.625
    3. '```' → logprob: -20.375
    4. ' is' → logprob: -21.75
    5. '_is' → logprob: -21.875
    6. '(is' → logprob: -22.125
    7. '	is' → logprob: -22.25
    8. 'intersection' → logprob: -22.75
    9. '#' → logprob: -23.0
    10. '{' → logprob: -23.25

Token 1068: '_bad' (ID: 78670)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' → logprob: -0.003180094063282013
    2. '_bad' → logprob: -5.753180027008057
    3. 'b' → logprob: -13.878180503845215
    4. '
' → logprob: -14.378180503845215
    5. '```' → logprob: -14.878180503845215
    6. 'Bad' → logprob: -15.628180503845215
    7. '{' → logprob: -16.7531795501709
    8. ' bad' → logprob: -16.7531795501709
    9. '_b' → logprob: -17.3781795501709
    10. '   ' → logprob: -17.3781795501709

Token 1069: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00035512709291651845
    2. '(line' → logprob: -9.250354766845703
    3. '(a' → logprob: -9.250354766845703
    4. '(' → logprob: -9.375354766845703
    5. '   ' → logprob: -10.375354766845703
    6. 'self' → logprob: -11.625354766845703
    7. '(
' → logprob: -11.625354766845703
    8. '(l' → logprob: -11.750354766845703
    9. '(lines' → logprob: -12.000354766845703
    10. '```' → logprob: -12.250354766845703

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007978630252182484
    2. ',line' → logprob: -5.382978439331055
    3. ',l' → logprob: -6.007978439331055
    4. ',a' → logprob: -7.507978439331055
    5. ',self' → logprob: -8.882978439331055
    6. '(lines' → logprob: -9.507978439331055
    7. 'self' → logprob: -10.632978439331055
    8. ' ,' → logprob: -11.007978439331055
    9. '(line' → logprob: -11.132978439331055
    10. ',x' → logprob: -11.257978439331055

Token 1071: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.570928156375885
    2. 'l' → logprob: -1.5709280967712402
    3. 'a' → logprob: -1.6959280967712402
    4. 'lambda' → logprob: -3.5709280967712402
    5. '(a' → logprob: -5.07092809677124
    6. ' self' → logprob: -5.94592809677124
    7. '   ' → logprob: -6.32092809677124
    8. '
' → logprob: -6.69592809677124
    9. '(l' → logprob: -6.82092809677124
    10. '(self' → logprob: -7.57092809677124

Token 1072: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09810400754213333
    2. 'e' → logprob: -3.0981040000915527
    3. 'ine' → logprob: -3.8481040000915527
    4. ',' → logprob: -4.848104000091553
    5. 'ines' → logprob: -5.598104000091553
    6. '-' → logprob: -5.598104000091553
    7. '2' → logprob: -5.848104000091553
    8. '_,' → logprob: -6.348104000091553
    9. '   ' → logprob: -6.473104000091553
    10. 'self' → logprob: -6.848104000091553

Token 1073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018869919003918767
    2. ',l' → logprob: -6.50188684463501
    3. ' ,' → logprob: -8.501887321472168
    4. '=' → logprob: -9.501887321472168
    5. '   ' → logprob: -10.126887321472168
    6. ' ' → logprob: -11.626887321472168
    7. ',line' → logprob: -11.626887321472168
    8. 'l' → logprob: -11.876887321472168
    9. ',
' → logprob: -12.126887321472168
    10. '_,' → logprob: -12.251887321472168

Token 1074: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01604621484875679
    2. ' l' → logprob: -4.141046047210693
    3. '   ' → logprob: -11.766046524047852
    4. '	l' → logprob: -13.391046524047852
    5. '    ' → logprob: -14.141046524047852
    6. '           ' → logprob: -14.516046524047852
    7. 'line' → logprob: -15.391046524047852
    8. '(l' → logprob: -15.516046524047852
    9. ' ' → logprob: -15.766046524047852
    10. '       ' → logprob: -16.01604652404785

Token 1075: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006330899195745587
    2. 'ine' → logprob: -7.375633239746094
    3. 'l' → logprob: -12.875633239746094
    4. 'ines' → logprob: -13.250633239746094
    5. '(' → logprob: -13.625633239746094
    6. 'in' → logprob: -15.750633239746094
    7. '1' → logprob: -16.000633239746094
    8. '
' → logprob: -16.000633239746094
    9. '#' → logprob: -16.375633239746094
    10. 'n' → logprob: -16.625633239746094

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004699495621025562
    2. ',l' → logprob: -5.37969970703125
    3. ' ,' → logprob: -9.62969970703125
    4. ',line' → logprob: -12.62969970703125
    5. ',(' → logprob: -12.87969970703125
    6. ',m' → logprob: -13.12969970703125
    7. ',ll' → logprob: -13.25469970703125
    8. '   ' → logprob: -14.50469970703125
    9. 'l' → logprob: -14.50469970703125
    10. '(l' → logprob: -15.12969970703125

Token 1077: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002695266855880618
    2. ' l' → logprob: -6.127695083618164
    3. '(l' → logprob: -8.127695083618164
    4. ' (' → logprob: -8.752695083618164
    5. '(' → logprob: -9.877695083618164
    6. '(m' → logprob: -12.627695083618164
    7. '           ' → logprob: -14.002695083618164
    8. '   ' → logprob: -14.877695083618164
    9. '	l' → logprob: -15.127695083618164
    10. '       ' → logprob: -16.127695083618164

Token 1078: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007060007657855749
    2. 'ine' → logprob: -5.2570600509643555
    3. '1' → logprob: -6.6320600509643555
    4. '2' → logprob: -8.257060050964355
    5. 'ines' → logprob: -8.632060050964355
    6. '
' → logprob: -11.507060050964355
    7. '(' → logprob: -11.757060050964355
    8. 'inem' → logprob: -11.757060050964355
    9. '```' → logprob: -11.882060050964355
    10. 'l' → logprob: -11.882060050964355

Token 1079: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01347254402935505
    2. '):' → logprob: -4.388472557067871
    3. ',' → logprob: -7.013472557067871
    4. '):
' → logprob: -10.763472557067871
    5. '   ' → logprob: -11.138472557067871
    6. '):

' → logprob: -12.138472557067871
    7. '```' → logprob: -12.513472557067871
    8. '       ' → logprob: -12.638472557067871
    9. ')' → logprob: -12.638472557067871
    10. ' ):
' → logprob: -13.138472557067871

Token 1080: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04604301601648331
    2. ' (' → logprob: -4.0460429191589355
    3. 'return' → logprob: -4.1710429191589355
    4. '                   ' → logprob: -5.6710429191589355
    5. '(' → logprob: -6.1710429191589355
    6. ' return' → logprob: -6.2960429191589355
    7. '   ' → logprob: -6.4210429191589355
    8. ' ' → logprob: -7.2960429191589355
    9. '       ' → logprob: -8.171043395996094
    10. '			' → logprob: -8.171043395996094

Token 1081: ' #' (ID: 1069)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.9667360186576843
    2. 'return' → logprob: -1.341736078262329
    3. ' return' → logprob: -1.716736078262329
    4. ' (' → logprob: -2.341736078262329
    5. '(m' → logprob: -3.341736078262329
    6. '   ' → logprob: -3.716736078262329
    7. '               ' → logprob: -4.59173583984375
    8. '                   ' → logprob: -5.09173583984375
    9. ' ' → logprob: -5.96673583984375
    10. '       ' → logprob: -6.09173583984375

Token 1082: ' Check' (ID: 6208)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.04175190627574921
    2. ' (' → logprob: -3.9167518615722656
    3. 'return' → logprob: -4.041751861572266
    4. ' return' → logprob: -6.666751861572266
    5. 'def' → logprob: -7.291751861572266
    6. '(self' → logprob: -7.416751861572266
    7. '   ' → logprob: -8.916751861572266
    8. '               ' → logprob: -9.041751861572266
    9. '(b' → logprob: -9.291751861572266
    10. '(abs' → logprob: -9.666751861572266

Token 1083: ' if' (ID: 538)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.16084739565849304
    2. ' (' → logprob: -1.9108474254608154
    3. '   ' → logprob: -8.785847663879395
    4. '(lambda' → logprob: -8.785847663879395
    5. '(abs' → logprob: -8.910847663879395
    6. ' ' → logprob: -9.160847663879395
    7. 'abs' → logprob: -11.285847663879395
    8. '(' → logprob: -11.660847663879395
    9. '  ' → logprob: -11.910847663879395
    10. '(m' → logprob: -12.035847663879395

Token 1084: ' l' (ID: 305)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0032422395888715982
    2. ' (' → logprob: -5.878242015838623
    3. '(abs' → logprob: -7.878242015838623
    4. 'abs' → logprob: -10.628242492675781
    5. '(lambda' → logprob: -11.503242492675781
    6. '(self' → logprob: -12.378242492675781
    7. '(' → logprob: -12.878242492675781
    8. '(ll' → logprob: -12.878242492675781
    9. '
' → logprob: -13.003242492675781
    10. '(round' → logprob: -13.128242492675781

Token 1085: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009739558212459087
    2. 'ambda' → logprob: -5.134739398956299
    3. '2' → logprob: -5.884739398956299
    4. 'ine' → logprob: -7.259739398956299
    5. 'amb' → logprob: -8.259739875793457
    6. 'ines' → logprob: -11.134739875793457
    7. 'am' → logprob: -11.634739875793457
    8. 'amba' → logprob: -11.634739875793457
    9. 'mb' → logprob: -12.259739875793457
    10. 'a' → logprob: -12.259739875793457

Token 1086: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007026157341897488
    2. 'l' → logprob: -5.632026195526123
    3. ',' → logprob: -6.132026195526123
    4. '```' → logprob: -7.757026195526123
    5. '
' → logprob: -8.382025718688965
    6. ',l' → logprob: -9.007025718688965
    7. ' and' → logprob: -9.507025718688965
    8. ')' → logprob: -9.882025718688965
    9. 'def' → logprob: -10.507025718688965
    10. '[
' → logprob: -10.632025718688965

Token 1087: ' unnecessary' (ID: 42963)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3756851553916931
    2. '(l' → logprob: -1.375685214996338
    3. '(m' → logprob: -3.875685214996338
    4. 'lambda' → logprob: -4.750685214996338
    5. ' redundant' → logprob: -4.875685214996338
    6. ' (' → logprob: -5.000685214996338
    7. 'redu' → logprob: -5.375685214996338
    8. '(' → logprob: -5.875685214996338
    9. '(x' → logprob: -5.875685214996338
    10. ' unnecessary' → logprob: -6.250685214996338

Token 1088: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6605494022369385
    2. ' (' → logprob: -1.9105494022369385
    3. 'return' → logprob: -2.1605494022369385
    4. ' return' → logprob: -2.1605494022369385
    5. ' or' → logprob: -2.4105494022369385
    6. ':
' → logprob: -2.6605494022369385
    7. ':' → logprob: -2.9105494022369385
    8. '                   ' → logprob: -3.1605494022369385
    9. '```' → logprob: -3.4105494022369385
    10. '(l' → logprob: -3.5355494022369385

Token 1089: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5224835276603699
    2. '```' → logprob: -1.7724835872650146
    3. '               ' → logprob: -3.1474835872650146
    4. '(' → logprob: -3.2724835872650146
    5. ' return' → logprob: -3.3974835872650146
    6. '                   ' → logprob: -3.3974835872650146
    7. ' ' → logprob: -4.1474833488464355
    8. ',' → logprob: -4.1474833488464355
    9. '(l' → logprob: -4.2724833488464355
    10. ' l' → logprob: -5.0224833488464355

Token 1090: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5769810676574707
    2. 'return' (adapté à ' return') → logprob: -1.2019810676574707
    3. ' (' → logprob: -2.5769810676574707
    4. '               ' → logprob: -3.2019810676574707
    5. '                   ' → logprob: -5.201981067657471
    6. '(l' → logprob: -5.326981067657471
    7. '   ' → logprob: -5.826981067657471
    8. ' ' → logprob: -5.826981067657471
    9. '       ' → logprob: -6.701981067657471
    10. '           ' → logprob: -7.326981067657471

Token 1091: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0019001978216692805
    2. ' (' → logprob: -6.3769001960754395
    3. '   ' → logprob: -9.626900672912598
    4. '(ll' → logprob: -9.876900672912598
    5. '(abs' → logprob: -10.626900672912598
    6. '((' → logprob: -11.876900672912598
    7. '(f' → logprob: -12.001900672912598
    8. '(k' → logprob: -12.001900672912598
    9. ' ' → logprob: -12.126900672912598
    10. '(m' → logprob: -12.251900672912598

Token 1092: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019646743312478065
    2. '(l' → logprob: -6.251964569091797
    3. ' l' → logprob: -11.251964569091797
    4. ' (' → logprob: -11.501964569091797
    5. 'self' → logprob: -12.001964569091797
    6. '   ' → logprob: -12.751964569091797
    7. '	l' → logprob: -13.501964569091797
    8. '
' → logprob: -13.626964569091797
    9. '(' → logprob: -15.251964569091797
    10. '-l' → logprob: -15.751964569091797

Token 1093: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.027265798300504684
    2. '(l' → logprob: -3.652265787124634
    3. '2' → logprob: -7.402266025543213
    4. '1' → logprob: -9.277265548706055
    5. 'self' → logprob: -9.402265548706055
    6. '-l' → logprob: -9.652265548706055
    7. '(' → logprob: -9.777265548706055
    8. ' l' → logprob: -10.777265548706055
    9. '3' → logprob: -11.402265548706055
    10. '(self' → logprob: -12.027265548706055

Token 1094: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.822646693966817e-06
    2. '```' → logprob: -12.125007629394531
    3. '0' → logprob: -14.250007629394531
    4. 'def' → logprob: -15.125007629394531
    5. ')[' → logprob: -15.375007629394531
    6. '1' → logprob: -15.375007629394531
    7. '#' → logprob: -15.750007629394531
    8. '[
' → logprob: -15.750007629394531
    9. '``' → logprob: -16.00000762939453
    10. '(' → logprob: -16.00000762939453

Token 1095: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133939802646637
    2. '1' → logprob: -1.3133939504623413
    3. '
' → logprob: -9.063393592834473
    4. '```' → logprob: -11.188393592834473
    5. '[' → logprob: -13.313393592834473
    6. '``' → logprob: -14.688393592834473
    7. '   ' → logprob: -15.688393592834473
    8. '2' → logprob: -16.18839454650879
    9. '#' → logprob: -16.68839454650879
    10. '{' → logprob: -16.81339454650879

Token 1096: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12702596187591553
    2. '-' → logprob: -2.127026081085205
    3. '-l' → logprob: -9.252025604248047
    4. ' ' → logprob: -14.627025604248047
    5. '```' → logprob: -15.252025604248047
    6. '-b' → logprob: -16.002025604248047
    7. '   ' → logprob: -16.127025604248047
    8. '-s' → logprob: -16.127025604248047
    9. '[' → logprob: -16.377025604248047
    10. 'l' → logprob: -16.627025604248047

Token 1097: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001375089050270617
    2. 'self' → logprob: -9.250137329101562
    3. ' l' → logprob: -10.500137329101562
    4. 'b' → logprob: -11.375137329101562
    5. '           ' → logprob: -14.250137329101562
    6. '               ' → logprob: -15.125137329101562
    7. '(l' → logprob: -15.375137329101562
    8. ')' → logprob: -15.625137329101562
    9. '                   ' → logprob: -15.625137329101562
    10. '   ' → logprob: -15.875137329101562

Token 1098: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023666091728955507
    2. '0' → logprob: -6.627366542816162
    3. '1' → logprob: -7.502366542816162
    4. '3' → logprob: -7.752366542816162
    5. '[' → logprob: -9.75236701965332
    6. '```' → logprob: -15.87736701965332
    7. '(' → logprob: -16.00236701965332
    8. '
' → logprob: -17.37736701965332
    9. 'line' → logprob: -17.37736701965332
    10. 'ines' → logprob: -17.50236701965332

Token 1099: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010449681576574221
    2. '1' → logprob: -9.250104904174805
    3. '```' → logprob: -12.000104904174805
    4. ')' → logprob: -13.625104904174805
    5. '
' → logprob: -15.250104904174805
    6. '<|end|>' → logprob: -16.000104904174805
    7. '[
' → logprob: -16.250104904174805
    8. '``' → logprob: -16.375104904174805
    9. '(' → logprob: -16.500104904174805
    10. ',' → logprob: -16.750104904174805

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010556964843999594
    2. '0' → logprob: -9.250105857849121
    3. '[' → logprob: -12.375105857849121
    4. '
' → logprob: -13.375105857849121
    5. '```' → logprob: -13.625105857849121
    6. '#' → logprob: -14.375105857849121
    7. '-' → logprob: -14.625105857849121
    8. ' ' → logprob: -15.187605857849121
    9. '2' → logprob: -15.187605857849121
    10. '   ' → logprob: -15.562605857849121

Token 1101: '])' (ID: 4636)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.10804636031389236
    2. ')' → logprob: -2.358046293258667
    3. ')*' → logprob: -4.858046531677246
    4. ')/(' → logprob: -10.108046531677246
    5. ' )' → logprob: -13.233046531677246
    6. '*(' → logprob: -15.233046531677246
    7. ')/' → logprob: -15.483046531677246
    8. '   ' → logprob: -15.983046531677246
    9. ')-(' → logprob: -16.60804557800293
    10. ']*(' → logprob: -16.85804557800293

Token 1102: '*(' (ID: 14793)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.058055683970451355
    2. ')' → logprob: -2.9330556392669678
    3. ')*' → logprob: -6.058055877685547
    4. '*(' → logprob: -7.308055877685547
    5. '   ' → logprob: -9.433055877685547
    6. '```' → logprob: -10.058055877685547
    7. '*' → logprob: -11.433055877685547
    8. ']*(' → logprob: -11.683055877685547
    9. '``' → logprob: -12.933055877685547
    10. '*)' → logprob: -12.933055877685547

Token 1103: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2019980400800705
    2. '(l' → logprob: -1.701997995376587
    3. '(m' → logprob: -7.951998233795166
    4. ' l' → logprob: -9.076997756958008
    5. 'm' → logprob: -9.701997756958008
    6. ' (' → logprob: -10.451997756958008
    7. '(' → logprob: -11.076997756958008
    8. '
' → logprob: -11.701997756958008
    9. '	l' → logprob: -12.826997756958008
    10. ')' → logprob: -15.076997756958008

Token 1104: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33701759576797485
    2. '(' → logprob: -1.58701753616333
    3. '(l' → logprob: -2.71201753616333
    4. '(m' → logprob: -5.08701753616333
    5. 'l' → logprob: -5.58701753616333
    6. '```' → logprob: -6.21201753616333
    7. '0' → logprob: -6.46201753616333
    8. 'm' → logprob: -7.83701753616333
    9. '[' → logprob: -8.087018013000488
    10. ' (' → logprob: -8.587018013000488

Token 1105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005937448237091303
    2. '0' → logprob: -5.130937576293945
    3. '```' → logprob: -13.380937576293945
    4. '[
' → logprob: -13.630937576293945
    5. '(' → logprob: -13.755937576293945
    6. '][' → logprob: -13.880937576293945
    7. '<|end|>' → logprob: -13.880937576293945
    8. '<|end|>' → logprob: -14.505937576293945
    9. '-' → logprob: -15.005937576293945
    10. '#' → logprob: -15.255937576293945

Token 1106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -11.25001335144043
    3. '
' → logprob: -16.87501335144043
    4. '```' → logprob: -17.00001335144043
    5. '2' → logprob: -17.62501335144043
    6. '1' → logprob: -17.62501335144043
    7. '(' → logprob: -18.25001335144043
    8. '``' → logprob: -18.50001335144043
    9. '{' → logprob: -18.62501335144043
    10. '۰' → logprob: -18.75001335144043

Token 1107: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09166219830513
    2. '-' → logprob: -2.4666621685028076
    3. '-l' → logprob: -5.966662406921387
    4. 'l' → logprob: -8.966662406921387
    5. ' l' → logprob: -11.966662406921387
    6. '[' → logprob: -12.091662406921387
    7. '[l' → logprob: -12.341662406921387
    8. '-lfs' → logprob: -12.716662406921387
    9. '2' → logprob: -13.841662406921387
    10. '```' → logprob: -14.091662406921387

Token 1108: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.968312951968983e-06
    2. 'm' → logprob: -12.125009536743164
    3. ' l' → logprob: -12.375009536743164
    4. '
' → logprob: -16.625009536743164
    5. '   ' → logprob: -16.875009536743164
    6. '	l' → logprob: -17.500009536743164
    7. '(l' → logprob: -18.750009536743164
    8. '  ' → logprob: -18.750009536743164
    9. '    ' → logprob: -19.000009536743164
    10. '```' → logprob: -19.000009536743164

Token 1109: '3' (ID: 18)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011808603449026123
    2. '2' → logprob: -9.125118255615234
    3. ' l' → logprob: -11.625118255615234
    4. '	l' → logprob: -16.750118255615234
    5. '``' → logprob: -16.875118255615234
    6. 'm' → logprob: -17.000118255615234
    7. 'r' → logprob: -17.750118255615234
    8. '   ' → logprob: -17.875118255615234
    9. '(l' → logprob: -18.125118255615234
    10. '```' → logprob: -18.250118255615234

Token 1110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.758300438988954e-05
    2. '0' → logprob: -9.250097274780273
    3. '```' → logprob: -14.750097274780273
    4. '(' → logprob: -15.000097274780273
    5. '[
' → logprob: -15.625097274780273
    6. '#' → logprob: -16.375097274780273
    7. '()[' → logprob: -16.500097274780273
    8. ')' → logprob: -16.875097274780273
    9. '<|end|>' → logprob: -16.875097274780273
    10. 'def' → logprob: -17.000097274780273

Token 1111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. '[' → logprob: -9.000123977661133
    3. '```' → logprob: -16.625123977661133
    4. '1' → logprob: -16.875123977661133
    5. '{' → logprob: -17.000123977661133
    6. '
' → logprob: -18.625123977661133
    7. ' ' → logprob: -19.000123977661133
    8. '   ' → logprob: -19.125123977661133
    9. '۰' → logprob: -19.750123977661133
    10. '#' → logprob: -19.750123977661133

Token 1112: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014439263613894582
    2. ')-(' → logprob: -6.626443862915039
    3. ')>=' → logprob: -10.001443862915039
    4. ')>' → logprob: -10.501443862915039
    5. ' )' → logprob: -11.251443862915039
    6. ')/(' → logprob: -11.626443862915039
    7. ')-' → logprob: -11.751443862915039
    8. ')<' → logprob: -12.376443862915039
    9. '                   ' → logprob: -13.501443862915039
    10. ')
' → logprob: -13.501443862915039

Token 1113: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2728707492351532
    2. '>=' → logprob: -1.6478707790374756
    3. ' <=' → logprob: -3.6478707790374756
    4. '>' → logprob: -4.7728705406188965
    5. '<=' → logprob: -5.1478705406188965
    6. ' >' → logprob: -5.7728705406188965
    7. '<' → logprob: -6.6478705406188965
    8. ' <' → logprob: -6.7728705406188965
    9. '   ' → logprob: -8.897871017456055
    10. '  ' → logprob: -9.522871017456055

Token 1114: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5760648846626282
    2. ' (' → logprob: -0.8260648846626282
    3. '(' → logprob: -9.451065063476562
    4. '(ll' → logprob: -11.326065063476562
    5. '(line' → logprob: -11.326065063476562
    6. '(ls' → logprob: -12.201065063476562
    7. '(L' → logprob: -12.576065063476562
    8. '   ' → logprob: -12.701065063476562
    9. '(n' → logprob: -13.201065063476562
    10. '(len' → logprob: -13.951065063476562

Token 1115: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0002600245934445411
    2. ' (' → logprob: -8.375260353088379
    3. '(' → logprob: -10.500260353088379
    4. 'l' → logprob: -14.125260353088379
    5. '
' → logprob: -14.500260353088379
    6. '(ll' → logprob: -15.625260353088379
    7. '(self' → logprob: -16.125259399414062
    8. '   ' → logprob: -16.375259399414062
    9. '(m' → logprob: -16.500259399414062
    10. '((' → logprob: -16.750259399414062

Token 1116: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2016373723745346
    2. 'l' → logprob: -1.7016373872756958
    3. '3' → logprob: -9.201637268066406
    4. ' l' → logprob: -9.326637268066406
    5. '1' → logprob: -10.701637268066406
    6. '(l' → logprob: -12.076637268066406
    7. '   ' → logprob: -13.326637268066406
    8. '(' → logprob: -13.576637268066406
    9. '```' → logprob: -13.826637268066406
    10. '  ' → logprob: -14.451637268066406

Token 1117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3676733690081164e-05
    2. '0' → logprob: -10.75002384185791
    3. '```' → logprob: -13.50002384185791
    4. '<|end|>' → logprob: -15.37502384185791
    5. '(' → logprob: -15.62502384185791
    6. '[
' → logprob: -15.75002384185791
    7. '<|end|>' → logprob: -16.000022888183594
    8. '1' → logprob: -17.000022888183594
    9. '#' → logprob: -17.625022888183594
    10. '()[' → logprob: -17.875022888183594

Token 1118: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -10.625027656555176
    3. '1' → logprob: -12.625027656555176
    4. '(' → logprob: -16.500028610229492
    5. '```' → logprob: -17.000028610229492
    6. '{' → logprob: -18.125028610229492
    7. '   ' → logprob: -18.625028610229492
    8. '2' → logprob: -19.000028610229492
    9. '#' → logprob: -19.125028610229492
    10. '
' → logprob: -19.875028610229492

Token 1119: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00351644866168499
    2. ' -' → logprob: -5.878516674041748
    3. '[' → logprob: -7.253516674041748
    4. '-l' → logprob: -14.00351619720459
    5. '```' → logprob: -14.12851619720459
    6. '()-' → logprob: -14.37851619720459
    7. '1' → logprob: -15.00351619720459
    8. '-
' → logprob: -15.62851619720459
    9. '–' → logprob: -15.62851619720459
    10. ' ' → logprob: -15.75351619720459

Token 1120: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.751746746478602e-05
    2. ' l' → logprob: -10.00004768371582
    3. '
' → logprob: -14.25004768371582
    4. '```' → logprob: -14.50004768371582
    5. '	l' → logprob: -15.00004768371582
    6. '2' → logprob: -15.25004768371582
    7. '   ' → logprob: -15.62504768371582
    8. '1' → logprob: -17.37504768371582
    9. '           ' → logprob: -17.50004768371582
    10. '  ' → logprob: -18.00004768371582

Token 1121: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.47495681833243e-05
    2. '2' → logprob: -10.875024795532227
    3. '1' → logprob: -12.125024795532227
    4. ' l' → logprob: -14.875024795532227
    5. '```' → logprob: -16.750024795532227
    6. '
' → logprob: -17.750024795532227
    7. '	l' → logprob: -17.750024795532227
    8. '_l' → logprob: -19.875024795532227
    9. ''l' → logprob: -20.375024795532227
    10. '0' → logprob: -21.000024795532227

Token 1122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2961512513575144e-05
    2. '1' → logprob: -10.750022888183594
    3. '```' → logprob: -13.875022888183594
    4. '(' → logprob: -15.625022888183594
    5. '[
' → logprob: -15.625022888183594
    6. '][' → logprob: -17.125022888183594
    7. '0' → logprob: -17.750022888183594
    8. ')' → logprob: -17.875022888183594
    9. '   ' → logprob: -18.000022888183594
    10. ')[' → logprob: -18.250022888183594

Token 1123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008673430420458317
    2. '[' → logprob: -4.758673667907715
    3. '0' → logprob: -10.008673667907715
    4. '(' → logprob: -11.383673667907715
    5. '```' → logprob: -14.133673667907715
    6. '{' → logprob: -14.758673667907715
    7. '<|end|>' → logprob: -14.758673667907715
    8. '[
' → logprob: -14.758673667907715
    9. '2' → logprob: -15.258673667907715
    10. '   ' → logprob: -16.2586727142334

Token 1124: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19957897067070007
    2. ')' → logprob: -1.9495790004730225
    3. ')*(' → logprob: -3.3245790004730225
    4. ')(' → logprob: -7.199578762054443
    5. '0' → logprob: -7.324578762054443
    6. '])' → logprob: -7.699578762054443
    7. '(' → logprob: -8.074579238891602
    8. '())' → logprob: -9.074579238891602
    9. '               ' → logprob: -9.824579238891602
    10. '```' → logprob: -10.324579238891602

Token 1125: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.46170496940612793
    2. '[' → logprob: -1.586704969406128
    3. ')*(' → logprob: -1.836704969406128
    4. ')' → logprob: -6.086705207824707
    5. '(' → logprob: -6.336705207824707
    6. '```' → logprob: -6.836705207824707
    7. ']*(' → logprob: -8.211705207824707
    8. ' *' → logprob: -8.586705207824707
    9. '``' → logprob: -10.086705207824707
    10. '[](' → logprob: -10.336705207824707

Token 1126: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00021855637896806002
    2. '(l' → logprob: -8.500218391418457
    3. ' l' → logprob: -11.375218391418457
    4. '(' → logprob: -12.625218391418457
    5. ' (' → logprob: -15.375218391418457
    6. '	l' → logprob: -17.125219345092773
    7. '
' → logprob: -17.250219345092773
    8. '```' → logprob: -18.500219345092773
    9. '[l' → logprob: -18.875219345092773
    10. ')' → logprob: -19.875219345092773

Token 1127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047702479059807956
    2. '[' → logprob: -8.625476837158203
    3. '0' → logprob: -8.625476837158203
    4. 'l' → logprob: -9.125476837158203
    5. '2' → logprob: -12.500476837158203
    6. '```' → logprob: -12.500476837158203
    7. '(' → logprob: -14.250476837158203
    8. ' l' → logprob: -14.875476837158203
    9. ' ' → logprob: -15.875476837158203
    10. '   ' → logprob: -16.000476837158203

Token 1128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8312570318812504e-05
    2. '0' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.500018119812012
    4. '(' → logprob: -14.625018119812012
    5. '```' → logprob: -15.250018119812012
    6. '[
' → logprob: -16.375019073486328
    7. '][' → logprob: -16.625019073486328
    8. '1' → logprob: -16.875019073486328
    9. '       ' → logprob: -17.250019073486328
    10. '2' → logprob: -17.250019073486328

Token 1129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '1' → logprob: -16.375003814697266
    4. '{' → logprob: -18.125003814697266
    5. '```' → logprob: -18.125003814697266
    6. '۰' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.625003814697266
    8. '
' → logprob: -18.750003814697266
    9. ' ' → logprob: -19.000003814697266
    10. '(' → logprob: -19.375003814697266

Token 1130: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00753872562199831
    2. ' -' → logprob: -5.132538795471191
    3. '-l' → logprob: -6.632538795471191
    4. '[' → logprob: -8.507538795471191
    5. '0' → logprob: -9.507538795471191
    6. '-
' → logprob: -11.257538795471191
    7. '2' → logprob: -14.007538795471191
    8. 'l' → logprob: -15.132538795471191
    9. '()-' → logprob: -15.507538795471191
    10. ' -
' → logprob: -15.632538795471191

Token 1131: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3856492842023727e-06
    2. ' l' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '	l' → logprob: -15.875000953674316
    5. '-l' → logprob: -19.000001907348633
    6. '(l' → logprob: -19.000001907348633
    7. '  ' → logprob: -19.125001907348633
    8. '
' → logprob: -19.375001907348633
    9. '    ' → logprob: -19.500001907348633
    10. '       ' → logprob: -20.125001907348633

Token 1132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012094692647224292
    2. '3' → logprob: -9.125121116638184
    3. '```' → logprob: -11.625121116638184
    4. '
' → logprob: -14.000121116638184
    5. '-' → logprob: -14.125121116638184
    6. '1' → logprob: -14.375121116638184
    7. '[' → logprob: -15.000121116638184
    8. 'l' → logprob: -16.250120162963867
    9. ' ' → logprob: -16.375120162963867
    10. '۲' → logprob: -16.500120162963867

Token 1133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033545205369591713
    2. '0' → logprob: -5.753354549407959
    3. '(' → logprob: -9.3783540725708
    4. '2' → logprob: -9.8783540725708
    5. ',' → logprob: -11.5033540725708
    6. '[
' → logprob: -11.8783540725708
    7. '-' → logprob: -12.5033540725708
    8. '#' → logprob: -12.5033540725708
    9. '{
' → logprob: -12.6283540725708
    10. '{' → logprob: -12.8783540725708

Token 1134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. '1' → logprob: -13.50000286102295
    3. '[' → logprob: -14.00000286102295
    4. '۰' → logprob: -16.375001907348633
    5. '2' → logprob: -16.875001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.875001907348633
    9. '-' → logprob: -18.937501907348633
    10. '{' → logprob: -19.125001907348633

Token 1135: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.707997428951785e-05
    2. '):' → logprob: -10.875077247619629
    3. '())' → logprob: -11.125077247619629
    4. ')
' → logprob: -11.375077247619629
    5. '):
' → logprob: -11.375077247619629
    6. '])' → logprob: -11.625077247619629
    7. '               ' → logprob: -12.750077247619629
    8. ' )' → logprob: -12.750077247619629
    9. '})' → logprob: -13.875077247619629
    10. '))' → logprob: -14.000077247619629

Token 1136: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1271634101867676
    2. '	' → logprob: -1.6271634101867676
    3. '		' → logprob: -2.5021634101867676
    4. '		
' → logprob: -2.8771634101867676
    5. '	       ' → logprob: -3.0021634101867676
    6. '        
' → logprob: -3.2521634101867676
    7. '    
' → logprob: -3.5021634101867676
    8. '	
' → logprob: -3.5021634101867676
    9. '	return' → logprob: -3.6271634101867676
    10. ')' → logprob: -3.6271634101867676

Token 1137: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04578208178281784
    2. '       ' → logprob: -3.6707820892333984
    3. '   ' → logprob: -4.920782089233398
    4. '		' → logprob: -5.420782089233398
    5. '	       ' → logprob: -5.920782089233398
    6. '
' → logprob: -6.295782089233398
    7. '	   ' → logprob: -6.295782089233398
    8. '		   ' → logprob: -8.170782089233398
    9. '	def' → logprob: -8.170782089233398
    10. '```' → logprob: -8.920782089233398

Token 1138: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.002503601834177971
    2. '_query' → logprob: -6.252503395080566
    3. 'get' → logprob: -7.627503395080566
    4. ' query' → logprob: -9.627503395080566
    5. 'eval' → logprob: -11.502503395080566
    6. '	query' → logprob: -12.752503395080566
    7. 'Query' → logprob: -13.002503395080566
    8. '=query' → logprob: -13.502503395080566
    9. 'ask' → logprob: -13.877503395080566
    10. '_get' → logprob: -14.252503395080566

Token 1139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006644560489803553
    2. '(' → logprob: -5.1316447257995605
    3. ' (' → logprob: -8.006644248962402
    4. '(
' → logprob: -8.756644248962402
    5. '(x' → logprob: -9.881644248962402
    6. ',' → logprob: -10.256644248962402
    7. '<|end|>' → logprob: -11.131644248962402
    8. '(int' → logprob: -11.506644248962402
    9. '(t' → logprob: -11.506644248962402
    10. '{' → logprob: -11.881644248962402

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007714636158198118
    2. '(' → logprob: -6.757714748382568
    3. ' ,' → logprob: -7.007714748382568
    4. '(self' → logprob: -7.007714748382568
    5. '{' → logprob: -7.632714748382568
    6. '(token' → logprob: -7.632714748382568
    7. '<|end|>' → logprob: -7.632714748382568
    8. ')(
' → logprob: -8.13271427154541
    9. '):
' → logprob: -8.25771427154541
    10. '[' → logprob: -8.25771427154541

Token 1141: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0022481500636786222
    2. ' x' → logprob: -6.627248287200928
    3. 'i' → logprob: -7.002248287200928
    4. 'self' → logprob: -12.12724781036377
    5. '0' → logprob: -13.12724781036377
    6. ' i' → logprob: -13.62724781036377
    7. ')' → logprob: -13.75224781036377
    8. ')x' → logprob: -13.87724781036377
    9. 'q' → logprob: -14.62724781036377
    10. '<|end|>' → logprob: -15.37724781036377

Token 1142: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7174635529518127
    2. '):' → logprob: -1.592463493347168
    3. '       ' → logprob: -2.217463493347168
    4. ',' → logprob: -2.592463493347168
    5. '(' → logprob: -3.592463493347168
    6. ':' → logprob: -4.217463493347168
    7. '   ' → logprob: -4.342463493347168
    8. ')' → logprob: -4.467463493347168
    9. '[' → logprob: -4.717463493347168
    10. '<|end|>' → logprob: -4.717463493347168

Token 1143: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47110414505004883
    2. '0' → logprob: -1.9711041450500488
    3. '           ' → logprob: -2.596104145050049
    4. '               ' → logprob: -2.971104145050049
    5. ' 
' → logprob: -3.346104145050049
    6. '        ' → logprob: -4.221104145050049
    7. '   ' → logprob: -4.596104145050049
    8. '        
' → logprob: -4.721104145050049
    9. '```' → logprob: -5.346104145050049
    10. ' ' → logprob: -5.596104145050049

Token 1144: ' if' (ID: 538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02355385199189186
    2. '               ' → logprob: -4.648553848266602
    3. '1' → logprob: -4.898553848266602
    4. '       ' → logprob: -6.273553848266602
    5. 'self' → logprob: -6.523553848266602
    6. ' ' → logprob: -7.648553848266602
    7. '\' → logprob: -7.898553848266602
    8. ' self' → logprob: -8.148553848266602
    9. '           ' → logprob: -8.648553848266602
    10. '8' → logprob: -8.773553848266602

Token 1145: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9194138646125793
    2. ' not' → logprob: -1.1694138050079346
    3. 'not' → logprob: -1.4194138050079346
    4. 'self' → logprob: -3.1694138050079346
    5. ' len' → logprob: -5.169414043426514
    6. ' self' → logprob: -6.794414043426514
    7. '(len' → logprob: -12.919413566589355
    8. '   ' → logprob: -13.169413566589355
    9. '```' → logprob: -14.169413566589355
    10. '0' → logprob: -15.044413566589355

Token 1146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -17.250036239624023
    4. 'len' → logprob: -17.625036239624023
    5. '
' → logprob: -18.625036239624023
    6. '[self' → logprob: -19.500036239624023
    7. '   ' → logprob: -19.875036239624023
    8. '1' → logprob: -19.875036239624023
    9. ' ' → logprob: -19.875036239624023
    10. '	self' → logprob: -20.750036239624023

Token 1147: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00010223194840364158
    2. '.' → logprob: -9.750102043151855
    3. '.tokens' → logprob: -10.375102043151855
    4. '.positions' → logprob: -12.750102043151855
    5. '	lines' → logprob: -13.500102043151855
    6. ').' → logprob: -13.500102043151855
    7. ' .' → logprob: -13.750102043151855
    8. '.pos' → logprob: -14.125102043151855
    9. '.s' → logprob: -14.250102043151855
    10. 'lines' → logprob: -14.500102043151855

Token 1148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18280541896820068
    2. ':
' → logprob: -1.9328054189682007
    3. ' or' → logprob: -4.43280553817749
    4. '[' → logprob: -5.68280553817749
    5. ':return' → logprob: -5.80780553817749
    6. 'or' → logprob: -5.93280553817749
    7. '```' → logprob: -7.80780553817749
    8. '==' → logprob: -8.057805061340332
    9. '           ' → logprob: -8.432805061340332
    10. '               ' → logprob: -9.932805061340332

Token 1149: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.613978385925293
    2. '0' → logprob: -1.113978385925293
    3. '               ' → logprob: -2.988978385925293
    4. ' return' → logprob: -3.988978385925293
    5. '```' → logprob: -4.238978385925293
    6. '           ' → logprob: -4.363978385925293
    7. '1' → logprob: -4.988978385925293
    8. '                       ' → logprob: -5.488978385925293
    9. 'return' → logprob: -5.738978385925293
    10. ' self' → logprob: -6.363978385925293

Token 1150: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4776725769042969
    2. 'return' (adapté à ' return') → logprob: -1.2276725769042969
    3. ' return' → logprob: -2.477672576904297
    4. ' ' → logprob: -5.977672576904297
    5. '               ' → logprob: -8.477672576904297
    6. '                   ' → logprob: -9.852672576904297
    7. '           ' → logprob: -11.102672576904297
    8. '   ' → logprob: -11.352672576904297
    9. ' (' → logprob: -11.602672576904297
    10. '(' → logprob: -11.977672576904297

Token 1151: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.45049965381622314
    2. '0' → logprob: -1.0754996538162231
    3. ' -' → logprob: -4.575499534606934
    4. ' float' → logprob: -5.075499534606934
    5. '-' → logprob: -5.700499534606934
    6. '-f' → logprob: -7.450499534606934
    7. ' ' → logprob: -7.700499534606934
    8. '   ' → logprob: -8.950499534606934
    9. '-(' → logprob: -8.950499534606934
    10. '-inf' → logprob: -8.950499534606934

Token 1152: 'float' (ID: 7829)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016140079824253917
    2. 'float' → logprob: -6.501614093780518
    3. '1' → logprob: -9.75161361694336
    4. 'int' → logprob: -9.87661361694336
    5. '100' → logprob: -13.37661361694336
    6. '999' → logprob: -15.75161361694336
    7. ' ' → logprob: -16.12661361694336
    8. '[int' → logprob: -16.87661361694336
    9. ' float' → logprob: -17.12661361694336
    10. 'sys' → logprob: -17.37661361694336

Token 1153: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.015651164576411247
    2. ''in' → logprob: -4.265651226043701
    3. ''s' → logprob: -7.640651226043701
    4. ''' → logprob: -7.890651226043701
    5. ''t' → logprob: -9.140650749206543
    6. ''ex' → logprob: -9.390650749206543
    7. 'inf' → logprob: -9.640650749206543
    8. '"' → logprob: -10.265650749206543
    9. ''op' → logprob: -10.390650749206543
    10. ''r' → logprob: -10.515650749206543

Token 1154: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.1846746951341629
    2. ''' → logprob: -2.1846747398376465
    3. ''in' → logprob: -2.9346747398376465
    4. ''ex' → logprob: -7.8096747398376465
    5. '('' → logprob: -7.9346747398376465
    6. '"' → logprob: -8.184674263000488
    7. ''op' → logprob: -8.434674263000488
    8. ''ap' → logprob: -8.684674263000488
    9. ''s' → logprob: -8.934674263000488
    10. ''un' → logprob: -9.059674263000488

Token 1155: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16345591843128204
    2. ')
' → logprob: -2.5384559631347656
    3. '')' → logprob: -3.2884559631347656
    4. '               ' → logprob: -3.9134559631347656
    5. '')
' → logprob: -4.288455963134766
    6. '           ' → logprob: -8.288455963134766
    7. ')')
' → logprob: -8.788455963134766
    8. ' )' → logprob: -9.413455963134766
    9. ' )
' → logprob: -9.788455963134766
    10. ' ')
' → logprob: -10.288455963134766

Token 1156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07168184220790863
    2. '
' → logprob: -3.4466817378997803
    3. '		       ' → logprob: -4.321681976318359
    4. '       ' → logprob: -4.571681976318359
    5. '	       ' → logprob: -5.571681976318359
    6. '<|end|>' → logprob: -5.696681976318359
    7. '	           ' → logprob: -6.446681976318359
    8. '```' → logprob: -7.321681976318359
    9. '           ' → logprob: -7.446681976318359
    10. '		
' → logprob: -7.946681976318359

Token 1157: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7527880668640137
    2. 'left' → logprob: -1.0027880668640137
    3. ' left' → logprob: -3.2527880668640137
    4. ' l' → logprob: -3.5027880668640137
    5. '               ' → logprob: -3.8777880668640137
    6. '       ' → logprob: -4.252788066864014
    7. 'low' → logprob: -4.377788066864014
    8. '```' → logprob: -4.502788066864014
    9. 'while' → logprob: -4.627788066864014
    10. 'def' → logprob: -5.127788066864014

Token 1158: ' Move' (ID: 25485)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.44467833638191223
    2. 'left' → logprob: -1.1946783065795898
    3. ' left' → logprob: -4.19467830657959
    4. ' l' → logprob: -4.31967830657959
    5. '               ' → logprob: -5.06967830657959
    6. 'while' → logprob: -5.44467830657959
    7. 'low' → logprob: -5.56967830657959
    8. 'lo' → logprob: -5.56967830657959
    9. '0' → logprob: -5.81967830657959
    10. 'def' → logprob: -5.81967830657959

Token 1159: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018368955701589584
    2. ' self' → logprob: -4.018368721008301
    3. 'while' → logprob: -8.6433687210083
    4. ' while' → logprob: -11.6433687210083
    5. '1' → logprob: -12.0183687210083
    6. '(self' → logprob: -12.1433687210083
    7. 'left' → logprob: -12.5183687210083
    8. '           ' → logprob: -12.7683687210083
    9. '```' → logprob: -12.7683687210083
    10. '0' → logprob: -13.0183687210083

Token 1160: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6569019556045532
    2. '+=' → logprob: -1.1569019556045532
    3. 'while' → logprob: -2.7819018363952637
    4. ' =' → logprob: -3.1569018363952637
    5. ' +=' → logprob: -3.1569018363952637
    6. 'if' → logprob: -5.031901836395264
    7. '+' → logprob: -5.281901836395264
    8. ',' → logprob: -6.281901836395264
    9. '               ' → logprob: -7.281901836395264
    10. ' while' → logprob: -7.406901836395264

Token 1161: ' best' (ID: 1636)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1509431153535843
    2. 'min' → logprob: -2.2759430408477783
    3. 'the' → logprob: -3.7759430408477783
    4. 'right' → logprob: -5.150943279266357
    5. ' len' → logprob: -5.900943279266357
    6. '1' → logprob: -6.650943279266357
    7. 'left' → logprob: -6.650943279266357
    8. '(len' → logprob: -6.775943279266357
    9. 'max' → logprob: -7.275943279266357
    10. ' the' → logprob: -8.0259428024292

Token 1162: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5491397380828857
    2. ' self' → logprob: -1.4241397380828857
    3. ' right' → logprob: -3.0491397380828857
    4. '(self' → logprob: -3.4241397380828857
    5. ' to' → logprob: -4.424139976501465
    6. ' def' → logprob: -4.424139976501465
    7. 'right' → logprob: -4.674139976501465
    8. '```' → logprob: -4.799139976501465
    9. 'def' → logprob: -5.049139976501465
    10. 'pos' → logprob: -5.174139976501465

Token 1163: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20242896676063538
    2. 'while' → logprob: -1.702428936958313
    3. '```' → logprob: -7.702428817749023
    4. 'While' → logprob: -7.952428817749023
    5. '	while' → logprob: -10.327428817749023
    6. ' if' → logprob: -10.452428817749023
    7. '
' → logprob: -10.952428817749023
    8. '       ' → logprob: -11.077428817749023
    9. '+' → logprob: -11.202428817749023
    10. '               ' → logprob: -11.202428817749023

Token 1164: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020807012333534658
    2. ' x' → logprob: -8.500207901000977
    3. 'the' → logprob: -12.375207901000977
    4. 'self' → logprob: -15.875207901000977
    5. ' the' → logprob: -16.125207901000977
    6. '               ' → logprob: -17.625207901000977
    7. '```' → logprob: -17.875207901000977
    8. '      ' → logprob: -18.000207901000977
    9. '           ' → logprob: -18.000207901000977
    10. '
' → logprob: -18.125207901000977

Token 1165: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05346836522221565
    2. '```' → logprob: -4.178468227386475
    3. ' while' → logprob: -4.803468227386475
    4. '
' → logprob: -4.803468227386475
    5. '       ' → logprob: -5.428468227386475
    6. ' if' → logprob: -5.553468227386475
    7. 'while' → logprob: -5.803468227386475
    8. ',' → logprob: -6.678468227386475
    9. '                
' → logprob: -6.803468227386475
    10. '\' → logprob: -6.928468227386475

Token 1166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5056518912315369
    2. '```' → logprob: -1.5056519508361816
    3. '       ' → logprob: -3.0056519508361816
    4. '	' → logprob: -3.3806519508361816
    5. '			' → logprob: -3.6306519508361816
    6. '``' → logprob: -4.005651950836182
    7. '		       ' → logprob: -5.255651950836182
    8. '   ' → logprob: -5.505651950836182
    9. '\t' → logprob: -5.755651950836182
    10. ' ' → logprob: -5.880651950836182

Token 1167: ' while' (ID: 2049)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9172511696815491
    2. ' if' → logprob: -1.4172511100769043
    3. ' while' → logprob: -2.1672511100769043
    4. '       ' → logprob: -2.5422511100769043
    5. 'if' → logprob: -3.4172511100769043
    6. '	' → logprob: -3.6672511100769043
    7. 'while' (adapté à ' while') → logprob: -3.7922511100769043
    8. '1' → logprob: -4.167251110076904
    9. ' ' → logprob: -4.667251110076904
    10. '           ' → logprob: -4.792251110076904

Token 1168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006145753897726536
    2. ' self' → logprob: -5.38114595413208
    3. 'len' → logprob: -6.50614595413208
    4. ' len' → logprob: -11.256145477294922
    5. '(self' → logprob: -12.006145477294922
    6. '   ' → logprob: -12.256145477294922
    7. 'pos' → logprob: -13.381145477294922
    8. '(len' → logprob: -13.756145477294922
    9. ' ' → logprob: -13.881145477294922
    10. '
' → logprob: -13.881145477294922

Token 1169: '.pos' (ID: 25321)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.1408735066652298
    2. '.' → logprob: -2.640873432159424
    3. '.pos' → logprob: -3.765873432159424
    4. '.tokens' → logprob: -4.265873432159424
    5. 'lines' → logprob: -4.640873432159424
    6. '```' → logprob: -5.015873432159424
    7. ' .' → logprob: -6.265873432159424
    8. '.user' → logprob: -6.765873432159424
    9. 'pos' → logprob: -7.140873432159424
    10. ' lines' → logprob: -7.515873432159424

Token 1170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05638581141829491
    2. '<len' → logprob: -3.4313857555389404
    3. ' +' → logprob: -4.0563859939575195
    4. '<' → logprob: -5.4313859939575195
    5. ' <' → logprob: -7.1813859939575195
    6. '<size' → logprob: -10.55638599395752
    7. '<ll' → logprob: -13.55638599395752
    8. '<int' → logprob: -13.80638599395752
    9. '<n' → logprob: -13.93138599395752
    10. '<num' → logprob: -14.30638599395752

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '+' → logprob: -17.5
    4. '```' → logprob: -18.75
    5. '   ' → logprob: -20.375
    6. '
' → logprob: -20.75
    7. '  ' → logprob: -21.625
    8. '0' → logprob: -22.0
    9. '2' → logprob: -22.75
    10. '=' → logprob: -23.125

Token 1172: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1922486275434494
    2. ' <' → logprob: -2.442248582839966
    3. '<len' → logprob: -2.442248582839966
    4. '<size' → logprob: -7.817248821258545
    5. '<n' → logprob: -8.942248344421387
    6. '<|end|>' → logprob: -9.567248344421387
    7. '<int' → logprob: -9.692248344421387
    8. '<num' → logprob: -9.942248344421387
    9. '<=' → logprob: -10.067248344421387
    10. '<th' → logprob: -10.567248344421387

Token 1173: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.5048530030981055e-06
    2. ' len' → logprob: -13.500001907348633
    3. '(len' → logprob: -16.000001907348633
    4. '[len' → logprob: -18.125001907348633
    5. '
' → logprob: -19.250001907348633
    6. '=len' → logprob: -20.125001907348633
    7. '<len' → logprob: -20.250001907348633
    8. '	len' → logprob: -21.125001907348633
    9. ',len' → logprob: -21.625001907348633
    10. '   ' → logprob: -21.875001907348633

Token 1174: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002661039761733264
    2. 'self' → logprob: -8.250266075134277
    3. ' self' → logprob: -12.500266075134277
    4. '(' → logprob: -14.750266075134277
    5. '(
' → logprob: -15.375266075134277
    6. '=self' → logprob: -15.500266075134277
    7. ' (' → logprob: -16.000267028808594
    8. '[self' → logprob: -16.375267028808594
    9. '```' → logprob: -16.875267028808594
    10. '	self' → logprob: -17.250267028808594

Token 1175: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0003932576219085604
    2. 'lines' → logprob: -8.00039291381836
    3. '	lines' → logprob: -10.62539291381836
    4. '(lines' → logprob: -11.00039291381836
    5. '_lines' → logprob: -12.62539291381836
    6. '.tokens' → logprob: -12.75039291381836
    7. '```' → logprob: -13.00039291381836
    8. '.' → logprob: -13.62539291381836
    9. ' lines' → logprob: -13.75039291381836
    10. '.layers' → logprob: -13.87539291381836

Token 1176: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869030177593231
    2. 'and' → logprob: -1.1369030475616455
    3. ')' → logprob: -10.636902809143066
    4. '           ' → logprob: -13.136902809143066
    5. ']' → logprob: -13.636902809143066
    6. ' и' → logprob: -13.886902809143066
    7. '```' → logprob: -13.886902809143066
    8. '	and' → logprob: -14.636902809143066
    9. '               ' → logprob: -15.011902809143066
    10. ' và' → logprob: -15.136902809143066

Token 1177: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.31327006220817566
    2. ' and' → logprob: -1.313270092010498
    3. ' ' → logprob: -12.31326961517334
    4. '0' → logprob: -13.56326961517334
    5. '1' → logprob: -14.81326961517334
    6. '   ' → logprob: -14.81326961517334
    7. '	and' → logprob: -14.93826961517334
    8. '[' → logprob: -15.06326961517334
    9. ' и' → logprob: -15.43826961517334
    10. ')' → logprob: -15.56326961517334

Token 1178: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02347944676876068
    2. ' self' → logprob: -3.773479461669922
    3. '(self' → logprob: -8.648479461669922
    4. 'x' → logprob: -10.023479461669922
    5. '   ' → logprob: -12.648479461669922
    6. '
' → logprob: -13.023479461669922
    7. ' ' → logprob: -13.273479461669922
    8. ' x' → logprob: -13.273479461669922
    9. '	self' → logprob: -13.523479461669922
    10. '[self' → logprob: -13.648479461669922

Token 1179: '._' (ID: 2697)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.36569759249687195
    2. '.lines' → logprob: -1.2406976222991943
    3. '[' → logprob: -4.615697383880615
    4. '.' → logprob: -5.615697383880615
    5. 'pos' → logprob: -6.490697383880615
    6. '	lines' → logprob: -7.115697383880615
    7. ' lines' → logprob: -8.115697860717773
    8. '```' → logprob: -8.365697860717773
    9. '.pos' → logprob: -8.990697860717773
    10. '0' → logprob: -8.990697860717773

Token 1180: 'value' (ID: 1594)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6376078128814697
    2. 'is' → logprob: -0.7626078128814697
    3. '(lines' → logprob: -5.512607574462891
    4. ' lines' → logprob: -7.887607574462891
    5. '```' → logprob: -7.887607574462891
    6. '_lines' → logprob: -10.51260757446289
    7. ' is' → logprob: -10.88760757446289
    8. '1' → logprob: -10.88760757446289
    9. '.lines' → logprob: -10.88760757446289
    10. '_is' → logprob: -11.01260757446289

Token 1181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003749367780983448
    2. '(' → logprob: -5.628749370574951
    3. ' (' → logprob: -9.503748893737793
    4. '(
' → logprob: -10.378748893737793
    5. 'self' → logprob: -11.378748893737793
    6. ' =' → logprob: -11.503748893737793
    7. '=self' → logprob: -11.878748893737793
    8. '=' → logprob: -11.878748893737793
    9. '((' → logprob: -13.128748893737793
    10. '```' → logprob: -13.503748893737793

Token 1182: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.10795219242572784
    2. 'lines' → logprob: -2.357952117919922
    3. '.pos' → logprob: -5.357952117919922
    4. 'pos' → logprob: -5.857952117919922
    5. 'self' → logprob: -9.107952117919922
    6. '_lines' → logprob: -10.857952117919922
    7. '	lines' → logprob: -11.857952117919922
    8. ').' → logprob: -12.607952117919922
    9. ' lines' → logprob: -12.857952117919922
    10. ')' → logprob: -13.232952117919922

Token 1183: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0022027131635695696
    2. 'self' → logprob: -6.12720251083374
    3. ' self' → logprob: -12.252202987670898
    4. '[
' → logprob: -12.377202987670898
    5. ',self' → logprob: -12.752202987670898
    6. '[' → logprob: -13.127202987670898
    7. '	self' → logprob: -13.502202987670898
    8. '(self' → logprob: -13.877202987670898
    9. ')' → logprob: -14.877202987670898
    10. ',' → logprob: -15.377202987670898

Token 1184: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.1279553291387856e-05
    2. 'pos' → logprob: -11.750011444091797
    3. '[pos' → logprob: -14.125011444091797
    4. '.lines' → logprob: -14.500011444091797
    5. '   ' → logprob: -14.750011444091797
    6. '
' → logprob: -14.875011444091797
    7. 'self' → logprob: -15.000011444091797
    8. ',pos' → logprob: -15.125011444091797
    9. '	pos' → logprob: -15.500011444091797
    10. ' .' → logprob: -16.125011444091797

Token 1185: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03405296429991722
    2. ',' → logprob: -3.534052848815918
    3. ' +' → logprob: -6.909052848815918
    4. ',x' → logprob: -7.034052848815918
    5. '),' → logprob: -7.159052848815918
    6. ')[' → logprob: -7.659052848815918
    7. '+x' → logprob: -8.284052848815918
    8. '[' → logprob: -8.409052848815918
    9. '```' → logprob: -8.784052848815918
    10. '   ' → logprob: -8.784052848815918

Token 1186: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03373986482620239
    2. 'self' → logprob: -3.4087398052215576
    3. ' x' → logprob: -10.158740043640137
    4. '   ' → logprob: -11.033740043640137
    5. '(self' → logprob: -11.283740043640137
    6. ' self' → logprob: -11.533740043640137
    7. '(x' → logprob: -12.033740043640137
    8. '	x' → logprob: -13.283740043640137
    9. ')x' → logprob: -13.533740043640137
    10. '{x' → logprob: -13.658740043640137

Token 1187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008007843047380447
    2. ')<' → logprob: -4.883008003234863
    3. ')>' → logprob: -8.883008003234863
    4. ')<=' → logprob: -9.133008003234863
    5. ')>=' → logprob: -10.633008003234863
    6. '<' → logprob: -10.633008003234863
    7. ' )' → logprob: -10.758008003234863
    8. '+' → logprob: -11.008008003234863
    9. '=' → logprob: -11.383008003234863
    10. '```' → logprob: -11.633008003234863

Token 1188: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4747511148452759
    2. '<' → logprob: -1.3497511148452759
    3. ' <=' → logprob: -2.5997509956359863
    4. '<=' → logprob: -3.5997509956359863
    5. '[' → logprob: -5.849750995635986
    6. ')' → logprob: -5.849750995635986
    7. '()<' → logprob: -5.974750995635986
    8. '(' → logprob: -6.599750995635986
    9. '```' → logprob: -6.724750995635986
    10. ' >=' → logprob: -6.849750995635986

Token 1189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006726499181240797
    2. ' self' → logprob: -5.006726264953613
    3. '(self' → logprob: -12.256726264953613
    4. '               ' → logprob: -12.631726264953613
    5. '   ' → logprob: -13.756726264953613
    6. '                   ' → logprob: -14.256726264953613
    7. '	self' → logprob: -14.756726264953613
    8. '           ' → logprob: -14.881726264953613
    9. '
' → logprob: -15.006726264953613
    10. '             ' → logprob: -16.63172721862793

Token 1190: '._' (ID: 2697)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.16801249980926514
    2. '._' → logprob: -1.9180124998092651
    3. '_lines' → logprob: -4.918012619018555
    4. ' _' → logprob: -8.418012619018555
    5. '_values' → logprob: -9.293012619018555
    6. '```' → logprob: -10.418012619018555
    7. '.value' → logprob: -10.668012619018555
    8. '.' → logprob: -10.668012619018555
    9. '_val' → logprob: -11.418012619018555
    10. '_code' → logprob: -11.918012619018555

Token 1191: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.2664456789934775e-06
    2. '_value' → logprob: -13.875000953674316
    3. ' value' → logprob: -15.875000953674316
    4. '
' → logprob: -16.250001907348633
    5. '.value' → logprob: -16.625001907348633
    6. '(value' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '	value' → logprob: -19.375001907348633
    9. '"value' → logprob: -19.500001907348633
    10. 'query' → logprob: -19.500001907348633

Token 1192: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019650737522169948
    2. 'self' → logprob: -9.12519645690918
    3. ' (' → logprob: -9.62519645690918
    4. '(' → logprob: -11.25019645690918
    5. ' self' → logprob: -12.00019645690918
    6. '           ' → logprob: -14.37519645690918
    7. '   ' → logprob: -14.50019645690918
    8. '(
' → logprob: -15.50019645690918
    9. '               ' → logprob: -15.50019645690918
    10. '[self' → logprob: -15.75019645690918

Token 1193: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.008634188212454319
    2. 'lines' → logprob: -4.758634090423584
    3. '(lines' → logprob: -11.758634567260742
    4. '	lines' → logprob: -12.008634567260742
    5. ' lines' → logprob: -12.508634567260742
    6. 'LINES' → logprob: -14.383634567260742
    7. '_lines' → logprob: -14.633634567260742
    8. 'Lines' → logprob: -15.508634567260742
    9. '```' → logprob: -15.883634567260742
    10. '_LINES' → logprob: -16.133634567260742

Token 1194: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.004129338078200817
    2. 'self' → logprob: -5.504129409790039
    3. ' self' → logprob: -10.754129409790039
    4. '(self' → logprob: -11.254129409790039
    5. '[
' → logprob: -11.879129409790039
    6. '[' → logprob: -11.879129409790039
    7. '[(' → logprob: -13.879129409790039
    8. '	self' → logprob: -14.254129409790039
    9. '   ' → logprob: -14.629129409790039
    10. '```' → logprob: -15.379129409790039

Token 1195: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00011307948443572968
    2. 'pos' → logprob: -9.125113487243652
    3. '[pos' → logprob: -13.000113487243652
    4. '	pos' → logprob: -14.000113487243652
    5. '+' → logprob: -14.750113487243652
    6. '_pos' → logprob: -15.625113487243652
    7. '.' → logprob: -15.875113487243652
    8. '
' → logprob: -16.625112533569336
    9. ',pos' → logprob: -16.750112533569336
    10. ' .' → logprob: -17.375112533569336

Token 1196: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024832691997289658
    2. ' +' → logprob: -6.002483367919922
    3. '[' → logprob: -12.377483367919922
    4. '   ' → logprob: -13.502483367919922
    5. '+
' → logprob: -14.127483367919922
    6. '```' → logprob: -14.627483367919922
    7. '＋' → logprob: -15.252483367919922
    8. '+self' → logprob: -15.627483367919922
    9. ' ' → logprob: -16.252483367919922
    10. ']+' → logprob: -16.502483367919922

Token 1197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'pos' → logprob: -12.000007629394531
    3. '+' → logprob: -14.375007629394531
    4. '```' → logprob: -15.125007629394531
    5. ' ' → logprob: -15.250007629394531
    6. '_pos' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.87500762939453
    8. '(pos' → logprob: -18.25000762939453
    9. '-' → logprob: -18.62500762939453
    10. 'self' → logprob: -18.75000762939453

Token 1198: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00091050990158692
    2. '],' → logprob: -7.37591028213501
    3. '[' → logprob: -9.375910758972168
    4. ' ,' → logprob: -9.625910758972168
    5. '   ' → logprob: -10.625910758972168
    6. '```' → logprob: -10.625910758972168
    7. ',(' → logprob: -10.875910758972168
    8. '),' → logprob: -11.000910758972168
    9. '][' → logprob: -11.375910758972168
    10. '(),' → logprob: -11.875910758972168

Token 1199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008618239313364029
    2. ' x' → logprob: -4.758618354797363
    3. '```' → logprob: -13.383618354797363
    4. '
' → logprob: -14.383618354797363
    5. '   ' → logprob: -15.133618354797363
    6. '(x' → logprob: -15.258618354797363
    7. ')' → logprob: -15.258618354797363
    8. ')x' → logprob: -15.508618354797363
    9. ' ' → logprob: -15.758618354797363
    10. ' (' → logprob: -16.258617401123047

Token 1200: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09794449061155319
    2. '+' → logprob: -3.097944498062134
    3. ')' → logprob: -4.347944259643555
    4. '               ' → logprob: -4.472944259643555
    5. ')+' → logprob: -5.347944259643555
    6. ' +' → logprob: -5.597944259643555
    7. ':
' → logprob: -5.597944259643555
    8. '):' → logprob: -5.722944259643555
    9. '       ' → logprob: -6.472944259643555
    10. ':' → logprob: -6.597944259643555

Token 1201: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.730110228061676
    2. '               ' → logprob: -0.980110228061676
    3. '   ' → logprob: -2.8551101684570312
    4. '```' → logprob: -3.3551101684570312
    5. '           ' → logprob: -4.355110168457031
    6. ' self' → logprob: -4.355110168457031
    7. 'self' → logprob: -4.855110168457031
    8. '                       ' → logprob: -5.355110168457031
    9. '[self' → logprob: -6.105110168457031
    10. '(self' → logprob: -6.230110168457031

Token 1202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2565837502479553
    2. ' self' → logprob: -1.5065836906433105
    3. '                   ' → logprob: -5.7565836906433105
    4. '               ' → logprob: -6.8815836906433105
    5. '   ' → logprob: -8.131584167480469
    6. '                       ' → logprob: -9.131584167480469
    7. '           ' → logprob: -10.881584167480469
    8. '
' → logprob: -11.631584167480469
    9. ' ' → logprob: -12.131584167480469
    10. '       ' → logprob: -12.381584167480469

Token 1203: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00017755765293259174
    2. 'pos' → logprob: -8.750177383422852
    3. ' .' → logprob: -11.875177383422852
    4. '.' → logprob: -11.875177383422852
    5. ' pos' → logprob: -13.375177383422852
    6. '+' → logprob: -13.750177383422852
    7. '	pos' → logprob: -14.000177383422852
    8. '+.' → logprob: -14.125177383422852
    9. '[pos' → logprob: -15.000177383422852
    10. ',pos' → logprob: -15.625177383422852

Token 1204: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11402791738510132
    2. '+' → logprob: -2.239027976989746
    3. ' +=' → logprob: -6.989027976989746
    4. ']+=' → logprob: -8.364027976989746
    5. '=' → logprob: -11.614027976989746
    6. '+='' → logprob: -11.739027976989746
    7. '```' → logprob: -11.864027976989746
    8. '++' → logprob: -11.989027976989746
    9. ' +' → logprob: -12.239027976989746
    10. '+
' → logprob: -12.739027976989746

Token 1205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -20.75
    4. '2' → logprob: -22.875
    5. '<|end|>' → logprob: -22.875
    6. '+' → logprob: -23.0
    7. '   ' → logprob: -23.125
    8. '0' → logprob: -23.75
    9. '۱' → logprob: -24.25
    10. '१' → logprob: -24.875

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -23.0
    4. '۱' → logprob: -23.25
    5. '<|end|>' → logprob: -23.375
    6. '１' → logprob: -23.75
    7. '   ' → logprob: -23.875
    8. '१' → logprob: -24.375
    9. '+' → logprob: -24.625
    10. '১' → logprob: -24.875

Token 1207: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20867441594600677
    2. '                   ' → logprob: -2.083674430847168
    3. '                       ' → logprob: -3.083674430847168
    4. '```' → logprob: -4.333674430847168
    5. ':
' → logprob: -5.958674430847168
    6. 'return' → logprob: -7.208674430847168
    7. ' return' → logprob: -7.833674430847168
    8. '``' → logprob: -8.208674430847168
    9. '
' → logprob: -8.583674430847168
    10. '           ' → logprob: -8.583674430847168

Token 1208: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027586841955780983
    2. '                   ' → logprob: -4.152586936950684
    3. '```' → logprob: -4.777586936950684
    4. ' return' → logprob: -7.152586936950684
    5. '       ' → logprob: -7.402586936950684
    6. '                       ' → logprob: -7.902586936950684
    7. '           ' → logprob: -8.027586936950684
    8. 'return' → logprob: -8.152586936950684
    9. '``' → logprob: -8.152586936950684
    10. '
' → logprob: -8.777586936950684

Token 1209: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7983500361442566
    2. '               ' → logprob: -1.4233500957489014
    3. 'return' (adapté à ' return') → logprob: -1.6733500957489014
    4. ' return' → logprob: -2.1733500957489014
    5. '                       ' → logprob: -5.673349857330322
    6. '```' → logprob: -6.548349857330322
    7. '           ' → logprob: -7.048349857330322
    8. '       ' → logprob: -7.048349857330322
    9. '
' → logprob: -7.923349857330322
    10. '   ' → logprob: -8.29835033416748

Token 1210: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740928113460541
    2. ' self' → logprob: -0.9740928411483765
    3. '(self' → logprob: -11.224092483520508
    4. 'int' → logprob: -13.599092483520508
    5. '   ' → logprob: -15.099092483520508
    6. ' int' → logprob: -15.224092483520508
    7. '	self' → logprob: -15.474092483520508
    8. '
' → logprob: -15.599092483520508
    9. ' ' → logprob: -16.099092483520508
    10. '    ' → logprob: -17.224092483520508

Token 1211: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.602024900028482e-05
    2. '.lines' → logprob: -10.125085830688477
    3. '_lines' → logprob: -10.750085830688477
    4. '_value' → logprob: -11.125085830688477
    5. '.' → logprob: -12.250085830688477
    6. '.value' → logprob: -13.500085830688477
    7. 'lines' → logprob: -14.500085830688477
    8. '_val' → logprob: -14.750085830688477
    9. ')._' → logprob: -14.750085830688477
    10. '_pos' → logprob: -15.000085830688477

Token 1212: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.9361264946837764e-07
    2. '(value' → logprob: -16.625
    3. ' value' → logprob: -17.25
    4. '_value' → logprob: -17.625
    5. '.value' → logprob: -18.75
    6. '
' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. ''value' → logprob: -20.875
    9. '"value' → logprob: -21.25
    10. '$value' → logprob: -21.375

Token 1213: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.968934758333489e-05
    2. ' (' → logprob: -10.375069618225098
    3. 'self' → logprob: -10.375069618225098
    4. '(' → logprob: -12.000069618225098
    5. ' self' → logprob: -14.125069618225098
    6. '(
' → logprob: -15.875069618225098
    7. '[self' → logprob: -16.375070571899414
    8. '```' → logprob: -16.875070571899414
    9. ')' → logprob: -17.500070571899414
    10. '*self' → logprob: -17.875070571899414

Token 1214: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.008616461418569088
    2. 'lines' → logprob: -4.7586164474487305
    3. '	lines' → logprob: -14.00861644744873
    4. 'self' → logprob: -14.38361644744873
    5. '(lines' → logprob: -15.38361644744873
    6. ' lines' → logprob: -15.63361644744873
    7. '_lines' → logprob: -16.383617401123047
    8. 'LINES' → logprob: -17.258617401123047
    9. 'Lines' → logprob: -18.008617401123047
    10. '.line' → logprob: -18.133617401123047

Token 1215: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00016313401283696294
    2. 'self' → logprob: -8.875163078308105
    3. '[' → logprob: -10.875163078308105
    4. '[
' → logprob: -12.625163078308105
    5. ' self' → logprob: -14.750163078308105
    6. '[pos' → logprob: -14.875163078308105
    7. '	self' → logprob: -15.750163078308105
    8. '(self' → logprob: -17.125164031982422
    9. '```' → logprob: -17.375164031982422
    10. '$self' → logprob: -17.625164031982422

Token 1216: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -3.4121114822482923e-06
    2. 'pos' → logprob: -12.875003814697266
    3. '[pos' → logprob: -14.375003814697266
    4. '	pos' → logprob: -16.625003814697266
    5. '.' → logprob: -17.875003814697266
    6. '_pos' → logprob: -18.750003814697266
    7. ' .' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.250003814697266
    9. ',pos' → logprob: -19.250003814697266
    10. ']' → logprob: -19.375003814697266

Token 1217: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003473825636319816
    2. '   ' → logprob: -9.375347137451172
    3. '),' → logprob: -9.500347137451172
    4. '],' → logprob: -10.000347137451172
    5. ')' → logprob: -10.375347137451172
    6. ' ,' → logprob: -10.375347137451172
    7. ',(' → logprob: -11.125347137451172
    8. '```' → logprob: -11.125347137451172
    9. '(' → logprob: -12.125347137451172
    10. ',
' → logprob: -12.125347137451172

Token 1218: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.676292231422849e-05
    2. ' x' → logprob: -11.000017166137695
    3. ')x' → logprob: -21.375017166137695
    4. '```' → logprob: -21.375017166137695
    5. '	x' → logprob: -21.625017166137695
    6. '
' → logprob: -21.625017166137695
    7. '(x' → logprob: -21.875017166137695
    8. '{x' → logprob: -22.750017166137695
    9. '"x' → logprob: -23.250017166137695
    10. '$x' → logprob: -23.750017166137695

Token 1219: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000285530521068722
    2. ')
' → logprob: -8.625285148620605
    3. '           ' → logprob: -10.375285148620605
    4. '       ' → logprob: -10.625285148620605
    5. '               ' → logprob: -11.000285148620605
    6. '   ' → logprob: -11.625285148620605
    7. ' )' → logprob: -12.500285148620605
    8. '                   ' → logprob: -12.625285148620605
    9. '[' → logprob: -12.875285148620605
    10. '(' → logprob: -13.125285148620605

Token 1220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09166578203439713
    2. '       ' → logprob: -2.591665744781494
    3. '```' → logprob: -4.466665744781494
    4. '   ' → logprob: -7.841665744781494
    5. '               ' → logprob: -8.091666221618652
    6. '        ' → logprob: -9.216666221618652
    7. '	       ' → logprob: -9.466666221618652
    8. '            ' → logprob: -9.966666221618652
    9. '          ' → logprob: -10.216666221618652
    10. '            
' → logprob: -10.591666221618652

Token 1221: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.868373453617096
    2. '       ' → logprob: -0.993373453617096
    3. '           ' → logprob: -1.7433733940124512
    4. '```' → logprob: -4.493373394012451
    5. ' def' → logprob: -4.618373394012451
    6. '   ' → logprob: -4.743373394012451
    7. '	def' → logprob: -5.743373394012451
    8. '	' → logprob: -7.618373394012451
    9. '	   ' → logprob: -7.743373394012451
    10. '	       ' → logprob: -8.36837387084961

Token 1222: ' _' (ID: 1175)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00010926496179308742
    2. 'value' → logprob: -9.125109672546387
    3. '_values' → logprob: -16.62510871887207
    4. ' _' → logprob: -16.75010871887207
    5. '_' → logprob: -17.00010871887207
    6. 'add' → logprob: -18.12510871887207
    7. '_add' → logprob: -18.75010871887207
    8. 'Value' → logprob: -19.00010871887207
    9. '\' → logprob: -19.12510871887207
    10. '_val' → logprob: -19.37510871887207

Token 1223: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.9361264946837764e-07
    2. '_value' → logprob: -16.5
    3. ' value' → logprob: -17.875
    4. '(value' → logprob: -18.125
    5. '.value' → logprob: -19.125
    6. ''value' → logprob: -20.25
    7. '"value' → logprob: -20.375
    8. '	value' → logprob: -21.25
    9. '$value' → logprob: -21.625
    10. '=value' → logprob: -21.875

Token 1224: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018299657851457596
    2. '(' → logprob: -4.518299579620361
    3. '(line' → logprob: -5.268299579620361
    4. ' (' → logprob: -6.268299579620361
    5. '(token' → logprob: -10.01830005645752
    6. 'self' → logprob: -10.76830005645752
    7. '   ' → logprob: -11.14330005645752
    8. ',' → logprob: -11.14330005645752
    9. '((' → logprob: -11.14330005645752
    10. '(lines' → logprob: -11.51830005645752

Token 1225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09588480740785599
    2. 'line' → logprob: -3.7208847999572754
    3. '(line' → logprob: -3.7208847999572754
    4. ',line' → logprob: -3.8458847999572754
    5. 'lines' → logprob: -3.9708847999572754
    6. '(lines' → logprob: -6.595884799957275
    7. '[line' → logprob: -7.970884799957275
    8. 'self' → logprob: -8.095885276794434
    9. '#line' → logprob: -8.845885276794434
    10. ' lines' → logprob: -9.220885276794434

Token 1226: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18028569221496582
    2. 'line' → logprob: -1.9302856922149658
    3. ' self' → logprob: -4.555285453796387
    4. ' line' → logprob: -4.805285453796387
    5. 'lambda' → logprob: -6.930285453796387
    6. 'l' → logprob: -9.180285453796387
    7. ' lambda' → logprob: -10.805285453796387
    8. '(self' → logprob: -11.430285453796387
    9. 'lines' → logprob: -11.430285453796387
    10. '   ' → logprob: -11.930285453796387

Token 1227: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.29804128408432007
    2. ',' → logprob: -1.4230413436889648
    3. ',line' → logprob: -4.798041343688965
    4. ' line' → logprob: -5.673041343688965
    5. 'line' → logprob: -6.423041343688965
    6. '   ' → logprob: -6.548041343688965
    7. '):
' → logprob: -6.923041343688965
    8. '[line' → logprob: -8.423041343688965
    9. ' (' → logprob: -8.673041343688965
    10. '=line' → logprob: -9.048041343688965

Token 1228: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009356398368254304
    2. 'lambda' → logprob: -7.2509355545043945
    3. ' x' → logprob: -8.500935554504395
    4. '(x' → logprob: -12.125935554504395
    5. '0' → logprob: -12.375935554504395
    6. ' lambda' → logprob: -12.500935554504395
    7. '(' → logprob: -12.750935554504395
    8. '(lambda' → logprob: -13.125935554504395
    9. '   ' → logprob: -13.375935554504395
    10. ' (' → logprob: -13.875935554504395

Token 1229: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031327977776527405
    2. '):
' → logprob: -6.8781328201293945
    3. '   ' → logprob: -7.2531328201293945
    4. ',line' → logprob: -7.5031328201293945
    5. '(line' → logprob: -7.6281328201293945
    6. '       ' → logprob: -9.128132820129395
    7. '#line' → logprob: -10.253132820129395
    8. '           ' → logprob: -10.378132820129395
    9. ' ,' → logprob: -10.503132820129395
    10. '```' → logprob: -10.628132820129395

Token 1230: '               ' (ID: 506)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4969622790813446
    2. 'return' → logprob: -1.621962308883667
    3. ' return' → logprob: -2.246962308883667
    4. 'line' → logprob: -3.746962308883667
    5. ' line' → logprob: -3.871962308883667
    6. '```' → logprob: -4.371962070465088
    7. '#line' → logprob: -4.496962070465088
    8. '               ' → logprob: -4.871962070465088
    9. '[line' → logprob: -5.246962070465088
    10. '   ' → logprob: -6.621962070465088

Token 1231: ' return' (ID: 622)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.019374273717403412
    2. 'return' (adapté à ' return') → logprob: -4.019374370574951
    3. ' line' → logprob: -6.769374370574951
    4. ' return' → logprob: -9.769373893737793
    5. '(line' → logprob: -11.394373893737793
    6. '```' → logprob: -12.894373893737793
    7. '#line' → logprob: -13.269373893737793
    8. '[line' → logprob: -13.269373893737793
    9. '	line' → logprob: -14.519373893737793
    10. '=line' → logprob: -16.01937484741211

Token 1232: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.7697225252486533e-06
    2. ' line' → logprob: -12.500003814697266
    3. '(line' → logprob: -20.500003814697266
    4. '[line' → logprob: -20.625003814697266
    5. '	line' → logprob: -20.750003814697266
    6. '#line' → logprob: -21.250003814697266
    7. '   ' → logprob: -21.625003814697266
    8. 'linear' → logprob: -23.500003814697266
    9. 'lin' → logprob: -23.875003814697266
    10. '```' → logprob: -24.000003814697266

Token 1233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022931136190891266
    2. '0' → logprob: -6.252293109893799
    3. '```' → logprob: -8.752293586730957
    4. '[
' → logprob: -10.252293586730957
    5. 'def' → logprob: -10.502293586730957
    6. '(' → logprob: -10.752293586730957
    7. '
' → logprob: -10.877293586730957
    8. '#' → logprob: -11.377293586730957
    9. '<|end|>' → logprob: -11.377293586730957
    10. '<|end|>' → logprob: -11.814793586730957

Token 1234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -15.625000953674316
    3. '```' → logprob: -16.125
    4. '۰' → logprob: -16.625
    5. ' ' → logprob: -17.0
    6. '[' → logprob: -17.0
    7. '#' → logprob: -18.1875
    8. '
' → logprob: -18.5
    9. '   ' → logprob: -18.5625
    10. '(' → logprob: -18.75

Token 1235: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03837216645479202
    2. '*x' → logprob: -3.913372278213501
    3. ' *' → logprob: -4.038372039794922
    4. ']*' → logprob: -10.913372039794922
    5. ')*' → logprob: -11.913372039794922
    6. ']' → logprob: -12.288372039794922
    7. ')' → logprob: -12.288372039794922
    8. '*object' → logprob: -12.413372039794922
    9. '```' → logprob: -12.913372039794922
    10. ''*' → logprob: -14.163372039794922

Token 1236: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.25
    3. '$x' → logprob: -23.625
    4. '	x' → logprob: -24.25
    5. ')x' → logprob: -24.5
    6. '```' → logprob: -25.875
    7. '"x' → logprob: -26.875
    8. '{x' → logprob: -27.125
    9. ',x' → logprob: -27.125
    10. '(x' → logprob: -27.625

Token 1237: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39050403237342834
    2. '+' → logprob: -1.140504002571106
    3. ' line' → logprob: -5.765503883361816
    4. 'line' → logprob: -7.890503883361816
    5. '[line' → logprob: -9.265503883361816
    6. '(line' → logprob: -11.890503883361816
    7. '```' → logprob: -11.890503883361816
    8. '=line' → logprob: -13.015503883361816
    9. '+
' → logprob: -13.140503883361816
    10. '[' → logprob: -13.765503883361816

Token 1238: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.128163257315464e-07
    2. ' line' → logprob: -15.5
    3. '(line' → logprob: -21.625
    4. '	line' → logprob: -21.875
    5. '[line' → logprob: -22.75
    6. '#line' → logprob: -23.5
    7. '   ' → logprob: -24.25
    8. '
' → logprob: -24.875
    9. '=line' → logprob: -25.25
    10. ' ' → logprob: -26.875

Token 1239: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975454181432724
    2. '[' → logprob: -3.529754638671875
    3. '```' → logprob: -12.779754638671875
    4. '   ' → logprob: -14.904754638671875
    5. ' ' → logprob: -15.279754638671875
    6. '{' → logprob: -15.404754638671875
    7. '#' → logprob: -16.154754638671875
    8. '-' → logprob: -16.779754638671875
    9. '[
' → logprob: -16.904754638671875
    10. '{
' → logprob: -17.029754638671875

Token 1240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '```' → logprob: -18.0
    4. ' ' → logprob: -18.375
    5. '0' → logprob: -18.875
    6. '<|end|>' → logprob: -20.25
    7. '-' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. '{' → logprob: -20.625
    10. '#' → logprob: -21.25

Token 1241: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03330157697200775
    2. '}' → logprob: -3.533301591873169
    3. '<|end|>' → logprob: -6.40830135345459
    4. '               ' → logprob: -7.03330135345459
    5. '           ' → logprob: -8.28330135345459
    6. ')return' → logprob: -8.40830135345459
    7. ' )' → logprob: -9.78330135345459
    8. ')}' → logprob: -9.78330135345459
    9. ']' → logprob: -9.78330135345459
    10. '<|end|>' → logprob: -9.78330135345459

Token 1242: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21282219886779785
    2. '       ' → logprob: -1.7128221988677979
    3. '
' → logprob: -4.712821960449219
    4. '    
' → logprob: -6.587821960449219
    5. '```' → logprob: -7.962821960449219
    6. '        
' → logprob: -8.462821960449219
    7. 'conv' → logprob: -8.587821960449219
    8. 'ch' → logprob: -9.712821960449219
    9. '           ' → logprob: -10.337821960449219
    10. '    ' → logprob: -10.712821960449219

Token 1243: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2594240605831146
    2. '   ' → logprob: -1.509424090385437
    3. '
' → logprob: -5.384424209594727
    4. 'ch' → logprob: -6.384424209594727
    5. 'cht' → logprob: -7.884424209594727
    6. 'conv' → logprob: -8.259424209594727
    7. '```' → logprob: -8.384424209594727
    8. '    
' → logprob: -9.134424209594727
    9. '        
' → logprob: -9.634424209594727
    10. 'h' → logprob: -10.384424209594727

Token 1244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3158177435398102
    2. ' =' → logprob: -1.8158177137374878
    3. '=' → logprob: -2.6908178329467773
    4. '[i' → logprob: -3.3158178329467773
    5. '=[' → logprob: -6.565817832946777
    6. '<|end|>' → logprob: -7.065817832946777
    7. ']' → logprob: -7.940817832946777
    8. '<|end|>' → logprob: -8.065817832946777
    9. '=[]' → logprob: -8.690817832946777
    10. '[]' → logprob: -8.815817832946777

Token 1245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001673061487963423
    2. '1' → logprob: -9.375166893005371
    3. '=' → logprob: -9.625166893005371
    4. '[' → logprob: -11.750166893005371
    5. ' =' → logprob: -12.500166893005371
    6. ' ' → logprob: -13.250166893005371
    7. '   ' → logprob: -13.750166893005371
    8. ']' → logprob: -14.375166893005371
    9. '```' → logprob: -15.125166893005371
    10. '
' → logprob: -15.500166893005371

Token 1246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4407489597797394
    2. '=' → logprob: -1.690748929977417
    3. ' =' → logprob: -1.815748929977417
    4. ']=' → logprob: -4.690749168395996
    5. ' ]' → logprob: -9.190749168395996
    6. ']+=' → logprob: -10.565749168395996
    7. ')' → logprob: -10.940749168395996
    8. ',' → logprob: -12.440749168395996
    9. '],' → logprob: -12.565749168395996
    10. ' =
' → logprob: -12.690749168395996

Token 1247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671584764495492
    2. ' =' → logprob: -5.006715774536133
    3. '=
' → logprob: -14.506715774536133
    4. ',' → logprob: -16.881715774536133
    5. '0' → logprob: -18.256715774536133
    6. ' =
' → logprob: -18.631715774536133
    7. '=

' → logprob: -18.881715774536133
    8. '=True' → logprob: -19.006715774536133
    9. '＝' → logprob: -19.631715774536133
    10. '+=' → logprob: -19.756715774536133

Token 1248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -20.375
    4. '000' → logprob: -21.0
    5. '```' → logprob: -21.125
    6. '00' → logprob: -22.5
    7. '=' → logprob: -22.625
    8. '[' → logprob: -23.125
    9. 'u' → logprob: -23.375
    10. '``' → logprob: -23.5

Token 1249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '000' → logprob: -21.125
    4. '۰' → logprob: -21.5
    5. '```' → logprob: -21.75
    6. '00' → logprob: -22.75
    7. '=' → logprob: -23.625
    8. 'import' → logprob: -23.875
    9. 'zero' → logprob: -23.875
    10. '[' → logprob: -23.875

Token 1250: '
' (ID: 198)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7611544728279114
    2. 'cht' → logprob: -1.1361544132232666
    3. ' cht' → logprob: -2.6361544132232666
    4. '   ' → logprob: -2.7611544132232666
    5. ' hull' → logprob: -3.8861544132232666
    6. 'h' → logprob: -3.8861544132232666
    7. '       ' → logprob: -3.8861544132232666
    8. ' lines' → logprob: -4.886154651641846
    9. '
' → logprob: -5.761154651641846
    10. ' ch' → logprob: -7.636154651641846

Token 1251: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9522488713264465
    2. '       ' → logprob: -1.2022488117218018
    3. ' for' → logprob: -1.4522488117218018
    4. ' hull' → logprob: -3.8272488117218018
    5. '   ' → logprob: -4.327249050140381
    6. 'for' → logprob: -4.952249050140381
    7. '``' → logprob: -4.952249050140381
    8. '
' → logprob: -4.952249050140381
    9. ' convex' → logprob: -4.952249050140381
    10. '`' → logprob: -5.827249050140381

Token 1252: ' ch' (ID: 549)
  Prédit: 'cht'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cht' → logprob: -0.29075291752815247
    2. 'ch' (adapté à ' ch') → logprob: -1.91575288772583
    3. 'h' → logprob: -2.54075288772583
    4. '   ' → logprob: -3.79075288772583
    5. '       ' → logprob: -5.91575288772583
    6. 'CH' → logprob: -7.91575288772583
    7. 'chg' → logprob: -9.165753364562988
    8. 'chs' → logprob: -9.415753364562988
    9. ' cht' → logprob: -9.540753364562988
    10. 'conv' → logprob: -9.790753364562988

Token 1253: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.009322505444288254
    2. ' =' → logprob: -4.759322643280029
    3. ' .' → logprob: -8.259322166442871
    4. '.' → logprob: -8.884322166442871
    5. '=' → logprob: -9.009322166442871
    6. '.append' → logprob: -10.259322166442871
    7. '.insert' → logprob: -10.759322166442871
    8. 'ull' → logprob: -11.009322166442871
    9. '   ' → logprob: -11.134322166442871
    10. '.clear' → logprob: -11.259322166442871

Token 1254: ' Conv' (ID: 52133)
  Prédit: 'Conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conv' → logprob: -0.0013277375837787986
    2. ' Conv' → logprob: -6.6263275146484375
    3. '.Conv' → logprob: -13.626327514648438
    4. 'Con' → logprob: -15.751327514648438
    5. '```' → logprob: -16.876327514648438
    6. 'Cov' → logprob: -17.126327514648438
    7. '_conv' → logprob: -17.126327514648438
    8. '[' → logprob: -17.501327514648438
    9. '   ' → logprob: -17.501327514648438
    10. 'Const' → logprob: -17.501327514648438

Token 1255: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00029589756741188467
    2. 'Hull' → logprob: -8.625295639038086
    3. 'ext' → logprob: -9.375295639038086
    4. 'exp' → logprob: -10.500295639038086
    5. 'ect' → logprob: -12.750295639038086
    6. '```' → logprob: -15.375295639038086
    7. 'ess' → logprob: -16.125295639038086
    8. ' hull' → logprob: -16.125295639038086
    9. 'ull' → logprob: -16.250295639038086
    10. 'exc' → logprob: -16.375295639038086

Token 1256: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -4.263011578586884e-05
    2. '
' → logprob: -11.250042915344238
    3. 'Hall' → logprob: -11.375042915344238
    4. '(' → logprob: -13.125042915344238
    5. 'Heap' → logprob: -13.250042915344238
    6. '       ' → logprob: -13.250042915344238
    7. '           ' → logprob: -13.500042915344238
    8. ' Hull' → logprob: -13.625042915344238
    9. '```' → logprob: -13.750042915344238
    10. '               ' → logprob: -13.875042915344238

Token 1257: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05851563811302185
    2. '.add' → logprob: -3.8085155487060547
    3. '.ch' → logprob: -4.058515548706055
    4. '.' → logprob: -4.558515548706055
    5. 'ch' → logprob: -5.933515548706055
    6. '
' → logprob: -6.308515548706055
    7. '```' → logprob: -7.433515548706055
    8. '(ch' → logprob: -7.683515548706055
    9. '.append' → logprob: -8.183515548706055
    10. '()
' → logprob: -8.808515548706055

Token 1258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18245932459831238
    2. 'ch' → logprob: -1.8074593544006348
    3. '   ' → logprob: -6.932459354400635
    4. '	ch' → logprob: -7.182459354400635
    5. ' ch' → logprob: -7.432459354400635
    6. '```' → logprob: -8.807458877563477
    7. '[ch' → logprob: -9.932458877563477
    8. ' ' → logprob: -10.182458877563477
    9. '        
' → logprob: -10.432458877563477
    10. '(ch' → logprob: -10.557458877563477

Token 1259: ' B' (ID: 418)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0029811484273523092
    2. '       ' → logprob: -6.127981185913086
    3. '   ' → logprob: -8.002981185913086
    4. ' ch' → logprob: -8.127981185913086
    5. '	ch' → logprob: -9.377981185913086
    6. '```' → logprob: -10.252981185913086
    7. '[ch' → logprob: -10.752981185913086
    8. '`' → logprob: -12.252981185913086
    9. '(ch' → logprob: -12.377981185913086
    10. ' ' → logprob: -12.502981185913086

Token 1260: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.652769923210144
    2. '_k' → logprob: -1.277769923210144
    3. '_ch' → logprob: -2.2777700424194336
    4. '=' → logprob: -3.0277700424194336
    5. '.append' → logprob: -3.4027700424194336
    6. 'ch' → logprob: -5.152770042419434
    7. '_values' → logprob: -5.527770042419434
    8. 'k' → logprob: -6.402770042419434
    9. 's' → logprob: -6.527770042419434
    10. '=[]' → logprob: -7.902770042419434

Token 1261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25288212299346924
    2. '=' → logprob: -1.5028821229934692
    3. ',' → logprob: -7.00288200378418
    4. '=B' → logprob: -10.87788200378418
    5. ' ,' → logprob: -12.50288200378418
    6. '   ' → logprob: -12.62788200378418
    7. ')' → logprob: -12.62788200378418
    8. '=b' → logprob: -12.87788200378418
    9. ',ch' → logprob: -13.62788200378418
    10. '=int' → logprob: -13.62788200378418

Token 1262: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.14939998090267181
    2. '0' → logprob: -2.149399995803833
    3. ' prefix' → logprob: -4.024399757385254
    4. '(prefix' → logprob: -5.524399757385254
    5. ' ' → logprob: -8.649399757385254
    6. ' (' → logprob: -9.399399757385254
    7. '   ' → logprob: -10.149399757385254
    8. '(' → logprob: -11.399399757385254
    9. '_prefix' → logprob: -11.461899757385254
    10. '-prefix' → logprob: -11.774399757385254

Token 1263: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.417976379045285e-05
    2. '0' → logprob: -10.375043869018555
    3. '```' → logprob: -12.125043869018555
    4. ' [' → logprob: -13.250043869018555
    5. '
' → logprob: -13.750043869018555
    6. '_sum' → logprob: -14.125043869018555
    7. '=' → logprob: -14.250043869018555
    8. '   ' → logprob: -14.375043869018555
    9. 'sum' → logprob: -15.000043869018555
    10. ' =' → logprob: -15.000043869018555

Token 1264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. '[' → logprob: -15.375001907348633
    5. ' ' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.437501907348633
    7. '۰' → logprob: -17.500001907348633
    8. '{
' → logprob: -17.875001907348633
    9. ']' → logprob: -17.937501907348633
    10. '﻿' → logprob: -17.937501907348633

Token 1265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12696832418441772
    2. ']+' → logprob: -2.1269683837890625
    3. '[' → logprob: -11.626968383789062
    4. ' ]' → logprob: -11.751968383789062
    5. '+]' → logprob: -11.876968383789062
    6. '+' → logprob: -12.376968383789062
    7. ']+\' → logprob: -13.376968383789062
    8. ')' → logprob: -13.501968383789062
    9. ']
' → logprob: -13.751968383789062
    10. '   ' → logprob: -13.751968383789062

Token 1266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6941524744033813
    2. ' +' → logprob: -0.6941524744033813
    3. '+j' → logprob: -7.944152355194092
    4. '+B' → logprob: -7.944152355194092
    5. '
' → logprob: -9.44415283203125
    6. '```' → logprob: -9.94415283203125
    7. ']+' → logprob: -10.19415283203125
    8. '+
' → logprob: -10.31915283203125
    9. '+p' → logprob: -10.44415283203125
    10. ')+' → logprob: -10.94415283203125

Token 1267: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -2.4034345187828876e-05
    2. '0' → logprob: -11.12502384185791
    3. ' prefix' → logprob: -11.62502384185791
    4. '(prefix' → logprob: -16.125024795532227
    5. '   ' → logprob: -16.375024795532227
    6. '       ' → logprob: -18.625024795532227
    7. ' ' → logprob: -19.625024795532227
    8. '           ' → logprob: -19.750024795532227
    9. '
' → logprob: -20.375024795532227
    10. '1' → logprob: -20.750024795532227

Token 1268: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.250007629394531
    3. 'j' → logprob: -13.375007629394531
    4. '[' → logprob: -15.125007629394531
    5. '\' → logprob: -15.250007629394531
    6. '_i' → logprob: -15.875007629394531
    7. '_js' → logprob: -16.25000762939453
    8. '`' → logprob: -16.87500762939453
    9. '​' → logprob: -17.50000762939453
    10. '
' → logprob: -17.62500762939453

Token 1269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759598016738892
    2. '0' → logprob: -0.8259598016738892
    3. '[
' → logprob: -11.950960159301758
    4. '\[' → logprob: -12.200960159301758
    5. '```' → logprob: -12.325960159301758
    6. ' [' → logprob: -13.950960159301758
    7. '<|end|>' → logprob: -14.450960159301758
    8. '][' → logprob: -14.825960159301758
    9. ' ' → logprob: -15.575960159301758
    10. '
' → logprob: -15.575960159301758

Token 1270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.25000286102295
    4. '1' → logprob: -15.62500286102295
    5. '[' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.312503814697266
    7. '-' → logprob: -18.500003814697266
    8. 'user' → logprob: -18.500003814697266
    9. '`' → logprob: -18.687503814697266
    10. '``' → logprob: -18.875003814697266

Token 1271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14604966342449188
    2. ']
' → logprob: -2.021049737930298
    3. '0' → logprob: -6.646049499511719
    4. ']()
' → logprob: -7.771049499511719
    5. '])' → logprob: -8.021049499511719
    6. ')' → logprob: -8.271049499511719
    7. '()]' → logprob: -8.271049499511719
    8. '],' → logprob: -8.646049499511719
    9. ']()' → logprob: -9.146049499511719
    10. ')]' → logprob: -9.646049499511719

Token 1272: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12252198159694672
    2. '       ' → logprob: -3.1225218772888184
    3. ')' → logprob: -3.3725218772888184
    4. ')
' → logprob: -4.747521877288818
    5. 'ch' → logprob: -4.872521877288818
    6. '```' → logprob: -5.372521877288818
    7. ',' → logprob: -5.747521877288818
    8. ',
' → logprob: -6.247521877288818
    9. '<|end|>' → logprob: -6.247521877288818
    10. ' ch' → logprob: -6.372521877288818

Token 1273: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6786428689956665
    2. '
' → logprob: -1.0536428689956665
    3. 'ch' → logprob: -2.803642749786377
    4. ')
' → logprob: -3.053642749786377
    5. '<|end|>' → logprob: -4.678642749786377
    6. ' ch' → logprob: -4.928642749786377
    7. '```' → logprob: -5.928642749786377
    8. '=' → logprob: -6.178642749786377
    9. '),' → logprob: -6.428642749786377
    10. '        
' → logprob: -6.553642749786377

Token 1274: ' prefix' (ID: 18633)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -8.315936429426074e-05
    2. ' ' → logprob: -10.125082969665527
    3. '=' → logprob: -10.500082969665527
    4. 'B' → logprob: -11.875082969665527
    5. ')' → logprob: -12.875082969665527
    6. ' =' → logprob: -13.500082969665527
    7. 'prefix' → logprob: -14.000082969665527
    8. 'Type' → logprob: -14.500082969665527
    9. '```' → logprob: -14.750082969665527
    10. ' B' → logprob: -14.750082969665527

Token 1275: '_j' (ID: 12021)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13981212675571442
    2. '=' → logprob: -2.6398122310638428
    3. '0' → logprob: -3.6398122310638428
    4. '```' → logprob: -4.139811992645264
    5. ')' → logprob: -5.514811992645264
    6. '_j' → logprob: -6.014811992645264
    7. ']' → logprob: -6.139811992645264
    8. ' =' → logprob: -6.139811992645264
    9. 'B' → logprob: -6.889811992645264
    10. '_' → logprob: -6.889811992645264

Token 1276: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5854872465133667
    2. '[' → logprob: -1.4604872465133667
    3. ' =' → logprob: -2.3354873657226562
    4. ')' → logprob: -2.9604873657226562
    5. '0' → logprob: -3.2104873657226562
    6. '```' → logprob: -4.960487365722656
    7. ']' → logprob: -5.710487365722656
    8. '+' → logprob: -6.085487365722656
    9. '[-' → logprob: -6.085487365722656
    10. ',' → logprob: -6.460487365722656

Token 1277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036721210926771164
    2. ']' → logprob: -3.5367212295532227
    3. '=' → logprob: -6.036721229553223
    4. '```' → logprob: -6.911721229553223
    5. '-' → logprob: -7.036721229553223
    6. ']=' → logprob: -7.411721229553223
    7. '+' → logprob: -7.786721229553223
    8. '
' → logprob: -7.911721229553223
    9. ' ' → logprob: -8.286721229553223
    10. ']
' → logprob: -8.411721229553223

Token 1278: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4612477123737335
    2. '=' → logprob: -1.0862476825714111
    3. ' =' → logprob: -4.71124792098999
    4. ']' → logprob: -4.83624792098999
    5. '+' → logprob: -4.96124792098999
    6. '])' → logprob: -6.83624792098999
    7. ' is' → logprob: -6.96124792098999
    8. '0' → logprob: -6.96124792098999
    9. ' +' → logprob: -7.08624792098999
    10. ' )' → logprob: -7.46124792098999

Token 1279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03128092736005783
    2. ')' → logprob: -4.156280994415283
    3. ' =' → logprob: -4.906280994415283
    4. '0' → logprob: -5.406280994415283
    5. '+' → logprob: -6.906280994415283
    6. '<|end|>' → logprob: -7.156280994415283
    7. ',' → logprob: -7.656280994415283
    8. '#' → logprob: -8.406280517578125
    9. '),' → logprob: -8.906280517578125
    10. ' +' → logprob: -9.156280517578125

Token 1280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.0
    4. '`' → logprob: -18.875
    5. '=' → logprob: -19.125
    6. 'zero' → logprob: -19.5
    7. '1' → logprob: -20.0
    8. '۰' → logprob: -20.125
    9. '+' → logprob: -20.25
    10. '   ' → logprob: -20.25

Token 1281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -17.375
    4. '=' → logprob: -18.125
    5. 'prefix' → logprob: -18.625
    6. 'import' → logprob: -18.875
    7. '#' → logprob: -19.75
    8. '1' → logprob: -20.125
    9. 'zero' → logprob: -20.5
    10. '۰' → logprob: -20.5

Token 1282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37204429507255554
    2. 'ch' → logprob: -1.622044324874878
    3. '
' → logprob: -2.372044324874878
    4. ' ch' → logprob: -4.747044086456299
    5. ')' → logprob: -5.497044086456299
    6. ')
' → logprob: -5.997044086456299
    7. '(ch' → logprob: -7.247044086456299
    8. ',ch' → logprob: -7.247044086456299
    9. '[ch' → logprob: -7.372044086456299
    10. '```' → logprob: -7.622044086456299

Token 1283: '       ' (ID: 309)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.19733574986457825
    2. ' ch' → logprob: -2.947335720062256
    3. ')' → logprob: -3.197335720062256
    4. ' =' → logprob: -3.447335720062256
    5. '=' → logprob: -3.697335720062256
    6. '       ' → logprob: -4.697335720062256
    7. '0' → logprob: -4.822335720062256
    8. ')
' → logprob: -5.697335720062256
    9. '
' → logprob: -5.947335720062256
    10. '(ch' → logprob: -6.697335720062256

Token 1284: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.0017325369408354163
    2. '       ' → logprob: -6.376732349395752
    3. ' ch' → logprob: -11.00173282623291
    4. '	ch' → logprob: -12.00173282623291
    5. '   ' → logprob: -12.12673282623291
    6. '[ch' → logprob: -14.00173282623291
    7. '```' → logprob: -15.00173282623291
    8. '(ch' → logprob: -15.37673282623291
    9. '`' → logprob: -15.37673282623291
    10. ',ch' → logprob: -16.001731872558594

Token 1285: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000969583576079458
    2. '.' → logprob: -7.000969409942627
    3. ' .' → logprob: -10.625969886779785
    4. '.append' → logprob: -11.000969886779785
    5. '`.' → logprob: -12.125969886779785
    6. '```' → logprob: -12.500969886779785
    7. ').' → logprob: -12.625969886779785
    8. '   ' → logprob: -13.875969886779785
    9. '=' → logprob: -14.375969886779785
    10. '​.' → logprob: -14.625969886779785

Token 1286: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004091935232281685
    2. '0' → logprob: -5.504091739654541
    3. ' (' → logprob: -11.2540922164917
    4. ' ' → logprob: -14.5040922164917
    5. '   ' → logprob: -16.379091262817383
    6. '(-' → logprob: -16.754091262817383
    7. '((' → logprob: -17.379091262817383
    8. '(
' → logprob: -17.754091262817383
    9. '```' → logprob: -18.879091262817383
    10. 'B' → logprob: -19.504091262817383

Token 1287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010831133840838447
    2. '[' → logprob: -9.75010871887207
    3. '_' → logprob: -10.00010871887207
    4. '(' → logprob: -13.75010871887207
    5. '
' → logprob: -14.25010871887207
    6. '=' → logprob: -14.75010871887207
    7. ' ' → logprob: -14.75010871887207
    8. '-' → logprob: -14.87510871887207
    9. '000' → logprob: -15.00010871887207
    10. 'k' → logprob: -15.18760871887207

Token 1288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004933410091325641
    2. '0' → logprob: -8.000493049621582
    3. ' ,' → logprob: -9.000493049621582
    4. '[' → logprob: -11.125493049621582
    5. ')' → logprob: -11.875493049621582
    6. ',
' → logprob: -12.375493049621582
    7. '   ' → logprob: -12.875493049621582
    8. '=' → logprob: -13.250493049621582
    9. '```' → logprob: -13.500493049621582
    10. '(' → logprob: -15.000493049621582

Token 1289: ' dp' (ID: 21546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805594891309738
    2. 'dp' → logprob: -3.288055896759033
    3. ' ' → logprob: -11.913056373596191
    4. ' dp' → logprob: -12.038056373596191
    5. '(dp' → logprob: -13.788056373596191
    6. '000' → logprob: -15.913056373596191
    7. '(' → logprob: -16.288055419921875
    8. '_dp' → logprob: -16.288055419921875
    9. '	dp' → logprob: -16.663055419921875
    10. '[' → logprob: -17.163055419921875

Token 1290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759647488594055
    2. '0' → logprob: -0.8259647488594055
    3. ' ' → logprob: -12.07596492767334
    4. '(' → logprob: -12.32596492767334
    5. '[
' → logprob: -12.45096492767334
    6. '[-' → logprob: -13.07596492767334
    7. '<|end|>' → logprob: -13.07596492767334
    8. '```' → logprob: -13.45096492767334
    9. '{' → logprob: -13.70096492767334
    10. '000' → logprob: -14.20096492767334

Token 1291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -15.125000953674316
    4. '[' → logprob: -15.625000953674316
    5. '```' → logprob: -17.5
    6. '
' → logprob: -17.875
    7. '   ' → logprob: -18.25
    8. '`' → logprob: -18.375
    9. '{' → logprob: -18.375
    10. '۰' → logprob: -19.3125

Token 1292: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28079673647880554
    2. '-' → logprob: -1.655796766281128
    3. ')' → logprob: -3.280796766281128
    4. '0' → logprob: -4.780796527862549
    5. '[' → logprob: -4.905796527862549
    6. ')]' → logprob: -9.155797004699707
    7. ',' → logprob: -9.530797004699707
    8. '))' → logprob: -9.905797004699707
    9. '[-' → logprob: -10.030797004699707
    10. ')
' → logprob: -10.280797004699707

Token 1293: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38601186871528625
    2. '-' → logprob: -1.2610118389129639
    3. ')' → logprob: -3.386011838912964
    4. '[' → logprob: -7.011012077331543
    5. '0' → logprob: -7.511012077331543
    6. '   ' → logprob: -7.886012077331543
    7. ',' → logprob: -8.136012077331543
    8. '       ' → logprob: -8.261012077331543
    9. '[-' → logprob: -8.636012077331543
    10. '<|end|>' → logprob: -9.511012077331543

Token 1294: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000915039679966867
    2. '0' → logprob: -7.125915050506592
    3. '(B' → logprob: -9.375914573669434
    4. ' B' → logprob: -10.625914573669434
    5. '(' → logprob: -13.750914573669434
    6. '   ' → logprob: -14.875914573669434
    7. ' ' → logprob: -16.87591552734375
    8. '	B' → logprob: -17.12591552734375
    9. '_B' → logprob: -17.37591552734375
    10. '```' → logprob: -18.25091552734375

Token 1295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009303949191235006
    2. '[' → logprob: -7.000930309295654
    3. '_' → logprob: -12.375930786132812
    4. '(' → logprob: -12.375930786132812
    5. 'B' → logprob: -12.875930786132812
    6. ' ' → logprob: -13.125930786132812
    7. '
' → logprob: -13.375930786132812
    8. '```' → logprob: -13.875930786132812
    9. '   ' → logprob: -14.875930786132812
    10. '#' → logprob: -15.125930786132812

Token 1296: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00011224505578866228
    2. ' *' → logprob: -9.750112533569336
    3. '0' → logprob: -9.875112533569336
    4. '```' → logprob: -13.000112533569336
    5. '*(' → logprob: -16.125112533569336
    6. '#' → logprob: -17.125112533569336
    7. '`' → logprob: -17.750112533569336
    8. '*object' → logprob: -17.875112533569336
    9. '**' → logprob: -18.125112533569336
    10. '   ' → logprob: -18.625112533569336

Token 1297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '۰' → logprob: -21.5
    4. '(' → logprob: -22.75
    5. '```' → logprob: -23.625
    6. '   ' → logprob: -24.0
    7. '
' → logprob: -24.0
    8. '000' → logprob: -24.0
    9. '０' → logprob: -24.125
    10. '[' → logprob: -24.125

Token 1298: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011272187111899257
    2. ')
' → logprob: -9.125112533569336
    3. '       ' → logprob: -13.125112533569336
    4. ' )' → logprob: -14.125112533569336
    5. '   ' → logprob: -14.750112533569336
    6. '())' → logprob: -15.625112533569336
    7. ')`' → logprob: -16.250112533569336
    8. ')}' → logprob: -16.625112533569336
    9. ')return' → logprob: -16.750112533569336
    10. '),' → logprob: -17.000112533569336

Token 1299: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5709556937217712
    2. '       ' → logprob: -1.320955753326416
    3. ' for' → logprob: -2.195955753326416
    4. '   ' → logprob: -3.070955753326416
    5. '```' → logprob: -4.570955753326416
    6. '``' → logprob: -9.695955276489258
    7. '
' → logprob: -10.570955276489258
    8. ')' → logprob: -10.820955276489258
    9. '`' → logprob: -10.945955276489258
    10. '	for' → logprob: -11.820955276489258

Token 1300: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1346697211265564
    2. '       ' → logprob: -2.134669780731201
    3. ' for' → logprob: -5.009669780731201
    4. '   ' → logprob: -7.259669780731201
    5. '```' → logprob: -8.009669303894043
    6. '``' → logprob: -14.134669303894043
    7. '           ' → logprob: -14.634669303894043
    8. 'For' → logprob: -14.884669303894043
    9. '	for' → logprob: -14.884669303894043
    10. '
' → logprob: -15.009669303894043

Token 1301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011055010370910168
    2. ' i' → logprob: -4.511054992675781
    3. '   ' → logprob: -12.136054992675781
    4. '_i' → logprob: -14.261054992675781
    5. '       ' → logprob: -15.261054992675781
    6. '1' → logprob: -15.386054992675781
    7. 'I' → logprob: -16.01105499267578
    8. '[i' → logprob: -16.26105499267578
    9. '```' → logprob: -16.38605499267578
    10. '(i' → logprob: -16.63605499267578

Token 1302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043703846633434296
    2. 'in' → logprob: -3.16870379447937
    3. '(' → logprob: -7.793704032897949
    4. ' i' → logprob: -9.16870403289795
    5. '1' → logprob: -10.04370403289795
    6. '[' → logprob: -10.79370403289795
    7. '	in' → logprob: -10.91870403289795
    8. '(i' → logprob: -11.29370403289795
    9. '<|end|>' → logprob: -11.54370403289795
    10. ' (' → logprob: -11.66870403289795

Token 1303: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03952240198850632
    2. ' range' → logprob: -3.289522409439087
    3. '1' → logprob: -6.539522171020508
    4. 'in' → logprob: -10.414522171020508
    5. ' in' → logprob: -12.664522171020508
    6. '(range' → logprob: -14.164522171020508
    7. ' ' → logprob: -15.039522171020508
    8. '(' → logprob: -15.039522171020508
    9. '   ' → logprob: -15.789522171020508
    10. '
' → logprob: -17.414522171020508

Token 1304: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0788937583565712
    2. '(' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.078893661499023
    4. '   ' → logprob: -13.328893661499023
    5. '```' → logprob: -16.328893661499023
    6. '
' → logprob: -16.578893661499023
    7. ' (' → logprob: -17.453893661499023
    8. '=' → logprob: -17.703893661499023
    9. ',' → logprob: -18.578893661499023
    10. '[' → logprob: -18.828893661499023

Token 1305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -18.75
    4. '2' → logprob: -19.25
    5. '```' → logprob: -20.5
    6. '
' → logprob: -21.375
    7. '１' → logprob: -21.375
    8. '(' → logprob: -21.5
    9. '=' → logprob: -22.0
    10. 'from' → logprob: -22.125

Token 1306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12605969607830048
    2. '(n' → logprob: -2.3760597705841064
    3. ',n' → logprob: -4.001059532165527
    4. ' ,' → logprob: -5.751059532165527
    5. '(' → logprob: -6.126059532165527
    6. 'n' → logprob: -7.501059532165527
    7. '   ' → logprob: -7.626059532165527
    8. '       ' → logprob: -7.751059532165527
    9. '(i' → logprob: -9.626059532165527
    10. '+' → logprob: -9.626059532165527

Token 1307: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.463036435074173e-05
    2. ' n' → logprob: -10.750024795532227
    3. '(n' → logprob: -13.500024795532227
    4. 'i' → logprob: -13.875024795532227
    5. '...' → logprob: -15.625024795532227
    6. 'import' → logprob: -15.875024795532227
    7. '   ' → logprob: -16.000024795532227
    8. ')' → logprob: -16.000024795532227
    9. '_n' → logprob: -16.750024795532227
    10. '1' → logprob: -16.750024795532227

Token 1308: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020214279647916555
    2. ' +' → logprob: -6.377021312713623
    3. '):
' → logprob: -8.627021789550781
    4. '):' → logprob: -9.627021789550781
    5. '```' → logprob: -10.252021789550781
    6. '+
' → logprob: -11.752021789550781
    7. '()+' → logprob: -12.877021789550781
    8. '**' → logprob: -12.877021789550781
    9. '+i' → logprob: -13.002021789550781
    10. ')' → logprob: -13.127021789550781

Token 1309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. ' ' → logprob: -18.875
    4. '+' → logprob: -18.875
    5. '2' → logprob: -20.625
    6. '   ' → logprob: -21.0
    7. 'i' → logprob: -21.375
    8. '):
' → logprob: -21.375
    9. '۱' → logprob: -21.875
    10. ')' → logprob: -22.125

Token 1310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0402374230325222
    2. '):' → logprob: -3.2902374267578125
    3. ':' → logprob: -6.9152374267578125
    4. ':
' → logprob: -7.2902374267578125
    5. '       ' → logprob: -7.7902374267578125
    6. '   ' → logprob: -10.165237426757812
    7. '():
' → logprob: -10.415237426757812
    8. '):
' → logprob: -11.415237426757812
    9. ']:
' → logprob: -12.165237426757812
    10. '```' → logprob: -12.290237426757812

Token 1311: '           ' (ID: 352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0154778957366943
    2. '       ' → logprob: -1.0154778957366943
    3. ' A' → logprob: -1.7654778957366943
    4. '```' → logprob: -2.8904778957366943
    5. '           ' → logprob: -3.7654778957366943
    6. '   ' → logprob: -5.140478134155273
    7. 'a' → logprob: -5.515478134155273
    8. 'x' → logprob: -5.890478134155273
    9. ' a' → logprob: -5.890478134155273
    10. ' x' → logprob: -6.140478134155273

Token 1312: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.005665802862495184
    2. 'x' → logprob: -5.5056657791137695
    3. 'a' → logprob: -7.5056657791137695
    4. ' A' → logprob: -8.00566577911377
    5. 'Ai' → logprob: -8.75566577911377
    6. 'val' → logprob: -9.00566577911377
    7. 'B' → logprob: -9.00566577911377
    8. 'prefix' → logprob: -9.75566577911377
    9. '
' → logprob: -10.25566577911377
    10. '```' → logprob: -10.25566577911377

Token 1313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07057017087936401
    2. ' =' → logprob: -2.695570230484009
    3. '[i' → logprob: -7.57056999206543
    4. '=i' → logprob: -9.57056999206543
    5. '[' → logprob: -11.69556999206543
    6. ')' → logprob: -11.82056999206543
    7. '```' → logprob: -11.82056999206543
    8. '=
' → logprob: -12.57056999206543
    9. '=int' → logprob: -12.82056999206543
    10. '<|end|>' → logprob: -13.07056999206543

Token 1314: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.01253802701830864
    2. ' prefix' → logprob: -4.637537956237793
    3. '(prefix' → logprob: -5.887537956237793
    4. '   ' → logprob: -12.762537956237793
    5. ' (' → logprob: -13.762537956237793
    6. '_prefix' → logprob: -15.762537956237793
    7. '(' → logprob: -16.63753890991211
    8. '
' → logprob: -16.88753890991211
    9. '(p' → logprob: -17.13753890991211
    10. '.prefix' → logprob: -17.13753890991211

Token 1315: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001053530490025878
    2. 'i' → logprob: -6.876053333282471
    3. '```' → logprob: -11.376053810119629
    4. '[' → logprob: -12.001053810119629
    5. ' i' → logprob: -13.876053810119629
    6. '_i' → logprob: -14.626053810119629
    7. '{i' → logprob: -15.126053810119629
    8. '(i' → logprob: -15.376053810119629
    9. '[
' → logprob: -15.376053810119629
    10. '``' → logprob: -15.501053810119629

Token 1316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08784902840852737
    2. ']+' → logprob: -2.5878491401672363
    3. '+' → logprob: -5.712849140167236
    4. '[i' → logprob: -5.962849140167236
    5. '[' → logprob: -6.587849140167236
    6. ')' → logprob: -6.962849140167236
    7. ' +' → logprob: -7.837849140167236
    8. ')+' → logprob: -8.587848663330078
    9. '```' → logprob: -10.337848663330078
    10. ' ]' → logprob: -11.212848663330078

Token 1317: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16061341762542725
    2. ' +' → logprob: -1.9106134176254272
    3. '+i' → logprob: -8.285613059997559
    4. '[i' → logprob: -10.660613059997559
    5. '+
' → logprob: -10.785613059997559
    6. '+j' → logprob: -10.785613059997559
    7. '+B' → logprob: -10.910613059997559
    8. ')+' → logprob: -11.535613059997559
    9. '+A' → logprob: -11.660613059997559
    10. ']+' → logprob: -11.785613059997559

Token 1318: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.6405310816480778e-05
    2. '(prefix' → logprob: -11.500016212463379
    3. ' prefix' → logprob: -12.000016212463379
    4. '0' → logprob: -16.875017166137695
    5. '_prefix' → logprob: -18.125017166137695
    6. '   ' → logprob: -18.125017166137695
    7. '
' → logprob: -18.750017166137695
    8. '(' → logprob: -19.000017166137695
    9. 'preced' → logprob: -19.375017166137695
    10. 'refix' → logprob: -19.500017166137695

Token 1319: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00011367550177965313
    2. '_i' → logprob: -9.625113487243652
    3. 'j' → logprob: -10.000113487243652
    4. 'i' → logprob: -13.875113487243652
    5. '```' → logprob: -14.375113487243652
    6. '[i' → logprob: -15.375113487243652
    7. '\' → logprob: -16.12511444091797
    8. '`' → logprob: -16.25011444091797
    9. '   ' → logprob: -16.37511444091797
    10. '``' → logprob: -16.75011444091797

Token 1320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024781543761491776
    2. 'i' → logprob: -6.002478122711182
    3. '(i' → logprob: -14.50247859954834
    4. ' i' → logprob: -14.75247859954834
    5. '[' → logprob: -15.00247859954834
    6. ' [' → logprob: -15.12747859954834
    7. '
' → logprob: -15.87747859954834
    8. '{i' → logprob: -15.87747859954834
    9. '_i' → logprob: -16.002477645874023
    10. '[
' → logprob: -16.127477645874023

Token 1321: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.600714161526412e-05
    2. 'i' → logprob: -10.125076293945312
    3. ' -' → logprob: -10.625076293945312
    4. '[i' → logprob: -11.500076293945312
    5. '[-' → logprob: -13.875076293945312
    6. '```' → logprob: -15.625076293945312
    7. '[' → logprob: -16.625076293945312
    8. '1' → logprob: -16.750076293945312
    9. '   ' → logprob: -17.250076293945312
    10. '−' → logprob: -18.125076293945312

Token 1322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '-' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.750003814697266
    4. ' ' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '```' → logprob: -16.125003814697266
    7. '2' → logprob: -16.250003814697266
    8. '0' → logprob: -17.625003814697266
    9. '１' → logprob: -18.687503814697266
    10. '[' → logprob: -18.750003814697266

Token 1323: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5278289318084717
    2. ')' → logprob: -0.9028289318084717
    3. ')]' → logprob: -6.277829170227051
    4. '])' → logprob: -6.902829170227051
    5. ']
' → logprob: -7.152829170227051
    6. ')
' → logprob: -8.15282917022705
    7. '           ' → logprob: -8.40282917022705
    8. ']*' → logprob: -9.27782917022705
    9. ' ]' → logprob: -9.52782917022705
    10. ' )' → logprob: -9.77782917022705

Token 1324: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5510168671607971
    2. '
' → logprob: -1.6760168075561523
    3. ' +' → logprob: -2.9260168075561523
    4. '+' → logprob: -3.3010168075561523
    5. ' =' → logprob: -3.5510168075561523
    6. ')' → logprob: -3.8010168075561523
    7. ',' → logprob: -3.8010168075561523
    8. 'val' → logprob: -4.426016807556152
    9. ' val' → logprob: -4.801016807556152
    10. ' x' → logprob: -5.051016807556152

Token 1325: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12240342795848846
    2. 'True' → logprob: -2.497403383255005
    3. ' i' → logprob: -4.122403621673584
    4. ' True' → logprob: -4.247403621673584
    5. '1' → logprob: -6.122403621673584
    6. ' ' → logprob: -9.872403144836426
    7. '0' → logprob: -10.247403144836426
    8. 'n' → logprob: -10.247403144836426
    9. '(i' → logprob: -11.372403144836426
    10. '=True' → logprob: -11.497403144836426

Token 1326: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17866988480091095
    2. ' <=' → logprob: -2.8036699295043945
    3. '<=' → logprob: -3.0536699295043945
    4. '<' → logprob: -3.3036699295043945
    5. '<len' → logprob: -5.0536699295043945
    6. '<i' → logprob: -5.6786699295043945
    7. ' !=' → logprob: -6.3036699295043945
    8. '<int' → logprob: -6.5536699295043945
    9. ' ==' → logprob: -6.6786699295043945
    10. '```' → logprob: -6.8036699295043945

Token 1327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003217574267182499
    2. ' ' → logprob: -8.250321388244629
    3. '=' → logprob: -9.750321388244629
    4. '1' → logprob: -13.375321388244629
    5. '```' → logprob: -15.125321388244629
    6. '>' → logprob: -16.500322341918945
    7. '   ' → logprob: -16.625322341918945
    8. 'i' → logprob: -16.625322341918945
    9. '
' → logprob: -16.750322341918945
    10. ' =' → logprob: -16.750322341918945

Token 1328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -14.500001907348633
    4. '=' → logprob: -15.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '
' → logprob: -19.125001907348633
    8. '-' → logprob: -19.500001907348633
    9. 'i' → logprob: -20.125001907348633
    10. '۰' → logprob: -20.562501907348633

Token 1329: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9661494493484497
    2. ' -' → logprob: -1.5911494493484497
    3. '-' → logprob: -2.09114933013916
    4. '<|end|>' → logprob: -2.34114933013916
    5. '
' → logprob: -2.59114933013916
    6. '           ' → logprob: -3.46614933013916
    7. ' +' → logprob: -4.21614933013916
    8. ' ' → logprob: -4.21614933013916
    9. '<|end|>' → logprob: -4.21614933013916
    10. '+' → logprob: -4.84114933013916

Token 1330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004245673771947622
    2. 'prefix' → logprob: -5.879245758056641
    3. ' ' → logprob: -6.629245758056641
    4. ' prefix' → logprob: -9.37924575805664
    5. '(prefix' → logprob: -10.50424575805664
    6. '   ' → logprob: -13.12924575805664
    7. '(' → logprob: -13.75424575805664
    8. ' (' → logprob: -14.12924575805664
    9. ' ' → logprob: -14.75424575805664
    10. 'p' → logprob: -15.44174575805664

Token 1331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017590753268450499
    2. 'prefix' → logprob: -6.376759052276611
    3. ' ' → logprob: -10.00175952911377
    4. ' prefix' → logprob: -11.87675952911377
    5. '(prefix' → logprob: -12.75175952911377
    6. '(' → logprob: -14.68925952911377
    7. '   ' → logprob: -14.81425952911377
    8. '```' → logprob: -16.626758575439453
    9. ' ' → logprob: -16.876758575439453
    10. 'suffix' → logprob: -16.939258575439453

Token 1332: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20606349408626556
    2. '
' → logprob: -1.8310635089874268
    3. ',' → logprob: -4.706063270568848
    4. 'dp' → logprob: -6.331063270568848
    5. ' line' → logprob: -6.581063270568848
    6. '   ' → logprob: -6.581063270568848
    7. ')' → logprob: -6.956063270568848
    8. '            
' → logprob: -7.081063270568848
    9. 'result' → logprob: -7.206063270568848
    10. 'x' → logprob: -7.206063270568848

Token 1333: '           ' (ID: 352)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.5691848993301392
    2. 'dp' → logprob: -1.5691848993301392
    3. '           ' → logprob: -1.8191848993301392
    4. ' x' → logprob: -2.0691847801208496
    5. 'x' → logprob: -2.0691847801208496
    6. ' val' → logprob: -2.6941847801208496
    7. ' dp' → logprob: -3.8191847801208496
    8. ')' → logprob: -3.8191847801208496
    9. 'res' → logprob: -4.56918478012085
    10. 'value' → logprob: -4.81918478012085

Token 1334: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.005217275116592646
    2. 'res' → logprob: -5.5052170753479
    3. 'v' → logprob: -7.1302170753479
    4. ' val' → logprob: -8.880217552185059
    5. 'best' → logprob: -9.630217552185059
    6. 'x' → logprob: -9.880217552185059
    7. 'ans' → logprob: -10.255217552185059
    8. 'value' → logprob: -10.755217552185059
    9. 'line' → logprob: -11.755217552185059
    10. 'tmp' → logprob: -11.880217552185059

Token 1335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.126930832862854
    2. ' =' → logprob: -2.1269307136535645
    3. '=
' → logprob: -13.126931190490723
    4. ' ' → logprob: -15.626931190490723
    5. ' =
' → logprob: -15.751931190490723
    6. '＝' → logprob: -16.251930236816406
    7. ',' → logprob: -16.626930236816406
    8. ')' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.126930236816406
    10. '```' → logprob: -17.251930236816406

Token 1336: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0009118211455643177
    2. ' ch' → logprob: -7.000911712646484
    3. '	ch' → logprob: -15.250911712646484
    4. '[ch' → logprob: -16.750911712646484
    5. '(ch' → logprob: -17.375911712646484
    6. '           ' → logprob: -18.250911712646484
    7. ',ch' → logprob: -18.625911712646484
    8. 'Ch' → logprob: -18.875911712646484
    9. '
' → logprob: -19.250911712646484
    10. '   ' → logprob: -19.500911712646484

Token 1337: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.01615988276898861
    2. 'query' → logprob: -4.141160011291504
    3. '.' → logprob: -10.016160011291504
    4. '```' → logprob: -10.141160011291504
    5. '_query' → logprob: -11.516160011291504
    6. ' query' → logprob: -11.516160011291504
    7. '$query' → logprob: -12.141160011291504
    8. '	query' → logprob: -12.266160011291504
    9. ' .' → logprob: -12.516160011291504
    10. '=query' → logprob: -13.016160011291504

Token 1338: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16303814947605133
    2. 'i' → logprob: -1.9130381345748901
    3. ' i' → logprob: -5.91303825378418
    4. '(' → logprob: -9.78803825378418
    5. ' (' → logprob: -10.41303825378418
    6. '[i' → logprob: -11.28803825378418
    7. '	i' → logprob: -13.53803825378418
    8. ')i' → logprob: -13.53803825378418
    9. '{i' → logprob: -14.03803825378418
    10. '(
' → logprob: -14.16303825378418

Token 1339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003123439964838326
    2. ')+' → logprob: -8.500312805175781
    3. ' )' → logprob: -9.250312805175781
    4. '           ' → logprob: -12.375312805175781
    5. ')
' → logprob: -12.500312805175781
    6. '+' → logprob: -14.125312805175781
    7. ' -' → logprob: -14.875312805175781
    8. '`)' → logprob: -14.875312805175781
    9. '+)' → logprob: -15.000312805175781
    10. '）' → logprob: -15.000312805175781

Token 1340: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06739046424627304
    2. '+' → logprob: -3.0673904418945312
    3. ')' → logprob: -4.317390441894531
    4. ' -' → logprob: -5.442390441894531
    5. ')+' → logprob: -7.817390441894531
    6. '<|end|>' → logprob: -8.942390441894531
    7. '           ' → logprob: -9.192390441894531
    8. '-' → logprob: -9.692390441894531
    9. ' +
' → logprob: -9.692390441894531
    10. ' )' → logprob: -10.317390441894531

Token 1341: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004872707650065422
    2. ' i' → logprob: -5.379872798919678
    3. 'A' → logprob: -8.62987232208252
    4. '   ' → logprob: -9.75487232208252
    5. '(i' → logprob: -12.25487232208252
    6. ' A' → logprob: -12.75487232208252
    7. ' ' → logprob: -12.75487232208252
    8. '```' → logprob: -13.75487232208252
    9. 'int' → logprob: -14.12987232208252
    10. '
' → logprob: -14.37987232208252

Token 1342: '*A' (ID: 166365)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0019657472148537636
    2. '*A' → logprob: -6.626965522766113
    3. ' *' → logprob: -7.376965522766113
    4. '```' → logprob: -11.626965522766113
    5. '**' → logprob: -13.126965522766113
    6. '*(' → logprob: -13.501965522766113
    7. '*
' → logprob: -14.751965522766113
    8. '`' → logprob: -14.876965522766113
    9. ''*' → logprob: -15.501965522766113
    10. '*object' → logprob: -15.876965522766113

Token 1343: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09310885518789291
    2. '           ' → logprob: -2.468108892440796
    3. ')' → logprob: -6.843108654022217
    4. ')
' → logprob: -7.593108654022217
    5. 'if' → logprob: -7.593108654022217
    6. ' if' → logprob: -7.843108654022217
    7. '<|end|>' → logprob: -8.093109130859375
    8. 'dp' → logprob: -8.343109130859375
    9. '            
' → logprob: -8.593109130859375
    10. '       ' → logprob: -8.593109130859375

Token 1344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9501586556434631
    2. '
' → logprob: -1.0751585960388184
    3. 'dp' → logprob: -1.9501585960388184
    4. ')' → logprob: -2.4501585960388184
    5. '   ' → logprob: -4.450158596038818
    6. '       ' → logprob: -4.825158596038818
    7. ')
' → logprob: -5.075158596038818
    8. '<|end|>' → logprob: -5.700158596038818
    9. '```' → logprob: -5.700158596038818
    10. ' dp' → logprob: -5.825158596038818

Token 1345: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -7.553032628493384e-05
    2. ' dp' → logprob: -9.750075340270996
    3. 'if' → logprob: -11.500075340270996
    4. '           ' → logprob: -12.750075340270996
    5. '	dp' → logprob: -13.625075340270996
    6. '```' → logprob: -13.625075340270996
    7. '
' → logprob: -14.000075340270996
    8. '(dp' → logprob: -14.750075340270996
    9. '       ' → logprob: -15.500075340270996
    10. '_dp' → logprob: -16.000076293945312

Token 1346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011248346709180623
    2. '[' → logprob: -9.125112533569336
    3. '\[' → logprob: -13.250112533569336
    4. '```' → logprob: -14.125112533569336
    5. '[
' → logprob: -14.875112533569336
    6. '[I' → logprob: -14.875112533569336
    7. 'i' → logprob: -16.375112533569336
    8. '   ' → logprob: -16.750112533569336
    9. '=' → logprob: -17.000112533569336
    10. '[val' → logprob: -17.125112533569336

Token 1347: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024411384016275406
    2. ' =' → logprob: -4.149411201477051
    3. ']' → logprob: -4.899411201477051
    4. ']=' → logprob: -7.899411201477051
    5. '<|end|>' → logprob: -8.39941120147705
    6. ')' → logprob: -8.64941120147705
    7. '[' → logprob: -10.64941120147705
    8. '=
' → logprob: -10.77441120147705
    9. '<|end|>' → logprob: -10.77441120147705
    10. ')=' → logprob: -11.52441120147705

Token 1348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196858361363411
    2. ' =' → logprob: -2.8119685649871826
    3. '=
' → logprob: -15.686968803405762
    4. ',' → logprob: -15.811968803405762
    5. '<|end|>' → logprob: -15.811968803405762
    6. ')' → logprob: -15.936968803405762
    7. '=int' → logprob: -16.811967849731445
    8. '.' → logprob: -17.311967849731445
    9. '=max' → logprob: -17.311967849731445
    10. '.=' → logprob: -17.311967849731445

Token 1349: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0041174618527293205
    2. ' val' → logprob: -5.504117488861084
    3. 'max' → logprob: -10.254117012023926
    4. 'int' → logprob: -12.754117012023926
    5. ' max' → logprob: -14.754117012023926
    6. '	val' → logprob: -15.504117012023926
    7. '[val' → logprob: -15.754117012023926
    8. '```' → logprob: -16.254117965698242
    9. '(val' → logprob: -16.879117965698242
    10. ',val' → logprob: -18.254117965698242

Token 1350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3460328280925751
    2. '\n' → logprob: -2.0960328578948975
    3. ')' → logprob: -2.5960328578948975
    4. '<|end|>' → logprob: -3.5960328578948975
    5. '+' → logprob: -4.221032619476318
    6. '```' → logprob: -4.471032619476318
    7. '   ' → logprob: -4.846032619476318
    8. '\xe2\x86' → logprob: -5.471032619476318
    9. '       ' → logprob: -5.721032619476318
    10. 'newline' → logprob: -5.846032619476318

Token 1351: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.49744346737861633
    2. ')' → logprob: -1.497443437576294
    3. '
' → logprob: -2.497443437576294
    4. '```' → logprob: -3.747443437576294
    5. '<|end|>' → logprob: -4.122443675994873
    6. '   ' → logprob: -4.247443675994873
    7. '\' → logprob: -4.747443675994873
    8. 'newline' → logprob: -5.872443675994873
    9. '       ' → logprob: -5.997443675994873
    10. '    
' → logprob: -6.122443675994873

Token 1352: ' if' (ID: 538)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6175817847251892
    2. '   ' → logprob: -0.9925817847251892
    3. 'B' → logprob: -3.117581844329834
    4. ' ch' → logprob: -3.867581844329834
    5. '```' → logprob: -4.617581844329834
    6. 'b' → logprob: -5.242581844329834
    7. '           ' → logprob: -5.992581844329834
    8. ' B' → logprob: -6.242581844329834
    9. '       ' → logprob: -6.617581844329834
    10. '``' → logprob: -7.492581844329834

Token 1353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1740863174200058
    2. ' i' → logprob: -1.924086332321167
    3. 'prefix' → logprob: -5.549086093902588
    4. 'dp' → logprob: -5.924086093902588
    5. 'B' → logprob: -6.549086093902588
    6. 'p' → logprob: -6.924086093902588
    7. 'True' → logprob: -7.049086093902588
    8. ' True' → logprob: -7.299086093902588
    9. ' prefix' → logprob: -7.424086093902588
    10. ' dp' → logprob: -7.799086093902588

Token 1354: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006637929007411003
    2. ' ==' → logprob: -5.881638050079346
    3. '<len' → logprob: -6.381638050079346
    4. '<' → logprob: -6.631638050079346
    5. '<n' → logprob: -8.256637573242188
    6. '```' → logprob: -9.006637573242188
    7. '==' → logprob: -9.131637573242188
    8. ' <=' → logprob: -9.506637573242188
    9. ' !=' → logprob: -9.631637573242188
    10. '<size' → logprob: -10.381637573242188

Token 1355: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04665326327085495
    2. '=' → logprob: -3.4216532707214355
    3. '=n' → logprob: -4.4216532707214355
    4. ' n' → logprob: -7.5466532707214355
    5. 'len' → logprob: -9.046652793884277
    6. ' =' → logprob: -9.296652793884277
    7. '=len' → logprob: -9.796652793884277
    8. '```' → logprob: -10.171652793884277
    9. '=
' → logprob: -10.671652793884277
    10. '+' → logprob: -11.046652793884277

Token 1356: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2084820568561554
    2. ':' → logprob: -1.708482027053833
    3. ' and' → logprob: -5.333482265472412
    4. '+' → logprob: -7.833482265472412
    5. '       ' → logprob: -8.083481788635254
    6. '           ' → logprob: -8.208481788635254
    7. '```' → logprob: -8.208481788635254
    8. '=' → logprob: -8.333481788635254
    9. ' :
' → logprob: -8.333481788635254
    10. '):
' → logprob: -8.583481788635254

Token 1357: '               ' (ID: 506)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.11355894804000854
    2. 'ch' → logprob: -2.6135590076446533
    3. ' B' → logprob: -3.7385590076446533
    4. 'B' → logprob: -4.863558769226074
    5. '   ' → logprob: -7.113558769226074
    6. '           ' → logprob: -7.238558769226074
    7. '```' → logprob: -8.238558769226074
    8. '               ' → logprob: -8.863558769226074
    9. ' ' → logprob: -9.113558769226074
    10. 'b' → logprob: -9.113558769226074

Token 1358: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.28850889205932617
    2. 'ch' → logprob: -1.7885088920593262
    3. ' B' → logprob: -3.038508892059326
    4. 'm' → logprob: -3.788508892059326
    5. ' ch' → logprob: -4.538508892059326
    6. ' m' → logprob: -7.163508892059326
    7. 'b' → logprob: -7.288508892059326
    8. '   ' → logprob: -8.038509368896484
    9. 'Bk' → logprob: -8.663509368896484
    10. 'line' → logprob: -9.913509368896484

Token 1359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2242572009563446
    2. ' =' → logprob: -2.099257230758667
    3. '_i' → logprob: -2.849257230758667
    4. 'i' → logprob: -4.599256992340088
    5. '[i' → logprob: -5.349256992340088
    6. '=i' → logprob: -5.849256992340088
    7. '_k' → logprob: -5.974256992340088
    8. 'k' → logprob: -9.724257469177246
    9. '=_' → logprob: -10.349257469177246
    10. '.append' → logprob: -10.599257469177246

Token 1360: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0037613706663250923
    2. ' prefix' → logprob: -5.628761291503906
    3. '(prefix' → logprob: -8.753761291503906
    4. '   ' → logprob: -12.753761291503906
    5. ' (' → logprob: -16.378761291503906
    6. ' ' → logprob: -16.628761291503906
    7. '       ' → logprob: -16.753761291503906
    8. '.prefix' → logprob: -17.128761291503906
    9. 'pref' → logprob: -17.253761291503906
    10. '_prefix' → logprob: -17.378761291503906

Token 1361: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013290488859638572
    2. 'i' → logprob: -6.626328945159912
    3. '[' → logprob: -13.62632942199707
    4. ' i' → logprob: -14.50132942199707
    5. '```' → logprob: -15.37632942199707
    6. '[k' → logprob: -15.50132942199707
    7. '[
' → logprob: -15.75132942199707
    8. '_i' → logprob: -15.75132942199707
    9. '[I' → logprob: -16.12632942199707
    10. '(i' → logprob: -16.12632942199707

Token 1362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16831518709659576
    2. ']+' → logprob: -2.0433151721954346
    3. ' +' → logprob: -4.168315410614014
    4. '+' → logprob: -4.668315410614014
    5. ' ]' → logprob: -8.543314933776855
    6. '[' → logprob: -9.043314933776855
    7. '+]' → logprob: -10.043314933776855
    8. ')' → logprob: -10.793314933776855
    9. '][' → logprob: -11.543314933776855
    10. ')+' → logprob: -11.668314933776855

Token 1363: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31327494978904724
    2. '+' → logprob: -1.3132749795913696
    3. '[' → logprob: -12.688275337219238
    4. '+j' → logprob: -12.813275337219238
    5. '+B' → logprob: -13.188275337219238
    6. '＋' → logprob: -14.063275337219238
    7. ' plus' → logprob: -14.063275337219238
    8. '```' → logprob: -14.313275337219238
    9. '+i' → logprob: -14.438275337219238
    10. ' ' → logprob: -14.563275337219238

Token 1364: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -7.505351095460355e-05
    2. ' prefix' → logprob: -9.500075340270996
    3. '(prefix' → logprob: -16.75007438659668
    4. '_prefix' → logprob: -18.75007438659668
    5. '   ' → logprob: -19.00007438659668
    6. 'j' → logprob: -19.37507438659668
    7. '0' → logprob: -19.75007438659668
    8. '1' → logprob: -19.75007438659668
    9. ' ' → logprob: -20.87507438659668
    10. '           ' → logprob: -20.87507438659668

Token 1365: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00019460011390037835
    2. '_i' → logprob: -8.875194549560547
    3. 'j' → logprob: -10.000194549560547
    4. '```' → logprob: -12.250194549560547
    5. '[i' → logprob: -12.875194549560547
    6. 'i' → logprob: -13.375194549560547
    7. '[j' → logprob: -15.375194549560547
    8. '
' → logprob: -16.625194549560547
    9. '``' → logprob: -17.625194549560547
    10. '   ' → logprob: -18.000194549560547

Token 1366: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7120533811976202e-05
    2. 'i' → logprob: -11.000017166137695
    3. '[' → logprob: -16.000017166137695
    4. '(i' → logprob: -16.500017166137695
    5. '{i' → logprob: -17.250017166137695
    6. '   ' → logprob: -17.375017166137695
    7. '	i' → logprob: -17.875017166137695
    8. '[
' → logprob: -18.250017166137695
    9. '```' → logprob: -18.375017166137695
    10. '[user' → logprob: -18.750017166137695

Token 1367: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11409928649663925
    2. 'i' → logprob: -2.2390992641448975
    3. ']' → logprob: -7.239099502563477
    4. '```' → logprob: -8.739099502563477
    5. '[' → logprob: -8.864099502563477
    6. ' i' → logprob: -9.614099502563477
    7. '	i' → logprob: -10.114099502563477
    8. '[
' → logprob: -10.239099502563477
    9. '(i' → logprob: -10.614099502563477
    10. '_i' → logprob: -10.989099502563477

Token 1368: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09716887772083282
    2. ')' → logprob: -3.7221689224243164
    3. ',' → logprob: -4.222168922424316
    4. ' ch' → logprob: -4.472168922424316
    5. '<|end|>' → logprob: -4.597168922424316
    6. ' =' → logprob: -4.722168922424316
    7. '           ' → logprob: -4.972168922424316
    8. '[' → logprob: -6.347168922424316
    9. '```' → logprob: -6.347168922424316
    10. 'ch' → logprob: -6.597168922424316

Token 1369: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.01827543042600155
    2. ' ch' → logprob: -4.018275260925293
    3. '	ch' → logprob: -9.018275260925293
    4. '               ' → logprob: -14.143275260925293
    5. '(ch' → logprob: -14.268275260925293
    6. ',ch' → logprob: -14.268275260925293
    7. '[ch' → logprob: -14.268275260925293
    8. '_ch' → logprob: -14.393275260925293
    9. '```' → logprob: -14.393275260925293
    10. '   ' → logprob: -15.393275260925293

Token 1370: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.6696149840718135e-05
    2. '.' → logprob: -9.875056266784668
    3. 'add' → logprob: -13.500056266784668
    4. '```' → logprob: -13.750056266784668
    5. '.append' → logprob: -13.875056266784668
    6. ').' → logprob: -13.875056266784668
    7. ' .' → logprob: -15.250056266784668
    8. '   ' → logprob: -15.625056266784668
    9. '].' → logprob: -16.125057220458984
    10. '`.' → logprob: -16.750057220458984

Token 1371: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -8.08944896562025e-05
    2. ' (' → logprob: -9.625081062316895
    3. 'B' → logprob: -11.750081062316895
    4. '(' → logprob: -12.125081062316895
    5. '((' → logprob: -13.750081062316895
    6. '(
' → logprob: -15.250081062316895
    7. ' B' → logprob: -15.625081062316895
    8. '(b' → logprob: -18.000080108642578
    9. '(int' → logprob: -18.500080108642578
    10. '	B' → logprob: -19.000080108642578

Token 1372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024916047230362892
    2. ',i' → logprob: -3.899915933609009
    3. ',B' → logprob: -5.524916172027588
    4. ' ,' → logprob: -9.02491569519043
    5. ',b' → logprob: -9.52491569519043
    6. ',int' → logprob: -10.14991569519043
    7. '(i' → logprob: -10.64991569519043
    8. '```' → logprob: -11.27491569519043
    9. ',(' → logprob: -11.39991569519043
    10. '`,' → logprob: -11.64991569519043

Token 1373: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005563704180531204
    2. ' dp' → logprob: -7.500556468963623
    3. '(dp' → logprob: -13.250555992126465
    4. '	dp' → logprob: -14.125555992126465
    5. '   ' → logprob: -14.250555992126465
    6. '       ' → logprob: -16.62555694580078
    7. '[' → logprob: -17.12555694580078
    8. '_dp' → logprob: -17.25055694580078
    9. '           ' → logprob: -17.62555694580078
    10. ' ' → logprob: -17.87555694580078

Token 1374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.750000953674316
    3. '```' → logprob: -15.750000953674316
    4. '(i' → logprob: -16.75
    5. '[' → logprob: -17.0
    6. ')' → logprob: -17.25
    7. '{i' → logprob: -17.375
    8. '   ' → logprob: -18.75
    9. '_i' → logprob: -18.875
    10. '[I' → logprob: -19.875

Token 1375: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0074965935200452805
    2. '-' → logprob: -5.007496356964111
    3. '[i' → logprob: -7.382496356964111
    4. '-i' → logprob: -10.25749683380127
    5. ',' → logprob: -10.63249683380127
    6. '[-' → logprob: -10.63249683380127
    7. '[' → logprob: -11.00749683380127
    8. ')' → logprob: -11.13249683380127
    9. ' ' → logprob: -11.88249683380127
    10. '   ' → logprob: -12.00749683380127

Token 1376: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22916625440120697
    2. '-' → logprob: -1.6041662693023682
    3. '*' → logprob: -6.979166030883789
    4. '[' → logprob: -7.604166030883789
    5. '[i' → logprob: -7.604166030883789
    6. ')' → logprob: -7.729166030883789
    7. ',' → logprob: -7.854166030883789
    8. '               ' → logprob: -8.979166030883789
    9. '```' → logprob: -8.979166030883789
    10. '[-' → logprob: -9.354166030883789

Token 1377: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.165027217415627e-05
    2. ' B' → logprob: -10.750021934509277
    3. '(B' → logprob: -16.12502098083496
    4. '   ' → logprob: -17.37502098083496
    5. '	B' → logprob: -17.75002098083496
    6. '```' → logprob: -19.37502098083496
    7. '_B' → logprob: -19.50002098083496
    8. '(' → logprob: -20.12502098083496
    9. 'Bk' → logprob: -20.50002098083496
    10. '       ' → logprob: -20.75002098083496

Token 1378: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0076903896406292915
    2. '*i' → logprob: -4.8826904296875
    3. ' i' → logprob: -10.0076904296875
    4. '*' → logprob: -11.0076904296875
    5. '   ' → logprob: -11.2576904296875
    6. '```' → logprob: -12.1326904296875
    7. ' *' → logprob: -13.0076904296875
    8. '(i' → logprob: -14.0076904296875
    9. '	i' → logprob: -14.5076904296875
    10. '`' → logprob: -15.3826904296875

Token 1379: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025275684311054647
    2. ')
' → logprob: -8.750252723693848
    3. '           ' → logprob: -9.875252723693848
    4. '               ' → logprob: -10.250252723693848
    5. '       ' → logprob: -12.250252723693848
    6. '())' → logprob: -14.625252723693848
    7. '')' → logprob: -14.875252723693848
    8. '()' → logprob: -14.875252723693848
    9. '`)' → logprob: -15.000252723693848
    10. ' )' → logprob: -15.125252723693848

Token 1380: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1381: ' print' (ID: 2123)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7114875912666321
    2. '<|end|>' → logprob: -1.2114875316619873
    3. ')' → logprob: -1.5864875316619873
    4. '       ' → logprob: -5.836487770080566
    5. '   ' → logprob: -6.711487770080566
    6. '#' → logprob: -7.211487770080566
    7. '<|end|>' → logprob: -7.711487770080566
    8. '``' → logprob: -8.211487770080566
    9. '}' → logprob: -8.461487770080566
    10. '):' → logprob: -9.336487770080566

Token 1382: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.006749358493834734
    2. '()' → logprob: -5.256749153137207
    3. 'dp' → logprob: -7.506749153137207
    4. '(' → logprob: -8.006749153137207
    5. '(len' → logprob: -9.006749153137207
    6. '('' → logprob: -9.006749153137207
    7. '(max' → logprob: -9.131749153137207
    8. '(sum' → logprob: -9.256749153137207
    9. ' (' → logprob: -9.881749153137207
    10. '(*' → logprob: -11.006749153137207

Token 1383: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009551709517836571
    2. '```' → logprob: -7.750955104827881
    3. '(i' → logprob: -8.250955581665039
    4. '[' → logprob: -9.500955581665039
    5. ')' → logprob: -9.750955581665039
    6. '`' → logprob: -9.875955581665039
    7. '[n' → logprob: -10.375955581665039
    8. '``' → logprob: -11.375955581665039
    9. '[I' → logprob: -11.625955581665039
    10. '[-' → logprob: -11.875955581665039

Token 1384: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06514563411474228
    2. ')' → logprob: -2.81514573097229
    3. ']' → logprob: -6.690145492553711
    4. '[n' → logprob: -6.815145492553711
    5. '[-' → logprob: -8.315145492553711
    6. '])
' → logprob: -8.440145492553711
    7. '[' → logprob: -8.440145492553711
    8. ')])' → logprob: -9.565145492553711
    9. '[i' → logprob: -10.690145492553711
    10. ')
' → logprob: -10.940145492553711

Token 1385: 'thread' (ID: 9817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12460166215896606
    2. '\n' → logprob: -2.4996016025543213
    3. '```' → logprob: -3.4996016025543213
    4. '\' → logprob: -6.3746018409729
    5. '<|end|>' → logprob: -6.6246018409729
    6. '   ' → logprob: -7.9996018409729
    7. '"' → logprob: -8.749601364135742
    8. '\r' → logprob: -8.874601364135742
    9. '``' → logprob: -8.999601364135742
    10. '")' → logprob: -8.999601364135742

Token 1386: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.002270635450258851
    2. '```' → logprob: -7.377270698547363
    3. '=' → logprob: -8.127270698547363
    4. 'ed' → logprob: -8.252270698547363
    5. '().' → logprob: -8.252270698547363
    6. '.start' → logprob: -8.252270698547363
    7. '.' → logprob: -8.502270698547363
    8. '.Thread' → logprob: -8.627270698547363
    9. 'ading' → logprob: -10.252270698547363
    10. 'ad' → logprob: -10.627270698547363

Token 1387: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.00042447797022759914
    2. '.start' → logprob: -7.875424385070801
    3. '.' → logprob: -10.5004243850708
    4. '```' → logprob: -11.7504243850708
    5. '.thread' → logprob: -13.2504243850708
    6. '(Thread' → logprob: -13.3754243850708
    7. '.stack' → logprob: -13.8754243850708
    8. '.Stack' → logprob: -14.0004243850708
    9. '.Threading' → logprob: -14.0004243850708
    10. '.main' → logprob: -14.1254243850708

Token 1388: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.001506409258581698
    2. '(' → logprob: -6.626506328582764
    3. 'target' → logprob: -9.251506805419922
    4. '(start' → logprob: -10.501506805419922
    5. '(
' → logprob: -11.251506805419922
    6. '().' → logprob: -11.501506805419922
    7. '```' → logprob: -11.751506805419922
    8. '.start' → logprob: -12.126506805419922
    9. '(Target' → logprob: -12.751506805419922
    10. ' target' → logprob: -12.876506805419922

Token 1389: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008352155797183514
    2. '(main' → logprob: -5.008352279663086
    3. 'target' → logprob: -6.758352279663086
    4. '(target' → logprob: -7.758352279663086
    5. ' main' → logprob: -10.008352279663086
    6. '	main' → logprob: -14.383352279663086
    7. '```' → logprob: -14.758352279663086
    8. '.main' → logprob: -15.383352279663086
    9. '_main' → logprob: -15.383352279663086
    10. ')' → logprob: -15.633352279663086

Token 1390: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '(main' → logprob: -21.5
    4. '	main' → logprob: -22.125
    5. 'target' → logprob: -23.625
    6. '.main' → logprob: -24.0
    7. 'Main' → logprob: -24.375
    8. '_main' → logprob: -25.125
    9. 'mainwindow' → logprob: -25.375
    10. '
' → logprob: -26.0

Token 1391: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0025536655448377132
    2. ')' → logprob: -6.127553462982178
    3. '()).' → logprob: -8.502553939819336
    4. '```' → logprob: -9.377553939819336
    5. '(target' → logprob: -10.752553939819336
    6. '()' → logprob: -11.127553939819336
    7. '(' → logprob: -11.252553939819336
    8. '.start' → logprob: -11.877553939819336
    9. '   ' → logprob: -12.127553939819336
    10. '().' → logprob: -12.377553939819336

Token 1392: 'start' (ID: 5236)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8458624482154846
    2. '.start' → logprob: -0.9708624482154846
    3. 'start' → logprob: -2.22086238861084
    4. '()' → logprob: -2.97086238861084
    5. '(start' → logprob: -4.59586238861084
    6. ').' → logprob: -4.84586238861084
    7. ')' → logprob: -5.59586238861084
    8. '.run' → logprob: -6.47086238861084
    9. '```' → logprob: -6.47086238861084
    10. '(' → logprob: -6.59586238861084

Token 1393: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034426555037498474
    2. '<|end|>' → logprob: -4.159426689147949
    3. '```' → logprob: -4.159426689147949
    4. '#' → logprob: -6.159426689147949
    5. ']' → logprob: -9.40942668914795
    6. '[' → logprob: -9.78442668914795
    7. '   ' → logprob: -9.78442668914795
    8. '<|end|>' → logprob: -9.90942668914795
    9. '')' → logprob: -10.78442668914795
    10. '``' → logprob: -10.78442668914795


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1391
Tokens correctement prédits (1ère position, stricte): 504
Tokens correctement prédits (1ère position, avec adaptation): 530
Tokens correctement prédits (top 10): 1019
Précision stricte (1ère position): 36.23%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 73.26%
================================================================================
