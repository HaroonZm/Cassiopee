================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Station:
    def __init__(self, index: int):
        self.index = index

class RailRing:
    def __init__(self, station_count: int):
        self.station_count = station_count

    def distance(self, from_station: Station, to_station: Station) -> int:
        diff = abs(from_station.index - to_station.index)
        return 100 * min(diff, self.station_count - diff)

class ShoppingTour:
    def __init__(self, rail_ring: RailRing, start_station: Station, shopping_stations: list[Station]):
        self.rail_ring = rail_ring
        self.start_station = start_station
        self.shopping_stations = shopping_stations

    def compute_min_cost(self) -> int:
        all_stations = self.shopping_stations + [self.start_station]
        indices = [s.index for s in all_stations]
        leftmost = min(indices)
        rightmost = max(indices)
        N = self.rail_ring.station_count
        # Possible minimal cost candidates initialization
        candidates = []

        # Clockwise and anticlockwise costs if we wrap over the ring
        clockwise_span = (rightmost - leftmost) * 100
        anticlockwise_span = (N - (rightmost - leftmost)) * 100

        # Compute cost visiting all shopping stations on the shortest segment of the ring
        # Case 1: go from start to leftmost, then rightmost
        cost1 = self.rail_ring.distance(self.start_station, Station(leftmost)) + clockwise_span
        candidates.append(cost1)
        # Case 2: go from start to rightmost, then leftmost going counterclockwise
        cost2 = self.rail_ring.distance(self.start_station, Station(rightmost)) + clockwise_span
        candidates.append(cost2)
        # Case 3: similar but using anticlockwise span of the ring 
        cost3 = self.rail_ring.distance(self.start_station, Station(leftmost)) + anticlockwise_span
        candidates.append(cost3)
        cost4 = self.rail_ring.distance(self.start_station, Station(rightmost)) + anticlockwise_span
        candidates.append(cost4)

        # The minimal cost is the minimum of the above candidates
        return min(candidates)

def parse_input() -> ShoppingTour:
    import sys
    input = sys.stdin.readline
    N, M, p = map(int, input().split())
    shopping_indices = [int(input()) for _ in range(M)]
    rail_ring = RailRing(N)
    start_station = Station(p)
    shopping_stations = [Station(idx) for idx in shopping_indices]
    return ShoppingTour(rail_ring, start_station, shopping_stations)

def main():
    tour = parse_input()
    print(tour.compute_min_cost())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Station' (ID: 20902)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23883064091205597
    2. '```' → logprob: -2.48883056640625
    3. '(' → logprob: -2.61383056640625
    4. '   ' → logprob: -3.23883056640625
    5. ''' → logprob: -5.48883056640625
    6. '`' → logprob: -6.11383056640625
    7. '.' → logprob: -6.48883056640625
    8. '\' → logprob: -6.48883056640625
    9. ':
' → logprob: -6.61383056640625
    10. '``' → logprob: -7.11383056640625

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13275332748889923
    2. '    ' → logprob: -3.257753372192383
    3. '   ' → logprob: -3.382753372192383
    4. ' pass' → logprob: -4.382753372192383
    5. '```' → logprob: -5.132753372192383
    6. '_' → logprob: -5.382753372192383
    7. ' def' → logprob: -5.507753372192383
    8. '\' → logprob: -5.882753372192383
    9. ' 
' → logprob: -5.882753372192383
    10. ''' → logprob: -6.382753372192383

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.624373197555542
    2. ' ' → logprob: -1.124373197555542
    3. '__' → logprob: -1.999373197555542
    4. ' ' → logprob: -6.499373435974121
    5. ' init' → logprob: -7.499373435974121
    6. '  ' → logprob: -7.749373435974121
    7. '<|end|>' → logprob: -8.249373435974121
    8. '    ' → logprob: -8.374373435974121
    9. '_' → logprob: -8.624373435974121
    10. ' def' → logprob: -8.874373435974121

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.9160102712921798e-05
    2. ' init' → logprob: -10.500029563903809
    3. '_init' → logprob: -13.500029563903809
    4. '	init' → logprob: -16.750028610229492
    5. '_' → logprob: -18.000028610229492
    6. 'ini' → logprob: -18.375028610229492
    7. ' ' → logprob: -18.500028610229492
    8. '   ' → logprob: -19.000028610229492
    9. '  ' → logprob: -19.125028610229492
    10. 'inite' → logprob: -20.250028610229492

Token 7: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6501879096031189
    2. '__(' → logprob: -1.0251879692077637
    3. '__' → logprob: -2.2751879692077637
    4. '_' → logprob: -4.775187969207764
    5. '__(
' → logprob: -5.525187969207764
    6. '(self' → logprob: -6.525187969207764
    7. ' (' → logprob: -7.150187969207764
    8. '__((' → logprob: -7.650187969207764
    9. '(space' → logprob: -8.150187492370605
    10. '_(' → logprob: -8.275187492370605

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030805266578681767
    2. ' self' → logprob: -8.1253080368042
    3. '(self' → logprob: -11.5003080368042
    4. ')' → logprob: -13.6253080368042
    5. ',self' → logprob: -15.7503080368042
    6. '[self' → logprob: -16.500308990478516
    7. '       ' → logprob: -17.000308990478516
    8. '=self' → logprob: -17.125308990478516
    9. ' )' → logprob: -17.250308990478516
    10. '_self' → logprob: -17.250308990478516

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29265937209129333
    2. ',' → logprob: -2.167659282684326
    3. '(' → logprob: -3.417659282684326
    4. '<|end|>' → logprob: -3.542659282684326
    5. '_' → logprob: -3.792659282684326
    6. '.' → logprob: -3.917659282684326
    7. ' )' → logprob: -4.042659282684326
    8. 'self' → logprob: -5.292659282684326
    9. ' ' → logprob: -6.042659282684326
    10. '   ' → logprob: -6.792659282684326

Token 10: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030242599546909332
    2. ' self' → logprob: -4.155242443084717
    3. ')' → logprob: -4.530242443084717
    4. ' )' → logprob: -6.780242443084717
    5. 'name' → logprob: -7.030242443084717
    6. 'station' → logprob: -7.405242443084717
    7. ' station' → logprob: -7.780242443084717
    8. 'location' → logprob: -9.655242919921875
    9. '<|end|>' → logprob: -9.780242919921875
    10. 's' → logprob: -10.780242919921875

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035177092999219894
    2. '):' → logprob: -3.410176992416382
    3. ')' → logprob: -6.660177230834961
    4. ' ,' → logprob: -9.035177230834961
    5. ':' → logprob: -9.535177230834961
    6. '   ' → logprob: -10.910177230834961
    7. '):
' → logprob: -12.035177230834961
    8. ',
' → logprob: -12.410177230834961
    9. '_' → logprob: -12.410177230834961
    10. ',index' → logprob: -12.910177230834961

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6307592391967773
    2. 'int' → logprob: -0.8807592391967773
    3. ')' → logprob: -3.5057592391967773
    4. ' )' → logprob: -4.005759239196777
    5. ' ' → logprob: -5.630759239196777
    6. ' self' → logprob: -8.255759239196777
    7. 'self' → logprob: -8.380759239196777
    8. 's' → logprob: -8.505759239196777
    9. '[int' → logprob: -9.005759239196777
    10. '=int' → logprob: -9.130759239196777

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03638503700494766
    2. '):' → logprob: -3.5363850593566895
    3. ')' → logprob: -5.0363850593566895
    4. '   ' → logprob: -10.411384582519531
    5. '<|end|>' → logprob: -11.286384582519531
    6. ' ,' → logprob: -11.411384582519531
    7. '):
' → logprob: -11.536384582519531
    8. '```' → logprob: -11.661384582519531
    9. ':' → logprob: -12.161384582519531
    10. ',int' → logprob: -12.286384582519531

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06752507388591766
    2. '_' → logprob: -3.6925251483917236
    3. '   ' → logprob: -4.1925249099731445
    4. ' ' → logprob: -4.8175249099731445
    5. '    ' → logprob: -4.8175249099731445
    6. 'self' → logprob: -6.3175249099731445
    7. '<|end|>' → logprob: -6.8175249099731445
    8. '        
' → logprob: -7.0675249099731445
    9. '     ' → logprob: -7.1925249099731445
    10. '        ' → logprob: -7.6925249099731445

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07071300595998764
    2. '       ' → logprob: -3.0707130432128906
    3. ' self' → logprob: -4.070713043212891
    4. '_' → logprob: -6.445713043212891
    5. '   ' → logprob: -7.070713043212891
    6. 's' → logprob: -7.070713043212891
    7. ' ' → logprob: -7.195713043212891
    8. '        ' → logprob: -8.82071304321289
    9. ''s' → logprob: -9.07071304321289
    10. ' ' → logprob: -9.07071304321289

Token 16: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010311733931303024
    2. '.index' → logprob: -5.135311603546143
    3. ' .' → logprob: -5.760311603546143
    4. '.name' → logprob: -7.885311603546143
    5. '._' → logprob: -8.0103120803833
    6. '.code' → logprob: -9.5103120803833
    7. 'index' → logprob: -10.0103120803833
    8. '.status' → logprob: -10.0103120803833
    9. '.station' → logprob: -10.1353120803833
    10. '.is' → logprob: -10.5103120803833

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07094945013523102
    2. ' =' → logprob: -2.6959495544433594
    3. '.' → logprob: -7.070949554443359
    4. ' ' → logprob: -10.07094955444336
    5. '_' → logprob: -10.32094955444336
    6. '<|end|>' → logprob: -10.32094955444336
    7. ')' → logprob: -10.44594955444336
    8. ',' → logprob: -12.57094955444336
    9. '   ' → logprob: -12.57094955444336
    10. '       ' → logprob: -12.69594955444336

Token 18: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.03804241120815277
    2. 'index' → logprob: -3.2880423069000244
    3. '#index' → logprob: -15.038042068481445
    4. '	index' → logprob: -15.663042068481445
    5. '(index' → logprob: -15.913042068481445
    6. ' ' → logprob: -16.038042068481445
    7. '=index' → logprob: -16.663042068481445
    8. '_index' → logprob: -17.663042068481445
    9. '@index' → logprob: -17.788042068481445
    10. '0' → logprob: -17.913042068481445

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8808954954147339
    2. '<|end|>' → logprob: -1.0058954954147339
    3. '\' → logprob: -2.7558956146240234
    4. '
' → logprob: -2.7558956146240234
    5. '\n' → logprob: -3.8808956146240234
    6. ' ' → logprob: -4.130895614624023
    7. '   ' → logprob: -4.255895614624023
    8. '```' → logprob: -5.380895614624023
    9. '' → logprob: -5.380895614624023
    10. '_' → logprob: -5.380895614624023

Token 20: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5407453179359436
    2. '.' → logprob: -1.5407452583312988
    3. '
' → logprob: -3.040745258331299
    4. '_' → logprob: -3.665745258331299
    5. ' ' → logprob: -3.915745258331299
    6. '<|end|>' → logprob: -3.915745258331299
    7. '    
' → logprob: -4.040745258331299
    8. 'n' → logprob: -4.540745258331299
    9. '\' → logprob: -4.540745258331299
    10. ',' → logprob: -4.915745258331299

Token 21: ' Rail' (ID: 32384)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01376323401927948
    2. ' Space' → logprob: -5.138763427734375
    3. ' Train' → logprob: -6.513763427734375
    4. '<|end|>' → logprob: -7.138763427734375
    5. '_' → logprob: -7.513763427734375
    6. ' ' → logprob: -7.763763427734375
    7. ' User' → logprob: -8.013763427734375
    8. 'Space' → logprob: -8.013763427734375
    9. ' Station' → logprob: -8.013763427734375
    10. ')' → logprob: -8.513763427734375

Token 22: 'Ring' (ID: 52498)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014870086684823036
    2. 'way' → logprob: -4.6398701667785645
    3. 'Road' → logprob: -6.3898701667785645
    4. '():' → logprob: -6.6398701667785645
    5. 'Way' → logprob: -6.7648701667785645
    6. 'road' → logprob: -8.014869689941406
    7. 'Line' → logprob: -8.389869689941406
    8. 'Station' → logprob: -9.014869689941406
    9. '(' → logprob: -9.639869689941406
    10. 'Segment' → logprob: -10.014869689941406

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005708358250558376
    2. '(' → logprob: -5.25570821762085
    3. '():' → logprob: -8.130708694458008
    4. '(:' → logprob: -10.130708694458008
    5. '):' → logprob: -10.380708694458008
    6. ' :' → logprob: -10.505708694458008
    7. ':**' → logprob: -10.755708694458008
    8. '(object' → logprob: -11.380708694458008
    9. '>:' → logprob: -11.505708694458008
    10. '(R' → logprob: -11.630708694458008

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09636245667934418
    2. ' def' → logprob: -3.471362352371216
    3. '(' → logprob: -3.846362352371216
    4. '    ' → logprob: -4.096362590789795
    5. ' ' → logprob: -5.096362590789795
    6. 'def' → logprob: -5.346362590789795
    7. '    
' → logprob: -5.596362590789795
    8. '(n' → logprob: -6.221362590789795
    9. ' (' → logprob: -6.596362590789795
    10. '\' → logprob: -6.721362590789795

Token 25: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5579218864440918
    2. 'def' (adapté à ' def') → logprob: -0.9329218864440918
    3. '   ' → logprob: -3.932921886444092
    4. '    ' → logprob: -4.432921886444092
    5. '(' → logprob: -7.182921886444092
    6. ' ' → logprob: -7.557921886444092
    7. '_' → logprob: -8.05792236328125
    8. 'de' → logprob: -8.18292236328125
    9. ' de' → logprob: -8.30792236328125
    10. 'class' → logprob: -8.80792236328125

Token 26: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14752088487148285
    2. ' ' → logprob: -2.0225207805633545
    3. '__' → logprob: -6.022521018981934
    4. '_' → logprob: -6.897521018981934
    5. ' ' → logprob: -7.772521018981934
    6. '  ' → logprob: -7.897521018981934
    7. ' _' → logprob: -8.147521018981934
    8. ' init' → logprob: -9.772521018981934
    9. ' ​' → logprob: -9.897521018981934
    10. ' ▁' → logprob: -10.022521018981934

Token 27: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.816093228830141e-06
    2. 'ini' → logprob: -13.62500286102295
    3. 'i' → logprob: -14.12500286102295
    4. 'in' → logprob: -14.37500286102295
    5. 'innit' → logprob: -16.625001907348633
    6. 'def' → logprob: -17.500001907348633
    7. ' init' → logprob: -17.625001907348633
    8. 'inite' → logprob: -18.000001907348633
    9. 'int' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633

Token 28: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07706829905509949
    2. '(self' → logprob: -2.827068328857422
    3. '(' → logprob: -4.952068328857422
    4. '__' → logprob: -5.702068328857422
    5. ' (' → logprob: -6.327068328857422
    6. '__(
' → logprob: -6.827068328857422
    7. '<|end|>' → logprob: -7.702068328857422
    8. 'self' → logprob: -7.827068328857422
    9. '__((' → logprob: -8.202068328857422
    10. '_(' → logprob: -8.202068328857422

Token 29: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004964528139680624
    2. ' self' → logprob: -5.379964351654053
    3. ')' → logprob: -8.004964828491211
    4. '(self' → logprob: -12.004964828491211
    5. ' )' → logprob: -13.504964828491211
    6. '0' → logprob: -13.879964828491211
    7. '_self' → logprob: -15.129964828491211
    8. ',' → logprob: -15.254964828491211
    9. ' ' → logprob: -15.254964828491211
    10. '	self' → logprob: -15.504964828491211

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002800721675157547
    2. ' ,' → logprob: -6.377800941467285
    3. 'self' → logprob: -7.377800941467285
    4. ')' → logprob: -7.877800941467285
    5. '_,' → logprob: -10.252800941467285
    6. '_' → logprob: -10.752800941467285
    7. ' )' → logprob: -12.002800941467285
    8. ',self' → logprob: -12.252800941467285
    9. '   ' → logprob: -12.377800941467285
    10. '_self' → logprob: -12.502800941467285

Token 31: ' station' (ID: 11538)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.38363978266716003
    2. ' station' → logprob: -2.6336398124694824
    3. ' rings' → logprob: -3.3836398124694824
    4. ' indices' → logprob: -3.5086398124694824
    5. 'stations' → logprob: -3.6336398124694824
    6. ')' → logprob: -3.7586398124694824
    7. ' size' → logprob: -3.8836398124694824
    8. ' self' → logprob: -4.133639812469482
    9. ' ring' → logprob: -4.383639812469482
    10. ' n' → logprob: -4.383639812469482

Token 32: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018531967652961612
    2. '_s' → logprob: -7.001852989196777
    3. '_count' → logprob: -8.001852989196777
    4. '_indices' → logprob: -8.501852989196777
    5. ' s' → logprob: -9.001852989196777
    6. '_indexes' → logprob: -9.001852989196777
    7. '_index' → logprob: -9.751852989196777
    8. '_list' → logprob: -9.876852989196777
    9. '_ids' → logprob: -11.751852989196777
    10. ')' → logprob: -12.001852989196777

Token 33: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021904919296503067
    2. ':' → logprob: -4.521904945373535
    3. ',' → logprob: -5.021904945373535
    4. '=' → logprob: -5.521904945373535
    5. ')' → logprob: -9.771904945373535
    6. '):
' → logprob: -9.896904945373535
    7. ' ):' → logprob: -10.271904945373535
    8. '   ' → logprob: -10.396904945373535
    9. ':int' → logprob: -11.146904945373535
    10. ' :' → logprob: -12.646904945373535

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20858493447303772
    2. 'int' → logprob: -1.7085849046707153
    3. ' )' → logprob: -5.583584785461426
    4. ')' → logprob: -6.083584785461426
    5. ' ' → logprob: -6.833584785461426
    6. '=int' → logprob: -11.833584785461426
    7. 'n' → logprob: -12.583584785461426
    8. ',int' → logprob: -13.083584785461426
    9. ']int' → logprob: -13.208584785461426
    10. '(int' → logprob: -13.458584785461426

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04947587847709656
    2. ',' → logprob: -3.049475908279419
    3. ')' → logprob: -7.17447566986084
    4. '   ' → logprob: -10.17447566986084
    5. '):
' → logprob: -10.42447566986084
    6. '       ' → logprob: -10.79947566986084
    7. ':' → logprob: -11.29947566986084
    8. ' ):' → logprob: -12.04947566986084
    9. ' ,' → logprob: -13.04947566986084
    10. '*' → logprob: -13.29947566986084

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014990346506237984
    2. '<|end|>' → logprob: -4.514990329742432
    3. '        ' → logprob: -7.014990329742432
    4. ' ' → logprob: -7.264990329742432
    5. ' self' → logprob: -7.889990329742432
    6. '   ' → logprob: -8.13999080657959
    7. '
' → logprob: -8.26499080657959
    8. ' 
' → logprob: -8.26499080657959
    9. 'self' → logprob: -8.26499080657959
    10. '    ' → logprob: -8.51499080657959

Token 37: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4406132996082306
    2. 'self' (adapté à ' self') → logprob: -1.0656132698059082
    3. '       ' → logprob: -4.440613269805908
    4. '   ' → logprob: -11.190613746643066
    5. ' super' → logprob: -11.565613746643066
    6. '        ' → logprob: -12.315613746643066
    7. '```' → logprob: -12.565613746643066
    8. ' ' → logprob: -12.690613746643066
    9. 'super' → logprob: -12.815613746643066
    10. ' ' → logprob: -12.940613746643066

Token 38: '.station' (ID: 183964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03977447375655174
    2. '.st' → logprob: -3.4147744178771973
    3. '.station' → logprob: -5.289774417877197
    4. '.s' → logprob: -7.414774417877197
    5. ' .' → logprob: -8.164774894714355
    6. '.points' → logprob: -10.164774894714355
    7. '.r' → logprob: -10.664774894714355
    8. '.index' → logprob: -12.164774894714355
    9. '.period' → logprob: -12.289774894714355
    10. '.n' → logprob: -12.414774894714355

Token 39: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008165942505002022
    2. '_count' → logprob: -5.1331658363342285
    3. '_s' → logprob: -6.1331658363342285
    4. '_counts' → logprob: -10.133166313171387
    5. ' s' → logprob: -11.508166313171387
    6. '_list' → logprob: -12.383166313171387
    7. '_' → logprob: -13.133166313171387
    8. 'count' → logprob: -13.633166313171387
    9. '_positions' → logprob: -14.008166313171387
    10. '_to' → logprob: -14.258166313171387

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036140859592705965
    2. '=' → logprob: -5.6286139488220215
    3. ' ' → logprob: -11.25361442565918
    4. '<|end|>' → logprob: -14.12861442565918
    5. ' =
' → logprob: -15.25361442565918
    6. ' =)' → logprob: -17.12861442565918
    7. ' +=' → logprob: -17.50361442565918
    8. ')' → logprob: -17.62861442565918
    9. '   ' → logprob: -18.25361442565918
    10. ' |=' → logprob: -18.25361442565918

Token 41: ' station' (ID: 11538)
  Prédit: ' station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.014212163165211678
    2. 'station' → logprob: -4.264212131500244
    3. ' ' → logprob: -10.014212608337402
    4. ' ' → logprob: -13.264212608337402
    5. '    ' → logprob: -14.889212608337402
    6. ' stationary' → logprob: -14.889212608337402
    7. '_station' → logprob: -15.389212608337402
    8. '   ' → logprob: -15.389212608337402
    9. '0' → logprob: -15.514212608337402
    10. '.station' → logprob: -15.639212608337402

Token 42: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.134509021649137e-05
    2. '_' → logprob: -9.87506103515625
    3. ' _' → logprob: -12.25006103515625
    4. 's' → logprob: -12.50006103515625
    5. '_co' → logprob: -14.75006103515625
    6. 'count' → logprob: -15.00006103515625
    7. '__' → logprob: -15.37506103515625
    8. '_c' → logprob: -15.75006103515625
    9. '_counts' → logprob: -16.12506103515625
    10. '_counter' → logprob: -16.62506103515625

Token 43: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16987758874893188
    2. '
' → logprob: -1.919877529144287
    3. '<|end|>' → logprob: -4.794877529144287
    4. '        
' → logprob: -7.544877529144287
    5. '   ' → logprob: -9.294878005981445
    6. '    
' → logprob: -9.419878005981445
    7. ')' → logprob: -9.419878005981445
    8. ',' → logprob: -9.669878005981445
    9. ' 
' → logprob: -9.669878005981445
    10. '        ' → logprob: -9.794878005981445

Token 44: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18511810898780823
    2. '
' → logprob: -1.8101180791854858
    3. 'self' → logprob: -5.810118198394775
    4. '<|end|>' → logprob: -6.685118198394775
    5. '        
' → logprob: -8.310117721557617
    6. '   ' → logprob: -8.560117721557617
    7. '```' → logprob: -8.810117721557617
    8. ' self' → logprob: -8.935117721557617
    9. ',' → logprob: -9.560117721557617
    10. '    
' → logprob: -9.810117721557617

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18202579021453857
    2. '       ' → logprob: -2.557025909423828
    3. 'self' → logprob: -3.182025909423828
    4. ' def' → logprob: -3.557025909423828
    5. ' self' → logprob: -4.557025909423828
    6. '   ' → logprob: -5.057025909423828
    7. '    ' → logprob: -7.307025909423828
    8. '<|end|>' → logprob: -7.432025909423828
    9. '    
' → logprob: -9.307025909423828
    10. '
' → logprob: -9.307025909423828

Token 46: ' distance' (ID: 9324)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5392909646034241
    2. ' get' → logprob: -1.0392909049987793
    3. ' create' → logprob: -3.7892909049987793
    4. ' calculate' → logprob: -4.664290904998779
    5. ' connect' → logprob: -5.164290904998779
    6. ' find' → logprob: -5.289290904998779
    7. '_' → logprob: -5.539290904998779
    8. ' def' → logprob: -5.664290904998779
    9. ' initialize' → logprob: -5.664290904998779
    10. ' train' → logprob: -6.164290904998779

Token 47: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5845442414283752
    2. '(' → logprob: -0.9595442414283752
    3. '_between' → logprob: -2.8345441818237305
    4. '_self' → logprob: -8.83454418182373
    5. 's' → logprob: -8.95954418182373
    6. '_to' → logprob: -9.08454418182373
    7. 'self' → logprob: -9.20954418182373
    8. '_from' → logprob: -9.45954418182373
    9. '_' → logprob: -9.45954418182373
    10. 'between' → logprob: -10.33454418182373

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005704291397705674
    2. ' ,' → logprob: -7.500570297241211
    3. ')' → logprob: -11.625570297241211
    4. 's' → logprob: -12.875570297241211
    5. '_,' → logprob: -13.625570297241211
    6. 'self' → logprob: -13.875570297241211
    7. 'to' → logprob: -14.750570297241211
    8. 'from' → logprob: -15.000570297241211
    9. ',index' → logprob: -15.000570297241211
    10. '_between' → logprob: -15.250570297241211

Token 49: ' from' (ID: 591)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.13744856417179108
    2. ' station' → logprob: -3.13744854927063
    3. ' from' → logprob: -3.38744854927063
    4. ' a' → logprob: -4.262448787689209
    5. ' source' → logprob: -4.637448787689209
    6. 'start' → logprob: -5.012448787689209
    7. 'from' → logprob: -5.262448787689209
    8. ' self' → logprob: -5.887448787689209
    9. ' i' → logprob: -5.887448787689209
    10. ')' → logprob: -6.387448787689209

Token 50: '_station' (ID: 110769)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.726222813129425
    2. '_' → logprob: -1.1012227535247803
    3. '_station' → logprob: -1.7262227535247803
    4. '_)' → logprob: -5.976222991943359
    5. '_,' → logprob: -6.101222991943359
    6. '_idx' → logprob: -7.226222991943359
    7. '_:' → logprob: -9.47622299194336
    8. '_location' → logprob: -10.22622299194336
    9. '_id' → logprob: -10.35122299194336
    10. '_i' → logprob: -10.72622299194336

Token 51: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05543788522481918
    2. ':' → logprob: -3.1804378032684326
    3. ')' → logprob: -5.055438041687012
    4. '_index' → logprob: -5.805438041687012
    5. ' ,' → logprob: -6.555438041687012
    6. '):' → logprob: -7.180438041687012
    7. '_,' → logprob: -8.430438041687012
    8. '_id' → logprob: -8.805438041687012
    9. '_idx' → logprob: -9.305438041687012
    10. '.' → logprob: -9.430438041687012

Token 52: ' Station' (ID: 20902)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4363377094268799
    2. 'int' → logprob: -1.1863377094268799
    3. ')' → logprob: -4.061337471008301
    4. ' )' → logprob: -4.186337471008301
    5. ' ' → logprob: -4.686337471008301
    6. ',' → logprob: -6.186337471008301
    7. 'index' → logprob: -6.311337471008301
    8. ' ,' → logprob: -7.311337471008301
    9. ':int' → logprob: -7.436337471008301
    10. ' index' → logprob: -8.3113374710083

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006296366918832064
    2. ' ,' → logprob: -7.375629425048828
    3. ')' → logprob: -13.375629425048828
    4. '):' → logprob: -14.375629425048828
    5. ',
' → logprob: -15.625629425048828
    6. ':' → logprob: -16.000629425048828
    7. '‌,' → logprob: -16.000629425048828
    8. ' )' → logprob: -16.625629425048828
    9. '.' → logprob: -16.750629425048828
    10. '   ' → logprob: -16.750629425048828

Token 54: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.023321647197008133
    2. 'to' → logprob: -3.7733216285705566
    3. ' ' → logprob: -9.648322105407715
    4. ' from' → logprob: -12.148322105407715
    5. ' ' → logprob: -13.148322105407715
    6. '	to' → logprob: -13.648322105407715
    7. ')' → logprob: -13.898322105407715
    8. ' target' → logprob: -14.398322105407715
    9. ' )' → logprob: -14.523322105407715
    10. 'from' → logprob: -15.773322105407715

Token 55: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.31390345096588135
    2. '_' → logprob: -1.3139034509658813
    3. ' _' → logprob: -8.43890380859375
    4. ')_' → logprob: -8.81390380859375
    5. '_sta' → logprob: -9.68890380859375
    6. '_:' → logprob: -10.06390380859375
    7. '_s' → logprob: -10.43890380859375
    8. '```' → logprob: -10.43890380859375
    9. ')' → logprob: -10.68890380859375
    10. '_st' → logprob: -10.93890380859375

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022404235787689686
    2. '):' → logprob: -6.2522406578063965
    3. ')' → logprob: -8.627240180969238
    4. ' :' → logprob: -9.002240180969238
    5. ' ):' → logprob: -12.127240180969238
    6. ',' → logprob: -14.252240180969238
    7. '_:' → logprob: -14.627240180969238
    8. ':)' → logprob: -14.752240180969238
    9. ' )' → logprob: -14.877240180969238
    10. '```' → logprob: -15.252240180969238

Token 57: ' Station' (ID: 20902)
  Prédit: ' Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Station' → logprob: -0.0019970352295786142
    2. 'Station' → logprob: -6.251996994018555
    3. ' ' → logprob: -10.001996994018555
    4. ')' → logprob: -11.501996994018555
    5. ' station' → logprob: -12.251996994018555
    6. ' ' → logprob: -12.501996994018555
    7. '_station' → logprob: -13.126996994018555
    8. ' )' → logprob: -14.001996994018555
    9. ' Sta' → logprob: -14.876996994018555
    10. ' Stations' → logprob: -15.251996994018555

Token 58: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020818283781409264
    2. ')' → logprob: -3.8958182334899902
    3. ' ):' → logprob: -8.895818710327148
    4. '):
' → logprob: -9.520818710327148
    5. '   ' → logprob: -10.270818710327148
    6. ')->' → logprob: -11.520818710327148
    7. ':' → logprob: -11.895818710327148
    8. '       ' → logprob: -11.895818710327148
    9. ' )' → logprob: -12.770818710327148
    10. ',' → logprob: -13.020818710327148

Token 59: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05134480074048042
    2. '):' → logprob: -3.051344871520996
    3. ' ->' → logprob: -7.051344871520996
    4. '():' → logprob: -7.051344871520996
    5. ' :' → logprob: -8.176344871520996
    6. '       ' → logprob: -8.301344871520996
    7. ',' → logprob: -8.926344871520996
    8. '->' → logprob: -9.051344871520996
    9. ')->' → logprob: -9.926344871520996
    10. '>:' → logprob: -10.051344871520996

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0619816891849041
    2. 'int' → logprob: -2.811981678009033
    3. ' ' → logprob: -12.186982154846191
    4. ' float' → logprob: -12.186982154846191
    5. '	int' → logprob: -13.936982154846191
    6. ' ' → logprob: -13.936982154846191
    7. '[int' → logprob: -14.936982154846191
    8. ' in' → logprob: -15.186982154846191
    9. 'float' → logprob: -15.186982154846191
    10. '   ' → logprob: -15.686982154846191

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003780362429097295
    2. '):' → logprob: -5.628780364990234
    3. '       ' → logprob: -9.378780364990234
    4. ':
' → logprob: -10.378780364990234
    5. '():' → logprob: -11.378780364990234
    6. ',' → logprob: -11.503780364990234
    7. '<|end|>' → logprob: -11.503780364990234
    8. ':return' → logprob: -12.128780364990234
    9. '):
' → logprob: -12.253780364990234
    10. ':**' → logprob: -12.503780364990234

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008389392867684364
    2. '        ' → logprob: -4.883389472961426
    3. '<|end|>' → logprob: -9.008389472961426
    4. ':' → logprob: -9.508389472961426
    5. '      ' → logprob: -9.508389472961426
    6. ',' → logprob: -9.508389472961426
    7. '    ' → logprob: -9.633389472961426
    8. ')' → logprob: -9.633389472961426
    9. ' ' → logprob: -9.758389472961426
    10. '        
' → logprob: -10.133389472961426

Token 63: ' diff' (ID: 8868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8276731967926025
    2. 'abs' → logprob: -0.9526731967926025
    3. ' abs' → logprob: -2.8276731967926025
    4. 'return' → logprob: -3.9526731967926025
    5. 'distance' → logprob: -4.077672958374023
    6. 'diff' (adapté à ' diff') → logprob: -4.202672958374023
    7. 'd' → logprob: -4.327672958374023
    8. ' return' → logprob: -4.452672958374023
    9. '```' → logprob: -4.827672958374023
    10. 'dist' → logprob: -5.077672958374023

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006425217725336552
    2. '=' → logprob: -5.131425380706787
    3. '_' → logprob: -7.631425380706787
    4. ' ' → logprob: -13.131424903869629
    5. 's' → logprob: -13.381424903869629
    6. '1' → logprob: -13.756424903869629
    7. '_space' → logprob: -13.756424903869629
    8. ')' → logprob: -14.006424903869629
    9. '_=' → logprob: -14.006424903869629
    10. ' _' → logprob: -14.131424903869629

Token 65: ' abs' (ID: 8443)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8117055296897888
    2. ' (' → logprob: -1.0617055892944336
    3. 'abs' → logprob: -2.5617055892944336
    4. ' abs' → logprob: -2.6867055892944336
    5. 'to' → logprob: -2.9367055892944336
    6. '(to' → logprob: -5.186705589294434
    7. ' from' → logprob: -5.811705589294434
    8. '(abs' → logprob: -5.936705589294434
    9. '       ' → logprob: -8.436705589294434
    10. 'from' → logprob: -8.561705589294434

Token 66: '(from' (ID: 32142)
  Prédit: '(from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -0.0009438612614758313
    2. '(' → logprob: -7.250943660736084
    3. '(to' → logprob: -8.750944137573242
    4. '(self' → logprob: -9.500944137573242
    5. '(for' → logprob: -14.875944137573242
    6. 'from' → logprob: -15.500944137573242
    7. '(f' → logprob: -16.625944137573242
    8. '(
' → logprob: -17.375944137573242
    9. '(fr' → logprob: -17.750944137573242
    10. '(with' → logprob: -17.875944137573242

Token 67: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.002041890751570463
    2. '._' → logprob: -6.627041816711426
    3. '.' → logprob: -8.002041816711426
    4. '_.' → logprob: -8.377041816711426
    5. '.station' → logprob: -9.377041816711426
    6. '_' → logprob: -10.127041816711426
    7. '_sta' → logprob: -11.877041816711426
    8. 'station' → logprob: -12.127041816711426
    9. ' .' → logprob: -12.377041816711426
    10. '_st' → logprob: -12.627041816711426

Token 68: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0017207576893270016
    2. '.' → logprob: -6.876720905303955
    3. ' .' → logprob: -7.376720905303955
    4. 'index' → logprob: -10.251720428466797
    5. ').' → logprob: -12.126720428466797
    6. '.indices' → logprob: -12.751720428466797
    7. '#index' → logprob: -12.876720428466797
    8. '.idx' → logprob: -12.876720428466797
    9. ' index' → logprob: -13.501720428466797
    10. '`.' → logprob: -13.751720428466797

Token 69: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005530542694032192
    2. '-' → logprob: -5.25553035736084
    3. ' ' → logprob: -8.13053035736084
    4. ' ' → logprob: -14.13053035736084
    5. ' –' → logprob: -14.38053035736084
    6. '<|end|>' → logprob: -15.00553035736084
    7. ' —' → logprob: -15.50553035736084
    8. '–' → logprob: -16.505531311035156
    9. '  ' → logprob: -16.880531311035156
    10. '.' → logprob: -16.880531311035156

Token 70: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007608278188854456
    2. 'to' → logprob: -4.882608413696289
    3. ' ' → logprob: -13.382608413696289
    4. '	to' → logprob: -15.007608413696289
    5. ' from' → logprob: -16.38260841369629
    6. ' ' → logprob: -16.75760841369629
    7. ')' → logprob: -17.13260841369629
    8. '    ' → logprob: -17.50760841369629
    9. '  ' → logprob: -17.63260841369629
    10. '(to' → logprob: -17.75760841369629

Token 71: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.00018768629524856806
    2. '_' → logprob: -8.625187873840332
    3. '_sta' → logprob: -13.000187873840332
    4. 'station' → logprob: -13.375187873840332
    5. '_s' → logprob: -13.625187873840332
    6. ' _' → logprob: -13.750187873840332
    7. '_st' → logprob: -14.750187873840332
    8. '_staff' → logprob: -15.125187873840332
    9. '```' → logprob: -15.375187873840332
    10. 'Station' → logprob: -15.750187873840332

Token 72: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.05598134547472
    2. '.' → logprob: -2.930981397628784
    3. ' .' → logprob: -7.305981159210205
    4. 'index' → logprob: -8.680981636047363
    5. ').' → logprob: -9.055981636047363
    6. '.idx' → logprob: -10.555981636047363
    7. '`.' → logprob: -10.930981636047363
    8. ' ' → logprob: -11.180981636047363
    9. '.ind' → logprob: -12.055981636047363
    10. '.indices' → logprob: -12.305981636047363

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.031157969729975e-05
    2. ')
' → logprob: -10.375090599060059
    3. '<|end|>' → logprob: -10.500090599060059
    4. '       ' → logprob: -10.750090599060059
    5. ' )' → logprob: -12.125090599060059
    6. ')return' → logprob: -12.625090599060059
    7. '<|end|>' → logprob: -14.875090599060059
    8. ')

' → logprob: -15.500090599060059
    9. '```' → logprob: -15.875090599060059
    10. '        ' → logprob: -16.125089645385742

Token 74: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46150684356689453
    2. '<|end|>' → logprob: -1.4615068435668945
    3. '       ' → logprob: -2.3365068435668945
    4. '        ' → logprob: -4.7115068435668945
    5. '\n' → logprob: -5.2115068435668945
    6. ' 
' → logprob: -5.4615068435668945
    7. 'return' → logprob: -5.5865068435668945
    8. '\' → logprob: -5.7115068435668945
    9. '        
' → logprob: -5.8365068435668945
    10. '' → logprob: -6.0865068435668945

Token 75: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021749665960669518
    2. ' return' → logprob: -4.271749496459961
    3. '       ' → logprob: -4.896749496459961
    4. 'min' → logprob: -10.021749496459961
    5. 'self' → logprob: -11.396749496459961
    6. 'diff' → logprob: -11.896749496459961
    7. '```' → logprob: -12.146749496459961
    8. ' min' → logprob: -12.396749496459961
    9. '
' → logprob: -13.021749496459961
    10. 'ret' → logprob: -13.146749496459961

Token 76: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.016964904963970184
    2. ' diff' → logprob: -4.266964912414551
    3. 'min' → logprob: -6.016964912414551
    4. ' self' → logprob: -8.64196491241455
    5. 'diff' → logprob: -8.64196491241455
    6. 'self' → logprob: -12.51696491241455
    7. ' max' → logprob: -13.51696491241455
    8. '	min' → logprob: -13.89196491241455
    9. ' ' → logprob: -14.51696491241455
    10. '	diff' → logprob: -15.26696491241455

Token 77: '100' (ID: 1353)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001023758901283145
    2. 'diff' → logprob: -7.001023769378662
    3. 'self' → logprob: -9.501023292541504
    4. ' min' → logprob: -10.376023292541504
    5. 'm' → logprob: -12.626023292541504
    6. 'max' → logprob: -13.126023292541504
    7. 'mi' → logprob: -14.501023292541504
    8. 'mini' → logprob: -16.12602424621582
    9. '	min' → logprob: -16.12602424621582
    10. '(min' → logprob: -16.75102424621582

Token 78: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5975960493087769
    2. ' +' → logprob: -1.8475960493087769
    3. ' *' → logprob: -1.9725960493087769
    4. '*' → logprob: -2.8475961685180664
    5. ' ' → logprob: -3.0975961685180664
    6. '<|end|>' → logprob: -3.8475961685180664
    7. '0' → logprob: -4.722596168518066
    8. '.' → logprob: -4.847596168518066
    9. '-' → logprob: -5.972596168518066
    10. '(' → logprob: -6.222596168518066

Token 79: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10069723427295685
    2. ' min' → logprob: -2.3506972789764404
    3. 'diff' → logprob: -7.850697040557861
    4. ' diff' → logprob: -9.35069751739502
    5. '(min' → logprob: -11.97569751739502
    6. '	min' → logprob: -12.10069751739502
    7. ' ' → logprob: -14.47569751739502
    8. '[min' → logprob: -14.72569751739502
    9. 'm' → logprob: -15.10069751739502
    10. 'mi' → logprob: -15.47569751739502

Token 80: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.0007114782347343862
    2. '(' → logprob: -7.250711441040039
    3. '(self' → logprob: -13.875711441040039
    4. '((' → logprob: -14.750711441040039
    5. '(st' → logprob: -16.87571144104004
    6. '(
' → logprob: -16.87571144104004
    7. 'diff' → logprob: -17.12571144104004
    8. '(d' → logprob: -17.62571144104004
    9. '(`' → logprob: -17.75071144104004
    10. '	diff' → logprob: -17.87571144104004

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11293081194162369
    2. ' ,' → logprob: -2.2379307746887207
    3. ',self' → logprob: -9.362931251525879
    4. ',
' → logprob: -11.737931251525879
    5. ')' → logprob: -12.862931251525879
    6. '       ' → logprob: -13.112931251525879
    7. '(' → logprob: -13.237931251525879
    8. ',d' → logprob: -13.487931251525879
    9. ',len' → logprob: -13.487931251525879
    10. 'self' → logprob: -13.987931251525879

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5760698914527893
    2. 'self' → logprob: -0.8260698914527893
    3. '       ' → logprob: -9.326069831848145
    4. '(self' → logprob: -10.826069831848145
    5. '           ' → logprob: -12.451069831848145
    6. '
' → logprob: -12.576069831848145
    7. '<|end|>' → logprob: -12.576069831848145
    8. '[self' → logprob: -12.951069831848145
    9. ' ' → logprob: -13.326069831848145
    10. '```' → logprob: -13.826069831848145

Token 83: '.station' (ID: 183964)
  Prédit: '.station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.station' → logprob: -0.0042943344451487064
    2. 'station' → logprob: -5.629294395446777
    3. '.' → logprob: -7.379294395446777
    4. '_station' → logprob: -10.129294395446777
    5. ' station' → logprob: -11.254294395446777
    6. ' .' → logprob: -12.129294395446777
    7. ' ' → logprob: -13.379294395446777
    8. '-' → logprob: -13.629294395446777
    9. '.st' → logprob: -13.754294395446777
    10. '```' → logprob: -14.004294395446777

Token 84: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00617941003292799
    2. '_' → logprob: -5.381179332733154
    3. '_c' → logprob: -7.381179332733154
    4. '_cnt' → logprob: -8.881179809570312
    5. ' _' → logprob: -9.131179809570312
    6. '   ' → logprob: -9.381179809570312
    7. '._' → logprob: -9.506179809570312
    8. '_cont' → logprob: -9.631179809570312
    9. '_ct' → logprob: -9.881179809570312
    10. '<|end|>' → logprob: -10.131179809570312

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004007403273135424
    2. '-' → logprob: -5.754007339477539
    3. ' ' → logprob: -7.129007339477539
    4. ')' → logprob: -11.379007339477539
    5. '-d' → logprob: -11.379007339477539
    6. '<|end|>' → logprob: -13.004007339477539
    7. 'diff' → logprob: -13.379007339477539
    8. ' )' → logprob: -15.004007339477539
    9. ' ' → logprob: -15.004007339477539
    10. '<|end|>' → logprob: -16.75400733947754

Token 86: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4741901159286499
    2. ' diff' → logprob: -0.9741901159286499
    3. '	diff' → logprob: -9.099189758300781
    4. '(diff' → logprob: -14.599189758300781
    5. ' ' → logprob: -14.724189758300781
    6. 'd' → logprob: -16.72418975830078
    7. ' dif' → logprob: -16.72418975830078
    8. '.diff' → logprob: -16.72418975830078
    9. '_diff' → logprob: -16.84918975830078
    10. '   ' → logprob: -16.97418975830078

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.875008583068848
    3. ' )' → logprob: -13.500008583068848
    4. '       ' → logprob: -15.750008583068848
    5. '))' → logprob: -16.750009536743164
    6. ')return' → logprob: -16.875009536743164
    7. ')#' → logprob: -17.500009536743164
    8. '<|end|>' → logprob: -17.500009536743164
    9. ')

' → logprob: -17.625009536743164
    10. ')`' → logprob: -18.000009536743164

Token 88: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4489510953426361
    2. '<|end|>' → logprob: -1.9489511251449585
    3. '#' → logprob: -2.198951005935669
    4. '
' → logprob: -2.823951005935669
    5. '[' → logprob: -4.448951244354248
    6. 'n' → logprob: -4.823951244354248
    7. '```' → logprob: -5.073951244354248
    8. 'd' → logprob: -5.448951244354248
    9. ' ' → logprob: -5.698951244354248
    10. '\n' → logprob: -6.073951244354248

Token 89: ' Shopping' (ID: 32461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9241623282432556
    2. ' ' → logprob: -1.6741623878479004
    3. ' Rail' → logprob: -1.7991623878479004
    4. ' Train' → logprob: -1.9241623878479004
    5. ' Space' → logprob: -3.7991623878479004
    6. ' Passenger' → logprob: -4.2991623878479
    7. ' Railway' → logprob: -4.5491623878479
    8. ' Station' → logprob: -4.6741623878479
    9. ' ‌' → logprob: -4.6741623878479
    10. ' R' → logprob: -5.7991623878479

Token 90: 'Tour' (ID: 48485)
  Prédit: 'Cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cart' → logprob: -0.23114117980003357
    2. 'Center' → logprob: -1.856141209602356
    3. 'Mall' → logprob: -3.1061410903930664
    4. 'C' → logprob: -6.606141090393066
    5. 'Centre' → logprob: -6.731141090393066
    6. 'Cent' → logprob: -7.106141090393066
    7. 'Area' → logprob: -7.356141090393066
    8. 'Station' → logprob: -7.856141090393066
    9. 'Basket' → logprob: -8.356141090393066
    10. 'M' → logprob: -8.981141090393066

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021903318702243268
    2. ':
' → logprob: -9.125219345092773
    3. ' :' → logprob: -9.500219345092773
    4. '(' → logprob: -10.625219345092773
    5. '<|end|>' → logprob: -12.500219345092773
    6. '):' → logprob: -13.375219345092773
    7. ':def' → logprob: -13.750219345092773
    8. '():' → logprob: -14.250219345092773
    9. '(object' → logprob: -14.375219345092773
    10. ':**' → logprob: -14.625219345092773

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018650038167834282
    2. ' ' → logprob: -5.018650054931641
    3. '<|end|>' → logprob: -5.518650054931641
    4. ' def' → logprob: -6.268650054931641
    5. '    ' → logprob: -6.393650054931641
    6. '(' → logprob: -6.518650054931641
    7. '  ' → logprob: -7.143650054931641
    8. 'def' → logprob: -7.643650054931641
    9. '    
' → logprob: -7.768650054931641
    10. ' (' → logprob: -8.26865005493164

Token 93: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0060670869424939156
    2. 'def' (adapté à ' def') → logprob: -5.506067276000977
    3. '   ' → logprob: -6.256067276000977
    4. '    ' → logprob: -10.256067276000977
    5. ' ' → logprob: -10.881067276000977
    6. '	def' → logprob: -12.006067276000977
    7. ' ' → logprob: -13.381067276000977
    8. '```' → logprob: -13.631067276000977
    9. ' ```' → logprob: -14.131067276000977
    10. '(' → logprob: -14.506067276000977

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018104875460267067
    2. ' ' → logprob: -4.3931050300598145
    3. '_' → logprob: -5.3931050300598145
    4. '__' → logprob: -7.5181050300598145
    5. ' _' → logprob: -8.018104553222656
    6. ' ' → logprob: -9.268104553222656
    7. '  ' → logprob: -10.768104553222656
    8. ' ___' → logprob: -11.143104553222656
    9. '_init' → logprob: -11.393104553222656
    10. ' ‌' → logprob: -12.268104553222656

Token 95: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.23486849665641785
    2. '__' → logprob: -1.7348685264587402
    3. '_init' → logprob: -3.4848685264587402
    4. 'def' → logprob: -6.23486852645874
    5. '_' → logprob: -9.359868049621582
    6. '```' → logprob: -9.359868049621582
    7. 'it' → logprob: -10.609868049621582
    8. '__
' → logprob: -10.609868049621582
    9. '__

' → logprob: -11.234868049621582
    10. ' __' → logprob: -11.609868049621582

Token 96: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008414220064878464
    2. '__' → logprob: -5.258414268493652
    3. '(self' → logprob: -6.258414268493652
    4. '__(
' → logprob: -7.008414268493652
    5. ' (' → logprob: -8.883414268493652
    6. '_(' → logprob: -8.883414268493652
    7. '(' → logprob: -10.133414268493652
    8. '_' → logprob: -11.133414268493652
    9. '__((' → logprob: -11.508414268493652
    10. 'self' → logprob: -12.258414268493652

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2520938217639923
    2. ' self' → logprob: -1.50209379196167
    3. '0' → logprob: -9.877094268798828
    4. ',' → logprob: -10.752094268798828
    5. ' ' → logprob: -10.752094268798828
    6. ')' → logprob: -11.002094268798828
    7. '1' → logprob: -11.877094268798828
    8. '100' → logprob: -12.002094268798828
    9. '20' → logprob: -12.564594268798828
    10. '[]' → logprob: -12.689594268798828

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037013579276390374
    2. ' ,' → logprob: -8.000370025634766
    3. ')' → logprob: -11.375370025634766
    4. '<|end|>' → logprob: -11.375370025634766
    5. 'self' → logprob: -12.250370025634766
    6. '‌,' → logprob: -13.000370025634766
    7. ' ' → logprob: -13.500370025634766
    8. ',
' → logprob: -14.500370025634766
    9. '‍,' → logprob: -14.625370025634766
    10. ',self' → logprob: -14.875370025634766

Token 99: ' rail' (ID: 21665)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.6109024286270142
    2. ' station' → logprob: -1.4859024286270142
    3. ' ring' → logprob: -2.3609023094177246
    4. ' rail' → logprob: -2.7359023094177246
    5. ' self' → logprob: -3.8609023094177246
    6. ' rings' → logprob: -4.360902309417725
    7. ' shopping' → logprob: -5.360902309417725
    8. 'station' → logprob: -5.610902309417725
    9. ' start' → logprob: -5.735902309417725
    10. 'self' → logprob: -5.860902309417725

Token 100: '_ring' (ID: 92310)
  Prédit: 'Ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ring' → logprob: -0.055312804877758026
    2. '_ring' → logprob: -2.9303128719329834
    3. '   ' → logprob: -8.680313110351562
    4. 'ring' → logprob: -8.930313110351562
    5. ' Ring' → logprob: -9.430313110351562
    6. ' ' → logprob: -11.305313110351562
    7. ' ring' → logprob: -11.430313110351562
    8. '_' → logprob: -12.055313110351562
    9. '  ' → logprob: -12.180313110351562
    10. ')' → logprob: -12.805313110351562

Token 101: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007654900196939707
    2. ':' → logprob: -4.882654666900635
    3. ' ,' → logprob: -10.257655143737793
    4. '   ' → logprob: -11.882655143737793
    5. '):' → logprob: -12.507655143737793
    6. ')' → logprob: -13.507655143737793
    7. ':,' → logprob: -15.132655143737793
    8. ':int' → logprob: -15.257655143737793
    9. ' :' → logprob: -15.382655143737793
    10. ',
' → logprob: -15.507655143737793

Token 102: ' Rail' (ID: 32384)
  Prédit: ' Rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rail' → logprob: -0.1273571401834488
    2. ' rail' → logprob: -2.127357244491577
    3. 'Rail' → logprob: -8.127357482910156
    4. ' ' → logprob: -9.127357482910156
    5. ' Rails' → logprob: -11.127357482910156
    6. 'rail' → logprob: -12.627357482910156
    7. ' rails' → logprob: -12.877357482910156
    8. ' Railway' → logprob: -13.252357482910156
    9. ' )' → logprob: -13.502357482910156
    10. ' ' → logprob: -14.502357482910156

Token 103: 'Ring' (ID: 52498)
  Prédit: 'Ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ring' → logprob: -0.2852597236633301
    2. '_ring' → logprob: -1.41025972366333
    3. '_' → logprob: -5.53525972366333
    4. '   ' → logprob: -9.910259246826172
    5. ' Ring' → logprob: -10.410259246826172
    6. ' _' → logprob: -10.535259246826172
    7. '  ' → logprob: -11.535259246826172
    8. '_RING' → logprob: -11.660259246826172
    9. ' ' → logprob: -11.910259246826172
    10. '_R' → logprob: -12.410259246826172

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007697483524680138
    2. '):' → logprob: -4.882697582244873
    3. ')' → logprob: -9.632697105407715
    4. ' ,' → logprob: -11.382697105407715
    5. '   ' → logprob: -12.132697105407715
    6. '):
' → logprob: -12.757697105407715
    7. ',
' → logprob: -13.257697105407715
    8. '       ' → logprob: -13.382697105407715
    9. ' ):' → logprob: -13.632697105407715
    10. '),' → logprob: -14.757697105407715

Token 105: ' start' (ID: 1604)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.058035437017679214
    2. ' station' → logprob: -4.183035373687744
    3. ' shopping' → logprob: -4.558035373687744
    4. ' start' → logprob: -4.683035373687744
    5. ' shops' → logprob: -5.058035373687744
    6. 'stations' → logprob: -5.558035373687744
    7. ' stops' → logprob: -6.058035373687744
    8. ' visits' → logprob: -6.433035373687744
    9. ' ' → logprob: -7.183035373687744
    10. ' starting' → logprob: -7.558035373687744

Token 106: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.29238077998161316
    2. ':' → logprob: -1.9173808097839355
    3. '_' → logprob: -2.5423808097839355
    4. 'ing' → logprob: -4.2923808097839355
    5. '_:' → logprob: -5.1673808097839355
    6. '_index' → logprob: -5.4173808097839355
    7. 'ed' → logprob: -6.0423808097839355
    8. '_location' → logprob: -7.7923808097839355
    9. '_point' → logprob: -8.042380332946777
    10. '_st' → logprob: -8.542380332946777

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032950565218925476
    2. '):' → logprob: -8.875329971313477
    3. ')' → logprob: -9.125329971313477
    4. ' :' → logprob: -10.000329971313477
    5. ',' → logprob: -11.000329971313477
    6. '_index' → logprob: -11.500329971313477
    7. ' ):' → logprob: -13.250329971313477
    8. '_:' → logprob: -13.875329971313477
    9. '<|end|>' → logprob: -13.875329971313477
    10. ' )' → logprob: -14.000329971313477

Token 108: ' Station' (ID: 20902)
  Prédit: ' Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Station' → logprob: -0.018198875710368156
    2. 'Station' → logprob: -4.2681989669799805
    3. ' int' → logprob: -5.6431989669799805
    4. ' ' → logprob: -8.64319896697998
    5. 'int' → logprob: -8.89319896697998
    6. ')' → logprob: -9.01819896697998
    7. '0' → logprob: -11.26819896697998
    8. ' Shopping' → logprob: -11.76819896697998
    9. ' station' → logprob: -12.26819896697998
    10. ' ' → logprob: -12.89319896697998

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06998089700937271
    2. '):' → logprob: -2.6949808597564697
    3. ')' → logprob: -11.31998062133789
    4. '):
' → logprob: -11.44498062133789
    5. ' ,' → logprob: -11.56998062133789
    6. ',
' → logprob: -12.94498062133789
    7. '   ' → logprob: -12.94498062133789
    8. ':' → logprob: -13.06998062133789
    9. '       ' → logprob: -13.06998062133789
    10. ' ):' → logprob: -13.19498062133789

Token 110: ' shopping' (ID: 11606)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.994927167892456
    2. ' shopping' → logprob: -1.494927167892456
    3. ' shops' → logprob: -2.494927167892456
    4. ' station' → logprob: -3.369927167892456
    5. ' stops' → logprob: -3.369927167892456
    6. ' destination' → logprob: -3.619927167892456
    7. ' ' → logprob: -3.744927167892456
    8. '   ' → logprob: -3.744927167892456
    9. ' stores' → logprob: -3.744927167892456
    10. ' destinations' → logprob: -3.869927167892456

Token 111: '_st' (ID: 2518)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1392337530851364
    2. '_st' → logprob: -2.5142338275909424
    3. '_items' → logprob: -3.5142338275909424
    4. '_places' → logprob: -4.889233589172363
    5. '_cent' → logprob: -6.264233589172363
    6. '_locations' → logprob: -6.514233589172363
    7. '_points' → logprob: -6.639233589172363
    8. '_days' → logprob: -6.639233589172363
    9. 's' → logprob: -6.889233589172363
    10. '_lists' → logprob: -6.889233589172363

Token 112: 'ations' (ID: 929)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.591172456741333
    2. 'ations' → logprob: -1.466172456741333
    3. 'op' → logprob: -1.591172456741333
    4. 'ation' → logprob: -4.966172218322754
    5. 'at' → logprob: -6.966172218322754
    6. 'art' → logprob: -7.341172218322754
    7. 'ore' → logprob: -7.591172218322754
    8. 'ores' → logprob: -7.591172218322754
    9. 'eps' → logprob: -7.841172218322754
    10. 'ats' → logprob: -8.216172218322754

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002288352930918336
    2. ' :' → logprob: -6.377288341522217
    3. 's' → logprob: -8.127288818359375
    4. ':list' → logprob: -8.752288818359375
    5. ')' → logprob: -9.752288818359375
    6. '):' → logprob: -10.627288818359375
    7. ',' → logprob: -10.752288818359375
    8. '=' → logprob: -11.877288818359375
    9. '_list' → logprob: -11.877288818359375
    10. ':)' → logprob: -13.252288818359375

Token 114: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6704930663108826
    2. 'list' → logprob: -0.9204930663108826
    3. 'List' → logprob: -2.5454931259155273
    4. ' List' → logprob: -5.420493125915527
    5. ')' → logprob: -5.920493125915527
    6. '[' → logprob: -6.545493125915527
    7. ' ' → logprob: -7.545493125915527
    8. ' [' → logprob: -7.670493125915527
    9. '[list' → logprob: -7.795493125915527
    10. 'set' → logprob: -8.045493125915527

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5833885073661804
    2. '):' → logprob: -0.9583885073661804
    3. '):
' → logprob: -3.458388566970825
    4. '[int' → logprob: -3.708388566970825
    5. ':' → logprob: -6.708388328552246
    6. ' ):' → logprob: -7.958388328552246
    7. ')' → logprob: -8.583388328552246
    8. '   ' → logprob: -8.708388328552246
    9. ',' → logprob: -9.208388328552246
    10. '[str' → logprob: -9.333388328552246

Token 116: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.00403280695900321
    2. 'int' → logprob: -5.754032611846924
    3. ' Station' → logprob: -7.129032611846924
    4. '   ' → logprob: -10.129033088684082
    5. ' int' → logprob: -12.129033088684082
    6. '[int' → logprob: -12.754033088684082
    7. ' ' → logprob: -14.004033088684082
    8. '  ' → logprob: -14.129033088684082
    9. 'station' → logprob: -14.379033088684082
    10. '	' → logprob: -14.879033088684082

Token 117: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.078559011220932
    2. ']' → logprob: -2.828558921813965
    3. ']):
' → logprob: -5.078558921813965
    4. '],' → logprob: -5.328558921813965
    5. ',' → logprob: -6.203558921813965
    6. '])' → logprob: -6.453558921813965
    7. '):' → logprob: -6.953558921813965
    8. ')' → logprob: -8.078558921813965
    9. ']:' → logprob: -8.328558921813965
    10. ' ]' → logprob: -8.578558921813965

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05591753125190735
    2. '
' → logprob: -3.430917501449585
    3. '        
' → logprob: -5.055917739868164
    4. '<|end|>' → logprob: -5.305917739868164
    5. '   ' → logprob: -5.680917739868164
    6. ' 
' → logprob: -6.180917739868164
    7. ':' → logprob: -6.305917739868164
    8. '    
' → logprob: -6.805917739868164
    9. '    ' → logprob: -7.305917739868164
    10. ' ' → logprob: -8.430917739868164

Token 119: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4561959505081177
    2. 'self' (adapté à ' self') → logprob: -1.2061959505081177
    3. '       ' → logprob: -2.706195831298828
    4. '   ' → logprob: -9.831195831298828
    5. ' ' → logprob: -10.206195831298828
    6. '	self' → logprob: -10.581195831298828
    7. '        ' → logprob: -10.706195831298828
    8. ' ' → logprob: -11.331195831298828
    9. '      ' → logprob: -11.456195831298828
    10. '    ' → logprob: -12.206195831298828

Token 120: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002516839886084199
    2. ' .' → logprob: -8.500251770019531
    3. ' ' → logprob: -10.875251770019531
    4. '.s' → logprob: -11.500251770019531
    5. '.start' → logprob: -12.000251770019531
    6. '.station' → logprob: -13.125251770019531
    7. '.r' → logprob: -13.750251770019531
    8. '.st' → logprob: -14.250251770019531
    9. '.ship' → logprob: -14.375251770019531
    10. '.travel' → logprob: -14.875251770019531

Token 121: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -3.857719275401905e-05
    2. 'rails' → logprob: -11.000038146972656
    3. 'shopping' → logprob: -11.625038146972656
    4. 'start' → logprob: -12.125038146972656
    5. ' rail' → logprob: -12.625038146972656
    6. 'ra' → logprob: -13.625038146972656
    7. '_' → logprob: -14.250038146972656
    8. 'r' → logprob: -14.625038146972656
    9. 'ring' → logprob: -15.250038146972656
    10. '```' → logprob: -15.625038146972656

Token 122: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.00022082125360611826
    2. '_' → logprob: -8.500221252441406
    3. '_r' → logprob: -11.625221252441406
    4. ' _' → logprob: -12.000221252441406
    5. 'Ring' → logprob: -13.375221252441406
    6. '_RING' → logprob: -15.125221252441406
    7. 'ring' → logprob: -16.375221252441406
    8. '   ' → logprob: -17.500221252441406
    9. '_
' → logprob: -17.500221252441406
    10. '_chain' → logprob: -17.500221252441406

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03627226501703262
    2. '=' → logprob: -3.4112722873687744
    3. '.' → logprob: -6.036272048950195
    4. ' ' → logprob: -9.036272048950195
    5. '<|end|>' → logprob: -10.161272048950195
    6. ')' → logprob: -10.286272048950195
    7. '.=' → logprob: -11.661272048950195
    8. '   ' → logprob: -11.786272048950195
    9. ',' → logprob: -12.036272048950195
    10. '  ' → logprob: -12.536272048950195

Token 124: ' rail' (ID: 21665)
  Prédit: ' rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rail' → logprob: -0.0004428243264555931
    2. 'rail' → logprob: -7.750442981719971
    3. ' ' → logprob: -12.000442504882812
    4. ' rails' → logprob: -12.125442504882812
    5. ' railway' → logprob: -15.750442504882812
    6. ' ra' → logprob: -16.375442504882812
    7. ' ' → logprob: -16.625442504882812
    8. ' railroad' → logprob: -17.250442504882812
    9. ' railing' → logprob: -17.625442504882812
    10. ' ' → logprob: -17.875442504882812

Token 125: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.0009219424682669342
    2. '_' → logprob: -7.000921726226807
    3. '_r' → logprob: -12.500922203063965
    4. 'ring' → logprob: -12.750922203063965
    5. ' _' → logprob: -12.875922203063965
    6. 'Ring' → logprob: -15.125922203063965
    7. '_
' → logprob: -15.250922203063965
    8. '_RING' → logprob: -15.750922203063965
    9. '_chain' → logprob: -16.62592124938965
    10. '```' → logprob: -16.87592124938965

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18518388271331787
    2. '
' → logprob: -1.8101838827133179
    3. '<|end|>' → logprob: -6.060184001922607
    4. 'self' → logprob: -6.560184001922607
    5. '        
' → logprob: -7.060184001922607
    6. ' self' → logprob: -8.06018352508545
    7. ' 
' → logprob: -9.06018352508545
    8. ',' → logprob: -9.18518352508545
    9. '  
' → logprob: -9.81018352508545
    10. '   ' → logprob: -9.93518352508545

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6843960285186768
    2. ' self' → logprob: -1.8093960285186768
    3. 'self' → logprob: -1.9343960285186768
    4. ' 
' → logprob: -2.3093960285186768
    5. '
' → logprob: -3.4343960285186768
    6. ' ' → logprob: -4.059395790100098
    7. '        ' → logprob: -4.309395790100098
    8. '        
' → logprob: -4.684395790100098
    9. '  
' → logprob: -5.559395790100098
    10. ',' → logprob: -5.684395790100098

Token 128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0043278103694319725
    2. ' self' → logprob: -5.504327774047852
    3. '       ' → logprob: -8.504327774047852
    4. 'start' → logprob: -10.129327774047852
    5. '   ' → logprob: -12.754327774047852
    6. '
' → logprob: -13.504327774047852
    7. '	self' → logprob: -13.879327774047852
    8. ' ' → logprob: -15.129327774047852
    9. 's' → logprob: -15.504327774047852
    10. ' start' → logprob: -15.754327774047852

Token 129: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07931879162788391
    2. '.start' → logprob: -2.5793187618255615
    3. '.station' → logprob: -8.82931900024414
    4. '.st' → logprob: -9.70431900024414
    5. '.shopping' → logprob: -10.20431900024414
    6. '.s' → logprob: -10.32931900024414
    7. '.shop' → logprob: -10.57931900024414
    8. '.stop' → logprob: -10.70431900024414
    9. '.store' → logprob: -10.95431900024414
    10. ' .' → logprob: -11.07931900024414

Token 130: '_station' (ID: 110769)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5764153599739075
    2. '_station' → logprob: -0.8264153599739075
    3. ' _' → logprob: -8.201415061950684
    4. '_sta' → logprob: -9.326415061950684
    5. '_s' → logprob: -9.951415061950684
    6. '_st' → logprob: -11.201415061950684
    7. 'ing' → logprob: -12.076415061950684
    8. '_point' → logprob: -12.326415061950684
    9. 'ed' → logprob: -12.576415061950684
    10. '_user' → logprob: -12.826415061950684

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42893698811531067
    2. '=' → logprob: -1.0539369583129883
    3. ',' → logprob: -9.178936958312988
    4. ' ' → logprob: -9.678936958312988
    5. ')' → logprob: -10.553936958312988
    6. '_' → logprob: -10.928936958312988
    7. '.' → logprob: -11.553936958312988
    8. '<|end|>' → logprob: -11.803936958312988
    9. '_index' → logprob: -12.928936958312988
    10. '   ' → logprob: -13.678936958312988

Token 132: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.03804241120815277
    2. 'start' → logprob: -3.2880423069000244
    3. '	start' → logprob: -14.913042068481445
    4. '(start' → logprob: -15.413042068481445
    5. ' ' → logprob: -15.788042068481445
    6. '=start' → logprob: -16.163042068481445
    7. ' ' → logprob: -16.663042068481445
    8. '[start' → logprob: -17.163042068481445
    9. '_start' → logprob: -18.038042068481445
    10. 'station' → logprob: -18.288042068481445

Token 133: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.0002584785979706794
    2. '_' → logprob: -8.375258445739746
    3. ' _' → logprob: -10.500258445739746
    4. '_st' → logprob: -16.250259399414062
    5. '_sta' → logprob: -16.500259399414062
    6. 'station' → logprob: -16.875259399414062
    7. 'Station' → logprob: -17.375259399414062
    8. '._' → logprob: -17.500259399414062
    9. '_s' → logprob: -17.875259399414062
    10. '_
' → logprob: -18.125259399414062

Token 134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11856725811958313
    2. 'self' → logprob: -2.3685672283172607
    3. ' self' → logprob: -4.24356746673584
    4. '   ' → logprob: -5.86856746673584
    5. '	self' → logprob: -7.36856746673584
    6. '
' → logprob: -8.36856746673584
    7. '	' → logprob: -10.61856746673584
    8. '    
' → logprob: -10.86856746673584
    9. '      ' → logprob: -11.11856746673584
    10. '        
' → logprob: -11.11856746673584

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02918981947004795
    2. 'self' → logprob: -3.6541898250579834
    3. ' self' → logprob: -6.029189586639404
    4. '   ' → logprob: -7.904189586639404
    5. '	self' → logprob: -10.029190063476562
    6. '        
' → logprob: -11.279190063476562
    7. '
' → logprob: -11.529190063476562
    8. '      ' → logprob: -11.904190063476562
    9. '    
' → logprob: -12.154190063476562
    10. '```' → logprob: -12.154190063476562

Token 136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025798205751925707
    2. '       ' → logprob: -6.127579689025879
    3. ' self' → logprob: -7.877579689025879
    4. '	self' → logprob: -12.002579689025879
    5. '   ' → logprob: -12.377579689025879
    6. 's' → logprob: -13.377579689025879
    7. '
' → logprob: -14.002579689025879
    8. 'def' → logprob: -14.502579689025879
    9. '        
' → logprob: -14.627579689025879
    10. '#' → logprob: -15.627579689025879

Token 137: '.shopping' (ID: 145749)
  Prédit: '.shopping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.shopping' → logprob: -0.06271194666624069
    2. '.' → logprob: -2.8127119541168213
    3. '.shop' → logprob: -8.062711715698242
    4. '.sh' → logprob: -9.312711715698242
    5. '.station' → logprob: -9.312711715698242
    6. '.travel' → logprob: -10.312711715698242
    7. '.st' → logprob: -10.937711715698242
    8. '.visit' → logprob: -10.937711715698242
    9. '.s' → logprob: -11.062711715698242
    10. ' .' → logprob: -11.062711715698242

Token 138: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -6.945094355614856e-05
    2. '_' → logprob: -9.625069618225098
    3. 'stations' → logprob: -14.000069618225098
    4. '_station' → logprob: -14.375069618225098
    5. '_sta' → logprob: -14.875069618225098
    6. '_s' → logprob: -15.125069618225098
    7. 'Stations' → logprob: -15.125069618225098
    8. '_locations' → logprob: -15.375069618225098
    9. ' _' → logprob: -15.625069618225098
    10. '_sites' → logprob: -16.25006866455078

Token 139: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00012856863031629473
    2. 'a' → logprob: -9.750128746032715
    3. 'at' → logprob: -10.375128746032715
    4. 'ation' → logprob: -11.125128746032715
    5. 'atio' → logprob: -11.875128746032715
    6. 't' → logprob: -12.375128746032715
    7. 'ati' → logprob: -12.500128746032715
    8. 'stations' → logprob: -12.750128746032715
    9. 'ATIONS' → logprob: -13.750128746032715
    10. '_' → logprob: -13.875128746032715

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797647476196289
    2. ' =' → logprob: -1.804764747619629
    3. '=[]' → logprob: -11.429764747619629
    4. '.' → logprob: -13.179764747619629
    5. ')' → logprob: -13.429764747619629
    6. '.append' → logprob: -13.429764747619629
    7. '[' → logprob: -13.929764747619629
    8. '[:]' → logprob: -14.054764747619629
    9. '_' → logprob: -14.179764747619629
    10. '.extend' → logprob: -14.929764747619629

Token 141: ' shopping' (ID: 11606)
  Prédit: ' shopping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shopping' → logprob: -0.0619683600962162
    2. 'shopping' → logprob: -2.8119683265686035
    3. 'sh' → logprob: -15.311968803405762
    4. '.shopping' → logprob: -15.936968803405762
    5. 'list' → logprob: -16.186967849731445
    6. ' ' → logprob: -16.311967849731445
    7. '[]' → logprob: -16.686967849731445
    8. ' list' → logprob: -16.936967849731445
    9. 'Shopping' → logprob: -17.186967849731445
    10. 'shop' → logprob: -17.311967849731445

Token 142: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -5.9153885558771435e-06
    2. 'stations' → logprob: -12.875005722045898
    3. '_' → logprob: -13.125005722045898
    4. '_station' → logprob: -14.625005722045898
    5. 'Stations' → logprob: -14.625005722045898
    6. 'st' → logprob: -16.2500057220459
    7. ' _' → logprob: -16.7500057220459
    8. '_t' → logprob: -16.7500057220459
    9. '_sta' → logprob: -16.8750057220459
    10. '_list' → logprob: -17.6250057220459

Token 143: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0001468067930545658
    2. 'ation' → logprob: -9.500146865844727
    3. 'a' → logprob: -10.125146865844727
    4. 'at' → logprob: -11.250146865844727
    5. '_' → logprob: -12.000146865844727
    6. 't' → logprob: -13.000146865844727
    7. ' at' → logprob: -13.375146865844727
    8. 'atio' → logprob: -13.375146865844727
    9. 's' → logprob: -13.875146865844727
    10. 'ati' → logprob: -13.875146865844727

Token 144: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00043162284418940544
    2. '   ' → logprob: -8.375432014465332
    3. '

' → logprob: -9.625432014465332
    4. 'def' → logprob: -10.125432014465332
    5. '    
' → logprob: -10.375432014465332
    6. '<|end|>' → logprob: -10.375432014465332
    7. ' def' → logprob: -11.000432014465332
    8. '
' → logprob: -12.750432014465332
    9. ' 
' → logprob: -12.750432014465332
    10. '  
' → logprob: -12.875432014465332

Token 145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.762737512588501
    2. '   ' → logprob: -0.762737512588501
    3. 'def' → logprob: -3.137737512588501
    4. ' def' → logprob: -4.137737274169922
    5. '    
' → logprob: -5.012737274169922
    6. ' 
' → logprob: -7.887737274169922
    7. '   
' → logprob: -8.137737274169922
    8. '  
' → logprob: -8.762737274169922
    9. '```' → logprob: -9.387737274169922
    10. '

' → logprob: -9.512737274169922

Token 146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.925185440806672e-05
    2. ' def' → logprob: -9.500099182128906
    3. '   ' → logprob: -10.750099182128906
    4. 'from' → logprob: -12.875099182128906
    5. '@property' → logprob: -16.375099182128906
    6. '	def' → logprob: -16.625099182128906
    7. '
' → logprob: -17.000099182128906
    8. 'class' → logprob: -17.000099182128906
    9. ' ' → logprob: -17.250099182128906
    10. '```' → logprob: -17.500099182128906

Token 147: ' compute' (ID: 23864)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.19800016283988953
    2. 'total' → logprob: -1.823000192642212
    3. ' calculate' → logprob: -4.447999954223633
    4. 'calculate' → logprob: -6.072999954223633
    5. ' plan' → logprob: -6.447999954223633
    6. ' get' → logprob: -7.447999954223633
    7. '_total' → logprob: -8.197999954223633
    8. ' distance' → logprob: -8.322999954223633
    9. ' def' → logprob: -8.572999954223633
    10. ' compute' → logprob: -8.697999954223633

Token 148: '_min' (ID: 15950)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.6397238969802856
    2. '_' → logprob: -1.0147238969802856
    3. '_distance' → logprob: -3.014723777770996
    4. '_cost' → logprob: -4.139723777770996
    5. '_sh' → logprob: -4.264723777770996
    6. '_path' → logprob: -4.764723777770996
    7. '_max' → logprob: -5.264723777770996
    8. '_trip' → logprob: -5.889723777770996
    9. '_route' → logprob: -6.014723777770996
    10. '_min' → logprob: -6.264723777770996

Token 149: '_cost' (ID: 36820)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.10712046176195145
    2. '_' → logprob: -3.3571205139160156
    3. 'imum' → logprob: -3.6071205139160156
    4. '_cost' → logprob: -4.357120513916016
    5. '_tr' → logprob: -4.982120513916016
    6. '_trip' → logprob: -5.357120513916016
    7. 'imal' → logprob: -5.482120513916016
    8. '_path' → logprob: -5.732120513916016
    9. '_dist' → logprob: -5.732120513916016
    10. '_sh' → logprob: -6.607120513916016

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008765364065766335
    2. '(' → logprob: -4.75876522064209
    3. 'self' → logprob: -9.00876522064209
    4. ' (' → logprob: -12.13376522064209
    5. '_' → logprob: -12.13376522064209
    6. '_self' → logprob: -12.25876522064209
    7. 's' → logprob: -12.75876522064209
    8. ' self' → logprob: -13.13376522064209
    9. '(s' → logprob: -13.38376522064209
    10. '_(' → logprob: -13.75876522064209

Token 151: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5847259163856506
    2. ',' → logprob: -0.8347259163856506
    3. 'self' → logprob: -5.209725856781006
    4. ' ,' → logprob: -7.334725856781006
    5. ')' → logprob: -7.584725856781006
    6. '):
' → logprob: -7.709725856781006
    7. '       ' → logprob: -7.834725856781006
    8. ' ):' → logprob: -7.959725856781006
    9. '   ' → logprob: -8.334726333618164
    10. ':' → logprob: -8.584726333618164

Token 152: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25308430194854736
    2. '(' → logprob: -1.5030843019485474
    3. ':' → logprob: -7.378084182739258
    4. '(s' → logprob: -8.378084182739258
    5. '(
' → logprob: -8.628084182739258
    6. ' (' → logprob: -9.878084182739258
    7. 'self' → logprob: -10.628084182739258
    8. '       ' → logprob: -11.253084182739258
    9. '(Self' → logprob: -12.128084182739258
    10. '   ' → logprob: -12.503084182739258

Token 153: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.42937764525413513
    2. 'int' → logprob: -1.0543776750564575
    3. ' None' → logprob: -7.429377555847168
    4. 'None' → logprob: -9.804377555847168
    5. '(int' → logprob: -11.304377555847168
    6. '[int' → logprob: -12.554377555847168
    7. ' tuple' → logprob: -12.929377555847168
    8. ' float' → logprob: -13.179377555847168
    9. 'float' → logprob: -13.929377555847168
    10. ' ' → logprob: -14.054377555847168

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012388024479150772
    2. ':
' → logprob: -7.001238822937012
    3. '(' → logprob: -8.876238822937012
    4. '(self' → logprob: -9.001238822937012
    5. '):' → logprob: -10.626238822937012
    6. '       ' → logprob: -11.126238822937012
    7. '():' → logprob: -11.876238822937012
    8. ':self' → logprob: -12.751238822937012
    9. ':def' → logprob: -12.751238822937012
    10. '(
' → logprob: -12.876238822937012

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026192307472229004
    2. '        ' → logprob: -4.2761921882629395
    3. ' from' → logprob: -4.7761921882629395
    4. 'from' → logprob: -6.4011921882629395
    5. '```' → logprob: -8.151192665100098
    6. ' n' → logprob: -8.401192665100098
    7. ' #' → logprob: -8.401192665100098
    8. ' pass' → logprob: -8.901192665100098
    9. ' visited' → logprob: -9.026192665100098
    10. '        
' → logprob: -9.151192665100098

Token 156: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8798050284385681
    2. 'from' → logprob: -1.004805088043213
    3. 'n' → logprob: -2.504805088043213
    4. '       ' → logprob: -3.504805088043213
    5. 'import' → logprob: -3.504805088043213
    6. 'pass' → logprob: -4.004805088043213
    7. 'dp' → logprob: -4.379805088043213
    8. ' from' → logprob: -4.754805088043213
    9. 'stations' → logprob: -4.879805088043213
    10. ' n' → logprob: -5.004805088043213

Token 157: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.038999397307634354
    2. '_' → logprob: -3.288999319076538
    3. '_sh' → logprob: -8.538999557495117
    4. '_s' → logprob: -8.663999557495117
    5. '_indices' → logprob: -9.038999557495117
    6. '_station' → logprob: -9.163999557495117
    7. '_points' → logprob: -9.413999557495117
    8. '_nodes' → logprob: -9.788999557495117
    9. '_indexes' → logprob: -10.538999557495117
    10. 'stations' → logprob: -10.663999557495117

Token 158: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00019614976190496236
    2. 'at' → logprob: -9.25019645690918
    3. '```' → logprob: -11.12519645690918
    4. 'ops' → logprob: -11.50019645690918
    5. '   ' → logprob: -11.62519645690918
    6. 'a' → logprob: -11.62519645690918
    7. 'ation' → logprob: -12.00019645690918
    8. 'atio' → logprob: -12.12519645690918
    9. 'atic' → logprob: -12.37519645690918
    10. 'ati' → logprob: -12.50019645690918

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0012785687576979399
    2. '=' → logprob: -6.751278400421143
    3. '<|end|>' → logprob: -9.2512788772583
    4. ' ' → logprob: -12.3762788772583
    5. '<|end|>' → logprob: -13.1262788772583
    6. 's' → logprob: -13.7512788772583
    7. ' =[' → logprob: -13.7512788772583
    8. ' =
' → logprob: -14.6262788772583
    9. '_indices' → logprob: -14.7512788772583
    10. ':' → logprob: -15.0012788772583

Token 160: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0033743614330887794
    2. '[self' → logprob: -5.7533745765686035
    3. '[' → logprob: -8.628374099731445
    4. ' ' → logprob: -11.503374099731445
    5. ' self' → logprob: -12.878374099731445
    6. ' ' → logprob: -14.128374099731445
    7. 'self' → logprob: -14.128374099731445
    8. '[int' → logprob: -14.378374099731445
    9. '   ' → logprob: -14.878374099731445
    10. '[start' → logprob: -14.878374099731445

Token 161: '.shopping' (ID: 145749)
  Prédit: '.shopping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.shopping' → logprob: -0.00162221840582788
    2. '.' → logprob: -6.501622200012207
    3. ' .' → logprob: -9.501622200012207
    4. '.start' → logprob: -10.751622200012207
    5. 'shopping' → logprob: -11.376622200012207
    6. '.s' → logprob: -12.626622200012207
    7. '.shipping' → logprob: -13.126622200012207
    8. '.shop' → logprob: -13.501622200012207
    9. '.station' → logprob: -13.501622200012207
    10. '.search' → logprob: -13.876622200012207

Token 162: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -11.50001049041748
    3. '_s' → logprob: -15.62501049041748
    4. 'stations' → logprob: -15.87501049041748
    5. '_station' → logprob: -16.000011444091797
    6. '_sta' → logprob: -16.250011444091797
    7. 'Stations' → logprob: -17.250011444091797
    8. ' _' → logprob: -17.750011444091797
    9. '_sessions' → logprob: -18.500011444091797
    10. '_positions' → logprob: -18.500011444091797

Token 163: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0003752615302801132
    2. '_' → logprob: -8.625374794006348
    3. 'stations' → logprob: -9.125374794006348
    4. 't' → logprob: -10.125374794006348
    5. 'at' → logprob: -11.625374794006348
    6. 'ions' → logprob: -11.750374794006348
    7. '_st' → logprob: -11.750374794006348
    8. 'a' → logprob: -11.875374794006348
    9. 'ation' → logprob: -13.125374794006348
    10. 's' → logprob: -13.375374794006348

Token 164: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.23412126302719116
    2. '[:]' → logprob: -1.859121322631836
    3. '[:' → logprob: -3.984121322631836
    4. '.copy' → logprob: -4.359121322631836
    5. '+' → logprob: -4.484121322631836
    6. '+[' → logprob: -5.109121322631836
    7. '[' → logprob: -5.484121322631836
    8. '[::-' → logprob: -11.734121322631836
    9. '<|end|>' → logprob: -11.734121322631836
    10. '.insert' → logprob: -11.859121322631836

Token 165: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32274186611175537
    2. ' [' → logprob: -1.3227418661117554
    3. '[self' → logprob: -4.697741985321045
    4. '[start' → logprob: -9.197741508483887
    5. '[s' → logprob: -10.697741508483887
    6. '[selected' → logprob: -10.822741508483887
    7. '[user' → logprob: -10.822741508483887
    8. '[first' → logprob: -11.322741508483887
    9. '[current' → logprob: -11.447741508483887
    10. '[next' → logprob: -11.572741508483887

Token 166: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178544342517853
    2. ' self' → logprob: -5.753178596496582
    3. '   ' → logprob: -15.503178596496582
    4. '       ' → logprob: -15.503178596496582
    5. '
' → logprob: -16.003177642822266
    6. '           ' → logprob: -16.003177642822266
    7. '	self' → logprob: -16.003177642822266
    8. '(self' → logprob: -16.628177642822266
    9. '[self' → logprob: -18.503177642822266
    10. '```' → logprob: -18.628177642822266

Token 167: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0003266447747591883
    2. '.' → logprob: -8.250327110290527
    3. 'start' → logprob: -9.750327110290527
    4. ' .' → logprob: -12.000327110290527
    5. ' start' → logprob: -14.250327110290527
    6. '.st' → logprob: -16.87532615661621
    7. '[start' → logprob: -17.25032615661621
    8. '.s' → logprob: -17.37532615661621
    9. '.star' → logprob: -17.50032615661621
    10. ':start' → logprob: -17.50032615661621

Token 168: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.25000286102295
    3. '_st' → logprob: -15.37500286102295
    4. ' _' → logprob: -15.87500286102295
    5. 'Station' → logprob: -16.000001907348633
    6. '_sta' → logprob: -16.125001907348633
    7. '_s' → logprob: -17.500001907348633
    8. 'station' → logprob: -17.875001907348633
    9. '_start' → logprob: -18.000001907348633
    10. '_staff' → logprob: -18.375001907348633

Token 169: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008329743286594748
    2. ' ]' → logprob: -7.250833034515381
    3. ']
' → logprob: -9.250832557678223
    4. '<|end|>' → logprob: -10.750832557678223
    5. ')]' → logprob: -13.625832557678223
    6. ']

' → logprob: -13.750832557678223
    7. '
' → logprob: -14.125832557678223
    8. '<|end|>' → logprob: -14.625832557678223
    9. ')' → logprob: -15.000832557678223
    10. '`]' → logprob: -15.250832557678223

Token 170: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09836679697036743
    2. '       ' → logprob: -2.4733667373657227
    3. '<|end|>' → logprob: -4.973366737365723
    4. '        
' → logprob: -7.848366737365723
    5. '```' → logprob: -7.848366737365723
    6. ' 
' → logprob: -8.098366737365723
    7. 'n' → logprob: -8.473366737365723
    8. ',' → logprob: -8.723366737365723
    9. '        ' → logprob: -8.723366737365723
    10. '' → logprob: -8.973366737365723

Token 171: ' indices' (ID: 30378)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38488495349884033
    2. 'n' → logprob: -1.3848849534988403
    3. '       ' → logprob: -3.259884834289551
    4. 'dp' → logprob: -4.384884834289551
    5. ' dp' → logprob: -5.634884834289551
    6. ' from' → logprob: -5.884884834289551
    7. 'import' → logprob: -5.884884834289551
    8. '
' → logprob: -6.009884834289551
    9. ' import' → logprob: -6.384884834289551
    10. 'from' → logprob: -6.634884834289551

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00673360750079155
    2. '=' → logprob: -5.006733417510986
    3. ')' → logprob: -11.631733894348145
    4. '<|end|>' → logprob: -12.756733894348145
    5. '_' → logprob: -13.381733894348145
    6. '_indices' → logprob: -13.506733894348145
    7. ' =)' → logprob: -14.131733894348145
    8. ',' → logprob: -14.631733894348145
    9. 's' → logprob: -14.881733894348145
    10. ']' → logprob: -15.006733894348145

Token 173: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.00560973072424531
    2. '[' → logprob: -6.005609512329102
    3. ' sorted' → logprob: -6.130609512329102
    4. ' {' → logprob: -8.630609512329102
    5. ' tuple' → logprob: -8.630609512329102
    6. 'sorted' → logprob: -8.880609512329102
    7. '[list' → logprob: -9.005609512329102
    8. ' list' → logprob: -9.505609512329102
    9. ' ' → logprob: -10.005609512329102
    10. '   ' → logprob: -10.255609512329102

Token 174: 's' (ID: 82)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.3313623070716858
    2. 's' → logprob: -1.331362247467041
    3. ' station' → logprob: -4.206362247467041
    4. ' s' → logprob: -6.581362247467041
    5. 'st' → logprob: -6.706362247467041
    6. 'i' → logprob: -8.4563627243042
    7. 'stat' → logprob: -10.4563627243042
    8. 'sta' → logprob: -10.8313627243042
    9. '   ' → logprob: -11.2063627243042
    10. '```' → logprob: -11.2063627243042

Token 175: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -9.329167369287461e-05
    2. '.' → logprob: -9.375093460083008
    3. 'index' → logprob: -12.000093460083008
    4. ' .' → logprob: -14.250093460083008
    5. '=index' → logprob: -14.625093460083008
    6. '[index' → logprob: -15.625093460083008
    7. '.idx' → logprob: -15.750093460083008
    8. '.
' → logprob: -16.000093460083008
    9. '.indices' → logprob: -16.250093460083008
    10. '	index' → logprob: -16.500093460083008

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00645849434658885
    2. 'for' → logprob: -5.631458282470703
    3. ' ' → logprob: -5.881458282470703
    4. '<|end|>' → logprob: -10.381458282470703
    5. '	for' → logprob: -11.506458282470703
    6. ']' → logprob: -12.131458282470703
    7. '<|end|>' → logprob: -12.131458282470703
    8. ' ]' → logprob: -12.256458282470703
    9. ')' → logprob: -12.506458282470703
    10. '  ' → logprob: -14.506458282470703

Token 177: ' s' (ID: 265)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.04579881951212883
    2. 'all' → logprob: -3.4207987785339355
    3. ' s' → logprob: -4.5457987785339355
    4. 's' → logprob: -6.5457987785339355
    5. '	all' → logprob: -11.170799255371094
    6. ' ' → logprob: -11.545799255371094
    7. ' station' → logprob: -12.170799255371094
    8. '_all' → logprob: -13.670799255371094
    9. 'station' → logprob: -14.420799255371094
    10. '(all' → logprob: -15.670799255371094

Token 178: ' in' (ID: 306)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.03756764531135559
    2. 'all' → logprob: -3.912567615509033
    3. ' in' → logprob: -4.162567615509033
    4. ' ' → logprob: -7.912567615509033
    5. 's' → logprob: -8.412568092346191
    6. '.all' → logprob: -8.412568092346191
    7. '.' → logprob: -8.912568092346191
    8. '_' → logprob: -9.037568092346191
    9. '	all' → logprob: -9.537568092346191
    10. ' s' → logprob: -10.037568092346191

Token 179: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04858827963471413
    2. ' all' → logprob: -3.048588275909424
    3. '	all' → logprob: -14.423588752746582
    4. '
' → logprob: -15.798588752746582
    5. ' ' → logprob: -16.548587799072266
    6. '(all' → logprob: -16.673587799072266
    7. '   ' → logprob: -16.798587799072266
    8. ']' → logprob: -16.923587799072266
    9. '_all' → logprob: -17.673587799072266
    10. ''all' → logprob: -18.048587799072266

Token 180: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.004175271838903427
    2. '_' → logprob: -5.629175186157227
    3. 'stations' → logprob: -7.754175186157227
    4. '_station' → logprob: -9.129175186157227
    5. 'all' → logprob: -11.004175186157227
    6. 'st' → logprob: -12.004175186157227
    7. '_sta' → logprob: -12.379175186157227
    8. 's' → logprob: -12.754175186157227
    9. '_s' → logprob: -12.879175186157227
    10. '_]' → logprob: -13.754175186157227

Token 181: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0006932547548785806
    2. '_all' → logprob: -8.250693321228027
    3. 'ation' → logprob: -8.875693321228027
    4. '_' → logprob: -9.375693321228027
    5. 'a' → logprob: -10.000693321228027
    6. 't' → logprob: -10.250693321228027
    7. 'all' → logprob: -10.500693321228027
    8. 'at' → logprob: -10.875693321228027
    9. '```' → logprob: -11.000693321228027
    10. 'ions' → logprob: -11.750693321228027

Token 182: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0076346630230546
    2. ' ]' → logprob: -4.88263463973999
    3. ']
' → logprob: -11.507635116577148
    4. '       ' → logprob: -12.007635116577148
    5. '()]' → logprob: -12.382635116577148
    6. ',' → logprob: -13.132635116577148
    7. ')' → logprob: -13.257635116577148
    8. ')]' → logprob: -13.257635116577148
    9. '
' → logprob: -14.007635116577148
    10. ' ]
' → logprob: -15.257635116577148

Token 183: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26731109619140625
    2. '       ' → logprob: -1.7673110961914062
    3. '<|end|>' → logprob: -4.017311096191406
    4. ',' → logprob: -4.267311096191406
    5. '        
' → logprob: -4.517311096191406
    6. ' 
' → logprob: -5.017311096191406
    7. ')' → logprob: -5.767311096191406
    8. '        ' → logprob: -5.892311096191406
    9. '```' → logprob: -6.142311096191406
    10. ',
' → logprob: -7.267311096191406

Token 184: ' left' (ID: 3561)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2204616069793701
    2. 'n' → logprob: -1.8454616069793701
    3. ' dp' → logprob: -1.8454616069793701
    4. 'dp' → logprob: -2.47046160697937
    5. '       ' → logprob: -2.97046160697937
    6. ' from' → logprob: -3.09546160697937
    7. ',' → logprob: -3.34546160697937
    8. ' 
' → logprob: -3.97046160697937
    9. 'import' → logprob: -4.095461845397949
    10. ' import' → logprob: -4.095461845397949

Token 185: 'most' (ID: 5309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20705300569534302
    2. ',' → logprob: -1.8320529460906982
    3. '=' → logprob: -3.9570529460906982
    4. '_' → logprob: -6.082053184509277
    5. ' ,' → logprob: -6.207053184509277
    6. '_dp' → logprob: -6.332053184509277
    7. '_idx' → logprob: -7.957053184509277
    8. '_indices' → logprob: -8.207053184509277
    9. 'dp' → logprob: -8.832053184509277
    10. '_dist' → logprob: -9.207053184509277

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011929201893508434
    2. '=' → logprob: -4.511929035186768
    3. ',' → logprob: -7.136929035186768
    4. '_' → logprob: -10.261929512023926
    5. '_index' → logprob: -10.761929512023926
    6. '_idx' → logprob: -11.011929512023926
    7. ' ,' → logprob: -11.636929512023926
    8. 'index' → logprob: -14.386929512023926
    9. '_indices' → logprob: -14.511929512023926
    10. ' ' → logprob: -14.886929512023926

Token 187: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.03805216774344444
    2. 'min' → logprob: -3.2880520820617676
    3. ' indices' → logprob: -12.038052558898926
    4. ' ' → logprob: -13.038052558898926
    5. '	min' → logprob: -14.163052558898926
    6. ' max' → logprob: -14.288052558898926
    7. '   ' → logprob: -15.163052558898926
    8. '(min' → logprob: -15.163052558898926
    9. 'indices' → logprob: -15.663052558898926
    10. '[min' → logprob: -16.03805160522461

Token 188: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -5.3954463510308415e-05
    2. 'indices' → logprob: -10.000054359436035
    3. '(' → logprob: -12.000054359436035
    4. '(all' → logprob: -14.500054359436035
    5. '(index' → logprob: -14.500054359436035
    6. '(ids' → logprob: -15.250054359436035
    7. '(ind' → logprob: -15.250054359436035
    8. ' indices' → logprob: -15.625054359436035
    9. '(
' → logprob: -15.625054359436035
    10. '(i' → logprob: -15.750054359436035

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020506270229816437
    2. ' )' → logprob: -4.395506381988525
    3. ')
' → logprob: -4.895506381988525
    4. ' )
' → logprob: -7.770506381988525
    5. ',' → logprob: -10.145505905151367
    6. '<|end|>' → logprob: -11.770505905151367
    7. ' ,' → logprob: -12.145505905151367
    8. '<|end|>' → logprob: -12.645505905151367
    9. '),' → logprob: -13.645505905151367
    10. ',
' → logprob: -13.770505905151367

Token 190: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5078212022781372
    2. ' right' → logprob: -1.2578212022781372
    3. '       ' → logprob: -2.2578210830688477
    4. ',' → logprob: -5.882821083068848
    5. ',right' → logprob: -6.382821083068848
    6. ')' → logprob: -7.007821083068848
    7. '
' → logprob: -7.632821083068848
    8. '        
' → logprob: -7.757821083068848
    9. '.right' → logprob: -7.757821083068848
    10. 'left' → logprob: -8.007821083068848

Token 191: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0005722135538235307
    2. ' right' → logprob: -7.625572204589844
    3. '       ' → logprob: -9.625572204589844
    4. 'max' → logprob: -12.125572204589844
    5. '   ' → logprob: -12.250572204589844
    6. 'left' → logprob: -13.000572204589844
    7. '	right' → logprob: -13.625572204589844
    8. '
' → logprob: -13.750572204589844
    9. 'r' → logprob: -14.375572204589844
    10. '```' → logprob: -14.500572204589844

Token 192: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0001817297888919711
    2. 'm' → logprob: -10.000182151794434
    3. '_' → logprob: -10.375182151794434
    4. ' =' → logprob: -10.500182151794434
    5. '=' → logprob: -10.750182151794434
    6. '_m' → logprob: -11.500182151794434
    7. 'more' → logprob: -11.875182151794434
    8. 'mo' → logprob: -12.250182151794434
    9. 'st' → logprob: -12.500182151794434
    10. 'ost' → logprob: -12.625182151794434

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715728435665369
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.881715774536133
    4. ' =
' → logprob: -18.756715774536133
    5. '.' → logprob: -19.631715774536133
    6. ')' → logprob: -19.881715774536133
    7. ',' → logprob: -19.881715774536133
    8. '<|end|>' → logprob: -19.881715774536133
    9. ' =)' → logprob: -20.131715774536133
    10. ' ' → logprob: -20.256715774536133

Token 194: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0024758970830589533
    2. 'max' → logprob: -6.002475738525391
    3. ' ' → logprob: -15.75247573852539
    4. '(max' → logprob: -17.00247573852539
    5. '	max' → logprob: -17.87747573852539
    6. '=max' → logprob: -20.00247573852539
    7. ' ' → logprob: -20.75247573852539
    8. ' min' → logprob: -21.00247573852539
    9. '_max' → logprob: -21.00247573852539
    10. '[max' → logprob: -21.00247573852539

Token 195: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.00001049041748
    3. 'indices' → logprob: -13.00001049041748
    4. ' (' → logprob: -13.62501049041748
    5. '(ind' → logprob: -14.87501049041748
    6. '(ids' → logprob: -15.37501049041748
    7. '(index' → logprob: -15.50001049041748
    8. ' indices' → logprob: -16.875011444091797
    9. '"indices' → logprob: -17.000011444091797
    10. '(
' → logprob: -17.875011444091797

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008644147892482579
    2. '       ' → logprob: -7.500864505767822
    3. ')
' → logprob: -8.750864028930664
    4. ' )' → logprob: -9.250864028930664
    5. ']' → logprob: -11.000864028930664
    6. '<|end|>' → logprob: -11.375864028930664
    7. '
' → logprob: -11.500864028930664
    8. ')return' → logprob: -12.250864028930664
    9. '<|end|>' → logprob: -12.625864028930664
    10. '])' → logprob: -13.375864028930664

Token 197: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1851123720407486
    2. '       ' → logprob: -1.8101123571395874
    3. '        
' → logprob: -6.060112476348877
    4. '<|end|>' → logprob: -7.060112476348877
    5. '        ' → logprob: -7.310112476348877
    6. '' → logprob: -8.310111999511719
    7. ' if' → logprob: -8.560111999511719
    8. '#' → logprob: -8.935111999511719
    9. ' 
' → logprob: -8.935111999511719
    10. ',' → logprob: -8.935111999511719

Token 198: ' N' (ID: 478)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1876484602689743
    2. '       ' → logprob: -1.9376484155654907
    3. ' if' → logprob: -4.687648296356201
    4. '        
' → logprob: -6.062648296356201
    5. ' left' → logprob: -6.062648296356201
    6. 'left' → logprob: -6.187648296356201
    7. '```' → logprob: -6.812648296356201
    8. ' return' → logprob: -6.812648296356201
    9. ' 
' → logprob: -6.937648296356201
    10. 'distance' → logprob: -7.062648296356201

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021142344921827316
    2. '=' → logprob: -3.8961422443389893
    3. '_' → logprob: -7.521142482757568
    4. ',' → logprob: -11.27114200592041
    5. '   ' → logprob: -11.39614200592041
    6. ' ' → logprob: -11.77114200592041
    7. 'um' → logprob: -12.27114200592041
    8. ' ' → logprob: -12.77114200592041
    9. '=len' → logprob: -12.77114200592041
    10. ')' → logprob: -13.27114200592041

Token 200: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5266500115394592
    2. ' len' → logprob: -1.0266499519348145
    3. 'self' → logprob: -3.4016499519348145
    4. 'len' → logprob: -4.0266499519348145
    5. ' ' → logprob: -10.651650428771973
    6. ' right' → logprob: -10.901650428771973
    7. '(len' → logprob: -11.651650428771973
    8. '       ' → logprob: -13.276650428771973
    9. '   ' → logprob: -13.776650428771973
    10. 'right' → logprob: -13.776650428771973

Token 201: '.' (ID: 13)
  Prédit: '.station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.station' → logprob: -0.4742010533809662
    2. '.' → logprob: -0.9742010831832886
    3. '.shopping' → logprob: -10.099201202392578
    4. ' .' → logprob: -10.849201202392578
    5. '.shop' → logprob: -10.849201202392578
    6. '.r' → logprob: -11.349201202392578
    7. '.start' → logprob: -12.349201202392578
    8. '.st' → logprob: -12.474201202392578
    9. '.train' → logprob: -12.724201202392578
    10. '.s' → logprob: -12.724201202392578

Token 202: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.002667450113222003
    2. 'start' → logprob: -6.252667427062988
    3. 'station' → logprob: -8.252667427062988
    4. 'shopping' → logprob: -8.877667427062988
    5. 'ail' → logprob: -9.752667427062988
    6. 'rails' → logprob: -10.127667427062988
    7. 'rack' → logprob: -10.127667427062988
    8. 'ra' → logprob: -10.752667427062988
    9. 'ring' → logprob: -10.752667427062988
    10. 'len' → logprob: -11.252667427062988

Token 203: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -9.198043699143454e-05
    2. 'Ring' → logprob: -9.375091552734375
    3. 'ring' → logprob: -12.000091552734375
    4. '_RING' → logprob: -14.625091552734375
    5. '-ring' → logprob: -16.250091552734375
    6. ' ring' → logprob: -16.375091552734375
    7. '_station' → logprob: -16.500091552734375
    8. '_r' → logprob: -17.125091552734375
    9. ' Ring' → logprob: -17.250091552734375
    10. 'リング' → logprob: -17.500091552734375

Token 204: '.station' (ID: 183964)
  Prédit: '.station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.station' → logprob: -0.000241085872403346
    2. '.' → logprob: -8.37524127960205
    3. '.school' → logprob: -12.75024127960205
    4. 'station' → logprob: -13.50024127960205
    5. ' .' → logprob: -13.62524127960205
    6. '.student' → logprob: -14.37524127960205
    7. '.city' → logprob: -15.00024127960205
    8. '.ticket' → logprob: -15.00024127960205
    9. '.restaurant' → logprob: -15.00024127960205
    10. '.staff' → logprob: -15.25024127960205

Token 205: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.1424973713001236e-05
    2. 'count' → logprob: -10.375031471252441
    3. '_' → logprob: -17.125030517578125
    4. 's' → logprob: -17.250030517578125
    5. '_COUNT' → logprob: -17.750030517578125
    6. '_c' → logprob: -18.125030517578125
    7. 'Count' → logprob: -18.125030517578125
    8. ' count' → logprob: -18.250030517578125
    9. '_counts' → logprob: -18.375030517578125
    10. 'ount' → logprob: -19.000030517578125

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05943669378757477
    2. 'dp' → logprob: -3.684436798095703
    3. ' dp' → logprob: -3.934436798095703
    4. '        
' → logprob: -5.434436798095703
    5. ' cost' → logprob: -6.059436798095703
    6. '
' → logprob: -7.059436798095703
    7. 'cost' → logprob: -7.309436798095703
    8. 'distance' → logprob: -7.309436798095703
    9. ' total' → logprob: -7.434436798095703
    10. 'total' → logprob: -7.934436798095703

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004291015211492777
    2. ' cost' → logprob: -6.25429105758667
    3. '        
' → logprob: -7.75429105758667
    4. 'cost' → logprob: -8.129290580749512
    5. '        ' → logprob: -8.629290580749512
    6. ' if' → logprob: -8.754290580749512
    7. 'dp' → logprob: -8.879290580749512
    8. ' dp' → logprob: -9.004290580749512
    9. ' total' → logprob: -9.254290580749512
    10. 'left' → logprob: -9.504290580749512

Token 208: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4792523980140686
    2. '       ' → logprob: -1.4792523384094238
    3. 'cost' → logprob: -2.979252338409424
    4. 'left' → logprob: -3.229252338409424
    5. 'dist' → logprob: -4.354252338409424
    6. 'def' → logprob: -4.729252338409424
    7. '#' (adapté à ' #') → logprob: -4.854252338409424
    8. 'from' → logprob: -4.979252338409424
    9. 'min' → logprob: -4.979252338409424
    10. 'total' → logprob: -5.854252338409424

Token 209: ' Possible' (ID: 76169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2802062034606934
    2. 'dp' → logprob: -1.5302062034606934
    3. '       ' → logprob: -1.9052062034606934
    4. 'cost' → logprob: -2.2802062034606934
    5. 'left' → logprob: -2.6552062034606934
    6. 'dist' → logprob: -3.4052062034606934
    7. 'min' → logprob: -3.5302062034606934
    8. 'if' → logprob: -4.030206203460693
    9. 'def' → logprob: -4.030206203460693
    10. 'from' → logprob: -4.655206203460693

Token 210: ' minimal' (ID: 19957)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' costs' → logprob: -2.146632194519043
    2. ' distances' → logprob: -2.146632194519043
    3. 'cost' → logprob: -2.271632194519043
    4. ' directions' → logprob: -2.646632194519043
    5. 'dist' → logprob: -2.771632194519043
    6. ' cost' → logprob: -2.896632194519043
    7. ' ways' → logprob: -2.896632194519043
    8. ' paths' → logprob: -2.896632194519043
    9. ' left' → logprob: -3.021632194519043
    10. ' options' → logprob: -3.396632194519043

Token 211: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4384264647960663
    2. ' cost' → logprob: -2.0634264945983887
    3. 'dist' → logprob: -2.9384264945983887
    4. 'distance' → logprob: -2.9384264945983887
    5. ' distances' → logprob: -3.1884264945983887
    6. ' clockwise' → logprob: -3.6884264945983887
    7. ' costs' → logprob: -4.563426494598389
    8. ' distance' → logprob: -5.188426494598389
    9. 'left' → logprob: -5.313426494598389
    10. '#' → logprob: -5.313426494598389

Token 212: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08313705772161484
    2. ' if' → logprob: -4.208137035369873
    3. 'left' → logprob: -4.208137035369873
    4. ' left' → logprob: -4.333137035369873
    5. ':' → logprob: -5.083137035369873
    6. ' =' → logprob: -5.208137035369873
    7. ',' → logprob: -5.708137035369873
    8. ' is' → logprob: -6.083137035369873
    9. ' to' → logprob: -6.333137035369873
    10. ' return' → logprob: -6.458137035369873

Token 213: ' initialization' (ID: 41684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6780460476875305
    2. '
' → logprob: -0.8030460476875305
    3. '        
' → logprob: -4.803046226501465
    4. ':' → logprob: -5.053046226501465
    5. '        ' → logprob: -5.178046226501465
    6. ',' → logprob: -5.303046226501465
    7. '<|end|>' → logprob: -5.553046226501465
    8. '_candidates' → logprob: -6.428046226501465
    9. 'left' → logprob: -6.553046226501465
    10. ' candidates' → logprob: -6.678046226501465

Token 214: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6239340901374817
    2. 'min' → logprob: -1.623934030532837
    3. 'cost' → logprob: -2.123934030532837
    4. '       ' → logprob: -2.498934030532837
    5. 'left' → logprob: -2.998934030532837
    6. 'possible' → logprob: -5.248934268951416
    7. ' candidates' → logprob: -6.373934268951416
    8. ' min' → logprob: -6.498934268951416
    9. '```' → logprob: -6.873934268951416
    10. ' cost' → logprob: -7.498934268951416

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32153192162513733
    2. 'left' → logprob: -2.5715320110321045
    3. 'min' → logprob: -2.9465320110321045
    4. 'cost' → logprob: -3.4465320110321045
    5. '```' → logprob: -3.5715320110321045
    6. ' candidates' → logprob: -4.196531772613525
    7. 'c' → logprob: -4.321531772613525
    8. 'possible' → logprob: -4.571531772613525
    9. '
' → logprob: -4.946531772613525
    10. ' min' → logprob: -5.196531772613525

Token 216: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22985327243804932
    2. 'cost' → logprob: -1.9798532724380493
    3. 'min' → logprob: -2.9798531532287598
    4. 'left' → logprob: -5.22985315322876
    5. 'candidate' → logprob: -5.47985315322876
    6. 'possible' → logprob: -6.72985315322876
    7. 'cand' → logprob: -6.85485315322876
    8. '       ' → logprob: -7.22985315322876
    9. 'best' → logprob: -7.60485315322876
    10. 'res' → logprob: -7.60485315322876

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757557436823845
    2. '=' → logprob: -3.529757499694824
    3. ' =[' → logprob: -12.154757499694824
    4. ':' → logprob: -13.779757499694824
    5. '=[]' → logprob: -14.904757499694824
    6. ' ' → logprob: -15.904757499694824
    7. '=[' → logprob: -16.27975845336914
    8. ' =
' → logprob: -16.77975845336914
    9. '[' → logprob: -16.77975845336914
    10. ')' → logprob: -17.40475845336914

Token 218: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.27662771940231323
    2. ' [' → logprob: -2.026627779006958
    3. '[]' → logprob: -2.276627779006958
    4. '[' → logprob: -5.151627540588379
    5. ' [
' → logprob: -6.651627540588379
    6. '[
' → logprob: -8.776627540588379
    7. ' []
' → logprob: -12.526627540588379
    8. '[int' → logprob: -12.776627540588379
    9. '[]}' → logprob: -13.276627540588379
    10. ' [

' → logprob: -13.401627540588379

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021628007292747498
    2. '#' → logprob: -5.146627902984619
    3. ' for' → logprob: -5.146627902984619
    4. ' if' → logprob: -6.146627902984619
    5. 'for' → logprob: -6.396627902984619
    6. '        
' → logprob: -6.646627902984619
    7. ' #' → logprob: -7.021627902984619
    8. ' left' → logprob: -7.146627902984619
    9. '        ' → logprob: -7.271627902984619
    10. 'left' → logprob: -7.396627902984619

Token 220: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.545067310333252
    2. '       ' → logprob: -1.295067310333252
    3. 'for' → logprob: -2.295067310333252
    4. ' for' → logprob: -4.420067310333252
    5. 'left' → logprob: -4.545067310333252
    6. ' #' → logprob: -5.170067310333252
    7. 'if' → logprob: -5.670067310333252
    8. 'current' → logprob: -6.420067310333252
    9. 'd' → logprob: -6.670067310333252
    10. ' if' → logprob: -6.670067310333252

Token 221: ' Clock' (ID: 50622)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13452458381652832
    2. 'for' → logprob: -2.5095245838165283
    3. 'left' → logprob: -4.884524345397949
    4. 'cost' → logprob: -4.884524345397949
    5. 'distance' → logprob: -5.384524345397949
    6. '       ' → logprob: -5.509524345397949
    7. 'dist' → logprob: -6.134524345397949
    8. 'c' → logprob: -6.384524345397949
    9. 'if' → logprob: -6.384524345397949
    10. 'from' → logprob: -6.384524345397949

Token 222: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.00129785411991179
    2. '       ' → logprob: -6.751297950744629
    3. 'w' → logprob: -9.251297950744629
    4. '-wise' → logprob: -11.876297950744629
    5. '   ' → logprob: -12.251297950744629
    6. '        ' → logprob: -12.626297950744629
    7. ' wise' → logprob: -12.876297950744629
    8. '
' → logprob: -13.126297950744629
    9. '```' → logprob: -13.501297950744629
    10. '=' → logprob: -13.751297950744629

Token 223: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6743159294128418
    2. 'for' → logprob: -1.7993159294128418
    3. 'distance' → logprob: -2.674315929412842
    4. '       ' → logprob: -3.049315929412842
    5. 'cost' → logprob: -3.549315929412842
    6. ' distance' → logprob: -3.924315929412842
    7. '#' → logprob: -3.924315929412842
    8. ' cost' → logprob: -4.299315929412842
    9. ' traversal' → logprob: -4.674315929412842
    10. ' from' → logprob: -4.799315929412842

Token 224: ' antic' (ID: 83629)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.21036294102668762
    2. ' counter' → logprob: -1.7103629112243652
    3. 'antic' → logprob: -5.210362911224365
    4. ' antic' → logprob: -5.710362911224365
    5. '   ' → logprob: -9.460363388061523
    6. 'anti' → logprob: -10.835363388061523
    7. 'cc' → logprob: -11.460363388061523
    8. ' anti' → logprob: -11.710363388061523
    9. ' ' → logprob: -11.960363388061523
    10. '#' → logprob: -12.585363388061523

Token 225: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.00021557629224844277
    2. 'clock' → logprob: -8.750215530395508
    3. '       ' → logprob: -11.125215530395508
    4. 'w' → logprob: -12.125215530395508
    5. '   ' → logprob: -12.250215530395508
    6. 'locks' → logprob: -12.375215530395508
    7. ' clockwise' → logprob: -12.500215530395508
    8. '#' → logprob: -12.750215530395508
    9. ' lock' → logprob: -12.750215530395508
    10. 'locked' → logprob: -12.750215530395508

Token 226: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.00042209390085190535
    2. 'lock' → logprob: -8.000422477722168
    3. 'w' → logprob: -9.750422477722168
    4. 'l' → logprob: -12.625422477722168
    5. 'ewise' → logprob: -12.750422477722168
    6. '```' → logprob: -12.750422477722168
    7. 'Wise' → logprob: -12.750422477722168
    8. 'ise' → logprob: -12.875422477722168
    9. 'clock' → logprob: -13.375422477722168
    10. '#' → logprob: -13.500422477722168

Token 227: ' costs' (ID: 8959)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -1.2969361543655396
    2. ' directions' → logprob: -1.7969361543655396
    3. ' traversal' → logprob: -2.17193603515625
    4. 'dist' → logprob: -2.29693603515625
    5. ' movement' → logprob: -3.17193603515625
    6. 'dire' → logprob: -3.29693603515625
    7. 'distance' → logprob: -3.29693603515625
    8. 'cost' → logprob: -3.67193603515625
    9. ' movements' → logprob: -3.79693603515625
    10. '#' → logprob: -4.04693603515625

Token 228: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005986624397337437
    2. '
' → logprob: -5.38098669052124
    3. '        
' → logprob: -8.130986213684082
    4. ' for' → logprob: -8.255986213684082
    5. '#' → logprob: -8.380986213684082
    6. ',' → logprob: -8.880986213684082
    7. 'for' → logprob: -9.130986213684082
    8. '        ' → logprob: -9.630986213684082
    9. ' clockwise' → logprob: -10.380986213684082
    10. 'left' → logprob: -10.505986213684082

Token 229: ' we' (ID: 581)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0304752588272095
    2. 'left' → logprob: -1.6554752588272095
    3. ' left' → logprob: -2.15547513961792
    4. 'self' → logprob: -2.28047513961792
    5. 'right' → logprob: -2.53047513961792
    6. ' right' → logprob: -2.90547513961792
    7. ' we' → logprob: -3.40547513961792
    8. 'from' → logprob: -3.78047513961792
    9. ' the' → logprob: -4.53047513961792
    10. ' going' → logprob: -5.40547513961792

Token 230: ' wrap' (ID: 20404)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -1.0176479816436768
    2. 'visit' → logprob: -1.5176479816436768
    3. ' go' → logprob: -1.6426479816436768
    4. ' cover' → logprob: -2.7676479816436768
    5. ' start' → logprob: -3.3926479816436768
    6. ' only' → logprob: -3.6426479816436768
    7. ' continue' → logprob: -3.7676479816436768
    8. ' consider' → logprob: -4.267647743225098
    9. 'go' → logprob: -4.392647743225098
    10. 'start' → logprob: -4.892647743225098

Token 231: ' over' (ID: 1072)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.19053520262241364
    2. ' around' → logprob: -2.190535306930542
    3. '       ' → logprob: -3.940535306930542
    4. '   ' → logprob: -3.940535306930542
    5. '_' → logprob: -4.815535068511963
    6. 'left' → logprob: -5.690535068511963
    7. '#' → logprob: -6.065535068511963
    8. ' =' → logprob: -6.190535068511963
    9. 'from' → logprob: -6.815535068511963
    10. '-around' → logprob: -7.190535068511963

Token 232: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.0650944709777832
    2. '       ' → logprob: -1.5650944709777832
    3. 'right' → logprob: -1.8150944709777832
    4. 'the' → logprob: -1.9400944709777832
    5. ' the' → logprob: -2.440094470977783
    6. ' left' → logprob: -4.440094470977783
    7. '#' → logprob: -4.690094470977783
    8. 'self' → logprob: -4.940094470977783
    9. 'N' → logprob: -5.065094470977783
    10. ' right' → logprob: -5.190094470977783

Token 233: ' ring' (ID: 12796)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4749232530593872
    2. 'N' → logprob: -2.0999231338500977
    3. 'station' → logprob: -2.5999231338500977
    4. 'ring' → logprob: -2.7249231338500977
    5. ' station' → logprob: -4.099923133850098
    6. ' right' → logprob: -4.224923133850098
    7. 'left' → logprob: -4.224923133850098
    8. 'start' → logprob: -4.224923133850098
    9. 'boundary' → logprob: -4.224923133850098
    10. ' ring' → logprob: -4.474923133850098

Token 234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006671323906630278
    2. '
' → logprob: -5.75667142868042
    3. ' clockwise' → logprob: -7.25667142868042
    4. '#' → logprob: -7.63167142868042
    5. '        
' → logprob: -7.75667142868042
    6. ',' → logprob: -8.131670951843262
    7. 'clock' → logprob: -8.131670951843262
    8. '        ' → logprob: -8.256670951843262
    9. ' for' → logprob: -8.756670951843262
    10. 'left' → logprob: -8.881670951843262

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027371125761419535
    2. '        ' → logprob: -6.252737045288086
    3. '        
' → logprob: -7.877737045288086
    4. '<|end|>' → logprob: -9.377737045288086
    5. ',' → logprob: -9.627737045288086
    6. '#' → logprob: -10.252737045288086
    7. '
' → logprob: -10.252737045288086
    8. '      ' → logprob: -10.627737045288086
    9. '   ' → logprob: -10.752737045288086
    10. ')' → logprob: -10.752737045288086

Token 236: ' clockwise' (ID: 141888)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.8374653458595276
    2. 'clock' → logprob: -1.4624652862548828
    3. '       ' → logprob: -1.9624652862548828
    4. 'c' → logprob: -2.087465286254883
    5. '#' → logprob: -4.462465286254883
    6. 'cost' → logprob: -4.462465286254883
    7. 'wrap' → logprob: -4.837465286254883
    8. ' cw' → logprob: -4.837465286254883
    9. ' clockwise' → logprob: -4.837465286254883
    10. 'for' → logprob: -5.212465286254883

Token 237: '_span' (ID: 90052)
  Prédit: '_wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_wrap' → logprob: -0.6932389736175537
    2. '_cost' → logprob: -1.0682389736175537
    3. '_distance' → logprob: -2.6932389736175537
    4. ' =' → logprob: -3.4432389736175537
    5. '_start' → logprob: -3.4432389736175537
    6. '_dist' → logprob: -4.568239212036133
    7. '_from' → logprob: -5.443239212036133
    8. '_to' → logprob: -5.818239212036133
    9. '_' → logprob: -6.693239212036133
    10. '_left' → logprob: -6.818239212036133

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894819766283035
    2. '=' → logprob: -2.4639482498168945
    3. '_' → logprob: -12.088948249816895
    4. ' ' → logprob: -13.213948249816895
    5. ' ' → logprob: -15.213948249816895
    6. '1' → logprob: -15.713948249816895
    7. ',' → logprob: -16.088947296142578
    8. 's' → logprob: -16.213947296142578
    9. '_right' → logprob: -16.338947296142578
    10. ' =
' → logprob: -16.838947296142578

Token 239: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.33525198698043823
    2. ' (' → logprob: -1.835252046585083
    3. '(right' → logprob: -2.085252046585083
    4. '(abs' → logprob: -8.835251808166504
    5. '(r' → logprob: -8.960251808166504
    6. '       ' → logprob: -9.085251808166504
    7. '(min' → logprob: -9.585251808166504
    8. '(next' → logprob: -9.710251808166504
    9. '(left' → logprob: -9.835251808166504
    10. '
' → logprob: -9.835251808166504

Token 240: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.23105555772781372
    2. '(right' → logprob: -1.606055498123169
    3. ' right' → logprob: -6.106055736541748
    4. ' (' → logprob: -6.606055736541748
    5. '(N' → logprob: -7.106055736541748
    6. '(self' → logprob: -8.23105525970459
    7. 'N' → logprob: -8.35605525970459
    8. '   ' → logprob: -8.48105525970459
    9. 'self' → logprob: -8.85605525970459
    10. '(' → logprob: -9.23105525970459

Token 241: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0008824035176075995
    2. ' -' → logprob: -7.750882625579834
    3. 'right' → logprob: -8.250882148742676
    4. 'left' → logprob: -8.875882148742676
    5. '-' → logprob: -11.250882148742676
    6. ' ' → logprob: -11.375882148742676
    7. '   ' → logprob: -11.750882148742676
    8. 'm' → logprob: -12.125882148742676
    9. '
' → logprob: -13.250882148742676
    10. '  ' → logprob: -13.500882148742676

Token 242: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00044258590787649155
    2. '-' → logprob: -7.7504425048828125
    3. ' +' → logprob: -11.875442504882812
    4. '+' → logprob: -12.625442504882812
    5. ' ' → logprob: -13.750442504882812
    6. ' ' → logprob: -15.375442504882812
    7. ',' → logprob: -15.875442504882812
    8. ')' → logprob: -16.125442504882812
    9. '<|end|>' → logprob: -16.375442504882812
    10. ' -
' → logprob: -17.125442504882812

Token 243: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0019391077803447843
    2. ' left' → logprob: -6.251939296722412
    3. '   ' → logprob: -12.501938819885254
    4. ')' → logprob: -13.001938819885254
    5. '	left' → logprob: -13.126938819885254
    6. ' ' → logprob: -13.876938819885254
    7. '[left' → logprob: -14.376938819885254
    8. '       ' → logprob: -15.001938819885254
    9. '
' → logprob: -15.626938819885254
    10. '           ' → logprob: -16.25193977355957

Token 244: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -6.153795766294934e-06
    2. 'right' → logprob: -12.500005722045898
    3. ' most' → logprob: -14.375005722045898
    4. '   ' → logprob: -15.250005722045898
    5. 'left' → logprob: -15.500005722045898
    6. ')' → logprob: -15.625005722045898
    7. 'Most' → logprob: -15.625005722045898
    8. 'ost' → logprob: -15.750005722045898
    9. 'm' → logprob: -15.875005722045898
    10. 'more' → logprob: -16.0000057220459

Token 245: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007143463473767042
    2. ' +' → logprob: -5.382143497467041
    3. '+' → logprob: -6.132143497467041
    4. ' )' → logprob: -8.007143020629883
    5. ')%' → logprob: -11.257143020629883
    6. ' if' → logprob: -14.507143020629883
    7. ' ' → logprob: -15.132143020629883
    8. '+)' → logprob: -15.257143020629883
    9. '   ' → logprob: -15.507143020629883
    10. ' ' → logprob: -15.757143020629883

Token 246: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005550591740757227
    2. ' ' → logprob: -7.500555038452148
    3. '   ' → logprob: -14.375555038452148
    4. 'self' → logprob: -14.750555038452148
    5. '10' → logprob: -15.750555038452148
    6. '1' → logprob: -15.875555038452148
    7. '110' → logprob: -15.875555038452148
    8. '<|end|>' → logprob: -16.00055503845215
    9. '
' → logprob: -16.25055503845215
    10. '```' → logprob: -16.50055503845215

Token 248: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.375038146972656
    3. 'self' → logprob: -12.750038146972656
    4. '1' → logprob: -14.000038146972656
    5. '   ' → logprob: -14.375038146972656
    6. '
' → logprob: -14.750038146972656
    7. 'distance' → logprob: -15.000038146972656
    8. '10' → logprob: -15.125038146972656
    9. '```' → logprob: -15.500038146972656
    10. '0' → logprob: -16.000038146972656

Token 249: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21485459804534912
    2. '<|end|>' → logprob: -2.0898547172546387
    3. '
' → logprob: -2.8398547172546387
    4. ')' → logprob: -5.839854717254639
    5. '        ' → logprob: -5.964854717254639
    6. '<|end|>' → logprob: -6.464854717254639
    7. '        
' → logprob: -6.964854717254639
    8. '\n' → logprob: -7.089854717254639
    9. '#' → logprob: -7.839854717254639
    10. 'newline' → logprob: -7.964854717254639

Token 251: ' antic' (ID: 83629)
  Prédit: 'antic'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antic' (adapté à ' antic') → logprob: -0.0032177609391510487
    2. 'counter' → logprob: -6.378217697143555
    3. ' antic' → logprob: -7.378217697143555
    4. '   ' → logprob: -7.628217697143555
    5. 'anti' → logprob: -8.378217697143555
    6. '       ' → logprob: -9.628217697143555
    7. 'ant' → logprob: -10.253217697143555
    8. 'c' → logprob: -10.753217697143555
    9. ' counter' → logprob: -11.253217697143555
    10. '#' → logprob: -11.503217697143555

Token 252: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.04859543219208717
    2. 'clock' → logprob: -3.048595428466797
    3. '_clock' → logprob: -12.798595428466797
    4. ' clockwise' → logprob: -13.548595428466797
    5. '
' → logprob: -13.673595428466797
    6. '   ' → logprob: -14.298595428466797
    7. '-clock' → logprob: -14.548595428466797
    8. 'locks' → logprob: -14.548595428466797
    9. 'cw' → logprob: -15.798595428466797
    10. '.clock' → logprob: -15.923595428466797

Token 253: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.11251044273376465
    2. 'lock' → logprob: -2.3625104427337646
    3. 'w' → logprob: -4.737510681152344
    4. 'clock' → logprob: -6.362510681152344
    5. 'l' → logprob: -7.362510681152344
    6. '   ' → logprob: -8.862510681152344
    7. '       ' → logprob: -8.862510681152344
    8. '```' → logprob: -9.237510681152344
    9. 'lo' → logprob: -9.987510681152344
    10. 'ws' → logprob: -10.112510681152344

Token 254: '_span' (ID: 90052)
  Prédit: '_span'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -0.009266754612326622
    2. ' _' → logprob: -5.1342668533325195
    3. '_' → logprob: -5.7592668533325195
    4. ' =' → logprob: -9.13426685333252
    5. '_wrap' → logprob: -10.75926685333252
    6. '_sp' → logprob: -11.75926685333252
    7. '=_' → logprob: -12.13426685333252
    8. 'span' → logprob: -12.25926685333252
    9. '
' → logprob: -12.25926685333252
    10. '_diff' → logprob: -12.50926685333252

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017025562701746821
    2. '=' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.251702308654785
    4. ' =
' → logprob: -16.6267032623291
    5. ' =(' → logprob: -16.7517032623291
    6. ')' → logprob: -18.2517032623291
    7. 's' → logprob: -18.5017032623291
    8. ',' → logprob: -18.5017032623291
    9. ':' → logprob: -18.7517032623291
    10. '<|end|>' → logprob: -18.7517032623291

Token 256: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5559886693954468
    2. '(' → logprob: -1.0559886693954468
    3. ' (' → logprob: -2.6809887886047363
    4. '(self' → logprob: -5.430988788604736
    5. '(c' → logprob: -5.680988788604736
    6. '100' → logprob: -6.805988788604736
    7. '(clock' → logprob: -8.305988311767578
    8. '(min' → logprob: -8.430988311767578
    9. '((' → logprob: -9.055988311767578
    10. '(C' → logprob: -9.180988311767578

Token 257: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0888327956199646
    2. 'left' → logprob: -2.5888328552246094
    3. ' (' → logprob: -6.213832855224609
    4. 'self' → logprob: -6.338832855224609
    5. ' N' → logprob: -6.338832855224609
    6. '(N' → logprob: -6.463832855224609
    7. '(left' → logprob: -6.963832855224609
    8. '(' → logprob: -7.463832855224609
    9. ' left' → logprob: -7.838832855224609
    10. '
' → logprob: -8.58883285522461

Token 258: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5319343209266663
    2. ' -' → logprob: -1.2819342613220215
    3. '*' → logprob: -2.0319342613220215
    4. '-' → logprob: -5.6569342613220215
    5. ' ' → logprob: -8.40693473815918
    6. ')' → logprob: -8.65693473815918
    7. '<|end|>' → logprob: -10.65693473815918
    8. '100' → logprob: -11.40693473815918
    9. ')*' → logprob: -12.40693473815918
    10. '  ' → logprob: -12.53193473815918

Token 259: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.5266171097755432
    2. ' (' → logprob: -0.9016171097755432
    3. 'right' → logprob: -6.901617050170898
    4. ')' → logprob: -7.401617050170898
    5. ' ' → logprob: -7.526617050170898
    6. '   ' → logprob: -7.651617050170898
    7. '(r' → logprob: -8.651617050170898
    8. ' right' → logprob: -8.901617050170898
    9. '(' → logprob: -8.901617050170898
    10. '  ' → logprob: -9.151617050170898

Token 260: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001657565007917583
    2. ' right' → logprob: -8.750165939331055
    3. '(right' → logprob: -12.375165939331055
    4. '   ' → logprob: -13.125165939331055
    5. '	right' → logprob: -14.875165939331055
    6. '[right' → logprob: -15.500165939331055
    7. ' ' → logprob: -15.625165939331055
    8. ')' → logprob: -16.125165939331055
    9. '  ' → logprob: -16.625165939331055
    10. ' (' → logprob: -17.625165939331055

Token 261: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0005586316110566258
    2. 'right' → logprob: -7.500558853149414
    3. 'left' → logprob: -12.500558853149414
    4. '<|end|>' → logprob: -14.875558853149414
    5. ' most' → logprob: -15.000558853149414
    6. 'max' → logprob: -15.625558853149414
    7. ')' → logprob: -15.625558853149414
    8. 'Most' → logprob: -15.625558853149414
    9. '...' → logprob: -16.250558853149414
    10. 'more' → logprob: -16.375558853149414

Token 262: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025739942211657763
    2. '-' → logprob: -6.0025739669799805
    3. ' ' → logprob: -9.25257396697998
    4. ' -
' → logprob: -13.37757396697998
    5. '   ' → logprob: -15.50257396697998
    6. ')' → logprob: -15.62757396697998
    7. ' ' → logprob: -16.002574920654297
    8. '<|end|>' → logprob: -16.377574920654297
    9. '  ' → logprob: -16.502574920654297
    10. ' -

' → logprob: -16.627574920654297

Token 263: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08909214287996292
    2. ' left' → logprob: -2.464092254638672
    3. '	left' → logprob: -9.589092254638672
    4. '   ' → logprob: -10.214092254638672
    5. ' ' → logprob: -10.714092254638672
    6. 'right' → logprob: -11.464092254638672
    7. '[left' → logprob: -12.214092254638672
    8. '       ' → logprob: -12.839092254638672
    9. '  ' → logprob: -13.339092254638672
    10. '(left' → logprob: -13.464092254638672

Token 264: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -4.787507714354433e-05
    2. 'right' → logprob: -10.00004768371582
    3. 'ost' → logprob: -13.87504768371582
    4. ')' → logprob: -14.62504768371582
    5. 'left' → logprob: -15.50004768371582
    6. 'Most' → logprob: -16.12504768371582
    7. 'more' → logprob: -16.25004768371582
    8. '   ' → logprob: -16.37504768371582
    9. '```' → logprob: -16.37504768371582
    10. ' most' → logprob: -16.62504768371582

Token 265: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010492238216102123
    2. '))' → logprob: -4.635492324829102
    3. ' )' → logprob: -7.260492324829102
    4. ' ))' → logprob: -10.635492324829102
    5. '   ' → logprob: -12.260492324829102
    6. ')*' → logprob: -12.885492324829102
    7. '       ' → logprob: -15.010492324829102
    8. ')
' → logprob: -15.260492324829102
    9. '    ' → logprob: -15.385492324829102
    10. ' ' → logprob: -15.510492324829102

Token 266: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004969512578099966
    2. '*' → logprob: -5.379969596862793
    3. ' ' → logprob: -8.004969596862793
    4. ')' → logprob: -11.879969596862793
    5. ' ' → logprob: -12.004969596862793
    6. '100' → logprob: -13.754969596862793
    7. '   ' → logprob: -14.879969596862793
    8. ' )' → logprob: -15.254969596862793
    9. '    ' → logprob: -15.379969596862793
    10. '```' → logprob: -15.504969596862793

Token 267: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1426779329776764
    2. ' ' → logprob: -2.0176780223846436
    3. ' ' → logprob: -13.642678260803223
    4. ' 
' → logprob: -14.767678260803223
    5. '```' → logprob: -15.517678260803223
    6. '
' → logprob: -15.705178260803223
    7. '  ' → logprob: -15.767678260803223
    8. '   ' → logprob: -16.017677307128906
    9. '`' → logprob: -16.392677307128906
    10. '10' → logprob: -16.517677307128906

Token 268: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -18.00002098083496
    4. '```' → logprob: -18.00002098083496
    5. '1' → logprob: -18.25002098083496
    6. '   ' → logprob: -18.37502098083496
    7. '１００' → logprob: -18.62502098083496
    8. '10' → logprob: -18.75002098083496
    9. '  ' → logprob: -19.00002098083496
    10. '0' → logprob: -20.37502098083496

Token 269: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32175594568252563
    2. '
' → logprob: -1.9467558860778809
    3. '<|end|>' → logprob: -2.071755886077881
    4. '<|end|>' → logprob: -5.571755886077881
    5. '        
' → logprob: -6.446755886077881
    6. '#' → logprob: -7.821755886077881
    7. ')' → logprob: -8.696756362915039
    8. '   ' → logprob: -9.696756362915039
    9. 'return' → logprob: -9.821756362915039
    10. '

' → logprob: -9.946756362915039

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008570718578994274
    2. '
' → logprob: -5.383570671081543
    3. '        
' → logprob: -5.883570671081543
    4. '#' → logprob: -8.133570671081543
    5. '   ' → logprob: -8.383570671081543
    6. 'left' → logprob: -9.008570671081543
    7. '    
' → logprob: -9.008570671081543
    8. 'return' → logprob: -9.758570671081543
    9. '<|end|>' → logprob: -9.883570671081543
    10. '```' → logprob: -10.508570671081543

Token 271: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8045008182525635
    2. '       ' → logprob: -1.1795008182525635
    3. 'c' → logprob: -1.5545008182525635
    4. 'for' → logprob: -4.054500579833984
    5. 'start' → logprob: -4.929500579833984
    6. 'if' → logprob: -5.429500579833984
    7. 'cost' → logprob: -7.179500579833984
    8. 'left' → logprob: -7.304500579833984
    9. 'return' → logprob: -7.554500579833984
    10. 'from' → logprob: -7.804500579833984

Token 272: ' Compute' (ID: 45438)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3739071786403656
    2. 'c' → logprob: -1.373907208442688
    3. 'for' → logprob: -3.7489070892333984
    4. 'cost' → logprob: -4.373907089233398
    5. 'start' → logprob: -5.248907089233398
    6. 'if' → logprob: -5.623907089233398
    7. '       ' → logprob: -5.873907089233398
    8. 'return' → logprob: -6.248907089233398
    9. 'min' → logprob: -6.623907089233398
    10. 'left' → logprob: -6.748907089233398

Token 273: ' cost' (ID: 3097)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.089875340461731
    2. 'c' → logprob: -1.339875340461731
    3. 'cost' → logprob: -2.2148752212524414
    4. 'for' → logprob: -2.4648752212524414
    5. ' for' → logprob: -3.3398752212524414
    6. ' candidates' → logprob: -3.4648752212524414
    7. '       ' → logprob: -3.4648752212524414
    8. ' clockwise' → logprob: -3.9648752212524414
    9. 'min' → logprob: -4.214875221252441
    10. ' cost' → logprob: -4.714875221252441

Token 274: ' visiting' (ID: 18798)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05580322444438934
    2. ' for' → logprob: -3.6808032989501953
    3. ' =' → logprob: -4.180803298950195
    4. 'for' → logprob: -5.555803298950195
    5. '=' → logprob: -5.930803298950195
    6. '        ' → logprob: -6.180803298950195
    7. ' to' → logprob: -7.055803298950195
    8. ' clockwise' → logprob: -7.430803298950195
    9. ',' → logprob: -7.555803298950195
    10. '(clock' → logprob: -8.055803298950195

Token 275: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.31727728247642517
    2. 'left' → logprob: -1.9422773122787476
    3. 'the' → logprob: -3.067277193069458
    4. 'c' → logprob: -3.192277193069458
    5. 'right' → logprob: -4.567277431488037
    6. '#' → logprob: -5.067277431488037
    7. 'shopping' → logprob: -5.317277431488037
    8. 'stations' → logprob: -5.317277431488037
    9. ' all' → logprob: -5.567277431488037
    10. 'both' → logprob: -6.192277431488037

Token 276: ' shopping' (ID: 11606)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.5020723342895508
    2. 'stations' → logprob: -1.8770723342895508
    3. ' shopping' → logprob: -2.002072334289551
    4. 'shopping' → logprob: -2.627072334289551
    5. 'c' → logprob: -4.002072334289551
    6. ' candidates' → logprob: -4.627072334289551
    7. ' left' → logprob: -6.002072334289551
    8. 'left' → logprob: -6.877072334289551
    9. '   ' → logprob: -8.12707233428955
    10. '       ' → logprob: -8.37707233428955

Token 277: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.09302477538585663
    2. ' stations' → logprob: -2.593024730682373
    3. '_st' → logprob: -4.468024730682373
    4. '_' → logprob: -7.593024730682373
    5. '<|end|>' → logprob: -8.093025207519531
    6. '_station' → logprob: -8.218025207519531
    7. 'st' → logprob: -8.593025207519531
    8. '   ' → logprob: -8.843025207519531
    9. '```' → logprob: -8.843025207519531
    10. 's' → logprob: -8.843025207519531

Token 278: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021032162010669708
    2. ' and' → logprob: -5.146032333374023
    3. ' in' → logprob: -5.521032333374023
    4. 'from' → logprob: -5.896032333374023
    5. ',' → logprob: -6.021032333374023
    6. 'and' → logprob: -6.396032333374023
    7. 'in' → logprob: -6.646032333374023
    8. ' clockwise' → logprob: -7.646032333374023
    9. ' from' → logprob: -8.021032333374023
    10. '#' → logprob: -8.146032333374023

Token 279: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6948126554489136
    2. 'the' → logprob: -0.9448126554489136
    3. ' one' → logprob: -2.944812774658203
    4. 'one' → logprob: -4.069812774658203
    5. ' either' → logprob: -4.444812774658203
    6. 'either' → logprob: -5.194812774658203
    7. ' stations' → logprob: -5.319812774658203
    8. ' clockwise' → logprob: -5.694812774658203
    9. 'all' → logprob: -5.944812774658203
    10. 'both' → logprob: -6.194812774658203

Token 280: ' shortest' (ID: 70564)
  Prédit: ' ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ring' → logprob: -0.3280055522918701
    2. 'ring' → logprob: -1.7030055522918701
    3. 'right' → logprob: -3.57800555229187
    4. 'left' → logprob: -3.95300555229187
    5. ' same' → logprob: -4.578005790710449
    6. ' left' → logprob: -4.578005790710449
    7. 'same' → logprob: -5.078005790710449
    8. 'rail' → logprob: -5.203005790710449
    9. ' right' → logprob: -5.328005790710449
    10. 'clock' → logprob: -6.078005790710449

Token 281: ' segment' (ID: 14806)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.11799747496843338
    2. 'path' → logprob: -2.742997407913208
    3. ' ring' → logprob: -4.367997646331787
    4. ' route' → logprob: -4.492997646331787
    5. ' side' → logprob: -5.492997646331787
    6. ' clockwise' → logprob: -5.617997646331787
    7. 'distance' → logprob: -6.367997646331787
    8. 'route' → logprob: -6.367997646331787
    9. '_path' → logprob: -6.492997646331787
    10. ' segment' → logprob: -6.742997646331787

Token 282: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026176320388913155
    2. ',' → logprob: -7.252617835998535
    3. ' for' → logprob: -8.127617835998535
    4. ' between' → logprob: -8.377617835998535
    5. 'from' → logprob: -8.752617835998535
    6. ' and' → logprob: -8.752617835998535
    7. ' of' → logprob: -8.752617835998535
    8. 'for' → logprob: -8.877617835998535
    9. 'between' → logprob: -9.252617835998535
    10. '        
' → logprob: -9.502617835998535

Token 283: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5974496603012085
    2. ' the' → logprob: -0.8474496603012085
    3. ' stations' → logprob: -4.597449779510498
    4. 'stations' → logprob: -5.597449779510498
    5. 'ring' → logprob: -6.347449779510498
    6. ' ring' → logprob: -6.722449779510498
    7. '   ' → logprob: -6.722449779510498
    8. ' code' → logprob: -6.847449779510498
    9. 'rail' → logprob: -7.472449779510498
    10. 'code' → logprob: -7.472449779510498

Token 284: ' ring' (ID: 12796)
  Prédit: 'ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ring' → logprob: -0.6543468832969666
    2. ' ring' → logprob: -1.0293469429016113
    3. 'rail' → logprob: -2.1543469429016113
    4. ' rail' → logprob: -5.779346942901611
    5. 'circle' → logprob: -6.029346942901611
    6. ' circle' → logprob: -8.154346466064453
    7. 'station' → logprob: -8.654346466064453
    8. '   ' → logprob: -9.154346466064453
    9. 'line' → logprob: -9.279346466064453
    10. 'rails' → logprob: -9.654346466064453

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03551401570439339
    2. '<|end|>' → logprob: -3.5355141162872314
    3. '
' → logprob: -6.160513877868652
    4. '        
' → logprob: -6.785513877868652
    5. '<|end|>' → logprob: -7.035513877868652
    6. '#' → logprob: -7.660513877868652
    7. ',' → logprob: -7.660513877868652
    8. '        ' → logprob: -8.410513877868652
    9. ')' → logprob: -9.285513877868652
    10. '.' → logprob: -9.785513877868652

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008180848672054708
    2. '        
' → logprob: -8.750818252563477
    3. ',' → logprob: -8.875818252563477
    4. '        ' → logprob: -9.000818252563477
    5. '<|end|>' → logprob: -9.375818252563477
    6. '#' → logprob: -9.875818252563477
    7. ' for' → logprob: -10.000818252563477
    8. '   ' → logprob: -10.250818252563477
    9. ' return' → logprob: -10.875818252563477
    10. ' if' → logprob: -11.000818252563477

Token 287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6140878796577454
    2. 'c' → logprob: -1.3640878200531006
    3. 'for' → logprob: -2.6140878200531006
    4. ' for' → logprob: -3.6140878200531006
    5. 'if' → logprob: -4.11408805847168
    6. '#' (adapté à ' #') → logprob: -4.23908805847168
    7. ' if' → logprob: -4.23908805847168
    8. ' candidates' → logprob: -4.61408805847168
    9. 'start' → logprob: -4.86408805847168
    10. 'left' → logprob: -4.98908805847168

Token 288: ' Case' (ID: 18964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5264713168144226
    2. '#' → logprob: -2.4014713764190674
    3. ' for' → logprob: -2.4014713764190674
    4. 'for' → logprob: -2.6514713764190674
    5. 'start' → logprob: -3.9014713764190674
    6. ' if' → logprob: -3.9014713764190674
    7. ' clockwise' → logprob: -4.026471138000488
    8. 'clock' → logprob: -4.151471138000488
    9. ' start' → logprob: -4.651471138000488
    10. 'from' → logprob: -4.901471138000488

Token 289: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06929607689380646
    2. '1' → logprob: -2.94429612159729
    3. ':' → logprob: -4.569295883178711
    4. ' "' → logprob: -6.444295883178711
    5. ' '' → logprob: -6.944295883178711
    6. ' :' → logprob: -7.569295883178711
    7. '   ' → logprob: -8.569295883178711
    8. '0' → logprob: -9.069295883178711
    9. '  ' → logprob: -9.069295883178711
    10. ' #' → logprob: -9.319295883178711

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3136315643787384
    2. ' ' → logprob: -1.688631534576416
    3. '"' → logprob: -3.813631534576416
    4. '0' → logprob: -4.063631534576416
    5. 'left' → logprob: -4.563631534576416
    6. '#' → logprob: -4.938631534576416
    7. ' "' → logprob: -5.313631534576416
    8. 'for' → logprob: -5.563631534576416
    9. ':' → logprob: -5.563631534576416
    10. ''' → logprob: -6.063631534576416

Token 291: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10731686651706696
    2. '       ' → logprob: -2.3573169708251953
    3. ' :' → logprob: -5.607316970825195
    4. ' clockwise' → logprob: -6.982316970825195
    5. ' =' → logprob: -7.607316970825195
    6. '#' → logprob: -7.607316970825195
    7. ',' → logprob: -8.232316970825195
    8. ' if' → logprob: -8.482316970825195
    9. '        ' → logprob: -8.482316970825195
    10. ' #' → logprob: -8.607316970825195

Token 292: ' go' (ID: 810)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8598816990852356
    2. 'cost' → logprob: -0.8598816990852356
    3. 'c' → logprob: -3.109881639480591
    4. '       ' → logprob: -3.859881639480591
    5. ' cost' → logprob: -3.859881639480591
    6. 'start' → logprob: -3.984881639480591
    7. 'if' → logprob: -4.73488187789917
    8. ' #' → logprob: -5.10988187789917
    9. 'left' → logprob: -5.73488187789917
    10. '   ' → logprob: -5.85988187789917

Token 293: ' from' (ID: 591)
  Prédit: ' clockwise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clockwise' → logprob: -0.36083269119262695
    2. ' from' → logprob: -1.485832691192627
    3. 'from' → logprob: -3.235832691192627
    4. '_clock' → logprob: -4.735832691192627
    5. ' right' → logprob: -4.985832691192627
    6. ' left' → logprob: -5.235832691192627
    7. ' ' → logprob: -5.860832691192627
    8. 'right' → logprob: -6.110832691192627
    9. 'left' → logprob: -6.110832691192627
    10. ' straight' → logprob: -6.610832691192627

Token 294: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39124590158462524
    2. ' self' → logprob: -1.2662458419799805
    3. 'left' → logprob: -3.5162458419799805
    4. ' left' → logprob: -4.5162458419799805
    5. 'right' → logprob: -7.0162458419799805
    6. ' right' → logprob: -8.64124584197998
    7. ' the' → logprob: -10.14124584197998
    8. '   ' → logprob: -10.51624584197998
    9. '    ' → logprob: -10.89124584197998
    10. '       ' → logprob: -10.89124584197998

Token 295: ' to' (ID: 316)
  Prédit: '_station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.006653445772826672
    2. '.station' → logprob: -5.881653308868408
    3. ' to' → logprob: -6.131653308868408
    4. '.' → logprob: -8.131653785705566
    5. '   ' → logprob: -8.256653785705566
    6. '       ' → logprob: -8.506653785705566
    7. ' .' → logprob: -8.881653785705566
    8. '.index' → logprob: -9.006653785705566
    9. 'Station' → logprob: -9.131653785705566
    10. 'station' → logprob: -9.256653785705566

Token 296: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.37036022543907166
    2. ' left' → logprob: -1.620360255241394
    3. 'right' → logprob: -2.6203601360321045
    4. ' right' → logprob: -3.8703601360321045
    5. ' shopping' → logprob: -4.870360374450684
    6. ' the' → logprob: -5.495360374450684
    7. 'shopping' → logprob: -6.495360374450684
    8. 'min' → logprob: -6.620360374450684
    9. 'the' → logprob: -6.870360374450684
    10. 'self' → logprob: -7.120360374450684

Token 297: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -1.981667537620524e-06
    2. 'm' → logprob: -14.000001907348633
    3. 'more' → logprob: -15.000001907348633
    4. '-' → logprob: -15.875001907348633
    5. 'mo' → logprob: -15.875001907348633
    6. '_m' → logprob: -16.500001907348633
    7. ' most' → logprob: -16.500001907348633
    8. 'right' → logprob: -16.875001907348633
    9. 'Most' → logprob: -17.000001907348633
    10. 'mor' → logprob: -17.125001907348633

Token 298: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4889223277568817
    2. '       ' → logprob: -1.738922357559204
    3. ' and' → logprob: -2.488922357559204
    4. ',' → logprob: -2.988922357559204
    5. '+' → logprob: -3.738922357559204
    6. '_station' → logprob: -3.988922357559204
    7. ' if' → logprob: -4.988922119140625
    8. ')' → logprob: -5.488922119140625
    9. '   ' → logprob: -5.488922119140625
    10. ' station' → logprob: -5.988922119140625

Token 299: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.09343397617340088
    2. 'then' → logprob: -2.4684338569641113
    3. 'right' → logprob: -6.218433856964111
    4. ' and' → logprob: -7.343433856964111
    5. ' right' → logprob: -7.468433856964111
    6. ' clockwise' → logprob: -8.71843433380127
    7. 'left' → logprob: -8.96843433380127
    8. ')' → logprob: -9.09343433380127
    9. 'and' → logprob: -9.34343433380127
    10. '<|end|>' → logprob: -9.59343433380127

Token 300: ' right' (ID: 1849)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5042280554771423
    2. 'to' → logprob: -2.004228115081787
    3. ' right' → logprob: -2.129228115081787
    4. 'right' → logprob: -2.754228115081787
    5. ' move' → logprob: -4.254228115081787
    6. ' go' → logprob: -4.254228115081787
    7. ' visit' → logprob: -4.754228115081787
    8. ' all' → logprob: -4.879228115081787
    9. ' shop' → logprob: -5.254228115081787
    10. ' station' → logprob: -5.754228115081787

Token 301: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0009936298010870814
    2. ')' → logprob: -8.125993728637695
    3. ',' → logprob: -9.250993728637695
    4. ' ' → logprob: -9.375993728637695
    5. ' +' → logprob: -9.500993728637695
    6. '       ' → logprob: -9.625993728637695
    7. ' -' → logprob: -9.875993728637695
    8. '   ' → logprob: -9.875993728637695
    9. '-' → logprob: -9.875993728637695
    10. '_station' → logprob: -10.250993728637695

Token 302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.475161612033844
    2. ' +' → logprob: -1.4751615524291992
    3. ',' → logprob: -2.475161552429199
    4. '+' → logprob: -3.725161552429199
    5. '
' → logprob: -3.975161552429199
    6. ')' → logprob: -5.350161552429199
    7. ' and' → logprob: -5.600161552429199
    8. ' if' → logprob: -5.975161552429199
    9. '   ' → logprob: -6.100161552429199
    10. ' -' → logprob: -6.600161552429199

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003558423195499927
    2. ',' → logprob: -9.00035572052002
    3. '        
' → logprob: -9.12535572052002
    4. '        ' → logprob: -10.62535572052002
    5. '   ' → logprob: -10.87535572052002
    6. ')' → logprob: -10.87535572052002
    7. '
' → logprob: -11.75035572052002
    8. '#' → logprob: -11.75035572052002
    9. '      ' → logprob: -12.00035572052002
    10. '<|end|>' → logprob: -12.25035572052002

Token 304: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0359230563044548
    2. '
' → logprob: -4.160923004150391
    3. ' start' → logprob: -4.785923004150391
    4. ' if' → logprob: -5.660923004150391
    5. 'start' → logprob: -6.160923004150391
    6. ' cost' → logprob: -6.660923004150391
    7. '        
' → logprob: -7.035923004150391
    8. ' left' → logprob: -7.535923004150391
    9. 'cost' (adapté à ' cost') → logprob: -7.785923004150391
    10. 'left' → logprob: -7.910923004150391

Token 305: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8145307302474976
    2. '1' → logprob: -1.5645307302474976
    3. '_clock' → logprob: -1.6895307302474976
    4. '_' → logprob: -2.439530849456787
    5. '_from' → logprob: -3.314530849456787
    6. '_start' → logprob: -3.814530849456787
    7. '_to' → logprob: -5.439530849456787
    8. '_c' → logprob: -5.689530849456787
    9. '=' → logprob: -6.064530849456787
    10. '_case' → logprob: -6.064530849456787

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017044597771018744
    2. '=' → logprob: -6.376704692840576
    3. ' ' → logprob: -13.251704216003418
    4. '_' → logprob: -16.001705169677734
    5. ' +=' → logprob: -16.251705169677734
    6. '_space' → logprob: -16.626705169677734
    7. '1' → logprob: -16.751705169677734
    8. ' ' → logprob: -16.751705169677734
    9. ' =
' → logprob: -17.376705169677734
    10. ' =(' → logprob: -18.501705169677734

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12516865134239197
    2. 'min' → logprob: -3.125168561935425
    3. ' self' → logprob: -3.250168561935425
    4. 'abs' → logprob: -4.250168800354004
    5. '100' → logprob: -5.000168800354004
    6. '0' → logprob: -5.875168800354004
    7. ' min' → logprob: -5.875168800354004
    8. ' abs' → logprob: -6.125168800354004
    9. '   ' → logprob: -6.250168800354004
    10. '(self' → logprob: -6.625168800354004

Token 308: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.186122770188376e-05
    2. ' .' → logprob: -9.375091552734375
    3. '.compute' → logprob: -14.000091552734375
    4. '._' → logprob: -14.125091552734375
    5. '.calculate' → logprob: -14.500091552734375
    6. '.cost' → logprob: -14.625091552734375
    7. '.r' → logprob: -14.750091552734375
    8. '.shopping' → logprob: -15.000091552734375
    9. 'rail' → logprob: -15.125091552734375
    10. '.start' → logprob: -15.250091552734375

Token 309: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.005512165371328592
    2. 'distance' → logprob: -5.380512237548828
    3. 'compute' → logprob: -7.255512237548828
    4. 'start' → logprob: -10.130512237548828
    5. ' rail' → logprob: -10.380512237548828
    6. '   ' → logprob: -10.630512237548828
    7. ' ' → logprob: -11.505512237548828
    8. 'rails' → logprob: -11.630512237548828
    9. 'ra' → logprob: -12.005512237548828
    10. '  ' → logprob: -12.130512237548828

Token 310: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -6.182190554682165e-05
    2. 'ring' → logprob: -10.000061988830566
    3. 'Ring' → logprob: -11.875061988830566
    4. '_r' → logprob: -13.000061988830566
    5. '_RING' → logprob: -13.375061988830566
    6. '   ' → logprob: -13.875061988830566
    7. '       ' → logprob: -13.875061988830566
    8. '-ring' → logprob: -14.375061988830566
    9. '           ' → logprob: -15.125061988830566
    10. '_' → logprob: -15.250061988830566

Token 311: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00015359772078227252
    2. '.' → logprob: -8.875153541564941
    3. ' .' → logprob: -12.000153541564941
    4. '.cost' → logprob: -13.000153541564941
    5. '.dist' → logprob: -13.000153541564941
    6. 'distance' → logprob: -13.625153541564941
    7. '.calculate' → logprob: -15.500153541564941
    8. '.Distance' → logprob: -15.875153541564941
    9. '.position' → logprob: -16.250154495239258
    10. ').' → logprob: -16.250154495239258

Token 312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.000340461730957
    3. '(
' → logprob: -12.875340461730957
    4. 'self' → logprob: -13.625340461730957
    5. '(from' → logprob: -14.500340461730957
    6. ' (' → logprob: -15.375340461730957
    7. '(this' → logprob: -17.00033950805664
    8. ' self' → logprob: -17.62533950805664
    9. '((' → logprob: -18.00033950805664
    10. '(to' → logprob: -18.37533950805664

Token 313: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0003956416912842542
    2. '.' → logprob: -8.000395774841309
    3. ' .' → logprob: -9.875395774841309
    4. 'start' → logprob: -12.250395774841309
    5. '   ' → logprob: -14.000395774841309
    6. ' start' → logprob: -14.375395774841309
    7. '	start' → logprob: -14.625395774841309
    8. '.station' → logprob: -15.000395774841309
    9. ',start' → logprob: -15.250395774841309
    10. ' ' → logprob: -15.375395774841309

Token 314: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.0001415618316968903
    2. '._' → logprob: -9.625141143798828
    3. 'Station' → logprob: -9.875141143798828
    4. 'station' → logprob: -12.625141143798828
    5. '.station' → logprob: -12.625141143798828
    6. ')' → logprob: -12.750141143798828
    7. '```' → logprob: -13.000141143798828
    8. ',' → logprob: -13.625141143798828
    9. '.' → logprob: -13.625141143798828
    10. '`' → logprob: -13.875141143798828

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004113692557439208
    2. ' ,' → logprob: -8.625411033630371
    3. ',
' → logprob: -9.125411033630371
    4. ')' → logprob: -9.500411033630371
    5. '),' → logprob: -11.250411033630371
    6. ',

' → logprob: -11.750411033630371
    7. ',left' → logprob: -11.750411033630371
    8. 'Station' → logprob: -12.125411033630371
    9. '<|end|>' → logprob: -12.250411033630371
    10. ',next' → logprob: -13.625411033630371

Token 316: ' Station' (ID: 20902)
  Prédit: 'Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.021195925772190094
    2. ' Station' → logprob: -3.896195888519287
    3. 'all' → logprob: -7.771195888519287
    4. '   ' → logprob: -8.521196365356445
    5. '       ' → logprob: -12.021196365356445
    6. 'self' → logprob: -12.396196365356445
    7. '    ' → logprob: -12.646196365356445
    8. 'left' → logprob: -12.771196365356445
    9. ' ' → logprob: -13.021196365356445
    10. '  ' → logprob: -13.396196365356445

Token 317: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0010507925180718303
    2. '(' → logprob: -7.50105094909668
    3. 'left' → logprob: -7.87605094909668
    4. '(
' → logprob: -10.12605094909668
    5. ')' → logprob: -10.75105094909668
    6. ' (' → logprob: -10.87605094909668
    7. ' left' → logprob: -11.00105094909668
    8. '(right' → logprob: -11.87605094909668
    9. '[left' → logprob: -12.25105094909668
    10. ')(' → logprob: -12.87605094909668

Token 318: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0002920830447692424
    2. 'left' → logprob: -8.37529182434082
    3. 'right' → logprob: -9.75029182434082
    4. 'more' → logprob: -13.87529182434082
    5. ')' → logprob: -14.12529182434082
    6. '   ' → logprob: -15.00029182434082
    7. 'max' → logprob: -16.00029182434082
    8. 'middle' → logprob: -16.00029182434082
    9. ' most' → logprob: -16.25029182434082
    10. ' ' → logprob: -16.50029182434082

Token 319: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015126005746424198
    2. '))
' → logprob: -7.25151252746582
    3. ' ))' → logprob: -7.62651252746582
    4. ')' → logprob: -8.62651252746582
    5. '))+' → logprob: -9.87651252746582
    6. '       ' → logprob: -10.12651252746582
    7. '))*' → logprob: -11.37651252746582
    8. '   ' → logprob: -11.75151252746582
    9. '))

' → logprob: -12.37651252746582
    10. '),' → logprob: -12.87651252746582

Token 320: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.013418085873126984
    2. '+' → logprob: -4.388418197631836
    3. '       ' → logprob: -7.263418197631836
    4. ')' → logprob: -9.763418197631836
    5. '        ' → logprob: -10.013418197631836
    6. ' ' → logprob: -10.513418197631836
    7. '
' → logprob: -10.763418197631836
    8. ' +
' → logprob: -10.763418197631836
    9. '   ' → logprob: -11.763418197631836
    10. ')+' → logprob: -12.263418197631836

Token 321: ' clockwise' (ID: 141888)
  Prédit: '(clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(clock' → logprob: -1.2000588178634644
    2. ' clockwise' → logprob: -1.3250588178634644
    3. 'self' → logprob: -2.075058937072754
    4. 'clock' → logprob: -2.450058937072754
    5. ' (' → logprob: -2.700058937072754
    6. '(self' → logprob: -2.700058937072754
    7. '   ' → logprob: -3.200058937072754
    8. ' self' → logprob: -3.700058937072754
    9. '       ' → logprob: -4.950058937072754
    10. '(right' → logprob: -5.700058937072754

Token 322: '_span' (ID: 90052)
  Prédit: '_span'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -8.578184497309849e-05
    2. 'span' → logprob: -10.500085830688477
    3. '*' → logprob: -10.750085830688477
    4. '   ' → logprob: -12.000085830688477
    5. '
' → logprob: -12.125085830688477
    6. ' *' → logprob: -12.375085830688477
    7. '_' → logprob: -12.625085830688477
    8. '*(' → logprob: -12.750085830688477
    9. '<span' → logprob: -13.125085830688477
    10. '*_' → logprob: -13.375085830688477

Token 323: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13449175655841827
    2. '+' → logprob: -2.2594916820526123
    3. '       ' → logprob: -3.8844916820526123
    4. '<|end|>' → logprob: -7.884491920471191
    5. ' +
' → logprob: -8.634491920471191
    6. '
' → logprob: -9.634491920471191
    7. '        ' → logprob: -10.134491920471191
    8. '+
' → logprob: -10.259491920471191
    9. ')' → logprob: -10.259491920471191
    10. '   ' → logprob: -10.759491920471191

Token 324: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011557615362107754
    2. '+
' → logprob: -4.886557579040527
    3. '
' → logprob: -7.136557579040527
    4. '+' → logprob: -7.136557579040527
    5. '\n' → logprob: -7.386557579040527
    6. 'cost' → logprob: -7.886557579040527
    7. 'c' → logprob: -8.136557579040527
    8. ',
' → logprob: -8.761557579040527
    9. '    
' → logprob: -8.886557579040527
    10. ')
' → logprob: -9.261557579040527

Token 325: ' candidates' (ID: 18116)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17104186117649078
    2. 'cost' → logprob: -2.796041965484619
    3. '       ' → logprob: -3.171041965484619
    4. 'c' → logprob: -3.671041965484619
    5. ' candidates' → logprob: -4.796041965484619
    6. '   ' → logprob: -5.546041965484619
    7. 'return' → logprob: -6.046041965484619
    8. '\n' → logprob: -6.171041965484619
    9. '        
' → logprob: -6.421041965484619
    10. ')' → logprob: -6.421041965484619

Token 326: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10022274404764175
    2. '.' → logprob: -2.3502228260040283
    3. ' .' → logprob: -11.72522258758545
    4. '.extend' → logprob: -11.97522258758545
    5. '.app' → logprob: -14.60022258758545
    6. '.ap' → logprob: -14.97522258758545
    7. '.push' → logprob: -15.35022258758545
    8. '.add' → logprob: -15.60022258758545
    9. '.=' → logprob: -15.72522258758545
    10. ').' → logprob: -16.100223541259766

Token 327: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0002067588793579489
    2. '(' → logprob: -8.50020694732666
    3. ' (' → logprob: -12.75020694732666
    4. '(
' → logprob: -15.75020694732666
    5. 'cost' → logprob: -15.75020694732666
    6. '(cap' → logprob: -16.750205993652344
    7. '((' → logprob: -17.000205993652344
    8. '(c' → logprob: -17.125205993652344
    9. ' cost' → logprob: -18.000205993652344
    10. '(price' → logprob: -18.125205993652344

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -16.875
    3. ' ' → logprob: -17.375
    4. '2' → logprob: -18.625
    5. 's' → logprob: -19.0
    6. '_' → logprob: -19.125
    7. '   ' → logprob: -19.3125
    8. '```' → logprob: -19.5
    9. '[' → logprob: -19.9375
    10. '１' → logprob: -20.0

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.32523515378125e-05
    2. ')
' → logprob: -10.000062942504883
    3. ' )' → logprob: -11.375062942504883
    4. '       ' → logprob: -12.625062942504883
    5. '<|end|>' → logprob: -13.500062942504883
    6. ')

' → logprob: -14.500062942504883
    7. '   ' → logprob: -15.125062942504883
    8. '
' → logprob: -15.375062942504883
    9. ')#' → logprob: -15.750062942504883
    10. '),' → logprob: -16.250062942504883

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15982329845428467
    2. '
' → logprob: -2.034823417663574
    3. 'c' → logprob: -5.534823417663574
    4. '   ' → logprob: -5.659823417663574
    5. '    
' → logprob: -5.784823417663574
    6. '        
' → logprob: -5.784823417663574
    7. '  
' → logprob: -7.034823417663574
    8. ' 
' → logprob: -7.659823417663574
    9. '\n' → logprob: -8.034823417663574
    10. 'cost' → logprob: -8.034823417663574

Token 331: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027362818364053965
    2. '#' (adapté à ' #') → logprob: -6.3777360916137695
    3. 'cost' → logprob: -7.6277360916137695
    4. '   ' → logprob: -8.25273609161377
    5. 'c' → logprob: -8.75273609161377
    6. '
' → logprob: -10.37773609161377
    7. '        
' → logprob: -10.62773609161377
    8. '      ' → logprob: -11.25273609161377
    9. ' cost' → logprob: -11.50273609161377
    10. '        ' → logprob: -11.62773609161377

Token 332: ' Case' (ID: 18964)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7259888052940369
    2. '#' → logprob: -0.8509888052940369
    3. ' cost' → logprob: -3.1009888648986816
    4. '       ' → logprob: -3.4759888648986816
    5. ' #' → logprob: -4.850988864898682
    6. '   ' → logprob: -5.350988864898682
    7. 'case' → logprob: -8.225988388061523
    8. '
' → logprob: -8.725988388061523
    9. ' ' → logprob: -9.975988388061523
    10. 'Case' → logprob: -10.225988388061523

Token 333: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023529862985014915
    2. ' ' → logprob: -4.398530006408691
    3. '1' → logprob: -4.523530006408691
    4. ':' → logprob: -10.648530006408691
    5. '0' → logprob: -11.023530006408691
    6. '    ' → logprob: -11.836030006408691
    7. '=' → logprob: -11.836030006408691
    8. '```' → logprob: -12.023530006408691
    9. ' =' → logprob: -12.086030006408691
    10. ',' → logprob: -12.148530006408691

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005983781535178423
    2. ' ' → logprob: -5.130983829498291
    3. '1' → logprob: -10.005983352661133
    4. '
' → logprob: -12.630983352661133
    5. '```' → logprob: -13.505983352661133
    6. '#' → logprob: -13.630983352661133
    7. '   ' → logprob: -13.880983352661133
    8. '0' → logprob: -14.380983352661133
    9. 'cost' → logprob: -14.755983352661133
    10. '  ' → logprob: -15.005983352661133

Token 335: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0475100576877594
    2. ' =' → logprob: -3.1725101470947266
    3. ' :' → logprob: -6.047510147094727
    4. '=' → logprob: -6.172510147094727
    5. '   ' → logprob: -11.797510147094727
    6. ',' → logprob: -12.047510147094727
    7. ')' → logprob: -12.172510147094727
    8. '       ' → logprob: -12.297510147094727
    9. 'c' → logprob: -12.547510147094727
    10. '_' → logprob: -12.672510147094727

Token 336: ' go' (ID: 810)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.037231747061014175
    2. 'self' → logprob: -3.412231683731079
    3. ' cost' → logprob: -6.287231922149658
    4. '       ' → logprob: -7.037231922149658
    5. 'cost' → logprob: -7.537231922149658
    6. '        ' → logprob: -8.5372314453125
    7. '    ' → logprob: -10.5372314453125
    8. ' ' → logprob: -10.7872314453125
    9. '
' → logprob: -11.0372314453125
    10. '   ' → logprob: -11.2872314453125

Token 337: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.08969113975763321
    2. 'from' → logprob: -2.464691162109375
    3. ' ' → logprob: -7.839691162109375
    4. '_from' → logprob: -8.464691162109375
    5. '	from' → logprob: -10.214691162109375
    6. ' to' → logprob: -10.464691162109375
    7. ' self' → logprob: -10.589691162109375
    8. '.from' → logprob: -11.089691162109375
    9. '    ' → logprob: -12.089691162109375
    10. ' =' → logprob: -12.089691162109375

Token 338: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5232976675033569
    2. 'self' → logprob: -0.8982976675033569
    3. 'left' → logprob: -9.898297309875488
    4. 'start' → logprob: -10.523297309875488
    5. 'right' → logprob: -10.773297309875488
    6. '(self' → logprob: -10.898297309875488
    7. ' start' → logprob: -11.148297309875488
    8. ' right' → logprob: -11.273297309875488
    9. ' left' → logprob: -11.648297309875488
    10. ' ' → logprob: -11.773297309875488

Token 339: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.023369863629341125
    2. 'to' → logprob: -3.773369789123535
    3. '_to' → logprob: -10.023369789123535
    4. ' ' → logprob: -10.148369789123535
    5. ',' → logprob: -11.023369789123535
    6. '        ' → logprob: -11.898369789123535
    7. ' ' → logprob: -12.398369789123535
    8. '	to' → logprob: -12.898369789123535
    9. 'To' → logprob: -13.148369789123535
    10. ' ,' → logprob: -13.398369789123535

Token 340: ' right' (ID: 1849)
  Prédit: ' Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Station' → logprob: -0.04737898334860802
    2. 'Station' → logprob: -3.1723790168762207
    3. ' right' → logprob: -5.797379016876221
    4. 'right' → logprob: -6.672379016876221
    5. 'Right' → logprob: -10.297378540039062
    6. '   ' → logprob: -11.422378540039062
    7. ' ' → logprob: -11.797378540039062
    8. 'left' → logprob: -11.922378540039062
    9. ' left' → logprob: -12.547378540039062
    10. '    ' → logprob: -12.922378540039062

Token 341: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -3.070975071750581e-05
    2. '_station' → logprob: -10.875030517578125
    3. 'right' → logprob: -12.500030517578125
    4. 'left' → logprob: -12.875030517578125
    5. ')' → logprob: -13.125030517578125
    6. 'station' → logprob: -13.875030517578125
    7. 'Station' → logprob: -14.125030517578125
    8. '_m' → logprob: -15.125030517578125
    9. ' Station' → logprob: -15.375030517578125
    10. 'm' → logprob: -15.750030517578125

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022639709059149027
    2. ' +' → logprob: -6.377264022827148
    3. '       ' → logprob: -8.252264022827148
    4. ' ,' → logprob: -8.377264022827148
    5. '+' → logprob: -10.252264022827148
    6. 'cost' → logprob: -11.502264022827148
    7. ' cost' → logprob: -11.877264022827148
    8. ')' → logprob: -12.377264022827148
    9. '           ' → logprob: -12.502264022827148
    10. '        ' → logprob: -12.752264022827148

Token 343: ' then' (ID: 1815)
  Prédit: ' Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Station' → logprob: -0.12496046721935272
    2. ' then' → logprob: -2.249960422515869
    3. 'Station' → logprob: -4.874960422515869
    4. '        ' → logprob: -6.499960422515869
    5. 'then' → logprob: -7.124960422515869
    6. '    ' → logprob: -7.249960422515869
    7. ' plus' → logprob: -7.999960422515869
    8. ' followed' → logprob: -8.374960899353027
    9. ' and' → logprob: -8.624960899353027
    10. ' ' → logprob: -8.749960899353027

Token 344: ' left' (ID: 3561)
  Prédit: ' Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Station' → logprob: -0.0005119257839396596
    2. 'Station' → logprob: -7.75051212310791
    3. ' left' → logprob: -9.62551212310791
    4. 'left' → logprob: -11.62551212310791
    5. ' ' → logprob: -12.75051212310791
    6. '   ' → logprob: -14.25051212310791
    7. '    ' → logprob: -15.12551212310791
    8. '(' → logprob: -15.37551212310791
    9. 'Left' → logprob: -15.37551212310791
    10. ' Left' → logprob: -15.37551212310791

Token 345: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -4.320199877838604e-07
    2. 'right' → logprob: -16.5
    3. 'ost' → logprob: -16.625
    4. '-' → logprob: -16.75
    5. ')' → logprob: -17.875
    6. 'Most' → logprob: -18.0
    7. 'max' → logprob: -18.125
    8. ',' → logprob: -18.375
    9. '_' → logprob: -18.375
    10. '(' → logprob: -18.5

Token 346: ' going' (ID: 2966)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4300689697265625
    2. '       ' → logprob: -1.1800689697265625
    3. '        ' → logprob: -4.6800689697265625
    4. '+' → logprob: -4.8050689697265625
    5. '
' → logprob: -5.1800689697265625
    6. ')' → logprob: -5.1800689697265625
    7. 'cost' → logprob: -5.9300689697265625
    8. ',' → logprob: -6.0550689697265625
    9. '   ' → logprob: -6.3050689697265625
    10. ' cost' → logprob: -6.8050689697265625

Token 347: ' counter' (ID: 9446)
  Prédit: ' antic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' antic' → logprob: -0.7754160761833191
    2. 'antic' → logprob: -0.9004160761833191
    3. ' counter' → logprob: -2.775416135787964
    4. 'counter' → logprob: -2.900416135787964
    5. ' clockwise' → logprob: -4.900415897369385
    6. 'clock' → logprob: -5.900415897369385
    7. ' around' → logprob: -6.400415897369385
    8. 'anti' → logprob: -7.275415897369385
    9. 'around' → logprob: -7.400415897369385
    10. ' in' → logprob: -7.525415897369385

Token 348: 'clock' (ID: 34421)
  Prédit: 'clock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.029500514268875122
    2. '-clock' → logprob: -3.9045004844665527
    3. '_clock' → logprob: -4.904500484466553
    4. ' clockwise' → logprob: -7.029500484466553
    5. '       ' → logprob: -7.904500484466553
    6. '   ' → logprob: -9.029500961303711
    7. '-' → logprob: -9.529500961303711
    8. '```' → logprob: -11.154500961303711
    9. 'Clock' → logprob: -11.404500961303711
    10. '.clock' → logprob: -11.779500961303711

Token 349: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.03431610018014908
    2. 'ise' → logprob: -3.409316062927246
    3. 'clock' → logprob: -7.534316062927246
    4. 'lock' → logprob: -10.159316062927246
    5. '
' → logprob: -10.784316062927246
    6. '   ' → logprob: -11.534316062927246
    7. ' wise' → logprob: -11.659316062927246
    8. '```' → logprob: -11.659316062927246
    9. 'w' → logprob: -11.784316062927246
    10. '

' → logprob: -12.409316062927246

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13447320461273193
    2. '
' → logprob: -3.0094733238220215
    3. ',' → logprob: -3.6344733238220215
    4. ',
' → logprob: -4.3844733238220215
    5. 'cost' → logprob: -4.3844733238220215
    6. '   ' → logprob: -4.8844733238220215
    7. '        
' → logprob: -5.5094733238220215
    8. ' cost' → logprob: -5.7594733238220215
    9. ' 
' → logprob: -6.1344733238220215
    10. '        ' → logprob: -7.3844733238220215

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006285560317337513
    2. ',' → logprob: -6.506285667419434
    3. '```' → logprob: -6.756285667419434
    4. ')
' → logprob: -7.131285667419434
    5. ' cost' → logprob: -7.506285667419434
    6. 'cost' → logprob: -7.756285667419434
    7. '
' → logprob: -7.881285667419434
    8. ')' → logprob: -8.006285667419434
    9. '   ' → logprob: -8.381285667419434
    10. ',
' → logprob: -8.381285667419434

Token 352: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.1379394829273224
    2. '       ' → logprob: -2.637939453125
    3. 'cost' (adapté à ' cost') → logprob: -2.887939453125
    4. '```' → logprob: -8.012939453125
    5. '   ' → logprob: -8.262939453125
    6. '
' → logprob: -8.512939453125
    7. '        
' → logprob: -8.887939453125
    8. ' 
' → logprob: -9.200439453125
    9. '        ' → logprob: -9.512939453125
    10. '[
' → logprob: -9.575439453125

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -13.000008583068848
    3. ' =' → logprob: -13.000008583068848
    4. '=' → logprob: -13.125008583068848
    5. '_' → logprob: -14.000008583068848
    6. '1' → logprob: -15.000008583068848
    7. '
' → logprob: -15.750008583068848
    8. '₂' → logprob: -16.75000762939453
    9. '２' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.37500762939453

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00317783304490149
    2. '=' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.128177642822266
    4. ' ' → logprob: -18.628177642822266
    5. ' =
' → logprob: -18.753177642822266
    6. '=self' → logprob: -19.378177642822266
    7. ':' → logprob: -19.753177642822266
    8. '	' → logprob: -20.253177642822266
    9. ')' → logprob: -20.378177642822266
    10. ' +=' → logprob: -20.503177642822266

Token 355: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788988247513771
    2. ' self' → logprob: -2.5788989067077637
    3. '       ' → logprob: -12.328898429870605
    4. '   ' → logprob: -13.203898429870605
    5. '	self' → logprob: -13.953898429870605
    6. '(self' → logprob: -14.703898429870605
    7. ' ' → logprob: -14.828898429870605
    8. ' ' → logprob: -15.328898429870605
    9. '[self' → logprob: -15.703898429870605
    10. '           ' → logprob: -15.953898429870605

Token 356: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00043019242002628744
    2. ' .' → logprob: -8.8754301071167
    3. '._' → logprob: -9.1254301071167
    4. '_' → logprob: -9.3754301071167
    5. 'self' → logprob: -9.8754301071167
    6. 'rail' → logprob: -11.0004301071167
    7. '```' → logprob: -12.7504301071167
    8. '_.' → logprob: -12.7504301071167
    9. '   ' → logprob: -12.8754301071167
    10. 'Rail' → logprob: -13.0004301071167

Token 357: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.3306015716807451e-05
    2. ' rail' → logprob: -11.62501335144043
    3. 'Rail' → logprob: -13.87501335144043
    4. 'rails' → logprob: -14.37501335144043
    5. '   ' → logprob: -14.75001335144043
    6. 'self' → logprob: -14.75001335144043
    7. '
' → logprob: -15.12501335144043
    8. 'ral' → logprob: -15.50001335144043
    9. 'distance' → logprob: -15.50001335144043
    10. 'ra' → logprob: -15.62501335144043

Token 358: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.00020187153131701052
    2. '._' → logprob: -9.000202178955078
    3. 'Ring' → logprob: -10.375202178955078
    4. 'ring' → logprob: -10.875202178955078
    5. 'ing' → logprob: -11.625202178955078
    6. '_RING' → logprob: -12.750202178955078
    7. '_' → logprob: -13.000202178955078
    8. '```' → logprob: -13.250202178955078
    9. '_r' → logprob: -13.500202178955078
    10. '   ' → logprob: -13.875202178955078

Token 359: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -6.869017852295656e-06
    2. '.' → logprob: -12.500006675720215
    3. 'distance' → logprob: -12.875006675720215
    4. ' .' → logprob: -14.875006675720215
    5. '.dist' → logprob: -17.00000762939453
    6. '(distance' → logprob: -17.12500762939453
    7. '.Distance' → logprob: -17.37500762939453
    8. '.cost' → logprob: -17.37500762939453
    9. ' distance' → logprob: -18.37500762939453
    10. '   ' → logprob: -19.50000762939453

Token 360: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006839334033429623
    2. '(' → logprob: -5.006839275360107
    3. 'self' → logprob: -9.756839752197266
    4. '(
' → logprob: -9.756839752197266
    5. ' (' → logprob: -12.006839752197266
    6. ' self' → logprob: -13.631839752197266
    7. '(

' → logprob: -15.131839752197266
    8. '(this' → logprob: -15.131839752197266
    9. '	self' → logprob: -16.756839752197266
    10. '(s' → logprob: -16.756839752197266

Token 361: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0005834150360897183
    2. 'self' → logprob: -7.875583648681641
    3. 'start' → logprob: -9.00058364868164
    4. '.self' → logprob: -9.87558364868164
    5. ' self' → logprob: -11.50058364868164
    6. '(self' → logprob: -11.62558364868164
    7. '.' → logprob: -12.25058364868164
    8. ' start' → logprob: -13.50058364868164
    9. ' .' → logprob: -13.75058364868164
    10. '.user' → logprob: -13.87558364868164

Token 362: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.0002096197713399306
    2. '._' → logprob: -9.25020980834961
    3. '.start' → logprob: -9.62520980834961
    4. '.station' → logprob: -10.87520980834961
    5. 'Station' → logprob: -11.50020980834961
    6. ',' → logprob: -11.50020980834961
    7. ',start' → logprob: -13.62520980834961
    8. '_start' → logprob: -13.62520980834961
    9. 'station' → logprob: -13.75020980834961
    10. '.' → logprob: -13.75020980834961

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.375006675720215
    3. ',
' → logprob: -13.125006675720215
    4. '<|end|>' → logprob: -15.750006675720215
    5. ',

' → logprob: -16.3750057220459
    6. '(' → logprob: -16.8750057220459
    7. ')' → logprob: -17.2500057220459
    8. '[' → logprob: -17.6250057220459
    9. '‌,' → logprob: -17.8750057220459
    10. '(),' → logprob: -17.8750057220459

Token 364: ' Station' (ID: 20902)
  Prédit: 'Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.07889022678136826
    2. ' Station' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.703889846801758
    4. '_station' → logprob: -17.828889846801758
    5. '    ' → logprob: -18.453889846801758
    6. '	' → logprob: -18.453889846801758
    7. 'Rail' → logprob: -18.578889846801758
    8. 'station' → logprob: -18.578889846801758
    9. 'Sta' → logprob: -19.078889846801758
    10. ' ' → logprob: -19.078889846801758

Token 365: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -9.77022064034827e-05
    2. 'right' → logprob: -9.250097274780273
    3. '[right' → logprob: -14.125097274780273
    4. ' right' → logprob: -14.875097274780273
    5. ' (' → logprob: -15.625097274780273
    6. '(' → logprob: -16.000097274780273
    7. '   ' → logprob: -16.375097274780273
    8. '	right' → logprob: -17.125097274780273
    9. ')' → logprob: -17.250097274780273
    10. ' ' → logprob: -18.625097274780273

Token 366: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0013364320620894432
    2. 'right' → logprob: -6.626336574554443
    3. ')' → logprob: -12.126336097717285
    4. 'max' → logprob: -12.501336097717285
    5. 'm' → logprob: -15.876336097717285
    6. ' most' → logprob: -16.2513370513916
    7. '(right' → logprob: -16.5013370513916
    8. '(' → logprob: -16.7513370513916
    9. 'left' → logprob: -16.7513370513916
    10. '+' → logprob: -16.8763370513916

Token 367: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741172194480896
    2. '))' → logprob: -0.9741172194480896
    3. ' )' → logprob: -10.849117279052734
    4. ' ))' → logprob: -11.849117279052734
    5. '))+' → logprob: -12.474117279052734
    6. '])' → logprob: -13.349117279052734
    7. '),' → logprob: -13.474117279052734
    8. ')
' → logprob: -13.599117279052734
    9. '))
' → logprob: -13.974117279052734
    10. '   ' → logprob: -13.974117279052734

Token 368: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0549624040722847
    2. '+' → logprob: -2.929962396621704
    3. '+c' → logprob: -9.554962158203125
    4. ')' → logprob: -12.054962158203125
    5. ' ' → logprob: -14.179962158203125
    6. '   ' → logprob: -14.304962158203125
    7. ' +
' → logprob: -14.804962158203125
    8. ' ' → logprob: -14.929962158203125
    9. '+
' → logprob: -15.304962158203125
    10. '-' → logprob: -15.554962158203125

Token 369: ' clockwise' (ID: 141888)
  Prédit: 'antic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'antic' → logprob: -0.007506655994802713
    2. ' antic' → logprob: -5.007506847381592
    3. '   ' → logprob: -7.257506847381592
    4. 'ant' → logprob: -11.132506370544434
    5. '  ' → logprob: -11.257506370544434
    6. '    ' → logprob: -11.507506370544434
    7. '       ' → logprob: -11.632506370544434
    8. ' ' → logprob: -12.257506370544434
    9. '
' → logprob: -12.507506370544434
    10. '(' → logprob: -12.632506370544434

Token 370: '_span' (ID: 90052)
  Prédit: '_span'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -0.00021366903092712164
    2. 'span' → logprob: -8.500213623046875
    3. '*' → logprob: -13.750213623046875
    4. '<span' → logprob: -13.750213623046875
    5. '_ring' → logprob: -13.750213623046875
    6. '-span' → logprob: -14.000213623046875
    7. '-' → logprob: -14.125213623046875
    8. ' span' → logprob: -14.250213623046875
    9. ' -' → logprob: -14.375213623046875
    10. '_' → logprob: -14.375213623046875

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3511253297328949
    2. ')' → logprob: -1.6011253595352173
    3. 'c' → logprob: -3.3511252403259277
    4. ' candidates' → logprob: -3.4761252403259277
    5. ')c' → logprob: -4.226125240325928
    6. ')
' → logprob: -4.976125240325928
    7. '<|end|>' → logprob: -5.726125240325928
    8. '_candidates' → logprob: -6.726125240325928
    9. '
' → logprob: -6.851125240325928
    10. ',c' → logprob: -8.851125717163086

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8370481133460999
    2. 'c' → logprob: -1.212048053741455
    3. ')' → logprob: -1.837048053741455
    4. ')c' → logprob: -2.837048053741455
    5. ' candidates' → logprob: -4.087048053741455
    6. '
' → logprob: -4.212048053741455
    7. ')
' → logprob: -4.337048053741455
    8. '<|end|>' → logprob: -6.337048053741455
    9. '_candidates' → logprob: -6.462048053741455
    10. '   ' → logprob: -6.587048053741455

Token 373: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31458809971809387
    2. '       ' → logprob: -1.3145880699157715
    3. ' candidates' → logprob: -6.8145880699157715
    4. '   ' → logprob: -9.31458854675293
    5. ')c' → logprob: -10.06458854675293
    6. ')' → logprob: -10.56458854675293
    7. '_candidates' → logprob: -10.56458854675293
    8. '	c' → logprob: -11.56458854675293
    9. '(c' → logprob: -12.18958854675293
    10. '[c' → logprob: -12.18958854675293

Token 374: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031794982496649027
    2. '.' → logprob: -5.753179550170898
    3. '.app' → logprob: -13.628179550170898
    4. 'append' → logprob: -15.128179550170898
    5. ' .' → logprob: -15.753179550170898
    6. '.add' → logprob: -16.8781795501709
    7. '.ap' → logprob: -16.8781795501709
    8. '.extend' → logprob: -17.5031795501709
    9. ').' → logprob: -18.2531795501709
    10. '.insert' → logprob: -18.6281795501709

Token 375: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.375005722045898
    3. 'cost' → logprob: -13.750005722045898
    4. ' (' → logprob: -16.2500057220459
    5. '(
' → logprob: -16.8750057220459
    6. '(c' → logprob: -17.5000057220459
    7. ' cost' → logprob: -17.7500057220459
    8. '(distance' → logprob: -19.0000057220459
    9. '(co' → logprob: -19.0000057220459
    10. '(abs' → logprob: -19.0000057220459

Token 376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ')' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.875003814697266
    4. '_' → logprob: -15.125003814697266
    5. '(' → logprob: -15.500003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '
' → logprob: -16.250003814697266
    8. 's' → logprob: -16.500003814697266
    9. '(
' → logprob: -17.500003814697266
    10. ')
' → logprob: -17.812503814697266

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026552708819508553
    2. '       ' → logprob: -4.026552677154541
    3. ')
' → logprob: -5.026552677154541
    4. '
' → logprob: -6.401552677154541
    5. '<|end|>' → logprob: -9.6515531539917
    6. ' )' → logprob: -10.9015531539917
    7. '   ' → logprob: -11.4015531539917
    8. '#' → logprob: -11.4015531539917
    9. ')return' → logprob: -11.5265531539917
    10. ')

' → logprob: -11.9015531539917

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003987335134297609
    2. 'return' → logprob: -6.0039873123168945
    3. '#' → logprob: -6.8789873123168945
    4. '<|end|>' → logprob: -8.378987312316895
    5. '        
' → logprob: -9.503987312316895
    6. '
' → logprob: -9.753987312316895
    7. '```' → logprob: -10.003987312316895
    8. ')' → logprob: -10.753987312316895
    9. '   ' → logprob: -10.753987312316895
    10. ' return' → logprob: -11.253987312316895

Token 379: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16258269548416138
    2. 'return' → logprob: -2.5375826358795166
    3. '#' (adapté à ' #') → logprob: -2.6625826358795166
    4. ' return' → logprob: -7.912582874298096
    5. '
' → logprob: -8.412582397460938
    6. '        
' → logprob: -8.912582397460938
    7. ')' → logprob: -9.287582397460938
    8. '<|end|>' → logprob: -9.537582397460938
    9. '```' → logprob: -9.787582397460938
    10. '[' → logprob: -9.787582397460938

Token 380: ' Case' (ID: 18964)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37680312991142273
    2. 'return' → logprob: -1.2518031597137451
    3. '       ' → logprob: -3.876803159713745
    4. 'cost' → logprob: -5.876802921295166
    5. 'c' → logprob: -6.626802921295166
    6. '   ' → logprob: -6.626802921295166
    7. '
' → logprob: -7.251802921295166
    8. ' return' → logprob: -8.001803398132324
    9. 'for' → logprob: -8.376803398132324
    10. ' #' → logprob: -9.001803398132324

Token 381: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000628683075774461
    2. ' ' → logprob: -7.375628471374512
    3. ':' → logprob: -14.250628471374512
    4. '   ' → logprob: -14.750628471374512
    5. '    ' → logprob: -15.125628471374512
    6. '#' → logprob: -15.875628471374512
    7. ' #' → logprob: -16.125629425048828
    8. '2' → logprob: -16.625629425048828
    9. '4' → logprob: -16.750629425048828
    10. ':
' → logprob: -16.875629425048828

Token 382: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -11.125020980834961
    3. '0' → logprob: -13.125020980834961
    4. '2' → logprob: -14.000020980834961
    5. '4' → logprob: -14.125020980834961
    6. '1' → logprob: -14.125020980834961
    7. '```' → logprob: -14.250020980834961
    8. '#' → logprob: -14.375020980834961
    9. '
' → logprob: -15.250020980834961
    10. '   ' → logprob: -15.937520980834961

Token 383: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023537782952189445
    2. '=' → logprob: -4.148537635803223
    3. ':' → logprob: -4.898537635803223
    4. ' :' → logprob: -11.148537635803223
    5. '   ' → logprob: -13.773537635803223
    6. ':
' → logprob: -15.148537635803223
    7. '    ' → logprob: -15.273537635803223
    8. ' =
' → logprob: -15.273537635803223
    9. ')' → logprob: -15.398537635803223
    10. '#' → logprob: -15.398537635803223

Token 384: ' similar' (ID: 6771)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.8074927926063538
    2. 'cost' → logprob: -1.307492733001709
    3. ' self' → logprob: -1.807492733001709
    4. 'self' → logprob: -2.182492733001709
    5. 'clock' → logprob: -5.432492733001709
    6. ' clockwise' → logprob: -7.307492733001709
    7. '   ' → logprob: -7.682492733001709
    8. 'left' → logprob: -8.557493209838867
    9. ' left' → logprob: -8.557493209838867
    10. '
' → logprob: -8.557493209838867

Token 385: ' but' (ID: 889)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.087652325630188
    2. 'cost' → logprob: -1.087652325630188
    3. '   ' → logprob: -2.4626522064208984
    4. '1' → logprob: -2.7126522064208984
    5. ' cost' → logprob: -3.3376522064208984
    6. '3' → logprob: -3.7126522064208984
    7. '2' → logprob: -3.8376522064208984
    8. ' to' → logprob: -4.337652206420898
    9. '=' → logprob: -4.462652206420898
    10. '#' → logprob: -4.587652206420898

Token 386: ' using' (ID: 2360)
  Prédit: ' going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' going' → logprob: -0.8676257729530334
    2. 'antic' → logprob: -1.6176257133483887
    3. ' antic' → logprob: -2.1176257133483887
    4. 'going' → logprob: -2.4926257133483887
    5. '   ' → logprob: -3.3676257133483887
    6. '       ' → logprob: -3.7426257133483887
    7. ' to' → logprob: -4.242625713348389
    8. 'cost' → logprob: -4.367625713348389
    9. 'clock' → logprob: -4.492625713348389
    10. ' with' → logprob: -4.617625713348389

Token 387: ' antic' (ID: 83629)
  Prédit: 'antic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antic' → logprob: -0.006270744372159243
    2. 'self' → logprob: -5.506270885467529
    3. ' antic' → logprob: -6.631270885467529
    4. 'left' → logprob: -8.506270408630371
    5. '   ' → logprob: -9.256270408630371
    6. 'right' → logprob: -9.756270408630371
    7. 'the' → logprob: -9.756270408630371
    8. '
' → logprob: -9.881270408630371
    9. 'anti' → logprob: -10.006270408630371
    10. ' self' → logprob: -10.256270408630371

Token 388: 'lock' (ID: 2802)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -3.666993507067673e-05
    2. 'lock' → logprob: -11.000036239624023
    3. '-clock' → logprob: -11.625036239624023
    4. '_clock' → logprob: -11.875036239624023
    5. ' clockwise' → logprob: -12.500036239624023
    6. '-' → logprob: -16.125036239624023
    7. '(clock' → logprob: -16.750036239624023
    8. 'cw' → logprob: -16.750036239624023
    9. '.clock' → logprob: -17.750036239624023
    10. 'clk' → logprob: -17.750036239624023

Token 389: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -5.438573680294212e-06
    2. 'l' → logprob: -13.375005722045898
    3. 'lock' → logprob: -13.375005722045898
    4. 'w' → logprob: -14.125005722045898
    5. 'ewise' → logprob: -14.750005722045898
    6. 'clock' → logprob: -14.875005722045898
    7. '
' → logprob: -15.375005722045898
    8. '-wise' → logprob: -16.0000057220459
    9. 'ock' → logprob: -16.3750057220459
    10. '   ' → logprob: -16.3750057220459

Token 390: ' span' (ID: 19861)
  Prédit: '_span'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -0.0013369088992476463
    2. '_' → logprob: -7.376337051391602
    3. 'span' → logprob: -7.751337051391602
    4. ' span' → logprob: -8.751337051391602
    5. '_wrap' → logprob: -10.626337051391602
    6. '_sp' → logprob: -10.751337051391602
    7. '_
' → logprob: -11.251337051391602
    8. ' _' → logprob: -11.376337051391602
    9. '
' → logprob: -11.876337051391602
    10. '```' → logprob: -12.126337051391602

Token 391: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14013226330280304
    2. ' =' → logprob: -2.765132188796997
    3. '   ' → logprob: -3.765132188796997
    4. '=' → logprob: -4.015132427215576
    5. '
' → logprob: -4.640132427215576
    6. ',' → logprob: -5.140132427215576
    7. 'cost' → logprob: -5.640132427215576
    8. ',
' → logprob: -6.140132427215576
    9. ' cost' → logprob: -6.765132427215576
    10. '        
' → logprob: -6.890132427215576

Token 392: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4976687729358673
    2. 'right' → logprob: -2.247668743133545
    3. ' the' → logprob: -2.747668743133545
    4. ' (' → logprob: -2.997668743133545
    5. 'antic' → logprob: -3.372668743133545
    6. '(right' → logprob: -3.747668743133545
    7. ' clockwise' → logprob: -4.247668743133545
    8. '(clock' → logprob: -4.497668743133545
    9. 'clock' → logprob: -4.622668743133545
    10. ' antic' → logprob: -4.622668743133545

Token 393: ' ring' (ID: 12796)
  Prédit: 'ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ring' → logprob: -0.14197351038455963
    2. ' ring' → logprob: -2.1419734954833984
    3. 'right' → logprob: -4.766973495483398
    4. '100' → logprob: -5.641973495483398
    5. 'rail' → logprob: -6.266973495483398
    6. 'clock' → logprob: -8.641973495483398
    7. 'station' → logprob: -9.016973495483398
    8. ' right' → logprob: -9.391973495483398
    9. 'min' → logprob: -9.891973495483398
    10. ' ' → logprob: -10.141973495483398

Token 394: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01143187377601862
    2. '
' → logprob: -5.636431694030762
    3. '   ' → logprob: -6.011431694030762
    4. ',' → logprob: -6.136431694030762
    5. ')' → logprob: -7.011431694030762
    6. '        
' → logprob: -7.011431694030762
    7. '```' → logprob: -8.386431694030762
    8. '<|end|>' → logprob: -8.386431694030762
    9. ',
' → logprob: -8.511431694030762
    10. 'cost' → logprob: -9.011431694030762

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009169671684503555
    2. 'cost' → logprob: -4.759169578552246
    3. ' cost' → logprob: -8.134169578552246
    4. '   ' → logprob: -9.259169578552246
    5. '```' → logprob: -9.759169578552246
    6. '
' → logprob: -10.259169578552246
    7. '        
' → logprob: -10.884169578552246
    8. '#' → logprob: -10.884169578552246
    9. ',' → logprob: -11.134169578552246
    10. ')' → logprob: -12.134169578552246

Token 396: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0012453512754291296
    2. ' cost' → logprob: -7.376245498657227
    3. '       ' → logprob: -8.126245498657227
    4. '   ' → logprob: -8.376245498657227
    5. '
' → logprob: -9.876245498657227
    6. 'distance' → logprob: -11.626245498657227
    7. '#' → logprob: -11.876245498657227
    8. 'start' → logprob: -12.001245498657227
    9. 'left' → logprob: -12.501245498657227
    10. 'clock' → logprob: -12.626245498657227

Token 397: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005643534241244197
    2. '_' → logprob: -8.000564575195312
    3. ' =' → logprob: -9.250564575195312
    4. '=' → logprob: -10.000564575195312
    5. ' ' → logprob: -10.000564575195312
    6. '1' → logprob: -10.875564575195312
    7. '   ' → logprob: -12.375564575195312
    8. '2' → logprob: -12.625564575195312
    9. '
' → logprob: -12.625564575195312
    10. '4' → logprob: -13.250564575195312

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. ' ' → logprob: -18.97520637512207
    4. ')' → logprob: -18.97520637512207
    5. ' =
' → logprob: -19.85020637512207
    6. ' ' → logprob: -19.85020637512207
    7. ' =)' → logprob: -20.72520637512207
    8. ':' → logprob: -20.85020637512207
    9. ' +=' → logprob: -20.85020637512207
    10. 's' → logprob: -20.85020637512207

Token 399: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02975454181432724
    2. 'self' → logprob: -3.529754638671875
    3. '   ' → logprob: -14.029754638671875
    4. '	self' → logprob: -14.154754638671875
    5. ' ' → logprob: -14.529754638671875
    6. ' ' → logprob: -14.654754638671875
    7. '       ' → logprob: -14.904754638671875
    8. '    ' → logprob: -15.154754638671875
    9. '(self' → logprob: -15.154754638671875
    10. '```' → logprob: -16.217254638671875

Token 400: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.5577775128767826e-06
    2. ' .' → logprob: -13.250005722045898
    3. 'self' → logprob: -13.375005722045898
    4. '.r' → logprob: -15.125005722045898
    5. 'rail' → logprob: -15.125005722045898
    6. 'Rail' → logprob: -15.125005722045898
    7. '._' → logprob: -15.250005722045898
    8. '_' → logprob: -15.750005722045898
    9. '​.' → logprob: -16.0000057220459
    10. '```' → logprob: -16.1250057220459

Token 401: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -3.7697225252486533e-06
    2. ' rail' → logprob: -13.125003814697266
    3. 'Rail' → logprob: -14.250003814697266
    4. 'rack' → logprob: -15.250003814697266
    5. 'rails' → logprob: -15.375003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '
' → logprob: -16.000003814697266
    8. 'self' → logprob: -16.250003814697266
    9. '.' → logprob: -16.750003814697266
    10. 'ring' → logprob: -16.875003814697266

Token 402: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.00010747690976131707
    2. 'Ring' → logprob: -9.625107765197754
    3. 'ring' → logprob: -11.250107765197754
    4. '._' → logprob: -11.375107765197754
    5. '_RING' → logprob: -12.625107765197754
    6. '_' → logprob: -13.000107765197754
    7. 'ing' → logprob: -13.250107765197754
    8. '.distance' → logprob: -13.500107765197754
    9. '-ring' → logprob: -13.500107765197754
    10. '.r' → logprob: -13.750107765197754

Token 403: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.375000953674316
    3. 'distance' → logprob: -15.125000953674316
    4. '.dist' → logprob: -17.625001907348633
    5. '(distance' → logprob: -17.875001907348633
    6. '.Distance' → logprob: -18.000001907348633
    7. '.cost' → logprob: -18.125001907348633
    8. ' .' → logprob: -18.375001907348633
    9. ' distance' → logprob: -19.375001907348633
    10. '_distance' → logprob: -21.750001907348633

Token 404: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019646743312478065
    2. '(' → logprob: -6.251964569091797
    3. 'self' → logprob: -10.876964569091797
    4. '(
' → logprob: -11.001964569091797
    5. '(this' → logprob: -15.126964569091797
    6. ' (' → logprob: -16.251964569091797
    7. ' self' → logprob: -16.376964569091797
    8. '(start' → logprob: -17.751964569091797
    9. '(

' → logprob: -18.251964569091797
    10. '	self' → logprob: -19.001964569091797

Token 405: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0029175723902881145
    2. 'start' → logprob: -6.502917766571045
    3. 'self' → logprob: -6.627917766571045
    4. '(self' → logprob: -9.877917289733887
    5. '_start' → logprob: -11.377917289733887
    6. '(start' → logprob: -11.377917289733887
    7. '.self' → logprob: -11.502917289733887
    8. ' self' → logprob: -13.002917289733887
    9. ' start' → logprob: -13.002917289733887
    10. '.' → logprob: -14.502917289733887

Token 406: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.4974866644479334e-05
    2. 'Station' → logprob: -11.750015258789062
    3. '._' → logprob: -12.375015258789062
    4. '_' → logprob: -14.375015258789062
    5. '```' → logprob: -14.500015258789062
    6. '_sta' → logprob: -14.500015258789062
    7. 'station' → logprob: -15.125015258789062
    8. '.station' → logprob: -15.625015258789062
    9. 'self' → logprob: -15.875015258789062
    10. '_user' → logprob: -16.000015258789062

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',
' → logprob: -13.250006675720215
    4. ',self' → logprob: -17.00000762939453
    5. ')' → logprob: -17.12500762939453
    6. '<|end|>' → logprob: -17.50000762939453
    7. ',

' → logprob: -17.62500762939453
    8. 'self' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.00000762939453
    10. '(),' → logprob: -18.25000762939453

Token 408: ' Station' (ID: 20902)
  Prédit: 'Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.0017614520620554686
    2. 'self' → logprob: -6.626761436462402
    3. ' Station' → logprob: -7.751761436462402
    4. '   ' → logprob: -12.501761436462402
    5. ' self' → logprob: -13.876761436462402
    6. '       ' → logprob: -16.12676239013672
    7. 'Self' → logprob: -16.50176239013672
    8. 'Staff' → logprob: -16.62676239013672
    9. ' ' → logprob: -16.87676239013672
    10. '	' → logprob: -16.87676239013672

Token 409: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.734398603439331
    2. '(right' → logprob: -1.484398603439331
    3. 'left' → logprob: -1.859398603439331
    4. 'right' → logprob: -1.984398603439331
    5. '(' → logprob: -8.98439884185791
    6. ' left' → logprob: -9.73439884185791
    7. '((' → logprob: -9.85939884185791
    8. ' right' → logprob: -11.10939884185791
    9. '[right' → logprob: -11.23439884185791
    10. '[left' → logprob: -11.35939884185791

Token 410: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -2.1008713702030946e-06
    2. 'right' → logprob: -14.375001907348633
    3. 'left' → logprob: -14.500001907348633
    4. '(' → logprob: -14.625001907348633
    5. ')' → logprob: -14.625001907348633
    6. 'more' → logprob: -16.500001907348633
    7. '(left' → logprob: -17.625001907348633
    8. 'Most' → logprob: -17.875001907348633
    9. '(
' → logprob: -18.375001907348633
    10. '(right' → logprob: -18.625001907348633

Token 411: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01251753605902195
    2. '))' → logprob: -4.38751745223999
    3. ' )' → logprob: -12.387517929077148
    4. '())' → logprob: -13.137517929077148
    5. '()' → logprob: -15.012517929077148
    6. '])' → logprob: -15.137517929077148
    7. ')+' → logprob: -15.262517929077148
    8. '))+' → logprob: -15.262517929077148
    9. ')
' → logprob: -15.637517929077148
    10. ' ))' → logprob: -15.762517929077148

Token 412: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246755823493004
    2. '+' → logprob: -3.7732467651367188
    3. ' +
' → logprob: -14.648246765136719
    4. ' ' → logprob: -14.898246765136719
    5. ' ' → logprob: -15.773246765136719
    6. '+c' → logprob: -15.898246765136719
    7. ' plus' → logprob: -16.89824676513672
    8. '+
' → logprob: -16.89824676513672
    9. ')' → logprob: -17.02324676513672
    10. '   ' → logprob: -17.52324676513672

Token 413: ' antic' (ID: 83629)
  Prédit: 'antic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antic' → logprob: -0.0019426802173256874
    2. ' antic' → logprob: -6.2519426345825195
    3. '   ' → logprob: -11.75194263458252
    4. 'ant' → logprob: -12.75194263458252
    5. 'antis' → logprob: -14.37694263458252
    6. 'antec' → logprob: -14.87694263458252
    7. ' ' → logprob: -15.12694263458252
    8. 'anc' → logprob: -15.25194263458252
    9. 'anti' → logprob: -15.37694263458252
    10. 'anticip' → logprob: -15.62694263458252

Token 414: 'lock' (ID: 2802)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.0003124632057733834
    2. '_clock' → logprob: -8.250312805175781
    3. '-clock' → logprob: -10.500312805175781
    4. 'lock' → logprob: -12.000312805175781
    5. 'cl' → logprob: -12.375312805175781
    6. '-' → logprob: -12.625312805175781
    7. 'clone' → logprob: -12.875312805175781
    8. 'cw' → logprob: -13.000312805175781
    9. '_' → logprob: -13.375312805175781
    10. '```' → logprob: -14.000312805175781

Token 415: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0028765571769326925
    2. 'ock' → logprob: -6.5028767585754395
    3. 'clock' → logprob: -7.2528767585754395
    4. 'lock' → logprob: -8.252876281738281
    5. 'oc' → logprob: -9.002876281738281
    6. '   ' → logprob: -9.877876281738281
    7. 'oque' → logprob: -10.252876281738281
    8. '_' → logprob: -10.377876281738281
    9. 'w' → logprob: -10.502876281738281
    10. ' ' → logprob: -11.002876281738281

Token 416: '_span' (ID: 90052)
  Prédit: '_span'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -0.00012320445966906846
    2. '_' → logprob: -9.250123023986816
    3. ' _' → logprob: -10.875123023986816
    4. 'span' → logprob: -13.250123023986816
    5. '"_' → logprob: -14.000123023986816
    6. ''_' → logprob: -14.000123023986816
    7. '_sp' → logprob: -14.250123023986816
    8. '_ring' → logprob: -14.625123023986816
    9. '_
' → logprob: -14.625123023986816
    10. '_wrap' → logprob: -14.625123023986816

Token 417: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.017489951103925705
    2. ')' → logprob: -5.017489910125732
    3. '       ' → logprob: -5.892489910125732
    4. ')c' → logprob: -5.892489910125732
    5. '
' → logprob: -6.142489910125732
    6. ' candidates' → logprob: -6.517489910125732
    7. ')
' → logprob: -6.767489910125732
    8. '   ' → logprob: -8.26749038696289
    9. '_candidates' → logprob: -10.01749038696289
    10. '    
' → logprob: -11.01749038696289

Token 418: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6272964477539062
    2. ')c' → logprob: -1.0022964477539062
    3. ')' → logprob: -2.3772964477539062
    4. ' candidates' → logprob: -5.377296447753906
    5. ')
' → logprob: -7.252296447753906
    6. '       ' → logprob: -8.502296447753906
    7. '_candidates' → logprob: -9.252296447753906
    8. '<|end|>' → logprob: -9.252296447753906
    9. ',c' → logprob: -9.502296447753906
    10. '   ' → logprob: -9.752296447753906

Token 419: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0033907603938132524
    2. ')c' → logprob: -6.753390789031982
    3. ')' → logprob: -7.003390789031982
    4. ' candidates' → logprob: -7.378390789031982
    5. '       ' → logprob: -7.503390789031982
    6. '   ' → logprob: -9.878390312194824
    7. '```' → logprob: -10.878390312194824
    8. ')
' → logprob: -11.128390312194824
    9. '[c' → logprob: -11.378390312194824
    10. '
' → logprob: -11.378390312194824

Token 420: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005246329586952925
    2. '.' → logprob: -5.255246162414551
    3. '.app' → logprob: -11.38024616241455
    4. '.add' → logprob: -14.88024616241455
    5. ' .' → logprob: -15.63024616241455
    6. '.extend' → logprob: -15.88024616241455
    7. '.Append' → logprob: -15.88024616241455
    8. 'append' → logprob: -17.130247116088867
    9. '.insert' → logprob: -17.255247116088867
    10. '.setdefault' → logprob: -17.505247116088867

Token 421: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. 'cost' → logprob: -15.375021934509277
    4. ' (' → logprob: -16.62502098083496
    5. '(
' → logprob: -17.62502098083496
    6. '(code' → logprob: -19.50002098083496
    7. '(c' → logprob: -19.50002098083496
    8. '(price' → logprob: -19.75002098083496
    9. '(cap' → logprob: -19.87502098083496
    10. '(co' → logprob: -20.00002098083496

Token 422: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ')' → logprob: -17.375
    3. '[' → logprob: -19.5
    4. '(' → logprob: -20.0
    5. '۳' → logprob: -20.625
    6. ' ' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. '
' → logprob: -21.375
    9. 's' → logprob: -21.625
    10. ')
' → logprob: -21.75

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034968426916748285
    2. '       ' → logprob: -5.8784966468811035
    3. ')
' → logprob: -7.5034966468811035
    4. '   ' → logprob: -9.128497123718262
    5. '<|end|>' → logprob: -11.628497123718262
    6. ' )' → logprob: -12.003497123718262
    7. ')c' → logprob: -12.628497123718262
    8. '```' → logprob: -12.878497123718262
    9. '#' → logprob: -13.253497123718262
    10. ']' → logprob: -13.503497123718262

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013769344426691532
    2. '   ' → logprob: -4.763769149780273
    3. 'cost' → logprob: -6.138769149780273
    4. ')' → logprob: -6.638769149780273
    5. 'c' → logprob: -7.138769149780273
    6. '<|end|>' → logprob: -8.263769149780273
    7. '```' → logprob: -8.263769149780273
    8. '
' → logprob: -9.138769149780273
    9. '        
' → logprob: -9.638769149780273
    10. '#' → logprob: -9.888769149780273

Token 425: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5114837884902954
    2. 'return' → logprob: -1.2614837884902954
    3. 'cost' (adapté à ' cost') → logprob: -2.636483669281006
    4. '#' → logprob: -3.136483669281006
    5. '   ' → logprob: -7.136483669281006
    6. 'c' → logprob: -7.386483669281006
    7. ' return' → logprob: -8.011484146118164
    8. '```' → logprob: -8.761484146118164
    9. ' cost' → logprob: -9.761484146118164
    10. '           ' → logprob: -10.511484146118164

Token 426: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.013004332780838013
    2. 's' → logprob: -4.388004302978516
    3. '_candidates' → logprob: -7.763004302978516
    4. '3' → logprob: -10.888004302978516
    5. ' =' → logprob: -11.013004302978516
    6. '=' → logprob: -11.513004302978516
    7. 'c' → logprob: -11.763004302978516
    8. '_' → logprob: -12.763004302978516
    9. ' candidates' → logprob: -12.888004302978516
    10. 'es' → logprob: -13.138004302978516

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754657298326492
    2. '=' → logprob: -3.529754638671875
    3. ' ' → logprob: -12.654754638671875
    4. '_' → logprob: -14.279754638671875
    5. ' =)' → logprob: -16.154754638671875
    6. ' ' → logprob: -16.529754638671875
    7. ' =
' → logprob: -16.654754638671875
    8. ')' → logprob: -17.279754638671875
    9. ' =[' → logprob: -17.529754638671875
    10. ' +=' → logprob: -18.404754638671875

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693022191524506
    2. ' self' → logprob: -2.1269302368164062
    3. '       ' → logprob: -14.001930236816406
    4. '	self' → logprob: -14.251930236816406
    5. '   ' → logprob: -14.626930236816406
    6. '(self' → logprob: -16.626930236816406
    7. '[self' → logprob: -17.126930236816406
    8. 'c' → logprob: -17.751930236816406
    9. '           ' → logprob: -18.001930236816406
    10. '=self' → logprob: -18.001930236816406

Token 429: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.895480277715251e-06
    2. 'rail' → logprob: -12.000008583068848
    3. '_' → logprob: -13.750008583068848
    4. 'Rail' → logprob: -14.000008583068848
    5. 'self' → logprob: -15.625008583068848
    6. '._' → logprob: -15.750008583068848
    7. 'Rails' → logprob: -16.625009536743164
    8. '```' → logprob: -17.250009536743164
    9. '.r' → logprob: -17.375009536743164
    10. '_.' → logprob: -17.500009536743164

Token 430: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.5048530030981055e-06
    2. 'Rail' → logprob: -13.750001907348633
    3. ' rail' → logprob: -15.250001907348633
    4. 'rails' → logprob: -17.000001907348633
    5. 'rack' → logprob: -17.750001907348633
    6. 'ring' → logprob: -17.875001907348633
    7. 'ra' → logprob: -18.125001907348633
    8. 'ral' → logprob: -18.125001907348633
    9. 'station' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.750001907348633

Token 431: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.0001589618914294988
    2. 'ring' → logprob: -9.50015926361084
    3. 'Ring' → logprob: -9.62515926361084
    4. 'ing' → logprob: -11.12515926361084
    5. '._' → logprob: -13.62515926361084
    6. '_RING' → logprob: -13.75015926361084
    7. '-ring' → logprob: -14.75015926361084
    8. 'リング' → logprob: -16.125158309936523
    9. ' Ring' → logprob: -16.375158309936523
    10. '_station' → logprob: -16.500158309936523

Token 432: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00010008628305513412
    2. 'distance' → logprob: -9.250100135803223
    3. '.' → logprob: -13.000100135803223
    4. '.dist' → logprob: -13.500100135803223
    5. '.cost' → logprob: -16.250099182128906
    6. '(distance' → logprob: -16.625099182128906
    7. '.Distance' → logprob: -16.625099182128906
    8. ' .' → logprob: -17.250099182128906
    9. ' distance' → logprob: -17.875099182128906
    10. '.d' → logprob: -18.500099182128906

Token 433: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.125009536743164
    3. 'self' → logprob: -12.500009536743164
    4. '(
' → logprob: -15.500009536743164
    5. '(this' → logprob: -17.125009536743164
    6. ' self' → logprob: -17.750009536743164
    7. '	self' → logprob: -18.875009536743164
    8. ' (' → logprob: -18.875009536743164
    9. '[self' → logprob: -20.500009536743164
    10. '(None' → logprob: -20.750009536743164

Token 434: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.050022587180137634
    2. 'self' → logprob: -3.050022602081299
    3. '.self' → logprob: -7.175022602081299
    4. '(self' → logprob: -7.925022602081299
    5. ' self' → logprob: -8.80002212524414
    6. 'start' → logprob: -9.17502212524414
    7. '.' → logprob: -10.80002212524414
    8. '_start' → logprob: -11.17502212524414
    9. '	self' → logprob: -12.42502212524414
    10. ',self' → logprob: -12.42502212524414

Token 435: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -2.248469718324486e-05
    2. 'Station' → logprob: -10.875022888183594
    3. 'station' → logprob: -12.875022888183594
    4. '.station' → logprob: -14.500022888183594
    5. '_start' → logprob: -15.875022888183594
    6. 'start' → logprob: -16.250022888183594
    7. '.start' → logprob: -16.250022888183594
    8. 'self' → logprob: -16.500022888183594
    9. '   ' → logprob: -17.375022888183594
    10. '           ' → logprob: -18.000022888183594

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',
' → logprob: -13.375006675720215
    4. '<|end|>' → logprob: -16.8750057220459
    5. '(),' → logprob: -17.5000057220459
    6. ')' → logprob: -17.7500057220459
    7. ',

' → logprob: -18.1250057220459
    8. '```' → logprob: -18.2500057220459
    9. 'To' → logprob: -18.5000057220459
    10. '(' → logprob: -19.0000057220459

Token 437: ' Station' (ID: 20902)
  Prédit: 'Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.001170225441455841
    2. ' Station' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. 'self' → logprob: -20.501171112060547
    5. 'Server' → logprob: -20.751171112060547
    6. 'station' → logprob: -20.876171112060547
    7. 'Staff' → logprob: -20.876171112060547
    8. '       ' → logprob: -21.126171112060547
    9. ' ' → logprob: -21.126171112060547
    10. 'Star' → logprob: -21.376171112060547

Token 438: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -3.054500666621607e-06
    2. 'right' → logprob: -13.00000286102295
    3. '[right' → logprob: -14.50000286102295
    4. '   ' → logprob: -16.375003814697266
    5. '	right' → logprob: -17.125003814697266
    6. ' right' → logprob: -17.125003814697266
    7. ' (' → logprob: -17.250003814697266
    8. '(' → logprob: -17.625003814697266
    9. ',right' → logprob: -17.750003814697266
    10. ')' → logprob: -18.125003814697266

Token 439: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -8.280175097752362e-05
    2. ')' → logprob: -10.125082969665527
    3. 'right' → logprob: -10.125082969665527
    4. 'max' → logprob: -14.000082969665527
    5. '(' → logprob: -14.125082969665527
    6. ')
' → logprob: -15.375082969665527
    7. '(right' → logprob: -15.500082969665527
    8. '(
' → logprob: -16.12508201599121
    9. '+' → logprob: -16.25008201599121
    10. '))' → logprob: -17.00008201599121

Token 440: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.277553620748222e-05
    2. ')' → logprob: -9.875062942504883
    3. ' ))' → logprob: -12.375062942504883
    4. '))+' → logprob: -12.375062942504883
    5. '()))' → logprob: -13.125062942504883
    6. '()' → logprob: -14.750062942504883
    7. '   ' → logprob: -15.750062942504883
    8. '])' → logprob: -16.125062942504883
    9. '"))' → logprob: -17.625062942504883
    10. '))
' → logprob: -17.625062942504883

Token 441: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0024989673402160406
    2. '+' → logprob: -6.002499103546143
    3. ')' → logprob: -10.752498626708984
    4. ')+' → logprob: -14.002498626708984
    5. ' ' → logprob: -15.127498626708984
    6. '+c' → logprob: -15.627498626708984
    7. ' ' → logprob: -16.127498626708984
    8. ' )' → logprob: -16.252498626708984
    9. ' plus' → logprob: -16.252498626708984
    10. '<|end|>' → logprob: -16.377498626708984

Token 442: ' antic' (ID: 83629)
  Prédit: 'antic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antic' → logprob: -0.03366944193840027
    2. ' antic' → logprob: -3.4086694717407227
    3. '   ' → logprob: -11.283669471740723
    4. 'ant' → logprob: -12.658669471740723
    5. 'antis' → logprob: -13.033669471740723
    6. 'anti' → logprob: -14.283669471740723
    7. ' ' → logprob: -14.283669471740723
    8. 'anc' → logprob: -14.408669471740723
    9. 'antec' → logprob: -14.533669471740723
    10. '  ' → logprob: -14.658669471740723

Token 443: 'lock' (ID: 2802)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.007977684028446674
    2. 'lock' → logprob: -4.882977485656738
    3. '_clock' → logprob: -8.132977485656738
    4. '-clock' → logprob: -10.632977485656738
    5. '   ' → logprob: -11.007977485656738
    6. 'cl' → logprob: -11.507977485656738
    7. 'wise' → logprob: -11.882977485656738
    8. '-' → logprob: -12.507977485656738
    9. '
' → logprob: -12.757977485656738
    10. 'wrap' → logprob: -13.257977485656738

Token 444: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -4.9424725148128346e-05
    2. 'ock' → logprob: -11.000049591064453
    3. 'clock' → logprob: -11.750049591064453
    4. '   ' → logprob: -12.250049591064453
    5. 'ow' → logprob: -13.250049591064453
    6. 'w' → logprob: -13.375049591064453
    7. ' wise' → logprob: -13.500049591064453
    8. '
' → logprob: -13.625049591064453
    9. 'lock' → logprob: -13.625049591064453
    10. 'oc' → logprob: -13.625049591064453

Token 445: '_span' (ID: 90052)
  Prédit: '_span'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_span' → logprob: -1.1637164789135568e-05
    2. '_sp' → logprob: -12.750011444091797
    3. 'span' → logprob: -13.000011444091797
    4. '_' → logprob: -13.000011444091797
    5. '_ring' → logprob: -13.375011444091797
    6. ' _' → logprob: -13.500011444091797
    7. '_spacing' → logprob: -15.875011444091797
    8. '-' → logprob: -16.000011444091797
    9. '```' → logprob: -16.000011444091797
    10. '-_' → logprob: -16.000011444091797

Token 446: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37997642159461975
    2. ')c' → logprob: -1.3799763917922974
    3. ')
' → logprob: -3.254976511001587
    4. 'c' → logprob: -3.879976511001587
    5. '       ' → logprob: -5.254976272583008
    6. '   ' → logprob: -11.004976272583008
    7. ' candidates' → logprob: -11.129976272583008
    8. ',c' → logprob: -11.504976272583008
    9. '<|end|>' → logprob: -11.504976272583008
    10. ']' → logprob: -12.379976272583008

Token 447: '       ' (ID: 309)
  Prédit: ')c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')c' → logprob: -0.528773844242096
    2. ')' → logprob: -1.1537737846374512
    3. 'c' → logprob: -2.403773784637451
    4. ')
' → logprob: -5.903773784637451
    5. '       ' → logprob: -6.653773784637451
    6. ' candidates' → logprob: -8.02877426147461
    7. '_candidates' → logprob: -9.15377426147461
    8. '   ' → logprob: -9.40377426147461
    9. '(c' → logprob: -9.40377426147461
    10. '))' → logprob: -9.65377426147461

Token 448: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01900520734488964
    2. ' candidates' → logprob: -4.644005298614502
    3. ')c' → logprob: -4.894005298614502
    4. ')' → logprob: -6.644005298614502
    5. '   ' → logprob: -8.519004821777344
    6. '       ' → logprob: -8.769004821777344
    7. '_candidates' → logprob: -10.894004821777344
    8. ' c' → logprob: -11.394004821777344
    9. ')
' → logprob: -11.519004821777344
    10. ').' → logprob: -12.269004821777344

Token 449: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011055364273488522
    2. '.' → logprob: -4.5110554695129395
    3. '.app' → logprob: -12.011054992675781
    4. 'append' → logprob: -14.511054992675781
    5. '.Append' → logprob: -15.011054992675781
    6. '.extend' → logprob: -15.386054992675781
    7. '.add' → logprob: -15.886054992675781
    8. '.push' → logprob: -16.38605499267578
    9. '.setdefault' → logprob: -17.38605499267578
    10. ').' → logprob: -17.63605499267578

Token 450: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -3.8889261304575484e-06
    2. 'cost' → logprob: -12.500003814697266
    3. '(' → logprob: -16.000003814697266
    4. ' cost' → logprob: -18.125003814697266
    5. '(
' → logprob: -19.500003814697266
    6. '(count' → logprob: -20.375003814697266
    7. '(c' → logprob: -20.375003814697266
    8. '(code' → logprob: -21.000003814697266
    9. ' (' → logprob: -21.500003814697266
    10. '(cap' → logprob: -22.500003814697266

Token 451: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. ')' → logprob: -17.75
    4. 'cost' → logprob: -18.875
    5. '۴' → logprob: -19.625
    6. '(cost' → logprob: -19.75
    7. '' → logprob: -20.5
    8. 'c' → logprob: -21.0
    9. '４' → logprob: -21.125
    10. ' ' → logprob: -21.125

Token 452: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07849245518445969
    2. ')
' → logprob: -2.7034924030303955
    3. '       ' → logprob: -4.828492641448975
    4. ')

' → logprob: -7.953492641448975
    5. ')return' → logprob: -9.703492164611816
    6. '   ' → logprob: -10.078492164611816
    7. '
' → logprob: -10.078492164611816
    8. 'return' → logprob: -11.203492164611816
    9. ')
' → logprob: -12.953492164611816
    10. ' ' → logprob: -13.078492164611816

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052650682628154755
    2. 'return' → logprob: -5.255265235900879
    3. ' return' → logprob: -10.630265235900879
    4. '```' → logprob: -12.505265235900879
    5. '   ' → logprob: -13.005265235900879
    6. '
' → logprob: -14.255265235900879
    7. '        
' → logprob: -15.380265235900879
    8. '	return' → logprob: -15.630265235900879
    9. '           ' → logprob: -16.255264282226562
    10. '	' → logprob: -17.755264282226562

Token 454: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6933022141456604
    2. 'return' → logprob: -0.6933022141456604
    3. ' return' → logprob: -8.818302154541016
    4. '
' → logprob: -12.568302154541016
    5. '   ' → logprob: -13.693302154541016
    6. '        
' → logprob: -13.818302154541016
    7. '```' → logprob: -13.943302154541016
    8. '	return' → logprob: -15.318302154541016
    9. '           ' → logprob: -16.818302154541016
    10. '      ' → logprob: -17.193302154541016

Token 455: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0033908796031028032
    2. '       ' → logprob: -6.003390789031982
    3. ' return' → logprob: -7.003390789031982
    4. '
' → logprob: -12.62839126586914
    5. '   ' → logprob: -13.37839126586914
    6. '```' → logprob: -14.50339126586914
    7. '#' → logprob: -15.75339126586914
    8. '        
' → logprob: -15.75339126586914
    9. '	return' → logprob: -16.37839126586914
    10. 'for' → logprob: -17.12839126586914

Token 456: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16039980947971344
    2. ' return' → logprob: -1.9103997945785522
    3. '
' → logprob: -9.785399436950684
    4. 'min' → logprob: -9.785399436950684
    5. '       ' → logprob: -10.160399436950684
    6. 'minimum' → logprob: -12.035399436950684
    7. '   ' → logprob: -12.160399436950684
    8. ' min' → logprob: -12.785399436950684
    9. 'result' → logprob: -12.910399436950684
    10. 'best' → logprob: -13.410399436950684

Token 457: ' cost' (ID: 3097)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38783565163612366
    2. ' return' → logprob: -1.1378356218338013
    3. 'cost' → logprob: -7.262835502624512
    4. ' cost' → logprob: -8.262835502624512
    5. 'result' → logprob: -12.887835502624512
    6. 'min' → logprob: -13.512835502624512
    7. ' result' → logprob: -15.137835502624512
    8. '
' → logprob: -15.262835502624512
    9. '```' → logprob: -15.637835502624512
    10. 'total' → logprob: -16.012836456298828

Token 458: ' is' (ID: 382)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1812562793493271
    2. '       ' → logprob: -2.5562562942504883
    3. ' return' → logprob: -2.5562562942504883
    4. '
' → logprob: -4.556256294250488
    5. '        
' → logprob: -10.306256294250488
    6. '
' → logprob: -10.931256294250488
    7. ':return' → logprob: -11.431256294250488
    8. '```' → logprob: -11.806256294250488
    9. ':' → logprob: -12.681256294250488
    10. ')' → logprob: -12.806256294250488

Token 459: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.20145709812641144
    2. 'min' → logprob: -1.701457142829895
    3. 'return' → logprob: -10.451457023620605
    4. ' return' → logprob: -11.826457023620605
    5. '       ' → logprob: -12.076457023620605
    6. '```' → logprob: -14.576457023620605
    7. '   ' → logprob: -14.701457023620605
    8. '	min' → logprob: -14.701457023620605
    9. '(min' → logprob: -16.201457977294922
    10. '=min' → logprob: -16.326457977294922

Token 460: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12692904472351074
    2. ' min' → logprob: -2.1269290447235107
    3. 'minimum' → logprob: -14.50192928314209
    4. 'max' → logprob: -15.25192928314209
    5. ' minimum' → logprob: -16.126928329467773
    6. 'return' → logprob: -16.376928329467773
    7. '(min' → logprob: -17.376928329467773
    8. '   ' → logprob: -17.626928329467773
    9. '	min' → logprob: -17.626928329467773
    10. '=min' → logprob: -18.126928329467773

Token 461: ' of' (ID: 328)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014168680645525455
    2. ' return' → logprob: -4.389168739318848
    3. '(' → logprob: -7.014168739318848
    4. '(
' → logprob: -7.514168739318848
    5. '()' → logprob: -10.139168739318848
    6. 'cost' → logprob: -10.264168739318848
    7. '()
' → logprob: -10.389168739318848
    8. '       ' → logprob: -10.639168739318848
    9. '
' → logprob: -10.639168739318848
    10. '   ' → logprob: -10.889168739318848

Token 462: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023247340694069862
    2. ' candidates' → logprob: -3.773247241973877
    3. ' c' → logprob: -13.898247718811035
    4. '(c' → logprob: -14.898247718811035
    5. '_candidates' → logprob: -15.523247718811035
    6. '   ' → logprob: -16.14824676513672
    7. 'cand' → logprob: -16.64824676513672
    8. '[c' → logprob: -17.02324676513672
    9. ')c' → logprob: -17.27324676513672
    10. ' candidats' → logprob: -17.39824676513672

Token 463: ' above' (ID: 5151)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014176442287862301
    2. ' candidates' → logprob: -4.264176368713379
    3. '[c' → logprob: -12.389176368713379
    4. 'candidate' → logprob: -12.764176368713379
    5. '_candidates' → logprob: -13.139176368713379
    6. 'min' → logprob: -13.264176368713379
    7. ' c' → logprob: -13.389176368713379
    8. 'cand' → logprob: -15.764176368713379
    9. 'Candidates' → logprob: -15.889176368713379
    10. '   ' → logprob: -16.014177322387695

Token 464: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.140337735414505
    2. 'return' → logprob: -2.6403377056121826
    3. ' candidates' → logprob: -3.1403377056121826
    4. ' return' → logprob: -4.140337944030762
    5. '(c' → logprob: -8.390337944030762
    6. '   ' → logprob: -9.015337944030762
    7. 'cost' → logprob: -10.640337944030762
    8. '_candidates' → logprob: -11.640337944030762
    9. '       ' → logprob: -11.765337944030762
    10. ' c' → logprob: -11.890337944030762

Token 465: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3915998041629791
    2. 'return' → logprob: -1.1415997743606567
    3. ' return' → logprob: -5.391599655151367
    4. '   ' → logprob: -9.391599655151367
    5. '
' → logprob: -9.766599655151367
    6. '```' → logprob: -12.141599655151367
    7. '	return' → logprob: -12.266599655151367
    8. '        
' → logprob: -12.266599655151367
    9. '<|end|>' → logprob: -12.641599655151367
    10. '    
' → logprob: -14.516599655151367

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6043120622634888
    2. 'return' → logprob: -0.8543120622634888
    3. '
' → logprob: -4.104311943054199
    4. ' return' → logprob: -4.479311943054199
    5. '```' → logprob: -9.3543119430542
    6. '        
' → logprob: -10.7293119430542
    7. '   ' → logprob: -11.4793119430542
    8. '
' → logprob: -11.8543119430542
    9. '	return' → logprob: -13.8543119430542
    10. '`' → logprob: -14.2293119430542

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007245129905641079
    2. '       ' → logprob: -5.507245063781738
    3. ' return' → logprob: -5.757245063781738
    4. '```' → logprob: -13.632245063781738
    5. '
' → logprob: -14.507245063781738
    6. '        
' → logprob: -15.882245063781738
    7. '	return' → logprob: -17.382246017456055
    8. '   ' → logprob: -17.882246017456055
    9. '{return' → logprob: -18.132246017456055
    10. '``' → logprob: -19.132246017456055

Token 468: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.01416350994259119
    2. 'min' → logprob: -4.264163494110107
    3. '	min' → logprob: -18.639163970947266
    4. '(min' → logprob: -20.014163970947266
    5. ' minimum' → logprob: -21.889163970947266
    6. '   ' → logprob: -22.514163970947266
    7. '[min' → logprob: -22.764163970947266
    8. '=min' → logprob: -23.139163970947266
    9. ' ' → logprob: -23.264163970947266
    10. ' max' → logprob: -23.389163970947266

Token 469: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'c' → logprob: -14.62500286102295
    4. '(
' → logprob: -17.125001907348633
    5. ' (' → logprob: -17.250001907348633
    6. ')c' → logprob: -18.625001907348633
    7. '()' → logprob: -19.000001907348633
    8. '©' → logprob: -19.000001907348633
    9. '	c' → logprob: -19.375001907348633
    10. '(candidate' → logprob: -19.625001907348633

Token 470: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -6.034592388459714e-06
    2. 'c' → logprob: -12.750005722045898
    3. 'and' → logprob: -13.125005722045898
    4. '{' → logprob: -15.000005722045898
    5. '[' → logprob: -15.000005722045898
    6. '[c' → logprob: -15.750005722045898
    7. '(c' → logprob: -16.3750057220459
    8. 'andi' → logprob: -17.2500057220459
    9. '_candidates' → logprob: -17.3750057220459
    10. 'andid' → logprob: -17.3750057220459

Token 471: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.625000953674316
    3. '())' → logprob: -15.500000953674316
    4. '()' → logprob: -15.500000953674316
    5. ' )' → logprob: -15.500000953674316
    6. '   ' → logprob: -16.375001907348633
    7. '))' → logprob: -17.000001907348633
    8. '       ' → logprob: -17.375001907348633
    9. '}' → logprob: -17.750001907348633
    10. ')}' → logprob: -18.625001907348633

Token 472: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5824228525161743
    2. ' test' → logprob: -0.8324228525161743
    3. ' calculate' → logprob: -6.207422733306885
    4. ' example' → logprob: -6.457422733306885
    5. ' solve' → logprob: -7.832422733306885
    6. ' compute' → logprob: -7.832422733306885
    7. ' solution' → logprob: -8.207423210144043
    8. ' create' → logprob: -8.457423210144043
    9. '_' → logprob: -8.457423210144043
    10. ' shopping' → logprob: -8.582423210144043

Token 474: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.30400192737579346
    2. '_' → logprob: -2.054001808166504
    3. '_station' → logprob: -2.804001808166504
    4. '_line' → logprob: -3.804001808166504
    5. '(input' → logprob: -4.054001808166504
    6. '<|end|>' → logprob: -4.054001808166504
    7. '(line' → logprob: -5.929001808166504
    8. '_trip' → logprob: -6.304001808166504
    9. '_code' → logprob: -6.679001808166504
    10. '_train' → logprob: -7.179001808166504

Token 475: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02350366674363613
    2. '(input' → logprob: -4.64850378036499
    3. '(' → logprob: -4.89850378036499
    4. '():
' → logprob: -5.77350378036499
    5. '(line' → logprob: -7.14850378036499
    6. '()' → logprob: -7.52350378036499
    7. '_input' → logprob: -7.89850378036499
    8. '("("' → logprob: -8.273503303527832
    9. '()(' → logprob: -8.398503303527832
    10. '_' → logprob: -8.648503303527832

Token 476: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002620846964418888
    2. '(' → logprob: -6.502620697021484
    3. '():
' → logprob: -7.127620697021484
    4. '()' → logprob: -8.627620697021484
    5. '(input' → logprob: -10.252620697021484
    6. '(line' → logprob: -10.502620697021484
    7. ' ():' → logprob: -10.627620697021484
    8. ':' → logprob: -10.752620697021484
    9. '(file' → logprob: -12.127620697021484
    10. '(":' → logprob: -12.627620697021484

Token 477: ' Shopping' (ID: 32461)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.004870111122727394
    2. 'list' → logprob: -6.0048699378967285
    3. ' tuple' → logprob: -6.3798699378967285
    4. 'int' → logprob: -7.6298699378967285
    5. 'None' → logprob: -9.004870414733887
    6. '(tuple' → logprob: -9.379870414733887
    7. '(list' → logprob: -13.879870414733887
    8. ' list' → logprob: -14.129870414733887
    9. 'Tuple' → logprob: -14.754870414733887
    10. ' None' → logprob: -15.379870414733887

Token 478: 'Tour' (ID: 48485)
  Prédit: 'Tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tour' → logprob: -9.088346359931165e-07
    2. 'Tours' → logprob: -14.375000953674316
    3. ' Tour' → logprob: -16.0
    4. 'Station' → logprob: -16.625
    5. 'tour' → logprob: -17.0
    6. 'Tou' → logprob: -18.0
    7. 'Trip' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. 'Tournament' → logprob: -18.625
    10. 'To' → logprob: -19.125

Token 479: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11733834445476532
    2. '():
' → logprob: -2.2423384189605713
    3. ':' → logprob: -5.617338180541992
    4. '()' → logprob: -7.367338180541992
    5. ':
' → logprob: -9.117338180541992
    6. '(' → logprob: -9.617338180541992
    7. '   ' → logprob: -11.242338180541992
    8. '():
' → logprob: -11.617338180541992
    9. '):' → logprob: -11.992338180541992
    10. '()->' → logprob: -12.492338180541992

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08273635804653168
    2. '```' → logprob: -3.4577362537384033
    3. 'n' → logprob: -4.082736492156982
    4. 'import' → logprob: -4.707736492156982
    5. ' n' → logprob: -4.832736492156982
    6. ' station' → logprob: -5.332736492156982
    7. 'station' → logprob: -6.207736492156982
    8. 'rail' → logprob: -6.457736492156982
    9. ' rail' → logprob: -7.082736492156982
    10. '	n' → logprob: -7.082736492156982

Token 481: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7559015154838562
    2. ' n' → logprob: -1.255901575088501
    3. 'import' (adapté à ' import') → logprob: -1.755901575088501
    4. ' import' → logprob: -3.130901575088501
    5. '   ' → logprob: -4.880901336669922
    6. ' N' → logprob: -5.130901336669922
    7. ' station' → logprob: -5.255901336669922
    8. 'N' → logprob: -5.380901336669922
    9. 'station' → logprob: -5.630901336669922
    10. 'num' → logprob: -6.755901336669922

Token 482: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008615515194833279
    2. ' sys' → logprob: -4.758615493774414
    3. '=sys' → logprob: -14.133615493774414
    4. '_sys' → logprob: -16.383615493774414
    5. '	sys' → logprob: -16.758615493774414
    6. 'io' → logprob: -17.133615493774414
    7. '(sys' → logprob: -18.758615493774414
    8. 'stdin' → logprob: -20.133615493774414
    9. 'built' → logprob: -20.383615493774414
    10. '.sys' → logprob: -20.633615493774414

Token 483: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20236939191818237
    2. '
' → logprob: -2.202369451522827
    3. '    
' → logprob: -3.202369451522827
    4. 'input' → logprob: -3.952369451522827
    5. 'data' → logprob: -5.702369213104248
    6. 'line' → logprob: -6.577369213104248
    7. 'n' → logprob: -6.827369213104248
    8. ' lines' → logprob: -6.827369213104248
    9. 'lines' → logprob: -6.952369213104248
    10. '	lines' → logprob: -7.202369213104248

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11597245186567307
    2. 'n' → logprob: -3.4909725189208984
    3. 'input' → logprob: -3.8659725189208984
    4. ' lines' → logprob: -3.9909725189208984
    5. 'data' → logprob: -4.365972518920898
    6. ' n' → logprob: -4.865972518920898
    7. ' input' → logprob: -5.240972518920898
    8. ' readline' → logprob: -5.490972518920898
    9. '
' → logprob: -5.615972518920898
    10. 'lines' → logprob: -5.990972518920898

Token 485: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.21264536678791046
    2. '   ' → logprob: -2.8376452922821045
    3. ' n' → logprob: -3.3376452922821045
    4. ' lines' → logprob: -3.4626452922821045
    5. ' data' → logprob: -3.4626452922821045
    6. 'input' (adapté à ' input') → logprob: -3.9626452922821045
    7. 'data' → logprob: -4.837645530700684
    8. 'n' → logprob: -4.962645530700684
    9. 'lines' → logprob: -7.837645530700684
    10. ' readline' → logprob: -9.087645530700684

Token 486: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17083679139614105
    2. '_line' → logprob: -2.7958366870880127
    3. '_data' → logprob: -3.2958366870880127
    4. '().' → logprob: -3.9208366870880127
    5. '_lines' → logprob: -4.045836925506592
    6. '=' → logprob: -4.670836925506592
    7. ' =' → logprob: -4.920836925506592
    8. '_' → logprob: -5.795836925506592
    9. '.readline' → logprob: -7.420836925506592
    10. 'data' → logprob: -7.795836925506592

Token 487: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014165041036903858
    2. ' sys' → logprob: -4.264164924621582
    3. '=sys' → logprob: -14.014164924621582
    4. '	sys' → logprob: -14.639164924621582
    5. '(sys' → logprob: -15.514164924621582
    6. 'input' → logprob: -16.0141658782959
    7. 'lambda' → logprob: -18.3891658782959
    8. '_sys' → logprob: -20.6391658782959
    9. '/sys' → logprob: -20.7641658782959
    10. 'stdin' → logprob: -20.7641658782959

Token 488: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008937132079154253
    2. '.' → logprob: -7.125893592834473
    3. '.stdout' → logprob: -10.000893592834473
    4. '.readline' → logprob: -10.750893592834473
    5. ' .' → logprob: -11.375893592834473
    6. 'stdin' → logprob: -12.125893592834473
    7. '.std' → logprob: -13.625893592834473
    8. '.input' → logprob: -13.750893592834473
    9. '._' → logprob: -14.000893592834473
    10. '().' → logprob: -15.000893592834473

Token 489: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00020509003661572933
    2. '.' → logprob: -9.375205039978027
    3. '.read' → logprob: -9.375205039978027
    4. '.stdin' → logprob: -10.500205039978027
    5. 'read' → logprob: -12.250205039978027
    6. '.readlines' → logprob: -13.750205039978027
    7. 'reader' → logprob: -14.375205039978027
    8. ' readline' → logprob: -14.750205039978027
    9. '.buffer' → logprob: -15.750205039978027
    10. 'input' → logprob: -15.750205039978027

Token 490: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22738343477249146
    2. '()
' → logprob: -1.6023833751678467
    3. '().' → logprob: -6.852383613586426
    4. '
' → logprob: -7.977383613586426
    5. '   ' → logprob: -7.977383613586426
    6. '()

' → logprob: -9.602383613586426
    7. '()\' → logprob: -9.602383613586426
    8. '())' → logprob: -11.102383613586426
    9. '    
' → logprob: -11.227383613586426
    10. 'def' → logprob: -11.352383613586426

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00449812738224864
    2. 'n' → logprob: -5.87949800491333
    3. '    
' → logprob: -6.62949800491333
    4. '
' → logprob: -9.004498481750488
    5. ' n' → logprob: -9.004498481750488
    6. 'N' → logprob: -10.879498481750488
    7. 'num' → logprob: -10.879498481750488
    8. 's' → logprob: -11.254498481750488
    9. 'station' → logprob: -11.254498481750488
    10. '	n' → logprob: -11.379498481750488

Token 492: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4571327865123749
    2. '   ' → logprob: -1.7071328163146973
    3. ' n' → logprob: -2.2071328163146973
    4. 'station' → logprob: -3.5821328163146973
    5. 'N' (adapté à ' N') → logprob: -3.8321328163146973
    6. ' station' → logprob: -4.207132816314697
    7. ' N' → logprob: -5.082132816314697
    8. 'num' → logprob: -6.332132816314697
    9. '    
' → logprob: -7.457132816314697
    10. 's' → logprob: -7.582132816314697

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029088929295539856
    2. ' =' → logprob: -6.377908706665039
    3. '=' → logprob: -7.002908706665039
    4. ' ,' → logprob: -8.502908706665039
    5. ',N' → logprob: -9.752908706665039
    6. ',n' → logprob: -11.377908706665039
    7. '=int' → logprob: -12.627908706665039
    8. '(' → logprob: -12.627908706665039
    9. ',int' → logprob: -13.377908706665039
    10. ' ' → logprob: -13.627908706665039

Token 494: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6702374219894409
    2. 'K' → logprob: -0.9202374219894409
    3. ' M' → logprob: -3.0452375411987305
    4. ' K' → logprob: -3.2952375411987305
    5. 'S' → logprob: -5.5452375411987305
    6. 'k' → logprob: -7.5452375411987305
    7. ' S' → logprob: -8.17023754119873
    8. 'Q' → logprob: -8.54523754119873
    9. 'T' → logprob: -9.04523754119873
    10. 'L' → logprob: -9.54523754119873

Token 495: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759748220443726
    2. ' =' → logprob: -0.8259748220443726
    3. ',' → logprob: -10.575974464416504
    4. '=input' → logprob: -12.575974464416504
    5. '    ' → logprob: -13.200974464416504
    6. ' ' → logprob: -13.450974464416504
    7. '=line' → logprob: -13.575974464416504
    8. '   ' → logprob: -14.325974464416504
    9. '  ' → logprob: -15.325974464416504
    10. ')' → logprob: -15.450974464416504

Token 496: ' p' (ID: 275)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.21415765583515167
    2. 'X' → logprob: -3.0891575813293457
    3. 'A' → logprob: -3.2141575813293457
    4. 'K' → logprob: -3.2141575813293457
    5. 'Q' → logprob: -3.7141575813293457
    6. 's' → logprob: -4.714157581329346
    7. 'R' → logprob: -4.964157581329346
    8. 'P' → logprob: -5.089157581329346
    9. 'L' → logprob: -5.214157581329346
    10. 'x' → logprob: -5.589157581329346

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11935478448867798
    2. '=' → logprob: -2.244354724884033
    3. 'os' → logprob: -5.994354724884033
    4. 'r' → logprob: -5.994354724884033
    5. '=start' → logprob: -7.619354724884033
    6. '0' → logprob: -8.244355201721191
    7. 'start' → logprob: -8.744355201721191
    8. '_start' → logprob: -8.994355201721191
    9. '=os' → logprob: -9.494355201721191
    10. ' ' → logprob: -9.494355201721191

Token 498: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029751179739832878
    2. 'map' → logprob: -3.5297510623931885
    3. '	map' → logprob: -15.02975082397461
    4. '(map' → logprob: -16.02975082397461
    5. '   ' → logprob: -16.27975082397461
    6. ' list' → logprob: -16.65475082397461
    7. '[' → logprob: -17.02975082397461
    8. ' ' → logprob: -17.27975082397461
    9. 'input' → logprob: -17.90475082397461
    10. ' ' → logprob: -18.02975082397461

Token 499: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005851170048117638
    2. '(input' → logprob: -5.7558512687683105
    3. '(' → logprob: -6.1308512687683105
    4. 'int' → logprob: -8.255850791931152
    5. '(lambda' → logprob: -9.255850791931152
    6. '(str' → logprob: -9.380850791931152
    7. 'input' → logprob: -10.130850791931152
    8. '(
' → logprob: -11.505850791931152
    9. 'list' → logprob: -13.880850791931152
    10. 'lambda' → logprob: -14.130850791931152

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.605470597743988
    2. ',input' → logprob: -0.980470597743988
    3. 'input' → logprob: -2.980470657348633
    4. '(input' → logprob: -3.605470657348633
    5. ' input' → logprob: -7.355470657348633
    6. '=input' → logprob: -8.980470657348633
    7. ' ,' → logprob: -9.480470657348633
    8. '   ' → logprob: -9.730470657348633
    9. ' (' → logprob: -9.730470657348633
    10. ')' → logprob: -9.980470657348633

Token 501: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233763717114925
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -20.755233764648438
    4. '=input' → logprob: -20.755233764648438
    5. '	input' → logprob: -21.630233764648438
    6. '<input' → logprob: -22.130233764648438
    7. ',input' → logprob: -22.130233764648438
    8. '_input' → logprob: -22.630233764648438
    9. 'sys' → logprob: -22.755233764648438
    10. ' ' → logprob: -22.755233764648438

Token 502: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015908108616713434
    2. '()' → logprob: -8.75015926361084
    3. ' ().' → logprob: -15.25015926361084
    4. '()
' → logprob: -15.87515926361084
    5. '())' → logprob: -15.87515926361084
    6. '(' → logprob: -17.375158309936523
    7. ')' → logprob: -17.875158309936523
    8. '().'' → logprob: -18.375158309936523
    9. '()[' → logprob: -19.250158309936523
    10. '.strip' → logprob: -19.500158309936523

Token 503: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10406296700239182
    2. 'strip' → logprob: -2.354063034057617
    3. 'rstrip' → logprob: -5.604063034057617
    4. 'read' → logprob: -8.854063034057617
    5. '().' → logprob: -10.979063034057617
    6. '(split' → logprob: -13.104063034057617
    7. ' split' → logprob: -13.604063034057617
    8. ' strip' → logprob: -13.979063034057617
    9. ')' → logprob: -14.104063034057617
    10. '.readline' → logprob: -14.604063034057617

Token 504: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.056521907448768616
    2. '()' → logprob: -3.3065218925476074
    3. ')' → logprob: -4.056521892547607
    4. '('' → logprob: -7.556521892547607
    5. '(' → logprob: -8.181522369384766
    6. '())
' → logprob: -8.681522369384766
    7. '().' → logprob: -11.806522369384766
    8. ' ())' → logprob: -11.931522369384766
    9. '("' → logprob: -12.681522369384766
    10. '()
' → logprob: -12.806522369384766

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37916290760040283
    2. ' start' → logprob: -2.2541627883911133
    3. ' stations' → logprob: -2.3791627883911133
    4. 'start' → logprob: -3.1291627883911133
    5. '    
' → logprob: -3.6291627883911133
    6. '
' → logprob: -4.379162788391113
    7. 'stations' → logprob: -4.379162788391113
    8. ' 
' → logprob: -5.254162788391113
    9. '[start' → logprob: -5.504162788391113
    10. ' station' → logprob: -5.879162788391113

Token 506: ' shopping' (ID: 11606)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20809805393218994
    2. ' start' → logprob: -1.70809805393219
    3. 'rail' → logprob: -5.9580979347229
    4. 'shopping' (adapté à ' shopping') → logprob: -6.5830979347229
    5. 'stations' → logprob: -7.5830979347229
    6. 'p' → logprob: -7.8330979347229
    7. '   ' → logprob: -8.083098411560059
    8. ' stations' → logprob: -8.208098411560059
    9. 'station' → logprob: -8.458098411560059
    10. ' rail' → logprob: -8.458098411560059

Token 507: '_indices' (ID: 43508)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.00013047587708570063
    2. 'stations' → logprob: -9.000130653381348
    3. '_positions' → logprob: -13.125130653381348
    4. '_station' → logprob: -13.500130653381348
    5. '_indices' → logprob: -13.625130653381348
    6. '_' → logprob: -14.375130653381348
    7. '_locations' → logprob: -14.625130653381348
    8. '_cent' → logprob: -14.875130653381348
    9. '_points' → logprob: -15.250130653381348
    10. '_places' → logprob: -15.625130653381348

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251936137676239
    2. '=' → logprob: -1.5019361972808838
    3. '[' → logprob: -13.376935958862305
    4. ')' → logprob: -13.501935958862305
    5. ' =[' → logprob: -13.751935958862305
    6. '=[]' → logprob: -14.126935958862305
    7. '[]' → logprob: -14.626935958862305
    8. ' ' → logprob: -15.126935958862305
    9. '[:]' → logprob: -15.126935958862305
    10. ' ' → logprob: -15.251935958862305

Token 509: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029772823676466942
    2. ' list' → logprob: -3.5297727584838867
    3. '[list' → logprob: -10.779772758483887
    4. '[' → logprob: -13.654772758483887
    5. ' [' → logprob: -15.154772758483887
    6. 'map' → logprob: -16.404773712158203
    7. '	list' → logprob: -18.529773712158203
    8. '   ' → logprob: -18.779773712158203
    9. '[p' → logprob: -19.529773712158203
    10. '=list' → logprob: -19.654773712158203

Token 510: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00041875618626363575
    2. '*' → logprob: -7.875418663024902
    3. '*p' → logprob: -10.750418663024902
    4. 'p' → logprob: -11.375418663024902
    5. ' int' → logprob: -12.750418663024902
    6. '
' → logprob: -14.000418663024902
    7. '   ' → logprob: -14.125418663024902
    8. '*(' → logprob: -14.750418663024902
    9. ']int' → logprob: -15.875418663024902
    10. '	int' → logprob: -15.875418663024902

Token 511: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03438923507928848
    2. '(input' → logprob: -3.9093892574310303
    3. '(i' → logprob: -4.409389019012451
    4. '(token' → logprob: -7.284389019012451
    5. '()' → logprob: -8.28438949584961
    6. ']' → logprob: -8.78438949584961
    7. '(' → logprob: -8.78438949584961
    8. 'x' → logprob: -9.28438949584961
    9. '(_)' → logprob: -9.53438949584961
    10. '(s' → logprob: -9.65938949584961

Token 512: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4772873520851135
    2. '().' → logprob: -0.9772873520851135
    3. '()' → logprob: -5.852287292480469
    4. '()
' → logprob: -8.727287292480469
    5. ')' → logprob: -9.727287292480469
    6. '()]' → logprob: -9.852287292480469
    7. '())
' → logprob: -10.477287292480469
    8. ' ())' → logprob: -11.102287292480469
    9. '()),' → logprob: -12.602287292480469
    10. ' ' → logprob: -12.852287292480469

Token 513: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048743605613708496
    2. '().' → logprob: -3.048743724822998
    3. '())' → logprob: -9.29874324798584
    4. '()
' → logprob: -10.79874324798584
    5. '()]' → logprob: -10.79874324798584
    6. ')' → logprob: -11.42374324798584
    7. ' ()' → logprob: -11.54874324798584
    8. '(' → logprob: -14.29874324798584
    9. '()\' → logprob: -14.42374324798584
    10. '()[' → logprob: -14.54874324798584

Token 514: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007946164114400744
    2. '_range' → logprob: -7.625794410705566
    3. ' _' → logprob: -8.250794410705566
    4. '_i' → logprob: -10.750794410705566
    5. '_p' → logprob: -11.875794410705566
    6. ' range' → logprob: -12.000794410705566
    7. '_in' → logprob: -12.750794410705566
    8. '_j' → logprob: -13.625794410705566
    9. '_m' → logprob: -14.000794410705566
    10. '_
' → logprob: -15.000794410705566

Token 515: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00159163074567914
    2. 'in' → logprob: -6.501591682434082
    3. ' range' → logprob: -9.376591682434082
    4. '(range' → logprob: -13.251591682434082
    5. ' in' → logprob: -13.751591682434082
    6. 'ange' → logprob: -13.876591682434082
    7. '   ' → logprob: -15.376591682434082
    8. '	range' → logprob: -15.626591682434082
    9. ')' → logprob: -16.001590728759766
    10. 'x' → logprob: -16.251590728759766

Token 516: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -17.875017166137695
    4. '	range' → logprob: -18.000017166137695
    5. 'rang' → logprob: -18.000017166137695
    6. '
' → logprob: -18.750017166137695
    7. '   ' → logprob: -19.000017166137695
    8. '[' → logprob: -20.000017166137695
    9. '  ' → logprob: -20.375017166137695
    10. 'r' → logprob: -20.375017166137695

Token 517: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -8.061054359131958e-06
    2. 'M' → logprob: -11.750007629394531
    3. '(' → logprob: -15.875007629394531
    4. '	M' → logprob: -18.87500762939453
    5. '((' → logprob: -19.62500762939453
    6. '(
' → logprob: -19.75000762939453
    7. ' (' → logprob: -19.87500762939453
    8. '(m' → logprob: -19.87500762939453
    9. '   ' → logprob: -20.25000762939453
    10. ' M' → logprob: -20.50000762939453

Token 518: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.221884101862088e-05
    2. ')' → logprob: -9.750092506408691
    3. ']' → logprob: -10.375092506408691
    4. ')]
' → logprob: -13.750092506408691
    5. ' )' → logprob: -14.375092506408691
    6. '   ' → logprob: -15.375092506408691
    7. ' ]' → logprob: -15.875092506408691
    8. '()]' → logprob: -15.875092506408691
    9. ')],' → logprob: -16.375091552734375
    10. '')]' → logprob: -16.375091552734375

Token 519: '   ' (ID: 271)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.22755075991153717
    2. 'start' → logprob: -2.102550745010376
    3. '   ' → logprob: -2.727550745010376
    4. '	start' → logprob: -5.852550983428955
    5. ' return' → logprob: -6.102550983428955
    6. 's' → logprob: -6.477550983428955
    7. 'p' → logprob: -6.602550983428955
    8. ' p' → logprob: -6.852550983428955
    9. ' station' → logprob: -6.977550983428955
    10. '
' → logprob: -6.977550983428955

Token 520: ' rail' (ID: 21665)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.48869895935058594
    2. 'start' → logprob: -0.9886989593505859
    3. 'p' → logprob: -5.863698959350586
    4. ' p' → logprob: -5.863698959350586
    5. ' return' → logprob: -6.113698959350586
    6. 'return' → logprob: -6.113698959350586
    7. '   ' → logprob: -6.738698959350586
    8. ' shopping' → logprob: -6.863698959350586
    9. 'shopping' → logprob: -7.113698959350586
    10. 's' → logprob: -7.863698959350586

Token 521: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.00020020268857479095
    2. 'ring' → logprob: -9.375200271606445
    3. 'Ring' → logprob: -9.375200271606445
    4. ' =' → logprob: -11.250200271606445
    5. '_' → logprob: -12.125200271606445
    6. '=' → logprob: -12.375200271606445
    7. '_line' → logprob: -13.375200271606445
    8. '   ' → logprob: -13.500200271606445
    9. ' ring' → logprob: -13.875200271606445
    10. '_station' → logprob: -14.000200271606445

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.225208282470703
    4. '   ' → logprob: -14.850208282470703
    5. '	' → logprob: -16.225208282470703
    6. '  ' → logprob: -16.475208282470703
    7. ' =
' → logprob: -17.725208282470703
    8. ',' → logprob: -18.350208282470703
    9. '```' → logprob: -18.350208282470703
    10. '    ' → logprob: -18.475208282470703

Token 523: ' Rail' (ID: 32384)
  Prédit: 'Rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rail' → logprob: -0.014163747429847717
    2. ' Rail' → logprob: -4.264163970947266
    3. 'Rails' → logprob: -15.139163970947266
    4. 'Station' → logprob: -17.264163970947266
    5. ' ' → logprob: -20.139163970947266
    6. 'rail' → logprob: -20.889163970947266
    7. 'R' → logprob: -21.264163970947266
    8. ' rail' → logprob: -21.764163970947266
    9. '   ' → logprob: -21.889163970947266
    10. 'Ra' → logprob: -22.639163970947266

Token 524: 'Ring' (ID: 52498)
  Prédit: 'Ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ring' → logprob: -2.1054253011243418e-05
    2. 'ing' → logprob: -10.875020980834961
    3. 'Rail' → logprob: -13.625020980834961
    4. 'ring' → logprob: -15.000020980834961
    5. '_ring' → logprob: -15.500020980834961
    6. ' Ring' → logprob: -15.500020980834961
    7. 'Rig' → logprob: -15.875020980834961
    8. 'R' → logprob: -17.12502098083496
    9. 'リング' → logprob: -18.75002098083496
    10. '```' → logprob: -19.00002098083496

Token 525: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.250007629394531
    3. 'N' → logprob: -13.000007629394531
    4. ' (' → logprob: -16.62500762939453
    5. '(
' → logprob: -16.87500762939453
    6. '(n' → logprob: -18.37500762939453
    7. '((' → logprob: -18.50000762939453
    8. '(int' → logprob: -19.62500762939453
    9. '   ' → logprob: -20.37500762939453
    10. '(
' → logprob: -20.87500762939453

Token 526: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02982119657099247
    2. ')
' → logprob: -3.5298211574554443
    3. ',' → logprob: -9.654821395874023
    4. ')
' → logprob: -12.529821395874023
    5. ' )' → logprob: -13.529821395874023
    6. '   ' → logprob: -14.529821395874023
    7. ')

' → logprob: -14.654821395874023
    8. ' )
' → logprob: -14.779821395874023
    9. '),' → logprob: -15.654821395874023
    10. ' ' → logprob: -15.779821395874023

Token 527: '   ' (ID: 271)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.19543947279453278
    2. 'start' → logprob: -1.8204394578933716
    3. '   ' → logprob: -4.195439338684082
    4. '[start' → logprob: -8.695439338684082
    5. '	start' → logprob: -8.695439338684082
    6. '
' → logprob: -9.945439338684082
    7. 'Start' → logprob: -10.945439338684082
    8. '_start' → logprob: -10.945439338684082
    9. '```' → logprob: -10.945439338684082
    10. ' p' → logprob: -11.320439338684082

Token 528: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2817229926586151
    2. 'start' (adapté à ' start') → logprob: -1.4067230224609375
    3. ' shopping' → logprob: -8.656723022460938
    4. ' return' → logprob: -8.781723022460938
    5. 'return' → logprob: -9.031723022460938
    6. 'shopping' → logprob: -9.906723022460938
    7. '   ' → logprob: -10.406723022460938
    8. 'p' → logprob: -11.781723022460938
    9. '```' → logprob: -11.906723022460938
    10. '[start' → logprob: -12.156723022460938

Token 529: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.0001415618316968903
    2. '=' → logprob: -9.250141143798828
    3. ' =' → logprob: -10.250141143798828
    4. '=_' → logprob: -12.500141143798828
    5. 'Station' → logprob: -12.750141143798828
    6. '_' → logprob: -13.000141143798828
    7. 'station' → logprob: -14.500141143798828
    8. '_sta' → logprob: -15.625141143798828
    9. '```' → logprob: -16.250141143798828
    10. 'ing' → logprob: -16.375141143798828

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -18.90475082397461
    4. ' ' → logprob: -19.40475082397461
    5. '```' → logprob: -19.52975082397461
    6. 'Station' → logprob: -19.77975082397461
    7. '=

' → logprob: -20.52975082397461
    8. '＝' → logprob: -21.15475082397461
    9. 'station' → logprob: -21.77975082397461
    10. '_station' → logprob: -22.02975082397461

Token 531: ' Station' (ID: 20902)
  Prédit: 'Station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -5.848420551046729e-05
    2. ' Station' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.000059127807617
    4. 'Rail' → logprob: -19.375059127807617
    5. 'Sta' → logprob: -20.250059127807617
    6. 'Stations' → logprob: -20.250059127807617
    7. 'Seat' → logprob: -20.625059127807617
    8. 'station' → logprob: -20.875059127807617
    9. '_station' → logprob: -21.000059127807617
    10. 'Stock' → logprob: -21.250059127807617

Token 532: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005544631858356297
    2. 'p' → logprob: -7.50055456161499
    3. '(' → logprob: -14.125554084777832
    4. '((' → logprob: -14.875554084777832
    5. '(
' → logprob: -15.375554084777832
    6. ' p' → logprob: -15.500554084777832
    7. ' (' → logprob: -17.50055503845215
    8. '	p' → logprob: -19.00055503845215
    9. '   ' → logprob: -19.25055503845215
    10. '(int' → logprob: -19.37555503845215

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016468366084154695
    2. ')
' → logprob: -8.750164985656738
    3. ' )' → logprob: -12.250164985656738
    4. '))' → logprob: -14.875164985656738
    5. '-' → logprob: -15.125164985656738
    6. '<|end|>' → logprob: -15.500164985656738
    7. '   ' → logprob: -15.750164985656738
    8. ')
' → logprob: -16.000164031982422
    9. '),' → logprob: -16.625164031982422
    10. ')p' → logprob: -16.875164031982422

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09405593574047089
    2. 'shopping' → logprob: -2.8440558910369873
    3. ' shopping' → logprob: -3.4690558910369873
    4. 'return' → logprob: -8.469056129455566
    5. ' return' → logprob: -9.219056129455566
    6. 'sh' → logprob: -10.469056129455566
    7. '  ' → logprob: -11.094056129455566
    8. '	sh' → logprob: -11.219056129455566
    9. '
' → logprob: -11.344056129455566
    10. 'shop' → logprob: -11.719056129455566

Token 535: ' shopping' (ID: 11606)
  Prédit: 'shopping'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shopping' (adapté à ' shopping') → logprob: -0.0012103531043976545
    2. ' shopping' → logprob: -6.7512102127075195
    3. 'return' → logprob: -10.62621021270752
    4. '   ' → logprob: -11.25121021270752
    5. '```' → logprob: -13.75121021270752
    6. 'stations' → logprob: -14.62621021270752
    7. 'sh' → logprob: -15.00121021270752
    8. 'shops' → logprob: -15.37621021270752
    9. 'shop' → logprob: -15.50121021270752
    10. '.shopping' → logprob: -16.251211166381836

Token 536: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0002715873415581882
    2. 'stations' → logprob: -8.250271797180176
    3. '_indices' → logprob: -12.500271797180176
    4. 'Stations' → logprob: -12.500271797180176
    5. '_station' → logprob: -13.500271797180176
    6. 'st' → logprob: -14.875271797180176
    7. '_' → logprob: -14.875271797180176
    8. 's' → logprob: -15.250271797180176
    9. '	st' → logprob: -16.25027084350586
    10. 'indices' → logprob: -16.37527084350586

Token 537: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -2.45848218582978e-06
    2. 't' → logprob: -13.25000286102295
    3. 'at' → logprob: -15.37500286102295
    4. 'stations' → logprob: -15.50000286102295
    5. 'ions' → logprob: -16.625001907348633
    6. 'op' → logprob: -16.875001907348633
    7. 'ops' → logprob: -17.000001907348633
    8. 'ation' → logprob: -17.625001907348633
    9. 'ATIONS' → logprob: -17.750001907348633
    10. 'a' → logprob: -17.750001907348633

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327173113822937
    2. ' =' → logprob: -1.3132717609405518
    3. '=[' → logprob: -11.813271522521973
    4. ' =[' → logprob: -12.938271522521973
    5. '=
' → logprob: -16.81327247619629
    6. '=[]' → logprob: -16.81327247619629
    7. '=

' → logprob: -18.06327247619629
    8. '＝' → logprob: -18.18827247619629
    9. ' =
' → logprob: -18.18827247619629
    10. '.append' → logprob: -18.18827247619629

Token 539: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8074162653647363e-05
    2. ' [' → logprob: -11.000018119812012
    3. '[List' → logprob: -13.875018119812012
    4. '[list' → logprob: -14.875018119812012
    5. '   ' → logprob: -17.625017166137695
    6. '[S' → logprob: -19.000017166137695
    7. '[self' → logprob: -19.500017166137695
    8. '[int' → logprob: -19.625017166137695
    9. '[Index' → logprob: -20.000017166137695
    10. '[start' → logprob: -20.000017166137695

Token 540: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -3.128163257315464e-07
    2. ' Station' → logprob: -15.25
    3. '   ' → logprob: -19.25
    4. 'Stations' → logprob: -23.125
    5. '       ' → logprob: -23.375
    6. '_station' → logprob: -23.75
    7. 'station' → logprob: -24.25
    8. 'Stock' → logprob: -24.5
    9. 'Sta' → logprob: -25.0
    10. 'Shopping' → logprob: -25.375

Token 541: '(idx' (ID: 42793)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2247958481311798
    2. '(idx' → logprob: -1.7247958183288574
    3. '(si' → logprob: -4.724795818328857
    4. 'i' → logprob: -5.224795818328857
    5. '(index' → logprob: -5.349795818328857
    6. 'idx' → logprob: -5.849795818328857
    7. '(s' → logprob: -7.099795818328857
    8. 'index' → logprob: -8.599796295166016
    9. 's' → logprob: -9.349796295166016
    10. '(x' → logprob: -9.599796295166016

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010139751975657418
    2. ')]' → logprob: -10.000101089477539
    3. '   ' → logprob: -11.250101089477539
    4. '(i' → logprob: -11.375101089477539
    5. '(s' → logprob: -12.000101089477539
    6. ' )' → logprob: -12.000101089477539
    7. '(x' → logprob: -12.125101089477539
    8. ')
' → logprob: -12.375101089477539
    9. '       ' → logprob: -13.500101089477539
    10. '(p' → logprob: -13.625101089477539

Token 543: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05528900399804115
    2. 'for' → logprob: -2.9302890300750732
    3. ')' → logprob: -7.930288791656494
    4. '	for' → logprob: -11.305289268493652
    5. ' in' → logprob: -11.430289268493652
    6. '   ' → logprob: -11.805289268493652
    7. '(s' → logprob: -11.930289268493652
    8. '    ' → logprob: -13.305289268493652
    9. '       ' → logprob: -13.680289268493652
    10. ' ' → logprob: -13.805289268493652

Token 544: ' idx' (ID: 14016)
  Prédit: 'shopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shopping' → logprob: -0.01253354549407959
    2. ' shopping' → logprob: -4.387533664703369
    3. 'idx' → logprob: -10.887533187866211
    4. 'shop' → logprob: -12.387533187866211
    5. ' idx' → logprob: -14.387533187866211
    6. '.shopping' → logprob: -16.01253318786621
    7. 'sh' → logprob: -16.13753318786621
    8. '-shopping' → logprob: -16.63753318786621
    9. '购物' → logprob: -16.88753318786621
    10. 'index' → logprob: -17.51253318786621

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06798270344734192
    2. 'in' → logprob: -2.8179826736450195
    3. 'shopping' → logprob: -5.6929826736450195
    4. ' shopping' → logprob: -5.9429826736450195
    5. '.shopping' → logprob: -13.69298267364502
    6. 'Shopping' → logprob: -15.06798267364502
    7. 's' → logprob: -15.31798267364502
    8. '购物' → logprob: -15.44298267364502
    9. ' ' → logprob: -15.44298267364502
    10. '(sh' → logprob: -15.56798267364502

Token 546: ' shopping' (ID: 11606)
  Prédit: 'shopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shopping' → logprob: -0.00020354038861114532
    2. ' shopping' → logprob: -8.500203132629395
    3. 'shop' → logprob: -16.50020408630371
    4. 'sh' → logprob: -17.75020408630371
    5. '.shopping' → logprob: -19.62520408630371
    6. '   ' → logprob: -20.62520408630371
    7. '-shopping' → logprob: -20.62520408630371
    8. 'shipping' → logprob: -21.50020408630371
    9. '购物' → logprob: -21.87520408630371
    10. ' ' → logprob: -22.25020408630371

Token 547: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0005939012626186013
    2. 'indices' → logprob: -7.875594139099121
    3. '_st' → logprob: -8.500594139099121
    4. 'st' → logprob: -12.000594139099121
    5. 's' → logprob: -13.375594139099121
    6. '_' → logprob: -14.250594139099121
    7. ')' → logprob: -14.500594139099121
    8. 'stations' → logprob: -14.750594139099121
    9. 'Indices' → logprob: -14.875594139099121
    10. '"indices' → logprob: -15.375594139099121

Token 548: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007619839743711054
    2. ']
' → logprob: -7.250761985778809
    3. ' ]' → logprob: -10.125761985778809
    4. '   ' → logprob: -12.000761985778809
    5. ']
' → logprob: -12.875761985778809
    6. ')' → logprob: -13.125761985778809
    7. ']

' → logprob: -14.875761985778809
    8. '<|end|>' → logprob: -15.000761985778809
    9. '       ' → logprob: -15.625761985778809
    10. 'return' → logprob: -16.125761032104492

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004176833899691701
    2. 'return' → logprob: -8.375417709350586
    3. ' return' → logprob: -8.625417709350586
    4. '
' → logprob: -12.125417709350586
    5. '	return' → logprob: -13.375417709350586
    6. '    
' → logprob: -14.500417709350586
    7. '<|end|>' → logprob: -16.875417709350586
    8. '       ' → logprob: -17.125417709350586
    9. '```' → logprob: -17.750417709350586
    10. '  ' → logprob: -17.750417709350586

Token 550: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06692396849393845
    2. '   ' → logprob: -2.8169238567352295
    3. ' return' → logprob: -5.316924095153809
    4. '
' → logprob: -10.441924095153809
    5. '	return' → logprob: -12.066924095153809
    6. '    
' → logprob: -13.941924095153809
    7. '  ' → logprob: -15.941924095153809
    8. ' ' → logprob: -16.066923141479492
    9. '```' → logprob: -16.691923141479492
    10. 'eturn' → logprob: -17.191923141479492

Token 551: ' Shopping' (ID: 32461)
  Prédit: 'Shopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Shopping' → logprob: -0.014164687134325504
    2. ' Shopping' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.889164924621582
    4. 'Shop' → logprob: -15.889164924621582
    5. 'shopping' → logprob: -16.389163970947266
    6. ' shopping' → logprob: -16.639163970947266
    7. 'Shipping' → logprob: -17.014163970947266
    8. 'Sh' → logprob: -18.639163970947266
    9. '  ' → logprob: -19.639163970947266
    10. ' ' → logprob: -19.764163970947266

Token 552: 'Tour' (ID: 48485)
  Prédit: 'Tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tour' → logprob: -1.9361264946837764e-07
    2. 'tour' → logprob: -16.0
    3. 'Tours' → logprob: -16.875
    4. 'Tou' → logprob: -19.75
    5. ' Tour' → logprob: -20.0
    6. 'T' → logprob: -21.625
    7. 't' → logprob: -22.25
    8. ' tour' → logprob: -22.25
    9. 'Tur' → logprob: -22.625
    10. 'To' → logprob: -22.625

Token 553: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00040540905320085585
    2. '(
' → logprob: -7.875405311584473
    3. 'rail' → logprob: -11.250405311584473
    4. '(r' → logprob: -11.375405311584473
    5. '(

' → logprob: -15.500405311584473
    6. ' rail' → logprob: -15.875405311584473
    7. ' (' → logprob: -15.875405311584473
    8. '(R' → logprob: -16.37540626525879
    9. '(ray' → logprob: -16.37540626525879
    10. '(
' → logprob: -17.00040626525879

Token 554: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -6.861651490908116e-05
    2. ' rail' → logprob: -9.625068664550781
    3. '   ' → logprob: -13.250068664550781
    4. ')' → logprob: -15.000068664550781
    5. 'rails' → logprob: -15.250068664550781
    6. 'ra' → logprob: -16.25006866455078
    7. 'Rail' → logprob: -16.87506866455078
    8. '
' → logprob: -17.50006866455078
    9. 'raid' → logprob: -18.75006866455078
    10. '```' → logprob: -19.00006866455078

Token 555: '_ring' (ID: 92310)
  Prédit: '_ring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ring' → logprob: -0.0008118899422697723
    2. 'ring' → logprob: -7.12581205368042
    3. 'ing' → logprob: -12.375811576843262
    4. 'Ring' → logprob: -13.625811576843262
    5. '_r' → logprob: -14.875811576843262
    6. ':ring' → logprob: -15.125811576843262
    7. ' ring' → logprob: -15.250811576843262
    8. '_' → logprob: -15.375811576843262
    9. '_RING' → logprob: -15.375811576843262
    10. '-ring' → logprob: -16.500812530517578

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067858281545341015
    2. ',start' → logprob: -5.006785869598389
    3. 'start' → logprob: -10.50678539276123
    4. ' ,' → logprob: -11.00678539276123
    5. '(start' → logprob: -11.00678539276123
    6. ' start' → logprob: -12.50678539276123
    7. '=start' → logprob: -12.50678539276123
    8. '   ' → logprob: -13.50678539276123
    9. '[start' → logprob: -14.63178539276123
    10. '=' → logprob: -14.63178539276123

Token 557: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0024756586644798517
    2. ' start' → logprob: -6.002475738525391
    3. 'station' → logprob: -18.12747573852539
    4. '   ' → logprob: -18.37747573852539
    5. '[start' → logprob: -18.37747573852539
    6. '	start' → logprob: -18.75247573852539
    7. '(start' → logprob: -18.87747573852539
    8. ' ' → logprob: -19.75247573852539
    9. '=start' → logprob: -19.75247573852539
    10. 'star' → logprob: -20.12747573852539

Token 558: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -2.816093228830141e-06
    2. 'station' → logprob: -13.00000286102295
    3. '_st' → logprob: -14.75000286102295
    4. 'Station' → logprob: -16.500001907348633
    5. '_' → logprob: -17.625001907348633
    6. 'start' → logprob: -18.750001907348633
    7. '_star' → logprob: -19.000001907348633
    8. '_sta' → logprob: -19.250001907348633
    9. 's' → logprob: -19.500001907348633
    10. '_s' → logprob: -19.875001907348633

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.500036239624023
    3. '   ' → logprob: -12.625036239624023
    4. ')' → logprob: -12.875036239624023
    5. ',s' → logprob: -14.000036239624023
    6. ',
' → logprob: -14.625036239624023
    7. 'shopping' → logprob: -15.125036239624023
    8. '.shopping' → logprob: -15.625036239624023
    9. ' shopping' → logprob: -15.750036239624023
    10. '[' → logprob: -16.500036239624023

Token 560: ' shopping' (ID: 11606)
  Prédit: 'shopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shopping' → logprob: -0.018150296062231064
    2. ' shopping' → logprob: -4.018150329589844
    3. '.shopping' → logprob: -15.768150329589844
    4. 'shop' → logprob: -16.768150329589844
    5. 'sh' → logprob: -17.393150329589844
    6. 'shipping' → logprob: -17.893150329589844
    7. '-shopping' → logprob: -18.018150329589844
    8. '   ' → logprob: -18.143150329589844
    9. 'Shopping' → logprob: -18.393150329589844
    10. ' ' → logprob: -19.143150329589844

Token 561: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: 0.0
    2. 'stations' → logprob: -18.25
    3. '	st' → logprob: -19.125
    4. ' _' → logprob: -19.25
    5. '_' → logprob: -19.375
    6. 'st' → logprob: -20.875
    7. '_station' → logprob: -20.875
    8. '\' → logprob: -21.375
    9. '__' → logprob: -21.375
    10. '_
' → logprob: -21.5

Token 562: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.747814349073451e-05
    2. 'ation' → logprob: -11.250017166137695
    3. 't' → logprob: -13.125017166137695
    4. 'opping' → logprob: -14.250017166137695
    5. 'ions' → logprob: -14.500017166137695
    6. '_' → logprob: -14.875017166137695
    7. 'a' → logprob: -15.000017166137695
    8. 'stations' → logprob: -15.250017166137695
    9. 'ops' → logprob: -16.625017166137695
    10. 'ATIONS' → logprob: -16.750017166137695

Token 563: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.500003814697266
    4. '())' → logprob: -14.625003814697266
    5. '<|end|>' → logprob: -15.625003814697266
    6. ')return' → logprob: -16.125003814697266
    7. '))' → logprob: -16.875003814697266
    8. ')#' → logprob: -17.250003814697266
    9. ')}' → logprob: -17.625003814697266
    10. ')

' → logprob: -17.875003814697266

Token 564: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10023988783359528
    2. 'def' → logprob: -2.3502399921417236
    3. ' if' → logprob: -10.850239753723145
    4. '```' → logprob: -11.850239753723145
    5. 'print' → logprob: -12.975239753723145
    6. '#' → logprob: -13.225239753723145
    7. 'result' → logprob: -13.725239753723145
    8. 'import' → logprob: -14.600239753723145
    9. 'for' → logprob: -14.725239753723145
    10. 'tour' → logprob: -15.850239753723145

Token 565: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3132634460926056
    2. ' main' → logprob: -1.3132634162902832
    3. 'solve' → logprob: -13.563263893127441
    4. 'run' → logprob: -15.563263893127441
    5. ' solve' → logprob: -15.563263893127441
    6. ' run' → logprob: -16.438262939453125
    7. '	main' → logprob: -17.438262939453125
    8. '_main' → logprob: -19.563262939453125
    9. 'solution' → logprob: -20.563262939453125
    10. 'print' → logprob: -21.063262939453125

Token 566: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.392824874026701e-05
    2. '():
' → logprob: -10.87503433227539
    3. ' ():' → logprob: -11.50003433227539
    4. '()' → logprob: -12.87503433227539
    5. '()>' → logprob: -13.37503433227539
    6. '():
' → logprob: -15.25003433227539
    7. '(' → logprob: -15.50003433227539
    8. '()">' → logprob: -15.62503433227539
    9. '():

' → logprob: -17.75003433227539
    10. '().' → logprob: -17.87503433227539

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2925746738910675
    2. 'tour' → logprob: -1.4175746440887451
    3. ' tour' → logprob: -5.042574882507324
    4. 'st' → logprob: -5.917574882507324
    5. 'shopping' → logprob: -6.917574882507324
    6. 't' → logprob: -7.417574882507324
    7. 'import' → logprob: -8.167574882507324
    8. 'def' → logprob: -9.542574882507324
    9. 'shop' → logprob: -10.042574882507324
    10. ' shopping' → logprob: -10.417574882507324

Token 568: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' (adapté à ' tour') → logprob: -0.0309793408960104
    2. '   ' → logprob: -4.405979156494141
    3. ' tour' → logprob: -4.405979156494141
    4. 'shopping' → logprob: -5.280979156494141
    5. 't' → logprob: -7.405979156494141
    6. 'import' → logprob: -9.15597915649414
    7. ' shopping' → logprob: -9.15597915649414
    8. 'st' → logprob: -9.40597915649414
    9. 'shop' → logprob: -9.53097915649414
    10. '    
' → logprob: -12.40597915649414

Token 569: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00976741872727871
    2. '=' → logprob: -4.634767532348633
    3. ' ' → logprob: -11.759767532348633
    4. '   ' → logprob: -13.384767532348633
    5. '_' → logprob: -13.759767532348633
    6. '  ' → logprob: -14.509767532348633
    7. '.' → logprob: -15.759767532348633
    8. ':' → logprob: -15.884767532348633
    9. '	' → logprob: -16.884767532348633
    10. '    ' → logprob: -16.884767532348633

Token 570: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009114635176956654
    2. ' parse' → logprob: -7.000911235809326
    3. '(parse' → logprob: -18.750911712646484
    4. '=parse' → logprob: -19.750911712646484
    5. '	parse' → logprob: -20.500911712646484
    6. '.parse' → logprob: -24.125911712646484
    7. '_parse' → logprob: -24.750911712646484
    8. 'parser' → logprob: -25.000911712646484
    9. '   ' → logprob: -27.000911712646484
    10. 'par' → logprob: -27.250911712646484

Token 571: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: 0.0
    2. '_Input' → logprob: -18.75
    3. '_' → logprob: -18.875
    4. '_inputs' → logprob: -19.875
    5. '_INPUT' → logprob: -20.0
    6. 'input' → logprob: -20.25
    7. 'Input' → logprob: -20.5
    8. '_in' → logprob: -20.75
    9. '_output' → logprob: -20.875
    10. '_
' → logprob: -21.625

Token 572: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.014368933625519276
    2. '()' → logprob: -4.264369010925293
    3. '
' → logprob: -9.514369010925293
    4. '()
' → logprob: -9.639369010925293
    5. '   ' → logprob: -9.764369010925293
    6. '()

' → logprob: -12.764369010925293
    7. 'def' → logprob: -13.389369010925293
    8. 't' → logprob: -13.764369010925293
    9. '()\' → logprob: -14.014369010925293
    10. 'tour' → logprob: -14.764369010925293

Token 573: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05066317692399025
    2. '   ' → logprob: -3.0506632328033447
    3. 'result' → logprob: -6.425662994384766
    4. ' print' → logprob: -8.175662994384766
    5. 'cost' → logprob: -9.175662994384766
    6. '
' → logprob: -10.050662994384766
    7. '```' → logprob: -11.050662994384766
    8. 'min' → logprob: -12.675662994384766
    9. 'res' → logprob: -13.425662994384766
    10. ' result' → logprob: -13.550662994384766

Token 574: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005107374745421112
    2. 'result' → logprob: -7.7505106925964355
    3. 'min' → logprob: -9.875511169433594
    4. 'cost' → logprob: -10.750511169433594
    5. ' print' → logprob: -12.250511169433594
    6. '   ' → logprob: -13.250511169433594
    7. 'res' → logprob: -14.750511169433594
    8. '```' → logprob: -15.875511169433594
    9. 'answer' → logprob: -16.500511169433594
    10. 'ans' → logprob: -17.625511169433594

Token 575: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002475777640938759
    2. '(' → logprob: -6.002475738525391
    3. 't' → logprob: -17.87747573852539
    4. 'tour' → logprob: -17.87747573852539
    5. '(
' → logprob: -18.37747573852539
    6. '()' → logprob: -18.62747573852539
    7. '((' → logprob: -19.12747573852539
    8. ' (' → logprob: -19.12747573852539
    9. '(ticket' → logprob: -19.87747573852539
    10. '(f' → logprob: -20.25247573852539

Token 576: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -2.5776860184123507e-06
    2. 'ur' → logprob: -13.87500286102295
    3. 'tour' → logprob: -14.25000286102295
    4. '(' → logprob: -15.25000286102295
    5. ')' → logprob: -16.125001907348633
    6. 'Our' → logprob: -16.625001907348633
    7. 'o' → logprob: -16.750001907348633
    8. '   ' → logprob: -16.875001907348633
    9. 'r' → logprob: -17.000001907348633
    10. ' our' → logprob: -17.125001907348633

Token 577: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -8.709308167453855e-05
    2. '.' → logprob: -9.375086784362793
    3. ' .' → logprob: -13.375086784362793
    4. '.calculate' → logprob: -15.000086784362793
    5. ').' → logprob: -15.125086784362793
    6. '._' → logprob: -16.75008773803711
    7. 'compute' → logprob: -17.12508773803711
    8. '   ' → logprob: -18.00008773803711
    9. '.evaluate' → logprob: -18.25008773803711
    10. ' ' → logprob: -19.00008773803711

Token 578: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: 0.0
    2. '_max' → logprob: -16.875
    3. 'min' → logprob: -19.625
    4. '_m' → logprob: -20.375
    5. '_cost' → logprob: -20.75
    6. ')_' → logprob: -21.0
    7. ')' → logprob: -21.375
    8. ' _' → logprob: -21.75
    9. '_MIN' → logprob: -21.875
    10. '_' → logprob: -22.625

Token 579: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: 0.0
    2. '_COST' → logprob: -18.125
    3. 'cost' → logprob: -19.25
    4. '_code' → logprob: -19.5
    5. ' cost' → logprob: -21.375
    6. ' _' → logprob: -22.375
    7. 'Cost' → logprob: -23.0
    8. '_c' → logprob: -23.125
    9. '__' → logprob: -23.375
    10. '-cost' → logprob: -23.75

Token 580: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001182012027129531
    2. '()' → logprob: -6.7511820793151855
    3. '())
' → logprob: -11.501181602478027
    4. ')' → logprob: -13.501181602478027
    5. '()
' → logprob: -15.876181602478027
    6. ' ())' → logprob: -16.126182556152344
    7. '())

' → logprob: -16.876182556152344
    8. '())
' → logprob: -17.751182556152344
    9. '()]' → logprob: -18.376182556152344
    10. '(),' → logprob: -18.626182556152344

Token 581: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005832957685925066
    2. '
' → logprob: -7.500583171844482
    3. '```' → logprob: -11.37558364868164
    4. ' if' → logprob: -11.50058364868164
    5. '\n' → logprob: -12.25058364868164
    6. '<|end|>' → logprob: -12.87558364868164
    7. '\' → logprob: -14.87558364868164
    8. '

' → logprob: -15.50058364868164
    9. '    
' → logprob: -15.50058364868164
    10. '  
' → logprob: -15.62558364868164

Token 582: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05497628077864647
    2. '__' → logprob: -2.929976224899292
    3. '_name' → logprob: -10.304976463317871
    4. 'name' → logprob: -10.304976463317871
    5. '_' → logprob: -11.179976463317871
    6. '___' → logprob: -11.929976463317871
    7. ' ' → logprob: -13.929976463317871
    8. ' "__' → logprob: -13.929976463317871
    9. 'Name' → logprob: -14.054976463317871
    10. '____' → logprob: -14.304976463317871

Token 583: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006350465584546328
    2. ' ==' → logprob: -5.756350517272949
    3. '==' → logprob: -6.381350517272949
    4. ' __' → logprob: -6.881350517272949
    5. '.__' → logprob: -8.88135051727295
    6. '__.' → logprob: -9.00635051727295
    7. '__.__' → logprob: -9.13135051727295
    8. '=="' → logprob: -10.38135051727295
    9. '_' → logprob: -11.88135051727295
    10. 'name' → logprob: -12.63135051727295

Token 584: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1637164789135568e-05
    2. '__.__' → logprob: -12.250011444091797
    3. '==' → logprob: -12.375011444091797
    4. '___' → logprob: -14.000011444091797
    5. '=="' → logprob: -14.500011444091797
    6. '__.' → logprob: -14.750011444091797
    7. ' ==' → logprob: -15.000011444091797
    8. '____' → logprob: -15.125011444091797
    9. '__["' → logprob: -16.000011444091797
    10. '__
' → logprob: -16.375011444091797

Token 585: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1407649964094162
    2. ' ==' → logprob: -2.2657649517059326
    3. '==' → logprob: -3.7657649517059326
    4. '=="' → logprob: -5.640765190124512
    5. '=='' → logprob: -8.140765190124512
    6. '["' → logprob: -9.015765190124512
    7. '['' → logprob: -9.140765190124512
    8. '__.__' → logprob: -9.140765190124512
    9. '.__' → logprob: -9.390765190124512
    10. '"' → logprob: -9.640765190124512

Token 586: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805067762732506
    2. ''' → logprob: -3.288050651550293
    3. '__' → logprob: -12.288050651550293
    4. ' "__' → logprob: -12.413050651550293
    5. '"user' → logprob: -15.413050651550293
    6. ' '__' → logprob: -15.663050651550293
    7. '"_' → logprob: -17.03805160522461
    8. '"name' → logprob: -17.41305160522461
    9. '"class' → logprob: -18.03805160522461
    10. ''"' → logprob: -18.28805160522461

Token 587: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001948271761648357
    2. '__' → logprob: -6.251948356628418
    3. '"' → logprob: -11.501948356628418
    4. 'name' → logprob: -11.626948356628418
    5. '_main' → logprob: -15.501948356628418
    6. ''' → logprob: -15.751948356628418
    7. '__":
' → logprob: -16.1269474029541
    8. ' main' → logprob: -16.3769474029541
    9. '__
' → logprob: -17.1269474029541
    10. 'built' → logprob: -17.1269474029541

Token 588: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2028207927942276
    2. '__' → logprob: -1.7028207778930664
    3. '__':
' → logprob: -7.077820777893066
    4. '__.' → logprob: -8.202820777893066
    5. '__.__' → logprob: -8.827820777893066
    6. '__
' → logprob: -9.202820777893066
    7. '__["' → logprob: -10.577820777893066
    8. '__
' → logprob: -11.452820777893066
    9. '.' → logprob: -12.952820777893066
    10. '__",' → logprob: -14.077820777893066

Token 589: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20575088262557983
    2. '__' → logprob: -1.7057509422302246
    3. 'main' → logprob: -6.080750942230225
    4. ''' → logprob: -6.205750942230225
    5. ' "__' → logprob: -11.330750465393066
    6. '   ' → logprob: -11.830750465393066
    7. ' main' → logprob: -13.955750465393066
    8. '__":
' → logprob: -13.955750465393066
    9. '_main' → logprob: -14.330750465393066
    10. '____' → logprob: -14.580750465393066

Token 590: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -20.25
    4. 'import' → logprob: -21.75
    5. '   ' → logprob: -23.875
    6. '(main' → logprob: -26.125
    7. '.main' → logprob: -26.125
    8. '_main' → logprob: -27.375
    9. '
' → logprob: -27.75
    10. '  ' → logprob: -29.375

Token 591: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020704446360468864
    2. '()
' → logprob: -7.002070426940918
    3. '
' → logprob: -7.377070426940918
    4. '<|end|>' → logprob: -8.252070426940918
    5. '(' → logprob: -8.627070426940918
    6. '```' → logprob: -10.002070426940918
    7. '(
' → logprob: -11.127070426940918
    8. '()\' → logprob: -11.502070426940918
    9. '#' → logprob: -12.377070426940918
    10. '();' → logprob: -12.627070426940918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 589
Tokens correctement prédits (1ère position, stricte): 303
Tokens correctement prédits (1ère position, avec adaptation): 320
Tokens correctement prédits (top 10): 518
Précision stricte (1ère position): 51.44%
Précision adaptée (1ère position): 54.33%
Précision (top 10): 87.95%
================================================================================
