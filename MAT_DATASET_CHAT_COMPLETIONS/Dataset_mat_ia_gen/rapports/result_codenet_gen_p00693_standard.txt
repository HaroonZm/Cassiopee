================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def match(pattern, addr):
    return all(p == '?' or p == a for p, a in zip(pattern, addr))

while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    rules = []
    for _ in range(n):
        parts = input().split()
        rules.append((parts[0], parts[1], parts[2]))
    packets = [input() for _ in range(m)]
    legal = []
    for line in packets:
        src, dst, msg = line.split(' ', 2)
        verdict = 'deny'  # default
        # check rules in reverse priority
        for action, sp, dp in reversed(rules):
            if match(sp, src) and match(dp, dst):
                verdict = action
                break
        if verdict == 'permit':
            legal.append(line)
    print(len(legal))
    print('\n'.join(legal))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' match' (ID: 3981)
  → Token d'amorce (pas de prédiction)

Token 2: '(pattern' (ID: 62660)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017002176493406296
    2. '):' → logprob: -4.267002105712891
    3. '<|end|>' → logprob: -7.017002105712891
    4. ',' → logprob: -7.142002105712891
    5. '[' → logprob: -7.642002105712891
    6. '(' → logprob: -8.51700210571289
    7. 's' → logprob: -9.89200210571289
    8. ')>' → logprob: -10.01700210571289
    9. '):

' → logprob: -10.26700210571289
    10. '_' → logprob: -10.26700210571289

Token 4: ' addr' (ID: 23943)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.6532196402549744
    2. ' text' → logprob: -0.7782196402549744
    3. ' input' → logprob: -4.528219699859619
    4. 'string' → logprob: -5.778219699859619
    5. 'text' → logprob: -6.528219699859619
    6. ')' → logprob: -6.653219699859619
    7. ' s' → logprob: -6.653219699859619
    8. ' sequence' → logprob: -6.903219699859619
    9. ' target' → logprob: -7.403219699859619
    10. ' )' → logprob: -8.528219223022461

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0427914597094059
    2. ')' → logprob: -3.4177913665771484
    3. '[' → logprob: -4.792791366577148
    4. ':' → logprob: -8.167791366577148
    5. 's' → logprob: -8.792791366577148
    6. '```' → logprob: -9.542791366577148
    7. ',' → logprob: -9.667791366577148
    8. '.' → logprob: -9.917791366577148
    9. '):
' → logprob: -10.042791366577148
    10. ''):' → logprob: -10.292791366577148

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.322548508644104
    2. '   ' → logprob: -1.322548508644104
    3. ''' → logprob: -1.697548508644104
    4. '```' → logprob: -1.822548508644104
    5. '"' → logprob: -2.4475483894348145
    6. '(' → logprob: -4.3225483894348145
    7. '[' → logprob: -5.6975483894348145
    8. ' ' → logprob: -6.0725483894348145
    9. '    ' → logprob: -6.1975483894348145
    10. '`' → logprob: -6.4475483894348145

Token 7: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11529941111803055
    2. ' ' → logprob: -3.1152994632720947
    3. ' if' → logprob: -3.6152994632720947
    4. 'if' → logprob: -4.115299224853516
    5. '    ' → logprob: -5.740299224853516
    6. ''' → logprob: -5.740299224853516
    7. 'i' → logprob: -5.990299224853516
    8. 'return' (adapté à ' return') → logprob: -6.240299224853516
    9. '```' → logprob: -6.365299224853516
    10. 'r' → logprob: -6.740299224853516

Token 8: ' all' (ID: 722)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.7116726636886597
    2. ' ' → logprob: -1.0866726636886597
    3. ' bool' → logprob: -2.711672782897949
    4. ' None' → logprob: -3.086672782897949
    5. ' True' → logprob: -3.461672782897949
    6. 'pattern' → logprob: -4.211672782897949
    7. '  ' → logprob: -5.586672782897949
    8. ' re' → logprob: -6.211672782897949
    9. 'bool' → logprob: -6.336672782897949
    10. ' '' → logprob: -7.086672782897949

Token 9: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004497381451074034
    2. '((' → logprob: -8.500450134277344
    3. ' (' → logprob: -9.000450134277344
    4. '[' → logprob: -10.125450134277344
    5. '('' → logprob: -10.250450134277344
    6. '(lambda' → logprob: -11.000450134277344
    7. '[(' → logprob: -12.000450134277344
    8. '(token' → logprob: -12.250450134277344
    9. '(
' → logprob: -12.625450134277344
    10. '  ' → logprob: -12.625450134277344

Token 10: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29231441020965576
    2. '==' → logprob: -1.4173144102096558
    3. ' in' → logprob: -4.917314529418945
    4. 'at' → logprob: -7.042314529418945
    5. 'atch' → logprob: -7.042314529418945
    6. '.startswith' → logprob: -7.917314529418945
    7. '=' → logprob: -8.042314529418945
    8. '[' → logprob: -8.417314529418945
    9. '[i' → logprob: -8.542314529418945
    10. 'art' → logprob: -9.292314529418945

Token 11: ' '?'' (ID: 192100)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02745509333908558
    2. ' a' → logprob: -3.6524550914764404
    3. 'b' → logprob: -8.02745532989502
    4. ''a' → logprob: -8.15245532989502
    5. ''*' → logprob: -9.02745532989502
    6. ' ' → logprob: -9.65245532989502
    7. 'c' → logprob: -10.02745532989502
    8. ' b' → logprob: -10.27745532989502
    9. 's' → logprob: -10.52745532989502
    10. 'None' → logprob: -10.52745532989502

Token 12: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018423834815621376
    2. 'or' → logprob: -4.018424034118652
    3. ' for' → logprob: -9.518424034118652
    4. ')' → logprob: -10.143424034118652
    5. ' ' → logprob: -10.143424034118652
    6. '   ' → logprob: -10.143424034118652
    7. 'for' → logprob: -10.768424034118652
    8. '[' → logprob: -11.268424034118652
    9. '    ' → logprob: -11.393424034118652
    10. '       ' → logprob: -11.768424034118652

Token 13: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030382080003619194
    2. ' a' → logprob: -3.5303821563720703
    3. 'p' → logprob: -8.03038215637207
    4. 'b' → logprob: -9.15538215637207
    5. ' p' → logprob: -9.90538215637207
    6. 's' → logprob: -10.28038215637207
    7. 'c' → logprob: -10.40538215637207
    8. 'd' → logprob: -11.15538215637207
    9. '   ' → logprob: -11.28038215637207
    10. ' b' → logprob: -11.65538215637207

Token 14: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14338518679141998
    2. ' ==' → logprob: -2.018385171890259
    3. '=' → logprob: -7.893385410308838
    4. 's' → logprob: -8.39338493347168
    5. 'p' → logprob: -9.64338493347168
    6. 't' → logprob: -11.89338493347168
    7. '==
' → logprob: -12.01838493347168
    8. ')' → logprob: -12.14338493347168
    9. 'a' → logprob: -12.26838493347168
    10. '=='' → logprob: -13.01838493347168

Token 15: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00252512632869184
    2. ' a' → logprob: -6.002525329589844
    3. 'b' → logprob: -11.252525329589844
    4. 's' → logprob: -11.627525329589844
    5. 'c' → logprob: -12.252525329589844
    6. ' ' → logprob: -12.377525329589844
    7. '   ' → logprob: -13.002525329589844
    8. 'x' → logprob: -13.127525329589844
    9. ''a' → logprob: -13.127525329589844
    10. 'p' → logprob: -13.252525329589844

Token 16: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05691918358206749
    2. 'for' → logprob: -2.9319190979003906
    3. ' or' → logprob: -6.556919097900391
    4. 'or' → logprob: -8.43191909790039
    5. '   ' → logprob: -8.80691909790039
    6. ')' → logprob: -9.18191909790039
    7. 'r' → logprob: -9.80691909790039
    8. ' ' → logprob: -10.30691909790039
    9. '  ' → logprob: -10.68191909790039
    10. '       ' → logprob: -11.05691909790039

Token 17: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01455057505518198
    2. 'p' → logprob: -5.014550685882568
    3. '(p' → logprob: -5.139550685882568
    4. ' zip' → logprob: -6.889550685882568
    5. ' (' → logprob: -7.139550685882568
    6. ' ' → logprob: -10.01455020904541
    7. 'zip' → logprob: -10.26455020904541
    8. '(' → logprob: -10.76455020904541
    9. '  ' → logprob: -11.63955020904541
    10. ',' → logprob: -12.38955020904541

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03370725363492966
    2. ',a' → logprob: -3.6587071418762207
    3. ' ,' → logprob: -5.033707141876221
    4. ' in' → logprob: -7.783707141876221
    5. ' a' → logprob: -7.908707141876221
    6. 'a' → logprob: -9.908707618713379
    7. ',p' → logprob: -11.158707618713379
    8. ' ' → logprob: -12.408707618713379
    9. '<|end|>' → logprob: -13.033707618713379
    10. 'in' → logprob: -13.283707618713379

Token 19: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20142512023448944
    2. 'a' → logprob: -1.7014250755310059
    3. '(a' → logprob: -12.451425552368164
    4. ' ' → logprob: -13.076425552368164
    5. '	a' → logprob: -13.076425552368164
    6. ' (' → logprob: -13.826425552368164
    7. ',a' → logprob: -13.951425552368164
    8. '_a' → logprob: -14.201425552368164
    9. '[a' → logprob: -15.576425552368164
    10. '>a' → logprob: -15.701425552368164

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011861803941428661
    2. 'in' → logprob: -6.751186370849609
    3. '<|end|>' → logprob: -11.25118637084961
    4. ' ' → logprob: -13.87618637084961
    5. ',' → logprob: -14.12618637084961
    6. ')' → logprob: -14.50118637084961
    7. '<|end|>' → logprob: -15.25118637084961
    8. 's' → logprob: -15.93868637084961
    9. '	in' → logprob: -16.68868637084961
    10. '  ' → logprob: -17.06368637084961

Token 21: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.3132643401622772
    2. 'zip' → logprob: -1.3132643699645996
    3. '(zip' → logprob: -13.188263893127441
    4. '.zip' → logprob: -14.313263893127441
    5. '_zip' → logprob: -16.813264846801758
    6. 'Zip' → logprob: -18.813264846801758
    7. 'z' → logprob: -19.063264846801758
    8. '```' → logprob: -19.688264846801758
    9. 'pattern' → logprob: -19.813264846801758
    10. ' ' → logprob: -19.813264846801758

Token 22: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.0010485276579856873
    2. '(' → logprob: -6.876048564910889
    3. '(p' → logprob: -11.37604808807373
    4. ' (' → logprob: -13.12604808807373
    5. ')' → logprob: -14.62604808807373
    6. '(protocol' → logprob: -14.75104808807373
    7. '(
' → logprob: -15.75104808807373
    8. '(address' → logprob: -15.87604808807373
    9. '(user' → logprob: -16.001049041748047
    10. '(match' → logprob: -16.126049041748047

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003291782923042774
    2. '(addr' → logprob: -5.878291606903076
    3. ' ,' → logprob: -8.003292083740234
    4. ',address' → logprob: -9.378292083740234
    5. '(address' → logprob: -10.253292083740234
    6. '(' → logprob: -11.003292083740234
    7. 'addr' → logprob: -12.503292083740234
    8. ')' → logprob: -12.753292083740234
    9. ',a' → logprob: -13.253292083740234
    10. '.addr' → logprob: -14.003292083740234

Token 24: ' addr' (ID: 23943)
  Prédit: 'addr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'addr' → logprob: -0.281299889087677
    2. ' addr' → logprob: -1.4062998294830322
    3. 'address' → logprob: -10.031299591064453
    4. '(addr' → logprob: -10.531299591064453
    5. ' ' → logprob: -10.656299591064453
    6. '	addr' → logprob: -10.656299591064453
    7. '.addr' → logprob: -11.781299591064453
    8. '   ' → logprob: -12.031299591064453
    9. ' address' → logprob: -12.593799591064453
    10. '  ' → logprob: -13.218799591064453

Token 25: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.787507714354433e-05
    2. ')' → logprob: -10.62504768371582
    3. ')))' → logprob: -11.00004768371582
    4. '))
' → logprob: -12.75004768371582
    5. ' ))' → logprob: -13.00004768371582
    6. '[' → logprob: -15.00004768371582
    7. ' ' → logprob: -15.50004768371582
    8. '   ' → logprob: -15.62504768371582
    9. '()))' → logprob: -16.00004768371582
    10. '[]' → logprob: -16.25004768371582

Token 26: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.163447618484497
    2. '<|end|>' → logprob: -1.413447618484497
    3. '#' → logprob: -1.663447618484497
    4. ')' → logprob: -1.788447618484497
    5. '```' → logprob: -3.788447618484497
    6. ':' → logprob: -4.288447380065918
    7. '\n' → logprob: -4.288447380065918
    8. '[' → logprob: -4.913447380065918
    9. '.' → logprob: -5.413447380065918
    10. '\' → logprob: -5.538447380065918

Token 27: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008265270851552486
    2. 'True' → logprob: -4.883265495300293
    3. ' not' → logprob: -7.758265495300293
    4. '(True' → logprob: -8.883265495300293
    5. ' input' → logprob: -10.258265495300293
    6. ' ' → logprob: -10.633265495300293
    7. ' (' → logprob: -12.258265495300293
    8. ' user' → logprob: -12.258265495300293
    9. '=True' → logprob: -12.758265495300293
    10. ' condition' → logprob: -12.758265495300293

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00042412037146277726
    2. ' :' → logprob: -8.6254243850708
    3. ':
' → logprob: -9.3754243850708
    4. '   ' → logprob: -10.0004243850708
    5. '):' → logprob: -10.0004243850708
    6. '():' → logprob: -10.1254243850708
    7. ':**' → logprob: -11.6254243850708
    8. ',' → logprob: -12.5004243850708
    9. '':' → logprob: -12.7504243850708
    10. '':'' → logprob: -13.2504243850708

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006645413814112544
    2. '```' → logprob: -8.125664710998535
    3. '    
' → logprob: -8.375664710998535
    4. ' input' → logprob: -10.375664710998535
    5. 'input' → logprob: -10.750664710998535
    6. ' addr' → logprob: -10.875664710998535
    7. 'addr' → logprob: -11.250664710998535
    8. ' readline' → logprob: -11.875664710998535
    9. '       ' → logprob: -12.375664710998535
    10. '   ' → logprob: -12.375664710998535

Token 30: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4523739218711853
    2. ' addr' → logprob: -1.32737398147583
    3. 'addr' → logprob: -3.32737398147583
    4. ' line' → logprob: -3.45237398147583
    5. ' try' → logprob: -4.57737398147583
    6. 'try' → logprob: -5.57737398147583
    7. ' command' → logprob: -5.95237398147583
    8. ' user' → logprob: -6.07737398147583
    9. ' input' → logprob: -6.57737398147583
    10. ' address' → logprob: -6.57737398147583

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22585059702396393
    2. '=' → logprob: -1.6008505821228027
    3. '=input' → logprob: -8.600851058959961
    4. ' ' → logprob: -9.225851058959961
    5. 'um' → logprob: -9.600851058959961
    6. 'umber' → logprob: -10.725851058959961
    7. '   ' → logprob: -10.850851058959961
    8. '=int' → logprob: -10.850851058959961
    9. 'ame' → logprob: -11.975851058959961
    10. 'u' → logprob: -12.850851058959961

Token 32: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7339836359024048
    2. 'm' → logprob: -1.8589836359024048
    3. ' m' → logprob: -2.2339835166931152
    4. 's' → logprob: -2.3589835166931152
    5. ' a' → logprob: -2.4839835166931152
    6. ' =' → logprob: -2.6089835166931152
    7. ' s' → logprob: -2.6089835166931152
    8. ' ' → logprob: -2.9839835166931152
    9. ' addr' → logprob: -3.8589835166931152
    10. 'space' → logprob: -4.108983516693115

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815614476799965
    2. '=' → logprob: -4.018156051635742
    3. '=input' → logprob: -12.643156051635742
    4. ',' → logprob: -12.893156051635742
    5. ' ' → logprob: -15.643156051635742
    6. ')' → logprob: -16.143156051635742
    7. '    ' → logprob: -16.893156051635742
    8. 'input' → logprob: -17.018156051635742
    9. '  ' → logprob: -17.393156051635742
    10. '<|end|>' → logprob: -17.643156051635742

Token 34: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.43960103392601013
    2. 'map' → logprob: -1.4396010637283325
    3. ' input' → logprob: -2.564600944519043
    4. 'input' → logprob: -3.189600944519043
    5. '[' → logprob: -8.939600944519043
    6. ' [' → logprob: -8.939600944519043
    7. ' list' → logprob: -9.689600944519043
    8. ' ' → logprob: -9.814600944519043
    9. 'list' → logprob: -10.189600944519043
    10. 'int' → logprob: -10.564600944519043

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011234797537326813
    2. '(input' → logprob: -4.761234760284424
    3. '(' → logprob: -6.261234760284424
    4. '(str' → logprob: -7.261234760284424
    5. 'int' → logprob: -12.761235237121582
    6. 'input' → logprob: -13.886235237121582
    7. '(eval' → logprob: -14.386235237121582
    8. '(list' → logprob: -14.636235237121582
    9. ' (' → logprob: -16.011234283447266
    10. ' int' → logprob: -16.261234283447266

Token 36: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35593369603157043
    2. '(input' → logprob: -1.230933666229248
    3. ')' → logprob: -5.105933666229248
    4. '(' → logprob: -7.230933666229248
    5. ' input' → logprob: -7.855933666229248
    6. ',input' → logprob: -8.980934143066406
    7. '=input' → logprob: -9.605934143066406
    8. '```' → logprob: -10.230934143066406
    9. ' )' → logprob: -11.355934143066406
    10. ')(' → logprob: -11.730934143066406

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023471713066101
    2. ' input' → logprob: -2.3502347469329834
    3. ' ' → logprob: -11.350234985351562
    4. '   ' → logprob: -11.725234985351562
    5. '(input' → logprob: -12.975234985351562
    6. '	input' → logprob: -13.225234985351562
    7. ')' → logprob: -13.725234985351562
    8. '=input' → logprob: -13.850234985351562
    9. '```' → logprob: -14.225234985351562
    10. '  ' → logprob: -14.850234985351562

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004452083958312869
    2. '()' → logprob: -7.750445365905762
    3. '())' → logprob: -11.500445365905762
    4. '('' → logprob: -13.250445365905762
    5. '());' → logprob: -14.250445365905762
    6. '()))' → logprob: -15.000445365905762
    7. ')' → logprob: -15.375445365905762
    8. ' ().' → logprob: -15.375445365905762
    9. '("' → logprob: -15.750445365905762
    10. '()
' → logprob: -16.000444412231445

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.636475493200123e-05
    2. 'strip' → logprob: -9.500076293945312
    3. ' split' → logprob: -14.000076293945312
    4. 'rstrip' → logprob: -15.000076293945312
    5. '(split' → logprob: -15.500076293945312
    6. 'spl' → logprob: -17.125076293945312
    7. '().' → logprob: -18.000076293945312
    8. ' ' → logprob: -18.125076293945312
    9. ')' → logprob: -18.250076293945312
    10. '```' → logprob: -18.625076293945312

Token 40: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14216256141662598
    2. ')' → logprob: -2.892162561416626
    3. '()))' → logprob: -3.017162561416626
    4. '()' → logprob: -4.017162322998047
    5. '))' → logprob: -4.642162322998047
    6. '('' → logprob: -8.017162322998047
    7. '(' → logprob: -9.142162322998047
    8. '()),' → logprob: -12.017162322998047
    9. ''))' → logprob: -12.017162322998047
    10. '())
' → logprob: -12.142162322998047

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0011872532777488232
    2. 'n' → logprob: -6.751187324523926
    3. ' not' → logprob: -11.001187324523926
    4. '	n' → logprob: -16.62618637084961
    5. 'not' → logprob: -16.62618637084961
    6. ' ' → logprob: -17.00118637084961
    7. ' ' → logprob: -17.87618637084961
    8. '   ' → logprob: -18.00118637084961
    9. '(n' → logprob: -18.50118637084961
    10. ' н' → logprob: -19.62618637084961

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5769881010055542
    2. '==' → logprob: -0.8269881010055542
    3. ' ' → logprob: -6.951988220214844
    4. '=' → logprob: -9.701988220214844
    5. '0' → logprob: -11.701988220214844
    6. ')' → logprob: -12.451988220214844
    7. ')==' → logprob: -12.451988220214844
    8. ' =' → logprob: -12.826988220214844
    9. '===' → logprob: -13.326988220214844
    10. '```' → logprob: -13.451988220214844

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002491237595677376
    2. ' ' → logprob: -6.002491474151611
    3. 'm' → logprob: -11.377490997314453
    4. '   ' → logprob: -13.502490997314453
    5. ' m' → logprob: -14.064990997314453
    6. '  ' → logprob: -14.564990997314453
    7. '```' → logprob: -15.189990997314453
    8. '    ' → logprob: -15.252490997314453
    9. ' ' → logprob: -16.377490997314453
    10. '_' → logprob: -16.377490997314453

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010676169040380046
    2. ' ' → logprob: -9.250106811523438
    3. 'm' → logprob: -11.500106811523438
    4. '```' → logprob: -15.875106811523438
    5. ' m' → logprob: -16.250106811523438
    6. '  ' → logprob: -16.875106811523438
    7. 'n' → logprob: -17.000106811523438
    8. '   ' → logprob: -17.875106811523438
    9. 'o' → logprob: -17.937606811523438
    10. '-' → logprob: -17.937606811523438

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07893815636634827
    2. 'and' → logprob: -2.5789382457733154
    3. ' ' → logprob: -10.703938484191895
    4. ' or' → logprob: -11.203938484191895
    5. '<|end|>' → logprob: -12.078938484191895
    6. '	and' → logprob: -12.828938484191895
    7. ':' → logprob: -13.328938484191895
    8. ' a' → logprob: -13.953938484191895
    9. ' an' → logprob: -14.578938484191895
    10. '<|end|>' → logprob: -15.078938484191895

Token 48: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.38687199354171753
    2. 'm' → logprob: -1.1368720531463623
    3. '   ' → logprob: -14.386872291564941
    4. '	m' → logprob: -15.761872291564941
    5. '    ' → logprob: -16.511871337890625
    6. ' ' → logprob: -16.761871337890625
    7. ' ' → logprob: -16.761871337890625
    8. 'M' → logprob: -18.011871337890625
    9. 'ｍ' → logprob: -18.261871337890625
    10. '  ' → logprob: -18.511871337890625

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3934241533279419
    2. '==' → logprob: -1.143424153327942
    3. '<|end|>' → logprob: -5.143424034118652
    4. '<|end|>' → logprob: -8.393424034118652
    5. ' ' → logprob: -9.143424034118652
    6. '```' → logprob: -9.268424034118652
    7. '=' → logprob: -9.518424034118652
    8. '  ' → logprob: -10.018424034118652
    9. ')' → logprob: -10.393424034118652
    10. ' ' → logprob: -10.393424034118652

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615161292254925
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.508615493774414
    4. '  ' → logprob: -16.883615493774414
    5. ' ' → logprob: -18.383615493774414
    6. '۰' → logprob: -19.008615493774414
    7. '    ' → logprob: -19.383615493774414
    8. '<|end|>' → logprob: -19.383615493774414
    9. '```' → logprob: -19.946115493774414
    10. '00' → logprob: -20.383615493774414

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -16.50000762939453
    4. '০' → logprob: -17.81250762939453
    5. '०' → logprob: -18.31250762939453
    6. '０' → logprob: -18.56250762939453
    7. '<|end|>' → logprob: -18.93750762939453
    8. '```' → logprob: -19.37500762939453
    9. 'o' → logprob: -19.50000762939453
    10. '<|end|>' → logprob: -20.00000762939453

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017541198758408427
    2. ':
' → logprob: -8.750175476074219
    3. '   ' → logprob: -11.375175476074219
    4. ' :' → logprob: -13.000175476074219
    5. ':return' → logprob: -13.250175476074219
    6. '):' → logprob: -14.500175476074219
    7. '       ' → logprob: -15.125175476074219
    8. '.' → logprob: -15.625175476074219
    9. '():' → logprob: -15.875175476074219
    10. ',' → logprob: -16.50017547607422

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07912683486938477
    2. '   ' → logprob: -2.5791268348693848
    3. ' break' → logprob: -9.079126358032227
    4. ':' → logprob: -10.079126358032227
    5. '	break' → logprob: -10.704126358032227
    6. '     ' → logprob: -11.204126358032227
    7. '    ' → logprob: -11.204126358032227
    8. '      ' → logprob: -11.704126358032227
    9. '   ' → logprob: -12.329126358032227
    10. '           ' → logprob: -12.829126358032227

Token 54: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.018710877746343613
    2. '       ' → logprob: -4.268711090087891
    3. 'break' (adapté à ' break') → logprob: -5.643711090087891
    4. '   ' → logprob: -7.018711090087891
    5. '	break' → logprob: -9.26871109008789
    6. '_break' → logprob: -13.01871109008789
    7. '           ' → logprob: -13.14371109008789
    8. '```' → logprob: -13.26871109008789
    9. ' ' → logprob: -14.39371109008789
    10. '-break' → logprob: -14.76871109008789

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8493736982345581
    2. '
' → logprob: -1.224373698234558
    3. '    
' → logprob: -1.849373698234558
    4. '```' → logprob: -3.0993738174438477
    5. 'for' → logprob: -3.7243738174438477
    6. '\n' → logprob: -4.724373817443848
    7. ' for' → logprob: -4.724373817443848
    8. 'n' → logprob: -5.099373817443848
    9. '  
' → logprob: -5.224373817443848
    10. 'addresses' → logprob: -5.599373817443848

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679801344871521
    2. '```' → logprob: -0.9179801344871521
    3. '    
' → logprob: -3.042980194091797
    4. '
' → logprob: -3.667980194091797
    5. 'for' → logprob: -4.917980194091797
    6. '``' → logprob: -6.042980194091797
    7. ' for' → logprob: -6.417980194091797
    8. '\n' → logprob: -7.042980194091797
    9. '<|end|>' → logprob: -7.417980194091797
    10. '   
' → logprob: -8.292980194091797

Token 57: ' rules' (ID: 9607)
  Prédit: ' addresses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' addresses' → logprob: -0.6350799202919006
    2. 'addresses' → logprob: -1.3850798606872559
    3. '   ' → logprob: -2.510079860687256
    4. 'patterns' → logprob: -2.885079860687256
    5. '```' → logprob: -3.385079860687256
    6. ' patterns' → logprob: -3.635079860687256
    7. '    
' → logprob: -5.635079860687256
    8. '
' → logprob: -5.885079860687256
    9. 'n' → logprob: -6.260079860687256
    10. 'address' → logprob: -6.260079860687256

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004109273198992014
    2. '=' → logprob: -5.5041093826293945
    3. '=[]' → logprob: -11.379109382629395
    4. 's' → logprob: -11.754109382629395
    5. '[]' → logprob: -12.754109382629395
    6. '   ' → logprob: -13.129109382629395
    7. ',' → logprob: -13.254109382629395
    8. ' ' → logprob: -13.754109382629395
    9. ')' → logprob: -13.879109382629395
    10. ' =
' → logprob: -14.129109382629395

Token 59: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17044542729854584
    2. ' []' → logprob: -1.920445442199707
    3. ' [' → logprob: -4.920445442199707
    4. '[' → logprob: -5.920445442199707
    5. '{}' → logprob: -9.545445442199707
    6. '[input' → logprob: -10.170445442199707
    7. '[int' → logprob: -10.295445442199707
    8. '[n' → logprob: -12.045445442199707
    9. '[list' → logprob: -12.170445442199707
    10. ' {}' → logprob: -12.170445442199707

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03040046989917755
    2. '<|end|>' → logprob: -3.655400514602661
    3. ' for' → logprob: -6.405400276184082
    4. '    
' → logprob: -7.030400276184082
    5. '	for' → logprob: -7.780400276184082
    6. 'for' → logprob: -8.280400276184082
    7. '<|end|>' → logprob: -8.280400276184082
    8. '```' → logprob: -8.905400276184082
    9. '    ' → logprob: -9.155400276184082
    10. '
' → logprob: -9.280400276184082

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16866277158260345
    2. ' for' → logprob: -1.9186627864837646
    3. '   ' → logprob: -4.7936625480651855
    4. '	for' → logprob: -9.043663024902344
    5. '   ' → logprob: -14.043663024902344
    6. ' ' → logprob: -14.793663024902344
    7. '    
' → logprob: -14.918663024902344
    8. '\t' → logprob: -15.043663024902344
    9. '```' → logprob: -15.168663024902344
    10. '[' → logprob: -15.293663024902344

Token 62: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12694522738456726
    2. '_' → logprob: -2.1269452571868896
    3. ' i' → logprob: -11.126945495605469
    4. ' ' → logprob: -14.001945495605469
    5. '_i' → logprob: -14.126945495605469
    6. ' ' → logprob: -14.376945495605469
    7. ' ‌' → logprob: -15.251945495605469
    8. ' in' → logprob: -17.37694549560547
    9. 'i' → logprob: -17.50194549560547
    10. ' ​' → logprob: -18.25194549560547

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6330599784851074
    2. 'in' → logprob: -0.7580599784851074
    3. 'range' → logprob: -9.008060455322266
    4. '_' → logprob: -9.133060455322266
    5. ' ' → logprob: -9.133060455322266
    6. 'n' → logprob: -10.383060455322266
    7. 'i' → logprob: -10.633060455322266
    8. '_in' → logprob: -11.133060455322266
    9. '```' → logprob: -11.383060455322266
    10. '  ' → logprob: -11.758060455322266

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.688212614681106e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -17.000017166137695
    4. 'rang' → logprob: -17.500017166137695
    5. '(range' → logprob: -17.625017166137695
    6. 'input' → logprob: -19.125017166137695
    7. '_' → logprob: -19.250017166137695
    8. 'r' → logprob: -19.500017166137695
    9. '_range' → logprob: -19.625017166137695
    10. 'ran' → logprob: -19.750017166137695

Token 65: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020246754866093397
    2. '(' → logprob: -8.750202178955078
    3. ' (' → logprob: -10.375202178955078
    4. 'n' → logprob: -11.875202178955078
    5. ' n' → logprob: -12.125202178955078
    6. '(range' → logprob: -15.750202178955078
    7. '	n' → logprob: -16.000202178955078
    8. '   ' → logprob: -16.500202178955078
    9. '_n' → logprob: -17.250202178955078
    10. ',n' → logprob: -18.625202178955078

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006459801457822323
    2. '):
' → logprob: -5.256459712982178
    3. ' ):' → logprob: -7.506459712982178
    4. '   ' → logprob: -8.381460189819336
    5. ':' → logprob: -8.506460189819336
    6. ')' → logprob: -8.881460189819336
    7. ',' → logprob: -9.381460189819336
    8. '):
' → logprob: -12.131460189819336
    9. ' ):
' → logprob: -12.381460189819336
    10. '       ' → logprob: -13.631460189819336

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017914400668814778
    2. '   ' → logprob: -7.001791477203369
    3. '<|end|>' → logprob: -8.251791000366211
    4. ',' → logprob: -8.626791000366211
    5. ':' → logprob: -8.876791000366211
    6. '```' → logprob: -9.876791000366211
    7. ' rules' → logprob: -10.251791000366211
    8. '	   ' → logprob: -10.501791000366211
    9. '      ' → logprob: -11.126791000366211
    10. '<|end|>' → logprob: -11.126791000366211

Token 68: ' parts' (ID: 7881)
  Prédit: ' rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rules' → logprob: -0.09172680228948593
    2. ' rule' → logprob: -3.216726779937744
    3. 'rules' → logprob: -3.841726779937744
    4. ' pattern' → logprob: -4.466726779937744
    5. ' line' → logprob: -5.216726779937744
    6. ' ip' → logprob: -5.716726779937744
    7. 'rule' → logprob: -6.091726779937744
    8. 'pattern' → logprob: -6.591726779937744
    9. ' parts' → logprob: -7.591726779937744
    10. ' r' → logprob: -7.716726779937744

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043010152876377106
    2. '=' → logprob: -3.1680102348327637
    3. '=input' → logprob: -11.668009757995605
    4. ',' → logprob: -13.918009757995605
    5. '   ' → logprob: -14.293009757995605
    6. '=line' → logprob: -15.293009757995605
    7. 'input' → logprob: -15.793009757995605
    8. ' =
' → logprob: -15.918009757995605
    9. ' ' → logprob: -15.918009757995605
    10. ')' → logprob: -16.668010711669922

Token 70: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759690403938293
    2. 'input' → logprob: -0.8259690403938293
    3. ' list' → logprob: -11.450968742370605
    4. 'list' → logprob: -11.575968742370605
    5. '=input' → logprob: -12.075968742370605
    6. '   ' → logprob: -12.950968742370605
    7. '[input' → logprob: -14.450968742370605
    8. '	input' → logprob: -14.575968742370605
    9. ',input' → logprob: -16.075969696044922
    10. '_input' → logprob: -16.325969696044922

Token 71: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0040807779878377914
    2. '()' → logprob: -5.504080772399902
    3. '(' → logprob: -14.379080772399902
    4. '().'' → logprob: -14.879080772399902
    5. '())' → logprob: -15.629080772399902
    6. ' ().' → logprob: -15.629080772399902
    7. '()
' → logprob: -15.629080772399902
    8. '()[' → logprob: -15.879080772399902
    9. ')' → logprob: -16.00408172607422
    10. '()]' → logprob: -16.25408172607422

Token 72: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004123753868043423
    2. 'strip' → logprob: -5.504123687744141
    3. 'rstrip' → logprob: -10.00412368774414
    4. 'rs' → logprob: -16.87912368774414
    5. ' split' → logprob: -17.62912368774414
    6. 'spl' → logprob: -17.87912368774414
    7. '(split' → logprob: -18.62912368774414
    8. 'startswith' → logprob: -19.25412368774414
    9. 'replace' → logprob: -19.50412368774414
    10. 'plit' → logprob: -20.25412368774414

Token 73: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006083175539970398
    2. '('' → logprob: -7.500608444213867
    3. '(' → logprob: -10.375608444213867
    4. '())' → logprob: -11.625608444213867
    5. '()
' → logprob: -12.625608444213867
    6. '('.')' → logprob: -12.625608444213867
    7. '()[' → logprob: -12.875608444213867
    8. '()]' → logprob: -13.250608444213867
    9. ' ()' → logprob: -14.500608444213867
    10. '(max' → logprob: -14.625608444213867

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48659366369247437
    2. ' rules' → logprob: -1.4865937232971191
    3. '       ' → logprob: -2.111593723297119
    4. 'rules' → logprob: -3.486593723297119
    5. '[' → logprob: -6.611593723297119
    6. ' rule' → logprob: -6.861593723297119
    7. ' addresses' → logprob: -6.986593723297119
    8. '<|end|>' → logprob: -6.986593723297119
    9. ',' → logprob: -7.236593723297119
    10. '.rules' → logprob: -8.611593246459961

Token 75: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' (adapté à ' rules') → logprob: -0.4289278984069824
    2. 'pattern' → logprob: -1.4289278984069824
    3. 'rule' → logprob: -3.3039278984069824
    4. 'ip' → logprob: -3.9289278984069824
    5. ' rules' → logprob: -4.428927898406982
    6. '   ' → logprob: -4.428927898406982
    7. 'addr' → logprob: -4.928927898406982
    8. 'mask' → logprob: -5.553927898406982
    9. ' pattern' → logprob: -5.678927898406982
    10. 'patterns' → logprob: -5.928927898406982

Token 76: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01419324241578579
    2. '.' → logprob: -4.264193058013916
    3. '.extend' → logprob: -10.764193534851074
    4. '.ap' → logprob: -12.639193534851074
    5. ' .' → logprob: -13.139193534851074
    6. '.app' → logprob: -13.764193534851074
    7. '<|end|>' → logprob: -14.639193534851074
    8. '.setdefault' → logprob: -15.264193534851074
    9. '.py' → logprob: -15.389193534851074
    10. ' +=' → logprob: -15.514193534851074

Token 77: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.25255295634269714
    2. '(parts' → logprob: -1.5025529861450195
    3. '(tuple' → logprob: -7.8775529861450195
    4. '(' → logprob: -8.37755298614502
    5. '(('' → logprob: -12.12755298614502
    6. ' (' → logprob: -12.75255298614502
    7. ' ((' → logprob: -13.00255298614502
    8. '(input' → logprob: -13.75255298614502
    9. '([' → logprob: -14.25255298614502
    10. 'parts' → logprob: -14.87755298614502

Token 78: 'parts' (ID: 34761)
  Prédit: 'parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.002522745868191123
    2. ' parts' → logprob: -6.002522945404053
    3. '(parts' → logprob: -11.377522468566895
    4. 'int' → logprob: -11.502522468566895
    5. 'match' → logprob: -11.752522468566895
    6. '   ' → logprob: -11.877522468566895
    7. 'pattern' → logprob: -13.002522468566895
    8. 'patterns' → logprob: -13.127522468566895
    9. '  ' → logprob: -13.627522468566895
    10. 'pieces' → logprob: -14.252522468566895

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.066919301403686e-05
    2. '0' → logprob: -10.250090599060059
    3. '[:' → logprob: -10.500090599060059
    4. '[:-' → logprob: -11.250090599060059
    5. ')' → logprob: -11.750090599060059
    6. ',' → logprob: -13.000090599060059
    7. ' ' → logprob: -13.125090599060059
    8. '[
' → logprob: -14.125090599060059
    9. ':' → logprob: -14.750090599060059
    10. '   ' → logprob: -15.750090599060059

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038634969387203455
    2. '1' → logprob: -5.628863334655762
    3. ' ' → logprob: -9.378863334655762
    4. ':' → logprob: -9.503863334655762
    5. '2' → logprob: -9.878863334655762
    6. '-' → logprob: -10.878863334655762
    7. '   ' → logprob: -11.128863334655762
    8. '[' → logprob: -12.253863334655762
    9. '    ' → logprob: -12.378863334655762
    10. '3' → logprob: -13.253863334655762

Token 81: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3143988847732544
    2. '],' → logprob: -1.3143988847732544
    3. ' ,' → logprob: -7.689398765563965
    4. '],[' → logprob: -8.189398765563965
    5. ']' → logprob: -8.689398765563965
    6. '),' → logprob: -10.064398765563965
    7. ' ],' → logprob: -10.564398765563965
    8. ',p' → logprob: -10.564398765563965
    9. ':],' → logprob: -11.189398765563965
    10. '},' → logprob: -11.439398765563965

Token 82: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6554116010665894
    2. ' parts' → logprob: -0.7804116010665894
    3. 'int' → logprob: -4.280411720275879
    4. ' int' → logprob: -4.780411720275879
    5. '[int' → logprob: -9.530411720275879
    6. ' ' → logprob: -10.030411720275879
    7. '   ' → logprob: -10.030411720275879
    8. '(parts' → logprob: -10.280411720275879
    9. '  ' → logprob: -10.530411720275879
    10. ' [' → logprob: -11.092911720275879

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008454833878204226
    2. '[-' → logprob: -8.125845909118652
    3. '1' → logprob: -8.250845909118652
    4. '-' → logprob: -8.500845909118652
    5. ')' → logprob: -10.875845909118652
    6. ' ' → logprob: -11.500845909118652
    7. ' [' → logprob: -11.500845909118652
    8. '][' → logprob: -11.875845909118652
    9. ',' → logprob: -12.000845909118652
    10. '])' → logprob: -12.125845909118652

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018625585653353482
    2. ' ' → logprob: -9.0001859664917
    3. '2' → logprob: -10.5001859664917
    4. '   ' → logprob: -11.3751859664917
    5. '-' → logprob: -11.8751859664917
    6. '  ' → logprob: -12.3751859664917
    7. '    ' → logprob: -12.7501859664917
    8. '3' → logprob: -13.6251859664917
    9. '
' → logprob: -13.6251859664917
    10. '0' → logprob: -13.6876859664917

Token 85: '],' (ID: 2155)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8725957274436951
    2. ']))' → logprob: -0.8725957274436951
    3. ',' → logprob: -1.8725957870483398
    4. '),' → logprob: -5.87259578704834
    5. '],' → logprob: -5.87259578704834
    6. ']' → logprob: -6.37259578704834
    7. ')))' → logprob: -6.49759578704834
    8. ')' → logprob: -7.12259578704834
    9. '}))' → logprob: -8.24759578704834
    10. '])' → logprob: -8.62259578704834

Token 86: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.20985648036003113
    2. ' int' → logprob: -2.3348565101623535
    3. 'parts' → logprob: -2.9598565101623535
    4. 'int' → logprob: -3.2098565101623535
    5. ' ' → logprob: -9.709856033325195
    6. '   ' → logprob: -10.147356033325195
    7. ' '' → logprob: -11.084856033325195
    8. '[int' → logprob: -11.147356033325195
    9. ' list' → logprob: -11.209856033325195
    10. '  ' → logprob: -11.272356033325195

Token 87: '[' (ID: 58)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.036037594079971313
    2. '[' → logprob: -3.9110376834869385
    3. ',' → logprob: -4.286037445068359
    4. ']))' → logprob: -7.286037445068359
    5. '1' → logprob: -8.53603744506836
    6. '[]' → logprob: -9.03603744506836
    7. ')' → logprob: -9.16103744506836
    8. '))
' → logprob: -9.41103744506836
    9. '==' → logprob: -9.66103744506836
    10. ''))' → logprob: -9.91103744506836

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005511255003511906
    2. '1' → logprob: -7.875551223754883
    3. '-' → logprob: -9.625551223754883
    4. ' ' → logprob: -10.125551223754883
    5. '0' → logprob: -10.250551223754883
    6. '3' → logprob: -11.125551223754883
    7. '])' → logprob: -12.375551223754883
    8. '])
' → logprob: -12.875551223754883
    9. '   ' → logprob: -13.375551223754883
    10. '
' → logprob: -13.938051223754883

Token 89: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002677918178960681
    2. ')' → logprob: -6.502677917480469
    3. ',' → logprob: -6.877677917480469
    4. ']))' → logprob: -10.002677917480469
    5. ' ))' → logprob: -10.252677917480469
    6. ''))' → logprob: -11.002677917480469
    7. ')))' → logprob: -11.252677917480469
    8. '))
' → logprob: -12.002677917480469
    9. '<|end|>' → logprob: -12.377677917480469
    10. '   ' → logprob: -12.752677917480469

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24638627469539642
    2. ' addresses' → logprob: -2.2463862895965576
    3. 'addresses' → logprob: -2.7463862895965576
    4. ' for' → logprob: -3.9963862895965576
    5. 'for' → logprob: -4.3713860511779785
    6. '    
' → logprob: -5.3713860511779785
    7. '
' → logprob: -5.8713860511779785
    8. ' 
' → logprob: -6.2463860511779785
    9. '```' → logprob: -6.6213860511779785
    10. '<|end|>' → logprob: -6.6213860511779785

Token 91: ' packets' (ID: 58163)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050616707652807236
    2. ' for' → logprob: -3.42561674118042
    3. 'addresses' → logprob: -4.55061674118042
    4. '   ' → logprob: -6.17561674118042
    5. 'queries' → logprob: -6.92561674118042
    6. 'results' → logprob: -7.05061674118042
    7. 'requests' → logprob: -7.67561674118042
    8. ' addresses' → logprob: -7.67561674118042
    9. 'add' → logprob: -7.80061674118042
    10. 'ips' → logprob: -7.92561674118042

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005569627974182367
    2. '=' → logprob: -7.500556945800781
    3. '=[]' → logprob: -13.250556945800781
    4. ' ' → logprob: -13.625556945800781
    5. 's' → logprob: -15.500556945800781
    6. '_' → logprob: -15.875556945800781
    7. ' =
' → logprob: -16.00055694580078
    8. '	' → logprob: -16.00055694580078
    9. '   ' → logprob: -16.62555694580078
    10. '  ' → logprob: -16.62555694580078

Token 93: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.10719630122184753
    2. '[]' → logprob: -2.60719633102417
    3. '[' → logprob: -4.10719633102417
    4. '[]
' → logprob: -4.60719633102417
    5. ' [' → logprob: -7.23219633102417
    6. ' []' → logprob: -8.607195854187012
    7. '[int' → logprob: -8.732195854187012
    8. '[ip' → logprob: -9.357195854187012
    9. '[
' → logprob: -9.982195854187012
    10. '[in' → logprob: -10.607195854187012

Token 94: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0036631335970014334
    2. ' input' → logprob: -5.628663063049316
    3. '(input' → logprob: -10.253663063049316
    4. '   ' → logprob: -10.878663063049316
    5. 'tuple' → logprob: -12.628663063049316
    6. '[input' → logprob: -12.628663063049316
    7. '<input' → logprob: -14.128663063049316
    8. '	input' → logprob: -14.503663063049316
    9. ' ' → logprob: -15.253663063049316
    10. '=input' → logprob: -15.503663063049316

Token 95: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012892624363303185
    2. '().' → logprob: -9.000128746032715
    3. ' ()' → logprob: -12.750128746032715
    4. '()
' → logprob: -13.500128746032715
    5. '(' → logprob: -14.750128746032715
    6. '()]' → logprob: -15.250128746032715
    7. '())' → logprob: -15.500128746032715
    8. '（）' → logprob: -15.625128746032715
    9. ')' → logprob: -16.12512969970703
    10. '()

' → logprob: -17.50012969970703

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.693193793296814
    2. 'for' → logprob: -0.693193793296814
    3. '()' → logprob: -10.443193435668945
    4. '	for' → logprob: -11.318193435668945
    5. '   ' → logprob: -13.068193435668945
    6. ')' → logprob: -13.318193435668945
    7. '.strip' → logprob: -14.068193435668945
    8. ' ' → logprob: -14.943193435668945
    9. 'or' → logprob: -15.693193435668945
    10. 'strip' → logprob: -17.443193435668945

Token 97: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14628450572490692
    2. 'range' → logprob: -2.396284580230713
    3. '_' → logprob: -3.146284580230713
    4. ' _' → logprob: -6.271284580230713
    5. '_range' → logprob: -9.271284103393555
    6. ' in' → logprob: -10.271284103393555
    7. '(range' → logprob: -14.521284103393555
    8. ' ' → logprob: -15.021284103393555
    9. '	range' → logprob: -15.021284103393555
    10. 'in' → logprob: -15.021284103393555

Token 98: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.093267522752285
    2. ' in' → logprob: -2.8432674407958984
    3. ' range' → logprob: -3.5932674407958984
    4. 'in' → logprob: -5.718267440795898
    5. 'm' → logprob: -11.718267440795898
    6. ' ' → logprob: -11.718267440795898
    7. '  ' → logprob: -12.843267440795898
    8. '	range' → logprob: -14.468267440795898
    9. '   ' → logprob: -14.718267440795898
    10. '(range' → logprob: -14.843267440795898

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004082197323441505
    2. ' range' → logprob: -5.504082202911377
    3. 'm' → logprob: -12.504081726074219
    4. '(range' → logprob: -17.25408172607422
    5. 'r' → logprob: -18.00408172607422
    6. ' ' → logprob: -18.75408172607422
    7. 'rang' → logprob: -19.00408172607422
    8. '	range' → logprob: -19.25408172607422
    9. '   ' → logprob: -19.37908172607422
    10. 'ran' → logprob: -19.50408172607422

Token 100: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.034592388459714e-06
    2. 'm' → logprob: -12.125005722045898
    3. ' (' → logprob: -14.625005722045898
    4. '(' → logprob: -16.0000057220459
    5. ' m' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.7500057220459
    7. ')m' → logprob: -19.3750057220459
    8. '	m' → logprob: -19.6250057220459
    9. '(n' → logprob: -21.0000057220459
    10. ',m' → logprob: -21.2500057220459

Token 101: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005405815318226814
    2. ')' → logprob: -5.505405902862549
    3. ']' → logprob: -6.630405902862549
    4. ' )' → logprob: -12.13040542602539
    5. ' ]' → logprob: -14.50540542602539
    6. '   ' → logprob: -15.50540542602539
    7. '])' → logprob: -16.25540542602539
    8. '))' → logprob: -16.38040542602539
    9. ')]
' → logprob: -16.50540542602539
    10. ')}' → logprob: -16.50540542602539

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7090380191802979
    2. ' for' → logprob: -1.3340380191802979
    3. 'for' → logprob: -1.7090380191802979
    4. 'results' → logprob: -3.084038019180298
    5. 'matches' → logprob: -5.209037780761719
    6. ' results' → logprob: -5.334037780761719
    7. '    
' → logprob: -6.459037780761719
    8. ' matches' → logprob: -6.834037780761719
    9. 'result' → logprob: -7.084037780761719
    10. 'outputs' → logprob: -7.084037780761719

Token 103: ' legal' (ID: 7749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06803995370864868
    2. 'results' → logprob: -3.193039894104004
    3. ' for' → logprob: -3.818039894104004
    4. ' results' → logprob: -6.693039894104004
    5. '   ' → logprob: -7.068039894104004
    6. 'result' → logprob: -8.443039894104004
    7. 'outputs' → logprob: -8.818039894104004
    8. 'answers' → logprob: -8.943039894104004
    9. 'matches' → logprob: -9.068039894104004
    10. 'res' → logprob: -11.318039894104004

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2734489440917969
    2. '=' → logprob: -1.8984489440917969
    3. '_packets' → logprob: -3.398448944091797
    4. 's' → logprob: -3.898448944091797
    5. '_rules' → logprob: -3.898448944091797
    6. '_' → logprob: -4.773448944091797
    7. '_ips' → logprob: -6.773448944091797
    8. '=[]' → logprob: -6.773448944091797
    9. '_ports' → logprob: -6.898448944091797
    10. ' ' → logprob: -7.273448944091797

Token 105: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4485710561275482
    2. '[' → logprob: -1.9485710859298706
    3. ' []' → logprob: -2.073570966720581
    4. ' [' → logprob: -2.573570966720581
    5. 'set' → logprob: -4.69857120513916
    6. ' ' → logprob: -6.19857120513916
    7. ' set' → logprob: -6.32357120513916
    8. '["' → logprob: -6.57357120513916
    9. '0' → logprob: -6.82357120513916
    10. 'True' → logprob: -7.82357120513916

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008502478594891727
    2. 'for' → logprob: -7.125850200653076
    3. ' for' → logprob: -10.000850677490234
    4. '    
' → logprob: -15.500850677490234
    5. '	for' → logprob: -16.250850677490234
    6. ' ' → logprob: -16.750850677490234
    7. '  ' → logprob: -17.500850677490234
    8. ':' → logprob: -17.625850677490234
    9. '[' → logprob: -17.625850677490234
    10. '[]' → logprob: -17.875850677490234

Token 107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00136988062877208
    2. '   ' → logprob: -7.251369953155518
    3. 'illegal' → logprob: -7.751369953155518
    4. ' for' → logprob: -8.50136947631836
    5. 'legal' → logprob: -11.37636947631836
    6. ' illegal' → logprob: -12.87636947631836
    7. 'results' → logprob: -12.87636947631836
    8. 'counts' → logprob: -13.25136947631836
    9. 'blocked' → logprob: -13.62636947631836
    10. 'count' → logprob: -14.62636947631836

Token 108: ' line' (ID: 2543)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6393290758132935
    2. 'packet' → logprob: -1.3893290758132935
    3. 'pkt' → logprob: -2.139328956604004
    4. ' packet' → logprob: -2.889328956604004
    5. ' p' → logprob: -4.014328956604004
    6. 'addr' → logprob: -4.764328956604004
    7. ' pkt' → logprob: -4.764328956604004
    8. 'i' → logprob: -5.389328956604004
    9. 'a' → logprob: -5.764328956604004
    10. '_' → logprob: -6.389328956604004

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007708481512963772
    2. 'in' → logprob: -4.882708549499512
    3. 's' → logprob: -9.882708549499512
    4. '_in' → logprob: -11.757708549499512
    5. ',' → logprob: -11.882708549499512
    6. '	in' → logprob: -12.007708549499512
    7. '   ' → logprob: -12.132708549499512
    8. ' packets' → logprob: -12.257708549499512
    9. '_' → logprob: -12.382708549499512
    10. ' ' → logprob: -13.007708549499512

Token 110: ' packets' (ID: 58163)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.47424137592315674
    2. ' packets' → logprob: -0.9742413759231567
    3. 'rules' → logprob: -10.224241256713867
    4. 'range' → logprob: -10.224241256713867
    5. ' range' → logprob: -10.974241256713867
    6. ' pack' → logprob: -11.349241256713867
    7. 'legal' → logprob: -11.724241256713867
    8. ' rules' → logprob: -11.724241256713867
    9. 'pak' → logprob: -11.974241256713867
    10. '_packets' → logprob: -12.099241256713867

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024858469259925187
    2. ':
' → logprob: -8.500248908996582
    3. ' :' → logprob: -10.125248908996582
    4. '):' → logprob: -12.750248908996582
    5. ' in' → logprob: -14.500248908996582
    6. ':
' → logprob: -14.875248908996582
    7. '=' → logprob: -15.000248908996582
    8. ':

' → logprob: -15.375248908996582
    9. ',' → logprob: -16.250247955322266
    10. '   ' → logprob: -16.875247955322266

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001239196863025427
    2. '   ' → logprob: -9.500123977661133
    3. ' for' → logprob: -11.125123977661133
    4. ',' → logprob: -11.250123977661133
    5. ':' → logprob: -12.125123977661133
    6. '	   ' → logprob: -12.625123977661133
    7. '        
' → logprob: -13.125123977661133
    8. '    ' → logprob: -13.375123977661133
    9. '    
' → logprob: -13.875123977661133
    10. '      ' → logprob: -14.000123977661133

Token 113: ' src' (ID: 4537)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -1.238823652267456
    2. ' action' → logprob: -1.363823652267456
    3. ' for' → logprob: -1.988823652267456
    4. '   ' → logprob: -2.613823652267456
    5. ' matched' → logprob: -2.863823652267456
    6. 'found' → logprob: -3.113823652267456
    7. ' allow' → logprob: -3.613823652267456
    8. ' allowed' → logprob: -3.988823652267456
    9. '       ' → logprob: -4.238823890686035
    10. ' legal' → logprob: -4.363823890686035

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026548474561423063
    2. '_,' → logprob: -7.377655029296875
    3. ' =' → logprob: -7.377655029296875
    4. '_ip' → logprob: -7.627655029296875
    5. ' ,' → logprob: -7.877655029296875
    6. '=' → logprob: -8.377655029296875
    7. '_mat' → logprob: -9.502655029296875
    8. '_' → logprob: -9.752655029296875
    9. '_found' → logprob: -10.252655029296875
    10. 's' → logprob: -10.502655029296875

Token 115: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.13497798144817352
    2. ' dst' → logprob: -2.2599780559539795
    3. 'dest' → logprob: -3.8849780559539795
    4. ' dest' → logprob: -7.0099778175354
    5. 'des' → logprob: -8.384978294372559
    6. '	dst' → logprob: -9.884978294372559
    7. 'src' → logprob: -10.134978294372559
    8. '   ' → logprob: -10.509978294372559
    9. ' des' → logprob: -10.759978294372559
    10. ' ' → logprob: -11.009978294372559

Token 116: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3306874930858612
    2. ' =' → logprob: -1.5806875228881836
    3. ',' → logprob: -2.5806875228881836
    4. ' ,' → logprob: -11.580687522888184
    5. ' ' → logprob: -12.955687522888184
    6. '<|end|>' → logprob: -14.330687522888184
    7. '=line' → logprob: -14.830687522888184
    8. '   ' → logprob: -15.330687522888184
    9. ')' → logprob: -15.643187522888184
    10. '_=' → logprob: -15.768187522888184

Token 117: ' msg' (ID: 6981)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.48682162165641785
    2. 'proto' → logprob: -2.3618216514587402
    3. 'pr' → logprob: -3.2368216514587402
    4. 'prt' → logprob: -3.2368216514587402
    5. 'prot' → logprob: -3.7368216514587402
    6. 'service' → logprob: -3.9868216514587402
    7. 'pro' → logprob: -4.11182165145874
    8. ' proto' → logprob: -4.23682165145874
    9. 'sport' → logprob: -4.36182165145874
    10. ' port' → logprob: -4.48682165145874

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741000831127167
    2. ' =' → logprob: -0.9741001129150391
    3. ',' → logprob: -10.974100112915039
    4. '   ' → logprob: -12.974100112915039
    5. '=line' → logprob: -14.224100112915039
    6. ')' → logprob: -14.474100112915039
    7. ' ' → logprob: -14.474100112915039
    8. '_' → logprob: -15.099100112915039
    9. 'line' → logprob: -15.224100112915039
    10. 's' → logprob: -15.474100112915039

Token 119: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.011064444668591022
    2. 'line' → logprob: -4.511064529418945
    3. ' ' → logprob: -12.011064529418945
    4. '[line' → logprob: -12.761064529418945
    5. '	line' → logprob: -12.761064529418945
    6. '(line' → logprob: -13.511064529418945
    7. '   ' → logprob: -13.636064529418945
    8. '=line' → logprob: -14.011064529418945
    9. ' map' → logprob: -14.761064529418945
    10. ' input' → logprob: -15.386064529418945

Token 120: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.023677146062254906
    2. '.' → logprob: -3.773677110671997
    3. '=' → logprob: -8.273676872253418
    4. ' .' → logprob: -9.523676872253418
    5. ' =' → logprob: -9.648676872253418
    6. 'split' → logprob: -10.898676872253418
    7. '   ' → logprob: -11.023676872253418
    8. '.strip' → logprob: -13.523676872253418
    9. ',' → logprob: -14.273676872253418
    10. ' split' → logprob: -14.648676872253418

Token 121: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.066919301403686e-05
    2. '('' → logprob: -9.625090599060059
    3. '(' → logprob: -10.750090599060059
    4. '(max' → logprob: -13.875090599060059
    5. ' ()' → logprob: -14.125090599060059
    6. '(None' → logprob: -15.125090599060059
    7. '()
' → logprob: -15.375090599060059
    8. '()='' → logprob: -15.625090599060059
    9. '('.')' → logprob: -16.125091552734375
    10. '())' → logprob: -16.125091552734375

Token 122: ' ',' (ID: 14089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7882537245750427
    2. '()' → logprob: -0.7882537245750427
    3. '())' → logprob: -2.4132537841796875
    4. ' )' → logprob: -7.1632537841796875
    5. '(),' → logprob: -8.913253784179688
    6. '')' → logprob: -8.913253784179688
    7. '(' → logprob: -9.663253784179688
    8. ',' → logprob: -10.663253784179688
    9. '('' → logprob: -10.663253784179688
    10. '()
' → logprob: -11.413253784179688

Token 123: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006083175539970398
    2. ' ' → logprob: -7.500608444213867
    3. '1' → logprob: -9.875608444213867
    4. 'max' → logprob: -13.375608444213867
    5. ')' → logprob: -14.125608444213867
    6. '   ' → logprob: -14.250608444213867
    7. ' max' → logprob: -15.000608444213867
    8. '3' → logprob: -15.375608444213867
    9. ',' → logprob: -16.250608444213867
    10. '  ' → logprob: -16.375608444213867

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011689399980241433
    2. '1' → logprob: -9.500117301940918
    3. ' ' → logprob: -10.500117301940918
    4. '3' → logprob: -11.500117301940918
    5. 'max' → logprob: -13.125117301940918
    6. ')' → logprob: -13.250117301940918
    7. '   ' → logprob: -15.125117301940918
    8. '```' → logprob: -16.5001163482666
    9. '  ' → logprob: -16.7501163482666
    10. ',' → logprob: -17.2501163482666

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '       ' → logprob: -18.25
    6. ',' → logprob: -18.25
    7. '),' → logprob: -18.5
    8. '')' → logprob: -18.75
    9. ')

' → logprob: -19.375
    10. ')`' → logprob: -19.375

Token 126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37039172649383545
    2. '       ' → logprob: -1.4953917264938354
    3. '<|end|>' → logprob: -2.745391845703125
    4. '
' → logprob: -4.370391845703125
    5. ' for' → logprob: -6.370391845703125
    6. ' found' → logprob: -6.870391845703125
    7. '    
' → logprob: -7.120391845703125
    8. ',' → logprob: -7.245391845703125
    9. '        
' → logprob: -7.370391845703125
    10. ')' → logprob: -7.620391845703125

Token 127: ' verdict' (ID: 75722)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.7154036164283752
    2. 'matched' → logprob: -1.5904035568237305
    3. 'allowed' → logprob: -2.8404035568237305
    4. 'for' → logprob: -2.8404035568237305
    5. 'action' → logprob: -3.2154035568237305
    6. 'flag' → logprob: -3.5904035568237305
    7. ' found' → logprob: -3.8404035568237305
    8. 'ok' → logprob: -4.3404035568237305
    9. ' matched' → logprob: -4.4654035568237305
    10. 'accepted' → logprob: -4.4654035568237305

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687655329704285
    2. '=' → logprob: -1.1368765830993652
    3. 's' → logprob: -12.636876106262207
    4. ' ' → logprob: -14.011876106262207
    5. ',' → logprob: -14.136876106262207
    6. '=None' → logprob: -14.761876106262207
    7. '=[]' → logprob: -16.636877059936523
    8. ')' → logprob: -16.761877059936523
    9. ' =)' → logprob: -17.136877059936523
    10. '_' → logprob: -17.261877059936523

Token 129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3698946237564087
    2. '"' → logprob: -1.6198946237564087
    3. ' '' → logprob: -2.869894504547119
    4. ' "' → logprob: -3.244894504547119
    5. '   ' → logprob: -5.619894504547119
    6. 'None' → logprob: -5.744894504547119
    7. ' None' → logprob: -5.869894504547119
    8. '"No' → logprob: -6.994894504547119
    9. ''s' → logprob: -7.369894504547119
    10. ''D' → logprob: -7.494894504547119

Token 130: 'deny' (ID: 193901)
  Prédit: 'reject'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reject' → logprob: -1.1309080123901367
    2. 'none' → logprob: -1.7559080123901367
    3. 'accept' → logprob: -2.7559080123901367
    4. '?' → logprob: -3.1309080123901367
    5. 'DROP' → logprob: -3.1309080123901367
    6. 'D' → logprob: -3.3809080123901367
    7. 'DEN' → logprob: -3.6309080123901367
    8. 'undefined' → logprob: -3.6309080123901367
    9. 'discard' → logprob: -3.6309080123901367
    10. 'NONE' → logprob: -3.7559080123901367

Token 131: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012440400896593928
    2. ''
' → logprob: -6.751244068145752
    3. '')' → logprob: -10.126243591308594
    4. ' '' → logprob: -11.501243591308594
    5. '"' → logprob: -11.626243591308594
    6. 'ed' → logprob: -13.001243591308594
    7. 'if' → logprob: -13.001243591308594
    8. ''t' → logprob: -13.126243591308594
    9. 'd' → logprob: -13.501243591308594
    10. ''d' → logprob: -13.626243591308594

Token 132: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45961788296699524
    2. '
' → logprob: -1.8346178531646729
    3. '<|end|>' → logprob: -1.8346178531646729
    4. 'if' → logprob: -3.209617853164673
    5. ' for' → logprob: -5.084618091583252
    6. '<|end|>' → logprob: -6.834618091583252
    7. ' if' → logprob: -7.459618091583252
    8. 'def' → logprob: -8.709617614746094
    9. ')' → logprob: -9.209617614746094
    10. 'not' → logprob: -9.209617614746094

Token 134: ' default' (ID: 2787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5577467679977417
    2. '       ' → logprob: -1.5577467679977417
    3. '<|end|>' → logprob: -1.9327467679977417
    4. ' for' → logprob: -2.9327468872070312
    5. '   ' → logprob: -4.557746887207031
    6. 'for' → logprob: -5.682746887207031
    7. '<|end|>' → logprob: -5.932746887207031
    8. '        
' → logprob: -7.057746887207031
    9. '  
' → logprob: -8.057746887207031
    10. '    
' → logprob: -8.307746887207031

Token 137: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3409371078014374
    2. 'for' → logprob: -1.5909371376037598
    3. '       ' → logprob: -2.9659371376037598
    4. '   ' → logprob: -3.4659371376037598
    5. '
' → logprob: -6.59093713760376
    6. '	for' → logprob: -7.09093713760376
    7. '<|end|>' → logprob: -9.215936660766602
    8. '    
' → logprob: -10.340936660766602
    9. '  ' → logprob: -10.715936660766602
    10. ' ' → logprob: -11.340936660766602

Token 138: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31350603699684143
    2. ' for' → logprob: -1.313506007194519
    3. '       ' → logprob: -8.688506126403809
    4. '   ' → logprob: -9.563506126403809
    5. 'For' → logprob: -12.688506126403809
    6. '	for' → logprob: -13.813506126403809
    7. '
' → logprob: -15.063506126403809
    8. ' ' → logprob: -15.063506126403809
    9. ' For' → logprob: -15.063506126403809
    10. '  ' → logprob: -15.813506126403809

Token 139: ' rules' (ID: 9607)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7888922095298767
    2. ' rules' → logprob: -1.6638922691345215
    3. 'rules' → logprob: -2.6638922691345215
    4. '<|end|>' → logprob: -2.6638922691345215
    5. ' if' → logprob: -2.7888922691345215
    6. 'ing' → logprob: -3.2888922691345215
    7. '_rules' → logprob: -3.6638922691345215
    8. ' each' → logprob: -4.1638922691345215
    9. ' in' → logprob: -4.5388922691345215
    10. 'for' → logprob: -4.5388922691345215

Token 140: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1914745420217514
    2. ' for' → logprob: -1.8164745569229126
    3. '<|end|>' → logprob: -5.066474437713623
    4. '   ' → logprob: -6.191474437713623
    5. 'for' → logprob: -6.441474437713623
    6. '
' → logprob: -6.941474437713623
    7. '<|end|>' → logprob: -7.941474437713623
    8. '	for' → logprob: -9.316474914550781
    9. ',' → logprob: -9.441474914550781
    10. '        
' → logprob: -10.316474914550781

Token 141: ' reverse' (ID: 18199)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.09499246627092361
    2. ' rules' → logprob: -2.7199923992156982
    3. 'order' → logprob: -4.344992637634277
    4. 'rules' → logprob: -4.719992637634277
    5. ' sequence' → logprob: -6.094992637634277
    6. ' range' → logprob: -8.594992637634277
    7. 'sequence' → logprob: -9.469992637634277
    8. ' reverse' → logprob: -9.469992637634277
    9. 'for' → logprob: -10.094992637634277
    10. ' the' → logprob: -10.219992637634277

Token 142: ' priority' (ID: 17621)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18919064104557037
    2. '<|end|>' → logprob: -2.064190626144409
    3. 'for' → logprob: -3.814190626144409
    4. '[::-' → logprob: -4.689190864562988
    5. '   ' → logprob: -5.064190864562988
    6. '<|end|>' → logprob: -5.689190864562988
    7. '
' → logprob: -6.314190864562988
    8. '	for' → logprob: -7.439190864562988
    9. ',' → logprob: -7.814190864562988
    10. '(reverse' → logprob: -7.939190864562988

Token 143: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7751944065093994
    2. '<|end|>' → logprob: -1.2751944065093994
    3. '       ' → logprob: -1.5251944065093994
    4. '   ' → logprob: -4.40019416809082
    5. '
' → logprob: -4.52519416809082
    6. 'for' → logprob: -5.27519416809082
    7. ',' → logprob: -5.77519416809082
    8. '<|end|>' → logprob: -6.02519416809082
    9. '        
' → logprob: -6.40019416809082
    10. ' ' → logprob: -6.65019416809082

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5818596482276917
    2. '   ' → logprob: -1.3318595886230469
    3. ' for' → logprob: -2.456859588623047
    4. '<|end|>' → logprob: -2.706859588623047
    5. '
' → logprob: -3.956859588623047
    6. 'for' → logprob: -6.206859588623047
    7. '<|end|>' → logprob: -6.706859588623047
    8. '	for' → logprob: -7.706859588623047
    9. '    ' → logprob: -7.831859588623047
    10. '    
' → logprob: -8.206859588623047

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07620841264724731
    2. '       ' → logprob: -2.8262083530426025
    3. 'for' (adapté à ' for') → logprob: -4.826208591461182
    4. '   ' → logprob: -5.326208591461182
    5. '<|end|>' → logprob: -7.076208591461182
    6. '
' → logprob: -8.201208114624023
    7. '	for' → logprob: -9.326208114624023
    8. '<|end|>' → logprob: -10.951208114624023
    9. '        
' → logprob: -12.076208114624023
    10. ' ' → logprob: -12.326208114624023

Token 146: ' action' (ID: 3736)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6992543935775757
    2. 'rule' → logprob: -1.9492543935775757
    3. 'r' → logprob: -2.0742545127868652
    4. 'pat' → logprob: -2.6992545127868652
    5. 'src' → logprob: -3.0742545127868652
    6. 'p' → logprob: -3.4492545127868652
    7. ' pattern' → logprob: -3.5742545127868652
    8. 'i' → logprob: -3.6992545127868652
    9. ' pat' → logprob: -4.824254512786865
    10. ' rule' → logprob: -4.949254512786865

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009381203912198544
    2. ' in' → logprob: -5.384381294250488
    3. ' ,' → logprob: -5.509381294250488
    4. '_,' → logprob: -7.384381294250488
    5. '=' → logprob: -11.134381294250488
    6. 'in' → logprob: -11.384381294250488
    7. '```' → logprob: -11.884381294250488
    8. ',p' → logprob: -12.384381294250488
    9. ',line' → logprob: -12.509381294250488
    10. 'src' → logprob: -12.509381294250488

Token 148: ' sp' (ID: 1014)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.05662386491894722
    2. 'pattern' → logprob: -3.306623935699463
    3. 's' → logprob: -5.181623935699463
    4. 'source' → logprob: -5.181623935699463
    5. 'sr' → logprob: -6.181623935699463
    6. 'pat' → logprob: -6.806623935699463
    7. ' src' → logprob: -6.806623935699463
    8. 'p' → logprob: -7.181623935699463
    9. 'ps' → logprob: -8.181623458862305
    10. 'sp' → logprob: -8.306623458862305

Token 149: ',' (ID: 11)
  Prédit: 'attern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.028553416952490807
    2. ',' → logprob: -4.278553485870361
    3. 'at' → logprob: -5.028553485870361
    4. 'refix' → logprob: -5.278553485870361
    5. 'ec' → logprob: -6.903553485870361
    6. 'att' → logprob: -6.903553485870361
    7. 'atter' → logprob: -8.903553009033203
    8. 'addr' → logprob: -9.403553009033203
    9. 'pattern' → logprob: -9.403553009033203
    10. 'src' → logprob: -10.403553009033203

Token 150: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007763027213513851
    2. 'sd' → logprob: -5.132762908935547
    3. ' dp' → logprob: -6.882762908935547
    4. 'sm' → logprob: -7.757762908935547
    5. 'ss' → logprob: -9.882762908935547
    6. 'ap' → logprob: -10.132762908935547
    7. 'ds' → logprob: -10.257762908935547
    8. 'ep' → logprob: -10.382762908935547
    9. 'dm' → logprob: -11.007762908935547
    10. '	dp' → logprob: -11.007762908935547

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43184199929237366
    2. ',' → logprob: -1.6818419694900513
    3. 'in' → logprob: -1.8068419694900513
    4. ' ,' → logprob: -7.931841850280762
    5. ' ' → logprob: -9.306841850280762
    6. ',in' → logprob: -11.681841850280762
    7. '	in' → logprob: -12.431841850280762
    8. '   ' → logprob: -12.431841850280762
    9. '  ' → logprob: -12.556841850280762
    10. '<|end|>' → logprob: -12.681841850280762

Token 152: ' reversed' (ID: 57184)
  Prédit: ' reversed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -0.8788749575614929
    2. 're' → logprob: -1.1288750171661377
    3. 'rules' → logprob: -1.5038750171661377
    4. ' rules' → logprob: -3.2538750171661377
    5. 'reverse' → logprob: -8.628874778747559
    6. '   ' → logprob: -9.378874778747559
    7. '(re' → logprob: -9.878874778747559
    8. ' ' → logprob: -10.378874778747559
    9. 'r' → logprob: -10.628874778747559
    10. 'rule' → logprob: -11.253874778747559

Token 153: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005716211744584143
    2. 'rules' → logprob: -7.5005717277526855
    3. 'r' → logprob: -12.125571250915527
    4. 'ules' → logprob: -12.375571250915527
    5. '(' → logprob: -12.750571250915527
    6. ' rules' → logprob: -12.750571250915527
    7. ' (' → logprob: -14.000571250915527
    8. ',r' → logprob: -14.375571250915527
    9. '(routes' → logprob: -14.625571250915527
    10. '_rules' → logprob: -15.000571250915527

Token 154: 'ules' (ID: 3787)
  Prédit: 'ules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.0007486367831006646
    2. 'rules' → logprob: -7.250748634338379
    3. 'ule' → logprob: -11.500748634338379
    4. 'les' → logprob: -12.375748634338379
    5. '[' → logprob: -12.500748634338379
    6. '(' → logprob: -12.500748634338379
    7. 'uls' → logprob: -12.625748634338379
    8. '(r' → logprob: -12.625748634338379
    9. 'ange' → logprob: -13.125748634338379
    10. 'anges' → logprob: -13.750748634338379

Token 155: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026529835537075996
    2. '):' → logprob: -3.6515297889709473
    3. ':' → logprob: -9.151530265808105
    4. ':
' → logprob: -10.026530265808105
    5. '):
' → logprob: -10.026530265808105
    6. ' ):
' → logprob: -11.151530265808105
    7. '():
' → logprob: -11.651530265808105
    8. '       ' → logprob: -12.151530265808105
    9. '   ' → logprob: -12.401530265808105
    10. ')' → logprob: -14.526530265808105

Token 156: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7441526055335999
    2. ':' → logprob: -0.8691526055335999
    3. '<|end|>' → logprob: -2.744152545928955
    4. ':
' → logprob: -3.869152545928955
    5. '<|end|>' → logprob: -5.119152545928955
    6. ',' → logprob: -5.119152545928955
    7. '           ' → logprob: -5.619152545928955
    8. '):
' → logprob: -5.994152545928955
    9. ' if' → logprob: -7.119152545928955
    10. '):' → logprob: -7.744152545928955

Token 157: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6330951452255249
    2. '       ' → logprob: -1.383095145225525
    3. '<|end|>' → logprob: -1.758095145225525
    4. 'if' (adapté à ' if') → logprob: -3.8830952644348145
    5. ':
' → logprob: -4.8830952644348145
    6. '           ' → logprob: -5.6330952644348145
    7. ',' → logprob: -6.1330952644348145
    8. ' ' → logprob: -6.2580952644348145
    9. '<|end|>' → logprob: -6.3830952644348145
    10. ':' → logprob: -6.5080952644348145

Token 158: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.008291148580610752
    2. 'match' → logprob: -4.883291244506836
    3. ' not' → logprob: -7.883291244506836
    4. '(match' → logprob: -8.258291244506836
    5. '	match' → logprob: -11.008291244506836
    6. ' len' → logprob: -11.758291244506836
    7. ' ' → logprob: -11.883291244506836
    8. ' (' → logprob: -12.008291244506836
    9. 'not' → logprob: -12.508291244506836
    10. '   ' → logprob: -13.633291244506836

Token 159: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -12.625008583068848
    3. '(dp' → logprob: -13.125008583068848
    4. 'sp' → logprob: -14.000008583068848
    5. ' (' → logprob: -14.375008583068848
    6. '(sr' → logprob: -15.000008583068848
    7. '(p' → logprob: -15.125008583068848
    8. '(src' → logprob: -15.625008583068848
    9. ')(' → logprob: -15.625008583068848
    10. '/sp' → logprob: -16.00000762939453

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011283133644610643
    2. '(src' → logprob: -7.876128196716309
    3. 'src' → logprob: -8.001128196716309
    4. ' ,' → logprob: -8.001128196716309
    5. '[src' → logprob: -10.626128196716309
    6. ',s' → logprob: -11.001128196716309
    7. ' src' → logprob: -11.126128196716309
    8. '<src' → logprob: -12.126128196716309
    9. '/src' → logprob: -13.126128196716309
    10. ',d' → logprob: -13.126128196716309

Token 161: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.0019305398454889655
    2. ' src' → logprob: -6.2519307136535645
    3. 'source' → logprob: -14.251930236816406
    4. '[src' → logprob: -14.626930236816406
    5. ')' → logprob: -15.126930236816406
    6. '(src' → logprob: -15.626930236816406
    7. '	src' → logprob: -16.126930236816406
    8. '<src' → logprob: -16.501930236816406
    9. '_src' → logprob: -17.501930236816406
    10. ' ' → logprob: -17.501930236816406

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.097437315271236e-05
    2. ' )' → logprob: -10.00005054473877
    3. ' and' → logprob: -12.87505054473877
    4. 'and' → logprob: -13.87505054473877
    5. '')' → logprob: -14.00005054473877
    6. '")' → logprob: -14.62505054473877
    7. '`)' → logprob: -15.12505054473877
    8. '）' → logprob: -16.375051498413086
    9. '       ' → logprob: -16.625051498413086
    10. '           ' → logprob: -17.125051498413086

Token 163: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0049873050302267075
    2. 'and' → logprob: -5.5049872398376465
    3. ')' → logprob: -7.0049872398376465
    4. ' )' → logprob: -14.504987716674805
    5. ' ' → logprob: -15.379987716674805
    6. '<|end|>' → logprob: -15.629987716674805
    7. '           ' → logprob: -16.379987716674805
    8. ' or' → logprob: -17.004987716674805
    9. ',' → logprob: -17.629987716674805
    10. '        ' → logprob: -17.879987716674805

Token 164: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.38687849044799805
    2. 'match' → logprob: -1.136878490447998
    3. '           ' → logprob: -12.886878967285156
    4. '	match' → logprob: -13.386878967285156
    5. '(match' → logprob: -13.386878967285156
    6. '    ' → logprob: -14.511878967285156
    7. '            ' → logprob: -14.636878967285156
    8. ' ' → logprob: -14.636878967285156
    9. '               ' → logprob: -16.011878967285156
    10. '
' → logprob: -16.261878967285156

Token 165: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005557744298130274
    2. '(' → logprob: -7.500555992126465
    3. ' (' → logprob: -13.875555992126465
    4. '(dst' → logprob: -14.750555992126465
    5. '(dl' → logprob: -15.000555992126465
    6. 'dp' → logprob: -15.500555992126465
    7. '(dm' → logprob: -16.00055503845215
    8. '(ds' → logprob: -16.25055503845215
    9. ')' → logprob: -16.25055503845215
    10. ' dp' → logprob: -16.37555503845215

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00148307834751904
    2. ',d' → logprob: -7.376482963562012
    3. '(dst' → logprob: -7.626482963562012
    4. ' ,' → logprob: -9.001482963562012
    5. 'dst' → logprob: -9.001482963562012
    6. ' dst' → logprob: -9.126482963562012
    7. ')' → logprob: -12.126482963562012
    8. ',
' → logprob: -13.001482963562012
    9. '),' → logprob: -13.626482963562012
    10. '	dst' → logprob: -13.751482963562012

Token 167: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.25197216868400574
    2. ' dst' → logprob: -1.5019721984863281
    3. '(dst' → logprob: -10.751972198486328
    4. '	dst' → logprob: -11.626972198486328
    5. '_dst' → logprob: -12.501972198486328
    6. '.dst' → logprob: -13.251972198486328
    7. 'Dst' → logprob: -13.376972198486328
    8. 'src' → logprob: -13.376972198486328
    9. ')' → logprob: -13.501972198486328
    10. ' ' → logprob: -13.876972198486328

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20155015587806702
    2. '):
' → logprob: -1.7015501260757446
    3. '):
' → logprob: -9.326550483703613
    4. ')' → logprob: -10.451550483703613
    5. ':' → logprob: -11.701550483703613
    6. '):

' → logprob: -12.951550483703613
    7. ' ):' → logprob: -13.326550483703613
    8. '       ' → logprob: -13.451550483703613
    9. ''):' → logprob: -13.451550483703613
    10. ''):
' → logprob: -13.951550483703613

Token 169: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2990972697734833
    2. ':' → logprob: -2.4240972995758057
    3. '):
' → logprob: -2.7990972995758057
    4. '           ' → logprob: -2.7990972995758057
    5. '               ' → logprob: -3.2990972995758057
    6. '<|end|>' → logprob: -5.799097061157227
    7. ' and' → logprob: -6.049097061157227
    8. '       ' → logprob: -6.174097061157227
    9. '<|end|>' → logprob: -6.799097061157227
    10. '():
' → logprob: -7.049097061157227

Token 170: ' verdict' (ID: 75722)
  Prédit: ' verdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verdict' → logprob: -0.11478056758642197
    2. '           ' → logprob: -2.8647806644439697
    3. 'ver' → logprob: -3.4897806644439697
    4. '               ' → logprob: -4.114780426025391
    5. '   ' → logprob: -6.614780426025391
    6. '
' → logprob: -6.739780426025391
    7. '                   ' → logprob: -6.989780426025391
    8. '       ' → logprob: -7.614780426025391
    9. ' ver' → logprob: -9.23978042602539
    10. '(ver' → logprob: -9.36478042602539

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '＝' → logprob: -17.65475082397461
    5. ' =
' → logprob: -18.52975082397461
    6. ' ='' → logprob: -18.90475082397461
    7. ',' → logprob: -18.90475082397461
    8. ' ' → logprob: -19.27975082397461
    9. ' =)' → logprob: -19.27975082397461
    10. ' +=' → logprob: -19.40475082397461

Token 172: ' action' (ID: 3736)
  Prédit: ' action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' action' → logprob: -0.07919181883335114
    2. 'action' → logprob: -2.5791919231414795
    3. ''action' → logprob: -8.329192161560059
    4. ''' → logprob: -10.454192161560059
    5. '(action' → logprob: -11.579192161560059
    6. ' '' → logprob: -11.954192161560059
    7. '	action' → logprob: -11.954192161560059
    8. '[action' → logprob: -12.454192161560059
    9. ' ' → logprob: -13.329192161560059
    10. '"' → logprob: -14.329192161560059

Token 173: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002538296685088426
    2. '		       ' → logprob: -9.875253677368164
    3. '           ' → logprob: -10.000253677368164
    4. '<|end|>' → logprob: -10.000253677368164
    5. '			' → logprob: -10.500253677368164
    6. '
' → logprob: -10.500253677368164
    7. '       ' → logprob: -11.125253677368164
    8. 'break' → logprob: -11.250253677368164
    9. '                   ' → logprob: -11.875253677368164
    10. '              ' → logprob: -12.375253677368164

Token 174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013500562636181712
    2. '			' → logprob: -10.00013542175293
    3. '		       ' → logprob: -10.50013542175293
    4. '<|end|>' → logprob: -11.00013542175293
    5. '           ' → logprob: -11.50013542175293
    6. 'break' → logprob: -11.62513542175293
    7. '	           ' → logprob: -12.50013542175293
    8. '       ' → logprob: -12.62513542175293
    9. '	break' → logprob: -12.62513542175293
    10. '
' → logprob: -12.62513542175293

Token 175: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9610326290130615
    2. 'break' (adapté à ' break') → logprob: -0.9610326290130615
    3. '               ' → logprob: -1.4610326290130615
    4. '           ' → logprob: -6.086032867431641
    5. '	break' → logprob: -7.461032867431641
    6. '       ' → logprob: -8.96103286743164
    7. '
' → logprob: -11.33603286743164
    8. '                   ' → logprob: -12.33603286743164
    9. ' ' → logprob: -12.83603286743164
    10. '			' → logprob: -12.96103286743164

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005480298423208296
    2. '<|end|>' → logprob: -7.750547885894775
    3. '               ' → logprob: -10.250548362731934
    4. ',' → logprob: -10.875548362731934
    5. '   ' → logprob: -11.125548362731934
    6. 'print' → logprob: -11.250548362731934
    7. '           ' → logprob: -11.500548362731934
    8. '.' → logprob: -12.375548362731934
    9. '        
' → logprob: -12.500548362731934
    10. ')' → logprob: -12.500548362731934

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01868654042482376
    2. '<|end|>' → logprob: -4.268686771392822
    3. '
' → logprob: -6.268686771392822
    4. '   ' → logprob: -6.518686771392822
    5. 'print' → logprob: -7.393686771392822
    6. ' print' → logprob: -9.143686294555664
    7. '        
' → logprob: -9.518686294555664
    8. '<|end|>' → logprob: -9.643686294555664
    9. '           ' → logprob: -10.018686294555664
    10. ')' → logprob: -10.143686294555664

Token 178: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06752150505781174
    2. '   ' → logprob: -2.817521572113037
    3. 'legal' → logprob: -5.692521572113037
    4. ' print' → logprob: -6.567521572113037
    5. '
' → logprob: -7.317521572113037
    6. ' legal' → logprob: -10.567521095275879
    7. '       ' → logprob: -10.692521095275879
    8. '```' → logprob: -10.817521095275879
    9. '	print' → logprob: -11.817521095275879
    10. '    
' → logprob: -11.942521095275879

Token 179: ' verdict' (ID: 75722)
  Prédit: ' verdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verdict' → logprob: -0.1028369814157486
    2. 'ver' → logprob: -2.602837085723877
    3. ''' → logprob: -4.352837085723877
    4. ' ' → logprob: -5.602837085723877
    5. '"' → logprob: -5.977837085723877
    6. ' '' → logprob: -6.727837085723877
    7. ' ' → logprob: -6.852837085723877
    8. 'verd' → logprob: -7.602837085723877
    9. 'legal' → logprob: -8.227836608886719
    10. '  ' → logprob: -8.602836608886719

Token 180: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002854924649000168
    2. '==' → logprob: -5.877854824066162
    3. ' ' → logprob: -10.37785530090332
    4. ' !=' → logprob: -11.25285530090332
    5. ' =' → logprob: -13.12785530090332
    6. '=' → logprob: -13.12785530090332
    7. ' =='' → logprob: -14.00285530090332
    8. ')' → logprob: -14.87785530090332
    9. ' =="' → logprob: -15.87785530090332
    10. ' ===' → logprob: -16.00285530090332

Token 181: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05601651966571808
    2. ' '' → logprob: -2.931016445159912
    3. '"' → logprob: -7.056016445159912
    4. ''d' → logprob: -8.55601692199707
    5. ''s' → logprob: -11.43101692199707
    6. ' ' → logprob: -11.80601692199707
    7. ''a' → logprob: -11.80601692199707
    8. ' "' → logprob: -11.80601692199707
    9. ''ok' → logprob: -11.80601692199707
    10. ''action' → logprob: -12.55601692199707

Token 182: 'permit' (ID: 82890)
  Prédit: 'deny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deny' → logprob: -0.5889704823493958
    2. 'allow' → logprob: -0.8389704823493958
    3. 'permit' → logprob: -5.33897066116333
    4. ' allow' → logprob: -5.71397066116333
    5. 'accept' → logprob: -6.21397066116333
    6. ' deny' → logprob: -6.33897066116333
    7. ''' → logprob: -7.83897066116333
    8. 'den' → logprob: -8.963970184326172
    9. 'pass' → logprob: -9.713970184326172
    10. 'grant' → logprob: -9.713970184326172

Token 183: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22806449234485626
    2. ':
' → logprob: -1.6030645370483398
    3. '':' → logprob: -7.10306453704834
    4. '):
' → logprob: -8.10306453704834
    5. '):' → logprob: -8.22806453704834
    6. ')' → logprob: -8.35306453704834
    7. ' and' → logprob: -8.47806453704834
    8. 'print' → logprob: -8.60306453704834
    9. '':
' → logprob: -8.72806453704834
    10. ' :' → logprob: -9.10306453704834

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5181332230567932
    2. '           ' → logprob: -1.1431331634521484
    3. '
' → logprob: -3.7681331634521484
    4. ' legal' → logprob: -4.018133163452148
    5. 'legal' → logprob: -4.268133163452148
    6. ':
' → logprob: -4.768133163452148
    7. ':' → logprob: -5.143133163452148
    8. ',' → logprob: -5.393133163452148
    9. '   ' → logprob: -5.643133163452148
    10. 'print' → logprob: -6.018133163452148

Token 185: ' legal' (ID: 7749)
  Prédit: 'legal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'legal' (adapté à ' legal') → logprob: -0.08501654863357544
    2. ' legal' → logprob: -2.8350164890289307
    3. '   ' → logprob: -4.08501672744751
    4. '           ' → logprob: -5.83501672744751
    5. '       ' → logprob: -6.46001672744751
    6. 'print' → logprob: -6.96001672744751
    7. '
' → logprob: -9.085016250610352
    8. ' print' → logprob: -9.585016250610352
    9. 'msg' → logprob: -9.835016250610352
    10. '            
' → logprob: -9.960016250610352

Token 186: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20155678689479828
    2. '.' → logprob: -1.7015568017959595
    3. ' .' → logprob: -8.951557159423828
    4. '.add' → logprob: -11.576557159423828
    5. '.ap' → logprob: -13.201557159423828
    6. '.app' → logprob: -13.701557159423828
    7. '.a' → logprob: -15.076557159423828
    8. '.push' → logprob: -15.076557159423828
    9. '.extend' → logprob: -15.201557159423828
    10. ' +=' → logprob: -15.701557159423828

Token 187: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.3346307873725891
    2. '(msg' → logprob: -1.3346307277679443
    3. '(' → logprob: -3.9596307277679443
    4. '((' → logprob: -6.334630966186523
    5. '(message' → logprob: -8.709630966186523
    6. '(True' → logprob: -9.834630966186523
    7. '('' → logprob: -10.334630966186523
    8. '(src' → logprob: -11.834630966186523
    9. 'line' → logprob: -12.334630966186523
    10. '(m' → logprob: -12.584630966186523

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012535012501757592
    2. ')
' → logprob: -9.00012493133545
    3. ' )' → logprob: -14.00012493133545
    4. '<|end|>' → logprob: -15.37512493133545
    5. '       ' → logprob: -15.75012493133545
    6. ')

' → logprob: -15.87512493133545
    7. '   ' → logprob: -16.375125885009766
    8. '+' → logprob: -16.500125885009766
    9. ')return' → logprob: -16.500125885009766
    10. '
' → logprob: -16.625125885009766

Token 189: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6489186882972717
    2. '   ' → logprob: -1.273918628692627
    3. 'for' → logprob: -1.648918628692627
    4. ' for' → logprob: -5.773918628692627
    5. '    
' → logprob: -6.648918628692627
    6. '
' → logprob: -7.148918628692627
    7. ' print' → logprob: -9.523919105529785
    8. '  
' → logprob: -9.898919105529785
    9. '<|end|>' → logprob: -10.148919105529785
    10. ' 
' → logprob: -10.648919105529785

Token 190: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2536999583244324
    2. 'print' (adapté à ' print') → logprob: -1.5037000179290771
    3. '   ' → logprob: -6.878699779510498
    4. ' for' → logprob: -7.378699779510498
    5. '    
' → logprob: -9.753700256347656
    6. '
' → logprob: -10.753700256347656
    7. 'legal' → logprob: -11.003700256347656
    8. ' print' → logprob: -12.003700256347656
    9. 'if' → logprob: -12.378700256347656
    10. '  
' → logprob: -12.878700256347656

Token 191: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0026085947174578905
    2. '(' → logprob: -6.252608776092529
    3. '('\' → logprob: -7.377608776092529
    4. '('' → logprob: -10.377608299255371
    5. '()' → logprob: -11.627608299255371
    6. '(*' → logprob: -12.002608299255371
    7. '(sum' → logprob: -12.252608299255371
    8. 'len' → logprob: -13.627608299255371
    9. '("\' → logprob: -13.752608299255371
    10. '(sorted' → logprob: -13.877608299255371

Token 192: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.5
    3. 'legal' → logprob: -18.0
    4. ')' → logprob: -18.25
    5. '(`' → logprob: -20.375
    6. '(il' → logprob: -20.375
    7. '```' → logprob: -21.0
    8. '(
' → logprob: -21.125
    9. '	' → logprob: -21.25
    10. '((' → logprob: -21.25

Token 193: 'legal' (ID: 10465)
  Prédit: 'legal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'legal' → logprob: -0.0019337546546012163
    2. '(' → logprob: -6.251933574676514
    3. ' legal' → logprob: -12.251934051513672
    4. 'illegal' → logprob: -15.501934051513672
    5. ')' → logprob: -16.001934051513672
    6. 'leg' → logprob: -17.376934051513672
    7. 'Legal' → logprob: -17.376934051513672
    8. 'LEGAL' → logprob: -18.126934051513672
    9. '```' → logprob: -19.001934051513672
    10. '/legal' → logprob: -19.251934051513672

Token 194: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -13.875000953674316
    3. '))' → logprob: -16.125001907348633
    4. ')`' → logprob: -16.250001907348633
    5. ' )' → logprob: -17.375001907348633
    6. '())' → logprob: -17.375001907348633
    7. ')}' → logprob: -17.500001907348633
    8. '),' → logprob: -17.875001907348633
    9. '')' → logprob: -18.250001907348633
    10. ').' → logprob: -19.250001907348633

Token 195: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.696077227592468e-05
    2. ' for' → logprob: -9.625077247619629
    3. 'if' → logprob: -12.000077247619629
    4. '   ' → logprob: -12.500077247619629
    5. '	for' → logprob: -14.250077247619629
    6. 'print' (adapté à ' print') → logprob: -14.875077247619629
    7. '<|end|>' → logprob: -16.875076293945312
    8. '```' → logprob: -18.250076293945312
    9. '       ' → logprob: -19.000076293945312
    10. '    
' → logprob: -19.250076293945312

Token 197: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.006406381260603666
    2. '(*' → logprob: -5.256406307220459
    3. '("\' → logprob: -7.256406307220459
    4. '()' → logprob: -8.256406784057617
    5. '(' → logprob: -8.506406784057617
    6. '()
' → logprob: -13.631406784057617
    7. ''\' → logprob: -13.881406784057617
    8. '(
' → logprob: -14.006406784057617
    9. '('' → logprob: -14.381406784057617
    10. '()\' → logprob: -15.256406784057617

Token 198: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010700009443098679
    2. ''\' → logprob: -9.750106811523438
    3. '\n' → logprob: -10.750106811523438
    4. '
' → logprob: -10.875106811523438
    5. 'join' → logprob: -12.125106811523438
    6. '''.' → logprob: -13.250106811523438
    7. '"\' → logprob: -14.250106811523438
    8. ''.' → logprob: -15.625106811523438
    9. '('\' → logprob: -16.250106811523438
    10. '``' → logprob: -16.750106811523438

Token 199: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0034250891767442226
    2. '.join' → logprob: -5.878425121307373
    3. '".' → logprob: -7.753425121307373
    4. '.' → logprob: -9.503424644470215
    5. '''.' → logprob: -9.878424644470215
    6. ''' → logprob: -10.503424644470215
    7. ').' → logprob: -10.753424644470215
    8. 'join' → logprob: -11.378424644470215
    9. ' .' → logprob: -13.003424644470215
    10. '').' → logprob: -14.128424644470215

Token 200: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5048530030981055e-06
    2. ' join' → logprob: -13.500001907348633
    3. 'print' → logprob: -16.750001907348633
    4. 'jo' → logprob: -17.250001907348633
    5. 'j' → logprob: -17.375001907348633
    6. '```' → logprob: -17.875001907348633
    7. ''.' → logprob: -19.250001907348633
    8. '.join' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.000001907348633

Token 201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. 'legal' → logprob: -14.75
    3. '   ' → logprob: -20.25
    4. ' (' → logprob: -20.375
    5. '(
' → logprob: -20.625
    6. ')' → logprob: -20.75
    7. 'Legal' → logprob: -22.0
    8. '((' → logprob: -22.25
    9. '(list' → logprob: -22.375
    10. '([' → logprob: -22.625

Token 202: 'legal' (ID: 10465)
  Prédit: 'legal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'legal' → logprob: -1.1472419600977446e-06
    2. ' legal' → logprob: -13.750000953674316
    3. 'illegal' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'leg' → logprob: -18.875001907348633
    6. 'LEGAL' → logprob: -20.625001907348633
    7. '/legal' → logprob: -21.125001907348633
    8. '(' → logprob: -21.625001907348633
    9. ')' → logprob: -21.875001907348633
    10. 'Legal' → logprob: -22.625001907348633

Token 203: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012356207298580557
    2. '))' → logprob: -9.000123977661133
    3. ' )' → logprob: -17.000123977661133
    4. ')}' → logprob: -17.000123977661133
    5. '())' → logprob: -17.125123977661133
    6. ')`' → logprob: -17.125123977661133
    7. ')
' → logprob: -17.750123977661133
    8. ')))' → logprob: -18.125123977661133
    9. '})' → logprob: -18.750123977661133
    10. '')' → logprob: -20.125123977661133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 201
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 103
Tokens correctement prédits (top 10): 164
Précision stricte (1ère position): 49.25%
Précision adaptée (1ère position): 51.24%
Précision (top 10): 81.59%
================================================================================
