================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

MAX = 151200

# Pré-calcul des cubes et tétraèdres
cubes = []
n = 0
while True:
    c = n**3
    if c > MAX:
        break
    cubes.append(c)
    n += 1

tetrahedrals = []
n = 0
while True:
    t = n*(n+1)*(n+2)//6
    if t > MAX:
        break
    tetrahedrals.append(t)
    n += 1

# Générer tous les nombres possibles somme d'un cube + d'un tétraèdre
sums = set()
for c in cubes:
    for t in tetrahedrals:
        s = c + t
        if s <= MAX:
            sums.add(s)
        else:
            break

# Transformer en liste triée pour faire une recherche rapide
sorted_sums = sorted(sums)

# Fonction recherche binaire pour trouver le plus grand nombre <= val
def binary_search(val):
    low, high = 0, len(sorted_sums) - 1
    res = 0
    while low <= high:
        mid = (low + high) // 2
        if sorted_sums[mid] <= val:
            res = sorted_sums[mid]
            low = mid + 1
        else:
            high = mid - 1
    return res

for line in sys.stdin:
    line = line.strip()
    if line == '0':
        break
    x = int(line)
    print(binary_search(x))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2504518926143646
    2. '\n' → logprob: -2.1254518032073975
    3. 'import' → logprob: -3.1254518032073975
    4. '<|end|>' → logprob: -3.2504518032073975
    5. 'newline' → logprob: -5.625452041625977
    6. '\' → logprob: -5.625452041625977
    7. '' → logprob: -6.125452041625977
    8. '<|end|>' → logprob: -6.125452041625977
    9. 'print' → logprob: -6.875452041625977
    10. '\r' → logprob: -6.875452041625977

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02414156310260296
    2. '_LENGTH' → logprob: -4.899141788482666
    3. '_SIZE' → logprob: -5.149141788482666
    4. '_LINE' → logprob: -5.774141788482666
    5. '_SPACE' → logprob: -6.649141788482666
    6. '_CAP' → logprob: -6.774141788482666
    7. '_LEN' → logprob: -7.274141788482666
    8. '_CHAR' → logprob: -7.524141788482666
    9. ' _' → logprob: -7.649141788482666
    10. '_VALUE' → logprob: -8.024141311645508

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028622232377529144
    2. '100' → logprob: -3.6536221504211426
    3. '10' → logprob: -6.153622150421143
    4. ' sys' → logprob: -9.4036226272583
    5. '999' → logprob: -10.5286226272583
    6. '256' → logprob: -10.7786226272583
    7. '102' → logprob: -11.2786226272583
    8. '1' → logprob: -11.4036226272583
    9. 'sys' → logprob: -11.5286226272583
    10. '255' → logprob: -11.6536226272583

Token 6: '151' (ID: 17395)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06667419523000717
    2. '10' → logprob: -2.81667423248291
    3. ' ' → logprob: -5.44167423248291
    4. '1' → logprob: -9.31667423248291
    5. '999' → logprob: -9.44167423248291
    6. '256' → logprob: -9.81667423248291
    7. '102' → logprob: -9.94167423248291
    8. '255' → logprob: -10.19167423248291
    9. '2' → logprob: -11.31667423248291
    10. 'sys' → logprob: -11.31667423248291

Token 7: '200' (ID: 1179)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06663192808628082
    2. '*' → logprob: -4.31663179397583
    3. '\n' → logprob: -5.19163179397583
    4. '' → logprob: -5.19163179397583
    5. ' 
' → logprob: -5.19163179397583
    6. ' ' → logprob: -5.44163179397583
    7. '+' → logprob: -5.56663179397583
    8. '_' → logprob: -5.69163179397583
    9. '  
' → logprob: -5.69163179397583
    10. '0' → logprob: -5.81663179397583

Token 8: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9449820518493652
    2. '*' → logprob: -1.1949820518493652
    3. '
' → logprob: -1.5699820518493652
    4. '' → logprob: -3.3199820518493652
    5. '\' → logprob: -3.6949820518493652
    6. '#' → logprob: -4.444982051849365
    7. '
' → logprob: -4.819982051849365
    8. '```' → logprob: -5.694982051849365
    9. ' 
' → logprob: -6.319982051849365
    10. ' *' → logprob: -6.319982051849365

Token 9: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.227713704109192
    2. '\' → logprob: -1.227713704109192
    3. '_' → logprob: -1.977713704109192
    4. 'def' → logprob: -2.1027135848999023
    5. '\n' → logprob: -3.3527135848999023
    6. '#' → logprob: -3.4777135848999023
    7. '
' → logprob: -3.9777135848999023
    8. '' → logprob: -4.102713584899902
    9. '=' → logprob: -4.352713584899902
    10. ',' → logprob: -4.977713584899902

Token 10: ' Pré' (ID: 86400)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005335266701877117
    2. ' def' → logprob: -6.380335330963135
    3. 'input' → logprob: -7.255335330963135
    4. 'factor' → logprob: -7.630335330963135
    5. 'for' → logprob: -7.755335330963135
    6. 'dp' → logprob: -8.380334854125977
    7. 'from' → logprob: -8.505334854125977
    8. 'print' → logprob: -8.630334854125977
    9. 'class' → logprob: -8.880334854125977
    10. 'count' → logprob: -9.130334854125977

Token 11: '-cal' (ID: 84920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2900179624557495
    2. 'fix' → logprob: -1.4150179624557495
    3. 'vision' → logprob: -2.040018081665039
    4. 'paration' → logprob: -2.540018081665039
    5. 'face' → logprob: -3.165018081665039
    6. 'c' → logprob: -3.165018081665039
    7. '-' → logprob: -3.915018081665039
    8. '_c' → logprob: -3.915018081665039
    9. 'cision' → logprob: -3.915018081665039
    10. 'vention' → logprob: -4.040018081665039

Token 12: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.7138767838478088
    2. 'ul' → logprob: -0.9638767838478088
    3. 'c' → logprob: -3.463876724243164
    4. 'ulé' → logprob: -4.088876724243164
    5. 'cule' → logprob: -4.338876724243164
    6. '_' → logprob: -4.838876724243164
    7. 'culated' → logprob: -4.963876724243164
    8. 'culation' → logprob: -4.963876724243164
    9. '```' → logprob: -5.213876724243164
    10. 'n' → logprob: -5.338876724243164

Token 13: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03919336572289467
    2. 'ation' → logprob: -4.414193153381348
    3. 's' → logprob: -5.039193153381348
    4. ' ' → logprob: -5.164193153381348
    5. 'ated' → logprob: -5.539193153381348
    6. 'm' → logprob: -6.539193153381348
    7. 'a' → logprob: -6.789193153381348
    8. '__' → logprob: -6.789193153381348
    9. '.' → logprob: -7.164193153381348
    10. '#' → logprob: -7.289193153381348

Token 14: ' cubes' (ID: 88455)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6358022689819336
    2. 'div' → logprob: -1.3858022689819336
    3. 'factor' → logprob: -2.0108022689819336
    4. 'f' → logprob: -4.010802268981934
    5. ' fact' → logprob: -4.135802268981934
    6. 's' → logprob: -4.885802268981934
    7. 'jours' → logprob: -5.135802268981934
    8. 'fib' → logprob: -5.635802268981934
    9. 'd' → logprob: -5.885802268981934
    10. 'multip' → logprob: -6.010802268981934

Token 15: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14318004250526428
    2. ' ' → logprob: -2.6431801319122314
    3. '_' → logprob: -2.8931801319122314
    4. '\' → logprob: -6.143179893493652
    5. '(' → logprob: -7.768179893493652
    6. '
' → logprob: -7.893179893493652
    7. ' =' → logprob: -8.268179893493652
    8. '\n' → logprob: -8.268179893493652
    9. ' de' → logprob: -8.518179893493652
    10. 'def' → logprob: -8.518179893493652

Token 16: ' té' (ID: 22989)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.291169285774231
    2. ' leurs' → logprob: -1.791169285774231
    3. ' des' → logprob: -1.916169285774231
    4. 'car' → logprob: -2.4161691665649414
    5. 'des' → logprob: -2.7911691665649414
    6. ' leur' → logprob: -3.0411691665649414
    7. 'leurs' → logprob: -3.2911691665649414
    8. 'c' → logprob: -3.9161691665649414
    9. ' carr' → logprob: -3.9161691665649414
    10. 'd' → logprob: -4.041169166564941

Token 17: 'tra' (ID: 1787)
  Prédit: 'tra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tra' → logprob: -0.2960139214992523
    2. 'tras' → logprob: -1.9210139513015747
    3. 'tr' → logprob: -2.421013832092285
    4. 'ra' → logprob: -6.046013832092285
    5. 'les' → logprob: -6.046013832092285
    6. '```' → logprob: -6.421013832092285
    7. '**' → logprob: -6.671013832092285
    8. '``' → logprob: -6.671013832092285
    9. 'trar' → logprob: -6.796013832092285
    10. 't' → logprob: -7.296013832092285

Token 18: 'è' (ID: 957)
  Prédit: 'è'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.01894812285900116
    2. 'hed' → logprob: -4.768948078155518
    3. 'h' → logprob: -5.643948078155518
    4. 'éd' → logprob: -5.768948078155518
    5. 'g' → logprob: -7.143948078155518
    6. 'hé' → logprob: -7.393948078155518
    7. 'ed' → logprob: -7.518948078155518
    8. 'dr' → logprob: -8.143948554992676
    9. 'hedron' → logprob: -8.393948554992676
    10. '\' → logprob: -8.518948554992676

Token 19: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0016739914426580071
    2. 'dr' → logprob: -6.501674175262451
    3. 'dre' → logprob: -9.251673698425293
    4. 'des' → logprob: -10.376673698425293
    5. '`' → logprob: -11.751673698425293
    6. 'д' → logprob: -11.876673698425293
    7. '\' → logprob: -11.876673698425293
    8. '``' → logprob: -12.376673698425293
    9. 'dra' → logprob: -12.376673698425293
    10. '```' → logprob: -13.626673698425293

Token 20: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.006280940491706133
    2. 'r' → logprob: -5.256280899047852
    3. 'd' → logprob: -7.881280899047852
    4. 'riques' → logprob: -8.256280899047852
    5. 'ra' → logprob: -9.506280899047852
    6. 're' → logprob: -9.756280899047852
    7. 'es' → logprob: -10.006280899047852
    8. 'rons' → logprob: -10.631280899047852
    9. '``' → logprob: -11.006280899047852
    10. 's' → logprob: -11.006280899047852

Token 21: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.356656551361084
    2. '_' → logprob: -1.356656551361084
    3. 'c' → logprob: -4.356656551361084
    4. '_cube' → logprob: -5.106656551361084
    5. 'cube' → logprob: -5.231656551361084
    6. '_c' → logprob: -5.356656551361084
    7. ' =' → logprob: -5.606656551361084
    8. '=' → logprob: -6.356656551361084
    9. '_s' → logprob: -6.731656551361084
    10. '\' → logprob: -6.981656551361084

Token 22: 'c' (ID: 66)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3471280038356781
    2. 'c' → logprob: -1.7221280336380005
    3. 'cube' → logprob: -2.972127914428711
    4. '_c' → logprob: -3.472127914428711
    5. '_cube' → logprob: -4.347127914428711
    6. 's' → logprob: -4.472127914428711
    7. '\' → logprob: -6.097127914428711
    8. 'cub' → logprob: -6.722127914428711
    9. ' cubes' → logprob: -6.847127914428711
    10. 'C' → logprob: -7.222127914428711

Token 23: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -0.15932737290859222
    2. 'u' → logprob: -2.034327268600464
    3. 'ub' → logprob: -4.784327507019043
    4. 'ube' → logprob: -6.159327507019043
    5. ' =' → logprob: -6.409327507019043
    6. '_' → logprob: -6.534327507019043
    7. '_u' → logprob: -7.159327507019043
    8. '=' → logprob: -7.784327507019043
    9. '#' → logprob: -8.409327507019043
    10. 'ubi' → logprob: -9.034327507019043

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07316452264785767
    2. '=' → logprob: -2.698164463043213
    3. 's' → logprob: -6.198164463043213
    4. '_' → logprob: -7.073164463043213
    5. ' ' → logprob: -8.573164939880371
    6. '[]' → logprob: -9.573164939880371
    7. '[' → logprob: -11.448164939880371
    8. '_c' → logprob: -11.448164939880371
    9. '=[]' → logprob: -11.823164939880371
    10. '_cube' → logprob: -11.948164939880371

Token 25: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1774919629096985
    2. '[' → logprob: -2.0524919033050537
    3. '[i' → logprob: -3.6774919033050537
    4. ' []' → logprob: -5.302492141723633
    5. '[]' → logprob: -5.927492141723633
    6. '[int' → logprob: -7.552492141723633
    7. '[x' → logprob: -8.802492141723633
    8. '[max' → logprob: -9.177492141723633
    9. '[list' → logprob: -9.427492141723633
    10. '[len' → logprob: -9.802492141723633

Token 26: 'n' (ID: 77)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36346501111984253
    2. 'for' → logprob: -1.8634650707244873
    3. '=' → logprob: -2.4884650707244873
    4. ' ' → logprob: -3.3634650707244873
    5. ' for' → logprob: -4.738464832305908
    6. '_' → logprob: -4.988464832305908
    7. '[' → logprob: -4.988464832305908
    8. '[]' → logprob: -5.613464832305908
    9. '=[]' → logprob: -6.238464832305908
    10. '(' → logprob: -6.863464832305908

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22568003833293915
    2. '=' → logprob: -1.6006799936294556
    3. ' ' → logprob: -8.975680351257324
    4. '_' → logprob: -10.225680351257324
    5. ' in' → logprob: -10.975680351257324
    6. ' ' → logprob: -10.975680351257324
    7. 'in' → logprob: -11.350680351257324
    8. 'range' → logprob: -11.475680351257324
    9. ' range' → logprob: -12.100680351257324
    10. 'u' → logprob: -12.350680351257324

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03060373291373253
    2. '1' → logprob: -3.5306036472320557
    3. '0' → logprob: -7.155603885650635
    4. '2' → logprob: -10.155603408813477
    5. '20' → logprob: -12.155603408813477
    6. '32' → logprob: -12.155603408813477
    7. ' ' → logprob: -12.655603408813477
    8. '  ' → logprob: -12.655603408813477
    9. '3' → logprob: -13.280603408813477
    10. 'int' → logprob: -13.280603408813477

Token 29: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013685988262295723
    2. '0' → logprob: -4.388686180114746
    3. '2' → logprob: -7.763686180114746
    4. ' ' → logprob: -8.513686180114746
    5. '150' → logprob: -9.013686180114746
    6. '151' → logprob: -9.138686180114746
    7. 'int' → logprob: -9.513686180114746
    8. '100' → logprob: -9.763686180114746
    9. '3' → logprob: -11.138686180114746
    10. '10' → logprob: -11.138686180114746

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2752417325973511
    2. 'while' → logprob: -1.525241732597351
    3. ' while' → logprob: -4.525241851806641
    4. ' 
' → logprob: -5.400241851806641
    5. ' ' → logprob: -6.025241851806641
    6. '0' → logprob: -6.900241851806641
    7. '\n' → logprob: -7.150241851806641
    8. '' → logprob: -7.275241851806641
    9. '+' → logprob: -7.775241851806641
    10. '\' → logprob: -8.02524185180664

Token 31: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20914813876152039
    2. ' while' → logprob: -1.9591481685638428
    3. '
' → logprob: -3.5841481685638428
    4. 'n' → logprob: -4.834147930145264
    5. '```' → logprob: -5.959147930145264
    6. '\n' → logprob: -6.084147930145264
    7. '<|end|>' → logprob: -6.084147930145264
    8. '\' → logprob: -6.709147930145264
    9. ' ' → logprob: -6.834147930145264
    10. ' 
' → logprob: -7.209147930145264

Token 32: ' True' (ID: 6432)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.010445049032568932
    2. 'n' → logprob: -4.6354451179504395
    3. ' (' → logprob: -8.135444641113281
    4. ' True' → logprob: -8.510444641113281
    5. ' ' → logprob: -8.760444641113281
    6. '(n' → logprob: -10.635444641113281
    7. '(' → logprob: -11.885444641113281
    8. 'True' → logprob: -12.510444641113281
    9. ' ' → logprob: -13.385444641113281
    10. ' cubes' → logprob: -14.510444641113281

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0060932692140340805
    2. ':
' → logprob: -6.006093502044678
    3. ' :' → logprob: -6.006093502044678
    4. ' ' → logprob: -7.881093502044678
    5. ' and' → logprob: -8.13109302520752
    6. ' :
' → logprob: -8.75609302520752
    7. ',' → logprob: -9.00609302520752
    8. '   ' → logprob: -10.00609302520752
    9. '<|end|>' → logprob: -10.50609302520752
    10. ')' → logprob: -11.13109302520752

Token 34: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39942699670791626
    2. ' ' → logprob: -2.0244269371032715
    3. '   ' → logprob: -2.3994269371032715
    4. '    ' → logprob: -3.5244269371032715
    5. ' n' → logprob: -3.5244269371032715
    6. ' 
' → logprob: -3.7744269371032715
    7. '  
' → logprob: -5.2744269371032715
    8. '    
' → logprob: -5.3994269371032715
    9. '  ' → logprob: -5.7744269371032715
    10. '   
' → logprob: -5.7744269371032715

Token 35: ' c' (ID: 274)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08438663929700851
    2. ' cube' → logprob: -3.2093865871429443
    3. 'n' → logprob: -3.4593865871429443
    4. '   ' → logprob: -5.584386825561523
    5. ' c' → logprob: -6.334386825561523
    6. ' ' → logprob: -6.834386825561523
    7. 'cube' → logprob: -6.959386825561523
    8. '    ' → logprob: -8.084386825561523
    9. 'c' (adapté à ' c') → logprob: -8.584386825561523
    10. '    
' → logprob: -8.959386825561523

Token 36: ' =' (ID: 314)
  Prédit: 'ube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.7272383570671082
    2. '**' → logprob: -0.9772383570671082
    3. 'u' → logprob: -2.477238416671753
    4. 'ubes' → logprob: -3.477238416671753
    5. 'ub' → logprob: -4.977238178253174
    6. '_' → logprob: -5.852238178253174
    7. ' =' → logprob: -5.977238178253174
    8. '<u' → logprob: -6.477238178253174
    9. '+' → logprob: -6.727238178253174
    10. ' **' → logprob: -6.727238178253174

Token 37: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9929229021072388
    2. ' n' → logprob: -0.9929229021072388
    3. '(n' → logprob: -1.9929229021072388
    4. ' (' → logprob: -2.117922782897949
    5. '(' → logprob: -6.117922782897949
    6. ' ' → logprob: -8.49292278289795
    7. '	n' → logprob: -12.36792278289795
    8. '   ' → logprob: -12.80542278289795
    9. '  ' → logprob: -13.11792278289795
    10. ' ' → logprob: -13.30542278289795

Token 38: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.016526829451322556
    2. ' **' → logprob: -4.141526699066162
    3. '*' → logprob: -8.01652717590332
    4. '3' → logprob: -9.26652717590332
    5. '***' → logprob: -10.64152717590332
    6. '*c' → logprob: -11.14152717590332
    7. '³' → logprob: -11.26652717590332
    8. ' ' → logprob: -11.64152717590332
    9. ' *' → logprob: -12.51652717590332
    10. '```' → logprob: -13.76652717590332

Token 39: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -16.5000057220459
    4. '```' → logprob: -16.5000057220459
    5. '4' → logprob: -16.7500057220459
    6. '1' → logprob: -16.9375057220459
    7. '³' → logprob: -17.1250057220459
    8. '6' → logprob: -17.1250057220459
    9. '  ' → logprob: -17.3125057220459
    10. '   ' → logprob: -17.4375057220459

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005109475925564766
    2. '<|end|>' → logprob: -5.6301093101501465
    3. '    
' → logprob: -8.005109786987305
    4. '    ' → logprob: -8.130109786987305
    5. '<|end|>' → logprob: -8.255109786987305
    6. ' if' → logprob: -8.755109786987305
    7. ' ' → logprob: -9.005109786987305
    8. '  ' → logprob: -9.380109786987305
    9. '   
' → logprob: -9.505109786987305
    10. ',' → logprob: -10.130109786987305

Token 42: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36902081966400146
    2. 'if' (adapté à ' if') → logprob: -1.8690208196640015
    3. '   ' → logprob: -2.744020938873291
    4. ' ' → logprob: -2.869020938873291
    5. '<|end|>' → logprob: -3.619020938873291
    6. '  ' → logprob: -6.619020938873291
    7. '<|end|>' → logprob: -6.619020938873291
    8. '    ' → logprob: -6.619020938873291
    9. ' 
' → logprob: -6.994020938873291
    10. 'n' → logprob: -7.619020938873291

Token 43: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16023194789886475
    2. 'c' → logprob: -1.9102319478988647
    3. ' ' → logprob: -12.535231590270996
    4. '   ' → logprob: -13.535231590270996
    5. '	c' → logprob: -13.910231590270996
    6. ' ' → logprob: -14.285231590270996
    7. '>' → logprob: -14.410231590270996
    8. ')c' → logprob: -15.160231590270996
    9. ')' → logprob: -16.035232543945312
    10. '  ' → logprob: -16.660232543945312

Token 44: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10041822493076324
    2. '>' → logprob: -2.3504183292388916
    3. ' >=' → logprob: -8.725418090820312
    4. '>=' → logprob: -10.850418090820312
    5. ' <=' → logprob: -11.225418090820312
    6. ' ' → logprob: -11.350418090820312
    7. '<=' → logprob: -13.850418090820312
    8. '()>' → logprob: -14.975418090820312
    9. '+' → logprob: -15.225418090820312
    10. ' ' → logprob: -15.350418090820312

Token 45: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.3868729770183563
    2. ' MAX' → logprob: -1.1368730068206787
    3. ' ' → logprob: -14.261873245239258
    4. '_MAX' → logprob: -14.636873245239258
    5. '(MAX' → logprob: -14.761873245239258
    6. ' ' → logprob: -15.511873245239258
    7. 'M' → logprob: -16.261873245239258
    8. 'MA' → logprob: -16.886873245239258
    9. '/MAX' → logprob: -17.261873245239258
    10. '.MAX' → logprob: -17.386873245239258

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000973517308011651
    2. ':
' → logprob: -7.000973701477051
    3. ' :' → logprob: -9.75097370147705
    4. '   ' → logprob: -13.37597370147705
    5. '):' → logprob: -14.37597370147705
    6. ' :
' → logprob: -14.87597370147705
    7. ':
' → logprob: -14.87597370147705
    8. '.' → logprob: -15.37597370147705
    9. ' ' → logprob: -15.62597370147705
    10. ':return' → logprob: -15.75097370147705

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2526978850364685
    2. '   ' → logprob: -1.5026979446411133
    3. '    ' → logprob: -7.627697944641113
    4. ' break' → logprob: -9.127697944641113
    5. ' ' → logprob: -9.877697944641113
    6. ':' → logprob: -9.877697944641113
    7. '	break' → logprob: -11.502697944641113
    8. '     ' → logprob: -11.502697944641113
    9. '  ' → logprob: -11.752697944641113
    10. '   ' → logprob: -11.877697944641113

Token 48: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7041255831718445
    2. ' break' → logprob: -1.0791256427764893
    3. '   ' → logprob: -1.8291256427764893
    4. 'break' (adapté à ' break') → logprob: -5.57912540435791
    5. '	break' → logprob: -6.95412540435791
    6. ' ' → logprob: -9.57912540435791
    7. ' ' → logprob: -9.95412540435791
    8. '```' → logprob: -9.95412540435791
    9. '    ' → logprob: -10.07912540435791
    10. '_break' → logprob: -10.70412540435791

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.293435275554657
    2. '    
' → logprob: -1.7934353351593018
    3. '
' → logprob: -2.5434353351593018
    4. 'c' → logprob: -5.293435096740723
    5. '   
' → logprob: -6.668435096740723
    6. '  
' → logprob: -6.793435096740723
    7. ' 
' → logprob: -6.918435096740723
    8. 'n' → logprob: -8.168435096740723
    9. '	c' → logprob: -8.543435096740723
    10. ')c' → logprob: -9.293435096740723

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5991122722625732
    2. '    
' → logprob: -1.2241122722625732
    3. 'c' → logprob: -2.4741122722625732
    4. '
' → logprob: -2.8491122722625732
    5. ' 
' → logprob: -5.224112510681152
    6. '  
' → logprob: -5.849112510681152
    7. '   
' → logprob: -5.974112510681152
    8. 'n' → logprob: -7.099112510681152
    9. '	c' → logprob: -7.099112510681152
    10. ' cubes' → logprob: -7.474112510681152

Token 51: ' cubes' (ID: 88455)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1651071012020111
    2. 'c' → logprob: -1.9151071310043335
    3. ' cubes' → logprob: -5.540107250213623
    4. '    
' → logprob: -7.540107250213623
    5. '	c' → logprob: -8.665106773376465
    6. ' 
' → logprob: -9.290106773376465
    7. ' c' → logprob: -9.290106773376465
    8. '<|end|>' → logprob: -11.290106773376465
    9. '
' → logprob: -11.540106773376465
    10. ' ' → logprob: -12.040106773376465

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006723771803081036
    2. '.' → logprob: -5.006723880767822
    3. '.ap' → logprob: -12.631723403930664
    4. '.app' → logprob: -13.381723403930664
    5. ' .' → logprob: -13.631723403930664
    6. 'append' → logprob: -14.006723403930664
    7. 's' → logprob: -14.006723403930664
    8. '.s' → logprob: -15.756723403930664
    9. '.Append' → logprob: -15.756723403930664
    10. '.add' → logprob: -16.256723403930664

Token 53: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0232922974973917
    2. '(' → logprob: -3.773292303085327
    3. 'c' → logprob: -10.023292541503906
    4. '(
' → logprob: -14.023292541503906
    5. ' (' → logprob: -14.648292541503906
    6. ')c' → logprob: -14.773292541503906
    7. '(n' → logprob: -15.273292541503906
    8. '((' → logprob: -15.773292541503906
    9. ' c' → logprob: -16.148292541503906
    10. '(

' → logprob: -16.398292541503906

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0630006492137909
    2. ')
' → logprob: -2.8130006790161133
    3. '   ' → logprob: -7.438000679016113
    4. ')n' → logprob: -8.188000679016113
    5. ')
' → logprob: -8.938000679016113
    6. ' )' → logprob: -11.063000679016113
    7. ')c' → logprob: -12.188000679016113
    8. ' )
' → logprob: -12.188000679016113
    9. ')

' → logprob: -12.688000679016113
    10. 'n' → logprob: -12.813000679016113

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00870746374130249
    2. 'n' → logprob: -5.008707523345947
    3. '    
' → logprob: -6.758707523345947
    4. '
' → logprob: -7.133707523345947
    5. '  
' → logprob: -11.258707046508789
    6. '\n' → logprob: -12.008707046508789
    7. '   
' → logprob: -12.133707046508789
    8. ' 
' → logprob: -12.508707046508789
    9. '
' → logprob: -14.008707046508789
    10. ' n' → logprob: -14.383707046508789

Token 56: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.029980497434735298
    2. '   ' → logprob: -3.529980421066284
    3. ' n' → logprob: -8.404980659484863
    4. '	n' → logprob: -12.404980659484863
    5. '    
' → logprob: -14.279980659484863
    6. '\n' → logprob: -14.654980659484863
    7. '  ' → logprob: -14.654980659484863
    8. '```' → logprob: -15.279980659484863
    9. ' ' → logprob: -15.404980659484863
    10. ' 
' → logprob: -15.904980659484863

Token 57: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6211927533149719
    2. ' +=' → logprob: -0.8711927533149719
    3. '+' → logprob: -3.121192693710327
    4. '=' → logprob: -9.496192932128906
    5. ' ' → logprob: -10.496192932128906
    6. '1' → logprob: -10.871192932128906
    7. ' +' → logprob: -11.746192932128906
    8. '+='' → logprob: -12.746192932128906
    9. '++' → logprob: -13.246192932128906
    10. ']+=' → logprob: -13.621192932128906

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.75007438659668
    4. '```' → logprob: -17.50007438659668
    5. '  ' → logprob: -18.50007438659668
    6. ' ' → logprob: -19.06257438659668
    7. '１' → logprob: -20.06257438659668
    8. '2' → logprob: -20.18757438659668
    9. '+' → logprob: -20.31257438659668
    10. '﻿' → logprob: -20.81257438659668

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.5
    4. '0' → logprob: -19.0
    5. '１' → logprob: -19.3125
    6. '  ' → logprob: -19.625
    7. '2' → logprob: -19.75
    8. '6' → logprob: -19.8125
    9. '   ' → logprob: -19.9375
    10. '3' → logprob: -19.9375

Token 60: '

' (ID: 279)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0321759358048439
    2. 'n' → logprob: -3.9071760177612305
    3. 'tet' → logprob: -5.6571760177612305
    4. '
' → logprob: -6.2821760177612305
    5. ' 
' → logprob: -6.7821760177612305
    6. '#' → logprob: -6.9071760177612305
    7. '```' → logprob: -7.5321760177612305
    8. '\' → logprob: -7.6571760177612305
    9. ' 

' → logprob: -7.6571760177612305
    10. ' tetra' → logprob: -7.6571760177612305

Token 61: 'tet' (ID: 62272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2909393906593323
    2. 'tet' → logprob: -1.4159393310546875
    3. 'n' → logprob: -5.2909393310546875
    4. '#' → logprob: -6.1659393310546875
    5. '```' → logprob: -7.1659393310546875
    6. 'té' → logprob: -7.7909393310546875
    7. '

' → logprob: -8.790939331054688
    8. 'm' → logprob: -9.040939331054688
    9. 'ts' → logprob: -9.040939331054688
    10. 'te' → logprob: -9.415939331054688

Token 62: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0029866136610507965
    2. 'rades' → logprob: -7.377986431121826
    3. 'r' → logprob: -7.627986431121826
    4. ' =' → logprob: -7.752986431121826
    5. 's' → logprob: -7.877986431121826
    6. 'a' → logprob: -8.752986907958984
    7. 'ras' → logprob: -9.377986907958984
    8. '```' → logprob: -9.627986907958984
    9. 'rah' → logprob: -9.752986907958984
    10. 'rae' → logprob: -9.815486907958984

Token 63: 'hed' (ID: 1736)
  Prédit: 'hed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hed' → logprob: -0.8814366459846497
    2. 'edra' → logprob: -1.3814365863800049
    3. 'è' → logprob: -1.7564365863800049
    4. 'ed' → logprob: -2.256436586380005
    5. 'hedron' → logprob: -3.381436586380005
    6. '=' → logprob: -5.256436824798584
    7. ' =' → logprob: -5.506436824798584
    8. 'eders' → logprob: -5.881436824798584
    9. 'a' → logprob: -6.006436824798584
    10. 'dr' → logprob: -6.506436824798584

Token 64: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6133326292037964
    2. 'ra' → logprob: -1.1133326292037964
    3. 'rs' → logprob: -2.863332748413086
    4. 'res' → logprob: -2.988332748413086
    5. 'rons' → logprob: -4.613332748413086
    6. 're' → logprob: -5.613332748413086
    7. 's' → logprob: -5.863332748413086
    8. 'ral' → logprob: -5.988332748413086
    9. 'rans' → logprob: -7.488332748413086
    10. '```' → logprob: -7.488332748413086

Token 65: 'als' (ID: 1288)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.4111509621143341
    2. 'r' → logprob: -1.9111509323120117
    3. 's' → logprob: -2.1611509323120117
    4. 'res' → logprob: -3.9111509323120117
    5. 'rs' → logprob: -4.286150932312012
    6. 'ral' → logprob: -4.661150932312012
    7. 'rons' → logprob: -4.786150932312012
    8. 'es' → logprob: -4.911150932312012
    9. 'e' → logprob: -5.161150932312012
    10. 'a' → logprob: -5.411150932312012

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033881962299346924
    2. '=' → logprob: -3.408881902694702
    3. 's' → logprob: -8.408882141113281
    4. '=[]' → logprob: -11.783882141113281
    5. '_' → logprob: -13.033882141113281
    6. ' ' → logprob: -13.408882141113281
    7. '[]' → logprob: -14.783882141113281
    8. 'es' → logprob: -15.533882141113281
    9. ' ' → logprob: -15.658882141113281
    10. ',' → logprob: -15.658882141113281

Token 67: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6931678652763367
    2. '[]
' → logprob: -0.6931678652763367
    3. '[' → logprob: -11.943167686462402
    4. '[]

' → logprob: -11.943167686462402
    5. ' []' → logprob: -12.193167686462402
    6. ' []
' → logprob: -12.943167686462402
    7. '[
' → logprob: -15.568167686462402
    8. '[n' → logprob: -18.06816864013672
    9. '[]}' → logprob: -18.69316864013672
    10. '[])
' → logprob: -18.81816864013672

Token 68: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0038025728426873684
    2. 'm' → logprob: -6.50380277633667
    3. 'i' → logprob: -6.62880277633667
    4. 't' → logprob: -7.25380277633667
    5. 'k' → logprob: -8.878802299499512
    6. ' n' → logprob: -9.628802299499512
    7. '0' → logprob: -10.128802299499512
    8. '```' → logprob: -11.628802299499512
    9. '
' → logprob: -12.253802299499512
    10. 'for' → logprob: -13.128802299499512

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0548897311091423
    2. '=' → logprob: -2.929889678955078
    3. ' ' → logprob: -12.054889678955078
    4. ' +=' → logprob: -14.054889678955078
    5. ' ' → logprob: -15.554889678955078
    6. '+=' → logprob: -15.554889678955078
    7. '0' → logprob: -15.929889678955078
    8. '1' → logprob: -16.679889678955078
    9. ' =
' → logprob: -16.679889678955078
    10. ')' → logprob: -17.179889678955078

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06688863039016724
    2. ' ' → logprob: -2.8168885707855225
    3. '1' → logprob: -5.316888809204102
    4. ' ' → logprob: -15.441888809204102
    5. '  ' → logprob: -16.1293888092041
    6. '3' → logprob: -16.1293888092041
    7. '2' → logprob: -16.8168888092041
    8. '۰' → logprob: -17.1293888092041
    9. '[' → logprob: -17.3168888092041
    10. '6' → logprob: -17.3793888092041

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020559873431921005
    2. '1' → logprob: -3.895559787750244
    3. ' ' → logprob: -11.020560264587402
    4. '2' → logprob: -14.645560264587402
    5. '3' → logprob: -14.958060264587402
    6. '4' → logprob: -16.208059310913086
    7. '20' → logprob: -16.520559310913086
    8. '19' → logprob: -16.583059310913086
    9. '6' → logprob: -16.895559310913086
    10. '10' → logprob: -16.958059310913086

Token 72: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19314037263393402
    2. '<|end|>' → logprob: -2.1931402683258057
    3. ' while' → logprob: -2.8181402683258057
    4. '
' → logprob: -6.318140506744385
    5. 'While' → logprob: -6.318140506744385
    6. '<|end|>' → logprob: -7.693140506744385
    7. '	while' → logprob: -9.443140029907227
    8. '  
' → logprob: -10.693140029907227
    9. ':' → logprob: -10.818140029907227
    10. ')' → logprob: -10.818140029907227

Token 73: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0031808018684387207
    2. ' while' → logprob: -5.753180980682373
    3. 'While' → logprob: -13.378180503845215
    4. '```' → logprob: -14.003180503845215
    5. '<|end|>' → logprob: -14.503180503845215
    6. '	while' → logprob: -15.753180503845215
    7. '>' → logprob: -17.37818145751953
    8. 'w' → logprob: -17.62818145751953
    9. '
' → logprob: -18.25318145751953
    10. 't' → logprob: -18.75318145751953

Token 74: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02327657863497734
    2. 'True' → logprob: -3.7732765674591064
    3. ' n' → logprob: -11.148276329040527
    4. 'n' → logprob: -11.773276329040527
    5. '(True' → logprob: -12.398276329040527
    6. ' ' → logprob: -12.648276329040527
    7. ' ' → logprob: -14.148276329040527
    8. ' Tru' → logprob: -15.273276329040527
    9. '1' → logprob: -15.898276329040527
    10. ' T' → logprob: -16.023277282714844

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019591135787777603
    2. '   ' → logprob: -8.875195503234863
    3. ':
' → logprob: -10.000195503234863
    4. ' :' → logprob: -11.875195503234863
    5. '):' → logprob: -13.750195503234863
    6. '<|end|>' → logprob: -14.000195503234863
    7. ':

' → logprob: -14.875195503234863
    8. ',' → logprob: -15.250195503234863
    9. ')' → logprob: -15.500195503234863
    10. '```' → logprob: -15.875195503234863

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018893759697675705
    2. ' t' → logprob: -7.626889228820801
    3. ' c' → logprob: -8.0018892288208
    4. '    ' → logprob: -8.1268892288208
    5. '  ' → logprob: -8.6268892288208
    6. 't' → logprob: -8.8768892288208
    7. '<|end|>' → logprob: -8.8768892288208
    8. ' ' → logprob: -9.0018892288208
    9. '    
' → logprob: -9.7518892288208
    10. '```' → logprob: -10.8768892288208

Token 77: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4906589984893799
    2. 't' (adapté à ' t') → logprob: -1.1156589984893799
    3. '   ' → logprob: -3.11565899848938
    4. ' c' → logprob: -5.115658760070801
    5. ' ' → logprob: -5.740658760070801
    6. 'c' → logprob: -6.115658760070801
    7. ' tetra' → logprob: -6.365658760070801
    8. '  ' → logprob: -6.990658760070801
    9. 'tet' → logprob: -7.615658760070801
    10. ' T' → logprob: -8.1156587600708

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061979226768016815
    2. '=' → logprob: -2.811979293823242
    3. 'etra' → logprob: -13.311979293823242
    4. 't' → logprob: -13.311979293823242
    5. ' ' → logprob: -13.436979293823242
    6. '=(' → logprob: -13.561979293823242
    7. '=int' → logprob: -14.061979293823242
    8. '=n' → logprob: -14.311979293823242
    9. ' =(' → logprob: -14.311979293823242
    10. '  ' → logprob: -14.561979293823242

Token 79: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07610832899808884
    2. ' n' → logprob: -2.70110821723938
    3. '(n' → logprob: -5.326108455657959
    4. ' (' → logprob: -7.076108455657959
    5. '(' → logprob: -8.0761079788208
    6. 'int' → logprob: -9.4511079788208
    7. ' ' → logprob: -11.0761079788208
    8. '(int' → logprob: -11.5761079788208
    9. ' int' → logprob: -11.7011079788208
    10. '((' → logprob: -11.8261079788208

Token 80: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5762171149253845
    2. '*(' → logprob: -0.8262171149253845
    3. ' *' → logprob: -8.201216697692871
    4. '*n' → logprob: -13.451216697692871
    5. '*((' → logprob: -14.076216697692871
    6. '**' → logprob: -14.326216697692871
    7. '*t' → logprob: -15.826216697692871
    8. '(n' → logprob: -16.201217651367188
    9. ' ' → logprob: -16.326217651367188
    10. ' *(' → logprob: -16.951217651367188

Token 81: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008307131356559694
    2. '(n' → logprob: -7.12583065032959
    3. ')n' → logprob: -11.00083065032959
    4. '	n' → logprob: -12.25083065032959
    5. ' n' → logprob: -12.50083065032959
    6. '```' → logprob: -15.25083065032959
    7. '+' → logprob: -15.37583065032959
    8. ')' → logprob: -16.000831604003906
    9. '(' → logprob: -16.250831604003906
    10. '1' → logprob: -16.500831604003906

Token 82: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003610401414334774
    2. ' +' → logprob: -5.628610610961914
    3. '1' → logprob: -12.003610610961914
    4. '+)' → logprob: -13.878610610961914
    5. '+

' → logprob: -14.128610610961914
    6. 'plus' → logprob: -14.378610610961914
    7. '＋' → logprob: -14.628610610961914
    8. '```' → logprob: -15.003610610961914
    9. '+
' → logprob: -15.628610610961914
    10. ' ' → logprob: -16.003610610961914

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.75001049041748
    3. ')' → logprob: -13.87501049041748
    4. '```' → logprob: -14.50001049041748
    5. '{' → logprob: -16.000009536743164
    6. '>' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.187509536743164
    8. '`' → logprob: -16.375009536743164
    9. '}' → logprob: -16.375009536743164
    10. '
' → logprob: -16.937509536743164

Token 84: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.003920364659279585
    2. '*(' → logprob: -6.003920555114746
    3. ')*' → logprob: -7.253920555114746
    4. ')' → logprob: -7.878920555114746
    5. ')(' → logprob: -8.628920555114746
    6. '*' → logprob: -9.503920555114746
    7. '*)(' → logprob: -10.128920555114746
    8. '*)' → logprob: -10.753920555114746
    9. ']*(' → logprob: -11.128920555114746
    10. ')**' → logprob: -11.878920555114746

Token 85: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009557744488120079
    2. 'n' → logprob: -4.759557723999023
    3. ')(' → logprob: -7.884557723999023
    4. ')' → logprob: -8.384557723999023
    5. ' (' → logprob: -8.634557723999023
    6. '(' → logprob: -9.259557723999023
    7. ')n' → logprob: -9.884557723999023
    8. ' n' → logprob: -12.509557723999023
    9. ' ' → logprob: -13.009557723999023
    10. '	n' → logprob: -13.384557723999023

Token 86: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8496516346931458
    2. '+' → logprob: -1.849651575088501
    3. ')*(' → logprob: -1.849651575088501
    4. '*' → logprob: -2.224651575088501
    5. '2' → logprob: -2.474651575088501
    6. '   ' → logprob: -4.22465181350708
    7. '```' → logprob: -4.22465181350708
    8. '*(' → logprob: -4.34965181350708
    9. ')*' → logprob: -4.84965181350708
    10. ')' → logprob: -5.09965181350708

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002474943408742547
    2. '1' → logprob: -6.127474784851074
    3. ' ' → logprob: -9.252474784851074
    4. '```' → logprob: -9.502474784851074
    5. ')' → logprob: -10.252474784851074
    6. '   ' → logprob: -11.127474784851074
    7. '  ' → logprob: -11.689974784851074
    8. '
' → logprob: -11.689974784851074
    9. '>' → logprob: -11.752474784851074
    10. 't' → logprob: -12.127474784851074

Token 88: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28600090742111206
    2. ')//' → logprob: -2.036000967025757
    3. '//' → logprob: -2.536000967025757
    4. ' )' → logprob: -4.036000728607178
    5. ' //' → logprob: -4.161000728607178
    6. ' ' → logprob: -5.536000728607178
    7. '")' → logprob: -7.286000728607178
    8. '"' → logprob: -7.661000728607178
    9. '`' → logprob: -8.911001205444336
    10. '```' → logprob: -8.911001205444336

Token 89: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.000913370808120817
    2. ' ' → logprob: -7.000913143157959
    3. '3' → logprob: -13.875913619995117
    4. '   ' → logprob: -14.750913619995117
    5. '  ' → logprob: -15.250913619995117
    6. '2' → logprob: -15.750913619995117
    7. ' ' → logprob: -16.500913619995117
    8. '```' → logprob: -17.000913619995117
    9. '٦' → logprob: -17.750913619995117
    10. '1' → logprob: -18.000913619995117

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009938235394656658
    2. '<|end|>' → logprob: -4.6349382400512695
    3. '<|end|>' → logprob: -9.50993824005127
    4. '>' → logprob: -10.50993824005127
    5. ' >' → logprob: -10.50993824005127
    6. '
' → logprob: -10.75993824005127
    7. ' if' → logprob: -11.25993824005127
    8. '    
' → logprob: -12.38493824005127
    9. '    ' → logprob: -12.50993824005127
    10. '  ' → logprob: -12.50993824005127

Token 92: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07096043974161148
    2. ' if' → logprob: -2.820960521697998
    3. '<|end|>' → logprob: -4.945960521697998
    4. ' ' → logprob: -6.945960521697998
    5. '  ' → logprob: -7.820960521697998
    6. 'if' (adapté à ' if') → logprob: -8.44596004486084
    7. '    ' → logprob: -8.69596004486084
    8. '<|end|>' → logprob: -9.82096004486084
    9. ' n' → logprob: -10.82096004486084
    10. 'n' → logprob: -12.19596004486084

Token 93: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.003177952254191041
    2. 't' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.378177642822266
    4. '   ' → logprob: -17.253177642822266
    5. '  ' → logprob: -17.503177642822266
    6. ' ' → logprob: -17.503177642822266
    7. '    ' → logprob: -18.253177642822266
    8. ' tetra' → logprob: -18.753177642822266
    9. '	t' → logprob: -18.815677642822266
    10. '>' → logprob: -18.878177642822266

Token 94: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1797552853822708
    2. '>' → logprob: -1.8047553300857544
    3. ' ' → logprob: -11.929755210876465
    4. '<|end|>' → logprob: -12.929755210876465
    5. ' ' → logprob: -14.929755210876465
    6. ')' → logprob: -15.179755210876465
    7. '>end' → logprob: -15.679755210876465
    8. '   ' → logprob: -16.55475616455078
    9. '()>' → logprob: -16.55475616455078
    10. ')>' → logprob: -16.67975616455078

Token 95: ' MAX' (ID: 16960)
  Prédit: ' MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MAX' → logprob: -0.04858805239200592
    2. 'MAX' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.048587799072266
    4. '_MAX' → logprob: -15.923587799072266
    5. '(MAX' → logprob: -16.048587799072266
    6. ' max' → logprob: -16.673587799072266
    7. '[MAX' → logprob: -18.048587799072266
    8. '/MAX' → logprob: -18.173587799072266
    9. ' Max' → logprob: -18.423587799072266
    10. 'max' → logprob: -18.673587799072266

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006994199939072132
    2. ':
' → logprob: -5.006994247436523
    3. '       ' → logprob: -8.881994247436523
    4. '   ' → logprob: -9.756994247436523
    5. '<|end|>' → logprob: -10.131994247436523
    6. ' or' → logprob: -11.631994247436523
    7. '):' → logprob: -11.756994247436523
    8. '):
' → logprob: -12.256994247436523
    9. ',' → logprob: -12.381994247436523
    10. ')' → logprob: -12.381994247436523

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.398067828034982e-05
    2. ' break' → logprob: -9.75007438659668
    3. '   ' → logprob: -11.87507438659668
    4. 'break' → logprob: -12.12507438659668
    5. '```' → logprob: -14.25007438659668
    6. '<|end|>' → logprob: -14.37507438659668
    7. '      ' → logprob: -14.75007438659668
    8. '	break' → logprob: -14.75007438659668
    9. '     ' → logprob: -15.12507438659668
    10. ' ' → logprob: -15.75007438659668

Token 98: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3997347056865692
    2. '       ' → logprob: -1.3997347354888916
    3. 'break' (adapté à ' break') → logprob: -2.5247347354888916
    4. '   ' → logprob: -6.0247344970703125
    5. '	break' → logprob: -8.149734497070312
    6. ' ' → logprob: -10.899734497070312
    7. '           ' → logprob: -11.774734497070312
    8. '```' → logprob: -11.774734497070312
    9. '     ' → logprob: -12.274734497070312
    10. '
' → logprob: -12.399734497070312

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019249867647886276
    2. 'tet' → logprob: -4.26924991607666
    3. '
' → logprob: -6.14424991607666
    4. '    
' → logprob: -6.64424991607666
    5. ' tetra' → logprob: -6.64424991607666
    6. '  ' → logprob: -8.64424991607666
    7. 't' → logprob: -10.26924991607666
    8. '```' → logprob: -10.51924991607666
    9. '   
' → logprob: -10.64424991607666
    10. '  
' → logprob: -10.76924991607666

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006965662818402052
    2. '
' → logprob: -5.756965637207031
    3. 'tet' → logprob: -6.131965637207031
    4. ' tetra' → logprob: -6.881965637207031
    5. '    
' → logprob: -7.756965637207031
    6. '  ' → logprob: -9.756965637207031
    7. '  
' → logprob: -10.756965637207031
    8. 't' → logprob: -11.381965637207031
    9. '   
' → logprob: -11.506965637207031
    10. '```' → logprob: -11.756965637207031

Token 101: ' tetra' (ID: 176775)
  Prédit: ' tetra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tetra' → logprob: -0.43037551641464233
    2. 'tet' → logprob: -1.305375576019287
    3. '   ' → logprob: -2.555375576019287
    4. ' tet' → logprob: -8.055375099182129
    5. '
' → logprob: -8.055375099182129
    6. 't' → logprob: -9.055375099182129
    7. '```' → logprob: -9.930375099182129
    8. '    
' → logprob: -9.930375099182129
    9. ' ' → logprob: -10.430375099182129
    10. '  ' → logprob: -10.805375099182129

Token 102: 'hed' (ID: 1736)
  Prédit: 'hed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hed' → logprob: -8.160971628967673e-05
    2. 'hedral' → logprob: -9.875082015991211
    3. 'hedron' → logprob: -11.125082015991211
    4. 'ed' → logprob: -12.125082015991211
    5. 'her' → logprob: -12.750082015991211
    6. 'heds' → logprob: -13.125082015991211
    7. ' hed' → logprob: -13.500082015991211
    8. 'he' → logprob: -13.875082015991211
    9. 'hyd' → logprob: -14.625082015991211
    10. ' ' → logprob: -14.875082015991211

Token 103: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008522743592038751
    2. 'ral' → logprob: -7.375852108001709
    3. 'als' → logprob: -9.500852584838867
    4. 'rale' → logprob: -9.875852584838867
    5. 'rails' → logprob: -10.250852584838867
    6. ' r' → logprob: -11.375852584838867
    7. 'rans' → logprob: -11.438352584838867
    8. 'ra' → logprob: -11.625852584838867
    9. ' ' → logprob: -12.938352584838867
    10. '   ' → logprob: -13.000852584838867

Token 104: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.00016778295685071498
    2. 'al' → logprob: -9.125167846679688
    3. 'a' → logprob: -10.750167846679688
    4. 's' → logprob: -10.750167846679688
    5. 'c' → logprob: -13.500167846679688
    6. 'ales' → logprob: -13.500167846679688
    7. ' als' → logprob: -13.625167846679688
    8. 'h' → logprob: -13.875167846679688
    9. '   ' → logprob: -13.875167846679688
    10. 'd' → logprob: -14.000167846679688

Token 105: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.697387966094539e-05
    2. '.' → logprob: -9.375086784362793
    3. '.app' → logprob: -14.000086784362793
    4. 'append' → logprob: -14.125086784362793
    5. '.add' → logprob: -15.250086784362793
    6. '.ap' → logprob: -15.875086784362793
    7. ' .' → logprob: -16.75008773803711
    8. '.Append' → logprob: -17.25008773803711
    9. '.extend' → logprob: -17.50008773803711
    10. '.push' → logprob: -18.00008773803711

Token 106: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 't' → logprob: -17.75000762939453
    4. ' (' → logprob: -21.37500762939453
    5. '(
' → logprob: -21.87500762939453
    6. '	t' → logprob: -22.50000762939453
    7. '()' → logprob: -23.12500762939453
    8. '((' → logprob: -23.37500762939453
    9. '(tt' → logprob: -23.75000762939453
    10. ')t' → logprob: -23.87500762939453

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5815754532814026
    2. ')
' → logprob: -0.8315754532814026
    3. '   ' → logprob: -5.206575393676758
    4. ')n' → logprob: -9.331575393676758
    5. ')
' → logprob: -10.081575393676758
    6. ' )
' → logprob: -12.581575393676758
    7. ' )' → logprob: -13.331575393676758
    8. 'n' → logprob: -13.456575393676758
    9. ')

' → logprob: -14.081575393676758
    10. ' ' → logprob: -14.581575393676758

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12694312632083893
    2. 'n' → logprob: -2.1269431114196777
    3. ' n' → logprob: -11.626943588256836
    4. '```' → logprob: -12.876943588256836
    5. '	n' → logprob: -13.376943588256836
    6. '  ' → logprob: -14.001943588256836
    7. ' ' → logprob: -14.501943588256836
    8. '    
' → logprob: -14.876943588256836
    9. '
' → logprob: -15.626943588256836
    10. '``' → logprob: -16.876943588256836

Token 109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.20186682045459747
    2. ' n' → logprob: -1.701866865158081
    3. '   ' → logprob: -7.701866626739502
    4. '	n' → logprob: -14.07686710357666
    5. ' ' → logprob: -15.07686710357666
    6. '  ' → logprob: -15.07686710357666
    7. '```' → logprob: -16.201866149902344
    8. '
' → logprob: -17.201866149902344
    9. '    ' → logprob: -17.451866149902344
    10. '    
' → logprob: -18.326866149902344

Token 110: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5761175155639648
    2. '+=' → logprob: -0.8261175155639648
    3. '+' → logprob: -8.701117515563965
    4. '=' → logprob: -11.576117515563965
    5. ']+=' → logprob: -14.076117515563965
    6. '+='' → logprob: -14.326117515563965
    7. ' ' → logprob: -15.076117515563965
    8. '+="' → logprob: -15.451117515563965
    9. ' +' → logprob: -15.951117515563965
    10. ' ' → logprob: -16.07611846923828

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06993665546178818
    2. ' ' → logprob: -2.694936752319336
    3. '```' → logprob: -15.444936752319336
    4. ' ' → logprob: -16.319936752319336
    5. '<|end|>' → logprob: -17.757436752319336
    6. '   ' → logprob: -18.007436752319336
    7. '	' → logprob: -18.944936752319336
    8. '2' → logprob: -19.132436752319336
    9. '0' → logprob: -19.319936752319336
    10. '１' → logprob: -19.319936752319336

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -17.000009536743164
    4. '   ' → logprob: -19.000009536743164
    5. '<|end|>' → logprob: -19.812509536743164
    6. '１' → logprob: -20.437509536743164
    7. '6' → logprob: -20.500009536743164
    8. '2' → logprob: -20.687509536743164
    9. '  ' → logprob: -20.937509536743164
    10. '' → logprob: -21.062509536743164

Token 113: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9649958610534668
    2. '#' → logprob: -1.5899958610534668
    3. 'n' → logprob: -2.214995861053467
    4. 'def' → logprob: -2.714995861053467
    5. 'sum' → logprob: -3.089995861053467
    6. 'next' → logprob: -3.964995861053467
    7. 's' → logprob: -4.089995861053467
    8. 'res' → logprob: -4.214995861053467
    9. 'answer' → logprob: -4.214995861053467
    10. 'print' → logprob: -4.339995861053467

Token 114: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2005491256713867
    2. 'def' → logprob: -1.3255491256713867
    3. 'result' → logprob: -2.5755491256713867
    4. 'count' → logprob: -3.0755491256713867
    5. 'target' → logprob: -3.3255491256713867
    6. 'n' → logprob: -3.3255491256713867
    7. 'x' → logprob: -3.7005491256713867
    8. 's' → logprob: -3.8255491256713867
    9. 'valid' → logprob: -3.8255491256713867
    10. '#' → logprob: -3.8255491256713867

Token 115: ' Gén' (ID: 71828)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8767926096916199
    2. 'def' → logprob: -2.0017926692962646
    3. 'result' → logprob: -2.0017926692962646
    4. 'results' → logprob: -2.3767926692962646
    5. 'count' → logprob: -3.0017926692962646
    6. 'for' → logprob: -3.6267926692962646
    7. 'target' → logprob: -3.8767926692962646
    8. '#' → logprob: -4.0017924308776855
    9. 'possible' → logprob: -4.0017924308776855
    10. 'ways' → logprob: -4.6267924308776855

Token 116: 'érer' (ID: 29097)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.8894134163856506
    2. 'er' → logprob: -1.0144133567810059
    3. 'éral' → logprob: -1.6394133567810059
    4. 'eral' → logprob: -4.139413356781006
    5. '#' → logprob: -5.764413356781006
    6. 'érations' → logprob: -6.014413356781006
    7. 'def' → logprob: -6.264413356781006
    8. 'éro' → logprob: -6.639413356781006
    9. 'ér' → logprob: -6.889413356781006
    10. 'r' → logprob: -7.014413356781006

Token 117: ' tous' (ID: 10688)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7534776926040649
    2. 'all' → logprob: -0.8784776926040649
    3. ' combinations' → logprob: -2.6284775733947754
    4. 'a' → logprob: -5.378477573394775
    5. 'pairs' → logprob: -5.628477573394775
    6. 'results' → logprob: -5.753477573394775
    7. 'com' → logprob: -5.753477573394775
    8. ' pairs' → logprob: -5.753477573394775
    9. 'def' → logprob: -6.128477573394775
    10. 'possible' → logprob: -6.378477573394775

Token 118: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.901314377784729
    2. 'possible' → logprob: -2.1513142585754395
    3. 'les' → logprob: -2.4013142585754395
    4. ' possible' → logprob: -2.6513142585754395
    5. ' trip' → logprob: -2.9013142585754395
    6. 's' → logprob: -2.9013142585754395
    7. ' sums' → logprob: -3.1513142585754395
    8. 'comb' → logprob: -3.9013142585754395
    9. ' possibles' → logprob: -4.2763142585754395
    10. ' comb' → logprob: -4.4013142585754395

Token 119: ' nombres' (ID: 76205)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46279260516166687
    2. 'trip' → logprob: -1.5877926349639893
    3. 'som' → logprob: -2.8377926349639893
    4. 'n' → logprob: -3.5877926349639893
    5. 'ent' → logprob: -3.5877926349639893
    6. 'num' → logprob: -4.58779239654541
    7. 'val' → logprob: -5.08779239654541
    8. 'c' → logprob: -5.33779239654541
    9. 'nombre' → logprob: -5.46279239654541
    10. 'comb' → logprob: -5.58779239654541

Token 120: ' possibles' (ID: 97753)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.1929818391799927
    2. 'sum' → logprob: -1.8179818391799927
    3. 'c' → logprob: -2.067981719970703
    4. 's' → logprob: -2.192981719970703
    5. 'results' → logprob: -2.817981719970703
    6. 'n' → logprob: -2.817981719970703
    7. 'possible' → logprob: -3.817981719970703
    8. 'valid' → logprob: -4.317981719970703
    9. 'poss' → logprob: -4.567981719970703
    10. 'for' → logprob: -4.567981719970703

Token 121: ' somme' (ID: 64484)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.22020387649536133
    2. 'possible' → logprob: -2.5952038764953613
    3. 's' → logprob: -3.0952038764953613
    4. 'results' → logprob: -3.3452038764953613
    5. ' numbers' → logprob: -4.095203876495361
    6. 'sum' → logprob: -5.595203876495361
    7. 'all' → logprob: -5.595203876495361
    8. 'poss' → logprob: -5.845203876495361
    9. 'nums' → logprob: -5.970203876495361
    10. 'com' → logprob: -6.095203876495361

Token 122: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13101820647716522
    2. 's' → logprob: -2.7560181617736816
    3. '_' → logprob: -3.5060181617736816
    4. '=' → logprob: -4.006018161773682
    5. ' de' → logprob: -5.756018161773682
    6. ' +=' → logprob: -6.131018161773682
    7. ' ' → logprob: -6.256018161773682
    8. 'de' → logprob: -7.131018161773682
    9. ' of' → logprob: -8.13101863861084
    10. ' des' → logprob: -8.25601863861084

Token 123: ''un' (ID: 9788)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4939780831336975
    2. ' deux' → logprob: -1.1189780235290527
    3. ' ' → logprob: -3.4939780235290527
    4. ' trois' → logprob: -4.118978023529053
    5. ' de' → logprob: -5.493978023529053
    6. '2' → logprob: -5.618978023529053
    7. '3' → logprob: -5.743978023529053
    8. 'c' → logprob: -6.493978023529053
    9. ' two' → logprob: -6.993978023529053
    10. ' cubes' → logprob: -7.118978023529053

Token 124: ' cube' (ID: 46822)
  Prédit: ' cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.3116213381290436
    2. 'cube' → logprob: -1.5616213083267212
    3. 'c' → logprob: -2.9366214275360107
    4. ' ' → logprob: -6.561621189117432
    5. ' c' → logprob: -7.186621189117432
    6. '_cube' → logprob: -7.686621189117432
    7. ' cub' → logprob: -7.936621189117432
    8. '<|end|>' → logprob: -8.06162166595459
    9. 'cub' → logprob: -8.31162166595459
    10. ' cubes' → logprob: -8.43662166595459

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7025637030601501
    2. ',' → logprob: -0.9525637030601501
    3. ' +' → logprob: -2.202563762664795
    4. ' ,' → logprob: -5.702563762664795
    5. 'plus' → logprob: -6.577563762664795
    6. ' plus' → logprob: -6.952563762664795
    7. 'et' → logprob: -7.077563762664795
    8. ' et' → logprob: -7.327563762664795
    9. 's' → logprob: -7.577563762664795
    10. ' and' → logprob: -9.702563285827637

Token 126: ' d' (ID: 272)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6554452776908875
    2. 'un' → logprob: -1.1554453372955322
    3. ' d' → logprob: -2.7804453372955322
    4. 'tet' → logprob: -3.4054453372955322
    5. 'd' → logprob: -3.9054453372955322
    6. 't' → logprob: -4.155445098876953
    7. ' tetra' → logprob: -4.780445098876953
    8. ' une' → logprob: -4.905445098876953
    9. ' ' → logprob: -5.280445098876953
    10. 'une' → logprob: -5.530445098876953

Token 127: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.03170635923743248
    2. ''' → logprob: -3.7817063331604004
    3. ''une' → logprob: -5.7817063331604
    4. 'u' → logprob: -6.0317063331604
    5. 'un' → logprob: -6.7817063331604
    6. '’un' → logprob: -7.9067063331604
    7. 'e' → logprob: -8.031706809997559
    8. ''u' → logprob: -8.281706809997559
    9. '`' → logprob: -8.406706809997559
    10. '```' → logprob: -8.406706809997559

Token 128: ' té' (ID: 22989)
  Prédit: ' tetra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tetra' → logprob: -0.3387994170188904
    2. 't' → logprob: -1.9637994766235352
    3. 'tet' → logprob: -2.588799476623535
    4. ' té' → logprob: -2.963799476623535
    5. 'té' → logprob: -4.588799476623535
    6. ' t' → logprob: -4.838799476623535
    7. ' tet' → logprob: -6.838799476623535
    8. ' ' → logprob: -8.213799476623535
    9. 'te' → logprob: -9.151299476623535
    10. 'c' → logprob: -9.463799476623535

Token 129: 'tra' (ID: 1787)
  Prédit: 'tra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tra' → logprob: -0.00028266964363865554
    2. 'tr' → logprob: -9.125282287597656
    3. 'trad' → logprob: -10.375282287597656
    4. 'ta' → logprob: -10.625282287597656
    5. 't' → logprob: -11.000282287597656
    6. 'trade' → logprob: -11.125282287597656
    7. 'ra' → logprob: -11.437782287597656
    8. 'tre' → logprob: -12.125282287597656
    9. 'тра' → logprob: -12.312782287597656
    10. '``' → logprob: -12.375282287597656

Token 130: 'è' (ID: 957)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.8399718403816223
    2. 'è' → logprob: -1.3399717807769775
    3. 'd' → logprob: -2.5899717807769775
    4. 'hed' → logprob: -3.2149717807769775
    5. 'dra' → logprob: -3.2149717807769775
    6. 'h' → logprob: -3.4649717807769775
    7. 'éd' → logprob: -3.7149717807769775
    8. 'hedron' → logprob: -3.9649717807769775
    9. 'hedral' → logprob: -4.464972019195557
    10. '#' → logprob: -4.964972019195557

Token 131: 'dre' (ID: 54853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44117891788482666
    2. 'dre' → logprob: -1.5661789178848267
    3. 'dr' → logprob: -2.441178798675537
    4. 'dra' → logprob: -2.816178798675537
    5. '' → logprob: -8.566179275512695
    6. '```' → logprob: -9.066179275512695
    7. 'д' → logprob: -9.441179275512695
    8. 'dro' → logprob: -9.691179275512695
    9. 'dram' → logprob: -10.191179275512695
    10. '#' → logprob: -10.253679275512695

Token 132: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5624133348464966
    2. 'possible' → logprob: -1.0624133348464966
    3. 'sum' → logprob: -3.437413215637207
    4. ' sums' → logprob: -3.562413215637207
    5. ' possible' → logprob: -4.937413215637207
    6. 'numbers' → logprob: -5.562413215637207
    7. 'results' → logprob: -5.687413215637207
    8. 'poss' → logprob: -6.062413215637207
    9. 'valid' → logprob: -6.312413215637207
    10. ' possibles' → logprob: -6.812413215637207

Token 133: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.537455677986145
    2. 'possible' → logprob: -1.037455677986145
    3. 'sum' → logprob: -3.1624555587768555
    4. 'results' → logprob: -5.2874555587768555
    5. 'poss' → logprob: -5.5374555587768555
    6. 'numbers' → logprob: -5.5374555587768555
    7. 'valid' → logprob: -5.7874555587768555
    8. 'result' → logprob: -6.6624555587768555
    9. ' sums' → logprob: -7.1624555587768555
    10. 'reachable' → logprob: -8.912455558776855

Token 134: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -1.0490949153900146
    2. 'omme' → logprob: -1.2990949153900146
    3. 'ommes' → logprob: -1.4240949153900146
    4. 'um' → logprob: -2.2990949153900146
    5. 'omm' → logprob: -4.424095153808594
    6. 'om' → logprob: -4.674095153808594
    7. 's' → logprob: -5.799095153808594
    8. 'umme' → logprob: -6.049095153808594
    9. 'ommen' → logprob: -6.674095153808594
    10. ' =' → logprob: -7.299095153808594

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234889984130859
    2. '=' → logprob: -0.8984889984130859
    3. 's' → logprob: -8.148488998413086
    4. '_' → logprob: -10.148488998413086
    5. '=[]' → logprob: -11.648488998413086
    6. '=set' → logprob: -11.648488998413086
    7. '_possible' → logprob: -12.398488998413086
    8. '_set' → logprob: -12.773488998413086
    9. '_numbers' → logprob: -13.398488998413086
    10. 'possible' → logprob: -13.523488998413086

Token 136: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07177693396806717
    2. ' set' → logprob: -2.821776866912842
    3. '[]' → logprob: -4.696776866912842
    4. ' []' → logprob: -7.571776866912842
    5. '{}' → logprob: -9.19677734375
    6. '[' → logprob: -11.44677734375
    7. ' [' → logprob: -12.69677734375
    8. '	set' → logprob: -13.32177734375
    9. ' ' → logprob: -13.44677734375
    10. '{' → logprob: -13.82177734375

Token 137: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007213685312308371
    2. '(' → logprob: -7.250721454620361
    3. '()
' → logprob: -11.750720977783203
    4. '()

' → logprob: -13.875720977783203
    5. '();' → logprob: -14.500720977783203
    6. '([' → logprob: -14.875720977783203
    7. ' ()' → logprob: -15.000720977783203
    8. '()]' → logprob: -15.125720977783203
    9. '()`' → logprob: -15.250720977783203
    10. '(),' → logprob: -16.000720977783203

Token 138: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.318681188422488e-05
    2. ' for' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -15.87501335144043
    4. '
' → logprob: -19.00001335144043
    5. '	for' → logprob: -19.12501335144043
    6. '```' → logprob: -19.87501335144043
    7. 'from' → logprob: -20.62501335144043
    8. '   ' → logprob: -21.12501335144043
    9. 'fo' → logprob: -21.25001335144043
    10. 'For' → logprob: -21.50001335144043

Token 139: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06410188972949982
    2. 'c' → logprob: -3.4391019344329834
    3. ' cube' → logprob: -3.5641019344329834
    4. 'cube' → logprob: -6.689101696014404
    5. '	c' → logprob: -8.689102172851562
    6. '_cube' → logprob: -9.689102172851562
    7. '   ' → logprob: -10.564102172851562
    8. ' ' → logprob: -10.564102172851562
    9. ' i' → logprob: -10.814102172851562
    10. ' _' → logprob: -11.126602172851562

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007355354027822614
    2. 'in' → logprob: -7.250735759735107
    3. 's' → logprob: -11.37573528289795
    4. ' ' → logprob: -11.50073528289795
    5. '  ' → logprob: -13.37573528289795
    6. ' i' → logprob: -14.00073528289795
    7. '	in' → logprob: -14.50073528289795
    8. 'c' → logprob: -14.62573528289795
    9. ' ' → logprob: -15.50073528289795
    10. '_' → logprob: -15.75073528289795

Token 141: ' cubes' (ID: 88455)
  Prédit: ' cubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.2520236074924469
    2. 'c' → logprob: -1.5020235776901245
    3. ' c' → logprob: -9.502023696899414
    4. 'ubes' → logprob: -12.002023696899414
    5. 's' → logprob: -12.377023696899414
    6. ' ' → logprob: -12.752023696899414
    7. '	c' → logprob: -13.252023696899414
    8. 'cub' → logprob: -13.252023696899414
    9. 'cube' → logprob: -13.752023696899414
    10. ' cub' → logprob: -14.502023696899414

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010612714104354382
    2. ' :' → logprob: -7.37606143951416
    3. ':
' → logprob: -7.87606143951416
    4. ' in' → logprob: -10.37606143951416
    5. 's' → logprob: -11.75106143951416
    6. 'in' → logprob: -12.75106143951416
    7. '):' → logprob: -12.75106143951416
    8. '   ' → logprob: -12.87606143951416
    9. ':**' → logprob: -13.87606143951416
    10. ')' → logprob: -14.12606143951416

Token 143: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01648285798728466
    2. '   ' → logprob: -4.141482830047607
    3. 'for' → logprob: -7.891482830047607
    4. ' ' → logprob: -9.766483306884766
    5. '	for' → logprob: -11.391483306884766
    6. '    
' → logprob: -13.391483306884766
    7. '  ' → logprob: -13.391483306884766
    8. ' ' → logprob: -14.641483306884766
    9. ' s' → logprob: -14.766483306884766
    10. ':' → logprob: -15.141483306884766

Token 144: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008409019559621811
    2. 'for' (adapté à ' for') → logprob: -5.508409023284912
    3. ' ' → logprob: -5.758409023284912
    4. '   ' → logprob: -6.883409023284912
    5. '    ' → logprob: -10.133408546447754
    6. '<|end|>' → logprob: -10.133408546447754
    7. '	for' → logprob: -10.383408546447754
    8. ' 
' → logprob: -11.383408546447754
    9. '    
' → logprob: -12.133408546447754
    10. ' ' → logprob: -12.383408546447754

Token 145: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.029753267765045166
    2. 't' → logprob: -3.5297532081604004
    3. ' ' → logprob: -13.404753684997559
    4. '	t' → logprob: -14.654753684997559
    5. '`t' → logprob: -15.404753684997559
    6. '```' → logprob: -15.529753684997559
    7. '  ' → logprob: -16.529752731323242
    8. '   ' → logprob: -16.654752731323242
    9. ' tetra' → logprob: -17.654752731323242
    10. ' ' → logprob: -17.904752731323242

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002905334113165736
    2. 'in' → logprob: -8.375290870666504
    3. ' ' → logprob: -10.125290870666504
    4. 's' → logprob: -11.500290870666504
    5. 'etra' → logprob: -12.375290870666504
    6. '  ' → logprob: -13.500290870666504
    7. '	in' → logprob: -13.500290870666504
    8. ' tetra' → logprob: -14.625290870666504
    9. ' ' → logprob: -15.375290870666504
    10. '   ' → logprob: -15.375290870666504

Token 147: ' tetra' (ID: 176775)
  Prédit: ' tetra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tetra' → logprob: -0.5766497850418091
    2. 'tet' → logprob: -0.8266497850418091
    3. 'etra' → logprob: -7.3266496658325195
    4. 't' → logprob: -10.45164966583252
    5. ' ' → logprob: -11.45164966583252
    6. ' tet' → logprob: -12.45164966583252
    7. 'ter' → logprob: -13.07664966583252
    8. 'tria' → logprob: -14.01414966583252
    9. 'tera' → logprob: -14.13914966583252
    10. '   ' → logprob: -14.13914966583252

Token 148: 'hed' (ID: 1736)
  Prédit: 'hed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hed' → logprob: -1.9623810658231378e-05
    2. 'hedral' → logprob: -11.250020027160645
    3. 'hedron' → logprob: -13.000020027160645
    4. 'ed' → logprob: -13.125020027160645
    5. 'hyd' → logprob: -14.500020027160645
    6. 'he' → logprob: -15.000020027160645
    7. 'her' → logprob: -15.375020027160645
    8. 'hr' → logprob: -15.625020027160645
    9. 'red' → logprob: -15.750020027160645
    10. 'heds' → logprob: -15.750020027160645

Token 149: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019235177896916866
    2. 'ed' → logprob: -6.626923561096191
    3. 'dr' → logprob: -7.751923561096191
    4. 'ral' → logprob: -10.251923561096191
    5. 'als' → logprob: -10.376923561096191
    6. 'ra' → logprob: -10.501923561096191
    7. 'd' → logprob: -11.126923561096191
    8. 'rails' → logprob: -11.376923561096191
    9. 'endr' → logprob: -11.501923561096191
    10. 'rale' → logprob: -11.626923561096191

Token 150: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.4613836109638214
    2. 'r' → logprob: -1.461383581161499
    3. 'dr' → logprob: -2.711383581161499
    4. 'd' → logprob: -3.336383581161499
    5. 'ed' → logprob: -3.461383581161499
    6. 's' → logprob: -7.086383819580078
    7. 't' → logprob: -7.211383819580078
    8. 'tr' → logprob: -7.336383819580078
    9. 'al' → logprob: -7.586383819580078
    10. 'icals' → logprob: -7.961383819580078

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012713531032204628
    2. ':
' → logprob: -4.387713432312012
    3. '   ' → logprob: -9.637713432312012
    4. '       ' → logprob: -9.887713432312012
    5. '<|end|>' → logprob: -10.637713432312012
    6. ' :' → logprob: -10.762713432312012
    7. '):
' → logprob: -11.637713432312012
    8. '):' → logprob: -11.762713432312012
    9. ' :
' → logprob: -11.762713432312012
    10. ',' → logprob: -12.512713432312012

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006657334160991013
    2. ' s' → logprob: -8.250665664672852
    3. 's' → logprob: -8.375665664672852
    4. '   ' → logprob: -10.125665664672852
    5. '           ' → logprob: -10.250665664672852
    6. '        
' → logprob: -10.500665664672852
    7. ' if' → logprob: -11.000665664672852
    8. '    ' → logprob: -11.750665664672852
    9. '<|end|>' → logprob: -12.125665664672852
    10. '      ' → logprob: -12.125665664672852

Token 153: ' s' (ID: 265)
  Prédit: ' sums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.2586714029312134
    2. '           ' → logprob: -2.008671283721924
    3. ' s' → logprob: -3.008671283721924
    4. ' if' → logprob: -3.508671283721924
    5. 's' (adapté à ' s') → logprob: -4.508671283721924
    6. '       ' → logprob: -5.758671283721924
    7. 'if' → logprob: -9.008671760559082
    8. ' sum' → logprob: -9.758671760559082
    9. '        ' → logprob: -10.008671760559082
    10. ' suma' → logprob: -11.133671760559082

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707205653190613
    2. '=' → logprob: -1.1370720863342285
    3. 's' → logprob: -8.88707160949707
    4. 'ums' → logprob: -10.13707160949707
    5. ' ' → logprob: -11.01207160949707
    6. '=s' → logprob: -13.26207160949707
    7. ' +=' → logprob: -14.51207160949707
    8. 'ets' → logprob: -14.51207160949707
    9. '+=' → logprob: -14.63707160949707
    10. 'paces' → logprob: -14.88707160949707

Token 155: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4287060797214508
    2. 'c' → logprob: -1.0537060499191284
    3. ' ' → logprob: -13.053706169128418
    4. '	c' → logprob: -13.428706169128418
    5. ' ' → logprob: -14.053706169128418
    6. ')c' → logprob: -15.678706169128418
    7. '   ' → logprob: -15.803706169128418
    8. '(c' → logprob: -15.928706169128418
    9. '    ' → logprob: -16.6787052154541
    10. '
' → logprob: -16.8037052154541

Token 156: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12864892184734344
    2. '+' → logprob: -2.1286489963531494
    3. '+t' → logprob: -6.37864875793457
    4. '+s' → logprob: -11.00364875793457
    5. ' +
' → logprob: -13.00364875793457
    6. ' ' → logprob: -14.37864875793457
    7. '+n' → logprob: -14.75364875793457
    8. '+
' → logprob: -15.00364875793457
    9. '+r' → logprob: -15.25364875793457
    10. '+c' → logprob: -15.25364875793457

Token 157: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3132627606391907
    2. ' t' → logprob: -1.313262701034546
    3. ' ' → logprob: -13.938262939453125
    4. '	t' → logprob: -16.438262939453125
    5. '`t' → logprob: -17.563262939453125
    6. ' ' → logprob: -17.688262939453125
    7. 's' → logprob: -18.938262939453125
    8. '  ' → logprob: -19.438262939453125
    9. '   ' → logprob: -19.813262939453125
    10. '_t' → logprob: -19.938262939453125

Token 158: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11708750575780869
    2. 'if' → logprob: -2.7420876026153564
    3. '       ' → logprob: -3.1170876026153564
    4. '   ' → logprob: -6.617087364196777
    5. 's' → logprob: -7.867087364196777
    6. ' s' → logprob: -10.367087364196777
    7. ' ' → logprob: -12.367087364196777
    8. '
' → logprob: -12.742087364196777
    9. '<|end|>' → logprob: -13.117087364196777
    10. '           ' → logprob: -13.367087364196777

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17407278716564178
    2. ' if' → logprob: -1.9240727424621582
    3. 'if' → logprob: -4.299072742462158
    4. '   ' → logprob: -9.174073219299316
    5. 's' → logprob: -10.049073219299316
    6. '           ' → logprob: -12.174073219299316
    7. '
' → logprob: -12.299073219299316
    8. ' s' → logprob: -12.674073219299316
    9. ' ' → logprob: -13.049073219299316
    10. '<|end|>' → logprob: -13.049073219299316

Token 160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03806513547897339
    2. ' if' → logprob: -3.288065195083618
    3. '       ' → logprob: -11.163064956665039
    4. 's' → logprob: -11.663064956665039
    5. '   ' → logprob: -15.288064956665039
    6. ' s' → logprob: -16.03806495666504
    7. '        ' → logprob: -16.16306495666504
    8. 'If' → logprob: -16.16306495666504
    9. '```' → logprob: -16.41306495666504
    10. '           ' → logprob: -16.66306495666504

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11284594237804413
    2. 's' → logprob: -2.2378458976745605
    3. ' ' → logprob: -10.987846374511719
    4. '   ' → logprob: -13.362846374511719
    5. '1' → logprob: -13.737846374511719
    6. ' ' → logprob: -14.050346374511719
    7. '	s' → logprob: -14.800346374511719
    8. '<|end|>' → logprob: -14.925346374511719
    9. '```' → logprob: -15.175346374511719
    10. '  ' → logprob: -15.300346374511719

Token 162: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16022859513759613
    2. '<=' → logprob: -1.9102286100387573
    3. '<|end|>' → logprob: -13.785228729248047
    4. ')<=' → logprob: -13.910228729248047
    5. ' ' → logprob: -14.160228729248047
    6. ']<=' → logprob: -14.910228729248047
    7. '<' → logprob: -14.910228729248047
    8. '>' → logprob: -15.660228729248047
    9. '[' → logprob: -15.660228729248047
    10. ')' → logprob: -15.660228729248047

Token 163: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0019286326132714748
    2. ' MAX' → logprob: -6.251928806304932
    3. '_MAX' → logprob: -19.501928329467773
    4. 'Max' → logprob: -19.501928329467773
    5. ' ' → logprob: -19.626928329467773
    6. 'MA' → logprob: -19.751928329467773
    7. '(MAX' → logprob: -19.876928329467773
    8. '   ' → logprob: -20.126928329467773
    9. '151' → logprob: -21.126928329467773
    10. '.MAX' → logprob: -21.376928329467773

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520335018634796
    2. ':
' → logprob: -1.5020334720611572
    3. '       ' → logprob: -10.002033233642578
    4. ':
' → logprob: -11.002033233642578
    5. '           ' → logprob: -11.252033233642578
    6. ':

' → logprob: -11.877033233642578
    7. ' and' → logprob: -12.002033233642578
    8. ':s' → logprob: -12.252033233642578
    9. '):
' → logprob: -12.627033233642578
    10. ' :
' → logprob: -13.002033233642578

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025179923977702856
    2. 's' → logprob: -6.127518177032471
    3. ':
' → logprob: -8.627517700195312
    4. ':' → logprob: -9.877517700195312
    5. '
' → logprob: -10.002517700195312
    6. '            
' → logprob: -10.627517700195312
    7. ' s' → logprob: -11.627517700195312
    8. '```' → logprob: -12.002517700195312
    9. '       ' → logprob: -12.377517700195312
    10. '               ' → logprob: -12.752517700195312

Token 166: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001455236109904945
    2. ' sums' → logprob: -6.876455307006836
    3. '           ' → logprob: -8.126455307006836
    4. '   ' → logprob: -9.251455307006836
    5. '
' → logprob: -11.126455307006836
    6. '               ' → logprob: -12.126455307006836
    7. '       ' → logprob: -12.376455307006836
    8. ' ' → logprob: -13.126455307006836
    9. 'sum' → logprob: -13.751455307006836
    10. ' s' → logprob: -13.876455307006836

Token 167: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007104054093360901
    2. '.' → logprob: -7.250710487365723
    3. ' .' → logprob: -15.375710487365723
    4. '.update' → logprob: -16.125709533691406
    5. 'add' → logprob: -16.375709533691406
    6. '.append' → logprob: -17.625709533691406
    7. '   ' → logprob: -17.875709533691406
    8. '.Add' → logprob: -18.375709533691406
    9. '           ' → logprob: -19.000709533691406
    10. '	add' → logprob: -19.500709533691406

Token 168: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00410998472943902
    2. '(' → logprob: -5.504109859466553
    3. 's' → logprob: -10.379110336303711
    4. '(
' → logprob: -15.004110336303711
    5. ' (' → logprob: -16.25411033630371
    6. '(
' → logprob: -18.25411033630371
    7. ')' → logprob: -18.37911033630371
    8. '(

' → logprob: -18.62911033630371
    9. '()' → logprob: -18.75411033630371
    10. '(S' → logprob: -18.87911033630371

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.947715832618997e-05
    2. '<|end|>' → logprob: -10.375089645385742
    3. ')
' → logprob: -10.500089645385742
    4. '       ' → logprob: -11.375089645385742
    5. ' )' → logprob: -11.750089645385742
    6. ')return' → logprob: -12.500089645385742
    7. '#' → logprob: -13.500089645385742
    8. '
' → logprob: -13.875089645385742
    9. '())' → logprob: -13.875089645385742
    10. ')#' → logprob: -14.500089645385742

Token 170: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2008543163537979
    2. 'result' → logprob: -2.7008543014526367
    3. 'for' → logprob: -2.8258543014526367
    4. '#' → logprob: -3.5758543014526367
    5. 'results' → logprob: -5.450854301452637
    6. 'answers' → logprob: -5.575854301452637
    7. 'pr' → logprob: -5.700854301452637
    8. 'answer' → logprob: -5.700854301452637
    9. 's' → logprob: -5.700854301452637
    10. 'sorted' → logprob: -5.825854301452637

Token 171: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6938222050666809
    2. '       ' → logprob: -0.8188222050666809
    3. ' else' → logprob: -2.943822145462036
    4. 'print' → logprob: -5.318822383880615
    5. 's' → logprob: -7.318822383880615
    6. '```' → logprob: -7.943822383880615
    7. '   ' → logprob: -8.068821907043457
    8. '        
' → logprob: -9.693821907043457
    9. '        ' → logprob: -9.818821907043457
    10. '	else' → logprob: -9.943821907043457

Token 172: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05073263868689537
    2. ':' → logprob: -3.0507326126098633
    3. ':
' → logprob: -6.675732612609863
    4. 'break' → logprob: -7.675732612609863
    5. ' break' → logprob: -8.050732612609863
    6. '               ' → logprob: -10.050732612609863
    7. '	break' → logprob: -11.175732612609863
    8. '   ' → logprob: -11.425732612609863
    9. '```' → logprob: -11.675732612609863
    10. '		' → logprob: -12.425732612609863

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7513564825057983
    2. 'break' → logprob: -0.7513564825057983
    3. ' break' → logprob: -2.876356601715088
    4. '               ' → logprob: -9.50135612487793
    5. '	break' → logprob: -9.50135612487793
    6. '```' → logprob: -10.37635612487793
    7. '   ' → logprob: -11.37635612487793
    8. '_break' → logprob: -11.75135612487793
    9. '       ' → logprob: -12.87635612487793
    10. 'Break' → logprob: -13.75135612487793

Token 174: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04883977025747299
    2. ' break' → logprob: -3.048839807510376
    3. '           ' → logprob: -8.298839569091797
    4. '	break' → logprob: -13.298839569091797
    5. '               ' → logprob: -14.298839569091797
    6. 'continue' → logprob: -14.548839569091797
    7. '       ' → logprob: -15.298839569091797
    8. '```' → logprob: -15.673839569091797
    9. '   ' → logprob: -15.798839569091797
    10. 'b' → logprob: -15.798839569091797

Token 175: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7844722867012024
    2. 'for' → logprob: -1.2844722270965576
    3. '<|end|>' → logprob: -1.9094722270965576
    4. 'print' → logprob: -2.1594722270965576
    5. '#' → logprob: -6.534472465515137
    6. ' for' → logprob: -7.534472465515137
    7. '\n' → logprob: -7.909472465515137
    8. '

' → logprob: -8.409472465515137
    9. '```' → logprob: -8.409472465515137
    10. '  
' → logprob: -9.659472465515137

Token 176: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4918935298919678
    2. 'count' → logprob: -1.9918935298919678
    3. 'result' → logprob: -2.6168935298919678
    4. 'results' → logprob: -3.2418935298919678
    5. 'answers' → logprob: -3.8668935298919678
    6. 'print' → logprob: -3.9918935298919678
    7. 'answer' → logprob: -3.9918935298919678
    8. 'valid' → logprob: -4.241893768310547
    9. 'n' → logprob: -4.616893768310547
    10. 'def' → logprob: -4.616893768310547

Token 177: ' Transformer' (ID: 113133)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3881056308746338
    2. 'count' → logprob: -1.8881056308746338
    3. 'result' → logprob: -2.638105630874634
    4. 'print' → logprob: -3.638105630874634
    5. 'def' → logprob: -4.388105392456055
    6. 'answer' → logprob: -4.513105392456055
    7. 'results' → logprob: -4.513105392456055
    8. 'valid' → logprob: -4.513105392456055
    9. ' for' → logprob: -5.388105392456055
    10. 'ans' → logprob: -5.513105392456055

Token 178: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09066299349069595
    2. ' sums' → logprob: -2.965662956237793
    3. 'sorted' → logprob: -4.465662956237793
    4. ' la' → logprob: -4.465662956237793
    5. 'la' → logprob: -6.340662956237793
    6. 'list' → logprob: -6.340662956237793
    7. 'le' → logprob: -6.465662956237793
    8. ' les' → logprob: -6.840662956237793
    9. 'sum' → logprob: -7.340662956237793
    10. 'the' → logprob: -7.465662956237793

Token 179: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1442476511001587
    2. 'list' → logprob: -2.519247531890869
    3. 'sorted' → logprob: -3.269247531890869
    4. 'une' → logprob: -4.644247531890869
    5. ' liste' → logprob: -5.644247531890869
    6. ' sorted' → logprob: -6.644247531890869
    7. 'a' → logprob: -7.894247531890869
    8. ' une' → logprob: -8.144248008728027
    9. 'lista' → logprob: -8.894248008728027
    10. ' list' → logprob: -8.894248008728027

Token 180: ' tri' (ID: 12665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09809969365596771
    2. 'sum' → logprob: -3.098099708557129
    3. 'result' → logprob: -4.473099708557129
    4. ' sums' → logprob: -4.598099708557129
    5. 'sorted' → logprob: -4.848099708557129
    6. 'possible' → logprob: -5.473099708557129
    7. 'results' → logprob: -5.598099708557129
    8. 'valid' → logprob: -5.723099708557129
    9. 'numbers' → logprob: -5.848099708557129
    10. 'lst' → logprob: -7.223099708557129

Token 181: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07133769989013672
    2. 'st' → logprob: -2.6963376998901367
    3. 's' → logprob: -7.446337699890137
    4. 'ste' → logprob: -7.946337699890137
    5. 'é' → logprob: -9.321337699890137
    6. 'ées' → logprob: -9.571337699890137
    7. 'ee' → logprob: -9.821337699890137
    8. 'd' → logprob: -9.821337699890137
    9. 'ang' → logprob: -10.071337699890137
    10. 'ed' → logprob: -10.571337699890137

Token 182: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07641329616308212
    2. 'sorted' → logprob: -3.57641339302063
    3. 'result' → logprob: -3.95141339302063
    4. 'sum' → logprob: -4.326413154602051
    5. ' sums' → logprob: -5.076413154602051
    6. 'numbers' → logprob: -6.201413154602051
    7. 'results' → logprob: -6.451413154602051
    8. 'possible' → logprob: -6.701413154602051
    9. 'valid' → logprob: -7.826413154602051
    10. 'res' → logprob: -7.826413154602051

Token 183: ' faire' (ID: 8119)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.143811821937561
    2. ' b' → logprob: -2.1438117027282715
    3. ' une' → logprob: -2.3938117027282715
    4. 'b' → logprob: -2.6438117027282715
    5. 'une' → logprob: -2.6438117027282715
    6. ' binary' → logprob: -2.6438117027282715
    7. 'la' → logprob: -3.0188117027282715
    8. ' effectuer' → logprob: -3.1438117027282715
    9. ' faciliter' → logprob: -3.2688117027282715
    10. ' bis' → logprob: -3.7688117027282715

Token 184: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.39245498180389404
    2. 'des' → logprob: -1.267454981803894
    3. ' une' → logprob: -3.8924551010131836
    4. ' des' → logprob: -4.767455101013184
    5. 're' → logprob: -5.392455101013184
    6. 'de' → logprob: -5.892455101013184
    7. 'import' → logprob: -6.642455101013184
    8. '_des' → logprob: -7.267455101013184
    9. 'la' → logprob: -7.392455101013184
    10. '#' → logprob: -7.517455101013184

Token 185: ' recherche' (ID: 24975)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.12031273543834686
    2. 'b' → logprob: -3.3703126907348633
    3. 'binary' → logprob: -3.7453126907348633
    4. ' recherche' → logprob: -3.9953126907348633
    5. 'cherche' → logprob: -4.370312690734863
    6. 'search' → logprob: -4.870312690734863
    7. 'bis' → logprob: -5.745312690734863
    8. 'import' → logprob: -6.120312690734863
    9. 'rech' → logprob: -6.120312690734863
    10. 'Recherche' → logprob: -6.120312690734863

Token 186: ' rapide' (ID: 44887)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4195472002029419
    2. 'b' → logprob: -1.419547200202942
    3. 'sorted' → logprob: -3.5445470809936523
    4. 's' → logprob: -3.6695470809936523
    5. 'binary' → logprob: -4.169547080993652
    6. ' binary' → logprob: -4.669547080993652
    7. 'bis' → logprob: -4.794547080993652
    8. 'import' → logprob: -5.169547080993652
    9. ' sorted' → logprob: -5.419547080993652
    10. ' bis' → logprob: -6.294547080993652

Token 187: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2987276315689087
    2. 'sorted' → logprob: -1.5487276315689087
    3. ' sums' → logprob: -4.173727512359619
    4. '
' → logprob: -4.423727512359619
    5. 'sum' → logprob: -4.923727512359619
    6. 'numbers' → logprob: -5.048727512359619
    7. 'possible' → logprob: -6.048727512359619
    8. ' sorted' → logprob: -7.423727512359619
    9. 'nums' → logprob: -7.798727512359619
    10. 'valid' → logprob: -7.923727512359619

Token 188: 'sorted' (ID: 64288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37389102578163147
    2. 'sorted' → logprob: -1.373890995979309
    3. ' sums' → logprob: -3.8738911151885986
    4. 'possible' → logprob: -4.6238908767700195
    5. 'valid' → logprob: -4.8738908767700195
    6. 'sum' → logprob: -4.9988908767700195
    7. 'numbers' → logprob: -5.2488908767700195
    8. 'nums' → logprob: -5.8738908767700195
    9. 'results' → logprob: -6.6238908767700195
    10. 'all' → logprob: -6.8738908767700195

Token 189: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.008978052996098995
    2. 's' → logprob: -5.258977890014648
    3. '_' → logprob: -5.883977890014648
    4. '_list' → logprob: -8.258977890014648
    5. '_nums' → logprob: -8.383977890014648
    6. '_numbers' → logprob: -8.883977890014648
    7. '_sum' → logprob: -9.133977890014648
    8. '_values' → logprob: -9.508977890014648
    9. '(' → logprob: -10.508977890014648
    10. '()' → logprob: -10.758977890014648

Token 190: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.08248643577098846
    2. '_s' → logprob: -2.582486391067505
    3. '_' → logprob: -6.457486629486084
    4. 's' → logprob: -6.582486629486084
    5. ' =' → logprob: -8.207486152648926
    6. '_nums' → logprob: -9.082486152648926
    7. '=' → logprob: -9.457486152648926
    8. 'um' → logprob: -9.957486152648926
    9. '_vals' → logprob: -10.707486152648926
    10. '_list' → logprob: -10.707486152648926

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025926172733307
    2. '=' → logprob: -1.9102592468261719
    3. 's' → logprob: -10.660259246826172
    4. '_' → logprob: -12.910259246826172
    5. ',' → logprob: -13.035259246826172
    6. ' ' → logprob: -13.160259246826172
    7. '.' → logprob: -13.660259246826172
    8. ')' → logprob: -14.035259246826172
    9. 'sorted' → logprob: -14.285259246826172
    10. '＝' → logprob: -15.410259246826172

Token 192: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.474078893661499
    2. 'sorted' → logprob: -0.974078893661499
    3. '(sorted' → logprob: -14.349079132080078
    4. 'list' → logprob: -14.849079132080078
    5. ' list' → logprob: -15.099079132080078
    6. ' ' → logprob: -15.099079132080078
    7. '.sorted' → logprob: -15.849079132080078
    8. ' ' → logprob: -16.474079132080078
    9. 's' → logprob: -16.599079132080078
    10. 'Sorted' → logprob: -16.849079132080078

Token 193: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0032349901739507914
    2. '(' → logprob: -5.75323486328125
    3. 's' → logprob: -10.00323486328125
    4. ' (' → logprob: -12.00323486328125
    5. '(list' → logprob: -12.62823486328125
    6. '()' → logprob: -13.62823486328125
    7. '(
' → logprob: -14.62823486328125
    8. '(sorted' → logprob: -15.00323486328125
    9. '(sum' → logprob: -15.25323486328125
    10. '(set' → logprob: -16.75323486328125

Token 194: 'ums' (ID: 6162)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5783994793891907
    2. 's' → logprob: -0.9533994793891907
    3. 'ums' → logprob: -2.953399419784546
    4. ')' → logprob: -6.953399658203125
    5. '_' → logprob: -8.453399658203125
    6. ')_' → logprob: -8.953399658203125
    7. ')s' → logprob: -9.078399658203125
    8. '(s' → logprob: -9.578399658203125
    9. 'unds' → logprob: -10.828399658203125
    10. 'uns' → logprob: -10.953399658203125

Token 195: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ')

' → logprob: -16.875001907348633
    5. ')#' → logprob: -18.125001907348633
    6. '())' → logprob: -18.250001907348633
    7. '))' → logprob: -18.500001907348633
    8. ')
' → logprob: -18.750001907348633
    9. ')`' → logprob: -18.875001907348633
    10. '()' → logprob: -19.750001907348633

Token 196: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6948739886283875
    2. 'def' → logprob: -1.4448740482330322
    3. 'Q' → logprob: -1.9448740482330322
    4. 'n' → logprob: -2.8198740482330322
    5. 'for' → logprob: -3.8198740482330322
    6. 'query' → logprob: -4.444873809814453
    7. 'k' → logprob: -4.944873809814453
    8. 'import' → logprob: -5.319873809814453
    9. 'num' → logprob: -5.444873809814453
    10. 'm' → logprob: -5.694873809814453

Token 197: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5015509724617004
    2. 'for' → logprob: -1.3765509128570557
    3. 'q' → logprob: -2.8765509128570557
    4. ' for' → logprob: -3.6265509128570557
    5. 'import' → logprob: -3.8765509128570557
    6. ' def' → logprob: -4.251551151275635
    7. 'input' → logprob: -5.251551151275635
    8. 'Q' → logprob: -5.626551151275635
    9. ' q' → logprob: -5.626551151275635
    10. ' input' → logprob: -6.376551151275635

Token 198: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0038074308540672064
    2. ' def' → logprob: -5.628807544708252
    3. '
' → logprob: -8.503807067871094
    4. 'de' → logprob: -13.628807067871094
    5. '```' → logprob: -13.878807067871094
    6. 'import' → logprob: -13.878807067871094
    7. ':def' → logprob: -14.878807067871094
    8. ' déf' → logprob: -15.253807067871094
    9. 'ndef' → logprob: -15.378807067871094
    10. ' to' → logprob: -16.378807067871094

Token 199: ' b' (ID: 287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04072121903300285
    2. '
' → logprob: -3.5407211780548096
    3. 'import' → logprob: -4.540721416473389
    4. ' def' → logprob: -8.66572093963623
    5. '```' → logprob: -10.16572093963623
    6. 'from' → logprob: -11.41572093963623
    7. '
' → logprob: -12.04072093963623
    8. '

' → logprob: -12.16572093963623
    9. 'ndef' → logprob: -13.16572093963623
    10. ' 
' → logprob: -13.29072093963623

Token 200: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.003922856878489256
    2. 'in' → logprob: -5.628922939300537
    3. 'inary' → logprob: -8.378922462463379
    4. 'is' → logprob: -9.378922462463379
    5. 'ina' → logprob: -13.128922462463379
    6. 'iné' → logprob: -13.628922462463379
    7. '#' → logprob: -13.628922462463379
    8. 'orn' → logprob: -13.753922462463379
    9. 'inar' → logprob: -13.753922462463379
    10. 'ine' → logprob: -14.628922462463379

Token 201: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010557949542999268
    2. '
' → logprob: -4.635558128356934
    3. ' def' → logprob: -7.760558128356934
    4. '(
' → logprob: -8.260558128356934
    5. '(' → logprob: -9.760558128356934
    6. ' 
' → logprob: -11.260558128356934
    7. '(def' → logprob: -11.260558128356934
    8. 'de' → logprob: -11.385558128356934
    9. ':def' → logprob: -11.510558128356934
    10. ':' → logprob: -12.885558128356934

Token 202: ' trouver' (ID: 23195)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -1.161311149597168
    2. ' trouver' → logprob: -1.661311149597168
    3. ' vérifier' → logprob: -1.786311149597168
    4. ' rechercher' → logprob: -2.536311149597168
    5. 'v' → logprob: -2.661311149597168
    6. 're' → logprob: -2.661311149597168
    7. 'def' → logprob: -2.911311149597168
    8. ' chercher' → logprob: -3.786311149597168
    9. 'tr' → logprob: -4.286311149597168
    10. ' la' → logprob: -6.036311149597168

Token 203: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3221285939216614
    2. 'la' → logprob: -2.3221285343170166
    3. 'l' → logprob: -3.0721285343170166
    4. 'def' → logprob: -3.3221285343170166
    5. ' la' → logprob: -3.5721285343170166
    6. ' le' → logprob: -3.9471285343170166
    7. ' un' → logprob: -4.322128772735596
    8. 'un' → logprob: -4.697128772735596
    9. ' l' → logprob: -5.072128772735596
    10. 'if' → logprob: -5.947128772735596

Token 204: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1766497939825058
    2. 'indice' → logprob: -2.676649808883667
    3. 'index' → logprob: -3.551649808883667
    4. 'pro' → logprob: -4.426649570465088
    5. 'nombre' → logprob: -4.551649570465088
    6. ' plus' → logprob: -4.801649570465088
    7. 'prem' → logprob: -5.051649570465088
    8. 'import' → logprob: -5.801649570465088
    9. 'élé' → logprob: -6.051649570465088
    10. ' index' → logprob: -6.051649570465088

Token 205: ' grand' (ID: 6363)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.20136559009552002
    2. 'grand' → logprob: -1.82636559009552
    3. 'pet' → logprob: -4.4513654708862305
    4. 'prox' → logprob: -5.3263654708862305
    5. '```' → logprob: -6.5763654708862305
    6. ' proche' → logprob: -6.7013654708862305
    7. 'gr' → logprob: -7.2013654708862305
    8. 'près' → logprob: -8.32636547088623
    9. 'large' → logprob: -8.57636547088623
    10. '_pro' → logprob: -8.82636547088623

Token 206: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.42358633875846863
    2. 'element' → logprob: -1.923586368560791
    3. 'nombre' → logprob: -2.798586368560791
    4. 'val' → logprob: -3.423586368560791
    5. ' élément' → logprob: -3.548586368560791
    6. 'def' → logprob: -4.298586368560791
    7. 'value' → logprob: -4.298586368560791
    8. 'num' → logprob: -4.548586368560791
    9. 'number' → logprob: -4.548586368560791
    10. 'index' → logprob: -5.298586368560791

Token 207: ' <=' (ID: 5017)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4043121337890625
    2. '<=' → logprob: -2.0293121337890625
    3. ' <=' → logprob: -2.4043121337890625
    4. ' inférieur' → logprob: -3.4043121337890625
    5. 'possible' → logprob: -4.0293121337890625
    6. 'qui' → logprob: -4.5293121337890625
    7. ' def' → logprob: -4.5293121337890625
    8. '_possible' → logprob: -4.6543121337890625
    9. '```' → logprob: -5.4043121337890625
    10. ' possible' → logprob: -6.1543121337890625

Token 208: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12247820943593979
    2. ' x' → logprob: -2.8724782466888428
    3. 'target' → logprob: -2.9974782466888428
    4. ' target' → logprob: -5.497478008270264
    5. 'val' → logprob: -6.372478008270264
    6. 'def' → logprob: -6.747478008270264
    7. 'value' → logprob: -6.997478008270264
    8. 'n' → logprob: -8.372478485107422
    9. 'query' → logprob: -9.372478485107422
    10. 'k' → logprob: -9.747478485107422

Token 209: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007729776669293642
    2. '
' → logprob: -5.257730007171631
    3. ' def' → logprob: -6.007730007171631
    4. '(def' → logprob: -11.757729530334473
    5. ':def' → logprob: -11.882729530334473
    6. '(' → logprob: -11.882729530334473
    7. '(
' → logprob: -12.632729530334473
    8. '```' → logprob: -12.882729530334473
    9. 'de' → logprob: -13.757729530334473
    10. ':' → logprob: -13.757729530334473

Token 210: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044592362246476114
    2. '
' → logprob: -7.75044584274292
    3. ' def' → logprob: -11.125446319580078
    4. 'de' → logprob: -14.750446319580078
    5. 'd' → logprob: -17.500446319580078
    6. 'ndef' → logprob: -18.000446319580078
    7. ' 
' → logprob: -18.375446319580078
    8. ':def' → logprob: -18.500446319580078
    9. '```' → logprob: -18.500446319580078
    10. '	def' → logprob: -19.125446319580078

Token 211: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.38812655210494995
    2. 'binary' → logprob: -1.1381266117095947
    3. ' find' → logprob: -6.888126373291016
    4. 'find' → logprob: -9.013126373291016
    5. ' bis' → logprob: -9.888126373291016
    6. 'Binary' → logprob: -10.888126373291016
    7. 'bis' → logprob: -10.888126373291016
    8. '(binary' → logprob: -11.763126373291016
    9. '_binary' → logprob: -11.888126373291016
    10. 'search' → logprob: -12.638126373291016

Token 212: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -5.7053759519476444e-05
    2. '_' → logprob: -10.375057220458984
    3. '_find' → logprob: -10.875057220458984
    4. '_re' → logprob: -12.875057220458984
    5. 'search' → logprob: -12.875057220458984
    6. ' _' → logprob: -14.250057220458984
    7. '\' → logprob: -15.625057220458984
    8. '_query' → logprob: -16.250057220458984
    9. '_threshold' → logprob: -16.500057220458984
    10. '_function' → logprob: -16.625057220458984

Token 213: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.14181296527385712
    2. '(arr' → logprob: -2.391813039779663
    3. '(sorted' → logprob: -3.391813039779663
    4. ' (' → logprob: -5.516812801361084
    5. '(' → logprob: -6.516812801361084
    6. '(lst' → logprob: -7.141812801361084
    7. '(nums' → logprob: -8.016813278198242
    8. '(value' → logprob: -8.266813278198242
    9. '(array' → logprob: -9.016813278198242
    10. '(vals' → logprob: -10.141813278198242

Token 214: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001848254178185016
    2. ' ,' → logprob: -9.375185012817383
    3. '):' → logprob: -9.625185012817383
    4. ',val' → logprob: -11.375185012817383
    5. ',n' → logprob: -12.375185012817383
    6. ',num' → logprob: -12.500185012817383
    7. ',target' → logprob: -12.875185012817383
    8. '   ' → logprob: -13.125185012817383
    9. ',key' → logprob: -13.625185012817383
    10. ',size' → logprob: -13.875185012817383

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046749215107411146
    2. ' low' → logprob: -8.125467300415039
    3. ' left' → logprob: -8.875467300415039
    4. 'left' → logprob: -10.875467300415039
    5. 'low' → logprob: -12.375467300415039
    6. ' l' → logprob: -13.125467300415039
    7. ' lo' → logprob: -13.500467300415039
    8. '```' → logprob: -13.625467300415039
    9. '(low' → logprob: -14.000467300415039
    10. ',' → logprob: -14.000467300415039

Token 216: ' low' (ID: 4465)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.36192095279693604
    2. 'left' → logprob: -1.861920952796936
    3. ' low' → logprob: -2.6119208335876465
    4. '   ' → logprob: -2.8619208335876465
    5. 'low' (adapté à ' low') → logprob: -4.3619208335876465
    6. ' lo' → logprob: -5.4869208335876465
    7. 'lo' → logprob: -7.7369208335876465
    8. 'l' → logprob: -8.236921310424805
    9. ' l' → logprob: -8.986921310424805
    10. ' lef' → logprob: -11.861921310424805

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022102581337094307
    2. '=' → logprob: -4.272102355957031
    3. ' =' → logprob: -5.272102355957031
    4. ' ,' → logprob: -5.897102355957031
    5. '   ' → logprob: -11.522102355957031
    6. ',
' → logprob: -11.772102355957031
    7. ' ' → logprob: -13.147102355957031
    8. ',b' → logprob: -13.397102355957031
    9. ',n' → logprob: -14.147102355957031
    10. ',int' → logprob: -14.147102355957031

Token 218: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0380416102707386
    2. ' high' → logprob: -3.288041591644287
    3. 'High' → logprob: -16.538042068481445
    4. 'hi' → logprob: -16.663042068481445
    5. '0' → logprob: -18.538042068481445
    6. ' ' → logprob: -18.788042068481445
    7. '_high' → logprob: -19.038042068481445
    8. '(high' → logprob: -20.163042068481445
    9. '.high' → logprob: -20.288042068481445
    10. 'HIGH' → logprob: -21.163042068481445

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975963056087494
    2. '=' → logprob: -3.529759645462036
    3. ',' → logprob: -12.154759407043457
    4. ' ' → logprob: -12.529759407043457
    5. ' ,' → logprob: -15.404759407043457
    6. '   ' → logprob: -17.654760360717773
    7. '    ' → logprob: -17.654760360717773
    8. ')' → logprob: -18.529760360717773
    9. '  ' → logprob: -18.654760360717773
    10. '0' → logprob: -18.904760360717773

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692883610725403
    2. ' ' → logprob: -2.1269288063049316
    3. 'len' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.25192928314209
    5. '  ' → logprob: -16.126928329467773
    6. ' len' → logprob: -16.126928329467773
    7. ' ' → logprob: -16.376928329467773
    8. '
' → logprob: -17.751928329467773
    9. ',' → logprob: -18.751928329467773
    10. '۰' → logprob: -18.876928329467773

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.625028610229492
    3. 'len' → logprob: -12.375028610229492
    4. '   ' → logprob: -18.375028610229492
    5. '[' → logprob: -19.625028610229492
    6. '00' → logprob: -19.875028610229492
    7. '(' → logprob: -19.875028610229492
    8. '۰' → logprob: -19.875028610229492
    9. '(len' → logprob: -19.875028610229492
    10. '
' → logprob: -20.062528610229492

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009877925040200353
    2. ',
' → logprob: -7.250988006591797
    3. ' ,' → logprob: -8.750988006591797
    4. ',len' → logprob: -9.375988006591797
    5. '   ' → logprob: -10.375988006591797
    6. '
' → logprob: -13.375988006591797
    7. ',\
' → logprob: -14.750988006591797
    8. ',length' → logprob: -15.000988006591797
    9. ',b' → logprob: -15.750988006591797
    10. ',n' → logprob: -15.750988006591797

Token 223: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006715370807796717
    2. ' len' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.881715774536133
    4. '(len' → logprob: -17.256715774536133
    5. '[len' → logprob: -19.006715774536133
    6. '=len' → logprob: -20.006715774536133
    7. '	len' → logprob: -20.131715774536133
    8. ' ' → logprob: -21.256715774536133
    9. '<len' → logprob: -22.631715774536133
    10. ',len' → logprob: -22.756715774536133

Token 224: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -9.014684110297821e-06
    2. 'sorted' → logprob: -11.750008583068848
    3. '(' → logprob: -14.250008583068848
    4. ' sorted' → logprob: -14.750008583068848
    5. '_sorted' → logprob: -18.250009536743164
    6. '(s' → logprob: -18.500009536743164
    7. '(
' → logprob: -19.625009536743164
    8. 'Sorted' → logprob: -19.750009536743164
    9. ' (' → logprob: -19.875009536743164
    10. '(sort' → logprob: -20.625009536743164

Token 225: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.011072699911892414
    2. '_sorted' → logprob: -4.511072635650635
    3. 'sorted' → logprob: -11.386073112487793
    4. '(sorted' → logprob: -11.886073112487793
    5. ')_' → logprob: -12.761073112487793
    6. 's' → logprob: -13.886073112487793
    7. ')' → logprob: -14.011073112487793
    8. '_' → logprob: -14.761073112487793
    9. ' _' → logprob: -15.261073112487793
    10. '(_' → logprob: -15.511073112487793

Token 226: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.016575491055846214
    2. '_s' → logprob: -4.141575336456299
    3. 's' → logprob: -7.641575336456299
    4. '_' → logprob: -10.016575813293457
    5. 'orted' → logprob: -12.266575813293457
    6. '_sorted' → logprob: -12.516575813293457
    7. 'uns' → logprob: -13.141575813293457
    8. 'sorted' → logprob: -13.766575813293457
    9. 'um' → logprob: -13.891575813293457
    10. ')' → logprob: -14.391575813293457

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002532141050323844
    2. ')-' → logprob: -6.002532005310059
    3. ' )' → logprob: -9.877532005310059
    4. ' -' → logprob: -12.877532005310059
    5. '-' → logprob: -13.002532005310059
    6. '-)' → logprob: -15.377532005310059
    7. '[' → logprob: -17.502532958984375
    8. '```' → logprob: -18.002532958984375
    9. '   ' → logprob: -18.127532958984375
    10. ' ' → logprob: -18.377532958984375

Token 228: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931677460670471
    2. ' -' → logprob: -0.6931677460670471
    3. '<|end|>' → logprob: -10.943167686462402
    4. ' ' → logprob: -13.068167686462402
    5. ')' → logprob: -15.443167686462402
    6. '   ' → logprob: -16.06816864013672
    7. '```' → logprob: -16.31816864013672
    8. '<|end|>' → logprob: -16.31816864013672
    9. '–' → logprob: -16.94316864013672
    10. '
' → logprob: -17.06816864013672

Token 229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '```' → logprob: -17.62509536743164
    5. '  ' → logprob: -20.00009536743164
    6. '
' → logprob: -20.00009536743164
    7. '<|end|>' → logprob: -20.25009536743164
    8. '`' → logprob: -21.25009536743164
    9. '0' → logprob: -21.75009536743164
    10. '2' → logprob: -21.87509536743164

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.500003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '
' → logprob: -18.500003814697266
    6. 'def' → logprob: -19.750003814697266
    7. 'import' → logprob: -19.875003814697266
    8. '  ' → logprob: -20.500003814697266
    9. '2' → logprob: -20.500003814697266
    10. 'from' → logprob: -20.875003814697266

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06832646578550339
    2. '
' → logprob: -3.318326473236084
    3. '<|end|>' → logprob: -3.943326473236084
    4. '    
' → logprob: -4.818326473236084
    5. '<|end|>' → logprob: -6.943326473236084
    6. ',' → logprob: -7.693326473236084
    7. '  
' → logprob: -8.193325996398926
    8. '```' → logprob: -8.943325996398926
    9. ')' → logprob: -9.318325996398926
    10. ' while' → logprob: -9.818325996398926

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032244143076241016
    2. '    
' → logprob: -6.1282243728637695
    3. '<|end|>' → logprob: -7.3782243728637695
    4. '
' → logprob: -9.25322437286377
    5. ' while' → logprob: -9.25322437286377
    6. '```' → logprob: -10.12822437286377
    7. ',' → logprob: -10.25322437286377
    8. '	while' → logprob: -10.25322437286377
    9. ':' → logprob: -10.62822437286377
    10. '<|end|>' → logprob: -11.37822437286377

Token 233: ' res' (ID: 694)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5453459024429321
    2. '   ' → logprob: -1.1703459024429321
    3. 'while' → logprob: -2.4203457832336426
    4. '
' → logprob: -4.420345783233643
    5. '    
' → logprob: -5.795345783233643
    6. ' 
' → logprob: -6.045345783233643
    7. ' ' → logprob: -6.545345783233643
    8. '  
' → logprob: -7.045345783233643
    9. '	while' → logprob: -7.670345783233643
    10. '   
' → logprob: -8.4203462600708

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875984847545624
    2. '=' → logprob: -1.1375985145568848
    3. ' ' → logprob: -7.262598514556885
    4. '  ' → logprob: -11.137598037719727
    5. ',' → logprob: -11.762598037719727
    6. '   ' → logprob: -13.637598037719727
    7. '_' → logprob: -14.637598037719727
    8. ':' → logprob: -14.887598037719727
    9. ' =
' → logprob: -15.012598037719727
    10. '=None' → logprob: -15.137598037719727

Token 235: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005570820067077875
    2. ' -' → logprob: -7.500556945800781
    3. 'None' → logprob: -12.500556945800781
    4. '0' → logprob: -15.500556945800781
    5. ' None' → logprob: -15.625556945800781
    6. '-none' → logprob: -17.62555694580078
    7. '-s' → logprob: -18.12555694580078
    8. ' ' → logprob: -18.87555694580078
    9. '-l' → logprob: -19.12555694580078
    10. '-n' → logprob: -19.25055694580078

Token 236: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7835754988482222e-05
    2. ' -' → logprob: -11.625018119812012
    3. 'None' → logprob: -11.750018119812012
    4. '0' → logprob: -14.000018119812012
    5. '-s' → logprob: -16.625017166137695
    6. '-none' → logprob: -18.000017166137695
    7. '   ' → logprob: -19.000017166137695
    8. ' None' → logprob: -19.125017166137695
    9. '-n' → logprob: -19.375017166137695
    10. '-l' → logprob: -19.625017166137695

Token 237: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.537611722946167
    2. '   ' → logprob: -1.037611722946167
    3. '    
' → logprob: -3.412611722946167
    4. ' 
' → logprob: -4.037611961364746
    5. '  
' → logprob: -5.412611961364746
    6. '   
' → logprob: -6.287611961364746
    7. '<|end|>' → logprob: -6.662611961364746
    8. ' while' → logprob: -7.287611961364746
    9. '' → logprob: -7.287611961364746
    10. ':' → logprob: -7.787611961364746

Token 238: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3887976109981537
    2. '   ' → logprob: -1.513797640800476
    3. '    
' → logprob: -3.1387975215911865
    4. ' 
' → logprob: -3.5137975215911865
    5. '  
' → logprob: -4.138797760009766
    6. ' while' → logprob: -4.888797760009766
    7. '<|end|>' → logprob: -6.138797760009766
    8. '   
' → logprob: -6.513797760009766
    9. '	
' → logprob: -7.763797760009766
    10. 'while' → logprob: -8.013797760009766

Token 239: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.34909704327583313
    2. 'while' (adapté à ' while') → logprob: -1.3490970134735107
    3. '   ' → logprob: -3.3490970134735107
    4. '
' → logprob: -10.47409725189209
    5. '	while' → logprob: -10.72409725189209
    6. '    
' → logprob: -10.72409725189209
    7. ' 
' → logprob: -11.97409725189209
    8. '```' → logprob: -12.84909725189209
    9. ' ' → logprob: -13.84909725189209
    10. '  
' → logprob: -14.34909725189209

Token 240: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.16022534668445587
    2. ' low' → logprob: -1.9102253913879395
    3. '(low' → logprob: -13.785224914550781
    4. ' ' → logprob: -17.91022491455078
    5. 'Low' → logprob: -18.41022491455078
    6. '   ' → logprob: -18.53522491455078
    7. ' ' → logprob: -18.78522491455078
    8. '低' → logprob: -18.91022491455078
    9. 'lo' → logprob: -19.91022491455078
    10. '0' → logprob: -20.28522491455078

Token 241: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25193241238594055
    2. ' <=' → logprob: -1.5019323825836182
    3. '<' → logprob: -13.376932144165039
    4. ']<=' → logprob: -14.126932144165039
    5. ')<=' → logprob: -14.626932144165039
    6. 'le' → logprob: -15.751932144165039
    7. '```' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.62693214416504
    9. '=' → logprob: -16.62693214416504
    10. '≤' → logprob: -16.75193214416504

Token 242: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.001502717612311244
    2. ' high' → logprob: -6.501502513885498
    3. '(high' → logprob: -14.876502990722656
    4. ' ' → logprob: -17.251502990722656
    5. 'High' → logprob: -17.876502990722656
    6. '.high' → logprob: -18.251502990722656
    7. '_high' → logprob: -18.376502990722656
    8. '/high' → logprob: -19.001502990722656
    9. '高' → logprob: -20.001502990722656
    10. '
' → logprob: -20.251502990722656

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020589418709278107
    2. ':
' → logprob: -3.8955893516540527
    3. ',' → logprob: -11.145589828491211
    4. '   ' → logprob: -11.395589828491211
    5. ' :' → logprob: -11.520589828491211
    6. ':

' → logprob: -12.770589828491211
    7. '       ' → logprob: -12.770589828491211
    8. '):
' → logprob: -13.270589828491211
    9. ' :
' → logprob: -13.520589828491211
    10. '):' → logprob: -14.020589828491211

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0738937258720398
    2. ' mid' → logprob: -2.6988937854766846
    3. 'mid' → logprob: -6.1988935470581055
    4. '   ' → logprob: -6.9488935470581055
    5. ' middle' → logprob: -7.6988935470581055
    6. ' midpoint' → logprob: -8.823893547058105
    7. '[mid' → logprob: -9.073893547058105
    8. '    ' → logprob: -9.948893547058105
    9. '	   ' → logprob: -10.198893547058105
    10. ' m' → logprob: -10.448893547058105

Token 245: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.04748902842402458
    2. 'mid' (adapté à ' mid') → logprob: -3.2974889278411865
    3. '   ' → logprob: -4.672489166259766
    4. ' m' → logprob: -10.547489166259766
    5. 'm' → logprob: -11.297489166259766
    6. ' midpoint' → logprob: -11.672489166259766
    7. '       ' → logprob: -12.797489166259766
    8. ' middle' → logprob: -13.547489166259766
    9. '[mid' → logprob: -14.172489166259766
    10. '	m' → logprob: -14.922489166259766

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038576699793338776
    2. '=' → logprob: -3.288576602935791
    3. '<|end|>' → logprob: -7.788576602935791
    4. ' ' → logprob: -9.28857707977295
    5. ')' → logprob: -11.28857707977295
    6. '<|end|>' → logprob: -12.28857707977295
    7. ',' → logprob: -12.78857707977295
    8. '    ' → logprob: -13.91357707977295
    9. '```' → logprob: -13.91357707977295
    10. '=int' → logprob: -14.03857707977295

Token 247: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.5759598016738892
    2. ' (' → logprob: -0.8259598016738892
    3. ' low' → logprob: -11.075960159301758
    4. 'low' → logprob: -13.575960159301758
    5. '(' → logprob: -13.700960159301758
    6. ' ' → logprob: -13.825960159301758
    7. '(high' → logprob: -14.450960159301758
    8. '(lower' → logprob: -15.075960159301758
    9. '   ' → logprob: -15.200960159301758
    10. '(l' → logprob: -15.450960159301758

Token 248: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0001234428636962548
    2. ' low' → logprob: -9.000123023986816
    3. '(low' → logprob: -18.250123977661133
    4. 'high' → logprob: -21.500123977661133
    5. ' ' → logprob: -23.125123977661133
    6. '
' → logprob: -23.125123977661133
    7. '.low' → logprob: -23.500123977661133
    8. '_low' → logprob: -23.500123977661133
    9. '低' → logprob: -23.750123977661133
    10. '   ' → logprob: -23.875123977661133

Token 249: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868711292743683
    2. '+' → logprob: -1.136871099472046
    3. ')' → logprob: -16.886871337890625
    4. ' ' → logprob: -17.886871337890625
    5. ' ' → logprob: -18.386871337890625
    6. ' +
' → logprob: -18.886871337890625
    7. '```' → logprob: -19.011871337890625
    8. '+
' → logprob: -19.511871337890625
    9. '＋' → logprob: -19.511871337890625
    10. '   ' → logprob: -19.761871337890625

Token 250: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0001584850688232109
    2. ' high' → logprob: -8.750158309936523
    3. '(high' → logprob: -17.250158309936523
    4. '   ' → logprob: -19.625158309936523
    5. '
' → logprob: -20.250158309936523
    6. '高' → logprob: -20.375158309936523
    7. '.high' → logprob: -20.750158309936523
    8. ' ' → logprob: -21.125158309936523
    9. 'High' → logprob: -21.875158309936523
    10. '/high' → logprob: -22.250158309936523

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007118358626030385
    2. ')//' → logprob: -7.250711917877197
    3. ' )' → logprob: -13.250711441040039
    4. ')>>' → logprob: -16.25071144104004
    5. ')
' → logprob: -18.75071144104004
    6. '）' → logprob: -20.00071144104004
    7. ')#' → logprob: -20.50071144104004
    8. ']' → logprob: -20.75071144104004
    9. '//' → logprob: -21.00071144104004
    10. ' //' → logprob: -21.62571144104004

Token 252: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005730282980948687
    2. ' //' → logprob: -5.755730152130127
    3. ')//' → logprob: -6.630730152130127
    4. '//' → logprob: -6.755730152130127
    5. ']' → logprob: -10.630730628967285
    6. ' )' → logprob: -10.755730628967285
    7. '```' → logprob: -11.880730628967285
    8. '>>' → logprob: -12.630730628967285
    9. ' ' → logprob: -13.255730628967285
    10. ')>>' → logprob: -13.255730628967285

Token 253: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.12520408630371
    4. '```' → logprob: -18.37520408630371
    5. '۲' → logprob: -18.37520408630371
    6. '２' → logprob: -19.12520408630371
    7. '  ' → logprob: -19.50020408630371
    8. '٢' → logprob: -20.31270408630371
    9. '
' → logprob: -20.43770408630371
    10. '२' → logprob: -20.50020408630371

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.375001907348633
    4. '۲' → logprob: -19.375001907348633
    5. '```' → logprob: -19.625001907348633
    6. '２' → logprob: -19.875001907348633
    7. '२' → logprob: -21.000001907348633
    8. '
' → logprob: -21.250001907348633
    9. '٢' → logprob: -21.500001907348633
    10. '22' → logprob: -21.750001907348633

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023609159514307976
    2. '
' → logprob: -4.398609161376953
    3. ')' → logprob: -5.648609161376953
    4. '<|end|>' → logprob: -5.648609161376953
    5. '   ' → logprob: -6.398609161376953
    6. '        
' → logprob: -7.773609161376953
    7. ' if' → logprob: -7.898609161376953
    8. ')
' → logprob: -8.023609161376953
    9. ' 
' → logprob: -8.398609161376953
    10. '  
' → logprob: -8.523609161376953

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039289999403990805
    2. '
' → logprob: -8.87539291381836
    3. 'if' → logprob: -9.62539291381836
    4. '<|end|>' → logprob: -10.00039291381836
    5. ' if' → logprob: -10.25039291381836
    6. '   ' → logprob: -10.50039291381836
    7. '        
' → logprob: -10.50039291381836
    8. ')' → logprob: -10.75039291381836
    9. '	' → logprob: -12.25039291381836
    10. '           ' → logprob: -12.37539291381836

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0062218173407018185
    2. '       ' → logprob: -5.256221771240234
    3. ' if' → logprob: -7.006221771240234
    4. 'mid' → logprob: -9.506221771240234
    5. '	if' → logprob: -12.506221771240234
    6. 'val' → logprob: -14.381221771240234
    7. '   ' → logprob: -14.381221771240234
    8. '
' → logprob: -14.506221771240234
    9. '        
' → logprob: -15.256221771240234
    10. 'v' → logprob: -15.381221771240234

Token 258: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.014164329506456852
    2. ' sorted' → logprob: -4.264164447784424
    3. '(sorted' → logprob: -14.764163970947266
    4. '   ' → logprob: -15.014163970947266
    5. '.sorted' → logprob: -16.764163970947266
    6. '_sorted' → logprob: -16.889163970947266
    7. ' ' → logprob: -18.764163970947266
    8. '       ' → logprob: -19.264163970947266
    9. ' ' → logprob: -20.139163970947266
    10. 'Sorted' → logprob: -20.389163970947266

Token 259: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: 0.0
    2. 's' → logprob: -16.875
    3. '_' → logprob: -18.375
    4. '_val' → logprob: -20.0
    5. '_sum' → logprob: -21.0
    6. '_vals' → logprob: -21.0
    7. 'val' → logprob: -21.375
    8. ' _' → logprob: -21.75
    9. '_m' → logprob: -22.125
    10. '[' → logprob: -22.375

Token 260: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0899115800857544
    2. '_s' → logprob: -2.464911460876465
    3. '_' → logprob: -7.339911460876465
    4. 's' → logprob: -8.089911460876465
    5. '_vals' → logprob: -12.589911460876465
    6. '[' → logprob: -12.839911460876465
    7. '_u' → logprob: -13.089911460876465
    8. '_nums' → logprob: -13.589911460876465
    9. '_ids' → logprob: -13.964911460876465
    10. 'uns' → logprob: -14.214911460876465

Token 261: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.0
    4. '[m' → logprob: -16.75
    5. '[mem' → logprob: -17.75
    6. 'mid' → logprob: -17.875
    7. '[
' → logprob: -18.125
    8. '
' → logprob: -19.625
    9. '(mid' → logprob: -20.125
    10. '[max' → logprob: -20.625

Token 262: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31579914689064026
    2. ' <=' → logprob: -1.3157991170883179
    3. ']<=' → logprob: -6.815799236297607
    4. ']' → logprob: -6.940799236297607
    5. '==' → logprob: -8.31579875946045
    6. ')<=' → logprob: -9.19079875946045
    7. ')' → logprob: -9.69079875946045
    8. ' ==' → logprob: -10.06579875946045
    9. '[' → logprob: -11.81579875946045
    10. ']==' → logprob: -12.81579875946045

Token 263: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07897483557462692
    2. ' <=' → logprob: -2.578974723815918
    3. '==' → logprob: -9.453974723815918
    4. ' ==' → logprob: -12.828974723815918
    5. ')<=' → logprob: -13.328974723815918
    6. ']<=' → logprob: -13.453974723815918
    7. '=' → logprob: -15.078974723815918
    8. 'le' → logprob: -15.453974723815918
    9. ' ' → logprob: -15.953974723815918
    10. '[' → logprob: -16.078975677490234

Token 264: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2519291639328003
    2. ' val' → logprob: -1.5019291639328003
    3. '	val' → logprob: -16.001928329467773
    4. '[val' → logprob: -19.126928329467773
    5. '(val' → logprob: -20.126928329467773
    6. '_val' → logprob: -20.251928329467773
    7. ',val' → logprob: -20.501928329467773
    8. '.val' → logprob: -21.001928329467773
    9. 'v' → logprob: -21.376928329467773
    10. '   ' → logprob: -21.876928329467773

Token 265: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12707887589931488
    2. ':' → logprob: -2.1270787715911865
    3. '):
' → logprob: -10.002079010009766
    4. '       ' → logprob: -10.002079010009766
    5. ' :
' → logprob: -10.127079010009766
    6. '           ' → logprob: -11.627079010009766
    7. ':
' → logprob: -12.002079010009766
    8. ':

' → logprob: -13.377079010009766
    9. ' :' → logprob: -13.627079010009766
    10. '):' → logprob: -14.502079010009766

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003443499794229865
    2. ':
' → logprob: -6.253443717956543
    3. 'res' → logprob: -7.503443717956543
    4. '       ' → logprob: -7.753443717956543
    5. ':' → logprob: -8.253443717956543
    6. '
' → logprob: -9.378443717956543
    7. ' :
' → logprob: -9.628443717956543
    8. ' res' → logprob: -10.003443717956543
    9. ' :' → logprob: -10.628443717956543
    10. '               ' → logprob: -11.378443717956543

Token 267: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.47447946667671204
    2. 'res' (adapté à ' res') → logprob: -0.9744794368743896
    3. '           ' → logprob: -8.474479675292969
    4. '               ' → logprob: -8.849479675292969
    5. '
' → logprob: -9.974479675292969
    6. '	res' → logprob: -13.224479675292969
    7. ',res' → logprob: -14.599479675292969
    8. '       ' → logprob: -14.974479675292969
    9. '.res' → logprob: -15.474479675292969
    10. '   ' → logprob: -15.599479675292969

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047935113310814
    2. '=' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.88604736328125
    4. 's' → logprob: -17.38604736328125
    5. '=res' → logprob: -17.76104736328125
    6. ',' → logprob: -18.01104736328125
    7. ' =
' → logprob: -19.38604736328125
    8. '＝' → logprob: -20.13604736328125
    9. '=s' → logprob: -20.38604736328125
    10. '[' → logprob: -20.76104736328125

Token 269: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5759844779968262
    2. 'sorted' → logprob: -0.8259844779968262
    3. 'mid' → logprob: -10.450984954833984
    4. ' mid' → logprob: -11.075984954833984
    5. '(sorted' → logprob: -14.950984954833984
    6. '   ' → logprob: -15.450984954833984
    7. '.sorted' → logprob: -17.075984954833984
    8. '
' → logprob: -17.575984954833984
    9. '_sorted' → logprob: -17.700984954833984
    10. '           ' → logprob: -18.325984954833984

Token 270: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.2020991056924686e-05
    2. 's' → logprob: -10.375032424926758
    3. 'mid' → logprob: -14.875032424926758
    4. 'token' → logprob: -16.000032424926758
    5. '_' → logprob: -16.625032424926758
    6. ')' → logprob: -17.375032424926758
    7. '_tokens' → logprob: -17.625032424926758
    8. '[mid' → logprob: -17.875032424926758
    9. '\' → logprob: -18.125032424926758
    10. 'с' → logprob: -18.312532424926758

Token 271: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -1.9862216504407115e-05
    2. 's' → logprob: -11.125020027160645
    3. 'um' → logprob: -13.000020027160645
    4. 'mid' → logprob: -14.000020027160645
    5. 'ms' → logprob: -14.375020027160645
    6. '[mid' → logprob: -14.500020027160645
    7. '[' → logprob: -15.250020027160645
    8. 'ams' → logprob: -16.000019073486328
    9. 'm' → logprob: -16.500019073486328
    10. 'ims' → logprob: -16.750019073486328

Token 272: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -1.9623810658231378e-05
    2. 'mid' → logprob: -11.750020027160645
    3. '
' → logprob: -12.250020027160645
    4. '[' → logprob: -12.500020027160645
    5. '[
' → logprob: -13.500020027160645
    6. ' [' → logprob: -14.500020027160645
    7. '[mem' → logprob: -14.625020027160645
    8. '[m' → logprob: -15.500020027160645
    9. '(mid' → logprob: -16.125019073486328
    10. '   ' → logprob: -16.750019073486328

Token 273: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8808937668800354
    2. '           ' → logprob: -1.0058937072753906
    3. ')
' → logprob: -1.7558937072753906
    4. '
' → logprob: -3.7558937072753906
    5. ',' → logprob: -5.005893707275391
    6. '       ' → logprob: -5.505893707275391
    7. ']' → logprob: -5.630893707275391
    8. '            
' → logprob: -5.630893707275391
    9. '               ' → logprob: -6.380893707275391
    10. '   ' → logprob: -7.380893707275391

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004713141825050116
    2. '
' → logprob: -5.37971305847168
    3. '            
' → logprob: -9.37971305847168
    4. ' 
' → logprob: -13.62971305847168
    5. ',' → logprob: -13.75471305847168
    6. 'low' → logprob: -14.00471305847168
    7. '    
' → logprob: -14.12971305847168
    8. ' low' → logprob: -14.37971305847168
    9. '                   ' → logprob: -14.50471305847168
    10. '               ' → logprob: -14.62971305847168

Token 275: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.04859236627817154
    2. ' low' → logprob: -3.0485923290252686
    3. '           ' → logprob: -12.423592567443848
    4. '
' → logprob: -14.798592567443848
    5. '.low' → logprob: -15.673592567443848
    6. '   ' → logprob: -15.923592567443848
    7. 'Low' → logprob: -16.17359161376953
    8. '(low' → logprob: -16.29859161376953
    9. '_low' → logprob: -16.42359161376953
    10. '低' → logprob: -17.42359161376953

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '＝' → logprob: -19.693147659301758
    4. ' +=' → logprob: -20.318147659301758
    5. '[mid' → logprob: -20.318147659301758
    6. '=
' → logprob: -20.318147659301758
    7. ' =
' → logprob: -20.693147659301758
    8. '+=' → logprob: -20.693147659301758
    9. 'mid' → logprob: -20.943147659301758
    10. ' ' → logprob: -21.568147659301758

Token 277: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.1602245420217514
    2. ' mid' → logprob: -1.9102245569229126
    3. '(mid' → logprob: -15.410224914550781
    4. '[mid' → logprob: -15.535224914550781
    5. '_mid' → logprob: -17.53522491455078
    6. '   ' → logprob: -19.28522491455078
    7. ' ' → logprob: -19.41022491455078
    8. '.mid' → logprob: -20.03522491455078
    9. '
' → logprob: -20.16022491455078
    10. 'm' → logprob: -20.28522491455078

Token 278: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20300373435020447
    2. ' +' → logprob: -1.7030037641525269
    3. 'mid' → logprob: -6.703003883361816
    4. ' mid' → logprob: -8.328003883361816
    5. '[mid' → logprob: -9.203003883361816
    6. '(mid' → logprob: -11.703003883361816
    7. ' ' → logprob: -11.828003883361816
    8. ' plus' → logprob: -13.203003883361816
    9. '_mid' → logprob: -13.328003883361816
    10. ' midpoint' → logprob: -16.0780029296875

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -18.500335693359375
    4. '   ' → logprob: -19.750335693359375
    5. '0' → logprob: -22.125335693359375
    6. '[' → logprob: -22.250335693359375
    7. '
' → logprob: -22.750335693359375
    8. '  ' → logprob: -22.875335693359375
    9. '``' → logprob: -23.375335693359375
    10. '<|end|>' → logprob: -23.375335693359375

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -19.875011444091797
    4. '   ' → logprob: -20.375011444091797
    5. '  ' → logprob: -22.500011444091797
    6. '
' → logprob: -22.625011444091797
    7. '0' → logprob: -23.187511444091797
    8. ' ' → logprob: -23.187511444091797
    9. '１' → logprob: -23.312511444091797
    10. '``' → logprob: -23.562511444091797

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039015832589939237
    2. ' else' → logprob: -8.50039005279541
    3. 'else' → logprob: -8.62539005279541
    4. '
' → logprob: -12.62539005279541
    5. '<|end|>' → logprob: -12.75039005279541
    6. 'elif' → logprob: -15.50039005279541
    7. '```' → logprob: -15.62539005279541
    8. ')' → logprob: -16.000391006469727
    9. '   ' → logprob: -16.250391006469727
    10. '      ' → logprob: -16.750391006469727

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017994119552895427
    2. 'else' → logprob: -6.501799583435059
    3. ' else' → logprob: -8.126799583435059
    4. '   ' → logprob: -14.126799583435059
    5. 'elif' → logprob: -15.001799583435059
    6. '	else' → logprob: -15.626799583435059
    7. '<|end|>' → logprob: -15.876799583435059
    8. '```' → logprob: -16.001798629760742
    9. '	' → logprob: -17.001798629760742
    10. '      ' → logprob: -17.751798629760742

Token 283: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.621057391166687
    2. 'else' (adapté à ' else') → logprob: -0.871057391166687
    3. ' else' → logprob: -3.1210575103759766
    4. '   ' → logprob: -12.496057510375977
    5. '	else' → logprob: -14.621057510375977
    6. '
' → logprob: -15.371057510375977
    7. 'elif' → logprob: -15.871057510375977
    8. '           ' → logprob: -16.496057510375977
    9. '	' → logprob: -16.996057510375977
    10. '      ' → logprob: -17.121057510375977

Token 284: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03818114846944809
    2. ':
' → logprob: -3.4131810665130615
    3. ':' → logprob: -5.788181304931641
    4. ' high' → logprob: -7.163181304931641
    5. '       ' → logprob: -8.28818130493164
    6. '   ' → logprob: -8.78818130493164
    7. '(high' → logprob: -9.16318130493164
    8. 'high' → logprob: -9.78818130493164
    9. '
' → logprob: -9.78818130493164
    10. '               ' → logprob: -10.28818130493164

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49799948930740356
    2. ' high' → logprob: -0.9979994893074036
    3. 'high' → logprob: -3.747999429702759
    4. '   ' → logprob: -9.99799919128418
    5. '(high' → logprob: -11.37299919128418
    6. '
' → logprob: -12.12299919128418
    7. 'High' → logprob: -12.74799919128418
    8. '               ' → logprob: -12.87299919128418
    9. '.high' → logprob: -13.49799919128418
    10. '_high' → logprob: -14.24799919128418

Token 286: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.048609621822834015
    2. ' high' → logprob: -3.048609733581543
    3. '           ' → logprob: -10.798609733581543
    4. '   ' → logprob: -13.673609733581543
    5. '(high' → logprob: -15.673609733581543
    6. '               ' → logprob: -15.798609733581543
    7. '.high' → logprob: -16.048608779907227
    8. '_high' → logprob: -16.423608779907227
    9. '       ' → logprob: -16.673608779907227
    10. ' ' → logprob: -17.298608779907227

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. '   ' → logprob: -18.001928329467773
    4. ' ' → logprob: -19.001928329467773
    5. '＝' → logprob: -19.376928329467773
    6. ' -=' → logprob: -19.376928329467773
    7. '    ' → logprob: -19.751928329467773
    8. ' =
' → logprob: -20.501928329467773
    9. '-=' → logprob: -20.626928329467773
    10. ',' → logprob: -20.751928329467773

Token 288: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.04858759790658951
    2. ' mid' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.048587799072266
    4. '[mid' → logprob: -16.798587799072266
    5. '(mid' → logprob: -17.923587799072266
    6. ' ' → logprob: -18.048587799072266
    7. '_mid' → logprob: -19.548587799072266
    8. '  ' → logprob: -20.048587799072266
    9. 'm' → logprob: -20.298587799072266
    10. '    ' → logprob: -20.673587799072266

Token 289: ' -' (ID: 533)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.0960846096277237
    2. 'mid' → logprob: -2.7210845947265625
    3. ' -' → logprob: -3.7210845947265625
    4. ' ' → logprob: -7.4710845947265625
    5. '[mid' → logprob: -7.5960845947265625
    6. '-' → logprob: -7.7210845947265625
    7. '   ' → logprob: -10.721084594726562
    8. ' =' → logprob: -10.846084594726562
    9. '=' → logprob: -11.096084594726562
    10. '       ' → logprob: -11.721084594726562

Token 290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.250709533691406
    4. '   ' → logprob: -17.625709533691406
    5. '       ' → logprob: -18.875709533691406
    6. '<|end|>' → logprob: -19.375709533691406
    7. '           ' → logprob: -19.750709533691406
    8. '
' → logprob: -20.375709533691406
    9. '0' → logprob: -20.875709533691406
    10. '=' → logprob: -21.063209533691406

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -22.25
    5. '۱' → logprob: -23.3125
    6. '１' → logprob: -23.375
    7. '
' → logprob: -23.6875
    8. '<|end|>' → logprob: -23.8125
    9. '0' → logprob: -24.1875
    10. '১' → logprob: -24.375

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003012880450114608
    2. 'return' → logprob: -6.003012657165527
    3. ' return' → logprob: -7.628012657165527
    4. '
' → logprob: -10.378012657165527
    5. '	return' → logprob: -11.128012657165527
    6. '    
' → logprob: -12.628012657165527
    7. '       ' → logprob: -14.378012657165527
    8. ':return' → logprob: -14.878012657165527
    9. '```' → logprob: -15.628012657165527
    10. '   ' → logprob: -16.378013610839844

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003895203350111842
    2. 'return' → logprob: -5.753895282745361
    3. ' return' → logprob: -7.253895282745361
    4. '	return' → logprob: -11.753894805908203
    5. '       ' → logprob: -13.628894805908203
    6. '    
' → logprob: -15.378894805908203
    7. '```' → logprob: -16.003894805908203
    8. ':return' → logprob: -16.003894805908203
    9. '   ' → logprob: -16.503894805908203
    10. '  ' → logprob: -16.503894805908203

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08383528143167496
    2. '   ' → logprob: -2.8338353633880615
    3. ' return' → logprob: -3.8338353633880615
    4. '	return' → logprob: -12.83383560180664
    5. ' ' → logprob: -14.33383560180664
    6. ':return' → logprob: -15.58383560180664
    7. '```' → logprob: -15.95883560180664
    8. '
' → logprob: -16.58383560180664
    9. '  ' → logprob: -16.70883560180664
    10. '       ' → logprob: -17.08383560180664

Token 295: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02324547804892063
    2. ' res' → logprob: -3.7732455730438232
    3. '	res' → logprob: -19.148244857788086
    4. '(res' → logprob: -19.398244857788086
    5. 're' → logprob: -20.023244857788086
    6. ' ' → logprob: -20.398244857788086
    7. ' ' → logprob: -20.648244857788086
    8. '$res' → logprob: -21.023244857788086
    9. 'r' → logprob: -21.773244857788086
    10. '   ' → logprob: -22.898244857788086

Token 296: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018189631402492523
    2. '<|end|>' → logprob: -4.143189430236816
    3. 'def' → logprob: -7.768189430236816
    4. '\n' → logprob: -7.893189430236816
    5. 'for' → logprob: -7.893189430236816
    6. '  
' → logprob: -8.143189430236816
    7. '

' → logprob: -8.393189430236816
    8. 'n' → logprob: -8.893189430236816
    9. ' 
' → logprob: -9.643189430236816
    10. '#' → logprob: -9.643189430236816

Token 297: 'for' (ID: 1938)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10787342488765717
    2. 'for' → logprob: -2.8578734397888184
    3. 'Q' → logprob: -3.1078734397888184
    4. 'n' → logprob: -8.98287296295166
    5. ' for' → logprob: -10.85787296295166
    6. 'input' → logprob: -12.10787296295166
    7. 't' → logprob: -12.98287296295166
    8. ' q' → logprob: -12.98287296295166
    9. '```' → logprob: -13.10787296295166
    10. ' Q' → logprob: -13.10787296295166

Token 298: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.028773047029972076
    2. ' _' → logprob: -3.778773069381714
    3. '_' → logprob: -5.778772830963135
    4. 'line' → logprob: -6.403772830963135
    5. '_line' → logprob: -8.528773307800293
    6. ' ligne' → logprob: -8.903773307800293
    7. ' l' → logprob: -9.028773307800293
    8. ' val' → logprob: -9.403773307800293
    9. ' ' → logprob: -9.528773307800293
    10. ' i' → logprob: -10.028773307800293

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805858641862869
    2. 'in' → logprob: -3.2880585193634033
    3. ' ' → logprob: -11.663058280944824
    4. '_' → logprob: -13.038058280944824
    5. '	in' → logprob: -13.413058280944824
    6. '()' → logprob: -13.788058280944824
    7. '_in' → logprob: -14.538058280944824
    8. 's' → logprob: -14.663058280944824
    9. 'line' → logprob: -14.663058280944824
    10. 'import' → logprob: -14.788058280944824

Token 300: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47409379482269287
    2. ' sys' → logprob: -0.9740937948226929
    3. '=sys' → logprob: -11.099093437194824
    4. '(sys' → logprob: -13.849093437194824
    5. '	sys' → logprob: -14.349093437194824
    6. 'stdin' → logprob: -16.22409439086914
    7. '_sys' → logprob: -18.09909439086914
    8. 's' → logprob: -18.22409439086914
    9. 'import' → logprob: -18.59909439086914
    10. 'in' → logprob: -18.84909439086914

Token 301: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006943239714019
    2. '.readline' → logprob: -8.250694274902344
    3. 'stdin' → logprob: -8.250694274902344
    4. '.' → logprob: -8.875694274902344
    5. '(stdin' → logprob: -10.750694274902344
    6. '.argv' → logprob: -12.000694274902344
    7. '.stdout' → logprob: -13.000694274902344
    8. ' stdin' → logprob: -14.125694274902344
    9. '.readlines' → logprob: -14.750694274902344
    10. 'import' → logprob: -15.375694274902344

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04070313647389412
    2. '.readline' → logprob: -3.290703058242798
    3. '.' → logprob: -6.665703296661377
    4. '.strip' → logprob: -7.415703296661377
    5. '():' → logprob: -7.915703296661377
    6. '.rstrip' → logprob: -8.415702819824219
    7. 'rstrip' → logprob: -9.915702819824219
    8. '.readlines' → logprob: -10.040702819824219
    9. ':
' → logprob: -10.290702819824219
    10. ' readline' → logprob: -11.540702819824219

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06543532013893127
    2. ':' → logprob: -2.8154354095458984
    3. ':
' → logprob: -6.065435409545898
    4. ' readline' → logprob: -8.190435409545898
    5. ' val' → logprob: -8.940435409545898
    6. '.' → logprob: -8.940435409545898
    7. '    
' → logprob: -9.065435409545898
    8. '.strip' → logprob: -9.440435409545898
    9. 'val' → logprob: -9.565435409545898
    10. ',' → logprob: -9.690435409545898

Token 304: ' line' (ID: 2543)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7803569436073303
    2. ' val' → logprob: -0.9053569436073303
    3. ' n' → logprob: -2.4053568840026855
    4. 'n' → logprob: -3.5303568840026855
    5. '   ' → logprob: -4.6553568840026855
    6. 'value' → logprob: -5.7803568840026855
    7. 'v' → logprob: -6.5303568840026855
    8. ' value' → logprob: -6.6553568840026855
    9. 'num' → logprob: -6.9053568840026855
    10. 'x' → logprob: -7.2803568840026855

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032561463303864002
    2. ' =' → logprob: -5.878256320953369
    3. '=line' → logprob: -7.878256320953369
    4. '.strip' → logprob: -9.878255844116211
    5. '.' → logprob: -12.003255844116211
    6. '_strip' → logprob: -12.253255844116211
    7. '_val' → logprob: -12.753255844116211
    8. 'strip' → logprob: -13.003255844116211
    9. '.=' → logprob: -13.878255844116211
    10. '.rstrip' → logprob: -14.003255844116211

Token 306: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.836499985889532e-05
    2. ' line' → logprob: -9.7500581741333
    3. 'int' → logprob: -20.500059127807617
    4. '=line' → logprob: -23.375059127807617
    5. '	line' → logprob: -23.500059127807617
    6. 'lin' → logprob: -24.000059127807617
    7. '(line' → logprob: -24.750059127807617
    8. '#line' → logprob: -25.000059127807617
    9. 'Line' → logprob: -25.125059127807617
    10. ' ' → logprob: -25.375059127807617

Token 307: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006426398176699877
    2. '.' → logprob: -5.6314263343811035
    3. '.rstrip' → logprob: -5.8814263343811035
    4. 'strip' → logprob: -10.506426811218262
    5. '.readline' → logprob: -13.381426811218262
    6. 'rstrip' → logprob: -14.131426811218262
    7. '.chomp' → logprob: -14.756426811218262
    8. '.split' → logprob: -14.881426811218262
    9. '.replace' → logprob: -15.256426811218262
    10. ' .' → logprob: -15.381426811218262

Token 308: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6514971852302551
    2. '()
' → logprob: -0.7764971852302551
    3. '
' → logprob: -5.2764973640441895
    4. '   ' → logprob: -5.4014973640441895
    5. 'if' → logprob: -5.9014973640441895
    6. '<|end|>' → logprob: -5.9014973640441895
    7. '<|end|>' → logprob: -7.1514973640441895
    8. ')' → logprob: -7.6514973640441895
    9. '    
' → logprob: -8.026496887207031
    10. '(' → logprob: -8.151496887207031

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007780533749610186
    2. ' if' → logprob: -5.5077805519104
    3. 'if' → logprob: -5.6327805519104
    4. '    
' → logprob: -9.757780075073242
    5. '
' → logprob: -10.007780075073242
    6. 'val' → logprob: -12.882780075073242
    7. '   
' → logprob: -13.007780075073242
    8. ' 
' → logprob: -13.382780075073242
    9. '    ' → logprob: -13.507780075073242
    10. '  ' → logprob: -13.632780075073242

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003517894074320793
    2. '   ' → logprob: -8.750351905822754
    3. 'val' → logprob: -8.750351905822754
    4. ' if' → logprob: -11.375351905822754
    5. 'try' → logprob: -11.500351905822754
    6. 'n' → logprob: -11.625351905822754
    7. 'v' → logprob: -12.750351905822754
    8. 'num' → logprob: -14.375351905822754
    9. 'x' → logprob: -15.000351905822754
    10. '    
' → logprob: -15.250351905822754

Token 311: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004427389707416296
    2. ' line' → logprob: -6.004427433013916
    3. 'not' → logprob: -6.254427433013916
    4. 'line' → logprob: -10.504426956176758
    5. ' ' → logprob: -14.504426956176758
    6. ' len' → logprob: -18.504426956176758
    7. ' no' → logprob: -19.004426956176758
    8. ' ' → logprob: -19.129426956176758
    9. '	not' → logprob: -19.754426956176758
    10. '(line' → logprob: -20.379426956176758

Token 312: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760071277618408
    2. '==' → logprob: -0.8260071277618408
    3. ':' → logprob: -9.951006889343262
    4. '=' → logprob: -11.326006889343262
    5. '()==' → logprob: -13.326006889343262
    6. '.is' → logprob: -13.451006889343262
    7. '===' → logprob: -13.826006889343262
    8. '.startswith' → logprob: -14.201006889343262
    9. '=='' → logprob: -14.326006889343262
    10. '=="' → logprob: -14.451006889343262

Token 313: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.19522090256214142
    2. '""' → logprob: -2.195220947265625
    3. '"' → logprob: -3.445220947265625
    4. ''' → logprob: -3.695220947265625
    5. '"":' → logprob: -4.695220947265625
    6. ''ex' → logprob: -9.695220947265625
    7. ''end' → logprob: -10.320220947265625
    8. ''q' → logprob: -11.195220947265625
    9. ''O' → logprob: -12.820220947265625
    10. ''o' → logprob: -12.945220947265625

Token 314: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2812880277633667
    2. '0' → logprob: -1.9062880277633667
    3. ''' → logprob: -2.4062881469726562
    4. '''' → logprob: -5.531288146972656
    5. 'end' → logprob: -7.406288146972656
    6. '"' → logprob: -8.031288146972656
    7. '':
' → logprob: -8.156288146972656
    8. '":' → logprob: -8.156288146972656
    9. '"":' → logprob: -8.281288146972656
    10. '""' → logprob: -8.781288146972656

Token 315: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4679470360279083
    2. '':
' → logprob: -1.342947006225586
    3. ':
' → logprob: -2.842947006225586
    4. ':' → logprob: -2.967947006225586
    5. '':
' → logprob: -6.092947006225586
    6. ''' → logprob: -8.467947006225586
    7. '\n' → logprob: -8.592947006225586
    8. ' break' → logprob: -9.467947006225586
    9. '   ' → logprob: -9.467947006225586
    10. '":' → logprob: -10.092947006225586

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.576873758807778e-05
    2. '   ' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.875075340270996
    4. ' break' → logprob: -16.000076293945312
    5. '     ' → logprob: -16.250076293945312
    6. 'break' → logprob: -16.250076293945312
    7. '      ' → logprob: -16.500076293945312
    8. '	break' → logprob: -16.625076293945312
    9. ':' → logprob: -17.125076293945312
    10. '```' → logprob: -17.375076293945312

Token 317: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7000412940979004
    2. 'break' (adapté à ' break') → logprob: -0.7000412940979004
    3. ' break' → logprob: -5.2000412940979
    4. '	break' → logprob: -6.7000412940979
    5. '   ' → logprob: -9.325040817260742
    6. '           ' → logprob: -10.325040817260742
    7. '	' → logprob: -15.325040817260742
    8. '	   ' → logprob: -15.450040817260742
    9. '_break' → logprob: -15.700040817260742
    10. '```' → logprob: -15.950040817260742

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01696608029305935
    2. '    
' → logprob: -4.516965866088867
    3. '
' → logprob: -5.141965866088867
    4. '  
' → logprob: -10.641965866088867
    5. '   
' → logprob: -11.516965866088867
    6. '        
' → logprob: -12.141965866088867
    7. 'val' → logprob: -12.641965866088867
    8. 'value' → logprob: -13.266965866088867
    9. '	val' → logprob: -13.266965866088867
    10. '    
' → logprob: -13.516965866088867

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05655435100197792
    2. '
' → logprob: -3.4315543174743652
    3. '    
' → logprob: -3.8065543174743652
    4. 'val' → logprob: -8.556554794311523
    5. '  
' → logprob: -9.556554794311523
    6. 'value' → logprob: -9.681554794311523
    7. '   
' → logprob: -10.056554794311523
    8. 'n' → logprob: -11.181554794311523
    9. '        
' → logprob: -11.431554794311523
    10. ' 
' → logprob: -12.181554794311523

Token 320: ' x' (ID: 1215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11436097323894501
    2. 'n' → logprob: -2.614361047744751
    3. '   ' → logprob: -3.989361047744751
    4. 'num' → logprob: -4.739360809326172
    5. 'x' (adapté à ' x') → logprob: -5.739360809326172
    6. 'value' → logprob: -6.114360809326172
    7. 'v' → logprob: -6.739360809326172
    8. ' val' → logprob: -8.239360809326172
    9. 'print' → logprob: -8.364360809326172
    10. 'k' → logprob: -8.864360809326172

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033653419464826584
    2. '=' → logprob: -3.408653497695923
    3. '=int' → logprob: -11.908653259277344
    4. ' ' → logprob: -15.283653259277344
    5. '_' → logprob: -15.533653259277344
    6. ' ' → logprob: -15.658653259277344
    7. 'int' → logprob: -15.783653259277344
    8. ')' → logprob: -16.158653259277344
    9. '   ' → logprob: -16.783653259277344
    10. ',' → logprob: -17.158653259277344

Token 322: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.125261306762695
    4. '[int' → logprob: -20.875261306762695
    5. '(int' → logprob: -21.250261306762695
    6. ' ' → logprob: -22.625261306762695
    7. '=int' → logprob: -22.750261306762695
    8. '  ' → logprob: -22.750261306762695
    9. '<int' → logprob: -23.375261306762695
    10. '	int' → logprob: -23.375261306762695

Token 323: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. '(x' → logprob: -18.50002670288086
    4. '[line' → logprob: -19.12502670288086
    5. '(Line' → logprob: -19.25002670288086
    6. ' line' → logprob: -19.50002670288086
    7. '=line' → logprob: -19.75002670288086
    8. '#line' → logprob: -20.12502670288086
    9. 'line' → logprob: -20.12502670288086
    10. '(lines' → logprob: -20.50002670288086

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029767731204628944
    2. ')
' → logprob: -3.5297677516937256
    3. ')
' → logprob: -11.029767990112305
    4. ')

' → logprob: -15.029767990112305
    5. '   ' → logprob: -15.154767990112305
    6. ' )' → logprob: -15.154767990112305
    7. ')`
' → logprob: -17.279767990112305
    8. ' )
' → logprob: -17.404767990112305
    9. ')`' → logprob: -17.654767990112305
    10. '),' → logprob: -18.029767990112305

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009335262700915337
    2. 'print' → logprob: -4.884335041046143
    3. ' print' → logprob: -6.384335041046143
    4. '
' → logprob: -10.8843355178833
    5. '    
' → logprob: -11.1343355178833
    6. 'result' → logprob: -13.1343355178833
    7. '```' → logprob: -13.1343355178833
    8. ' result' → logprob: -14.3843355178833
    9. '	print' → logprob: -14.3843355178833
    10. '  
' → logprob: -15.5093355178833

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0022586178965866566
    2. ' print' → logprob: -6.752258777618408
    3. 'result' → logprob: -7.252258777618408
    4. '   ' → logprob: -8.25225830078125
    5. 'res' → logprob: -9.50225830078125
    6. 'answer' → logprob: -10.50225830078125
    7. 'ans' → logprob: -11.25225830078125
    8. '
' → logprob: -13.75225830078125
    9. ' result' → logprob: -14.25225830078125
    10. 'r' → logprob: -14.37725830078125

Token 327: '(binary' (ID: 139383)
  Prédit: '(binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(binary' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -9.750059127807617
    3. 'binary' → logprob: -14.125059127807617
    4. '(b' → logprob: -16.750059127807617
    5. '(Binary' → logprob: -16.875059127807617
    6. ' binary' → logprob: -17.250059127807617
    7. '(bin' → logprob: -18.375059127807617
    8. ' (' → logprob: -19.250059127807617
    9. '('' → logprob: -19.250059127807617
    10. '()' → logprob: -20.375059127807617

Token 328: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. 'search' → logprob: -16.25
    4. '_s' → logprob: -16.5
    5. '_find' → logprob: -17.75
    6. '_print' → logprob: -18.5
    7. '_space' → logprob: -18.875
    8. ' _' → logprob: -18.875
    9. '```' → logprob: -19.25
    10. '_x' → logprob: -19.75

Token 329: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019342314917594194
    2. '(' → logprob: -6.251934051513672
    3. ' (' → logprob: -12.126934051513672
    4. ')' → logprob: -15.876934051513672
    5. 'x' → logprob: -16.501934051513672
    6. ',x' → logprob: -17.126934051513672
    7. ')(' → logprob: -17.876934051513672
    8. ' x' → logprob: -18.501934051513672
    9. '(
' → logprob: -18.626934051513672
    10. ',' → logprob: -18.626934051513672

Token 330: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021346807479858
    2. '))' → logprob: -2.3502135276794434
    3. ' )' → logprob: -12.975213050842285
    4. ')))' → logprob: -12.975213050842285
    5. '())' → logprob: -13.850213050842285
    6. ' ))' → logprob: -15.100213050842285
    7. '})' → logprob: -15.100213050842285
    8. ')`' → logprob: -15.600213050842285
    9. ')")' → logprob: -15.975213050842285
    10. ')}' → logprob: -16.1002140045166


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 153
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 279
Précision stricte (1ère position): 46.65%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 85.06%
================================================================================
