================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_arrange(dominoes):
    n = len(dominoes)
    used = [False] * n

    def backtrack(chain):
        if len(chain) == n:
            return True
        last = chain[-1][1]
        for i in range(n):
            if not used[i]:
                a, b = dominoes[i]
                if a == last:
                    used[i] = True
                    if backtrack(chain + [(a, b)]):
                        return True
                    used[i] = False
                elif b == last:
                    used[i] = True
                    if backtrack(chain + [(b, a)]):
                        return True
                    used[i] = False
        return False

    # try each domino as starting piece with both orientations
    for i in range(n):
        a, b = dominoes[i]
        used[i] = True
        if backtrack([(a, b)]):
            return True
        if backtrack([(b, a)]):
            return True
        used[i] = False
    return False


def main():
    import sys
    lines = [line.strip() for line in sys.stdin if line.strip()]
    i = 0
    while i < len(lines):
        n = int(lines[i])
        i += 1
        dom_strs = lines[i].split()
        i += 1
        dominoes = []
        for s in dom_strs:
            dominoes.append((int(s[0]), int(s[1])))
        if can_arrange(dominoes):
            print("Yes")
        else:
            print("No")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_arr' (ID: 25121)
  → Token d'amorce (pas de prédiction)

Token 3: 'ange' (ID: 1052)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.11322455108165741
    2. 'a' → logprob: -3.363224506378174
    3. 'ange' → logprob: -3.613224506378174
    4. 'ive' → logprob: -4.238224506378174
    5. 'e' → logprob: -4.488224506378174
    6. 'ays' → logprob: -4.988224506378174
    7. '```' → logprob: -5.238224506378174
    8. 'y' → logprob: -5.863224506378174
    9. '_' → logprob: -6.238224506378174
    10. 'ey' → logprob: -7.488224506378174

Token 4: '(dom' (ID: 126371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.704254150390625
    2. '_' → logprob: -0.954254150390625
    3. '_:' → logprob: -2.579254150390625
    4. '```' → logprob: -3.454254150390625
    5. '():' → logprob: -5.454254150390625
    6. '(_' → logprob: -5.954254150390625
    7. '(:' → logprob: -6.204254150390625
    8. '(_:' → logprob: -7.079254150390625
    9. '**' → logprob: -7.954254150390625
    10. '_(' → logprob: -8.204254150390625

Token 5: 'ino' (ID: 2081)
  Prédit: 'ains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.45845913887023926
    2. 'ino' → logprob: -1.7084591388702393
    3. 'inos' → logprob: -1.9584591388702393
    4. 'ain' → logprob: -3.7084591388702393
    5. ',' → logprob: -4.95845890045166
    6. '```' → logprob: -5.45845890045166
    7. 'in' → logprob: -6.58345890045166
    8. '_' → logprob: -6.83345890045166
    9. 'estic' → logprob: -6.83345890045166
    10. ')' → logprob: -6.83345890045166

Token 6: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020254701375961304
    2. ')s' → logprob: -7.002025604248047
    3. ')' → logprob: -7.377025604248047
    4. '):' → logprob: -8.127025604248047
    5. 'es' → logprob: -8.752025604248047
    6. '```' → logprob: -11.252025604248047
    7. '_s' → logprob: -11.377025604248047
    8. ' s' → logprob: -13.127025604248047
    9. '[]):' → logprob: -13.877025604248047
    10. '):

' → logprob: -14.252025604248047

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1028987243771553
    2. ')' → logprob: -2.7278988361358643
    3. '[' → logprob: -3.4778988361358643
    4. '[]):' → logprob: -7.102898597717285
    5. '<|end|>' → logprob: -8.477898597717285
    6. '```' → logprob: -9.352898597717285
    7. '):
' → logprob: -9.352898597717285
    8. '(' → logprob: -9.852898597717285
    9. ',' → logprob: -10.352898597717285
    10. ':' → logprob: -10.602898597717285

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6048814654350281
    2. '   ' → logprob: -1.2298815250396729
    3. '```' → logprob: -1.8548815250396729
    4. '():' → logprob: -6.604881286621094
    5. '(' → logprob: -7.229881286621094
    6. '``' → logprob: -7.729881286621094
    7. '    
' → logprob: -7.854881286621094
    8. ''' → logprob: -8.104881286621094
    9. '    ' → logprob: -8.354881286621094
    10. '`' → logprob: -8.729881286621094

Token 9: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036125097423791885
    2. '```' → logprob: -3.9111251831054688
    3. '    ' → logprob: -5.286125183105469
    4. ' if' → logprob: -5.661125183105469
    5. ' ' → logprob: -6.286125183105469
    6. 'if' → logprob: -7.286125183105469
    7. '    
' → logprob: -7.411125183105469
    8. '       ' → logprob: -7.536125183105469
    9. ':' → logprob: -7.786125183105469
    10. '`' → logprob: -7.911125183105469

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7111836671829224
    2. ' =' → logprob: -0.7111836671829224
    3. '   ' → logprob: -4.836183547973633
    4. ' ' → logprob: -5.461183547973633
    5. 'u' → logprob: -6.461183547973633
    6. '    ' → logprob: -7.211183547973633
    7. '  ' → logprob: -7.461183547973633
    8. ',' → logprob: -7.586183547973633
    9. ')' → logprob: -7.711183547973633
    10. '_' → logprob: -7.836183547973633

Token 11: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.001171056181192398
    2. 'len' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.376171112060547
    4. '0' → logprob: -15.501171112060547
    5. '(len' → logprob: -15.876171112060547
    6. '=len' → logprob: -16.001171112060547
    7. '   ' → logprob: -16.626171112060547
    8. '[len' → logprob: -16.751171112060547
    9. '1' → logprob: -17.251171112060547
    10. '	len' → logprob: -18.126171112060547

Token 12: '(dom' (ID: 126371)
  Prédit: '(dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dom' → logprob: -0.038044244050979614
    2. '(' → logprob: -3.2880442142486572
    3. 'dom' → logprob: -13.788043975830078
    4. '(domain' → logprob: -14.288043975830078
    5. '(
' → logprob: -14.788043975830078
    6. '(div' → logprob: -15.663043975830078
    7. '(

' → logprob: -15.788043975830078
    8. '(s' → logprob: -16.163043975830078
    9. '(dim' → logprob: -16.288043975830078
    10. ' (' → logprob: -16.413043975830078

Token 13: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -1.7432603272027336e-06
    2. 'ино' → logprob: -13.750001907348633
    3. ')' → logprob: -15.375001907348633
    4. '```' → logprob: -15.750001907348633
    5. 'INO' → logprob: -16.625001907348633
    6. 'oes' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'in' → logprob: -18.000001907348633
    9. 'inio' → logprob: -18.000001907348633
    10. 'o' → logprob: -18.000001907348633

Token 14: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00013643606507685035
    2. ')' → logprob: -9.875136375427246
    3. ']' → logprob: -10.375136375427246
    4. 'e' → logprob: -10.750136375427246
    5. '[' → logprob: -10.875136375427246
    6. '```' → logprob: -12.125136375427246
    7. ')]' → logprob: -13.125136375427246
    8. '])' → logprob: -13.250136375427246
    9. '[]' → logprob: -14.125136375427246
    10. '[
' → logprob: -14.625136375427246

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -11.875017166137695
    3. '[' → logprob: -12.625017166137695
    4. ' )' → logprob: -12.625017166137695
    5. '`)' → logprob: -13.625017166137695
    6. ')
' → logprob: -14.750017166137695
    7. '')' → logprob: -15.125017166137695
    8. ']' → logprob: -15.375017166137695
    9. ')return' → logprob: -15.375017166137695
    10. ' ' → logprob: -15.500017166137695

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262959599494934
    2. ':' → logprob: -1.0262959003448486
    3. '```' → logprob: -3.6512959003448486
    4. '    
' → logprob: -4.651296138763428
    5. '
' → logprob: -5.776296138763428
    6. ':
' → logprob: -6.151296138763428
    7. '   
' → logprob: -6.276296138763428
    8. ')' → logprob: -6.401296138763428
    9. '  
' → logprob: -6.526296138763428
    10. '\n' → logprob: -6.526296138763428

Token 17: ' used' (ID: 2061)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3294643461704254
    2. ':' → logprob: -2.4544644355773926
    3. '    ' → logprob: -3.0794644355773926
    4. '    
' → logprob: -3.3294644355773926
    5. '```' → logprob: -3.8294644355773926
    6. '     
' → logprob: -3.9544644355773926
    7. '   
' → logprob: -4.579464435577393
    8. ' ' → logprob: -4.954464435577393
    9. 'd' → logprob: -4.954464435577393
    10. ' if' → logprob: -5.204464435577393

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062486421316862106
    2. '_' → logprob: -3.312486410140991
    3. '=' → logprob: -3.812486410140991
    4. '[' → logprob: -7.06248664855957
    5. ' ' → logprob: -7.18748664855957
    6. ')' → logprob: -8.81248664855957
    7. '_space' → logprob: -9.81248664855957
    8. '_tokens' → logprob: -10.06248664855957
    9. ' _' → logprob: -10.43748664855957
    10. 's' → logprob: -10.68748664855957

Token 19: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.01484412420541048
    2. '[' → logprob: -4.264843940734863
    3. ' set' → logprob: -7.389843940734863
    4. ' ' → logprob: -10.389843940734863
    5. 'set' → logprob: -11.014843940734863
    6. '[n' → logprob: -11.639843940734863
    7. '   ' → logprob: -12.514843940734863
    8. ' {' → logprob: -13.139843940734863
    9. ' []' → logprob: -15.139843940734863
    10. '{' → logprob: -15.639843940734863

Token 20: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.003178544342517853
    2. ' False' → logprob: -5.753178596496582
    3. '0' → logprob: -14.503178596496582
    4. '(False' → logprob: -15.878178596496582
    5. '   ' → logprob: -16.003177642822266
    6. ']' → logprob: -17.378177642822266
    7. '.False' → logprob: -17.503177642822266
    8. '=False' → logprob: -18.128177642822266
    9. ')' → logprob: -19.503177642822266
    10. '```' → logprob: -19.753177642822266

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001126026691053994
    2. ' ]' → logprob: -9.125112533569336
    3. '[' → logprob: -13.250112533569336
    4. ')' → logprob: -14.500112533569336
    5. '']' → logprob: -14.750112533569336
    6. '])' → logprob: -15.500112533569336
    7. '<|end|>' → logprob: -15.625112533569336
    8. '`]' → logprob: -16.000112533569336
    9. '   ' → logprob: -16.125112533569336
    10. ']
' → logprob: -16.375112533569336

Token 22: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1503708362579346
    2. ')' → logprob: -1.5253708362579346
    3. '<|end|>' → logprob: -1.6503708362579346
    4. '[' → logprob: -1.7753708362579346
    5. '   ' → logprob: -3.7753708362579346
    6. ',' → logprob: -4.1503705978393555
    7. '(n' → logprob: -4.2753705978393555
    8. '[n' → logprob: -4.4003705978393555
    9. '```' → logprob: -5.0253705978393555
    10. '    ' → logprob: -5.0253705978393555

Token 23: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014177292585373
    2. ' n' → logprob: -1.7014176845550537
    3. '(n' → logprob: -12.576417922973633
    4. '(' → logprob: -15.326417922973633
    5. '	n' → logprob: -15.326417922973633
    6. ' ' → logprob: -15.576417922973633
    7. ' (' → logprob: -15.826417922973633
    8. '_n' → logprob: -16.826417922973633
    9. ')n' → logprob: -17.076417922973633
    10. '   ' → logprob: -17.201417922973633

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8421043753623962
    2. '   ' → logprob: -1.842104434967041
    3. ' ' → logprob: -2.467104434967041
    4. '    
' → logprob: -2.592104434967041
    5. '\n' → logprob: -2.842104434967041
    6. '\' → logprob: -2.967104434967041
    7. ' 
' → logprob: -3.467104434967041
    8. '  
' → logprob: -3.467104434967041
    9. '<|end|>' → logprob: -3.967104434967041
    10. '' → logprob: -4.217104434967041

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.239828959107399
    2. '    
' → logprob: -2.4898290634155273
    3. ' 
' → logprob: -3.1148290634155273
    4. '
' → logprob: -3.4898290634155273
    5. ' ' → logprob: -4.239829063415527
    6. '\' → logprob: -4.989829063415527
    7. '  
' → logprob: -5.114829063415527
    8. 'd' → logprob: -5.239829063415527
    9. '    ' → logprob: -5.239829063415527
    10. '\n' → logprob: -5.739829063415527

Token 26: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11055807024240494
    2. 'def' (adapté à ' def') → logprob: -2.610558032989502
    3. ' for' → logprob: -4.235558032989502
    4. 'stack' → logprob: -4.735558032989502
    5. 'prev' → logprob: -6.360558032989502
    6. '   ' → logprob: -6.485558032989502
    7. 'if' → logprob: -6.860558032989502
    8. 'chain' → logprob: -7.360558032989502
    9. 'result' → logprob: -7.360558032989502
    10. 'sequence' → logprob: -7.610558032989502

Token 27: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.010907160118222237
    2. ' dfs' → logprob: -5.010907173156738
    3. ' can' → logprob: -5.635907173156738
    4. ' search' → logprob: -8.510907173156738
    5. ' helper' → logprob: -8.510907173156738
    6. 'back' → logprob: -9.260907173156738
    7. ' is' → logprob: -9.635907173156738
    8. 'dfs' → logprob: -10.135907173156738
    9. ' valid' → logprob: -12.635907173156738
    10. '```' → logprob: -12.885907173156738

Token 28: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.1889815479516983
    2. '_' → logprob: -2.688981533050537
    3. '_track' → logprob: -2.813981533050537
    4. 'tracking' → logprob: -3.188981533050537
    5. '_tracking' → logprob: -6.563981533050537
    6. 't' → logprob: -6.938981533050537
    7. 'trace' → logprob: -8.563982009887695
    8. ' _' → logprob: -9.438982009887695
    9. '   ' → logprob: -9.563982009887695
    10. '_trace' → logprob: -9.813982009887695

Token 29: '(chain' (ID: 124348)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.096775583922863
    2. '(i' → logprob: -2.971775531768799
    3. '(index' → logprob: -3.346775531768799
    4. '(pos' → logprob: -6.221775531768799
    5. '(idx' → logprob: -6.346775531768799
    6. ' (' → logprob: -7.221775531768799
    7. '(position' → logprob: -7.846775531768799
    8. '(start' → logprob: -8.971776008605957
    9. '(s' → logprob: -9.721776008605957
    10. '(x' → logprob: -9.721776008605957

Token 30: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018456250429153442
    2. '):' → logprob: -4.01845645904541
    3. ')' → logprob: -8.89345645904541
    4. ' ,' → logprob: -9.51845645904541
    5. '[' → logprob: -9.89345645904541
    6. '=' → logprob: -11.26845645904541
    7. '   ' → logprob: -11.89345645904541
    8. ':' → logprob: -12.26845645904541
    9. ',index' → logprob: -12.64345645904541
    10. '):
' → logprob: -13.26845645904541

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04349168390035629
    2. ':' → logprob: -3.2934916019439697
    3. '<|end|>' → logprob: -5.918491840362549
    4. ')' → logprob: -7.168491840362549
    5. '):' → logprob: -7.793491840362549
    6. '   ' → logprob: -7.793491840362549
    7. '[' → logprob: -8.66849136352539
    8. '    ' → logprob: -8.66849136352539
    9. '        
' → logprob: -8.91849136352539
    10. ',' → logprob: -9.04349136352539

Token 32: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.067787528038025
    2. '    ' → logprob: -1.317787528038025
    3. '       ' → logprob: -2.6927876472473145
    4. ':' → logprob: -2.8177876472473145
    5. ')' → logprob: -2.9427876472473145
    6. '   ' → logprob: -3.3177876472473145
    7. '        ' → logprob: -3.6927876472473145
    8. ' 
' → logprob: -3.9427876472473145
    9. '<|end|>' → logprob: -3.9427876472473145
    10. '(' → logprob: -4.0677876472473145

Token 33: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.007712150923907757
    2. 'len' → logprob: -4.882712364196777
    3. ' ' → logprob: -9.757712364196777
    4. ' not' → logprob: -10.507712364196777
    5. ' ' → logprob: -11.007712364196777
    6. '	len' → logprob: -13.257712364196777
    7. '(len' → logprob: -13.382712364196777
    8. ' chain' → logprob: -14.507712364196777
    9. '=len' → logprob: -15.257712364196777
    10. '<len' → logprob: -16.63271141052246

Token 34: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0009139667963609099
    2. '(' → logprob: -7.000914096832275
    3. 'chain' → logprob: -13.875913619995117
    4. '(dom' → logprob: -14.125913619995117
    5. ' (' → logprob: -15.125913619995117
    6. '(domain' → logprob: -15.500913619995117
    7. '(ch' → logprob: -15.750913619995117
    8. ' chain' → logprob: -17.125913619995117
    9. '(queue' → logprob: -17.875913619995117
    10. '(branch' → logprob: -18.500913619995117

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003216095734387636
    2. '==' → logprob: -6.12821626663208
    3. ')==' → logprob: -7.00321626663208
    4. ' ==' → logprob: -9.128215789794922
    5. '<|end|>' → logprob: -12.253215789794922
    6. ' )' → logprob: -13.128215789794922
    7. '()' → logprob: -13.503215789794922
    8. '=' → logprob: -13.878215789794922
    9. ']==' → logprob: -14.503215789794922
    10. '   ' → logprob: -14.503215789794922

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12729321420192719
    2. '==' → logprob: -2.127293109893799
    3. ')' → logprob: -8.252293586730957
    4. ')==' → logprob: -9.752293586730957
    5. '()==' → logprob: -11.127293586730957
    6. '=' → logprob: -11.627293586730957
    7. '()' → logprob: -11.752293586730957
    8. ' ' → logprob: -11.877293586730957
    9. '   ' → logprob: -13.252293586730957
    10. ']==' → logprob: -13.377293586730957

Token 37: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10024915635585785
    2. 'n' → logprob: -2.3502490520477295
    3. 'len' → logprob: -11.100249290466309
    4. ' ' → logprob: -11.100249290466309
    5. ' len' → logprob: -11.850249290466309
    6. '	n' → logprob: -12.600249290466309
    7. ' ' → logprob: -13.975249290466309
    8. '   ' → logprob: -14.975249290466309
    9. '  ' → logprob: -16.225248336791992
    10. '0' → logprob: -16.350248336791992

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008879951201379299
    2. ':return' → logprob: -7.375887870788574
    3. ':
' → logprob: -8.500887870788574
    4. '):' → logprob: -10.625887870788574
    5. ' :' → logprob: -10.750887870788574
    6. ' and' → logprob: -12.125887870788574
    7. '   ' → logprob: -12.875887870788574
    8. '.' → logprob: -13.625887870788574
    9. '       ' → logprob: -14.625887870788574
    10. ')' → logprob: -14.625887870788574

Token 39: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2850429117679596
    2. ':
' → logprob: -1.9100428819656372
    3. '       ' → logprob: -2.7850430011749268
    4. ':return' → logprob: -3.2850430011749268
    5. '   ' → logprob: -8.160042762756348
    6. ' return' → logprob: -8.285042762756348
    7. '.' → logprob: -10.035042762756348
    8. 'return' → logprob: -10.035042762756348
    9. '           ' → logprob: -10.410042762756348
    10. ' :
' → logprob: -10.785042762756348

Token 40: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6823891401290894
    2. 'return' (adapté à ' return') → logprob: -0.9323891401290894
    3. '           ' → logprob: -2.932389259338379
    4. '       ' → logprob: -3.057389259338379
    5. '               ' → logprob: -8.307389259338379
    6. ':return' → logprob: -8.432389259338379
    7. '   ' → logprob: -8.932389259338379
    8. '
' → logprob: -9.807389259338379
    9. '	return' → logprob: -11.682389259338379
    10. '```' → logprob: -11.932389259338379

Token 41: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20141597092151642
    2. 'True' → logprob: -1.701416015625
    3. '   ' → logprob: -13.576416015625
    4. '(True' → logprob: -13.951416015625
    5. ' ' → logprob: -15.951416015625
    6. '[]' → logprob: -16.451416015625
    7. ' ' → logprob: -16.701416015625
    8. ' true' → logprob: -17.201416015625
    9. ' len' → logprob: -17.326416015625
    10. '    ' → logprob: -17.326416015625

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047491420060396194
    2. '\n' → logprob: -4.047491550445557
    3. '
' → logprob: -4.172491550445557
    4. '<|end|>' → logprob: -5.047491550445557
    5. '        
' → logprob: -5.422491550445557
    6. '   ' → logprob: -7.047491550445557
    7. '    
' → logprob: -7.672491550445557
    8. '' → logprob: -8.547491073608398
    9. '        ' → logprob: -8.922491073608398
    10. '  
' → logprob: -9.047491073608398

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08714400976896286
    2. '   ' → logprob: -3.087143898010254
    3. '\n' → logprob: -3.712143898010254
    4. '    
' → logprob: -5.462143898010254
    5. '        
' → logprob: -5.587143898010254
    6. '<|end|>' → logprob: -7.087143898010254
    7. '    ' → logprob: -7.212143898010254
    8. '
' → logprob: -7.212143898010254
    9. ' ' → logprob: -7.712143898010254
    10. '' → logprob: -7.837143898010254

Token 44: ' last' (ID: 2174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7706310749053955
    2. ' for' → logprob: -1.2706310749053955
    3. '   ' → logprob: -2.6456310749053955
    4. ' 
' → logprob: -2.8956310749053955
    5. '        
' → logprob: -3.0206310749053955
    6. '    
' → logprob: -3.5206310749053955
    7. 'for' → logprob: -4.645630836486816
    8. '  
' → logprob: -4.770630836486816
    9. '   
' → logprob: -5.020630836486816
    10. '\n' → logprob: -5.270630836486816

Token 45: ' =' (ID: 314)
  Prédit: '_dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -0.2882094979286194
    2. '_val' → logprob: -2.1632094383239746
    3. ' =' → logprob: -2.9132094383239746
    4. '_token' → logprob: -3.5382094383239746
    5. '_' → logprob: -3.9132094383239746
    6. '_num' → logprob: -4.913209438323975
    7. '_tile' → logprob: -4.913209438323975
    8. '_piece' → logprob: -5.413209438323975
    9. '_value' → logprob: -5.663209438323975
    10. '=' → logprob: -5.913209438323975

Token 46: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.47424253821372986
    2. 'chain' → logprob: -0.9742425680160522
    3. 'dom' → logprob: -9.849242210388184
    4. ' domino' → logprob: -9.849242210388184
    5. '(chain' → logprob: -10.099242210388184
    6. ' ' → logprob: -12.474242210388184
    7. '.chain' → logprob: -12.599242210388184
    8. ' ' → logprob: -12.849242210388184
    9. '   ' → logprob: -13.349242210388184
    10. '链' → logprob: -14.224242210388184

Token 47: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. ' [-' → logprob: -18.375
    4. '   ' → logprob: -18.375
    5. '][-' → logprob: -18.5
    6. ' ' → logprob: -20.0
    7. '-' → logprob: -20.125
    8. '[len' → logprob: -20.375
    9. '```' → logprob: -21.0
    10. '.' → logprob: -21.75

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010092071170220152
    2. '][' → logprob: -9.625101089477539
    3. '-' → logprob: -11.375101089477539
    4. '[' → logprob: -12.937601089477539
    5. '][-' → logprob: -12.937601089477539
    6. '(' → logprob: -13.187601089477539
    7. ' ' → logprob: -13.250101089477539
    8. '```' → logprob: -13.625101089477539
    9. '::-' → logprob: -13.687601089477539
    10. ']' → logprob: -13.750101089477539

Token 49: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006233671214431524
    2. '][-' → logprob: -5.8812336921691895
    3. ']' → logprob: -6.0062336921691895
    4. '[' → logprob: -7.0062336921691895
    5. ' ][' → logprob: -11.006233215332031
    6. ')[' → logprob: -11.256233215332031
    7. '[-' → logprob: -11.631233215332031
    8. '])' → logprob: -12.131233215332031
    9. ')][' → logprob: -13.131233215332031
    10. ')' → logprob: -13.256233215332031

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004043256398290396
    2. '-' → logprob: -5.629043102264404
    3. '0' → logprob: -8.254043579101562
    4. '::-' → logprob: -9.754043579101562
    5. '```' → logprob: -9.879043579101562
    6. '   ' → logprob: -11.129043579101562
    7. ' -' → logprob: -11.379043579101562
    8. '][' → logprob: -11.879043579101562
    9. ' ' → logprob: -12.066543579101562
    10. ']' → logprob: -12.441543579101562

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14503151178359985
    2. ')' → logprob: -2.020031452178955
    3. '<|end|>' → logprob: -6.770031452178955
    4. ')]' → logprob: -7.270031452178955
    5. ']
' → logprob: -8.895031929016113
    6. '<|end|>' → logprob: -8.895031929016113
    7. '])' → logprob: -9.770031929016113
    8. ' ]' → logprob: -10.270031929016113
    9. '   ' → logprob: -10.395031929016113
    10. ')
' → logprob: -10.395031929016113

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20355533063411713
    2. '
' → logprob: -2.7035553455352783
    3. '        
' → logprob: -2.9535553455352783
    4. '<|end|>' → logprob: -3.5785553455352783
    5. '  
' → logprob: -4.703555107116699
    6. ' 
' → logprob: -4.828555107116699
    7. ')' → logprob: -5.578555107116699
    8. '    
' → logprob: -5.828555107116699
    9. ' for' → logprob: -5.828555107116699
    10. '   ' → logprob: -6.078555107116699

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13681642711162567
    2. 'for' (adapté à ' for') → logprob: -2.1368165016174316
    3. '       ' → logprob: -4.886816501617432
    4. ' ' → logprob: -7.136816501617432
    5. ' 
' → logprob: -7.761816501617432
    6. '   ' → logprob: -8.261816024780273
    7. '        
' → logprob: -8.386816024780273
    8. '<|end|>' → logprob: -8.886816024780273
    9. '	for' → logprob: -9.136816024780273
    10. ' ' → logprob: -9.261816024780273

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0007200572872534394
    2. 'i' → logprob: -7.250720024108887
    3. ' ' → logprob: -12.500720024108887
    4. '	i' → logprob: -12.750720024108887
    5. ' idx' → logprob: -13.625720024108887
    6. '   ' → logprob: -13.625720024108887
    7. '    ' → logprob: -15.000720024108887
    8. ' ' → logprob: -15.000720024108887
    9. '```' → logprob: -15.875720024108887
    10. '  ' → logprob: -15.875720024108887

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00048191213863901794
    2. 'in' → logprob: -7.875482082366943
    3. ' ' → logprob: -9.375481605529785
    4. ',' → logprob: -11.375481605529785
    5. '  ' → logprob: -12.625481605529785
    6. ' ,' → logprob: -14.250481605529785
    7. '	in' → logprob: -14.625481605529785
    8. '<|end|>' → logprob: -15.125481605529785
    9. 'n' → logprob: -15.625481605529785
    10. '   ' → logprob: -15.750481605529785

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011712945997714996
    2. 'range' → logprob: -6.751171112060547
    3. '	range' → logprob: -14.251171112060547
    4. ' xrange' → logprob: -15.376171112060547
    5. ' ' → logprob: -15.626171112060547
    6. '(range' → logprob: -16.876171112060547
    7. '  ' → logprob: -18.001171112060547
    8. '_range' → logprob: -18.501171112060547
    9. '   ' → logprob: -18.501171112060547
    10. ' ' → logprob: -19.001171112060547

Token 57: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01219161693006754
    2. 'n' → logprob: -5.0121917724609375
    3. ' n' → logprob: -5.5121917724609375
    4. '(' → logprob: -6.7621917724609375
    5. '(len' → logprob: -9.262191772460938
    6. '	n' → logprob: -9.887191772460938
    7. '<|end|>' → logprob: -10.012191772460938
    8. ' (' → logprob: -10.887191772460938
    9. ')n' → logprob: -11.637191772460938
    10. ' ' → logprob: -11.637191772460938

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016434036660939455
    2. '):
' → logprob: -6.626643180847168
    3. ' ):' → logprob: -8.126643180847168
    4. ')' → logprob: -11.626643180847168
    5. ':' → logprob: -11.626643180847168
    6. '):
' → logprob: -13.376643180847168
    7. '   ' → logprob: -14.126643180847168
    8. ' ):
' → logprob: -14.876643180847168
    9. ' ' → logprob: -15.126643180847168
    10. '):

' → logprob: -15.376643180847168

Token 59: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2615980803966522
    2. ' if' → logprob: -2.1365981101989746
    3. '<|end|>' → logprob: -2.2615981101989746
    4. ' 
' → logprob: -6.136598110198975
    5. 'if' (adapté à ' if') → logprob: -6.136598110198975
    6. '           ' → logprob: -7.011598110198975
    7. '               ' → logprob: -7.511598110198975
    8. '       ' → logprob: -7.511598110198975
    9. '<|end|>' → logprob: -8.136597633361816
    10. '        ' → logprob: -8.511597633361816

Token 61: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0032303521875292063
    2. 'not' → logprob: -5.753230571746826
    3. ' used' → logprob: -10.503230094909668
    4. ' ' → logprob: -11.003230094909668
    5. '	not' → logprob: -12.753230094909668
    6. ' ' → logprob: -13.253230094909668
    7. ' and' → logprob: -13.753230094909668
    8. 'used' → logprob: -14.878230094909668
    9. ' (' → logprob: -14.878230094909668
    10. '(not' → logprob: -15.003230094909668

Token 62: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.005929393693804741
    2. 'used' → logprob: -5.130929470062256
    3. '.used' → logprob: -15.255928993225098
    4. '_used' → logprob: -15.755928993225098
    5. ' usado' → logprob: -16.005929946899414
    6. ' ' → logprob: -16.505929946899414
    7. '   ' → logprob: -16.630929946899414
    8. ' usada' → logprob: -17.005929946899414
    9. ' use' → logprob: -17.380929946899414
    10. ' usados' → logprob: -17.505929946899414

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -9.875056266784668
    3. ' [' → logprob: -13.000056266784668
    4. '[I' → logprob: -13.750056266784668
    5. '```' → logprob: -13.875056266784668
    6. '[
' → logprob: -15.250056266784668
    7. '[j' → logprob: -16.250057220458984
    8. '[ii' → logprob: -16.500057220458984
    9. '\[' → logprob: -17.375057220458984
    10. '[u' → logprob: -17.375057220458984

Token 64: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3728647828102112
    2. ')' → logprob: -1.4978647232055664
    3. ']' → logprob: -2.7478647232055664
    4. 'and' → logprob: -3.9978647232055664
    5. ' )' → logprob: -5.622864723205566
    6. '):' → logprob: -7.372864723205566
    7. ' ]' → logprob: -7.747864723205566
    8. '])' → logprob: -8.247864723205566
    9. ')]' → logprob: -9.622864723205566
    10. ':' → logprob: -9.997864723205566

Token 65: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005520815495401621
    2. ':' → logprob: -6.005520820617676
    3. 'and' → logprob: -6.380520820617676
    4. '               ' → logprob: -7.255520820617676
    5. '<|end|>' → logprob: -7.755520820617676
    6. ':
' → logprob: -9.755520820617676
    7. '           ' → logprob: -9.880520820617676
    8. '<|end|>' → logprob: -11.130520820617676
    9. '       ' → logprob: -11.255520820617676
    10. ',' → logprob: -11.380520820617676

Token 66: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2626959085464478
    2. '==' → logprob: -1.2626959085464478
    3. '=' → logprob: -1.5126959085464478
    4. ' ==' → logprob: -2.137695789337158
    5. ' =' → logprob: -2.387695789337158
    6. ',b' → logprob: -6.762695789337158
    7. ' ,' → logprob: -7.262695789337158
    8. ']==' → logprob: -7.262695789337158
    9. '[' → logprob: -7.637695789337158
    10. ')==' → logprob: -8.387696266174316

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009778402745723724
    2. ' b' → logprob: -4.6347784996032715
    3. '<|end|>' → logprob: -10.759778022766113
    4. ' =' → logprob: -15.134778022766113
    5. '<|end|>' → logprob: -15.759778022766113
    6. '=' → logprob: -16.00977897644043
    7. ' ' → logprob: -16.13477897644043
    8. '_b' → logprob: -16.25977897644043
    9. '```' → logprob: -16.50977897644043
    10. ',b' → logprob: -16.63477897644043

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251282636076212
    2. '=' → logprob: -4.387512683868408
    3. '<|end|>' → logprob: -13.387513160705566
    4. ',' → logprob: -14.262513160705566
    5. '<|end|>' → logprob: -15.012513160705566
    6. ')' → logprob: -15.637513160705566
    7. ' ' → logprob: -16.26251220703125
    8. ' =)' → logprob: -16.51251220703125
    9. '=user' → logprob: -16.88751220703125
    10. 's' → logprob: -17.38751220703125

Token 70: ' domino' (ID: 133589)
  Prédit: ' domino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.002819851040840149
    2. 'dom' → logprob: -5.877820014953613
    3. ' dom' → logprob: -11.252820014953613
    4. ' Domino' → logprob: -14.002820014953613
    5. '(dom' → logprob: -14.752820014953613
    6. '_dom' → logprob: -15.502820014953613
    7. '```' → logprob: -16.502819061279297
    8. ' dominio' → logprob: -16.752819061279297
    9. '-dom' → logprob: -16.877819061279297
    10. ' dome' → logprob: -17.002819061279297

Token 71: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.8908587662735954e-05
    2. 'e' → logprob: -11.625019073486328
    3. '[' → logprob: -12.625019073486328
    4. 's' → logprob: -13.250019073486328
    5. '[i' → logprob: -13.750019073486328
    6. '   ' → logprob: -14.125019073486328
    7. '```' → logprob: -14.125019073486328
    8. ']' → logprob: -14.625019073486328
    9. 'ues' → logprob: -15.750019073486328
    10. 'pieces' → logprob: -15.875019073486328

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.750004768371582
    4. '```' → logprob: -16.000003814697266
    5. 'i' → logprob: -16.125003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '[I' → logprob: -16.875003814697266
    8. ')[' → logprob: -17.625003814697266
    9. '][' → logprob: -18.375003814697266
    10. '\[' → logprob: -18.500003814697266

Token 73: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18108201026916504
    2. ')' → logprob: -1.806082010269165
    3. ']
' → logprob: -8.056081771850586
    4. '])' → logprob: -8.056081771850586
    5. ')]' → logprob: -8.181081771850586
    6. '<|end|>' → logprob: -8.306081771850586
    7. ')
' → logprob: -9.181081771850586
    8. '<|end|>' → logprob: -10.681081771850586
    9. '）' → logprob: -11.431081771850586
    10. ' ]' → logprob: -11.931081771850586

Token 74: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17778660356998444
    2. '<|end|>' → logprob: -2.0527865886688232
    3. '
' → logprob: -3.6777865886688232
    4. '                
' → logprob: -5.177786827087402
    5. '<|end|>' → logprob: -6.677786827087402
    6. '                ' → logprob: -6.927786827087402
    7. '                   ' → logprob: -8.302786827087402
    8. '                    
' → logprob: -8.427786827087402
    9. ' 
' → logprob: -8.552786827087402
    10. '  
' → logprob: -8.677786827087402

Token 75: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.074174165725708
    2. '               ' → logprob: -1.324174165725708
    3. '<|end|>' → logprob: -1.324174165725708
    4. ' 
' → logprob: -3.199174165725708
    5. '                
' → logprob: -3.699174165725708
    6. '                ' → logprob: -4.074173927307129
    7. '                   ' → logprob: -4.574173927307129
    8. ' if' → logprob: -4.699173927307129
    9. '                    
' → logprob: -5.074173927307129
    10. ' ' → logprob: -5.449173927307129

Token 76: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03814820945262909
    2. 'a' → logprob: -3.2881481647491455
    3. ' last' → logprob: -9.413147926330566
    4. '	a' → logprob: -11.788147926330566
    5. ' ' → logprob: -11.913147926330566
    6. 'last' → logprob: -12.038147926330566
    7. ' ' → logprob: -13.288147926330566
    8. ' b' → logprob: -14.538147926330566
    9. '(a' → logprob: -15.038147926330566
    10. '_a' → logprob: -15.475647926330566

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03808474913239479
    2. '==' → logprob: -3.2880847454071045
    3. '=' → logprob: -10.538084983825684
    4. ')' → logprob: -12.038084983825684
    5. ' ' → logprob: -12.413084983825684
    6. ' =' → logprob: -12.913084983825684
    7. ' ' → logprob: -13.038084983825684
    8. ')==' → logprob: -14.288084983825684
    9. '<|end|>' → logprob: -14.413084983825684
    10. ']==' → logprob: -15.413084983825684

Token 78: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.16023652255535126
    2. 'last' → logprob: -1.9102364778518677
    3. ' ' → logprob: -11.410236358642578
    4. '	last' → logprob: -15.160236358642578
    5. 'Last' → logprob: -15.410236358642578
    6. '(last' → logprob: -15.660236358642578
    7. ' ' → logprob: -16.035236358642578
    8. '[last' → logprob: -16.285236358642578
    9. 'l' → logprob: -16.535236358642578
    10. '=' → logprob: -17.035236358642578

Token 79: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018485164269804955
    2. ':' → logprob: -4.018485069274902
    3. 'or' → logprob: -8.643485069274902
    4. ':
' → logprob: -9.393485069274902
    5. '                   ' → logprob: -11.018485069274902
    6. ')' → logprob: -11.143485069274902
    7. '               ' → logprob: -11.268485069274902
    8. '):' → logprob: -12.143485069274902
    9. ' and' → logprob: -12.518485069274902
    10. '                ' → logprob: -12.768485069274902

Token 80: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48705482482910156
    2. '                   ' → logprob: -1.7370548248291016
    3. ' or' → logprob: -2.1120548248291016
    4. ':
' → logprob: -2.6120548248291016
    5. '               ' → logprob: -5.237054824829102
    6. '                       ' → logprob: -5.987054824829102
    7. '<|end|>' → logprob: -5.987054824829102
    8. ' and' → logprob: -6.987054824829102
    9. '):
' → logprob: -7.487054824829102
    10. '           ' → logprob: -7.612054824829102

Token 81: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.02624990977346897
    2. 'used' (adapté à ' used') → logprob: -4.151249885559082
    3. '<|end|>' → logprob: -5.401249885559082
    4. '                ' → logprob: -6.901249885559082
    5. '                   ' → logprob: -6.901249885559082
    6. ' 
' → logprob: -7.526249885559082
    7. ' ' → logprob: -7.526249885559082
    8. '                    
' → logprob: -7.651249885559082
    9. '                       ' → logprob: -7.776249885559082
    10. '                    ' → logprob: -7.901249885559082

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005262456834316254
    2. '[' → logprob: -5.25526237487793
    3. '[I' → logprob: -10.50526237487793
    4. ' [' → logprob: -14.38026237487793
    5. ' ' → logprob: -15.75526237487793
    6. '```' → logprob: -15.88026237487793
    7. '[
' → logprob: -16.13026237487793
    8. '[u' → logprob: -16.25526237487793
    9. '[a' → logprob: -17.00526237487793
    10. '[e' → logprob: -17.25526237487793

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015541439643129706
    2. ' =' → logprob: -6.751554012298584
    3. ']=' → logprob: -8.376554489135742
    4. '=' → logprob: -9.001554489135742
    5. '[i' → logprob: -10.751554489135742
    6. '[' → logprob: -12.126554489135742
    7. ' ]' → logprob: -13.001554489135742
    8. '=True' → logprob: -14.751554489135742
    9. ')' → logprob: -14.876554489135742
    10. '   ' → logprob: -15.626554489135742

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020544573664665222
    2. '=' → logprob: -3.8955445289611816
    3. ']' → logprob: -13.64554500579834
    4. '=True' → logprob: -13.89554500579834
    5. ' =
' → logprob: -15.52054500579834
    6. ' ' → logprob: -16.020544052124023
    7. '[' → logprob: -16.145544052124023
    8. ')' → logprob: -16.520544052124023
    9. '    ' → logprob: -16.770544052124023
    10. '=False' → logprob: -17.145544052124023

Token 85: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0031777136027812958
    2. 'True' → logprob: -5.753177642822266
    3. ' Tru' → logprob: -18.003177642822266
    4. ' ' → logprob: -19.003177642822266
    5. '(True' → logprob: -20.253177642822266
    6. ' ' → logprob: -21.003177642822266
    7. '=True' → logprob: -22.503177642822266
    8. ' true' → logprob: -22.628177642822266
    9. '.True' → logprob: -24.378177642822266
    10. ' Tr' → logprob: -25.128177642822266

Token 86: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28647249937057495
    2. '
' → logprob: -1.6614725589752197
    3. '                    
' → logprob: -3.4114725589752197
    4. '               ' → logprob: -5.161472320556641
    5. '<|end|>' → logprob: -5.161472320556641
    6. '                    ' → logprob: -5.411472320556641
    7. '                        
' → logprob: -6.161472320556641
    8. '           ' → logprob: -6.786472320556641
    9. '                       ' → logprob: -6.911472320556641
    10. 'newline' → logprob: -7.286472320556641

Token 87: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3289260268211365
    2. '                    
' → logprob: -1.7039260864257812
    3. '
' → logprob: -2.5789260864257812
    4. '                    ' → logprob: -5.328926086425781
    5. 'newline' → logprob: -5.578926086425781
    6. '                        
' → logprob: -6.203926086425781
    7. '<|end|>' → logprob: -6.328926086425781
    8. '               ' → logprob: -6.328926086425781
    9. '                
' → logprob: -6.703926086425781
    10. ' 
' → logprob: -6.953926086425781

Token 88: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6471737623214722
    2. '
' → logprob: -1.2721737623214722
    3. ' 
' → logprob: -2.5221738815307617
    4. '                    
' → logprob: -3.2721738815307617
    5. '           ' → logprob: -4.647173881530762
    6. '<|end|>' → logprob: -4.897173881530762
    7. '    
' → logprob: -5.022173881530762
    8. '                    ' → logprob: -5.022173881530762
    9. 'if' (adapté à ' if') → logprob: -5.272173881530762
    10. ' if' → logprob: -5.272173881530762

Token 89: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.0037845235783606768
    2. ' can' → logprob: -5.628784656524658
    3. 'back' → logprob: -8.6287841796875
    4. 'can' → logprob: -12.5037841796875
    5. ' ' → logprob: -13.7537841796875
    6. '(back' → logprob: -15.2537841796875
    7. '```' → logprob: -16.5037841796875
    8. ' chain' → logprob: -16.8787841796875
    9. '	back' → logprob: -16.8787841796875
    10. ' ' → logprob: -17.0037841796875

Token 90: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.00020771251001860946
    2. 'tr' → logprob: -9.125207901000977
    3. 'tracking' → logprob: -10.125207901000977
    4. 't' → logprob: -10.750207901000977
    5. 'tra' → logprob: -11.500207901000977
    6. 'trace' → logprob: -11.625207901000977
    7. 'tract' → logprob: -11.625207901000977
    8. '_track' → logprob: -12.625207901000977
    9. '_' → logprob: -13.625207901000977
    10. 'tracker' → logprob: -14.000207901000977

Token 91: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0007517361082136631
    2. '(' → logprob: -7.250751972198486
    3. ' (' → logprob: -10.250751495361328
    4. 'chain' → logprob: -13.375751495361328
    5. '(
' → logprob: -13.750751495361328
    6. '   ' → logprob: -14.000751495361328
    7. '```' → logprob: -14.125751495361328
    8. '((' → logprob: -14.250751495361328
    9. '([' → logprob: -15.250751495361328
    10. ')(' → logprob: -15.750751495361328

Token 92: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06270444393157959
    2. '+' → logprob: -3.187704563140869
    3. '+[' → logprob: -3.937704563140869
    4. '[' → logprob: -11.562704086303711
    5. ')' → logprob: -12.312704086303711
    6. ' +
' → logprob: -13.812704086303711
    7. '＋' → logprob: -13.812704086303711
    8. ' [+' → logprob: -14.312704086303711
    9. ')+' → logprob: -14.812704086303711
    10. ' ' → logprob: -14.812704086303711

Token 93: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01303116325289011
    2. '[' → logprob: -4.513031005859375
    3. ' [(' → logprob: -6.513031005859375
    4. '[d' → logprob: -8.388031005859375
    5. '[((' → logprob: -9.138031005859375
    6. ' [' → logprob: -9.388031005859375
    7. '[b' → logprob: -11.763031005859375
    8. '[data' → logprob: -11.888031005859375
    9. '[arr' → logprob: -12.013031005859375
    10. '[new' → logprob: -12.013031005859375

Token 94: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.576558530330658
    2. 'b' → logprob: -0.826558530330658
    3. '(b' → logprob: -8.451558113098145
    4. '(a' → logprob: -8.951558113098145
    5. 'dom' → logprob: -9.326558113098145
    6. ' b' → logprob: -9.576558113098145
    7. ' a' → logprob: -9.701558113098145
    8. '(dom' → logprob: -10.826558113098145
    9. '   ' → logprob: -11.076558113098145
    10. ' (' → logprob: -12.201558113098145

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02338488958775997
    2. ',b' → logprob: -3.7733848094940186
    3. ' ,' → logprob: -9.273385047912598
    4. 'b' → logprob: -10.148385047912598
    5. ',
' → logprob: -12.773385047912598
    6. ' ' → logprob: -14.773385047912598
    7. ' b' → logprob: -14.773385047912598
    8. ',B' → logprob: -15.148385047912598
    9. ',

' → logprob: -15.648385047912598
    10. '_,' → logprob: -15.648385047912598

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ')b' → logprob: -18.00247573852539
    4. ' ' → logprob: -19.25247573852539
    5. '>b' → logprob: -19.75247573852539
    6. '	b' → logprob: -20.50247573852539
    7. '<|end|>' → logprob: -21.75247573852539
    8. '_b' → logprob: -22.12747573852539
    9. '   ' → logprob: -22.50247573852539
    10. ' б' → logprob: -22.62747573852539

Token 97: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026206085458397865
    2. ')' → logprob: -6.127620697021484
    3. ')])' → logprob: -7.877620697021484
    4. '):' → logprob: -10.127620697021484
    5. ']):' → logprob: -11.752620697021484
    6. ']' → logprob: -12.752620697021484
    7. '])' → logprob: -13.002620697021484
    8. '）' → logprob: -14.627620697021484
    9. ')])
' → logprob: -14.877620697021484
    10. ')])

' → logprob: -14.877620697021484

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3936449885368347
    2. '                       ' → logprob: -1.2686450481414795
    3. '):
' → logprob: -3.2686450481414795
    4. '                   ' → logprob: -5.7686448097229
    5. ')' → logprob: -6.3936448097229
    6. ':' → logprob: -7.0186448097229
    7. '):
' → logprob: -9.518645286560059
    8. '                        ' → logprob: -9.643645286560059
    9. '       ' → logprob: -10.018645286560059
    10. '                           ' → logprob: -10.018645286560059

Token 99: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00010688089241739362
    2. '                        ' → logprob: -10.500106811523438
    3. '                           ' → logprob: -10.625106811523438
    4. '                   ' → logprob: -11.000106811523438
    5. ' return' → logprob: -11.875106811523438
    6. '                        
' → logprob: -11.875106811523438
    7. '                               ' → logprob: -12.375106811523438
    8. '                     ' → logprob: -12.500106811523438
    9. '                    ' → logprob: -12.625106811523438
    10. '                      ' → logprob: -13.000106811523438

Token 100: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08680513501167297
    2. '                       ' → logprob: -3.0868051052093506
    3. 'return' (adapté à ' return') → logprob: -3.7118051052093506
    4. '                           ' → logprob: -4.46180534362793
    5. '                   ' → logprob: -7.46180534362793
    6. '                               ' → logprob: -7.71180534362793
    7. ':return' → logprob: -8.33680534362793
    8. '                        ' → logprob: -9.33680534362793
    9. '   ' → logprob: -10.21180534362793
    10. ' ' → logprob: -10.58680534362793

Token 101: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -20.008615493774414
    4. '=True' → logprob: -20.258615493774414
    5. 'Tr' → logprob: -20.383615493774414
    6. ' ' → logprob: -21.008615493774414
    7. 'T' → logprob: -22.008615493774414
    8. '   ' → logprob: -22.008615493774414
    9. 'true' → logprob: -22.383615493774414
    10. '```' → logprob: -22.758615493774414

Token 102: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003637097543105483
    2. '               ' → logprob: -8.00036334991455
    3. '                    ' → logprob: -11.50036334991455
    4. '                  ' → logprob: -12.25036334991455
    5. '                       ' → logprob: -12.37536334991455
    6. '                    
' → logprob: -12.87536334991455
    7. '                ' → logprob: -13.25036334991455
    8. '           ' → logprob: -14.00036334991455
    9. '				' → logprob: -14.00036334991455
    10. '                     ' → logprob: -14.37536334991455

Token 103: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00044795009307563305
    2. '               ' → logprob: -7.750447750091553
    3. '                    ' → logprob: -12.375448226928711
    4. '                    
' → logprob: -12.500448226928711
    5. '                ' → logprob: -13.125448226928711
    6. '                       ' → logprob: -13.125448226928711
    7. '                  ' → logprob: -13.125448226928711
    8. '				' → logprob: -13.625448226928711
    9. '           ' → logprob: -14.875448226928711
    10. '                 ' → logprob: -15.000448226928711

Token 104: ' used' (ID: 2061)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018722362583503127
    2. '               ' → logprob: -6.3768720626831055
    3. '   ' → logprob: -9.001872062683105
    4. '           ' → logprob: -11.251872062683105
    5. 'used' (adapté à ' used') → logprob: -11.751872062683105
    6. '                       ' → logprob: -11.751872062683105
    7. '       ' → logprob: -11.751872062683105
    8. ' used' → logprob: -12.251872062683105
    9. '
' → logprob: -13.251872062683105
    10. '```' → logprob: -14.126872062683105

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0032430703286081553
    2. '[' → logprob: -5.7532429695129395
    3. '[I' → logprob: -9.753243446350098
    4. '[u' → logprob: -12.503243446350098
    5. '```' → logprob: -14.378243446350098
    6. '[j' → logprob: -14.503243446350098
    7. '[user' → logprob: -14.753243446350098
    8. '[s' → logprob: -15.003243446350098
    9. '[node' → logprob: -15.753243446350098
    10. '[idx' → logprob: -15.878243446350098

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003279906464740634
    2. '[i' → logprob: -5.753279685974121
    3. '[' → logprob: -9.378279685974121
    4. '][' → logprob: -12.128279685974121
    5. ']=' → logprob: -12.253279685974121
    6. ')' → logprob: -12.503279685974121
    7. ' =' → logprob: -13.628279685974121
    8. '[I' → logprob: -14.378279685974121
    9. '=False' → logprob: -14.628279685974121
    10. '=' → logprob: -15.128279685974121

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3540745675563812
    2. '[i' → logprob: -1.3540745973587036
    3. ' =' → logprob: -3.729074478149414
    4. '=False' → logprob: -4.979074478149414
    5. '[' → logprob: -5.104074478149414
    6. ']' → logprob: -5.979074478149414
    7. 'False' → logprob: -8.479074478149414
    8. ']=' → logprob: -9.604074478149414
    9. ')' → logprob: -9.979074478149414
    10. '[index' → logprob: -10.604074478149414

Token 108: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '(False' → logprob: -19.62502670288086
    4. '.False' → logprob: -22.37502670288086
    5. '=False' → logprob: -22.87502670288086
    6. '_false' → logprob: -23.37502670288086
    7. 'false' → logprob: -24.25002670288086
    8. '[' → logprob: -24.37502670288086
    9. 'True' → logprob: -24.37502670288086
    10. 'F' → logprob: -25.50002670288086

Token 109: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010926496179308742
    2. '                ' → logprob: -10.625109672546387
    3. ' elif' → logprob: -10.625109672546387
    4. 'b' → logprob: -10.750109672546387
    5. '```' → logprob: -11.750109672546387
    6. 'elif' → logprob: -11.875109672546387
    7. '                
' → logprob: -11.875109672546387
    8. '              ' → logprob: -12.000109672546387
    9. ' else' → logprob: -13.000109672546387
    10. '			' → logprob: -13.000109672546387

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041947141289711
    2. '                ' → logprob: -8.375419616699219
    3. '                
' → logprob: -9.750419616699219
    4. '              ' → logprob: -10.500419616699219
    5. 'b' → logprob: -10.625419616699219
    6. ' elif' → logprob: -10.750419616699219
    7. ' else' → logprob: -11.375419616699219
    8. 'elif' → logprob: -11.625419616699219
    9. '			' → logprob: -11.750419616699219
    10. '```' → logprob: -12.000419616699219

Token 111: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7627072334289551
    2. ' elif' → logprob: -1.262707233428955
    3. 'elif' (adapté à ' elif') → logprob: -1.387707233428955
    4. ' or' → logprob: -7.637707233428955
    5. ' else' → logprob: -8.012706756591797
    6. 'else' → logprob: -9.387706756591797
    7. '	elif' → logprob: -10.012706756591797
    8. 'b' → logprob: -10.387706756591797
    9. '```' → logprob: -10.637706756591797
    10. '              ' → logprob: -10.762706756591797

Token 112: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.001710997661575675
    2. 'b' → logprob: -6.376710891723633
    3. ' ' → logprob: -11.751710891723633
    4. ' ' → logprob: -14.626710891723633
    5. '	b' → logprob: -15.751710891723633
    6. '  ' → logprob: -15.939210891723633
    7. '    ' → logprob: -16.126710891723633
    8. ' a' → logprob: -16.564210891723633
    9. '   ' → logprob: -16.689210891723633
    10. '(b' → logprob: -17.251710891723633

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06199771910905838
    2. '==' → logprob: -2.811997652053833
    3. ')' → logprob: -11.686997413635254
    4. '=' → logprob: -11.811997413635254
    5. '[' → logprob: -12.561997413635254
    6. ' ' → logprob: -12.936997413635254
    7. '<|end|>' → logprob: -12.936997413635254
    8. ' =' → logprob: -13.186997413635254
    9. ')==' → logprob: -13.311997413635254
    10. ' ' → logprob: -14.186997413635254

Token 114: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3132627606391907
    2. ' last' → logprob: -1.313262701034546
    3. '[last' → logprob: -14.813262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '(last' → logprob: -15.813262939453125
    6. '	last' → logprob: -16.188262939453125
    7. ':last' → logprob: -17.438262939453125
    8. 'lasti' → logprob: -18.188262939453125
    9. ',last' → logprob: -18.313262939453125
    10. '_last' → logprob: -18.438262939453125

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003835352137684822
    2. ' :' → logprob: -6.128835201263428
    3. ':
' → logprob: -6.503835201263428
    4. '                   ' → logprob: -9.878835678100586
    5. ' :
' → logprob: -10.503835678100586
    6. ' and' → logprob: -10.503835678100586
    7. '<|end|>' → logprob: -11.003835678100586
    8. '):' → logprob: -12.378835678100586
    9. 'and' → logprob: -12.503835678100586
    10. '               ' → logprob: -12.628835678100586

Token 116: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2768019139766693
    2. ' used' → logprob: -1.6518019437789917
    3. '               ' → logprob: -3.526801824569702
    4. '<|end|>' → logprob: -4.401802062988281
    5. '                ' → logprob: -5.276802062988281
    6. ' ' → logprob: -7.151802062988281
    7. '                    ' → logprob: -7.526802062988281
    8. '<|end|>' → logprob: -8.151802062988281
    9. '                    
' → logprob: -8.276802062988281
    10. '                 ' → logprob: -8.526802062988281

Token 117: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.00589703768491745
    2. '                   ' → logprob: -5.380897045135498
    3. 'used' (adapté à ' used') → logprob: -7.755897045135498
    4. '               ' → logprob: -8.00589656829834
    5. '                ' → logprob: -8.38089656829834
    6. ' ' → logprob: -9.13089656829834
    7. '                    ' → logprob: -9.75589656829834
    8. '<|end|>' → logprob: -10.88089656829834
    9. '    ' → logprob: -11.50589656829834
    10. ' ' → logprob: -11.75589656829834

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.000017166137695
    3. ' [' → logprob: -15.000017166137695
    4. '```' → logprob: -15.750017166137695
    5. '[I' → logprob: -16.500017166137695
    6. 'i' → logprob: -17.375017166137695
    7. '`' → logprob: -18.250017166137695
    8. '\[' → logprob: -18.500017166137695
    9. '[u' → logprob: -19.250017166137695
    10. '[
' → logprob: -19.625017166137695

Token 119: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16390004754066467
    2. ']' → logprob: -2.288900136947632
    3. '=' → logprob: -3.038900136947632
    4. '[' → logprob: -6.788899898529053
    5. ' ]' → logprob: -8.288900375366211
    6. ']=' → logprob: -8.413900375366211
    7. '   ' → logprob: -9.163900375366211
    8. ')' → logprob: -9.413900375366211
    9. '=True' → logprob: -9.788900375366211
    10. ' ' → logprob: -11.038900375366211

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020697296131402254
    2. '=' → logprob: -6.25206995010376
    3. '=True' → logprob: -9.252069473266602
    4. '[' → logprob: -10.127069473266602
    5. 'True' → logprob: -13.502069473266602
    6. '=False' → logprob: -14.002069473266602
    7. ']' → logprob: -14.002069473266602
    8. ' True' → logprob: -14.377069473266602
    9. ')' → logprob: -15.127069473266602
    10. ' ' → logprob: -15.252069473266602

Token 121: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1602245420217514
    2. 'True' → logprob: -1.9102245569229126
    3. '(True' → logprob: -15.410224914550781
    4. '=True' → logprob: -15.785224914550781
    5. 'False' → logprob: -18.03522491455078
    6. '.True' → logprob: -18.03522491455078
    7. ' Tru' → logprob: -18.41022491455078
    8. ' ' → logprob: -18.53522491455078
    9. ' False' → logprob: -19.28522491455078
    10. ' ' → logprob: -19.41022491455078

Token 122: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22229215502738953
    2. '                    ' → logprob: -2.472292184829712
    3. '<|end|>' → logprob: -2.972292184829712
    4. ' ' → logprob: -3.597292184829712
    5. '                    
' → logprob: -4.597291946411133
    6. ' ' → logprob: -4.847291946411133
    7. '    ' → logprob: -5.597291946411133
    8. ' True' → logprob: -6.097291946411133
    9. ' 
' → logprob: -6.597291946411133
    10. '                ' → logprob: -6.722291946411133

Token 123: '                   ' (ID: 699)
  Prédit: '                    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                    ' → logprob: -0.6166713833808899
    2. '                   ' → logprob: -1.1166713237762451
    3. ' ' → logprob: -3.241671323776245
    4. ' if' → logprob: -3.491671323776245
    5. ' ' → logprob: -3.741671323776245
    6. '<|end|>' → logprob: -4.616671562194824
    7. ' return' → logprob: -5.241671562194824
    8. '                    
' → logprob: -5.241671562194824
    9. ' True' → logprob: -5.366671562194824
    10. '                ' → logprob: -5.991671562194824

Token 124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.313671737909317
    2. ' if' → logprob: -1.3136717081069946
    3. '                   ' → logprob: -7.813671588897705
    4. 'If' → logprob: -12.938672065734863
    5. '                       ' → logprob: -13.313672065734863
    6. '               ' → logprob: -13.813672065734863
    7. '           ' → logprob: -15.688672065734863
    8. '                    ' → logprob: -16.063671112060547
    9. '	if' → logprob: -16.313671112060547
    10. '```' → logprob: -16.438671112060547

Token 125: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -9.65101717156358e-05
    2. 'back' → logprob: -9.250096321105957
    3. '(back' → logprob: -15.000096321105957
    4. 'Back' → logprob: -18.750097274780273
    5. '	back' → logprob: -19.250097274780273
    6. '_back' → logprob: -19.375097274780273
    7. ' ' → logprob: -20.875097274780273
    8. ' ' → logprob: -21.250097274780273
    9. '.back' → logprob: -21.375097274780273
    10. 'b' → logprob: -21.625097274780273

Token 126: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -3.8889261304575484e-06
    2. '(track' → logprob: -13.750003814697266
    3. 'tracking' → logprob: -14.000003814697266
    4. 'rack' → logprob: -14.125003814697266
    5. 'trace' → logprob: -14.750003814697266
    6. 'back' → logprob: -15.375003814697266
    7. 'tracker' → logprob: -16.000003814697266
    8. '(' → logprob: -16.500003814697266
    9. 'pack' → logprob: -16.500003814697266
    10. 'tract' → logprob: -16.750003814697266

Token 127: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -12.87500286102295
    3. '(' → logprob: -15.12500286102295
    4. 'chain' → logprob: -16.625003814697266
    5. '(ch' → logprob: -17.625003814697266
    6. ' chain' → logprob: -18.000003814697266
    7. '.chain' → logprob: -18.375003814697266
    8. '(chunk' → logprob: -18.875003814697266
    9. '(code' → logprob: -19.125003814697266
    10. '((' → logprob: -19.250003814697266

Token 128: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008616935461759567
    2. '+' → logprob: -4.758616924285889
    3. '+[' → logprob: -13.508617401123047
    4. '+(' → logprob: -14.508617401123047
    5. ' ' → logprob: -15.758617401123047
    6. ' +
' → logprob: -16.008617401123047
    7. ')' → logprob: -16.633617401123047
    8. ' +(' → logprob: -16.883617401123047
    9. '[::-' → logprob: -17.008617401123047
    10. '[(' → logprob: -17.508617401123047

Token 129: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.6789137084269896e-05
    2. '[((' → logprob: -10.50003719329834
    3. ' [(' → logprob: -11.75003719329834
    4. '[' → logprob: -14.00003719329834
    5. '([(' → logprob: -15.00003719329834
    6. '[b' → logprob: -16.875036239624023
    7. '[
' → logprob: -19.875036239624023
    8. '   ' → logprob: -19.875036239624023
    9. '[[' → logprob: -20.125036239624023
    10. '[a' → logprob: -20.250036239624023

Token 130: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011490559205412865
    2. 'b' → logprob: -4.636490345001221
    3. ' (' → logprob: -6.386490345001221
    4. ' b' → logprob: -11.011490821838379
    5. '(' → logprob: -11.261490821838379
    6. '(a' → logprob: -12.011490821838379
    7. '   ' → logprob: -12.261490821838379
    8. '[b' → logprob: -12.636490821838379
    9. 'a' → logprob: -14.261490821838379
    10. ' ' → logprob: -14.261490821838379

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.787507714354433e-05
    2. ',a' → logprob: -10.12504768371582
    3. 'a' → logprob: -12.12504768371582
    4. ' ,' → logprob: -13.00004768371582
    5. ',
' → logprob: -17.50004768371582
    6. ' a' → logprob: -18.75004768371582
    7. '`,' → logprob: -18.87504768371582
    8. '‌,' → logprob: -19.00004768371582
    9. '_,' → logprob: -19.50004768371582
    10. '',' → logprob: -19.50004768371582

Token 132: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00017970333283301443
    2. ' a' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.000179290771484
    4. ' ' → logprob: -17.250179290771484
    5. '	a' → logprob: -17.875179290771484
    6. '(a' → logprob: -18.500179290771484
    7. ',' → logprob: -18.625179290771484
    8. '  ' → logprob: -18.625179290771484
    9. ',a' → logprob: -18.625179290771484
    10. '    ' → logprob: -18.750179290771484

Token 133: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.21806050837039948
    2. ']))' → logprob: -1.8430604934692383
    3. '])):
' → logprob: -3.5930604934692383
    4. ']' → logprob: -4.718060493469238
    5. ')' → logprob: -7.218060493469238
    6. ')])' → logprob: -8.468060493469238
    7. '))' → logprob: -9.468060493469238
    8. '])' → logprob: -10.468060493469238
    9. ']):' → logprob: -10.468060493469238
    10. '):' → logprob: -11.093060493469238

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003302477765828371
    2. '):
' → logprob: -5.753302574157715
    3. '                       ' → logprob: -9.753302574157715
    4. '                   ' → logprob: -10.128302574157715
    5. ')' → logprob: -11.753302574157715
    6. ':' → logprob: -11.753302574157715
    7. ''):' → logprob: -13.003302574157715
    8. '):

' → logprob: -13.128302574157715
    9. ')):' → logprob: -13.253302574157715
    10. '               ' → logprob: -13.628302574157715

Token 135: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0012934509431943297
    2. ' return' → logprob: -7.251293659210205
    3. 'return' → logprob: -7.626293659210205
    4. '<|end|>' → logprob: -9.626293182373047
    5. '                        ' → logprob: -12.001293182373047
    6. ':return' → logprob: -12.126293182373047
    7. '               ' → logprob: -12.501293182373047
    8. '                   ' → logprob: -12.876293182373047
    9. '                           ' → logprob: -12.876293182373047
    10. '                      ' → logprob: -13.126293182373047

Token 136: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4922485947608948
    2. 'return' (adapté à ' return') → logprob: -0.9922485947608948
    3. 'True' → logprob: -4.36724853515625
    4. ' True' → logprob: -5.24224853515625
    5. '                           ' → logprob: -10.99224853515625
    6. 'Return' → logprob: -12.49224853515625
    7. ':return' → logprob: -12.61724853515625
    8. '                               ' → logprob: -13.36724853515625
    9. '                       ' → logprob: -13.49224853515625
    10. '                   ' → logprob: -13.74224853515625

Token 137: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.704273118884885e-07
    2. ' True' → logprob: -14.250000953674316
    3. 'False' → logprob: -20.125
    4. '(True' → logprob: -21.0
    5. '=True' → logprob: -22.375
    6. 'Yes' → logprob: -23.875
    7. 'true' → logprob: -24.75
    8. '_true' → logprob: -25.625
    9. '.True' → logprob: -25.625
    10. '**' → logprob: -26.625

Token 138: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005887754959985614
    2. '               ' → logprob: -7.500588893890381
    3. '                       ' → logprob: -11.625588417053223
    4. '   ' → logprob: -11.625588417053223
    5. '           ' → logprob: -12.125588417053223
    6. '       ' → logprob: -13.000588417053223
    7. ' used' → logprob: -13.375588417053223
    8. '                    ' → logprob: -13.375588417053223
    9. '                  ' → logprob: -13.750588417053223
    10. '                    
' → logprob: -13.875588417053223

Token 139: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013535681646317244
    2. '               ' → logprob: -6.626353740692139
    3. '           ' → logprob: -12.12635326385498
    4. '                       ' → logprob: -12.12635326385498
    5. '   ' → logprob: -12.25135326385498
    6. '                    ' → logprob: -13.12635326385498
    7. 'used' → logprob: -13.37635326385498
    8. '                 ' → logprob: -13.50135326385498
    9. '                  ' → logprob: -13.62635326385498
    10. '                ' → logprob: -13.75135326385498

Token 140: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.4748043715953827
    2. ' used' → logprob: -0.9748044013977051
    3. '   ' → logprob: -8.099803924560547
    4. '                   ' → logprob: -8.224803924560547
    5. '               ' → logprob: -8.974803924560547
    6. 'Used' → logprob: -11.224803924560547
    7. '_used' → logprob: -12.599803924560547
    8. '.used' → logprob: -12.599803924560547
    9. ' ' → logprob: -12.724803924560547
    10. '           ' → logprob: -13.474803924560547

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.375
    3. '[' → logprob: -16.5
    4. 'i' → logprob: -17.0
    5. 'used' → logprob: -17.0
    6. ' [' → logprob: -18.625
    7. '[I' → logprob: -18.75
    8. 'Used' → logprob: -19.75
    9. '[s' → logprob: -19.875
    10. '`' → logprob: -20.0

Token 142: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014290672726929188
    2. ']' → logprob: -4.764290809631348
    3. ' =' → logprob: -5.264290809631348
    4. '[i' → logprob: -8.889290809631348
    5. '=False' → logprob: -9.139290809631348
    6. '[' → logprob: -9.389290809631348
    7. 'False' → logprob: -9.514290809631348
    8. ']=' → logprob: -9.514290809631348
    9. '   ' → logprob: -12.639290809631348
    10. '=True' → logprob: -13.389290809631348

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3144740164279938
    2. ' =' → logprob: -1.3144739866256714
    3. '=False' → logprob: -6.939474105834961
    4. 'False' → logprob: -8.439474105834961
    5. ' False' → logprob: -10.814474105834961
    6. '[' → logprob: -12.814474105834961
    7. '=True' → logprob: -13.189474105834961
    8. ']' → logprob: -13.814474105834961
    9. '(False' → logprob: -14.189474105834961
    10. ']=' → logprob: -16.93947410583496

Token 144: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -18.50020408630371
    4. '_false' → logprob: -19.87520408630371
    5. '.False' → logprob: -20.12520408630371
    6. '=False' → logprob: -20.25020408630371
    7. 'F' → logprob: -22.75020408630371
    8. 'True' → logprob: -23.37520408630371
    9. 'false' → logprob: -23.62520408630371
    10. '_FALSE' → logprob: -23.62520408630371

Token 145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008234173059463501
    2. '   ' → logprob: -5.258234024047852
    3. '	' → logprob: -6.883234024047852
    4. '           ' → logprob: -8.008234024047852
    5. '        
' → logprob: -8.008234024047852
    6. '\n' → logprob: -8.883234024047852
    7. '    
' → logprob: -9.008234024047852
    8. '               ' → logprob: -9.008234024047852
    9. '\t' → logprob: -9.008234024047852
    10. '	return' → logprob: -9.008234024047852

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014048205688595772
    2. '   ' → logprob: -4.389048099517822
    3. '	' → logprob: -7.639048099517822
    4. '           ' → logprob: -8.13904857635498
    5. '        
' → logprob: -9.13904857635498
    6. '               ' → logprob: -9.26404857635498
    7. '	return' → logprob: -9.51404857635498
    8. '    
' → logprob: -9.88904857635498
    9. '\t' → logprob: -10.13904857635498
    10. ' return' → logprob: -10.13904857635498

Token 147: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2404133677482605
    2. '   ' → logprob: -1.6154134273529053
    3. 'return' (adapté à ' return') → logprob: -4.490413188934326
    4. ' return' → logprob: -6.490413188934326
    5. '
' → logprob: -6.865413188934326
    6. '           ' → logprob: -7.115413188934326
    7. 'False' → logprob: -9.615413665771484
    8. '	return' → logprob: -9.740413665771484
    9. '     ' → logprob: -10.240413665771484
    10. '```' → logprob: -10.615413665771484

Token 148: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -19.750911712646484
    4. 'false' → logprob: -22.625911712646484
    5. '=False' → logprob: -23.250911712646484
    6. '_false' → logprob: -23.250911712646484
    7. 'True' → logprob: -24.875911712646484
    8. '.False' → logprob: -25.250911712646484
    9. '   ' → logprob: -25.500911712646484
    10. 'None' → logprob: -25.625911712646484

Token 149: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02129301428794861
    2. '    
' → logprob: -4.5212931632995605
    3. '
' → logprob: -5.0212931632995605
    4. ' 
' → logprob: -6.3962931632995605
    5. '  
' → logprob: -7.2712931632995605
    6. '<|end|>' → logprob: -8.146292686462402
    7. ' return' → logprob: -8.271292686462402
    8. '  ' → logprob: -8.271292686462402
    9. '   
' → logprob: -9.021292686462402
    10. ' ' → logprob: -9.146292686462402

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03282848745584488
    2. '    
' → logprob: -4.407828330993652
    3. '
' → logprob: -4.532828330993652
    4. ' 
' → logprob: -5.282828330993652
    5. '  
' → logprob: -6.782828330993652
    6. ' return' → logprob: -6.907828330993652
    7. 'return' → logprob: -7.282828330993652
    8. ' ' → logprob: -7.657828330993652
    9. 'r' → logprob: -8.407828330993652
    10. '	return' → logprob: -8.782828330993652

Token 151: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025907461531460285
    2. 'return' → logprob: -8.500259399414062
    3. ' for' → logprob: -10.125259399414062
    4. '   ' → logprob: -11.625259399414062
    5. 'if' → logprob: -12.000259399414062
    6. '    
' → logprob: -15.625259399414062
    7. '#' (adapté à ' #') → logprob: -15.750259399414062
    8. '
' → logprob: -17.125259399414062
    9. '	for' → logprob: -17.250259399414062
    10. ' return' → logprob: -17.500259399414062

Token 152: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10763517767190933
    2. 'if' → logprob: -2.607635259628296
    3. 'for' → logprob: -3.857635259628296
    4. ' return' → logprob: -5.232635021209717
    5. '#' → logprob: -6.982635021209717
    6. ' if' → logprob: -7.357635021209717
    7. ' for' → logprob: -8.732635498046875
    8. '   ' → logprob: -8.982635498046875
    9. 'Return' → logprob: -11.607635498046875
    10. 'result' → logprob: -12.482635498046875

Token 153: ' each' (ID: 2454)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04687895253300667
    2. ':
' → logprob: -3.1718790531158447
    3. ' each' → logprob: -6.671878814697266
    4. ' to' → logprob: -6.671878814697266
    5. ' all' → logprob: -7.796878814697266
    6. ' for' → logprob: -8.671878814697266
    7. 'each' → logprob: -8.921878814697266
    8. 'to' → logprob: -9.046878814697266
    9. 'for' → logprob: -9.171878814697266
    10. ' a' → logprob: -9.671878814697266

Token 154: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.25589942932128906
    2. ' domino' → logprob: -1.505899429321289
    3. 'for' → logprob: -6.755899429321289
    4. ' i' → logprob: -7.130899429321289
    5. 'i' → logprob: -7.255899429321289
    6. ' for' → logprob: -7.755899429321289
    7. '(dom' → logprob: -8.130899429321289
    8. ' dom' → logprob: -8.380899429321289
    9. '```' → logprob: -9.755899429321289
    10. '_dom' → logprob: -10.005899429321289

Token 155: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06731222569942474
    2. '<|end|>' → logprob: -3.317312240600586
    3. '   ' → logprob: -4.317312240600586
    4. 'for' → logprob: -4.567312240600586
    5. '<|end|>' → logprob: -5.817312240600586
    6. '	for' → logprob: -7.567312240600586
    7. '
' → logprob: -7.692312240600586
    8. '    
' → logprob: -7.942312240600586
    9. ' in' → logprob: -8.067312240600586
    10. '  
' → logprob: -9.317312240600586

Token 156: ' starting' (ID: 8601)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.602459192276001
    2. ' starting' → logprob: -1.852459192276001
    3. 'the' → logprob: -2.102459192276001
    4. 'starting' → logprob: -2.352459192276001
    5. 'start' → logprob: -3.227459192276001
    6. 'chain' → logprob: -4.227458953857422
    7. 'first' → logprob: -4.977458953857422
    8. ' first' → logprob: -5.352458953857422
    9. '[(' → logprob: -5.477458953857422
    10. ' a' → logprob: -5.727458953857422

Token 157: ' piece' (ID: 9047)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.743543267250061
    2. ' domino' → logprob: -1.618543267250061
    3. ' for' → logprob: -2.6185431480407715
    4. 'dom' → logprob: -2.7435431480407715
    5. 'point' → logprob: -2.8685431480407715
    6. '_' → logprob: -3.2435431480407715
    7. '<|end|>' → logprob: -3.9935431480407715
    8. 'for' → logprob: -4.4935431480407715
    9. ' token' → logprob: -4.4935431480407715
    10. '   ' → logprob: -4.8685431480407715

Token 158: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08379263430833817
    2. ' for' → logprob: -2.9587926864624023
    3. '   ' → logprob: -4.083792686462402
    4. 'for' → logprob: -5.083792686462402
    5. '<|end|>' → logprob: -5.958792686462402
    6. '    
' → logprob: -6.208792686462402
    7. '  
' → logprob: -7.708792686462402
    8. ' 
' → logprob: -8.833792686462402
    9. '	for' → logprob: -9.208792686462402
    10. '<|end|>' → logprob: -9.458792686462402

Token 159: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.5741841793060303
    2. ' both' → logprob: -1.4491841793060303
    3. 'chain' → logprob: -3.0741841793060303
    4. 'for' → logprob: -3.3241841793060303
    5. '[(' → logprob: -3.8241841793060303
    6. 'a' → logprob: -4.199184417724609
    7. '(' → logprob: -4.324184417724609
    8. 'each' → logprob: -4.449184417724609
    9. ' chain' → logprob: -4.699184417724609
    10. '(a' → logprob: -4.699184417724609

Token 160: ' orientations' (ID: 149573)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.10211426764726639
    2. ' orientations' → logprob: -2.352114200592041
    3. '(a' → logprob: -7.102114200592041
    4. 'or' → logprob: -8.1021146774292
    5. '(' → logprob: -8.4771146774292
    6. 's' → logprob: -9.2271146774292
    7. 'a' → logprob: -9.2271146774292
    8. 'ends' → logprob: -9.4771146774292
    9. 'orders' → logprob: -9.7271146774292
    10. 'dire' → logprob: -10.3521146774292

Token 161: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09455006569623947
    2. ' for' → logprob: -3.219550132751465
    3. '   ' → logprob: -3.594550132751465
    4. 'for' → logprob: -3.969550132751465
    5. '    
' → logprob: -6.094550132751465
    6. '  
' → logprob: -7.344550132751465
    7. '<|end|>' → logprob: -8.219550132751465
    8. '\n' → logprob: -8.594550132751465
    9. '	for' → logprob: -8.594550132751465
    10. ' 
' → logprob: -9.094550132751465

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42117998003959656
    2. '
' → logprob: -1.546180009841919
    3. ' for' → logprob: -2.546180009841919
    4. 'for' → logprob: -3.046180009841919
    5. '    
' → logprob: -5.42117977142334
    6. '  
' → logprob: -9.17117977142334
    7. '	for' → logprob: -9.54617977142334
    8. ' 
' → logprob: -10.04617977142334
    9. '```' → logprob: -10.04617977142334
    10. '   
' → logprob: -10.29617977142334

Token 163: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3422519266605377
    2. ' for' → logprob: -1.3422518968582153
    3. '   ' → logprob: -3.592252016067505
    4. '
' → logprob: -7.092251777648926
    5. '    
' → logprob: -8.717251777648926
    6. '	for' → logprob: -11.217251777648926
    7. ' 
' → logprob: -11.342251777648926
    8. '```' → logprob: -11.967251777648926
    9. '  
' → logprob: -12.342251777648926
    10. ' ' → logprob: -12.967251777648926

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889506965875626
    2. ' i' → logprob: -2.578895092010498
    3. '	i' → logprob: -13.07889461517334
    4. ' ' → logprob: -13.45389461517334
    5. '   ' → logprob: -13.95389461517334
    6. ' ' → logprob: -15.20389461517334
    7. '```' → logprob: -15.70389461517334
    8. '  ' → logprob: -15.70389461517334
    9. 'start' → logprob: -16.328895568847656
    10. '`' → logprob: -16.453895568847656

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026451589539647102
    2. 'in' → logprob: -3.651451587677002
    3. ' ' → logprob: -8.90145206451416
    4. ',' → logprob: -12.27645206451416
    5. '	in' → logprob: -12.90145206451416
    6. '<|end|>' → logprob: -13.27645206451416
    7. ' i' → logprob: -13.90145206451416
    8. '  ' → logprob: -14.15145206451416
    9. 'n' → logprob: -14.65145206451416
    10. '.' → logprob: -14.65145206451416

Token 166: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858827963471413
    2. ' range' → logprob: -3.048588275909424
    3. '(range' → logprob: -14.173588752746582
    4. '	range' → logprob: -15.423588752746582
    5. '_range' → logprob: -18.173587799072266
    6. 'ange' → logprob: -18.673587799072266
    7. ' ' → logprob: -19.173587799072266
    8. '.range' → logprob: -19.298587799072266
    9. ' xrange' → logprob: -19.673587799072266
    10. 'in' → logprob: -19.798587799072266

Token 167: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018288422375917435
    2. 'n' → logprob: -4.018288612365723
    3. '(' → logprob: -9.143288612365723
    4. ' n' → logprob: -10.643288612365723
    5. '(len' → logprob: -11.893288612365723
    6. ' (' → logprob: -14.643288612365723
    7. '	n' → logprob: -16.018287658691406
    8. ')n' → logprob: -16.143287658691406
    9. '   ' → logprob: -16.893287658691406
    10. ',n' → logprob: -17.018287658691406

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000888471957296133
    2. '):
' → logprob: -7.125888347625732
    3. ':' → logprob: -10.25088882446289
    4. ' ):' → logprob: -10.25088882446289
    5. ')' → logprob: -11.25088882446289
    6. '}:' → logprob: -16.12588882446289
    7. '   ' → logprob: -16.25088882446289
    8. '):

' → logprob: -16.50088882446289
    9. '):
' → logprob: -16.50088882446289
    10. ',' → logprob: -17.50088882446289

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011874194256961346
    2. '   ' → logprob: -5.011874198913574
    3. ' used' → logprob: -5.511874198913574
    4. ' if' → logprob: -7.511874198913574
    5. ',' → logprob: -8.886874198913574
    6. '    ' → logprob: -9.386874198913574
    7. ' ' → logprob: -9.886874198913574
    8. ':' → logprob: -9.886874198913574
    9. '        
' → logprob: -10.011874198913574
    10. '<|end|>' → logprob: -10.261874198913574

Token 170: ' a' (ID: 261)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.31938186287879944
    2. ' used' → logprob: -1.444381833076477
    3. '   ' → logprob: -3.6943819522857666
    4. 'a' (adapté à ' a') → logprob: -4.8193817138671875
    5. ' a' → logprob: -6.4443817138671875
    6. ' for' → logprob: -6.4443817138671875
    7. 'for' → logprob: -6.8193817138671875
    8. '```' → logprob: -9.444381713867188
    9. 'if' → logprob: -9.694381713867188
    10. ' if' → logprob: -9.819381713867188

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.73314929776825e-05
    2. '=' → logprob: -10.00008773803711
    3. ',b' → logprob: -10.25008773803711
    4. 'b' → logprob: -13.00008773803711
    5. ' ,' → logprob: -13.00008773803711
    6. ' =' → logprob: -14.12508773803711
    7. ',
' → logprob: -15.12508773803711
    8. ')' → logprob: -15.12508773803711
    9. '<|end|>' → logprob: -16.00008773803711
    10. 'a' → logprob: -16.12508773803711

Token 172: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804149478673935
    2. ' b' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -16.413042068481445
    4. ' ' → logprob: -17.413042068481445
    5. '_b' → logprob: -19.163042068481445
    6. '    ' → logprob: -19.288042068481445
    7. '   ' → logprob: -19.413042068481445
    8. '_' → logprob: -19.538042068481445
    9. '	b' → logprob: -20.288042068481445
    10. ' ' → logprob: -20.413042068481445

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144745707511902
    2. '=' → logprob: -1.7014474868774414
    3. ')' → logprob: -11.201447486877441
    4. '<|end|>' → logprob: -11.201447486877441
    5. ',' → logprob: -12.951447486877441
    6. '   ' → logprob: -13.326447486877441
    7. ' =)' → logprob: -13.826447486877441
    8. ' ' → logprob: -13.951447486877441
    9. ' =
' → logprob: -15.326447486877441
    10. '<|end|>' → logprob: -15.451447486877441

Token 174: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.1602490097284317
    2. ' domino' → logprob: -1.9102489948272705
    3. ' dom' → logprob: -11.035248756408691
    4. '(dom' → logprob: -12.035248756408691
    5. '_dom' → logprob: -13.910248756408691
    6. '```' → logprob: -15.160248756408691
    7. 'domin' → logprob: -15.285248756408691
    8. '   ' → logprob: -15.285248756408691
    9. ' Domino' → logprob: -15.410248756408691
    10. '/dom' → logprob: -15.535248756408691

Token 175: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.7697225252486533e-06
    2. 'e' → logprob: -13.625003814697266
    3. '```' → logprob: -14.000003814697266
    4. '[i' → logprob: -14.875003814697266
    5. '[' → logprob: -15.000003814697266
    6. 'ues' → logprob: -15.625003814697266
    7. ']' → logprob: -16.000003814697266
    8. 'oes' → logprob: -16.000003814697266
    9. 's' → logprob: -16.375003814697266
    10. '[
' → logprob: -16.500003814697266

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '[I' → logprob: -17.5
    4. 'i' → logprob: -18.0
    5. '[
' → logprob: -18.25
    6. '```' → logprob: -18.625
    7. '(i' → logprob: -19.5
    8. '\[' → logprob: -19.875
    9. '   ' → logprob: -20.0
    10. ' [' → logprob: -20.0

Token 177: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14414817094802856
    2. ')
' → logprob: -2.269148111343384
    3. ']' → logprob: -3.644148111343384
    4. ']
' → logprob: -5.394148349761963
    5. '       ' → logprob: -10.019147872924805
    6. ')
' → logprob: -10.394147872924805
    7. '   ' → logprob: -10.519147872924805
    8. '):
' → logprob: -10.519147872924805
    9. ')]' → logprob: -12.269147872924805
    10. ']
' → logprob: -12.644147872924805

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03269258514046669
    2. ' used' → logprob: -4.0326924324035645
    3. '   ' → logprob: -4.6576924324035645
    4. '
' → logprob: -5.5326924324035645
    5. 'used' → logprob: -7.7826924324035645
    6. '        
' → logprob: -8.657692909240723
    7. '    
' → logprob: -8.782692909240723
    8. '<|end|>' → logprob: -9.282692909240723
    9. '```' → logprob: -9.657692909240723
    10. ',' → logprob: -10.657692909240723

Token 179: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.47984251379966736
    2. 'used' (adapté à ' used') → logprob: -0.9798425436019897
    3. '   ' → logprob: -5.604842662811279
    4. '       ' → logprob: -6.229842662811279
    5. '```' → logprob: -10.229842185974121
    6. '
' → logprob: -10.979842185974121
    7. ' for' → logprob: -11.479842185974121
    8. '        
' → logprob: -11.729842185974121
    9. 'for' → logprob: -12.104842185974121
    10. '    ' → logprob: -12.229842185974121

Token 180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -11.125015258789062
    3. '[I' → logprob: -14.875015258789062
    4. ' =' → logprob: -15.750015258789062
    5. '=' → logprob: -16.000015258789062
    6. ' [' → logprob: -16.625015258789062
    7. '[:]' → logprob: -17.375015258789062
    8. '[s' → logprob: -17.875015258789062
    9. '[a' → logprob: -18.125015258789062
    10. '\[' → logprob: -18.375015258789062

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05243723466992378
    2. '=' → logprob: -3.5524373054504395
    3. ' =' → logprob: -3.8024373054504395
    4. ']=' → logprob: -9.302436828613281
    5. ' ]' → logprob: -10.927436828613281
    6. ')' → logprob: -12.302436828613281
    7. '=True' → logprob: -14.052436828613281
    8. '[' → logprob: -14.802436828613281
    9. ' ' → logprob: -16.05243682861328
    10. 's' → logprob: -17.42743682861328

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. '=True' → logprob: -14.724077224731445
    4. '＝' → logprob: -18.724077224731445
    5. '=False' → logprob: -18.849077224731445
    6. ')' → logprob: -18.974077224731445
    7. ' ' → logprob: -19.099077224731445
    8. '[' → logprob: -20.224077224731445
    9. '=}' → logprob: -20.349077224731445
    10. '=

' → logprob: -20.474077224731445

Token 183: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -20.126928329467773
    4. 'Tr' → logprob: -20.501928329467773
    5. 'False' → logprob: -21.001928329467773
    6. '=True' → logprob: -22.126928329467773
    7. '.True' → logprob: -23.501928329467773
    8. 'true' → logprob: -24.126928329467773
    9. 'TRUE' → logprob: -24.626928329467773
    10. ' Tru' → logprob: -24.626928329467773

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020546795800328255
    2. ' if' → logprob: -4.270546913146973
    3. 'if' → logprob: -5.520546913146973
    4. '
' → logprob: -6.395546913146973
    5. '<|end|>' → logprob: -8.020546913146973
    6. '        
' → logprob: -8.770546913146973
    7. '   ' → logprob: -9.395546913146973
    8. '	if' → logprob: -9.770546913146973
    9. ' ' → logprob: -10.645546913146973
    10. '	' → logprob: -11.895546913146973

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1554131656885147
    2. '
' → logprob: -2.4054131507873535
    3. 'if' → logprob: -3.5304131507873535
    4. ' if' → logprob: -3.9054131507873535
    5. '<|end|>' → logprob: -6.1554131507873535
    6. '        
' → logprob: -6.9054131507873535
    7. '   ' → logprob: -8.280413627624512
    8. '	if' → logprob: -8.655413627624512
    9. ' for' → logprob: -9.280413627624512
    10. ' 
' → logprob: -9.280413627624512

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32658255100250244
    2. ' if' → logprob: -1.3265825510025024
    3. '       ' → logprob: -4.326582431793213
    4. '	if' → logprob: -12.201582908630371
    5. '   ' → logprob: -12.326582908630371
    6. 'If' → logprob: -12.701582908630371
    7. 'for' → logprob: -12.701582908630371
    8. '<|end|>' → logprob: -13.451582908630371
    9. ' ' → logprob: -14.076582908630371
    10. ' for' → logprob: -14.201582908630371

Token 187: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.038050100207328796
    2. 'back' → logprob: -3.2880501747131348
    3. ' can' → logprob: -11.788049697875977
    4. 'can' → logprob: -14.038049697875977
    5. '   ' → logprob: -16.038049697875977
    6. '(back' → logprob: -16.413049697875977
    7. '	back' → logprob: -17.663049697875977
    8. 'Back' → logprob: -17.788049697875977
    9. '
' → logprob: -17.788049697875977
    10. 'b' → logprob: -17.913049697875977

Token 188: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -8.895480277715251e-06
    2. '_track' → logprob: -12.000008583068848
    3. 'back' → logprob: -13.500008583068848
    4. '(track' → logprob: -14.750008583068848
    5. 'tracking' → logprob: -15.000008583068848
    6. 'tr' → logprob: -16.375009536743164
    7. 'trace' → logprob: -16.875009536743164
    8. 'tract' → logprob: -17.000009536743164
    9. 'rack' → logprob: -17.000009536743164
    10. ' track' → logprob: -17.000009536743164

Token 189: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.00020926215802319348
    2. ' (' → logprob: -9.125208854675293
    3. '([' → logprob: -9.625208854675293
    4. '(' → logprob: -10.625208854675293
    5. '[(' → logprob: -12.250208854675293
    6. '((' → logprob: -13.250208854675293
    7. '([]' → logprob: -14.125208854675293
    8. '([
' → logprob: -14.250208854675293
    9. '(chain' → logprob: -14.750208854675293
    10. '([{' → logprob: -15.250208854675293

Token 190: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002622894535306841
    2. '(a' → logprob: -8.250262260437012
    3. ' a' → logprob: -14.000262260437012
    4. ' (' → logprob: -16.125263214111328
    5. ''a' → logprob: -17.750263214111328
    6. '   ' → logprob: -17.875263214111328
    7. '(' → logprob: -17.875263214111328
    8. '[a' → logprob: -18.000263214111328
    9. '	a' → logprob: -18.625263214111328
    10. 'а' → logprob: -18.875263214111328

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.220573363360018e-05
    2. ',b' → logprob: -9.750082015991211
    3. ' ,' → logprob: -10.750082015991211
    4. ',
' → logprob: -13.250082015991211
    5. ')' → logprob: -16.00008201599121
    6. ')])' → logprob: -16.12508201599121
    7. ',

' → logprob: -16.25008201599121
    8. '),' → logprob: -17.00008201599121
    9. '‌,' → logprob: -17.00008201599121
    10. ',)' → logprob: -17.25008201599121

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. ' ' → logprob: -20.251928329467773
    4. '   ' → logprob: -22.001928329467773
    5. '	b' → logprob: -22.876928329467773
    6. ')b' → logprob: -23.001928329467773
    7. '  ' → logprob: -24.251928329467773
    8. '_b' → logprob: -24.626928329467773
    9. '    ' → logprob: -24.876928329467773
    10. '>b' → logprob: -25.126928329467773

Token 193: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.013459832407534122
    2. ')])' → logprob: -4.6384596824646
    3. ')' → logprob: -5.7634596824646
    4. ']):' → logprob: -8.013460159301758
    5. '):' → logprob: -9.138460159301758
    6. '])' → logprob: -9.263460159301758
    7. ']))' → logprob: -11.263460159301758
    8. '))' → logprob: -12.763460159301758
    9. ']' → logprob: -13.263460159301758
    10. '])]' → logprob: -13.513460159301758

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023460695520043373
    2. '):
' → logprob: -3.773460626602173
    3. ')' → logprob: -8.648460388183594
    4. '       ' → logprob: -10.773460388183594
    5. ' ):' → logprob: -11.773460388183594
    6. ':' → logprob: -11.898460388183594
    7. '):

' → logprob: -13.523460388183594
    8. '):
' → logprob: -13.523460388183594
    9. '   ' → logprob: -14.148460388183594
    10. ' ):
' → logprob: -15.523460388183594

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010716310935094953
    2. 'return' → logprob: -7.376071453094482
    3. ' return' → logprob: -7.876071453094482
    4. '
' → logprob: -9.75107192993164
    5. '               ' → logprob: -12.87607192993164
    6. '            
' → logprob: -14.00107192993164
    7. '          ' → logprob: -14.12607192993164
    8. '       ' → logprob: -14.37607192993164
    9. ':return' → logprob: -14.50107192993164
    10. ':
' → logprob: -15.00107192993164

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33901485800743103
    2. ' return' → logprob: -1.8390148878097534
    3. '           ' → logprob: -2.089014768600464
    4. '               ' → logprob: -5.839015007019043
    5. '       ' → logprob: -6.339015007019043
    6. ':return' → logprob: -10.839015007019043
    7. '   ' → logprob: -11.089015007019043
    8. '
' → logprob: -11.214015007019043
    9. '	return' → logprob: -11.964015007019043
    10. '```' → logprob: -12.339015007019043

Token 197: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -21.625709533691406
    4. 'False' → logprob: -23.500709533691406
    5. '=True' → logprob: -23.750709533691406
    6. '"' → logprob: -23.750709533691406
    7. '   ' → logprob: -24.000709533691406
    8. 'true' → logprob: -25.125709533691406
    9. 'TRUE' → logprob: -25.500709533691406
    10. 'Yes' → logprob: -26.500709533691406

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38712385296821594
    2. '
' → logprob: -1.1371238231658936
    3. '        
' → logprob: -8.887124061584473
    4. '   ' → logprob: -9.887124061584473
    5. ' used' → logprob: -10.887124061584473
    6. '    
' → logprob: -11.012124061584473
    7. ' 
' → logprob: -11.887124061584473
    8. 'used' → logprob: -12.012124061584473
    9. '
' → logprob: -12.262124061584473
    10. '<|end|>' → logprob: -12.262124061584473

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023643479216843843
    2. '
' → logprob: -6.252364158630371
    3. '   ' → logprob: -7.752364158630371
    4. ' used' → logprob: -13.252364158630371
    5. '        
' → logprob: -13.752364158630371
    6. '           ' → logprob: -14.252364158630371
    7. '     ' → logprob: -14.252364158630371
    8. 'used' → logprob: -14.502364158630371
    9. '    
' → logprob: -14.877364158630371
    10. '<|end|>' → logprob: -15.627364158630371

Token 200: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.566364049911499
    2. ' used' → logprob: -1.441364049911499
    3. 'used' → logprob: -1.691364049911499
    4. '   ' → logprob: -4.566364288330078
    5. '
' → logprob: -6.816364288330078
    6. ' ' → logprob: -11.191364288330078
    7. '        
' → logprob: -11.816364288330078
    8. '     ' → logprob: -12.066364288330078
    9. '.used' → logprob: -12.441364288330078
    10. '    
' → logprob: -12.816364288330078

Token 201: ' back' (ID: 1602)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.6423189043998718
    2. ' not' → logprob: -0.8923189043998718
    3. 'used' → logprob: -3.2673189640045166
    4. ' b' → logprob: -4.2673187255859375
    5. 'not' → logprob: -4.5173187255859375
    6. 'b' → logprob: -7.3923187255859375
    7. ' can' → logprob: -8.392318725585938
    8. ' a' → logprob: -9.517318725585938
    9. ' ' → logprob: -9.642318725585938
    10. ' ' → logprob: -10.142318725585938

Token 202: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.048561934381723404
    2. 'used' → logprob: -3.4235620498657227
    3. 'ack' → logprob: -4.548562049865723
    4. '[i' → logprob: -6.798562049865723
    5. 'rack' → logprob: -6.798562049865723
    6. 'atch' → logprob: -7.298562049865723
    7. 'tracked' → logprob: -7.923562049865723
    8. 'acked' → logprob: -8.798562049865723
    9. '[' → logprob: -9.173562049865723
    10. 'ind' → logprob: -9.423562049865723

Token 203: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -2.3557529857498594e-05
    2. '([' → logprob: -10.87502384185791
    3. '[(' → logprob: -12.50002384185791
    4. '([]' → logprob: -15.25002384185791
    5. '((' → logprob: -15.62502384185791
    6. '([[' → logprob: -16.375022888183594
    7. ' (' → logprob: -16.500022888183594
    8. '({' → logprob: -16.500022888183594
    9. '([{' → logprob: -16.875022888183594
    10. '([
' → logprob: -17.000022888183594

Token 204: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000273136975010857
    2. '(b' → logprob: -8.250272750854492
    3. ' b' → logprob: -11.375272750854492
    4. '   ' → logprob: -15.750272750854492
    5. ' (' → logprob: -16.375272750854492
    6. '[b' → logprob: -16.500272750854492
    7. '	b' → logprob: -17.375272750854492
    8. ')b' → logprob: -17.750272750854492
    9. '  ' → logprob: -19.000272750854492
    10. '    ' → logprob: -19.250272750854492

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001319063303526491
    2. ',a' → logprob: -9.250131607055664
    3. ' ,' → logprob: -10.500131607055664
    4. 'a' → logprob: -11.750131607055664
    5. ' a' → logprob: -15.750131607055664
    6. '‌,' → logprob: -16.500131607055664
    7. ',
' → logprob: -17.000131607055664
    8. '`,' → logprob: -17.250131607055664
    9. '',' → logprob: -17.375131607055664
    10. '),' → logprob: -17.500131607055664

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033546582562848926
    2. ' a' → logprob: -8.000335693359375
    3. '	a' → logprob: -20.875335693359375
    4. '_a' → logprob: -21.375335693359375
    5. ',a' → logprob: -21.500335693359375
    6. ''a' → logprob: -21.750335693359375
    7. ' ' → logprob: -22.375335693359375
    8. '>a' → logprob: -22.500335693359375
    9. ')a' → logprob: -22.750335693359375
    10. '[a' → logprob: -22.875335693359375

Token 207: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00970203336328268
    2. ']):' → logprob: -4.759702205657959
    3. '])' → logprob: -7.634702205657959
    4. ')])' → logprob: -7.884702205657959
    5. ')' → logprob: -9.3847017288208
    6. ']' → logprob: -9.8847017288208
    7. ']))' → logprob: -10.1347017288208
    8. '):' → logprob: -10.3847017288208
    9. '])]' → logprob: -11.6347017288208
    10. ']]' → logprob: -11.8847017288208

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2563146650791168
    2. '):
' → logprob: -1.5063146352767944
    3. '       ' → logprob: -5.506314754486084
    4. ')' → logprob: -8.381314277648926
    5. '):
' → logprob: -10.756314277648926
    6. '           ' → logprob: -11.381314277648926
    7. ':' → logprob: -11.631314277648926
    8. ')):' → logprob: -11.756314277648926
    9. '):

' → logprob: -12.006314277648926
    10. '   ' → logprob: -12.006314277648926

Token 209: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12778286635875702
    2. '           ' → logprob: -2.7527828216552734
    3. ' used' → logprob: -3.7527828216552734
    4. 'False' → logprob: -4.502782821655273
    5. ' True' → logprob: -4.877782821655273
    6. 'True' → logprob: -5.252782821655273
    7. ' False' → logprob: -5.377782821655273
    8. '   ' → logprob: -6.627782821655273
    9. 'used' → logprob: -6.752782821655273
    10. '):
' → logprob: -7.627782821655273

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10284677892923355
    2. ' return' → logprob: -2.35284686088562
    3. 'used' → logprob: -6.227846622467041
    4. ' used' → logprob: -7.352846622467041
    5. '       ' → logprob: -11.2278470993042
    6. '   ' → logprob: -12.1028470993042
    7. '           ' → logprob: -13.4778470993042
    8. 'True' → logprob: -14.1028470993042
    9. ' True' → logprob: -14.7278470993042
    10. '```' → logprob: -15.3528470993042

Token 211: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. 'False' → logprob: -18.626502990722656
    4. '(True' → logprob: -21.501502990722656
    5. 'used' → logprob: -22.876502990722656
    6. ' ' → logprob: -23.001502990722656
    7. '=True' → logprob: -23.001502990722656
    8. 'true' → logprob: -23.251502990722656
    9. '```' → logprob: -23.251502990722656
    10. '
' → logprob: -23.876502990722656

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002503601834177971
    2. '
' → logprob: -6.127503395080566
    3. '   ' → logprob: -8.127503395080566
    4. ' used' → logprob: -11.752503395080566
    5. '        
' → logprob: -12.002503395080566
    6. '<|end|>' → logprob: -13.002503395080566
    7. 'used' → logprob: -13.377503395080566
    8. '    
' → logprob: -13.502503395080566
    9. '```' → logprob: -13.752503395080566
    10. '  
' → logprob: -14.752503395080566

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011069540778407827
    2. '   ' → logprob: -9.250110626220703
    3. '
' → logprob: -11.500110626220703
    4. ' used' → logprob: -13.250110626220703
    5. 'used' → logprob: -13.625110626220703
    6. '           ' → logprob: -14.250110626220703
    7. '```' → logprob: -14.875110626220703
    8. '<|end|>' → logprob: -15.500110626220703
    9. '        
' → logprob: -16.500110626220703
    10. '[' → logprob: -16.875110626220703

Token 214: ' used' (ID: 2061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004054298158735037
    2. 'used' (adapté à ' used') → logprob: -6.254054069519043
    3. '   ' → logprob: -6.504054069519043
    4. ' used' → logprob: -7.379054069519043
    5. '     ' → logprob: -14.254054069519043
    6. '
' → logprob: -14.629054069519043
    7. ' ' → logprob: -15.254054069519043
    8. '      ' → logprob: -15.879054069519043
    9. '           ' → logprob: -16.00405502319336
    10. '```' → logprob: -16.75405502319336

Token 215: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '[I' → logprob: -13.75000286102295
    4. '```' → logprob: -16.000003814697266
    5. '\[' → logprob: -17.875003814697266
    6. ' [' → logprob: -18.500003814697266
    7. '[j' → logprob: -19.000003814697266
    8. 'i' → logprob: -19.125003814697266
    9. '[user' → logprob: -19.125003814697266
    10. '[u' → logprob: -19.375003814697266

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015062900492921472
    2. '[i' → logprob: -6.501506328582764
    3. ']=' → logprob: -13.001505851745605
    4. '[' → logprob: -14.626505851745605
    5. ')' → logprob: -14.751505851745605
    6. '=' → logprob: -15.501505851745605
    7. 'i' → logprob: -15.626505851745605
    8. ' =' → logprob: -16.126506805419922
    9. ' ]' → logprob: -16.251506805419922
    10. ']
' → logprob: -16.876506805419922

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03812193125486374
    2. ' =' → logprob: -3.2881219387054443
    3. '=False' → logprob: -9.538122177124023
    4. 'False' → logprob: -12.288122177124023
    5. '[' → logprob: -13.038122177124023
    6. ']' → logprob: -14.663122177124023
    7. '=True' → logprob: -14.913122177124023
    8. ' False' → logprob: -15.163122177124023
    9. '<|end|>' → logprob: -15.413122177124023
    10. ')' → logprob: -15.788122177124023

Token 218: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -19.25020408630371
    4. 'True' → logprob: -21.75020408630371
    5. '=False' → logprob: -22.87520408630371
    6. '[' → logprob: -23.00020408630371
    7. '.False' → logprob: -23.00020408630371
    8. '_false' → logprob: -23.12520408630371
    9. 'false' → logprob: -23.62520408630371
    10. 'F' → logprob: -23.87520408630371

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029257573187351227
    2. 'return' → logprob: -6.002925872802734
    3. '    
' → logprob: -8.627925872802734
    4. '
' → logprob: -9.127925872802734
    5. '```' → logprob: -9.752925872802734
    6. ' return' → logprob: -9.877925872802734
    7. ':return' → logprob: -11.252925872802734
    8. '<|end|>' → logprob: -11.502925872802734
    9. 'None' → logprob: -12.002925872802734
    10. 'False' → logprob: -12.252925872802734

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069956122897565365
    2. 'return' → logprob: -5.006995677947998
    3. '```' → logprob: -8.88199520111084
    4. '    
' → logprob: -9.63199520111084
    5. ' return' → logprob: -10.00699520111084
    6. ':return' → logprob: -11.50699520111084
    7. '
' → logprob: -11.88199520111084
    8. 'None' → logprob: -13.13199520111084
    9. '<|end|>' → logprob: -13.13199520111084
    10. '\' → logprob: -13.38199520111084

Token 221: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.664371848164592e-05
    2. '   ' → logprob: -11.875016212463379
    3. '```' → logprob: -12.125016212463379
    4. ' return' → logprob: -13.125016212463379
    5. 'False' → logprob: -13.375016212463379
    6. 'false' → logprob: -15.250016212463379
    7. '    
' → logprob: -16.000017166137695
    8. '
' → logprob: -16.375017166137695
    9. '	return' → logprob: -17.500017166137695
    10. 'r' → logprob: -17.750017166137695

Token 222: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. 'True' → logprob: -20.37747573852539
    4. '(False' → logprob: -22.12747573852539
    5. '_false' → logprob: -24.00247573852539
    6. 'false' → logprob: -24.75247573852539
    7. '=False' → logprob: -25.87747573852539
    8. ' True' → logprob: -26.25247573852539
    9. 'None' → logprob: -26.50247573852539
    10. '.False' → logprob: -26.87747573852539

Token 223: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10977753251791
    2. '<|end|>' → logprob: -2.7347774505615234
    3. '```' → logprob: -3.9847774505615234
    4. ')' → logprob: -4.109777450561523
    5. '[' → logprob: -6.609777450561523
    6. '
' → logprob: -6.859777450561523
    7. 'def' → logprob: -7.734777450561523
    8. '<|end|>' → logprob: -8.359777450561523
    9. '(' → logprob: -8.484777450561523
    10. ']' → logprob: -8.859777450561523

Token 225: ' main' (ID: 2758)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7206943035125732
    2. ' main' → logprob: -0.9706943035125732
    3. ' is' → logprob: -2.3456943035125732
    4. ' find' → logprob: -4.345694541931152
    5. 'can' → logprob: -4.845694541931152
    6. ' valid' → logprob: -5.345694541931152
    7. 'main' → logprob: -5.470694541931152
    8. ' check' → logprob: -5.720694541931152
    9. ' possible' → logprob: -6.720694541931152
    10. ' domino' → logprob: -7.220694541931152

Token 226: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00027587503427639604
    2. '(' → logprob: -9.000275611877441
    3. ':' → logprob: -9.875275611877441
    4. ' ():' → logprob: -9.875275611877441
    5. '():
' → logprob: -10.250275611877441
    6. '_' → logprob: -12.375275611877441
    7. '()' → logprob: -12.625275611877441
    8. '(":' → logprob: -13.000275611877441
    9. '_:' → logprob: -13.875275611877441
    10. '(:' → logprob: -14.000275611877441

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1267840415239334
    2. '[' → logprob: -3.001784086227417
    3. '(' → logprob: -3.251784086227417
    4. ' ' → logprob: -5.126783847808838
    5. ' (' → logprob: -5.251783847808838
    6. ' n' → logprob: -5.251783847808838
    7. 'n' → logprob: -5.501783847808838
    8. '    ' → logprob: -6.126783847808838
    9. '(n' → logprob: -6.376783847808838
    10. ' input' → logprob: -6.626783847808838

Token 228: ' import' (ID: 1588)
  Prédit: ' domino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.1145506501197815
    2. ' n' → logprob: -2.7395505905151367
    3. 'dom' → logprob: -4.114550590515137
    4. ' import' → logprob: -4.739550590515137
    5. 'n' → logprob: -4.739550590515137
    6. ' input' → logprob: -5.614550590515137
    7. '   ' → logprob: -5.989550590515137
    8. ' dom' → logprob: -6.364550590515137
    9. 'import' (adapté à ' import') → logprob: -6.989550590515137
    10. 'd' → logprob: -8.489550590515137

Token 229: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31327155232429504
    2. 'sys' → logprob: -1.3132715225219727
    3. '=sys' → logprob: -12.313271522521973
    4. 'json' → logprob: -13.313271522521973
    5. 'random' → logprob: -13.438271522521973
    6. '	sys' → logprob: -13.938271522521973
    7. ' itertools' → logprob: -14.063271522521973
    8. '(sys' → logprob: -15.563271522521973
    9. ' random' → logprob: -15.938271522521973
    10. '_sys' → logprob: -16.06327247619629

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007445832248777151
    2. '    
' → logprob: -5.257445812225342
    3. 'input' → logprob: -6.882445812225342
    4. '
' → logprob: -8.0074462890625
    5. 'for' → logprob: -9.0074462890625
    6. ' input' → logprob: -9.3824462890625
    7. ' readline' → logprob: -9.3824462890625
    8. ' for' → logprob: -9.6324462890625
    9. '    ' → logprob: -9.6324462890625
    10. '[' → logprob: -9.8824462890625

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007435300387442112
    2. 'input' → logprob: -5.882435321807861
    3. ' input' → logprob: -6.257435321807861
    4. 'for' → logprob: -6.632435321807861
    5. ' for' → logprob: -7.507435321807861
    6. '    
' → logprob: -8.257434844970703
    7. ' lines' → logprob: -8.882434844970703
    8. 'n' → logprob: -9.007434844970703
    9. 'data' → logprob: -9.007434844970703
    10. '
' → logprob: -9.132434844970703

Token 232: ' lines' (ID: 8698)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34760504961013794
    2. ' lines' → logprob: -1.8476049900054932
    3. 'input' → logprob: -2.847604990005493
    4. ' for' → logprob: -3.472604990005493
    5. '   ' → logprob: -3.972604990005493
    6. ' data' → logprob: -4.472605228424072
    7. 'for' → logprob: -4.972605228424072
    8. ' n' → logprob: -5.722605228424072
    9. 'data' → logprob: -6.097605228424072
    10. 'lines' (adapté à ' lines') → logprob: -6.347605228424072

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234898328781128
    2. '=' → logprob: -0.8984898328781128
    3. '[' → logprob: -9.398489952087402
    4. '()' → logprob: -9.523489952087402
    5. '=[]' → logprob: -10.023489952087402
    6. '<|end|>' → logprob: -10.023489952087402
    7. '=line' → logprob: -10.398489952087402
    8. '.' → logprob: -11.023489952087402
    9. '   ' → logprob: -11.023489952087402
    10. '<|end|>' → logprob: -11.898489952087402

Token 234: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07888989895582199
    2. ' sys' → logprob: -2.578889846801758
    3. 'list' → logprob: -16.828889846801758
    4. '[' → logprob: -17.453889846801758
    5. '=sys' → logprob: -17.578889846801758
    6. '(sys' → logprob: -18.328889846801758
    7. ' list' → logprob: -18.453889846801758
    8. '	sys' → logprob: -18.828889846801758
    9. ' [' → logprob: -20.078889846801758
    10. '   ' → logprob: -21.578889846801758

Token 235: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.872261317563243e-05
    2. ' line' → logprob: -9.750059127807617
    3. 'l' → logprob: -14.875059127807617
    4. 'sys' → logprob: -18.125059127807617
    5. 'lin' → logprob: -20.375059127807617
    6. '	line' → logprob: -20.750059127807617
    7. '(line' → logprob: -20.875059127807617
    8. 'x' → logprob: -21.375059127807617
    9. 'li' → logprob: -21.625059127807617
    10. 'input' → logprob: -22.000059127807617

Token 236: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4121186137199402
    2. '.rstrip' → logprob: -1.162118673324585
    3. '.' → logprob: -3.912118673324585
    4. '().' → logprob: -5.412118434906006
    5. '.readline' → logprob: -8.787118911743164
    6. ' for' → logprob: -8.787118911743164
    7. 'rstrip' → logprob: -9.912118911743164
    8. ' .' → logprob: -10.787118911743164
    9. '()' → logprob: -10.787118911743164
    10. '.split' → logprob: -10.787118911743164

Token 237: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.511406809295295e-06
    2. 'for' → logprob: -12.875006675720215
    3. '()]' → logprob: -13.375006675720215
    4. '()
' → logprob: -13.625006675720215
    5. '()\' → logprob: -14.625006675720215
    6. ' ()' → logprob: -15.250006675720215
    7. ' for' → logprob: -15.500006675720215
    8. '()

' → logprob: -16.5000057220459
    9. '(' → logprob: -17.2500057220459
    10. '())' → logprob: -17.3750057220459

Token 238: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6802993416786194
    2. 'for' → logprob: -1.1802992820739746
    3. ' for' → logprob: -1.6802992820739746
    4. ' ()' → logprob: -10.930299758911133
    5. '	for' → logprob: -11.930299758911133
    6. ' ' → logprob: -13.055299758911133
    7. ')' → logprob: -14.180299758911133
    8. '   ' → logprob: -14.555299758911133
    9. '()\' → logprob: -14.680299758911133
    10. '()
' → logprob: -15.055299758911133

Token 239: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9584771990776062
    2. ' sys' → logprob: -0.9584771990776062
    3. 'line' → logprob: -1.708477258682251
    4. 'sys' → logprob: -2.958477258682251
    5. '=sys' → logprob: -13.083477020263672
    6. '_' → logprob: -13.708477020263672
    7. '_line' → logprob: -14.083477020263672
    8. '	line' → logprob: -14.208477020263672
    9. '	sys' → logprob: -14.333477020263672
    10. ' _' → logprob: -14.333477020263672

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005250949412584305
    2. 'in' → logprob: -5.255250930786133
    3. 'line' → logprob: -11.880250930786133
    4. ' line' → logprob: -12.755250930786133
    5. ' ' → logprob: -12.880250930786133
    6. '	in' → logprob: -13.380250930786133
    7. ' ' → logprob: -13.630250930786133
    8. 's' → logprob: -14.630250930786133
    9. '  ' → logprob: -15.130250930786133
    10. '<|end|>' → logprob: -15.255250930786133

Token 241: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861456897109747
    2. ' sys' → logprob: -4.758614540100098
    3. '	sys' → logprob: -17.758615493774414
    4. '=sys' → logprob: -18.133615493774414
    5. '(sys' → logprob: -18.758615493774414
    6. 'open' → logprob: -20.758615493774414
    7. '   ' → logprob: -21.008615493774414
    8. 'stdin' → logprob: -21.008615493774414
    9. ' ' → logprob: -21.258615493774414
    10. 'import' → logprob: -22.633615493774414

Token 242: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.5252596464706585e-05
    2. '.' → logprob: -10.125044822692871
    3. 'stdin' → logprob: -13.250044822692871
    4. '.std' → logprob: -13.625044822692871
    5. '.argv' → logprob: -13.625044822692871
    6. '.stdout' → logprob: -14.375044822692871
    7. '(stdin' → logprob: -16.125045776367188
    8. ' stdin' → logprob: -16.625045776367188
    9. '.st' → logprob: -16.750045776367188
    10. ' .' → logprob: -17.375045776367188

Token 243: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5498172640800476
    2. '.readlines' → logprob: -1.5498173236846924
    3. '()]' → logprob: -1.6748173236846924
    4. '.readline' → logprob: -3.7998173236846924
    5. 'read' → logprob: -8.174817085266113
    6. ']()' → logprob: -8.299817085266113
    7. '`]' → logprob: -9.299817085266113
    8. '()' → logprob: -9.799817085266113
    9. ' ]' → logprob: -10.049817085266113
    10. ']>' → logprob: -10.174817085266113

Token 244: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1002078503370285
    2. ' line' → logprob: -2.350207805633545
    3. 'len' → logprob: -14.350208282470703
    4. ' ' → logprob: -15.475208282470703
    5. '(line' → logprob: -15.975208282470703
    6. '	line' → logprob: -16.475208282470703
    7. ' len' → logprob: -16.600208282470703
    8. 'lin' → logprob: -17.225208282470703
    9. ' ' → logprob: -17.475208282470703
    10. '   ' → logprob: -17.850208282470703

Token 245: '.strip' (ID: 40613)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011529101990163326
    2. '<|end|>' → logprob: -5.011528968811035
    3. '.strip' → logprob: -6.511528968811035
    4. ']>' → logprob: -7.011528968811035
    5. '<|end|>' → logprob: -7.261528968811035
    6. ' ]' → logprob: -7.761528968811035
    7. '...]' → logprob: -8.636528968811035
    8. '.startswith' → logprob: -8.636528968811035
    9. '.' → logprob: -8.636528968811035
    10. '!=' → logprob: -9.011528968811035

Token 246: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0004450892156455666
    2. ']' → logprob: -8.375445365905762
    3. '()' → logprob: -8.500445365905762
    4. '()!=' → logprob: -12.375445365905762
    5. '()]
' → logprob: -13.500445365905762
    6. '()>' → logprob: -13.500445365905762
    7. ')]' → logprob: -13.625445365905762
    8. ']()' → logprob: -14.000445365905762
    9. '()],' → logprob: -14.750445365905762
    10. '()][' → logprob: -15.000445365905762

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06888064742088318
    2. ' for' → logprob: -3.193880558013916
    3. 'for' → logprob: -4.568880558013916
    4. 'n' → logprob: -5.318880558013916
    5. 'tokens' → logprob: -5.943880558013916
    6. ' n' → logprob: -6.318880558013916
    7. 'num' → logprob: -6.568880558013916
    8. 'dom' → logprob: -6.568880558013916
    9. ' if' → logprob: -7.568880558013916
    10. '```' → logprob: -7.818880558013916

Token 248: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39127689599990845
    2. 'num' → logprob: -1.5162768363952637
    3. 'dom' → logprob: -3.2662768363952637
    4. ' n' → logprob: -3.6412768363952637
    5. 't' → logprob: -4.266276836395264
    6. ' num' → logprob: -4.891276836395264
    7. '   ' → logprob: -5.391276836395264
    8. 'if' → logprob: -5.516276836395264
    9. ' if' → logprob: -5.766276836395264
    10. 'for' → logprob: -6.016276836395264

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6460968255996704
    2. '=' → logprob: -0.7710968255996704
    3. 'f' → logprob: -5.021096706390381
    4. 'n' → logprob: -5.021096706390381
    5. 'nd' → logprob: -9.271097183227539
    6. ' ' → logprob: -10.021097183227539
    7. 's' → logprob: -10.396097183227539
    8. 'nt' → logprob: -10.896097183227539
    9. '0' → logprob: -12.646097183227539
    10. 'm' → logprob: -12.896097183227539

Token 250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -13.625141143798828
    4. '2' → logprob: -19.500141143798828
    5. '   ' → logprob: -19.750141143798828
    6. '<|end|>' → logprob: -19.750141143798828
    7. '۰' → logprob: -20.375141143798828
    8. '```' → logprob: -20.500141143798828
    9. '  ' → logprob: -21.000141143798828
    10. '[' → logprob: -21.812641143798828

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -14.250001907348633
    4. 'int' → logprob: -18.625001907348633
    5. '2' → logprob: -19.000001907348633
    6. '```' → logprob: -19.750001907348633
    7. '۰' → logprob: -20.187501907348633
    8. '   ' → logprob: -20.812501907348633
    9. '...' → logprob: -21.812501907348633
    10. '[' → logprob: -21.812501907348633

Token 252: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20386677980422974
    2. 'while' → logprob: -2.078866720199585
    3. ' while' → logprob: -3.203866720199585
    4. '   ' → logprob: -4.328866958618164
    5. '<|end|>' → logprob: -6.078866958618164
    6. '	while' → logprob: -6.703866958618164
    7. '    
' → logprob: -7.203866958618164
    8. ' 
' → logprob: -7.453866958618164
    9. 'n' → logprob: -8.203866958618164
    10. ' ' → logprob: -9.578866958618164

Token 253: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4008530080318451
    2. 'while' → logprob: -1.2758530378341675
    3. '   ' → logprob: -3.400852918624878
    4. 'n' → logprob: -4.525853157043457
    5. ' n' → logprob: -5.400853157043457
    6. '	while' → logprob: -7.025853157043457
    7. '
' → logprob: -7.900853157043457
    8. '<|end|>' → logprob: -7.900853157043457
    9. '```' → logprob: -8.275853157043457
    10. ' ' → logprob: -8.400853157043457

Token 254: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.31494712829589844
    2. ' while' → logprob: -1.3149471282958984
    3. 'n' → logprob: -6.564947128295898
    4. ' n' → logprob: -8.314947128295898
    5. 'results' → logprob: -11.564947128295898
    6. 'result' → logprob: -11.564947128295898
    7. 'w' → logprob: -12.689947128295898
    8. '```' → logprob: -13.564947128295898
    9. ' results' → logprob: -13.689947128295898
    10. 'output' → logprob: -13.689947128295898

Token 255: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023245595395565033
    2. 'i' → logprob: -3.7732455730438232
    3. ' True' → logprob: -16.773244857788086
    4. 'True' → logprob: -17.023244857788086
    5. ' ' → logprob: -17.898244857788086
    6. '(i' → logprob: -18.523244857788086
    7. '	i' → logprob: -18.898244857788086
    8. ' ' → logprob: -19.273244857788086
    9. '_i' → logprob: -20.773244857788086
    10. '   ' → logprob: -21.148244857788086

Token 256: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023494234308600426
    2. '<' → logprob: -3.773494243621826
    3. '<len' → logprob: -9.148493766784668
    4. '<n' → logprob: -10.273493766784668
    5. '+' → logprob: -10.648493766784668
    6. ' <=' → logprob: -10.773493766784668
    7. ' <
' → logprob: -10.773493766784668
    8. ' ' → logprob: -11.898493766784668
    9. '<|end|>' → logprob: -12.273493766784668
    10. '[' → logprob: -12.523493766784668

Token 257: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.836499985889532e-05
    2. ' len' → logprob: -9.7500581741333
    3. 'int' → logprob: -19.375059127807617
    4. '(len' → logprob: -20.625059127807617
    5. 'lines' → logprob: -20.750059127807617
    6. ' ' → logprob: -21.500059127807617
    7. '	len' → logprob: -22.250059127807617
    8. '<len' → logprob: -22.625059127807617
    9. '[len' → logprob: -22.750059127807617
    10. '=len' → logprob: -22.750059127807617

Token 258: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.306760805164231e-05
    2. 'lines' → logprob: -11.50001335144043
    3. ' lines' → logprob: -13.25001335144043
    4. '(' → logprob: -13.75001335144043
    5. '	lines' → logprob: -16.62501335144043
    6. '_lines' → logprob: -18.12501335144043
    7. ' (' → logprob: -19.25001335144043
    8. '(rows' → logprob: -20.12501335144043
    9. '(line' → logprob: -20.62501335144043
    10. 'Lines' → logprob: -20.75001335144043

Token 259: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4400064945220947
    2. ' and' → logprob: -1.9400064945220947
    3. '):' → logprob: -2.4400064945220947
    4. '):
' → logprob: -2.5650064945220947
    5. ':
' → logprob: -3.3150064945220947
    6. 'and' → logprob: -4.815006256103516
    7. ')' → logprob: -6.065006256103516
    8. '   ' → logprob: -7.065006256103516
    9. ' :' → logprob: -9.315006256103516
    10. ' ' → logprob: -9.440006256103516

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08923247456550598
    2. '   ' → logprob: -2.5892324447631836
    3. ':' → logprob: -4.839232444763184
    4. '<|end|>' → logprob: -7.339232444763184
    5. ',' → logprob: -7.714232444763184
    6. '```' → logprob: -8.214232444763184
    7. 'n' → logprob: -8.339232444763184
    8. '    ' → logprob: -8.964232444763184
    9. ' n' → logprob: -9.214232444763184
    10. '<|end|>' → logprob: -9.589232444763184

Token 261: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25547295808792114
    2. 'n' (adapté à ' n') → logprob: -2.1304728984832764
    3. '   ' → logprob: -3.2554728984832764
    4. ' num' → logprob: -3.3804728984832764
    5. 'num' → logprob: -4.2554731369018555
    6. ' count' → logprob: -4.8804731369018555
    7. 'count' → logprob: -4.8804731369018555
    8. ' k' → logprob: -6.7554731369018555
    9. 'k' → logprob: -7.3804731369018555
    10. ' parts' → logprob: -7.5054731369018555

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602409929037094
    2. '=' → logprob: -1.9102410078048706
    3. '=int' → logprob: -11.53524112701416
    4. '   ' → logprob: -12.91024112701416
    5. ')' → logprob: -13.41024112701416
    6. ',' → logprob: -13.66024112701416
    7. ' =
' → logprob: -14.16024112701416
    8. ' =)' → logprob: -14.91024112701416
    9. ' ' → logprob: -15.66024112701416
    10. '=
' → logprob: -15.91024112701416

Token 263: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750604182481766
    2. ' int' → logprob: -3.5297505855560303
    3. '=int' → logprob: -16.77975082397461
    4. '[int' → logprob: -17.77975082397461
    5. '(int' → logprob: -18.40475082397461
    6. 'len' → logprob: -20.40475082397461
    7. '<int' → logprob: -20.65475082397461
    8. '	int' → logprob: -21.02975082397461
    9. ' ' → logprob: -21.15475082397461
    10. '```' → logprob: -21.27975082397461

Token 264: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0005131178768351674
    2. 'lines' → logprob: -8.000513076782227
    3. '(' → logprob: -8.750513076782227
    4. ' lines' → logprob: -10.875513076782227
    5. '	lines' → logprob: -15.125513076782227
    6. ' (' → logprob: -17.000513076782227
    7. '(line' → logprob: -17.625513076782227
    8. '(
' → logprob: -18.625513076782227
    9. '_lines' → logprob: -18.625513076782227
    10. 'Lines' → logprob: -18.625513076782227

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.12500286102295
    3. ')' → logprob: -16.000001907348633
    4. '(i' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.875001907348633
    6. ')[' → logprob: -16.875001907348633
    7. '[n' → logprob: -17.000001907348633
    8. '[
' → logprob: -17.000001907348633
    9. ' [' → logprob: -17.250001907348633
    10. '[I' → logprob: -17.625001907348633

Token 266: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015702145174145699
    2. '])
' → logprob: -6.501570224761963
    3. '].' → logprob: -10.126569747924805
    4. ']);' → logprob: -11.126569747924805
    5. ' ])' → logprob: -12.501569747924805
    6. ']' → logprob: -12.751569747924805
    7. ')' → logprob: -13.126569747924805
    8. '])+' → logprob: -13.751569747924805
    9. '])-' → logprob: -13.876569747924805
    10. ''])' → logprob: -14.001569747924805

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3436605930328369
    2. '<|end|>' → logprob: -1.968660593032837
    3. '   ' → logprob: -3.218660593032837
    4. '\n' → logprob: -3.343660593032837
    5. '
' → logprob: -3.343660593032837
    6. '<|end|>' → logprob: -4.343660354614258
    7. 'i' → logprob: -4.843660354614258
    8. '[i' → logprob: -5.343660354614258
    9. ' i' → logprob: -5.593660354614258
    10. '```' → logprob: -5.718660354614258

Token 268: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17087388038635254
    2. 'i' (adapté à ' i') → logprob: -1.9208738803863525
    3. '       ' → logprob: -5.420873641967773
    4. '   ' → logprob: -5.670873641967773
    5. ' if' → logprob: -7.045873641967773
    6. '
' → logprob: -7.045873641967773
    7. '	i' → logprob: -7.795873641967773
    8. '<|end|>' → logprob: -7.920873641967773
    9. ' 
' → logprob: -10.045873641967773
    10. '<|end|>' → logprob: -10.170873641967773

Token 269: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20320291817188263
    2. ' +=' → logprob: -1.7032029628753662
    3. '+' → logprob: -6.328202724456787
    4. '=' → logprob: -13.453203201293945
    5. '++' → logprob: -14.828203201293945
    6. '+="' → logprob: -14.953203201293945
    7. ']+=' → logprob: -14.953203201293945
    8. '+='' → logprob: -16.078203201293945
    9. ' +' → logprob: -16.703203201293945
    10. '+=(' → logprob: -16.828203201293945

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -20.37504005432129
    4. ' ' → logprob: -22.62504005432129
    5. '2' → logprob: -23.25004005432129
    6. '۱' → logprob: -23.50004005432129
    7. '１' → logprob: -23.50004005432129
    8. '0' → logprob: -23.87504005432129
    9. '
' → logprob: -24.00004005432129
    10. '+' → logprob: -24.12504005432129

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.625
    4. '１' → logprob: -22.25
    5. '۱' → logprob: -23.125
    6. '
' → logprob: -23.375
    7. '१' → logprob: -23.5
    8. '   ' → logprob: -23.8125
    9. '2' → logprob: -23.9375
    10. '+' → logprob: -24.0

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09206586331129074
    2. '<|end|>' → logprob: -3.3420658111572266
    3. '
' → logprob: -3.9670658111572266
    4. '   ' → logprob: -4.342065811157227
    5. ' if' → logprob: -4.717065811157227
    6. 'dom' → logprob: -5.342065811157227
    7. 'if' → logprob: -6.467065811157227
    8. '        
' → logprob: -6.717065811157227
    9. '```' → logprob: -6.717065811157227
    10. '<|end|>' → logprob: -7.717065811157227

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23598763346672058
    2. 'dom' → logprob: -2.485987663269043
    3. '   ' → logprob: -3.110987663269043
    4. ' if' → logprob: -3.485987663269043
    5. ' domino' → logprob: -3.735987663269043
    6. ' dom' → logprob: -3.860987663269043
    7. ' lines' → logprob: -5.610987663269043
    8. 'if' → logprob: -5.985987663269043
    9. '```' → logprob: -8.860987663269043
    10. 'lines' → logprob: -8.985987663269043

Token 274: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' (adapté à ' dom') → logprob: -0.0008072483469732106
    2. 'if' → logprob: -7.750807285308838
    3. ' domino' → logprob: -8.37580680847168
    4. '   ' → logprob: -9.50080680847168
    5. ' if' → logprob: -11.12580680847168
    6. 'arr' → logprob: -11.12580680847168
    7. 'pieces' → logprob: -11.25080680847168
    8. 'tiles' → logprob: -11.87580680847168
    9. '       ' → logprob: -12.25080680847168
    10. 'domin' → logprob: -12.62580680847168

Token 275: '_str' (ID: 6182)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ino' → logprob: -2.2200749754119897e-06
    2. 'ино' → logprob: -13.750001907348633
    3. 'inos' → logprob: -14.375001907348633
    4. 'inio' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '```' → logprob: -16.250001907348633
    7. 'INO' → logprob: -16.750001907348633
    8. 'in' → logprob: -17.125001907348633
    9. '[[' → logprob: -17.375001907348633
    10. '[]' → logprob: -18.125001907348633

Token 276: 's' (ID: 82)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.0022518415935337543
    2. ' =' → logprob: -6.502251625061035
    3. '=' → logprob: -8.252251625061035
    4. 's' → logprob: -8.252251625061035
    5. 'a' → logprob: -9.127251625061035
    6. 'i' → logprob: -10.252251625061035
    7. 'inos' → logprob: -10.627251625061035
    8. 'in' → logprob: -10.877251625061035
    9. 'ино' → logprob: -11.502251625061035
    10. 'o' → logprob: -12.002251625061035

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023407876491547
    2. '=' → logprob: -1.9102340936660767
    3. 's' → logprob: -12.035234451293945
    4. '   ' → logprob: -13.035234451293945
    5. '=[]' → logprob: -14.785234451293945
    6. ' ' → logprob: -15.035234451293945
    7. 'ings' → logprob: -15.535234451293945
    8. 'ains' → logprob: -15.660234451293945
    9. '=[]
' → logprob: -16.160234451293945
    10. '=line' → logprob: -16.535234451293945

Token 278: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.020580196753144264
    2. ' lines' → logprob: -3.895580291748047
    3. '[' → logprob: -10.770580291748047
    4. ' [' → logprob: -12.020580291748047
    5. '(lines' → logprob: -12.270580291748047
    6. '[]' → logprob: -12.645580291748047
    7. '	lines' → logprob: -13.270580291748047
    8. 'line' → logprob: -14.770580291748047
    9. '[]
' → logprob: -15.520580291748047
    10. '[line' → logprob: -15.520580291748047

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. '[j' → logprob: -16.25
    4. 'i' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. '[
' → logprob: -17.0
    7. ' [' → logprob: -17.25
    8. '   ' → logprob: -17.625
    9. '[start' → logprob: -18.375
    10. '(i' → logprob: -18.375

Token 280: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0007744893664494157
    2. ']' → logprob: -7.750774383544922
    3. ':i' → logprob: -8.250774383544922
    4. ':].' → logprob: -10.000774383544922
    5. ' ].' → logprob: -10.625774383544922
    6. ':' → logprob: -12.125774383544922
    7. ' :' → logprob: -12.500774383544922
    8. ']
' → logprob: -13.500774383544922
    9. '.split' → logprob: -14.375774383544922
    10. '   ' → logprob: -15.125774383544922

Token 281: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.805981972021982e-05
    2. 'strip' → logprob: -9.25009822845459
    3. 'rstrip' → logprob: -14.00009822845459
    4. ' split' → logprob: -14.50009822845459
    5. '(split' → logprob: -15.12509822845459
    6. 'plit' → logprob: -15.25009822845459
    7. 'spl' → logprob: -16.375097274780273
    8. 's' → logprob: -18.000097274780273
    9. 'replace' → logprob: -18.500097274780273
    10. '.split' → logprob: -19.000097274780273

Token 282: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002096197713399306
    2. '('' → logprob: -8.50020980834961
    3. '(' → logprob: -13.00020980834961
    4. '())' → logprob: -13.50020980834961
    5. '()
' → logprob: -13.50020980834961
    6. '()]' → logprob: -14.50020980834961
    7. '(',' → logprob: -16.00020980834961
    8. '("' → logprob: -16.50020980834961
    9. '()

' → logprob: -16.50020980834961
    10. ' ()' → logprob: -16.62520980834961

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030494853854179382
    2. '<|end|>' → logprob: -6.378049373626709
    3. 'i' → logprob: -7.753049373626709
    4. '   ' → logprob: -8.128049850463867
    5. ' i' → logprob: -8.878049850463867
    6. '[i' → logprob: -8.878049850463867
    7. '        
' → logprob: -9.128049850463867
    8. '<|end|>' → logprob: -9.253049850463867
    9. '
' → logprob: -10.503049850463867
    10. ',' → logprob: -11.378049850463867

Token 284: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.006630708463490009
    2. ' i' → logprob: -5.506630897521973
    3. '   ' → logprob: -6.006630897521973
    4. '       ' → logprob: -9.381630897521973
    5. '	i' → logprob: -14.006630897521973
    6. ' ' → logprob: -14.131630897521973
    7. '
' → logprob: -15.256630897521973
    8. 'dom' → logprob: -15.631630897521973
    9. '  ' → logprob: -15.756630897521973
    10. '    ' → logprob: -16.756629943847656

Token 285: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47409674525260925
    2. '+=' → logprob: -0.9740967750549316
    3. '+' → logprob: -10.849096298217773
    4. '=' → logprob: -16.349096298217773
    5. '++' → logprob: -16.724096298217773
    6. ' ' → logprob: -16.849096298217773
    7. ' +' → logprob: -17.099096298217773
    8. ']+=' → logprob: -17.224096298217773
    9. '+="' → logprob: -17.724096298217773
    10. ' =' → logprob: -18.349096298217773

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.37501335144043
    3. 'n' → logprob: -13.25001335144043
    4. '0' → logprob: -16.87501335144043
    5. ' n' → logprob: -17.37501335144043
    6. '2' → logprob: -18.75001335144043
    7. '```' → logprob: -19.12501335144043
    8. '   ' → logprob: -19.62501335144043
    9. '(n' → logprob: -20.12501335144043
    10. '3' → logprob: -20.12501335144043

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 'n' → logprob: -16.25
    4. '```' → logprob: -19.125
    5. '0' → logprob: -20.375
    6. '   ' → logprob: -20.75
    7. '１' → logprob: -21.75
    8. 'len' → logprob: -22.5625
    9. '۱' → logprob: -22.625
    10. '2' → logprob: -22.9375

Token 288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024002259597182274
    2. '   ' → logprob: -4.3990020751953125
    3. 'dom' → logprob: -4.5240020751953125
    4. ' dom' → logprob: -7.8990020751953125
    5. ' domino' → logprob: -8.649002075195312
    6. '(dom' → logprob: -12.149002075195312
    7. '     ' → logprob: -12.274002075195312
    8. '_dom' → logprob: -12.649002075195312
    9. '      ' → logprob: -12.649002075195312
    10. ' ' → logprob: -13.024002075195312

Token 289: '       ' (ID: 309)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.5815521478652954
    2. '       ' → logprob: -0.8315521478652954
    3. '   ' → logprob: -5.331552028656006
    4. ' domino' → logprob: -7.331552028656006
    5. ' dom' → logprob: -9.581552505493164
    6. 'domain' → logprob: -11.206552505493164
    7. '_dom' → logprob: -12.456552505493164
    8. '```' → logprob: -12.581552505493164
    9. 'domains' → logprob: -12.706552505493164
    10. '(dom' → logprob: -13.206552505493164

Token 290: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -3.292907877039397e-06
    2. '       ' → logprob: -13.37500286102295
    3. ' domino' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.00000286102295
    5. 'if' → logprob: -15.75000286102295
    6. 'domain' → logprob: -16.250003814697266
    7. 'domin' → logprob: -16.250003814697266
    8. '```' → logprob: -17.000003814697266
    9. '        
' → logprob: -17.625003814697266
    10. '
' → logprob: -17.625003814697266

Token 291: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -2.1008713702030946e-06
    2. 'e' → logprob: -13.250001907348633
    3. 'pieces' → logprob: -16.000001907348633
    4. 's' → logprob: -16.375001907348633
    5. 'oes' → logprob: -18.250001907348633
    6. '=' → logprob: -19.250001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'ues' → logprob: -19.875001907348633
    9. ' =' → logprob: -20.000001907348633
    10. '_list' → logprob: -20.000001907348633

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. '=[]' → logprob: -14.578890800476074
    4. ')' → logprob: -16.328889846801758
    5. '=[' → logprob: -16.703889846801758
    6. ' =[' → logprob: -16.953889846801758
    7. 's' → logprob: -17.578889846801758
    8. ']' → logprob: -17.703889846801758
    9. '[:]' → logprob: -18.078889846801758
    10. '<|end|>' → logprob: -18.203889846801758

Token 293: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1679268479347229
    2. '[list' → logprob: -2.167926788330078
    3. '[(' → logprob: -3.417926788330078
    4. '[array' → logprob: -5.917926788330078
    5. '[int' → logprob: -6.167926788330078
    6. '[List' → logprob: -6.917926788330078
    7. '[class' → logprob: -8.167926788330078
    8. '[str' → logprob: -8.292926788330078
    9. ' [' → logprob: -8.917926788330078
    10. '[p' → logprob: -9.417926788330078

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030758412554860115
    2. ' for' → logprob: -3.7807583808898926
    3. 'for' → logprob: -4.905758380889893
    4. '	for' → logprob: -10.53075885772705
    5. '   ' → logprob: -11.15575885772705
    6. '<|end|>' → logprob: -11.28075885772705
    7. '[' → logprob: -11.78075885772705
    8. '	' → logprob: -11.78075885772705
    9. ')' → logprob: -12.78075885772705
    10. '	   ' → logprob: -13.40575885772705

Token 295: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.127140074968338
    2. ' for' → logprob: -2.1271400451660156
    3. '       ' → logprob: -8.502140045166016
    4. '	for' → logprob: -11.877140045166016
    5. '   ' → logprob: -13.252140045166016
    6. ' ' → logprob: -16.377140045166016
    7. '
' → logprob: -16.752140045166016
    8. ' ' → logprob: -17.627140045166016
    9. '	' → logprob: -18.252140045166016
    10. '  ' → logprob: -19.377140045166016

Token 296: ' s' (ID: 265)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.7667034864425659
    2. 's' → logprob: -1.391703486442566
    3. 'd' → logprob: -1.891703486442566
    4. 'dom' → logprob: -2.2667036056518555
    5. ' s' → logprob: -4.2667036056518555
    6. ' ds' → logprob: -4.6417036056518555
    7. ' d' → logprob: -5.5167036056518555
    8. 'j' → logprob: -6.3917036056518555
    9. ' dom' → logprob: -6.7667036056518555
    10. 'x' → logprob: -7.2667036056518555

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005942190065979958
    2. 'in' → logprob: -5.130942344665527
    3. ' ' → logprob: -12.380942344665527
    4. '_' → logprob: -13.005942344665527
    5. 's' → logprob: -13.755942344665527
    6. '0' → logprob: -13.880942344665527
    7. '[' → logprob: -14.005942344665527
    8. 'n' → logprob: -14.255942344665527
    9. '_in' → logprob: -14.255942344665527
    10. '  ' → logprob: -14.380942344665527

Token 298: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.0015023599844425917
    2. ' dom' → logprob: -6.501502513885498
    3. '(dom' → logprob: -16.501502990722656
    4. 's' → logprob: -17.376502990722656
    5. '[' → logprob: -18.126502990722656
    6. ' ' → logprob: -18.876502990722656
    7. '   ' → logprob: -19.751502990722656
    8. 'domain' → logprob: -19.876502990722656
    9. 'Dom' → logprob: -20.001502990722656
    10. 'd' → logprob: -20.001502990722656

Token 299: '_str' (ID: 6182)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.14979353547096252
    2. '_str' → logprob: -2.7747936248779297
    3. 'o' → logprob: -3.5247936248779297
    4. 'dom' → logprob: -3.7747936248779297
    5. 'str' → logprob: -4.52479362487793
    6. 'oz' → logprob: -5.89979362487793
    7. ' domino' → logprob: -6.14979362487793
    8. 'zo' → logprob: -6.39979362487793
    9. 'om' → logprob: -7.02479362487793
    10. '```' → logprob: -7.14979362487793

Token 300: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.607391408877447e-05
    2. 'ings' → logprob: -10.375036239624023
    3. 'dom' → logprob: -13.125036239624023
    4. '_s' → logprob: -14.375036239624023
    5. 'es' → logprob: -15.000036239624023
    6. 'gs' → logprob: -15.000036239624023
    7. '_str' → logprob: -15.125036239624023
    8. 'str' → logprob: -15.250036239624023
    9. 'ues' → logprob: -15.625036239624023
    10. 'ing' → logprob: -15.625036239624023

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14362001419067383
    2. ':
' → logprob: -2.018620014190674
    3. ' =' → logprob: -7.893620014190674
    4. '=' → logprob: -8.643619537353516
    5. '.split' → logprob: -9.018619537353516
    6. '[:-' → logprob: -9.268619537353516
    7. '[' → logprob: -10.143619537353516
    8. '):
' → logprob: -10.643619537353516
    9. '():
' → logprob: -10.768619537353516
    10. '   ' → logprob: -11.143619537353516

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03876146674156189
    2. ':' → logprob: -3.4137613773345947
    3. ' =' → logprob: -5.913761615753174
    4. ':
' → logprob: -6.788761615753174
    5. ',' → logprob: -7.913761615753174
    6. '=' → logprob: -8.038761138916016
    7. '[:-' → logprob: -8.663761138916016
    8. '.append' → logprob: -9.163761138916016
    9. '.split' → logprob: -10.038761138916016
    10. '[:]' → logprob: -10.038761138916016

Token 303: ' domino' (ID: 133589)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20326635241508484
    2. 'dom' → logprob: -1.7032663822174072
    3. 'x' → logprob: -7.328266143798828
    4. '   ' → logprob: -8.078266143798828
    5. ' domino' → logprob: -8.078266143798828
    6. 'parts' → logprob: -8.828266143798828
    7. ' a' → logprob: -8.953266143798828
    8. 'left' → logprob: -9.453266143798828
    9. '       ' → logprob: -9.578266143798828
    10. '           ' → logprob: -9.703266143798828

Token 304: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.013671289198100567
    2. '=' → logprob: -5.638671398162842
    3. 'e' → logprob: -5.638671398162842
    4. ' =' → logprob: -5.638671398162842
    5. 'pieces' → logprob: -6.888671398162842
    6. '[' → logprob: -8.388670921325684
    7. 'ues' → logprob: -8.388670921325684
    8. 'ades' → logprob: -8.888670921325684
    9. '   ' → logprob: -9.138670921325684
    10. 's' → logprob: -9.388670921325684

Token 305: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47614046931266785
    2. '.append' → logprob: -0.9761404991149902
    3. '.' → logprob: -6.97614049911499
    4. ' =' → logprob: -7.35114049911499
    5. '.=' → logprob: -7.85114049911499
    6. '+=' → logprob: -9.601140022277832
    7. 'append' → logprob: -11.226140022277832
    8. '.extend' → logprob: -11.726140022277832
    9. '.add' → logprob: -14.101140022277832
    10. ' +=' → logprob: -14.101140022277832

Token 306: '((' (ID: 2054)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.019207192584872246
    2. '(int' → logprob: -4.269207000732422
    3. ' (' → logprob: -5.894207000732422
    4. 'tuple' → logprob: -6.269207000732422
    5. ' tuple' → logprob: -8.894207000732422
    6. '(' → logprob: -9.144207000732422
    7. '(eval' → logprob: -9.144207000732422
    8. '(list' → logprob: -11.394207000732422
    9. '(a' → logprob: -11.894207000732422
    10. '(s' → logprob: -12.394207000732422

Token 307: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.7697225252486533e-06
    2. ' int' → logprob: -12.500003814697266
    3. '
' → logprob: -19.375003814697266
    4. '(int' → logprob: -20.375003814697266
    5. '   ' → logprob: -20.625003814697266
    6. '[int' → logprob: -21.500003814697266
    7. '  ' → logprob: -21.750003814697266
    8. ' ' → logprob: -21.750003814697266
    9. '    ' → logprob: -22.000003814697266
    10. '	int' → logprob: -22.250003814697266

Token 308: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931487321853638
    2. '(s' → logprob: -0.6931487321853638
    3. ' s' → logprob: -13.943148612976074
    4. '(' → logprob: -14.443148612976074
    5. ' (' → logprob: -16.19314956665039
    6. ')s' → logprob: -17.56814956665039
    7. '(
' → logprob: -18.06814956665039
    8. 'a' → logprob: -18.31814956665039
    9. ')(' → logprob: -18.69314956665039
    10. ')' → logprob: -18.81814956665039

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04023021087050438
    2. '[:-' → logprob: -3.2902302742004395
    3. '[:' → logprob: -6.2902302742004395
    4. '.split' → logprob: -8.290229797363281
    5. '0' → logprob: -10.290229797363281
    6. 'split' → logprob: -10.415229797363281
    7. ')' → logprob: -12.665229797363281
    8. '(' → logprob: -12.790229797363281
    9. '[
' → logprob: -12.915229797363281
    10. '),' → logprob: -13.040229797363281

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -16.250001907348633
    4. '
' → logprob: -16.500001907348633
    5. ':' → logprob: -16.750001907348633
    6. '-' → logprob: -16.812501907348633
    7. '   ' → logprob: -17.500001907348633
    8. '[' → logprob: -17.562501907348633
    9. '::' → logprob: -18.562501907348633
    10. ':-' → logprob: -18.562501907348633

Token 311: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00019412329129409045
    2. ')' → logprob: -8.875194549560547
    3. '),(' → logprob: -10.875194549560547
    4. ',' → logprob: -11.000194549560547
    5. ' ),' → logprob: -11.000194549560547
    6. '),
' → logprob: -14.375194549560547
    7. ',),' → logprob: -14.375194549560547
    8. '],' → logprob: -14.875194549560547
    9. ' ,' → logprob: -16.250194549560547
    10. ')),' → logprob: -16.875194549560547

Token 312: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '(int' → logprob: -20.625709533691406
    4. '=int' → logprob: -21.125709533691406
    5. '	int' → logprob: -21.375709533691406
    6. '<int' → logprob: -21.375709533691406
    7. '[int' → logprob: -21.375709533691406
    8. ' ' → logprob: -22.375709533691406
    9. '   ' → logprob: -22.625709533691406
    10. ':int' → logprob: -23.125709533691406

Token 313: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.57595294713974
    2. '(s' → logprob: -0.82595294713974
    3. '(' → logprob: -11.450952529907227
    4. ' (' → logprob: -13.200952529907227
    5. ' s' → logprob: -14.075952529907227
    6. ')' → logprob: -15.825952529907227
    7. '(
' → logprob: -16.200952529907227
    8. ')s' → logprob: -18.075952529907227
    9. ')(' → logprob: -18.700952529907227
    10. '{s' → logprob: -19.075952529907227

Token 314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4740873873233795
    2. '1' → logprob: -0.9740873575210571
    3. '
' → logprob: -12.349087715148926
    4. ' [' → logprob: -13.224087715148926
    5. ' ' → logprob: -13.599087715148926
    6. '][' → logprob: -13.974087715148926
    7. '[-' → logprob: -14.099087715148926
    8. '   ' → logprob: -14.849087715148926
    9. '(' → logprob: -15.224087715148926
    10. ')' → logprob: -15.599087715148926

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '0' → logprob: -13.250005722045898
    3. '
' → logprob: -13.375005722045898
    4. '-' → logprob: -13.625005722045898
    5. ' ' → logprob: -14.250005722045898
    6. 'len' → logprob: -15.812505722045898
    7. '   ' → logprob: -16.1250057220459
    8. '2' → logprob: -16.2500057220459
    9. '```' → logprob: -16.7500057220459
    10. '' → logprob: -17.1250057220459

Token 316: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00027921271976083517
    2. ']))' → logprob: -8.625279426574707
    3. '))' → logprob: -9.750279426574707
    4. ')' → logprob: -10.500279426574707
    5. ')))
' → logprob: -12.500279426574707
    6. '])))' → logprob: -12.750279426574707
    7. ')]' → logprob: -13.125279426574707
    8. '))))' → logprob: -13.375279426574707
    9. ']' → logprob: -13.500279426574707
    10. ')])' → logprob: -13.750279426574707

Token 317: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16130240261554718
    2. 'if' (adapté à ' if') → logprob: -2.036302328109741
    3. '       ' → logprob: -4.28630256652832
    4. ' result' → logprob: -5.78630256652832
    5. 'result' → logprob: -6.53630256652832
    6. '
' → logprob: -9.53630256652832
    7. '   ' → logprob: -10.16130256652832
    8. '```' → logprob: -10.91130256652832
    9. 'res' → logprob: -11.53630256652832
    10. '        
' → logprob: -11.78630256652832

Token 319: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.014166207052767277
    2. 'can' → logprob: -4.264166355133057
    3. '	can' → logprob: -13.764165878295898
    4. ' not' → logprob: -13.889165878295898
    5. ' ' → logprob: -15.264165878295898
    6. ' ' → logprob: -15.514165878295898
    7. '(can' → logprob: -16.0141658782959
    8. '_can' → logprob: -16.2641658782959
    9. '   ' → logprob: -17.7641658782959
    10. ' len' → logprob: -18.1391658782959

Token 320: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.0802738870552275e-05
    2. 'arr' → logprob: -11.50001049041748
    3. '_' → logprob: -14.50001049041748
    4. '_can' → logprob: -17.250011444091797
    5. ' _' → logprob: -18.000011444091797
    6. '_ar' → logprob: -18.000011444091797
    7. '_continue' → logprob: -19.000011444091797
    8. 'Arrange' → logprob: -19.250011444091797
    9. '_are' → logprob: -19.750011444091797
    10. '_array' → logprob: -19.875011444091797

Token 321: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.00014323067443910986
    2. 'age' → logprob: -9.250143051147461
    3. 'range' → logprob: -10.875143051147461
    4. 'ge' → logprob: -11.500143051147461
    5. 'nge' → logprob: -12.125143051147461
    6. 'an' → logprob: -13.125143051147461
    7. '_arr' → logprob: -13.250143051147461
    8. 'arr' → logprob: -13.250143051147461
    9. '   ' → logprob: -13.500143051147461
    10. '```' → logprob: -13.875143051147461

Token 322: '(dom' (ID: 126371)
  Prédit: '(dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dom' → logprob: 0.0
    2. '(' → logprob: -17.875
    3. '(domain' → logprob: -17.875
    4. ' (' → logprob: -18.875
    5. '(div' → logprob: -19.375
    6. 'dom' → logprob: -19.75
    7. '(dim' → logprob: -20.125
    8. '/dom' → logprob: -20.25
    9. '(
' → logprob: -22.0
    10. '((' → logprob: -22.25

Token 323: 'ino' (ID: 2081)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.674075722694397
    2. 'age' → logprob: -1.049075722694397
    3. '   ' → logprob: -3.0490756034851074
    4. 'dom' → logprob: -3.5490756034851074
    5. 'ine' → logprob: -4.299075603485107
    6. 'ino' → logprob: -4.549075603485107
    7. 'ages' → logprob: -5.049075603485107
    8. 'anges' → logprob: -5.174075603485107
    9. 'ane' → logprob: -5.424075603485107
    10. 'arr' → logprob: -5.799075603485107

Token 324: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.9361264946837764e-07
    2. '(dom' → logprob: -17.5
    3. 'dom' → logprob: -17.5
    4. '[' → logprob: -17.875
    5. 's' → logprob: -18.0
    6. 'oes' → logprob: -18.0
    7. ')' → logprob: -18.25
    8. 'les' → logprob: -18.375
    9. '```' → logprob: -18.5
    10. '(d' → logprob: -18.75

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6931772828102112
    2. '):' → logprob: -0.6931772828102112
    3. '():
' → logprob: -10.943177223205566
    4. ':' → logprob: -12.068177223205566
    5. '):
' → logprob: -12.693177223205566
    6. '():' → logprob: -13.693177223205566
    7. '()):
' → logprob: -13.943177223205566
    8. ':
' → logprob: -14.568177223205566
    9. ')' → logprob: -14.568177223205566
    10. ' ):' → logprob: -15.693177223205566

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003652456682175398
    2. '
' → logprob: -6.628652572631836
    3. 'print' → logprob: -6.878652572631836
    4. '       ' → logprob: -7.128652572631836
    5. ' print' → logprob: -7.878652572631836
    6. '        
' → logprob: -9.628652572631836
    7. '            
' → logprob: -10.878652572631836
    8. '```' → logprob: -11.628652572631836
    9. '\' → logprob: -11.878652572631836
    10. '	       ' → logprob: -12.878652572631836

Token 327: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44179749488830566
    2. 'print' (adapté à ' print') → logprob: -1.4417974948883057
    3. '       ' → logprob: -2.6917974948883057
    4. ' print' → logprob: -2.9417974948883057
    5. '               ' → logprob: -9.941797256469727
    6. '   ' → logprob: -11.066797256469727
    7. '	print' → logprob: -11.691797256469727
    8. '	       ' → logprob: -12.316797256469727
    9. '```' → logprob: -12.691797256469727
    10. '
' → logprob: -12.816797256469727

Token 328: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0014001181116327643
    2. '(' → logprob: -7.001399993896484
    3. '('' → logprob: -7.626399993896484
    4. '"' → logprob: -15.501399993896484
    5. '(True' → logprob: -15.751399993896484
    6. '('"' → logprob: -15.876399993896484
    7. ' ("' → logprob: -15.876399993896484
    8. '(("' → logprob: -16.376399993896484
    9. '()' → logprob: -16.876399993896484
    10. '("("' → logprob: -16.876399993896484

Token 329: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.5190706253051758
    2. 'Yes' → logprob: -1.3940706253051758
    3. '"' → logprob: -2.144070625305176
    4. 'Ordering' → logprob: -5.394070625305176
    5. 'Line' → logprob: -5.519070625305176
    6. 'True' → logprob: -5.769070625305176
    7. '""' → logprob: -5.894070625305176
    8. 'Possible' → logprob: -5.894070625305176
    9. 'Can' → logprob: -6.144070625305176
    10. 'Chain' → logprob: -6.144070625305176

Token 330: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014165391214191914
    2. '")
' → logprob: -4.26416540145874
    3. ')' → logprob: -13.889164924621582
    4. '")
' → logprob: -15.264164924621582
    5. '")

' → logprob: -15.264164924621582
    6. '"' → logprob: -15.639164924621582
    7. '!")' → logprob: -15.764164924621582
    8. ' ")' → logprob: -16.2641658782959
    9. ')")' → logprob: -16.7641658782959
    10. '");' → logprob: -16.7641658782959

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016340012662112713
    2. 'else' → logprob: -6.501634120941162
    3. ' else' → logprob: -9.001633644104004
    4. '   ' → logprob: -12.626633644104004
    5. '<|end|>' → logprob: -12.626633644104004
    6. '```' → logprob: -14.376633644104004
    7. '	' → logprob: -14.626633644104004
    8. '           ' → logprob: -15.751633644104004
    9. '<|end|>' → logprob: -15.876633644104004
    10. '	else' → logprob: -16.12663459777832

Token 332: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10642408579587936
    2. 'else' (adapté à ' else') → logprob: -2.60642409324646
    3. ' else' → logprob: -3.60642409324646
    4. '   ' → logprob: -12.606424331665039
    5. '	' → logprob: -12.856424331665039
    6. '	else' → logprob: -13.481424331665039
    7. ' ' → logprob: -14.481424331665039
    8. '<|end|>' → logprob: -14.481424331665039
    9. '```' → logprob: -14.731424331665039
    10. '      ' → logprob: -15.231424331665039

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12410783767700195
    2. ':
' → logprob: -2.499107837677002
    3. '           ' → logprob: -3.374107837677002
    4. '       ' → logprob: -9.624107360839844
    5. ' :' → logprob: -9.624107360839844
    6. '   ' → logprob: -10.249107360839844
    7. ' :
' → logprob: -10.249107360839844
    8. '<|end|>' → logprob: -10.624107360839844
    9. ' print' → logprob: -10.874107360839844
    10. '          ' → logprob: -11.624107360839844

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02879343554377556
    2. ' print' → logprob: -3.6537933349609375
    3. '       ' → logprob: -6.5287933349609375
    4. 'print' → logprob: -7.1537933349609375
    5. '"' → logprob: -10.028793334960938
    6. '               ' → logprob: -10.028793334960938
    7. ' ' → logprob: -10.278793334960938
    8. '   ' → logprob: -10.528793334960938
    9. '		' → logprob: -10.903793334960938
    10. '	       ' → logprob: -11.028793334960938

Token 335: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20148271322250366
    2. 'print' (adapté à ' print') → logprob: -1.7014827728271484
    3. '           ' → logprob: -9.701482772827148
    4. '	print' → logprob: -12.451482772827148
    5. '       ' → logprob: -13.451482772827148
    6. '(print' → logprob: -14.076482772827148
    7. '```' → logprob: -14.826482772827148
    8. '               ' → logprob: -14.826482772827148
    9. ' ' → logprob: -14.951482772827148
    10. '   ' → logprob: -15.201482772827148

Token 336: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.023255497217178345
    2. '(' → logprob: -3.7732555866241455
    3. '("("' → logprob: -11.773255348205566
    4. '('' → logprob: -14.023255348205566
    5. '("""' → logprob: -14.523255348205566
    6. '(
' → logprob: -15.023255348205566
    7. '("")' → logprob: -15.148255348205566
    8. '("(' → logprob: -15.148255348205566
    9. '(""' → logprob: -16.023256301879883
    10. ' ("' → logprob: -16.898256301879883

Token 337: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -7.493430894101039e-05
    2. '"No' → logprob: -9.500075340270996
    3. ' No' → logprob: -18.62507438659668
    4. 'NO' → logprob: -18.75007438659668
    5. '“No' → logprob: -19.75007438659668
    6. '"' → logprob: -21.12507438659668
    7. '>No' → logprob: -21.50007438659668
    8. '.No' → logprob: -22.37507438659668
    9. '_No' → logprob: -22.87507438659668
    10. '(No' → logprob: -23.00007438659668

Token 338: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31343773007392883
    2. ')' → logprob: -1.3134377002716064
    3. ')")' → logprob: -8.688437461853027
    4. '}")' → logprob: -13.188437461853027
    5. '()' → logprob: -13.438437461853027
    6. '')' → logprob: -13.438437461853027
    7. '")
' → logprob: -13.813437461853027
    8. ')
' → logprob: -14.938437461853027
    9. '```' → logprob: -15.063437461853027
    10. ']' → logprob: -15.313437461853027

Token 339: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.874882430769503e-05
    2. ' if' → logprob: -9.750079154968262
    3. '
' → logprob: -11.750079154968262
    4. '```' → logprob: -11.750079154968262
    5. '<|end|>' → logprob: -12.500079154968262
    6. '#' → logprob: -14.625079154968262
    7. '\n' → logprob: -15.625079154968262
    8. 'i' → logprob: -17.000078201293945
    9. 'main' → logprob: -17.000078201293945
    10. '\' → logprob: -17.000078201293945

Token 340: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5761927962303162
    2. '__' → logprob: -0.8261927962303162
    3. 'name' → logprob: -8.826192855834961
    4. '_name' → logprob: -10.076192855834961
    5. '_' → logprob: -10.201192855834961
    6. ' ' → logprob: -11.076192855834961
    7. '___' → logprob: -12.201192855834961
    8. 'Name' → logprob: -12.701192855834961
    9. ' ' → logprob: -14.076192855834961
    10. '/__' → logprob: -14.451192855834961

Token 341: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018217021599411964
    2. ' ==' → logprob: -4.643217086791992
    3. '==' → logprob: -5.268217086791992
    4. 'name' → logprob: -6.643217086791992
    5. ' __' → logprob: -7.018217086791992
    6. '<|end|>' → logprob: -7.893217086791992
    7. '=="' → logprob: -8.893217086791992
    8. '__["' → logprob: -9.018217086791992
    9. '__.__' → logprob: -9.643217086791992
    10. '[' → logprob: -9.643217086791992

Token 342: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '==' → logprob: -13.750001907348633
    3. '__.__' → logprob: -14.375001907348633
    4. '=="' → logprob: -16.000001907348633
    5. '___' → logprob: -17.500001907348633
    6. '__.' → logprob: -17.625001907348633
    7. '__('' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. '__
' → logprob: -17.750001907348633
    10. '__["' → logprob: -17.875001907348633

Token 343: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17651961743831635
    2. ' ==' → logprob: -2.3015196323394775
    3. '==' → logprob: -2.8015196323394775
    4. '=="' → logprob: -7.051519393920898
    5. '=='' → logprob: -9.176519393920898
    6. '___' → logprob: -11.801519393920898
    7. '===' → logprob: -11.801519393920898
    8. '=' → logprob: -13.676519393920898
    9. '__.__' → logprob: -13.676519393920898
    10. '__,' → logprob: -13.676519393920898

Token 344: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006758475210517645
    2. ''' → logprob: -5.006758689880371
    3. '__' → logprob: -10.756758689880371
    4. ' "__' → logprob: -10.756758689880371
    5. ' '__' → logprob: -15.756758689880371
    6. '"name' → logprob: -16.506757736206055
    7. '"user' → logprob: -17.131757736206055
    8. ' ' → logprob: -17.381757736206055
    9. '   ' → logprob: -17.506757736206055
    10. ''"' → logprob: -17.881757736206055

Token 345: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.9728669738397e-05
    2. '__' → logprob: -9.250100135803223
    3. 'name' → logprob: -12.875100135803223
    4. '_main' → logprob: -15.125100135803223
    5. ' main' → logprob: -15.500100135803223
    6. '"' → logprob: -16.250099182128906
    7. 'm' → logprob: -16.250099182128906
    8. '__":
' → logprob: -16.250099182128906
    9. 'built' → logprob: -16.250099182128906
    10. 'ma' → logprob: -16.500099182128906

Token 346: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0025991995353251696
    2. '__' → logprob: -6.002599239349365
    3. '__':
' → logprob: -9.002598762512207
    4. '__.' → logprob: -15.502598762512207
    5. '__["' → logprob: -16.002599716186523
    6. '__.__' → logprob: -16.877599716186523
    7. '_' → logprob: -18.377599716186523
    8. '__:' → logprob: -18.502599716186523
    9. '__("' → logprob: -18.502599716186523
    10. '__",' → logprob: -18.877599716186523

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39624160528182983
    2. 'main' → logprob: -1.6462416648864746
    3. ' main' → logprob: -2.0212416648864746
    4. '	main' → logprob: -6.396241664886475
    5. '    
' → logprob: -9.271241188049316
    6. '   ' → logprob: -9.521241188049316
    7. '_main' → logprob: -10.896241188049316
    8. '  ' → logprob: -12.021241188049316
    9. '__' → logprob: -12.146241188049316
    10. ' ' → logprob: -12.396241188049316

Token 348: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. 'import' → logprob: -15.250000953674316
    3. ' main' → logprob: -15.250000953674316
    4. '	main' → logprob: -21.125
    5. '   ' → logprob: -22.625
    6. '.main' → logprob: -26.375
    7. 'from' → logprob: -27.5
    8. '_main' → logprob: -27.5
    9. '(main' → logprob: -27.5
    10. '```' → logprob: -28.625

Token 349: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016567325219511986
    2. '(' → logprob: -6.876656532287598
    3. '()
' → logprob: -7.876656532287598
    4. '<|end|>' → logprob: -9.251656532287598
    5. '
' → logprob: -10.001656532287598
    6. '```' → logprob: -10.376656532287598
    7. ')' → logprob: -10.626656532287598
    8. '();' → logprob: -11.376656532287598
    9. '(
' → logprob: -11.501656532287598
    10. '#' → logprob: -11.876656532287598


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 347
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 191
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 51.59%
Précision adaptée (1ère position): 55.04%
Précision (top 10): 90.20%
================================================================================
