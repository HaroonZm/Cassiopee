================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

MOD = 1000000

def count_matches(pattern, mask):
    # pattern & mask: arrays of bits or None for unknown
    # pattern bits: 0 or 1, mask bits: True if bit fixed, False if unknown
    # Count how many bits patterns conform to pattern/mask
    # For unknown bits 'x', they can be 0 or 1 -> 2 options each
    count = 1
    for i in range(8):
        if mask[i]:
            # fixed bit, only 1 option if bit matches
            pass
        else:
            # unknown bit: double options
            count = (count * 2) % MOD
    return count

def is_one_byte(b):
    # 0xxxxxxx: first bit = 0
    # b: list of chars '0','1','x'
    # first bit must be 0
    # bits 1..7 are any
    if b[0] == '1':
        return False
    if b[0] == 'x' or b[0] == '0':
        # fixed first bit is not 1, good
        return True
    return False

def count_one_byte(b):
    # first bit must be 0
    # bits after can be 0 or 1 or x
    # count possibilities that comply with first bit=0
    # So bit0 must be '0' or 'x' -> if 'x' then half possibilities have bit 0 = 0
    # But for 'x' first bit means 1 bit unknown -> bit0 = 0 or 1
    # Only accept bit0=0
    cnt=1
    # bit0
    if b[0] == '0':
        cnt=1
    elif b[0] == 'x':
        cnt=1  # only 1 possibility: zero, the other one is 1 and invalid => filter later
    else:
        return 0
    # bits 1..7: x or 0/1 any
    for i in range(1,8):
        if b[i] == 'x':
            cnt = (cnt*2)%MOD
    # For first bit 'x', only 1 of 2 possible bits (0 or 1) is valid (0).
    if b[0]=='x':
        cnt=cnt # since we counted only unknown bits after bit0
    return cnt

def count_two_byte(b1,b2):
    # two bytes:
    # 1st byte: 110yyyyx where y bits not all zero
    # bits in 1st byte:
    # 0:1,1:1,2:y,3:y,4:y,5:x
    # first byte bits:
    # bit0=1
    # bit1=1
    # bit2,3,4 = y bits, at least one 1
    # bit5 = x
    # bit6,7 can be anything?
    # Wait, pattern is 110yyyyx => bits: 1 1 0 y y y x
    # Actually per problem:
    # 2 bytes:
    # 110yyyyx 10xxxxxx
    # bits in first byte: b0=1, b1=1, b2=0, b3=y, b4=y, b5=y, b6=x
    # Actually: the problem says bits count from MSB (bit7) to bit0?
    # Standard UTF-8 (big endian bit order):
    # bits of a byte: b7 b6 b5 b4 b3 b2 b1 b0 (bit7 is MSB)
    # pattern 2-byte first byte:
    # 110yyyyx means:
    # bit7=1, bit6=1, bit5=0, bit4=y, bit3=y, bit2=y, bit1=x, bit0=?
    # but in problem: x can be any in x bits and y can be any 0/1 but not all zero.
    # From problem text pattern 2:
    # 110yyyyx 10xxxxxx
    # meaning:
    # byte1 bits: b7=1, b6=1, b5=0, b4=y, b3=y, b2=y, b1=x, b0=?
    # but 8 bit byte, so pattern exactly 8 bits:
    # 110yyyyx only has 8 bits
    # So b7=1,b6=1,b5=0,
    # b4=y1,b3=y2,b2=y3,b1=x,b0=x(??)
    # No, problem states:
    # For 2-byte char: 110yyyyx 10xxxxxx
    # meaning bits from left (MSB=bit7) to right(bit0):
    # first byte: bit7=1,6=1,5=0,4=y,3=y,2=y,1=x,0=x?
    # But problem only says y bits=3 bits, x bits= remaining bits.
    # Actually, from problem table:
    # 2-byte:
    # 110yyyyx 10xxxxxx  => byte1=bits: 1 1 0 y y y x x (bit7..bit0)
    # byte2=bits: 1 0 x x x x x x
    # So first byte bits: bit7=1, bit6=1, bit5=0, bit4=y, bit3=y, bit2=y, bit1=x, bit0=x
    # second byte bits: bit7=1, bit6=0, bits 5..0=x

    # y bits at positions: 4,3,2 in byte1
    # x bits at positions: 1,0 in byte1 and 5..0 in byte2
    # Must ensure at least one y bit=1

    # So parse b1 and b2 bits and check matching

    # Check fixed bits for first byte 110
    if b1[0] not in ('1','x'): # bit7 must be 1
        return 0
    if b1[1] not in ('1','x'): # bit6 must be 1
        return 0
    if b1[2] not in ('0','x'): # bit5 must be 0
        return 0

    # For second byte bits bit7=1, bit6=0 fixed
    if b2[0] not in ('1','x'): # bit7 must be 1
        return 0
    if b2[1] not in ('0','x'): # bit6 must be 0
        return 0

    # y bits at b1[3], b1[4], b1[5]
    y_bits_vals = []
    unknown_y = 0
    y_fixed_ones = 0
    for i in range(3,6):
        c = b1[i]
        if c == '1':
            y_fixed_ones +=1
            y_bits_vals.append(1)
        elif c == '0':
            y_bits_vals.append(0)
        else: # x
            y_bits_vals.append(-1)
            unknown_y +=1

    # must have at least one y bit=1
    # so count number of assignments to the unknown_y bits that produce at least one 1 with fixed ones included
    if y_fixed_ones > 0:
        y_valid_count = pow(2, unknown_y, MOD)
    else:
        # no fixed 1, so at least one unknown y bit must be 1
        # number of assignments for unknown_y bits = 2^unknown_y
        # excluding all zero assignment = 2^unknown_y -1
        if unknown_y ==0:
            # no unknown y bits, fixed ones=0, so no 1 possible -> invalid
            return 0
        y_valid_count = (pow(2, unknown_y, MOD) - 1) % MOD

    # For x bits in first byte: b1[6], b1[7]
    x1_count=1
    for i in range(6,8):
        if b1[i]=='x':
            x1_count = (x1_count*2)%MOD
        elif b1[i] in ('0','1'):
            pass
        else:
            return 0

    # For x bits in second byte: b2[2]..b2[7]
    x2_count=1
    for i in range(2,8):
        if b2[i]=='x':
            x2_count = (x2_count*2)%MOD
        elif b2[i] in ('0','1'):
            pass
        else:
            return 0

    total = (y_valid_count * x1_count) % MOD
    total = (total * x2_count) % MOD
    return total

def count_three_byte(b1,b2,b3):
    # 3 bytes:
    # 1110yyyy 10yxxxxx 10xxxxxx
    # byte1 bits: bit7=1,6=1,5=1,4=0,3=y,2=y,1=y,0=y
    # byte2 bits: 1 0 y x x x x x
    # byte3 bits: 1 0 x x x x x x
    # total y bits: 4 in byte1 + 1 in byte2 bit5= y bit
    # must have at least one y bit =1
    # Check fixed bits in byte1
    if b1[0] not in ('1','x'): # bit7=1
        return 0
    if b1[1] not in ('1','x'): # bit6=1
        return 0
    if b1[2] not in ('1','x'): # bit5=1
        return 0
    if b1[3] not in ('0','x'): # bit4=0
        return 0

    # Check fixed bits byte2
    if b2[0] not in ('1','x'): # bit7=1
        return 0
    if b2[1] not in ('0','x'): # bit6=0
        return 0

    # Check fixed bits byte3
    if b3[0] not in ('1','x'): # bit7=1
        return 0
    if b3[1] not in ('0','x'): # bit6=0
        return 0

    # y bits:
    # byte1 bits: bit3,2,1,0 (positions 3-0 in b1)
    # byte2 bit5 (position 5 in b2)
    y_positions_b1 = [3,2,1,0]
    y_positions_b2 = [2] #bit5 pos

    y_bits_list = []
    unknown_y = 0
    fixed_y_ones = 0
    # byte1 y bits
    for pos in y_positions_b1:
        c = b1[pos]
        if c == '1':
            fixed_y_ones +=1
            y_bits_list.append(1)
        elif c == '0':
            y_bits_list.append(0)
        else:
            y_bits_list.append(-1)
            unknown_y +=1
    # byte2 y bit
    c = b2[2]
    if c == '1':
        fixed_y_ones +=1
        y_bits_list.append(1)
    elif c == '0':
        y_bits_list.append(0)
    else:
        y_bits_list.append(-1)
        unknown_y +=1

    # check y bits constraint
    if fixed_y_ones > 0:
        y_valid_count = pow(2, unknown_y, MOD)
    else:
        if unknown_y == 0:
            return 0
        y_valid_count = (pow(2, unknown_y, MOD) - 1) % MOD

    # x bits count:
    # byte1 bits not checked: bit4 fixed (already 0), bits 5-7 fixed 1 1 1 already done
    # we accounted y bits and the others are fixed or y or x?

    # byte1 bits 5-7 fixed 111 done
    # byte1 bit4 fixed 0 done
    # bits 3,2,1,0 y bits handled

    # byte2 bits: bit7=1, bit6=0 done
    # bit5 y bit handled
    # bits 4,3,2,1,0 are x bits

    # byte3 bits: bit7=1, bit6=0 done
    # bits 5..0 x bits

    # count unknown x bits in byte1 (bits not y)
    # in byte1 bits are 8 bits:
    # bit7..bit0: [0],[1],[2],[3],[4],[5],[6],[7]
    # but careful: bits index 0 is MSB (bit7), index 7 is LSB (bit0) or is b1[0] bit7?
    # Actually b1[0] = bit7, b1[7] = bit0
    # So to understand bits numbering: b1[0]:bit7 (MSB), ... b1[7]: bit0 (LSB)
    # Previously we used bits as positions 0..7 = b1[0]..b1[7]

    # So byte1 bits:
    # bit7 : b1[0]
    # bit6 : b1[1]
    # bit5 : b1[2]
    # bit4 : b1[3]
    # bit3 : b1[4]
    # bit2 : b1[5]
    # bit1 : b1[6]
    # bit0 : b1[7]

    # Our previous y bits were b1[3],b1[4],b1[5],b1[6]?
    # Wait there is a mistake on y bits positions.

    # From initial problem analysis, 1110yyyy means byte1 bits:
    # bit7=1 b1[0]
    # bit6=1 b1[1]
    # bit5=1 b1[2]
    # bit4=0 b1[3]
    # bit3=y b1[4]
    # bit2=y b1[5]
    # bit1=y b1[6]
    # bit0=y b1[7]

    # So y bits in byte1 are b1[4],b1[5],b1[6],b1[7]

    # Similarly for byte2 10yxxxxx:
    # bit7=1 b2[0]
    # bit6=0 b2[1]
    # bit5=y b2[2]
    # bit4=x b2[3]
    # bit3=x b2[4]
    # bit2=x b2[5]
    # bit1=x b2[6]
    # bit0=x b2[7]

    # For byte3 10xxxxxx:
    # bit7=1 b3[0]
    # bit6=0 b3[1]
    # others x b3[2]-b3[7]

    y_bits_b1_idx = [4,5,6,7]
    y_bits_b2_idx = [2]

    y_bits_list = []
    unknown_y = 0
    fixed_y_ones = 0

    for idx in y_bits_b1_idx:
        c = b1[idx]
        if c == '1':
            fixed_y_ones +=1
            y_bits_list.append(1)
        elif c == '0':
            y_bits_list.append(0)
        elif c == 'x':
            y_bits_list.append(-1)
            unknown_y +=1
        else:
            return 0
    for idx in y_bits_b2_idx:
        c = b2[idx]
        if c == '1':
            fixed_y_ones +=1
            y_bits_list.append(1)
        elif c == '0':
            y_bits_list.append(0)
        elif c == 'x':
            y_bits_list.append(-1)
            unknown_y +=1
        else:
            return 0

    if fixed_y_ones > 0:
        y_valid_count = pow(2, unknown_y, MOD)
    else:
        if unknown_y == 0:
            return 0
        y_valid_count = (pow(2, unknown_y, MOD) -1) % MOD

    # Count x bits unknown
    # byte1 bits unknown x bits are bits not fixed and not y

    # byte1 bits: indexes 0..7
    # fixed bits:
    # b1[0-2]: fixed 1 1 1
    # b1[3]: fixed 0
    # b1[4-7]: y bits

    # So no x bits in byte1, all fixed or y bits.

    # byte2 bits:
    # b2[0]: fixed 1
    # b2[1]: fixed 0
    # b2[2]: y bit
    # b2[3]-b2[7]: x bits

    x_bits_b2_idx = [3,4,5,6,7]
    x2_count=1
    for idx in x_bits_b2_idx:
        c = b2[idx]
        if c == 'x':
            x2_count = (x2_count * 2) % MOD
        elif c in ('0','1'):
            pass
        else:
            return 0

    # byte3 bits:
    # b3[0] = 1 fixed
    # b3[1] = 0 fixed
    # b3[2..7] = x bits

    x_bits_b3_idx = [2,3,4,5,6,7]
    x3_count=1
    for idx in x_bits_b3_idx:
        c = b3[idx]
        if c == 'x':
            x3_count = (x3_count * 2) % MOD
        elif c in ('0','1'):
            pass
        else:
            return 0

    total = y_valid_count * x2_count % MOD
    total = (total * x3_count) % MOD
    return total

def count_four_byte(b1,b2,b3,b4):
    # 4 bytes:
    # 11110yyy 10yyxxxx 10xxxxxx 10xxxxxx
    # b1: 11110yyy: bit7=1,6=1,5=1,4=1,3=0,2=y,1=y,0=y
    # b2: 10yyxxxx: bit7=1,6=0
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'MOD' (ID: 52135)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0531209371984005
    2. '\n' → logprob: -3.6781208515167236
    3. 'import' → logprob: -4.303121089935303
    4. '\' → logprob: -4.803121089935303
    5. '[' → logprob: -6.928121089935303
    6. '' → logprob: -7.303121089935303
    7. '```' → logprob: -7.553121089935303
    8. 'newline' → logprob: -7.553121089935303
    9. '#' → logprob: -7.928121089935303
    10. '<|end|>' → logprob: -8.053120613098145

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6505271792411804
    2. '_' → logprob: -0.9005271792411804
    3. ' =' → logprob: -2.650527238845825
    4. ')' → logprob: -8.025527000427246
    5. ' ' → logprob: -8.150527000427246
    6. '```' → logprob: -9.150527000427246
    7. '_=' → logprob: -9.400527000427246
    8. 'ULO' → logprob: -9.525527000427246
    9. ',' → logprob: -10.025527000427246
    10. ' _' → logprob: -10.150527000427246

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1012839525938034
    2. '10' → logprob: -2.3512840270996094
    3. '100' → logprob: -6.851284027099609
    4. '1' → logprob: -11.22628402709961
    5. 'int' → logprob: -13.22628402709961
    6. ' ' → logprob: -13.85128402709961
    7. '```' → logprob: -14.10128402709961
    8. '998' → logprob: -15.35128402709961
    9. '0' → logprob: -15.47628402709961
    10. ' (' → logprob: -15.72628402709961

Token 6: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06214984506368637
    2. '100' → logprob: -2.8121497631073
    3. ' ' → logprob: -8.687150001525879
    4. '1' → logprob: -11.312150001525879
    5. 'int' → logprob: -13.937150001525879
    6. '`' → logprob: -16.187149047851562
    7. '998' → logprob: -16.312149047851562
    8. '```' → logprob: -16.562149047851562
    9. '(' → logprob: -17.062149047851562
    10. '2' → logprob: -17.562149047851562

Token 7: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.022765150293707848
    2. '00' → logprob: -4.272765159606934
    3. '09' → logprob: -5.397765159606934
    4. '9' → logprob: -6.272765159606934
    5. '07' → logprob: -7.147765159606934
    6. '0' → logprob: -7.147765159606934
    7. '_' → logprob: -8.397765159606934
    8. '+' → logprob: -9.647765159606934
    9. '```' → logprob: -10.022765159606934
    10. '*' → logprob: -10.272765159606934

Token 8: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018500959500670433
    2. '\n' → logprob: -4.643500804901123
    3. '\' → logprob: -5.393500804901123
    4. ''' → logprob: -7.268500804901123
    5. '```' → logprob: -7.518500804901123
    6. '0' → logprob: -7.518500804901123
    7. '+' → logprob: -7.893500804901123
    8. '#' → logprob: -8.018501281738281
    9. '"' → logprob: -8.768501281738281
    10. '10' → logprob: -9.018501281738281

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1709679365158081
    2. '
' → logprob: -2.5459680557250977
    3. '' → logprob: -3.2959680557250977
    4. '\' → logprob: -3.6709680557250977
    5. '*' → logprob: -5.420968055725098
    6. '

' → logprob: -5.670968055725098
    7. '+' → logprob: -6.295968055725098
    8. '**' → logprob: -6.420968055725098
    9. '```' → logprob: -6.795968055725098
    10. '#' → logprob: -6.920968055725098

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5618360042572021
    2. '
' → logprob: -1.1868360042572021
    3. '\n' → logprob: -2.436836004257202
    4. '\' → logprob: -3.811836004257202
    5. '```' → logprob: -5.436836242675781
    6. '

' → logprob: -5.561836242675781
    7. '
' → logprob: -5.686836242675781
    8. '' → logprob: -6.311836242675781
    9. '#' → logprob: -8.061836242675781
    10. '`' → logprob: -8.186836242675781

Token 11: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08541785925626755
    2. ' factorial' → logprob: -2.8354177474975586
    3. ' factor' → logprob: -5.335417747497559
    4. ' fibonacci' → logprob: -5.835417747497559
    5. ' process' → logprob: -5.960417747497559
    6. ' calculate' → logprob: -6.210417747497559
    7. ' main' → logprob: -6.585417747497559
    8. ' solve' → logprob: -6.835417747497559
    9. ' space' → logprob: -6.960417747497559
    10. ' f' → logprob: -7.085417747497559

Token 12: '_matches' (ID: 97462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004481746815145016
    2. '_tokens' → logprob: -7.254481792449951
    3. '_sequences' → logprob: -8.129481315612793
    4. '_parts' → logprob: -8.254481315612793
    5. '_div' → logprob: -8.254481315612793
    6. '_numbers' → logprob: -8.379481315612793
    7. '_sub' → logprob: -8.504481315612793
    8. '_words' → logprob: -8.629481315612793
    9. '_pairs' → logprob: -8.629481315612793
    10. '_pal' → logprob: -9.254481315612793

Token 13: '(pattern' (ID: 62660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004295045975595713
    2. '_' → logprob: -5.5042948722839355
    3. '(_' → logprob: -10.629295349121094
    4. ' (' → logprob: -11.004295349121094
    5. '("("' → logprob: -11.129295349121094
    6. 's' → logprob: -11.254295349121094
    7. '```' → logprob: -11.379295349121094
    8. '_(' → logprob: -11.629295349121094
    9. '(`' → logprob: -11.754295349121094
    10. '('' → logprob: -11.754295349121094

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16350167989730835
    2. ',' → logprob: -2.038501739501953
    3. ')' → logprob: -3.913501739501953
    4. '[' → logprob: -7.663501739501953
    5. '):
' → logprob: -10.788501739501953
    6. 's' → logprob: -11.038501739501953
    7. '<|end|>' → logprob: -11.038501739501953
    8. ':' → logprob: -11.663501739501953
    9. '[]):' → logprob: -11.663501739501953
    10. '(' → logprob: -11.663501739501953

Token 15: ' mask' (ID: 10910)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.037745364010334015
    2. 'text' → logprob: -3.412745475769043
    3. ' string' → logprob: -5.787745475769043
    4. 'string' → logprob: -7.412745475769043
    5. ' sequence' → logprob: -8.412745475769043
    6. ' word' → logprob: -9.787745475769043
    7. ' target' → logprob: -10.412745475769043
    8. ')' → logprob: -10.537745475769043
    9. ' input' → logprob: -10.912745475769043
    10. 'sequence' → logprob: -10.912745475769043

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032445008400827646
    2. ')' → logprob: -6.253244400024414
    3. ',' → logprob: -6.753244400024414
    4. ':' → logprob: -10.128244400024414
    5. ''):' → logprob: -10.503244400024414
    6. ' ):' → logprob: -10.753244400024414
    7. '_' → logprob: -11.378244400024414
    8. '=' → logprob: -11.878244400024414
    9. '[' → logprob: -12.003244400024414
    10. ' ' → logprob: -12.378244400024414

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02778582088649273
    2. ':' → logprob: -4.402785778045654
    3. '    ' → logprob: -4.652785778045654
    4. '    
' → logprob: -5.777785778045654
    5. ' :' → logprob: -7.777785778045654
    6. '```' → logprob: -7.902785778045654
    7. '     
' → logprob: -8.027786254882812
    8. '\' → logprob: -8.027786254882812
    9. ' ' → logprob: -8.402786254882812
    10. '):' → logprob: -9.027786254882812

Token 18: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09713642299175262
    2. ' result' → logprob: -3.4721364974975586
    3. 'result' → logprob: -4.222136497497559
    4. 'n' → logprob: -4.597136497497559
    5. '    
' → logprob: -4.597136497497559
    6. ' n' → logprob: -5.597136497497559
    7. '    ' → logprob: -5.597136497497559
    8. ' 
' → logprob: -5.847136497497559
    9. ' count' → logprob: -5.847136497497559
    10. 'count' → logprob: -6.097136497497559

Token 19: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5954742431640625
    2. ' matches' → logprob: -1.5954742431640625
    3. ' result' → logprob: -2.2204742431640625
    4. ' n' → logprob: -2.4704742431640625
    5. 'pass' → logprob: -2.8454742431640625
    6. 'matches' → logprob: -2.9704742431640625
    7. ' match' → logprob: -3.0954742431640625
    8. ' count' → logprob: -3.0954742431640625
    9. ' pass' → logprob: -3.2204742431640625
    10. 'count' → logprob: -3.5954742431640625

Token 20: ' &' (ID: 827)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4807097911834717
    2. '_' → logprob: -1.8557097911834717
    3. '=' → logprob: -2.8557097911834717
    4. '_tokens' → logprob: -2.8557097911834717
    5. '_length' → logprob: -3.1057097911834717
    6. '   ' → logprob: -3.3557097911834717
    7. '_len' → logprob: -4.730710029602051
    8. '_count' → logprob: -5.355710029602051
    9. ' ' → logprob: -5.480710029602051
    10. ')' → logprob: -5.605710029602051

Token 21: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.011299865320324898
    2. 'mask' → logprob: -4.761300086975098
    3. ' ' → logprob: -6.886300086975098
    4. 'nbsp' → logprob: -7.386300086975098
    5. '=' → logprob: -7.636300086975098
    6. ' ~' → logprob: -9.386300086975098
    7. '0' → logprob: -9.698800086975098
    8. '	mask' → logprob: -9.823800086975098
    9. '1' → logprob: -9.948800086975098
    10. ' (' → logprob: -10.136300086975098

Token 22: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.74654620885849
    2. ' =' → logprob: -1.1215462684631348
    3. ')' → logprob: -2.3715462684631348
    4. '   ' → logprob: -2.9965462684631348
    5. '=' → logprob: -4.121546268463135
    6. ':' → logprob: -4.746546268463135
    7. ' ==' → logprob: -4.996546268463135
    8. ' ' → logprob: -5.371546268463135
    9. '_' → logprob: -5.996546268463135
    10. ' &' → logprob: -6.246546268463135

Token 23: ' arrays' (ID: 38774)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5604052543640137
    2. ' list' → logprob: -1.5604052543640137
    3. ' int' → logprob: -2.4354052543640137
    4. '   ' → logprob: -3.8104052543640137
    5. ' strings' → logprob: -3.8104052543640137
    6. ' ' → logprob: -4.185405254364014
    7. 'int' → logprob: -4.435405254364014
    8. 'str' → logprob: -4.435405254364014
    9. ' bytes' → logprob: -4.560405254364014
    10. 'list' → logprob: -4.935405254364014

Token 24: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12961161136627197
    2. '<|end|>' → logprob: -2.6296114921569824
    3. 'def' → logprob: -4.629611492156982
    4. '<|end|>' → logprob: -4.879611492156982
    5. '    
' → logprob: -5.004611492156982
    6. '```' → logprob: -5.254611492156982
    7. ' of' → logprob: -5.254611492156982
    8. '[]' → logprob: -5.254611492156982
    9. '[' → logprob: -5.879611492156982
    10. ')' → logprob: -7.004611492156982

Token 25: ' bits' (ID: 18189)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.41695132851600647
    2. ' bo' → logprob: -2.1669514179229736
    3. ' int' → logprob: -2.9169514179229736
    4. ' ints' → logprob: -3.5419514179229736
    5. 'inte' → logprob: -3.6669514179229736
    6. 'int' → logprob: -3.7919514179229736
    7. ' length' → logprob: -3.9169514179229736
    8. ' ' → logprob: -3.9169514179229736
    9. ' characters' → logprob: -4.1669511795043945
    10. 'ints' → logprob: -4.7919511795043945

Token 26: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1713220328092575
    2. ':' → logprob: -2.0463221073150635
    3. '):' → logprob: -4.796321868896484
    4. ' :' → logprob: -5.171321868896484
    5. '```' → logprob: -6.046321868896484
    6. '<|end|>' → logprob: -6.046321868896484
    7. '    
' → logprob: -6.546321868896484
    8. ',' → logprob: -6.671321868896484
    9. ')' → logprob: -7.046321868896484
    10. '[' → logprob: -7.171321868896484

Token 27: ' None' (ID: 4662)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.06648971885442734
    2. 'inte' → logprob: -3.3164896965026855
    3. ' bo' → logprob: -5.1914896965026855
    4. ' ' → logprob: -5.5664896965026855
    5. ' bytes' → logprob: -5.8164896965026855
    6. 'ints' → logprob: -5.8164896965026855
    7. ' ints' → logprob: -5.8164896965026855
    8. ' lists' → logprob: -6.3164896965026855
    9. 'int' → logprob: -6.3164896965026855
    10. ' int' → logprob: -6.8164896965026855

Token 28: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37302300333976746
    2. '   ' → logprob: -1.3730230331420898
    3. ':' → logprob: -3.24802303314209
    4. ')' → logprob: -4.49802303314209
    5. ' :' → logprob: -6.37302303314209
    6. '):
' → logprob: -6.49802303314209
    7. '```' → logprob: -6.49802303314209
    8. ',' → logprob: -6.99802303314209
    9. '<|end|>' → logprob: -7.74802303314209
    10. ' ):' → logprob: -8.12302303314209

Token 29: ' unknown' (ID: 17927)
  Prédit: ' unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.6892493963241577
    2. 'unknown' → logprob: -1.5642493963241577
    3. '"' → logprob: -2.5642495155334473
    4. ' "' → logprob: -3.3142495155334473
    5. 'wild' → logprob: -3.3142495155334473
    6. ' wild' → logprob: -3.4392495155334473
    7. ' wildcard' → logprob: -3.5642495155334473
    8. ' don't' → logprob: -3.8142495155334473
    9. ' positions' → logprob: -4.439249515533447
    10. 'don't' → logprob: -4.689249515533447

Token 30: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2453930824995041
    2. 's' → logprob: -2.2453930377960205
    3. '   ' → logprob: -2.7453930377960205
    4. ')' → logprob: -3.6203930377960205
    5. ':' → logprob: -4.6203932762146
    6. '):
' → logprob: -6.2453932762146
    7. ' s' → logprob: -6.3703932762146
    8. ' ):' → logprob: -6.6203932762146
    9. ',' → logprob: -6.7453932762146
    10. '```' → logprob: -6.9953932762146

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30317720770835876
    2. ':' → logprob: -1.4281772375106812
    3. '):' → logprob: -4.053177356719971
    4. ' :' → logprob: -6.178177356719971
    5. '    
' → logprob: -7.178177356719971
    6. ')' → logprob: -7.553177356719971
    7. ':
' → logprob: -8.303176879882812
    8. '```' → logprob: -8.553176879882812
    9. ',' → logprob: -9.178176879882812
    10. '):
' → logprob: -10.053176879882812

Token 32: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16478292644023895
    2. 'n' → logprob: -2.664783000946045
    3. '    ' → logprob: -2.789783000946045
    4. '    
' → logprob: -5.289783000946045
    5. ' n' → logprob: -5.539783000946045
    6. '     
' → logprob: -5.789783000946045
    7. '
' → logprob: -6.289783000946045
    8. ' ' → logprob: -6.664783000946045
    9. 'result' → logprob: -7.039783000946045
    10. '       ' → logprob: -7.164783000946045

Token 33: ' pattern' (ID: 8302)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018384624272584915
    2. '   ' → logprob: -5.1433844566345215
    3. 'n' → logprob: -5.3933844566345215
    4. ' result' → logprob: -5.6433844566345215
    5. ' length' → logprob: -5.8933844566345215
    6. ' m' → logprob: -7.7683844566345215
    7. ' res' → logprob: -8.26838493347168
    8. '    ' → logprob: -8.39338493347168
    9. ' dp' → logprob: -8.76838493347168
    10. ' matches' → logprob: -9.39338493347168

Token 34: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9503971338272095
    2. '[' → logprob: -1.4503971338272095
    3. ' =' → logprob: -2.20039701461792
    4. ')' → logprob: -2.20039701461792
    5. '_' → logprob: -2.70039701461792
    6. ' ' → logprob: -4.07539701461792
    7. '[i' → logprob: -4.45039701461792
    8. '=' → logprob: -5.07539701461792
    9. '[]' → logprob: -5.07539701461792
    10. '  ' → logprob: -5.07539701461792

Token 35: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7859126925468445
    2. '   ' → logprob: -1.2859127521514893
    3. '=' → logprob: -2.5359127521514893
    4. ' ' → logprob: -3.0359127521514893
    5. ' ==' → logprob: -3.5359127521514893
    6. ':' → logprob: -3.7859127521514893
    7. ')' → logprob: -3.7859127521514893
    8. '[' → logprob: -4.16091251373291
    9. '==' → logprob: -4.78591251373291
    10. ',' → logprob: -4.91091251373291

Token 36: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7718012928962708
    2. ' ' → logprob: -0.8968012928962708
    3. ' None' → logprob: -2.771801233291626
    4. ' for' → logprob: -4.146801471710205
    5. 'None' → logprob: -4.396801471710205
    6. '    ' → logprob: -4.646801471710205
    7. '1' → logprob: -4.896801471710205
    8. '0' → logprob: -5.271801471710205
    9. '  ' → logprob: -5.646801471710205
    10. ' return' → logprob: -5.896801471710205

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29343846440315247
    2. '1' → logprob: -1.66843843460083
    3. ' ' → logprob: -2.79343843460083
    4. 'None' → logprob: -6.54343843460083
    5. ' None' → logprob: -7.54343843460083
    6. 'def' → logprob: -8.043438911437988
    7. 'pattern' → logprob: -8.543438911437988
    8. ''' → logprob: -8.668438911437988
    9. '-' → logprob: -8.668438911437988
    10. '   ' → logprob: -8.668438911437988

Token 38: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008464933373034
    2. ',' → logprob: -5.508464813232422
    3. 'or' → logprob: -5.883464813232422
    4. 's' → logprob: -7.508464813232422
    5. ' and' → logprob: -7.633464813232422
    6. '/' → logprob: -8.258464813232422
    7. ' ' → logprob: -8.633464813232422
    8. ' ,' → logprob: -9.883464813232422
    9. '<|end|>' → logprob: -10.258464813232422
    10. ''s' → logprob: -11.633464813232422

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231269001960754
    2. ' ' → logprob: -0.8981269001960754
    3. ' None' → logprob: -13.648126602172852
    4. 'None' → logprob: -14.148126602172852
    5. ' ' → logprob: -14.648126602172852
    6. '<|end|>' → logprob: -14.898126602172852
    7. '  ' → logprob: -15.585626602172852
    8. '   ' → logprob: -16.27312660217285
    9. '```' → logprob: -16.27312660217285
    10. 's' → logprob: -16.52312660217285

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'None' → logprob: -15.500051498413086
    4. '   ' → logprob: -16.937551498413086
    5. '```' → logprob: -17.562551498413086
    6. '  ' → logprob: -17.750051498413086
    7. ' None' → logprob: -18.062551498413086
    8. '`' → logprob: -18.187551498413086
    9. ' ' → logprob: -18.375051498413086
    10. '۱' → logprob: -18.500051498413086

Token 41: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013465484604239464
    2. ':' → logprob: -5.138465404510498
    3. '```' → logprob: -6.138465404510498
    4. 'def' → logprob: -6.513465404510498
    5. '    
' → logprob: -7.263465404510498
    6. '
' → logprob: -7.388465404510498
    7. ' ' → logprob: -7.513465404510498
    8. '):' → logprob: -8.013465881347656
    9. ')' → logprob: -8.013465881347656
    10. ' :' → logprob: -8.638465881347656

Token 42: ' mask' (ID: 10910)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1276104599237442
    2. 'def' → logprob: -3.002610445022583
    3. ' def' → logprob: -3.377610445022583
    4. ' mask' → logprob: -4.377610683441162
    5. ' None' → logprob: -4.877610683441162
    6. ' result' → logprob: -6.002610683441162
    7. ' ' → logprob: -6.252610683441162
    8. ' if' → logprob: -6.377610683441162
    9. ' for' → logprob: -6.502610683441162
    10. ' or' → logprob: -7.127610683441162

Token 43: ' bits' (ID: 18189)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2849982976913452
    2. '[' → logprob: -1.6599982976913452
    3. ' =' → logprob: -1.7849982976913452
    4. '   ' → logprob: -2.1599984169006348
    5. ':' → logprob: -3.0349984169006348
    6. ')' → logprob: -3.2849984169006348
    7. '==' → logprob: -3.2849984169006348
    8. ' ' → logprob: -3.2849984169006348
    9. '):' → logprob: -3.9099984169006348
    10. ' :' → logprob: -4.159998416900635

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.115962266921997
    2. ' are' → logprob: -1.365962266921997
    3. ' :' → logprob: -1.865962266921997
    4. ' ' → logprob: -2.615962266921997
    5. ' can' → logprob: -2.740962266921997
    6. ' =' → logprob: -2.865962266921997
    7. ' ==' → logprob: -3.365962266921997
    8. '   ' → logprob: -4.115962028503418
    9. ' represent' → logprob: -5.615962028503418
    10. '=' → logprob: -6.365962028503418

Token 45: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23729844391345978
    2. '1' → logprob: -2.2372984886169434
    3. ' None' → logprob: -2.7372984886169434
    4. '0' → logprob: -3.4872984886169434
    5. 'None' → logprob: -4.862298488616943
    6. '   ' → logprob: -7.487298488616943
    7. ' True' → logprob: -8.362298011779785
    8. '  ' → logprob: -9.112298011779785
    9. '[' → logprob: -9.112298011779785
    10. 'True' → logprob: -9.862298011779785

Token 46: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1121293380856514
    2. ',' → logprob: -2.3621294498443604
    3. ' ' → logprob: -5.612129211425781
    4. ' ,' → logprob: -5.737129211425781
    5. '   ' → logprob: -6.362129211425781
    6. 'or' → logprob: -6.612129211425781
    7. '<|end|>' → logprob: -6.987129211425781
    8. ' for' → logprob: -7.862129211425781
    9. '  ' → logprob: -8.862129211425781
    10. ' if' → logprob: -9.112129211425781

Token 47: ' bit' (ID: 3546)
  Prédit: ' known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' known' → logprob: -0.30231454968452454
    2. ' valid' → logprob: -2.552314519882202
    3. ' the' → logprob: -3.052314519882202
    4. ' pattern' → logprob: -3.677314519882202
    5. ' unknown' → logprob: -3.927314519882202
    6. ' relevant' → logprob: -4.177314758300781
    7. ' not' → logprob: -4.302314758300781
    8. 'known' → logprob: -4.302314758300781
    9. ' fixed' → logprob: -4.802314758300781
    10. ' ' → logprob: -4.802314758300781

Token 48: ' fixed' (ID: 13213)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11726149171590805
    2. ' can' → logprob: -2.8672614097595215
    3. ' must' → logprob: -3.6172614097595215
    4. ' used' → logprob: -5.3672614097595215
    5. ' should' → logprob: -5.4922614097595215
    6. ' could' → logprob: -6.1172614097595215
    7. 'is' → logprob: -6.4922614097595215
    8. ' ' → logprob: -6.4922614097595215
    9. ' matches' → logprob: -6.7422614097595215
    10. ' known' → logprob: -6.8672614097595215

Token 49: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05593625083565712
    2. ',' → logprob: -3.805936336517334
    3. ':' → logprob: -4.055936336517334
    4. '```' → logprob: -5.305936336517334
    5. '):' → logprob: -5.555936336517334
    6. ' :' → logprob: -5.805936336517334
    7. ' ' → logprob: -7.305936336517334
    8. ' ,' → logprob: -7.680936336517334
    9. 'def' → logprob: -7.805936336517334
    10. ')' → logprob: -8.305935859680176

Token 50: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.12418617308139801
    2. 'False' → logprob: -2.2491862773895264
    3. ' else' → logprob: -5.374186038970947
    4. ' ' → logprob: -5.499186038970947
    5. ' None' → logprob: -6.624186038970947
    6. '   ' → logprob: -7.999186038970947
    7. ' or' → logprob: -8.499186515808105
    8. 'None' → logprob: -8.999186515808105
    9. ' True' → logprob: -9.124186515808105
    10. ' and' → logprob: -9.374186515808105

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0219984482973814
    2. ' or' → logprob: -4.146998405456543
    3. 'if' → logprob: -5.396998405456543
    4. ' for' → logprob: -6.896998405456543
    5. 'or' → logprob: -8.521998405456543
    6. ' otherwise' → logprob: -9.521998405456543
    7. '<|end|>' → logprob: -9.896998405456543
    8. ' ' → logprob: -10.521998405456543
    9. ',' → logprob: -10.771998405456543
    10. ')' → logprob: -11.521998405456543

Token 52: ' unknown' (ID: 17927)
  Prédit: ' unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.009499762207269669
    2. 'unknown' → logprob: -5.259499549865723
    3. ' None' → logprob: -6.259499549865723
    4. ' not' → logprob: -6.509499549865723
    5. ' any' → logprob: -8.759499549865723
    6. ' don't' → logprob: -9.009499549865723
    7. ' False' → logprob: -9.384499549865723
    8. ' variable' → logprob: -9.384499549865723
    9. 'None' → logprob: -9.384499549865723
    10. ' can' → logprob: -10.259499549865723

Token 53: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4904177188873291
    2. '   ' → logprob: -1.115417718887329
    3. '):' → logprob: -3.615417718887329
    4. '
' → logprob: -4.11541748046875
    5. ':
' → logprob: -5.49041748046875
    6. '```' → logprob: -5.86541748046875
    7. ')' → logprob: -6.24041748046875
    8. '\n' → logprob: -6.24041748046875
    9. '    
' → logprob: -6.61541748046875
    10. '):
' → logprob: -6.86541748046875

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017035115510225296
    2. ':' → logprob: -4.267035007476807
    3. '    
' → logprob: -6.142035007476807
    4. '):' → logprob: -8.892035484313965
    5. '
' → logprob: -9.267035484313965
    6. ')' → logprob: -9.517035484313965
    7. ' :' → logprob: -9.642035484313965
    8. '    ' → logprob: -9.892035484313965
    9. '```' → logprob: -10.142035484313965
    10. 'n' → logprob: -10.392035484313965

Token 55: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04434206709265709
    2. 'n' → logprob: -3.794342041015625
    3. '    
' → logprob: -5.044342041015625
    4. '    ' → logprob: -6.044342041015625
    5. '
' → logprob: -6.044342041015625
    6. ' n' → logprob: -6.169342041015625
    7. ' result' → logprob: -6.544342041015625
    8. ' ' → logprob: -6.669342041015625
    9. 'result' → logprob: -7.169342041015625
    10. ':' → logprob: -7.419342041015625

Token 56: ' Count' (ID: 6789)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5358365178108215
    2. '   ' → logprob: -2.1608364582061768
    3. ' result' → logprob: -2.6608364582061768
    4. ' matches' → logprob: -2.6608364582061768
    5. ' length' → logprob: -3.1608364582061768
    6. 'n' → logprob: -3.5358364582061768
    7. ' res' → logprob: -3.7858364582061768
    8. ' possible' → logprob: -4.535836696624756
    9. ' count' → logprob: -4.535836696624756
    10. 'result' → logprob: -5.160836696624756

Token 57: ' how' (ID: 1495)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.339560866355896
    2. ' the' → logprob: -1.464560866355896
    3. ' =' → logprob: -2.2145609855651855
    4. ' matches' → logprob: -2.4645609855651855
    5. 's' → logprob: -2.7145609855651855
    6. ' ' → logprob: -3.2145609855651855
    7. '   ' → logprob: -3.3395609855651855
    8. ' matching' → logprob: -3.4645609855651855
    9. '_matches' → logprob: -3.9645609855651855
    10. '=' → logprob: -4.0895609855651855

Token 58: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.009829873219132423
    2. 'many' → logprob: -4.634829998016357
    3. '   ' → logprob: -9.8848295211792
    4. ' the' → logprob: -12.0098295211792
    5. '_many' → logprob: -12.0098295211792
    6. ' to' → logprob: -12.5098295211792
    7. 'def' → logprob: -13.3848295211792
    8. '    ' → logprob: -13.6348295211792
    9. 'Many' → logprob: -14.5098295211792
    10. ' often' → logprob: -14.5098295211792

Token 59: ' bits' (ID: 18189)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.5604197978973389
    2. ' matches' → logprob: -1.9354197978973389
    3. 'matches' → logprob: -2.310419797897339
    4. 'patterns' → logprob: -2.310419797897339
    5. 'pattern' → logprob: -2.685419797897339
    6. ' bits' → logprob: -2.810419797897339
    7. ' valid' → logprob: -3.185419797897339
    8. ' ' → logprob: -3.185419797897339
    9. ' ways' → logprob: -3.310419797897339
    10. ' pattern' → logprob: -3.560419797897339

Token 60: ' patterns' (ID: 18587)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.1698765754699707
    2. ' are' → logprob: -2.1698765754699707
    3. ' in' → logprob: -4.794876575469971
    4. 'match' → logprob: -4.919876575469971
    5. ' remain' → logprob: -5.419876575469971
    6. ' can' → logprob: -5.794876575469971
    7. ' matches' → logprob: -5.794876575469971
    8. ' ' → logprob: -5.794876575469971
    9. ' set' → logprob: -5.919876575469971
    10. '   ' → logprob: -6.294876575469971

Token 61: ' conform' (ID: 19627)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.18298602104187012
    2. ' in' → logprob: -2.80798602104187
    3. ' are' → logprob: -3.18298602104187
    4. ' ' → logprob: -3.18298602104187
    5. ' can' → logprob: -4.182986259460449
    6. 'match' → logprob: -6.182986259460449
    7. ' have' → logprob: -7.307986259460449
    8. '   ' → logprob: -7.432986259460449
    9. ' remain' → logprob: -7.432986259460449
    10. ' consistent' → logprob: -7.682986259460449

Token 62: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.009017392992973328
    2. ' ' → logprob: -5.509017467498779
    3. '   ' → logprob: -6.009017467498779
    4. '_to' → logprob: -7.384017467498779
    5. '    ' → logprob: -7.509017467498779
    6. '  ' → logprob: -7.634017467498779
    7. 'to' → logprob: -8.509016990661621
    8. 's' → logprob: -8.634016990661621
    9. 'ing' → logprob: -9.009016990661621
    10. '_' → logprob: -9.384016990661621

Token 63: ' pattern' (ID: 8302)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.056489795446395874
    2. ' pattern' → logprob: -3.4314897060394287
    3. ' ' → logprob: -5.181489944458008
    4. ' to' → logprob: -5.431489944458008
    5. 'the' → logprob: -5.556489944458008
    6. '   ' → logprob: -6.056489944458008
    7. ' mask' → logprob: -6.431489944458008
    8. 'pattern' → logprob: -6.681489944458008
    9. ' given' → logprob: -6.931489944458008
    10. '    ' → logprob: -7.431489944458008

Token 64: '/m' (ID: 5712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018839804455637932
    2. ':' → logprob: -4.6438398361206055
    3. ',' → logprob: -6.6438398361206055
    4. ' =' → logprob: -6.7688398361206055
    5. '(' → logprob: -7.2688398361206055
    6. '.' → logprob: -7.5188398361206055
    7. '    ' → logprob: -7.6438398361206055
    8. ' with' → logprob: -7.6438398361206055
    9. '```' → logprob: -7.6438398361206055
    10. '  ' → logprob: -7.7688398361206055

Token 65: 'ask' (ID: 1447)
  Prédit: 'ask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ask' → logprob: -0.003952544182538986
    2. 'atch' → logprob: -6.128952503204346
    3. 'a' → logprob: -6.753952503204346
    4. 'asks' → logprob: -8.628952980041504
    5. 'at' → logprob: -9.128952980041504
    6. '```' → logprob: -9.878952980041504
    7. 'asked' → logprob: -10.378952980041504
    8. '   ' → logprob: -11.128952980041504
    9. 'asking' → logprob: -11.316452980041504
    10. 'atching' → logprob: -11.316452980041504

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3560202121734619
    2. ':' → logprob: -1.231020212173462
    3. '
' → logprob: -6.231019973754883
    4. '):' → logprob: -6.231019973754883
    5. ' :' → logprob: -6.981019973754883
    6. ':
' → logprob: -7.231019973754883
    7. 'def' → logprob: -7.856019973754883
    8. '    
' → logprob: -7.856019973754883
    9. ',' → logprob: -8.231019973754883
    10. '```' → logprob: -8.481019973754883

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35165154933929443
    2. ':' → logprob: -1.2266515493392944
    3. ':
' → logprob: -6.476651668548584
    4. '```' → logprob: -7.851651668548584
    5. ' :' → logprob: -7.976651668548584
    6. '    
' → logprob: -8.351651191711426
    7. '
' → logprob: -8.726651191711426
    8. '):' → logprob: -9.226651191711426
    9. ' ' → logprob: -10.101651191711426
    10. 'def' → logprob: -10.101651191711426

Token 68: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012261684983968735
    2. 'n' → logprob: -5.262261867523193
    3. ':' → logprob: -5.762261867523193
    4. 'result' → logprob: -6.762261867523193
    5. '    ' → logprob: -7.637261867523193
    6. ' result' → logprob: -7.887261867523193
    7. 'count' → logprob: -8.012261390686035
    8. ' ' → logprob: -8.512261390686035
    9. '```' → logprob: -8.762261390686035
    10. 'def' → logprob: -8.887261390686035

Token 69: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.048823356628418
    2. ' n' → logprob: -1.173823356628418
    3. 'n' → logprob: -1.673823356628418
    4. ' result' → logprob: -2.548823356628418
    5. ' if' → logprob: -3.173823356628418
    6. 'result' → logprob: -4.673823356628418
    7. '    ' → logprob: -5.298823356628418
    8. ' count' → logprob: -5.298823356628418
    9. ' total' → logprob: -6.048823356628418
    10. 'count' → logprob: -6.173823356628418

Token 70: ' unknown' (ID: 17927)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5279500484466553
    2. ' bit' → logprob: -1.5279500484466553
    3. ' p' → logprob: -3.0279500484466553
    4. ' _' → logprob: -3.2779500484466553
    5. ' each' → logprob: -4.027950286865234
    6. ' ' → logprob: -4.277950286865234
    7. 'bit' → logprob: -4.277950286865234
    8. ' fixed' → logprob: -4.777950286865234
    9. ' b' → logprob: -5.027950286865234
    10. ' bits' → logprob: -5.152950286865234

Token 71: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.3404785394668579
    2. ' ' → logprob: -2.0904784202575684
    3. '_bits' → logprob: -2.2154784202575684
    4. 's' → logprob: -4.715478420257568
    5. 'bits' → logprob: -4.715478420257568
    6. '_' → logprob: -4.840478420257568
    7. ' spaces' → logprob: -5.340478420257568
    8. ' patterns' → logprob: -5.840478420257568
    9. '   ' → logprob: -5.965478420257568
    10. ':' → logprob: -6.215478420257568

Token 72: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7092318534851074
    2. ',' → logprob: -1.3342318534851074
    3. '):' → logprob: -2.3342318534851074
    4. ':' → logprob: -2.7092318534851074
    5. ' :' → logprob: -4.334231853485107
    6. ' in' → logprob: -4.334231853485107
    7. ' ,' → logprob: -4.459231853485107
    8. ' return' → logprob: -4.834231853485107
    9. '    ' → logprob: -5.209231853485107
    10. ' ' → logprob: -5.334231853485107

Token 73: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6683468818664551
    2. ''' → logprob: -1.293346881866455
    3. '',' → logprob: -2.043346881866455
    4. ',' → logprob: -3.168346881866455
    5. ' pattern' → logprob: -5.168346881866455
    6. ' bits' → logprob: -5.168346881866455
    7. 'pattern' → logprob: -6.043346881866455
    8. ' ' → logprob: -6.043346881866455
    9. ' True' → logprob: -6.168346881866455
    10. ' '' → logprob: -6.293346881866455

Token 74: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1825866550207138
    2. '',' → logprob: -1.932586669921875
    3. '':' → logprob: -4.932586669921875
    4. ''s' → logprob: -5.432586669921875
    5. ''),' → logprob: -6.057586669921875
    6. '')' → logprob: -6.182586669921875
    7. ')'' → logprob: -6.307586669921875
    8. ')',' → logprob: -7.057586669921875
    9. ')' → logprob: -7.682586669921875
    10. ''):' → logprob: -7.682586669921875

Token 75: ' they' (ID: 1023)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1741599440574646
    2. ' count' → logprob: -3.0491600036621094
    3. ' result' → logprob: -3.2991600036621094
    4. '   ' → logprob: -3.2991600036621094
    5. 'return' → logprob: -3.6741600036621094
    6. 'count' → logprob: -5.424160003662109
    7. 'result' → logprob: -5.924160003662109
    8. '    ' → logprob: -6.924160003662109
    9. ' ' → logprob: -7.049160003662109
    10. ' total' → logprob: -7.299160003662109

Token 76: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.038977038115262985
    2. ' are' → logprob: -4.288977146148682
    3. ' could' → logprob: -4.538977146148682
    4. 'can' → logprob: -4.788977146148682
    5. ' may' → logprob: -6.663977146148682
    6. ' have' → logprob: -6.788977146148682
    7. '   ' → logprob: -7.163977146148682
    8. 'could' → logprob: -7.663977146148682
    9. ' multiply' → logprob: -7.913977146148682
    10. 'are' → logprob: -8.413976669311523

Token 77: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05058996379375458
    2. ' take' → logprob: -3.5505900382995605
    3. ' match' → logprob: -4.8005900382995605
    4. 'be' → logprob: -5.1755900382995605
    5. ' vary' → logprob: -5.8005900382995605
    6. ' ' → logprob: -6.9255900382995605
    7. ' have' → logprob: -7.3005900382995605
    8. ' represent' → logprob: -7.5505900382995605
    9. 'match' → logprob: -7.5505900382995605
    10. ' either' → logprob: -8.800589561462402

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3728296458721161
    2. ' either' → logprob: -1.8728296756744385
    3. 'either' → logprob: -2.3728296756744385
    4. ' ' → logprob: -3.1228296756744385
    5. ' any' → logprob: -4.747829437255859
    6. ' anything' → logprob: -5.247829437255859
    7. 'anything' → logprob: -5.747829437255859
    8. 'any' → logprob: -6.372829437255859
    9. 'both' → logprob: -7.372829437255859
    10. ' both' → logprob: -7.997829437255859

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10315776616334915
    2. 'either' → logprob: -2.3531577587127686
    3. ' either' → logprob: -6.103157997131348
    4. ' ' → logprob: -7.728157997131348
    5. 'both' → logprob: -8.353157997131348
    6. 'anything' → logprob: -11.353157997131348
    7. 'any' → logprob: -11.603157997131348
    8. 'e' → logprob: -12.728157997131348
    9. 'Either' → logprob: -12.728157997131348
    10. '```' → logprob: -13.103157997131348

Token 80: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0029286143835633993
    2. 'or' → logprob: -6.752928733825684
    3. ',' → logprob: -7.002928733825684
    4. '<|end|>' → logprob: -8.127928733825684
    5. ' and' → logprob: -9.252928733825684
    6. ' ' → logprob: -9.252928733825684
    7. '   ' → logprob: -9.377928733825684
    8. 's' → logprob: -9.877928733825684
    9. ''s' → logprob: -9.877928733825684
    10. ')' → logprob: -10.502928733825684

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06993754208087921
    2. ' ' → logprob: -2.6949374675750732
    3. ' ' → logprob: -14.507437705993652
    4. '   ' → logprob: -15.507437705993652
    5. '  ' → logprob: -16.569936752319336
    6. '```' → logprob: -16.819936752319336
    7. '<|end|>' → logprob: -17.444936752319336
    8. ' or' → logprob: -17.507436752319336
    9. '۱' → logprob: -17.569936752319336
    10. '１' → logprob: -17.944936752319336

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -17.375085830688477
    4. '   ' → logprob: -18.187585830688477
    5. ' ' → logprob: -18.187585830688477
    6. '۱' → logprob: -18.375085830688477
    7. '１' → logprob: -18.812585830688477
    8. '  ' → logprob: -18.875085830688477
    9. '`' → logprob: -19.250085830688477
    10. ',' → logprob: -19.437585830688477

Token 83: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0678698793053627
    2. ':' → logprob: -3.1928699016571045
    3. 'n' → logprob: -4.192869663238525
    4. '
' → logprob: -5.317869663238525
    5. '    
' → logprob: -6.442869663238525
    6. '```' → logprob: -7.442869663238525
    7. ' ' → logprob: -7.942869663238525
    8. 'def' → logprob: -8.192870140075684
    9. '   
' → logprob: -8.817870140075684
    10. ',' → logprob: -8.817870140075684

Token 84: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6772289872169495
    2. '   ' → logprob: -1.0522289276123047
    3. 'return' → logprob: -2.1772289276123047
    4. '2' → logprob: -4.427228927612305
    5. '1' → logprob: -5.052228927612305
    6. ' ' → logprob: -5.677228927612305
    7. ' result' → logprob: -6.177228927612305
    8. 'result' → logprob: -6.927228927612305
    9. ' count' → logprob: -7.052228927612305
    10. 'def' → logprob: -7.552228927612305

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01978260651230812
    2. 'return' → logprob: -4.269782543182373
    3. ' return' → logprob: -5.894782543182373
    4. '1' → logprob: -6.394782543182373
    5. ' ' → logprob: -7.519782543182373
    6. '   ' → logprob: -7.894782543182373
    7. '```' → logprob: -9.019783020019531
    8. '`' → logprob: -10.269783020019531
    9. 'pow' → logprob: -10.269783020019531
    10. '**' → logprob: -11.394783020019531

Token 86: ' options' (ID: 3880)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5251795053482056
    2. '**' → logprob: -0.9001795053482056
    3. ' *' → logprob: -6.525179386138916
    4. '*' → logprob: -7.650179386138916
    5. '<|end|>' → logprob: -10.025179862976074
    6. ')' → logprob: -11.400179862976074
    7. '^' → logprob: -11.525179862976074
    8. ' ' → logprob: -11.900179862976074
    9. '***' → logprob: -12.150179862976074
    10. 'def' → logprob: -12.275179862976074

Token 87: ' each' (ID: 2454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02471788413822651
    2. 'n' → logprob: -4.024717807769775
    3. 'def' → logprob: -6.524717807769775
    4. ':' → logprob: -6.524717807769775
    5. 'result' → logprob: -7.399717807769775
    6. 'count' → logprob: -7.399717807769775
    7. '
' → logprob: -7.774717807769775
    8. ',' → logprob: -8.274718284606934
    9. '.' → logprob: -8.399718284606934
    10. '```' → logprob: -8.774718284606934

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04274383559823036
    2. ':' → logprob: -3.6677439212799072
    3. '
' → logprob: -4.917743682861328
    4. 'n' → logprob: -5.917743682861328
    5. '    
' → logprob: -5.917743682861328
    6. ' ' → logprob: -7.542743682861328
    7. '```' → logprob: -7.542743682861328
    8. ' 
' → logprob: -7.917743682861328
    9. '   
' → logprob: -8.167743682861328
    10. '\n' → logprob: -8.417743682861328

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028476594015955925
    2. ':' → logprob: -4.653476715087891
    3. 'n' → logprob: -5.278476715087891
    4. '
' → logprob: -5.403476715087891
    5. '    
' → logprob: -5.903476715087891
    6. '```' → logprob: -6.653476715087891
    7. ' ' → logprob: -7.153476715087891
    8. ' 
' → logprob: -7.153476715087891
    9. '\n' → logprob: -7.403476715087891
    10. '   
' → logprob: -7.778476715087891

Token 90: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07564425468444824
    2. 'n' → logprob: -2.7006442546844482
    3. '    ' → logprob: -5.950644493103027
    4. ' n' → logprob: -6.700644493103027
    5. '    
' → logprob: -7.825644493103027
    6. ' ' → logprob: -7.950644493103027
    7. '  ' → logprob: -8.700644493103027
    8. '     
' → logprob: -9.075644493103027
    9. '   
' → logprob: -9.200644493103027
    10. 'result' → logprob: -9.200644493103027

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02287934347987175
    2. '=' → logprob: -3.8978793621063232
    3. '_' → logprob: -6.272879123687744
    4. ' *=' → logprob: -8.272879600524902
    5. ' ' → logprob: -9.522879600524902
    6. '_space' → logprob: -10.647879600524902
    7. '  ' → logprob: -10.772879600524902
    8. 'space' → logprob: -10.772879600524902
    9. 's' → logprob: -11.772879600524902
    10. ' <<=' → logprob: -11.897879600524902

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31368622183799744
    2. '1' → logprob: -1.3136862516403198
    3. '0' → logprob: -8.31368637084961
    4. '2' → logprob: -9.43868637084961
    5. '(' → logprob: -10.31368637084961
    6. 'pow' → logprob: -10.68868637084961
    7. ' pow' → logprob: -11.56368637084961
    8. ' (' → logprob: -11.68868637084961
    9. '  ' → logprob: -12.31368637084961
    10. 'sum' → logprob: -12.43868637084961

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002304650843143463
    2. '0' → logprob: -6.627304553985596
    3. ' ' → logprob: -7.377304553985596
    4. '2' → logprob: -8.502305030822754
    5. '(' → logprob: -9.502305030822754
    6. 'pow' → logprob: -9.752305030822754
    7. 'sum' → logprob: -12.002305030822754
    8. '   ' → logprob: -12.502305030822754
    9. ' (' → logprob: -13.377305030822754
    10. 'int' → logprob: -13.627305030822754

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.662059485912323
    2. '   ' → logprob: -1.0370595455169678
    3. ' for' → logprob: -3.0370595455169678
    4. 'for' → logprob: -3.5370595455169678
    5. '    
' → logprob: -3.9120595455169678
    6. '*' → logprob: -5.037059307098389
    7. '<|end|>' → logprob: -5.162059307098389
    8. ' ' → logprob: -5.662059307098389
    9. ' 
' → logprob: -5.787059307098389
    10. '\' → logprob: -6.287059307098389

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19676624238491058
    2. ' for' → logprob: -2.0717661380767822
    3. '   ' → logprob: -2.9467661380767822
    4. '	for' → logprob: -9.696765899658203
    5. '*' → logprob: -10.446765899658203
    6. ' ' → logprob: -11.071765899658203
    7. '
' → logprob: -11.571765899658203
    8. '    
' → logprob: -11.821765899658203
    9. '  ' → logprob: -12.071765899658203
    10. 'n' → logprob: -12.196765899658203

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03575950488448143
    2. ' p' → logprob: -4.160759449005127
    3. ' bit' → logprob: -4.160759449005127
    4. ' ' → logprob: -6.535759449005127
    5. ' (' → logprob: -7.035759449005127
    6. ' b' → logprob: -7.785759449005127
    7. ' idx' → logprob: -7.910759449005127
    8. 'i' → logprob: -8.535759925842285
    9. ' _' → logprob: -8.535759925842285
    10. ' pattern' → logprob: -8.660759925842285

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022826455533504486
    2. 'in' → logprob: -6.502282619476318
    3. ' ' → logprob: -7.377282619476318
    4. ',' → logprob: -8.877283096313477
    5. ' ,' → logprob: -12.127283096313477
    6. '  ' → logprob: -12.627283096313477
    7. '<|end|>' → logprob: -13.502283096313477
    8. '	in' → logprob: -14.127283096313477
    9. 'range' → logprob: -14.252283096313477
    10. ' range' → logprob: -14.627283096313477

Token 99: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07037029415369034
    2. 'range' → logprob: -2.6953701972961426
    3. ' pattern' → logprob: -8.1953706741333
    4. 'pattern' → logprob: -9.4453706741333
    5. ' mask' → logprob: -9.8203706741333
    6. 'mask' → logprob: -11.3203706741333
    7. ' xrange' → logprob: -12.6953706741333
    8. '(range' → logprob: -12.9453706741333
    9. ' ' → logprob: -12.9453706741333
    10. '	range' → logprob: -13.0703706741333

Token 100: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.500011444091797
    3. 'len' → logprob: -14.500011444091797
    4. ' len' → logprob: -15.500011444091797
    5. ' (' → logprob: -16.625011444091797
    6. '(length' → logprob: -17.375011444091797
    7. '[len' → logprob: -18.375011444091797
    8. '	len' → logprob: -19.375011444091797
    9. '<len' → logprob: -19.625011444091797
    10. ',len' → logprob: -20.250011444091797

Token 101: '8' (ID: 23)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0032324944622814655
    2. ' len' → logprob: -5.753232479095459
    3. '(len' → logprob: -10.378232955932617
    4. '8' → logprob: -11.628232955932617
    5. '32' → logprob: -12.628232955932617
    6. '6' → logprob: -12.628232955932617
    7. '16' → logprob: -12.878232955932617
    8. '9' → logprob: -13.503232955932617
    9. '   ' → logprob: -14.003232955932617
    10. '10' → logprob: -14.128232955932617

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017354529350996017
    2. ' ):' → logprob: -4.767354488372803
    3. '):
' → logprob: -4.767354488372803
    4. ')' → logprob: -9.267354965209961
    5. ' ):
' → logprob: -9.892354965209961
    6. '   ' → logprob: -11.017354965209961
    7. ' ' → logprob: -11.267354965209961
    8. '):
' → logprob: -11.642354965209961
    9. ' )' → logprob: -12.017354965209961
    10. ':' → logprob: -12.267354965209961

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03927462920546532
    2. ' if' → logprob: -3.2892746925354004
    3. 'if' → logprob: -7.1642746925354
    4. '   ' → logprob: -8.664274215698242
    5. '    ' → logprob: -9.164274215698242
    6. '<|end|>' → logprob: -9.289274215698242
    7. ' ' → logprob: -11.164274215698242
    8. ',' → logprob: -11.289274215698242
    9. '     ' → logprob: -11.289274215698242
    10. '      ' → logprob: -11.289274215698242

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02885621041059494
    2. '       ' → logprob: -3.9038562774658203
    3. 'if' (adapté à ' if') → logprob: -4.90385627746582
    4. '   ' → logprob: -7.65385627746582
    5. '    ' → logprob: -7.90385627746582
    6. ' ' → logprob: -11.77885627746582
    7. '      ' → logprob: -13.02885627746582
    8. '     ' → logprob: -13.15385627746582
    9. '  ' → logprob: -13.40385627746582
    10. '	if' → logprob: -13.65385627746582

Token 105: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.01194322295486927
    2. ' not' → logprob: -4.511943340301514
    3. 'mask' → logprob: -7.136943340301514
    4. ' ' → logprob: -10.011942863464355
    5. 'not' → logprob: -10.511942863464355
    6. '	mask' → logprob: -11.136942863464355
    7. '(mask' → logprob: -12.386942863464355
    8. '_mask' → logprob: -13.261942863464355
    9. '   ' → logprob: -13.386942863464355
    10. ' pattern' → logprob: -13.636942863464355

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.375014305114746
    3. '[I' → logprob: -13.750014305114746
    4. ' [' → logprob: -14.000014305114746
    5. '```' → logprob: -14.875014305114746
    6. '\[' → logprob: -16.625015258789062
    7. 'i' → logprob: -16.875015258789062
    8. ')[' → logprob: -17.125015258789062
    9. '[ii' → logprob: -17.250015258789062
    10. '[j' → logprob: -17.375015258789062

Token 107: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007694525644183159
    2. ' ):' → logprob: -6.257694721221924
    3. '):
' → logprob: -6.257694721221924
    4. ')' → logprob: -6.632694721221924
    5. ':' → logprob: -6.632694721221924
    6. ']:' → logprob: -7.382694721221924
    7. '==' → logprob: -7.882694721221924
    8. ']):' → logprob: -9.757694244384766
    9. ')==' → logprob: -10.382694244384766
    10. ']==' → logprob: -11.007694244384766

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1847156286239624
    2. 'if' → logprob: -2.184715747833252
    3. ' if' → logprob: -2.934715747833252
    4. 'continue' → logprob: -7.059715747833252
    5. '        
' → logprob: -7.559715747833252
    6. '<|end|>' → logprob: -7.809715747833252
    7. 'count' → logprob: -8.059715270996094
    8. ' and' → logprob: -8.684715270996094
    9. '```' → logprob: -8.684715270996094
    10. ' continue' → logprob: -9.184715270996094

Token 109: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027187030762434006
    2. ' if' → logprob: -3.9021871089935303
    3. '       ' → logprob: -5.027186870574951
    4. 'continue' → logprob: -9.90218734741211
    5. '<|end|>' → logprob: -12.77718734741211
    6. '	if' → logprob: -13.02718734741211
    7. ' continue' → logprob: -13.02718734741211
    8. '           ' → logprob: -13.02718734741211
    9. '```' → logprob: -13.40218734741211
    10. 'count' → logprob: -14.02718734741211

Token 110: ' fixed' (ID: 13213)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05256776884198189
    2. ' if' → logprob: -3.052567720413208
    3. '           ' → logprob: -5.552567958831787
    4. '#' → logprob: -10.302567481994629
    5. 'continue' → logprob: -10.677567481994629
    6. '       ' → logprob: -11.427567481994629
    7. ' continue' → logprob: -11.677567481994629
    8. '```' → logprob: -11.802567481994629
    9. '               ' → logprob: -13.177567481994629
    10. 'count' → logprob: -13.302567481994629

Token 111: ' bit' (ID: 3546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.650151789188385
    2. ' if' → logprob: -0.775151789188385
    3. '       ' → logprob: -4.77515172958374
    4. '<|end|>' → logprob: -5.77515172958374
    5. '           ' → logprob: -6.65015172958374
    6. ' and' → logprob: -7.02515172958374
    7. 'count' → logprob: -7.40015172958374
    8. ':' → logprob: -7.52515172958374
    9. 'and' → logprob: -7.65015172958374
    10. ')' → logprob: -7.65015172958374

Token 112: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.269623726606369
    2. 'if' → logprob: -2.0196237564086914
    3. '           ' → logprob: -2.7696237564086914
    4. ' if' → logprob: -4.394623756408691
    5. '=' → logprob: -4.644623756408691
    6. ' and' → logprob: -4.894623756408691
    7. 'and' → logprob: -5.269623756408691
    8. ' =' → logprob: -6.144623756408691
    9. 'count' → logprob: -6.769623756408691
    10. '#' → logprob: -7.769623756408691

Token 113: ' only' (ID: 1606)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.035020336508750916
    2. ' if' → logprob: -3.410020351409912
    3. '           ' → logprob: -6.660020351409912
    4. 'count' → logprob: -10.035019874572754
    5. '       ' → logprob: -10.285019874572754
    6. 'continue' → logprob: -11.660019874572754
    7. ' continue' → logprob: -12.910019874572754
    8. ' count' → logprob: -14.035019874572754
    9. '               ' → logprob: -14.160019874572754
    10. '#' → logprob: -14.410019874572754

Token 114: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.379139244556427
    2. ' if' → logprob: -1.8791391849517822
    3. 'count' → logprob: -2.3791391849517822
    4. ' count' → logprob: -3.5041391849517822
    5. '1' → logprob: -3.8791391849517822
    6. ' continue' → logprob: -5.004139423370361
    7. 'continue' → logprob: -5.004139423370361
    8. '   ' → logprob: -6.504139423370361
    9. ' one' → logprob: -6.629139423370361
    10. ' ' → logprob: -6.754139423370361

Token 115: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13825055956840515
    2. 'count' → logprob: -2.7632505893707275
    3. '1' → logprob: -3.1382505893707275
    4. 'one' → logprob: -4.263250350952148
    5. ' if' → logprob: -5.388250350952148
    6. ' one' → logprob: -6.263250350952148
    7. 'continue' → logprob: -7.138250350952148
    8. ' count' → logprob: -7.763250350952148
    9. 'pattern' → logprob: -8.138250350952148
    10. ' ' → logprob: -8.138250350952148

Token 116: ' option' (ID: 5317)
  Prédit: ' option'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' option' → logprob: -0.2512260973453522
    2. ' possibility' → logprob: -2.2512261867523193
    3. ' possible' → logprob: -2.8762261867523193
    4. 'option' → logprob: -3.3762261867523193
    5. ' count' → logprob: -4.87622594833374
    6. 'count' → logprob: -5.50122594833374
    7. 'possible' → logprob: -5.75122594833374
    8. '<|end|>' → logprob: -5.75122594833374
    9. '       ' → logprob: -6.12622594833374
    10. ' options' → logprob: -6.37622594833374

Token 117: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2113698273897171
    2. 'continue' → logprob: -2.086369752883911
    3. ' continue' → logprob: -3.211369752883911
    4. '           ' → logprob: -3.836369752883911
    5. '   ' → logprob: -6.71136999130249
    6. '<|end|>' → logprob: -7.08636999130249
    7. 'count' → logprob: -7.96136999130249
    8. ' continues' → logprob: -8.211369514465332
    9. '	continue' → logprob: -8.336369514465332
    10. ',' → logprob: -8.461369514465332

Token 118: ' bit' (ID: 3546)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.6931698322296143
    2. 'pattern' → logprob: -0.6931698322296143
    3. '(pattern' → logprob: -11.318169593811035
    4. '   ' → logprob: -12.818169593811035
    5. 'count' → logprob: -13.318169593811035
    6. ' ' → logprob: -13.443169593811035
    7. 'pat' → logprob: -13.818169593811035
    8. 'mask' → logprob: -14.443169593811035
    9. ' ' → logprob: -14.568169593811035
    10. ' bit' → logprob: -14.818169593811035

Token 119: ' matches' (ID: 15248)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5234963297843933
    2. '==' → logprob: -0.8984963297843933
    3. ' matches' → logprob: -8.398496627807617
    4. 'matches' → logprob: -10.148496627807617
    5. ')==' → logprob: -10.773496627807617
    6. ' in' → logprob: -10.898496627807617
    7. '=' → logprob: -11.023496627807617
    8. ']==' → logprob: -11.148496627807617
    9. ')' → logprob: -11.898496627807617
    10. ' is' → logprob: -12.148496627807617

Token 120: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6610690355300903
    2. ' if' → logprob: -1.4110690355300903
    3. ' and' → logprob: -1.9110690355300903
    4. '       ' → logprob: -3.411068916320801
    5. '               ' → logprob: -3.911068916320801
    6. 'if' → logprob: -3.911068916320801
    7. ',' → logprob: -5.411068916320801
    8. ' =' → logprob: -5.661068916320801
    9. 'and' → logprob: -5.911068916320801
    10. ' else' → logprob: -6.411068916320801

Token 121: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09894561767578125
    2. ' if' → logprob: -2.4739456176757812
    3. '           ' → logprob: -5.348945617675781
    4. ' and' → logprob: -6.348945617675781
    5. 'if' → logprob: -6.848945617675781
    6. ',' → logprob: -6.973945617675781
    7. '<|end|>' → logprob: -7.973945617675781
    8. ' continue' → logprob: -8.348945617675781
    9. '               ' → logprob: -9.098945617675781
    10. ':' → logprob: -9.098945617675781

Token 122: ' pass' (ID: 1853)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000397422380046919
    2. '       ' → logprob: -8.250397682189941
    3. ' if' → logprob: -9.000397682189941
    4. 'count' → logprob: -12.125397682189941
    5. '           ' → logprob: -12.250397682189941
    6. 'continue' → logprob: -13.000397682189941
    7. '```' → logprob: -16.250396728515625
    8. '	if' → logprob: -17.250396728515625
    9. '   ' → logprob: -17.750396728515625
    10. ';if' → logprob: -18.500396728515625

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4254676103591919
    2. '<|end|>' → logprob: -1.300467610359192
    3. ' else' → logprob: -3.6754674911499023
    4. '   ' → logprob: -4.050467491149902
    5. '<|end|>' → logprob: -4.675467491149902
    6. 'elif' → logprob: -4.925467491149902
    7. 'else' → logprob: -5.300467491149902
    8. ' elif' → logprob: -5.300467491149902
    9. '
' → logprob: -6.800467491149902
    10. ' if' → logprob: -6.800467491149902

Token 124: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.278093934059143
    2. 'elif' → logprob: -1.403093934059143
    3. 'else' (adapté à ' else') → logprob: -1.403093934059143
    4. ' else' → logprob: -1.778093934059143
    5. ' elif' → logprob: -2.9030938148498535
    6. '   ' → logprob: -5.5280938148498535
    7. '<|end|>' → logprob: -6.7780938148498535
    8. '	elif' → logprob: -7.7780938148498535
    9. '	else' → logprob: -9.403094291687012
    10. '<|end|>' → logprob: -9.403094291687012

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12730099260807037
    2. ':
' → logprob: -2.127300977706909
    3. '   ' → logprob: -8.502301216125488
    4. '       ' → logprob: -8.877301216125488
    5. 'count' → logprob: -11.752301216125488
    6. ':

' → logprob: -11.752301216125488
    7. ' :' → logprob: -12.752301216125488
    8. '           ' → logprob: -12.877301216125488
    9. '):
' → logprob: -13.752301216125488
    10. ' :
' → logprob: -13.877301216125488

Token 127: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6519610285758972
    2. 'count' → logprob: -0.7769610285758972
    3. ' count' → logprob: -4.026960849761963
    4. '   ' → logprob: -6.776960849761963
    5. '           ' → logprob: -9.026961326599121
    6. '	count' → logprob: -10.401961326599121
    7. '```' → logprob: -10.901961326599121
    8. ' ' → logprob: -11.776961326599121
    9. '               ' → logprob: -11.901961326599121
    10. '
' → logprob: -12.651961326599121

Token 128: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.030172985047101974
    2. ' count' → logprob: -3.5301730632781982
    3. '       ' → logprob: -8.405173301696777
    4. '   ' → logprob: -8.905173301696777
    5. '           ' → logprob: -9.905173301696777
    6. '	count' → logprob: -11.780173301696777
    7. '               ' → logprob: -13.780173301696777
    8. '
' → logprob: -13.780173301696777
    9. '2' → logprob: -14.280173301696777
    10. '    ' → logprob: -14.655173301696777

Token 129: ' unknown' (ID: 17927)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029758941382169724
    2. ' count' → logprob: -3.529758930206299
    3. '   ' → logprob: -12.654759407043457
    4. '	count' → logprob: -12.904759407043457
    5. '           ' → logprob: -13.654759407043457
    6. '       ' → logprob: -14.154759407043457
    7. ' ' → logprob: -15.154759407043457
    8. 'Count' → logprob: -16.15475845336914
    9. '$count' → logprob: -16.15475845336914
    10. '2' → logprob: -16.65475845336914

Token 130: ' bit' (ID: 3546)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5256175398826599
    2. ' count' → logprob: -0.9006175398826599
    3. '   ' → logprob: -7.025617599487305
    4. '           ' → logprob: -7.025617599487305
    5. '       ' → logprob: -8.150617599487305
    6. '_count' → logprob: -9.025617599487305
    7. '	count' → logprob: -9.400617599487305
    8. '
' → logprob: -10.150617599487305
    9. '[count' → logprob: -10.400617599487305
    10. ' ' → logprob: -10.900617599487305

Token 131: ':' (ID: 25)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7547033429145813
    2. 'count' → logprob: -1.0047032833099365
    3. '       ' → logprob: -2.3797032833099365
    4. '           ' → logprob: -2.7547032833099365
    5. '   ' → logprob: -5.254703521728516
    6. '
' → logprob: -7.379703521728516
    7. '	count' → logprob: -8.129703521728516
    8. '               ' → logprob: -8.504703521728516
    9. '[count' → logprob: -8.754703521728516
    10. ':
' → logprob: -9.254703521728516

Token 132: ' double' (ID: 3503)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20152999460697174
    2. ' count' → logprob: -1.7015299797058105
    3. '           ' → logprob: -9.201530456542969
    4. '   ' → logprob: -11.951530456542969
    5. '	count' → logprob: -12.451530456542969
    6. '       ' → logprob: -12.826530456542969
    7. '               ' → logprob: -14.826530456542969
    8. '2' → logprob: -14.826530456542969
    9. '_count' → logprob: -14.826530456542969
    10. '```' → logprob: -15.201530456542969

Token 133: ' options' (ID: 3880)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3491252064704895
    2. ' count' → logprob: -1.2241251468658447
    3. ' the' → logprob: -8.099124908447266
    4. '(count' → logprob: -9.224124908447266
    5. '_count' → logprob: -9.974124908447266
    6. 'the' → logprob: -10.224124908447266
    7. '=count' → logprob: -10.349124908447266
    8. '*' → logprob: -10.474124908447266
    9. '	count' → logprob: -10.474124908447266
    10. '[count' → logprob: -10.849124908447266

Token 134: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7514896392822266
    2. '*' → logprob: -1.3764896392822266
    3. ' *=' → logprob: -2.1264896392822266
    4. '*=' → logprob: -2.7514896392822266
    5. ' count' → logprob: -2.8764896392822266
    6. '   ' → logprob: -4.251489639282227
    7. '           ' → logprob: -5.126489639282227
    8. '       ' → logprob: -5.251489639282227
    9. ' *' → logprob: -5.251489639282227
    10. '```' → logprob: -6.876489639282227

Token 135: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.197808176279068
    2. 'count' → logprob: -2.197808265686035
    3. ' count' → logprob: -3.072808265686035
    4. '           ' → logprob: -3.822808265686035
    5. '   ' → logprob: -8.447808265686035
    6. '	count' → logprob: -11.197808265686035
    7. '               ' → logprob: -11.447808265686035
    8. '        ' → logprob: -12.572808265686035
    9. '      ' → logprob: -12.572808265686035
    10. '(count' → logprob: -12.947808265686035

Token 136: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.1607723832130432
    2. ' count' → logprob: -1.9107723236083984
    3. '           ' → logprob: -7.535772323608398
    4. '   ' → logprob: -11.660772323608398
    5. '       ' → logprob: -13.160772323608398
    6. '	count' → logprob: -13.285772323608398
    7. '               ' → logprob: -14.410772323608398
    8. '
' → logprob: -15.160772323608398
    9. ' ' → logprob: -15.660772323608398
    10. '```' → logprob: -15.660772323608398

Token 137: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.03564528003334999
    2. ' *=' → logprob: -3.5356452465057373
    3. '=' → logprob: -5.160645484924316
    4. '*' → logprob: -9.535645484924316
    5. '   ' → logprob: -10.660645484924316
    6. ' <<=' → logprob: -10.785645484924316
    7. ' =' → logprob: -11.035645484924316
    8. '```' → logprob: -13.035645484924316
    9. ' ' → logprob: -13.535645484924316
    10. ' ' → logprob: -14.035645484924316

Token 138: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.23616094887256622
    2. ' (' → logprob: -1.6111609935760498
    3. 'count' → logprob: -4.611160755157471
    4. ' count' → logprob: -7.236160755157471
    5. '(' → logprob: -11.486161231994629
    6. '[count' → logprob: -11.986161231994629
    7. '<count' → logprob: -12.861161231994629
    8. '(c' → logprob: -13.361161231994629
    9. ' ' → logprob: -13.611161231994629
    10. '2' → logprob: -14.111161231994629

Token 139: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0019928740803152323
    2. ' count' → logprob: -6.501992702484131
    3. '(count' → logprob: -7.626992702484131
    4. '2' → logprob: -13.376993179321289
    5. ' (' → logprob: -14.376993179321289
    6. 'c' → logprob: -15.501993179321289
    7. '[count' → logprob: -15.626993179321289
    8. '	count' → logprob: -15.876993179321289
    9. '<count' → logprob: -16.00199317932129
    10. ')' → logprob: -16.62699317932129

Token 140: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38687798380851746
    2. '*' → logprob: -1.1368780136108398
    3. ' ' → logprob: -12.51187801361084
    4. '2' → logprob: -13.76187801361084
    5. ')' → logprob: -13.76187801361084
    6. ' ' → logprob: -14.88687801361084
    7. '```' → logprob: -15.01187801361084
    8. '**' → logprob: -15.88687801361084
    9. '
' → logprob: -16.261877059936523
    10. ' **' → logprob: -17.011877059936523

Token 141: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007117166533134878
    2. ' ' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.750711441040039
    4. '```' → logprob: -15.125711441040039
    5. '
' → logprob: -16.25071144104004
    6. '  ' → logprob: -16.50071144104004
    7. '    ' → logprob: -16.81321144104004
    8. '۲' → logprob: -17.56321144104004
    9. '２' → logprob: -17.81321144104004
    10. '     ' → logprob: -17.81321144104004

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.625003814697266
    4. '
' → logprob: -17.250003814697266
    5. '```' → logprob: -17.625003814697266
    6. '۲' → logprob: -19.000003814697266
    7. '２' → logprob: -19.125003814697266
    8. '  ' → logprob: -19.625003814697266
    9. '    ' → logprob: -19.750003814697266
    10. '

' → logprob: -20.000003814697266

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010521204239921644
    2. ')%' → logprob: -9.250104904174805
    3. ' )' → logprob: -11.625104904174805
    4. '   ' → logprob: -18.125104904174805
    5. ')
' → logprob: -18.625104904174805
    6. ')>>' → logprob: -19.500104904174805
    7. ')#' → logprob: -20.125104904174805
    8. '       ' → logprob: -20.250104904174805
    9. '%' → logprob: -20.250104904174805
    10. ')

' → logprob: -20.500104904174805

Token 144: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009114635176956654
    2. ' MOD' → logprob: -7.000911235809326
    3. '_MOD' → logprob: -19.875911712646484
    4. '100' → logprob: -20.125911712646484
    5. '.MOD' → logprob: -21.250911712646484
    6. 'MO' → logprob: -22.750911712646484
    7. 'MD' → logprob: -23.000911712646484
    8. ' ' → logprob: -23.125911712646484
    9. '(M' → logprob: -23.750911712646484
    10. '```' → logprob: -23.875911712646484

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055215224623680115
    2. 'return' → logprob: -3.1802151203155518
    3. ' return' → logprob: -4.805215358734131
    4. '<|end|>' → logprob: -6.055215358734131
    5. '	return' → logprob: -7.430215358734131
    6. '       ' → logprob: -8.180214881896973
    7. '
' → logprob: -8.430214881896973
    8. ':return' → logprob: -8.555214881896973
    9. '    
' → logprob: -9.680214881896973
    10. ')' → logprob: -10.055214881896973

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09363493323326111
    2. '<|end|>' → logprob: -3.343634843826294
    3. 'return' → logprob: -4.218635082244873
    4. ' ' → logprob: -4.593635082244873
    5. '       ' → logprob: -4.968635082244873
    6. ' return' → logprob: -5.218635082244873
    7. '    ' → logprob: -5.468635082244873
    8. '
' → logprob: -6.093635082244873
    9. '    
' → logprob: -6.343635082244873
    10. '  ' → logprob: -6.343635082244873

Token 148: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42123305797576904
    2. '<|end|>' → logprob: -1.921233057975769
    3. 'return' (adapté à ' return') → logprob: -2.5462331771850586
    4. ' return' → logprob: -3.2962331771850586
    5. ' ' → logprob: -3.5462331771850586
    6. '\n' → logprob: -3.9212331771850586
    7. '
' → logprob: -4.671233177185059
    8. '	return' → logprob: -5.671233177185059
    9. '  
' → logprob: -5.671233177185059
    10. '    
' → logprob: -5.796233177185059

Token 149: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001363093382678926
    2. ' count' → logprob: -6.626363277435303
    3. '(count' → logprob: -10.251362800598145
    4. '[count' → logprob: -14.251362800598145
    5. 'c' → logprob: -15.501362800598145
    6. ' ' → logprob: -15.626362800598145
    7. 'int' → logprob: -15.876362800598145
    8. '	count' → logprob: -16.25136375427246
    9. ' (' → logprob: -16.37636375427246
    10. '0' → logprob: -16.50136375427246

Token 150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3972753584384918
    2. '<|end|>' → logprob: -1.5222753286361694
    3. '       ' → logprob: -3.022275447845459
    4. ' ' → logprob: -3.647275447845459
    5. 'if' → logprob: -4.522275447845459
    6. ' if' → logprob: -4.772275447845459
    7. '    ' → logprob: -5.022275447845459
    8. '#' → logprob: -5.522275447845459
    9. '  ' → logprob: -7.022275447845459
    10. '[' → logprob: -7.522275447845459

Token 152: ' is' (ID: 382)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3976592421531677
    2. ' solve' → logprob: -1.6476593017578125
    3. ' main' → logprob: -3.6476593017578125
    4. ' bit' → logprob: -3.7726593017578125
    5. ' match' → logprob: -4.0226593017578125
    6. ' parse' → logprob: -4.1476593017578125
    7. ' calculate' → logprob: -4.3976593017578125
    8. ' process' → logprob: -5.0226593017578125
    9. ' is' → logprob: -5.6476593017578125
    10. ' apply' → logprob: -5.7726593017578125

Token 153: '_one' (ID: 26979)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.0568006038665771
    2. '_' → logprob: -1.4318006038665771
    3. '_match' → logprob: -1.9318006038665771
    4. '_fixed' → logprob: -2.306800603866577
    5. '_pattern' → logprob: -3.556800603866577
    6. '_possible' → logprob: -3.681800603866577
    7. '_mask' → logprob: -3.806800603866577
    8. '_bit' → logprob: -3.931800603866577
    9. '_prefix' → logprob: -4.806800842285156
    10. '_equal' → logprob: -4.931800842285156

Token 154: '_byte' (ID: 48405)
  Prédit: '_bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.7007764577865601
    2. '(' → logprob: -0.9507764577865601
    3. '_' → logprob: -4.20077657699585
    4. 'bit' → logprob: -4.32577657699585
    5. '_hot' → logprob: -4.70077657699585
    6. '(pattern' → logprob: -4.82577657699585
    7. '_match' → logprob: -4.95077657699585
    8. '_byte' → logprob: -5.07577657699585
    9. '_com' → logprob: -5.20077657699585
    10. '_mask' → logprob: -5.20077657699585

Token 155: '(b' (ID: 3229)
  Prédit: '_instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_instruction' → logprob: -0.1488216072320938
    2. '_opcode' → logprob: -2.6488215923309326
    3. '(' → logprob: -4.773821830749512
    4. '_start' → logprob: -5.023821830749512
    5. '(instr' → logprob: -5.523821830749512
    6. '_character' → logprob: -5.523821830749512
    7. '_' → logprob: -5.648821830749512
    8. '_pattern' → logprob: -5.648821830749512
    9. '_instr' → logprob: -5.773821830749512
    10. '_encoding' → logprob: -5.898821830749512

Token 156: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4339192509651184
    2. '):' → logprob: -1.0589191913604736
    3. '_' → logprob: -6.433919429779053
    4. '(' → logprob: -7.433919429779053
    5. 'y' → logprob: -7.433919429779053
    6. '):

' → logprob: -8.183918952941895
    7. ':' → logprob: -8.308918952941895
    8. '[' → logprob: -8.433918952941895
    9. '):
' → logprob: -8.433918952941895
    10. ':)' → logprob: -8.558918952941895

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10448150336742401
    2. ' return' → logprob: -2.3544814586639404
    3. 'return' → logprob: -5.4794816970825195
    4. ' b' → logprob: -9.97948169708252
    5. 'b' → logprob: -10.22948169708252
    6. ' (' → logprob: -12.60448169708252
    7. '(b' → logprob: -13.10448169708252
    8. '	return' → logprob: -13.60448169708252
    9. '   ' → logprob: -13.60448169708252
    10. ' ' → logprob: -13.97948169708252

Token 158: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2426331788301468
    2. 'return' → logprob: -1.6176332235336304
    3. '   ' → logprob: -4.11763334274292
    4. ' if' → logprob: -8.492632865905762
    5. ' (' → logprob: -8.867632865905762
    6. 'b' → logprob: -9.117632865905762
    7. ' b' → logprob: -9.117632865905762
    8. '0' → logprob: -9.242632865905762
    9. ' ' → logprob: -9.867632865905762
    10. 'if' → logprob: -10.992632865905762

Token 159: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9390033483505249
    2. 'return' → logprob: -1.314003348350525
    3. ' (' → logprob: -2.1890034675598145
    4. '0' → logprob: -2.5640034675598145
    5. 'b' → logprob: -3.0640034675598145
    6. '(b' → logprob: -3.1890034675598145
    7. ' ' → logprob: -3.5640034675598145
    8. '(' → logprob: -3.8140034675598145
    9. ' b' → logprob: -4.5640034675598145
    10. 'def' → logprob: -6.4390034675598145

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4438115358352661
    2. '(' → logprob: -1.3188115358352661
    3. '(b' → logprob: -2.9438114166259766
    4. 'b' → logprob: -3.3188114166259766
    5. 'return' → logprob: -7.068811416625977
    6. 'def' → logprob: -7.693811416625977
    7. '128' → logprob: -7.818811416625977
    8. '((' → logprob: -9.318811416625977
    9. '192' → logprob: -9.693811416625977
    10. '7' → logprob: -10.443811416625977

Token 161: 'xxxx' (ID: 30950)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1085604727268219
    2. 'x' → logprob: -2.983560562133789
    3. ' <=' → logprob: -3.233560562133789
    4. 'b' → logprob: -4.358560562133789
    5. '<' → logprob: -10.608560562133789
    6. '0' → logprob: -11.858560562133789
    7. 'xff' → logprob: -12.233560562133789
    8. '```' → logprob: -12.858560562133789
    9. ' ' → logprob: -13.483560562133789
    10. '<<' → logprob: -13.608560562133789

Token 162: 'xxx' (ID: 49993)
  Prédit: 'xxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.15895475447177887
    2. '0' → logprob: -3.1589548587799072
    3. 'b' → logprob: -3.5339548587799072
    4. 'xx' → logprob: -3.9089548587799072
    5. '111' → logprob: -4.283954620361328
    6. '000' → logprob: -4.283954620361328
    7. '=' → logprob: -5.283954620361328
    8. '00' → logprob: -5.408954620361328
    9. '<=' → logprob: -5.783954620361328
    10. '==' → logprob: -5.783954620361328

Token 163: ':' (ID: 25)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.164237141609192
    2. 'def' → logprob: -1.289237141609192
    3. ':' → logprob: -2.0392370223999023
    4. '   ' → logprob: -2.5392370223999023
    5. '(' → logprob: -3.4142370223999023
    6. '<|end|>' → logprob: -3.4142370223999023
    7. ' return' → logprob: -4.039237022399902
    8. '{' → logprob: -4.164237022399902
    9. ' ' → logprob: -4.664237022399902
    10. 'b' → logprob: -4.664237022399902

Token 164: ' first' (ID: 1577)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41340216994285583
    2. 'b' → logprob: -2.1634020805358887
    3. 'return' → logprob: -2.4134020805358887
    4. ' b' → logprob: -2.5384020805358887
    5. '0' → logprob: -3.4134020805358887
    6. ' (' → logprob: -4.038402080535889
    7. ' ' → logprob: -6.413402080535889
    8. '(' → logprob: -6.413402080535889
    9. '(b' → logprob: -6.663402080535889
    10. 'def' → logprob: -11.538402557373047

Token 165: ' bit' (ID: 3546)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.049787998199463
    2. 'b' → logprob: -1.299787998199463
    3. '(' → logprob: -1.424787998199463
    4. '(b' → logprob: -3.549787998199463
    5. ' b' → logprob: -3.799787998199463
    6. '<=' → logprob: -3.924787998199463
    7. ' <=' → logprob: -4.424787998199463
    8. '&' → logprob: -4.924787998199463
    9. ' &' → logprob: -5.049787998199463
    10. '(byte' → logprob: -5.174787998199463

Token 166: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7158759236335754
    2. ' ==' → logprob: -0.7158759236335754
    3. '&' → logprob: -4.71587610244751
    4. '=' → logprob: -4.84087610244751
    5. ' &' → logprob: -5.71587610244751
    6. ')' → logprob: -7.59087610244751
    7. ' =' → logprob: -8.340875625610352
    8. ' ' → logprob: -8.340875625610352
    9. '<' → logprob: -8.465875625610352
    10. 'b' → logprob: -8.840875625610352

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015759251546114683
    2. ' ' → logprob: -6.501575946807861
    3. 'b' → logprob: -9.876575469970703
    4. ''' → logprob: -12.001575469970703
    5. ' b' → logprob: -12.126575469970703
    6. '(' → logprob: -13.126575469970703
    7. ' (' → logprob: -13.251575469970703
    8. 'False' → logprob: -13.251575469970703
    9. '1' → logprob: -13.376575469970703
    10. ''b' → logprob: -13.626575469970703

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015872239600867033
    2. ''' → logprob: -7.001587390899658
    3. '(' → logprob: -8.1265869140625
    4. 'b' → logprob: -8.5015869140625
    5. ' ' → logprob: -9.5015869140625
    6. ''b' → logprob: -9.8765869140625
    7. '1' → logprob: -10.8765869140625
    8. ' (' → logprob: -11.8765869140625
    9. '(b' → logprob: -11.8765869140625
    10. 'False' → logprob: -12.1265869140625

Token 169: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3279161751270294
    2. ':' → logprob: -1.452916145324707
    3. ' and' → logprob: -3.827916145324707
    4. ' ' → logprob: -5.577916145324707
    5. ' if' → logprob: -5.952916145324707
    6. ',' → logprob: -5.952916145324707
    7. ')' → logprob: -6.077916145324707
    8. '):' → logprob: -6.327916145324707
    9. ' return' → logprob: -6.577916145324707
    10. '<|end|>' → logprob: -6.702916145324707

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009281758219003677
    2. ':' → logprob: -5.134281635284424
    3. ' return' → logprob: -6.134281635284424
    4. 'return' → logprob: -7.259281635284424
    5. ':return' → logprob: -9.134282112121582
    6. '(' → logprob: -9.384282112121582
    7. ':
' → logprob: -9.509282112121582
    8. ' ' → logprob: -9.634282112121582
    9. 'def' → logprob: -10.384282112121582
    10. '	return' → logprob: -11.009282112121582

Token 171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08355285227298737
    2. 'return' → logprob: -2.958552837371826
    3. ' return' → logprob: -3.583552837371826
    4. 'def' → logprob: -8.583553314208984
    5. '
' → logprob: -9.333553314208984
    6. ':' → logprob: -10.208553314208984
    7. ' ' → logprob: -10.458553314208984
    8. ':return' → logprob: -10.458553314208984
    9. '	return' → logprob: -10.583553314208984
    10. '    ' → logprob: -11.333553314208984

Token 172: ' b' (ID: 287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31381136178970337
    2. ' return' → logprob: -1.3138113021850586
    3. '   ' → logprob: -7.688811302185059
    4. 'def' → logprob: -9.438811302185059
    5. ' ' → logprob: -12.438811302185059
    6. 'b' → logprob: -12.438811302185059
    7. 'if' → logprob: -14.063811302185059
    8. ' b' → logprob: -14.188811302185059
    9. '	return' → logprob: -14.313811302185059
    10. ' if' → logprob: -14.313811302185059

Token 173: ':' (ID: 25)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.005740236956626177
    2. ' <' → logprob: -5.755740165710449
    3. '&' → logprob: -6.505740165710449
    4. '[' → logprob: -7.755740165710449
    5. ' &=' → logprob: -8.38074016571045
    6. ' =' → logprob: -8.75574016571045
    7. ' ' → logprob: -9.00574016571045
    8. '=' → logprob: -10.38074016571045
    9. '<' → logprob: -10.38074016571045
    10. ' >>' → logprob: -10.50574016571045

Token 174: ' list' (ID: 1562)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1114635467529297
    2. 'int' → logprob: -1.2364635467529297
    3. ' b' → logprob: -1.3614635467529297
    4. ' int' → logprob: -2.1114635467529297
    5. ' (' → logprob: -6.73646354675293
    6. ' return' → logprob: -7.86146354675293
    7. ' ' → logprob: -8.73646354675293
    8. '(int' → logprob: -8.86146354675293
    9. ')' → logprob: -8.98646354675293
    10. 'return' → logprob: -8.98646354675293

Token 175: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09493088722229004
    2. '   ' → logprob: -2.46993088722229
    3. '<|end|>' → logprob: -5.969930648803711
    4. ' =' → logprob: -7.094930648803711
    5. ' of' → logprob: -7.969930648803711
    6. 'def' → logprob: -7.969930648803711
    7. ')' → logprob: -8.094930648803711
    8. ' ' → logprob: -8.719930648803711
    9. '<|end|>' → logprob: -8.719930648803711
    10. ',' → logprob: -8.719930648803711

Token 176: ' chars' (ID: 47991)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47526872158050537
    2. 'ints' → logprob: -1.7252687215805054
    3. '8' → logprob: -2.100268840789795
    4. 'bits' → logprob: -2.600268840789795
    5. 'bool' → logprob: -6.225268840789795
    6. 'inte' → logprob: -7.225268840789795
    7. '1' → logprob: -7.850268840789795
    8. '0' → logprob: -9.350268363952637
    9. '7' → logprob: -9.475268363952637
    10. '[int' → logprob: -10.100268363952637

Token 177: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33947864174842834
    2. '   ' → logprob: -1.964478611946106
    3. ':' → logprob: -2.3394787311553955
    4. '<|end|>' → logprob: -3.4644787311553955
    5. 'def' → logprob: -5.089478492736816
    6. ')' → logprob: -5.839478492736816
    7. '[]' → logprob: -6.089478492736816
    8. ' ' → logprob: -6.214478492736816
    9. '[:' → logprob: -6.839478492736816
    10. '):' → logprob: -7.214478492736816

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07969368249177933
    2. '01' → logprob: -2.5796937942504883
    3. '1' → logprob: -7.829693794250488
    4. ''' → logprob: -8.579693794250488
    5. '010' → logprob: -9.454693794250488
    6. ' ' → logprob: -10.204693794250488
    7. '012' → logprob: -10.454693794250488
    8. '{'' → logprob: -11.204693794250488
    9. '?' → logprob: -11.329693794250488
    10. '10' → logprob: -11.454693794250488

Token 179: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004336493439041078
    2. 'b' → logprob: -8.875433921813965
    3. ''or' → logprob: -9.000433921813965
    4. '',' → logprob: -9.875433921813965
    5. ' or' → logprob: -10.375433921813965
    6. '0' → logprob: -10.750433921813965
    7. ''''' → logprob: -10.875433921813965
    8. '1' → logprob: -10.875433921813965
    9. 'or' → logprob: -12.125433921813965
    10. ''s' → logprob: -12.500433921813965

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004674219060689211
    2. ''' → logprob: -5.379674434661865
    3. '','' → logprob: -10.254673957824707
    4. '',' → logprob: -12.004673957824707
    5. 'or' → logprob: -12.879673957824707
    6. 'x' → logprob: -13.129673957824707
    7. ''or' → logprob: -13.379673957824707
    8. ''s' → logprob: -13.504673957824707
    9. '')' → logprob: -14.004673957824707
    10. '0' → logprob: -14.129673957824707

Token 181: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4378862679004669
    2. '',' → logprob: -1.9378862380981445
    3. ')' → logprob: -2.6878862380981445
    4. '')' → logprob: -2.8128862380981445
    5. ' or' → logprob: -3.6878862380981445
    6. '','' → logprob: -4.5628862380981445
    7. ',' → logprob: -4.6878862380981445
    8. '']' → logprob: -4.8128862380981445
    9. ','' → logprob: -5.1878862380981445
    10. 'def' → logprob: -5.3128862380981445

Token 182: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3378777801990509
    2. 'x' → logprob: -1.3378777503967285
    3. ''' → logprob: -4.5878777503967285
    4. '?' → logprob: -5.2128777503967285
    5. '')' → logprob: -5.4628777503967285
    6. '0' → logprob: -6.2128777503967285
    7. 'None' → logprob: -6.9628777503967285
    8. '?'' → logprob: -7.2128777503967285
    9. ''x' → logprob: -8.337878227233887
    10. 'or' → logprob: -8.462878227233887

Token 183: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04259795695543289
    2. '')' → logprob: -3.667598009109497
    3. '[' → logprob: -5.042597770690918
    4. '):' → logprob: -5.667597770690918
    5. '   ' → logprob: -6.167597770690918
    6. ']' → logprob: -6.417597770690918
    7. ''):' → logprob: -7.292597770690918
    8. ''' → logprob: -7.542597770690918
    9. 'def' → logprob: -7.792597770690918
    10. '['' → logprob: -8.417597770690918

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023914387449622154
    2. ':' → logprob: -4.023914337158203
    3. ' ' → logprob: -6.148914337158203
    4. 'def' → logprob: -6.898914337158203
    5. ' :' → logprob: -7.648914337158203
    6. ' if' → logprob: -7.648914337158203
    7. '[' → logprob: -8.273914337158203
    8. ')' → logprob: -8.273914337158203
    9. 'if' → logprob: -8.648914337158203
    10. ',' → logprob: -8.773914337158203

Token 185: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016499977558851242
    2. 'for' → logprob: -5.766499996185303
    3. 'return' → logprob: -5.766499996185303
    4. ' for' → logprob: -5.891499996185303
    5. 'if' → logprob: -5.891499996185303
    6. ' if' → logprob: -6.141499996185303
    7. ' return' → logprob: -6.516499996185303
    8. 'def' → logprob: -7.016499996185303
    9. ' ' → logprob: -11.641499519348145
    10. '   ' → logprob: -11.766499519348145

Token 186: ' first' (ID: 1577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3842514753341675
    2. 'return' → logprob: -1.6342514753341675
    3. 'if' → logprob: -3.509251594543457
    4. ' for' → logprob: -3.634251594543457
    5. '   ' → logprob: -3.634251594543457
    6. 'def' → logprob: -3.759251594543457
    7. ' return' → logprob: -4.634251594543457
    8. 'count' → logprob: -5.759251594543457
    9. ' if' → logprob: -6.009251594543457
    10. 'first' → logprob: -7.509251594543457

Token 187: ' bit' (ID: 3546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0220667123794556
    2. '=' → logprob: -1.8970667123794556
    3. 'b' → logprob: -2.022066593170166
    4. ' ' → logprob: -2.147066593170166
    5. 'bit' → logprob: -2.522066593170166
    6. 'def' → logprob: -3.772066593170166
    7. ' ==' → logprob: -3.897066593170166
    8. '[' → logprob: -4.147066593170166
    9. 'if' → logprob: -4.147066593170166
    10. '_' → logprob: -4.272066593170166

Token 188: ' must' (ID: 2804)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28184565901756287
    2. '==' → logprob: -1.5318456888198853
    3. '=' → logprob: -4.531845569610596
    4. '[' → logprob: -4.656845569610596
    5. ' =' → logprob: -5.031845569610596
    6. 'def' → logprob: -6.906845569610596
    7. ')' → logprob: -7.031845569610596
    8. ' ' → logprob: -8.781846046447754
    9. ']==' → logprob: -9.281846046447754
    10. ')==' → logprob: -9.531846046447754

Token 189: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.15548714995384216
    2. '==' → logprob: -2.655487060546875
    3. 'be' → logprob: -3.030487060546875
    4. ' ==' → logprob: -3.905487060546875
    5. '=' → logprob: -5.405487060546875
    6. 'equal' → logprob: -7.905487060546875
    7. '=='' → logprob: -8.530487060546875
    8. ' equal' → logprob: -9.405487060546875
    9. ' =' → logprob: -10.405487060546875
    10. ' in' → logprob: -10.655487060546875

Token 190: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.038948945701122284
    2. '0' → logprob: -3.4139490127563477
    3. ' '' → logprob: -5.288949012756348
    4. ' ' → logprob: -8.663949012756348
    5. '"' → logprob: -10.038949012756348
    6. '`' → logprob: -12.413949012756348
    7. ''b' → logprob: -12.413949012756348
    8. '['' → logprob: -12.538949012756348
    9. 'b' → logprob: -12.788949012756348
    10. '[' → logprob: -12.913949012756348

Token 191: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2019064873456955
    2. '0' → logprob: -1.701906442642212
    3. ' '' → logprob: -8.326906204223633
    4. ' ' → logprob: -9.076906204223633
    5. '"' → logprob: -10.326906204223633
    6. '1' → logprob: -10.451906204223633
    7. '['' → logprob: -10.826906204223633
    8. 'b' → logprob: -10.951906204223633
    9. '[' → logprob: -11.201906204223633
    10. ''b' → logprob: -12.326906204223633

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04508359357714653
    2. ':' → logprob: -3.795083522796631
    3. ' if' → logprob: -4.670083522796631
    4. ' ' → logprob: -5.170083522796631
    5. '[' → logprob: -6.420083522796631
    6. ' and' → logprob: -6.795083522796631
    7. '    ' → logprob: -7.295083522796631
    8. ',' → logprob: -7.295083522796631
    9. '<|end|>' → logprob: -7.670083522796631
    10. '  ' → logprob: -8.045083999633789

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026697113644331694
    2. ' if' → logprob: -6.877669811248779
    3. ':' → logprob: -7.752669811248779
    4. ' ' → logprob: -7.752669811248779
    5. ' 
' → logprob: -9.002669334411621
    6. 'def' → logprob: -9.502669334411621
    7. '<|end|>' → logprob: -9.627669334411621
    8. '    
' → logprob: -9.752669334411621
    9. ',' → logprob: -9.877669334411621
    10. ' for' → logprob: -10.002669334411621

Token 194: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8135554194450378
    2. ' if' → logprob: -1.1885554790496826
    3. '   ' → logprob: -2.3135554790496826
    4. ' for' → logprob: -3.0635554790496826
    5. 'for' → logprob: -3.0635554790496826
    6. 'return' → logprob: -3.3135554790496826
    7. ' return' → logprob: -3.9385554790496826
    8. 'i' → logprob: -5.9385552406311035
    9. ' i' → logprob: -7.3135552406311035
    10. ' ' → logprob: -8.438555717468262

Token 195: ' bits' (ID: 18189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29001498222351074
    2. 'return' → logprob: -2.4150149822235107
    3. ' if' → logprob: -2.5400149822235107
    4. 'for' → logprob: -3.0400149822235107
    5. ' return' → logprob: -3.9150149822235107
    6. ' for' → logprob: -4.41501522064209
    7. 'def' → logprob: -6.16501522064209
    8. '   ' → logprob: -6.54001522064209
    9. '```' → logprob: -9.66501522064209
    10. ' ' → logprob: -11.66501522064209

Token 196: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23133140802383423
    2. '[' → logprob: -1.8563313484191895
    3. '=' → logprob: -3.4813313484191895
    4. 'def' → logprob: -4.2313313484191895
    5. '   ' → logprob: -6.4813313484191895
    6. ')' → logprob: -7.2313313484191895
    7. ' ' → logprob: -7.4813313484191895
    8. 'for' → logprob: -7.6063313484191895
    9. ':' → logprob: -8.106331825256348
    10. ' for' → logprob: -8.606331825256348

Token 197: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8477627635002136
    2. '=' → logprob: -1.4727628231048584
    3. ' =' → logprob: -1.4727628231048584
    4. 'def' → logprob: -2.3477628231048584
    5. 'for' → logprob: -4.972762584686279
    6. '0' → logprob: -5.347762584686279
    7. '   ' → logprob: -6.347762584686279
    8. '=[' → logprob: -7.347762584686279
    9. ')' → logprob: -7.597762584686279
    10. ' ' → logprob: -7.597762584686279

Token 198: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06041984632611275
    2. 'def' → logprob: -4.435420036315918
    3. ' ' → logprob: -4.810420036315918
    4. ' :' → logprob: -4.935420036315918
    5. '[:]' → logprob: -5.560420036315918
    6. ' =' → logprob: -5.810420036315918
    7. ':return' → logprob: -6.060420036315918
    8. ' to' → logprob: -6.060420036315918
    9. ':def' → logprob: -6.310420036315918
    10. '<|end|>' → logprob: -6.310420036315918

Token 199: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00044175516813993454
    2. ':' → logprob: -9.250441551208496
    3. '=' → logprob: -9.500441551208496
    4. '8' → logprob: -9.500441551208496
    5. '1' → logprob: -9.875441551208496
    6. '>' → logprob: -9.875441551208496
    7. ' ' → logprob: -10.000441551208496
    8. '0' → logprob: -10.375441551208496
    9. '...' → logprob: -12.125441551208496
    10. '3' → logprob: -13.125441551208496

Token 200: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2729066014289856
    2. '=' → logprob: -2.647906541824341
    3. ':' → logprob: -3.272906541824341
    4. ' for' → logprob: -3.522906541824341
    5. '   ' → logprob: -3.772906541824341
    6. ' are' → logprob: -3.772906541824341
    7. 'def' → logprob: -4.02290678024292
    8. 'for' → logprob: -4.14790678024292
    9. ' ' → logprob: -4.64790678024292
    10. ')' → logprob: -6.27290678024292

Token 201: ' any' (ID: 1062)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.5602490901947021
    2. ''' → logprob: -1.1852490901947021
    3. 'x' → logprob: -3.435249090194702
    4. ''any' → logprob: -3.810249090194702
    5. ''b' → logprob: -4.310249328613281
    6. 'anything' → logprob: -4.310249328613281
    7. 'any' → logprob: -4.560249328613281
    8. ' '' → logprob: -4.810249328613281
    9. 'ignored' → logprob: -5.435249328613281
    10. 'free' → logprob: -6.310249328613281

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04497282952070236
    2. ':' → logprob: -3.1699728965759277
    3. 'def' → logprob: -7.544972896575928
    4. ' for' → logprob: -8.29497241973877
    5. ' if' → logprob: -8.66997241973877
    6. ' ' → logprob: -8.66997241973877
    7. ':
' → logprob: -8.91997241973877
    8. '
' → logprob: -9.54497241973877
    9. ',' → logprob: -9.79497241973877
    10. '(' → logprob: -9.91997241973877

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002649974776431918
    2. ' if' → logprob: -7.127649784088135
    3. ' for' → logprob: -7.127649784088135
    4. ':' → logprob: -7.877649784088135
    5. 'if' → logprob: -9.127650260925293
    6. 'def' → logprob: -9.377650260925293
    7. '    
' → logprob: -9.377650260925293
    8. 'for' → logprob: -9.627650260925293
    9. '
' → logprob: -9.627650260925293
    10. ' return' → logprob: -10.002650260925293

Token 204: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03833281621336937
    2. ' if' → logprob: -3.78833270072937
    3. ' for' → logprob: -4.913332939147949
    4. 'if' (adapté à ' if') → logprob: -6.038332939147949
    5. ' 
' → logprob: -6.663332939147949
    6. 'def' → logprob: -7.163332939147949
    7. '
' → logprob: -7.288332939147949
    8. '    
' → logprob: -7.288332939147949
    9. 'for' → logprob: -7.413332939147949
    10. ' return' → logprob: -7.788332939147949

Token 205: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00465831533074379
    2. ' b' → logprob: -5.379658222198486
    3. 'len' → logprob: -10.254658699035645
    4. ' len' → logprob: -13.379658699035645
    5. '   ' → logprob: -14.379658699035645
    6. ' ' → logprob: -14.754658699035645
    7. 'pattern' → logprob: -17.129657745361328
    8. '```' → logprob: -17.129657745361328
    9. '(b' → logprob: -17.254657745361328
    10. '[b' → logprob: -17.254657745361328

Token 206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.0391463193809614e-05
    2. ' [' → logprob: -10.000060081481934
    3. '0' → logprob: -11.750060081481934
    4. 'def' → logprob: -13.125060081481934
    5. '```' → logprob: -13.500060081481934
    6. '==' → logprob: -14.125060081481934
    7. ' ' → logprob: -14.875060081481934
    8. 'import' → logprob: -15.000060081481934
    9. ')' → logprob: -15.125060081481934
    10. '   ' → logprob: -15.250060081481934

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.93448489275761e-05
    2. ' ' → logprob: -9.500079154968262
    3. '[' → logprob: -13.125079154968262
    4. '1' → logprob: -14.125079154968262
    5. '```' → logprob: -14.687579154968262
    6. ']' → logprob: -15.250079154968262
    7. ')' → logprob: -15.312579154968262
    8. '   ' → logprob: -16.187580108642578
    9. '`' → logprob: -16.500080108642578
    10. '][' → logprob: -16.687580108642578

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05075042322278023
    2. ']==' → logprob: -3.300750494003296
    3. '==' → logprob: -5.425750255584717
    4. ']=='' → logprob: -6.050750255584717
    5. '']' → logprob: -6.175750255584717
    6. ' ]' → logprob: -6.675750255584717
    7. '[' → logprob: -6.675750255584717
    8. ']!=' → logprob: -7.800750255584717
    9. ' ==' → logprob: -8.175750732421875
    10. ''' → logprob: -8.800750732421875

Token 209: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28308507800102234
    2. ' ==' → logprob: -1.7830851078033447
    3. '!=' → logprob: -3.0330851078033447
    4. ' !=' → logprob: -3.6580851078033447
    5. '=='' → logprob: -6.283084869384766
    6. ''' → logprob: -7.033084869384766
    7. '=' → logprob: -7.283084869384766
    8. '[' → logprob: -7.533084869384766
    9. '!='' → logprob: -8.158084869384766
    10. ' =='' → logprob: -9.283084869384766

Token 210: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003297251183539629
    2. ''x' → logprob: -6.003297328948975
    3. ' '' → logprob: -7.253297328948975
    4. '"' → logprob: -9.753296852111816
    5. ''y' → logprob: -11.378296852111816
    6. 'x' → logprob: -12.128296852111816
    7. ''o' → logprob: -12.503296852111816
    8. '1' → logprob: -12.503296852111816
    9. ''b' → logprob: -12.628296852111816
    10. ''a' → logprob: -12.753296852111816

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37163129448890686
    2. '0' → logprob: -1.3716312646865845
    3. ''' → logprob: -2.871631383895874
    4. 'x' → logprob: -10.371631622314453
    5. '')' → logprob: -10.871631622314453
    6. ''x' → logprob: -11.621631622314453
    7. ' ' → logprob: -11.746631622314453
    8. '"' → logprob: -12.371631622314453
    9. '''' → logprob: -12.871631622314453
    10. ' '' → logprob: -13.121631622314453

Token 212: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3840368092060089
    2. ''):' → logprob: -2.0090367794036865
    3. ' or' → logprob: -2.7590367794036865
    4. ''):
' → logprob: -3.5090367794036865
    5. '')' → logprob: -3.6340367794036865
    6. '):' → logprob: -3.6340367794036865
    7. '':' → logprob: -4.384037017822266
    8. ':
' → logprob: -4.509037017822266
    9. ')' → logprob: -5.259037017822266
    10. ' and' → logprob: -5.759037017822266

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05663861706852913
    2. ' return' → logprob: -3.431638717651367
    3. '   ' → logprob: -3.931638717651367
    4. 'return' → logprob: -5.931638717651367
    5. ':return' → logprob: -8.306638717651367
    6. '	return' → logprob: -9.681638717651367
    7. '
' → logprob: -9.931638717651367
    8. '    ' → logprob: -10.181638717651367
    9. ' ' → logprob: -11.181638717651367
    10. '	' → logprob: -11.431638717651367

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.381866991519928
    2. ' return' → logprob: -1.6318669319152832
    3. '       ' → logprob: -2.131866931915283
    4. '   ' → logprob: -5.756866931915283
    5. '
' → logprob: -10.006867408752441
    6. '	return' → logprob: -11.131867408752441
    7. ' ' → logprob: -12.131867408752441
    8. ':return' → logprob: -13.131867408752441
    9. '    ' → logprob: -13.256867408752441
    10. '  ' → logprob: -14.006867408752441

Token 215: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004988016560673714
    2. ' False' → logprob: -5.504988193511963
    3. '0' → logprob: -7.004988193511963
    4. ' ' → logprob: -13.504987716674805
    5. 'false' → logprob: -15.254987716674805
    6. '(False' → logprob: -15.254987716674805
    7. '   ' → logprob: -17.754987716674805
    8. 'None' → logprob: -17.754987716674805
    9. 'True' → logprob: -18.129987716674805
    10. 'FALSE' → logprob: -18.379987716674805

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.240163654088974
    2. '<|end|>' → logprob: -1.7401636838912964
    3. '
' → logprob: -3.365163564682007
    4. ' ' → logprob: -6.990163803100586
    5. '  ' → logprob: -7.490163803100586
    6. '    
' → logprob: -7.990163803100586
    7. '  
' → logprob: -8.115163803100586
    8. '<|end|>' → logprob: -8.365163803100586
    9. '\n' → logprob: -8.865163803100586
    10. '    ' → logprob: -8.865163803100586

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009251636452972889
    2. '<|end|>' → logprob: -6.009251594543457
    3. '
' → logprob: -6.259251594543457
    4. ' ' → logprob: -6.759251594543457
    5. 'if' → logprob: -7.384251594543457
    6. ' if' → logprob: -7.634251594543457
    7. '\n' → logprob: -7.884251594543457
    8. '  ' → logprob: -8.259251594543457
    9. '    
' → logprob: -8.259251594543457
    10. 'return' → logprob: -8.259251594543457

Token 218: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6385840773582458
    2. 'return' → logprob: -0.8885840773582458
    3. ' for' → logprob: -3.0135841369628906
    4. ' return' → logprob: -5.138584136962891
    5. 'if' (adapté à ' if') → logprob: -5.638584136962891
    6. '   ' → logprob: -6.388584136962891
    7. ' ' → logprob: -8.88858413696289
    8. ' if' → logprob: -9.01358413696289
    9. 'def' → logprob: -10.13858413696289
    10. 'else' → logprob: -10.26358413696289

Token 219: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6327406167984009
    2. ' b' → logprob: -0.7577406167984009
    3. 'len' → logprob: -9.63274097442627
    4. ' len' → logprob: -10.75774097442627
    5. ' ' → logprob: -10.88274097442627
    6. ' any' → logprob: -11.38274097442627
    7. ' not' → logprob: -11.88274097442627
    8. ' all' → logprob: -12.75774097442627
    9. ' False' → logprob: -12.75774097442627
    10. 'False' → logprob: -12.75774097442627

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1994775377388578e-05
    2. '0' → logprob: -12.250012397766113
    3. '1' → logprob: -13.375012397766113
    4. ' ' → logprob: -14.000012397766113
    5. '==' → logprob: -14.125012397766113
    6. '#' → logprob: -14.125012397766113
    7. ' [' → logprob: -14.375012397766113
    8. 'import' → logprob: -14.625012397766113
    9. ' is' → logprob: -14.750012397766113
    10. '[:' → logprob: -15.500012397766113

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03542634844779968
    2. '1' → logprob: -3.410426378250122
    3. '[' → logprob: -6.660426139831543
    4. ' ' → logprob: -8.160426139831543
    5. ':' → logprob: -9.535426139831543
    6. 'i' → logprob: -10.910426139831543
    7. ']' → logprob: -11.035426139831543
    8. '7' → logprob: -11.035426139831543
    9. '   ' → logprob: -11.410426139831543
    10. 'None' → logprob: -11.535426139831543

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01244266051799059
    2. ']==' → logprob: -4.637442588806152
    3. '[' → logprob: -7.012442588806152
    4. '==' → logprob: -7.137442588806152
    5. ' ]' → logprob: -7.512442588806152
    6. ' ==' → logprob: -9.012442588806152
    7. ']=='' → logprob: -9.137442588806152
    8. ']!=' → logprob: -9.387442588806152
    9. '']' → logprob: -9.512442588806152
    10. ']!='' → logprob: -11.637442588806152

Token 223: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.039561256766319275
    2. '!=' → logprob: -3.9145612716674805
    3. ' ==' → logprob: -4.0395612716674805
    4. ' !=' → logprob: -7.2895612716674805
    5. '=='' → logprob: -8.53956127166748
    6. '=' → logprob: -8.91456127166748
    7. '[' → logprob: -9.78956127166748
    8. ''' → logprob: -9.78956127166748
    9. '!='' → logprob: -9.91456127166748
    10. ')' → logprob: -11.16456127166748

Token 224: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.6402444839477539
    2. ''' → logprob: -0.7652444839477539
    3. ' '' → logprob: -5.015244483947754
    4. 'None' → logprob: -8.265244483947754
    5. ' ' → logprob: -8.515244483947754
    6. '0' → logprob: -8.890244483947754
    7. ''?' → logprob: -9.265244483947754
    8. 'x' → logprob: -9.265244483947754
    9. ' x' → logprob: -10.140244483947754
    10. '?' → logprob: -10.140244483947754

Token 225: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02045849710702896
    2. ''x' → logprob: -4.270458698272705
    3. '0' → logprob: -5.145458698272705
    4. ''' → logprob: -8.520458221435547
    5. '1' → logprob: -9.395458221435547
    6. 'None' → logprob: -9.645458221435547
    7. '?' → logprob: -9.770458221435547
    8. ' x' → logprob: -10.645458221435547
    9. '"x' → logprob: -11.895458221435547
    10. ''?' → logprob: -12.020458221435547

Token 226: ''' (ID: 6)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.9806864857673645
    2. ''):' → logprob: -1.3556864261627197
    3. ''' → logprob: -1.9806864261627197
    4. '':' → logprob: -2.8556864261627197
    5. '')' → logprob: -2.8556864261627197
    6. ')' → logprob: -3.2306864261627197
    7. ':' → logprob: -3.4806864261627197
    8. '):' → logprob: -3.6056864261627197
    9. '):
' → logprob: -4.980686664581299
    10. ' '' → logprob: -5.480686664581299

Token 227: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1476949006319046
    2. '==' → logprob: -3.2726948261260986
    3. ':
' → logprob: -3.3976948261260986
    4. ':return' → logprob: -3.5226948261260986
    5. ' or' → logprob: -3.7726948261260986
    6. ' and' → logprob: -5.522695064544678
    7. '   ' → logprob: -5.897695064544678
    8. 'and' → logprob: -6.772695064544678
    9. ' ==' → logprob: -7.022695064544678
    10. ')' → logprob: -7.022695064544678

Token 228: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3726339638233185
    2. 'False' → logprob: -1.622633934020996
    3. ' b' → logprob: -2.872633934020996
    4. ' False' → logprob: -3.372633934020996
    5. 'True' → logprob: -4.372633934020996
    6. ' True' → logprob: -5.372633934020996
    7. '0' → logprob: -5.622633934020996
    8. ' not' → logprob: -7.122633934020996
    9. ' ' → logprob: -7.747633934020996
    10. ''' → logprob: -8.122633934020996

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '[
' → logprob: -13.000003814697266
    3. '<|end|>' → logprob: -14.000003814697266
    4. '<|end|>' → logprob: -16.000003814697266
    5. 'def' → logprob: -16.125003814697266
    6. '#' → logprob: -16.500003814697266
    7. '0' → logprob: -17.000003814697266
    8. 'import' → logprob: -17.125003814697266
    9. 'b' → logprob: -17.125003814697266
    10. '```' → logprob: -17.250003814697266

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008508439059369266
    2. '[' → logprob: -7.250850677490234
    3. '1' → logprob: -9.000850677490234
    4. ' ' → logprob: -11.250850677490234
    5. ']' → logprob: -14.125850677490234
    6. '7' → logprob: -14.250850677490234
    7. '#' → logprob: -15.313350677490234
    8. '
' → logprob: -15.375850677490234
    9. 'def' → logprob: -15.438350677490234
    10. '   ' → logprob: -15.750850677490234

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09944673627614975
    2. ']==' → logprob: -2.5994467735290527
    3. '[' → logprob: -4.724446773529053
    4. '==' → logprob: -5.224446773529053
    5. ']=='' → logprob: -6.099446773529053
    6. '']' → logprob: -6.099446773529053
    7. ' ==' → logprob: -7.474446773529053
    8. '']==' → logprob: -7.724446773529053
    9. ' ]' → logprob: -8.599446296691895
    10. '']=='' → logprob: -8.974446296691895

Token 232: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09051185846328735
    2. ' ==' → logprob: -2.4655117988586426
    3. '=' → logprob: -7.715511798858643
    4. '<|end|>' → logprob: -7.715511798858643
    5. '=='' → logprob: -7.965511798858643
    6. '!=' → logprob: -9.3405122756958
    7. ' ' → logprob: -9.4655122756958
    8. ')' → logprob: -10.2155122756958
    9. '0' → logprob: -10.8405122756958
    10. ']==' → logprob: -11.0905122756958

Token 233: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013120695948600769
    2. '0' → logprob: -4.763120651245117
    3. ' '' → logprob: -6.013120651245117
    4. 'False' → logprob: -6.388120651245117
    5. ' ' → logprob: -9.138120651245117
    6. ''s' → logprob: -9.388120651245117
    7. ' False' → logprob: -10.138120651245117
    8. ''x' → logprob: -10.388120651245117
    9. '"' → logprob: -10.763120651245117
    10. 'True' → logprob: -10.888120651245117

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001181181170977652
    2. ' ' → logprob: -7.376181125640869
    3. ''' → logprob: -8.501181602478027
    4. 'False' → logprob: -8.501181602478027
    5. '1' → logprob: -9.501181602478027
    6. ' '' → logprob: -10.751181602478027
    7. ' ')' → logprob: -10.751181602478027
    8. ' False' → logprob: -11.376181602478027
    9. '')' → logprob: -11.626181602478027
    10. 'x' → logprob: -13.501181602478027

Token 235: '':
' (ID: 7669)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.9942546486854553
    2. ''):
' → logprob: -1.1192545890808105
    3. '):' → logprob: -2.1192545890808105
    4. ')' → logprob: -2.9942545890808105
    5. ':' → logprob: -2.9942545890808105
    6. '')' → logprob: -3.3692545890808105
    7. '):
' → logprob: -3.8692545890808105
    8. '':' → logprob: -4.1192545890808105
    9. ':
' → logprob: -4.7442545890808105
    10. ''' → logprob: -7.2442545890808105

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002738522016443312
    2. ':' → logprob: -8.750273704528809
    3. '   ' → logprob: -9.375273704528809
    4. ',' → logprob: -12.125273704528809
    5. '           ' → logprob: -12.125273704528809
    6. '	' → logprob: -12.250273704528809
    7. ' return' → logprob: -12.750273704528809
    8. '      ' → logprob: -13.250273704528809
    9. ':return' → logprob: -13.500273704528809
    10. ' and' → logprob: -13.500273704528809

Token 237: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5247577428817749
    2. 'return' → logprob: -1.024757742881775
    3. '       ' → logprob: -3.0247578620910645
    4. '   ' → logprob: -7.1497578620910645
    5. '	return' → logprob: -10.399757385253906
    6. ' for' → logprob: -12.024757385253906
    7. ' ' → logprob: -12.149757385253906
    8. '    ' → logprob: -12.149757385253906
    9. '           ' → logprob: -12.149757385253906
    10. ' if' → logprob: -12.399757385253906

Token 238: ' fixed' (ID: 13213)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08336104452610016
    2. ' return' → logprob: -2.5833611488342285
    3. 'if' → logprob: -6.5833611488342285
    4. '   ' → logprob: -6.9583611488342285
    5. '       ' → logprob: -6.9583611488342285
    6. 'for' → logprob: -7.7083611488342285
    7. ' if' → logprob: -7.9583611488342285
    8. ' for' → logprob: -8.33336067199707
    9. 'pass' → logprob: -9.58336067199707
    10. ' pass' → logprob: -10.58336067199707

Token 239: ' first' (ID: 1577)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5160852670669556
    2. 'return' → logprob: -1.5160852670669556
    3. ' if' → logprob: -2.641085147857666
    4. '   ' → logprob: -3.016085147857666
    5. '       ' → logprob: -3.891085147857666
    6. 'if' → logprob: -4.391085147857666
    7. ' True' → logprob: -5.016085147857666
    8. 'True' → logprob: -5.516085147857666
    9. '           ' → logprob: -6.016085147857666
    10. ' else' → logprob: -6.391085147857666

Token 240: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.27841103076934814
    2. 'bit' → logprob: -1.6534110307693481
    3. ' True' → logprob: -4.528410911560059
    4. ' return' → logprob: -4.653410911560059
    5. 'True' → logprob: -5.153410911560059
    6. '   ' → logprob: -5.403410911560059
    7. ' ' → logprob: -5.653410911560059
    8. 'def' → logprob: -6.028410911560059
    9. 'return' → logprob: -6.153410911560059
    10. 'False' → logprob: -6.278410911560059

Token 241: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032688431441783905
    2. 'return' → logprob: -4.282688617706299
    3. ' return' → logprob: -4.407688617706299
    4. ' if' → logprob: -5.782688617706299
    5. '           ' → logprob: -7.157688617706299
    6. ' or' → logprob: -7.657688617706299
    7. '   ' → logprob: -7.782688617706299
    8. ' and' → logprob: -7.782688617706299
    9. 'if' → logprob: -8.15768814086914
    10. '==' → logprob: -8.65768814086914

Token 242: ' not' (ID: 625)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9830964803695679
    2. '0' → logprob: -1.2330964803695679
    3. 'False' → logprob: -1.6080964803695679
    4. 'True' → logprob: -2.4830965995788574
    5. ' '' → logprob: -3.8580965995788574
    6. ' False' → logprob: -4.483096599578857
    7. ' True' → logprob: -4.483096599578857
    8. ' ' → logprob: -5.108096599578857
    9. ''s' → logprob: -7.983096599578857
    10. '   ' → logprob: -8.3580961227417

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8615142107009888
    2. 'False' → logprob: -1.2365142107009888
    3. ''' → logprob: -1.8615142107009888
    4. 'True' → logprob: -3.236514091491699
    5. ' False' → logprob: -3.361514091491699
    6. '1' → logprob: -3.861514091491699
    7. ' True' → logprob: -4.236514091491699
    8. ' ' → logprob: -4.486514091491699
    9. ' '' → logprob: -4.861514091491699
    10. 'b' → logprob: -7.361514091491699

Token 244: '1' (ID: 16)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8381226062774658
    2. ''' → logprob: -1.3381226062774658
    3. '0' → logprob: -1.3381226062774658
    4. '1' → logprob: -3.463122606277466
    5. 'True' → logprob: -4.963122367858887
    6. ' False' → logprob: -6.963122367858887
    7. 'x' → logprob: -7.213122367858887
    8. 'false' → logprob: -7.463122367858887
    9. ' ' → logprob: -7.588122367858887
    10. ''s' → logprob: -8.088122367858887

Token 245: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16572129726409912
    2. '   ' → logprob: -1.9157212972640991
    3. ' and' → logprob: -6.790721416473389
    4. ',' → logprob: -7.040721416473389
    5. 'return' → logprob: -7.290721416473389
    6. ' return' → logprob: -7.290721416473389
    7. '           ' → logprob: -7.540721416473389
    8. ' or' → logprob: -7.665721416473389
    9. ' else' → logprob: -8.04072093963623
    10. 'else' → logprob: -8.41572093963623

Token 246: ' good' (ID: 1899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21485872566699982
    2. ' return' → logprob: -1.7148587703704834
    3. 'return' → logprob: -4.339858531951904
    4. '   ' → logprob: -8.214859008789062
    5. '           ' → logprob: -10.714859008789062
    6. ' ' → logprob: -12.214859008789062
    7. '    ' → logprob: -12.339859008789062
    8. '	return' → logprob: -12.589859008789062
    9. ' if' → logprob: -13.214859008789062
    10. '      ' → logprob: -13.339859008789062

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10045132786035538
    2. '   ' → logprob: -2.3504512310028076
    3. '           ' → logprob: -9.725451469421387
    4. '	' → logprob: -10.100451469421387
    5. 'return' → logprob: -10.100451469421387
    6. ' return' → logprob: -10.600451469421387
    7. '    ' → logprob: -10.850451469421387
    8. ',' → logprob: -11.475451469421387
    9. '	return' → logprob: -11.600451469421387
    10. '<|end|>' → logprob: -11.975451469421387

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009811103343963623
    2. '   ' → logprob: -4.634810924530029
    3. 'return' → logprob: -10.384811401367188
    4. ' return' → logprob: -11.509811401367188
    5. '           ' → logprob: -12.259811401367188
    6. '	' → logprob: -12.634811401367188
    7. 'else' → logprob: -13.509811401367188
    8. '	return' → logprob: -13.634811401367188
    9. '	   ' → logprob: -13.759811401367188
    10. '.' → logprob: -14.759811401367188

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2713308334350586
    2. '       ' → logprob: -2.0213308334350586
    3. ' return' → logprob: -2.2713308334350586
    4. '   ' → logprob: -6.271330833435059
    5. ' for' → logprob: -11.146330833435059
    6. '	return' → logprob: -11.146330833435059
    7. 'for' → logprob: -11.146330833435059
    8. '           ' → logprob: -11.271330833435059
    9. 'if' → logprob: -11.271330833435059
    10. ' ' → logprob: -11.521330833435059

Token 250: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014171031303703785
    2. ' True' → logprob: -4.264171123504639
    3. 'False' → logprob: -13.01417064666748
    4. 'b' → logprob: -13.38917064666748
    5. '   ' → logprob: -13.51417064666748
    6. '(True' → logprob: -13.76417064666748
    7. ' ' → logprob: -14.13917064666748
    8. '  ' → logprob: -15.51417064666748
    9. ' b' → logprob: -16.139171600341797
    10. '    ' → logprob: -16.389171600341797

Token 251: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'None' → logprob: -18.500001907348633
    4. 'false' → logprob: -22.375001907348633
    5. 'True' → logprob: -22.750001907348633
    6. '(False' → logprob: -23.000001907348633
    7. '=False' → logprob: -25.500001907348633
    8. '_false' → logprob: -26.250001907348633
    9. 'FALSE' → logprob: -27.375001907348633
    10. '0' → logprob: -27.375001907348633

Token 255: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5268689393997192
    2. '<|end|>' → logprob: -0.9018689393997192
    3. ')' → logprob: -6.40186882019043
    4. '<|end|>' → logprob: -7.65186882019043
    5. '
' → logprob: -7.90186882019043
    6. ' def' → logprob: -8.40186882019043
    7. ' ' → logprob: -8.40186882019043
    8. '#' → logprob: -8.52686882019043
    9. '```' → logprob: -9.15186882019043
    10. '[' → logprob: -9.27686882019043

Token 256: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09707377851009369
    2. 'def' → logprob: -2.847073793411255
    3. '       ' → logprob: -3.972073793411255
    4. ' for' → logprob: -4.972073554992676
    5. 'for' → logprob: -4.972073554992676
    6. '           ' → logprob: -7.097073554992676
    7. ' if' → logprob: -7.972073554992676
    8. 'if' → logprob: -8.347073554992676
    9. ' def' → logprob: -9.222073554992676
    10. 'count' → logprob: -9.472073554992676

Token 257: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.2491823434829712
    2. 'count' → logprob: -1.3741823434829712
    3. ' is' → logprob: -1.7491823434829712
    4. 'is' → logprob: -2.1241822242736816
    5. 'match' → logprob: -3.3741822242736816
    6. ' matches' → logprob: -3.4991822242736816
    7. 'matches' → logprob: -3.7491822242736816
    8. ' match' → logprob: -4.124182224273682
    9. ' valid' → logprob: -4.624182224273682
    10. 'valid' → logprob: -4.999182224273682

Token 258: '_one' (ID: 26979)
  Prédit: '_matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -1.0071207284927368
    2. '_one' → logprob: -1.3821207284927368
    3. '_bytes' → logprob: -2.1321206092834473
    4. '_matching' → logprob: -3.2571206092834473
    5. '_' → logprob: -3.5071206092834473
    6. '_valid' → logprob: -3.6321206092834473
    7. '_byte' → logprob: -3.8821206092834473
    8. '_possible' → logprob: -3.8821206092834473
    9. '_bits' → logprob: -4.007120609283447
    10. '_utf' → logprob: -4.257120609283447

Token 259: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -1.9266199160483666e-05
    2. '_bytes' → logprob: -11.375019073486328
    3. 'byte' → logprob: -12.750019073486328
    4. '_bit' → logprob: -13.000019073486328
    5. '_one' → logprob: -14.000019073486328
    6. '_' → logprob: -14.250019073486328
    7. '_char' → logprob: -14.875019073486328
    8. '_b' → logprob: -15.625019073486328
    9. '_BYTE' → logprob: -15.875019073486328
    10. '_letter' → logprob: -16.375019073486328

Token 260: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.26758405566215515
    2. '(pattern' → logprob: -1.7675840854644775
    3. '(' → logprob: -2.8925840854644775
    4. '(p' → logprob: -5.767583847045898
    5. '(bits' → logprob: -5.892583847045898
    6. '(bit' → logprob: -6.892583847045898
    7. '(mask' → logprob: -7.267583847045898
    8. '(s' → logprob: -8.017583847045898
    9. ' (' → logprob: -8.767583847045898
    10. '(byte' → logprob: -8.767583847045898

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005765048554167151
    2. '):
' → logprob: -7.500576496124268
    3. ')' → logprob: -11.375576972961426
    4. '   ' → logprob: -12.500576972961426
    5. ':' → logprob: -13.000576972961426
    6. ',' → logprob: -13.000576972961426
    7. '(b' → logprob: -13.875576972961426
    8. 'b' → logprob: -14.250576972961426
    9. '):
' → logprob: -14.250576972961426
    10. ' ):' → logprob: -14.500576972961426

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011248346709180623
    2. 'count' → logprob: -9.375112533569336
    3. ' count' → logprob: -11.875112533569336
    4. 'def' → logprob: -12.375112533569336
    5. 'bits' → logprob: -12.375112533569336
    6. '```' → logprob: -13.250112533569336
    7. 'pattern' → logprob: -13.375112533569336
    8. 'mask' → logprob: -13.500112533569336
    9. 'return' → logprob: -13.625112533569336
    10. 'bit' → logprob: -13.750112533569336

Token 263: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09529823809862137
    2. 'count' → logprob: -2.4702982902526855
    3. 'return' → logprob: -5.9702982902526855
    4. ' count' → logprob: -7.2202982902526855
    5. 'bits' → logprob: -7.3452982902526855
    6. 'unknown' → logprob: -7.3452982902526855
    7. 'result' → logprob: -7.5952982902526855
    8. 'cnt' → logprob: -7.9702982902526855
    9. 'total' → logprob: -8.470297813415527
    10. 'mask' → logprob: -8.595297813415527

Token 264: ' first' (ID: 1577)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.19697749614715576
    2. 'options' → logprob: -2.8219776153564453
    3. 'cnt' → logprob: -3.3219776153564453
    4. 'unknown' → logprob: -4.071977615356445
    5. 'res' → logprob: -4.321977615356445
    6. 'bits' → logprob: -4.446977615356445
    7. 'return' → logprob: -4.571977615356445
    8. 'result' → logprob: -4.821977615356445
    9. '   ' → logprob: -4.821977615356445
    10. 'opts' → logprob: -5.946977615356445

Token 265: ' bit' (ID: 3546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2801995873451233
    2. 'bit' → logprob: -2.7801995277404785
    3. '   ' → logprob: -3.0301995277404785
    4. '=' → logprob: -3.1551995277404785
    5. 'def' → logprob: -3.4051995277404785
    6. '_bit' → logprob: -3.9051995277404785
    7. '_bits' → logprob: -4.5301995277404785
    8. '_' → logprob: -4.5301995277404785
    9. ' bit' → logprob: -4.6551995277404785
    10. '_byte' → logprob: -6.0301995277404785

Token 266: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47747090458869934
    2. '=' → logprob: -1.102470874786377
    3. 'def' → logprob: -3.102470874786377
    4. '   ' → logprob: -6.477470874786377
    5. ',' → logprob: -8.477471351623535
    6. ')' → logprob: -8.852471351623535
    7. '==' → logprob: -9.102471351623535
    8. ' ==' → logprob: -9.227471351623535
    9. '_' → logprob: -9.477471351623535
    10. 'import' → logprob: -9.727471351623535

Token 267: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5255452394485474
    2. ' ==' → logprob: -1.1505452394485474
    3. '==' → logprob: -3.275545120239258
    4. ' ' → logprob: -3.900545120239258
    5. ' not' → logprob: -4.775545120239258
    6. '=' → logprob: -5.025545120239258
    7. 'not' → logprob: -5.275545120239258
    8. 'be' → logprob: -5.525545120239258
    9. ' '' → logprob: -5.900545120239258
    10. ''' → logprob: -6.150545120239258

Token 268: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47837984561920166
    2. '0' → logprob: -0.9783798456192017
    3. ' '' → logprob: -5.603379726409912
    4. ' ' → logprob: -7.728379726409912
    5. ''b' → logprob: -9.47838020324707
    6. 'b' → logprob: -10.97838020324707
    7. '"' → logprob: -11.22838020324707
    8. '1' → logprob: -11.35338020324707
    9. 'False' → logprob: -11.85338020324707
    10. '('' → logprob: -12.47838020324707

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5769108533859253
    2. ''' → logprob: -0.8269108533859253
    3. ' '' → logprob: -7.451910972595215
    4. ' ' → logprob: -8.326910972595215
    5. ''b' → logprob: -10.326910972595215
    6. '1' → logprob: -10.451910972595215
    7. 'b' → logprob: -10.451910972595215
    8. '"' → logprob: -11.326910972595215
    9. 'False' → logprob: -11.826910972595215
    10. 'fixed' → logprob: -12.076910972595215

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017720464384183288
    2. 'count' → logprob: -6.626771926879883
    3. ' count' → logprob: -8.626771926879883
    4. '
' → logprob: -8.751771926879883
    5. 'def' → logprob: -9.876771926879883
    6. '    
' → logprob: -11.376771926879883
    7. ',' → logprob: -11.376771926879883
    8. '	count' → logprob: -11.626771926879883
    9. ' =' → logprob: -12.626771926879883
    10. '```' → logprob: -12.751771926879883

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040660108788870275
    2. 'count' → logprob: -7.875406742095947
    3. ' count' → logprob: -11.250406265258789
    4. 'return' → logprob: -12.375406265258789
    5. 'def' → logprob: -12.875406265258789
    6. '```' → logprob: -13.500406265258789
    7. '
' → logprob: -13.750406265258789
    8. '	count' → logprob: -13.875406265258789
    9. '    
' → logprob: -14.375406265258789
    10. '   ' → logprob: -14.750406265258789

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49600550532341003
    2. 'count' → logprob: -0.9960055351257324
    3. 'return' → logprob: -4.121005535125732
    4. 'cnt' → logprob: -6.621005535125732
    5. 'unknown' → logprob: -6.746005535125732
    6. 'options' → logprob: -7.121005535125732
    7. 'mask' → logprob: -7.371005535125732
    8. 'result' → logprob: -7.746005535125732
    9. 'bits' → logprob: -8.121005058288574
    10. ' count' → logprob: -8.496005058288574

Token 273: ' bits' (ID: 18189)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.044192321598529816
    2. 'options' → logprob: -4.294192314147949
    3. ' count' → logprob: -4.419192314147949
    4. 'cnt' → logprob: -4.794192314147949
    5. 'unknown' → logprob: -5.919192314147949
    6. '   ' → logprob: -5.919192314147949
    7. 'res' → logprob: -6.919192314147949
    8. 'return' → logprob: -7.294192314147949
    9. 'result' → logprob: -7.919192314147949
    10. 'total' → logprob: -8.04419231414795

Token 274: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041605204343795776
    2. '=' → logprob: -3.416605234146118
    3. '   ' → logprob: -5.041604995727539
    4. '[' → logprob: -6.916604995727539
    5. ' ' → logprob: -8.291604995727539
    6. '7' → logprob: -9.541604995727539
    7. '1' → logprob: -10.666604995727539
    8. 'rest' → logprob: -10.916604995727539
    9. 'for' → logprob: -11.166604995727539
    10. 'def' → logprob: -11.291604995727539

Token 275: ' can' (ID: 665)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028445200994610786
    2. ' ' → logprob: -4.278445243835449
    3. '1' → logprob: -5.153445243835449
    4. 'b' → logprob: -5.403445243835449
    5. '[' → logprob: -6.653445243835449
    6. 'the' → logprob: -7.528445243835449
    7. ' the' → logprob: -7.653445243835449
    8. '=' → logprob: -8.15344524383545
    9. 'first' → logprob: -8.27844524383545
    10. ' =' → logprob: -8.27844524383545

Token 276: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3519381880760193
    2. 'be' → logprob: -1.226938247680664
    3. '=' → logprob: -6.101938247680664
    4. ' =' → logprob: -8.351938247680664
    5. 'any' → logprob: -8.726938247680664
    6. ' any' → logprob: -8.851938247680664
    7. '   ' → logprob: -8.976938247680664
    8. '[' → logprob: -9.476938247680664
    9. 'range' → logprob: -9.601938247680664
    10. ''' → logprob: -10.101938247680664

Token 277: ' ' (ID: 220)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.2609189450740814
    2. ' any' → logprob: -3.2609188556671143
    3. '2' → logprob: -3.3859188556671143
    4. 'x' → logprob: -3.3859188556671143
    5. ''x' → logprob: -3.6359188556671143
    6. ''any' → logprob: -3.6359188556671143
    7. 'anything' → logprob: -4.010919094085693
    8. ''' → logprob: -4.135919094085693
    9. '0' → logprob: -4.510919094085693
    10. 'either' → logprob: -5.385919094085693

Token 278: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1609169244766235
    2. 'any' → logprob: -1.4109169244766235
    3. ''b' → logprob: -2.535916805267334
    4. ''x' → logprob: -2.535916805267334
    5. 'b' → logprob: -2.785916805267334
    6. ''' → logprob: -3.160916805267334
    7. 'x' → logprob: -3.160916805267334
    8. 'None' → logprob: -3.660916805267334
    9. '8' → logprob: -3.660916805267334
    10. ''any' → logprob: -3.785916805267334

Token 279: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5814756155014038
    2. '   ' → logprob: -1.7064756155014038
    3. ',' → logprob: -2.0814757347106934
    4. 'or' → logprob: -2.9564757347106934
    5. 'b' → logprob: -3.4564757347106934
    6. 'x' → logprob: -4.081475734710693
    7. ''' → logprob: -4.831475734710693
    8. ' ' → logprob: -5.331475734710693
    9. ' ,' → logprob: -5.456475734710693
    10. '  ' → logprob: -5.581475734710693

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043221889063715935
    2. ' ' → logprob: -7.750432014465332
    3. 'x' → logprob: -13.500432014465332
    4. ' x' → logprob: -17.62543296813965
    5. '   ' → logprob: -17.68793296813965
    6. '7' → logprob: -17.81293296813965
    7. ' ' → logprob: -18.18793296813965
    8. ''' → logprob: -18.31293296813965
    9. '2' → logprob: -18.75043296813965
    10. '.' → logprob: -18.75043296813965

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'x' → logprob: -18.000003814697266
    4. '
' → logprob: -19.250003814697266
    5. '۱' → logprob: -19.750003814697266
    6. '１' → logprob: -19.875003814697266
    7. '   ' → logprob: -20.750003814697266
    8. '```' → logprob: -20.812503814697266
    9. ' ' → logprob: -20.875003814697266
    10. ',' → logprob: -20.937503814697266

Token 282: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006377388490363955
    2. 'count' → logprob: -7.500637531280518
    3. 'return' → logprob: -10.375638008117676
    4. '
' → logprob: -10.750638008117676
    5. 'def' → logprob: -11.250638008117676
    6. ',' → logprob: -12.250638008117676
    7. ' count' → logprob: -12.625638008117676
    8. '```' → logprob: -12.625638008117676
    9. '	count' → logprob: -13.125638008117676
    10. '    
' → logprob: -13.625638008117676

Token 283: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02645612321794033
    2. ' x' → logprob: -3.901456117630005
    3. ''x' → logprob: -5.151456356048584
    4. ' '' → logprob: -10.401455879211426
    5. ' unknown' → logprob: -10.776455879211426
    6. 'unknown' → logprob: -10.901455879211426
    7. ''' → logprob: -10.901455879211426
    8. '	x' → logprob: -12.401455879211426
    9. '"x' → logprob: -12.401455879211426
    10. ' ' → logprob: -12.526455879211426

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02119569107890129
    2. 'count' → logprob: -3.896195650100708
    3. ' count' → logprob: -9.021195411682129
    4. '
' → logprob: -9.396195411682129
    5. 'return' → logprob: -9.396195411682129
    6. 'bits' → logprob: -9.396195411682129
    7. 'def' → logprob: -9.396195411682129
    8. 'options' → logprob: -9.771195411682129
    9. 'n' → logprob: -10.521195411682129
    10. 'result' → logprob: -11.021195411682129

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017569487914443016
    2. 'count' → logprob: -4.267569541931152
    3. ' count' → logprob: -5.767569541931152
    4. 'options' → logprob: -9.767569541931152
    5. ' options' → logprob: -10.017569541931152
    6. 'bits' → logprob: -10.142569541931152
    7. 'return' → logprob: -10.392569541931152
    8. '```' → logprob: -11.142569541931152
    9. 'n' → logprob: -11.392569541931152
    10. 'result' → logprob: -11.517569541931152

Token 286: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2098192572593689
    2. '   ' → logprob: -1.7098193168640137
    3. 'cnt' → logprob: -5.584819316864014
    4. 'options' → logprob: -6.584819316864014
    5. 'res' → logprob: -6.584819316864014
    6. 'result' → logprob: -7.084819316864014
    7. ' count' → logprob: -7.584819316864014
    8. 'return' → logprob: -8.959818840026855
    9. 'ans' → logprob: -9.334818840026855
    10. 'total' → logprob: -9.584818840026855

Token 287: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09079919010400772
    2. '   ' → logprob: -3.59079909324646
    3. 'cnt' → logprob: -3.84079909324646
    4. 'res' → logprob: -4.340799331665039
    5. 'options' → logprob: -4.840799331665039
    6. 'unknown' → logprob: -5.090799331665039
    7. ' count' → logprob: -5.590799331665039
    8. 'result' → logprob: -5.840799331665039
    9. 'return' → logprob: -6.340799331665039
    10. 'total' → logprob: -7.090799331665039

Token 288: ' possibilities' (ID: 31061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06083977594971657
    2. '   ' → logprob: -3.060839891433716
    3. '=' → logprob: -4.560839653015137
    4. 'return' → logprob: -7.935839653015137
    5. ' ' → logprob: -8.185839653015137
    6. 'count' → logprob: -8.435839653015137
    7. ' return' → logprob: -8.685839653015137
    8. 'options' → logprob: -8.935839653015137
    9. 'def' → logprob: -9.060839653015137
    10. ' options' → logprob: -9.435839653015137

Token 289: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18423694372177124
    2. 'count' → logprob: -1.809237003326416
    3. 'return' → logprob: -6.184237003326416
    4. 'options' → logprob: -7.559237003326416
    5. 'res' → logprob: -7.684237003326416
    6. 'result' → logprob: -7.934237003326416
    7. 'cnt' → logprob: -8.309236526489258
    8. '```' → logprob: -8.434236526489258
    9. ' count' → logprob: -9.184236526489258
    10. 'ans' → logprob: -9.184236526489258

Token 290: ' comply' (ID: 40206)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.3773298263549805
    2. 'match' → logprob: -1.3773298263549805
    3. ' match' → logprob: -1.6273298263549805
    4. 'b' → logprob: -2.3773298263549805
    5. 'all' → logprob: -2.6273298263549805
    6. ' b' → logprob: -3.0023298263549805
    7. '   ' → logprob: -4.0023298263549805
    8. ' fit' → logprob: -4.6273298263549805
    9. 'fit' → logprob: -4.7523298263549805
    10. ' ' → logprob: -4.8773298263549805

Token 291: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02036435529589653
    2. ' =' → logprob: -4.020364284515381
    3. '=' → logprob: -6.270364284515381
    4. 'count' → logprob: -8.770364761352539
    5. 'with' → logprob: -9.645364761352539
    6. 'def' → logprob: -9.895364761352539
    7. ' with' → logprob: -11.520364761352539
    8. 'bits' → logprob: -11.645364761352539
    9. 'result' → logprob: -11.895364761352539
    10. '
' → logprob: -11.895364761352539

Token 292: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.015030961483716965
    2. 'is' → logprob: -4.765030860900879
    3. 'count' → logprob: -6.390030860900879
    4. '1' → logprob: -6.640030860900879
    5. ' b' → logprob: -6.890030860900879
    6. 'pattern' → logprob: -7.140030860900879
    7. ' is' → logprob: -7.890030860900879
    8. '8' → logprob: -8.515030860900879
    9. '(' → logprob: -8.765030860900879
    10. '
' → logprob: -9.015030860900879

Token 293: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.4453195333480835
    2. 'bit' → logprob: -1.6953195333480835
    3. '_bit' → logprob: -2.195319652557373
    4. ' _' → logprob: -3.445319652557373
    5. '_' → logprob: -3.945319652557373
    6. ' ' → logprob: -5.570319652557373
    7. '_token' → logprob: -6.320319652557373
    8. '_b' → logprob: -6.820319652557373
    9. 'b' → logprob: -7.070319652557373
    10. '_bits' → logprob: -7.070319652557373

Token 294: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14088676869869232
    2. ' =' → logprob: -2.2658867835998535
    3. '=' → logprob: -3.6408867835998535
    4. 'count' → logprob: -7.0158867835998535
    5. '(' → logprob: -9.015886306762695
    6. 'def' → logprob: -9.140886306762695
    7. 'bits' → logprob: -9.890886306762695
    8. '```' → logprob: -10.015886306762695
    9. '(bits' → logprob: -10.140886306762695
    10. ':' → logprob: -10.640886306762695

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004113692557439208
    2. ' ' → logprob: -8.375411033630371
    3. ''' → logprob: -8.625411033630371
    4. ' '' → logprob: -14.125411033630371
    5. '   ' → logprob: -16.125411987304688
    6. '"' → logprob: -16.250411987304688
    7. '1' → logprob: -16.500411987304688
    8. '`' → logprob: -16.500411987304688
    9. '=' → logprob: -17.750411987304688
    10. '```' → logprob: -17.750411987304688

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2525971531867981
    2. 'count' → logprob: -1.5025970935821533
    3. 'result' → logprob: -8.752596855163574
    4. '```' → logprob: -8.752596855163574
    5. ' count' → logprob: -9.002596855163574
    6. 'def' → logprob: -9.252596855163574
    7. 'cnt' → logprob: -9.877596855163574
    8. 'return' → logprob: -10.752596855163574
    9. 'options' → logprob: -10.877596855163574
    10. 'res' → logprob: -11.502596855163574

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009183663059957325
    2. 'count' → logprob: -7.000918388366699
    3. '
' → logprob: -13.1259183883667
    4. 'return' → logprob: -13.8759183883667
    5. ' count' → logprob: -13.8759183883667
    6. '```' → logprob: -13.8759183883667
    7. 'def' → logprob: -14.8759183883667
    8. 'bits' → logprob: -14.8759183883667
    9. 'result' → logprob: -14.8759183883667
    10. '   ' → logprob: -15.3759183883667

Token 298: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3882519006729126
    2. '   ' → logprob: -1.1382519006729126
    3. 'cnt' → logprob: -7.638251781463623
    4. ' count' → logprob: -8.013252258300781
    5. 'result' → logprob: -8.263252258300781
    6. 'res' → logprob: -9.138252258300781
    7. 'options' → logprob: -9.763252258300781
    8. 'total' → logprob: -9.763252258300781
    9. 'return' → logprob: -10.263252258300781
    10. 'def' → logprob: -10.638252258300781

Token 299: ' So' (ID: 2632)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20664452016353607
    2. '   ' → logprob: -1.7066445350646973
    3. 'cnt' → logprob: -6.206644535064697
    4. 'result' → logprob: -6.581644535064697
    5. 'res' → logprob: -6.581644535064697
    6. 'options' → logprob: -9.081644058227539
    7. 'total' → logprob: -9.206644058227539
    8. 'ans' → logprob: -9.581644058227539
    9. ' count' → logprob: -9.706644058227539
    10. 'return' → logprob: -10.706644058227539

Token 300: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1910972595214844
    2. ' count' → logprob: -1.3160972595214844
    3. 'count' → logprob: -1.4410972595214844
    4. ' return' → logprob: -2.5660972595214844
    5. 'return' → logprob: -3.0660972595214844
    6. 'bits' → logprob: -4.191097259521484
    7. ' total' → logprob: -4.816097259521484
    8. 'result' → logprob: -4.816097259521484
    9. ' result' → logprob: -5.066097259521484
    10. 'n' → logprob: -5.441097259521484

Token 301: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00999358482658863
    2. '_options' → logprob: -5.634993553161621
    3. ' =' → logprob: -5.884993553161621
    4. '   ' → logprob: -6.259993553161621
    5. 'options' → logprob: -7.134993553161621
    6. '=' → logprob: -8.009993553161621
    7. '_count' → logprob: -8.259993553161621
    8. 'count' → logprob: -10.134993553161621
    9. ' options' → logprob: -10.509993553161621
    10. '       ' → logprob: -10.634993553161621

Token 302: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6719365119934082
    2. '_options' → logprob: -1.2969365119934082
    3. 's' → logprob: -2.296936511993408
    4. '_count' → logprob: -2.921936511993408
    5. '=' → logprob: -3.671936511993408
    6. 'options' → logprob: -4.046936511993408
    7. ' options' → logprob: -5.046936511993408
    8. '_mask' → logprob: -5.671936511993408
    9. '   ' → logprob: -5.921936511993408
    10. 'count' → logprob: -6.171936511993408

Token 303: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2575978636741638
    2. '=' → logprob: -2.1325979232788086
    3. '==' → logprob: -2.8825979232788086
    4. 'be' → logprob: -3.6325979232788086
    5. ' ==' → logprob: -4.507597923278809
    6. 'b' → logprob: -5.132597923278809
    7. 'count' → logprob: -6.257597923278809
    8. ' ' → logprob: -6.757597923278809
    9. '0' → logprob: -6.757597923278809
    10. '=='' → logprob: -6.882597923278809

Token 304: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12125086039304733
    2. ''' → logprob: -2.246250867843628
    3. ' '' → logprob: -5.621250629425049
    4. ' ' → logprob: -6.121250629425049
    5. ''b' → logprob: -6.121250629425049
    6. 'b' → logprob: -8.371251106262207
    7. '1' → logprob: -9.996251106262207
    8. ' b' → logprob: -10.371251106262207
    9. ''s' → logprob: -11.246251106262207
    10. 'False' → logprob: -11.246251106262207

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. ''' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.125012397766113
    4. '1' → logprob: -16.000011444091797
    5. '')' → logprob: -17.062511444091797
    6. '   ' → logprob: -17.125011444091797
    7. 'b' → logprob: -17.687511444091797
    8. '`' → logprob: -18.250011444091797
    9. '۰' → logprob: -18.500011444091797
    10. '    ' → logprob: -18.687511444091797

Token 306: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03617178276181221
    2. ' or' → logprob: -3.4111716747283936
    3. '',' → logprob: -7.286171913146973
    4. ' if' → logprob: -7.286171913146973
    5. ''
' → logprob: -8.161171913146973
    6. ''or' → logprob: -8.286171913146973
    7. 'if' → logprob: -9.036171913146973
    8. ' and' → logprob: -9.161171913146973
    9. '')' → logprob: -9.161171913146973
    10. '
' → logprob: -9.661171913146973

Token 307: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035589490085840225
    2. 'count' → logprob: -4.160589694976807
    3. ' if' → logprob: -4.410589694976807
    4. 'if' → logprob: -5.410589694976807
    5. 'def' → logprob: -6.660589694976807
    6. ' count' → logprob: -7.160589694976807
    7. 'bits' → logprob: -8.785589218139648
    8. 'options' → logprob: -9.285589218139648
    9. '
' → logprob: -9.535589218139648
    10. 'result' → logprob: -9.785589218139648

Token 308: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.49345433712005615
    2. ' b' → logprob: -1.1184543371200562
    3. ' (' → logprob: -3.3684544563293457
    4. '(' → logprob: -4.493454456329346
    5. '(b' → logprob: -4.868454456329346
    6. ''b' → logprob: -5.743454456329346
    7. 'x' → logprob: -6.243454456329346
    8. ' '' → logprob: -6.618454456329346
    9. '('' → logprob: -6.743454456329346
    10. ''' → logprob: -7.493454456329346

Token 309: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.584239938296378e-06
    2. ''x' → logprob: -11.875007629394531
    3. ''' → logprob: -15.125007629394531
    4. '0' → logprob: -15.875007629394531
    5. ' x' → logprob: -15.875007629394531
    6. '?' → logprob: -17.00000762939453
    7. 'None' → logprob: -18.25000762939453
    8. '1' → logprob: -18.37500762939453
    9. '(x' → logprob: -18.37500762939453
    10. '')' → logprob: -19.00000762939453

Token 310: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005767734721302986
    2. ''
' → logprob: -6.255767822265625
    3. ' and' → logprob: -6.505767822265625
    4. ')' → logprob: -7.380767822265625
    5. ')'' → logprob: -7.505767822265625
    6. '   ' → logprob: -8.005767822265625
    7. '':' → logprob: -8.380767822265625
    8. ' '' → logprob: -8.880767822265625
    9. ' or' → logprob: -9.630767822265625
    10. ' if' → logprob: -9.880767822265625

Token 311: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04338108375668526
    2. 'count' → logprob: -3.9183809757232666
    3. ' if' → logprob: -4.293381214141846
    4. 'if' → logprob: -5.543381214141846
    5. '
' → logprob: -5.668381214141846
    6. ' count' → logprob: -7.543381214141846
    7. 'def' → logprob: -7.918381214141846
    8. ',' → logprob: -9.293380737304688
    9. ' =' → logprob: -9.543380737304688
    10. '  ' → logprob: -9.918380737304688

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41263166069984436
    2. '1' → logprob: -1.912631630897522
    3. ' if' → logprob: -2.6626317501068115
    4. '0' → logprob: -2.9126317501068115
    5. ' ' → logprob: -3.2876317501068115
    6. 'b' → logprob: -4.412631511688232
    7. 'count' → logprob: -5.037631511688232
    8. ' b' → logprob: -5.412631511688232
    9. '(' → logprob: -6.287631511688232
    10. ' (' → logprob: -7.162631511688232

Token 313: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5231544971466064
    2. ' b' → logprob: -0.8981544971466064
    3. ' not' → logprob: -11.898154258728027
    4. '(b' → logprob: -12.148154258728027
    5. ' ' → logprob: -12.773154258728027
    6. ' (' → logprob: -12.898154258728027
    7. '(' → logprob: -12.898154258728027
    8. '0' → logprob: -13.148154258728027
    9. ' ' → logprob: -13.523154258728027
    10. 'not' → logprob: -13.523154258728027

Token 314: 'x' (ID: 87)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6796625852584839
    2. '0' → logprob: -0.8046625852584839
    3. 'x' → logprob: -3.1796627044677734
    4. '[' → logprob: -5.929662704467773
    5. ' ' → logprob: -7.429662704467773
    6. '['' → logprob: -8.054662704467773
    7. ''' → logprob: -8.304662704467773
    8. '=' → logprob: -8.679662704467773
    9. ' b' → logprob: -9.054662704467773
    10. '1' → logprob: -10.179662704467773

Token 315: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4405502378940582
    2. '':' → logprob: -1.1905502080917358
    3. '',' → logprob: -3.8155503273010254
    4. ' ==' → logprob: -4.065550327301025
    5. '==' → logprob: -4.940550327301025
    6. ':' → logprob: -6.315550327301025
    7. '':
' → logprob: -6.565550327301025
    8. ',' → logprob: -7.190550327301025
    9. '=='' → logprob: -7.440550327301025
    10. '   ' → logprob: -8.315549850463867

Token 316: ' then' (ID: 1815)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4192623794078827
    2. ':' → logprob: -1.794262409210205
    3. ' count' → logprob: -2.919262409210205
    4. ',' → logprob: -3.669262409210205
    5. '   ' → logprob: -3.919262409210205
    6. ':
' → logprob: -4.169262409210205
    7. 'return' → logprob: -4.544262409210205
    8. '_count' → logprob: -4.669262409210205
    9. '       ' → logprob: -5.169262409210205
    10. '=' → logprob: -5.169262409210205

Token 317: ' half' (ID: 6375)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22853043675422668
    2. ' count' → logprob: -1.8535304069519043
    3. '2' → logprob: -3.1035304069519043
    4. ' ' → logprob: -6.228530406951904
    5. '1' → logprob: -7.603530406951904
    6. '   ' → logprob: -9.228530883789062
    7. 'return' → logprob: -10.603530883789062
    8. '(' → logprob: -10.978530883789062
    9. '0' → logprob: -11.103530883789062
    10. '
' → logprob: -11.228530883789062

Token 318: ' possibilities' (ID: 31061)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029719363898038864
    2. 'def' → logprob: -4.154719352722168
    3. '_count' → logprob: -5.404719352722168
    4. 'count' → logprob: -6.779719352722168
    5. ' =' → logprob: -6.904719352722168
    6. ')' → logprob: -6.904719352722168
    7. '=' → logprob: -7.154719352722168
    8. '**' → logprob: -7.279719352722168
    9. ',' → logprob: -7.404719352722168
    10. '       ' → logprob: -7.779719352722168

Token 319: ' have' (ID: 679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.479749470949173
    2. 'count' → logprob: -0.9797494411468506
    3. 'bits' → logprob: -6.60474967956543
    4. 'total' → logprob: -7.10474967956543
    5. ' count' → logprob: -7.22974967956543
    6. 'cnt' → logprob: -7.35474967956543
    7. 'options' → logprob: -7.72974967956543
    8. 'res' → logprob: -7.85474967956543
    9. 'def' → logprob: -8.47974967956543
    10. 'if' → logprob: -8.47974967956543

Token 320: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2307245135307312
    2. '0' → logprob: -1.855724573135376
    3. ' bit' → logprob: -3.355724573135376
    4. 'first' → logprob: -4.605724334716797
    5. ' first' → logprob: -6.480724334716797
    6. 'b' → logprob: -6.605724334716797
    7. ' ' → logprob: -6.730724334716797
    8. ' b' → logprob: -8.355724334716797
    9. '1' → logprob: -8.605724334716797
    10. ''' → logprob: -9.105724334716797

Token 321: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03801451623439789
    2. '=' → logprob: -3.6630144119262695
    3. ' ' → logprob: -4.9130144119262695
    4. ' =' → logprob: -5.9130144119262695
    5. '='' → logprob: -7.0380144119262695
    6. '==' → logprob: -8.28801441192627
    7. ' '' → logprob: -9.16301441192627
    8. '1' → logprob: -9.66301441192627
    9. ' ==' → logprob: -9.78801441192627
    10. ''' → logprob: -10.28801441192627

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005901061464101076
    2. ' ' → logprob: -5.505900859832764
    3. '=' → logprob: -6.505900859832764
    4. '1' → logprob: -8.255901336669922
    5. ' =' → logprob: -10.505901336669922
    6. ' set' → logprob: -11.380901336669922
    7. 'set' → logprob: -11.755901336669922
    8. ''' → logprob: -12.755901336669922
    9. ' zero' → logprob: -13.130901336669922
    10. '='' → logprob: -13.380901336669922

Token 323: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014666282571852207
    2. 'count' → logprob: -5.1396660804748535
    3. 'def' → logprob: -6.1396660804748535
    4. ' =' → logprob: -6.1396660804748535
    5. '
' → logprob: -6.2646660804748535
    6. ' if' → logprob: -7.7646660804748535
    7. '_count' → logprob: -8.139666557312012
    8. '=' → logprob: -8.514666557312012
    9. ',' → logprob: -8.639666557312012
    10. ' count' → logprob: -8.764666557312012

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5269041657447815
    2. '0' → logprob: -1.0269041061401367
    3. ''' → logprob: -3.6519041061401367
    4. '2' → logprob: -4.401904106140137
    5. ' ' → logprob: -4.651904106140137
    6. '(' → logprob: -7.026904106140137
    7. ' '' → logprob: -7.526904106140137
    8. 'count' → logprob: -7.776904106140137
    9. 'half' → logprob: -8.026904106140137
    10. ' (' → logprob: -8.151904106140137

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008653099648654461
    2. ''' → logprob: -5.383653163909912
    3. '1' → logprob: -5.758653163909912
    4. ' ' → logprob: -7.258653163909912
    5. '2' → logprob: -9.383652687072754
    6. ' '' → logprob: -10.383652687072754
    7. '"' → logprob: -11.633652687072754
    8. ''b' → logprob: -11.758652687072754
    9. '```' → logprob: -12.133652687072754
    10. '`' → logprob: -12.133652687072754

Token 326: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019826197996735573
    2. 'count' → logprob: -4.894826412200928
    3. ' if' → logprob: -5.019826412200928
    4. 'def' → logprob: -6.144826412200928
    5. 'if' → logprob: -6.769826412200928
    6. '
' → logprob: -7.019826412200928
    7. ' count' → logprob: -7.144826412200928
    8. 'result' → logprob: -9.26982593536377
    9. ' for' → logprob: -9.64482593536377
    10. 'return' → logprob: -10.01982593536377

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004044802393764257
    2. 'count' → logprob: -5.629045009613037
    3. ' count' → logprob: -8.004044532775879
    4. ' if' → logprob: -10.504044532775879
    5. '
' → logprob: -11.004044532775879
    6. '    
' → logprob: -11.254044532775879
    7. 'def' → logprob: -11.629044532775879
    8. 'if' → logprob: -11.879044532775879
    9. 'result' → logprob: -11.879044532775879
    10. '```' → logprob: -12.004044532775879

Token 328: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32862040400505066
    2. 'count' → logprob: -1.328620433807373
    3. 'cnt' → logprob: -5.328620433807373
    4. 'res' → logprob: -5.828620433807373
    5. ' count' → logprob: -5.953620433807373
    6. 'total' → logprob: -6.328620433807373
    7. 'bits' → logprob: -7.078620433807373
    8. 'options' → logprob: -7.328620433807373
    9. 'result' → logprob: -8.328619956970215
    10. 'if' → logprob: -8.453619956970215

Token 329: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.152557373046875
    2. 'unknown' → logprob: -1.277557373046875
    3. 'count' → logprob: -2.277557373046875
    4. 'total' → logprob: -2.277557373046875
    5. 'bits' → logprob: -3.027557373046875
    6. 'if' → logprob: -3.152557373046875
    7. 'cnt' → logprob: -3.402557373046875
    8. 'options' → logprob: -3.652557373046875
    9. 'res' → logprob: -4.277557373046875
    10. 'rest' → logprob: -4.652557373046875

Token 330: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9996523857116699
    2. 'if' → logprob: -1.99965238571167
    3. ' for' → logprob: -2.24965238571167
    4. 'count' → logprob: -2.24965238571167
    5. ' count' → logprob: -2.37465238571167
    6. 'for' → logprob: -2.62465238571167
    7. '#' → logprob: -3.37465238571167
    8. ' #' → logprob: -4.24965238571167
    9. 'def' → logprob: -4.49965238571167
    10. '   ' → logprob: -5.12465238571167

Token 331: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.723122239112854
    2. ' b' → logprob: -1.473122239112854
    3. ' bit' → logprob: -2.2231221199035645
    4. ' now' → logprob: -2.8481221199035645
    5. 'bit' → logprob: -2.9731221199035645
    6. ' i' → logprob: -4.4731221199035645
    7. ' code' → logprob: -4.4731221199035645
    8. ' count' → logprob: -4.7231221199035645
    9. ' def' → logprob: -5.4731221199035645
    10. 'def' → logprob: -5.5981221199035645

Token 332: 'x' (ID: 87)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18904756009578705
    2. 'i' → logprob: -2.6890475749969482
    3. 'bit' → logprob: -2.9390475749969482
    4. ' b' → logprob: -3.9390475749969482
    5. 'count' → logprob: -4.689047336578369
    6. ' i' → logprob: -5.189047336578369
    7. ' bit' → logprob: -5.314047336578369
    8. '0' → logprob: -5.564047336578369
    9. 'x' → logprob: -6.439047336578369
    10. ' now' → logprob: -6.689047336578369

Token 333: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04669376090168953
    2. '',' → logprob: -3.296693801879883
    3. '[' → logprob: -5.921693801879883
    4. ')' → logprob: -6.046693801879883
    5. ')'' → logprob: -6.671693801879883
    6. ' '' → logprob: -7.421693801879883
    7. ' ',' → logprob: -8.296693801879883
    8. 'b' → logprob: -8.296693801879883
    9. ']'' → logprob: -8.296693801879883
    10. ']' → logprob: -8.546693801879883

Token 334: ' first' (ID: 1577)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3024778962135315
    2. ':' → logprob: -1.6774778366088867
    3. '[' → logprob: -4.177477836608887
    4. ' ,' → logprob: -4.302477836608887
    5. ' at' → logprob: -4.677477836608887
    6. '   ' → logprob: -4.677477836608887
    7. ' we' → logprob: -4.802477836608887
    8. ' the' → logprob: -5.552477836608887
    9. ' in' → logprob: -6.427477836608887
    10. ' :' → logprob: -6.552477836608887

Token 335: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.03102186694741249
    2. 'bit' → logprob: -3.5310218334198
    3. '_bit' → logprob: -7.031022071838379
    4. ' ' → logprob: -9.656022071838379
    5. 'b' → logprob: -10.031022071838379
    6. '[' → logprob: -10.156022071838379
    7. '-bit' → logprob: -10.156022071838379
    8. ')' → logprob: -10.281022071838379
    9. '_bits' → logprob: -10.656022071838379
    10. ' b' → logprob: -11.031022071838379

Token 336: ' means' (ID: 4748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22160057723522186
    2. ':' → logprob: -2.3466005325317383
    3. '=' → logprob: -2.5966005325317383
    4. ' =' → logprob: -4.471600532531738
    5. ' ,' → logprob: -5.221600532531738
    6. ')' → logprob: -6.096600532531738
    7. '):' → logprob: -6.346600532531738
    8. '==' → logprob: -6.971600532531738
    9. ' must' → logprob: -7.221600532531738
    10. ':
' → logprob: -7.221600532531738

Token 337: ' ' (ID: 220)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11691633611917496
    2. ' count' → logprob: -2.8669164180755615
    3. '1' → logprob: -3.9919164180755615
    4. '2' → logprob: -4.241916179656982
    5. '0' → logprob: -4.616916179656982
    6. ' ' → logprob: -5.491916179656982
    7. '(' → logprob: -6.866916179656982
    8. ' we' → logprob: -6.866916179656982
    9. ' half' → logprob: -6.866916179656982
    10. 'half' → logprob: -6.991916179656982

Token 338: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6024635434150696
    2. '1' → logprob: -1.7274634838104248
    3. '0' → logprob: -1.9774634838104248
    4. '2' → logprob: -2.477463483810425
    5. '(' → logprob: -3.727463483810425
    6. '(count' → logprob: -4.727463722229004
    7. ' count' → logprob: -4.852463722229004
    8. ' ' → logprob: -5.602463722229004
    9. ' (' → logprob: -6.227463722229004
    10. 'b' → logprob: -6.352463722229004

Token 339: ' bit' (ID: 3546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0084474086761475
    2. '   ' → logprob: -1.1334474086761475
    3. 'def' → logprob: -2.1334474086761475
    4. ' =' → logprob: -2.5084474086761475
    5. '=' → logprob: -3.3834474086761475
    6. ' if' → logprob: -3.6334474086761475
    7. ' ' → logprob: -4.008447647094727
    8. '_' → logprob: -5.133447647094727
    9. ':' → logprob: -5.383447647094727
    10. '#' → logprob: -6.008447647094727

Token 340: ' unknown' (ID: 17927)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7077013850212097
    2. ' =' → logprob: -0.8327013850212097
    3. '=' → logprob: -3.3327014446258545
    4. 'count' → logprob: -4.582701206207275
    5. 'def' → logprob: -4.707701206207275
    6. 'if' → logprob: -6.207701206207275
    7. ' if' → logprob: -6.332701206207275
    8. '_count' → logprob: -6.332701206207275
    9. '  ' → logprob: -6.707701206207275
    10. ')' → logprob: -6.832701206207275

Token 341: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43625903129577637
    2. 'count' → logprob: -1.0612590312957764
    3. 'def' → logprob: -6.3112592697143555
    4. 'res' → logprob: -6.6862592697143555
    5. 'options' → logprob: -6.6862592697143555
    6. ' count' → logprob: -6.9362592697143555
    7. '
' → logprob: -7.6862592697143555
    8. 'cnt' → logprob: -7.6862592697143555
    9. 'result' → logprob: -7.8112592697143555
    10. 'bits' → logprob: -8.686259269714355

Token 342: ' bit' (ID: 3546)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.26404786109924316
    2. 'return' → logprob: -1.7640478610992432
    3. ' count' → logprob: -3.389047861099243
    4. ' return' → logprob: -3.889047861099243
    5. '2' → logprob: -6.514047622680664
    6. '(' → logprob: -6.639047622680664
    7. '0' → logprob: -7.014047622680664
    8. '1' → logprob: -7.264047622680664
    9. ' ' → logprob: -7.889047622680664
    10. '(count' → logprob: -8.014047622680664

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2526315748691559
    2. 'count' → logprob: -2.127631664276123
    3. '=' → logprob: -3.502631664276123
    4. 's' → logprob: -3.752631664276123
    5. ' =' → logprob: -3.752631664276123
    6. ' count' → logprob: -4.252631664276123
    7. '_count' → logprob: -5.502631664276123
    8. ' is' → logprob: -6.502631664276123
    9. ' options' → logprob: -7.127631664276123
    10. '   ' → logprob: -7.252631664276123

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7155541777610779
    2. ' =' → logprob: -0.9655541777610779
    3. ' ==' → logprob: -2.7155542373657227
    4. '==' → logprob: -3.3405542373657227
    5. ' must' → logprob: -4.715554237365723
    6. 'must' → logprob: -5.090554237365723
    7. 'count' → logprob: -5.590554237365723
    8. ' can' → logprob: -6.215554237365723
    9. 's' → logprob: -6.715554237365723
    10. ' is' → logprob: -7.215554237365723

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29570549726486206
    2. ''' → logprob: -1.9207055568695068
    3. ' ' → logprob: -3.295705556869507
    4. '2' → logprob: -3.545705556869507
    5. '1' → logprob: -4.170705318450928
    6. '(' → logprob: -4.545705318450928
    7. ' '' → logprob: -5.420705318450928
    8. ' (' → logprob: -5.420705318450928
    9. ''b' → logprob: -5.545705318450928
    10. ''x' → logprob: -6.295705318450928

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14556418359279633
    2. ''' → logprob: -2.145564079284668
    3. '2' → logprob: -4.395564079284668
    4. '1' → logprob: -5.395564079284668
    5. ''x' → logprob: -7.520564079284668
    6. ' ' → logprob: -7.645564079284668
    7. 'x' → logprob: -8.895564079284668
    8. ''b' → logprob: -9.520564079284668
    9. ' '' → logprob: -9.645564079284668
    10. '"' → logprob: -10.145564079284668

Token 347: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7857358455657959
    2. '<|end|>' → logprob: -1.410735845565796
    3. '<|end|>' → logprob: -2.785735845565796
    4. ')' → logprob: -2.910735845565796
    5. '
' → logprob: -3.035735845565796
    6. ' if' → logprob: -3.160735845565796
    7. 'def' → logprob: -3.285735845565796
    8. ':' → logprob: -4.410736083984375
    9. ',' → logprob: -4.535736083984375
    10. 'count' → logprob: -5.785736083984375

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01507981214672327
    2. ' ' → logprob: -4.265079975128174
    3. 'bit' → logprob: -7.390079975128174
    4. ' bit' → logprob: -8.140079498291016
    5. ''' → logprob: -12.890079498291016
    6. '(bit' → logprob: -14.140079498291016
    7. ' '' → logprob: -14.265079498291016
    8. '   ' → logprob: -14.515079498291016
    9. 'b' → logprob: -14.765079498291016
    10. 'bits' → logprob: -15.015079498291016

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010485442908247933
    2. ' ' → logprob: -9.500104904174805
    3. 'bit' → logprob: -10.625104904174805
    4. ' bit' → logprob: -12.250104904174805
    5. '   ' → logprob: -14.875104904174805
    6. ''' → logprob: -16.250104904174805
    7. '
' → logprob: -16.250104904174805
    8. '(bit' → logprob: -16.625104904174805
    9. 'b' → logprob: -16.875104904174805
    10. 'bits' → logprob: -17.187604904174805

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01092873327434063
    2. ' if' → logprob: -5.135928630828857
    3. 'def' → logprob: -6.260928630828857
    4. ' =' → logprob: -7.385928630828857
    5. 'count' → logprob: -7.760928630828857
    6. '
' → logprob: -8.135929107666016
    7. ' count' → logprob: -8.385929107666016
    8. ',' → logprob: -8.635929107666016
    9. 'x' → logprob: -8.760929107666016
    10. '    
' → logprob: -9.260929107666016

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02461320534348488
    2. ' if' → logprob: -4.649613380432129
    3. 'count' → logprob: -4.899613380432129
    4. 'if' → logprob: -5.149613380432129
    5. 'def' → logprob: -7.649613380432129
    6. ' count' → logprob: -8.024613380432129
    7. '
' → logprob: -8.149613380432129
    8. ',' → logprob: -9.649613380432129
    9. '    
' → logprob: -9.649613380432129
    10. 'result' → logprob: -9.774613380432129

Token 352: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.786366879940033
    2. 'count' → logprob: -1.0363669395446777
    3. 'if' → logprob: -2.9113669395446777
    4. 'options' → logprob: -3.0363669395446777
    5. 'cnt' → logprob: -3.2863669395446777
    6. 'unknown' → logprob: -3.7863669395446777
    7. 'total' → logprob: -4.911366939544678
    8. 'bits' → logprob: -5.286366939544678
    9. 'res' → logprob: -5.286366939544678
    10. ' count' → logprob: -6.411366939544678

Token 353: ' Only' (ID: 12817)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39621129631996155
    2. 'unknown' → logprob: -2.3962113857269287
    3. 'options' → logprob: -2.7712113857269287
    4. '   ' → logprob: -2.8962113857269287
    5. 'cnt' → logprob: -3.0212113857269287
    6. 'res' → logprob: -3.5212113857269287
    7. 'total' → logprob: -4.39621114730835
    8. 'if' → logprob: -4.64621114730835
    9. 'bits' → logprob: -5.14621114730835
    10. 'result' → logprob: -5.77121114730835

Token 354: ' accept' (ID: 5923)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36745089292526245
    2. ' if' → logprob: -1.8674509525299072
    3. 'b' → logprob: -2.8674509525299072
    4. 'bit' → logprob: -3.4924509525299072
    5. 'count' → logprob: -3.6174509525299072
    6. ' b' → logprob: -4.992450714111328
    7. 'bits' → logprob: -5.492450714111328
    8. 'def' → logprob: -5.492450714111328
    9. 'return' → logprob: -5.992450714111328
    10. ' ' → logprob: -6.117450714111328

Token 355: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9980424046516418
    2. ' if' → logprob: -1.248042345046997
    3. 'if' → logprob: -1.498042345046997
    4. ' b' → logprob: -2.248042345046997
    5. ' ' → logprob: -4.998042583465576
    6. '0' → logprob: -5.873042583465576
    7. '1' → logprob: -6.248042583465576
    8. 'bit' → logprob: -6.498042583465576
    9. ' bit' → logprob: -7.248042583465576
    10. 'bits' → logprob: -7.873042583465576

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3087731897830963
    2. 'b' → logprob: -1.558773159980774
    3. 's' → logprob: -3.3087732791900635
    4. ' b' → logprob: -5.183773040771484
    5. ' ' → logprob: -5.433773040771484
    6. '=' → logprob: -5.683773040771484
    7. '[' → logprob: -6.058773040771484
    8. ' =' → logprob: -7.058773040771484
    9. 'count' → logprob: -7.558773040771484
    10. 'if' → logprob: -8.433773040771484

Token 357: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5034913420677185
    2. '==' → logprob: -1.2534914016723633
    3. '=='' → logprob: -3.0034914016723633
    4. 'def' → logprob: -3.3784914016723633
    5. 'b' → logprob: -4.378491401672363
    6. '=' → logprob: -5.628491401672363
    7. ' in' → logprob: -5.878491401672363
    8. ' b' → logprob: -6.628491401672363
    9. 'if' → logprob: -6.878491401672363
    10. ' =' → logprob: -7.128491401672363

Token 358: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18923769891262054
    2. '0' → logprob: -1.8142377138137817
    3. ' '' → logprob: -4.814237594604492
    4. ' ' → logprob: -6.689237594604492
    5. '"' → logprob: -10.314237594604492
    6. '   ' → logprob: -11.689237594604492
    7. 'b' → logprob: -11.814237594604492
    8. ''x' → logprob: -12.064237594604492
    9. ''b' → logprob: -12.189237594604492
    10. '`' → logprob: -12.189237594604492

Token 359: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0636017695069313
    2. 'count' → logprob: -2.9386017322540283
    3. '
' → logprob: -6.063601970672607
    4. 'def' → logprob: -6.313601970672607
    5. ' count' → logprob: -6.688601970672607
    6. 'if' → logprob: -7.188601970672607
    7. ' if' → logprob: -7.188601970672607
    8. 'options' → logprob: -7.938601970672607
    9. 'result' → logprob: -8.06360149383545
    10. '    
' → logprob: -8.31360149383545

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021233737468719482
    2. 'count' → logprob: -4.646233558654785
    3. 'if' → logprob: -5.271233558654785
    4. ' if' → logprob: -5.271233558654785
    5. ' count' → logprob: -7.396233558654785
    6. 'def' → logprob: -9.271233558654785
    7. 'result' → logprob: -9.271233558654785
    8. 'total' → logprob: -10.021233558654785
    9. '    
' → logprob: -10.396233558654785
    10. 'res' → logprob: -10.521233558654785

Token 361: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6492938995361328
    2. '   ' → logprob: -0.8992938995361328
    3. 'res' → logprob: -3.899293899536133
    4. 'options' → logprob: -4.024293899536133
    5. 'cnt' (adapté à ' cnt') → logprob: -4.399293899536133
    6. 'total' → logprob: -4.899293899536133
    7. 'unknown' → logprob: -5.649293899536133
    8. 'result' → logprob: -5.899293899536133
    9. 'if' → logprob: -6.274293899536133
    10. 'ans' → logprob: -6.649293899536133

Token 362: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408327460289
    2. '=' → logprob: -0.9740833044052124
    3. '   ' → logprob: -12.599082946777344
    4. ' ' → logprob: -13.724082946777344
    5. '  ' → logprob: -14.974082946777344
    6. '_' → logprob: -15.099082946777344
    7. 's' → logprob: -15.224082946777344
    8. ')' → logprob: -15.349082946777344
    9. ',' → logprob: -15.849082946777344
    10. 'import' → logprob: -16.724082946777344

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006379018072038889
    2. '0' → logprob: -5.131379127502441
    3. ' ' → logprob: -8.381379127502441
    4. '(' → logprob: -8.631379127502441
    5. '2' → logprob: -11.131379127502441
    6. '   ' → logprob: -11.631379127502441
    7. 'pow' → logprob: -11.881379127502441
    8. 'count' → logprob: -12.381379127502441
    9. ' (' → logprob: -13.631379127502441
    10. '8' → logprob: -13.756379127502441

Token 364: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02107231318950653
    2. '   ' → logprob: -4.7710723876953125
    3. '<<' → logprob: -5.5210723876953125
    4. '<|end|>' → logprob: -6.0210723876953125
    5. ' *' → logprob: -7.0210723876953125
    6. '  
' → logprob: -7.2710723876953125
    7. 'for' → logprob: -7.3960723876953125
    8. '    
' → logprob: -7.3960723876953125
    9. '<|end|>' → logprob: -7.5210723876953125
    10. ' <<' → logprob: -7.5210723876953125

Token 365: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19943180680274963
    2. '   ' → logprob: -1.8244317770004272
    3. '<|end|>' → logprob: -5.574431896209717
    4. ' *' → logprob: -5.824431896209717
    5. '*' → logprob: -5.949431896209717
    6. '    
' → logprob: -6.074431896209717
    7. 'for' → logprob: -6.574431896209717
    8. '  
' → logprob: -6.699431896209717
    9. '<|end|>' → logprob: -6.824431896209717
    10. ' 
' → logprob: -7.074431896209717

Token 366: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037786804139614105
    2. 'if' → logprob: -3.7877867221832275
    3. ' for' → logprob: -4.287786960601807
    4. '   ' → logprob: -7.912786960601807
    5. ' if' → logprob: -8.037786483764648
    6. '
' → logprob: -12.412786483764648
    7. '	for' → logprob: -13.162786483764648
    8. 'def' → logprob: -13.912786483764648
    9. 'bit' → logprob: -14.287786483764648
    10. '```' → logprob: -14.412786483764648

Token 367: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4774307608604431
    2. 'if' → logprob: -0.9774307608604431
    3. ' for' → logprob: -6.227430820465088
    4. ' if' → logprob: -6.727430820465088
    5. 'i' → logprob: -9.47743034362793
    6. 'def' → logprob: -10.10243034362793
    7. 'from' → logprob: -10.60243034362793
    8. '   ' → logprob: -11.97743034362793
    9. 'range' → logprob: -11.97743034362793
    10. 'bit' → logprob: -12.35243034362793

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13785919547080994
    2. ' =' → logprob: -2.2628591060638428
    3. 's' → logprob: -5.262859344482422
    4. '=' → logprob: -5.512859344482422
    5. ' for' → logprob: -5.637859344482422
    6. '[' → logprob: -5.887859344482422
    7. 'for' → logprob: -6.012859344482422
    8. 'if' → logprob: -6.387859344482422
    9. ' ' → logprob: -6.512859344482422
    10. ' if' → logprob: -6.512859344482422

Token 369: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4085385501384735
    2. '=' → logprob: -1.158538579940796
    3. 'if' → logprob: -5.158538341522217
    4. 'def' → logprob: -5.408538341522217
    5. ' if' → logprob: -5.908538341522217
    6. ' ' → logprob: -6.283538341522217
    7. '_bits' → logprob: -6.408538341522217
    8. 'b' → logprob: -7.408538341522217
    9. '   ' → logprob: -7.408538341522217
    10. '_bit' → logprob: -7.658538341522217

Token 370: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4645899534225464
    2. ' =' → logprob: -1.0895899534225464
    3. 'if' → logprob: -3.589590072631836
    4. ' if' → logprob: -5.839590072631836
    5. 'def' → logprob: -6.839590072631836
    6. '   ' → logprob: -6.964590072631836
    7. 'b' → logprob: -7.464590072631836
    8. ' ' → logprob: -7.714590072631836
    9. '=b' → logprob: -8.089590072631836
    10. 'for' → logprob: -8.464590072631836

Token 371: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00026419671485200524
    2. ' if' → logprob: -8.250264167785645
    3. 'b' → logprob: -13.250264167785645
    4. '   ' → logprob: -14.625264167785645
    5. 'for' → logprob: -15.375264167785645
    6. '=' → logprob: -15.500264167785645
    7. '
' → logprob: -15.875264167785645
    8. ' =' → logprob: -16.00026512145996
    9. 'def' → logprob: -17.75026512145996
    10. '	if' → logprob: -17.87526512145996

Token 372: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016034485772252083
    2. ' b' → logprob: -4.1410346031188965
    3. '   ' → logprob: -15.766034126281738
    4. ' ' → logprob: -16.766035079956055
    5. '	b' → logprob: -16.766035079956055
    6. '(b' → logprob: -17.641035079956055
    7. '
' → logprob: -18.391035079956055
    8. '    ' → logprob: -18.391035079956055
    9. '  ' → logprob: -18.641035079956055
    10. ')b' → logprob: -18.891035079956055

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. '0' → logprob: -12.375009536743164
    3. ' [' → logprob: -12.625009536743164
    4. '==' → logprob: -13.875009536743164
    5. ' ' → logprob: -15.125009536743164
    6. '   ' → logprob: -15.625009536743164
    7. '[
' → logprob: -16.000009536743164
    8. '=' → logprob: -16.000009536743164
    9. ' ==' → logprob: -16.125009536743164
    10. '['' → logprob: -16.125009536743164

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -14.250008583068848
    4. '[' → logprob: -15.562508583068848
    5. '   ' → logprob: -15.625008583068848
    6. ']' → logprob: -16.37500762939453
    7. '#' → logprob: -17.31250762939453
    8. '```' → logprob: -17.50000762939453
    9. '  ' → logprob: -18.06250762939453
    10. 'b' → logprob: -18.06250762939453

Token 375: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6150083541870117
    2. ']' → logprob: -1.1150083541870117
    3. ' ==' → logprob: -2.7400083541870117
    4. ']==' → logprob: -2.8650083541870117
    5. '=='' → logprob: -5.240008354187012
    6. ']=='' → logprob: -5.990008354187012
    7. ''' → logprob: -6.990008354187012
    8. ' ]' → logprob: -7.490008354187012
    9. ' ' → logprob: -9.365008354187012
    10. ' in' → logprob: -9.615008354187012

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07138897478580475
    2. ' ==' → logprob: -2.6963889598846436
    3. '=='' → logprob: -7.321389198303223
    4. ' in' → logprob: -7.821389198303223
    5. '!=' → logprob: -8.321389198303223
    6. 'in' → logprob: -9.821389198303223
    7. '=' → logprob: -11.071389198303223
    8. ' ' → logprob: -11.196389198303223
    9. ' not' → logprob: -11.196389198303223
    10. ' !=' → logprob: -11.196389198303223

Token 377: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6334227919578552
    2. ''x' → logprob: -0.7584227919578552
    3. '0' → logprob: -7.8834228515625
    4. '1' → logprob: -9.0084228515625
    5. ' '' → logprob: -9.0084228515625
    6. 'x' → logprob: -9.2584228515625
    7. '"x' → logprob: -10.1334228515625
    8. ''o' → logprob: -11.0084228515625
    9. ' ' → logprob: -11.2584228515625
    10. '"' → logprob: -11.8834228515625

Token 378: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7441147565841675
    2. 'x' → logprob: -1.1191147565841675
    3. '0' → logprob: -1.6191147565841675
    4. ''x' → logprob: -8.994114875793457
    5. ''' → logprob: -10.244114875793457
    6. '?' → logprob: -11.744114875793457
    7. ' x' → logprob: -11.931614875793457
    8. ' ' → logprob: -12.181614875793457
    9. ''s' → logprob: -12.494114875793457
    10. '?'' → logprob: -12.994114875793457

Token 379: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3089977204799652
    2. ':' → logprob: -1.4339977502822876
    3. '':' → logprob: -4.933997631072998
    4. '   ' → logprob: -4.933997631072998
    5. '':
' → logprob: -5.183997631072998
    6. '       ' → logprob: -6.058997631072998
    7. '):
' → logprob: -6.433997631072998
    8. ''' → logprob: -6.933997631072998
    9. ' or' → logprob: -6.933997631072998
    10. 'else' → logprob: -8.183998107910156

Token 380: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.49242809414863586
    2. '       ' → logprob: -0.9924280643463135
    3. ' cnt' → logprob: -4.492428302764893
    4. 'pass' → logprob: -5.742428302764893
    5. ' pass' → logprob: -6.617428302764893
    6. '   ' → logprob: -7.117428302764893
    7. 'count' → logprob: -7.492428302764893
    8. '	cnt' → logprob: -7.617428302764893
    9. '
' → logprob: -8.867427825927734
    10. 'return' → logprob: -9.367427825927734

Token 381: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.006139003671705723
    2. ' cnt' → logprob: -5.506138801574707
    3. 'pass' → logprob: -6.506138801574707
    4. ' pass' → logprob: -8.256138801574707
    5. '   ' → logprob: -8.381138801574707
    6. 'count' → logprob: -10.131138801574707
    7. '	cnt' → logprob: -11.256138801574707
    8. '       ' → logprob: -11.381138801574707
    9. '1' → logprob: -13.006138801574707
    10. '
' → logprob: -13.131138801574707

Token 382: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041518181562423706
    2. '*=' → logprob: -3.291518211364746
    3. ' =' → logprob: -5.916518211364746
    4. ' *=' → logprob: -7.166518211364746
    5. '+=' → logprob: -12.916518211364746
    6. '.=' → logprob: -14.041518211364746
    7. '*' → logprob: -15.166518211364746
    8. '=
' → logprob: -15.416518211364746
    9. '
' → logprob: -15.916518211364746
    10. '=int' → logprob: -16.16651725769043

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.134509021649137e-05
    2. 'cnt' → logprob: -9.75006103515625
    3. ' ' → logprob: -13.00006103515625
    4. 'count' → logprob: -15.00006103515625
    5. '(' → logprob: -15.87506103515625
    6. '(cnt' → logprob: -16.00006103515625
    7. '0' → logprob: -17.00006103515625
    8. '   ' → logprob: -17.00006103515625
    9. ' cnt' → logprob: -17.12506103515625
    10. '```' → logprob: -18.00006103515625

Token 384: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7394763231277466
    2. 'elif' → logprob: -1.4894763231277466
    3. '   ' → logprob: -1.7394763231277466
    4. '<|end|>' → logprob: -2.239476203918457
    5. ' elif' → logprob: -4.614476203918457
    6. '<|end|>' → logprob: -5.989476203918457
    7. '	elif' → logprob: -6.489476203918457
    8. 'else' → logprob: -8.114476203918457
    9. ' else' → logprob: -8.239476203918457
    10. '    
' → logprob: -8.364476203918457

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19187459349632263
    2. 'elif' → logprob: -1.816874623298645
    3. ' elif' → logprob: -5.3168745040893555
    4. '<|end|>' → logprob: -5.8168745040893555
    5. '
' → logprob: -6.0668745040893555
    6. '	elif' → logprob: -7.1918745040893555
    7. 'else' → logprob: -7.3168745040893555
    8. ' else' → logprob: -8.441874504089355
    9. '<|end|>' → logprob: -9.566874504089355
    10. '  ' → logprob: -10.191874504089355

Token 386: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.006749478168785572
    2. ' elif' → logprob: -5.256749629974365
    3. '   ' → logprob: -6.506749629974365
    4. '	elif' → logprob: -11.131749153137207
    5. 'else' → logprob: -12.131749153137207
    6. '
' → logprob: -15.131749153137207
    7. 'import' → logprob: -15.631749153137207
    8. ' else' → logprob: -15.756749153137207
    9. 'if' → logprob: -16.131750106811523
    10. '  ' → logprob: -16.131750106811523

Token 387: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.05489131063222885
    2. 'b' → logprob: -2.929891347885132
    3. ' ' → logprob: -11.804891586303711
    4. '	b' → logprob: -14.179891586303711
    5. ' ' → logprob: -15.429891586303711
    6. ''b' → logprob: -15.679891586303711
    7. ' б' → logprob: -16.24239158630371
    8. '   ' → logprob: -16.24239158630371
    9. '  ' → logprob: -17.05489158630371
    10. '(b' → logprob: -17.11739158630371

Token 388: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.167648876318708e-05
    2. '==' → logprob: -11.125041961669922
    3. '[
' → logprob: -11.250041961669922
    4. '['' → logprob: -12.125041961669922
    5. ' ==' → logprob: -12.250041961669922
    6. '=='' → logprob: -13.750041961669922
    7. '[i' → logprob: -14.625041961669922
    8. '=' → logprob: -14.750041961669922
    9. '[...]' → logprob: -15.375041961669922
    10. ' [' → logprob: -15.625041961669922

Token 389: '0' (ID: 15)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0041142539121210575
    2. 'x' → logprob: -5.504114151000977
    3. ''' → logprob: -10.754114151000977
    4. '0' → logprob: -11.754114151000977
    5. '"x' → logprob: -12.379114151000977
    6. ' ' → logprob: -13.629114151000977
    7. ' '' → logprob: -14.504114151000977
    8. ' x' → logprob: -15.254114151000977
    9. '['' → logprob: -15.504114151000977
    10. '   ' → logprob: -16.504114151000977

Token 390: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10226236283779144
    2. '==' → logprob: -2.352262258529663
    3. '=='' → logprob: -7.227262496948242
    4. '[' → logprob: -7.477262496948242
    5. ']' → logprob: -8.352262496948242
    6. ' =='' → logprob: -8.727262496948242
    7. '=' → logprob: -8.852262496948242
    8. ']==' → logprob: -8.852262496948242
    9. ']=='' → logprob: -10.727262496948242
    10. ')' → logprob: -10.852262496948242

Token 391: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3880643844604492
    2. '==' → logprob: -1.1380643844604492
    3. '=='' → logprob: -6.763064384460449
    4. ' =='' → logprob: -10.63806438446045
    5. '=' → logprob: -11.76306438446045
    6. '=="' → logprob: -13.63806438446045
    7. '==
' → logprob: -14.13806438446045
    8. ' =' → logprob: -14.26306438446045
    9. '[' → logprob: -14.38806438446045
    10. ' ' → logprob: -14.51306438446045

Token 392: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0002165299083571881
    2. 'x' → logprob: -8.625216484069824
    3. ' '' → logprob: -10.625216484069824
    4. ''' → logprob: -11.875216484069824
    5. ' x' → logprob: -13.125216484069824
    6. '"x' → logprob: -13.500216484069824
    7. ' ' → logprob: -13.750216484069824
    8. '0' → logprob: -15.625216484069824
    9. '`' → logprob: -15.875216484069824
    10. '   ' → logprob: -16.00021743774414

Token 393: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004951290902681649
    2. ''x' → logprob: -7.625494956970215
    3. ''' → logprob: -12.250494956970215
    4. '1' → logprob: -13.875494956970215
    5. ' x' → logprob: -13.875494956970215
    6. '"x' → logprob: -15.750494956970215
    7. '0' → logprob: -15.875494956970215
    8. ' ' → logprob: -16.50049591064453
    9. '```' → logprob: -17.62549591064453
    10. '{x' → logprob: -18.00049591064453

Token 394: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5166045427322388
    2. '':' → logprob: -1.2666045427322388
    3. ''):
' → logprob: -2.391604423522949
    4. ':' → logprob: -4.141604423522949
    5. '):
' → logprob: -5.766604423522949
    6. ''' → logprob: -5.766604423522949
    7. ':
' → logprob: -5.766604423522949
    8. '']:
' → logprob: -6.141604423522949
    9. ''):' → logprob: -6.641604423522949
    10. 'cnt' → logprob: -7.891604423522949

Token 395: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0014218994183465838
    2. ' cnt' → logprob: -7.126421928405762
    3. '       ' → logprob: -8.376421928405762
    4. '   ' → logprob: -8.751421928405762
    5. '0' → logprob: -9.376421928405762
    6. '=' → logprob: -9.876421928405762
    7. '[cnt' → logprob: -10.251421928405762
    8. '(cnt' → logprob: -10.626421928405762
    9. '	cnt' → logprob: -11.501421928405762
    10. '1' → logprob: -11.626421928405762

Token 396: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.002134675160050392
    2. '1' → logprob: -6.752134799957275
    3. '0' → logprob: -7.252134799957275
    4. ' cnt' → logprob: -8.377134323120117
    5. 'count' → logprob: -11.252134323120117
    6. '(cnt' → logprob: -12.002134323120117
    7. '[cnt' → logprob: -13.127134323120117
    8. 'cn' → logprob: -14.127134323120117
    9. 'cont' → logprob: -14.127134323120117
    10. '	cnt' → logprob: -14.377134323120117

Token 397: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06222188472747803
    2. '*=' → logprob: -2.8122220039367676
    3. ' =' → logprob: -8.56222152709961
    4. ' *=' → logprob: -10.18722152709961
    5. '//=' → logprob: -10.93722152709961
    6. '/=' → logprob: -12.06222152709961
    7. '*' → logprob: -14.81222152709961
    8. '.=' → logprob: -14.81222152709961
    9. '=int' → logprob: -15.56222152709961
    10. '+=' → logprob: -16.06222152709961

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026698850095272064
    2. '0' → logprob: -4.651699066162109
    3. '128' → logprob: -4.901699066162109
    4. '(' → logprob: -5.276699066162109
    5. ' ' → logprob: -6.276699066162109
    6. '512' → logprob: -7.276699066162109
    7. 'int' → logprob: -8.15169906616211
    8. '524' → logprob: -8.40169906616211
    9. '327' → logprob: -8.40169906616211
    10. 'pow' → logprob: -8.77669906616211

Token 399: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7374297976493835
    2. 'else' → logprob: -1.2374298572540283
    3. '   ' → logprob: -1.8624298572540283
    4. ' else' → logprob: -3.3624298572540283
    5. '<|end|>' → logprob: -3.6124298572540283
    6. '<|end|>' → logprob: -5.862429618835449
    7. 'elif' → logprob: -6.237429618835449
    8. ' ' → logprob: -6.487429618835449
    9. '    
' → logprob: -6.612429618835449
    10. '*' → logprob: -6.737429618835449

Token 401: ' only' (ID: 1606)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.021769853308796883
    2. ' cnt' → logprob: -4.146770000457764
    3. '0' → logprob: -5.521770000457764
    4. '1' → logprob: -7.521770000457764
    5. 'count' → logprob: -7.771770000457764
    6. '2' → logprob: -8.271769523620605
    7. '(cnt' → logprob: -8.396769523620605
    8. ' ' → logprob: -9.771769523620605
    9. '[cnt' → logprob: -9.896769523620605
    10. '#' → logprob: -10.396769523620605

Token 402: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5352498292922974
    2. 'count' → logprob: -1.2852498292922974
    3. 'cnt' → logprob: -2.160249710083008
    4. '0' → logprob: -4.660249710083008
    5. 'half' → logprob: -5.535249710083008
    6. 'counts' → logprob: -6.285249710083008
    7. '(' → logprob: -6.410249710083008
    8. 'consider' → logprob: -6.910249710083008
    9. ' ' → logprob: -7.160249710083008
    10. 'the' → logprob: -7.285249710083008

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12206458300352097
    2. 'cnt' → logprob: -2.3720645904541016
    3. 'count' → logprob: -4.372064590454102
    4. '0' → logprob: -5.497064590454102
    5. '(' → logprob: -6.747064590454102
    6. '(cnt' → logprob: -6.872064590454102
    7. 'the' → logprob: -7.372064590454102
    8. 'one' → logprob: -7.372064590454102
    9. 'half' → logprob: -7.747064590454102
    10. 'bit' → logprob: -7.997064590454102

Token 404: ' possibility' (ID: 21568)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' zero' (ID: 12421)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21201063692569733
    2. '0' → logprob: -1.8370106220245361
    3. 'cnt' → logprob: -3.837010622024536
    4. ' ' → logprob: -4.712010860443115
    5. ' cnt' → logprob: -7.587010860443115
    6. 'bit' → logprob: -8.462010383605957
    7. 'count' → logprob: -8.712010383605957
    8. ')' → logprob: -8.837010383605957
    9. 'b' → logprob: -10.212010383605957
    10. '#' → logprob: -10.837010383605957

Token 407: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11446486413478851
    2. '
' → logprob: -2.23946475982666
    3. 'else' → logprob: -7.36446475982666
    4. ' else' → logprob: -8.11446475982666
    5. '    
' → logprob: -8.61446475982666
    6. '<|end|>' → logprob: -8.98946475982666
    7. ')' → logprob: -9.48946475982666
    8. 'return' → logprob: -9.86446475982666
    9. '\n' → logprob: -9.98946475982666
    10. '  
' → logprob: -9.98946475982666

Token 408: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7730280160903931
    2. ' as' → logprob: -1.898028016090393
    3. ' not' → logprob: -2.3980278968811035
    4. ' because' → logprob: -2.6480278968811035
    5. '
' → logprob: -3.1480278968811035
    6. 'else' → logprob: -3.3980278968811035
    7. ' since' → logprob: -3.7730278968811035
    8. ' else' → logprob: -3.7730278968811035
    9. 'since' → logprob: -3.8980278968811035
    10. ')' → logprob: -4.0230278968811035

Token 409: ' other' (ID: 1273)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4104174375534058
    2. 'next' → logprob: -1.5354174375534058
    3. 'bit' → logprob: -1.9104174375534058
    4. '0' → logprob: -2.5354175567626953
    5. 'option' → logprob: -3.1604175567626953
    6. '<|end|>' → logprob: -3.2854175567626953
    7. 'possible' → logprob: -3.2854175567626953
    8. ' bit' → logprob: -3.5354175567626953
    9. 'count' → logprob: -3.7854175567626953
    10. ')' → logprob: -3.9104175567626953

Token 410: ' one' (ID: 1001)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.1606589555740356
    2. 'one' → logprob: -1.7856589555740356
    3. 'half' → logprob: -2.160658836364746
    4. '=' → logprob: -2.535658836364746
    5. ' is' → logprob: -2.535658836364746
    6. 'poss' → logprob: -2.910658836364746
    7. '1' → logprob: -3.285658836364746
    8. ' one' → logprob: -3.535658836364746
    9. 'option' → logprob: -3.660658836364746
    10. '#' → logprob: -4.035658836364746

Token 411: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8934460878372192
    2. 'excluded' → logprob: -1.1434460878372192
    3. 'not' → logprob: -2.3934459686279297
    4. '#' → logprob: -2.5184459686279297
    5. 'ignored' → logprob: -3.3934459686279297
    6. ' is' → logprob: -4.14344596862793
    7. 'possible' → logprob: -5.14344596862793
    8. 'counts' → logprob: -5.26844596862793
    9. 'cannot' → logprob: -5.26844596862793
    10. 'would' → logprob: -5.39344596862793

Token 412: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7449899911880493
    2. 'invalid' → logprob: -1.8699899911880493
    3. 'excluded' → logprob: -1.8699899911880493
    4. 'discard' → logprob: -1.9949899911880493
    5. 'not' → logprob: -3.4949898719787598
    6. ' invalid' → logprob: -4.24498987197876
    7. 'ignored' → logprob: -4.74498987197876
    8. '1' → logprob: -5.11998987197876
    9. ' discarded' → logprob: -5.11998987197876
    10. 'dis' → logprob: -5.61998987197876

Token 413: '1' (ID: 16)
  Prédit: 'excluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'excluded' → logprob: -0.3068549633026123
    2. 'discard' → logprob: -1.5568549633026123
    3. 'invalid' → logprob: -4.056855201721191
    4. 'not' → logprob: -4.431855201721191
    5. '0' → logprob: -4.681855201721191
    6. 'ignored' → logprob: -4.806855201721191
    7. 'dis' → logprob: -6.181855201721191
    8. '1' → logprob: -6.556855201721191
    9. ' discarded' → logprob: -7.181855201721191
    10. 'el' → logprob: -7.306855201721191

Token 414: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08239433914422989
    2. '
' → logprob: -2.5823943614959717
    3. '    
' → logprob: -7.207394123077393
    4. '<|end|>' → logprob: -7.332394123077393
    5. ')' → logprob: -8.08239459991455
    6. '\n' → logprob: -8.33239459991455
    7. ',' → logprob: -8.70739459991455
    8. ' else' → logprob: -8.70739459991455
    9. '```' → logprob: -8.70739459991455
    10. 'else' → logprob: -8.83239459991455

Token 415: ' invalid' (ID: 15796)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.43347296118736267
    2. 'not' → logprob: -2.1834728717803955
    3. 'excluded' → logprob: -2.4334728717803955
    4. ' invalid' → logprob: -2.5584728717803955
    5. 'discard' → logprob: -3.1834728717803955
    6. 'ignored' → logprob: -4.308473110198975
    7. ' discarded' → logprob: -5.558473110198975
    8. ' not' → logprob: -5.808473110198975
    9. 're' → logprob: -5.933473110198975
    10. 'dis' → logprob: -6.183473110198975

Token 416: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16250357031822205
    2. '
' → logprob: -1.9125036001205444
    3. '<|end|>' → logprob: -7.162503719329834
    4. '    
' → logprob: -7.912503719329834
    5. '\n' → logprob: -8.162503242492676
    6. ',' → logprob: -8.662503242492676
    7. '```' → logprob: -8.912503242492676
    8. ')' → logprob: -9.037503242492676
    9. '  ' → logprob: -9.662503242492676
    10. '<|end|>' → logprob: -10.037503242492676

Token 417: ' filter' (ID: 6690)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3316310942173004
    2. 'cnt' → logprob: -1.581631064414978
    3. 'pass' → logprob: -3.0816311836242676
    4. 'continue' → logprob: -4.581631183624268
    5. 'count' → logprob: -5.206631183624268
    6. '1' → logprob: -5.456631183624268
    7. ' cnt' → logprob: -6.081631183624268
    8. ' pass' → logprob: -6.331631183624268
    9. 'skip' → logprob: -6.456631183624268
    10. 'ignored' → logprob: -6.456631183624268

Token 418: ' later' (ID: 4849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3513600826263428
    2. 'else' → logprob: -1.7263600826263428
    3. ' else' → logprob: -3.6013600826263428
    4. 'out' → logprob: -3.8513600826263428
    5. 'ed' → logprob: -3.9763600826263428
    6. ' out' → logprob: -4.226360321044922
    7. '
' → logprob: -4.351360321044922
    8. 'return' → logprob: -4.601360321044922
    9. '       ' → logprob: -6.101360321044922
    10. '=' → logprob: -6.101360321044922

Token 419: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015080636367201805
    2. '
' → logprob: -4.265080451965332
    3. 'else' → logprob: -8.515080451965332
    4. '    
' → logprob: -8.640080451965332
    5. ' else' → logprob: -8.890080451965332
    6. '<|end|>' → logprob: -9.015080451965332
    7. 'elif' → logprob: -9.890080451965332
    8. ')' → logprob: -9.890080451965332
    9. '       ' → logprob: -10.140080451965332
    10. '<|end|>' → logprob: -10.890080451965332

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000678361626341939
    2. '
' → logprob: -8.625678062438965
    3. 'else' → logprob: -9.000678062438965
    4. '    
' → logprob: -9.375678062438965
    5. ' else' → logprob: -9.375678062438965
    6. ')' → logprob: -10.625678062438965
    7. '<|end|>' → logprob: -10.625678062438965
    8. '	' → logprob: -11.000678062438965
    9. 'elif' → logprob: -11.000678062438965
    10. '\n' → logprob: -11.375678062438965

Token 421: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10699119418859482
    2. 'return' → logprob: -2.7319912910461426
    3. ' for' → logprob: -4.356991291046143
    4. 'for' → logprob: -4.606991291046143
    5. ' return' → logprob: -5.356991291046143
    6. 'else' (adapté à ' else') → logprob: -5.356991291046143
    7. 'elif' → logprob: -5.981991291046143
    8. ' else' → logprob: -7.231991291046143
    9. '  ' → logprob: -8.856990814208984
    10. '    
' → logprob: -8.981990814208984

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5007787942886353
    2. '       ' → logprob: -1.1257787942886353
    3. '   ' → logprob: -3.2507786750793457
    4. ':
' → logprob: -3.6257786750793457
    5. '=' → logprob: -6.750778675079346
    6. ':return' → logprob: -7.000778675079346
    7. '    ' → logprob: -8.000779151916504
    8. '     ' → logprob: -8.375779151916504
    9. '      ' → logprob: -8.375779151916504
    10. '  ' → logprob: -8.500779151916504

Token 423: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3510773181915283
    2. ' return' → logprob: -1.6010773181915283
    3. '   ' → logprob: -2.6010773181915283
    4. '       ' → logprob: -3.9760773181915283
    5. '    ' → logprob: -6.726077079772949
    6. '	return' → logprob: -9.35107707977295
    7. '     ' → logprob: -10.35107707977295
    8. '0' → logprob: -10.47607707977295
    9. ' ' → logprob: -10.72607707977295
    10. '  ' → logprob: -11.10107707977295

Token 424: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010118496138602495
    2. ' return' → logprob: -7.001011848449707
    3. '0' → logprob: -9.376011848449707
    4. '   ' → logprob: -11.626011848449707
    5. 'cnt' → logprob: -12.001011848449707
    6. '	return' → logprob: -15.751011848449707
    7. ' ' → logprob: -15.876011848449707
    8. '       ' → logprob: -17.376012802124023
    9. '{return' → logprob: -17.751012802124023
    10. '  ' → logprob: -17.876012802124023

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.875139236450195
    4. '  ' → logprob: -19.250139236450195
    5. '000' → logprob: -19.375139236450195
    6. '00' → logprob: -20.375139236450195
    7. ' ' → logprob: -20.625139236450195
    8. '    ' → logprob: -20.875139236450195
    9. '۰' → logprob: -20.875139236450195
    10. '
' → logprob: -21.000139236450195

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.125
    3. '000' → logprob: -22.75
    4. '```' → logprob: -24.625
    5. '۰' → logprob: -24.875
    6. '00' → logprob: -25.125
    7. 'False' → logprob: -25.25
    8. '   ' → logprob: -26.125
    9. '０' → logprob: -26.25
    10. '
' → logprob: -26.375

Token 427: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39798039197921753
    2. '
' → logprob: -1.3979804515838623
    3. ' for' → logprob: -3.2729804515838623
    4. ' 
' → logprob: -4.647980213165283
    5. 'for' → logprob: -5.022980213165283
    6. '    
' → logprob: -5.147980213165283
    7. '  
' → logprob: -5.397980213165283
    8. '<|end|>' → logprob: -5.397980213165283
    9. '\n' → logprob: -5.522980213165283
    10. ' ' → logprob: -6.272980213165283

Token 429: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6883657574653625
    2. ' for' → logprob: -1.1883656978607178
    3. 'for' → logprob: -1.6883656978607178
    4. '
' → logprob: -5.438365936279297
    5. '	for' → logprob: -6.563365936279297
    6. '```' → logprob: -7.063365936279297
    7. '    
' → logprob: -7.688365936279297
    8. '  ' → logprob: -8.563365936279297
    9. ' ' → logprob: -8.813365936279297
    10. '<|end|>' → logprob: -9.313365936279297

Token 430: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.20603168499656e-05
    2. ' for' → logprob: -10.000061988830566
    3. '   ' → logprob: -11.625061988830566
    4. 'from' → logprob: -12.000061988830566
    5. 'def' → logprob: -14.375061988830566
    6. '```' → logprob: -15.000061988830566
    7. 'import' → logprob: -15.500061988830566
    8. '
' → logprob: -15.625061988830566
    9. 'cnt' → logprob: -17.375062942504883
    10. 'For' → logprob: -17.375062942504883

Token 431: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0466692447662354
    2. '1' → logprob: -1.5466692447662354
    3. 'for' → logprob: -1.5466692447662354
    4. ' for' → logprob: -2.2966692447662354
    5. ' =' → logprob: -2.9216692447662354
    6. '   ' → logprob: -3.2966692447662354
    7. '7' → logprob: -4.421669006347656
    8. ' ' → logprob: -4.921669006347656
    9. '[' → logprob: -4.921669006347656
    10. ' after' → logprob: -6.421669006347656

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2569185793399811
    2. 'for' → logprob: -1.7569185495376587
    3. '=' → logprob: -3.5069186687469482
    4. 'after' → logprob: -4.506918430328369
    5. 'from' → logprob: -5.256918430328369
    6. 'rest' → logprob: -6.131918430328369
    7. ' for' → logprob: -6.756918430328369
    8. '   ' → logprob: -7.131918430328369
    9. ' =' → logprob: -7.256918430328369
    10. ' after' → logprob: -7.881918430328369

Token 433: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.674423336982727
    2. '..' → logprob: -1.174423336982727
    3. ' through' → logprob: -2.9244232177734375
    4. 'to' → logprob: -3.2994232177734375
    5. '=' → logprob: -3.9244232177734375
    6. 'for' → logprob: -3.9244232177734375
    7. '...' → logprob: -4.0494232177734375
    8. '7' → logprob: -4.6744232177734375
    9. ':' → logprob: -5.0494232177734375
    10. '   ' → logprob: -5.1744232177734375

Token 434: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -8.077528764260933e-05
    2. ':' → logprob: -9.750081062316895
    3. '1' → logprob: -11.500081062316895
    4. ' ' → logprob: -11.750081062316895
    5. '```' → logprob: -13.250081062316895
    6. '8' → logprob: -13.625081062316895
    7. 'range' → logprob: -15.250081062316895
    8. '...' → logprob: -15.375081062316895
    9. ':]' → logprob: -15.375081062316895
    10. 'len' → logprob: -15.500081062316895

Token 435: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05021602660417557
    2. ' for' → logprob: -3.30021595954895
    3. '   ' → logprob: -4.425216197967529
    4. '```' → logprob: -10.175215721130371
    5. '
' → logprob: -10.300215721130371
    6. '	for' → logprob: -11.050215721130371
    7. ' ' → logprob: -11.300215721130371
    8. ':' → logprob: -12.050215721130371
    9. '  ' → logprob: -12.175215721130371
    10. '=' → logprob: -12.425215721130371

Token 436: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05799493566155434
    2. ' for' → logprob: -3.057994842529297
    3. '   ' → logprob: -4.807994842529297
    4. 'cnt' → logprob: -6.807994842529297
    5. 'count' → logprob: -10.432994842529297
    6. '	for' → logprob: -11.057994842529297
    7. '
' → logprob: -11.557994842529297
    8. ' ' → logprob: -11.807994842529297
    9. '```' → logprob: -11.807994842529297
    10. ' cnt' → logprob: -11.932994842529297

Token 437: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006559294648468494
    2. ' for' → logprob: -5.381559371948242
    3. '   ' → logprob: -6.256559371948242
    4. '	for' → logprob: -11.381559371948242
    5. ' ' → logprob: -12.256559371948242
    6. '
' → logprob: -13.506559371948242
    7. 'or' → logprob: -14.631559371948242
    8. '```' → logprob: -14.631559371948242
    9. '  ' → logprob: -15.131559371948242
    10. 'n' → logprob: -15.756559371948242

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6332960724830627
    2. ''' → logprob: -0.7582960724830627
    3. '('' → logprob: -8.758296012878418
    4. '01' → logprob: -9.008296012878418
    5. ' ' → logprob: -9.133296012878418
    6. ' '' → logprob: -9.258296012878418
    7. '1' → logprob: -9.383296012878418
    8. '012' → logprob: -10.133296012878418
    9. '['' → logprob: -10.258296012878418
    10. '
' → logprob: -11.758296012878418

Token 439: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33040398359298706
    2. '0' → logprob: -1.4554040431976318
    3. '01' → logprob: -3.580404043197632
    4. '012' → logprob: -4.955403804779053
    5. '1' → logprob: -5.955403804779053
    6. '['' → logprob: -5.955403804779053
    7. '('' → logprob: -6.205403804779053
    8. 'b' → logprob: -6.705403804779053
    9. '?' → logprob: -6.830403804779053
    10. 'x' → logprob: -7.080403804779053

Token 440: '/' (ID: 14)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3992359936237335
    2. 'for' → logprob: -1.3992359638214111
    3. ' for' → logprob: -3.649235963821411
    4. ' or' → logprob: -3.649235963821411
    5. 'or' → logprob: -3.774235963821411
    6. ',' → logprob: -5.52423620223999
    7. '       ' → logprob: -7.14923620223999
    8. ' ' → logprob: -7.14923620223999
    9. '	for' → logprob: -7.39923620223999
    10. '  ' → logprob: -8.149235725402832

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. 'or' → logprob: -16.000001907348633
    4. '
' → logprob: -16.250001907348633
    5. 'def' → logprob: -16.625001907348633
    6. ''' → logprob: -17.500001907348633
    7. 'x' → logprob: -18.125001907348633
    8. '7' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '`' → logprob: -19.250001907348633

Token 442: ' any' (ID: 1062)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09053114056587219
    2. '   ' → logprob: -2.59053111076355
    3. ' for' → logprob: -4.465531349182129
    4. '```' → logprob: -10.215531349182129
    5. '	for' → logprob: -10.590531349182129
    6. 'cnt' → logprob: -12.590531349182129
    7. ' ' → logprob: -13.090531349182129
    8. '
' → logprob: -13.090531349182129
    9. '``' → logprob: -13.340531349182129
    10. '  ' → logprob: -13.715531349182129

Token 443: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042591676115989685
    2. '   ' → logprob: -3.2925915718078613
    3. ' for' → logprob: -5.417591571807861
    4. '	for' → logprob: -10.41759204864502
    5. '```' → logprob: -10.41759204864502
    6. '
' → logprob: -10.79259204864502
    7. ' ' → logprob: -11.91759204864502
    8. '``' → logprob: -12.54259204864502
    9. 'count' → logprob: -13.04259204864502
    10. '  ' → logprob: -13.16759204864502

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6956446766853333
    2. 'for' → logprob: -0.6956446766853333
    3. ' for' → logprob: -6.070644855499268
    4. '```' → logprob: -9.19564437866211
    5. '	for' → logprob: -10.44564437866211
    6. '``' → logprob: -10.82064437866211
    7. '
' → logprob: -11.07064437866211
    8. 'cnt' → logprob: -11.44564437866211
    9. 'count' → logprob: -12.32064437866211
    10. '       ' → logprob: -14.07064437866211

Token 445: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025162079837173223
    2. '   ' → logprob: -6.002516269683838
    3. ' for' → logprob: -10.25251579284668
    4. '```' → logprob: -12.62751579284668
    5. '	for' → logprob: -13.75251579284668
    6. '``' → logprob: -15.00251579284668
    7. '
' → logprob: -15.12751579284668
    8. 'cnt' → logprob: -15.62751579284668
    9. 'from' → logprob: -16.62751579284668
    10. '    
' → logprob: -17.37751579284668

Token 446: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931689977645874
    2. ' i' → logprob: -0.6931689977645874
    3. 'bit' → logprob: -11.693168640136719
    4. 'j' → logprob: -12.318168640136719
    5. ' bit' → logprob: -12.818168640136719
    6. '	i' → logprob: -13.068168640136719
    7. ' j' → logprob: -13.193168640136719
    8. ' ' → logprob: -13.568168640136719
    9. '   ' → logprob: -15.193168640136719
    10. ' ' → logprob: -15.568168640136719

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027529556304216385
    2. 'in' → logprob: -3.65252947807312
    3. '(' → logprob: -7.527529716491699
    4. '1' → logprob: -7.902529716491699
    5. ' ' → logprob: -8.5275297164917
    6. ' i' → logprob: -10.0275297164917
    7. '7' → logprob: -10.9025297164917
    8. '   ' → logprob: -10.9025297164917
    9. ' (' → logprob: -12.1525297164917
    10. '0' → logprob: -12.1525297164917

Token 448: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967913061380386
    2. ' range' → logprob: -2.8119678497314453
    3. '(range' → logprob: -16.061967849731445
    4. ' ' → logprob: -17.311967849731445
    5. '	range' → logprob: -17.811967849731445
    6. '   ' → logprob: -19.061967849731445
    7. '[' → logprob: -19.186967849731445
    8. '  ' → logprob: -19.686967849731445
    9. ' xrange' → logprob: -20.186967849731445
    10. '1' → logprob: -20.811967849731445

Token 449: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018321901559829712
    2. '(' → logprob: -4.018321990966797
    3. ' ' → logprob: -9.268321990966797
    4. '   ' → logprob: -10.268321990966797
    5. '7' → logprob: -10.643321990966797
    6. ' (' → logprob: -11.518321990966797
    7. ',' → logprob: -12.643321990966797
    8. '8' → logprob: -13.643321990966797
    9. '    ' → logprob: -14.018321990966797
    10. '
' → logprob: -14.143321990966797

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.125045776367188
    3. '7' → logprob: -12.750045776367188
    4. '   ' → logprob: -13.125045776367188
    5. '  ' → logprob: -15.750045776367188
    6. '8' → logprob: -16.000045776367188
    7. 'i' → logprob: -16.250045776367188
    8. 'len' → logprob: -16.250045776367188
    9. '    ' → logprob: -16.375045776367188
    10. '
' → logprob: -16.437545776367188

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3143782615661621
    2. '8' → logprob: -1.314378261566162
    3. ' ,' → logprob: -7.064378261566162
    4. '7' → logprob: -8.68937873840332
    5. ',len' → logprob: -10.06437873840332
    6. '(' → logprob: -10.68937873840332
    7. ' ' → logprob: -11.81437873840332
    8. 'len' → logprob: -12.43937873840332
    9. ',i' → logprob: -12.43937873840332
    10. '   ' → logprob: -12.56437873840332

Token 452: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'len' → logprob: -16.000001907348633
    4. '7' → logprob: -17.250001907348633
    5. '   ' → logprob: -19.125001907348633
    6. 'eight' → logprob: -19.500001907348633
    7. ' len' → logprob: -20.000001907348633
    8. '８' → logprob: -20.375001907348633
    9. 'def' → logprob: -20.625001907348633
    10. '```' → logprob: -20.625001907348633

Token 453: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869439661502838
    2. '):' → logprob: -1.1369439363479614
    3. ':' → logprob: -10.011943817138672
    4. '   ' → logprob: -11.011943817138672
    5. '):
' → logprob: -12.011943817138672
    6. ':
' → logprob: -13.011943817138672
    7. '):

' → logprob: -13.636943817138672
    8. ' ):
' → logprob: -14.011943817138672
    9. ' ):' → logprob: -14.511943817138672
    10. ',' → logprob: -15.511943817138672

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04000609740614891
    2. 'if' → logprob: -3.290006160736084
    3. ' if' → logprob: -6.665006160736084
    4. '   ' → logprob: -7.290006160736084
    5. '	if' → logprob: -12.290005683898926
    6. '	   ' → logprob: -14.915005683898926
    7. '	' → logprob: -15.040005683898926
    8. '     ' → logprob: -16.040006637573242
    9. '```' → logprob: -16.040006637573242
    10. '           ' → logprob: -16.790006637573242

Token 455: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004428574349731207
    2. '       ' → logprob: -6.004428386688232
    3. ' if' → logprob: -6.254428386688232
    4. '   ' → logprob: -10.50442886352539
    5. '	if' → logprob: -13.87942886352539
    6. '```' → logprob: -15.50442886352539
    7. ' ' → logprob: -15.62942886352539
    8. '     ' → logprob: -16.50442886352539
    9. '    ' → logprob: -16.75442886352539
    10. '      ' → logprob: -17.12942886352539

Token 456: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02630285546183586
    2. ' b' → logprob: -3.6513028144836426
    3. '   ' → logprob: -13.4013032913208
    4. '	b' → logprob: -14.1513032913208
    5. ' ' → logprob: -16.151302337646484
    6. '       ' → logprob: -16.276302337646484
    7. '    ' → logprob: -17.088802337646484
    8. ')b' → logprob: -17.088802337646484
    9. ' б' → logprob: -17.588802337646484
    10. '(b' → logprob: -17.901302337646484

Token 457: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -14.000001907348633
    3. '```' → logprob: -15.000001907348633
    4. '[' → logprob: -15.750001907348633
    5. '[
' → logprob: -15.875001907348633
    6. ' [' → logprob: -17.250001907348633
    7. '
' → logprob: -17.375001907348633
    8. '(i' → logprob: -17.375001907348633
    9. '[I' → logprob: -17.500001907348633
    10. 'def' → logprob: -18.000001907348633

Token 458: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11630995571613312
    2. ' ==' → logprob: -2.366309881210327
    3. '=='' → logprob: -5.116310119628906
    4. ']==' → logprob: -5.116310119628906
    5. ']' → logprob: -5.616310119628906
    6. ']=='' → logprob: -8.491310119628906
    7. '==
' → logprob: -10.241310119628906
    8. ' =='' → logprob: -11.116310119628906
    9. '=' → logprob: -11.241310119628906
    10. ''' → logprob: -11.741310119628906

Token 459: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006307000759989023
    2. ' ==' → logprob: -5.256307125091553
    3. '=='' → logprob: -6.881307125091553
    4. '=' → logprob: -10.756306648254395
    5. '!=' → logprob: -11.256306648254395
    6. '==
' → logprob: -12.006306648254395
    7. ']==' → logprob: -13.881306648254395
    8. 'in' → logprob: -13.881306648254395
    9. ''' → logprob: -14.006306648254395
    10. ' =='' → logprob: -14.631306648254395

Token 460: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0003368926409166306
    2. ' '' → logprob: -8.750336647033691
    3. ''' → logprob: -9.375336647033691
    4. 'x' → logprob: -9.500336647033691
    5. '"x' → logprob: -11.750336647033691
    6. ' ' → logprob: -12.125336647033691
    7. '0' → logprob: -13.875336647033691
    8. ' x' → logprob: -13.875336647033691
    9. '   ' → logprob: -14.125336647033691
    10. '1' → logprob: -15.000336647033691

Token 461: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01629922352731228
    2. ''x' → logprob: -4.141299247741699
    3. ''' → logprob: -8.3912992477417
    4. '1' → logprob: -11.0162992477417
    5. '0' → logprob: -11.7662992477417
    6. ' x' → logprob: -12.0162992477417
    7. '"x' → logprob: -13.3912992477417
    8. ' '' → logprob: -13.6412992477417
    9. ' ' → logprob: -13.8912992477417
    10. ''s' → logprob: -14.7037992477417

Token 462: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2904253304004669
    2. '':
' → logprob: -1.7904253005981445
    3. ':' → logprob: -2.6654253005981445
    4. ':
' → logprob: -4.9154253005981445
    5. ''' → logprob: -5.1654253005981445
    6. ''):
' → logprob: -6.6654253005981445
    7. '):
' → logprob: -7.5404253005981445
    8. ''):' → logprob: -9.040425300598145
    9. '):' → logprob: -9.040425300598145
    10. '       ' → logprob: -9.165425300598145

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007550785783678293
    2. '       ' → logprob: -5.5075507164001465
    3. 'cnt' → logprob: -6.1325507164001465
    4. '
' → logprob: -7.1325507164001465
    5. '	       ' → logprob: -8.507551193237305
    6. 'count' → logprob: -9.757551193237305
    7. '```' → logprob: -9.882551193237305
    8. '               ' → logprob: -10.007551193237305
    9. '   ' → logprob: -10.132551193237305
    10. '<|end|>' → logprob: -10.757551193237305

Token 464: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00015860427811276168
    2. ' cnt' → logprob: -8.750158309936523
    3. '	cnt' → logprob: -16.500158309936523
    4. '       ' → logprob: -16.875158309936523
    5. 'count' → logprob: -16.875158309936523
    6. '[cnt' → logprob: -18.750158309936523
    7. '           ' → logprob: -18.875158309936523
    8. '   ' → logprob: -18.875158309936523
    9. '(cnt' → logprob: -19.125158309936523
    10. '_cnt' → logprob: -20.000158309936523

Token 465: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.2050415575504303
    2. '=' → logprob: -1.705041527748108
    3. ' =' → logprob: -6.205041408538818
    4. ' *=' → logprob: -6.455041408538818
    5. ' <<=' → logprob: -11.205041885375977
    6. '*' → logprob: -11.330041885375977
    7. '   ' → logprob: -13.080041885375977
    8. '<<' → logprob: -13.955041885375977
    9. '=(' → logprob: -15.080041885375977
    10. '```' → logprob: -15.080041885375977

Token 466: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00028648413717746735
    2. ' (' → logprob: -8.375286102294922
    3. 'cnt' → logprob: -10.250286102294922
    4. '(count' → logprob: -11.750286102294922
    5. '[cnt' → logprob: -11.875286102294922
    6. '(ct' → logprob: -13.250286102294922
    7. '(' → logprob: -13.375286102294922
    8. '(c' → logprob: -14.625286102294922
    9. '(clk' → logprob: -15.125286102294922
    10. ' cnt' → logprob: -15.250286102294922

Token 467: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00011641718447208405
    2. '(cnt' → logprob: -9.125116348266602
    3. ' cnt' → logprob: -11.875116348266602
    4. 'count' → logprob: -15.250116348266602
    5. '[cnt' → logprob: -15.625116348266602
    6. '	cnt' → logprob: -17.3751163482666
    7. '
' → logprob: -18.2501163482666
    8. 'cont' → logprob: -18.3751163482666
    9. 'cn' → logprob: -18.5001163482666
    10. '(' → logprob: -18.6251163482666

Token 468: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20141518115997314
    2. ' *' → logprob: -1.7014151811599731
    3. 'cnt' → logprob: -13.576415061950684
    4. '[cnt' → logprob: -15.451415061950684
    5. '(cnt' → logprob: -15.576415061950684
    6. ' cnt' → logprob: -16.326416015625
    7. ' ' → logprob: -16.576416015625
    8. ')' → logprob: -17.076416015625
    9. '2' → logprob: -17.326416015625
    10. '*c' → logprob: -17.451416015625

Token 469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. '
' → logprob: -17.3750057220459
    5. '```' → logprob: -18.5000057220459
    6. '  ' → logprob: -18.7500057220459
    7. '２' → logprob: -18.7500057220459
    8. '(' → logprob: -18.7500057220459
    9. '۲' → logprob: -19.4375057220459
    10. '1' → logprob: -19.9375057220459

Token 470: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ')%' → logprob: -11.625011444091797
    3. ' )' → logprob: -13.125011444091797
    4. ')
' → logprob: -17.875011444091797
    5. '),' → logprob: -18.750011444091797
    6. '')' → logprob: -19.875011444091797
    7. '   ' → logprob: -20.000011444091797
    8. '）' → logprob: -20.375011444091797
    9. '```' → logprob: -20.375011444091797
    10. ')...' → logprob: -21.375011444091797

Token 471: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '100' → logprob: -17.250001907348633
    4. '_MOD' → logprob: -23.000001907348633
    5. '.MOD' → logprob: -23.625001907348633
    6. '```' → logprob: -23.625001907348633
    7. ' ' → logprob: -23.875001907348633
    8. '(M' → logprob: -24.000001907348633
    9. 'MO' → logprob: -24.375001907348633
    10. 'MD' → logprob: -24.875001907348633

Token 472: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22890323400497437
    2. '   ' → logprob: -1.9789032936096191
    3. '<|end|>' → logprob: -3.228903293609619
    4. '
' → logprob: -4.103903293609619
    5. 'return' → logprob: -5.603903293609619
    6. ')' → logprob: -6.228903293609619
    7. ' return' → logprob: -6.978903293609619
    8. '<|end|>' → logprob: -7.353903293609619
    9. ':return' → logprob: -7.853903293609619
    10. '           ' → logprob: -7.978903293609619

Token 473: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0809410810470581
    2. '   ' → logprob: -2.5809412002563477
    3. ' return' → logprob: -6.205941200256348
    4. '	return' → logprob: -11.080941200256348
    5. ' ' → logprob: -11.955941200256348
    6. '       ' → logprob: -12.955941200256348
    7. ':return' → logprob: -13.080941200256348
    8. '    
' → logprob: -13.455941200256348
    9. '```' → logprob: -13.830941200256348
    10. '<|end|>' → logprob: -14.205941200256348

Token 475: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0073392074555158615
    2. ' return' → logprob: -5.007339000701904
    3. '   ' → logprob: -7.382339000701904
    4. '	return' → logprob: -14.257339477539062
    5. ' ' → logprob: -14.757339477539062
    6. '  ' → logprob: -16.007339477539062
    7. '```' → logprob: -16.257339477539062
    8. '
' → logprob: -16.757339477539062
    9. ':return' → logprob: -17.382339477539062
    10. '       ' → logprob: -17.507339477539062

Token 476: ' first' (ID: 1577)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6914388537406921
    2. ' bit' → logprob: -1.316438913345337
    3. 'b' → logprob: -1.816438913345337
    4. ' b' → logprob: -4.066438674926758
    5. ' the' → logprob: -4.316438674926758
    6. 'the' → logprob: -4.441438674926758
    7. ' i' → logprob: -5.066438674926758
    8. 'i' → logprob: -5.066438674926758
    9. ' cnt' → logprob: -6.316438674926758
    10. 'cnt' → logprob: -6.316438674926758

Token 477: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.3201959431171417
    2. 'bit' → logprob: -1.3201959133148193
    3. 'def' → logprob: -6.070196151733398
    4. 'b' → logprob: -6.445196151733398
    5. '[' → logprob: -7.570196151733398
    6. '0' → logprob: -7.570196151733398
    7. '_bit' → logprob: -7.695196151733398
    8. ' return' → logprob: -8.445196151733398
    9. ')' → logprob: -8.570196151733398
    10. '-bit' → logprob: -8.695196151733398

Token 478: ' '' (ID: 461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29800909757614136
    2. ' return' → logprob: -2.048009157180786
    3. '   ' → logprob: -2.673009157180786
    4. ' if' → logprob: -3.298009157180786
    5. 'if' → logprob: -3.923009157180786
    6. '0' → logprob: -7.048008918762207
    7. ',' → logprob: -7.548008918762207
    8. ':return' → logprob: -7.798008918762207
    9. ' ' → logprob: -8.798008918762207
    10. '=' → logprob: -8.923008918762207

Token 479: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004723795282188803
    2. ''x' → logprob: -8.000472068786621
    3. '0' → logprob: -9.625472068786621
    4. ''' → logprob: -10.375472068786621
    5. ' x' → logprob: -11.125472068786621
    6. '=' → logprob: -11.625472068786621
    7. '==' → logprob: -13.000472068786621
    8. 'n' → logprob: -13.125472068786621
    9. ' ' → logprob: -13.125472068786621
    10. 'b' → logprob: -13.250472068786621

Token 480: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8919800519943237
    2. '   ' → logprob: -0.8919800519943237
    3. ',' → logprob: -2.2669801712036133
    4. ':' → logprob: -3.7669801712036133
    5. ' if' → logprob: -4.266980171203613
    6. 'if' → logprob: -5.016980171203613
    7. 'cnt' → logprob: -5.391980171203613
    8. '<|end|>' → logprob: -5.391980171203613
    9. 'return' → logprob: -6.016980171203613
    10. '
' → logprob: -6.016980171203613

Token 481: ' only' (ID: 1606)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5466349124908447
    2. '#' → logprob: -1.0466349124908447
    3. 'if' → logprob: -3.2966349124908447
    4. 'return' → logprob: -3.9216349124908447
    5. 'pass' → logprob: -5.171634674072266
    6. '   ' → logprob: -6.421634674072266
    7. ' cnt' → logprob: -6.546634674072266
    8. 'we' → logprob: -6.796634674072266
    9. ' #' → logprob: -7.171634674072266
    10. 'the' → logprob: -7.421634674072266

Token 482: ' ' (ID: 220)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.31693220138549805
    2. 'cnt' → logprob: -2.066932201385498
    3. 'count' → logprob: -2.816932201385498
    4. 'one' → logprob: -3.441932201385498
    5. ' half' → logprob: -4.066932201385498
    6. '1' → logprob: -4.441932201385498
    7. 'the' → logprob: -4.691932201385498
    8. 'bit' → logprob: -4.691932201385498
    9. 'consider' → logprob: -6.191932201385498
    10. '0' → logprob: -7.441932201385498

Token 483: '1' (ID: 16)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.33388450741767883
    2. '1' → logprob: -1.8338844776153564
    3. 'count' → logprob: -2.9588844776153564
    4. 'one' → logprob: -3.0838844776153564
    5. 'cnt' → logprob: -4.7088847160339355
    6. ' half' → logprob: -5.2088847160339355
    7. '0' → logprob: -5.2088847160339355
    8. 'the' → logprob: -5.3338847160339355
    9. 'consider' → logprob: -7.9588847160339355
    10. 'counts' → logprob: -8.208884239196777

Token 484: ' of' (ID: 328)
  Prédit: ' possibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibility' → logprob: -0.7742313742637634
    2. 'poss' → logprob: -1.2742314338684082
    3. 'option' → logprob: -1.8992314338684082
    4. '/' → logprob: -3.399231433868408
    5. 'possible' → logprob: -3.774231433868408
    6. ' option' → logprob: -4.274231433868408
    7. ' possibilities' → logprob: -4.649231433868408
    8. ' possible' → logprob: -5.024231433868408
    9. 'count' → logprob: -5.399231433868408
    10. '#' → logprob: -5.524231433868408

Token 485: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014232965186238289
    2. 'the' → logprob: -4.389233112335205
    3. 'two' → logprob: -6.639233112335205
    4. ' ' → logprob: -8.264232635498047
    5. ' the' → logprob: -9.264232635498047
    6. ' two' → logprob: -10.139232635498047
    7. 'those' → logprob: -12.014232635498047
    8. '4' → logprob: -12.514232635498047
    9. 'them' → logprob: -12.764232635498047
    10. '

' → logprob: -13.139232635498047

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037979125045239925
    2. 'the' → logprob: -8.25037956237793
    3. 'two' → logprob: -9.12537956237793
    4. ' ' → logprob: -12.00037956237793
    5. '4' → logprob: -14.37537956237793
    6. ' two' → logprob: -14.37537956237793
    7. '

' → logprob: -14.87537956237793
    8. '
' → logprob: -15.37537956237793
    9. '```' → logprob: -15.37537956237793
    10. ' the' → logprob: -15.50037956237793

Token 487: ' possible' (ID: 4149)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.3732522428035736
    2. 'possible' → logprob: -1.748252272605896
    3. 'options' → logprob: -2.8732521533966064
    4. 'counts' → logprob: -3.6232521533966064
    5. 'count' → logprob: -4.2482523918151855
    6. ' possibilities' → logprob: -4.3732523918151855
    7. 'cnt' → logprob: -4.6232523918151855
    8. ' possible' → logprob: -5.3732523918151855
    9. 'tokens' → logprob: -5.6232523918151855
    10. ' options' → logprob: -5.7482523918151855

Token 488: ' bits' (ID: 18189)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41538456082344055
    2. ' options' → logprob: -1.6653845310211182
    3. 'options' → logprob: -2.790384531021118
    4. 'counts' → logprob: -4.165384769439697
    5. ' counts' → logprob: -4.415384769439697
    6. ' is' → logprob: -4.790384769439697
    7. 'tokens' → logprob: -4.790384769439697
    8. ' possibilities' → logprob: -4.790384769439697
    9. 'poss' → logprob: -4.790384769439697
    10. ')' → logprob: -5.790384769439697

Token 489: ' (' (ID: 350)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7192457914352417
    2. '   ' → logprob: -0.9692457914352417
    3. 'return' → logprob: -2.0942459106445312
    4. '
' → logprob: -4.969245910644531
    5. ' ' → logprob: -7.219245910644531
    6. ',' → logprob: -7.719245910644531
    7. ':return' → logprob: -8.094245910644531
    8. '       ' → logprob: -8.469245910644531
    9. '	return' → logprob: -8.594245910644531
    10. ' at' → logprob: -8.719245910644531

Token 490: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09795745462179184
    2. '2' → logprob: -3.4729573726654053
    3. '0' → logprob: -3.7229573726654053
    4. ' )' → logprob: -4.597957611083984
    5. 'because' → logprob: -4.597957611083984
    6. 'the' → logprob: -6.222957611083984
    7. 'possible' → logprob: -6.472957611083984
    8. ' because' → logprob: -6.722957611083984
    9. 'since' → logprob: -6.722957611083984
    10. ' is' → logprob: -6.722957611083984

Token 491: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09178661555051804
    2. ' or' → logprob: -2.5917866230010986
    3. ' )' → logprob: -5.2167863845825195
    4. '')' → logprob: -6.2167863845825195
    5. ' is' → logprob: -6.5917863845825195
    6. ' only' → logprob: -7.3417863845825195
    7. 'or' → logprob: -7.3417863845825195
    8. '**' → logprob: -8.09178638458252
    9. '),' → logprob: -8.21678638458252
    10. ')**' → logprob: -8.46678638458252

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076653016731143
    2. ' ' → logprob: -4.882665157318115
    3. ')' → logprob: -10.132665634155273
    4. '2' → logprob: -12.132665634155273
    5. '   ' → logprob: -12.632665634155273
    6. '0' → logprob: -12.882665634155273
    7. '  ' → logprob: -13.757665634155273
    8. '
' → logprob: -13.882665634155273
    9. ' ' → logprob: -14.257665634155273
    10. 'x' → logprob: -14.320165634155273

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. ')' → logprob: -14.000028610229492
    4. '0' → logprob: -16.500028610229492
    5. '   ' → logprob: -16.500028610229492
    6. '
' → logprob: -17.250028610229492
    7. '  ' → logprob: -17.375028610229492
    8. '2' → logprob: -17.625028610229492
    9. '```' → logprob: -18.187528610229492
    10. '...' → logprob: -18.937528610229492

Token 494: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039847237057983875
    2. ' is' → logprob: -6.1289849281311035
    3. ' )' → logprob: -7.1289849281311035
    4. ' possible' → logprob: -8.128984451293945
    5. ' will' → logprob: -9.378984451293945
    6. '),' → logprob: -9.503984451293945
    7. ' can' → logprob: -9.628984451293945
    8. ' counts' → logprob: -10.003984451293945
    9. 'possible' → logprob: -10.253984451293945
    10. ' possibilities' → logprob: -10.253984451293945

Token 495: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4001324474811554
    2. ' return' → logprob: -1.275132417678833
    3. 'return' → logprob: -3.150132417678833
    4. '
' → logprob: -5.400132656097412
    5. ' at' → logprob: -7.525132656097412
    6. ',' → logprob: -7.775132656097412
    7. ' for' → logprob: -7.900132656097412
    8. ':return' → logprob: -8.025132179260254
    9. '	return' → logprob: -8.900132179260254
    10. ' ' → logprob: -8.900132179260254

Token 496: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.2709549069404602
    2. ' valid' → logprob: -2.2709548473358154
    3. 'count' → logprob: -2.6459548473358154
    4. 'accepted' → logprob: -3.1459548473358154
    5. 'allowed' → logprob: -4.6459550857543945
    6. 'acceptable' → logprob: -5.5209550857543945
    7. 'ke' → logprob: -6.0209550857543945
    8. ' counted' → logprob: -6.8959550857543945
    9. ' accepted' → logprob: -7.6459550857543945
    10. 'taken' → logprob: -7.6459550857543945

Token 497: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25825759768486023
    2. ' return' → logprob: -2.1332576274871826
    3. '
' → logprob: -2.7582576274871826
    4. 'return' → logprob: -3.8832576274871826
    5. ',' → logprob: -4.8832573890686035
    6. '\n' → logprob: -4.8832573890686035
    7. '<|end|>' → logprob: -6.1332573890686035
    8. ':return' → logprob: -6.3832573890686035
    9. ' 
' → logprob: -6.7582573890686035
    10. ' ' → logprob: -6.8832573890686035

Token 498: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02362930029630661
    2. ' )' → logprob: -3.7736291885375977
    3. '),' → logprob: -9.148629188537598
    4. ',' → logprob: -9.648629188537598
    5. '   ' → logprob: -9.773629188537598
    6. ')
' → logprob: -10.023629188537598
    7. '#' → logprob: -11.523629188537598
    8. '       ' → logprob: -11.523629188537598
    9. '*' → logprob: -11.648629188537598
    10. ' )
' → logprob: -11.898629188537598

Token 499: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000918604782782495
    2. ',' → logprob: -7.875918388366699
    3. ' )' → logprob: -8.6259183883667
    4. '),' → logprob: -9.0009183883667
    5. '   ' → logprob: -9.2509183883667
    6. ')
' → logprob: -10.0009183883667
    7. '**' → logprob: -10.6259183883667
    8. '#' → logprob: -12.0009183883667
    9. ').' → logprob: -12.1259183883667
    10. '```' → logprob: -12.3759183883667

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11761074513196945
    2. ' return' → logprob: -2.3676106929779053
    3. 'return' → logprob: -4.367610931396484
    4. '
' → logprob: -6.367610931396484
    5. ' 
' → logprob: -6.867610931396484
    6. '\n' → logprob: -7.617610931396484
    7. '	return' → logprob: -7.992610931396484
    8. ' ' → logprob: -7.992610931396484
    9. '    
' → logprob: -8.742610931396484
    10. '<|end|>' → logprob: -9.367610931396484

Token 501: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5050138235092163
    2. ' return' → logprob: -1.0050138235092163
    3. 'return' → logprob: -3.505013942718506
    4. '	return' → logprob: -8.755013465881348
    5. ' 
' → logprob: -9.505013465881348
    6. '    
' → logprob: -10.130013465881348
    7. ' if' → logprob: -10.380013465881348
    8. ' ' → logprob: -10.380013465881348
    9. '
' → logprob: -11.005013465881348
    10. '       ' → logprob: -11.255013465881348

Token 502: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019293478690087795
    2. ' b' → logprob: -6.25192928314209
    3. 'False' → logprob: -14.50192928314209
    4. ' False' → logprob: -15.62692928314209
    5. '	b' → logprob: -17.501930236816406
    6. '0' → logprob: -17.876930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '   ' → logprob: -18.376930236816406
    9. 'cnt' → logprob: -19.001930236816406
    10. '(b' → logprob: -19.126930236816406

Token 503: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.125000953674316
    3. ' [' → logprob: -16.125
    4. '[
' → logprob: -16.875
    5. '==' → logprob: -17.5
    6. '#' → logprob: -17.875
    7. '```' → logprob: -18.0
    8. '[i' → logprob: -18.625
    9. 'def' → logprob: -18.75
    10. ' ' → logprob: -19.1875

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '[' → logprob: -15.250004768371582
    4. ']' → logprob: -17.375003814697266
    5. '```' → logprob: -17.437503814697266
    6. '   ' → logprob: -17.625003814697266
    7. '...' → logprob: -17.750003814697266
    8. '1' → logprob: -17.812503814697266
    9. '#' → logprob: -17.812503814697266
    10. 'x' → logprob: -18.125003814697266

Token 505: ']=='' (ID: 71177)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3500169813632965
    2. '==' → logprob: -1.2250169515609741
    3. '=='' → logprob: -6.600017070770264
    4. '[' → logprob: -9.225016593933105
    5. ']' → logprob: -9.975016593933105
    6. ']==' → logprob: -10.600016593933105
    7. '=' → logprob: -10.850016593933105
    8. ' =='' → logprob: -11.850016593933105
    9. ')' → logprob: -12.975016593933105
    10. ''' → logprob: -13.100016593933105

Token 506: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.1782583391759545e-05
    2. ''x' → logprob: -10.375031471252441
    3. ' x' → logprob: -14.625031471252441
    4. ''' → logprob: -17.250032424926758
    5. '"x' → logprob: -18.125032424926758
    6. ' ' → logprob: -18.250032424926758
    7. '	x' → logprob: -19.125032424926758
    8. ''s' → logprob: -19.875032424926758
    9. ' '' → logprob: -20.000032424926758
    10. '`' → logprob: -20.500032424926758

Token 507: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10870590806007385
    2. ':
' → logprob: -2.358705997467041
    3. '):' → logprob: -4.983705997467041
    4. '):
' → logprob: -6.733705997467041
    5. ')' → logprob: -8.358705520629883
    6. '   ' → logprob: -9.233705520629883
    7. '==' → logprob: -10.233705520629883
    8. ' and' → logprob: -10.858705520629883
    9. ' :' → logprob: -11.733705520629883
    10. ' ==' → logprob: -11.983705520629883

Token 508: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8047903180122375
    2. '       ' → logprob: -1.3047902584075928
    3. ' cnt' → logprob: -1.3047902584075928
    4. '   ' → logprob: -4.679790496826172
    5. ' return' → logprob: -8.304790496826172
    6. '	cnt' → logprob: -8.429790496826172
    7. '(cnt' → logprob: -8.554790496826172
    8. 'return' → logprob: -8.929790496826172
    9. '[cnt' → logprob: -9.054790496826172
    10. '    ' → logprob: -9.804790496826172

Token 509: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.004200917202979326
    2. 'return' → logprob: -5.6292009353637695
    3. ' cnt' → logprob: -7.7542009353637695
    4. 'pass' → logprob: -9.00420093536377
    5. ' return' → logprob: -10.87920093536377
    6. '   ' → logprob: -11.37920093536377
    7. '(cnt' → logprob: -12.00420093536377
    8. '#' → logprob: -12.12920093536377
    9. '	cnt' → logprob: -13.50420093536377
    10. 'count' → logprob: -13.62920093536377

Token 510: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014583118259906769
    2. '//=' → logprob: -4.514583110809326
    3. ' =' → logprob: -5.764583110809326
    4. ' //' → logprob: -8.264583587646484
    5. '*=' → logprob: -9.514583587646484
    6. '%=' → logprob: -10.264583587646484
    7. '//' → logprob: -10.889583587646484
    8. ' ' → logprob: -13.639583587646484
    9. '=(' → logprob: -13.639583587646484
    10. ' *=' → logprob: -13.889583587646484

Token 511: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.35204702615737915
    2. '(cnt' → logprob: -1.2270469665527344
    3. '1' → logprob: -6.352046966552734
    4. '(' → logprob: -7.352046966552734
    5. ' cnt' → logprob: -7.852046966552734
    6. ' (' → logprob: -8.102046966552734
    7. '[cnt' → logprob: -8.977046966552734
    8. 'count' → logprob: -9.227046966552734
    9. '(count' → logprob: -9.227046966552734
    10. '(c' → logprob: -10.352046966552734

Token 512: ' #' (ID: 1069)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04963493347167969
    2. ' //' → logprob: -3.4246349334716797
    3. '#' → logprob: -4.29963493347168
    4. '*' → logprob: -7.54963493347168
    5. '<|end|>' → logprob: -7.54963493347168
    6. ' #' → logprob: -8.29963493347168
    7. '
' → logprob: -8.42463493347168
    8. ' ' → logprob: -8.54963493347168
    9. '<|end|>' → logprob: -8.54963493347168
    10. ' *' → logprob: -9.29963493347168

Token 513: ' since' (ID: 3630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: ' we' (ID: 581)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005701484624296427
    2. ' cnt' → logprob: -5.880701541900635
    3. '1' → logprob: -6.005701541900635
    4. '(cnt' → logprob: -8.380701065063477
    5. 'count' → logprob: -9.005701065063477
    6. '0' → logprob: -10.505701065063477
    7. ' ' → logprob: -11.505701065063477
    8. '	cnt' → logprob: -11.755701065063477
    9. '[cnt' → logprob: -11.880701065063477
    10. '#' → logprob: -12.255701065063477

Token 515: ' counted' (ID: 60500)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.16231639683246613
    2. 'only' → logprob: -2.53731632232666
    3. 'count' → logprob: -3.16231632232666
    4. ' already' → logprob: -4.91231632232666
    5. 'consider' → logprob: -5.16231632232666
    6. 'are' → logprob: -5.16231632232666
    7. ' only' → logprob: -5.66231632232666
    8. 'have' → logprob: -5.66231632232666
    9. 'want' → logprob: -6.91231632232666
    10. 'keep' → logprob: -8.16231632232666

Token 516: ' only' (ID: 1606)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2824583947658539
    2. '*' → logprob: -2.5324583053588867
    3. '#' → logprob: -3.2824583053588867
    4. '1' → logprob: -3.5324583053588867
    5. '<|end|>' → logprob: -3.5324583053588867
    6. 'count' → logprob: -3.9074583053588867
    7. 'only' → logprob: -3.9074583053588867
    8. ' ' → logprob: -5.157458305358887
    9. ' only' → logprob: -5.907458305358887
    10. '   ' → logprob: -5.907458305358887

Token 517: ' unknown' (ID: 17927)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.1874239146709442
    2. 'the' → logprob: -2.8124239444732666
    3. '1' → logprob: -2.9374239444732666
    4. 'one' → logprob: -3.1874239444732666
    5. 'cnt' → logprob: -5.3124237060546875
    6. 'valid' → logprob: -5.5624237060546875
    7. ' half' → logprob: -5.9374237060546875
    8. 'possible' → logprob: -6.4374237060546875
    9. 'count' → logprob: -7.1874237060546875
    10. 'bit' → logprob: -7.8124237060546875

Token 518: ' bits' (ID: 18189)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044986505061388016
    2. '
' → logprob: -4.544986724853516
    3. '<|end|>' → logprob: -4.544986724853516
    4. ' return' → logprob: -4.669986724853516
    5. 'return' → logprob: -4.919986724853516
    6. '    
' → logprob: -6.294986724853516
    7. '  
' → logprob: -7.169986724853516
    8. ' 
' → logprob: -7.294986724853516
    9. '<|end|>' → logprob: -7.419986724853516
    10. ',' → logprob: -7.669986724853516

Token 520: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017463944852352142
    2. '
' → logprob: -4.7674641609191895
    3. 'return' → logprob: -5.5174641609191895
    4. ' return' → logprob: -6.1424641609191895
    5. '    
' → logprob: -6.6424641609191895
    6. '<|end|>' → logprob: -7.5174641609191895
    7. ',' → logprob: -8.392463684082031
    8. '  
' → logprob: -9.142463684082031
    9. '<|end|>' → logprob: -9.267463684082031
    10. '        
' → logprob: -9.767463684082031

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02941196970641613
    2. '*' → logprob: -4.529411792755127
    3. '=' → logprob: -5.154411792755127
    4. ',' → logprob: -5.654411792755127
    5. '   ' → logprob: -6.029411792755127
    6. 's' → logprob: -6.904411792755127
    7. ' ' → logprob: -7.154411792755127
    8. '<|end|>' → logprob: -7.654411792755127
    9. ')' → logprob: -7.779411792755127
    10. '#' → logprob: -7.779411792755127

Token 522: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004441631957888603
    2. 'return' → logprob: -6.504441738128662
    3. ' return' → logprob: -6.754441738128662
    4. '
' → logprob: -7.629441738128662
    5. '    
' → logprob: -7.629441738128662
    6. '<|end|>' → logprob: -7.754441738128662
    7. ',' → logprob: -9.504441261291504
    8. '<|end|>' → logprob: -9.754441261291504
    9. '  
' → logprob: -10.129441261291504
    10. ':return' → logprob: -10.129441261291504

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16763785481452942
    2. ' return' → logprob: -2.542637825012207
    3. '<|end|>' → logprob: -3.417637825012207
    4. 'return' → logprob: -4.292637825012207
    5. ':return' → logprob: -5.417637825012207
    6. '+' → logprob: -5.417637825012207
    7. '
' → logprob: -5.542637825012207
    8. ' ' → logprob: -5.542637825012207
    9. '    
' → logprob: -6.417637825012207
    10. ' 
' → logprob: -6.542637825012207

Token 524: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06521252542734146
    2. '<|end|>' → logprob: -3.1902124881744385
    3. ' return' → logprob: -5.440212726593018
    4. '
' → logprob: -5.440212726593018
    5. ' ' → logprob: -5.440212726593018
    6. '    
' → logprob: -6.065212726593018
    7. 'return' (adapté à ' return') → logprob: -6.315212726593018
    8. '<|end|>' → logprob: -6.690212726593018
    9. '	return' → logprob: -7.315212726593018
    10. ' 
' → logprob: -7.440212726593018

Token 525: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -2.15310683415737e-05
    2. ' cnt' → logprob: -10.750021934509277
    3. '(cnt' → logprob: -17.87502098083496
    4. 'count' → logprob: -18.87502098083496
    5. '	cnt' → logprob: -20.12502098083496
    6. '   ' → logprob: -21.50002098083496
    7. 'ct' → logprob: -21.87502098083496
    8. '[cnt' → logprob: -22.25002098083496
    9. 'cn' → logprob: -22.75002098083496
    10. ' ' → logprob: -23.50002098083496

Token 526: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18041060864925385
    2. ' count' → logprob: -1.930410623550415
    3. 'match' → logprob: -5.305410385131836
    4. 'is' → logprob: -5.430410385131836
    5. ' is' → logprob: -5.930410385131836
    6. 'bit' → logprob: -6.555410385131836
    7. 'pattern' → logprob: -6.680410385131836
    8. 'matches' → logprob: -6.930410385131836
    9. ' match' → logprob: -7.555410385131836
    10. 'parse' → logprob: -7.805410385131836

Token 529: '_two' (ID: 54305)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.014059733599424362
    2. '_matches' → logprob: -5.264059543609619
    3. '_utf' → logprob: -6.014059543609619
    4. '_' → logprob: -7.139059543609619
    5. '_valid' → logprob: -7.139059543609619
    6. '_bits' → logprob: -7.389059543609619
    7. '_two' → logprob: -7.514059543609619
    8. '_match' → logprob: -7.639059543609619
    9. '_mult' → logprob: -7.764059543609619
    10. '_byte' → logprob: -7.764059543609619

Token 530: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.0032813330180943012
    2. '_' → logprob: -6.128281116485596
    3. '_bytes' → logprob: -6.878281116485596
    4. ' _' → logprob: -11.628281593322754
    5. '_b' → logprob: -11.628281593322754
    6. '```' → logprob: -11.878281593322754
    7. '(_' → logprob: -12.253281593322754
    8. ''_' → logprob: -12.378281593322754
    9. '_bit' → logprob: -12.878281593322754
    10. '_char' → logprob: -12.878281593322754

Token 531: '(b' (ID: 3229)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2964717745780945
    2. '(' → logprob: -1.5464718341827393
    3. '_instruction' → logprob: -3.7964718341827393
    4. '(b' → logprob: -4.67147159576416
    5. '_opcode' → logprob: -5.79647159576416
    6. '_(' → logprob: -6.92147159576416
    7. '(_' → logprob: -7.17147159576416
    8. '```' → logprob: -7.42147159576416
    9. '_byte' → logprob: -7.54647159576416
    10. '_code' → logprob: -7.79647159576416

Token 532: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0598226822912693
    2. '):
' → logprob: -2.9348227977752686
    3. '(b' → logprob: -5.8098225593566895
    4. ')' → logprob: -7.8098225593566895
    5. 's' → logprob: -7.8098225593566895
    6. '[' → logprob: -8.059823036193848
    7. ',' → logprob: -8.309823036193848
    8. '):
' → logprob: -8.309823036193848
    9. 'b' → logprob: -9.684823036193848
    10. '[b' → logprob: -9.684823036193848

Token 533: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056193312630057335
    2. ',b' → logprob: -5.255619525909424
    3. '):' → logprob: -8.255619049072266
    4. ' ,' → logprob: -10.005619049072266
    5. '):
' → logprob: -10.755619049072266
    6. ',
' → logprob: -10.880619049072266
    7. '(b' → logprob: -11.380619049072266
    8. '   ' → logprob: -11.880619049072266
    9. ')' → logprob: -12.130619049072266
    10. '[' → logprob: -12.380619049072266

Token 534: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004287453833967447
    2. '[' → logprob: -5.504287242889404
    3. '_' → logprob: -8.629287719726562
    4. ')' → logprob: -11.129287719726562
    5. ''' → logprob: -12.754287719726562
    6. '1' → logprob: -13.129287719726562
    7. ')[' → logprob: -13.504287719726562
    8. '[]' → logprob: -13.504287719726562
    9. 'b' → logprob: -13.879287719726562
    10. '```' → logprob: -14.004287719726562

Token 535: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033696647733449936
    2. '):
' → logprob: -3.4086966514587402
    3. '):
' → logprob: -10.658696174621582
    4. '   ' → logprob: -11.658696174621582
    5. ')' → logprob: -11.908696174621582
    6. ',' → logprob: -12.158696174621582
    7. ' ):' → logprob: -12.783696174621582
    8. '):

' → logprob: -12.908696174621582
    9. ':' → logprob: -14.033696174621582
    10. ' ' → logprob: -15.408696174621582

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006841989234089851
    2. 'cnt' → logprob: -7.7506842613220215
    3. 'count' → logprob: -8.750683784484863
    4. 'def' → logprob: -10.250683784484863
    5. '#' → logprob: -10.500683784484863
    6. ' cnt' → logprob: -12.000683784484863
    7. '
' → logprob: -12.125683784484863
    8. '```' → logprob: -12.375683784484863
    9. '    
' → logprob: -12.625683784484863
    10. 'total' → logprob: -13.000683784484863

Token 537: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.090311698615551
    2. 'cnt' → logprob: -2.7153117656707764
    3. '#' (adapté à ' #') → logprob: -4.715311527252197
    4. 'count' → logprob: -5.715311527252197
    5. ' cnt' → logprob: -5.840311527252197
    6. 'if' → logprob: -6.465311527252197
    7. ' #' → logprob: -6.590311527252197
    8. 'n' → logprob: -7.215311527252197
    9. 'def' → logprob: -8.215312004089355
    10. ' if' → logprob: -8.215312004089355

Token 538: ' two' (ID: 1920)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.40083056688308716
    2. '#' → logprob: -1.9008305072784424
    3. '   ' → logprob: -1.9008305072784424
    4. 'if' → logprob: -4.4008307456970215
    5. 'def' → logprob: -4.4008307456970215
    6. 'count' → logprob: -6.0258307456970215
    7. 'n' → logprob: -6.1508307456970215
    8. ' cnt' → logprob: -7.0258307456970215
    9. 'c' → logprob: -7.9008307456970215
    10. 'res' → logprob: -8.025830268859863

Token 539: ' bytes' (ID: 11643)
  Prédit: '_byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.14246675372123718
    2. 'byte' → logprob: -2.6424667835235596
    3. 'b' → logprob: -3.5174667835235596
    4. '[' → logprob: -4.3924665451049805
    5. ' byte' → logprob: -5.0174665451049805
    6. 'def' → logprob: -5.7674665451049805
    7. '_bytes' → logprob: -5.8924665451049805
    8. ' _' → logprob: -6.5174665451049805
    9. ' ' → logprob: -7.2674665451049805
    10. '   ' → logprob: -7.5174665451049805

Token 540: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21388395130634308
    2. 'def' → logprob: -2.463883876800537
    3. ':' → logprob: -3.088883876800537
    4. ' =' → logprob: -3.963883876800537
    5. '[' → logprob: -4.463883876800537
    6. ':
' → logprob: -4.713883876800537
    7. '#' → logprob: -4.963883876800537
    8. '=' → logprob: -5.838883876800537
    9. ' if' → logprob: -6.338883876800537
    10. ' def' → logprob: -6.463883876800537

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022519570775330067
    2. '#' → logprob: -7.002252101898193
    3. ' #' → logprob: -8.002251625061035
    4. '    
' → logprob: -8.502251625061035
    5. 'if' → logprob: -8.627251625061035
    6. ' if' → logprob: -8.752251625061035
    7. '
' → logprob: -9.002251625061035
    8. 'def' → logprob: -9.002251625061035
    9. 'cnt' → logprob: -10.002251625061035
    10. 'count' → logprob: -10.127251625061035

Token 542: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5268707871437073
    2. '   ' → logprob: -1.5268707275390625
    3. 'if' → logprob: -2.6518707275390625
    4. ' #' → logprob: -2.9018707275390625
    5. 'cnt' → logprob: -3.4018707275390625
    6. ' if' → logprob: -4.6518707275390625
    7. ' cnt' → logprob: -5.0268707275390625
    8. 'def' → logprob: -5.4018707275390625
    9. 'n' → logprob: -5.4018707275390625
    10. 'for' → logprob: -6.2768707275390625

Token 543: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.619141697883606
    2. ' #' → logprob: -1.619141697883606
    3. 'if' → logprob: -2.2441415786743164
    4. '   ' → logprob: -2.7441415786743164
    5. ' if' → logprob: -3.7441415786743164
    6. 'def' → logprob: -3.8691415786743164
    7. 'cnt' → logprob: -4.244141578674316
    8. ' cnt' → logprob: -4.619141578674316
    9. 'for' → logprob: -5.244141578674316
    10. 'n' → logprob: -5.369141578674316

Token 544: '1' (ID: 16)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.48918601870536804
    2. '#' → logprob: -1.6141860485076904
    3. 'if' → logprob: -1.7391860485076904
    4. 'def' → logprob: -5.614185810089111
    5. 'count' → logprob: -5.989185810089111
    6. 'n' → logprob: -6.239185810089111
    7. '   ' → logprob: -7.114185810089111
    8. 'c' → logprob: -7.114185810089111
    9. 'b' → logprob: -7.489185810089111
    10. 'first' → logprob: -8.11418628692627

Token 545: 'st' (ID: 302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5409008264541626
    2. ' ' → logprob: -2.415900707244873
    3. ' if' → logprob: -2.415900707244873
    4. '1' → logprob: -2.915900707244873
    5. 'def' → logprob: -3.165900707244873
    6. ' #' → logprob: -3.290900707244873
    7. 'b' → logprob: -3.665900707244873
    8. '   ' → logprob: -3.790900707244873
    9. 'if' → logprob: -4.165900707244873
    10. '#' → logprob: -4.915900707244873

Token 546: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35729631781578064
    2. 'b' → logprob: -2.3572962284088135
    3. ' =' → logprob: -2.8572962284088135
    4. 'def' → logprob: -3.1072962284088135
    5. '=' → logprob: -3.3572962284088135
    6. 'if' → logprob: -4.232296466827393
    7. 'byte' → logprob: -4.607296466827393
    8. '_byte' → logprob: -5.107296466827393
    9. '=[' → logprob: -5.107296466827393
    10. '_bits' → logprob: -5.232296466827393

Token 547: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04863778129220009
    2. '   ' → logprob: -3.548637866973877
    3. 'def' → logprob: -5.423637866973877
    4. ' =' → logprob: -5.548637866973877
    5. ':' → logprob: -5.673637866973877
    6. '=' → logprob: -6.673637866973877
    7. '#' → logprob: -7.173637866973877
    8. '[:' → logprob: -7.173637866973877
    9. ' ==' → logprob: -7.548637866973877
    10. ',' → logprob: -7.548637866973877

Token 548: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7968970537185669
    2. 'b' → logprob: -1.796897053718567
    3. 'if' → logprob: -1.796897053718567
    4. '['' → logprob: -2.5468969345092773
    5. ' if' → logprob: -3.4218969345092773
    6. 'def' → logprob: -3.6718969345092773
    7. '[b' → logprob: -3.6718969345092773
    8. ' b' → logprob: -3.7968969345092773
    9. ' [' → logprob: -4.546896934509277
    10. '   ' → logprob: -4.671896934509277

Token 549: '110' (ID: 7920)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47970059514045715
    2. '[' → logprob: -2.4797005653381348
    3. 'if' → logprob: -2.4797005653381348
    4. '['' → logprob: -2.4797005653381348
    5. '[b' → logprob: -2.4797005653381348
    6. 'def' → logprob: -3.4797005653381348
    7. 'len' → logprob: -5.354700565338135
    8. '(b' → logprob: -5.729700565338135
    9. ' b' → logprob: -6.979700565338135
    10. ' if' → logprob: -7.229700565338135

Token 550: 'yyyy' (ID: 27343)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2090364694595337
    2. ' ' → logprob: -1.3340364694595337
    3. '0' → logprob: -2.584036350250244
    4. 'b' → logprob: -2.584036350250244
    5. '  ' → logprob: -2.709036350250244
    6. '    ' → logprob: -3.084036350250244
    7. ' b' → logprob: -3.084036350250244
    8. '000' → logprob: -3.584036350250244
    9. 'def' → logprob: -3.834036350250244
    10. 'if' → logprob: -4.459036350250244

Token 551: 'x' (ID: 87)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3642650842666626
    2. '0' → logprob: -2.489264965057373
    3. '[' → logprob: -2.739264965057373
    4. ' ' → logprob: -3.614264965057373
    5. '  ' → logprob: -3.739264965057373
    6. 'b' → logprob: -4.114264965057373
    7. '000' → logprob: -4.239264965057373
    8. '1' → logprob: -4.989264965057373
    9. 'def' → logprob: -4.989264965057373
    10. '       ' → logprob: -4.989264965057373

Token 552: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07863494008779526
    2. ':' → logprob: -3.8286349773406982
    3. ' ' → logprob: -3.9536349773406982
    4. '  ' → logprob: -4.328634738922119
    5. '[' → logprob: -4.953634738922119
    6. '       ' → logprob: -5.953634738922119
    7. ':
' → logprob: -6.078634738922119
    8. 'def' → logprob: -6.453634738922119
    9. '    ' → logprob: -6.578634738922119
    10. '<|end|>' → logprob: -7.453634738922119

Token 553: ' y' (ID: 342)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004033402539789677
    2. ' b' → logprob: -5.75403356552124
    3. '(b' → logprob: -7.50403356552124
    4. ' (' → logprob: -9.004033088684082
    5. 'True' → logprob: -10.129033088684082
    6. 'len' → logprob: -10.129033088684082
    7. '(' → logprob: -11.129033088684082
    8. 'all' → logprob: -11.254033088684082
    9. ' True' → logprob: -11.254033088684082
    10. ' all' → logprob: -11.504033088684082

Token 554: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1357606053352356
    2. '0' → logprob: -3.510760545730591
    3. 's' → logprob: -4.13576078414917
    4. 'yyyy' → logprob: -4.26076078414917
    5. 'ields' → logprob: -4.51076078414917
    6. 'y' → logprob: -4.76076078414917
    7. '[]' → logprob: -4.88576078414917
    8. '```' → logprob: -5.38576078414917
    9. '1' → logprob: -5.51076078414917
    10. '   ' → logprob: -5.51076078414917

Token 555: ' not' (ID: 625)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24141527712345123
    2. '=' → logprob: -2.24141526222229
    3. '[' → logprob: -2.49141526222229
    4. '   ' → logprob: -5.241415500640869
    5. '=[' → logprob: -5.491415500640869
    6. 's' → logprob: -5.741415500640869
    7. ' are' → logprob: -5.866415500640869
    8. ' in' → logprob: -5.991415500640869
    9. ' ' → logprob: -6.616415500640869
    10. ' =[' → logprob: -7.241415500640869

Token 556: ' all' (ID: 722)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5295475721359253
    2. ' None' → logprob: -0.9045475721359253
    3. ' in' → logprob: -6.404547691345215
    4. 'x' → logprob: -7.029547691345215
    5. '=None' → logprob: -7.029547691345215
    6. 'in' → logprob: -7.404547691345215
    7. '[' → logprob: -7.654547691345215
    8. '=' → logprob: -7.904547691345215
    9. '(None' → logprob: -8.029547691345215
    10. ' =' → logprob: -8.779547691345215

Token 557: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1271444857120514
    2. 'x' → logprob: -3.2521445751190186
    3. 'fixed' → logprob: -3.7521445751190186
    4. '[' → logprob: -4.6271443367004395
    5. '1' → logprob: -4.6271443367004395
    6. '_' → logprob: -4.7521443367004395
    7. 'None' → logprob: -4.7521443367004395
    8. ' ' → logprob: -5.7521443367004395
    9. 'zero' → logprob: -5.7521443367004395
    10. 'equal' → logprob: -5.7521443367004395

Token 558: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013826608657836914
    2. ' ' → logprob: -5.763826370239258
    3. '       ' → logprob: -6.388826370239258
    4. '  ' → logprob: -6.388826370239258
    5. ' if' → logprob: -6.513826370239258
    6. ' =' → logprob: -6.888826370239258
    7. 'def' → logprob: -7.138826370239258
    8. '[' → logprob: -7.513826370239258
    9. ' for' → logprob: -7.513826370239258
    10. ':' → logprob: -8.013826370239258

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025330718606710434
    2. ' if' → logprob: -5.150330543518066
    3. ' for' → logprob: -5.775330543518066
    4. '
' → logprob: -5.900330543518066
    5. ' ' → logprob: -6.150330543518066
    6. '       ' → logprob: -6.400330543518066
    7. 'def' → logprob: -6.775330543518066
    8. '[' → logprob: -6.900330543518066
    9. 'if' → logprob: -7.025330543518066
    10. '    ' → logprob: -7.400330543518066

Token 560: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10420238971710205
    2. 'count' → logprob: -2.4792022705078125
    3. ' count' → logprob: -5.2292022705078125
    4. 'if' → logprob: -5.4792022705078125
    5. 'cnt' → logprob: -6.1042022705078125
    6. ' if' → logprob: -7.2292022705078125
    7. '
' → logprob: -7.7292022705078125
    8. ' ' → logprob: -7.9792022705078125
    9. '  ' → logprob: -8.354202270507812
    10. 'def' → logprob: -8.479202270507812

Token 561: ' bits' (ID: 18189)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6645891070365906
    2. '   ' → logprob: -1.0395891666412354
    3. 'count' → logprob: -2.2895891666412354
    4. ' cnt' → logprob: -4.914588928222656
    5. '#' → logprob: -5.039588928222656
    6. 'if' → logprob: -5.164588928222656
    7. 'def' → logprob: -5.539588928222656
    8. 'mask' → logprob: -6.539588928222656
    9. ' count' → logprob: -7.039588928222656
    10. 'n' → logprob: -7.289588928222656

Token 562: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9806017279624939
    2. '[' → logprob: -1.2306017875671387
    3. ' =' → logprob: -1.7306017875671387
    4. '1' → logprob: -2.9806017875671387
    5. '=' → logprob: -3.2306017875671387
    6. ' ' → logprob: -3.8556017875671387
    7. '   ' → logprob: -4.480601787567139
    8. '=[' → logprob: -4.855601787567139
    9. '7' → logprob: -5.355601787567139
    10. 's' → logprob: -5.480601787567139

Token 563: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6288973689079285
    2. 'range' → logprob: -1.5038974285125732
    3. ' range' → logprob: -2.1288974285125732
    4. 'b' → logprob: -2.5038974285125732
    5. ' [' → logprob: -3.5038974285125732
    6. '1' → logprob: -5.378897190093994
    7. ' b' → logprob: -6.003897190093994
    8. '0' → logprob: -6.128897190093994
    9. ' ' → logprob: -6.378897190093994
    10. '   ' → logprob: -7.378897190093994

Token 564: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4589581787586212
    2. 'range' → logprob: -1.4589581489562988
    3. 'b' → logprob: -2.208958148956299
    4. '1' → logprob: -4.458958148956299
    5. '0' → logprob: -5.083958148956299
    6. ' range' → logprob: -5.333958148956299
    7. '(' → logprob: -7.083958148956299
    8. ' [' → logprob: -7.083958148956299
    9. '[:' → logprob: -7.958958148956299
    10. '2' → logprob: -8.208958625793457

Token 565: 'st' (ID: 302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8099192380905151
    2. '1' → logprob: -2.3099193572998047
    3. ':]' → logprob: -2.3099193572998047
    4. '=' → logprob: -2.8099193572998047
    5. '7' → logprob: -3.0599193572998047
    6. '2' → logprob: -3.1849193572998047
    7. '0' → logprob: -3.4349193572998047
    8. '[' → logprob: -3.4349193572998047
    9. ']' → logprob: -3.6849193572998047
    10. 'def' → logprob: -3.6849193572998047

Token 566: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2084646224975586
    2. '1' → logprob: -2.9584646224975586
    3. 'b' → logprob: -3.7084646224975586
    4. '0' → logprob: -3.9584646224975586
    5. ' ' → logprob: -3.9584646224975586
    6. 'def' → logprob: -4.083464622497559
    7. ' =' → logprob: -4.458464622497559
    8. '=' → logprob: -4.708464622497559
    9. ' [' → logprob: -4.958464622497559
    10. '2' → logprob: -5.083464622497559

Token 567: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20899434387683868
    2. ' =' → logprob: -2.2089943885803223
    3. '   ' → logprob: -3.5839943885803223
    4. '=' → logprob: -3.9589943885803223
    5. 'def' → logprob: -3.9589943885803223
    6. ':' → logprob: -5.458994388580322
    7. '[:' → logprob: -6.583994388580322
    8. 'for' → logprob: -6.708994388580322
    9. ' for' → logprob: -7.208994388580322
    10. '```' → logprob: -7.333994388580322

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8663787841796875
    2. '[' → logprob: -1.2413787841796875
    3. ' [' → logprob: -1.7413787841796875
    4. ' ' → logprob: -2.6163787841796875
    5. '0' → logprob: -4.6163787841796875
    6. '1' → logprob: -4.7413787841796875
    7. ' '' → logprob: -5.3663787841796875
    8. ' #' → logprob: -5.8663787841796875
    9. ' if' → logprob: -6.1163787841796875
    10. ' b' → logprob: -6.6163787841796875

Token 569: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29547372460365295
    2. '   ' → logprob: -2.42047381401062
    3. ' [' → logprob: -2.42047381401062
    4. ' ' → logprob: -4.670473575592041
    5. '[
' → logprob: -4.670473575592041
    6. '1' → logprob: -4.795473575592041
    7. '0' → logprob: -4.795473575592041
    8. 'for' → logprob: -5.170473575592041
    9. 'if' → logprob: -5.295473575592041
    10. ' for' → logprob: -5.420473575592041

Token 570: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0928138494491577
    2. '   ' → logprob: -1.7178138494491577
    3. '1' → logprob: -2.0928139686584473
    4. ' [' → logprob: -2.4678139686584473
    5. ' ' → logprob: -2.8428139686584473
    6. '#' → logprob: -3.0928139686584473
    7. ' #' → logprob: -3.3428139686584473
    8. '0' → logprob: -3.3428139686584473
    9. ' for' → logprob: -4.342813968658447
    10. ' if' → logprob: -4.592813968658447

Token 571: '0' (ID: 15)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0620036125183105
    2. '[' → logprob: -1.0620036125183105
    3. 'if' → logprob: -2.9370036125183105
    4. 'def' → logprob: -3.1870036125183105
    5. '0' → logprob: -3.3120036125183105
    6. 'for' → logprob: -3.5620036125183105
    7. '1' → logprob: -3.6870036125183105
    8. '   ' → logprob: -3.6870036125183105
    9. 'count' → logprob: -4.1870036125183105
    10. 'y' → logprob: -4.1870036125183105

Token 572: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0264902114868164
    2. 'b' → logprob: -1.9014902114868164
    3. '=' → logprob: -2.0264902114868164
    4. ' =' → logprob: -2.7764902114868164
    5. '1' → logprob: -3.0264902114868164
    6. '0' → logprob: -3.1514902114868164
    7. '   ' → logprob: -3.5264902114868164
    8. ',' → logprob: -3.6514902114868164
    9. ' if' → logprob: -4.026490211486816
    10. '[' → logprob: -4.151490211486816

Token 573: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016140762716531754
    2. '1' → logprob: -5.016140937805176
    3. ''b' → logprob: -5.641140937805176
    4. ''y' → logprob: -6.391140937805176
    5. 'b' → logprob: -6.641140937805176
    6. ' '' → logprob: -6.766140937805176
    7. 'if' → logprob: -7.266140937805176
    8. '['' → logprob: -7.891140937805176
    9. ''i' → logprob: -8.641140937805176
    10. '`' → logprob: -9.641140937805176

Token 574: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5114155411720276
    2. ' if' → logprob: -1.6364154815673828
    3. '   ' → logprob: -2.761415481567383
    4. ' =' → logprob: -3.011415481567383
    5. '=' → logprob: -3.761415481567383
    6. '
' → logprob: -3.886415481567383
    7. ' ' → logprob: -4.386415481567383
    8. 'b' → logprob: -4.636415481567383
    9. '1' → logprob: -4.761415481567383
    10. '#' → logprob: -6.011415481567383

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35704874992370605
    2. ' ' → logprob: -1.232048749923706
    3. ' #' → logprob: -6.357048988342285
    4. ' '' → logprob: -6.607048988342285
    5. '0' → logprob: -6.982048988342285
    6. '#' → logprob: -7.232048988342285
    7. '   ' → logprob: -7.482048988342285
    8. ' 
' → logprob: -7.732048988342285
    9. '    ' → logprob: -8.107048988342285
    10. '  ' → logprob: -8.107048988342285

Token 576: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3995213508605957
    2. ' =' → logprob: -1.3995213508605957
    3. ':' → logprob: -1.5245213508605957
    4. ',' → logprob: -2.0245213508605957
    5. '0' → logprob: -3.3995213508605957
    6. ' ' → logprob: -3.6495213508605957
    7. '   ' → logprob: -3.6495213508605957
    8. '1' → logprob: -4.149521350860596
    9. 'def' → logprob: -4.899521350860596
    10. ' ==' → logprob: -5.274521350860596

Token 577: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03423648700118065
    2. ''' → logprob: -3.409236431121826
    3. ' ' → logprob: -9.409236907958984
    4. 'True' → logprob: -9.409236907958984
    5. ''s' → logprob: -9.409236907958984
    6. ''b' → logprob: -9.409236907958984
    7. ' '' → logprob: -9.909236907958984
    8. '0' → logprob: -10.659236907958984
    9. '('' → logprob: -10.909236907958984
    10. '   ' → logprob: -10.909236907958984

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5739907622337341
    2. '   ' → logprob: -1.573990821838379
    3. '2' → logprob: -3.198990821838379
    4. '
' → logprob: -3.323990821838379
    5. '0' → logprob: -3.323990821838379
    6. ' ' → logprob: -3.823990821838379
    7. '#' → logprob: -3.948990821838379
    8. ',
' → logprob: -4.198990821838379
    9. ' #' → logprob: -4.323990821838379
    10. 'def' → logprob: -4.448990821838379

Token 579: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003338598646223545
    2. ' ' → logprob: -5.753338813781738
    3. '#' → logprob: -9.753338813781738
    4. '0' → logprob: -10.878338813781738
    5. '6' → logprob: -11.128338813781738
    6. ' #' → logprob: -11.128338813781738
    7. '  ' → logprob: -12.065838813781738
    8. '   ' → logprob: -12.128338813781738
    9. '1' → logprob: -12.190838813781738
    10. '3' → logprob: -12.690838813781738

Token 580: ':y' (ID: 124542)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1282649040222168
    2. ',' → logprob: -2.378264904022217
    3. '3' → logprob: -4.878264904022217
    4. '=' → logprob: -5.253264904022217
    5. ' =' → logprob: -5.878264904022217
    6. '2' → logprob: -6.003264904022217
    7. '0' → logprob: -6.128264904022217
    8. ' ' → logprob: -6.503264904022217
    9. ':'' → logprob: -7.128264904022217
    10. '1' → logprob: -7.378264904022217

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30595412850379944
    2. '<|end|>' → logprob: -2.1809542179107666
    3. '   ' → logprob: -2.6809542179107666
    4. '3' → logprob: -3.9309542179107666
    5. ' ' → logprob: -4.6809539794921875
    6. '[' → logprob: -4.6809539794921875
    7. '
' → logprob: -4.9309539794921875
    8. '<|end|>' → logprob: -5.0559539794921875
    9. '...' → logprob: -5.3059539794921875
    10. 'x' → logprob: -5.3059539794921875

Token 582: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008261834154836833
    2. ' ' → logprob: -7.375826358795166
    3. '[' → logprob: -9.500825881958008
    4. '<|end|>' → logprob: -10.000825881958008
    5. '...' → logprob: -10.875825881958008
    6. '<|end|>' → logprob: -10.875825881958008
    7. '   ' → logprob: -11.500825881958008
    8. '#' → logprob: -11.500825881958008
    9. '2' → logprob: -12.625825881958008
    10. '  ' → logprob: -12.875825881958008

Token 583: ':y' (ID: 124542)
  Prédit: ':y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':y' → logprob: -0.600440263748169
    2. ':' → logprob: -1.475440263748169
    3. 'y' → logprob: -1.600440263748169
    4. '4' → logprob: -4.35044002532959
    5. ',y' → logprob: -5.72544002532959
    6. '<|end|>' → logprob: -6.97544002532959
    7. '<|end|>' → logprob: -7.47544002532959
    8. ' y' → logprob: -7.85044002532959
    9. ',' → logprob: -7.85044002532959
    10. ''y' → logprob: -8.10044002532959

Token 584: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5368385314941406
    2. ',' → logprob: -0.9118385314941406
    3. '<|end|>' → logprob: -5.286838531494141
    4. ' ' → logprob: -5.786838531494141
    5. '   ' → logprob: -6.036838531494141
    6. ' ,' → logprob: -6.786838531494141
    7. '[' → logprob: -8.28683853149414
    8. '  ' → logprob: -8.53683853149414
    9. '...' → logprob: -8.66183853149414
    10. '(' → logprob: -8.91183853149414

Token 585: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.000009536743164
    4. '<|end|>' → logprob: -17.750009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '' → logprob: -17.875009536743164
    7. '[' → logprob: -18.375009536743164
    8. '#' → logprob: -18.500009536743164
    9. '
' → logprob: -19.000009536743164
    10. '  ' → logprob: -19.125009536743164

Token 586: ':y' (ID: 124542)
  Prédit: ':y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':y' → logprob: -0.26495978236198425
    2. ':' → logprob: -2.1399598121643066
    3. 'y' → logprob: -2.2649598121643066
    4. ''y' → logprob: -5.264959812164307
    5. ',y' → logprob: -5.889959812164307
    6. ',' → logprob: -7.514959812164307
    7. '<|end|>' → logprob: -7.764959812164307
    8. '=y' → logprob: -8.264959335327148
    9. '<|end|>' → logprob: -8.389959335327148
    10. ' y' → logprob: -8.639959335327148

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2295697033405304
    2. '5' → logprob: -1.729569673538208
    3. '<|end|>' → logprob: -4.229569911956787
    4. '   ' → logprob: -4.979569911956787
    5. ' ' → logprob: -6.354569911956787
    6. '```' → logprob: -6.479569911956787
    7. ' ,' → logprob: -7.479569911956787
    8. ')' → logprob: -7.604569911956787
    9. '<|end|>' → logprob: -7.729569911956787
    10. '[' → logprob: -7.854569911956787

Token 588: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25331905484199524
    2. '5' → logprob: -1.5033190250396729
    3. ' ' → logprob: -6.628319263458252
    4. '```' → logprob: -10.503318786621094
    5. '<|end|>' → logprob: -11.628318786621094
    6. '   ' → logprob: -11.628318786621094
    7. '[' → logprob: -11.753318786621094
    8. '  ' → logprob: -12.878318786621094
    9. '#' → logprob: -13.503318786621094
    10. '`' → logprob: -13.628318786621094

Token 589: ':x' (ID: 73587)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7725643515586853
    2. ':y' → logprob: -0.7725643515586853
    3. ':' → logprob: -3.52256441116333
    4. 'x' → logprob: -3.52256441116333
    5. ''y' → logprob: -5.39756441116333
    6. '=y' → logprob: -5.77256441116333
    7. ':x' → logprob: -6.52256441116333
    8. ' y' → logprob: -6.52256441116333
    9. ',y' → logprob: -6.52256441116333
    10. '<|end|>' → logprob: -6.77256441116333

Token 590: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6801387667655945
    2. ',' → logprob: -0.9301387667655945
    3. '6' → logprob: -2.6801388263702393
    4. ' ' → logprob: -5.05513858795166
    5. ' ,' → logprob: -5.18013858795166
    6. '<|end|>' → logprob: -5.43013858795166
    7. ')' → logprob: -5.80513858795166
    8. '       ' → logprob: -6.55513858795166
    9. '[' → logprob: -6.80513858795166
    10. '7' → logprob: -6.93013858795166

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08001505583524704
    2. 'count' → logprob: -3.580014944076538
    3. 'if' → logprob: -4.080015182495117
    4. 'for' → logprob: -4.580015182495117
    5. ' if' → logprob: -4.955015182495117
    6. ' for' → logprob: -4.955015182495117
    7. 'def' → logprob: -6.455015182495117
    8. ' count' → logprob: -6.705015182495117
    9. '
' → logprob: -6.955015182495117
    10. '#' → logprob: -7.205015182495117

Token 592: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16899113357067108
    2. 'count' → logprob: -2.1689910888671875
    3. 'cnt' → logprob: -3.7939910888671875
    4. 'if' → logprob: -5.1689910888671875
    5. 'mask' → logprob: -5.4189910888671875
    6. ' count' → logprob: -6.4189910888671875
    7. 'y' → logprob: -6.5439910888671875
    8. 'for' → logprob: -7.1689910888671875
    9. 'def' → logprob: -7.2939910888671875
    10. ' cnt' → logprob: -7.4189910888671875

Token 593: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8065464496612549
    2. ' fixed' → logprob: -1.8065464496612549
    3. 'mask' → logprob: -1.9315464496612549
    4. ' mask' → logprob: -2.431546449661255
    5. 'fixed' → logprob: -2.556546449661255
    6. '#' → logprob: -3.806546449661255
    7. 'if' → logprob: -4.556546211242676
    8. ' #' → logprob: -4.681546211242676
    9. 'y' → logprob: -4.806546211242676
    10. '
' → logprob: -5.306546211242676

Token 594: ' byte' (ID: 9239)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9883198142051697
    2. 'def' → logprob: -1.3633198738098145
    3. 'b' → logprob: -1.8633198738098145
    4. ' if' → logprob: -2.9883198738098145
    5. ' two' → logprob: -3.1133198738098145
    6. '2' → logprob: -3.3633198738098145
    7. 'byte' → logprob: -3.9883198738098145
    8. 'bit' → logprob: -4.3633198738098145
    9. ' ' → logprob: -4.8633198738098145
    10. ' b' → logprob: -4.9883198738098145

Token 595: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8354642987251282
    2. '[' → logprob: -1.4604642391204834
    3. ' =' → logprob: -1.8354642391204834
    4. '=' → logprob: -2.8354642391204834
    5. '   ' → logprob: -3.8354642391204834
    6. 'bits' → logprob: -4.0854644775390625
    7. 'fixed' → logprob: -4.3354644775390625
    8. '0' → logprob: -4.7104644775390625
    9. '_bits' → logprob: -4.7104644775390625
    10. ' fixed' → logprob: -5.0854644775390625

Token 596: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19272921979427338
    2. '[' → logprob: -2.9427292346954346
    3. '=' → logprob: -3.3177292346954346
    4. '0' → logprob: -3.3177292346954346
    5. 'def' → logprob: -3.4427292346954346
    6. '   ' → logprob: -5.1927289962768555
    7. ' ' → logprob: -5.4427289962768555
    8. '=[' → logprob: -6.1927289962768555
    9. ':' → logprob: -7.1927289962768555
    10. '#' → logprob: -7.1927289962768555

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6697804927825928
    2. '[' → logprob: -1.1697804927825928
    3. ' [' → logprob: -2.4197804927825928
    4. ' ' → logprob: -3.6697804927825928
    5. '0' → logprob: -4.419780731201172
    6. ' ['' → logprob: -4.544780731201172
    7. '    ' → logprob: -4.919780731201172
    8. ' #' → logprob: -5.294780731201172
    9. '['' → logprob: -5.419780731201172
    10. 'b' → logprob: -5.794780731201172

Token 598: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8660225868225098
    2. 'if' → logprob: -1.9910225868225098
    3. '   ' → logprob: -2.1160225868225098
    4. '1' → logprob: -2.8660225868225098
    5. ' [' → logprob: -2.9910225868225098
    6. 'b' → logprob: -2.9910225868225098
    7. '['' → logprob: -3.3660225868225098
    8. ' if' → logprob: -3.7410225868225098
    9. ''' → logprob: -3.8660225868225098
    10. ' b' → logprob: -4.11602258682251

Token 599: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49783724546432495
    2. '[' → logprob: -1.7478373050689697
    3. 'if' → logprob: -2.7478373050689697
    4. ' ' → logprob: -3.3728373050689697
    5. ' if' → logprob: -3.6228373050689697
    6. '#' → logprob: -4.247837066650391
    7. '1' → logprob: -4.372837066650391
    8. 'b' → logprob: -4.622837066650391
    9. 'def' → logprob: -4.622837066650391
    10. '0' → logprob: -4.747837066650391

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21270309388637543
    2. '[' → logprob: -1.8377031087875366
    3. ' ' → logprob: -3.837702989578247
    4. '=' → logprob: -5.837703227996826
    5. ' =' → logprob: -5.962703227996826
    6. 's' → logprob: -6.462703227996826
    7. '2' → logprob: -6.587703227996826
    8. 'def' → logprob: -6.837703227996826
    9. ' [' → logprob: -8.462702751159668
    10. '6' → logprob: -8.712702751159668

Token 601: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.732063889503479
    2. ' =' → logprob: -0.982063889503479
    3. ' ==' → logprob: -2.2320637702941895
    4. '==' → logprob: -3.4820637702941895
    5. '='' → logprob: -5.8570637702941895
    6. '=='' → logprob: -7.2320637702941895
    7. '[' → logprob: -7.4820637702941895
    8. ' ' → logprob: -7.7320637702941895
    9. ''' → logprob: -8.107064247131348
    10. 'def' → logprob: -8.482064247131348

Token 602: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0030076538678258657
    2. '1' → logprob: -6.128007888793945
    3. ' '' → logprob: -7.253007888793945
    4. '0' → logprob: -9.503007888793945
    5. ' ' → logprob: -11.253007888793945
    6. '"' → logprob: -11.878007888793945
    7. '`' → logprob: -12.253007888793945
    8. '['' → logprob: -12.378007888793945
    9. '='' → logprob: -13.878007888793945
    10. '('' → logprob: -14.003007888793945

Token 603: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9986357092857361
    2. '   ' → logprob: -1.1236357688903809
    3. ' bit' → logprob: -1.6236357688903809
    4. '1' → logprob: -3.373635768890381
    5. ',' → logprob: -3.873635768890381
    6. 'bit' → logprob: -3.998635768890381
    7. '0' → logprob: -4.498635768890381
    8. '    ' → logprob: -5.248635768890381
    9. '<|end|>' → logprob: -5.373635768890381
    10. ' ,' → logprob: -5.498635768890381

Token 605: ' #' (ID: 1069)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.35419002175331116
    2. ' ' → logprob: -1.9791899919509888
    3. 'bit' → logprob: -2.4791901111602783
    4. ' if' → logprob: -3.6041901111602783
    5. '1' → logprob: -3.7291901111602783
    6. '   ' → logprob: -4.729189872741699
    7. '0' → logprob: -5.354189872741699
    8. 'if' → logprob: -5.479189872741699
    9. '    ' → logprob: -5.854189872741699
    10. ',' → logprob: -7.354189872741699

Token 606: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.891633927822113
    2. 'bit' → logprob: -1.3916339874267578
    3. 'if' → logprob: -1.5166339874267578
    4. ' bit' → logprob: -2.891633987426758
    5. ' if' → logprob: -3.641633987426758
    6. 'b' → logprob: -4.016633987426758
    7. ' ' → logprob: -4.641633987426758
    8. 'def' → logprob: -4.766633987426758
    9. ' b' → logprob: -6.266633987426758
    10. '   ' → logprob: -6.891633987426758

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003290948225185275
    2. ' ' → logprob: -5.753291130065918
    3. '=' → logprob: -10.003291130065918
    4. ' =' → logprob: -11.128291130065918
    5. '[' → logprob: -11.503291130065918
    6. '   ' → logprob: -11.878291130065918
    7. '  ' → logprob: -12.003291130065918
    8. '<|end|>' → logprob: -12.003291130065918
    9. ')' → logprob: -12.128291130065918
    10. '0' → logprob: -12.753291130065918

Token 608: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010722271399572492
    2. ' =' → logprob: -6.876072406768799
    3. '==' → logprob: -10.25107192993164
    4. '='' → logprob: -13.87607192993164
    5. '=
' → logprob: -14.00107192993164
    6. ' ==' → logprob: -14.00107192993164
    7. 'def' → logprob: -14.12607192993164
    8. '=True' → logprob: -15.12607192993164
    9. ' ' → logprob: -16.37607192993164
    10. ')' → logprob: -16.87607192993164

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -10.000096321105957
    3. '0' → logprob: -10.375096321105957
    4. ''' → logprob: -11.000096321105957
    5. '<|end|>' → logprob: -14.500096321105957
    6. '   ' → logprob: -15.125096321105957
    7. '`' → logprob: -15.125096321105957
    8. '  ' → logprob: -15.375096321105957
    9. '"' → logprob: -15.375096321105957
    10. '<|end|>' → logprob: -15.750096321105957

Token 610: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03466147556900978
    2. ',' → logprob: -3.5346615314483643
    3. '<|end|>' → logprob: -6.409661293029785
    4. '
' → logprob: -6.784661293029785
    5. ' ' → logprob: -7.784661293029785
    6. ',
' → logprob: -8.284661293029785
    7. '#' → logprob: -8.284661293029785
    8. '  ' → logprob: -8.534661293029785
    9. 'def' → logprob: -8.534661293029785
    10. ')' → logprob: -8.784661293029785

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002593254204839468
    2. '```' → logprob: -7.377593040466309
    3. ' ' → logprob: -7.627593040466309
    4. 'def' → logprob: -7.752593040466309
    5. '#' → logprob: -8.377593040466309
    6. '[' → logprob: -9.002593040466309
    7. 'for' → logprob: -9.127593040466309
    8. ' for' → logprob: -9.377593040466309
    9. ')' → logprob: -9.377593040466309
    10. '    ' → logprob: -9.752593040466309

Token 612: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3992379605770111
    2. ' bit' → logprob: -2.399237871170044
    3. ' if' → logprob: -2.774237871170044
    4. 'if' → logprob: -2.899237871170044
    5. 'bit' → logprob: -2.899237871170044
    6. '2' → logprob: -3.649237871170044
    7. ' ' → logprob: -4.399238109588623
    8. ' for' → logprob: -4.774238109588623
    9. 'def' → logprob: -4.899238109588623
    10. 'for' → logprob: -5.774238109588623

Token 613: ' bit' (ID: 3546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8888816833496094
    2. 'bit' → logprob: -1.3888816833496094
    3. ' bit' → logprob: -2.2638816833496094
    4. ' if' → logprob: -2.2638816833496094
    5. '2' → logprob: -2.8888816833496094
    6. 'def' → logprob: -3.3888816833496094
    7. '   ' → logprob: -4.513881683349609
    8. 'b' → logprob: -5.138881683349609
    9. 'for' → logprob: -5.263881683349609
    10. ' ' → logprob: -5.263881683349609

Token 614: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '[' → logprob: -13.500004768371582
    4. '0' → logprob: -15.125004768371582
    5. '5' → logprob: -15.500004768371582
    6. '=' → logprob: -17.1250057220459
    7. ':' → logprob: -17.2500057220459
    8. '```' → logprob: -17.5000057220459
    9. '   ' → logprob: -18.6250057220459
    10. '  ' → logprob: -18.7500057220459

Token 615: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010693227872252464
    2. ' =' → logprob: -4.635693073272705
    3. '='' → logprob: -7.135693073272705
    4. '==' → logprob: -10.010693550109863
    5. '=True' → logprob: -11.010693550109863
    6. '=
' → logprob: -11.260693550109863
    7. ' ==' → logprob: -11.385693550109863
    8. ' ='' → logprob: -11.635693550109863
    9. ' ' → logprob: -12.135693550109863
    10. ' '='' → logprob: -12.260693550109863

Token 616: '3' (ID: 18)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.20175693929195404
    2. '2' → logprob: -1.9517569541931152
    3. '1' → logprob: -4.201756954193115
    4. '3' → logprob: -4.201756954193115
    5. ''' → logprob: -5.576756954193115
    6. ' bit' → logprob: -6.326756954193115
    7. '6' → logprob: -6.951756954193115
    8. '0' → logprob: -7.326756954193115
    9. ' ' → logprob: -7.451756954193115
    10. 'b' → logprob: -7.451756954193115

Token 617: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3213949203491211
    2. ',' → logprob: -1.946394920349121
    3. ' =' → logprob: -2.946394920349121
    4. '4' → logprob: -3.821394920349121
    5. ',y' → logprob: -4.196394920349121
    6. '='' → logprob: -4.321394920349121
    7. ':' → logprob: -4.696394920349121
    8. 'y' → logprob: -5.196394920349121
    9. '=y' → logprob: -5.446394920349121
    10. ''y' → logprob: -6.446394920349121

Token 618: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.750032424926758
    3. '5' → logprob: -12.250032424926758
    4. '2' → logprob: -12.375032424926758
    5. '<|end|>' → logprob: -14.625032424926758
    6. '[' → logprob: -15.000032424926758
    7. '```' → logprob: -15.500032424926758
    8. '#' → logprob: -15.750032424926758
    9. '<|end|>' → logprob: -16.000032424926758
    10. '
' → logprob: -16.250032424926758

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10640992969274521
    2. '='' → logprob: -3.106410026550293
    3. ',' → logprob: -3.231410026550293
    4. ' =' → logprob: -4.731410026550293
    5. ',y' → logprob: -6.606410026550293
    6. '=True' → logprob: -6.856410026550293
    7. '=x' → logprob: -6.856410026550293
    8. ',x' → logprob: -7.106410026550293
    9. '=',' → logprob: -7.106410026550293
    10. '=['' → logprob: -7.856410026550293

Token 620: ' y' (ID: 342)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.08424026519060135
    2. ''x' → logprob: -2.709240198135376
    3. ' '' → logprob: -5.459240436553955
    4. 'y' → logprob: -5.584240436553955
    5. ''' → logprob: -6.209240436553955
    6. 'x' → logprob: -6.709240436553955
    7. ''b' → logprob: -6.709240436553955
    8. '‘y' → logprob: -7.209240436553955
    9. '['' → logprob: -8.209239959716797
    10. '1' → logprob: -8.709239959716797

Token 621: ' bits' (ID: 18189)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8335878849029541
    2. '   ' → logprob: -1.458587884902954
    3. '<|end|>' → logprob: -2.333587884902954
    4. ' if' → logprob: -2.583587884902954
    5. 'if' → logprob: -2.958587884902954
    6. '
' → logprob: -3.958587884902954
    7. '=' → logprob: -4.583587646484375
    8. ' =' → logprob: -4.708587646484375
    9. ' ' → logprob: -4.833587646484375
    10. ')' → logprob: -4.833587646484375

Token 622: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1910596340894699
    2. ',' → logprob: -2.0660595893859863
    3. 'count' → logprob: -4.941059589385986
    4. 'for' → logprob: -5.066059589385986
    5. ' for' → logprob: -5.191059589385986
    6. 'def' → logprob: -5.566059589385986
    7. '
' → logprob: -5.691059589385986
    8. 'if' → logprob: -5.816059589385986
    9. ' ' → logprob: -5.816059589385986
    10. ' if' → logprob: -6.066059589385986

Token 623: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.129876509308815
    2. ' least' → logprob: -2.2548766136169434
    3. '[' → logprob: -5.379876613616943
    4. '6' → logprob: -5.379876613616943
    5. 'positions' → logprob: -6.629876613616943
    6. ' [' → logprob: -6.754876613616943
    7. '0' → logprob: -7.254876613616943
    8. ' positions' → logprob: -7.504876613616943
    9. '   ' → logprob: -7.754876613616943
    10. 'indices' → logprob: -8.004876136779785

Token 625: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.20581045746803284
    2. ' one' → logprob: -1.7058104276657104
    3. '1' → logprob: -5.455810546875
    4. 'not' → logprob: -9.455810546875
    5. '_one' → logprob: -11.080810546875
    6. 'One' → logprob: -11.455810546875
    7. '0' → logprob: -12.580810546875
    8. 'some' → logprob: -12.955810546875
    9. '```' → logprob: -13.955810546875
    10. '<|end|>' → logprob: -13.955810546875

Token 626: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.320388913154602
    2. 'y' → logprob: -1.320388913154602
    3. '0' → logprob: -2.3203887939453125
    4. ' y' → logprob: -2.4453887939453125
    5. ' ' → logprob: -2.8203887939453125
    6. '=' → logprob: -2.8203887939453125
    7. 'b' → logprob: -3.3203887939453125
    8. ' is' → logprob: -3.9453887939453125
    9. 'True' → logprob: -4.4453887939453125
    10. '6' → logprob: -4.5703887939453125

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7907204031944275
    2. '0' → logprob: -1.1657204627990723
    3. 'y' → logprob: -2.1657204627990723
    4. '<|end|>' → logprob: -2.6657204627990723
    5. '=' → logprob: -3.9157204627990723
    6. '<|end|>' → logprob: -5.665720462799072
    7. ')' → logprob: -5.790720462799072
    8. '(' → logprob: -5.790720462799072
    9. '==' → logprob: -6.040720462799072
    10. ''' → logprob: -6.290720462799072

Token 628: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.148642435669899
    2. '6' → logprob: -2.3986425399780273
    3. ' ' → logprob: -3.7736425399780273
    4. '<|end|>' → logprob: -5.023642539978027
    5. '#' → logprob: -5.273642539978027
    6. 'def' → logprob: -6.148642539978027
    7. ',' → logprob: -6.773642539978027
    8. '[' → logprob: -6.773642539978027
    9. '       ' → logprob: -7.148642539978027
    10. ')' → logprob: -7.273642539978027

Token 630: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06329285353422165
    2. 'count' → logprob: -3.4382927417755127
    3. ' bit' → logprob: -4.813292980194092
    4. 'def' → logprob: -5.188292980194092
    5. ' count' → logprob: -5.938292980194092
    6. ' ' → logprob: -5.938292980194092
    7. 'bit' → logprob: -6.188292980194092
    8. ' if' → logprob: -6.688292980194092
    9. '6' → logprob: -6.938292980194092
    10. 'if' → logprob: -6.938292980194092

Token 631: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6952640414237976
    2. 'count' → logprob: -1.5702641010284424
    3. ' count' → logprob: -2.3202641010284424
    4. ' cnt' → logprob: -2.3202641010284424
    5. 'cnt' → logprob: -3.5702641010284424
    6. ' if' → logprob: -4.570263862609863
    7. ' #' → logprob: -4.820263862609863
    8. 'def' → logprob: -4.820263862609863
    9. 'if' → logprob: -4.945263862609863
    10. '       ' → logprob: -5.070263862609863

Token 632: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.576873758807778e-05
    2. '0' → logprob: -10.500075340270996
    3. ' ' → logprob: -10.500075340270996
    4. '1' → logprob: -12.500075340270996
    5. '4' → logprob: -12.687575340270996
    6. '2' → logprob: -13.062575340270996
    7. ' five' → logprob: -13.437575340270996
    8. '
' → logprob: -13.500075340270996
    9. 'five' → logprob: -13.812575340270996
    10. '５' → logprob: -14.500075340270996

Token 633: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18716928362846375
    2. ' =' → logprob: -1.8121693134307861
    3. ' ==' → logprob: -5.562169075012207
    4. '==' → logprob: -5.937169075012207
    5. ',' → logprob: -7.812169075012207
    6. ')' → logprob: -8.812169075012207
    7. '='' → logprob: -9.937169075012207
    8. '<|end|>' → logprob: -10.312169075012207
    9. ' in' → logprob: -10.562169075012207
    10. '   ' → logprob: -10.687169075012207

Token 634: ' x' (ID: 1215)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.07207046449184418
    2. 'x' → logprob: -2.822070360183716
    3. ''' → logprob: -5.822070598602295
    4. '0' → logprob: -5.947070598602295
    5. ''b' → logprob: -6.197070598602295
    6. ' '' → logprob: -6.822070598602295
    7. 'b' → logprob: -8.072070121765137
    8. '"x' → logprob: -8.072070121765137
    9. ' x' → logprob: -8.572070121765137
    10. '['' → logprob: -8.697070121765137

Token 635: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041192542761564255
    2. '<|end|>' → logprob: -3.7911925315856934
    3. 'def' → logprob: -4.416192531585693
    4. '
' → logprob: -7.041192531585693
    5. ' if' → logprob: -7.291192531585693
    6. 'count' → logprob: -7.541192531585693
    7. ',' → logprob: -8.041193008422852
    8. '    
' → logprob: -8.291193008422852
    9. ' def' → logprob: -8.291193008422852
    10. '\t' → logprob: -8.416193008422852

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009412388317286968
    2. '<|end|>' → logprob: -7.750941276550293
    3. 'def' → logprob: -8.875941276550293
    4. ' ' → logprob: -9.500941276550293
    5. '    
' → logprob: -9.875941276550293
    6. ',' → logprob: -10.125941276550293
    7. '    ' → logprob: -10.375941276550293
    8. ')' → logprob: -10.625941276550293
    9. '
' → logprob: -10.750941276550293
    10. '  ' → logprob: -11.000941276550293

Token 637: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046731531620025635
    2. 'count' → logprob: -4.171731472015381
    3. 'def' → logprob: -4.796731472015381
    4. 'if' → logprob: -5.171731472015381
    5. ' count' → logprob: -5.421731472015381
    6. 'cnt' → logprob: -5.421731472015381
    7. ' if' → logprob: -5.546731472015381
    8. ' cnt' → logprob: -6.171731472015381
    9. ' ' → logprob: -8.671731948852539
    10. '
' → logprob: -8.671731948852539

Token 638: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4862954616546631
    2. 'count' → logprob: -1.986295461654663
    3. ' count' → logprob: -3.361295461654663
    4. 'cnt' → logprob: -3.361295461654663
    5. ' cnt' → logprob: -3.361295461654663
    6. ' #' → logprob: -3.611295461654663
    7. 'def' → logprob: -3.986295461654663
    8. '#' → logprob: -3.986295461654663
    9. 'if' → logprob: -3.986295461654663
    10. ' if' → logprob: -4.111295700073242

Token 639: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00017112065688706934
    2. '5' → logprob: -10.125170707702637
    3. ' ' → logprob: -10.125170707702637
    4. '1' → logprob: -11.125170707702637
    5. '=' → logprob: -11.125170707702637
    6. '0' → logprob: -11.500170707702637
    7. '[' → logprob: -11.625170707702637
    8. '...' → logprob: -12.000170707702637
    9. '2' → logprob: -12.062670707702637
    10. '7' → logprob: -12.562670707702637

Token 640: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06410881876945496
    2. ' =' → logprob: -2.8141088485717773
    3. ',' → logprob: -7.189108848571777
    4. '=True' → logprob: -7.814108848571777
    5. '='' → logprob: -7.814108848571777
    6. '=
' → logprob: -8.814108848571777
    7. '6' → logprob: -9.439108848571777
    8. '=False' → logprob: -9.939108848571777
    9. '==' → logprob: -10.064108848571777
    10. '   ' → logprob: -10.064108848571777

Token 641: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5518494248390198
    2. '7' → logprob: -1.301849365234375
    3. ' ' → logprob: -1.926849365234375
    4. '5' → logprob: -5.551849365234375
    5. '<|end|>' → logprob: -7.051849365234375
    6. 'b' → logprob: -7.426849365234375
    7. '0' → logprob: -8.426849365234375
    8. '1' → logprob: -9.051849365234375
    9. 'bit' → logprob: -9.426849365234375
    10. '    ' → logprob: -9.426849365234375

Token 642: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39668843150138855
    2. ' =' → logprob: -1.146688461303711
    3. ',' → logprob: -5.396688461303711
    4. '='' → logprob: -5.771688461303711
    5. ':' → logprob: -7.521688461303711
    6. ' ='' → logprob: -8.521688461303711
    7. '=
' → logprob: -8.771688461303711
    8. '=['' → logprob: -9.021688461303711
    9. 'x' → logprob: -9.271688461303711
    10. ')' → logprob: -9.396688461303711

Token 643: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.015969736501574516
    2. 'be' → logprob: -4.515969753265381
    3. '=' → logprob: -5.890969753265381
    4. ' =' → logprob: -6.515969753265381
    5. ' or' → logprob: -8.265969276428223
    6. ' ' → logprob: -9.390969276428223
    7. ' either' → logprob: -10.015969276428223
    8. ' any' → logprob: -10.015969276428223
    9. 'x' → logprob: -10.390969276428223
    10. ' x' → logprob: -10.640969276428223

Token 644: ' anything' (ID: 6137)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8323296904563904
    2. ''x' → logprob: -1.9573297500610352
    3. ''' → logprob: -2.082329750061035
    4. ' ' → logprob: -2.832329750061035
    5. ' any' → logprob: -2.832329750061035
    6. 'x' → logprob: -2.957329750061035
    7. 'any' → logprob: -3.207329750061035
    8. ' x' → logprob: -3.332329750061035
    9. ' '' → logprob: -3.957329750061035
    10. ' anything' → logprob: -4.582329750061035

Token 645: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06870449334383011
    2. 'def' → logprob: -3.068704605102539
    3. ':' → logprob: -6.193704605102539
    4. ',' → logprob: -6.318704605102539
    5. '[' → logprob: -6.443704605102539
    6. ' ' → logprob: -6.443704605102539
    7. ' 
' → logprob: -6.693704605102539
    8. ' if' → logprob: -6.693704605102539
    9. '
' → logprob: -6.818704605102539
    10. ' def' → logprob: -6.818704605102539

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017437821254134178
    2. ' if' → logprob: -5.142437934875488
    3. ' for' → logprob: -5.767437934875488
    4. 'count' → logprob: -6.142437934875488
    5. ' count' → logprob: -6.392437934875488
    6. 'if' → logprob: -6.517437934875488
    7. 'def' → logprob: -7.142437934875488
    8. 'for' → logprob: -7.517437934875488
    9. '
' → logprob: -7.892437934875488
    10. '    
' → logprob: -8.392437934875488

Token 647: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03858266398310661
    2. ' ' → logprob: -3.7885825634002686
    3. ' if' → logprob: -5.038582801818848
    4. '[' → logprob: -6.663582801818848
    5. '\t' → logprob: -6.788582801818848
    6. '  ' → logprob: -7.538582801818848
    7. '
' → logprob: -7.538582801818848
    8. 'if' → logprob: -7.538582801818848
    9. '       ' → logprob: -7.788582801818848
    10. '    ' → logprob: -7.788582801818848

Token 648: ' Wait' (ID: 24305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12782953679561615
    2. ' if' → logprob: -3.7528295516967773
    3. ' #' → logprob: -4.002829551696777
    4. 'def' → logprob: -4.002829551696777
    5. ' for' → logprob: -4.252829551696777
    6. ' ' → logprob: -4.752829551696777
    7. ' def' → logprob: -5.127829551696777
    8. ' count' → logprob: -5.752829551696777
    9. ' return' → logprob: -5.752829551696777
    10. ' b' → logprob: -5.877829551696777

Token 649: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' pattern' (ID: 8302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3328588306903839
    2. ' return' → logprob: -1.9578588008880615
    3. ' for' → logprob: -3.4578588008880615
    4. 'def' → logprob: -3.9578588008880615
    5. 'return' → logprob: -4.207859039306641
    6. '#' → logprob: -4.332859039306641
    7. ' pass' → logprob: -4.832859039306641
    8. ' #' → logprob: -4.957859039306641
    9. '    ' → logprob: -5.082859039306641
    10. ' if' → logprob: -5.082859039306641

Token 651: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4251822531223297
    2. '=' → logprob: -1.1751822233200073
    3. '[' → logprob: -3.675182342529297
    4. ':' → logprob: -5.175182342529297
    5. 'b' → logprob: -6.175182342529297
    6. 'def' → logprob: -7.425182342529297
    7. '...' → logprob: -8.050182342529297
    8. '=[' → logprob: -8.050182342529297
    9. ' ' → logprob: -8.175182342529297
    10. ',' → logprob: -8.300182342529297

Token 652: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21064943075180054
    2. ' [' → logprob: -2.5856494903564453
    3. 'b' → logprob: -3.5856494903564453
    4. '[
' → logprob: -3.8356494903564453
    5. '110' → logprob: -3.8356494903564453
    6. ' ' → logprob: -4.710649490356445
    7. ' b' → logprob: -4.710649490356445
    8. ''' → logprob: -5.210649490356445
    9. '(' → logprob: -5.585649490356445
    10. '   ' → logprob: -5.960649490356445

Token 653: '110' (ID: 7920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25719594955444336
    2. ''' → logprob: -2.6321959495544434
    3. '110' → logprob: -2.6321959495544434
    4. '1' → logprob: -3.6321959495544434
    5. '[
' → logprob: -4.007195949554443
    6. '`' → logprob: -4.632195949554443
    7. '"' → logprob: -4.757195949554443
    8. 'b' → logprob: -5.382195949554443
    9. ' ' → logprob: -5.882195949554443
    10. '(' → logprob: -6.382195949554443

Token 654: 'yyyy' (ID: 27343)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.536442518234253
    2. ',' → logprob: -1.786442518234253
    3. ' ' → logprob: -2.036442518234253
    4. '0' → logprob: -2.286442518234253
    5. '<|end|>' → logprob: -2.411442518234253
    6. '1' → logprob: -3.161442518234253
    7. '=' → logprob: -3.161442518234253
    8. '[' → logprob: -3.786442518234253
    9. '111' → logprob: -3.911442518234253
    10. '   ' → logprob: -3.911442518234253

Token 655: 'x' (ID: 87)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6735206842422485
    2. ' ' → logprob: -2.423520565032959
    3. '<|end|>' → logprob: -2.548520565032959
    4. '[' → logprob: -2.673520565032959
    5. ',' → logprob: -3.173520565032959
    6. ':' → logprob: -3.298520565032959
    7. '7' → logprob: -3.798520565032959
    8. ':
' → logprob: -4.048520565032959
    9. ' =' → logprob: -4.173520565032959
    10. 'x' → logprob: -4.173520565032959

Token 656: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14922626316547394
    2. 'if' → logprob: -3.024226188659668
    3. '#' → logprob: -4.149226188659668
    4. ' if' → logprob: -4.274226188659668
    5. 'count' → logprob: -4.274226188659668
    6. 'cnt' → logprob: -4.524226188659668
    7. '=' → logprob: -5.024226188659668
    8. 'b' → logprob: -5.149226188659668
    9. ' =' → logprob: -5.524226188659668
    10. 'def' → logprob: -5.649226188659668

Token 657: ' bits' (ID: 18189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.162175178527832
    2. ' b' → logprob: -1.162175178527832
    3. '[' → logprob: -2.037175178527832
    4. ' [' → logprob: -2.662175178527832
    5. ' ' → logprob: -3.662175178527832
    6. '#' → logprob: -3.912175178527832
    7. '['' → logprob: -4.037175178527832
    8. ' return' → logprob: -4.287175178527832
    9. ' #' → logprob: -4.287175178527832
    10. 'return' → logprob: -4.412175178527832

Token 658: ':' (ID: 25)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.599355936050415
    2. '0' → logprob: -0.849355936050415
    3. '[' → logprob: -4.224355697631836
    4. ' ' → logprob: -4.849355697631836
    5. '2' → logprob: -8.849355697631836
    6. '=' → logprob: -9.099355697631836
    7. ' =' → logprob: -9.224355697631836
    8. '5' → logprob: -9.474355697631836
    9. '(' → logprob: -9.599355697631836
    10. '67' → logprob: -10.724355697631836

Token 659: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0267397165298462
    2. ' ' → logprob: -1.4017397165298462
    3. '1' → logprob: -1.5267397165298462
    4. ' [' → logprob: -2.9017395973205566
    5. '0' → logprob: -3.1517395973205566
    6. ''' → logprob: -3.4017395973205566
    7. '['' → logprob: -3.5267395973205566
    8. ' '' → logprob: -4.651739597320557
    9. ' ['' → logprob: -5.401739597320557
    10. '110' → logprob: -6.401739597320557

Token 660: '1' (ID: 16)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.0825542211532593
    2. ''' → logprob: -1.4575542211532593
    3. '1' → logprob: -1.5825542211532593
    4. '[' → logprob: -1.5825542211532593
    5. '0' → logprob: -4.332554340362549
    6. '[
' → logprob: -6.457554340362549
    7. ' ' → logprob: -7.582554340362549
    8. '`' → logprob: -8.08255386352539
    9. '110' → logprob: -8.33255386352539
    10. ' '' → logprob: -8.33255386352539

Token 661: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5544449687004089
    2. '1' → logprob: -1.1794450283050537
    3. ':' → logprob: -2.8044450283050537
    4. ',' → logprob: -3.6794450283050537
    5. ' ' → logprob: -4.054444789886475
    6. '110' → logprob: -4.929444789886475
    7. '10' → logprob: -6.304444789886475
    8. '=' → logprob: -7.054444789886475
    9. '100' → logprob: -7.304444789886475
    10. '[' → logprob: -7.304444789886475

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041458409396000206
    2. '10' → logprob: -8.375414848327637
    3. ' ' → logprob: -8.875414848327637
    4. '0' → logprob: -10.625414848327637
    5. ',' → logprob: -11.750414848327637
    6. 'true' → logprob: -13.000414848327637
    7. '   ' → logprob: -13.125414848327637
    8. '2' → logprob: -13.937914848327637
    9. '```' → logprob: -14.000414848327637
    10. '  ' → logprob: -14.437914848327637

Token 663: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00562359718605876
    2. ' ' → logprob: -5.255623817443848
    3. '1' → logprob: -7.880623817443848
    4. '   ' → logprob: -12.505623817443848
    5. '6' → logprob: -13.630623817443848
    6. '10' → logprob: -13.630623817443848
    7. '  ' → logprob: -13.943123817443848
    8. '    ' → logprob: -14.255623817443848
    9. '00' → logprob: -14.693123817443848
    10. '2' → logprob: -14.755623817443848

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016885579680092633
    2. '1' → logprob: -8.875168800354004
    3. '6' → logprob: -11.500168800354004
    4. ' ' → logprob: -11.500168800354004
    5. '10' → logprob: -12.375168800354004
    6. '2' → logprob: -13.750168800354004
    7. ''' → logprob: -14.812668800354004
    8. '```' → logprob: -14.937668800354004
    9. 'bit' → logprob: -15.437668800354004
    10. '   ' → logprob: -15.500168800354004

Token 665: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24332261085510254
    2. '0' → logprob: -2.1183226108551025
    3. '1' → logprob: -2.8683226108551025
    4. '<|end|>' → logprob: -4.493322372436523
    5. '6' → logprob: -5.243322372436523
    6. 'x' → logprob: -5.368322372436523
    7. '110' → logprob: -5.493322372436523
    8. ' x' → logprob: -5.868322372436523
    9. '7' → logprob: -6.118322372436523
    10. ',' → logprob: -6.118322372436523

Token 666: ' y' (ID: 342)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7167088985443115
    2. '0' → logprob: -2.0917088985443115
    3. ' ' → logprob: -2.0917088985443115
    4. ',' → logprob: -2.2167088985443115
    5. '5' → logprob: -2.4667088985443115
    6. '[' → logprob: -3.7167088985443115
    7. '2' → logprob: -4.216709136962891
    8. 'x' → logprob: -5.216709136962891
    9. '1' → logprob: -5.466709136962891
    10. 'y' → logprob: -5.591709136962891

Token 667: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6297717094421387
    2. '6' → logprob: -1.0047717094421387
    3. '2' → logprob: -3.3797717094421387
    4. '0' → logprob: -3.7547717094421387
    5. '5' → logprob: -3.8797717094421387
    6. ' x' → logprob: -5.254771709442139
    7. ',' → logprob: -5.379771709442139
    8. 'x' → logprob: -5.379771709442139
    9. '1' → logprob: -5.879771709442139
    10. '4' → logprob: -6.504771709442139

Token 668: ' x' (ID: 1215)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1941919326782227
    2. '[' → logprob: -1.4441919326782227
    3. '0' → logprob: -2.3191919326782227
    4. ' ' → logprob: -2.6941919326782227
    5. '<|end|>' → logprob: -2.6941919326782227
    6. 'x' → logprob: -2.9441919326782227
    7. '7' → logprob: -3.0691919326782227
    8. ',' → logprob: -3.1941919326782227
    9. '...' → logprob: -3.9441919326782227
    10. '2' → logprob: -3.9441919326782227

Token 669: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2721213102340698
    2. ' ' → logprob: -2.2721214294433594
    3. '<|end|>' → logprob: -3.0221214294433594
    4. '   ' → logprob: -4.397121429443359
    5. ':' → logprob: -4.647121429443359
    6. '0' → logprob: -4.647121429443359
    7. 'def' → logprob: -4.897121429443359
    8. '7' → logprob: -4.897121429443359
    9. ')' → logprob: -5.272121429443359
    10. '6' → logprob: -5.772121429443359

Token 670: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4736681878566742
    2. '2' → logprob: -2.348668098449707
    3. '[' → logprob: -2.598668098449707
    4. '<|end|>' → logprob: -2.598668098449707
    5. '7' → logprob: -3.098668098449707
    6. '0' → logprob: -3.223668098449707
    7. '6' → logprob: -3.848668098449707
    8. ')' → logprob: -4.848668098449707
    9. '1' → logprob: -5.973668098449707
    10. '  ' → logprob: -6.223668098449707

Token 671: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17407560348510742
    2. ' ' → logprob: -2.2990756034851074
    3. '0' → logprob: -3.9240756034851074
    4. ' =' → logprob: -5.174075603485107
    5. '<|end|>' → logprob: -5.174075603485107
    6. '7' → logprob: -5.299075603485107
    7. '=' → logprob: -5.424075603485107
    8. '2' → logprob: -6.049075603485107
    9. 'x' → logprob: -6.049075603485107
    10. '   ' → logprob: -6.049075603485107

Token 672: ' Actually' (ID: 50557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7737711071968079
    2. ' ' → logprob: -0.8987711071968079
    3. '0' → logprob: -3.398771047592163
    4. 'x' → logprob: -3.898771047592163
    5. 'b' → logprob: -4.023771286010742
    6. '1' → logprob: -4.648771286010742
    7. '7' → logprob: -4.898771286010742
    8. '<|end|>' → logprob: -5.023771286010742
    9. '2' → logprob: -5.148771286010742
    10. ')' → logprob: -5.773771286010742

Token 673: ' per' (ID: 777)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5517532825469971
    2. ' b' → logprob: -2.051753282546997
    3. '[' → logprob: -2.176753282546997
    4. '0' → logprob: -2.676753282546997
    5. 'b' → logprob: -2.676753282546997
    6. ' [' → logprob: -4.301753044128418
    7. '1' → logprob: -5.426753044128418
    8. ' y' → logprob: -5.801753044128418
    9. ' x' → logprob: -5.801753044128418
    10. 'import' → logprob: -6.051753044128418

Token 674: ' problem' (ID: 4792)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7637446522712708
    2. 'def' → logprob: -1.763744592666626
    3. '0' → logprob: -2.388744592666626
    4. '[' → logprob: -2.388744592666626
    5. '=' → logprob: -3.888744592666626
    6. '8' → logprob: -4.263744831085205
    7. 'line' → logprob: -4.513744831085205
    8. '```' → logprob: -4.513744831085205
    9. ' b' → logprob: -4.638744831085205
    10. '7' → logprob: -4.888744831085205

Token 675: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06888310611248016
    2. ' ' → logprob: -3.943883180618286
    3. '0' → logprob: -4.693882942199707
    4. 'b' → logprob: -5.068882942199707
    5. '#' → logprob: -5.193882942199707
    6. '<|end|>' → logprob: -5.193882942199707
    7. 'def' → logprob: -5.443882942199707
    8. ':' → logprob: -5.693882942199707
    9. ',' → logprob: -6.693882942199707
    10. ' [' → logprob: -6.818882942199707

Token 676: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07871769368648529
    2. '[' → logprob: -3.4537177085876465
    3. '0' → logprob: -4.2037177085876465
    4. 'b' → logprob: -5.3287177085876465
    5. '1' → logprob: -5.5787177085876465
    6. ' x' → logprob: -5.5787177085876465
    7. ' b' → logprob: -5.7037177085876465
    8. 'x' → logprob: -5.8287177085876465
    9. '<|end|>' → logprob: -6.0787177085876465
    10. '2' → logprob: -7.2037177085876465

Token 677: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0907781794667244
    2. '1' → logprob: -3.465778112411499
    3. '0' → logprob: -3.590778112411499
    4. '[' → logprob: -4.840778350830078
    5. ' x' → logprob: -5.340778350830078
    6. 'x' → logprob: -5.715778350830078
    7. 'b' → logprob: -6.215778350830078
    8. ' '' → logprob: -6.340778350830078
    9. ''' → logprob: -6.715778350830078
    10. ' [' → logprob: -7.340778350830078

Token 678: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40986862778663635
    2. '0' → logprob: -2.2848687171936035
    3. '[' → logprob: -2.5348687171936035
    4. '1' → logprob: -3.6598687171936035
    5. ' b' → logprob: -3.7848687171936035
    6. ' #' → logprob: -3.7848687171936035
    7. 'b' → logprob: -4.1598687171936035
    8. 'def' → logprob: -4.1598687171936035
    9. ' x' → logprob: -4.6598687171936035
    10. '#' → logprob: -4.9098687171936035

Token 679: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0450202226638794
    2. '[' → logprob: -1.4200202226638794
    3. '0' → logprob: -2.04502010345459
    4. '1' → logprob: -2.17002010345459
    5. 'b' → logprob: -3.79502010345459
    6. 'x' → logprob: -4.04502010345459
    7. '#' → logprob: -4.17002010345459
    8. 'def' → logprob: -4.17002010345459
    9. ' #' → logprob: -4.54502010345459
    10. '6' → logprob: -4.92002010345459

Token 680: ' bytes' (ID: 11643)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44617322087287903
    2. '2' → logprob: -1.5711731910705566
    3. '0' → logprob: -2.8211731910705566
    4. ' ' → logprob: -2.8211731910705566
    5. '110' → logprob: -4.446173191070557
    6. '10' → logprob: -5.696173191070557
    7. ',' → logprob: -5.946173191070557
    8. '   ' → logprob: -5.946173191070557
    9. '#' → logprob: -6.071173191070557
    10. '    ' → logprob: -6.446173191070557

Token 681: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5748577117919922
    2. ' ' → logprob: -1.8248577117919922
    3. 'def' → logprob: -2.324857711791992
    4. 'b' → logprob: -3.199857711791992
    5. ':' → logprob: -3.949857711791992
    6. '   ' → logprob: -4.074857711791992
    7. '<|end|>' → logprob: -4.199857711791992
    8. '0' → logprob: -4.574857711791992
    9. '=' → logprob: -4.699857711791992
    10. 'x' → logprob: -4.824857711791992

Token 682: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054499104619026184
    2. '1' → logprob: -4.67949914932251
    3. '0' → logprob: -4.92949914932251
    4. ' b' → logprob: -5.17949914932251
    5. '   ' → logprob: -5.17949914932251
    6. '[' → logprob: -5.30449914932251
    7. 'b' → logprob: -5.55449914932251
    8. ' x' → logprob: -5.67949914932251
    9. '    ' → logprob: -6.30449914932251
    10. 'x' → logprob: -6.67949914932251

Token 683: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5397029519081116
    2. '1' → logprob: -2.414702892303467
    3. '   ' → logprob: -2.414702892303467
    4. ''' → logprob: -2.789702892303467
    5. ' '' → logprob: -3.164702892303467
    6. '0' → logprob: -3.164702892303467
    7. ' b' → logprob: -3.664702892303467
    8. '[' → logprob: -4.164702892303467
    9. 'b' → logprob: -4.539702892303467
    10. '#' (adapté à ' #') → logprob: -5.039702892303467

Token 684: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22519677877426147
    2. '1' → logprob: -2.9751968383789062
    3. '   ' → logprob: -3.3501968383789062
    4. '[' → logprob: -3.9751968383789062
    5. ' #' → logprob: -3.9751968383789062
    6. ' b' → logprob: -3.9751968383789062
    7. '0' → logprob: -3.9751968383789062
    8. ' x' → logprob: -4.850196838378906
    9. 'b' → logprob: -5.100196838378906
    10. '#' → logprob: -5.225196838378906

Token 685: '110' (ID: 7920)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22212490439414978
    2. ' ' → logprob: -1.8471249341964722
    3. '0' → logprob: -3.9721248149871826
    4. ''' → logprob: -4.972125053405762
    5. ' '' → logprob: -5.847125053405762
    6. 'x' → logprob: -6.222125053405762
    7. ' x' → logprob: -6.222125053405762
    8. '[' → logprob: -6.597125053405762
    9. 'def' → logprob: -6.597125053405762
    10. '#' → logprob: -7.097125053405762

Token 686: 'yyyy' (ID: 27343)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.816920280456543
    2. '<|end|>' → logprob: -1.441920280456543
    3. '1' → logprob: -1.691920280456543
    4. ' ' → logprob: -2.941920280456543
    5. 'b' → logprob: -3.441920280456543
    6. '000' → logprob: -4.066920280456543
    7. '<|end|>' → logprob: -4.566920280456543
    8. ')' → logprob: -5.566920280456543
    9. '   ' → logprob: -5.941920280456543
    10. '111' → logprob: -5.941920280456543

Token 687: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2672817707061768
    2. '<|end|>' → logprob: -1.5172817707061768
    3. '0' → logprob: -1.6422817707061768
    4. ' ' → logprob: -2.1422817707061768
    5. '1' → logprob: -3.2672817707061768
    6. 'b' → logprob: -3.6422817707061768
    7. '[' → logprob: -4.017281532287598
    8. '7' → logprob: -4.267281532287598
    9. ' x' → logprob: -4.267281532287598
    10. 'y' → logprob: -4.767281532287598

Token 688: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.884988009929657
    2. ' =' → logprob: -2.0099880695343018
    3. ' ' → logprob: -2.5099880695343018
    4. '
' → logprob: -2.7599880695343018
    5. ':' → logprob: -3.0099880695343018
    6. '[' → logprob: -3.1349880695343018
    7. ',' → logprob: -3.3849880695343018
    8. '0' → logprob: -3.3849880695343018
    9. 'b' → logprob: -3.5099880695343018
    10. 'def' → logprob: -3.7599880695343018

Token 689: '10' (ID: 702)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: 'xxxx' (ID: 30950)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.247133269906044
    2. '1' → logprob: -2.747133255004883
    3. 'b' → logprob: -3.247133255004883
    4. '000' → logprob: -3.622133255004883
    5. '00' → logprob: -3.997133255004883
    6. ')' → logprob: -4.372133255004883
    7. '10' → logprob: -4.622133255004883
    8. '110' → logprob: -4.747133255004883
    9. ' ' → logprob: -4.997133255004883
    10. '<|end|>' → logprob: -5.122133255004883

Token 691: 'xx' (ID: 7605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8091633915901184
    2. '[' → logprob: -1.8091633319854736
    3. '0' → logprob: -2.1841633319854736
    4. 'x' → logprob: -2.6841633319854736
    5. '<|end|>' → logprob: -3.1841633319854736
    6. 'b' → logprob: -3.5591633319854736
    7. '1' → logprob: -4.059163570404053
    8. '7' → logprob: -4.184163570404053
    9. '#' → logprob: -4.309163570404053
    10. ')' → logprob: -4.684163570404053

Token 692: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7973675727844238
    2. ' ' → logprob: -1.9223675727844238
    3. '<|end|>' → logprob: -2.172367572784424
    4. '   ' → logprob: -2.422367572784424
    5. ':' → logprob: -2.422367572784424
    6. 'def' → logprob: -3.297367572784424
    7. ')' → logprob: -4.172367572784424
    8. ' =' → logprob: -4.922367572784424
    9. '
' → logprob: -5.297367572784424
    10. '=' → logprob: -5.672367572784424

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14642052352428436
    2. ' ' → logprob: -2.896420478820801
    3. '<|end|>' → logprob: -3.646420478820801
    4. '
' → logprob: -4.271420478820801
    5. '[' → logprob: -4.896420478820801
    6. '  ' → logprob: -5.396420478820801
    7. 'def' → logprob: -5.646420478820801
    8. ':' → logprob: -5.646420478820801
    9. '0' → logprob: -5.771420478820801
    10. ')' → logprob: -5.896420478820801

Token 694: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4732142984867096
    2. '   ' → logprob: -1.4732142686843872
    3. '[' → logprob: -2.5982143878936768
    4. '<|end|>' → logprob: -3.0982143878936768
    5. '    ' → logprob: -5.473214149475098
    6. '  ' → logprob: -5.473214149475098
    7. ' x' → logprob: -5.473214149475098
    8. 'def' → logprob: -5.598214149475098
    9. 'x' → logprob: -5.973214149475098
    10. '0' → logprob: -7.098214149475098

Token 695: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39138898253440857
    2. ' ' → logprob: -1.891389012336731
    3. '[' → logprob: -3.1413888931274414
    4. ' b' → logprob: -3.6413888931274414
    5. ' #' → logprob: -3.7663888931274414
    6. 'def' → logprob: -4.266388893127441
    7. '0' → logprob: -4.516388893127441
    8. ' if' → logprob: -4.641388893127441
    9. '#' → logprob: -4.641388893127441
    10. ' x' → logprob: -5.141388893127441

Token 696: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16929905116558075
    2. '[' → logprob: -2.9192991256713867
    3. '6' → logprob: -3.0442991256713867
    4. '=' → logprob: -3.5442991256713867
    5. ' =' → logprob: -4.294299125671387
    6. 'def' → logprob: -5.669299125671387
    7. '   ' → logprob: -6.169299125671387
    8. '#' → logprob: -6.419299125671387
    9. ':' → logprob: -6.544299125671387
    10. '2' → logprob: -7.044299125671387

Token 697: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7179868817329407
    2. '[' → logprob: -1.217986822128296
    3. '0' → logprob: -2.342986822128296
    4. 'range' → logprob: -3.592986822128296
    5. ' range' → logprob: -3.592986822128296
    6. '1' → logprob: -3.967986822128296
    7. ' b' → logprob: -4.342987060546875
    8. ' [' → logprob: -4.467987060546875
    9. ' first' → logprob: -5.092987060546875
    10. ' ' → logprob: -5.092987060546875

Token 698: ' byte' (ID: 9239)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5373030304908752
    2. 'b' → logprob: -1.5373029708862305
    3. '6' → logprob: -2.7873029708862305
    4. '1' → logprob: -2.7873029708862305
    5. 'byte' → logprob: -3.4123029708862305
    6. '[' → logprob: -4.5373029708862305
    7. '7' → logprob: -4.7873029708862305
    8. ')' → logprob: -5.0373029708862305
    9. ' ' → logprob: -5.9123029708862305
    10. '2' → logprob: -5.9123029708862305

Token 699: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1492667198181152
    2. '[' → logprob: -1.2742667198181152
    3. ' =' → logprob: -1.7742667198181152
    4. ':' → logprob: -2.0242667198181152
    5. '0' → logprob: -2.6492667198181152
    6. 'def' → logprob: -4.649266719818115
    7. '   ' → logprob: -4.899266719818115
    8. 'b' → logprob: -5.899266719818115
    9. ' ' → logprob: -6.024266719818115
    10. '#' → logprob: -6.524266719818115

Token 700: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8283877372741699
    2. '[' → logprob: -1.57838773727417
    3. ''' → logprob: -2.32838773727417
    4. '1' → logprob: -2.70338773727417
    5. ' '' → logprob: -2.82838773727417
    6. ' =' → logprob: -3.45338773727417
    7. '   ' → logprob: -3.70338773727417
    8. ' [' → logprob: -4.20338773727417
    9. '0' → logprob: -4.32838773727417
    10. 'b' → logprob: -4.70338773727417

Token 701: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7208278179168701
    2. '0' → logprob: -0.9708278179168701
    3. ' =' → logprob: -3.09582781791687
    4. ''' → logprob: -3.34582781791687
    5. '1' → logprob: -3.47082781791687
    6. '=' → logprob: -4.345828056335449
    7. '2' → logprob: -6.220828056335449
    8. '7' → logprob: -6.845828056335449
    9. 'b' → logprob: -6.845828056335449
    10. 'y' → logprob: -6.970828056335449

Token 702: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9500027894973755
    2. '=' → logprob: -1.0750027894973755
    3. '[' → logprob: -1.4500027894973755
    4. '='' → logprob: -4.075002670288086
    5. '0' → logprob: -4.825002670288086
    6. ' ==' → logprob: -5.450002670288086
    7. '==' → logprob: -6.325002670288086
    8. ''' → logprob: -6.825002670288086
    9. '=[' → logprob: -6.950002670288086
    10. ',' → logprob: -7.575002670288086

Token 703: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003753767115995288
    2. '1' → logprob: -5.628753662109375
    3. ' '' → logprob: -9.753753662109375
    4. '"' → logprob: -10.003753662109375
    5. '`' → logprob: -10.878753662109375
    6. 'b' → logprob: -11.628753662109375
    7. '['' → logprob: -12.753753662109375
    8. '='' → logprob: -13.003753662109375
    9. '
' → logprob: -13.128753662109375
    10. ' ' → logprob: -13.128753662109375

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8431824445724487
    2. '=' → logprob: -1.2181824445724487
    3. ' =' → logprob: -2.5931825637817383
    4. '1' → logprob: -2.9681825637817383
    5. '<|end|>' → logprob: -3.0931825637817383
    6. ':' → logprob: -3.2181825637817383
    7. ' ' → logprob: -4.218182563781738
    8. ' ,' → logprob: -4.593182563781738
    9. '   ' → logprob: -5.093182563781738
    10. '<|end|>' → logprob: -5.218182563781738

Token 705: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3412362337112427
    2. ' b' → logprob: -1.4662362337112427
    3. '1' → logprob: -2.966236114501953
    4. ' ' → logprob: -5.216236114501953
    5. '0' → logprob: -7.591236114501953
    6. ''' → logprob: -8.091236114501953
    7. ' '' → logprob: -8.216236114501953
    8. '   ' → logprob: -9.841236114501953
    9. '2' → logprob: -10.091236114501953
    10. ''b' → logprob: -10.091236114501953

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016522101359441876
    2. '2' → logprob: -6.876652240753174
    3. '0' → logprob: -8.001651763916016
    4. '6' → logprob: -8.751651763916016
    5. ' ' → logprob: -9.626651763916016
    6. '7' → logprob: -10.751651763916016
    7. '[' → logprob: -11.001651763916016
    8. '=' → logprob: -12.251651763916016
    9. ')' → logprob: -12.876651763916016
    10. '<|end|>' → logprob: -12.876651763916016

Token 707: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05350644141435623
    2. '2' → logprob: -3.428506374359131
    3. '==' → logprob: -5.303506374359131
    4. '='' → logprob: -5.303506374359131
    5. ' =' → logprob: -5.428506374359131
    6. ''' → logprob: -6.053506374359131
    7. '0' → logprob: -6.428506374359131
    8. ',' → logprob: -8.053506851196289
    9. '[' → logprob: -8.303506851196289
    10. '1' → logprob: -8.553506851196289

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001968246651813388
    2. ''' → logprob: -6.2519683837890625
    3. ' ' → logprob: -10.626968383789062
    4. '"' → logprob: -12.001968383789062
    5. ' '' → logprob: -13.001968383789062
    6. ')' → logprob: -13.376968383789062
    7. ''b' → logprob: -14.126968383789062
    8. 'b' → logprob: -14.251968383789062
    9. '<|end|>' → logprob: -14.751968383789062
    10. '0' → logprob: -14.751968383789062

Token 709: ',' (ID: 11)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43941497802734375
    2. ',' → logprob: -1.6894149780273438
    3. 'b' → logprob: -2.5644149780273438
    4. ' b' → logprob: -3.3144149780273438
    5. ' ' → logprob: -3.4394149780273438
    6. ')' → logprob: -4.439414978027344
    7. '0' → logprob: -5.814414978027344
    8. '<|end|>' → logprob: -5.939414978027344
    9. ',b' → logprob: -6.439414978027344
    10. ' ,' → logprob: -6.689414978027344

Token 710: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21080806851387024
    2. '2' → logprob: -1.9608080387115479
    3. ' b' → logprob: -3.085808038711548
    4. ' ' → logprob: -5.710808277130127
    5. '0' → logprob: -8.460807800292969
    6. ''' → logprob: -10.335807800292969
    7. ' '' → logprob: -10.710807800292969
    8. '1' → logprob: -11.210807800292969
    9. '`' → logprob: -11.835807800292969
    10. '```' → logprob: -11.960807800292969

Token 711: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0549212209880352
    2. '2' → logprob: -2.9299211502075195
    3. ' ' → logprob: -10.30492115020752
    4. '1' → logprob: -12.67992115020752
    5. '10' → logprob: -14.42992115020752
    6. '6' → logprob: -15.30492115020752
    7. '```' → logprob: -15.30492115020752
    8. ')' → logprob: -15.55492115020752
    9. '   ' → logprob: -15.80492115020752
    10. '000' → logprob: -15.92992115020752

Token 712: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01332493219524622
    2. '='' → logprob: -4.513324737548828
    3. '0' → logprob: -6.388324737548828
    4. ' =' → logprob: -8.013324737548828
    5. ''' → logprob: -8.388324737548828
    6. '=
' → logprob: -12.138324737548828
    7. '==' → logprob: -12.513324737548828
    8. ''=' → logprob: -12.513324737548828
    9. ' ='' → logprob: -13.138324737548828
    10. '=''' → logprob: -13.263324737548828

Token 713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002826038980856538
    2. ''' → logprob: -5.87782621383667
    3. ' ' → logprob: -10.877825736999512
    4. '"' → logprob: -13.502825736999512
    5. ' '' → logprob: -15.002825736999512
    6. '1' → logprob: -15.252825736999512
    7. '('' → logprob: -16.877826690673828
    8. 'x' → logprob: -17.002826690673828
    9. '`' → logprob: -17.377826690673828
    10. '['' → logprob: -17.502826690673828

Token 714: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27461081743240356
    2. ' if' → logprob: -1.6496107578277588
    3. 'if' → logprob: -4.024610996246338
    4. 'def' → logprob: -4.524610996246338
    5. ' for' → logprob: -5.024610996246338
    6. ',' → logprob: -5.024610996246338
    7. ':' → logprob: -6.649610996246338
    8. ' ' → logprob: -6.774610996246338
    9. 'for' → logprob: -7.399610996246338
    10. '       ' → logprob: -7.774610996246338

Token 715: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.35932043194770813
    2. 'b' → logprob: -1.2343204021453857
    3. ' ' → logprob: -4.734320640563965
    4. '3' → logprob: -7.359320640563965
    5. '   ' → logprob: -7.359320640563965
    6. '2' → logprob: -7.984320640563965
    7. '4' → logprob: -9.734320640563965
    8. ' ' → logprob: -9.984320640563965
    9. '7' → logprob: -10.109320640563965
    10. '6' → logprob: -10.234320640563965

Token 716: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.015247956849634647
    2. '2' → logprob: -4.265247821807861
    3. '5' → logprob: -7.265247821807861
    4. '4' → logprob: -8.64024829864502
    5. '6' → logprob: -9.01524829864502
    6. '0' → logprob: -10.76524829864502
    7. '7' → logprob: -11.26524829864502
    8. ' ' → logprob: -11.51524829864502
    9. '[' → logprob: -11.76524829864502
    10. '1' → logprob: -11.76524829864502

Token 717: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012677322374656796
    2. '=y' → logprob: -7.251267910003662
    3. ',' → logprob: -8.501267433166504
    4. '==' → logprob: -9.001267433166504
    5. '=True' → logprob: -9.501267433166504
    6. 'y' → logprob: -10.126267433166504
    7. '='' → logprob: -10.626267433166504
    8. '=',' → logprob: -11.251267433166504
    9. ',y' → logprob: -11.251267433166504
    10. '=}' → logprob: -11.501267433166504

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.838463544845581
    2. '4' → logprob: -0.963463544845581
    3. '<|end|>' → logprob: -2.588463544845581
    4. '[' → logprob: -2.838463544845581
    5. '<|end|>' → logprob: -3.963463544845581
    6. '=' → logprob: -5.21346378326416
    7. ' ' → logprob: -5.21346378326416
    8. ' ,' → logprob: -5.33846378326416
    9. '3' → logprob: -5.58846378326416
    10. '   ' → logprob: -5.96346378326416

Token 719: ' b' (ID: 287)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.007390928920358419
    2. 'b' → logprob: -5.257390975952148
    3. ' ' → logprob: -6.507390975952148
    4. ' b' → logprob: -7.632390975952148
    5. '<|end|>' → logprob: -9.007390975952148
    6. '`' → logprob: -11.507390975952148
    7. '```' → logprob: -11.632390975952148
    8. ' 
' → logprob: -12.007390975952148
    9. '[' → logprob: -12.257390975952148
    10. ''' → logprob: -12.507390975952148

Token 720: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '0' → logprob: -16.75
    4. '5' → logprob: -17.5
    5. '' → logprob: -17.5
    6. '۴' → logprob: -17.625
    7. '４' → logprob: -17.875
    8. '<|end|>' → logprob: -17.875
    9. '6' → logprob: -18.125
    10. '४' → logprob: -18.625

Token 721: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007325486280024052
    2. '=y' → logprob: -5.007325649261475
    3. ',' → logprob: -8.507325172424316
    4. ',y' → logprob: -9.007325172424316
    5. 'y' → logprob: -9.632325172424316
    6. ' =' → logprob: -9.632325172424316
    7. '='' → logprob: -9.757325172424316
    8. '=',' → logprob: -10.507325172424316
    9. '=True' → logprob: -11.257325172424316
    10. '==' → logprob: -11.382325172424316

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09803397953510284
    2. '5' → logprob: -2.598033905029297
    3. '[' → logprob: -5.098033905029297
    4. ' ,' → logprob: -5.473033905029297
    5. '   ' → logprob: -6.348033905029297
    6. ' b' → logprob: -6.598033905029297
    7. 'b' → logprob: -6.598033905029297
    8. ' ' → logprob: -6.723033905029297
    9. ')' → logprob: -7.473033905029297
    10. ',b' → logprob: -7.598033905029297

Token 723: ' b' (ID: 287)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005443400703370571
    2. ' ' → logprob: -6.005443572998047
    3. 'b' → logprob: -6.255443572998047
    4. ' b' → logprob: -6.880443572998047
    5. '```' → logprob: -11.630443572998047
    6. '`' → logprob: -13.255443572998047
    7. ''' → logprob: -14.005443572998047
    8. '6' → logprob: -14.380443572998047
    9. ',' → logprob: -14.630443572998047
    10. '   ' → logprob: -14.880443572998047

Token 724: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.246537173457909e-06
    2. '4' → logprob: -13.750003814697266
    3. '6' → logprob: -14.000003814697266
    4. '7' → logprob: -14.875003814697266
    5. '0' → logprob: -15.062503814697266
    6. ' ' → logprob: -15.375003814697266
    7. '<|end|>' → logprob: -15.500003814697266
    8. '   ' → logprob: -15.875003814697266
    9. '[' → logprob: -16.125003814697266
    10. '५' → logprob: -16.250003814697266

Token 725: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002007987059187144
    2. ' y' → logprob: -9.250201225280762
    3. ''y' → logprob: -9.750201225280762
    4. '<|end|>' → logprob: -11.250201225280762
    5. ',y' → logprob: -11.500201225280762
    6. '=y' → logprob: -11.875201225280762
    7. '‘y' → logprob: -11.875201225280762
    8. ',' → logprob: -12.500201225280762
    9. '<|end|>' → logprob: -13.625201225280762
    10. ' ' → logprob: -14.000201225280762

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.413846880197525
    2. '   ' → logprob: -2.288846969604492
    3. ',b' → logprob: -2.288846969604492
    4. ' ' → logprob: -3.038846969604492
    5. ' b' → logprob: -3.288846969604492
    6. 'b' → logprob: -4.413846969604492
    7. '<|end|>' → logprob: -4.413846969604492
    8. '[' → logprob: -4.788846969604492
    9. ' ,' → logprob: -4.788846969604492
    10. '...' → logprob: -6.413846969604492

Token 727: ' b' (ID: 287)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6160745024681091
    2. ' b' → logprob: -1.241074562072754
    3. 'b' → logprob: -2.491074562072754
    4. ' ' → logprob: -3.241074562072754
    5. ''' → logprob: -3.366074562072754
    6. ' '' → logprob: -4.616074562072754
    7. '`' → logprob: -6.491074562072754
    8. '```' → logprob: -7.491074562072754
    9. '"' → logprob: -7.741074562072754
    10. ' 
' → logprob: -7.866074562072754

Token 728: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.375
    3. '' → logprob: -16.625
    4. '۶' → logprob: -17.0
    5. '=' → logprob: -17.625
    6. '६' → logprob: -17.75
    7. '5' → logprob: -17.75
    8. '٦' → logprob: -17.875
    9. '[' → logprob: -18.125
    10. '
' → logprob: -18.125

Token 729: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002993544621858746
    2. '=x' → logprob: -8.500299453735352
    3. ' =' → logprob: -9.875299453735352
    4. '='' → logprob: -11.375299453735352
    5. 'x' → logprob: -11.875299453735352
    6. '=True' → logprob: -12.500299453735352
    7. ',' → logprob: -12.625299453735352
    8. '=
' → logprob: -12.875299453735352
    9. '=',' → logprob: -13.125299453735352
    10. '<|end|>' → logprob: -13.125299453735352

Token 730: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6191186904907227
    2. ',' → logprob: -1.4941186904907227
    3. '[' → logprob: -2.8691186904907227
    4. '<|end|>' → logprob: -2.9941186904907227
    5. '7' → logprob: -3.3691186904907227
    6. ')' → logprob: -4.119118690490723
    7. '   ' → logprob: -4.369118690490723
    8. '=' → logprob: -4.744118690490723
    9. ' =' → logprob: -4.744118690490723
    10. ' 
' → logprob: -4.869118690490723

Token 731: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4513378143310547
    2. '<|end|>' → logprob: -1.3263378143310547
    3. ')' → logprob: -2.9513378143310547
    4. '7' → logprob: -4.076337814331055
    5. ',' → logprob: -4.701337814331055
    6. '[' → logprob: -5.201337814331055
    7. ' =' → logprob: -6.451337814331055
    8. '   ' → logprob: -6.576337814331055
    9. '0' → logprob: -6.701337814331055
    10. 'b' → logprob: -6.826337814331055

Token 732: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6496492028236389
    2. '[' → logprob: -1.3996491432189941
    3. 'def' → logprob: -2.649649143218994
    4. ':' → logprob: -3.399649143218994
    5. '7' → logprob: -3.524649143218994
    6. '   ' → logprob: -3.774649143218994
    7. '#' (adapté à ' #') → logprob: -4.524649143218994
    8. ',
' → logprob: -4.774649143218994
    9. ' ' → logprob: -4.774649143218994
    10. '<|end|>' → logprob: -4.774649143218994

Token 733: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9317315220832825
    2. ' if' → logprob: -1.1817314624786377
    3. 'if' → logprob: -1.8067314624786377
    4. 'def' → logprob: -2.5567314624786377
    5. 'b' → logprob: -4.556731700897217
    6. '0' → logprob: -5.056731700897217
    7. ' b' → logprob: -5.181731700897217
    8. '7' → logprob: -5.306731700897217
    9. '[' → logprob: -5.306731700897217
    10. '#' → logprob: -5.431731700897217

Token 734: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19860045611858368
    2. ' b' → logprob: -2.4486005306243896
    3. ' x' → logprob: -3.5736005306243896
    4. 'b' → logprob: -4.5736002922058105
    5. 'def' → logprob: -4.8236002922058105
    6. '[' → logprob: -5.0736002922058105
    7. 'x' → logprob: -5.0736002922058105
    8. ' #' → logprob: -5.1986002922058105
    9. '7' → logprob: -5.4486002922058105
    10. '0' → logprob: -5.5736002922058105

Token 735: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6584883332252502
    2. ' b' → logprob: -1.5334882736206055
    3. ' x' → logprob: -2.0334882736206055
    4. 'x' → logprob: -3.1584882736206055
    5. 'b' → logprob: -3.9084882736206055
    6. ' #' → logprob: -4.1584882736206055
    7. '[' → logprob: -4.1584882736206055
    8. '0' → logprob: -4.6584882736206055
    9. ' bit' → logprob: -5.5334882736206055
    10. '#' → logprob: -5.5334882736206055

Token 736: ' problem' (ID: 4792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9177342057228088
    2. ' ' → logprob: -1.167734146118164
    3. '6' → logprob: -2.292734146118164
    4. '7' → logprob: -3.167734146118164
    5. 'b' → logprob: -3.542734146118164
    6. ')' → logprob: -4.542734146118164
    7. 'def' → logprob: -4.542734146118164
    8. '0' → logprob: -4.667734146118164
    9. ':' → logprob: -4.792734146118164
    10. '_' → logprob: -4.917734146118164

Token 737: ' says' (ID: 5003)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10860399901866913
    2. '=' → logprob: -3.2336039543151855
    3. ' is' → logprob: -4.2336039543151855
    4. ':' → logprob: -4.7336039543151855
    5. 'b' → logprob: -4.9836039543151855
    6. ' =' → logprob: -5.7336039543151855
    7. '0' → logprob: -5.8586039543151855
    8. '<|end|>' → logprob: -5.8586039543151855
    9. '<|end|>' → logprob: -5.9836039543151855
    10. '...' → logprob: -5.9836039543151855

Token 738: ' bits' (ID: 18189)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26269280910491943
    2. '   ' → logprob: -3.012692928314209
    3. ' b' → logprob: -3.387692928314209
    4. ' x' → logprob: -3.387692928314209
    5. '<|end|>' → logprob: -4.012692928314209
    6. '[' → logprob: -4.262692928314209
    7. '    ' → logprob: -4.387692928314209
    8. 'b' → logprob: -4.762692928314209
    9. 'x' → logprob: -4.762692928314209
    10. 'def' → logprob: -5.262692928314209

Token 739: ' count' (ID: 3605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3129776418209076
    2. '7' → logprob: -2.1879775524139404
    3. '6' → logprob: -2.4379775524139404
    4. '=' → logprob: -3.8129775524139404
    5. ' =' → logprob: -3.8129775524139404
    6. ':' → logprob: -4.9379777908325195
    7. '#' → logprob: -5.6879777908325195
    8. 'def' → logprob: -5.6879777908325195
    9. ' ' → logprob: -5.8129777908325195
    10. ')' → logprob: -6.0629777908325195

Token 740: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3158127963542938
    2. '[' → logprob: -1.6908128261566162
    3. ' =' → logprob: -2.940812826156616
    4. '7' → logprob: -4.315812587738037
    5. ':' → logprob: -4.690812587738037
    6. '<|end|>' → logprob: -6.190812587738037
    7. '#' → logprob: -6.440812587738037
    8. 'def' → logprob: -6.815812587738037
    9. '=[' → logprob: -7.065812587738037
    10. '6' → logprob: -7.315812587738037

Token 741: ' MS' (ID: 15861)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6358910202980042
    2. '0' → logprob: -0.7608910202980042
    3. ' ' → logprob: -5.760890960693359
    4. '1' → logprob: -9.63589096069336
    5. '#' → logprob: -10.63589096069336
    6. 'left' → logprob: -11.38589096069336
    7. '5' → logprob: -11.76089096069336
    8. '6' → logprob: -12.38589096069336
    9. ' left' → logprob: -12.88589096069336
    10. 'b' → logprob: -12.88589096069336

Token 742: 'B' (ID: 33)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0661627054214478
    2. '=' → logprob: -1.8161627054214478
    3. 'b' → logprob: -2.316162586212158
    4. '6' → logprob: -2.316162586212158
    5. 'def' → logprob: -2.316162586212158
    6. ' =' → logprob: -2.566162586212158
    7. '[' → logprob: -3.441162586212158
    8. ')' → logprob: -3.816162586212158
    9. ' ' → logprob: -3.941162586212158
    10. '0' → logprob: -4.691162586212158

Token 743: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05954665690660477
    2. ' ' → logprob: -4.43454647064209
    3. '7' → logprob: -4.55954647064209
    4. ' =' → logprob: -4.80954647064209
    5. '=' → logprob: -4.93454647064209
    6. ':' → logprob: -5.68454647064209
    7. 'def' → logprob: -5.80954647064209
    8. '0' → logprob: -6.43454647064209
    9. ' [' → logprob: -6.43454647064209
    10. '6' → logprob: -6.55954647064209

Token 744: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4782364070415497
    2. '7' → logprob: -1.228236436843872
    3. ' )' → logprob: -3.603236436843872
    4. '0' → logprob: -4.103236198425293
    5. '[' → logprob: -4.353236198425293
    6. ' ' → logprob: -4.478236198425293
    7. '6' → logprob: -5.603236198425293
    8. 'def' → logprob: -5.728236198425293
    9. '<|end|>' → logprob: -6.228236198425293
    10. '2' → logprob: -6.228236198425293

Token 745: '7' (ID: 22)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4952894449234009
    2. '7' → logprob: -1.2452894449234009
    3. '6' → logprob: -3.3702893257141113
    4. '=' → logprob: -4.120289325714111
    5. '2' → logprob: -4.370289325714111
    6. '1' → logprob: -4.870289325714111
    7. '[' → logprob: -4.995289325714111
    8. ')' → logprob: -4.995289325714111
    9. ' ' → logprob: -5.120289325714111
    10. '5' → logprob: -5.370289325714111

Token 746: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05442267283797264
    2. '7' → logprob: -4.304422855377197
    3. '=' → logprob: -4.429422855377197
    4. '[' → logprob: -5.304422855377197
    5. ' )' → logprob: -5.429422855377197
    6. '):' → logprob: -5.554422855377197
    7. '-' → logprob: -6.429422855377197
    8. ' =' → logprob: -6.554422855377197
    9. ')=' → logprob: -6.554422855377197
    10. '6' → logprob: -6.804422855377197

Token 747: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19463643431663513
    2. 'def' → logprob: -2.569636344909668
    3. ' ' → logprob: -3.444636344909668
    4. '7' → logprob: -4.319636344909668
    5. ' def' → logprob: -4.569636344909668
    6. '<|end|>' → logprob: -4.944636344909668
    7. '#' → logprob: -5.444636344909668
    8. '   ' → logprob: -5.444636344909668
    9. ':' → logprob: -5.444636344909668
    10. 'b' → logprob: -5.694636344909668

Token 748: ' bit' (ID: 3546)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.10179412364959717
    2. 'bit' → logprob: -2.8517942428588867
    3. '0' → logprob: -3.3517942428588867
    4. 'b' → logprob: -5.726794242858887
    5. 'L' → logprob: -7.726794242858887
    6. ' ' → logprob: -9.101794242858887
    7. ' L' → logprob: -9.226794242858887
    8. ' bit' → logprob: -9.601794242858887
    9. ' b' → logprob: -10.226794242858887
    10. '7' → logprob: -13.226794242858887

Token 749: '0' (ID: 15)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7788771986961365
    2. '0' → logprob: -1.1538772583007812
    3. '7' → logprob: -1.7788772583007812
    4. '5' → logprob: -3.0288772583007812
    5. ' ' → logprob: -5.903877258300781
    6. '[' → logprob: -6.653877258300781
    7. '2' → logprob: -6.778877258300781
    8. '=' → logprob: -7.153877258300781
    9. '1' → logprob: -7.278877258300781
    10. '3' → logprob: -7.403877258300781

Token 750: '?
' (ID: 3901)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21009176969528198
    2. 'def' → logprob: -2.2100918292999268
    3. '_' → logprob: -3.5850918292999268
    4. ' def' → logprob: -4.835091590881348
    5. '#' → logprob: -5.085091590881348
    6. ' ' → logprob: -5.335091590881348
    7. ':' → logprob: -5.335091590881348
    8. 'b' → logprob: -5.335091590881348
    9. '   ' → logprob: -5.335091590881348
    10. '7' → logprob: -5.460091590881348

Token 751: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 752: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11981646716594696
    2. '<|end|>' → logprob: -2.744816541671753
    3. ')' → logprob: -4.119816303253174
    4. ':' → logprob: -4.494816303253174
    5. ' ' → logprob: -5.244816303253174
    6. '7' → logprob: -5.744816303253174
    7. '(' → logprob: -5.744816303253174
    8. '#' (adapté à ' #') → logprob: -6.619816303253174
    9. 'def' → logprob: -6.744816303253174
    10. '   ' → logprob: -6.869816303253174

Token 753: ' Standard' (ID: 16574)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1318060159683228
    2. 'b' → logprob: -1.2568060159683228
    3. '[' → logprob: -2.506805896759033
    4. '#' → logprob: -2.756805896759033
    5. ')' → logprob: -3.006805896759033
    6. '<|end|>' → logprob: -3.131805896759033
    7. ' b' → logprob: -3.256805896759033
    8. '7' → logprob: -3.506805896759033
    9. ' ' → logprob: -3.631805896759033
    10. '(' → logprob: -4.506805896759033

Token 754: ' UTF' (ID: 52888)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1919592171907425
    2. 'def' → logprob: -2.6919591426849365
    3. '_' → logprob: -3.5669591426849365
    4. ' ' → logprob: -3.8169591426849365
    5. '<|end|>' → logprob: -4.316959381103516
    6. ')' → logprob: -4.816959381103516
    7. 'b' → logprob: -5.066959381103516
    8. '7' → logprob: -5.316959381103516
    9. ':' → logprob: -5.441959381103516
    10. '#' → logprob: -5.816959381103516

Token 755: '-' (ID: 12)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.22560365498065948
    2. '-' → logprob: -1.975603699684143
    3. '_' → logprob: -3.2256035804748535
    4. '7' → logprob: -4.6006035804748535
    5. '[' → logprob: -5.2256035804748535
    6. ' ' → logprob: -5.9756035804748535
    7. 'def' → logprob: -6.4756035804748535
    8. ')' → logprob: -6.7256035804748535
    9. ' -' → logprob: -6.8506035804748535
    10. '   ' → logprob: -8.100604057312012

Token 756: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.2127087504486553e-05
    2. '7' → logprob: -11.250021934509277
    3. 'def' → logprob: -12.000021934509277
    4. '-' → logprob: -13.750021934509277
    5. ' ' → logprob: -14.125021934509277
    6. ')' → logprob: -14.875021934509277
    7. 'encoded' → logprob: -16.125022888183594
    8. 'b' → logprob: -16.625022888183594
    9. '_' → logprob: -16.750022888183594
    10. 'bit' → logprob: -17.250022888183594

Token 757: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1762196123600006
    2. ':' → logprob: -3.1762197017669678
    3. 'def' → logprob: -3.1762197017669678
    4. '   ' → logprob: -3.3012197017669678
    5. '<|end|>' → logprob: -4.676219463348389
    6. ' =' → logprob: -4.801219463348389
    7. '#' → logprob: -5.426219463348389
    8. ')' → logprob: -5.676219463348389
    9. '=' → logprob: -6.051219463348389
    10. '7' → logprob: -6.301219463348389

Token 758: 'big' (ID: 25934)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17839495837688446
    2. ')' → logprob: -2.9283950328826904
    3. '7' → logprob: -3.0533950328826904
    4. ' ' → logprob: -4.303394794464111
    5. 'def' → logprob: -4.553394794464111
    6. ' )' → logprob: -4.803394794464111
    7. '#' → logprob: -4.928394794464111
    8. '_' → logprob: -5.178394794464111
    9. '<|end|>' → logprob: -6.178394794464111
    10. '0' → logprob: -6.178394794464111

Token 759: ' endian' (ID: 180710)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.39832037687301636
    2. '8' → logprob: -2.023320436477661
    3. ')' → logprob: -2.648320436477661
    4. '-' → logprob: -3.273320436477661
    5. '-end' → logprob: -3.523320436477661
    6. ' ' → logprob: -3.773320436477661
    7. 'Endian' → logprob: -4.273320198059082
    8. '0' → logprob: -5.273320198059082
    9. '[' → logprob: -5.648320198059082
    10. ' endian' → logprob: -6.148320198059082

Token 760: ' bit' (ID: 3546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5153778791427612
    2. '[' → logprob: -1.5153778791427612
    3. '<|end|>' → logprob: -2.765377998352051
    4. '_' → logprob: -3.640377998352051
    5. 'def' → logprob: -3.890377998352051
    6. '7' → logprob: -4.015377998352051
    7. '):' → logprob: -4.515377998352051
    8. ' )' → logprob: -4.890377998352051
    9. '   ' → logprob: -5.390377998352051
    10. ' ' → logprob: -5.390377998352051

Token 761: ' order' (ID: 2569)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08888264745473862
    2. ')' → logprob: -2.9638826847076416
    3. '[' → logprob: -3.5888826847076416
    4. '_' → logprob: -6.2138824462890625
    5. ' ' → logprob: -6.8388824462890625
    6. ' )' → logprob: -7.2138824462890625
    7. '#' → logprob: -8.088882446289062
    8. '8' → logprob: -8.338882446289062
    9. 's' → logprob: -8.463882446289062
    10. '0' → logprob: -8.588882446289062

Token 762: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.510424017906189
    2. ')' → logprob: -1.135424017906189
    3. ':' → logprob: -4.1354241371154785
    4. '<|end|>' → logprob: -4.2604241371154785
    5. 'def' → logprob: -4.7604241371154785
    6. '7' → logprob: -4.7604241371154785
    7. '   ' → logprob: -5.0104241371154785
    8. '):' → logprob: -5.5104241371154785
    9. ']' → logprob: -5.8854241371154785
    10. 'b' → logprob: -6.1354241371154785

Token 763: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4620627164840698
    2. 'def' → logprob: -1.8370627164840698
    3. '[' → logprob: -2.0870628356933594
    4. ' ' → logprob: -2.0870628356933594
    5. '   ' → logprob: -2.3370628356933594
    6. ' b' → logprob: -2.8370628356933594
    7. ')' → logprob: -3.0870628356933594
    8. '<|end|>' → logprob: -3.5870628356933594
    9. ':' → logprob: -3.7120628356933594
    10. ' bit' → logprob: -4.087062835693359

Token 764: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.042133092880249
    2. '   ' → logprob: -1.792133092880249
    3. 'def' → logprob: -1.792133092880249
    4. ' ' → logprob: -1.917133092880249
    5. 'b' → logprob: -3.667133092880249
    6. '#' (adapté à ' #') → logprob: -3.667133092880249
    7. ')' → logprob: -3.917133092880249
    8. ' def' → logprob: -4.417133331298828
    9. '7' → logprob: -4.417133331298828
    10. ' #' → logprob: -4.667133331298828

Token 765: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9934483766555786
    2. ' b' → logprob: -1.7434483766555786
    3. '[' → logprob: -1.9934483766555786
    4. 'b' → logprob: -2.118448257446289
    5. ' ' → logprob: -3.118448257446289
    6. '   ' → logprob: -3.243448257446289
    7. ' def' → logprob: -3.243448257446289
    8. ')' → logprob: -4.368448257446289
    9. ' #' → logprob: -4.868448257446289
    10. '```' → logprob: -4.993448257446289

Token 766: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06459684669971466
    2. '=' → logprob: -3.4395968914031982
    3. '7' → logprob: -3.6895968914031982
    4. ' =' → logprob: -5.564596652984619
    5. ' [' → logprob: -7.689596652984619
    6. ')' → logprob: -8.064597129821777
    7. '6' → logprob: -8.939597129821777
    8. ':' → logprob: -9.064597129821777
    9. '=[' → logprob: -9.189597129821777
    10. '   ' → logprob: -9.564597129821777

Token 767: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08028902858495712
    2. '7' → logprob: -2.830289125442505
    3. ' b' → logprob: -5.330288887023926
    4. '[' → logprob: -5.830288887023926
    5. 'def' → logprob: -5.830288887023926
    6. ' ' → logprob: -6.080288887023926
    7. '1' → logprob: -6.080288887023926
    8. '0' → logprob: -6.955288887023926
    9. '   ' → logprob: -7.705288887023926
    10. 'byte' → logprob: -8.205288887023926

Token 768: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8992728590965271
    2. '[' → logprob: -1.0242729187011719
    3. ' b' → logprob: -2.274272918701172
    4. ' ' → logprob: -3.899272918701172
    5. 'byte' → logprob: -3.899272918701172
    6. ' byte' → logprob: -3.899272918701172
    7. ' first' → logprob: -4.149272918701172
    8. '7' → logprob: -4.774272918701172
    9. '1' → logprob: -4.774272918701172
    10. ' [' → logprob: -5.024272918701172

Token 769: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008448033593595028
    2. '7' → logprob: -6.008448123931885
    3. ' =' → logprob: -6.008448123931885
    4. '=' → logprob: -6.633448123931885
    5. '   ' → logprob: -7.633448123931885
    6. ' [' → logprob: -7.758448123931885
    7. '[
' → logprob: -8.758447647094727
    8. '_' → logprob: -8.883447647094727
    9. 'b' → logprob: -8.883447647094727
    10. ':' → logprob: -8.883447647094727

Token 770: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7755386829376221
    2. '[' → logprob: -1.400538682937622
    3. '7' → logprob: -1.650538682937622
    4. ' b' → logprob: -3.525538682937622
    5. ' [' → logprob: -3.775538682937622
    6. 'b' → logprob: -4.275538444519043
    7. '   ' → logprob: -4.400538444519043
    8. '    ' → logprob: -5.775538444519043
    9. ' =' → logprob: -6.025538444519043
    10. ' (' → logprob: -6.025538444519043

Token 771: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02101629227399826
    2. '[' → logprob: -3.8960163593292236
    3. '_' → logprob: -8.771016120910645
    4. ''' → logprob: -9.021016120910645
    5. 'y' → logprob: -9.646016120910645
    6. '=' → logprob: -9.896016120910645
    7. ')' → logprob: -11.021016120910645
    8. ' =' → logprob: -11.271016120910645
    9. ' ' → logprob: -11.771016120910645
    10. 'b' → logprob: -11.896016120910645

Token 772: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23402757942676544
    2. ' =' → logprob: -2.484027624130249
    3. '[' → logprob: -2.484027624130249
    4. ',' → logprob: -4.23402738571167
    5. '<|end|>' → logprob: -4.85902738571167
    6. ')' → logprob: -4.98402738571167
    7. ':' → logprob: -5.60902738571167
    8. '   ' → logprob: -6.73402738571167
    9. 'b' → logprob: -6.98402738571167
    10. '#' → logprob: -7.10902738571167

Token 773: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.026187660172581673
    2. '6' → logprob: -4.276187896728516
    3. '=' → logprob: -5.401187896728516
    4. '0' → logprob: -5.776187896728516
    5. ' ' → logprob: -6.026187896728516
    6. '<|end|>' → logprob: -7.901187896728516
    7. ')' → logprob: -8.151187896728516
    8. '_' → logprob: -8.276187896728516
    9. '    ' → logprob: -8.776187896728516
    10. ' =' → logprob: -9.151187896728516

Token 774: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37453049421310425
    2. '_' → logprob: -1.999530553817749
    3. '7' → logprob: -2.749530553817749
    4. '=' → logprob: -3.124530553817749
    5. ')' → logprob: -3.499530553817749
    6. ' ' → logprob: -5.12453031539917
    7. 'b' → logprob: -5.12453031539917
    8. ':' → logprob: -5.24953031539917
    9. '#' → logprob: -5.49953031539917
    10. ',' → logprob: -5.62453031539917

Token 775: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003908735525328666
    2. '0' → logprob: -8.750391006469727
    3. '7' → logprob: -8.750391006469727
    4. ' ' → logprob: -9.625391006469727
    5. '1' → logprob: -12.875391006469727
    6. '2' → logprob: -12.875391006469727
    7. '3' → logprob: -15.125391006469727
    8. '```' → logprob: -15.125391006469727
    9. ' five' → logprob: -15.187891006469727
    10. '    ' → logprob: -15.187891006469727

Token 776: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039701271802186966
    2. '_' → logprob: -3.789701223373413
    3. '7' → logprob: -5.414701461791992
    4. '=' → logprob: -5.414701461791992
    5. '#' → logprob: -6.539701461791992
    6. ')' → logprob: -6.664701461791992
    7. ':' → logprob: -6.914701461791992
    8. '```' → logprob: -7.289701461791992
    9. 'b' → logprob: -7.414701461791992
    10. ',' → logprob: -7.789701461791992

Token 777: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0004469964769668877
    2. '0' → logprob: -7.750446796417236
    3. '7' → logprob: -11.375447273254395
    4. ' ' → logprob: -13.500447273254395
    5. '' → logprob: -13.625447273254395
    6. '1' → logprob: -14.250447273254395
    7. '<|end|>' → logprob: -14.875447273254395
    8. '```' → logprob: -15.500447273254395
    9. '5' → logprob: -15.625447273254395
    10. '_' → logprob: -15.750447273254395

Token 778: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08257084339857101
    2. '_' → logprob: -3.457570791244507
    3. '=' → logprob: -4.207571029663086
    4. 'b' → logprob: -4.332571029663086
    5. '[' → logprob: -5.707571029663086
    6. ' b' → logprob: -5.957571029663086
    7. ' =' → logprob: -6.082571029663086
    8. ')' → logprob: -6.207571029663086
    9. ' ' → logprob: -6.332571029663086
    10. '```' → logprob: -6.582571029663086

Token 779: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0015716375783085823
    2. '5' → logprob: -6.5015716552734375
    3. '7' → logprob: -10.251571655273438
    4. '0' → logprob: -11.001571655273438
    5. '1' → logprob: -11.251571655273438
    6. ' ' → logprob: -13.501571655273438
    7. '4' → logprob: -13.751571655273438
    8. '2' → logprob: -13.876571655273438
    9. '```' → logprob: -14.626571655273438
    10. '_' → logprob: -16.751571655273438

Token 780: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8906333446502686
    2. '5' → logprob: -1.2656333446502686
    3. '=' → logprob: -2.1406333446502686
    4. '_' → logprob: -2.2656333446502686
    5. ' ' → logprob: -3.7656333446502686
    6. ' =' → logprob: -4.140633583068848
    7. 'b' → logprob: -4.765633583068848
    8. ',' → logprob: -5.015633583068848
    9. ' b' → logprob: -5.140633583068848
    10. '2' → logprob: -5.140633583068848

Token 781: '2' (ID: 17)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01306022796779871
    2. '3' → logprob: -5.263060092926025
    3. '0' → logprob: -5.638060092926025
    4. '5' → logprob: -6.138060092926025
    5. '2' → logprob: -6.263060092926025
    6. '1' → logprob: -9.263060569763184
    7. ' ' → logprob: -10.263060569763184
    8. '4' → logprob: -10.513060569763184
    9. '6' → logprob: -12.700560569763184
    10. ')' → logprob: -13.200560569763184

Token 782: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6970036625862122
    2. '[' → logprob: -1.0720036029815674
    3. '_' → logprob: -2.0720036029815674
    4. '=' → logprob: -4.6970038414001465
    5. ']' → logprob: -5.4470038414001465
    6. '#' → logprob: -5.9470038414001465
    7. 'b' → logprob: -6.0720038414001465
    8. ')' → logprob: -6.1970038414001465
    9. ' =' → logprob: -6.1970038414001465
    10. ':' → logprob: -6.3220038414001465

Token 783: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0034433805849403143
    2. '1' → logprob: -5.878443241119385
    3. '5' → logprob: -7.878443241119385
    4. '3' → logprob: -8.628443717956543
    5. '0' → logprob: -9.878443717956543
    6. ' ' → logprob: -11.503443717956543
    7. '<|end|>' → logprob: -11.753443717956543
    8. '2' → logprob: -12.253443717956543
    9. '6' → logprob: -13.003443717956543
    10. '4' → logprob: -13.878443717956543

Token 784: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.9043089151382446
    2. '_' → logprob: -0.9043089151382446
    3. '[' → logprob: -1.9043089151382446
    4. ']' → logprob: -4.529308795928955
    5. 'b' → logprob: -5.154308795928955
    6. '2' → logprob: -5.279308795928955
    7. '0' → logprob: -5.779308795928955
    8. '=' → logprob: -5.904308795928955
    9. '6' → logprob: -6.029308795928955
    10. '```' → logprob: -6.279308795928955

Token 785: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006255837506614625
    2. '7' → logprob: -8.000625610351562
    3. '5' → logprob: -8.375625610351562
    4. ' ' → logprob: -9.750625610351562
    5. '1' → logprob: -13.875625610351562
    6. '3' → logprob: -16.000625610351562
    7. '<|end|>' → logprob: -16.125625610351562
    8. '2' → logprob: -16.250625610351562
    9. '_' → logprob: -16.875625610351562
    10. '<|end|>' → logprob: -17.000625610351562

Token 786: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1456843465566635
    2. 'def' → logprob: -2.770684242248535
    3. '   ' → logprob: -3.770684242248535
    4. ' def' → logprob: -4.270684242248535
    5. ' ' → logprob: -4.895684242248535
    6. ':' → logprob: -5.145684242248535
    7. '<|end|>' → logprob: -5.270684242248535
    8. ')' → logprob: -5.770684242248535
    9. 'b' → logprob: -5.895684242248535
    10. '_' → logprob: -6.395684242248535

Token 787: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13980983197689056
    2. '7' → logprob: -2.8898098468780518
    3. ' )' → logprob: -3.5148098468780518
    4. ' ' → logprob: -4.389809608459473
    5. '1' → logprob: -5.014809608459473
    6. 'b' → logprob: -5.514809608459473
    7. '[' → logprob: -5.889809608459473
    8. ' b' → logprob: -6.014809608459473
    9. '):' → logprob: -6.014809608459473
    10. '   ' → logprob: -6.014809608459473

Token 788: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.11746109277009964
    2. ')' → logprob: -2.8674612045288086
    3. '=' → logprob: -3.6174612045288086
    4. '[' → logprob: -4.367461204528809
    5. ' =' → logprob: -5.117461204528809
    6. ' ' → logprob: -5.867461204528809
    7. '6' → logprob: -5.992461204528809
    8. '    ' → logprob: -7.117461204528809
    9. '   ' → logprob: -7.617461204528809
    10. ' )' → logprob: -7.742461204528809

Token 789: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06498333066701889
    2. ')' → logprob: -3.189983367919922
    3. ' =' → logprob: -4.189983367919922
    4. ' ==' → logprob: -6.564983367919922
    5. '==' → logprob: -6.689983367919922
    6. ')=' → logprob: -7.189983367919922
    7. ':' → logprob: -7.439983367919922
    8. '='' → logprob: -8.064983367919922
    9. '   ' → logprob: -8.189983367919922
    10. '):' → logprob: -8.314983367919922

Token 790: ' MS' (ID: 15861)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6717520356178284
    2. 'the' → logprob: -2.0467519760131836
    3. 'most' → logprob: -2.0467519760131836
    4. ' most' → logprob: -2.1717519760131836
    5. ' the' → logprob: -3.2967519760131836
    6. ' ' → logprob: -3.4217519760131836
    7. 'highest' → logprob: -3.5467519760131836
    8. ' highest' → logprob: -4.921751976013184
    9. 'ms' → logprob: -5.296751976013184
    10. 'MS' → logprob: -6.671751976013184

Token 791: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00976293720304966
    2. 'b' → logprob: -4.634762763977051
    3. ' B' → logprob: -13.00976276397705
    4. '7' → logprob: -13.38476276397705
    5. ')' → logprob: -13.75976276397705
    6. 'def' → logprob: -14.50976276397705
    7. 'd' → logprob: -15.50976276397705
    8. '0' → logprob: -16.009763717651367
    9. 'y' → logprob: -16.009763717651367
    10. '   ' → logprob: -16.009763717651367

Token 792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.545928955078125
    2. '   ' → logprob: -1.545928955078125
    3. '[' → logprob: -2.045928955078125
    4. ':' → logprob: -3.295928955078125
    5. '):' → logprob: -4.045928955078125
    6. ']' → logprob: -5.545928955078125
    7. '<|end|>' → logprob: -5.670928955078125
    8. '=' → logprob: -5.795928955078125
    9. ' ' → logprob: -6.170928955078125
    10. ',' → logprob: -6.420928955078125

Token 793: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1592322140932083
    2. '   ' → logprob: -3.5342321395874023
    3. 'b' → logprob: -4.159232139587402
    4. ':' → logprob: -4.159232139587402
    5. ' ' → logprob: -4.159232139587402
    6. '<|end|>' → logprob: -4.284232139587402
    7. 'def' → logprob: -4.534232139587402
    8. ')' → logprob: -4.534232139587402
    9. '7' → logprob: -5.159232139587402
    10. '#' → logprob: -5.159232139587402

Token 794: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9539268612861633
    2. '[' → logprob: -1.5789268016815186
    3. 'b' → logprob: -2.2039268016815186
    4. ' ' → logprob: -2.4539268016815186
    5. ' b' → logprob: -2.8289268016815186
    6. '<|end|>' → logprob: -3.0789268016815186
    7. 'def' → logprob: -3.7039268016815186
    8. ')' → logprob: -4.078927040100098
    9. '#' (adapté à ' #') → logprob: -4.328927040100098
    10. ':' → logprob: -4.703927040100098

Token 795: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4578540325164795
    2. '[' → logprob: -2.2078540325164795
    3. 'b' → logprob: -2.8328540325164795
    4. 'def' → logprob: -2.8328540325164795
    5. ' b' → logprob: -3.2078540325164795
    6. '#' → logprob: -4.207854270935059
    7. '```' → logprob: -4.207854270935059
    8. ' ' → logprob: -4.457854270935059
    9. '    ' → logprob: -4.707854270935059
    10. '       ' → logprob: -4.957854270935059

Token 796: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.542260468006134
    2. ' =' → logprob: -1.2922604084014893
    3. '=' → logprob: -2.2922604084014893
    4. ':' → logprob: -4.917260646820068
    5. '<|end|>' → logprob: -5.167260646820068
    6. 'b' → logprob: -5.417260646820068
    7. ' ' → logprob: -5.542260646820068
    8. ' is' → logprob: -5.792260646820068
    9. '   ' → logprob: -5.792260646820068
    10. '[
' → logprob: -6.042260646820068

Token 797: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8214387893676758
    2. '[' → logprob: -1.0714387893676758
    3. ' =' → logprob: -1.5714387893676758
    4. ' ' → logprob: -6.321438789367676
    5. '7' → logprob: -6.696438789367676
    6. 'b' → logprob: -6.696438789367676
    7. ' [' → logprob: -7.071438789367676
    8. '=[' → logprob: -7.071438789367676
    9. ' b' → logprob: -7.446438789367676
    10. '   ' → logprob: -7.821438789367676

Token 798: '-byte' (ID: 145970)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37817713618278503
    2. '7' → logprob: -2.3781771659851074
    3. '<|end|>' → logprob: -2.6281771659851074
    4. '_' → logprob: -3.0031771659851074
    5. ' ' → logprob: -3.7531771659851074
    6. '=' → logprob: -4.128177165985107
    7. '0' → logprob: -4.128177165985107
    8. ')' → logprob: -4.753177165985107
    9. '#' → logprob: -5.503177165985107
    10. 'def' → logprob: -5.628177165985107

Token 799: ' first' (ID: 1577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2050776481628418
    2. ' =' → logprob: -1.2050776481628418
    3. ':' → logprob: -1.7050776481628418
    4. '   ' → logprob: -2.455077648162842
    5. '=' → logprob: -3.455077648162842
    6. 'def' → logprob: -3.580077648162842
    7. ' ' → logprob: -3.955077648162842
    8. '_' → logprob: -4.330077648162842
    9. 'b' → logprob: -4.830077648162842
    10. ' b' → logprob: -5.330077648162842

Token 800: ' byte' (ID: 9239)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08207305520772934
    2. ' _' → logprob: -3.7070729732513428
    3. ' ' → logprob: -4.082073211669922
    4. '   ' → logprob: -4.707073211669922
    5. '[' → logprob: -5.207073211669922
    6. 'b' → logprob: -5.707073211669922
    7. '_byte' → logprob: -5.832073211669922
    8. ')' → logprob: -5.957073211669922
    9. 'byte' → logprob: -6.457073211669922
    10. '0' → logprob: -6.582073211669922

Token 801: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18306423723697662
    2. ' =' → logprob: -2.5580642223358154
    3. '=' → logprob: -2.8080642223358154
    4. ':' → logprob: -4.5580644607543945
    5. 'b' → logprob: -5.1830644607543945
    6. ' ' → logprob: -5.9330644607543945
    7. 'def' → logprob: -6.1830644607543945
    8. '   ' → logprob: -6.4330644607543945
    9. ' [' → logprob: -6.5580644607543945
    10. '[
' → logprob: -7.3080644607543945

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9666622281074524
    2. ' =' → logprob: -0.9666622281074524
    3. ' b' → logprob: -2.5916621685028076
    4. '[' → logprob: -3.3416621685028076
    5. '=' → logprob: -3.4666621685028076
    6. ' ' → logprob: -3.4666621685028076
    7. 'b' → logprob: -3.8416621685028076
    8. ' '' → logprob: -4.091662406921387
    9. ''' → logprob: -4.466662406921387
    10. ':' → logprob: -6.341662406921387

Token 803: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.150504231452942
    2. ' b' → logprob: -1.900504231452942
    3. '[' → logprob: -2.0255041122436523
    4. ' =' → logprob: -2.1505041122436523
    5. ' '' → logprob: -2.6505041122436523
    6. ''' → logprob: -2.6505041122436523
    7. ' ' → logprob: -2.9005041122436523
    8. '=' → logprob: -3.7755041122436523
    9. 'b' → logprob: -4.025504112243652
    10. '0' → logprob: -4.525504112243652

Token 804: ' ' (ID: 220)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0203897953033447
    2. '[' → logprob: -1.1453897953033447
    3. ' =' → logprob: -2.3953897953033447
    4. ' ' → logprob: -2.8953897953033447
    5. ' [' → logprob: -2.8953897953033447
    6. 'b' → logprob: -3.1453897953033447
    7. '   ' → logprob: -4.270389556884766
    8. ''' → logprob: -4.395389556884766
    9. '0' → logprob: -4.520389556884766
    10. '=' → logprob: -4.645389556884766

Token 805: '110' (ID: 7920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13125857710838318
    2. '=' → logprob: -3.631258487701416
    3. ' ' → logprob: -4.006258487701416
    4. ' =' → logprob: -4.006258487701416
    5. 'b' → logprob: -4.256258487701416
    6. '7' → logprob: -4.881258487701416
    7. '0' → logprob: -5.006258487701416
    8. ' [' → logprob: -5.006258487701416
    9. ''' → logprob: -5.131258487701416
    10. '1' → logprob: -5.381258487701416

Token 806: 'yyyy' (ID: 27343)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -1.5765767097473145
    2. ' ' → logprob: -1.7015767097473145
    3. '<|end|>' → logprob: -1.7015767097473145
    4. '<|end|>' → logprob: -1.8265767097473145
    5. '111' → logprob: -2.2015767097473145
    6. '  ' → logprob: -2.9515767097473145
    7. '    ' → logprob: -3.7015767097473145
    8. '   ' → logprob: -4.0765767097473145
    9. '>>>' → logprob: -4.3265767097473145
    10. '0' → logprob: -4.8265767097473145

Token 807: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4514685273170471
    2. 'b' → logprob: -2.4514684677124023
    3. '   ' → logprob: -2.9514684677124023
    4. '7' → logprob: -3.0764684677124023
    5. '0' → logprob: -3.2014684677124023
    6. '_' → logprob: -3.4514684677124023
    7. '```' → logprob: -3.7014684677124023
    8. '111' → logprob: -4.451468467712402
    9. ' ' → logprob: -4.576468467712402
    10. ')' → logprob: -4.701468467712402

Token 808: ' means' (ID: 4748)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12077800184488297
    2. ':' → logprob: -3.1207780838012695
    3. ' =' → logprob: -3.7457780838012695
    4. 'def' → logprob: -4.1207780838012695
    5. '   ' → logprob: -4.2457780838012695
    6. '=' → logprob: -5.3707780838012695
    7. ' ' → logprob: -6.2457780838012695
    8. ':
' → logprob: -6.8707780838012695
    9. 'b' → logprob: -7.2457780838012695
    10. ')' → logprob: -7.2457780838012695

Token 809: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0905628204345703
    2. 'b' → logprob: -1.7155628204345703
    3. ' b' → logprob: -1.9655628204345703
    4. ' [' → logprob: -2.2155628204345703
    5. '1' → logprob: -2.5905628204345703
    6. ''' → logprob: -3.2155628204345703
    7. '['' → logprob: -3.5905628204345703
    8. ' ' → logprob: -3.7155628204345703
    9. ''b' → logprob: -4.09056282043457
    10. ' '' → logprob: -4.46556282043457

Token 810: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8721004128456116
    2. ' ' → logprob: -1.6221003532409668
    3. ' '' → logprob: -2.247100353240967
    4. 'b' → logprob: -2.372100353240967
    5. ''' → logprob: -2.872100353240967
    6. '7' → logprob: -3.372100353240967
    7. '   ' → logprob: -3.372100353240967
    8. '0' → logprob: -4.122100353240967
    9. '1' → logprob: -4.497100353240967
    10. '[' → logprob: -4.622100353240967

Token 811: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8935815691947937
    2. ''' → logprob: -1.5185816287994385
    3. '['' → logprob: -2.3935816287994385
    4. ' '' → logprob: -2.7685816287994385
    5. ' [' → logprob: -3.0185816287994385
    6. '   ' → logprob: -3.1435816287994385
    7. 'b' → logprob: -3.2685816287994385
    8. '0' → logprob: -3.7685816287994385
    9. ' b' → logprob: -4.143581390380859
    10. ' ' → logprob: -4.393581390380859

Token 812: ' bit' (ID: 3546)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.4170938730239868
    2. ' ' → logprob: -1.5420938730239868
    3. '[' → logprob: -1.6670938730239868
    4. ' [' → logprob: -2.4170937538146973
    5. 'b' → logprob: -2.6670937538146973
    6. '   ' → logprob: -2.9170937538146973
    7. '0' → logprob: -3.1670937538146973
    8. '1' → logprob: -3.5420937538146973
    9. ' '' → logprob: -3.6670937538146973
    10. ''' → logprob: -4.042093753814697

Token 813: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0006255837506614625
    2. ' ' → logprob: -8.000625610351562
    3. '[' → logprob: -8.750625610351562
    4. '=' → logprob: -9.375625610351562
    5. ' =' → logprob: -10.875625610351562
    6. '_' → logprob: -11.125625610351562
    7. '   ' → logprob: -13.125625610351562
    8. 'def' → logprob: -13.500625610351562
    9. 'space' → logprob: -13.500625610351562
    10. 's' → logprob: -13.625625610351562

Token 814: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05648742616176605
    2. ' =' → logprob: -2.9314873218536377
    3. ' ==' → logprob: -6.806487560272217
    4. '==' → logprob: -7.931487560272217
    5. '='' → logprob: -9.431487083435059
    6. ' ' → logprob: -11.306487083435059
    7. ':' → logprob: -11.431487083435059
    8. '1' → logprob: -11.806487083435059
    9. ''' → logprob: -12.681487083435059
    10. ',' → logprob: -12.931487083435059

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016682932619005442
    2. ' ' → logprob: -8.750166893005371
    3. ''' → logprob: -12.000166893005371
    4. '   ' → logprob: -14.625166893005371
    5. '`' → logprob: -15.000166893005371
    6. '  ' → logprob: -15.125166893005371
    7. ' '' → logprob: -15.250166893005371
    8. 'b' → logprob: -15.500166893005371
    9. '0' → logprob: -15.625166893005371
    10. '    ' → logprob: -16.562665939331055

Token 816: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8113352656364441
    2. ',' → logprob: -0.9363352656364441
    3. ' =' → logprob: -2.311335325241089
    4. '   ' → logprob: -3.811335325241089
    5. '6' → logprob: -4.31133508682251
    6. ' ' → logprob: -4.93633508682251
    7. ' ,' → logprob: -5.43633508682251
    8. ',
' → logprob: -5.68633508682251
    9. '[' → logprob: -5.81133508682251
    10. '```' → logprob: -6.06133508682251

Token 817: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.2187730073928833
    2. 'bit' → logprob: -1.4687730073928833
    3. ' ' → logprob: -1.9687730073928833
    4. '6' → logprob: -2.2187728881835938
    5. ''' → logprob: -2.3437728881835938
    6. '1' → logprob: -2.9687728881835938
    7. ' '' → logprob: -3.8437728881835938
    8. '0' → logprob: -3.8437728881835938
    9. '7' → logprob: -4.968772888183594
    10. ' b' → logprob: -5.093772888183594

Token 818: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.625203132629395
    3. '0' → logprob: -11.625203132629395
    4. '1' → logprob: -12.500203132629395
    5. '7' → logprob: -12.875203132629395
    6. '=' → logprob: -13.375203132629395
    7. '2' → logprob: -13.750203132629395
    8. ')' → logprob: -13.875203132629395
    9. '' → logprob: -14.250203132629395
    10. '```' → logprob: -14.250203132629395

Token 819: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.629921436891891e-05
    2. '='' → logprob: -11.00002670288086
    3. ' =' → logprob: -11.87502670288086
    4. '1' → logprob: -14.00002670288086
    5. '=True' → logprob: -14.25002670288086
    6. '==' → logprob: -14.50002670288086
    7. '=
' → logprob: -14.62502670288086
    8. '=}' → logprob: -17.25002670288086
    9. '7' → logprob: -17.50002670288086
    10. '＝' → logprob: -17.87502670288086

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.250003814697266
    4. '  ' → logprob: -16.750003814697266
    5. '0' → logprob: -17.437503814697266
    6. 'True' → logprob: -17.937503814697266
    7. '    ' → logprob: -18.187503814697266
    8. 'true' → logprob: -18.312503814697266
    9. '۱' → logprob: -18.500003814697266
    10. ''' → logprob: -18.625003814697266

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5050839185714722
    2. '   ' → logprob: -1.5050839185714722
    3. ' ' → logprob: -2.8800840377807617
    4. '```' → logprob: -3.5050840377807617
    5. ' bit' → logprob: -3.6300840377807617
    6. '7' → logprob: -4.255084037780762
    7. 'bit' → logprob: -4.505084037780762
    8. ' ,' → logprob: -4.880084037780762
    9. '6' → logprob: -5.005084037780762
    10. '=' → logprob: -5.880084037780762

Token 822: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5895411968231201
    2. ' bit' → logprob: -1.4645411968231201
    3. '1' → logprob: -2.71454119682312
    4. ''' → logprob: -2.96454119682312
    5. ' ' → logprob: -3.21454119682312
    6. '0' → logprob: -4.089541435241699
    7. ' '' → logprob: -4.339541435241699
    8. '6' → logprob: -4.589541435241699
    9. 'b' → logprob: -4.964541435241699
    10. ' b' → logprob: -5.839541435241699

Token 823: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.5451681974809617e-05
    2. '2' → logprob: -11.375015258789062
    3. '0' → logprob: -13.000015258789062
    4. '1' → logprob: -14.625015258789062
    5. '7' → logprob: -14.625015258789062
    6. ' ' → logprob: -15.312515258789062
    7. '4' → logprob: -15.562515258789062
    8. '```' → logprob: -16.750015258789062
    9. '6' → logprob: -17.687515258789062
    10. '５' → logprob: -17.750015258789062

Token 824: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.780830830801278e-05
    2. '0' → logprob: -9.37508773803711
    3. ' =' → logprob: -12.87508773803711
    4. '='' → logprob: -15.37508773803711
    5. '1' → logprob: -17.62508773803711
    6. ',' → logprob: -17.87508773803711
    7. ' ' → logprob: -18.25008773803711
    8. '=
' → logprob: -18.50008773803711
    9. '==' → logprob: -18.75008773803711
    10. ''' → logprob: -18.87508773803711

Token 825: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -14.37500286102295
    4. '  ' → logprob: -18.687503814697266
    5. '   ' → logprob: -19.062503814697266
    6. '۰' → logprob: -19.187503814697266
    7. '    ' → logprob: -19.375003814697266
    8. 'bit' → logprob: -20.125003814697266
    9. '>' → logprob: -20.312503814697266
    10. '০' → logprob: -20.375003814697266

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06222345307469368
    2. '   ' → logprob: -3.937223434448242
    3. ')' → logprob: -4.062223434448242
    4. '<|end|>' → logprob: -4.812223434448242
    5. ' ,' → logprob: -5.562223434448242
    6. ' bit' → logprob: -5.687223434448242
    7. '[' → logprob: -6.312223434448242
    8. '```' → logprob: -6.437223434448242
    9. ',b' → logprob: -7.187223434448242
    10. ' ' → logprob: -7.312223434448242

Token 827: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.2840855121612549
    2. 'bit' → logprob: -1.4090855121612549
    3. ' b' → logprob: -6.534085273742676
    4. 'b' → logprob: -7.034085273742676
    5. '7' → logprob: -9.034085273742676
    6. ' ' → logprob: -9.159085273742676
    7. '6' → logprob: -9.784085273742676
    8. ''' → logprob: -10.159085273742676
    9. ')' → logprob: -10.159085273742676
    10. '<|end|>' → logprob: -10.159085273742676

Token 828: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -15.000001907348633
    3. '5' → logprob: -15.125001907348633
    4. '```' → logprob: -15.500001907348633
    5. '7' → logprob: -15.625001907348633
    6. '1' → logprob: -15.625001907348633
    7. '４' → logprob: -16.500001907348633
    8. '[' → logprob: -16.562501907348633
    9. ']' → logprob: -16.750001907348633
    10. '' → logprob: -16.812501907348633

Token 829: '=y' (ID: 70421)
  Prédit: '=y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=y' → logprob: -0.4759553372859955
    2. '=' → logprob: -0.9759553670883179
    3. 'y' → logprob: -6.350955486297607
    4. '=True' → logprob: -9.97595500946045
    5. ' =' → logprob: -10.22595500946045
    6. '='' → logprob: -11.60095500946045
    7. '=x' → logprob: -12.10095500946045
    8. '==' → logprob: -12.10095500946045
    9. '1' → logprob: -12.85095500946045
    10. '=yes' → logprob: -12.97595500946045

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05666001886129379
    2. ' bit' → logprob: -4.306660175323486
    3. ' ' → logprob: -4.431660175323486
    4. ' ,' → logprob: -4.556660175323486
    5. '   ' → logprob: -4.931660175323486
    6. '[' → logprob: -6.306660175323486
    7. 'bit' → logprob: -6.431660175323486
    8. '    ' → logprob: -6.556660175323486
    9. ')' → logprob: -6.556660175323486
    10. ' y' → logprob: -7.056660175323486

Token 831: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5641714930534363
    2. ' bit' → logprob: -0.9391714930534363
    3. '5' → logprob: -4.064171314239502
    4. '3' → logprob: -4.814171314239502
    5. ''' → logprob: -5.314171314239502
    6. 'b' → logprob: -6.314171314239502
    7. '```' → logprob: -6.314171314239502
    8. ' b' → logprob: -6.439171314239502
    9. ' ' → logprob: -6.564171314239502
    10. '4' → logprob: -6.689171314239502

Token 832: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '３' → logprob: -17.5
    3. ' ' → logprob: -18.25
    4. '4' → logprob: -18.75
    5. '۳' → logprob: -18.875
    6. '```' → logprob: -19.0
    7. '1' → logprob: -19.25
    8. '' → logprob: -19.5
    9. '[' → logprob: -19.75
    10. '=' → logprob: -19.875

Token 833: '=y' (ID: 70421)
  Prédit: '=y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=y' → logprob: -0.06369863450527191
    2. 'y' → logprob: -2.8136985301971436
    3. '=' → logprob: -6.688698768615723
    4. ' =' → logprob: -9.188698768615723
    5. ' y' → logprob: -9.313698768615723
    6. ',y' → logprob: -9.688698768615723
    7. ''y' → logprob: -9.813698768615723
    8. '‘y' → logprob: -10.313698768615723
    9. '<|end|>' → logprob: -10.313698768615723
    10. '<|end|>' → logprob: -10.313698768615723

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13464054465293884
    2. '```' → logprob: -3.0096404552459717
    3. ' ,' → logprob: -4.384640693664551
    4. '6' → logprob: -4.634640693664551
    5. '[' → logprob: -4.634640693664551
    6. ' b' → logprob: -4.884640693664551
    7. ' bit' → logprob: -5.009640693664551
    8. '   ' → logprob: -5.384640693664551
    9. 'b' → logprob: -5.759640693664551
    10. ' ' → logprob: -5.759640693664551

Token 835: ' bit' (ID: 3546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6295082569122314
    2. ' bit' → logprob: -2.1295082569122314
    3. 'bit' → logprob: -2.2545082569122314
    4. '4' → logprob: -2.3795082569122314
    5. '```' → logprob: -3.1295082569122314
    6. ''' → logprob: -3.1295082569122314
    7. ' b' → logprob: -4.504508018493652
    8. 'b' → logprob: -4.629508018493652
    9. ' ' → logprob: -4.754508018493652
    10. '6' → logprob: -4.754508018493652

Token 836: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '3' → logprob: -14.625001907348633
    4. '۲' → logprob: -17.750001907348633
    5. '２' → logprob: -18.250001907348633
    6. '  ' → logprob: -18.625001907348633
    7. '#' → logprob: -18.625001907348633
    8. '1' → logprob: -18.625001907348633
    9. '5' → logprob: -18.750001907348633
    10. '```' → logprob: -18.875001907348633

Token 837: '=y' (ID: 70421)
  Prédit: '=y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=y' → logprob: -0.3539181649684906
    2. 'y' → logprob: -1.603918194770813
    3. '=' → logprob: -2.3539180755615234
    4. ''y' → logprob: -7.103918075561523
    5. ' =' → logprob: -7.853918075561523
    6. ',y' → logprob: -8.728918075561523
    7. '<|end|>' → logprob: -8.728918075561523
    8. ' y' → logprob: -9.353918075561523
    9. '‘y' → logprob: -9.603918075561523
    10. '<|end|>' → logprob: -10.228918075561523

Token 838: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5917832255363464
    2. '   ' → logprob: -1.9667832851409912
    3. '[' → logprob: -2.091783285140991
    4. ' =' → logprob: -3.341783285140991
    5. ':' → logprob: -3.591783285140991
    6. ',' → logprob: -3.591783285140991
    7. '6' → logprob: -4.091783046722412
    8. '7' → logprob: -4.466783046722412
    9. 'def' → logprob: -4.591783046722412
    10. '    ' → logprob: -4.591783046722412

Token 839: ' bit' (ID: 3546)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.177389144897461
    2. ' ' → logprob: -1.802389144897461
    3. '[' → logprob: -2.177389144897461
    4. ' bit' → logprob: -2.302389144897461
    5. '6' → logprob: -2.677389144897461
    6. 'b' → logprob: -2.927389144897461
    7. '`' → logprob: -3.302389144897461
    8. 'bit' → logprob: -3.302389144897461
    9. ' b' → logprob: -3.927389144897461
    10. ''' → logprob: -4.177389144897461

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '6' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '7' → logprob: -15.375004768371582
    5. '' → logprob: -16.000003814697266
    6. '0' → logprob: -16.250003814697266
    7. '```' → logprob: -17.187503814697266
    8. '`' → logprob: -17.687503814697266
    9. '[' → logprob: -18.062503814697266
    10. '(' → logprob: -18.250003814697266

Token 841: '=x' (ID: 56980)
  Prédit: '=x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=x' → logprob: -0.5724744200706482
    2. '=' → logprob: -0.9474744200706482
    3. 'x' → logprob: -4.322474479675293
    4. ' =' → logprob: -4.322474479675293
    5. '='' → logprob: -4.447474479675293
    6. '=True' → logprob: -5.822474479675293
    7. '=False' → logprob: -6.072474479675293
    8. '<|end|>' → logprob: -6.197474479675293
    9. '=None' → logprob: -7.572474479675293
    10. '=lambda' → logprob: -7.697474479675293

Token 842: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6690973043441772
    2. '   ' → logprob: -1.7940973043441772
    3. '7' → logprob: -2.919097423553467
    4. ',' → logprob: -3.044097423553467
    5. '[' → logprob: -3.044097423553467
    6. 'def' → logprob: -3.169097423553467
    7. ':
' → logprob: -3.419097423553467
    8. ' =' → logprob: -3.919097423553467
    9. '=' → logprob: -4.044097423553467
    10. '6' → logprob: -4.794097423553467

Token 843: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.242229163646698
    2. 'bit' → logprob: -1.6172292232513428
    3. '0' → logprob: -4.492228984832764
    4. ''' → logprob: -6.492228984832764
    5. ' #' → logprob: -7.242228984832764
    6. ' b' → logprob: -7.492228984832764
    7. ' def' → logprob: -7.867228984832764
    8. ' ' → logprob: -7.867228984832764
    9. ' ' → logprob: -8.117229461669922
    10. '#' → logprob: -8.367229461669922

Token 844: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.5
    3. ' ' → logprob: -19.625
    4. '۰' → logprob: -20.125
    5. '7' → logprob: -20.625
    6. '6' → logprob: -21.875
    7. '０' → logprob: -22.1875
    8. '০' → logprob: -22.3125
    9. '०' → logprob: -22.3125
    10. '  ' → logprob: -22.375

Token 845: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010035372339189053
    2. ' =' → logprob: -4.760035514831543
    3. 'x' → logprob: -7.510035514831543
    4. '=x' → logprob: -7.760035514831543
    5. '<|end|>' → logprob: -8.510035514831543
    6. '=
' → logprob: -9.760035514831543
    7. '=True' → logprob: -9.885035514831543
    8. '='' → logprob: -10.010035514831543
    9. '=None' → logprob: -10.385035514831543
    10. ')' → logprob: -11.135035514831543

Token 846: '?
' (ID: 3901)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1850513517856598
    2. '0' → logprob: -1.9350513219833374
    3. '?' → logprob: -4.435051441192627
    4. 'None' → logprob: -5.310051441192627
    5. '1' → logprob: -5.685051441192627
    6. '<|end|>' → logprob: -6.560051441192627
    7. '_' → logprob: -7.685051441192627
    8. '-' → logprob: -7.810051441192627
    9. '<|end|>' → logprob: -8.185050964355469
    10. ''x' → logprob: -8.310050964355469

Token 847: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9997766613960266
    2. '0' → logprob: -2.374776601791382
    3. ')' → logprob: -2.624776601791382
    4. '#' → logprob: -2.624776601791382
    5. 'b' → logprob: -2.749776601791382
    6. ':' → logprob: -2.874776601791382
    7. 'def' → logprob: -2.874776601791382
    8. '   ' → logprob: -3.374776601791382
    9. ' ' → logprob: -3.374776601791382
    10. '<|end|>' → logprob: -3.874776601791382

Token 848: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.983492910861969
    2. ':' → logprob: -1.2334928512573242
    3. ')' → logprob: -2.108492851257324
    4. ' ' → logprob: -2.358492851257324
    5. '<|end|>' → logprob: -3.233492851257324
    6. '   ' → logprob: -4.233492851257324
    7. '#' (adapté à ' #') → logprob: -4.358492851257324
    8. '0' → logprob: -4.858492851257324
    9. 'x' → logprob: -5.608492851257324
    10. 'def' → logprob: -5.608492851257324

Token 849: ' but' (ID: 889)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.877431333065033
    2. '=' → logprob: -1.7524313926696777
    3. '0' → logprob: -1.8774313926696777
    4. ' =' → logprob: -2.5024313926696777
    5. '7' → logprob: -3.0024313926696777
    6. ':' → logprob: -3.7524313926696777
    7. '#' → logprob: -3.8774313926696777
    8. '   ' → logprob: -4.002431392669678
    9. 'def' → logprob: -4.002431392669678
    10. 'b' → logprob: -4.752431392669678

Token 850: ' in' (ID: 306)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.051527976989746
    2. '[' → logprob: -1.676527976989746
    3. ' b' → logprob: -1.676527976989746
    4. 'def' → logprob: -3.051527976989746
    5. '0' → logprob: -3.676527976989746
    6. ':' → logprob: -3.676527976989746
    7. 'x' → logprob: -3.801527976989746
    8. ' bit' → logprob: -3.926527976989746
    9. '#' → logprob: -4.051527976989746
    10. ' ' → logprob: -4.176527976989746

Token 851: ' problem' (ID: 4792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9476616382598877
    2. 'b' → logprob: -0.9476616382598877
    3. 'def' → logprob: -2.1976616382598877
    4. '[
' → logprob: -3.3226616382598877
    5. ' b' → logprob: -4.447661399841309
    6. '7' → logprob: -5.072661399841309
    7. ')' → logprob: -5.072661399841309
    8. ' [' → logprob: -5.447661399841309
    9. '```' → logprob: -5.447661399841309
    10. '(' → logprob: -5.697661399841309

Token 852: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.057717952877283096
    2. ':' → logprob: -4.057717800140381
    3. '<|end|>' → logprob: -4.307717800140381
    4. 'def' → logprob: -5.057717800140381
    5. ')' → logprob: -5.932717800140381
    6. ' ' → logprob: -6.057717800140381
    7. '7' → logprob: -6.307717800140381
    8. 'b' → logprob: -6.682717800140381
    9. ' [' → logprob: -6.682717800140381
    10. '(' → logprob: -6.807717800140381

Token 853: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4432990849018097
    2. '[' → logprob: -1.8182990550994873
    3. 'def' → logprob: -3.1932990550994873
    4. ' b' → logprob: -3.1932990550994873
    5. 'b' → logprob: -3.3182990550994873
    6. '<|end|>' → logprob: -4.693299293518066
    7. '...' → logprob: -4.818299293518066
    8. ' def' → logprob: -4.818299293518066
    9. ' x' → logprob: -4.943299293518066
    10. ' bit' → logprob: -5.068299293518066

Token 854: ' can' (ID: 665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08502256870269775
    2. '<|end|>' → logprob: -3.960022449493408
    3. ':' → logprob: -4.210022449493408
    4. ')' → logprob: -4.210022449493408
    5. '=' → logprob: -4.960022449493408
    6. '7' → logprob: -5.210022449493408
    7. 'def' → logprob: -5.335022449493408
    8. '#' → logprob: -5.960022449493408
    9. ' ' → logprob: -6.460022449493408
    10. '[
' → logprob: -6.585022449493408

Token 855: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.415808767080307
    2. 'be' → logprob: -2.16580867767334
    3. '=' → logprob: -2.41580867767334
    4. '[' → logprob: -3.29080867767334
    5. '7' → logprob: -3.41580867767334
    6. ''' → logprob: -3.66580867767334
    7. '0' → logprob: -4.41580867767334
    8. ' =' → logprob: -4.91580867767334
    9. 'b' → logprob: -5.04080867767334
    10. '...' → logprob: -6.16580867767334

Token 856: ' any' (ID: 1062)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3103322386741638
    2. ''x' → logprob: -2.9353322982788086
    3. '0' → logprob: -3.1853322982788086
    4. 'anything' → logprob: -3.4353322982788086
    5. 'None' → logprob: -3.6853322982788086
    6. 'any' → logprob: -3.9353322982788086
    7. '1' → logprob: -4.310332298278809
    8. ''b' → logprob: -4.310332298278809
    9. 'x' → logprob: -4.310332298278809
    10. ''s' → logprob: -4.435332298278809

Token 857: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38220828771591187
    2. ':' → logprob: -2.2572083473205566
    3. '=' → logprob: -2.8822083473205566
    4. 'def' → logprob: -2.8822083473205566
    5. ' =' → logprob: -3.1322083473205566
    6. '<|end|>' → logprob: -4.382208347320557
    7. '7' → logprob: -4.882208347320557
    8. '(' → logprob: -5.007208347320557
    9. ',' → logprob: -5.632208347320557
    10. ' ' → logprob: -5.757208347320557

Token 858: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2240086793899536
    2. 'range' → logprob: -1.4740086793899536
    3. '7' → logprob: -1.5990086793899536
    4. 'b' → logprob: -1.8490086793899536
    5. ' range' → logprob: -3.474008560180664
    6. '2' → logprob: -3.849008560180664
    7. '0' → logprob: -4.224008560180664
    8. ' ' → logprob: -4.599008560180664
    9. '1' → logprob: -4.849008560180664
    10. 'x' → logprob: -4.974008560180664

Token 859: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34847456216812134
    2. ':' → logprob: -2.5984745025634766
    3. ' ' → logprob: -2.9734745025634766
    4. '=' → logprob: -3.3484745025634766
    5. 'def' → logprob: -3.3484745025634766
    6. ' =' → logprob: -4.098474502563477
    7. '0' → logprob: -4.223474502563477
    8. '7' → logprob: -4.348474502563477
    9. '<|end|>' → logprob: -4.348474502563477
    10. '   ' → logprob: -4.598474502563477

Token 860: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.607260525226593
    2. ':' → logprob: -0.857260525226593
    3. ' :' → logprob: -5.232260704040527
    4. ',' → logprob: -5.357260704040527
    5. '7' → logprob: -5.357260704040527
    6. 'def' → logprob: -5.732260704040527
    7. '<|end|>' → logprob: -6.357260704040527
    8. '):' → logprob: -6.482260704040527
    9. '   ' → logprob: -6.857260704040527
    10. '(' → logprob: -6.857260704040527

Token 861: ' y' (ID: 342)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.3257373571395874
    2. 'b' → logprob: -1.7007373571395874
    3. ' bit' → logprob: -2.825737476348877
    4. '7' → logprob: -4.450737476348877
    5. ' b' → logprob: -4.825737476348877
    6. '2' → logprob: -5.075737476348877
    7. 'def' → logprob: -6.200737476348877
    8. '0' → logprob: -6.450737476348877
    9. ' ' → logprob: -6.575737476348877
    10. 'x' → logprob: -7.075737476348877

Token 862: ' can' (ID: 665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39017006754875183
    2. '<|end|>' → logprob: -2.140170097351074
    3. ':' → logprob: -2.515170097351074
    4. '7' → logprob: -2.890170097351074
    5. 'def' → logprob: -4.265170097351074
    6. ',' → logprob: -4.890170097351074
    7. '0' → logprob: -5.015170097351074
    8. ')' → logprob: -5.265170097351074
    9. ' ' → logprob: -5.265170097351074
    10. '=' → logprob: -5.640170097351074

Token 863: ' be' (ID: 413)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6668208837509155
    2. ' be' → logprob: -1.5418208837509155
    3. '[' → logprob: -2.791821002960205
    4. ''' → logprob: -2.916821002960205
    5. ' ' → logprob: -3.416821002960205
    6. '0' → logprob: -3.416821002960205
    7. '=' → logprob: -3.541821002960205
    8. 'be' → logprob: -3.666821002960205
    9. '1' → logprob: -4.041821002960205
    10. '6' → logprob: -4.916821002960205

Token 864: ' any' (ID: 1062)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0765396356582642
    2. '7' → logprob: -1.7015396356582642
    3. 'None' → logprob: -2.2015395164489746
    4. '1' → logprob: -2.4515395164489746
    5. '0' → logprob: -3.4515395164489746
    6. '2' → logprob: -3.4515395164489746
    7. 'x' → logprob: -3.7015395164489746
    8. 'b' → logprob: -3.7015395164489746
    9. ' ' → logprob: -3.9515395164489746
    10. ' None' → logprob: -4.076539516448975

Token 865: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11636780202388763
    2. ':' → logprob: -2.866367816925049
    3. 'def' → logprob: -4.241367816925049
    4. ' ' → logprob: -4.616367816925049
    5. '7' → logprob: -4.741367816925049
    6. ' =' → logprob: -5.616367816925049
    7. '<|end|>' → logprob: -6.366367816925049
    8. ' :' → logprob: -6.366367816925049
    9. ' [' → logprob: -6.741367816925049
    10. ',' → logprob: -6.866367816925049

Token 866: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22131094336509705
    2. '=' → logprob: -2.22131085395813
    3. ':' → logprob: -3.97131085395813
    4. '7' → logprob: -4.221311092376709
    5. '<|end|>' → logprob: -4.471311092376709
    6. ')' → logprob: -4.596311092376709
    7. 'def' → logprob: -5.221311092376709
    8. 'b' → logprob: -5.471311092376709
    9. '[
' → logprob: -5.471311092376709
    10. ',' → logprob: -5.971311092376709

Token 867: '/' (ID: 14)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.342756450176239
    2. '=' → logprob: -1.5927565097808838
    3. '6' → logprob: -4.217756271362305
    4. '<|end|>' → logprob: -4.342756271362305
    5. 'def' → logprob: -4.467756271362305
    6. ':' → logprob: -4.467756271362305
    7. '0' → logprob: -4.717756271362305
    8. ' =' → logprob: -5.342756271362305
    9. 'b' → logprob: -5.467756271362305
    10. ',' → logprob: -5.842756271362305

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026852793525904417
    2. '0' → logprob: -6.002685070037842
    3. '7' → logprob: -9.002685546875
    4. ' ' → logprob: -10.127685546875
    5. 'x' → logprob: -10.377685546875
    6. '```' → logprob: -11.752685546875
    7. '``' → logprob: -12.752685546875
    8. '`' → logprob: -13.752685546875
    9. ' or' → logprob: -14.502685546875
    10. 'y' → logprob: -14.627685546875

Token 869: ' but' (ID: 889)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48622003197669983
    2. '<|end|>' → logprob: -2.111220121383667
    3. ' ' → logprob: -2.486220121383667
    4. ':' → logprob: -3.111220121383667
    5. 'def' → logprob: -3.361220121383667
    6. '   ' → logprob: -3.861220121383667
    7. ')' → logprob: -3.986220121383667
    8. '7' → logprob: -4.236219882965088
    9. 'x' → logprob: -5.111219882965088
    10. 'b' → logprob: -5.111219882965088

Token 870: ' not' (ID: 625)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.812576174736023
    2. ' bit' → logprob: -1.937576174736023
    3. '0' → logprob: -2.0625762939453125
    4. ' ' → logprob: -2.8125762939453125
    5. '2' → logprob: -2.9375762939453125
    6. 'bit' → logprob: -3.0625762939453125
    7. 'b' → logprob: -3.4375762939453125
    8. ' b' → logprob: -3.9375762939453125
    9. '1' → logprob: -4.3125762939453125
    10. ' y' → logprob: -4.6875762939453125

Token 871: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.16035817563533783
    2. '0' → logprob: -2.410358190536499
    3. ' all' → logprob: -2.910358190536499
    4. '1' → logprob: -5.78535795211792
    5. 'zero' → logprob: -7.78535795211792
    6. ' ' → logprob: -8.660358428955078
    7. 'bit' → logprob: -9.910358428955078
    8. 'def' → logprob: -10.160358428955078
    9. 'b' → logprob: -10.785358428955078
    10. 'always' → logprob: -10.785358428955078

Token 872: ' zero' (ID: 12421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7156342267990112
    2. '[' → logprob: -1.0906342267990112
    3. ' =' → logprob: -2.590634346008301
    4. 'b' → logprob: -3.590634346008301
    5. 'def' → logprob: -3.840634346008301
    6. '7' → logprob: -4.465634346008301
    7. 'x' → logprob: -5.215634346008301
    8. ' ' → logprob: -5.340634346008301
    9. '0' → logprob: -5.590634346008301
    10. ')' → logprob: -6.090634346008301

Token 873: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.985751748085022
    2. '[' → logprob: -1.235751748085022
    3. ':' → logprob: -1.860751748085022
    4. '   ' → logprob: -2.4857516288757324
    5. ' =' → logprob: -3.4857516288757324
    6. '=' → logprob: -4.360751628875732
    7. '7' → logprob: -4.860751628875732
    8. ',' → logprob: -4.860751628875732
    9. ' def' → logprob: -4.860751628875732
    10. ':
' → logprob: -5.110751628875732

Token 874: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6740115880966187
    2. '[' → logprob: -2.174011707305908
    3. ':' → logprob: -2.674011707305908
    4. 'def' → logprob: -3.049011707305908
    5. ' ' → logprob: -3.049011707305908
    6. '7' → logprob: -3.299011707305908
    7. '0' → logprob: -3.424011707305908
    8. 'b' → logprob: -3.674011707305908
    9. ' b' → logprob: -3.799011707305908
    10. '```' → logprob: -4.424011707305908

Token 875: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.786135196685791
    2. '   ' → logprob: -1.911135196685791
    3. '7' → logprob: -2.536135196685791
    4. ':' → logprob: -2.911135196685791
    5. ' ' → logprob: -3.036135196685791
    6. ' b' → logprob: -3.286135196685791
    7. 'b' → logprob: -3.286135196685791
    8. '0' → logprob: -4.036135196685791
    9. 'def' → logprob: -4.036135196685791
    10. 'x' → logprob: -4.286135196685791

Token 876: ' From' (ID: 7217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26687437295913696
    2. 'def' → logprob: -2.016874313354492
    3. ' if' → logprob: -4.016874313354492
    4. 'b' → logprob: -4.016874313354492
    5. 'if' → logprob: -4.516874313354492
    6. '#' → logprob: -4.766874313354492
    7. '[' → logprob: -4.766874313354492
    8. ' #' → logprob: -5.266874313354492
    9. ' b' → logprob: -5.516874313354492
    10. '7' → logprob: -5.641874313354492

Token 877: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.743878185749054
    2. 'b' → logprob: -1.4938781261444092
    3. '7' → logprob: -1.9938781261444092
    4. ' ' → logprob: -3.993878126144409
    5. 'bit' → logprob: -4.118878364562988
    6. 'x' → logprob: -4.118878364562988
    7. '[' → logprob: -4.243878364562988
    8. '#' → logprob: -4.243878364562988
    9. ' b' → logprob: -4.368878364562988
    10. '0' → logprob: -4.743878364562988

Token 878: ' text' (ID: 2201)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06951428204774857
    2. ':' → logprob: -3.569514274597168
    3. '7' → logprob: -4.819514274597168
    4. 'def' → logprob: -5.069514274597168
    5. '<|end|>' → logprob: -5.194514274597168
    6. 'b' → logprob: -5.194514274597168
    7. ' [' → logprob: -6.069514274597168
    8. '#' → logprob: -6.444514274597168
    9. ' ' → logprob: -6.444514274597168
    10. '[
' → logprob: -6.819514274597168

Token 879: ' pattern' (ID: 8302)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4801718294620514
    2. ' ' → logprob: -1.605171799659729
    3. ':' → logprob: -3.2301719188690186
    4. 'def' → logprob: -3.2301719188690186
    5. '<|end|>' → logprob: -3.4801719188690186
    6. '#' → logprob: -3.9801719188690186
    7. ' def' → logprob: -4.8551716804504395
    8. ' #' → logprob: -4.8551716804504395
    9. ' =' → logprob: -5.4801716804504395
    10. '   ' → logprob: -5.6051716804504395

Token 880: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07406189292669296
    2. ':' → logprob: -3.449061870574951
    3. '<|end|>' → logprob: -4.199061870574951
    4. '(' → logprob: -4.699061870574951
    5. 'def' → logprob: -5.324061870574951
    6. ' ' → logprob: -6.074061870574951
    7. '   ' → logprob: -6.699061870574951
    8. '7' → logprob: -7.199061870574951
    9. ' (' → logprob: -7.449061870574951
    10. ' [' → logprob: -7.574061870574951

Token 881: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024287132546305656
    2. '7' → logprob: -5.524287223815918
    3. 'def' → logprob: -5.899287223815918
    4. '(' → logprob: -6.024287223815918
    5. 'b' → logprob: -6.024287223815918
    6. '=' → logprob: -6.274287223815918
    7. '[
' → logprob: -6.274287223815918
    8. ':' → logprob: -6.399287223815918
    9. '#' → logprob: -6.649287223815918
    10. ')' → logprob: -6.649287223815918

Token 882: ':
' (ID: 734)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6039981245994568
    2. 'b' → logprob: -1.8539981842041016
    3. 'def' → logprob: -2.2289981842041016
    4. ':' → logprob: -2.6039981842041016
    5. ')' → logprob: -3.4789981842041016
    6. '[' → logprob: -3.8539981842041016
    7. 'y' → logprob: -4.228998184204102
    8. '2' → logprob: -4.978998184204102
    9. '#' → logprob: -5.353998184204102
    10. '   ' → logprob: -5.478998184204102

Token 883: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22299087047576904
    2. '    ' → logprob: -2.9729909896850586
    3. '[' → logprob: -3.9729909896850586
    4. '   ' → logprob: -4.097990989685059
    5. ' x' → logprob: -4.097990989685059
    6. '<|end|>' → logprob: -4.222990989685059
    7. 'b' → logprob: -4.347990989685059
    8. 'x' → logprob: -4.722990989685059
    9. '7' → logprob: -4.722990989685059
    10. 'def' → logprob: -4.972990989685059

Token 884: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1633152961730957
    2. ' b' → logprob: -1.2883152961730957
    3. ' ' → logprob: -2.2883152961730957
    4. 'b' → logprob: -2.5383152961730957
    5. '[' → logprob: -2.9133152961730957
    6. ' x' → logprob: -3.1633152961730957
    7. 'x' → logprob: -3.6633152961730957
    8. '#' (adapté à ' #') → logprob: -3.7883152961730957
    9. ' #' → logprob: -3.7883152961730957
    10. ' [' → logprob: -4.913315296173096

Token 885: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35112449526786804
    2. 'b' → logprob: -2.4761245250701904
    3. 'def' → logprob: -2.9761245250701904
    4. '[' → logprob: -3.2261245250701904
    5. '#' → logprob: -3.7261245250701904
    6. ' b' → logprob: -3.8511245250701904
    7. ' ' → logprob: -4.226124286651611
    8. '7' → logprob: -4.351124286651611
    9. 'x' → logprob: -4.476124286651611
    10. ' #' → logprob: -5.351124286651611

Token 886: '110' (ID: 7920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0444083213806152
    2. '7' → logprob: -1.2944083213806152
    3. 'b' → logprob: -2.5444083213806152
    4. 'def' → logprob: -2.6694083213806152
    5. ' ' → logprob: -2.7944083213806152
    6. '#' → logprob: -2.7944083213806152
    7. 'x' → logprob: -4.169408321380615
    8. ')' → logprob: -4.419408321380615
    9. '0' → logprob: -4.544408321380615
    10. ' b' → logprob: -4.794408321380615

Token 887: 'yyyy' (ID: 27343)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0024273828603327274
    2. 'yyyy' → logprob: -6.502427577972412
    3. '111' → logprob: -7.502427577972412
    4. '1' → logprob: -9.877427101135254
    5. ' ' → logprob: -10.002427101135254
    6. '[' → logprob: -10.127427101135254
    7. 'y' → logprob: -10.252427101135254
    8. 'xxxx' → logprob: -10.752427101135254
    9. '<|end|>' → logprob: -10.752427101135254
    10. ')' → logprob: -10.877427101135254

Token 888: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30912646651268005
    2. ':' → logprob: -2.309126377105713
    3. '7' → logprob: -2.559126377105713
    4. 'b' → logprob: -4.059126377105713
    5. 'def' → logprob: -4.309126377105713
    6. ',' → logprob: -4.434126377105713
    7. '0' → logprob: -4.684126377105713
    8. ')' → logprob: -4.809126377105713
    9. '=' → logprob: -4.934126377105713
    10. '_' → logprob: -5.559126377105713

Token 889: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7499260902404785
    2. ':' → logprob: -1.6249260902404785
    3. '   ' → logprob: -1.8749260902404785
    4. 'def' → logprob: -2.8749260902404785
    5. ' =' → logprob: -3.6249260902404785
    6. ',' → logprob: -3.8749260902404785
    7. ' ' → logprob: -4.2499260902404785
    8. '7' → logprob: -4.7499260902404785
    9. ' :' → logprob: -5.1249260902404785
    10. ':
' → logprob: -5.2499260902404785

Token 890: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.267487108707428
    2. '=' → logprob: -2.392487049102783
    3. ':' → logprob: -3.142487049102783
    4. ' =' → logprob: -3.517487049102783
    5. '   ' → logprob: -3.767487049102783
    6. 'def' → logprob: -4.392487049102783
    7. ' ' → logprob: -5.017487049102783
    8. ')' → logprob: -5.517487049102783
    9. '<|end|>' → logprob: -5.517487049102783
    10. 'b' → logprob: -6.017487049102783

Token 891: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.005422292742878199
    2. '000' → logprob: -5.630422115325928
    3. '111' → logprob: -7.630422115325928
    4. '0' → logprob: -8.380422592163086
    5. '110' → logprob: -8.630422592163086
    6. '100' → logprob: -8.755422592163086
    7. 'xxxxx' → logprob: -8.755422592163086
    8. 'bbbb' → logprob: -8.880422592163086
    9. 'b' → logprob: -9.005422592163086
    10. '7' → logprob: -9.505422592163086

Token 892: 'xx' (ID: 7605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3075871169567108
    2. '0' → logprob: -2.557587146759033
    3. '7' → logprob: -2.682587146759033
    4. '00' → logprob: -2.682587146759033
    5. '000' → logprob: -3.682587146759033
    6. '[]' → logprob: -5.057587146759033
    7. 'b' → logprob: -5.432587146759033
    8. '<|end|>' → logprob: -6.182587146759033
    9. '```' → logprob: -6.682587146759033
    10. ')' → logprob: -6.682587146759033

Token 893: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.603178083896637
    2. '[' → logprob: -1.1031780242919922
    3. ':' → logprob: -2.728178024291992
    4. 'def' → logprob: -3.728178024291992
    5. ' :' → logprob: -5.228178024291992
    6. ' ' → logprob: -5.228178024291992
    7. '7' → logprob: -6.103178024291992
    8. ',' → logprob: -6.603178024291992
    9. ' def' → logprob: -6.728178024291992
    10. ' =' → logprob: -6.728178024291992

Token 894: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3057194650173187
    2. ':' → logprob: -2.8057193756103516
    3. ' ' → logprob: -2.9307193756103516
    4. '   ' → logprob: -3.5557193756103516
    5. '7' → logprob: -3.6807193756103516
    6. ' =' → logprob: -3.9307193756103516
    7. '<|end|>' → logprob: -4.180719375610352
    8. 'b' → logprob: -4.305719375610352
    9. 'def' → logprob: -4.805719375610352
    10. ')' → logprob: -4.805719375610352

Token 895: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8950406908988953
    2. '[' → logprob: -1.14504075050354
    3. ' ' → logprob: -2.02004075050354
    4. 'def' → logprob: -3.64504075050354
    5. 'b' → logprob: -3.89504075050354
    6. '7' → logprob: -3.89504075050354
    7. ' b' → logprob: -4.395040512084961
    8. '#' (adapté à ' #') → logprob: -4.770040512084961
    9. ':' → logprob: -5.020040512084961
    10. '0' → logprob: -5.270040512084961

Token 896: ' meaning' (ID: 10915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13061794638633728
    2. 'def' → logprob: -2.75561785697937
    3. ' b' → logprob: -4.505618095397949
    4. 'b' → logprob: -4.755618095397949
    5. ' if' → logprob: -4.755618095397949
    6. ' def' → logprob: -5.255618095397949
    7. '[' → logprob: -5.630618095397949
    8. '7' → logprob: -6.005618095397949
    9. ' =' → logprob: -6.130618095397949
    10. ' ' → logprob: -6.505618095397949

Token 897: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2150441408157349
    2. '   ' → logprob: -1.9650441408157349
    3. ' =' → logprob: -2.0900440216064453
    4. 'b' → logprob: -2.0900440216064453
    5. ' b' → logprob: -2.4650440216064453
    6. ' ' → logprob: -2.8400440216064453
    7. '=' → logprob: -3.2150440216064453
    8. 'def' → logprob: -3.3400440216064453
    9. '7' → logprob: -3.4650440216064453
    10. '    ' → logprob: -3.8400440216064453

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20716910064220428
    2. ' b' → logprob: -2.9571690559387207
    3. '[' → logprob: -3.3321690559387207
    4. ' ' → logprob: -3.3321690559387207
    5. 'b' → logprob: -3.5821690559387207
    6. '7' → logprob: -5.082169055938721
    7. '    ' → logprob: -5.207169055938721
    8. ' x' → logprob: -5.457169055938721
    9. '0' → logprob: -5.582169055938721
    10. ' =' → logprob: -5.957169055938721

Token 899: ' #' (ID: 1069)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.9296213984489441
    2. '[' → logprob: -1.5546214580535889
    3. ' ' → logprob: -1.5546214580535889
    4. ' b' → logprob: -2.679621458053589
    5. 'b' → logprob: -3.054621458053589
    6. ' [' → logprob: -3.679621458053589
    7. '0' → logprob: -4.42962121963501
    8. ' bit' → logprob: -4.80462121963501
    9. '   ' → logprob: -5.42962121963501
    10. ''' → logprob: -5.55462121963501

Token 900: ' byte' (ID: 9239)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2027338743209839
    2. 'b' → logprob: -2.4527339935302734
    3. '[' → logprob: -3.5777339935302734
    4. ' x' → logprob: -4.077733993530273
    5. ' [' → logprob: -4.952733993530273
    6. ' bit' → logprob: -5.077733993530273
    7. '7' → logprob: -5.202733993530273
    8. ' #' → logprob: -5.452733993530273
    9. ' ' → logprob: -5.827733993530273
    10. '   ' → logprob: -5.952733993530273

Token 901: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5170083045959473
    2. '7' → logprob: -1.1420083045959473
    3. '1' → logprob: -2.8920083045959473
    4. 'b' → logprob: -4.767008304595947
    5. '0' → logprob: -5.142008304595947
    6. 's' → logprob: -5.642008304595947
    7. '=' → logprob: -6.142008304595947
    8. ' =' → logprob: -6.392008304595947
    9. '[
' → logprob: -6.517008304595947
    10. ')' → logprob: -6.892008304595947

Token 902: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044708501547575
    2. '7' → logprob: -3.794708490371704
    3. '=' → logprob: -4.419708728790283
    4. ' =' → logprob: -5.294708728790283
    5. 'b' → logprob: -7.044708728790283
    6. '=[' → logprob: -7.169708728790283
    7. ':' → logprob: -7.169708728790283
    8. '   ' → logprob: -7.919708728790283
    9. ' [' → logprob: -8.169708251953125
    10. '#' → logprob: -8.294708251953125

Token 903: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1442893743515015
    2. '[' → logprob: -1.1442893743515015
    3. '7' → logprob: -1.3942893743515015
    4. ' =' → logprob: -2.394289493560791
    5. '=[' → logprob: -5.144289493560791
    6. 'b' → logprob: -5.394289493560791
    7. '   ' → logprob: -5.519289493560791
    8. '#' → logprob: -6.519289493560791
    9. 'def' → logprob: -6.644289493560791
    10. ':' → logprob: -6.769289493560791

Token 904: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2666489779949188
    2. '['' → logprob: -2.516649007797241
    3. ''' → logprob: -2.641649007797241
    4. '1' → logprob: -3.766649007797241
    5. ' [' → logprob: -4.141648769378662
    6. 'b' → logprob: -4.766648769378662
    7. '7' → logprob: -4.891648769378662
    8. ' ' → logprob: -5.016648769378662
    9. ' '' → logprob: -5.141648769378662
    10. '[
' → logprob: -5.766648769378662

Token 905: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002338066464290023
    2. '[' → logprob: -6.12733793258667
    3. '=' → logprob: -9.127338409423828
    4. ' ' → logprob: -10.627338409423828
    5. ''' → logprob: -12.627338409423828
    6. '['' → logprob: -12.752338409423828
    7. '_' → logprob: -13.127338409423828
    8. ' =' → logprob: -13.252338409423828
    9. ')' → logprob: -13.752338409423828
    10. '1' → logprob: -14.002338409423828

Token 906: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005569627974182367
    2. ' =' → logprob: -7.625556945800781
    3. '='' → logprob: -10.000556945800781
    4. '=
' → logprob: -11.250556945800781
    5. '=}' → logprob: -13.125556945800781
    6. '==' → logprob: -13.500556945800781
    7. '=`' → logprob: -13.500556945800781
    8. ',' → logprob: -13.625556945800781
    9. '1' → logprob: -14.000556945800781
    10. '=

' → logprob: -14.125556945800781

Token 907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016041172668337822
    2. ''' → logprob: -4.141041278839111
    3. '`' → logprob: -13.141040802001953
    4. ' ' → logprob: -13.266040802001953
    5. '"' → logprob: -13.641040802001953
    6. ' '' → logprob: -14.391040802001953
    7. '   ' → logprob: -14.391040802001953
    8. '  ' → logprob: -15.766040802001953
    9. '=' → logprob: -16.141040802001953
    10. ''''' → logprob: -16.516040802001953

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01831897534430027
    2. '   ' → logprob: -5.268319129943848
    3. ' ,' → logprob: -5.643319129943848
    4. '=' → logprob: -5.893319129943848
    5. ' b' → logprob: -6.143319129943848
    6. ',
' → logprob: -6.518319129943848
    7. ',b' → logprob: -6.643319129943848
    8. '```' → logprob: -7.643319129943848
    9. ' ' → logprob: -7.768319129943848
    10. 'b' → logprob: -8.268319129943848

Token 909: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3568435311317444
    2. ' b' → logprob: -1.2318434715270996
    3. '1' → logprob: -5.6068434715271
    4. ' ' → logprob: -5.9818434715271
    5. '6' → logprob: -6.3568434715271
    6. '7' → logprob: -8.481843948364258
    7. '   ' → logprob: -9.231843948364258
    8. ' ' → logprob: -10.356843948364258
    9. '    ' → logprob: -10.981843948364258
    10. '`' → logprob: -11.606843948364258

Token 910: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0021950986701995134
    2. '7' → logprob: -6.127194881439209
    3. '1' → logprob: -13.127195358276367
    4. '[' → logprob: -13.377195358276367
    5. '<|end|>' → logprob: -13.752195358276367
    6. ' ' → logprob: -13.877195358276367
    7. '0' → logprob: -14.502195358276367
    8. '5' → logprob: -14.877195358276367
    9. '' → logprob: -15.127195358276367
    10. 'next' → logprob: -15.564695358276367

Token 911: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.630610641877865e-06
    2. ' =' → logprob: -12.875006675720215
    3. '=True' → logprob: -13.000006675720215
    4. '6' → logprob: -14.125006675720215
    5. '1' → logprob: -14.625006675720215
    6. '==' → logprob: -14.750006675720215
    7. '='' → logprob: -15.750006675720215
    8. '=
' → logprob: -17.7500057220459
    9. '7' → logprob: -17.8750057220459
    10. '=False' → logprob: -17.8750057220459

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. ''' → logprob: -15.750009536743164
    4. '0' → logprob: -16.562509536743164
    5. '<|end|>' → logprob: -16.750009536743164
    6. '  ' → logprob: -16.875009536743164
    7. '...' → logprob: -17.187509536743164
    8. '<|end|>' → logprob: -17.312509536743164
    9. ',' → logprob: -17.437509536743164
    10. '"' → logprob: -17.625009536743164

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12871892750263214
    2. ' b' → logprob: -2.878718852996826
    3. 'b' → logprob: -3.003718852996826
    4. ',b' → logprob: -5.003718852996826
    5. ' ,' → logprob: -5.503718852996826
    6. ')' → logprob: -6.628718852996826
    7. '```' → logprob: -6.628718852996826
    8. ' ' → logprob: -8.003719329833984
    9. ',
' → logprob: -8.378719329833984
    10. '=' → logprob: -8.753719329833984

Token 914: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.24092429876327515
    2. 'b' → logprob: -1.61592435836792
    3. ' ' → logprob: -4.36592435836792
    4. '5' → logprob: -6.74092435836792
    5. '1' → logprob: -7.61592435836792
    6. ''' → logprob: -8.490923881530762
    7. '0' → logprob: -8.490923881530762
    8. '6' → logprob: -8.740923881530762
    9. '`' → logprob: -8.990923881530762
    10. 'bit' → logprob: -9.490923881530762

Token 915: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -14.375001907348633
    3. '2' → logprob: -15.125001907348633
    4. '7' → logprob: -15.375001907348633
    5. '
' → logprob: -15.437501907348633
    6. '4' → logprob: -15.625001907348633
    7. ' ' → logprob: -15.750001907348633
    8. '1' → logprob: -15.750001907348633
    9. '```' → logprob: -16.250001907348633
    10. '５' → logprob: -16.687501907348633

Token 916: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019310165662318468
    2. '0' → logprob: -6.251931190490723
    3. ' =' → logprob: -14.376931190490723
    4. '='' → logprob: -14.751931190490723
    5. '```' → logprob: -14.876931190490723
    6. '=`' → logprob: -15.251931190490723
    7. '`' → logprob: -15.376931190490723
    8. ' ' → logprob: -15.626931190490723
    9. '==' → logprob: -16.126930236816406
    10. '=
' → logprob: -16.126930236816406

Token 917: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '1' → logprob: -17.5
    4. '   ' → logprob: -20.25
    5. '۰' → logprob: -20.5
    6. ',' → logprob: -21.125
    7. '```' → logprob: -21.375
    8. '2' → logprob: -21.375
    9. '`' → logprob: -21.4375
    10. '=' → logprob: -21.5

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04512540623545647
    2. '   ' → logprob: -3.6701254844665527
    3. ')' → logprob: -4.795125484466553
    4. ',b' → logprob: -6.295125484466553
    5. ' ,' → logprob: -6.295125484466553
    6. ' ' → logprob: -6.670125484466553
    7. ' b' → logprob: -6.795125484466553
    8. '<|end|>' → logprob: -6.920125484466553
    9. '    ' → logprob: -7.545125484466553
    10. '[' → logprob: -7.920125484466553

Token 919: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4749241769313812
    2. 'b' → logprob: -0.9749242067337036
    3. ' ' → logprob: -7.724924087524414
    4. ''' → logprob: -9.474924087524414
    5. '6' → logprob: -9.974924087524414
    6. '7' → logprob: -9.974924087524414
    7. '4' → logprob: -10.224924087524414
    8. ' '' → logprob: -10.474924087524414
    9. '0' → logprob: -10.599924087524414
    10. '32' → logprob: -10.724924087524414

Token 920: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.719917630311102e-05
    2. '5' → logprob: -9.875077247619629
    3. '2' → logprob: -11.375077247619629
    4. '3' → logprob: -12.500077247619629
    5. '1' → logprob: -12.625077247619629
    6. '
' → logprob: -13.250077247619629
    7. ' ' → logprob: -13.375077247619629
    8. '```' → logprob: -14.187577247619629
    9. '7' → logprob: -14.375077247619629
    10. '0' → logprob: -14.625077247619629

Token 921: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12508629262447357
    2. '=y' → logprob: -3.0000863075256348
    3. ',' → logprob: -3.8750863075256348
    4. 'y' → logprob: -4.000086307525635
    5. '=True' → logprob: -4.625086307525635
    6. '7' → logprob: -5.875086307525635
    7. ' =' → logprob: -6.375086307525635
    8. ',y' → logprob: -6.375086307525635
    9. '<|end|>' → logprob: -6.500086307525635
    10. '=b' → logprob: -6.500086307525635

Token 922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1068868488073349
    2. '   ' → logprob: -2.856886863708496
    3. '=' → logprob: -4.856886863708496
    4. '<|end|>' → logprob: -5.356886863708496
    5. '6' → logprob: -5.481886863708496
    6. ' =' → logprob: -5.606886863708496
    7. '    ' → logprob: -5.731886863708496
    8. ' ' → logprob: -5.731886863708496
    9. '[' → logprob: -5.856886863708496
    10. ')' → logprob: -6.106886863708496

Token 923: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1020246148109436
    2. ' b' → logprob: -2.477024555206299
    3. '3' → logprob: -4.477024555206299
    4. '4' → logprob: -7.477024555206299
    5. '7' → logprob: -7.852024555206299
    6. '   ' → logprob: -8.227025032043457
    7. ' ' → logprob: -8.727025032043457
    8. '```' → logprob: -8.977025032043457
    9. '    ' → logprob: -10.352025032043457
    10. '`' → logprob: -10.602025032043457

Token 924: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8908587662735954e-05
    2. '5' → logprob: -11.000019073486328
    3. '4' → logprob: -13.250019073486328
    4. '7' → logprob: -15.375019073486328
    5. '３' → logprob: -17.250019073486328
    6. '1' → logprob: -17.375019073486328
    7. '
' → logprob: -17.750019073486328
    8. ' ' → logprob: -17.875019073486328
    9. '2' → logprob: -18.125019073486328
    10. '۳' → logprob: -18.875019073486328

Token 925: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3763863444328308
    2. '=' → logprob: -1.6263864040374756
    3. '=y' → logprob: -2.5013864040374756
    4. '3' → logprob: -4.1263861656188965
    5. '4' → logprob: -4.5013861656188965
    6. '<|end|>' → logprob: -5.6263861656188965
    7. ',y' → logprob: -6.1263861656188965
    8. ' y' → logprob: -7.6263861656188965
    9. '<|end|>' → logprob: -8.001386642456055
    10. ',' → logprob: -8.251386642456055

Token 926: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7421723008155823
    2. ',' → logprob: -1.2421722412109375
    3. 'b' → logprob: -1.9921722412109375
    4. ' b' → logprob: -2.8671722412109375
    5. ' y' → logprob: -4.2421722412109375
    6. '```' → logprob: -4.9921722412109375
    7. 'y' → logprob: -5.2421722412109375
    8. '   ' → logprob: -5.3671722412109375
    9. ' ,' → logprob: -5.7421722412109375
    10. ' ' → logprob: -6.1171722412109375

Token 927: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3083045780658722
    2. ' b' → logprob: -1.6833045482635498
    3. '2' → logprob: -2.55830454826355
    4. ' ' → logprob: -6.558304786682129
    5. '1' → logprob: -8.433304786682129
    6. '4' → logprob: -8.683304786682129
    7. ' y' → logprob: -8.933304786682129
    8. 'y' → logprob: -9.933304786682129
    9. '5' → logprob: -10.433304786682129
    10. '```' → logprob: -10.808304786682129

Token 928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '4' → logprob: -14.875001907348633
    5. '1' → logprob: -15.500001907348633
    6. '２' → logprob: -16.250001907348633
    7. '5' → logprob: -16.375001907348633
    8. '۲' → logprob: -16.437501907348633
    9. '#' → logprob: -17.312501907348633
    10. '२' → logprob: -17.500001907348633

Token 929: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000260382192209363
    2. '=y' → logprob: -9.500260353088379
    3. '2' → logprob: -9.750260353088379
    4. '3' → logprob: -9.875260353088379
    5. ' y' → logprob: -10.625260353088379
    6. ''y' → logprob: -11.000260353088379
    7. '4' → logprob: -11.250260353088379
    8. '=' → logprob: -12.750260353088379
    9. '	y' → logprob: -12.875260353088379
    10. '‘y' → logprob: -12.875260353088379

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06973455846309662
    2. '   ' → logprob: -3.319734573364258
    3. ',b' → logprob: -4.819734573364258
    4. '```' → logprob: -5.069734573364258
    5. '[' → logprob: -5.194734573364258
    6. ')' → logprob: -5.569734573364258
    7. ' ,' → logprob: -6.569734573364258
    8. 'b' → logprob: -6.944734573364258
    9. ':' → logprob: -7.069734573364258
    10. ' b' → logprob: -7.069734573364258

Token 931: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31309574842453003
    2. 'b' → logprob: -2.438095808029175
    3. ' b' → logprob: -2.938095808029175
    4. '0' → logprob: -3.063095808029175
    5. ' ' → logprob: -3.438095808029175
    6. '7' → logprob: -4.813095569610596
    7. '`' → logprob: -4.813095569610596
    8. ''' → logprob: -4.938095569610596
    9. '5' → logprob: -5.563095569610596
    10. '6' → logprob: -5.563095569610596

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '' → logprob: -13.250006675720215
    3. '0' → logprob: -13.625006675720215
    4. '2' → logprob: -13.750006675720215
    5. ' ' → logprob: -14.000006675720215
    6. '१' → logprob: -15.562506675720215
    7. '
' → logprob: -15.812506675720215
    8. '<|end|>' → logprob: -16.3750057220459
    9. '```' → logprob: -16.4375057220459
    10. '۱' → logprob: -16.6875057220459

Token 933: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44642895460128784
    2. '=x' → logprob: -1.5714290142059326
    3. 'x' → logprob: -2.3214290142059326
    4. ',x' → logprob: -3.8214290142059326
    5. ',' → logprob: -4.3214287757873535
    6. '0' → logprob: -5.3214287757873535
    7. '1' → logprob: -5.5714287757873535
    8. '6' → logprob: -5.6964287757873535
    9. '=True' → logprob: -5.6964287757873535
    10. '<|end|>' → logprob: -7.5714287757873535

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023580282926559448
    2. ' ,' → logprob: -5.648580074310303
    3. ':' → logprob: -5.898580074310303
    4. '[' → logprob: -6.023580074310303
    5. '7' → logprob: -6.273580074310303
    6. '=' → logprob: -6.398580074310303
    7. '2' → logprob: -6.523580074310303
    8. ')' → logprob: -6.648580074310303
    9. '   ' → logprob: -6.773580074310303
    10. ' =' → logprob: -6.898580074310303

Token 935: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6187717318534851
    2. 'b' → logprob: -1.3687717914581299
    3. ' ' → logprob: -1.6187717914581299
    4. '0' → logprob: -6.243771553039551
    5. '6' → logprob: -6.993771553039551
    6. '[' → logprob: -7.118771553039551
    7. '1' → logprob: -7.493771553039551
    8. '(' → logprob: -7.618771553039551
    9. ')' → logprob: -7.618771553039551
    10. '    ' → logprob: -7.618771553039551

Token 936: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -12.87500286102295
    3. '2' → logprob: -18.500001907348633
    4. '6' → logprob: -18.500001907348633
    5. '7' → logprob: -18.750001907348633
    6. '۰' → logprob: -20.375001907348633
    7. ' ' → logprob: -20.500001907348633
    8. '[' → logprob: -20.750001907348633
    9. '  ' → logprob: -21.687501907348633
    10. '5' → logprob: -21.875001907348633

Token 937: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015158374793827534
    2. '=x' → logprob: -4.390158176422119
    3. 'x' → logprob: -6.390158176422119
    4. ' =' → logprob: -7.140158176422119
    5. ')' → logprob: -10.015158653259277
    6. '=None' → logprob: -10.390158653259277
    7. ' x' → logprob: -10.765158653259277
    8. ''x' → logprob: -11.640158653259277
    9. '<|end|>' → logprob: -11.765158653259277
    10. '=True' → logprob: -11.765158653259277

Token 938: '?
' (ID: 3901)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02817809209227562
    2. '0' → logprob: -4.2781782150268555
    3. ''x' → logprob: -4.4031782150268555
    4. 'None' → logprob: -7.5281782150268555
    5. '1' → logprob: -7.7781782150268555
    6. 'True' → logprob: -8.403178215026855
    7. ' x' → logprob: -9.153178215026855
    8. ''' → logprob: -9.153178215026855
    9. 'False' → logprob: -9.903178215026855
    10. '"x' → logprob: -10.153178215026855

Token 939: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9233421087265015
    2. ':' → logprob: -2.173342227935791
    3. '=' → logprob: -2.173342227935791
    4. '7' → logprob: -2.298342227935791
    5. ')' → logprob: -2.673342227935791
    6. ' ' → logprob: -3.173342227935791
    7. '[' → logprob: -3.298342227935791
    8. ' =' → logprob: -3.673342227935791
    9. ',' → logprob: -3.923342227935791
    10. '2' → logprob: -4.173342227935791

Token 940: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0595442056655884
    2. '[' → logprob: -1.6845442056655884
    3. ':' → logprob: -2.059544086456299
    4. ')' → logprob: -2.059544086456299
    5. '=' → logprob: -3.059544086456299
    6. ' ' → logprob: -3.559544086456299
    7. '1' → logprob: -3.559544086456299
    8. '<|end|>' → logprob: -4.184544086456299
    9. '6' → logprob: -4.434544086456299
    10. '7' → logprob: -4.434544086456299

Token 941: ' but' (ID: 889)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5540331602096558
    2. '7' → logprob: -1.4290331602096558
    3. '1' → logprob: -2.4290332794189453
    4. ' ' → logprob: -3.1790332794189453
    5. ')' → logprob: -4.179033279418945
    6. '6' → logprob: -4.679033279418945
    7. 'x' → logprob: -5.304033279418945
    8. '2' → logprob: -5.429033279418945
    9. ' x' → logprob: -5.679033279418945
    10. '=' → logprob: -5.929033279418945

Token 942: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6963356733322144
    2. ' b' → logprob: -1.4463356733322144
    3. '0' → logprob: -2.196335792541504
    4. ' x' → logprob: -2.696335792541504
    5. 'b' → logprob: -3.321335792541504
    6. 'x' → logprob: -4.071335792541504
    7. '1' → logprob: -4.946335792541504
    8. ' '' → logprob: -5.446335792541504
    9. ' y' → logprob: -5.696335792541504
    10. ' )' → logprob: -5.696335792541504

Token 943: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.21212317049503326
    2. '0' → logprob: -2.712123155593872
    3. '6' → logprob: -3.087123155593872
    4. '1' → logprob: -3.212123155593872
    5. ' ' → logprob: -4.462123394012451
    6. '=' → logprob: -5.087123394012451
    7. 'b' → logprob: -5.087123394012451
    8. ':' → logprob: -5.212123394012451
    9. '[' → logprob: -5.837123394012451
    10. 'x' → logprob: -6.337123394012451

Token 944: ' bit' (ID: 3546)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.896682858467102
    2. '[' → logprob: -1.396682858467102
    3. '7' → logprob: -2.7716827392578125
    4. '=' → logprob: -3.1466827392578125
    5. '0' → logprob: -3.1466827392578125
    6. 'bits' → logprob: -3.3966827392578125
    7. 'b' → logprob: -3.3966827392578125
    8. ')' → logprob: -3.6466827392578125
    9. 'def' → logprob: -4.0216827392578125
    10. '<|end|>' → logprob: -4.1466827392578125

Token 945: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4121972918510437
    2. '7' → logprob: -1.9121973514556885
    3. ':' → logprob: -2.7871973514556885
    4. ')' → logprob: -3.2871973514556885
    5. ']' → logprob: -3.2871973514556885
    6. '0' → logprob: -4.037197113037109
    7. 's' → logprob: -4.662197113037109
    8. '```' → logprob: -5.037197113037109
    9. '[
' → logprob: -5.662197113037109
    10. 'b' → logprob: -6.162197113037109

Token 946: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7634252309799194
    2. '7' → logprob: -1.1384252309799194
    3. ':' → logprob: -2.638425350189209
    4. '0' → logprob: -2.888425350189209
    5. ')' → logprob: -3.888425350189209
    6. '=' → logprob: -4.263425350189209
    7. 'def' → logprob: -4.263425350189209
    8. ']' → logprob: -4.388425350189209
    9. 'b' → logprob: -4.638425350189209
    10. ' =' → logprob: -6.013425350189209

Token 947: ' so' (ID: 813)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9467818140983582
    2. '[' → logprob: -1.946781873703003
    3. ':' → logprob: -2.321781873703003
    4. ' ' → logprob: -2.321781873703003
    5. ')' → logprob: -2.571781873703003
    6. '0' → logprob: -2.696781873703003
    7. 'b' → logprob: -3.071781873703003
    8. '7' → logprob: -3.196781873703003
    9. ' :' → logprob: -5.321781635284424
    10. '):' → logprob: -5.446781635284424

Token 948: ' pattern' (ID: 8302)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.36051928997039795
    2. 'b' → logprob: -1.485519289970398
    3. ' ' → logprob: -3.8605194091796875
    4. '7' → logprob: -3.8605194091796875
    5. '0' → logprob: -4.4855194091796875
    6. '1' → logprob: -4.8605194091796875
    7. '[' → logprob: -5.9855194091796875
    8. 'x' → logprob: -6.1105194091796875
    9. ' x' → logprob: -6.4855194091796875
    10. ')' → logprob: -6.4855194091796875

Token 949: ' exactly' (ID: 9707)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2611389458179474
    2. ' =' → logprob: -2.386138916015625
    3. '=' → logprob: -2.511138916015625
    4. '7' → logprob: -4.261138916015625
    5. ':' → logprob: -4.261138916015625
    6. 'b' → logprob: -4.511138916015625
    7. '#' → logprob: -6.011138916015625
    8. 'def' → logprob: -6.011138916015625
    9. '   ' → logprob: -6.136138916015625
    10. '0' → logprob: -6.136138916015625

Token 950: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45540934801101685
    2. ')' → logprob: -1.705409288406372
    3. ':' → logprob: -2.955409288406372
    4. '<|end|>' → logprob: -3.205409288406372
    5. ' ' → logprob: -3.705409288406372
    6. 'b' → logprob: -4.455409526824951
    7. ' =' → logprob: -4.580409526824951
    8. 'def' → logprob: -4.705409526824951
    9. '=' → logprob: -4.705409526824951
    10. '0' → logprob: -5.705409526824951

Token 951: '8' (ID: 23)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.808822751045227
    2. '110' → logprob: -1.308822751045227
    3. '[' → logprob: -2.4338226318359375
    4. '0' → logprob: -3.0588226318359375
    5. 'b' → logprob: -3.0588226318359375
    6. '1' → logprob: -3.4338226318359375
    7. ' =' → logprob: -4.1838226318359375
    8. ''' → logprob: -4.1838226318359375
    9. ' is' → logprob: -4.5588226318359375
    10. ' b' → logprob: -5.0588226318359375

Token 952: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.228047490119934
    2. ':' → logprob: -1.478047490119934
    3. '[' → logprob: -1.478047490119934
    4. ']' → logprob: -2.2280473709106445
    5. 'b' → logprob: -3.1030473709106445
    6. '<|end|>' → logprob: -3.2280473709106445
    7. '#' → logprob: -4.2280473709106445
    8. ',' → logprob: -4.8530473709106445
    9. '0' → logprob: -5.1030473709106445
    10. '):' → logprob: -5.8530473709106445

Token 953: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05630974844098091
    2. ':' → logprob: -3.931309700012207
    3. ' ' → logprob: -4.806309700012207
    4. ')' → logprob: -4.931309700012207
    5. '0' → logprob: -5.806309700012207
    6. 'def' → logprob: -5.806309700012207
    7. 'b' → logprob: -5.931309700012207
    8. '7' → logprob: -6.306309700012207
    9. '<|end|>' → logprob: -6.306309700012207
    10. ' =' → logprob: -6.556309700012207

Token 954: '   ' (ID: 271)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.4285950660705566
    2. ':' → logprob: -1.6785950660705566
    3. '0' → logprob: -2.3035950660705566
    4. '[' → logprob: -2.4285950660705566
    5. ' ' → logprob: -2.6785950660705566
    6. ')' → logprob: -2.6785950660705566
    7. '=' → logprob: -3.0535950660705566
    8. 'b' → logprob: -3.3035950660705566
    9. ' =' → logprob: -3.4285950660705566
    10. '   ' → logprob: -3.5535950660705566

Token 955: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3983544409275055
    2. '[' → logprob: -2.2733545303344727
    3. ':' → logprob: -3.0233545303344727
    4. '=' → logprob: -3.1483545303344727
    5. ' =' → logprob: -3.6483545303344727
    6. '7' → logprob: -3.8983545303344727
    7. ' ' → logprob: -4.273354530334473
    8. 'b' → logprob: -4.398354530334473
    9. ' b' → logprob: -4.523354530334473
    10. ']' → logprob: -4.773354530334473

Token 956: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3254779875278473
    2. ' b' → logprob: -2.8254780769348145
    3. 'b' → logprob: -3.0754780769348145
    4. '0' → logprob: -3.0754780769348145
    5. ')' → logprob: -3.7004780769348145
    6. ':' → logprob: -4.0754780769348145
    7. 'x' → logprob: -4.2004780769348145
    8. ' ' → logprob: -4.2004780769348145
    9. ' x' → logprob: -4.4504780769348145
    10. 'def' → logprob: -4.9504780769348145

Token 957: '110' (ID: 7920)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2361212968826294
    2. '[' → logprob: -1.2361212968826294
    3. ''' → logprob: -2.48612117767334
    4. '0' → logprob: -2.73612117767334
    5. '=' → logprob: -2.86112117767334
    6. '1' → logprob: -3.11112117767334
    7. 'b' → logprob: -3.36112117767334
    8. ':' → logprob: -3.61112117767334
    9. ' =' → logprob: -3.73612117767334
    10. ' ' → logprob: -3.86112117767334

Token 958: 'yyyy' (ID: 27343)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8032292127609253
    2. '111' → logprob: -1.4282292127609253
    3. 'yyyy' → logprob: -1.9282292127609253
    4. '7' → logprob: -2.678229331970215
    5. '0' → logprob: -2.678229331970215
    6. '000' → logprob: -4.303229331970215
    7. '110' → logprob: -4.678229331970215
    8. 'y' → logprob: -6.303229331970215
    9. '011' → logprob: -6.678229331970215
    10. ' ' → logprob: -6.803229331970215

Token 959: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21408222615718842
    2. '0' → logprob: -2.3390822410583496
    3. 'b' → logprob: -2.7140822410583496
    4. '1' → logprob: -4.83908224105835
    5. '_' → logprob: -5.08908224105835
    6. '110' → logprob: -5.33908224105835
    7. '[' → logprob: -5.83908224105835
    8. ')' → logprob: -6.71408224105835
    9. '111' → logprob: -7.08908224105835
    10. '=' → logprob: -7.46408224105835

Token 960: ' only' (ID: 1606)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06574925035238266
    2. ':' → logprob: -4.065749168395996
    3. '0' → logprob: -4.565749168395996
    4. ')' → logprob: -4.690749168395996
    5. '<|end|>' → logprob: -4.815749168395996
    6. '7' → logprob: -5.190749168395996
    7. ' ' → logprob: -5.440749168395996
    8. '[
' → logprob: -6.690749168395996
    9. '[]' → logprob: -7.315749168395996
    10. '```' → logprob: -7.565749168395996

Token 961: ' has' (ID: 853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3663473129272461
    2. ':' → logprob: -1.366347312927246
    3. '7' → logprob: -4.491347312927246
    4. '<|end|>' → logprob: -4.491347312927246
    5. '0' → logprob: -4.991347312927246
    6. ' ' → logprob: -5.366347312927246
    7. ')' → logprob: -5.366347312927246
    8. 'b' → logprob: -5.741347312927246
    9. 'def' → logprob: -6.366347312927246
    10. ',' → logprob: -6.866347312927246

Token 962: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.17007651925086975
    2. '8' → logprob: -2.170076608657837
    3. ''' → logprob: -4.045076370239258
    4. ' ' → logprob: -4.170076370239258
    5. '1' → logprob: -5.670076370239258
    6. 'b' → logprob: -6.045076370239258
    7. 'bits' → logprob: -7.420076370239258
    8. ' '' → logprob: -7.920076370239258
    9. '"' → logprob: -8.045076370239258
    10. ' b' → logprob: -8.295076370239258

Token 963: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2032734453678131
    2. '8' → logprob: -1.7032734155654907
    3. '1' → logprob: -6.703273296356201
    4. ' ' → logprob: -8.57827377319336
    5. '6' → logprob: -9.45327377319336
    6. ''' → logprob: -9.57827377319336
    7. '0' → logprob: -10.07827377319336
    8. 'b' → logprob: -10.20327377319336
    9. 'one' → logprob: -10.70327377319336
    10. 'bits' → logprob: -10.82827377319336

Token 964: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.81220543384552
    2. '[' → logprob: -1.43720543384552
    3. '0' → logprob: -2.1872053146362305
    4. '7' → logprob: -3.0622053146362305
    5. ':' → logprob: -3.1872053146362305
    6. ']' → logprob: -3.3122053146362305
    7. 'b' → logprob: -3.9372053146362305
    8. ''' → logprob: -4.1872053146362305
    9. ',' → logprob: -5.4372053146362305
    10. '#' → logprob: -5.4372053146362305

Token 965: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04741217941045761
    2. ':' → logprob: -3.672412157058716
    3. ')' → logprob: -5.297412395477295
    4. '   ' → logprob: -5.672412395477295
    5. '<|end|>' → logprob: -6.172412395477295
    6. '0' → logprob: -6.297412395477295
    7. 'def' → logprob: -6.422412395477295
    8. '[
' → logprob: -6.672412395477295
    9. 'b' → logprob: -7.047412395477295
    10. ' ' → logprob: -7.297412395477295

Token 966: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5680510401725769
    2. ')' → logprob: -1.6930510997772217
    3. '7' → logprob: -2.9430510997772217
    4. '0' → logprob: -3.3180510997772217
    5. '=' → logprob: -3.4430510997772217
    6. ':' → logprob: -3.4430510997772217
    7. ' ' → logprob: -3.9430510997772217
    8. ' =' → logprob: -4.068050861358643
    9. 'b' → logprob: -4.068050861358643
    10. '<|end|>' → logprob: -4.693050861358643

Token 967: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16757100820541382
    2. ')' → logprob: -3.1675710678100586
    3. ':' → logprob: -3.4175710678100586
    4. '0' → logprob: -4.042571067810059
    5. ' ' → logprob: -4.292571067810059
    6. 'b' → logprob: -4.542571067810059
    7. ' =' → logprob: -4.917571067810059
    8. '7' → logprob: -5.167571067810059
    9. '=' → logprob: -5.667571067810059
    10. '<|end|>' → logprob: -5.667571067810059

Token 968: ' So' (ID: 2632)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2719116806983948
    2. ' =' → logprob: -3.39691162109375
    3. '0' → logprob: -3.52191162109375
    4. ')' → logprob: -3.77191162109375
    5. '   ' → logprob: -3.77191162109375
    6. ' b' → logprob: -3.89691162109375
    7. 'def' → logprob: -3.89691162109375
    8. 'b' → logprob: -4.27191162109375
    9. '=' → logprob: -4.27191162109375
    10. ' ' → logprob: -4.64691162109375

Token 969: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1087112426757812
    2. 'b' → logprob: -1.6087112426757812
    3. ' b' → logprob: -1.8587112426757812
    4. ')' → logprob: -2.6087112426757812
    5. ' =' → logprob: -2.7337112426757812
    6. 'def' → logprob: -3.3587112426757812
    7. ':' → logprob: -3.4837112426757812
    8. 'x' → logprob: -3.9837112426757812
    9. '0' → logprob: -4.358711242675781
    10. '=' → logprob: -4.358711242675781

Token 970: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001333932508714497
    2. '[' → logprob: -6.626333713531494
    3. '6' → logprob: -12.751334190368652
    4. '_' → logprob: -14.126334190368652
    5. ']' → logprob: -14.251334190368652
    6. '1' → logprob: -14.501334190368652
    7. '0' → logprob: -14.626334190368652
    8. ')' → logprob: -14.876334190368652
    9. '5' → logprob: -14.876334190368652
    10. ' ' → logprob: -15.001334190368652

Token 971: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009425500174984336
    2. ' =' → logprob: -7.250942707061768
    3. ',' → logprob: -9.87594223022461
    4. '==' → logprob: -10.12594223022461
    5. '[' → logprob: -10.50094223022461
    6. ')' → logprob: -10.87594223022461
    7. '=
' → logprob: -11.12594223022461
    8. '7' → logprob: -11.50094223022461
    9. '='' → logprob: -11.75094223022461
    10. ':' → logprob: -11.87594223022461

Token 972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0704689547419548
    2. ''' → logprob: -2.6954689025878906
    3. '=' → logprob: -7.820468902587891
    4. ' ' → logprob: -9.82046890258789
    5. '`' → logprob: -10.82046890258789
    6. '='' → logprob: -11.19546890258789
    7. '"' → logprob: -11.57046890258789
    8. 'b' → logprob: -11.57046890258789
    9. ' '' → logprob: -11.94546890258789
    10. ''=' → logprob: -13.07046890258789

Token 973: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1897348165512085
    2. ',' → logprob: -1.8147348165512085
    3. ':' → logprob: -5.189734935760498
    4. ' =' → logprob: -6.064734935760498
    5. ')' → logprob: -7.314734935760498
    6. '<|end|>' → logprob: -8.06473445892334
    7. '   ' → logprob: -8.18973445892334
    8. '7' → logprob: -9.31473445892334
    9. '.' → logprob: -9.31473445892334
    10. 'def' → logprob: -9.56473445892334

Token 974: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0003049570368602872
    2. '5' → logprob: -8.75030517578125
    3. '0' → logprob: -9.25030517578125
    4. '2' → logprob: -10.87530517578125
    5. '1' → logprob: -11.25030517578125
    6. '7' → logprob: -11.37530517578125
    7. '=' → logprob: -12.37530517578125
    8. '[' → logprob: -14.37530517578125
    9. '4' → logprob: -14.62530517578125
    10. ' ' → logprob: -14.75030517578125

Token 975: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.13388703338569e-06
    2. '5' → logprob: -12.250009536743164
    3. ' =' → logprob: -12.625009536743164
    4. '==' → logprob: -14.875009536743164
    5. '='' → logprob: -15.750009536743164
    6. '1' → logprob: -16.625009536743164
    7. '0' → logprob: -16.750009536743164
    8. ',' → logprob: -16.750009536743164
    9. '=}' → logprob: -16.750009536743164
    10. '7' → logprob: -16.875009536743164

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.453737710718997e-05
    2. '0' → logprob: -10.125044822692871
    3. ' ' → logprob: -12.375044822692871
    4. ''' → logprob: -17.000043869018555
    5. '6' → logprob: -18.125043869018555
    6. ',' → logprob: -18.375043869018555
    7. '>' → logprob: -18.375043869018555
    8. '=' → logprob: -18.562543869018555
    9. '   ' → logprob: -18.687543869018555
    10. ')' → logprob: -18.750043869018555

Token 977: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3553546369075775
    2. ',b' → logprob: -1.2303546667099
    3. 'b' → logprob: -5.6053547859191895
    4. ' b' → logprob: -6.2303547859191895
    5. ' ,' → logprob: -7.1053547859191895
    6. ',
' → logprob: -8.980354309082031
    7. '   ' → logprob: -9.230354309082031
    8. '```' → logprob: -9.730354309082031
    9. '=' → logprob: -10.605354309082031
    10. ' ' → logprob: -10.730354309082031

Token 978: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '0' → logprob: -17.0
    3. '2' → logprob: -17.625
    4. '1' → logprob: -18.5
    5. '4' → logprob: -19.125
    6. '５' → logprob: -19.75
    7. ' ' → logprob: -19.75
    8. '7' → logprob: -19.875
    9. '6' → logprob: -20.25
    10. '[' → logprob: -20.625

Token 979: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014823723176959902
    2. '0' → logprob: -8.875147819519043
    3. ',' → logprob: -12.750147819519043
    4. ' =' → logprob: -13.375147819519043
    5. '5' → logprob: -13.875147819519043
    6. '=True' → logprob: -14.375147819519043
    7. '=False' → logprob: -15.125147819519043
    8. '=
' → logprob: -15.125147819519043
    9. '1' → logprob: -15.250147819519043
    10. '==' → logprob: -15.375147819519043

Token 980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '1' → logprob: -14.250001907348633
    4. ''' → logprob: -16.250001907348633
    5. '`' → logprob: -17.750001907348633
    6. '۰' → logprob: -18.000001907348633
    7. '```' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.437501907348633
    9. '"' → logprob: -18.562501907348633
    10. '>' → logprob: -19.062501907348633

Token 981: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3186975419521332
    2. ',b' → logprob: -1.3186975717544556
    3. 'b' → logprob: -6.443697452545166
    4. ':' → logprob: -6.568697452545166
    5. ',
' → logprob: -6.943697452545166
    6. '   ' → logprob: -8.193697929382324
    7. 'def' → logprob: -8.443697929382324
    8. ')' → logprob: -8.818697929382324
    9. ' ,' → logprob: -8.943697929382324
    10. '=' → logprob: -9.443697929382324

Token 982: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5786703824996948
    2. 'b' → logprob: -1.4536703824996948
    3. ',' → logprob: -2.0786705017089844
    4. ',b' → logprob: -2.5786705017089844
    5. ' ,' → logprob: -5.578670501708984
    6. ' ' → logprob: -7.828670501708984
    7. ''' → logprob: -8.453670501708984
    8. ' '' → logprob: -9.578670501708984
    9. ''b' → logprob: -10.453670501708984
    10. '0' → logprob: -10.703670501708984

Token 983: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5989239811897278
    2. ' b' → logprob: -1.348923921585083
    3. ' ' → logprob: -2.723923921585083
    4. '6' → logprob: -2.723923921585083
    5. '1' → logprob: -3.973923921585083
    6. '7' → logprob: -4.848924160003662
    7. '    ' → logprob: -4.973924160003662
    8. ',' → logprob: -5.473924160003662
    9. '0' → logprob: -5.598924160003662
    10. '   ' → logprob: -5.598924160003662

Token 984: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1835874319076538
    2. ' b' → logprob: -1.1835874319076538
    3. '4' → logprob: -1.5585874319076538
    4. '7' → logprob: -2.6835875511169434
    5. 'b' → logprob: -3.4335875511169434
    6. '6' → logprob: -3.8085875511169434
    7. ',' → logprob: -4.433587551116943
    8. '    ' → logprob: -4.933587551116943
    9. ' =' → logprob: -5.183587551116943
    10. ' x' → logprob: -5.683587551116943

Token 985: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009621028788387775
    2. '7' → logprob: -5.1346211433410645
    3. '5' → logprob: -5.6346211433410645
    4. ' ' → logprob: -9.634620666503906
    5. '3' → logprob: -10.509620666503906
    6. '6' → logprob: -11.384620666503906
    7. '2' → logprob: -12.759620666503906
    8. '[' → logprob: -13.134620666503906
    9. '1' → logprob: -13.884620666503906
    10. '0' → logprob: -14.009620666503906

Token 986: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008095058728940785
    2. '=y' → logprob: -7.375809669494629
    3. ' =' → logprob: -9.125809669494629
    4. ',y' → logprob: -10.625809669494629
    5. ',' → logprob: -11.125809669494629
    6. '=True' → logprob: -11.875809669494629
    7. '='' → logprob: -12.000809669494629
    8. '=',' → logprob: -12.250809669494629
    9. '=x' → logprob: -12.375809669494629
    10. 'y' → logprob: -13.000809669494629

Token 987: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29433777928352356
    2. '[' → logprob: -1.9193377494812012
    3. '=' → logprob: -3.294337749481201
    4. ':' → logprob: -4.044337749481201
    5. 'b' → logprob: -4.919337749481201
    6. '7' → logprob: -5.044337749481201
    7. ',b' → logprob: -5.169337749481201
    8. '<|end|>' → logprob: -5.294337749481201
    9. ']' → logprob: -5.419337749481201
    10. '   ' → logprob: -5.419337749481201

Token 988: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09616930037736893
    2. 'b' → logprob: -3.5961692333221436
    3. ',b' → logprob: -4.221169471740723
    4. ',y' → logprob: -4.346169471740723
    5. 'y' → logprob: -4.596169471740723
    6. ',
' → logprob: -4.846169471740723
    7. '<|end|>' → logprob: -5.596169471740723
    8. ' =' → logprob: -5.846169471740723
    9. '=' → logprob: -5.846169471740723
    10. '   ' → logprob: -6.346169471740723

Token 989: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.19815613329410553
    2. '5' → logprob: -2.1981561183929443
    3. '4' → logprob: -2.6981561183929443
    4. '7' → logprob: -6.573156356811523
    5. '0' → logprob: -11.448156356811523
    6. '1' → logprob: -12.073156356811523
    7. '2' → logprob: -12.573156356811523
    8. ' ' → logprob: -14.260656356811523
    9. '=' → logprob: -14.823156356811523
    10. 'y' → logprob: -15.073156356811523

Token 990: '=y' (ID: 70421)
  Prédit: '=y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=y' → logprob: -0.47546011209487915
    2. 'y' → logprob: -0.9754601120948792
    3. '=' → logprob: -6.725460052490234
    4. ''y' → logprob: -8.975460052490234
    5. '‘y' → logprob: -10.725460052490234
    6. ' y' → logprob: -11.350460052490234
    7. '	y' → logprob: -12.600460052490234
    8. ',y' → logprob: -13.100460052490234
    9. ')y' → logprob: -13.350460052490234
    10. ':y' → logprob: -13.475460052490234

Token 991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7037779092788696
    2. '4' → logprob: -1.0787779092788696
    3. 'y' → logprob: -1.8287779092788696
    4. 'b' → logprob: -5.70377779006958
    5. '3' → logprob: -8.453778266906738
    6. '```' → logprob: -8.453778266906738
    7. '1' → logprob: -8.703778266906738
    8. ' y' → logprob: -8.703778266906738
    9. '0' → logprob: -9.328778266906738
    10. ''y' → logprob: -9.578778266906738

Token 992: ',b' (ID: 17568)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.731903612613678
    2. 'b' → logprob: -1.1069035530090332
    3. ' b' → logprob: -2.231903553009033
    4. '```' → logprob: -3.731903553009033
    5. ',' → logprob: -3.856903553009033
    6. ' y' → logprob: -4.356903553009033
    7. '2' → logprob: -4.731903553009033
    8. ' ' → logprob: -5.731903553009033
    9. ',b' → logprob: -5.731903553009033
    10. '[' → logprob: -6.106903553009033

Token 993: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.011066683568060398
    2. '2' → logprob: -4.511066913604736
    3. '3' → logprob: -11.386066436767578
    4. '0' → logprob: -12.261066436767578
    5. '1' → logprob: -13.261066436767578
    6. ' ' → logprob: -14.636066436767578
    7. '5' → logprob: -15.136066436767578
    8. '7' → logprob: -15.386066436767578
    9. '' → logprob: -17.011066436767578
    10. '```' → logprob: -17.073566436767578

Token 994: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6339213848114014
    2. '=y' → logprob: -0.7589213848114014
    3. '=' → logprob: -7.5089216232299805
    4. '3' → logprob: -8.38392162322998
    5. ' y' → logprob: -8.63392162322998
    6. ''y' → logprob: -8.75892162322998
    7. '‘y' → logprob: -10.00892162322998
    8. ',y' → logprob: -10.25892162322998
    9. ' =' → logprob: -10.50892162322998
    10. '	y' → logprob: -10.63392162322998

Token 995: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5787515044212341
    2. '1' → logprob: -1.828751564025879
    3. '4' → logprob: -2.203751564025879
    4. ',' → logprob: -2.328751564025879
    5. '5' → logprob: -3.703751564025879
    6. 'b' → logprob: -4.453751564025879
    7. ',y' → logprob: -4.703751564025879
    8. 'y' → logprob: -5.203751564025879
    9. '[' → logprob: -5.578751564025879
    10. ',b' → logprob: -5.578751564025879

Token 996: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7701758146286011
    2. '   ' → logprob: -0.8951758146286011
    3. ',b' → logprob: -2.5201759338378906
    4. 'b' → logprob: -4.395175933837891
    5. ' b' → logprob: -5.270175933837891
    6. ':' → logprob: -5.270175933837891
    7. '[' → logprob: -5.270175933837891
    8. '	b' → logprob: -5.520175933837891
    9. ',
' → logprob: -5.770175933837891
    10. '```' → logprob: -6.020175933837891

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '4' → logprob: -15.375000953674316
    3. '' → logprob: -16.625
    4. '<|end|>' → logprob: -16.875
    5. '0' → logprob: -17.25
    6. '１' → logprob: -17.375
    7. ' ' → logprob: -17.625
    8. '१' → logprob: -17.875
    9. '```' → logprob: -18.0625
    10. '১' → logprob: -18.25

Token 998: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10225161164999008
    2. '=x' → logprob: -2.3522515296936035
    3. 'x' → logprob: -6.4772515296936035
    4. ' =' → logprob: -8.227252006530762
    5. '='' → logprob: -10.227252006530762
    6. '=True' → logprob: -10.352252006530762
    7. ')' → logprob: -10.727252006530762
    8. '=b' → logprob: -11.102252006530762
    9. '=y' → logprob: -11.227252006530762
    10. '=}' → logprob: -11.227252006530762

Token 999: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6208776831626892
    2. '[' → logprob: -2.370877742767334
    3. ':' → logprob: -2.620877742767334
    4. ',' → logprob: -2.745877742767334
    5. '0' → logprob: -2.745877742767334
    6. 'b' → logprob: -3.495877742767334
    7. ' =' → logprob: -3.620877742767334
    8. 'def' → logprob: -3.620877742767334
    9. '7' → logprob: -3.870877742767334
    10. ']' → logprob: -4.620877742767334

Token 1000: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.375
    3. '7' → logprob: -20.25
    4. '۰' → logprob: -21.125
    5. '０' → logprob: -21.875
    6. 'o' → logprob: -22.125
    7. '6' → logprob: -22.875
    8. '०' → logprob: -23.125
    9. '000' → logprob: -23.5
    10. '[' → logprob: -23.75

Token 1001: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08147525787353516
    2. 'x' → logprob: -2.956475257873535
    3. '=x' → logprob: -3.706475257873535
    4. ' =' → logprob: -7.206475257873535
    5. ''x' → logprob: -7.331475257873535
    6. ' x' → logprob: -10.081475257873535
    7. ')' → logprob: -10.206475257873535
    8. '"x' → logprob: -10.456475257873535
    9. '0' → logprob: -11.081475257873535
    10. '_' → logprob: -11.081475257873535

Token 1002: '(' (ID: 7)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5598724484443665
    2. ':' → logprob: -1.5598723888397217
    3. 'def' → logprob: -2.1848723888397217
    4. ')' → logprob: -3.8098723888397217
    5. '<|end|>' → logprob: -4.059872627258301
    6. ' def' → logprob: -4.684872627258301
    7. '   ' → logprob: -4.684872627258301
    8. '0' → logprob: -4.809872627258301
    9. ' ' → logprob: -5.059872627258301
    10. '#' → logprob: -5.184872627258301

Token 1003: '??' (ID: 6961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014513060450553894
    2. ')>' → logprob: -7.00145149230957
    3. 'x' → logprob: -9.50145149230957
    4. '0' → logprob: -9.50145149230957
    5. ' )' → logprob: -9.50145149230957
    6. '')' → logprob: -10.00145149230957
    7. '2' → logprob: -10.12645149230957
    8. '[' → logprob: -10.25145149230957
    9. '1' → logprob: -10.37645149230957
    10. ')">' → logprob: -10.62645149230957

Token 1004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02764320559799671
    2. '0' → logprob: -4.277643203735352
    3. '[' → logprob: -5.402643203735352
    4. ')>' → logprob: -5.902643203735352
    5. '<|end|>' → logprob: -6.527643203735352
    6. ' )' → logprob: -6.652643203735352
    7. '7' → logprob: -7.027643203735352
    8. '1' → logprob: -7.652643203735352
    9. '2' → logprob: -7.652643203735352
    10. ' ' → logprob: -8.152643203735352

Token 1005: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.326018214225769
    2. 'def' → logprob: -2.0760183334350586
    3. ':' → logprob: -2.2010183334350586
    4. '<|end|>' → logprob: -2.2010183334350586
    5. ')' → logprob: -2.3260183334350586
    6. '0' → logprob: -2.4510183334350586
    7. 'b' → logprob: -2.8260183334350586
    8. '#' → logprob: -3.4510183334350586
    9. ' ' → logprob: -4.076018333435059
    10. '   ' → logprob: -4.326018333435059

Token 1006: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.70691978931427
    2. ')' → logprob: -2.3319196701049805
    3. '0' → logprob: -2.3319196701049805
    4. ':' → logprob: -2.4569196701049805
    5. '<|end|>' → logprob: -3.0819196701049805
    6. '=' → logprob: -3.3319196701049805
    7. ' =' → logprob: -3.8319196701049805
    8. 'b' → logprob: -3.9569196701049805
    9. ' ' → logprob: -3.9569196701049805
    10. ',' → logprob: -3.9569196701049805

Token 1007: ' No' (ID: 3004)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2634713351726532
    2. '0' → logprob: -3.2634713649749756
    3. ')' → logprob: -3.5134713649749756
    4. 'def' → logprob: -3.5134713649749756
    5. 'b' → logprob: -3.6384713649749756
    6. '7' → logprob: -4.2634711265563965
    7. '#' → logprob: -4.2634711265563965
    8. '=' → logprob: -4.5134711265563965
    9. ' ' → logprob: -4.6384711265563965
    10. '   ' → logprob: -4.7634711265563965

Token 1008: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.977940559387207
    2. 'def' → logprob: -0.977940559387207
    3. ' ' → logprob: -3.102940559387207
    4. 'b' → logprob: -3.477940559387207
    5. '   ' → logprob: -3.727940559387207
    6. '0' → logprob: -3.727940559387207
    7. ' def' → logprob: -3.977940559387207
    8. ' b' → logprob: -4.102940559387207
    9. '[
' → logprob: -4.227940559387207
    10. '_' → logprob: -4.477940559387207

Token 1009: ' problem' (ID: 4792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3728936016559601
    2. '<|end|>' → logprob: -2.7478935718536377
    3. 'def' → logprob: -2.9978935718536377
    4. ')' → logprob: -3.3728935718536377
    5. ' b' → logprob: -3.4978935718536377
    6. '[' → logprob: -3.4978935718536377
    7. ':' → logprob: -4.122893810272217
    8. '#' → logprob: -4.247893810272217
    9. ''' → logprob: -4.247893810272217
    10. 'b' → logprob: -4.622893810272217

Token 1010: ' states' (ID: 9407)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5348806977272034
    2. '[' → logprob: -1.2848806381225586
    3. '<|end|>' → logprob: -3.1598806381225586
    4. 'b' → logprob: -3.6598806381225586
    5. '#' → logprob: -3.7848806381225586
    6. '(' → logprob: -4.284880638122559
    7. ':' → logprob: -4.909880638122559
    8. 'def' → logprob: -5.159880638122559
    9. '<|end|>' → logprob: -5.659880638122559
    10. '```' → logprob: -5.909880638122559

Token 1011: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1012: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.031532645225525
    2. ' b' → logprob: -1.031532645225525
    3. ' x' → logprob: -2.0315327644348145
    4. 'b' → logprob: -3.0315327644348145
    5. 'x' → logprob: -3.5315327644348145
    6. ' y' → logprob: -4.2815327644348145
    7. '[' → logprob: -4.2815327644348145
    8. ' bit' → logprob: -4.6565327644348145
    9. '0' → logprob: -4.9065327644348145
    10. ' #' → logprob: -5.5315327644348145

Token 1013: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7370535135269165
    2. 'x' → logprob: -1.7370535135269165
    3. ' b' → logprob: -1.9870535135269165
    4. 'b' → logprob: -2.612053394317627
    5. ' ' → logprob: -2.737053394317627
    6. '[' → logprob: -3.737053394317627
    7. '0' → logprob: -4.362053394317627
    8. ')' → logprob: -5.237053394317627
    9. '<|end|>' → logprob: -5.612053394317627
    10. '7' → logprob: -5.862053394317627

Token 1014: ' For' (ID: 2214)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5713150501251221
    2. 'b' → logprob: -2.071315050125122
    3. ' b' → logprob: -2.571315050125122
    4. 'x' → logprob: -2.946315050125122
    5. 'def' → logprob: -3.071315050125122
    6. ')' → logprob: -3.196315050125122
    7. ' x' → logprob: -3.696315050125122
    8. '[
' → logprob: -3.946315050125122
    9. '#' → logprob: -4.196314811706543
    10. ' ' → logprob: -4.946314811706543

Token 1015: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.895721971988678
    2. 'i' → logprob: -1.2707219123840332
    3. 'b' → logprob: -1.2707219123840332
    4. 'def' → logprob: -5.020721912384033
    5. 'bit' → logprob: -5.145721912384033
    6. '0' → logprob: -5.145721912384033
    7. '6' → logprob: -5.520721912384033
    8. '1' → logprob: -6.020721912384033
    9. '2' → logprob: -7.145721912384033
    10. ' b' → logprob: -7.270721912384033

Token 1016: '2' (ID: 17)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.054868850857019424
    2. '1' → logprob: -4.429868698120117
    3. 'b' → logprob: -4.429868698120117
    4. '0' → logprob: -4.679868698120117
    5. '5' → logprob: -4.804868698120117
    6. '6' → logprob: -5.554868698120117
    7. 'x' → logprob: -6.554868698120117
    8. '[' → logprob: -6.679868698120117
    9. 'def' → logprob: -6.679868698120117
    10. '4' → logprob: -6.804868698120117

Token 1017: '-byte' (ID: 145970)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.076335072517395
    2. 'byte' → logprob: -1.576335072517395
    3. '7' → logprob: -1.701335072517395
    4. '_byte' → logprob: -2.7013349533081055
    5. 'b' → logprob: -2.8263349533081055
    6. '0' → logprob: -2.9513349533081055
    7. '[' → logprob: -3.9513349533081055
    8. '<|end|>' → logprob: -4.2013349533081055
    9. '#' → logprob: -4.7013349533081055
    10. ',' → logprob: -4.9513349533081055

Token 1018: ' char' (ID: 1826)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8134933710098267
    2. ' ' → logprob: -0.8134933710098267
    3. 'def' → logprob: -3.313493251800537
    4. '<|end|>' → logprob: -4.313493251800537
    5. ')' → logprob: -4.813493251800537
    6. 'b' → logprob: -5.063493251800537
    7. '#' → logprob: -5.188493251800537
    8. ' b' → logprob: -5.313493251800537
    9. '(' → logprob: -5.563493251800537
    10. '0' → logprob: -5.563493251800537

Token 1019: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2835778594017029
    2. ' ' → logprob: -2.4085779190063477
    3. ')' → logprob: -3.6585779190063477
    4. '<|end|>' → logprob: -3.7835779190063477
    5. 'def' → logprob: -3.7835779190063477
    6. '7' → logprob: -4.033577919006348
    7. '(' → logprob: -4.158577919006348
    8. 'b' → logprob: -4.533577919006348
    9. ':' → logprob: -5.158577919006348
    10. '   ' → logprob: -5.283577919006348

Token 1020: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.153381809592247
    2. ' )' → logprob: -4.028381824493408
    3. '[' → logprob: -4.278381824493408
    4. ')' → logprob: -4.278381824493408
    5. ' b' → logprob: -4.403381824493408
    6. 'def' → logprob: -4.403381824493408
    7. '#' → logprob: -4.528381824493408
    8. 'b' → logprob: -4.528381824493408
    9. '<|end|>' → logprob: -4.778381824493408
    10. ' x' → logprob: -5.028381824493408

Token 1021: '110' (ID: 7920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4792332649230957
    2. 'def' → logprob: -1.4792332649230957
    3. 'b' → logprob: -1.6042332649230957
    4. ' ' → logprob: -2.6042332649230957
    5. '   ' → logprob: -2.6042332649230957
    6. 'x' → logprob: -2.9792332649230957
    7. ' b' → logprob: -3.7292332649230957
    8. '1' → logprob: -3.9792332649230957
    9. '7' → logprob: -4.354233264923096
    10. '0' → logprob: -4.479233264923096

Token 1022: 'yyyy' (ID: 27343)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.817337691783905
    2. '7' → logprob: -1.9423377513885498
    3. 'y' → logprob: -2.31733775138855
    4. '0' → logprob: -2.81733775138855
    5. '111' → logprob: -2.81733775138855
    6. ')' → logprob: -2.94233775138855
    7. 'yyyy' → logprob: -3.56733775138855
    8. 'b' → logprob: -4.067337512969971
    9. '<|end|>' → logprob: -4.067337512969971
    10. ',' → logprob: -4.442337512969971

Token 1023: 'x' (ID: 87)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1024: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26053181290626526
    2. ':' → logprob: -1.7605317831039429
    3. '<|end|>' → logprob: -4.385531902313232
    4. ',' → logprob: -4.510531902313232
    5. '0' → logprob: -4.885531902313232
    6. ')' → logprob: -5.510531902313232
    7. 'def' → logprob: -5.635531902313232
    8. '=' → logprob: -5.760531902313232
    9. 'b' → logprob: -6.010531902313232
    10. '7' → logprob: -6.260531902313232

Token 1025: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17984551191329956
    2. ' ' → logprob: -3.4298455715179443
    3. 'def' → logprob: -3.5548455715179443
    4. '(' → logprob: -3.8048455715179443
    5. '   ' → logprob: -4.179845333099365
    6. '0' → logprob: -4.304845333099365
    7. ')' → logprob: -4.304845333099365
    8. 'b' → logprob: -4.804845333099365
    9. '<|end|>' → logprob: -5.429845333099365
    10. ':' → logprob: -5.679845333099365

Token 1026: 'xxxx' (ID: 30950)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1938953399658203
    2. '0' → logprob: -1.4438953399658203
    3. 'b' → logprob: -1.5688953399658203
    4. 'xxxx' → logprob: -2.5688953399658203
    5. 'x' → logprob: -3.1938953399658203
    6. ')' → logprob: -3.3188953399658203
    7. '```' → logprob: -3.9438953399658203
    8. '1' → logprob: -4.69389533996582
    9. ':' → logprob: -4.94389533996582
    10. '6' → logprob: -5.19389533996582

Token 1027: 'xx' (ID: 7605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06078570336103439
    2. '7' → logprob: -3.9357857704162598
    3. '0' → logprob: -4.06078577041626
    4. ')' → logprob: -5.56078577041626
    5. 'b' → logprob: -6.06078577041626
    6. '[]' → logprob: -6.31078577041626
    7. '#' → logprob: -6.43578577041626
    8. 'def' → logprob: -6.56078577041626
    9. '   ' → logprob: -6.68578577041626
    10. '```' → logprob: -6.68578577041626

Token 1028: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.442474365234375
    2. ' ' → logprob: -1.942474365234375
    3. '<|end|>' → logprob: -3.067474365234375
    4. 'def' → logprob: -3.442474365234375
    5. ')' → logprob: -3.442474365234375
    6. '(' → logprob: -3.692474365234375
    7. '0' → logprob: -4.192474365234375
    8. '   ' → logprob: -4.567474365234375
    9. '_' → logprob: -4.942474365234375
    10. ':' → logprob: -4.942474365234375

Token 1029: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.056268572807312
    2. '   ' → logprob: -1.431268572807312
    3. '[' → logprob: -2.3062686920166016
    4. 'def' → logprob: -2.3062686920166016
    5. ' =' → logprob: -2.9312686920166016
    6. ' 
' → logprob: -4.056268692016602
    7. '<|end|>' → logprob: -4.306268692016602
    8. ':' → logprob: -4.306268692016602
    9. '```' → logprob: -4.306268692016602
    10. '    ' → logprob: -4.431268692016602

Token 1030: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7332095503807068
    2. '<|end|>' → logprob: -1.6082096099853516
    3. ':' → logprob: -2.3582096099853516
    4. ')' → logprob: -3.2332096099853516
    5. ' ' → logprob: -3.2332096099853516
    6. '   ' → logprob: -3.6082096099853516
    7. 'b' → logprob: -3.7332096099853516
    8. '7' → logprob: -4.233209609985352
    9. '0' → logprob: -4.358209609985352
    10. 'x' → logprob: -4.608209609985352

Token 1031: ' meaning' (ID: 10915)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8320782780647278
    2. ' ' → logprob: -1.457078218460083
    3. 'def' → logprob: -2.707078218460083
    4. 'x' → logprob: -3.082078218460083
    5. ' x' → logprob: -3.457078218460083
    6. 'b' → logprob: -3.457078218460083
    7. ' b' → logprob: -3.832078218460083
    8. '   ' → logprob: -3.832078218460083
    9. '0' → logprob: -4.082078456878662
    10. '7' → logprob: -4.707078456878662

Token 1032: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0245357751846313
    2. 'b' → logprob: -1.1495357751846313
    3. ' b' → logprob: -1.5245357751846313
    4. '   ' → logprob: -3.899535655975342
    5. ' ' → logprob: -4.274535655975342
    6. 'x' → logprob: -4.774535655975342
    7. ' '' → logprob: -4.899535655975342
    8. ' x' → logprob: -4.899535655975342
    9. ')' → logprob: -5.024535655975342
    10. ''' → logprob: -5.274535655975342

Token 1033: ' from' (ID: 591)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.005606888327747583
    2. '[' → logprob: -5.505606651306152
    3. '=' → logprob: -6.755606651306152
    4. ' =' → logprob: -9.630606651306152
    5. ')' → logprob: -10.005606651306152
    6. '8' → logprob: -10.380606651306152
    7. '#' → logprob: -10.505606651306152
    8. ' ' → logprob: -10.880606651306152
    9. '_' → logprob: -11.005606651306152
    10. 'def' → logprob: -11.130606651306152

Token 1034: ' left' (ID: 3561)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.22541698813438416
    2. 'b' → logprob: -1.9754170179367065
    3. 'bit' → logprob: -3.100416898727417
    4. ' b' → logprob: -5.600417137145996
    5. ' ' → logprob: -5.975417137145996
    6. 'MS' → logprob: -6.100417137145996
    7. '1' → logprob: -6.350417137145996
    8. 'byte' → logprob: -6.350417137145996
    9. '#' → logprob: -6.850417137145996
    10. 'left' → logprob: -6.975417137145996

Token 1035: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5709070563316345
    2. '7' → logprob: -0.9459070563316345
    3. 'def' → logprob: -4.570907115936279
    4. '#' → logprob: -4.820907115936279
    5. ' ' → logprob: -5.320907115936279
    6. 'b' → logprob: -5.820907115936279
    7. '[
' → logprob: -5.820907115936279
    8. '```' → logprob: -5.945907115936279
    9. ',' → logprob: -6.195907115936279
    10. '=' → logprob: -6.320907115936279

Token 1036: 'MS' (ID: 6359)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.005813010036945343
    2. '[' → logprob: -5.880813121795654
    3. 'b' → logprob: -6.505813121795654
    4. ')' → logprob: -7.380813121795654
    5. '0' → logprob: -8.130812644958496
    6. ' ' → logprob: -8.630812644958496
    7. '6' → logprob: -8.630812644958496
    8. ' b' → logprob: -9.630812644958496
    9. 'def' → logprob: -10.505812644958496
    10. '#' → logprob: -11.130812644958496

Token 1037: 'B' (ID: 33)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.000410415610531345
    2. 'b' → logprob: -8.250410079956055
    3. 'B' → logprob: -9.000410079956055
    4. 'def' → logprob: -12.125410079956055
    5. '[' → logprob: -12.125410079956055
    6. 'bit' → logprob: -13.375410079956055
    7. ')' → logprob: -13.375410079956055
    8. '6' → logprob: -13.625410079956055
    9. 'byte' → logprob: -13.625410079956055
    10. '_' → logprob: -13.750410079956055

Token 1038: '=' (ID: 28)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.46135443449020386
    2. '=' → logprob: -1.3363544940948486
    3. ')' → logprob: -2.4613544940948486
    4. '[' → logprob: -4.8363542556762695
    5. 'b' → logprob: -4.9613542556762695
    6. ' to' → logprob: -6.2113542556762695
    7. '):' → logprob: -7.2113542556762695
    8. '0' → logprob: -7.4613542556762695
    9. ')=' → logprob: -7.4613542556762695
    10. 'to' → logprob: -7.8363542556762695

Token 1039: 'bit' (ID: 6516)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12952323257923126
    2. ''' → logprob: -2.254523277282715
    3. ' ' → logprob: -5.379523277282715
    4. 'b' → logprob: -5.504523277282715
    5. ')' → logprob: -5.629523277282715
    6. ' '' → logprob: -6.004523277282715
    7. '1' → logprob: -7.129523277282715
    8. ' b' → logprob: -8.129523277282715
    9. '')' → logprob: -8.379523277282715
    10. '0' → logprob: -8.754523277282715

Token 1040: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00013154871703591198
    2. ' ' → logprob: -9.875131607055664
    3. ')' → logprob: -10.125131607055664
    4. '[' → logprob: -10.500131607055664
    5. '=' → logprob: -13.125131607055664
    6. '0' → logprob: -13.125131607055664
    7. '_' → logprob: -13.500131607055664
    8. '```' → logprob: -13.500131607055664
    9. ']' → logprob: -13.750131607055664
    10. '8' → logprob: -13.875131607055664

Token 1041: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7093223929405212
    2. ')' → logprob: -0.8343223929405212
    3. '):' → logprob: -3.584322452545166
    4. '7' → logprob: -3.834322452545166
    5. '[' → logprob: -4.459322452545166
    6. ',' → logprob: -6.334322452545166
    7. '+' → logprob: -6.334322452545166
    8. ')=' → logprob: -6.334322452545166
    9. ']' → logprob: -6.459322452545166
    10. '):
' → logprob: -6.459322452545166

Token 1042: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05648123472929001
    2. 'def' → logprob: -3.806481122970581
    3. ')' → logprob: -4.55648136138916
    4. '```' → logprob: -5.68148136138916
    5. '#' → logprob: -5.93148136138916
    6. '   ' → logprob: -6.18148136138916
    7. '<|end|>' → logprob: -6.30648136138916
    8. 'b' → logprob: -6.43148136138916
    9. '7' → logprob: -6.43148136138916
    10. '[
' → logprob: -6.43148136138916

Token 1043: ' right' (ID: 1849)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7398426532745361
    2. 'right' → logprob: -1.2398426532745361
    3. 'bit' → logprob: -2.364842653274536
    4. 'b' → logprob: -3.364842653274536
    5. ''' → logprob: -3.364842653274536
    6. ' right' → logprob: -3.864842653274536
    7. '6' → logprob: -4.614842414855957
    8. '1' → logprob: -4.739842414855957
    9. 'space' → logprob: -4.739842414855957
    10. ' bit' → logprob: -5.614842414855957

Token 1044: '(bit' (ID: 123258)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06362570077180862
    2. 'def' → logprob: -4.063625812530518
    3. ')' → logprob: -4.563625812530518
    4. '7' → logprob: -4.938625812530518
    5. '(' → logprob: -5.313625812530518
    6. 'b' → logprob: -5.313625812530518
    7. '#' → logprob: -5.938625812530518
    8. '[
' → logprob: -6.063625812530518
    9. ' ' → logprob: -6.313625812530518
    10. '0' → logprob: -6.563625812530518

Token 1045: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.017201272770762444
    2. '6' → logprob: -4.3922014236450195
    3. '0' → logprob: -5.5172014236450195
    4. '5' → logprob: -7.8922014236450195
    5. '1' → logprob: -9.39220142364502
    6. ')' → logprob: -9.64220142364502
    7. ' ' → logprob: -9.76720142364502
    8. '2' → logprob: -10.89220142364502
    9. '4' → logprob: -11.01720142364502
    10. '[' → logprob: -11.14220142364502

Token 1046: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30372297763824463
    2. '[' → logprob: -1.5537229776382446
    3. '):' → logprob: -3.803722858428955
    4. ']' → logprob: -5.053722858428955
    5. '7' → logprob: -5.303722858428955
    6. '```' → logprob: -5.428722858428955
    7. ':' → logprob: -6.428722858428955
    8. 'b' → logprob: -6.428722858428955
    9. '#' → logprob: -6.803722858428955
    10. ',' → logprob: -6.928722858428955

Token 1047: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2021171599626541
    2. '[' → logprob: -2.7021172046661377
    3. 'def' → logprob: -3.8271172046661377
    4. 'b' → logprob: -3.9521172046661377
    5. '<|end|>' → logprob: -3.9521172046661377
    6. '#' → logprob: -4.827116966247559
    7. ')' → logprob: -5.202116966247559
    8. '0' → logprob: -5.327116966247559
    9. ' def' → logprob: -5.327116966247559
    10. ' b' → logprob: -5.327116966247559

Token 1048: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2634680271148682
    2. ' ' → logprob: -2.013468027114868
    3. 'def' → logprob: -2.263468027114868
    4. 'b' → logprob: -2.513468027114868
    5. '7' → logprob: -2.513468027114868
    6. ')' → logprob: -2.888468027114868
    7. '#' (adapté à ' #') → logprob: -3.013468027114868
    8. '0' → logprob: -3.138468027114868
    9. ' b' → logprob: -3.513468027114868
    10. ' )' → logprob: -3.638468027114868

Token 1049: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7812696695327759
    2. '7' → logprob: -1.4062696695327759
    3. ' b' → logprob: -2.5312695503234863
    4. ' ' → logprob: -3.1562695503234863
    5. '[' → logprob: -3.4062695503234863
    6. '```' → logprob: -3.7812695503234863
    7. '0' → logprob: -3.9062695503234863
    8. '1' → logprob: -4.156269550323486
    9. ')' → logprob: -4.156269550323486
    10. 'def' → logprob: -4.406269550323486

Token 1050: ' byte' (ID: 9239)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.30649319291114807
    2. '[' → logprob: -1.6814931631088257
    3. 'b' → logprob: -3.5564932823181152
    4. '_' → logprob: -3.8064932823181152
    5. ')' → logprob: -4.431493282318115
    6. ':' → logprob: -5.306493282318115
    7. 'byte' → logprob: -5.431493282318115
    8. ' ' → logprob: -6.681493282318115
    9. '=' → logprob: -7.181493282318115
    10. 'def' → logprob: -7.181493282318115

Token 1051: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09729855507612228
    2. '=' → logprob: -2.8472986221313477
    3. '7' → logprob: -3.8472986221313477
    4. 'def' → logprob: -5.472298622131348
    5. 'b' → logprob: -5.722298622131348
    6. '#' → logprob: -6.097298622131348
    7. ':' → logprob: -7.347298622131348
    8. ')' → logprob: -7.472298622131348
    9. ' =' → logprob: -7.472298622131348
    10. '=[' → logprob: -7.722298622131348

Token 1052: ' bit' (ID: 3546)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0937079191207886
    2. ' ' → logprob: -1.2187079191207886
    3. '[' → logprob: -2.343708038330078
    4. 'b' → logprob: -2.593708038330078
    5. ' b' → logprob: -3.468708038330078
    6. ')' → logprob: -3.468708038330078
    7. '   ' → logprob: -3.718708038330078
    8. '0' → logprob: -3.843708038330078
    9. ''' → logprob: -3.843708038330078
    10. ' '' → logprob: -4.218708038330078

Token 1053: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0011647457722574472
    2. '[' → logprob: -7.12616491317749
    3. ' ' → logprob: -8.876164436340332
    4. '=' → logprob: -8.876164436340332
    5. ')' → logprob: -11.001164436340332
    6. ':' → logprob: -11.376164436340332
    7. 'def' → logprob: -11.626164436340332
    8. '```' → logprob: -11.751164436340332
    9. ']' → logprob: -12.001164436340332
    10. ' =' → logprob: -12.376164436340332

Token 1054: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008831187733449042
    2. '=
' → logprob: -7.500883102416992
    3. ' =' → logprob: -9.375883102416992
    4. ',' → logprob: -9.875883102416992
    5. ')' → logprob: -10.125883102416992
    6. '==' → logprob: -10.375883102416992
    7. '7' → logprob: -10.500883102416992
    8. '='' → logprob: -11.125883102416992
    9. '=`' → logprob: -11.250883102416992
    10. '```' → logprob: -11.750883102416992

Token 1055: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08910304307937622
    2. '1' → logprob: -2.4641029834747314
    3. ' '' → logprob: -9.839102745056152
    4. '`' → logprob: -10.089102745056152
    5. '"' → logprob: -10.714102745056152
    6. ''''' → logprob: -10.839102745056152
    7. ' ' → logprob: -11.964102745056152
    8. '   ' → logprob: -12.964102745056152
    9. 'b' → logprob: -13.214102745056152
    10. '```' → logprob: -13.464102745056152

Token 1056: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04857124760746956
    2. ')' → logprob: -4.4235711097717285
    3. '0' → logprob: -4.4235711097717285
    4. '7' → logprob: -5.0485711097717285
    5. '=' → logprob: -5.7985711097717285
    6. '[' → logprob: -5.9235711097717285
    7. 'def' → logprob: -6.0485711097717285
    8. ':' → logprob: -6.2985711097717285
    9. '<|end|>' → logprob: -6.5485711097717285
    10. '#' → logprob: -6.9235711097717285

Token 1057: '6' (ID: 21)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.33927929401397705
    2. 'bit' → logprob: -1.339279294013977
    3. ' b' → logprob: -4.3392791748046875
    4. 'b' → logprob: -4.7142791748046875
    5. '6' → logprob: -6.2142791748046875
    6. ' ' → logprob: -7.8392791748046875
    7. ' ' → logprob: -7.9642791748046875
    8. ''' → logprob: -8.214279174804688
    9. ' '' → logprob: -8.964279174804688
    10. '`' → logprob: -9.214279174804688

Token 1058: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5001605153083801
    2. '=' → logprob: -1.0001604557037354
    3. '1' → logprob: -3.8751604557037354
    4. '5' → logprob: -6.0001606941223145
    5. ',b' → logprob: -7.1251606941223145
    6. ')' → logprob: -7.7501606941223145
    7. ' =' → logprob: -8.375160217285156
    8. '=True' → logprob: -8.500160217285156
    9. ':' → logprob: -8.625160217285156
    10. '<|end|>' → logprob: -9.000160217285156

Token 1059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00250348262488842
    2. '0' → logprob: -6.002503395080566
    3. ' ' → logprob: -10.627503395080566
    4. 'True' → logprob: -14.127503395080566
    5. '   ' → logprob: -15.252503395080566
    6. '5' → logprob: -15.252503395080566
    7. '
' → logprob: -15.377503395080566
    8. '=' → logprob: -15.752503395080566
    9. '```' → logprob: -15.815003395080566
    10. '  ' → logprob: -15.877503395080566

Token 1060: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6761409044265747
    2. '7' → logprob: -1.1761409044265747
    3. '5' → logprob: -2.801140785217285
    4. '```' → logprob: -3.426140785217285
    5. 'def' → logprob: -3.926140785217285
    6. '0' → logprob: -3.926140785217285
    7. ':' → logprob: -4.676140785217285
    8. ')' → logprob: -4.676140785217285
    9. '=' → logprob: -4.676140785217285
    10. '.' → logprob: -5.676140785217285

Token 1061: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00027254095766693354
    2. ' ' → logprob: -9.000272750854492
    3. 'bit' → logprob: -9.500272750854492
    4. '0' → logprob: -10.125272750854492
    5. '```' → logprob: -11.375272750854492
    6. 'b' → logprob: -12.250272750854492
    7. '1' → logprob: -13.125272750854492
    8. '4' → logprob: -13.250272750854492
    9. ' bit' → logprob: -13.250272750854492
    10. '``' → logprob: -13.437772750854492

Token 1062: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789438784122467
    2. '0' → logprob: -2.578943967819214
    3. ',' → logprob: -11.328944206237793
    4. ' =' → logprob: -11.328944206237793
    5. '5' → logprob: -11.578944206237793
    6. '```' → logprob: -11.703944206237793
    7. ' ' → logprob: -12.078944206237793
    8. '=
' → logprob: -13.828944206237793
    9. '1' → logprob: -14.203944206237793
    10. '``' → logprob: -14.328944206237793

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.259079363080673e-05
    2. '1' → logprob: -11.625012397766113
    3. ' ' → logprob: -12.625012397766113
    4. '```' → logprob: -17.12501335144043
    5. '2' → logprob: -17.43751335144043
    6. 'x' → logprob: -17.50001335144043
    7. ''' → logprob: -17.50001335144043
    8. '`' → logprob: -17.62501335144043
    9. '   ' → logprob: -17.68751335144043
    10. '۰' → logprob: -17.87501335144043

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2347465306520462
    2. '   ' → logprob: -2.9847464561462402
    3. 'def' → logprob: -3.2347464561462402
    4. '[' → logprob: -3.6097464561462402
    5. ':' → logprob: -3.8597464561462402
    6. ',
' → logprob: -4.10974645614624
    7. ',b' → logprob: -4.35974645614624
    8. '```' → logprob: -4.48474645614624
    9. '=' → logprob: -5.60974645614624
    10. '7' → logprob: -5.60974645614624

Token 1065: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5217364430427551
    2. ' ' → logprob: -1.6467363834381104
    3. '4' → logprob: -1.8967363834381104
    4. '7' → logprob: -2.8967363834381104
    5. '6' → logprob: -5.7717366218566895
    6. ',' → logprob: -6.0217366218566895
    7. ' b' → logprob: -7.3967366218566895
    8. 'b' → logprob: -7.8967366218566895
    9. '```' → logprob: -8.021736145019531
    10. '2' → logprob: -8.271736145019531

Token 1066: '=y' (ID: 70421)
  Prédit: '=y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=y' → logprob: -0.47602102160453796
    2. '=' → logprob: -0.9760210514068604
    3. 'y' → logprob: -6.601020812988281
    4. '=x' → logprob: -8.726020812988281
    5. ',y' → logprob: -9.101020812988281
    6. '='' → logprob: -9.226020812988281
    7. ' =' → logprob: -9.476020812988281
    8. '=True' → logprob: -9.726020812988281
    9. ''y' → logprob: -10.851020812988281
    10. '1' → logprob: -11.476020812988281

Token 1067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.603633463382721
    2. '5' → logprob: -2.103633403778076
    3. '7' → logprob: -2.478633403778076
    4. '=' → logprob: -2.853633403778076
    5. ':' → logprob: -3.103633403778076
    6. '```' → logprob: -3.728633403778076
    7. ',y' → logprob: -4.103633403778076
    8. '3' → logprob: -4.103633403778076
    9. '0' → logprob: -4.228633403778076
    10. ' ' → logprob: -4.353633403778076

Token 1068: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005440551321953535
    2. '5' → logprob: -5.255440711975098
    3. '```' → logprob: -8.755440711975098
    4. ' ' → logprob: -11.130440711975098
    5. '7' → logprob: -12.005440711975098
    6. ',' → logprob: -12.130440711975098
    7. '1' → logprob: -12.380440711975098
    8. '`' → logprob: -12.380440711975098
    9. '2' → logprob: -12.505440711975098
    10. '``' → logprob: -13.255440711975098

Token 1069: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5884044766426086
    2. '2' → logprob: -1.4634044170379639
    3. 'y' → logprob: -1.5884044170379639
    4. '=y' → logprob: -4.963404655456543
    5. ',y' → logprob: -7.713404655456543
    6. 'x' → logprob: -7.963404655456543
    7. '3' → logprob: -8.338404655456543
    8. ' ' → logprob: -8.838404655456543
    9. '```' → logprob: -8.838404655456543
    10. ',' → logprob: -9.088404655456543

Token 1070: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.39524996280670166
    2. '2' → logprob: -1.1452499628067017
    3. ',' → logprob: -5.520249843597412
    4. '```' → logprob: -6.520249843597412
    5. ' ' → logprob: -6.645249843597412
    6. '5' → logprob: -7.645249843597412
    7. '0' → logprob: -9.02025032043457
    8. '[' → logprob: -9.02025032043457
    9. '...' → logprob: -9.14525032043457
    10. '.' → logprob: -9.39525032043457

Token 1071: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001983829541131854
    2. ' ' → logprob: -6.501983642578125
    3. '4' → logprob: -7.751983642578125
    4. '3' → logprob: -11.126983642578125
    5. '```' → logprob: -11.251983642578125
    6. '1' → logprob: -12.376983642578125
    7. ',' → logprob: -12.626983642578125
    8. '6' → logprob: -12.751983642578125
    9. '  ' → logprob: -13.126983642578125
    10. '5' → logprob: -13.126983642578125

Token 1072: '=y' (ID: 70421)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5796604752540588
    2. 'y' → logprob: -0.8296604752540588
    3. '1' → logprob: -5.704660415649414
    4. '3' → logprob: -8.829660415649414
    5. ''y' → logprob: -9.579660415649414
    6. 'x' → logprob: -9.704660415649414
    7. ' y' → logprob: -9.954660415649414
    8. '	y' → logprob: -11.579660415649414
    9. '```' → logprob: -11.704660415649414
    10. '=y' → logprob: -11.829660415649414

Token 1073: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1074: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3943733274936676
    2. '4' → logprob: -1.5193732976913452
    3. ' ' → logprob: -3.1443734169006348
    4. '```' → logprob: -3.6443734169006348
    5. '5' → logprob: -4.269373416900635
    6. '2' → logprob: -4.269373416900635
    7. '0' → logprob: -5.269373416900635
    8. '7' → logprob: -6.519373416900635
    9. '3' → logprob: -6.769373416900635
    10. '``' → logprob: -7.894373416900635

Token 1075: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05330980196595192
    2. '0' → logprob: -3.553309917449951
    3. ',' → logprob: -4.928309917449951
    4. '=x' → logprob: -5.178309917449951
    5. '4' → logprob: -5.803309917449951
    6. '1' → logprob: -6.428309917449951
    7. '7' → logprob: -6.803309917449951
    8. 'x' → logprob: -6.803309917449951
    9. ',x' → logprob: -6.803309917449951
    10. '```' → logprob: -8.053309440612793

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9971651434898376
    2. '2' → logprob: -0.9971651434898376
    3. ':' → logprob: -2.6221652030944824
    4. '=' → logprob: -2.6221652030944824
    5. '0' → logprob: -3.1221652030944824
    6. ')' → logprob: -4.122165203094482
    7. '6' → logprob: -4.747165203094482
    8. '[' → logprob: -4.747165203094482
    9. ' ' → logprob: -5.247165203094482
    10. '```' → logprob: -5.247165203094482

Token 1077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016137124970555305
    2. ' ' → logprob: -4.51613712310791
    3. '2' → logprob: -5.64113712310791
    4. '1' → logprob: -6.64113712310791
    5. '4' → logprob: -9.64113712310791
    6. '```' → logprob: -10.26613712310791
    7. '6' → logprob: -10.89113712310791
    8. '<|end|>' → logprob: -11.14113712310791
    9. ')' → logprob: -11.26613712310791
    10. '[' → logprob: -11.39113712310791

Token 1078: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01058872789144516
    2. ':' → logprob: -6.010588645935059
    3. 'x' → logprob: -6.260588645935059
    4. ',' → logprob: -6.385588645935059
    5. ')' → logprob: -6.635588645935059
    6. '<|end|>' → logprob: -7.385588645935059
    7. '#' → logprob: -7.760588645935059
    8. ' =' → logprob: -8.010588645935059
    9. '```' → logprob: -8.135588645935059
    10. '[' → logprob: -8.385588645935059

Token 1079: '?
' (ID: 3901)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5997556447982788
    2. ':' → logprob: -1.5997556447982788
    3. '<|end|>' → logprob: -2.7247557640075684
    4. ',' → logprob: -3.0997557640075684
    5. '   ' → logprob: -3.7247557640075684
    6. 'def' → logprob: -4.224755764007568
    7. '[
' → logprob: -4.349755764007568
    8. '0' → logprob: -4.474755764007568
    9. ')' → logprob: -4.724755764007568
    10. ' ' → logprob: -4.849755764007568

Token 1080: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1081: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3336164951324463
    2. '[' → logprob: -1.3336164951324463
    3. '0' → logprob: -2.0836164951324463
    4. ' ' → logprob: -2.5836164951324463
    5. ':' → logprob: -2.9586164951324463
    6. '=' → logprob: -3.2086164951324463
    7. '1' → logprob: -3.2086164951324463
    8. '6' → logprob: -4.208616256713867
    9. '7' → logprob: -4.333616256713867
    10. 'x' → logprob: -4.458616256713867

Token 1082: ' But' (ID: 3072)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26178058981895447
    2. '1' → logprob: -2.5117805004119873
    3. '[' → logprob: -3.2617805004119873
    4. '7' → logprob: -3.3867805004119873
    5. 'def' → logprob: -4.011780738830566
    6. 'b' → logprob: -4.636780738830566
    7. '   ' → logprob: -4.636780738830566
    8. ' ' → logprob: -4.886780738830566
    9. '#' → logprob: -5.386780738830566
    10. 'x' → logprob: -5.886780738830566

Token 1083: ' problem' (ID: 4792)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7507809400558472
    2. ' ' → logprob: -1.7507809400558472
    3. ' b' → logprob: -1.8757809400558472
    4. ' x' → logprob: -1.8757809400558472
    5. '0' → logprob: -2.8757810592651367
    6. ' y' → logprob: -2.8757810592651367
    7. ':' → logprob: -3.2507810592651367
    8. 'b' → logprob: -3.3757810592651367
    9. 'y' → logprob: -3.7507810592651367
    10. ')' → logprob: -4.125781059265137

Token 1084: ' only' (ID: 1606)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18152862787246704
    2. '=' → logprob: -3.0565285682678223
    3. 'b' → logprob: -3.4315285682678223
    4. ':' → logprob: -3.4315285682678223
    5. '#' → logprob: -4.556528568267822
    6. ' =' → logprob: -4.931528568267822
    7. '```' → logprob: -5.306528568267822
    8. ' is' → logprob: -5.681528568267822
    9. 'def' → logprob: -5.931528568267822
    10. ' continues' → logprob: -6.181528568267822

Token 1085: ' says' (ID: 5003)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4729050397872925
    2. '[' → logprob: -2.472905158996582
    3. '#' → logprob: -2.597905158996582
    4. 'def' → logprob: -2.597905158996582
    5. 'b' → logprob: -2.972905158996582
    6. ':' → logprob: -3.597905158996582
    7. '0' → logprob: -4.472905158996582
    8. ' =' → logprob: -5.097905158996582
    9. ' continues' → logprob: -5.597905158996582
    10. ')' → logprob: -5.972905158996582

Token 1086: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.014344573020935
    2. 'x' → logprob: -2.0143446922302246
    3. ' x' → logprob: -2.2643446922302246
    4. ':' → logprob: -2.3893446922302246
    5. 'b' → logprob: -3.0143446922302246
    6. '<|end|>' → logprob: -3.2643446922302246
    7. '0' → logprob: -3.3893446922302246
    8. ')' → logprob: -3.6393446922302246
    9. '[' → logprob: -3.7643446922302246
    10. '...' → logprob: -3.8893446922302246

Token 1087: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38509175181388855
    2. ')' → logprob: -2.885091781616211
    3. '<|end|>' → logprob: -3.010091781616211
    4. 'def' → logprob: -3.135091781616211
    5. ':' → logprob: -3.135091781616211
    6. '0' → logprob: -3.510091781616211
    7. ',' → logprob: -3.760091781616211
    8. '=' → logprob: -4.135091781616211
    9. ']' → logprob: -4.385091781616211
    10. ' ' → logprob: -4.885091781616211

Token 1088: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5244113802909851
    2. '=' → logprob: -2.52441143989563
    3. ':' → logprob: -2.64941143989563
    4. 'def' → logprob: -2.77441143989563
    5. '   ' → logprob: -3.64941143989563
    6. '0' → logprob: -3.64941143989563
    7. ' =' → logprob: -3.77441143989563
    8. ')' → logprob: -4.024411201477051
    9. '(' → logprob: -4.149411201477051
    10. '<|end|>' → logprob: -4.274411201477051

Token 1089: '3' (ID: 18)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5121604204177856
    2. 'x' → logprob: -1.8871604204177856
    3. ' ' → logprob: -3.262160301208496
    4. 'b' → logprob: -3.262160301208496
    5. '0' → logprob: -3.387160301208496
    6. '[' → logprob: -3.637160301208496
    7. ''x' → logprob: -4.137160301208496
    8. ')' → logprob: -4.262160301208496
    9. '<|end|>' → logprob: -4.512160301208496
    10. ' x' → logprob: -4.637160301208496

Token 1090: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8201382756233215
    2. '<|end|>' → logprob: -2.0701382160186768
    3. ':' → logprob: -2.1951382160186768
    4. '0' → logprob: -2.9451382160186768
    5. 'def' → logprob: -3.0701382160186768
    6. ')' → logprob: -3.4451382160186768
    7. ' ' → logprob: -3.4451382160186768
    8. '7' → logprob: -3.5701382160186768
    9. '(' → logprob: -3.8201382160186768
    10. '   ' → logprob: -3.9451382160186768

Token 1091: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3233283758163452
    2. ':' → logprob: -1.6983283758163452
    3. ' ' → logprob: -2.0733284950256348
    4. '7' → logprob: -2.9483284950256348
    5. '0' → logprob: -2.9483284950256348
    6. '   ' → logprob: -3.0733284950256348
    7. '=' → logprob: -3.1983284950256348
    8. 'def' → logprob: -3.1983284950256348
    9. ')' → logprob: -3.4483284950256348
    10. '<|end|>' → logprob: -3.5733284950256348

Token 1092: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.974628210067749
    2. ')' → logprob: -2.099628210067749
    3. '0' → logprob: -2.224628210067749
    4. ' b' → logprob: -2.724628210067749
    5. 'def' → logprob: -2.849628210067749
    6. ':' → logprob: -2.974628210067749
    7. 'b' → logprob: -3.099628210067749
    8. '7' → logprob: -3.224628210067749
    9. '   ' → logprob: -3.224628210067749
    10. '1' → logprob: -3.349628210067749

Token 1093: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27974584698677063
    2. '=' → logprob: -2.4047458171844482
    3. ')' → logprob: -2.6547458171844482
    4. ':' → logprob: -3.4047458171844482
    5. ',' → logprob: -4.779746055603027
    6. '0' → logprob: -5.029746055603027
    7. '7' → logprob: -5.029746055603027
    8. '#' → logprob: -5.529746055603027
    9. '<|end|>' → logprob: -5.529746055603027
    10. '6' → logprob: -5.779746055603027

Token 1094: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6461129188537598
    2. ')' → logprob: -2.3961129188537598
    3. ':' → logprob: -2.7711129188537598
    4. '=' → logprob: -2.8961129188537598
    5. 'def' → logprob: -3.0211129188537598
    6. '0' → logprob: -3.3961129188537598
    7. '<|end|>' → logprob: -3.5211129188537598
    8. ' ' → logprob: -3.6461129188537598
    9. '   ' → logprob: -3.8961129188537598
    10. ' =' → logprob: -4.02111291885376

Token 1095: ' remaining' (ID: 15448)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6379886865615845
    2. '2' → logprob: -1.2629886865615845
    3. '6' → logprob: -2.512988567352295
    4. '0' → logprob: -3.137988567352295
    5. ' ' → logprob: -3.512988567352295
    6. '1' → logprob: -3.887988567352295
    7. '5' → logprob: -5.512988567352295
    8. '8' → logprob: -6.387988567352295
    9. '```' → logprob: -6.512988567352295
    10. 'None' → logprob: -7.137988567352295

Token 1096: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7481327056884766
    2. '0' → logprob: -1.6231327056884766
    3. '7' → logprob: -2.8731327056884766
    4. ':' → logprob: -3.1231327056884766
    5. 'def' → logprob: -3.2481327056884766
    6. '<|end|>' → logprob: -3.2481327056884766
    7. ')' → logprob: -3.6231327056884766
    8. ' ' → logprob: -3.7481327056884766
    9. '1' → logprob: -4.248132705688477
    10. 'b' → logprob: -4.373132705688477

Token 1097: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16882650554180145
    2. ':' → logprob: -3.4188265800476074
    3. 'def' → logprob: -3.4188265800476074
    4. '(' → logprob: -4.293826580047607
    5. ')' → logprob: -4.293826580047607
    6. '0' → logprob: -4.668826580047607
    7. '<|end|>' → logprob: -4.668826580047607
    8. ' ' → logprob: -4.918826580047607
    9. 'b' → logprob: -5.293826580047607
    10. '[
' → logprob: -5.418826580047607

Token 1098: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7125077247619629
    2. ' ' → logprob: -0.9625077247619629
    3. '[' → logprob: -3.337507724761963
    4. '    ' → logprob: -3.587507724761963
    5. '<|end|>' → logprob: -4.212507724761963
    6. ')' → logprob: -5.337507724761963
    7. ' x' → logprob: -5.337507724761963
    8. 'x' → logprob: -5.462507724761963
    9. '       ' → logprob: -5.587507724761963
    10. '0' → logprob: -5.587507724761963

Token 1099: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8529691696166992
    2. ' ' → logprob: -1.9779691696166992
    3. '<|end|>' → logprob: -2.227969169616699
    4. ')' → logprob: -2.602969169616699
    5. 'x' → logprob: -2.852969169616699
    6. '   ' → logprob: -3.602969169616699
    7. '(' → logprob: -3.602969169616699
    8. ':' → logprob: -3.852969169616699
    9. '=' → logprob: -3.977969169616699
    10. '0' → logprob: -3.977969169616699

Token 1100: ' Actually' (ID: 50557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5413813591003418
    2. '   ' → logprob: -1.5413813591003418
    3. 'def' → logprob: -2.291381359100342
    4. '0' → logprob: -2.416381359100342
    5. ' b' → logprob: -2.666381359100342
    6. 'b' → logprob: -2.666381359100342
    7. 'x' → logprob: -3.041381359100342
    8. '7' → logprob: -3.416381359100342
    9. ' x' → logprob: -3.416381359100342
    10. ' ' → logprob: -3.916381359100342

Token 1101: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42538982629776
    2. '[' → logprob: -2.8003897666931152
    3. '   ' → logprob: -3.0503897666931152
    4. 'b' → logprob: -3.1753897666931152
    5. ' b' → logprob: -3.3003897666931152
    6. ':' → logprob: -3.8003897666931152
    7. ' =' → logprob: -4.050389766693115
    8. ' x' → logprob: -4.175389766693115
    9. '[
' → logprob: -4.300389766693115
    10. 'x' → logprob: -4.675389766693115

Token 1102: ' from' (ID: 591)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0764120817184448
    2. 'def' → logprob: -1.5764120817184448
    3. 'b' → logprob: -1.7014120817184448
    4. '#' → logprob: -2.4514122009277344
    5. 'x' → logprob: -3.0764122009277344
    6. ' x' → logprob: -3.5764122009277344
    7. 'y' → logprob: -3.9514122009277344
    8. ' y' → logprob: -3.9514122009277344
    9. '0' → logprob: -4.701412200927734
    10. ' #' → logprob: -4.826412200927734

Token 1103: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6350991725921631
    2. 'b' → logprob: -1.510099172592163
    3. '7' → logprob: -2.760099172592163
    4. '0' → logprob: -3.135099172592163
    5. ' b' → logprob: -3.885099172592163
    6. ' ' → logprob: -4.010099411010742
    7. '1' → logprob: -4.260099411010742
    8. '6' → logprob: -4.260099411010742
    9. ''' → logprob: -4.885099411010742
    10. 'x' → logprob: -4.885099411010742

Token 1104: ' table' (ID: 3293)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32823145389556885
    2. ')' → logprob: -2.2032313346862793
    3. 'def' → logprob: -2.7032313346862793
    4. 'b' → logprob: -4.328231334686279
    5. '   ' → logprob: -4.328231334686279
    6. '[
' → logprob: -4.328231334686279
    7. ':' → logprob: -4.578231334686279
    8. '#' → logprob: -4.703231334686279
    9. '(' → logprob: -4.953231334686279
    10. '=' → logprob: -5.203231334686279

Token 1105: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6041766405105591
    2. ')' → logprob: -2.2291765213012695
    3. 'def' → logprob: -2.6041765213012695
    4. ':' → logprob: -2.7291765213012695
    5. ' ' → logprob: -3.2291765213012695
    6. '<|end|>' → logprob: -3.4791765213012695
    7. '#' → logprob: -3.6041765213012695
    8. '   ' → logprob: -4.2291765213012695
    9. '0' → logprob: -4.2291765213012695
    10. '(' → logprob: -4.4791765213012695

Token 1106: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0341020822525024
    2. ' ' → logprob: -1.7841020822525024
    3. '7' → logprob: -2.409101963043213
    4. 'b' → logprob: -2.409101963043213
    5. '<|end|>' → logprob: -2.409101963043213
    6. 'def' → logprob: -3.284101963043213
    7. ' b' → logprob: -3.784101963043213
    8. '0' → logprob: -3.909101963043213
    9. ')' → logprob: -3.909101963043213
    10. 'x' → logprob: -4.284101963043213

Token 1107: ' #' (ID: 1069)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8974044322967529
    2. '   ' → logprob: -2.272404432296753
    3. '[' → logprob: -2.397404432296753
    4. '0' → logprob: -2.897404432296753
    5. 'def' → logprob: -3.022404432296753
    6. '6' → logprob: -3.147404432296753
    7. 'b' → logprob: -3.397404432296753
    8. ' x' → logprob: -3.522404432296753
    9. ' b' → logprob: -3.772404432296753
    10. ' ' → logprob: -3.772404432296753

Token 1108: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3276636302471161
    2. 'def' → logprob: -1.9526636600494385
    3. '7' → logprob: -3.0776636600494385
    4. '0' → logprob: -3.7026636600494385
    5. 'b' → logprob: -4.577663421630859
    6. ' ' → logprob: -4.827663421630859
    7. '(' → logprob: -4.827663421630859
    8. '[
' → logprob: -4.952663421630859
    9. ')' → logprob: -5.202663421630859
    10. '```' → logprob: -5.452663421630859

Token 1109: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8007146120071411
    2. '7' → logprob: -1.3007146120071411
    3. 'def' → logprob: -2.4257144927978516
    4. '0' → logprob: -2.9257144927978516
    5. '   ' → logprob: -3.3007144927978516
    6. '1' → logprob: -4.175714492797852
    7. ' ' → logprob: -4.175714492797852
    8. ':' → logprob: -4.300714492797852
    9. '(' → logprob: -4.550714492797852
    10. ' def' → logprob: -5.300714492797852

Token 1110: '-byte' (ID: 145970)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0344336032867432
    2. '[' → logprob: -1.1594336032867432
    3. ')' → logprob: -1.7844336032867432
    4. 'def' → logprob: -2.409433603286743
    5. 'b' → logprob: -3.909433603286743
    6. '[
' → logprob: -4.659433364868164
    7. ']' → logprob: -4.784433364868164
    8. '0' → logprob: -5.034433364868164
    9. '#' → logprob: -5.034433364868164
    10. '2' → logprob: -6.034433364868164

Token 1111: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08833497017621994
    2. ':' → logprob: -3.2133350372314453
    3. '7' → logprob: -4.588335037231445
    4. '(' → logprob: -4.588335037231445
    5. 'def' → logprob: -4.963335037231445
    6. ')' → logprob: -5.838335037231445
    7. '   ' → logprob: -6.088335037231445
    8. '0' → logprob: -6.463335037231445
    9. '[
' → logprob: -6.588335037231445
    10. '=' → logprob: -6.963335037231445

Token 1112: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9827096462249756
    2. '   ' → logprob: -1.2327096462249756
    3. '7' → logprob: -2.6077096462249756
    4. '=' → logprob: -2.8577096462249756
    5. ')' → logprob: -3.1077096462249756
    6. 'b' → logprob: -3.3577096462249756
    7. '(' → logprob: -3.7327096462249756
    8. ' =' → logprob: -3.7327096462249756
    9. ' ' → logprob: -4.732709884643555
    10. ':' → logprob: -4.857709884643555

Token 1113: ' #' (ID: 1069)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.17812994122505188
    2. ')' → logprob: -3.4281299114227295
    3. '[' → logprob: -3.5531299114227295
    4. '=' → logprob: -3.9281299114227295
    5. '   ' → logprob: -3.9281299114227295
    6. '0' → logprob: -4.803130149841309
    7. 'def' → logprob: -4.928130149841309
    8. 'b' → logprob: -5.053130149841309
    9. ',' → logprob: -5.178130149841309
    10. '#' (adapté à ' #') → logprob: -5.178130149841309

Token 1114: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2057511806488037
    2. 'def' → logprob: -1.2057511806488037
    3. '   ' → logprob: -2.3307511806488037
    4. '7' → logprob: -2.5807511806488037
    5. ':' → logprob: -3.4557511806488037
    6. ')' → logprob: -3.5807511806488037
    7. '(' → logprob: -3.8307511806488037
    8. '0' → logprob: -4.080751419067383
    9. ' ' → logprob: -4.330751419067383
    10. ' def' → logprob: -4.455751419067383

Token 1115: '110' (ID: 7920)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27142971754074097
    2. 'def' → logprob: -2.0214297771453857
    3. '7' → logprob: -3.5214297771453857
    4. 'b' → logprob: -4.771429538726807
    5. '1' → logprob: -4.771429538726807
    6. ':' → logprob: -4.896429538726807
    7. '       ' → logprob: -4.896429538726807
    8. 'if' → logprob: -5.021429538726807
    9. '```' → logprob: -5.271429538726807
    10. '0' → logprob: -5.271429538726807

Token 1116: 'yyyy' (ID: 27343)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7827264666557312
    2. 'yyyy' → logprob: -1.407726526260376
    3. '1' → logprob: -2.157726526260376
    4. '7' → logprob: -2.407726526260376
    5. '111' → logprob: -3.657726526260376
    6. '000' → logprob: -4.032726287841797
    7. ')' → logprob: -4.657726287841797
    8. 'y' → logprob: -4.657726287841797
    9. ',' → logprob: -5.407726287841797
    10. '   ' → logprob: -5.907726287841797

Token 1117: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7751937508583069
    2. ')' → logprob: -2.025193691253662
    3. '7' → logprob: -2.150193691253662
    4. '1' → logprob: -2.775193691253662
    5. '0' → logprob: -3.400193691253662
    6. '#' → logprob: -3.900193691253662
    7. '   ' → logprob: -3.900193691253662
    8. 'y' → logprob: -3.900193691253662
    9. 'b' → logprob: -4.150193691253662
    10. '```' → logprob: -4.150193691253662

Token 1118: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34345123171806335
    2. ':' → logprob: -1.9684512615203857
    3. '7' → logprob: -3.4684512615203857
    4. '   ' → logprob: -3.5934512615203857
    5. ')' → logprob: -3.9684512615203857
    6. '0' → logprob: -4.343451023101807
    7. ' ' → logprob: -4.718451023101807
    8. 'def' → logprob: -4.718451023101807
    9. '(' → logprob: -5.218451023101807
    10. '):' → logprob: -5.218451023101807

Token 1119: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8657392859458923
    2. '7' → logprob: -1.490739345550537
    3. '=' → logprob: -1.615739345550537
    4. ':' → logprob: -3.365739345550537
    5. ',' → logprob: -3.865739345550537
    6. ' =' → logprob: -4.115739345550537
    7. '0' → logprob: -4.365739345550537
    8. 'b' → logprob: -4.365739345550537
    9. 'def' → logprob: -4.615739345550537
    10. ')' → logprob: -4.615739345550537

Token 1120: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.15967433154582977
    2. 'xxxxx' → logprob: -2.2846744060516357
    3. '0' → logprob: -3.5346744060516357
    4. '1' → logprob: -4.784674167633057
    5. '7' → logprob: -5.909674167633057
    6. '6' → logprob: -6.034674167633057
    7. '111' → logprob: -6.409674167633057
    8. 'x' → logprob: -7.409674167633057
    9. 'yyyy' → logprob: -8.159674644470215
    10. '000' → logprob: -8.909674644470215

Token 1121: 'xx' (ID: 7605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2675597071647644
    2. 'xx' → logprob: -1.8925597667694092
    3. 'x' → logprob: -3.017559766769409
    4. '00' → logprob: -3.892559766769409
    5. '000' → logprob: -5.39255952835083
    6. ')' → logprob: -5.64255952835083
    7. '```' → logprob: -5.76755952835083
    8. '1' → logprob: -7.51755952835083
    9. 'xxx' → logprob: -7.64255952835083
    10. '[' → logprob: -7.76755952835083

Token 1122: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09523516148328781
    2. ':' → logprob: -3.5952351093292236
    3. '[' → logprob: -4.345235347747803
    4. 'def' → logprob: -4.345235347747803
    5. ' if' → logprob: -4.720235347747803
    6. ' =' → logprob: -5.095235347747803
    7. '(' → logprob: -6.345235347747803
    8. ' ' → logprob: -6.345235347747803
    9. ':
' → logprob: -6.345235347747803
    10. '```' → logprob: -6.345235347747803

Token 1123: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07634018361568451
    2. '[' → logprob: -3.9513401985168457
    3. ':' → logprob: -4.076340198516846
    4. '```' → logprob: -5.076340198516846
    5. 'def' → logprob: -5.201340198516846
    6. '
' → logprob: -5.701340198516846
    7. ')' → logprob: -5.951340198516846
    8. ' ' → logprob: -5.951340198516846
    9. ' if' → logprob: -6.201340198516846
    10. '0' → logprob: -6.576340198516846

Token 1124: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36257246136665344
    2. 'b' → logprob: -2.362572431564331
    3. '[
' → logprob: -3.237572431564331
    4. ' b' → logprob: -3.487572431564331
    5. ''' → logprob: -3.737572431564331
    6. '7' → logprob: -3.862572431564331
    7. ' ' → logprob: -3.862572431564331
    8. '0' → logprob: -4.86257266998291
    9. ' [' → logprob: -4.98757266998291
    10. 'y' → logprob: -5.36257266998291

Token 1125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9071985483169556
    2. '7' → logprob: -1.5321985483169556
    3. '[' → logprob: -1.6571985483169556
    4. '0' → logprob: -2.157198429107666
    5. 's' → logprob: -3.032198429107666
    6. '_' → logprob: -4.782198429107666
    7. ')' → logprob: -5.657198429107666
    8. '2' → logprob: -5.907198429107666
    9. 'def' → logprob: -6.157198429107666
    10. '```' → logprob: -6.282198429107666

Token 1126: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15238149464130402
    2. '   ' → logprob: -3.152381420135498
    3. 'def' → logprob: -3.527381420135498
    4. '(' → logprob: -3.902381420135498
    5. '```' → logprob: -4.402381420135498
    6. ' =' → logprob: -4.777381420135498
    7. ':' → logprob: -4.777381420135498
    8. '=' → logprob: -5.402381420135498
    9. ')' → logprob: -5.777381420135498
    10. '7' → logprob: -6.277381420135498

Token 1127: 'bits' (ID: 24043)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2723306119441986
    2. '['' → logprob: -2.2723305225372314
    3. ''' → logprob: -2.3973305225372314
    4. '1' → logprob: -3.8973305225372314
    5. ' [' → logprob: -5.1473307609558105
    6. 'b' → logprob: -5.1473307609558105
    7. '[
' → logprob: -5.1473307609558105
    8. ''b' → logprob: -6.7723307609558105
    9. ' ['' → logprob: -7.0223307609558105
    10. ' '' → logprob: -7.0223307609558105

Token 1128: ':' (ID: 25)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3977513313293457
    2. '[' → logprob: -1.1477513313293457
    3. ')' → logprob: -6.522751331329346
    4. '=' → logprob: -6.772751331329346
    5. '[
' → logprob: -6.772751331329346
    6. ' ' → logprob: -7.147751331329346
    7. '(' → logprob: -7.397751331329346
    8. 's' → logprob: -7.397751331329346
    9. '```' → logprob: -7.397751331329346
    10. '#' → logprob: -7.397751331329346

Token 1129: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6219323873519897
    2. '7' → logprob: -0.8719323873519897
    3. ' ' → logprob: -3.8719325065612793
    4. ')' → logprob: -5.496932506561279
    5. ' [' → logprob: -5.621932506561279
    6. '[
' → logprob: -5.746932506561279
    7. 'b' → logprob: -5.996932506561279
    8. '   ' → logprob: -6.371932506561279
    9. '```' → logprob: -6.871932506561279
    10. '(' → logprob: -7.121932506561279

Token 1130: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5642425417900085
    2. '7' → logprob: -1.4392426013946533
    3. ''' → logprob: -2.5642426013946533
    4. '=' → logprob: -2.6892426013946533
    5. 'b' → logprob: -4.314242362976074
    6. ' =' → logprob: -4.939242362976074
    7. '   ' → logprob: -5.314242362976074
    8. '1' → logprob: -5.564242362976074
    9. '[
' → logprob: -5.564242362976074
    10. ' ' → logprob: -5.814242362976074

Token 1131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019249445758759975
    2. ',' → logprob: -7.126924991607666
    3. '7' → logprob: -7.126924991607666
    4. ')' → logprob: -8.376924514770508
    5. '   ' → logprob: -10.376924514770508
    6. ' ' → logprob: -10.501924514770508
    7. '0' → logprob: -11.876924514770508
    8. '),' → logprob: -12.626924514770508
    9. '10' → logprob: -13.126924514770508
    10. '[' → logprob: -13.126924514770508

Token 1132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003630600171163678
    2. ' ' → logprob: -6.003630638122559
    3. ')' → logprob: -7.878630638122559
    4. '7' → logprob: -8.128630638122559
    5. '110' → logprob: -8.503630638122559
    6. ',' → logprob: -9.378630638122559
    7. '0' → logprob: -9.753630638122559
    8. '<|end|>' → logprob: -10.003630638122559
    9. '111' → logprob: -10.253630638122559
    10. '100' → logprob: -11.378630638122559

Token 1133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1507195085287094
    2. '1' → logprob: -2.025719404220581
    3. '10' → logprob: -5.65071964263916
    4. '7' → logprob: -5.90071964263916
    5. ' ' → logprob: -7.15071964263916
    6. '110' → logprob: -8.02571964263916
    7. '6' → logprob: -8.52571964263916
    8. ',' → logprob: -8.65071964263916
    9. '   ' → logprob: -9.52571964263916
    10. '```' → logprob: -10.15071964263916

Token 1134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05540958046913147
    2. '1' → logprob: -2.9304096698760986
    3. ' ' → logprob: -7.6804094314575195
    4. '6' → logprob: -11.30540943145752
    5. '110' → logprob: -11.43040943145752
    6. '7' → logprob: -11.80540943145752
    7. '10' → logprob: -11.80540943145752
    8. '4' → logprob: -12.18040943145752
    9. '5' → logprob: -12.18040943145752
    10. 'y' → logprob: -12.74290943145752

Token 1135: ' y' (ID: 342)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2517710030078888
    2. ' ' → logprob: -2.0017709732055664
    3. '0' → logprob: -3.6267709732055664
    4. '4' → logprob: -4.251770973205566
    5. ',' → logprob: -4.251770973205566
    6. '1' → logprob: -4.501770973205566
    7. '6' → logprob: -5.376770973205566
    8. '   ' → logprob: -5.626770973205566
    9. '_' → logprob: -5.876770973205566
    10. 'b' → logprob: -6.001770973205566

Token 1136: ' y' (ID: 342)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07151205837726593
    2. '[' → logprob: -3.44651198387146
    3. '4' → logprob: -4.946512222290039
    4. ',' → logprob: -5.071512222290039
    5. '0' → logprob: -5.071512222290039
    6. '6' → logprob: -5.196512222290039
    7. '3' → logprob: -6.071512222290039
    8. '5' → logprob: -6.196512222290039
    9. ' ' → logprob: -6.446512222290039
    10. '1' → logprob: -6.821512222290039

Token 1137: ' y' (ID: 342)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.354230672121048
    2. '7' → logprob: -1.8542306423187256
    3. '[' → logprob: -2.4792306423187256
    4. '0' → logprob: -3.6042306423187256
    5. ',' → logprob: -4.729230880737305
    6. ' ' → logprob: -5.229230880737305
    7. '2' → logprob: -5.229230880737305
    8. '1' → logprob: -5.729230880737305
    9. 'b' → logprob: -6.854230880737305
    10. '_' → logprob: -6.854230880737305

Token 1138: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3386560380458832
    2. '7' → logprob: -2.338655948638916
    3. ',' → logprob: -3.213655948638916
    4. '   ' → logprob: -3.213655948638916
    5. '0' → logprob: -3.963655948638916
    6. ')' → logprob: -4.338655948638916
    7. '```' → logprob: -4.338655948638916
    8. '1' → logprob: -4.463655948638916
    9. '6' → logprob: -4.838655948638916
    10. ' ' → logprob: -5.338655948638916

Token 1139: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46772319078445435
    2. '7' → logprob: -1.3427231311798096
    3. '0' → logprob: -3.5927231311798096
    4. '6' → logprob: -3.7177231311798096
    5. '1' → logprob: -4.217723369598389
    6. ':' → logprob: -4.342723369598389
    7. '   ' → logprob: -5.092723369598389
    8. ',' → logprob: -5.842723369598389
    9. ')' → logprob: -5.842723369598389
    10. '=' → logprob: -5.967723369598389

Token 1140: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03031291253864765
    2. ':' → logprob: -5.155313014984131
    3. ',' → logprob: -5.780313014984131
    4. ')' → logprob: -5.780313014984131
    5. '   ' → logprob: -5.780313014984131
    6. 'def' → logprob: -5.905313014984131
    7. '7' → logprob: -6.280313014984131
    8. '0' → logprob: -6.655313014984131
    9. ' ' → logprob: -6.780313014984131
    10. '1' → logprob: -6.905313014984131

Token 1141: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5447238087654114
    2. '7' → logprob: -1.9197237491607666
    3. '[' → logprob: -2.2947237491607666
    4. '1' → logprob: -2.5447237491607666
    5. '0' → logprob: -3.5447237491607666
    6. '6' → logprob: -3.7947237491607666
    7. '2' → logprob: -4.669723987579346
    8. '4' → logprob: -5.044723987579346
    9. 'def' → logprob: -5.169723987579346
    10. ']' → logprob: -5.419723987579346

Token 1142: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.031744807958602905
    2. '6' → logprob: -3.9067447185516357
    3. '5' → logprob: -5.031744956970215
    4. '[' → logprob: -6.531744956970215
    5. '4' → logprob: -6.781744956970215
    6. '1' → logprob: -7.281744956970215
    7. ')' → logprob: -7.406744956970215
    8. '0' → logprob: -7.656744956970215
    9. '2' → logprob: -9.906744956970215
    10. ']' → logprob: -10.031744956970215

Token 1143: '..' (ID: 485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0433628186583519
    2. ')' → logprob: -4.043362617492676
    3. '7' → logprob: -4.293362617492676
    4. ']' → logprob: -5.418362617492676
    5. '[' → logprob: -6.543362617492676
    6. ' =' → logprob: -6.668362617492676
    7. ']=' → logprob: -6.793362617492676
    8. '6' → logprob: -7.668362617492676
    9. ',' → logprob: -7.668362617492676
    10. '==' → logprob: -7.793362617492676

Token 1144: 'bit' (ID: 6516)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07608513534069061
    2. '6' → logprob: -3.576085090637207
    3. ')' → logprob: -3.701085090637207
    4. '1' → logprob: -4.576085090637207
    5. '0' → logprob: -4.951085090637207
    6. '5' → logprob: -6.951085090637207
    7. '```' → logprob: -7.201085090637207
    8. ' ' → logprob: -7.701085090637207
    9. 'x' → logprob: -8.451085090637207
    10. '4' → logprob: -8.451085090637207

Token 1145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04211130365729332
    2. '7' → logprob: -3.417111396789551
    3. '6' → logprob: -5.167111396789551
    4. '1' → logprob: -5.917111396789551
    5. '5' → logprob: -11.04211139678955
    6. '2' → logprob: -11.79211139678955
    7. ' ' → logprob: -12.41711139678955
    8. ')' → logprob: -12.41711139678955
    9. '4' → logprob: -13.91711139678955
    10. '```' → logprob: -14.41711139678955

Token 1146: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42526447772979736
    2. ')' → logprob: -1.5502644777297974
    3. 'def' → logprob: -3.800264358520508
    4. ':' → logprob: -3.925264358520508
    5. '   ' → logprob: -3.925264358520508
    6. ',' → logprob: -4.175264358520508
    7. ']' → logprob: -4.300264358520508
    8. '):' → logprob: -4.300264358520508
    9. '```' → logprob: -5.675264358520508
    10. '[
' → logprob: -5.925264358520508

Token 1147: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2694973051548004
    2. '7' → logprob: -2.8944973945617676
    3. '<|end|>' → logprob: -3.1444973945617676
    4. '0' → logprob: -3.2694973945617676
    5. ' ' → logprob: -3.3944973945617676
    6. ')' → logprob: -3.8944973945617676
    7. 'b' → logprob: -4.644497394561768
    8. 'y' → logprob: -5.019497394561768
    9. '1' → logprob: -5.269497394561768
    10. 'x' → logprob: -5.644497394561768

Token 1148: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21201594173908234
    2. ' ' → logprob: -3.5870158672332764
    3. ')' → logprob: -3.7120158672332764
    4. '   ' → logprob: -3.8370158672332764
    5. ' =' → logprob: -4.2120161056518555
    6. '7' → logprob: -4.2120161056518555
    7. '0' → logprob: -4.4620161056518555
    8. '<|end|>' → logprob: -4.4620161056518555
    9. 'b' → logprob: -4.8370161056518555
    10. ',' → logprob: -4.8370161056518555

Token 1149: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9072490930557251
    2. '   ' → logprob: -1.157249093055725
    3. ' =' → logprob: -2.1572489738464355
    4. 'def' → logprob: -3.0322489738464355
    5. '=' → logprob: -3.6572489738464355
    6. ':' → logprob: -3.9072489738464355
    7. '0' → logprob: -4.4072489738464355
    8. '7' → logprob: -4.6572489738464355
    9. ' ' → logprob: -4.7822489738464355
    10. ',' → logprob: -4.7822489738464355

Token 1150: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4803798794746399
    2. '6' → logprob: -1.7303798198699951
    3. '7' → logprob: -1.9803798198699951
    4. '0' → logprob: -3.730379819869995
    5. '[' → logprob: -3.980379819869995
    6. '5' → logprob: -4.230380058288574
    7. '2' → logprob: -5.105380058288574
    8. '4' → logprob: -6.730380058288574
    9. 's' → logprob: -7.355380058288574
    10. ' ' → logprob: -8.105380058288574

Token 1151: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.259176105260849
    2. 'def' → logprob: -2.759176015853882
    3. '=' → logprob: -3.134176015853882
    4. ' =' → logprob: -3.509176015853882
    5. '   ' → logprob: -4.134176254272461
    6. ')' → logprob: -4.259176254272461
    7. 'b' → logprob: -4.259176254272461
    8. '[
' → logprob: -5.134176254272461
    9. '```' → logprob: -5.384176254272461
    10. '0' → logprob: -5.509176254272461

Token 1152: 'bits' (ID: 24043)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6845752596855164
    2. 'bits' → logprob: -1.6845753192901611
    3. '[' → logprob: -2.059575319290161
    4. '1' → logprob: -2.934575319290161
    5. ''b' → logprob: -3.184575319290161
    6. '['' → logprob: -3.559575319290161
    7. '[
' → logprob: -4.559575080871582
    8. 'b' → logprob: -4.684575080871582
    9. ''s' → logprob: -5.184575080871582
    10. ''x' → logprob: -5.184575080871582

Token 1153: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1513085812330246
    2. ')' → logprob: -3.026308536529541
    3. '7' → logprob: -3.901308536529541
    4. '[
' → logprob: -4.526308536529541
    5. 'def' → logprob: -4.526308536529541
    6. '(' → logprob: -4.651308536529541
    7. '   ' → logprob: -4.776308536529541
    8. '```' → logprob: -5.151308536529541
    9. '=' → logprob: -5.276308536529541
    10. 'b' → logprob: -5.901308536529541

Token 1154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9791065454483032
    2. '7' → logprob: -0.9791065454483032
    3. ' ' → logprob: -1.8541065454483032
    4. '0' → logprob: -3.6041064262390137
    5. '[' → logprob: -4.104106426239014
    6. 'b' → logprob: -4.354106426239014
    7. ' b' → logprob: -5.104106426239014
    8. '   ' → logprob: -5.354106426239014
    9. '6' → logprob: -5.479106426239014
    10. 'x' → logprob: -5.854106426239014

Token 1155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011764043010771275
    2. ' ' → logprob: -5.261764049530029
    3. 'b' → logprob: -6.136764049530029
    4. '7' → logprob: -6.261764049530029
    5. 'bits' → logprob: -7.386764049530029
    6. ''' → logprob: -7.511764049530029
    7. '[' → logprob: -7.636764049530029
    8. 'bit' → logprob: -8.511763572692871
    9. ' b' → logprob: -8.511763572692871
    10. '0' → logprob: -9.136763572692871

Token 1156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9433815479278564
    2. '7' → logprob: -1.0683815479278564
    3. '0' → logprob: -1.9433815479278564
    4. '[' → logprob: -2.8183815479278564
    5. ')' → logprob: -3.3183815479278564
    6. ',' → logprob: -5.068381309509277
    7. ' ' → logprob: -5.568381309509277
    8. '#' → logprob: -5.818381309509277
    9. 'y' → logprob: -6.318381309509277
    10. '_' → logprob: -6.443381309509277

Token 1157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01623447798192501
    2. '1' → logprob: -4.141234397888184
    3. ' ' → logprob: -9.266234397888184
    4. '7' → logprob: -10.266234397888184
    5. '```' → logprob: -10.516234397888184
    6. ')' → logprob: -10.766234397888184
    7. ',' → logprob: -12.266234397888184
    8. '5' → logprob: -12.641234397888184
    9. '6' → logprob: -12.766234397888184
    10. 'x' → logprob: -12.891234397888184

Token 1158: ' x' (ID: 1215)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3756930828094482
    2. ' ' → logprob: -1.8756930828094482
    3. '0' → logprob: -2.1256930828094482
    4. ',' → logprob: -2.1256930828094482
    5. 'b' → logprob: -2.5006930828094482
    6. '1' → logprob: -2.6256930828094482
    7. ')' → logprob: -3.2506930828094482
    8. '=' → logprob: -4.000693321228027
    9. '[' → logprob: -4.125693321228027
    10. '```' → logprob: -4.125693321228027

Token 1159: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9394964575767517
    2. ')' → logprob: -1.5644965171813965
    3. '7' → logprob: -1.9394965171813965
    4. '0' → logprob: -2.8144965171813965
    5. 'def' → logprob: -3.4394965171813965
    6. ':' → logprob: -3.5644965171813965
    7. ']' → logprob: -3.5644965171813965
    8. '=' → logprob: -4.3144965171813965
    9. '1' → logprob: -4.3144965171813965
    10. '   ' → logprob: -4.6894965171813965

Token 1160: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2435494214296341
    2. 'def' → logprob: -2.993549346923828
    3. ':' → logprob: -3.368549346923828
    4. '   ' → logprob: -3.743549346923828
    5. ')' → logprob: -3.868549346923828
    6. '7' → logprob: -4.118549346923828
    7. '0' → logprob: -4.243549346923828
    8. '```' → logprob: -4.368549346923828
    9. '=' → logprob: -5.368549346923828
    10. '[
' → logprob: -5.493549346923828

Token 1161: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09251956641674042
    2. ')' → logprob: -3.592519521713257
    3. '(' → logprob: -3.717519521713257
    4. 'def' → logprob: -4.842519760131836
    5. '7' → logprob: -4.967519760131836
    6. ':' → logprob: -5.967519760131836
    7. '0' → logprob: -5.967519760131836
    8. '1' → logprob: -6.092519760131836
    9. ' ' → logprob: -6.092519760131836
    10. '#' → logprob: -6.467519760131836

Token 1162: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3479313254356384
    2. '7' → logprob: -2.347931385040283
    3. ')' → logprob: -3.222931385040283
    4. 'def' → logprob: -3.472931385040283
    5. ':' → logprob: -3.847931385040283
    6. '   ' → logprob: -3.972931385040283
    7. '0' → logprob: -4.222931385040283
    8. '```' → logprob: -4.847931385040283
    9. '(' → logprob: -4.972931385040283
    10. '1' → logprob: -4.972931385040283

Token 1163: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5624061822891235
    2. 'def' → logprob: -1.8124061822891235
    3. ':' → logprob: -3.187406063079834
    4. ' =' → logprob: -3.437406063079834
    5. '7' → logprob: -3.562406063079834
    6. ')' → logprob: -3.562406063079834
    7. '0' → logprob: -3.812406063079834
    8. '=' → logprob: -3.937406063079834
    9. '   ' → logprob: -4.312406063079834
    10. ',' → logprob: -4.562406063079834

Token 1164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1815071403980255
    2. 'def' → logprob: -2.056507110595703
    3. ' def' → logprob: -3.931507110595703
    4. ' =' → logprob: -5.056507110595703
    5. ':' → logprob: -5.806507110595703
    6. '[' → logprob: -6.056507110595703
    7. '    ' → logprob: -6.556507110595703
    8. '```' → logprob: -7.306507110595703
    9. '       ' → logprob: -7.431507110595703
    10. ' x' → logprob: -7.931507110595703

Token 1165: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0711050033569336
    2. 'def' → logprob: -1.5711050033569336
    3. ' ' → logprob: -1.6961050033569336
    4. '   ' → logprob: -2.1961050033569336
    5. ' 
' → logprob: -3.8211050033569336
    6. ':' → logprob: -4.071105003356934
    7. 'x' → logprob: -4.196105003356934
    8. ')' → logprob: -4.321105003356934
    9. '0' → logprob: -4.571105003356934
    10. ' def' → logprob: -4.571105003356934

Token 1166: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11477599292993546
    2. '[' → logprob: -2.8647758960723877
    3. 'def' → logprob: -4.614776134490967
    4. ' =' → logprob: -4.864776134490967
    5. ' ' → logprob: -5.114776134490967
    6. ' x' → logprob: -5.489776134490967
    7. ' if' → logprob: -5.989776134490967
    8. ':' → logprob: -5.989776134490967
    9. '       ' → logprob: -6.239776134490967
    10. '0' → logprob: -6.489776134490967

Token 1167: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12198037654161453
    2. 'def' → logprob: -3.2469804286956787
    3. '[' → logprob: -3.7469804286956787
    4. '7' → logprob: -5.1219801902771
    5. ' =' → logprob: -5.2469801902771
    6. ' b' → logprob: -5.4969801902771
    7. ':' → logprob: -5.6219801902771
    8. ' def' → logprob: -5.7469801902771
    9. '0' → logprob: -5.8719801902771
    10. ',' → logprob: -5.8719801902771

Token 1168: ' first' (ID: 1577)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3769422769546509
    2. '[' → logprob: -1.8769422769546509
    3. ' =' → logprob: -1.8769422769546509
    4. '   ' → logprob: -2.0019421577453613
    5. 'def' → logprob: -2.2519421577453613
    6. '7' → logprob: -2.6269421577453613
    7. ':' → logprob: -3.2519421577453613
    8. 'b' → logprob: -3.8769421577453613
    9. '0' → logprob: -4.376942157745361
    10. ' b' → logprob: -4.626942157745361

Token 1169: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8638938069343567
    2. '[' → logprob: -1.113893747329712
    3. 'byte' → logprob: -1.738893747329712
    4. ' ' → logprob: -3.988893747329712
    5. '_' → logprob: -4.238893985748291
    6. ' byte' → logprob: -4.613893985748291
    7. '_byte' → logprob: -4.738893985748291
    8. ' b' → logprob: -5.988893985748291
    9. ':' → logprob: -5.988893985748291
    10. '7' → logprob: -6.113893985748291

Token 1170: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26582303643226624
    2. '=' → logprob: -1.5158230066299438
    3. ' =' → logprob: -5.890822887420654
    4. '7' → logprob: -6.140822887420654
    5. 'def' → logprob: -6.265822887420654
    6. '=[' → logprob: -6.390822887420654
    7. '#' → logprob: -6.515822887420654
    8. 'b' → logprob: -7.140822887420654
    9. ')' → logprob: -7.765822887420654
    10. ':' → logprob: -7.765822887420654

Token 1171: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4036409258842468
    2. '[' → logprob: -1.4036409854888916
    3. ' =' → logprob: -2.7786409854888916
    4. '   ' → logprob: -4.0286407470703125
    5. '[
' → logprob: -6.4036407470703125
    6. ')' → logprob: -7.2786407470703125
    7. '[i' → logprob: -7.2786407470703125
    8. 'b' → logprob: -7.4036407470703125
    9. '```' → logprob: -7.7786407470703125
    10. 'def' → logprob: -7.9036407470703125

Token 1172: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27943524718284607
    2. ' ' → logprob: -2.029435157775879
    3. '=' → logprob: -3.654435157775879
    4. '7' → logprob: -3.779435157775879
    5. '   ' → logprob: -4.279435157775879
    6. ' =' → logprob: -4.529435157775879
    7. '0' → logprob: -5.279435157775879
    8. ' [' → logprob: -5.404435157775879
    9. 'b' → logprob: -5.404435157775879
    10. ')' → logprob: -5.654435157775879

Token 1173: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0027142842300236225
    2. '=' → logprob: -6.252714157104492
    3. '[' → logprob: -8.002714157104492
    4. ' ' → logprob: -8.502714157104492
    5. ' =' → logprob: -8.752714157104492
    6. ')' → logprob: -10.627714157104492
    7. '=[' → logprob: -11.502714157104492
    8. ':' → logprob: -12.127714157104492
    9. '   ' → logprob: -12.127714157104492
    10. ',' → logprob: -12.377714157104492

Token 1174: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008734668954275548
    2. ' =' → logprob: -7.750873565673828
    3. '=
' → logprob: -8.250873565673828
    4. ']' → logprob: -10.000873565673828
    5. '7' → logprob: -10.375873565673828
    6. '[' → logprob: -10.375873565673828
    7. ',' → logprob: -11.250873565673828
    8. '='' → logprob: -11.375873565673828
    9. ')' → logprob: -11.625873565673828
    10. ']=' → logprob: -11.750873565673828

Token 1175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00729543948546052
    2. ''' → logprob: -5.507295608520508
    3. '=' → logprob: -5.757295608520508
    4. '7' → logprob: -10.757295608520508
    5. ' ' → logprob: -11.132295608520508
    6. '='' → logprob: -12.132295608520508
    7. '`' → logprob: -12.507295608520508
    8. 'b' → logprob: -13.132295608520508
    9. ' =' → logprob: -13.382295608520508
    10. '"' → logprob: -14.257295608520508

Token 1176: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.914216160774231
    2. '=' → logprob: -1.539216160774231
    3. '[' → logprob: -1.539216160774231
    4. '7' → logprob: -2.6642160415649414
    5. ',' → logprob: -3.4142160415649414
    6. 'def' → logprob: -4.039216041564941
    7. ':' → logprob: -4.414216041564941
    8. '<|end|>' → logprob: -4.539216041564941
    9. ']' → logprob: -4.789216041564941
    10. '0' → logprob: -5.539216041564941

Token 1177: ' bit' (ID: 3546)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.008354994468390942
    2. 'bit' → logprob: -5.008355140686035
    3. ' ' → logprob: -7.258355140686035
    4. ' bit' → logprob: -7.883355140686035
    5. '=' → logprob: -8.883355140686035
    6. '1' → logprob: -8.883355140686035
    7. '0' → logprob: -9.508355140686035
    8. '5' → logprob: -9.633355140686035
    9. ',' → logprob: -10.133355140686035
    10. 'b' → logprob: -10.508355140686035

Token 1178: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -12.250008583068848
    3. '0' → logprob: -13.875008583068848
    4. '...' → logprob: -14.625008583068848
    5. '1' → logprob: -14.875008583068848
    6. '=' → logprob: -15.000008583068848
    7. '5' → logprob: -15.125008583068848
    8. '
' → logprob: -15.250008583068848
    9. 'six' → logprob: -15.250008583068848
    10. '   ' → logprob: -15.625008583068848

Token 1179: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001601539261173457
    2. '=
' → logprob: -8.875160217285156
    3. ' =' → logprob: -11.625160217285156
    4. '==' → logprob: -13.125160217285156
    5. '=

' → logprob: -13.250160217285156
    6. '='' → logprob: -13.500160217285156
    7. '=True' → logprob: -14.000160217285156
    8. '=`' → logprob: -14.000160217285156
    9. '=}' → logprob: -14.125160217285156
    10. ',' → logprob: -14.125160217285156

Token 1180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '0' → logprob: -10.625025749206543
    3. ' ' → logprob: -13.875025749206543
    4. 'x' → logprob: -15.250025749206543
    5. 'True' → logprob: -15.500025749206543
    6. '>' → logprob: -16.43752670288086
    7. '=' → logprob: -16.43752670288086
    8. ')' → logprob: -17.25002670288086
    9. 'y' → logprob: -17.50002670288086
    10. '   ' → logprob: -17.68752670288086

Token 1181: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10128126293420792
    2. '7' → logprob: -3.22628116607666
    3. 'def' → logprob: -3.60128116607666
    4. ',' → logprob: -4.60128116607666
    5. ':' → logprob: -4.97628116607666
    6. '   ' → logprob: -5.22628116607666
    7. ' =' → logprob: -5.85128116607666
    8. '[' → logprob: -6.10128116607666
    9. '=
' → logprob: -7.22628116607666
    10. ':
' → logprob: -8.97628116607666

Token 1182: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.701629102230072
    2. '5' → logprob: -1.2016291618347168
    3. '0' → logprob: -2.576629161834717
    4. ' ' → logprob: -2.701629161834717
    5. ' bit' → logprob: -2.951629161834717
    6. '1' → logprob: -5.576629161834717
    7. '6' → logprob: -5.826629161834717
    8. 'b' → logprob: -8.076628684997559
    9. '7' → logprob: -8.201628684997559
    10. '```' → logprob: -8.826628684997559

Token 1183: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.5690089639974758e-05
    2. '0' → logprob: -12.125015258789062
    3. '
' → logprob: -12.250015258789062
    4. '```' → logprob: -14.187515258789062
    5. '7' → logprob: -14.562515258789062
    6. '2' → logprob: -14.937515258789062
    7. '4' → logprob: -15.000015258789062
    8. '1' → logprob: -15.062515258789062
    9. '...' → logprob: -15.437515258789062
    10. ' ' → logprob: -15.562515258789062

Token 1184: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.085517113911919e-05
    2. '=
' → logprob: -10.25005054473877
    3. ' =' → logprob: -11.62505054473877
    4. '=True' → logprob: -13.50005054473877
    5. ',' → logprob: -13.87505054473877
    6. '   ' → logprob: -14.00005054473877
    7. '=

' → logprob: -14.00005054473877
    8. '6' → logprob: -14.50005054473877
    9. '==' → logprob: -14.87505054473877
    10. '=False' → logprob: -15.25005054473877

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. 'x' → logprob: -16.125003814697266
    5. '```' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.437503814697266
    7. '=' → logprob: -17.562503814697266
    8. '2' → logprob: -17.937503814697266
    9. '۰' → logprob: -17.937503814697266
    10. '`' → logprob: -18.187503814697266

Token 1186: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4881522059440613
    2. 'def' → logprob: -2.488152265548706
    3. '=' → logprob: -2.738152265548706
    4. ' =' → logprob: -2.863152265548706
    5. ')' → logprob: -2.988152265548706
    6. ':' → logprob: -3.238152265548706
    7. '[' → logprob: -3.488152265548706
    8. ' ' → logprob: -3.613152265548706
    9. ',' → logprob: -5.113152027130127
    10. '    ' → logprob: -5.488152027130127

Token 1187: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6257875561714172
    2. '5' → logprob: -2.3757874965667725
    3. ' b' → logprob: -2.3757874965667725
    4. ' bit' → logprob: -2.5007874965667725
    5. 'b' → logprob: -2.6257874965667725
    6. 'bit' → logprob: -2.7507874965667725
    7. 'def' → logprob: -4.000787734985352
    8. '6' → logprob: -4.500787734985352
    9. '   ' → logprob: -4.875787734985352
    10. '7' → logprob: -5.125787734985352

Token 1188: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5048530030981055e-06
    2. '5' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.750001907348633
    4. '1' → logprob: -15.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. '0' → logprob: -17.000001907348633
    7. '2' → logprob: -17.125001907348633
    8. '=' → logprob: -17.750001907348633
    9. '[' → logprob: -17.750001907348633
    10. '7' → logprob: -18.125001907348633

Token 1189: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00013679367839358747
    2. '=
' → logprob: -9.750136375427246
    3. ' =' → logprob: -10.000136375427246
    4. '=True' → logprob: -10.875136375427246
    5. ',' → logprob: -12.125136375427246
    6. '==' → logprob: -12.875136375427246
    7. '=x' → logprob: -13.250136375427246
    8. '=}' → logprob: -14.000136375427246
    9. '   ' → logprob: -14.375136375427246
    10. '=

' → logprob: -14.500136375427246

Token 1190: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24858985841274261
    2. ',' → logprob: -2.2485897541046143
    3. '[' → logprob: -2.9985897541046143
    4. ':' → logprob: -3.6235897541046143
    5. ' =' → logprob: -4.623589992523193
    6. '7' → logprob: -4.748589992523193
    7. 'def' → logprob: -5.748589992523193
    8. '6' → logprob: -6.123589992523193
    9. '=
' → logprob: -6.123589992523193
    10. '4' → logprob: -6.373589992523193

Token 1191: ' bit' (ID: 3546)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.09710492938756943
    2. '4' → logprob: -2.722105026245117
    3. '```' → logprob: -4.472105026245117
    4. ' ' → logprob: -5.097105026245117
    5. 'bit' → logprob: -5.972105026245117
    6. '7' → logprob: -5.972105026245117
    7. ' bit' → logprob: -6.972105026245117
    8. 'y' → logprob: -7.472105026245117
    9. ' y' → logprob: -7.597105026245117
    10. '3' → logprob: -7.722105026245117

Token 1192: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.246537173457909e-06
    2. '5' → logprob: -13.750003814697266
    3. '4' → logprob: -13.875003814697266
    4. '
' → logprob: -13.875003814697266
    5. ' ' → logprob: -14.500003814697266
    6. '   ' → logprob: -15.500003814697266
    7. '```' → logprob: -15.750003814697266
    8. '  ' → logprob: -16.750003814697266
    9. '1' → logprob: -17.000003814697266
    10. '0' → logprob: -17.000003814697266

Token 1193: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002991847461089492
    2. '=y' → logprob: -6.127991676330566
    3. 'y' → logprob: -7.877991676330566
    4. '3' → logprob: -8.127991676330566
    5. '=
' → logprob: -9.502991676330566
    6. ',y' → logprob: -11.127991676330566
    7. '4' → logprob: -11.627991676330566
    8. ' =' → logprob: -12.002991676330566
    9. '2' → logprob: -12.127991676330566
    10. '```' → logprob: -12.252991676330566

Token 1194: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.763986349105835
    2. ',' → logprob: -2.388986349105835
    3. 'def' → logprob: -2.388986349105835
    4. '=' → logprob: -2.513986349105835
    5. '[' → logprob: -2.638986349105835
    6. ':' → logprob: -2.763986349105835
    7. '```' → logprob: -3.388986349105835
    8. '5' → logprob: -3.388986349105835
    9. '6' → logprob: -4.138986587524414
    10. '2' → logprob: -4.763986587524414

Token 1195: ' bit' (ID: 3546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8516271114349365
    2. '4' → logprob: -1.2266271114349365
    3. '```' → logprob: -1.8516271114349365
    4. ''' → logprob: -3.6016271114349365
    5. 'bit' → logprob: -3.7266271114349365
    6. '6' → logprob: -3.7266271114349365
    7. ' ' → logprob: -4.351627349853516
    8. '5' → logprob: -5.226627349853516
    9. '`' → logprob: -5.351627349853516
    10. 'b' → logprob: -5.351627349853516

Token 1196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.750005722045898
    3. '1' → logprob: -13.500005722045898
    4. '#' → logprob: -15.375005722045898
    5. '   ' → logprob: -15.500005722045898
    6. '
' → logprob: -15.812505722045898
    7. '```' → logprob: -15.875005722045898
    8. '0' → logprob: -16.5000057220459
    9. '۲' → logprob: -16.5000057220459
    10. '  ' → logprob: -16.6875057220459

Token 1197: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01744520105421543
    2. '2' → logprob: -4.767445087432861
    3. '=y' → logprob: -4.767445087432861
    4. '=x' → logprob: -9.26744556427002
    5. '3' → logprob: -9.76744556427002
    6. ' =' → logprob: -10.14244556427002
    7. 'y' → logprob: -10.14244556427002
    8. '=True' → logprob: -11.39244556427002
    9. ',y' → logprob: -11.39244556427002
    10. 'x' → logprob: -12.14244556427002

Token 1198: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4896690249443054
    2. ':' → logprob: -1.9896690845489502
    3. 'def' → logprob: -2.86466908454895
    4. ',' → logprob: -2.86466908454895
    5. '=' → logprob: -2.86466908454895
    6. '   ' → logprob: -3.86466908454895
    7. ' =' → logprob: -4.114668846130371
    8. '7' → logprob: -4.989668846130371
    9. '[
' → logprob: -5.114668846130371
    10. '```' → logprob: -5.614668846130371

Token 1199: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12134832888841629
    2. ' ' → logprob: -3.7463483810424805
    3. '5' → logprob: -4.2463483810424805
    4. ' bit' → logprob: -4.2463483810424805
    5. '```' → logprob: -4.3713483810424805
    6. '7' → logprob: -4.4963483810424805
    7. '0' → logprob: -4.6213483810424805
    8. 'bit' → logprob: -5.1213483810424805
    9. '4' → logprob: -5.3713483810424805
    10. '3' → logprob: -5.3713483810424805

Token 1200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.750000953674316
    3. '' → logprob: -16.8125
    4. '```' → logprob: -16.875
    5. '１' → logprob: -17.0625
    6. '0' → logprob: -17.0625
    7. '2' → logprob: -17.5625
    8. '۱' → logprob: -18.25
    9. '10' → logprob: -18.4375
    10. '१' → logprob: -18.75

Token 1201: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.957014556974173e-05
    2. '=x' → logprob: -10.250069618225098
    3. '=
' → logprob: -10.750069618225098
    4. '=True' → logprob: -12.125069618225098
    5. ',' → logprob: -12.500069618225098
    6. '=',' → logprob: -14.500069618225098
    7. ' =' → logprob: -14.500069618225098
    8. '=

' → logprob: -14.625069618225098
    9. '='' → logprob: -14.875069618225098
    10. ')' → logprob: -15.000069618225098

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.854489803314209
    2. '=' → logprob: -0.854489803314209
    3. '[' → logprob: -3.104489803314209
    4. ':' → logprob: -3.354489803314209
    5. ',
' → logprob: -4.604489803314209
    6. '7' → logprob: -4.604489803314209
    7. ' =' → logprob: -4.979489803314209
    8. 'def' → logprob: -5.229489803314209
    9. '6' → logprob: -5.354489803314209
    10. ')' → logprob: -5.479489803314209

Token 1203: ' bit' (ID: 3546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5424104332923889
    2. '0' → logprob: -1.0424103736877441
    3. '1' → logprob: -3.167410373687744
    4. ' ' → logprob: -4.292410373687744
    5. ' bit' → logprob: -5.292410373687744
    6. 'bit' → logprob: -6.667410373687744
    7. '```' → logprob: -7.292410373687744
    8. '6' → logprob: -7.417410373687744
    9. '[' → logprob: -7.542410373687744
    10. ''' → logprob: -8.042410850524902

Token 1204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.875
    3. ' ' → logprob: -18.25
    4. '
' → logprob: -19.875
    5. '۰' → logprob: -20.5
    6. '   ' → logprob: -20.75
    7. '2' → logprob: -21.875
    8. '```' → logprob: -22.0625
    9. '०' → logprob: -22.0625
    10. '０' → logprob: -22.125

Token 1205: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017524146242067218
    2. '=x' → logprob: -6.3767523765563965
    3. '=
' → logprob: -10.501752853393555
    4. '=True' → logprob: -11.751752853393555
    5. ' =' → logprob: -12.876752853393555
    6. '='' → logprob: -13.001752853393555
    7. '=#' → logprob: -13.501752853393555
    8. ')' → logprob: -13.626752853393555
    9. '=user' → logprob: -14.251752853393555
    10. '=None' → logprob: -14.251752853393555

Token 1206: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.411022812128067
    2. '[' → logprob: -2.036022901535034
    3. 'def' → logprob: -2.161022901535034
    4. '   ' → logprob: -2.661022901535034
    5. ':
' → logprob: -5.036022663116455
    6. ',' → logprob: -5.911022663116455
    7. ' :' → logprob: -6.036022663116455
    8. ' def' → logprob: -6.286022663116455
    9. ' =' → logprob: -6.286022663116455
    10. '):' → logprob: -6.411022663116455

Token 1207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7916979789733887
    2. ':' → logprob: -1.0416979789733887
    3. '[' → logprob: -2.0416979789733887
    4. ',' → logprob: -3.9166979789733887
    5. ' =' → logprob: -4.291697978973389
    6. 'def' → logprob: -4.416697978973389
    7. '):' → logprob: -5.666697978973389
    8. '=' → logprob: -5.791697978973389
    9. ' ' → logprob: -6.416697978973389
    10. ' :' → logprob: -6.666697978973389

Token 1208: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1274130791425705
    2. 'def' → logprob: -2.252413034439087
    3. ':' → logprob: -5.377413272857666
    4. ' def' → logprob: -5.752413272857666
    5. ' =' → logprob: -6.377413272857666
    6. ' if' → logprob: -6.752413272857666
    7. '[' → logprob: -7.002413272857666
    8. ' :' → logprob: -7.752413272857666
    9. ',' → logprob: -8.002412796020508
    10. '=' → logprob: -8.252412796020508

Token 1209: ' second' (ID: 3099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027559280395508
    2. 'def' → logprob: -1.5777559280395508
    3. '[' → logprob: -1.8277559280395508
    4. ':' → logprob: -2.452755928039551
    5. ' def' → logprob: -4.452755928039551
    6. ',' → logprob: -4.577755928039551
    7. ' =' → logprob: -4.827755928039551
    8. ' if' → logprob: -5.452755928039551
    9. '[
' → logprob: -5.952755928039551
    10. ':
' → logprob: -6.327755928039551

Token 1210: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7451215386390686
    2. ':' → logprob: -0.8701215386390686
    3. 'b' → logprob: -2.870121479034424
    4. 'byte' → logprob: -3.495121479034424
    5. '=' → logprob: -5.120121479034424
    6. '[b' → logprob: -5.120121479034424
    7. ',' → logprob: -5.870121479034424
    8. 'def' → logprob: -7.245121479034424
    9. '```' → logprob: -7.495121479034424
    10. '[
' → logprob: -7.995121479034424

Token 1211: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3582417070865631
    2. 'def' → logprob: -1.3582416772842407
    3. '(' → logprob: -4.108241558074951
    4. '[
' → logprob: -5.108241558074951
    5. ':' → logprob: -5.233241558074951
    6. ')' → logprob: -6.108241558074951
    7. '<|end|>' → logprob: -6.358241558074951
    8. '#' → logprob: -6.358241558074951
    9. '(
' → logprob: -6.608241558074951
    10. ',' → logprob: -6.608241558074951

Token 1212: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6556282043457031
    2. '   ' → logprob: -1.2806282043457031
    3. ':' → logprob: -2.155628204345703
    4. 'def' → logprob: -3.030628204345703
    5. '(' → logprob: -3.905628204345703
    6. '       ' → logprob: -6.405628204345703
    7. '```' → logprob: -6.405628204345703
    8. ' (' → logprob: -6.530628204345703
    9. '[
' → logprob: -6.530628204345703
    10. '    ' → logprob: -6.530628204345703

Token 1213: ' bit' (ID: 3546)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5801454186439514
    2. 'b' → logprob: -1.5801453590393066
    3. ' bit' → logprob: -2.7051453590393066
    4. '7' → logprob: -2.8301453590393066
    5. 'bit' → logprob: -3.2051453590393066
    6. '1' → logprob: -3.5801453590393066
    7. ' ' → logprob: -4.330145359039307
    8. '[' → logprob: -4.455145359039307
    9. ' x' → logprob: -5.705145359039307
    10. ''' → logprob: -5.955145359039307

Token 1214: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0023237948771566153
    2. '[' → logprob: -6.627323627471924
    3. '6' → logprob: -7.127323627471924
    4. '2' → logprob: -9.752324104309082
    5. '=' → logprob: -10.127324104309082
    6. '5' → logprob: -10.502324104309082
    7. 'def' → logprob: -10.752324104309082
    8. ' ' → logprob: -11.502324104309082
    9. '4' → logprob: -11.752324104309082
    10. '1' → logprob: -11.877324104309082

Token 1215: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004618896055035293
    2. '=
' → logprob: -7.750462055206299
    3. ' =' → logprob: -10.87546157836914
    4. '='' → logprob: -12.50046157836914
    5. '=`' → logprob: -13.12546157836914
    6. '=',' → logprob: -13.87546157836914
    7. '==' → logprob: -13.87546157836914
    8. '=

' → logprob: -13.87546157836914
    9. ',' → logprob: -14.62546157836914
    10. '[' → logprob: -14.75046157836914

Token 1216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. ''' → logprob: -10.50003719329834
    3. ' ' → logprob: -12.37503719329834
    4. '`' → logprob: -13.87503719329834
    5. '
' → logprob: -13.87503719329834
    6. '   ' → logprob: -14.25003719329834
    7. '0' → logprob: -14.25003719329834
    8. '=' → logprob: -14.87503719329834
    9. '  ' → logprob: -15.31253719329834
    10. '```' → logprob: -15.50003719329834

Token 1217: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2240414172410965
    2. ',' → logprob: -1.84904146194458
    3. '0' → logprob: -3.84904146194458
    4. 'def' → logprob: -4.84904146194458
    5. '7' → logprob: -5.59904146194458
    6. ' =' → logprob: -6.09904146194458
    7. ':' → logprob: -6.22404146194458
    8. ')' → logprob: -6.22404146194458
    9. '6' → logprob: -7.22404146194458
    10. '1' → logprob: -7.59904146194458

Token 1218: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.34607771039009094
    2. '0' → logprob: -1.5960776805877686
    3. '1' → logprob: -3.2210776805877686
    4. ' bit' → logprob: -3.3460776805877686
    5. '6' → logprob: -4.471077919006348
    6. ' ' → logprob: -5.971077919006348
    7. '7' → logprob: -8.346077919006348
    8. 'b' → logprob: -8.971077919006348
    9. '   ' → logprob: -8.971077919006348
    10. '    ' → logprob: -9.471077919006348

Token 1219: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0009583894861862063
    2. '0' → logprob: -7.000958442687988
    3. '2' → logprob: -11.000958442687988
    4. '7' → logprob: -11.375958442687988
    5. '1' → logprob: -11.500958442687988
    6. '5' → logprob: -11.875958442687988
    7. ' ' → logprob: -14.125958442687988
    8. '```' → logprob: -14.250958442687988
    9. '
' → logprob: -16.125957489013672
    10. '=' → logprob: -16.750957489013672

Token 1220: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00044544681441038847
    2. '=x' → logprob: -8.625445365905762
    3. '=
' → logprob: -8.625445365905762
    4. '='' → logprob: -10.125445365905762
    5. '=True' → logprob: -11.375445365905762
    6. '=`' → logprob: -12.125445365905762
    7. '=#' → logprob: -12.250445365905762
    8. ' =' → logprob: -12.750445365905762
    9. '==' → logprob: -12.750445365905762
    10. '0' → logprob: -13.000445365905762

Token 1221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '1' → logprob: -15.625000953674316
    4. '
' → logprob: -16.625
    5. '<|end|>' → logprob: -18.375
    6. '=' → logprob: -18.625
    7. '```' → logprob: -19.125
    8. '[' → logprob: -19.375
    9. '۰' → logprob: -19.375
    10. '   ' → logprob: -19.375

Token 1222: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.823113203048706
    2. 'def' → logprob: -1.323113203048706
    3. ':' → logprob: -2.323113203048706
    4. ',' → logprob: -2.573113203048706
    5. '[' → logprob: -3.573113203048706
    6. ':
' → logprob: -3.948113203048706
    7. ' =' → logprob: -4.323113441467285
    8. '=' → logprob: -4.448113441467285
    9. ',
' → logprob: -5.073113441467285
    10. '
' → logprob: -5.198113441467285

Token 1223: ' bits' (ID: 18189)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.7186153531074524
    2. ' bit' → logprob: -1.7186152935028076
    3. 'b' → logprob: -1.8436152935028076
    4. ' b' → logprob: -2.0936152935028076
    5. '7' → logprob: -3.9686152935028076
    6. '0' → logprob: -4.718615531921387
    7. '1' → logprob: -5.468615531921387
    8. 'x' → logprob: -5.593615531921387
    9. ' x' → logprob: -5.718615531921387
    10. ' ' → logprob: -5.843615531921387

Token 1224: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5269947648048401
    2. '=' → logprob: -0.9019947648048401
    3. '[' → logprob: -6.901994705200195
    4. '=
' → logprob: -7.151994705200195
    5. '==' → logprob: -7.776994705200195
    6. '```' → logprob: -7.776994705200195
    7. ' =' → logprob: -7.901994705200195
    8. 'def' → logprob: -8.776994705200195
    9. ']' → logprob: -9.151994705200195
    10. 'b' → logprob: -9.151994705200195

Token 1225: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5163764953613281
    2. '7' → logprob: -1.2663764953613281
    3. '=' → logprob: -2.141376495361328
    4. 'x' → logprob: -6.766376495361328
    5. 'xxxxx' → logprob: -7.141376495361328
    6. '0' → logprob: -7.891376495361328
    7. '...' → logprob: -8.141376495361328
    8. 'xxxx' → logprob: -8.516376495361328
    9. '=x' → logprob: -8.641376495361328
    10. ' ' → logprob: -8.766376495361328

Token 1226: '..' (ID: 485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007082975469529629
    2. ',' → logprob: -5.882082939147949
    3. '7' → logprob: -7.007082939147949
    4. '=
' → logprob: -7.132082939147949
    5. ']=' → logprob: -7.257082939147949
    6. ']' → logprob: -7.382082939147949
    7. '```' → logprob: -7.757082939147949
    8. ' =' → logprob: -8.50708293914795
    9. '=x' → logprob: -8.88208293914795
    10. 'x' → logprob: -9.50708293914795

Token 1227: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06313496083021164
    2. '7' → logprob: -3.4381349086761475
    3. 'x' → logprob: -4.438135147094727
    4. '1' → logprob: -5.063135147094727
    5. 'xxxxx' → logprob: -5.438135147094727
    6. '0' → logprob: -6.063135147094727
    7. ' ' → logprob: -6.188135147094727
    8. '=' → logprob: -7.813135147094727
    9. 'xxxx' → logprob: -7.813135147094727
    10. ' x' → logprob: -8.313135147094727

Token 1228: '=x' (ID: 56980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0606250762939453
    2. '   ' → logprob: -1.3106250762939453
    3. ':' → logprob: -1.8106250762939453
    4. '=' → logprob: -2.6856250762939453
    5. ' =' → logprob: -3.0606250762939453
    6. ')' → logprob: -3.5606250762939453
    7. '):' → logprob: -3.5606250762939453
    8. 'def' → logprob: -4.060625076293945
    9. '```' → logprob: -4.685625076293945
    10. '[
' → logprob: -5.435625076293945

Token 1229: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5431080460548401
    2. ':' → logprob: -1.1681079864501953
    3. '[' → logprob: -2.6681079864501953
    4. 'def' → logprob: -4.293107986450195
    5. ' :' → logprob: -5.293107986450195
    6. ':
' → logprob: -5.293107986450195
    7. ' def' → logprob: -5.668107986450195
    8. '(' → logprob: -6.418107986450195
    9. '    ' → logprob: -6.668107986450195
    10. '):' → logprob: -6.918107986450195

Token 1230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8966763019561768
    2. ':' → logprob: -1.1466763019561768
    3. 'def' → logprob: -2.1466763019561768
    4. '[' → logprob: -2.3966763019561768
    5. ' :' → logprob: -3.8966763019561768
    6. ' def' → logprob: -3.8966763019561768
    7. '):' → logprob: -4.646676063537598
    8. ',' → logprob: -5.521676063537598
    9. ':
' → logprob: -6.396676063537598
    10. ')' → logprob: -6.771676063537598

Token 1231: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6641267538070679
    2. 'mask' → logprob: -1.4141267538070679
    3. 'def' → logprob: -1.6641267538070679
    4. 'pattern' → logprob: -3.7891268730163574
    5. 'b' → logprob: -4.164126873016357
    6. ' mask' → logprob: -5.539126873016357
    7. 'fixed' → logprob: -6.039126873016357
    8. 'bits' → logprob: -6.164126873016357
    9. '#' (adapté à ' #') → logprob: -6.539126873016357
    10. 'bit' → logprob: -7.414126873016357

Token 1232: ' y' (ID: 342)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20081563293933868
    2. '   ' → logprob: -2.5758156776428223
    3. '[' → logprob: -3.3258156776428223
    4. ':' → logprob: -3.7008156776428223
    5. ' def' → logprob: -4.075815677642822
    6. '(' → logprob: -4.700815677642822
    7. ' =' → logprob: -5.825815677642822
    8. '7' → logprob: -5.950815677642822
    9. '=' → logprob: -6.450815677642822
    10. 'x' → logprob: -6.575815677642822

Token 1233: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.193166971206665
    2. ' =' → logprob: -1.443166971206665
    3. '7' → logprob: -2.193166971206665
    4. '=' → logprob: -2.318166971206665
    5. 'bits' → logprob: -2.443166971206665
    6. ',' → logprob: -3.193166971206665
    7. '[' → logprob: -3.693166971206665
    8. ')' → logprob: -3.943166971206665
    9. 's' → logprob: -3.943166971206665
    10. '_mask' → logprob: -4.818166732788086

Token 1234: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5677635669708252
    2. ' =' → logprob: -0.9427635669708252
    3. '[' → logprob: -4.067763328552246
    4. '   ' → logprob: -4.317763328552246
    5. '=[' → logprob: -5.317763328552246
    6. ':' → logprob: -6.192763328552246
    7. 'def' → logprob: -6.567763328552246
    8. ',' → logprob: -6.567763328552246
    9. '=[]' → logprob: -7.442763328552246
    10. ')' → logprob: -7.692763328552246

Token 1235: ' positions' (ID: 15897)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.797351598739624
    2. '[' → logprob: -1.297351598739624
    3. '3' → logprob: -2.797351598739624
    4. '0' → logprob: -3.047351598739624
    5. '7' → logprob: -3.047351598739624
    6. '2' → logprob: -3.047351598739624
    7. 'positions' → logprob: -3.547351598739624
    8. 'i' → logprob: -5.047351837158203
    9. '=' → logprob: -5.172351837158203
    10. '1' → logprob: -5.547351837158203

Token 1236: ':' (ID: 25)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8236997127532959
    2. ' =' → logprob: -1.323699712753296
    3. '[' → logprob: -1.823699712753296
    4. '=' → logprob: -2.573699712753296
    5. '4' → logprob: -3.323699712753296
    6. ' ' → logprob: -5.573699951171875
    7. ' [' → logprob: -5.573699951171875
    8. '=[' → logprob: -5.573699951171875
    9. '(' → logprob: -5.948699951171875
    10. '5' → logprob: -6.073699951171875

Token 1237: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1895935982465744
    2. '4' → logprob: -1.8145935535430908
    3. ' [' → logprob: -5.31459379196167
    4. '7' → logprob: -6.18959379196167
    5. '{' → logprob: -7.06459379196167
    6. '(' → logprob: -7.18959379196167
    7. ' ' → logprob: -7.43959379196167
    8. '   ' → logprob: -8.689593315124512
    9. '5' → logprob: -9.314593315124512
    10. ' (' → logprob: -9.814593315124512

Token 1238: '4' (ID: 19)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2051640897989273
    2. '4' → logprob: -1.7051640748977661
    3. '(' → logprob: -6.830163955688477
    4. '7' → logprob: -7.205163955688477
    5. '{' → logprob: -7.205163955688477
    6. ' [' → logprob: -7.205163955688477
    7. '3' → logprob: -9.205163955688477
    8. ' ' → logprob: -9.455163955688477
    9. '5' → logprob: -9.955163955688477
    10. '([' → logprob: -10.080163955688477

Token 1239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29251766204833984
    2. '=' → logprob: -2.66751766204834
    3. '<|end|>' → logprob: -2.66751766204834
    4. ':' → logprob: -3.04251766204834
    5. 'def' → logprob: -4.04251766204834
    6. '<|end|>' → logprob: -4.29251766204834
    7. ')' → logprob: -4.91751766204834
    8. '   ' → logprob: -5.16751766204834
    9. ' =' → logprob: -5.54251766204834
    10. ',y' → logprob: -5.91751766204834

Token 1240: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07040818780660629
    2. '5' → logprob: -2.6954081058502197
    3. ' ' → logprob: -7.695408344268799
    4. '   ' → logprob: -11.69540786743164
    5. '2' → logprob: -12.57040786743164
    6. '7' → logprob: -13.57040786743164
    7. '1' → logprob: -14.19540786743164
    8. '    ' → logprob: -14.19540786743164
    9. '  ' → logprob: -14.32040786743164
    10. '	' → logprob: -14.69540786743164

Token 1241: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4857907295227051
    2. ',' → logprob: -0.9857907295227051
    3. ',y' → logprob: -5.860790729522705
    4. ' ' → logprob: -6.360790729522705
    5. ' ,' → logprob: -6.485790729522705
    6. '   ' → logprob: -6.610790729522705
    7. '=' → logprob: -6.985790729522705
    8. ',b' → logprob: -7.110790729522705
    9. '```' → logprob: -7.735790729522705
    10. '2' → logprob: -8.235790252685547

Token 1242: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008074867073446512
    2. ' ' → logprob: -7.125807285308838
    3. '   ' → logprob: -13.000807762145996
    4. '  ' → logprob: -15.500807762145996
    5. '```' → logprob: -15.750807762145996
    6. '
' → logprob: -16.50080680847168
    7. '۲' → logprob: -16.62580680847168
    8. '1' → logprob: -17.00080680847168
    9. '5' → logprob: -17.00080680847168
    10. '２' → logprob: -17.00080680847168

Token 1243: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044344689697027206
    2. 'def' → logprob: -3.669344663619995
    3. ' if' → logprob: -5.544344902038574
    4. ' =' → logprob: -6.044344902038574
    5. ' x' → logprob: -6.294344902038574
    6. ' y' → logprob: -6.669344902038574
    7. ':' → logprob: -6.669344902038574
    8. ' def' → logprob: -6.919344902038574
    9. 'y' → logprob: -7.544344902038574
    10. ' for' → logprob: -7.794344902038574

Token 1244: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02777666598558426
    2. 'b' → logprob: -3.7777767181396484
    3. 'first' → logprob: -6.277776718139648
    4. ' [' → logprob: -7.277776718139648
    5. 'range' → logprob: -7.527776718139648
    6. 'pattern' → logprob: -7.527776718139648
    7. 'byte' → logprob: -8.527776718139648
    8. '#' → logprob: -8.652776718139648
    9. 'def' → logprob: -8.777776718139648
    10. 'bit' → logprob: -8.902776718139648

Token 1245: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06784125417470932
    2. ':' → logprob: -3.4428412914276123
    3. 'def' → logprob: -4.692841053009033
    4. '[' → logprob: -5.067841053009033
    5. ' =' → logprob: -5.817841053009033
    6. ' ' → logprob: -5.942841053009033
    7. ',' → logprob: -6.192841053009033
    8. ')' → logprob: -6.192841053009033
    9. '<|end|>' → logprob: -6.692841053009033
    10. '       ' → logprob: -7.067841053009033

Token 1246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033806368708610535
    2. 'def' → logprob: -3.533806324005127
    3. ' if' → logprob: -6.533806324005127
    4. ' def' → logprob: -7.783806324005127
    5. 'if' → logprob: -7.908806324005127
    6. '[' → logprob: -8.033806800842285
    7. ' =' → logprob: -8.158806800842285
    8. ':' → logprob: -8.283806800842285
    9. '=' → logprob: -9.283806800842285
    10. '    ' → logprob: -9.533806800842285

Token 1247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01612328551709652
    2. ' if' → logprob: -5.266123294830322
    3. 'def' → logprob: -5.391123294830322
    4. 'if' → logprob: -6.891123294830322
    5. ' for' → logprob: -7.266123294830322
    6. '```' → logprob: -7.266123294830322
    7. ',' → logprob: -7.391123294830322
    8. 'for' → logprob: -7.516123294830322
    9. ':' → logprob: -7.891123294830322
    10. '
' → logprob: -8.141122817993164

Token 1248: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2919636070728302
    2. 'y' → logprob: -1.4169635772705078
    3. 'count' → logprob: -5.791963577270508
    4. ' y' → logprob: -5.916963577270508
    5. 'if' → logprob: -6.166963577270508
    6. 'def' → logprob: -7.166963577270508
    7. ' if' → logprob: -7.916963577270508
    8. '#' (adapté à ' #') → logprob: -8.166963577270508
    9. 'mask' → logprob: -8.541963577270508
    10. 'bits' → logprob: -8.666963577270508

Token 1249: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17096872627735138
    2. 'def' → logprob: -3.045968770980835
    3. 'y' → logprob: -3.170968770980835
    4. 'if' → logprob: -3.795968770980835
    5. 'x' → logprob: -4.670968532562256
    6. 'count' → logprob: -4.795968532562256
    7. '7' → logprob: -5.545968532562256
    8. ' if' → logprob: -5.795968532562256
    9. 'mask' → logprob: -6.045968532562256
    10. '4' → logprob: -6.420968532562256

Token 1250: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5586383938789368
    2. 'positions' → logprob: -2.058638334274292
    3. '[' → logprob: -2.183638334274292
    4. '=' → logprob: -2.308638334274292
    5. '_bits' → logprob: -3.933638334274292
    6. 's' → logprob: -4.183638572692871
    7. ',' → logprob: -4.433638572692871
    8. '_positions' → logprob: -4.558638572692871
    9. ' =' → logprob: -5.183638572692871
    10. '7' → logprob: -5.308638572692871

Token 1251: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0153526067733765
    2. 'def' → logprob: -1.5153526067733765
    3. '   ' → logprob: -1.6403526067733765
    4. '=' → logprob: -2.140352725982666
    5. '[' → logprob: -2.640352725982666
    6. ':' → logprob: -4.265352725982666
    7. '(' → logprob: -4.765352725982666
    8. ' def' → logprob: -6.265352725982666
    9. ',' → logprob: -6.390352725982666
    10. ' (' → logprob: -6.640352725982666

Token 1252: ' positions' (ID: 15897)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7183303833007812
    2. '4' → logprob: -1.7183303833007812
    3. '[' → logprob: -1.9683303833007812
    4. '1' → logprob: -2.0933303833007812
    5. '0' → logprob: -4.218330383300781
    6. 'positions' → logprob: -4.343330383300781
    7. '7' → logprob: -4.468330383300781
    8. '3' → logprob: -4.468330383300781
    9. '   ' → logprob: -5.093330383300781
    10. '6' → logprob: -5.093330383300781

Token 1253: ':' (ID: 25)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.15349949896335602
    2. '4' → logprob: -2.9034996032714844
    3. '7' → logprob: -3.1534996032714844
    4. ' ' → logprob: -3.9034996032714844
    5. '1' → logprob: -4.528499603271484
    6. ' =' → logprob: -5.653499603271484
    7. '=' → logprob: -6.028499603271484
    8. '2' → logprob: -6.278499603271484
    9. '```' → logprob: -6.528499603271484
    10. ',' → logprob: -6.903499603271484

Token 1254: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014264699071645737
    2. ' ' → logprob: -5.1392645835876465
    3. '5' → logprob: -5.2642645835876465
    4. '0' → logprob: -6.6392645835876465
    5. '7' → logprob: -6.6392645835876465
    6. '[' → logprob: -8.639265060424805
    7. '6' → logprob: -9.014265060424805
    8. '   ' → logprob: -9.389265060424805
    9. '2' → logprob: -10.514265060424805
    10. '4' → logprob: -10.764265060424805

Token 1255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007039181888103485
    2. '7' → logprob: -5.5070390701293945
    3. '0' → logprob: -6.2570390701293945
    4. '5' → logprob: -7.0070390701293945
    5. '4' → logprob: -9.507039070129395
    6. '6' → logprob: -10.132039070129395
    7. ' ' → logprob: -11.382039070129395
    8. '[' → logprob: -13.132039070129395
    9. '(' → logprob: -13.632039070129395
    10. '{' → logprob: -13.819539070129395

Token 1256: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009728582575917244
    2. ':' → logprob: -5.50972843170166
    3. ' =' → logprob: -6.25972843170166
    4. 'def' → logprob: -6.63472843170166
    5. '=
' → logprob: -7.50972843170166
    6. ',' → logprob: -7.88472843170166
    7. '<|end|>' → logprob: -7.88472843170166
    8. '   ' → logprob: -8.38472843170166
    9. ')' → logprob: -8.63472843170166
    10. '[' → logprob: -8.75972843170166

Token 1257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '1' → logprob: -15.750009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '```' → logprob: -18.500009536743164
    6. '2' → logprob: -18.750009536743164
    7. '۰' → logprob: -19.125009536743164
    8. '  ' → logprob: -19.625009536743164
    9. '    ' → logprob: -19.750009536743164
    10. '０' → logprob: -20.125009536743164

Token 1258: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0225300844758749
    2. 'def' → logprob: -4.1475300788879395
    3. ' if' → logprob: -5.5225300788879395
    4. 'if' → logprob: -6.7725300788879395
    5. ' def' → logprob: -8.022530555725098
    6. '
' → logprob: -8.897530555725098
    7. ':' → logprob: -9.147530555725098
    8. ' mask' → logprob: -9.147530555725098
    9. '```' → logprob: -9.272530555725098
    10. ' =' → logprob: -9.272530555725098

Token 1259: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.01876036450266838
    2. 'b' → logprob: -4.0187602043151855
    3. '1' → logprob: -7.6437602043151855
    4. ' byte' → logprob: -10.018760681152344
    5. '<byte' → logprob: -11.143760681152344
    6. 'first' → logprob: -11.268760681152344
    7. '```' → logprob: -11.393760681152344
    8. '0' → logprob: -11.393760681152344
    9. '[' → logprob: -11.768760681152344
    10. '
' → logprob: -12.018760681152344

Token 1260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011258482001721859
    2. '[' → logprob: -4.636258602142334
    3. '2' → logprob: -7.386258602142334
    4. ')' → logprob: -8.261258125305176
    5. 'def' → logprob: -8.636258125305176
    6. ':' → logprob: -9.136258125305176
    7. '[
' → logprob: -9.261258125305176
    8. ']' → logprob: -9.886258125305176
    9. '```' → logprob: -10.011258125305176
    10. '(' → logprob: -10.261258125305176

Token 1261: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042515940964221954
    2. ':' → logprob: -4.667515754699707
    3. 'def' → logprob: -4.667515754699707
    4. ',' → logprob: -5.042515754699707
    5. '```' → logprob: -5.042515754699707
    6. '
' → logprob: -6.292515754699707
    7. '[' → logprob: -6.667515754699707
    8. ' if' → logprob: -6.792515754699707
    9. '    ' → logprob: -7.542515754699707
    10. '``' → logprob: -7.917515754699707

Token 1262: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.26972177624702454
    2. '6' → logprob: -1.5197217464447021
    3. ' ' → logprob: -5.019721984863281
    4. '5' → logprob: -5.019721984863281
    5. '0' → logprob: -7.019721984863281
    6. '4' → logprob: -7.019721984863281
    7. 'bit' → logprob: -7.394721984863281
    8. '2' → logprob: -7.769721984863281
    9. 'b' → logprob: -8.144721984863281
    10. '#' → logprob: -8.269721984863281

Token 1263: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.014675216749310493
    2. '7' → logprob: -4.264675140380859
    3. '[' → logprob: -8.26467514038086
    4. 'range' → logprob: -8.51467514038086
    5. '6' → logprob: -11.26467514038086
    6. ' ' → logprob: -11.63967514038086
    7. '4' → logprob: -12.13967514038086
    8. '0' → logprob: -12.38967514038086
    9. '(' → logprob: -12.51467514038086
    10. 'b' → logprob: -12.88967514038086

Token 1264: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08778340369462967
    2. '=' → logprob: -3.3377833366394043
    3. ':' → logprob: -4.462783336639404
    4. ',x' → logprob: -4.587783336639404
    5. ',b' → logprob: -4.837783336639404
    6. '<|end|>' → logprob: -5.837783336639404
    7. '   ' → logprob: -5.962783336639404
    8. ')' → logprob: -5.962783336639404
    9. ',
' → logprob: -6.087783336639404
    10. '<|end|>' → logprob: -6.712783336639404

Token 1265: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.882175087928772
    2. '0' → logprob: -1.132175087928772
    3. '7' → logprob: -1.882175087928772
    4. '```' → logprob: -3.3821749687194824
    5. '4' → logprob: -3.8821749687194824
    6. '6' → logprob: -4.257174968719482
    7. ' ' → logprob: -4.257174968719482
    8. 'x' → logprob: -4.757174968719482
    9. '   ' → logprob: -5.257174968719482
    10. '#' → logprob: -5.257174968719482

Token 1266: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07647845149040222
    2. 'def' → logprob: -3.2014784812927246
    3. ':' → logprob: -4.701478481292725
    4. ' def' → logprob: -5.201478481292725
    5. '[' → logprob: -5.326478481292725
    6. ' if' → logprob: -5.576478481292725
    7. ' =' → logprob: -5.951478481292725
    8. '    ' → logprob: -7.076478481292725
    9. ' 
' → logprob: -7.326478481292725
    10. ' :' → logprob: -7.576478481292725

Token 1267: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.860340752406046e-05
    2. 'byte' → logprob: -9.7500581741333
    3. ' b' → logprob: -15.5000581741333
    4. '   ' → logprob: -19.500059127807617
    5. '`' → logprob: -19.625059127807617
    6. 'bytes' → logprob: -19.750059127807617
    7. '```' → logprob: -20.125059127807617
    8. '#' → logprob: -20.750059127807617
    9. ' byte' → logprob: -20.750059127807617
    10. '	b' → logprob: -20.750059127807617

Token 1268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07902252674102783
    2. '1' → logprob: -2.5790224075317383
    3. '0' → logprob: -10.204022407531738
    4. '[' → logprob: -10.704022407531738
    5. 'def' → logprob: -11.204022407531738
    6. ')' → logprob: -11.579022407531738
    7. '[]' → logprob: -11.829022407531738
    8. '```' → logprob: -11.829022407531738
    9. ']' → logprob: -11.954022407531738
    10. ' ' → logprob: -12.516522407531738

Token 1269: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19713234901428223
    2. 'def' → logprob: -1.8221323490142822
    3. ':' → logprob: -5.447132110595703
    4. ' def' → logprob: -5.572132110595703
    5. ' if' → logprob: -5.697132110595703
    6. '
' → logprob: -6.947132110595703
    7. 'if' → logprob: -7.322132110595703
    8. '[' → logprob: -7.572132110595703
    9. ':
' → logprob: -7.572132110595703
    10. 'x' → logprob: -8.072132110595703

Token 1270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08516083657741547
    2. 'count' → logprob: -3.335160732269287
    3. 'mask' → logprob: -4.335160732269287
    4. 'def' → logprob: -4.335160732269287
    5. 'if' → logprob: -5.085160732269287
    6. 'y' → logprob: -5.460160732269287
    7. 'pattern' → logprob: -5.585160732269287
    8. 'fixed' → logprob: -6.335160732269287
    9. '#' → logprob: -6.710160732269287
    10. 'b' → logprob: -7.710160732269287

Token 1271: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06544603407382965
    2. 'def' → logprob: -2.940446138381958
    3. 'if' → logprob: -6.190445899963379
    4. 'count' → logprob: -6.565445899963379
    5. ':' → logprob: -6.690445899963379
    6. 'y' → logprob: -6.690445899963379
    7. ' =' → logprob: -7.190445899963379
    8. 'x' → logprob: -7.440445899963379
    9. 'b' → logprob: -7.690445899963379
    10. '=' → logprob: -7.690445899963379

Token 1272: ' Must' (ID: 20953)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0683545246720314
    2. 'mask' → logprob: -3.818354606628418
    3. 'def' → logprob: -3.943354606628418
    4. 'count' → logprob: -4.443354606628418
    5. 'y' → logprob: -5.193354606628418
    6. 'fixed' → logprob: -6.193354606628418
    7. 'if' → logprob: -6.318354606628418
    8. '#' → logprob: -6.693354606628418
    9. 'pattern' → logprob: -7.443354606628418
    10. 'x' → logprob: -7.568354606628418

Token 1273: ' ensure' (ID: 6757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2933783531188965
    2. 'def' → logprob: -1.2933783531188965
    3. 'continue' → logprob: -1.4183783531188965
    4. '#' → logprob: -2.6683783531188965
    5. '=' → logprob: -2.7933783531188965
    6. ' =' → logprob: -3.5433783531188965
    7. 'return' → logprob: -4.7933783531188965
    8. 'x' → logprob: -4.9183783531188965
    9. 'for' → logprob: -5.2933783531188965
    10. 'mask' → logprob: -5.6683783531188965

Token 1274: ' at' (ID: 540)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3091769516468048
    2. 'y' → logprob: -2.4341769218444824
    3. ' b' → logprob: -2.9341769218444824
    4. '   ' → logprob: -3.3091769218444824
    5. 'all' → logprob: -3.8091769218444824
    6. ' (' → logprob: -4.309176921844482
    7. ' y' → logprob: -4.934176921844482
    8. '(' → logprob: -5.059176921844482
    9. ' all' → logprob: -5.184176921844482
    10. '(
' → logprob: -5.309176921844482

Token 1275: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.02916654571890831
    2. ' least' → logprob: -3.9041664600372314
    3. '#' → logprob: -6.2791666984558105
    4. '   ' → logprob: -6.4041666984558105
    5. '1' → logprob: -7.4041666984558105
    6. 'le' → logprob: -7.5291666984558105
    7. 'positions' → logprob: -8.029166221618652
    8. 'i' → logprob: -8.029166221618652
    9. ' ' → logprob: -8.154166221618652
    10. 'e' → logprob: -8.154166221618652

Token 1276: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.020809292793273926
    2. '1' → logprob: -4.395809173583984
    3. ' one' → logprob: -5.520809173583984
    4. '4' → logprob: -6.520809173583984
    5. '   ' → logprob: -6.770809173583984
    6. 'bit' → logprob: -7.395809173583984
    7. '0' → logprob: -9.020809173583984
    8. '       ' → logprob: -9.020809173583984
    9. '3' → logprob: -9.145809173583984
    10. ' ' → logprob: -9.520809173583984

Token 1277: ' y' (ID: 342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2262282371520996
    2. '   ' → logprob: -1.8512282371520996
    3. ' ' → logprob: -2.3512282371520996
    4. 'x' → logprob: -2.3512282371520996
    5. '=' → logprob: -2.8512282371520996
    6. 'y' → logprob: -2.8512282371520996
    7. ' x' → logprob: -3.4762282371520996
    8. ':' → logprob: -3.7262282371520996
    9. 'def' → logprob: -3.7262282371520996
    10. '(' → logprob: -3.9762282371520996

Token 1278: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4417135715484619
    2. ':' → logprob: -1.566713571548462
    3. 'def' → logprob: -2.316713571548462
    4. '[' → logprob: -3.691713571548462
    5. ':
' → logprob: -5.316713333129883
    6. ' if' → logprob: -5.941713333129883
    7. ' =' → logprob: -6.316713333129883
    8. ' :' → logprob: -6.566713333129883
    9. '):' → logprob: -6.566713333129883
    10. ' def' → logprob: -6.816713333129883

Token 1279: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027531994506716728
    2. 'def' → logprob: -4.40253210067749
    3. ' if' → logprob: -5.27753210067749
    4. 'if' → logprob: -6.15253210067749
    5. 'count' → logprob: -6.15253210067749
    6. ' count' → logprob: -6.90253210067749
    7. 'y' → logprob: -6.90253210067749
    8. ' def' → logprob: -6.90253210067749
    9. ' mask' → logprob: -7.52753210067749
    10. '
' → logprob: -7.90253210067749

Token 1280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024220695719122887
    2. ' ' → logprob: -4.3992204666137695
    3. 'True' → logprob: -5.3992204666137695
    4. '0' → logprob: -6.0242204666137695
    5. '(' → logprob: -6.5242204666137695
    6. ' (' → logprob: -7.5242204666137695
    7. ''' → logprob: -7.5242204666137695
    8. ' True' → logprob: -8.14922046661377
    9. 'b' → logprob: -8.27422046661377
    10. 'bit' → logprob: -8.27422046661377

Token 1281: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03243331238627434
    2. 'def' → logprob: -3.532433271408081
    3. ' def' → logprob: -7.15743350982666
    4. '
' → logprob: -7.78243350982666
    5. 'y' → logprob: -7.90743350982666
    6. 'count' → logprob: -9.03243350982666
    7. '    
' → logprob: -9.15743350982666
    8. ':' → logprob: -9.65743350982666
    9. ' 
' → logprob: -9.90743350982666
    10. '    ' → logprob: -9.90743350982666

Token 1282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06529349833726883
    2. 'mask' → logprob: -3.940293550491333
    3. 'y' → logprob: -4.190293312072754
    4. 'count' → logprob: -4.565293312072754
    5. 'def' → logprob: -4.815293312072754
    6. 'pattern' → logprob: -5.440293312072754
    7. '#' → logprob: -6.315293312072754
    8. '
' → logprob: -7.190293312072754
    9. 'fixed' → logprob: -7.565293312072754
    10. 'if' → logprob: -7.565293312072754

Token 1283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12037096917629242
    2. 'mask' → logprob: -2.620370864868164
    3. 'y' → logprob: -3.870370864868164
    4. 'pattern' → logprob: -4.495370864868164
    5. 'fixed' → logprob: -5.620370864868164
    6. 'def' → logprob: -6.120370864868164
    7. '#' (adapté à ' #') → logprob: -6.495370864868164
    8. 'b' → logprob: -7.495370864868164
    9. 'count' → logprob: -8.370370864868164
    10. 'byte' → logprob: -9.120370864868164

Token 1284: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05594955384731293
    2. 'def' → logprob: -3.0559494495391846
    3. 'y' → logprob: -5.555949687957764
    4. 'mask' → logprob: -7.055949687957764
    5. '#' → logprob: -7.930949687957764
    6. ' def' → logprob: -8.055949211120605
    7. ' mask' → logprob: -8.055949211120605
    8. 'if' → logprob: -8.305949211120605
    9. ' y' → logprob: -8.430949211120605
    10. ' #' → logprob: -8.680949211120605

Token 1285: ' parse' (ID: 8420)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.160414457321167
    2. 'def' → logprob: -1.410414457321167
    3. '   ' → logprob: -1.535414457321167
    4. 'pattern' → logprob: -2.410414457321167
    5. '#' → logprob: -2.660414457321167
    6. 'mask' → logprob: -3.160414457321167
    7. 'fixed' → logprob: -4.660414695739746
    8. 'b' → logprob: -5.785414695739746
    9. ' y' → logprob: -5.910414695739746
    10. '       ' → logprob: -6.535414695739746

Token 1286: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15326020121574402
    2. 'def' → logprob: -2.2782602310180664
    3. 'b' → logprob: -4.153260231018066
    4. '[' → logprob: -4.903260231018066
    5. ' b' → logprob: -5.403260231018066
    6. 'pattern' → logprob: -6.153260231018066
    7. ' pattern' → logprob: -6.403260231018066
    8. ' def' → logprob: -6.778260231018066
    9. ' =' → logprob: -7.278260231018066
    10. '#' → logprob: -7.653260231018066

Token 1287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7384222149848938
    2. '7' → logprob: -0.7384222149848938
    3. '[' → logprob: -4.738422393798828
    4. 'def' → logprob: -4.988422393798828
    5. '=' → logprob: -5.238422393798828
    6. 'i' → logprob: -5.613422393798828
    7. ' =' → logprob: -6.113422393798828
    8. '#' → logprob: -6.113422393798828
    9. 'for' → logprob: -6.238422393798828
    10. ')' → logprob: -6.613422393798828

Token 1288: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8459506034851074
    2. ' =' → logprob: -1.7209506034851074
    3. '[' → logprob: -1.8459506034851074
    4. ':' → logprob: -2.0959506034851074
    5. 'def' → logprob: -2.4709506034851074
    6. '=' → logprob: -4.220950603485107
    7. 'b' → logprob: -6.345950603485107
    8. ',' → logprob: -7.220950603485107
    9. '7' → logprob: -7.345950603485107
    10. 'for' → logprob: -7.345950603485107

Token 1289: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.575563020305708e-05
    2. ' b' → logprob: -10.000065803527832
    3. '...' → logprob: -11.125065803527832
    4. '[' → logprob: -12.875065803527832
    5. '<|end|>' → logprob: -13.875065803527832
    6. '0' → logprob: -14.375065803527832
    7. 'def' → logprob: -14.875065803527832
    8. ':' → logprob: -15.000065803527832
    9. '```' → logprob: -15.375065803527832
    10. '[
' → logprob: -15.875065803527832

Token 1290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006994661875069141
    2. '[' → logprob: -5.006994724273682
    3. '0' → logprob: -9.006994247436523
    4. '7' → logprob: -9.381994247436523
    5. '1' → logprob: -10.881994247436523
    6. '5' → logprob: -11.131994247436523
    7. '```' → logprob: -11.256994247436523
    8. ')' → logprob: -12.631994247436523
    9. ''' → logprob: -12.881994247436523
    10. '4' → logprob: -12.881994247436523

Token 1291: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018278473988175392
    2. 'def' → logprob: -4.7682785987854
    3. ':' → logprob: -5.2682785987854
    4. '[' → logprob: -7.0182785987854
    5. ' def' → logprob: -7.0182785987854
    6. ' =' → logprob: -7.0182785987854
    7. ' :' → logprob: -8.518278121948242
    8. '    
' → logprob: -8.643278121948242
    9. ' 
' → logprob: -8.768278121948242
    10. ' for' → logprob: -8.768278121948242

Token 1292: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012162767350673676
    2. 'def' → logprob: -4.637162685394287
    3. ':' → logprob: -7.637162685394287
    4. ' if' → logprob: -7.887162685394287
    5. '[' → logprob: -8.387163162231445
    6. ' def' → logprob: -8.512163162231445
    7. 'b' → logprob: -8.512163162231445
    8. ' for' → logprob: -8.887163162231445
    9. 'if' → logprob: -9.387163162231445
    10. ' =' → logprob: -9.512163162231445

Token 1293: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.032629370689392
    2. 'for' → logprob: -1.657629370689392
    3. 'def' → logprob: -1.907629370689392
    4. 'return' → logprob: -2.6576294898986816
    5. 'continue' → logprob: -2.9076294898986816
    6. '   ' → logprob: -3.1576294898986816
    7. 'if' → logprob: -3.5326294898986816
    8. 'count' → logprob: -4.032629489898682
    9. 'x' → logprob: -4.532629489898682
    10. ':' → logprob: -4.657629489898682

Token 1294: ' matching' (ID: 20238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11008736491203308
    2. 'def' → logprob: -3.6100873947143555
    3. ' def' → logprob: -4.1100873947143555
    4. ' count' → logprob: -4.4850873947143555
    5. ' mask' → logprob: -4.6100873947143555
    6. ' for' → logprob: -4.7350873947143555
    7. 'count' → logprob: -5.2350873947143555
    8. ' if' → logprob: -5.4850873947143555
    9. ' y' → logprob: -5.6100873947143555
    10. 'y' → logprob: -5.7350873947143555

Token 1295: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23461416363716125
    2. ':' → logprob: -2.109614133834839
    3. 'def' → logprob: -3.234614133834839
    4. '[' → logprob: -3.609614133834839
    5. ' =' → logprob: -5.359614372253418
    6. ' def' → logprob: -5.859614372253418
    7. ' :' → logprob: -5.984614372253418
    8. ':
' → logprob: -5.984614372253418
    9. '(' → logprob: -6.234614372253418
    10. ',' → logprob: -7.359614372253418

Token 1296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01072766911238432
    2. 'y' → logprob: -5.510727882385254
    3. 'mask' → logprob: -5.885727882385254
    4. 'def' → logprob: -6.760727882385254
    5. 'fixed' → logprob: -7.010727882385254
    6. 'pattern' → logprob: -7.385727882385254
    7. '#' → logprob: -8.010727882385254
    8. 'b' → logprob: -8.385727882385254
    9. 'count' → logprob: -9.260727882385254
    10. '    
' → logprob: -9.385727882385254

Token 1297: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11092376708984375
    2. 'mask' → logprob: -3.1109237670898438
    3. 'fixed' → logprob: -3.2359237670898438
    4. 'y' → logprob: -4.985923767089844
    5. 'pattern' → logprob: -5.110923767089844
    6. 'def' → logprob: -5.735923767089844
    7. 'count' → logprob: -6.610923767089844
    8. '#' (adapté à ' #') → logprob: -6.610923767089844
    9. 'b' → logprob: -6.735923767089844
    10. 'pos' → logprob: -8.110923767089844

Token 1298: ' Check' (ID: 6208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015716060996055603
    2. 'def' → logprob: -4.515716075897217
    3. ' def' → logprob: -6.390716075897217
    4. 'b' → logprob: -7.890716075897217
    5. '
' → logprob: -8.015715599060059
    6. ' b' → logprob: -8.140715599060059
    7. ' if' → logprob: -8.140715599060059
    8. ' 
' → logprob: -8.640715599060059
    9. '    
' → logprob: -8.640715599060059
    10. ' for' → logprob: -8.640715599060059

Token 1299: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3570963144302368
    2. 'if' → logprob: -2.2320961952209473
    3. ' if' → logprob: -2.7320961952209473
    4. 'def' → logprob: -2.9820961952209473
    5. 'b' → logprob: -4.107096195220947
    6. '[' → logprob: -4.482096195220947
    7. ':' → logprob: -4.607096195220947
    8. '
' → logprob: -5.107096195220947
    9. 'for' → logprob: -5.232096195220947
    10. ' for' → logprob: -5.607096195220947

Token 1300: ' bits' (ID: 18189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.30480414628982544
    2. 'if' → logprob: -1.4298040866851807
    3. 'bits' → logprob: -4.67980432510376
    4. 'def' → logprob: -5.92980432510376
    5. '[' → logprob: -6.05480432510376
    6. '[b' → logprob: -6.30480432510376
    7. 'bit' → logprob: -6.67980432510376
    8. '1' → logprob: -6.92980432510376
    9. '   ' → logprob: -7.05480432510376
    10. '0' → logprob: -7.05480432510376

Token 1301: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30823808908462524
    2. 'if' → logprob: -1.4332380294799805
    3. ' if' → logprob: -4.3082380294799805
    4. 'for' → logprob: -4.6832380294799805
    5. 'def' → logprob: -7.0582380294799805
    6. '[' → logprob: -7.1832380294799805
    7. ' for' → logprob: -7.6832380294799805
    8. ' =' → logprob: -7.8082380294799805
    9. ':' → logprob: -8.05823802947998
    10. '=' → logprob: -8.30823802947998

Token 1302: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19683192670345306
    2. '0' → logprob: -1.8218319416046143
    3. '1' → logprob: -4.571831703186035
    4. '7' → logprob: -5.446831703186035
    5. ' b' → logprob: -7.321831703186035
    6. ' ' → logprob: -7.321831703186035
    7. 'def' → logprob: -7.696831703186035
    8. 'i' → logprob: -8.321831703186035
    9. 'bit' → logprob: -9.321831703186035
    10. '[' → logprob: -9.696831703186035

Token 1303: ' byte' (ID: 9239)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.303098201751709
    2. '7' → logprob: -1.803098201751709
    3. 'if' → logprob: -1.803098201751709
    4. 'byte' → logprob: -1.803098201751709
    5. 'b' → logprob: -2.303098201751709
    6. ' ' → logprob: -3.553098201751709
    7. ' if' → logprob: -3.803098201751709
    8. ' byte' → logprob: -3.928098201751709
    9. 'def' → logprob: -4.053098201751709
    10. '   ' → logprob: -4.053098201751709

Token 1304: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17803265154361725
    2. 'if' → logprob: -2.053032636642456
    3. ' if' → logprob: -3.803032636642456
    4. 'def' → logprob: -5.178032875061035
    5. 'for' → logprob: -5.303032875061035
    6. '
' → logprob: -7.178032875061035
    7. ' for' → logprob: -8.178032875061035
    8. ' =' → logprob: -8.678032875061035
    9. ':' → logprob: -9.053032875061035
    10. '[' → logprob: -9.178032875061035

Token 1305: '110' (ID: 7920)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21038156747817993
    2. 'for' → logprob: -2.085381507873535
    3. '   ' → logprob: -2.960381507873535
    4. 'def' → logprob: -5.210381507873535
    5. ' if' → logprob: -5.335381507873535
    6. ' for' → logprob: -7.085381507873535
    7. '[' → logprob: -7.335381507873535
    8. '=' → logprob: -7.460381507873535
    9. ' =' → logprob: -7.835381507873535
    10. '7' → logprob: -8.460381507873535

Token 1306: '
' (ID: 198)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.725723385810852
    2. '[' → logprob: -0.850723385810852
    3. ':' → logprob: -3.6007232666015625
    4. 'if' → logprob: -3.7257232666015625
    5. '=' → logprob: -4.1007232666015625
    6. 'def' → logprob: -5.3507232666015625
    7. '   ' → logprob: -5.7257232666015625
    8. ' =' → logprob: -5.7257232666015625
    9. 'b' → logprob: -5.9757232666015625
    10. '_' → logprob: -6.6007232666015625

Token 1307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22772686183452606
    2. ' if' → logprob: -1.8527268171310425
    3. 'if' → logprob: -3.102726936340332
    4. ' for' → logprob: -7.352726936340332
    5. 'for' → logprob: -7.352726936340332
    6. 'def' → logprob: -9.102726936340332
    7. ' ' → logprob: -9.352726936340332
    8. '```' → logprob: -9.352726936340332
    9. '[' → logprob: -9.602726936340332
    10. ':' → logprob: -9.602726936340332

Token 1308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44212937355041504
    2. 'for' → logprob: -1.442129373550415
    3. '   ' → logprob: -2.192129373550415
    4. ' if' → logprob: -4.942129135131836
    5. ' for' → logprob: -6.192129135131836
    6. '
' → logprob: -10.817129135131836
    7. ' ' → logprob: -11.567129135131836
    8. 'def' → logprob: -12.442129135131836
    9. '```' → logprob: -12.442129135131836
    10. '  ' → logprob: -13.192129135131836

Token 1309: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001121880137361586
    2. ' b' → logprob: -7.251121997833252
    3. 'not' → logprob: -8.376121520996094
    4. 'len' → logprob: -9.001121520996094
    5. ' not' → logprob: -10.001121520996094
    6. '   ' → logprob: -11.751121520996094
    7. '(b' → logprob: -13.126121520996094
    8. ' len' → logprob: -13.501121520996094
    9. ' ' → logprob: -14.251121520996094
    10. '(len' → logprob: -15.001121520996094

Token 1310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2812977433204651
    2. '[' → logprob: -1.4062976837158203
    3. '7' → logprob: -9.65629768371582
    4. '```' → logprob: -10.15629768371582
    5. '   ' → logprob: -11.15629768371582
    6. '[
' → logprob: -12.28129768371582
    7. ' [' → logprob: -12.40629768371582
    8. ']' → logprob: -12.78129768371582
    9. 'b' → logprob: -13.15629768371582
    10. '==' → logprob: -13.15629768371582

Token 1311: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.550411151489243e-05
    2. '!=' → logprob: -10.500055313110352
    3. '[:' → logprob: -10.750055313110352
    4. '==' → logprob: -12.875055313110352
    5. '7' → logprob: -13.500055313110352
    6. '0' → logprob: -13.625055313110352
    7. ' !=' → logprob: -14.500055313110352
    8. ' [' → logprob: -15.375055313110352
    9. '[
' → logprob: -15.625055313110352
    10. '```' → logprob: -15.750055313110352

Token 1312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22652964293956757
    2. '7' → logprob: -1.601529598236084
    3. ''' → logprob: -6.851529598236084
    4. ']' → logprob: -10.601530075073242
    5. ' ' → logprob: -11.476530075073242
    6. '6' → logprob: -11.726530075073242
    7. '[' → logprob: -12.101530075073242
    8. '   ' → logprob: -13.726530075073242
    9. '"' → logprob: -14.101530075073242
    10. '1' → logprob: -14.226530075073242

Token 1313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6391943097114563
    2. '==' → logprob: -1.0141942501068115
    3. ']==' → logprob: -2.6391942501068115
    4. '!=' → logprob: -4.389194488525391
    5. ''' → logprob: -4.764194488525391
    6. '=' → logprob: -5.014194488525391
    7. ']!=' → logprob: -5.639194488525391
    8. '']' → logprob: -6.139194488525391
    9. ' ==' → logprob: -6.514194488525391
    10. ']=='' → logprob: -6.639194488525391

Token 1314: ' not' (ID: 625)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5466053485870361
    2. '==' → logprob: -0.9216053485870361
    3. '=' → logprob: -4.171605110168457
    4. ''' → logprob: -5.921605110168457
    5. '!='' → logprob: -6.046605110168457
    6. '=='' → logprob: -6.671605110168457
    7. ' !=' → logprob: -6.921605110168457
    8. ' ==' → logprob: -7.921605110168457
    9. '='' → logprob: -10.296605110168457
    10. ''''' → logprob: -11.671605110168457

Token 1315: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13891062140464783
    2. '='' → logprob: -2.7639105319976807
    3. '==' → logprob: -3.6389105319976807
    4. ''' → logprob: -4.01391077041626
    5. 'in' → logprob: -4.13891077041626
    6. '=='' → logprob: -5.63891077041626
    7. ' in' → logprob: -6.38891077041626
    8. ' =' → logprob: -8.638910293579102
    9. '=['' → logprob: -8.763910293579102
    10. ''s' → logprob: -9.263910293579102

Token 1316: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7462360858917236
    2. '['' → logprob: -0.7462360858917236
    3. '{'' → logprob: -3.2462360858917236
    4. '('' → logprob: -4.3712358474731445
    5. '1' → logprob: -9.621235847473145
    6. '[' → logprob: -10.371235847473145
    7. '"' → logprob: -11.121235847473145
    8. ' ['' → logprob: -11.371235847473145
    9. '["' → logprob: -11.621235847473145
    10. ' '' → logprob: -12.496235847473145

Token 1317: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5783868432044983
    2. '1' → logprob: -0.8283868432044983
    3. '['' → logprob: -6.9533867835998535
    4. '{'' → logprob: -7.2033867835998535
    5. '"' → logprob: -7.3283867835998535
    6. '`' → logprob: -10.703387260437012
    7. '11' → logprob: -10.828387260437012
    8. ' '' → logprob: -11.703387260437012
    9. '('' → logprob: -11.828387260437012
    10. '{' → logprob: -12.203387260437012

Token 1318: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7506187558174133
    2. '','' → logprob: -0.8756187558174133
    3. ',' → logprob: -2.2506186962127686
    4. ','' → logprob: -5.500618934631348
    5. ''' → logprob: -6.875618934631348
    6. '')' → logprob: -7.875618934631348
    7. ' ,' → logprob: -8.500618934631348
    8. '',"' → logprob: -9.500618934631348
    9. ')' → logprob: -10.000618934631348
    10. '   ' → logprob: -10.625618934631348

Token 1319: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005771292373538017
    2. ' ' → logprob: -5.880771160125732
    3. '0' → logprob: -6.630771160125732
    4. '')' → logprob: -7.130771160125732
    5. ' ')' → logprob: -8.13077163696289
    6. ''' → logprob: -8.50577163696289
    7. ' '' → logprob: -8.50577163696289
    8. '   ' → logprob: -9.75577163696289
    9. ')' → logprob: -10.75577163696289
    10. 'x' → logprob: -11.63077163696289

Token 1320: ''):' (ID: 83830)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3309761583805084
    2. ')' → logprob: -1.330976128578186
    3. ',' → logprob: -4.3309760093688965
    4. ' and' → logprob: -6.7059760093688965
    5. '   ' → logprob: -7.3309760093688965
    6. ''' → logprob: -7.3309760093688965
    7. '',' → logprob: -7.5809760093688965
    8. ''):' → logprob: -7.8309760093688965
    9. '','' → logprob: -8.080976486206055
    10. 'and' → logprob: -8.330976486206055

Token 1321: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0492916107177734
    2. '<|end|>' → logprob: -1.7992916107177734
    3. '   ' → logprob: -1.9242916107177734
    4. ')' → logprob: -1.9242916107177734
    5. ':return' → logprob: -3.0492916107177734
    6. 'return' → logprob: -3.1742916107177734
    7. ' return' → logprob: -3.4242916107177734
    8. '    ' → logprob: -3.9242916107177734
    9. ':' → logprob: -4.049291610717773
    10. '  ' → logprob: -4.549291610717773

Token 1322: ' bit' (ID: 3546)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.162259578704834
    2. ' ' → logprob: -1.412259578704834
    3. ' return' → logprob: -1.662259578704834
    4. '   ' → logprob: -2.162259578704834
    5. '    ' → logprob: -3.412259578704834
    6. '=' → logprob: -3.537259578704834
    7. ')' → logprob: -3.662259578704834
    8. ':return' → logprob: -4.287259578704834
    9. '  ' → logprob: -5.287259578704834
    10. ':' → logprob: -5.412259578704834

Token 1323: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.007796956691890955
    2. '<|end|>' → logprob: -5.882796764373779
    3. '=' → logprob: -6.257796764373779
    4. '[' → logprob: -6.632796764373779
    5. '0' → logprob: -7.007796764373779
    6. ' ' → logprob: -8.507797241210938
    7. '<|end|>' → logprob: -8.507797241210938
    8. '1' → logprob: -8.882797241210938
    9. ')' → logprob: -9.132797241210938
    10. ':' → logprob: -10.007797241210938

Token 1324: ' must' (ID: 2804)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9416012167930603
    2. ' ==' → logprob: -1.691601276397705
    3. ':' → logprob: -2.066601276397705
    4. ' and' → logprob: -2.066601276397705
    5. '=' → logprob: -2.691601276397705
    6. '<|end|>' → logprob: -2.941601276397705
    7. 'and' → logprob: -3.566601276397705
    8. ')' → logprob: -4.941601276397705
    9. ' =' → logprob: -5.566601276397705
    10. ' ' → logprob: -5.941601276397705

Token 1325: ' be' (ID: 413)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12268669158220291
    2. '=' → logprob: -2.2476866245269775
    3. '==' → logprob: -5.747686862945557
    4. '='' → logprob: -5.872686862945557
    5. ' be' → logprob: -6.247686862945557
    6. 'be' → logprob: -6.747686862945557
    7. '=='' → logprob: -8.872686386108398
    8. ' '' → logprob: -8.872686386108398
    9. ' ==' → logprob: -9.872686386108398
    10. ''s' → logprob: -9.997686386108398

Token 1326: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00011307948443572968
    2. '1' → logprob: -9.125113487243652
    3. ' '' → logprob: -12.625113487243652
    4. '"' → logprob: -14.500113487243652
    5. '`' → logprob: -16.375112533569336
    6. '   ' → logprob: -16.875112533569336
    7. ' ' → logprob: -17.000112533569336
    8. '('' → logprob: -18.000112533569336
    9. '       ' → logprob: -18.375112533569336
    10. ''s' → logprob: -18.375112533569336

Token 1327: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018172889947891235
    2. '1' → logprob: -4.018172740936279
    3. '"' → logprob: -11.393173217773438
    4. ' '' → logprob: -12.393173217773438
    5. '`' → logprob: -12.518173217773438
    6. '<|end|>' → logprob: -14.393173217773438
    7. ''s' → logprob: -14.768173217773438
    8. ' ' → logprob: -14.768173217773438
    9. '')' → logprob: -15.018173217773438
    10. '['' → logprob: -15.143173217773438

Token 1328: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6991754770278931
    2. '<|end|>' → logprob: -1.449175477027893
    3. ' ' → logprob: -2.6991753578186035
    4. ' and' → logprob: -2.8241753578186035
    5. '   ' → logprob: -2.9491753578186035
    6. 'and' → logprob: -3.3241753578186035
    7. ')' → logprob: -3.8241753578186035
    8. '<|end|>' → logprob: -4.1991753578186035
    9. '  ' → logprob: -6.0741753578186035
    10. '    ' → logprob: -6.1991753578186035

Token 1329: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1330: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03826318308711052
    2. ' return' → logprob: -3.2882630825042725
    3. '   ' → logprob: -8.788263320922852
    4. ':return' → logprob: -9.913263320922852
    5. '	return' → logprob: -12.038263320922852
    6. '       ' → logprob: -12.913263320922852
    7. '    ' → logprob: -13.163263320922852
    8. '```' → logprob: -13.413263320922852
    9. ' ' → logprob: -13.538263320922852
    10. ')return' → logprob: -13.663263320922852

Token 1331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '`' → logprob: -20.625
    4. '   ' → logprob: -21.25
    5. '000' → logprob: -21.375
    6. '"' → logprob: -22.0
    7. '```' → logprob: -22.25
    8. '
' → logprob: -22.5
    9. ''' → logprob: -22.5
    10. '۰' → logprob: -22.625

Token 1332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '000' → logprob: -23.25
    4. '```' → logprob: -23.875
    5. '۰' → logprob: -24.0
    6. '`' → logprob: -24.875
    7. '00' → logprob: -25.25
    8. '"' → logprob: -26.25
    9. '   ' → logprob: -26.375
    10. '[' → logprob: -26.75

Token 1333: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.067075252532959
    2. ' if' → logprob: -2.192075252532959
    3. '<|end|>' → logprob: -2.192075252532959
    4. ' ' → logprob: -2.317075252532959
    5. ')' → logprob: -2.817075252532959
    6. '    ' → logprob: -3.567075252532959
    7. '```' → logprob: -3.567075252532959
    8. '       ' → logprob: -3.692075252532959
    9. 'if' → logprob: -3.692075252532959
    10. '*' → logprob: -4.067075252532959

Token 1335: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001776565215550363
    2. ' if' → logprob: -6.501776695251465
    3. '   ' → logprob: -8.251776695251465
    4. 'token' → logprob: -12.251776695251465
    5. '	if' → logprob: -13.126776695251465
    6. ' ' → logprob: -13.251776695251465
    7. 'for' → logprob: -13.626776695251465
    8. '       ' → logprob: -14.001776695251465
    9. 'If' → logprob: -14.626776695251465
    10. 'b' → logprob: -15.001776695251465

Token 1336: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233882926404476
    2. ' b' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.380233764648438
    4. ' ' → logprob: -17.630233764648438
    5. 'not' → logprob: -17.755233764648438
    6. ' not' → logprob: -18.005233764648438
    7. '	b' → logprob: -18.755233764648438
    8. '(b' → logprob: -18.755233764648438
    9. '```' → logprob: -19.005233764648438
    10. ')b' → logprob: -20.005233764648438

Token 1337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. '[' → logprob: -9.625067710876465
    3. '2' → logprob: -14.250067710876465
    4. '```' → logprob: -15.000067710876465
    5. '(' → logprob: -15.500067710876465
    6. '7' → logprob: -17.12506675720215
    7. '   ' → logprob: -17.50006675720215
    8. ' ' → logprob: -17.62506675720215
    9. '_' → logprob: -17.75006675720215
    10. ']' → logprob: -17.87506675720215

Token 1338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00036418659146875143
    2. '1' → logprob: -8.000364303588867
    3. '7' → logprob: -11.250364303588867
    4. '=' → logprob: -12.625364303588867
    5. '[
' → logprob: -12.625364303588867
    6. '2' → logprob: -13.000364303588867
    7. ' [' → logprob: -13.625364303588867
    8. '   ' → logprob: -13.875364303588867
    9. '```' → logprob: -14.000364303588867
    10. ' ' → logprob: -14.000364303588867

Token 1339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '7' → logprob: -15.625000953674316
    5. '   ' → logprob: -15.750000953674316
    6. '6' → logprob: -17.000001907348633
    7. '
' → logprob: -17.375001907348633
    8. '=' → logprob: -17.500001907348633
    9. '[' → logprob: -17.562501907348633
    10. '...' → logprob: -17.812501907348633

Token 1340: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1021910086274147
    2. 'not' → logprob: -2.9771909713745117
    3. ']' → logprob: -3.2271909713745117
    4. ')' → logprob: -6.102190971374512
    5. ']!='' → logprob: -6.727190971374512
    6. '!='' → logprob: -7.352190971374512
    7. ' !=' → logprob: -7.602190971374512
    8. ']!=' → logprob: -7.977190971374512
    9. '   ' → logprob: -8.477190971374512
    10. ' in' → logprob: -8.602190971374512

Token 1341: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2843250632286072
    2. 'not' → logprob: -1.409325122833252
    3. '==' → logprob: -6.534325122833252
    4. '!=' → logprob: -7.909325122833252
    5. '!='' → logprob: -8.034324645996094
    6. ' ==' → logprob: -8.284324645996094
    7. '=='' → logprob: -8.534324645996094
    8. ' !=' → logprob: -8.659324645996094
    9. 'in' → logprob: -9.284324645996094
    10. '```' → logprob: -9.534324645996094

Token 1342: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09103680402040482
    2. ' in' → logprob: -2.841036796569824
    3. '('' → logprob: -3.591036796569824
    4. '=' → logprob: -7.716036796569824
    5. ' ('' → logprob: -8.341036796569824
    6. 'In' → logprob: -9.466036796569824
    7. ''in' → logprob: -9.966036796569824
    8. '
' → logprob: -10.091036796569824
    9. '['' → logprob: -10.091036796569824
    10. ''' → logprob: -10.216036796569824

Token 1343: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.6240566083070007e-06
    2. ' ('' → logprob: -14.375001907348633
    3. '{'' → logprob: -14.750001907348633
    4. '['' → logprob: -15.125001907348633
    5. '(' → logprob: -15.250001907348633
    6. '(('' → logprob: -16.625001907348633
    7. ''' → logprob: -17.625001907348633
    8. '(['' → logprob: -18.250001907348633
    9. '("' → logprob: -19.000001907348633
    10. '({'' → logprob: -19.000001907348633

Token 1344: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2161893993616104
    2. '1' → logprob: -1.8411893844604492
    3. '('' → logprob: -3.341189384460449
    4. '['' → logprob: -8.46618938446045
    5. '(' → logprob: -9.59118938446045
    6. '{'' → logprob: -9.59118938446045
    7. ' '' → logprob: -11.96618938446045
    8. ''s' → logprob: -12.21618938446045
    9. '"' → logprob: -12.21618938446045
    10. '   ' → logprob: -12.46618938446045

Token 1345: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.037408262491226196
    2. '',' → logprob: -3.7874083518981934
    3. ',' → logprob: -4.537408351898193
    4. ','' → logprob: -5.912408351898193
    5. ''' → logprob: -8.412407875061035
    6. ',x' → logprob: -8.912407875061035
    7. ')' → logprob: -9.287407875061035
    8. '',"' → logprob: -9.912407875061035
    9. '',
' → logprob: -10.537407875061035
    10. '   ' → logprob: -10.662407875061035

Token 1346: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03090236708521843
    2. ''x' → logprob: -3.53090238571167
    3. '1' → logprob: -6.78090238571167
    4. ' x' → logprob: -11.280901908874512
    5. ''' → logprob: -13.280901908874512
    6. '"x' → logprob: -14.405901908874512
    7. ')x' → logprob: -14.905901908874512
    8. '	x' → logprob: -15.655901908874512
    9. ',x' → logprob: -16.280902862548828
    10. '$x' → logprob: -16.405902862548828

Token 1347: ''):' (ID: 83830)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5365570187568665
    2. ''):' → logprob: -1.0365569591522217
    3. ')' → logprob: -3.5365569591522217
    4. '):
' → logprob: -4.536557197570801
    5. ''):
' → logprob: -4.661557197570801
    6. '   ' → logprob: -5.536557197570801
    7. '')' → logprob: -5.661557197570801
    8. ':' → logprob: -6.411557197570801
    9. ',' → logprob: -7.036557197570801
    10. '','' → logprob: -7.786557197570801

Token 1348: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7275708913803101
    2. '<|end|>' → logprob: -1.47757089138031
    3. ' ' → logprob: -1.85257089138031
    4. '0' → logprob: -2.2275710105895996
    5. '   ' → logprob: -4.7275710105896
    6. ')' → logprob: -5.1025710105896
    7. '    ' → logprob: -5.9775710105896
    8. '        ' → logprob: -6.4775710105896
    9. ' ' → logprob: -6.4775710105896
    10. '<|end|>' → logprob: -7.2275710105896

Token 1349: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006481472868472338
    2. '1' → logprob: -5.131481647491455
    3. ')' → logprob: -8.631481170654297
    4. ''x' → logprob: -9.381481170654297
    5. '<|end|>' → logprob: -9.506481170654297
    6. '0' → logprob: -9.756481170654297
    7. '')' → logprob: -10.256481170654297
    8. '[' → logprob: -11.131481170654297
    9. ''b' → logprob: -11.256481170654297
    10. '"' → logprob: -11.381481170654297

Token 1350: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026057446375489235
    2. '1' → logprob: -6.37760591506958
    3. '<|end|>' → logprob: -8.002605438232422
    4. '6' → logprob: -8.877605438232422
    5. '7' → logprob: -9.002605438232422
    6. '[' → logprob: -9.252605438232422
    7. ' ' → logprob: -9.502605438232422
    8. '<|end|>' → logprob: -9.627605438232422
    9. '=' → logprob: -11.252605438232422
    10. '...' → logprob: -11.252605438232422

Token 1351: ' must' (ID: 2804)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.46410563588142395
    2. ')' → logprob: -1.9641056060791016
    3. 'not' → logprob: -2.3391056060791016
    4. '<|end|>' → logprob: -2.4641056060791016
    5. '==' → logprob: -3.9641056060791016
    6. '=' → logprob: -4.214105606079102
    7. '<|end|>' → logprob: -5.464105606079102
    8. ' in' → logprob: -5.839105606079102
    9. '[' → logprob: -6.464105606079102
    10. 'in' → logprob: -6.839105606079102

Token 1352: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7569294571876526
    2. 'be' → logprob: -0.8819294571876526
    3. 'in' → logprob: -2.631929397583008
    4. ' in' → logprob: -3.506929397583008
    5. ''' → logprob: -5.256929397583008
    6. '=' → logprob: -6.131929397583008
    7. '<|end|>' → logprob: -6.131929397583008
    8. ' '' → logprob: -6.506929397583008
    9. ' ' → logprob: -6.756929397583008
    10. '='' → logprob: -7.131929397583008

Token 1353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5232387185096741
    2. ''' → logprob: -0.8982387185096741
    3. ' ' → logprob: -10.148239135742188
    4. ' '' → logprob: -10.398239135742188
    5. '"' → logprob: -11.273239135742188
    6. '<|end|>' → logprob: -11.898239135742188
    7. ''s' → logprob: -12.148239135742188
    8. '`' → logprob: -12.398239135742188
    9. '   ' → logprob: -12.523239135742188
    10. '('' → logprob: -13.273239135742188

Token 1354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024904031306505203
    2. ''' → logprob: -6.002490520477295
    3. ''s' → logprob: -12.127490043640137
    4. ' ' → logprob: -12.627490043640137
    5. '"' → logprob: -13.127490043640137
    6. '<|end|>' → logprob: -13.877490043640137
    7. ' '' → logprob: -14.002490043640137
    8. '`' → logprob: -14.377490043640137
    9. ''x' → logprob: -14.877490043640137
    10. '('' → logprob: -15.377490043640137

Token 1355: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.317251056432724
    2. ':' → logprob: -2.192250967025757
    3. ')' → logprob: -2.442250967025757
    4. '<|end|>' → logprob: -3.317250967025757
    5. '       ' → logprob: -4.192251205444336
    6. '):' → logprob: -4.567251205444336
    7. '```' → logprob: -5.692251205444336
    8. ' ' → logprob: -6.442251205444336
    9. '<|end|>' → logprob: -6.442251205444336
    10. ':return' → logprob: -7.067251205444336

Token 1356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7333584427833557
    2. ':' → logprob: -1.733358383178711
    3. '   ' → logprob: -2.358358383178711
    4. ')' → logprob: -2.358358383178711
    5. '<|end|>' → logprob: -2.733358383178711
    6. ' ' → logprob: -2.858358383178711
    7. '):' → logprob: -4.608358383178711
    8. '    ' → logprob: -5.233358383178711
    9. '[' → logprob: -6.108358383178711
    10. ' if' → logprob: -6.233358383178711

Token 1357: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06680099666118622
    2. '0' → logprob: -3.066801071166992
    3. ' return' → logprob: -4.066801071166992
    4. '   ' → logprob: -7.191801071166992
    5. ' ' → logprob: -9.066801071166992
    6. '       ' → logprob: -10.566801071166992
    7. 'if' → logprob: -12.441801071166992
    8. '  ' → logprob: -12.691801071166992
    9. '           ' → logprob: -12.816801071166992
    10. '1' → logprob: -12.941801071166992

Token 1358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -20.000001907348633
    5. '۰' → logprob: -20.500001907348633
    6. '(' → logprob: -20.500001907348633
    7. '...' → logprob: -20.625001907348633
    8. ''' → logprob: -20.875001907348633
    9. '000' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.500001907348633

Token 1359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -18.125
    4. ''' → logprob: -19.8125
    5. '۰' → logprob: -19.875
    6. '   ' → logprob: -20.0
    7. 'False' → logprob: -20.25
    8. '2' → logprob: -20.4375
    9. '(' → logprob: -21.1875
    10. ')' → logprob: -21.5625

Token 1360: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7516136169433594
    2. '   ' → logprob: -1.3766136169433594
    3. ' if' → logprob: -1.5016136169433594
    4. '<|end|>' → logprob: -3.2516136169433594
    5. ' ' → logprob: -5.126613616943359
    6. '```' → logprob: -6.001613616943359
    7. '[' → logprob: -6.251613616943359
    8. ')' → logprob: -6.751613616943359
    9. '	if' → logprob: -7.626613616943359
    10. '  ' → logprob: -7.751613616943359

Token 1361: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4704146087169647
    2. '   ' → logprob: -1.220414638519287
    3. ' if' → logprob: -3.345414638519287
    4. '```' → logprob: -3.470414638519287
    5. '[' → logprob: -5.345414638519287
    6. '       ' → logprob: -5.720414638519287
    7. '<|end|>' → logprob: -6.095414638519287
    8. ')' → logprob: -6.720414638519287
    9. '`' → logprob: -7.970414638519287
    10. '	if' → logprob: -8.095414161682129

Token 1362: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001757696009008214
    2. '   ' → logprob: -8.875175476074219
    3. ' if' → logprob: -10.250175476074219
    4. '```' → logprob: -15.375175476074219
    5. 'If' → logprob: -16.75017547607422
    6. '	if' → logprob: -16.87517547607422
    7. ' ' → logprob: -17.25017547607422
    8. '       ' → logprob: -17.25017547607422
    9. 'def' → logprob: -17.25017547607422
    10. 'b' → logprob: -17.50017547607422

Token 1363: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003178901970386505
    2. ' b' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.253178596496582
    4. ''b' → logprob: -14.753178596496582
    5. '(b' → logprob: -16.5031795501709
    6. '	b' → logprob: -17.1281795501709
    7. ' ' → logprob: -18.2531795501709
    8. '```' → logprob: -18.2531795501709
    9. '    ' → logprob: -18.6281795501709
    10. '>b' → logprob: -18.8781795501709

Token 1364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43937352299690247
    2. '2' → logprob: -1.06437349319458
    3. '[' → logprob: -4.56437349319458
    4. ''' → logprob: -9.564373970031738
    5. '5' → logprob: -9.689373970031738
    6. '```' → logprob: -11.064373970031738
    7. '7' → logprob: -11.314373970031738
    8. '(' → logprob: -11.814373970031738
    9. '3' → logprob: -11.939373970031738
    10. ']' → logprob: -12.064373970031738

Token 1365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037716879160143435
    2. '2' → logprob: -8.00037670135498
    3. '```' → logprob: -10.50037670135498
    4. '   ' → logprob: -12.50037670135498
    5. '(' → logprob: -12.75037670135498
    6. '=' → logprob: -13.75037670135498
    7. '`' → logprob: -14.00037670135498
    8. '[
' → logprob: -14.25037670135498
    9. ''[' → logprob: -14.25037670135498
    10. ' [' → logprob: -14.50037670135498

Token 1366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010354319238103926
    2. ''' → logprob: -9.500103950500488
    3. ' ' → logprob: -10.875103950500488
    4. '   ' → logprob: -12.125103950500488
    5. ']' → logprob: -14.250103950500488
    6. '  ' → logprob: -14.250103950500488
    7. '"' → logprob: -14.375103950500488
    8. '...' → logprob: -14.375103950500488
    9. '```' → logprob: -14.875103950500488
    10. '=' → logprob: -15.500103950500488

Token 1367: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26292142271995544
    2. 'not' → logprob: -1.7629214525222778
    3. '!=' → logprob: -3.3879213333129883
    4. '==' → logprob: -4.137921333312988
    5. ' !=' → logprob: -5.512921333312988
    6. '!='' → logprob: -6.262921333312988
    7. ' ==' → logprob: -6.887921333312988
    8. ')' → logprob: -7.512921333312988
    9. '=='' → logprob: -7.762921333312988
    10. ']' → logprob: -7.887921333312988

Token 1368: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4672550559043884
    2. ' not' → logprob: -1.0922551155090332
    3. '!=' → logprob: -3.342255115509033
    4. '!='' → logprob: -7.092255115509033
    5. ' !=' → logprob: -7.217255115509033
    6. '==' → logprob: -8.092254638671875
    7. ''' → logprob: -8.342254638671875
    8. '[]' → logprob: -9.217254638671875
    9. '   ' → logprob: -9.842254638671875
    10. '[' → logprob: -9.967254638671875

Token 1369: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6030609607696533
    2. '('' → logprob: -0.8530609607696533
    3. ' in' → logprob: -3.9780609607696533
    4. ''' → logprob: -5.478060722351074
    5. ''in' → logprob: -6.728060722351074
    6. ' ('' → logprob: -6.728060722351074
    7. '=' → logprob: -7.978060722351074
    8. 'In' → logprob: -8.103060722351074
    9. '(' → logprob: -8.228060722351074
    10. '==' → logprob: -9.103060722351074

Token 1370: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.1008713702030946e-06
    2. ' ('' → logprob: -14.000001907348633
    3. ''' → logprob: -14.250001907348633
    4. '(' → logprob: -15.250001907348633
    5. '{'' → logprob: -16.125001907348633
    6. '(('' → logprob: -16.125001907348633
    7. '['' → logprob: -17.000001907348633
    8. '(
' → logprob: -18.125001907348633
    9. '("' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.000001907348633

Token 1371: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029835525900125504
    2. '0' → logprob: -3.5298354625701904
    3. '{'' → logprob: -10.40483570098877
    4. '('' → logprob: -11.15483570098877
    5. '`' → logprob: -11.40483570098877
    6. '"' → logprob: -11.40483570098877
    7. '['' → logprob: -11.52983570098877
    8. ' '' → logprob: -13.27983570098877
    9. '
' → logprob: -13.77983570098877
    10. '')' → logprob: -13.90483570098877

Token 1372: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.008863329887390137
    2. '',' → logprob: -5.25886344909668
    3. ',' → logprob: -6.88386344909668
    4. ','' → logprob: -7.00886344909668
    5. ',x' → logprob: -7.13386344909668
    6. ''' → logprob: -8.13386344909668
    7. ''x' → logprob: -8.25886344909668
    8. '')' → logprob: -9.38386344909668
    9. ')' → logprob: -9.75886344909668
    10. ' ','' → logprob: -9.88386344909668

Token 1373: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21423128247261047
    2. '0' → logprob: -1.714231252670288
    3. ''' → logprob: -4.839231491088867
    4. ''x' → logprob: -5.339231491088867
    5. ''s' → logprob: -12.089231491088867
    6. '')' → logprob: -12.089231491088867
    7. ' x' → logprob: -12.589231491088867
    8. ')' → logprob: -13.339231491088867
    9. '('' → logprob: -14.089231491088867
    10. '...' → logprob: -14.214231491088867

Token 1374: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.04883534833788872
    2. '):' → logprob: -3.673835277557373
    3. ''):
' → logprob: -4.798835277557373
    4. '   ' → logprob: -5.298835277557373
    5. '')' → logprob: -5.298835277557373
    6. ':' → logprob: -6.423835277557373
    7. ')' → logprob: -6.548835277557373
    8. ''' → logprob: -8.423835754394531
    9. '<|end|>' → logprob: -8.548835754394531
    10. ' '' → logprob: -9.298835754394531

Token 1375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1723187118768692
    2. '0' → logprob: -2.172318696975708
    3. ' ' → logprob: -4.047318935394287
    4. '   ' → logprob: -4.172318935394287
    5. '        ' → logprob: -5.922318935394287
    6. '<|end|>' → logprob: -5.922318935394287
    7. '    ' → logprob: -6.172318935394287
    8. ' return' → logprob: -6.672318935394287
    9. '           ' → logprob: -7.047318935394287
    10. '      ' → logprob: -8.297318458557129

Token 1376: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8443793058395386
    2. '0' → logprob: -0.8443793058395386
    3. ''x' → logprob: -3.469379425048828
    4. ' ' → logprob: -3.594379425048828
    5. ' '' → logprob: -3.594379425048828
    6. '<|end|>' → logprob: -3.969379425048828
    7. 'x' → logprob: -4.469379425048828
    8. '1' → logprob: -4.969379425048828
    9. ''s' → logprob: -5.344379425048828
    10. ')' → logprob: -5.969379425048828

Token 1377: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -8.029847231227905e-05
    2. '3' → logprob: -10.375080108642578
    3. '[' → logprob: -11.250080108642578
    4. ' ' → logprob: -11.250080108642578
    5. ')' → logprob: -11.625080108642578
    6. ''' → logprob: -12.375080108642578
    7. '...' → logprob: -12.875080108642578
    8. '<|end|>' → logprob: -13.125080108642578
    9. '<|end|>' → logprob: -13.375080108642578
    10. '7' → logprob: -14.500080108642578

Token 1378: ' must' (ID: 2804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8183301687240601
    2. ' not' → logprob: -1.19333016872406
    3. '<|end|>' → logprob: -1.56833016872406
    4. 'not' → logprob: -3.3183302879333496
    5. '<|end|>' → logprob: -5.31833028793335
    6. ' )' → logprob: -6.44333028793335
    7. '')' → logprob: -6.81833028793335
    8. 'in' → logprob: -6.94333028793335
    9. '   ' → logprob: -7.19333028793335
    10. '  ' → logprob: -7.94333028793335

Token 1379: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.805832028388977
    2. ''' → logprob: -1.555832028388977
    3. '<|end|>' → logprob: -1.930832028388977
    4. 'be' → logprob: -2.8058319091796875
    5. ' not' → logprob: -3.4308319091796875
    6. 'not' → logprob: -3.6808319091796875
    7. ' in' → logprob: -3.8058319091796875
    8. '0' → logprob: -4.0558319091796875
    9. ' '' → logprob: -4.0558319091796875
    10. 'in' → logprob: -4.5558319091796875

Token 1380: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133985102176666
    2. ''' → logprob: -1.3133984804153442
    3. ' ' → logprob: -9.813398361206055
    4. '`' → logprob: -10.313398361206055
    5. ' '' → logprob: -10.313398361206055
    6. '"' → logprob: -12.063398361206055
    7. '   ' → logprob: -12.688398361206055
    8. ''s' → logprob: -13.688398361206055
    9. '{'' → logprob: -13.813398361206055
    10. '```' → logprob: -13.938398361206055

Token 1381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08898679167032242
    2. ''' → logprob: -2.463986873626709
    3. '`' → logprob: -11.08898639678955
    4. ' ' → logprob: -11.08898639678955
    5. '<|end|>' → logprob: -11.96398639678955
    6. '"' → logprob: -12.58898639678955
    7. ' '' → logprob: -12.83898639678955
    8. ')' → logprob: -13.83898639678955
    9. '')' → logprob: -14.33898639678955
    10. '   ' → logprob: -14.58898639678955

Token 1382: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3650621175765991
    2. '   ' → logprob: -1.3650621175765991
    3. ')' → logprob: -3.6150622367858887
    4. '<|end|>' → logprob: -4.990062236785889
    5. '):' → logprob: -5.365062236785889
    6. '       ' → logprob: -5.490062236785889
    7. ' ' → logprob: -5.865062236785889
    8. '    ' → logprob: -6.990062236785889
    9. ',' → logprob: -7.365062236785889
    10. ':
' → logprob: -7.490062236785889

Token 1383: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5691055655479431
    2. '   ' → logprob: -1.694105625152588
    3. ')' → logprob: -2.444105625152588
    4. '<|end|>' → logprob: -2.444105625152588
    5. '):' → logprob: -4.194105625152588
    6. 'x' → logprob: -4.319105625152588
    7. ' ' → logprob: -4.319105625152588
    8. '    ' → logprob: -4.444105625152588
    9. '       ' → logprob: -5.444105625152588
    10. ''s' → logprob: -6.319105625152588

Token 1384: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8404334187507629
    2. 'return' (adapté à ' return') → logprob: -1.0904333591461182
    3. 'if' → logprob: -1.8404333591461182
    4. ' return' → logprob: -3.215433359146118
    5. ' if' → logprob: -3.965433359146118
    6. '   ' → logprob: -4.590433597564697
    7. ' ' → logprob: -7.090433597564697
    8. '=' → logprob: -7.590433597564697
    9. '    ' → logprob: -7.715433597564697
    10. '```' → logprob: -7.840433597564697

Token 1385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -20.500335693359375
    4. '1' → logprob: -20.625335693359375
    5. '۰' → logprob: -20.625335693359375
    6. '<|end|>' → logprob: -21.250335693359375
    7. '   ' → logprob: -21.375335693359375
    8. '00' → logprob: -22.000335693359375
    9. '000' → logprob: -22.000335693359375
    10. 'return' → logprob: -22.125335693359375

Token 1386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. ''' → logprob: -15.87500286102295
    4. '1' → logprob: -16.875003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '```' → logprob: -19.375003814697266
    7. '
' → logprob: -19.562503814697266
    8. '"' → logprob: -19.750003814697266
    9. '2' → logprob: -19.812503814697266
    10. '(' → logprob: -20.062503814697266

Token 1387: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005346890073269606
    2. '<|end|>' → logprob: -5.880346775054932
    3. '       ' → logprob: -6.880346775054932
    4. ' if' → logprob: -7.630346775054932
    5. '```' → logprob: -8.25534725189209
    6. ')' → logprob: -8.25534725189209
    7. 'if' → logprob: -9.13034725189209
    8. '<|end|>' → logprob: -9.88034725189209
    9. ' ' → logprob: -10.00534725189209
    10. '...' → logprob: -10.38034725189209

Token 1388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01831698603928089
    2. 'if' → logprob: -4.518317222595215
    3. '```' → logprob: -5.893317222595215
    4. '       ' → logprob: -6.143317222595215
    5. ' if' → logprob: -7.018317222595215
    6. 'count' → logprob: -7.893317222595215
    7. 'for' → logprob: -7.893317222595215
    8. 'def' → logprob: -8.768317222595215
    9. '``' → logprob: -9.018317222595215
    10. '{
' → logprob: -9.643317222595215

Token 1389: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10260474681854248
    2. 'if' → logprob: -2.977604866027832
    3. 'y' → logprob: -4.102604866027832
    4. 'count' → logprob: -4.227604866027832
    5. '#' (adapté à ' #') → logprob: -4.977604866027832
    6. 'for' → logprob: -6.102604866027832
    7. 'mask' → logprob: -6.227604866027832
    8. 'cnt' → logprob: -6.477604866027832
    9. 'n' → logprob: -7.852604866027832
    10. 'unknown' → logprob: -8.102604866027832

Token 1390: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3450182378292084
    2. 'y' → logprob: -1.5950182676315308
    3. '#' → logprob: -3.345018148422241
    4. 'count' → logprob: -3.470018148422241
    5. 'mask' → logprob: -4.59501838684082
    6. 'cnt' → logprob: -5.72001838684082
    7. 'if' → logprob: -6.09501838684082
    8. 'unknown' → logprob: -6.22001838684082
    9. 'sum' → logprob: -6.84501838684082
    10. 'pos' → logprob: -7.22001838684082

Token 1391: ' second' (ID: 3099)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8839490413665771
    2. 'i' → logprob: -1.2589490413665771
    3. ' b' → logprob: -2.383949041366577
    4. ' i' → logprob: -2.633949041366577
    5. 'y' → logprob: -2.758949041366577
    6. ' y' → logprob: -4.008949279785156
    7. '4' → logprob: -4.133949279785156
    8. '3' → logprob: -4.883949279785156
    9. '(' → logprob: -5.008949279785156
    10. 'len' → logprob: -5.258949279785156

Token 1392: ' byte' (ID: 9239)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5245859622955322
    2. '2' → logprob: -1.5245859622955322
    3. '3' → logprob: -1.7745859622955322
    4. '[' → logprob: -4.524585723876953
    5. '0' → logprob: -5.774585723876953
    6. 'def' → logprob: -6.274585723876953
    7. ' ' → logprob: -6.649585723876953
    8. 'b' → logprob: -6.649585723876953
    9. ']' → logprob: -6.899585723876953
    10. '```' → logprob: -7.149585723876953

Token 1393: ' bits' (ID: 18189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11505952477455139
    2. ' if' → logprob: -2.9900596141815186
    3. '   ' → logprob: -3.6150596141815186
    4. '3' → logprob: -4.3650593757629395
    5. '[' → logprob: -4.3650593757629395
    6. 'def' → logprob: -5.7400593757629395
    7. '```' → logprob: -6.7400593757629395
    8. ':' → logprob: -7.6150593757629395
    9. '...' → logprob: -8.990059852600098
    10. '
' → logprob: -8.990059852600098

Token 1394: ' bit' (ID: 3546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3320363163948059
    2. '   ' → logprob: -1.5820362567901611
    3. ' if' → logprob: -2.832036256790161
    4. 'for' → logprob: -4.33203649520874
    5. '[' → logprob: -5.83203649520874
    6. ' for' → logprob: -7.20703649520874
    7. 'def' → logprob: -7.70703649520874
    8. '```' → logprob: -8.082036018371582
    9. '#' → logprob: -9.082036018371582
    10. '
' → logprob: -9.457036018371582

Token 1395: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005319616291671991
    2. '[' → logprob: -5.255319595336914
    3. 's' → logprob: -10.755319595336914
    4. '(' → logprob: -11.130319595336914
    5. '7' → logprob: -11.130319595336914
    6. '...' → logprob: -11.630319595336914
    7. '2' → logprob: -12.255319595336914
    8. 'def' → logprob: -12.630319595336914
    9. '   ' → logprob: -13.005319595336914
    10. ' ' → logprob: -13.130319595336914

Token 1396: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38117843866348267
    2. 'if' → logprob: -1.506178379058838
    3. '   ' → logprob: -2.756178379058838
    4. 'def' → logprob: -4.381178379058838
    5. ' if' → logprob: -4.881178379058838
    6. '3' → logprob: -5.631178379058838
    7. ':' → logprob: -6.881178379058838
    8. '==' → logprob: -6.881178379058838
    9. '  ' → logprob: -7.381178379058838
    10. 'b' → logprob: -7.381178379058838

Token 1397: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013069051317870617
    2. '1' → logprob: -4.638069152832031
    3. '['' → logprob: -6.638069152832031
    4. '   ' → logprob: -7.513069152832031
    5. '('' → logprob: -7.638069152832031
    6. ' '' → logprob: -8.013069152832031
    7. '{'' → logprob: -9.388069152832031
    8. '[' → logprob: -9.638069152832031
    9. ''b' → logprob: -9.638069152832031
    10. 'b' → logprob: -9.763069152832031

Token 1398: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.158878892660141
    2. 'if' → logprob: -2.033878803253174
    3. ' if' → logprob: -4.158878803253174
    4. 'def' → logprob: -9.033879280090332
    5. 'and' → logprob: -9.283879280090332
    6. '```' → logprob: -9.783879280090332
    7. ',' → logprob: -10.283879280090332
    8. ' ' → logprob: -10.533879280090332
    9. '  ' → logprob: -10.533879280090332
    10. '	if' → logprob: -11.283879280090332

Token 1399: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7612477540969849
    2. 'if' → logprob: -0.7612477540969849
    3. '   ' → logprob: -2.8862476348876953
    4. ' if' → logprob: -5.386247634887695
    5. '0' → logprob: -6.136247634887695
    6. ' b' → logprob: -6.511247634887695
    7. '1' → logprob: -7.511247634887695
    8. '2' → logprob: -7.636247634887695
    9. 'def' → logprob: -8.886247634887695
    10. ' ' → logprob: -9.136247634887695

Token 1400: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2828616797924042
    2. '2' → logprob: -1.4078617095947266
    3. '[' → logprob: -6.657861709594727
    4. '1' → logprob: -9.532861709594727
    5. '<|end|>' → logprob: -9.532861709594727
    6. '=' → logprob: -10.032861709594727
    7. '0' → logprob: -10.282861709594727
    8. '   ' → logprob: -10.282861709594727
    9. '(' → logprob: -10.407861709594727
    10. '6' → logprob: -10.532861709594727

Token 1401: '=' (ID: 28)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24555611610412598
    2. 'not' → logprob: -1.870556116104126
    3. ' not' → logprob: -2.995556116104126
    4. ')' → logprob: -4.995555877685547
    5. ''' → logprob: -6.495555877685547
    6. '2' → logprob: -6.995555877685547
    7. '[' → logprob: -7.370555877685547
    8. '']' → logprob: -7.495555877685547
    9. ']!='' → logprob: -7.620555877685547
    10. '3' → logprob: -8.120555877685547

Token 1402: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12814787030220032
    2. '0' → logprob: -2.128147840499878
    3. '['' → logprob: -7.503148078918457
    4. '{'' → logprob: -8.753148078918457
    5. '('' → logprob: -8.878148078918457
    6. '1' → logprob: -8.878148078918457
    7. '')' → logprob: -10.003148078918457
    8. 'not' → logprob: -10.253148078918457
    9. '`' → logprob: -10.628148078918457
    10. '   ' → logprob: -11.003148078918457

Token 1403: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022001950070261955
    2. 'if' → logprob: -4.14700174331665
    3. ' if' → logprob: -5.14700174331665
    4. '```' → logprob: -9.272002220153809
    5. '[' → logprob: -11.772002220153809
    6. '	if' → logprob: -12.147002220153809
    7. '``' → logprob: -12.522002220153809
    8. '`' → logprob: -12.522002220153809
    9. 'def' → logprob: -13.022002220153809
    10. 'If' → logprob: -13.022002220153809

Token 1404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01105937734246254
    2. ' if' → logprob: -4.886059284210205
    3. 'if' → logprob: -5.886059284210205
    4. '```' → logprob: -7.636059284210205
    5. ' ' → logprob: -10.261059761047363
    6. 'and' → logprob: -10.636059761047363
    7. '<|end|>' → logprob: -10.761059761047363
    8. 'If' → logprob: -10.886059761047363
    9. '       ' → logprob: -11.136059761047363
    10. '	if' → logprob: -11.136059761047363

Token 1405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00195384887047112
    2. ' if' → logprob: -7.001954078674316
    3. 'if' → logprob: -7.001954078674316
    4. '```' → logprob: -9.001954078674316
    5. 'If' → logprob: -12.876954078674316
    6. '``' → logprob: -13.251954078674316
    7. ' ' → logprob: -14.001954078674316
    8. 'and' → logprob: -14.126954078674316
    9. '	if' → logprob: -14.126954078674316
    10. '`' → logprob: -14.251954078674316

Token 1406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25284555554389954
    2. '   ' → logprob: -1.5028455257415771
    3. ' if' → logprob: -7.002845764160156
    4. '```' → logprob: -12.002845764160156
    5. '	if' → logprob: -15.752845764160156
    6. 'for' → logprob: -15.752845764160156
    7. 'If' → logprob: -16.377845764160156
    8. 'def' → logprob: -16.502845764160156
    9. '``' → logprob: -16.502845764160156
    10. ' ' → logprob: -16.627845764160156

Token 1407: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033558503491804004
    2. ' b' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.250335693359375
    4. 'len' → logprob: -18.000335693359375
    5. ' ' → logprob: -19.750335693359375
    6. '(b' → logprob: -20.250335693359375
    7. 'not' → logprob: -20.625335693359375
    8. '    ' → logprob: -20.750335693359375
    9. '  ' → logprob: -21.250335693359375
    10. '	b' → logprob: -21.500335693359375

Token 1408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001462107611587271
    2. '1' → logprob: -8.87514591217041
    3. '[' → logprob: -13.25014591217041
    4. '3' → logprob: -13.25014591217041
    5. '   ' → logprob: -13.50014591217041
    6. '```' → logprob: -14.50014591217041
    7. ' ' → logprob: -15.00014591217041
    8. '
' → logprob: -15.37514591217041
    9. 'b' → logprob: -16.000146865844727
    10. '0' → logprob: -16.625146865844727

Token 1409: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015223604859784245
    2. '0' → logprob: -6.501522541046143
    3. '7' → logprob: -12.251522064208984
    4. '   ' → logprob: -12.501522064208984
    5. ' ' → logprob: -12.501522064208984
    6. ' [' → logprob: -13.751522064208984
    7. '(' → logprob: -13.751522064208984
    8. 'not' → logprob: -13.876522064208984
    9. '```' → logprob: -14.501522064208984
    10. '=' → logprob: -14.501522064208984

Token 1410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.625000953674316
    3. '7' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '(' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '
' → logprob: -18.562501907348633
    8. '1' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. '=' → logprob: -18.937501907348633

Token 1411: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20225106179714203
    2. 'not' → logprob: -1.7022510766983032
    3. ')' → logprob: -7.327250957489014
    4. ']' → logprob: -8.702251434326172
    5. '   ' → logprob: -11.577251434326172
    6. '!=' → logprob: -14.077251434326172
    7. ' )' → logprob: -14.202251434326172
    8. '	not' → logprob: -14.327251434326172
    9. '!='' → logprob: -14.952251434326172
    10. '')' → logprob: -14.952251434326172

Token 1412: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.69331955909729
    2. 'not' → logprob: -0.69331955909729
    3. '!=' → logprob: -8.818319320678711
    4. '!='' → logprob: -11.818319320678711
    5. '   ' → logprob: -11.943319320678711
    6. ' !=' → logprob: -12.068319320678711
    7. ''' → logprob: -13.943319320678711
    8. '```' → logprob: -14.318319320678711
    9. '	not' → logprob: -14.568319320678711
    10. '    ' → logprob: -14.568319320678711

Token 1413: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11297319084405899
    2. ' in' → logprob: -2.237973213195801
    3. '('' → logprob: -9.1129732131958
    4. 'In' → logprob: -10.7379732131958
    5. '['' → logprob: -12.8629732131958
    6. '=' → logprob: -12.8629732131958
    7. ' ('' → logprob: -13.3629732131958
    8. 's' → logprob: -13.4879732131958
    9. 'to' → logprob: -13.6129732131958
    10. '=('' → logprob: -13.7379732131958

Token 1414: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.320199877838604e-07
    2. '['' → logprob: -15.375
    3. ' ('' → logprob: -16.125
    4. '(' → logprob: -16.875
    5. '{'' → logprob: -16.875
    6. ''' → logprob: -18.5
    7. '(('' → logprob: -19.75
    8. ''s' → logprob: -20.5
    9. '   ' → logprob: -20.875
    10. '("' → logprob: -20.875

Token 1415: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08897905796766281
    2. '1' → logprob: -2.4639790058135986
    3. '('' → logprob: -10.58897876739502
    4. '"' → logprob: -11.83897876739502
    5. '['' → logprob: -13.21397876739502
    6. '`' → logprob: -13.33897876739502
    7. '{'' → logprob: -13.33897876739502
    8. ' '' → logprob: -13.83897876739502
    9. '')' → logprob: -15.08897876739502
    10. '   ' → logprob: -15.58897876739502

Token 1416: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.015299484133720398
    2. ','' → logprob: -4.640299320220947
    3. ',' → logprob: -5.515299320220947
    4. '',' → logprob: -6.515299320220947
    5. ''' → logprob: -12.390299797058105
    6. '","' → logprob: -12.515299797058105
    7. '',"' → logprob: -12.640299797058105
    8. '",'' → logprob: -12.890299797058105
    9. ')','' → logprob: -12.890299797058105
    10. ',x' → logprob: -13.640299797058105

Token 1417: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00091217877343297
    2. ''x' → logprob: -7.000912189483643
    3. '1' → logprob: -15.250911712646484
    4. ' x' → logprob: -15.500911712646484
    5. '"x' → logprob: -15.625911712646484
    6. ')x' → logprob: -17.875911712646484
    7. '	x' → logprob: -18.875911712646484
    8. '$x' → logprob: -19.625911712646484
    9. ''' → logprob: -20.375911712646484
    10. ',x' → logprob: -20.625911712646484

Token 1418: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.7056595087051392
    2. '):' → logprob: -0.8306595087051392
    3. ')' → logprob: -3.4556593894958496
    4. ''):
' → logprob: -4.33065938949585
    5. '):
' → logprob: -4.58065938949585
    6. '')' → logprob: -5.20565938949585
    7. ',' → logprob: -5.20565938949585
    8. '','' → logprob: -5.95565938949585
    9. '',' → logprob: -6.70565938949585
    10. '   ' → logprob: -7.95565938949585

Token 1419: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.30653566122055054
    2. '       ' → logprob: -1.8065357208251953
    3. '<|end|>' → logprob: -3.6815357208251953
    4. '1' → logprob: -4.056535720825195
    5. ' '' → logprob: -4.431535720825195
    6. ''s' → logprob: -4.556535720825195
    7. '0' → logprob: -4.681535720825195
    8. '('' → logprob: -5.056535720825195
    9. '[' → logprob: -5.806535720825195
    10. '   ' → logprob: -5.931535720825195

Token 1420: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034959208220243454
    2. ''' → logprob: -3.409959316253662
    3. '<|end|>' → logprob: -7.159959316253662
    4. ')' → logprob: -8.659958839416504
    5. ''s' → logprob: -9.784958839416504
    6. ''x' → logprob: -9.909958839416504
    7. '`' → logprob: -10.284958839416504
    8. ' '' → logprob: -10.284958839416504
    9. '('' → logprob: -10.659958839416504
    10. '"' → logprob: -10.909958839416504

Token 1421: '7' (ID: 22)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006868109572678804
    2. '[' → logprob: -5.0068678855896
    3. '1' → logprob: -9.006868362426758
    4. '(' → logprob: -11.756868362426758
    5. '7' → logprob: -11.756868362426758
    6. '```' → logprob: -12.256868362426758
    7. '...' → logprob: -13.131868362426758
    8. ')' → logprob: -13.881868362426758
    9. '[
' → logprob: -14.006868362426758
    10. '<|end|>' → logprob: -14.006868362426758

Token 1422: ' must' (ID: 2804)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.43966639041900635
    2. ')' → logprob: -1.4396663904190063
    3. 'not' → logprob: -2.314666271209717
    4. '<|end|>' → logprob: -4.064666271209717
    5. 'in' → logprob: -7.064666271209717
    6. ' in' → logprob: -7.564666271209717
    7. '<|end|>' → logprob: -7.564666271209717
    8. '[' → logprob: -8.064666748046875
    9. '')' → logprob: -9.064666748046875
    10. ']' → logprob: -9.439666748046875

Token 1423: ' be' (ID: 413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40216681361198425
    2. '=' → logprob: -1.9021668434143066
    3. ' in' → logprob: -1.9021668434143066
    4. ''' → logprob: -4.277166843414307
    5. 'be' → logprob: -5.277166843414307
    6. '='' → logprob: -5.652166843414307
    7. ' be' → logprob: -5.777166843414307
    8. '('' → logprob: -6.027166843414307
    9. 'not' → logprob: -6.652166843414307
    10. ''s' → logprob: -6.777166843414307

Token 1424: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01254214160144329
    2. '1' → logprob: -4.387542247772217
    3. ' '' → logprob: -11.012541770935059
    4. '"' → logprob: -12.262541770935059
    5. '`' → logprob: -12.262541770935059
    6. '('' → logprob: -12.637541770935059
    7. '   ' → logprob: -14.637541770935059
    8. '')' → logprob: -14.637541770935059
    9. '
' → logprob: -15.012541770935059
    10. '['' → logprob: -15.262541770935059

Token 1425: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01482204720377922
    2. '1' → logprob: -4.264822006225586
    3. '('' → logprob: -7.389822006225586
    4. ' '' → logprob: -10.764822006225586
    5. '['' → logprob: -12.139822006225586
    6. '{'' → logprob: -12.514822006225586
    7. '`' → logprob: -12.514822006225586
    8. '   ' → logprob: -13.014822006225586
    9. '"' → logprob: -13.514822006225586
    10. '(' → logprob: -14.264822006225586

Token 1426: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.788487434387207
    2. '<|end|>' → logprob: -0.788487434387207
    3. '   ' → logprob: -2.538487434387207
    4. '<|end|>' → logprob: -5.913487434387207
    5. ' ' → logprob: -6.163487434387207
    6. '[' → logprob: -6.413487434387207
    7. '       ' → logprob: -6.538487434387207
    8. ':' → logprob: -6.788487434387207
    9. '):' → logprob: -6.788487434387207
    10. 'and' → logprob: -8.538487434387207

Token 1427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0340545177459717
    2. ' not' → logprob: -1.6590545177459717
    3. '<|end|>' → logprob: -1.9090545177459717
    4. '   ' → logprob: -2.0340545177459717
    5. ' if' → logprob: -2.2840545177459717
    6. ')' → logprob: -3.6590545177459717
    7. ' and' → logprob: -3.9090545177459717
    8. 'and' → logprob: -4.659054756164551
    9. ' ' → logprob: -5.659054756164551
    10. 'if' → logprob: -5.909054756164551

Token 1428: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5954617261886597
    2. '0' → logprob: -1.0954617261886597
    3. 'if' → logprob: -2.345461845397949
    4. '       ' → logprob: -4.345461845397949
    5. ' return' → logprob: -5.595461845397949
    6. '   ' → logprob: -6.845461845397949
    7. ' if' → logprob: -8.47046184539795
    8. '1' → logprob: -8.59546184539795
    9. ' ' → logprob: -9.47046184539795
    10. '=' → logprob: -10.09546184539795

Token 1429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'False' → logprob: -16.375036239624023
    4. '   ' → logprob: -18.500036239624023
    5. '  ' → logprob: -19.625036239624023
    6. '    ' → logprob: -21.000036239624023
    7. '(' → logprob: -21.125036239624023
    8. '1' → logprob: -21.375036239624023
    9. ' False' → logprob: -21.375036239624023
    10. '[' → logprob: -21.625036239624023

Token 1430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.375004768371582
    4. ''' → logprob: -14.375004768371582
    5. '('' → logprob: -14.625004768371582
    6. '1' → logprob: -16.250003814697266
    7. 'False' → logprob: -16.375003814697266
    8. '   ' → logprob: -17.875003814697266
    9. 'return' → logprob: -18.125003814697266
    10. ''s' → logprob: -18.625003814697266

Token 1431: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08241573721170425
    2. ' if' → logprob: -2.957415819168091
    3. '   ' → logprob: -3.707415819168091
    4. '```' → logprob: -6.332415580749512
    5. 'and' → logprob: -8.332415580749512
    6. ')' → logprob: -8.457415580749512
    7. '[' → logprob: -9.332415580749512
    8. '``' → logprob: -9.457415580749512
    9. ' ' → logprob: -10.332415580749512
    10. '       ' → logprob: -10.332415580749512

Token 1432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20290935039520264
    2. 'if' → logprob: -1.7029093503952026
    3. ' if' → logprob: -6.577909469604492
    4. 'and' → logprob: -9.702909469604492
    5. '	if' → logprob: -10.327909469604492
    6. 'b' → logprob: -12.702909469604492
    7. '```' → logprob: -13.202909469604492
    8. 'If' → logprob: -13.327909469604492
    9. ' and' → logprob: -14.077909469604492
    10. '
' → logprob: -14.077909469604492

Token 1433: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00019388488726690412
    2. '   ' → logprob: -9.00019359588623
    3. ' if' → logprob: -9.62519359588623
    4. 'b' → logprob: -12.62519359588623
    5. '```' → logprob: -14.75019359588623
    6. '	if' → logprob: -15.37519359588623
    7. '[' → logprob: -15.62519359588623
    8. 'def' → logprob: -15.75019359588623
    9. '
' → logprob: -16.750194549560547
    10. '0' → logprob: -16.750194549560547

Token 1434: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009118211455643177
    2. ' b' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.250911712646484
    4. '    ' → logprob: -18.625911712646484
    5. '  ' → logprob: -19.500911712646484
    6. ' ' → logprob: -19.500911712646484
    7. '       ' → logprob: -20.000911712646484
    8. '	b' → logprob: -20.250911712646484
    9. '     ' → logprob: -21.500911712646484
    10. '(b' → logprob: -21.750911712646484

Token 1435: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.453737710718997e-05
    2. '1' → logprob: -10.125044822692871
    3. '[' → logprob: -13.000044822692871
    4. '   ' → logprob: -13.500044822692871
    5. ' ' → logprob: -15.375044822692871
    6. '```' → logprob: -15.375044822692871
    7. '  ' → logprob: -15.625044822692871
    8. '(' → logprob: -16.250043869018555
    9. 'b' → logprob: -17.625043869018555
    10. '_' → logprob: -18.000043869018555

Token 1436: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002258277963846922
    2. '1' → logprob: -8.500226020812988
    3. '2' → logprob: -10.750226020812988
    4. '(' → logprob: -15.250226020812988
    5. '   ' → logprob: -15.500226020812988
    6. '[
' → logprob: -16.000225067138672
    7. '```' → logprob: -16.375225067138672
    8. ' [' → logprob: -16.750225067138672
    9. 'def' → logprob: -16.750225067138672
    10. '0' → logprob: -18.125225067138672

Token 1437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '2' → logprob: -12.625005722045898
    3. '[' → logprob: -14.250005722045898
    4. '   ' → logprob: -14.375005722045898
    5. ' ' → logprob: -15.125005722045898
    6. '0' → logprob: -15.500005722045898
    7. '
' → logprob: -16.0000057220459
    8. '(' → logprob: -16.3750057220459
    9. '```' → logprob: -17.2500057220459
    10. '  ' → logprob: -17.3125057220459

Token 1438: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12697944045066833
    2. 'not' → logprob: -2.126979351043701
    3. ']' → logprob: -10.25197982788086
    4. '	not' → logprob: -11.50197982788086
    5. ')' → logprob: -12.87697982788086
    6. '...' → logprob: -14.50197982788086
    7. '[' → logprob: -14.50197982788086
    8. '```' → logprob: -14.50197982788086
    9. '<|end|>' → logprob: -14.87697982788086
    10. '<|end|>' → logprob: -15.25197982788086

Token 1439: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048587825149297714
    2. ' not' → logprob: -3.0485877990722656
    3. '	not' → logprob: -15.298587799072266
    4. '
' → logprob: -16.298587799072266
    5. '```' → logprob: -17.673587799072266
    6. '!=' → logprob: -17.798587799072266
    7. '   ' → logprob: -18.423587799072266
    8. '['' → logprob: -18.798587799072266
    9. ')' → logprob: -18.923587799072266
    10. ''' → logprob: -19.048587799072266

Token 1440: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018728552386164665
    2. ' in' → logprob: -4.018728733062744
    3. '('' → logprob: -7.643728733062744
    4. 'In' → logprob: -9.643728256225586
    5. '_in' → logprob: -11.393728256225586
    6. ' ('' → logprob: -11.768728256225586
    7. ''in' → logprob: -12.268728256225586
    8. '=' → logprob: -13.268728256225586
    9. '['' → logprob: -13.393728256225586
    10. 'to' → logprob: -13.643728256225586

Token 1441: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.5776860184123507e-06
    2. ' ('' → logprob: -13.00000286102295
    3. '(' → logprob: -15.87500286102295
    4. ''' → logprob: -16.375001907348633
    5. '['' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '{'' → logprob: -18.625001907348633
    8. '(('' → logprob: -18.750001907348633
    9. '(
' → logprob: -19.250001907348633
    10. '("' → logprob: -20.000001907348633

Token 1442: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11888769268989563
    2. '0' → logprob: -2.3688876628875732
    3. '('' → logprob: -3.9938876628875732
    4. '{'' → logprob: -10.118887901306152
    5. '['' → logprob: -10.618887901306152
    6. '')' → logprob: -11.868887901306152
    7. '1' → logprob: -13.118887901306152
    8. '   ' → logprob: -14.368887901306152
    9. ' '' → logprob: -14.368887901306152
    10. '(' → logprob: -14.493887901306152

Token 1443: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.030190331861376762
    2. ','' → logprob: -3.7801902294158936
    3. '',' → logprob: -5.655190467834473
    4. ',' → logprob: -5.905190467834473
    5. ',x' → logprob: -8.280190467834473
    6. ''' → logprob: -9.280190467834473
    7. ''x' → logprob: -9.280190467834473
    8. '",'' → logprob: -9.530190467834473
    9. '',"' → logprob: -10.155190467834473
    10. '(','' → logprob: -10.405190467834473

Token 1444: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3868784010410309
    2. 'x' → logprob: -1.1368783712387085
    3. '('' → logprob: -12.88687801361084
    4. '['' → logprob: -13.26187801361084
    5. ''' → logprob: -13.88687801361084
    6. '"x' → logprob: -14.38687801361084
    7. ' x' → logprob: -14.88687801361084
    8. ')x' → logprob: -15.38687801361084
    9. '```' → logprob: -15.63687801361084
    10. ''s' → logprob: -15.76187801361084

Token 1445: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.029610928148031235
    2. ''):
' → logprob: -4.279611110687256
    3. '')' → logprob: -4.904611110687256
    4. '):' → logprob: -5.154611110687256
    5. ')' → logprob: -7.029611110687256
    6. '   ' → logprob: -7.279611110687256
    7. ''' → logprob: -8.654610633850098
    8. '('' → logprob: -9.029610633850098
    9. ''):
' → logprob: -9.779610633850098
    10. '):
' → logprob: -10.029610633850098

Token 1446: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35851144790649414
    2. 'return' → logprob: -1.9835114479064941
    3. ' ' → logprob: -2.733511447906494
    4. ' return' → logprob: -3.233511447906494
    5. ''' → logprob: -3.608511447906494
    6. '('' → logprob: -4.983511447906494
    7. '   ' → logprob: -5.108511447906494
    8. '       ' → logprob: -5.733511447906494
    9. '<|end|>' → logprob: -5.733511447906494
    10. '1' → logprob: -5.983511447906494

Token 1447: ' bit' (ID: 3546)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.031966742128133774
    2. '('' → logprob: -4.031966686248779
    3. ''' → logprob: -5.031966686248779
    4. 'x' → logprob: -5.781966686248779
    5. ''b' → logprob: -6.656966686248779
    6. '(' → logprob: -7.031966686248779
    7. ''s' → logprob: -7.531966686248779
    8. '1' → logprob: -7.656966686248779
    9. ' '' → logprob: -8.031967163085938
    10. 'b' → logprob: -8.531967163085938

Token 1448: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04395529627799988
    2. '[' → logprob: -3.1689553260803223
    3. '```' → logprob: -7.543955326080322
    4. '(' → logprob: -9.043954849243164
    5. ']' → logprob: -9.043954849243164
    6. '1' → logprob: -9.543954849243164
    7. ' ' → logprob: -10.668954849243164
    8. 'b' → logprob: -10.793954849243164
    9. '...' → logprob: -11.043954849243164
    10. 'not' → logprob: -11.543954849243164

Token 1449: ' must' (ID: 2804)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.42632976174354553
    2. ' not' → logprob: -1.1763297319412231
    3. ')' → logprob: -3.8013298511505127
    4. 'in' → logprob: -5.051329612731934
    5. ' in' → logprob: -5.176329612731934
    6. '```' → logprob: -6.301329612731934
    7. ']' → logprob: -6.926329612731934
    8. '<|end|>' → logprob: -7.176329612731934
    9. '   ' → logprob: -8.551329612731934
    10. '[' → logprob: -8.676329612731934

Token 1450: ' be' (ID: 413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9142096042633057
    2. ''' → logprob: -1.5392096042633057
    3. '('' → logprob: -1.5392096042633057
    4. ' in' → logprob: -2.0392096042633057
    5. '0' → logprob: -4.039209365844727
    6. ' '' → logprob: -4.164209365844727
    7. ' ('' → logprob: -6.664209365844727
    8. ' be' → logprob: -6.914209365844727
    9. ''in' → logprob: -7.164209365844727
    10. ' ' → logprob: -7.164209365844727

Token 1451: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03387504816055298
    2. '('' → logprob: -3.658874988555908
    3. ' '' → logprob: -5.283874988555908
    4. '0' → logprob: -6.158874988555908
    5. ' ' → logprob: -8.408875465393066
    6. ''x' → logprob: -9.783875465393066
    7. ' ('' → logprob: -9.783875465393066
    8. '(' → logprob: -11.408875465393066
    9. ''s' → logprob: -12.158875465393066
    10. '  ' → logprob: -13.783875465393066

Token 1452: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.052519358694553375
    2. '('' → logprob: -3.0525193214416504
    3. '0' → logprob: -5.55251932144165
    4. ''x' → logprob: -10.677519798278809
    5. ' '' → logprob: -11.927519798278809
    6. '(' → logprob: -12.052519798278809
    7. 'x' → logprob: -12.427519798278809
    8. ''s' → logprob: -12.677519798278809
    9. '`' → logprob: -13.677519798278809
    10. '['' → logprob: -14.177519798278809

Token 1453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5766218900680542
    2. '   ' → logprob: -1.0766218900680542
    3. ':' → logprob: -2.9516220092773438
    4. ')' → logprob: -3.9516220092773438
    5. '<|end|>' → logprob: -4.576622009277344
    6. '```' → logprob: -5.576622009277344
    7. '):
' → logprob: -5.701622009277344
    8. ':
' → logprob: -5.701622009277344
    9. '):' → logprob: -6.826622009277344
    10. ' ' → logprob: -7.076622009277344

Token 1454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00307943276129663
    2. ':' → logprob: -6.253079414367676
    3. '   ' → logprob: -7.753079414367676
    4. ':
' → logprob: -7.878079414367676
    5. '<|end|>' → logprob: -9.628079414367676
    6. '=' → logprob: -9.753079414367676
    7. ')' → logprob: -10.003079414367676
    8. '):
' → logprob: -10.378079414367676
    9. '      ' → logprob: -10.753079414367676
    10. '```' → logprob: -10.753079414367676

Token 1455: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06672125309705734
    2. ' return' → logprob: -3.191721200942993
    3. '       ' → logprob: -4.066721439361572
    4. '0' → logprob: -5.691721439361572
    5. ' ' → logprob: -6.191721439361572
    6. '   ' → logprob: -7.816721439361572
    7. '  ' → logprob: -9.316720962524414
    8. '        ' → logprob: -9.691720962524414
    9. '<|end|>' → logprob: -9.816720962524414
    10. '    ' → logprob: -9.941720962524414

Token 1456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00865298043936491
    2. ' ' → logprob: -4.758653163909912
    3. '(' → logprob: -11.258652687072754
    4. '1' → logprob: -11.383652687072754
    5. ''' → logprob: -12.508652687072754
    6. '('' → logprob: -12.758652687072754
    7. 'b' → logprob: -13.508652687072754
    8. '  ' → logprob: -13.883652687072754
    9. '   ' → logprob: -13.883652687072754
    10. ''s' → logprob: -14.133652687072754

Token 1457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. ''' → logprob: -15.875007629394531
    4. '1' → logprob: -16.87500762939453
    5. '   ' → logprob: -19.00000762939453
    6. '(' → logprob: -19.25000762939453
    7. '  ' → logprob: -19.50000762939453
    8. 'return' → logprob: -19.50000762939453
    9. '('' → logprob: -19.87500762939453
    10. ''s' → logprob: -20.00000762939453

Token 1458: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003126621013507247
    2. '<|end|>' → logprob: -5.878126621246338
    3. ')' → logprob: -9.62812614440918
    4. '    
' → logprob: -10.00312614440918
    5. '
' → logprob: -10.12812614440918
    6. 'if' → logprob: -10.25312614440918
    7. '```' → logprob: -10.50312614440918
    8. '<|end|>' → logprob: -10.50312614440918
    9. '[' → logprob: -10.87812614440918
    10. ' if' → logprob: -11.62812614440918

Token 1459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03036392480134964
    2. 'if' → logprob: -3.7803640365600586
    3. '```' → logprob: -5.405364036560059
    4. 'for' → logprob: -6.780364036560059
    5. ' if' → logprob: -7.280364036560059
    6. '
' → logprob: -8.655364036560059
    7. '#' → logprob: -8.655364036560059
    8. 'def' → logprob: -9.280364036560059
    9. '       ' → logprob: -9.405364036560059
    10. 'i' → logprob: -9.655364036560059

Token 1460: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28550902009010315
    2. 'if' → logprob: -1.6605089902877808
    3. 'for' → logprob: -3.7855091094970703
    4. 'y' → logprob: -4.53550910949707
    5. 'count' → logprob: -4.53550910949707
    6. '#' (adapté à ' #') → logprob: -4.78550910949707
    7. 'mask' → logprob: -5.78550910949707
    8. 'sum' → logprob: -7.41050910949707
    9. 'rest' → logprob: -7.53550910949707
    10. 'from' → logprob: -8.28550910949707

Token 1461: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5272590517997742
    2. 'y' → logprob: -1.152259111404419
    3. '   ' → logprob: -2.527259111404419
    4. 'from' → logprob: -5.15225887298584
    5. 'def' → logprob: -5.90225887298584
    6. 'for' → logprob: -6.40225887298584
    7. 'ys' → logprob: -7.15225887298584
    8. 'pos' → logprob: -7.52725887298584
    9. 'count' → logprob: -7.65225887298584
    10. 'mask' → logprob: -7.65225887298584

Token 1462: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.864660918712616
    2. 'positions' → logprob: -1.1146609783172607
    3. '4' → logprob: -2.7396609783172607
    4. '[' → logprob: -2.7396609783172607
    5. 'if' → logprob: -3.1146609783172607
    6. '_bits' → logprob: -3.6146609783172607
    7. '2' → logprob: -3.7396609783172607
    8. 'indices' → logprob: -5.239660739898682
    9. '_positions' → logprob: -5.239660739898682
    10. '#' → logprob: -6.364660739898682

Token 1463: ' at' (ID: 540)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9151103496551514
    2. '4' → logprob: -1.1651103496551514
    3. '   ' → logprob: -2.2901103496551514
    4. 'if' → logprob: -2.7901103496551514
    5. '2' → logprob: -3.2901103496551514
    6. '```' → logprob: -3.9151103496551514
    7. 'def' → logprob: -4.0401105880737305
    8. '3' → logprob: -4.7901105880737305
    9. '#' → logprob: -5.0401105880737305
    10. 'for' → logprob: -5.1651105880737305

Token 1464: ' b' (ID: 287)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47850659489631653
    2. '[' → logprob: -1.4785065650939941
    3. '2' → logprob: -1.9785065650939941
    4. ' (' → logprob: -5.603506565093994
    5. '3' → logprob: -5.728506565093994
    6. '4' → logprob: -5.978506565093994
    7. '   ' → logprob: -6.853506565093994
    8. 'b' → logprob: -6.853506565093994
    9. ' [' → logprob: -7.103506565093994
    10. '('' → logprob: -8.103507041931152

Token 1465: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023429254069924355
    2. '3' → logprob: -3.8984291553497314
    3. '2' → logprob: -6.0234293937683105
    4. '4' → logprob: -8.648428916931152
    5. '(' → logprob: -9.523428916931152
    6. ''' → logprob: -9.773428916931152
    7. '['' → logprob: -10.773428916931152
    8. '   ' → logprob: -10.898428916931152
    9. '234' → logprob: -11.148428916931152
    10. ' [' → logprob: -11.273428916931152

Token 1466: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.661795437335968
    2. '3' → logprob: -1.0367953777313232
    3. '4' → logprob: -2.5367953777313232
    4. '2' → logprob: -3.2867953777313232
    5. '(' → logprob: -4.786795616149902
    6. '```' → logprob: -6.036795616149902
    7. '`' → logprob: -6.911795616149902
    8. '   ' → logprob: -8.286795616149902
    9. ' ' → logprob: -8.536795616149902
    10. '``' → logprob: -8.786795616149902

Token 1467: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.1689596148207784e-05
    2. '4' → logprob: -10.250051498413086
    3. ''' → logprob: -11.750051498413086
    4. '[' → logprob: -12.375051498413086
    5. '(' → logprob: -12.875051498413086
    6. ' ' → logprob: -14.000051498413086
    7. '"' → logprob: -15.125051498413086
    8. '   ' → logprob: -16.375051498413086
    9. '```' → logprob: -16.625051498413086
    10. ']' → logprob: -17.500051498413086

Token 1468: '],' (ID: 2155)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.50700443983078
    2. ']' → logprob: -1.5070044994354248
    3. '],' → logprob: -2.132004499435425
    4. 'in' → logprob: -4.257004261016846
    5. ':' → logprob: -4.507004261016846
    6. 'and' → logprob: -4.757004261016846
    7. '[' → logprob: -4.882004261016846
    8. '4' → logprob: -5.757004261016846
    9. ',' → logprob: -6.007004261016846
    10. '],'' → logprob: -6.132004261016846

Token 1469: ' b' (ID: 287)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008990109898149967
    2. 'b' → logprob: -5.133990287780762
    3. '2' → logprob: -5.883990287780762
    4. '[' → logprob: -8.883990287780762
    5. '3' → logprob: -9.883990287780762
    6. ''' → logprob: -10.383990287780762
    7. ' ' → logprob: -10.633990287780762
    8. '(' → logprob: -11.008990287780762
    9. '```' → logprob: -13.008990287780762
    10. '   ' → logprob: -13.383990287780762

Token 1470: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -10.875020027160645
    3. '```' → logprob: -15.875020027160645
    4. '
' → logprob: -16.125019073486328
    5. '   ' → logprob: -16.875019073486328
    6. '3' → logprob: -17.000019073486328
    7. ' ' → logprob: -17.125019073486328
    8. ']' → logprob: -17.125019073486328
    9. '４' → logprob: -17.375019073486328
    10. '2' → logprob: -17.375019073486328

Token 1471: '[' (ID: 58)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009837902151048183
    2. '[' → logprob: -4.634838104248047
    3. '(' → logprob: -10.009838104248047
    4. '3' → logprob: -11.509838104248047
    5. '   ' → logprob: -11.509838104248047
    6. '```' → logprob: -12.009838104248047
    7. ']' → logprob: -12.634838104248047
    8. '2' → logprob: -12.759838104248047
    9. '=' → logprob: -13.759838104248047
    10. ' ' → logprob: -14.134838104248047

Token 1472: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00045045334263704717
    2. '2' → logprob: -7.750450611114502
    3. ' ' → logprob: -11.125450134277344
    4. '3' → logprob: -13.000450134277344
    5. '  ' → logprob: -14.375450134277344
    6. '   ' → logprob: -14.625450134277344
    7. '[' → logprob: -14.750450134277344
    8. '(' → logprob: -14.750450134277344
    9. '...' → logprob: -16.000450134277344
    10. '```' → logprob: -16.000450134277344

Token 1473: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0671008974313736
    2. ']' → logprob: -2.942101001739502
    3. ',' → logprob: -4.567101001739502
    4. '5' → logprob: -7.067101001739502
    5. '],'' → logprob: -7.942101001739502
    6. ':' → logprob: -8.442100524902344
    7. '3' → logprob: -9.442100524902344
    8. '...' → logprob: -9.567100524902344
    9. '],
' → logprob: -10.442100524902344
    10. '],[' → logprob: -10.817100524902344

Token 1474: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.37101462483406067
    2. '5' → logprob: -1.2460145950317383
    3. '2' → logprob: -3.8710145950317383
    4. '```' → logprob: -7.621014595031738
    5. '[' → logprob: -7.746014595031738
    6. ' b' → logprob: -8.121014595031738
    7. ' ' → logprob: -9.246014595031738
    8. '   ' → logprob: -9.871014595031738
    9. '`' → logprob: -9.871014595031738
    10. '...' → logprob: -11.746014595031738

Token 1475: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -10.375031471252441
    3. '2' → logprob: -16.750032424926758
    4. '3' → logprob: -16.750032424926758
    5. '(' → logprob: -17.375032424926758
    6. 'ifth' → logprob: -17.375032424926758
    7. 'five' → logprob: -17.500032424926758
    8. ']' → logprob: -17.500032424926758
    9. '```' → logprob: -17.750032424926758
    10. 'r' → logprob: -18.125032424926758

Token 1476: '[' (ID: 58)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0798172876238823
    2. '[' → logprob: -2.579817295074463
    3. '```' → logprob: -7.829817295074463
    4. '[
' → logprob: -8.829816818237305
    5. ',' → logprob: -8.954816818237305
    6. ']' → logprob: -9.829816818237305
    7. '...' → logprob: -10.329816818237305
    8. '<|end|>' → logprob: -10.454816818237305
    9. '#' → logprob: -10.579816818237305
    10. '(' → logprob: -10.954816818237305

Token 1477: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '2' → logprob: -17.625
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -19.125
    6. '(' → logprob: -19.25
    7. '[' → logprob: -19.5
    8. '５' → logprob: -20.25
    9. '۵' → logprob: -20.25
    10. ']' → logprob: -20.375

Token 1478: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05680340155959129
    2. ',' → logprob: -3.9318034648895264
    3. '   ' → logprob: -5.056803226470947
    4. ' in' → logprob: -5.181803226470947
    5. '<|end|>' → logprob: -5.681803226470947
    6. '<|end|>' → logprob: -5.681803226470947
    7. ':' → logprob: -5.806803226470947
    8. ')' → logprob: -5.806803226470947
    9. ']==' → logprob: -6.306803226470947
    10. '],' → logprob: -6.306803226470947

Token 1479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2087363600730896
    2. ' if' → logprob: -1.9587364196777344
    3. ' for' → logprob: -3.5837364196777344
    4. 'if' → logprob: -5.083736419677734
    5. 'for' → logprob: -5.833736419677734
    6. '```' → logprob: -6.083736419677734
    7. 'count' → logprob: -6.583736419677734
    8. ' =' → logprob: -7.333736419677734
    9. ' count' → logprob: -7.583736419677734
    10. ' at' → logprob: -7.708736419677734

Token 1480: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6387233138084412
    2. 'y' (adapté à ' y') → logprob: -1.138723373413086
    3. 'count' → logprob: -2.638723373413086
    4. ' y' → logprob: -4.263723373413086
    5. 'sum' → logprob: -4.638723373413086
    6. ' count' → logprob: -4.638723373413086
    7. 'if' → logprob: -4.638723373413086
    8. 'cnt' → logprob: -4.888723373413086
    9. 'ones' → logprob: -5.513723373413086
    10. '#' → logprob: -5.888723373413086

Token 1481: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.579155683517456
    2. 'bits' → logprob: -0.829155683517456
    3. ' =' → logprob: -6.704155921936035
    4. '=' → logprob: -6.829155921936035
    5. '_positions' → logprob: -7.829155921936035
    6. 's' → logprob: -7.954155921936035
    7. 'positions' → logprob: -9.954155921936035
    8. '_vals' → logprob: -10.704155921936035
    9. '_pos' → logprob: -11.079155921936035
    10. '_values' → logprob: -11.204155921936035

Token 1482: '_vals' (ID: 71688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860111325979233
    2. ' =' → logprob: -3.0486011505126953
    3. '=b' → logprob: -11.548601150512695
    4. '=[' → logprob: -13.048601150512695
    5. '   ' → logprob: -14.048601150512695
    6. '=[]' → logprob: -14.173601150512695
    7. '=y' → logprob: -15.548601150512695
    8. ' ' → logprob: -16.798601150512695
    9. '=set' → logprob: -16.923601150512695
    10. '=
' → logprob: -17.173601150512695

Token 1483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006886934861540794
    2. ' =' → logprob: -5.006886959075928
    3. '=[]' → logprob: -9.25688648223877
    4. '=[' → logprob: -9.50688648223877
    5. '=[]
' → logprob: -14.13188648223877
    6. '=['' → logprob: -15.00688648223877
    7. '=list' → logprob: -15.75688648223877
    8. '   ' → logprob: -16.006887435913086
    9. '=[
' → logprob: -16.006887435913086
    10. ' =[' → logprob: -16.506887435913086

Token 1484: ' []
' (ID: 8911)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.022575773298740387
    2. '[]' → logprob: -4.772575855255127
    3. '[' → logprob: -4.897575855255127
    4. '[]
' → logprob: -5.397575855255127
    5. 'b' → logprob: -6.647575855255127
    6. '['' → logprob: -7.772575855255127
    7. ' [' → logprob: -10.147575378417969
    8. '[
' → logprob: -10.147575378417969
    9. '[(' → logprob: -10.897575378417969
    10. '[]

' → logprob: -11.022575378417969

Token 1485: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07796947658061981
    2. '[b' → logprob: -3.577969551086426
    3. 'if' → logprob: -3.702969551086426
    4. '[' → logprob: -4.702969551086426
    5. '[y' → logprob: -5.452969551086426
    6. '[
' → logprob: -5.577969551086426
    7. ' for' → logprob: -6.202969551086426
    8. '   ' → logprob: -6.827969551086426
    9. 'y' → logprob: -7.327969551086426
    10. 'b' → logprob: -7.702969551086426

Token 1486: ' unknown' (ID: 17927)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0443541556596756
    2. 'if' → logprob: -3.919354200363159
    3. '[' → logprob: -4.29435396194458
    4. ' for' → logprob: -5.29435396194458
    5. 'y' → logprob: -6.54435396194458
    6. '   ' → logprob: -6.66935396194458
    7. '[
' → logprob: -6.79435396194458
    8. '[y' → logprob: -7.66935396194458
    9. 'b' → logprob: -8.794354438781738
    10. ' if' → logprob: -9.169354438781738

Token 1487: '_y' (ID: 9410)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764847993850708
    2. ' =' → logprob: -1.3264847993850708
    3. '_bits' → logprob: -2.0764846801757812
    4. '_indices' → logprob: -3.9514846801757812
    5. '_positions' → logprob: -4.451484680175781
    6. 's' → logprob: -5.201484680175781
    7. '_count' → logprob: -5.701484680175781
    8. 'bits' → logprob: -6.576484680175781
    9. '_indexes' → logprob: -6.701484680175781
    10. '_idxs' → logprob: -7.201484680175781

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06985361874103546
    2. ' =' → logprob: -3.4448535442352295
    3. '_bits' → logprob: -3.5698535442352295
    4. '_positions' → logprob: -5.819853782653809
    5. '_indices' → logprob: -6.444853782653809
    6. '_count' → logprob: -7.069853782653809
    7. 's' → logprob: -7.444853782653809
    8. 'bits' → logprob: -8.444853782653809
    9. '_indexes' → logprob: -8.444853782653809
    10. '=[]' → logprob: -8.694853782653809

Token 1489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007550074253231287
    2. '[b' → logprob: -5.632550239562988
    3. '[' → logprob: -6.632550239562988
    4. '[]
' → logprob: -7.007550239562988
    5. '[]' → logprob: -7.132550239562988
    6. 'b' → logprob: -7.507550239562988
    7. ' ' → logprob: -8.507550239562988
    8. '3' → logprob: -10.132550239562988
    9. '[(' → logprob: -10.882550239562988
    10. '[y' → logprob: -10.882550239562988

Token 1490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12472930550575256
    2. '[]' → logprob: -2.8747293949127197
    3. '[' → logprob: -3.4997293949127197
    4. '[b' → logprob: -3.6247293949127197
    5. '[(' → logprob: -6.749729156494141
    6. 'b' → logprob: -7.249729156494141
    7. '[]
' → logprob: -7.374729156494141
    8. '['' → logprob: -7.624729156494141
    9. '[y' → logprob: -8.37472915649414
    10. '3' → logprob: -8.37472915649414

Token 1491: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09484198689460754
    2. ' for' → logprob: -2.469841957092285
    3. '	for' → logprob: -5.719841957092285
    4. '   ' → logprob: -6.094841957092285
    5. '
' → logprob: -9.094841957092285
    6. '=' → logprob: -10.344841957092285
    7. '<|end|>' → logprob: -10.594841957092285
    8. 'i' → logprob: -10.844841957092285
    9. ' =' → logprob: -11.094841957092285
    10. '[' → logprob: -11.219841957092285

Token 1492: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7838708162307739
    2. 'for' → logprob: -1.158870816230774
    3. ' for' → logprob: -2.4088706970214844
    4. '[' → logprob: -3.4088706970214844
    5. ' =' → logprob: -3.4088706970214844
    6. 'b' → logprob: -3.9088706970214844
    7. '```' → logprob: -4.408870697021484
    8. ')' → logprob: -4.533870697021484
    9. '<|end|>' → logprob: -5.408870697021484
    10. '0' → logprob: -5.533870697021484

Token 1493: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08568335324525833
    2. ' for' → logprob: -2.5856833457946777
    3. 'y' (adapté à ' y') → logprob: -5.960683345794678
    4. 'if' → logprob: -6.835683345794678
    5. '=' → logprob: -7.460683345794678
    6. 'count' → logprob: -7.585683345794678
    7. '```' → logprob: -7.585683345794678
    8. '[' → logprob: -7.960683345794678
    9. 'i' → logprob: -8.460683822631836
    10. ' =' → logprob: -8.710683822631836

Token 1494: '_fixed' (ID: 89932)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.008361498825252056
    2. '=' → logprob: -6.383361339569092
    3. '_indices' → logprob: -6.633361339569092
    4. ' =' → logprob: -6.633361339569092
    5. '_vals' → logprob: -6.883361339569092
    6. '_' → logprob: -7.133361339569092
    7. 'bits' → logprob: -7.383361339569092
    8. '_bit' → logprob: -8.25836181640625
    9. '_positions' → logprob: -8.75836181640625
    10. '_chars' → logprob: -9.00836181640625

Token 1495: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03855319321155548
    2. ' =' → logprob: -3.288553237915039
    3. '=[]' → logprob: -8.288553237915039
    4. '_bits' → logprob: -9.288553237915039
    5. '+=' → logprob: -10.038553237915039
    6. '=[' → logprob: -10.163553237915039
    7. '   ' → logprob: -10.913553237915039
    8. ')' → logprob: -11.788553237915039
    9. '[]' → logprob: -12.038553237915039
    10. '=[]
' → logprob: -12.413553237915039

Token 1496: 'ones' (ID: 3617)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.133456751704216
    2. 'vals' → logprob: -2.7584567070007324
    3. 'bits' → logprob: -3.3834567070007324
    4. '+=' → logprob: -4.258456707000732
    5. 'values' → logprob: -5.258456707000732
    6. 'positions' → logprob: -6.133456707000732
    7. '=[]' → logprob: -6.258456707000732
    8. 'indices' → logprob: -6.383456707000732
    9. '_vals' → logprob: -8.13345718383789
    10. 'count' → logprob: -8.38345718383789

Token 1497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06272974610328674
    2. ' =' → logprob: -2.812729835510254
    3. '+=' → logprob: -7.812729835510254
    4. ' +=' → logprob: -8.312729835510254
    5. '=[]' → logprob: -9.312729835510254
    6. '=[' → logprob: -11.937729835510254
    7. '   ' → logprob: -12.062729835510254
    8. '=[]
' → logprob: -12.937729835510254
    9. '[]' → logprob: -13.312729835510254
    10. ')' → logprob: -13.687729835510254

Token 1498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015035520773380995
    2. ' ' → logprob: -6.5015034675598145
    3. 'sum' → logprob: -14.876503944396973
    4. 'b' → logprob: -15.251503944396973
    5. 'False' → logprob: -15.251503944396973
    6. '   ' → logprob: -15.751503944396973
    7. '[' → logprob: -17.001502990722656
    8. '=' → logprob: -17.064002990722656
    9. 'y' → logprob: -17.314002990722656
    10. '[]' → logprob: -17.314002990722656

Token 1499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5252596464706585e-05
    2. 'sum' → logprob: -10.125044822692871
    3. ' ' → logprob: -12.625044822692871
    4. 'b' → logprob: -13.875044822692871
    5. '[' → logprob: -14.875044822692871
    6. 'False' → logprob: -15.625044822692871
    7. '1' → logprob: -16.250045776367188
    8. '[]' → logprob: -16.750045776367188
    9. ' sum' → logprob: -16.875045776367188
    10. '[b' → logprob: -17.000045776367188

Token 1500: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09486225992441177
    2. ' for' → logprob: -2.594862222671509
    3. '=' → logprob: -5.344862461090088
    4. '   ' → logprob: -5.344862461090088
    5. 'if' → logprob: -5.844862461090088
    6. ')' → logprob: -7.219862461090088
    7. '	for' → logprob: -7.594862461090088
    8. ' =' → logprob: -7.844862461090088
    9. '<|end|>' → logprob: -7.844862461090088
    10. ' if' → logprob: -8.21986198425293

Token 1501: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17861464619636536
    2. ' for' → logprob: -1.928614616394043
    3. 'if' → logprob: -5.053614616394043
    4. '```' → logprob: -5.303614616394043
    5. '   ' → logprob: -5.428614616394043
    6. '=' → logprob: -7.678614616394043
    7. ' if' → logprob: -7.678614616394043
    8. ' =' → logprob: -8.053614616394043
    9. '``' → logprob: -8.053614616394043
    10. 'y' → logprob: -8.553614616394043

Token 1502: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01640675775706768
    2. ' for' → logprob: -4.141406536102295
    3. '```' → logprob: -8.141407012939453
    4. 'if' → logprob: -10.391407012939453
    5. 'i' → logprob: -10.891407012939453
    6. 'y' → logprob: -11.516407012939453
    7. '   ' → logprob: -11.766407012939453
    8. '	for' → logprob: -12.891407012939453
    9. '``' → logprob: -13.516407012939453
    10. ')' → logprob: -13.641407012939453

Token 1503: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011465457268059254
    2. 'pos' → logprob: -5.136465549468994
    3. 'idx' → logprob: -5.261465549468994
    4. ' i' → logprob: -8.886465072631836
    5. 'j' → logprob: -9.011465072631836
    6. ' idx' → logprob: -9.886465072631836
    7. ' pos' → logprob: -11.261465072631836
    8. 'index' → logprob: -12.011465072631836
    9. 'bit' → logprob: -13.011465072631836
    10. 'p' → logprob: -14.511465072631836

Token 1504: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740873873233795
    2. 'in' → logprob: -0.9740873575210571
    3. '   ' → logprob: -12.849087715148926
    4. '```' → logprob: -13.224087715148926
    5. '(' → logprob: -13.474087715148926
    6. ',' → logprob: -13.724087715148926
    7. '[' → logprob: -14.099087715148926
    8. '3' → logprob: -14.849087715148926
    9. 'range' → logprob: -14.849087715148926
    10. '
' → logprob: -15.099087715148926

Token 1505: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007914052694104612
    2. ' range' → logprob: -7.250791549682617
    3. '[' → logprob: -10.000791549682617
    4. '(' → logprob: -10.250791549682617
    5. '(range' → logprob: -14.375791549682617
    6. '3' → logprob: -15.750791549682617
    7. '	range' → logprob: -17.625791549682617
    8. '   ' → logprob: -18.875791549682617
    9. ' [' → logprob: -19.250791549682617
    10. ' (' → logprob: -19.750791549682617

Token 1506: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.828512363834307e-05
    2. '(' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.250088691711426
    4. ' ' → logprob: -13.375088691711426
    5. '6' → logprob: -17.50008773803711
    6. '    ' → logprob: -17.62508773803711
    7. '[' → logprob: -18.50008773803711
    8. '```' → logprob: -18.50008773803711
    9. '۳' → logprob: -18.87508773803711
    10. '       ' → logprob: -18.87508773803711

Token 1507: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '(' → logprob: -16.625001907348633
    5. '6' → logprob: -17.562501907348633
    6. ')' → logprob: -18.562501907348633
    7. 'def' → logprob: -18.562501907348633
    8. '    ' → logprob: -18.625001907348633
    9. '۳' → logprob: -18.750001907348633
    10. '３' → logprob: -18.812501907348633

Token 1508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.135588139295578
    2. '3' → logprob: -2.1355881690979004
    3. '(' → logprob: -4.7605881690979
    4. '+' → logprob: -10.260587692260742
    5. ' ,' → logprob: -11.385587692260742
    6. '   ' → logprob: -12.885587692260742
    7. '
' → logprob: -13.135587692260742
    8. ' ' → logprob: -13.385587692260742
    9. '```' → logprob: -13.385587692260742
    10. '[' → logprob: -13.635587692260742

Token 1509: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.8125
    3. '...' → logprob: -17.1875
    4. 'len' → logprob: -17.1875
    5. '5' → logprob: -17.25
    6. '3' → logprob: -17.8125
    7. '   ' → logprob: -18.125
    8. '=' → logprob: -18.1875
    9. '​' → logprob: -18.3125
    10. '६' → logprob: -18.5625

Token 1510: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3968082368373871
    2. '):
' → logprob: -1.1468082666397095
    3. '   ' → logprob: -5.77180814743042
    4. '):' → logprob: -5.89680814743042
    5. ':
' → logprob: -6.64680814743042
    6. ':' → logprob: -6.89680814743042
    7. '       ' → logprob: -7.52180814743042
    8. '```' → logprob: -7.64680814743042
    9. '+' → logprob: -8.896808624267578
    10. '=' → logprob: -9.396808624267578

Token 1511: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10110673308372498
    2. '       ' → logprob: -2.726106643676758
    3. 'if' → logprob: -3.726106643676758
    4. ' if' → logprob: -5.351106643676758
    5. '```' → logprob: -6.351106643676758
    6. 'token' → logprob: -10.101106643676758
    7. '	if' → logprob: -10.351106643676758
    8. '``' → logprob: -10.476106643676758
    9. '`' → logprob: -12.101106643676758
    10. 'tokens' → logprob: -12.351106643676758

Token 1512: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005783735308796167
    2. ' if' → logprob: -5.255783557891846
    3. '   ' → logprob: -7.755783557891846
    4. '       ' → logprob: -9.130784034729004
    5. '```' → logprob: -12.255784034729004
    6. 'c' (adapté à ' c') → logprob: -12.505784034729004
    7. 'token' → logprob: -12.880784034729004
    8. '	if' → logprob: -14.630784034729004
    9. 'def' → logprob: -15.130784034729004
    10. 'y' → logprob: -15.255784034729004

Token 1513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3661405146121979
    2. ' =' → logprob: -1.6161404848098755
    3. 'if' → logprob: -2.366140604019165
    4. ' if' → logprob: -4.491140365600586
    5. '```' → logprob: -7.241140365600586
    6. '+=' → logprob: -8.116140365600586
    7. 'f' → logprob: -8.116140365600586
    8. '   ' → logprob: -8.241140365600586
    9. '.append' → logprob: -8.616140365600586
    10. '=b' → logprob: -8.866140365600586

Token 1514: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.517272024415433e-05
    2. ' b' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.625075340270996
    4. '```' → logprob: -16.75007438659668
    5. '       ' → logprob: -17.87507438659668
    6. '	b' → logprob: -18.37507438659668
    7. '`' → logprob: -18.50007438659668
    8. ')b' → logprob: -19.12507438659668
    9. ''b' → logprob: -20.25007438659668
    10. ' ' → logprob: -20.25007438659668

Token 1515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '```' → logprob: -16.0
    4. 'b' → logprob: -17.0
    5. 'i' → logprob: -19.5
    6. '
' → logprob: -19.5
    7. '`' → logprob: -19.75
    8. '   ' → logprob: -20.125
    9. '１' → logprob: -20.25
    10. ' ' → logprob: -20.5

Token 1516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.000008583068848
    3. '[
' → logprob: -13.500008583068848
    4. '[c' → logprob: -14.250008583068848
    5. '[I' → logprob: -15.750008583068848
    6. '```' → logprob: -16.125009536743164
    7. '[]' → logprob: -17.125009536743164
    8. 'i' → logprob: -17.375009536743164
    9. 'c' → logprob: -18.000009536743164
    10. '<|end|>' → logprob: -18.000009536743164

Token 1517: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08809836208820343
    2. ']
' → logprob: -2.8380982875823975
    3. ']==' → logprob: -3.8380982875823975
    4. ']=='' → logprob: -5.588098526000977
    5. ']:
' → logprob: -8.838098526000977
    6. '==' → logprob: -9.588098526000977
    7. '']' → logprob: -9.838098526000977
    8. ')' → logprob: -10.213098526000977
    9. '
' → logprob: -10.588098526000977
    10. '       ' → logprob: -10.838098526000977

Token 1518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008261834154836833
    2. ' if' → logprob: -7.500826358795166
    3. 'if' → logprob: -8.875825881958008
    4. '<|end|>' → logprob: -9.750825881958008
    5. '   ' → logprob: -10.375825881958008
    6. '```' → logprob: -11.500825881958008
    7. '        
' → logprob: -12.250825881958008
    8. '=' → logprob: -12.500825881958008
    9. ' ' → logprob: -12.750825881958008
    10. '	if' → logprob: -12.750825881958008

Token 1519: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017378974007442594
    2. ' if' → logprob: -7.00173807144165
    3. '   ' → logprob: -7.62673807144165
    4. '       ' → logprob: -8.001737594604492
    5. '	if' → logprob: -12.751737594604492
    6. '```' → logprob: -13.751737594604492
    7. 'If' → logprob: -17.876737594604492
    8. '     ' → logprob: -18.126737594604492
    9. '    ' → logprob: -18.251737594604492
    10. ' ' → logprob: -18.251737594604492

Token 1520: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00280558317899704
    2. ' c' → logprob: -5.877805709838867
    3. '   ' → logprob: -14.752805709838867
    4. ' ' → logprob: -16.002805709838867
    5. '	c' → logprob: -16.627805709838867
    6. '  ' → logprob: -16.627805709838867
    7. '
' → logprob: -17.877805709838867
    8. '    ' → logprob: -18.127805709838867
    9. '(c' → logprob: -18.252805709838867
    10. '       ' → logprob: -18.252805709838867

Token 1521: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06032400578260422
    2. '=='' → logprob: -2.93532395362854
    3. ' ==' → logprob: -5.685324192047119
    4. 'in' → logprob: -6.560324192047119
    5. '==
' → logprob: -8.435323715209961
    6. ' in' → logprob: -8.810323715209961
    7. '!=' → logprob: -9.935323715209961
    8. '=="' → logprob: -10.435323715209961
    9. '```' → logprob: -10.560323715209961
    10. '=' → logprob: -10.685323715209961

Token 1522: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.011118803173303604
    2. ''' → logprob: -4.5111188888549805
    3. 'x' → logprob: -10.88611888885498
    4. '1' → logprob: -11.01111888885498
    5. ' '' → logprob: -11.01111888885498
    6. '"x' → logprob: -11.88611888885498
    7. '
' → logprob: -12.13611888885498
    8. ''y' → logprob: -13.38611888885498
    9. '('' → logprob: -14.26111888885498
    10. '   ' → logprob: -14.26111888885498

Token 1523: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07244130969047546
    2. ''x' → logprob: -2.697441339492798
    3. ''' → logprob: -6.572441101074219
    4. '1' → logprob: -7.197441101074219
    5. '?' → logprob: -8.322441101074219
    6. '0' → logprob: -9.697441101074219
    7. ''?' → logprob: -10.572441101074219
    8. '"x' → logprob: -11.697441101074219
    9. ' x' → logprob: -12.697441101074219
    10. '?'' → logprob: -12.947441101074219

Token 1524: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.45212000608444214
    2. ':
' → logprob: -1.202120065689087
    3. '       ' → logprob: -3.952120065689087
    4. ':' → logprob: -4.452119827270508
    5. '':' → logprob: -4.577119827270508
    6. '):
' → logprob: -4.952119827270508
    7. ''):
' → logprob: -4.952119827270508
    8. '           ' → logprob: -5.827119827270508
    9. ' or' → logprob: -5.952119827270508
    10. ''' → logprob: -6.702119827270508

Token 1525: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006183083169162273
    2. '           ' → logprob: -5.38118314743042
    3. 'y' → logprob: -7.00618314743042
    4. '```' → logprob: -8.131182670593262
    5. ' y' → logprob: -8.881182670593262
    6. '   ' → logprob: -9.381182670593262
    7. '+' → logprob: -10.256182670593262
    8. ',y' → logprob: -11.006182670593262
    9. '        ' → logprob: -11.131182670593262
    10. '      ' → logprob: -11.631182670593262

Token 1526: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0005588700296357274
    2. '       ' → logprob: -8.250558853149414
    3. ' y' → logprob: -8.375558853149414
    4. '           ' → logprob: -9.875558853149414
    5. '   ' → logprob: -11.250558853149414
    6. '	y' → logprob: -13.625558853149414
    7. '```' → logprob: -14.375558853149414
    8. '+' → logprob: -14.875558853149414
    9. '               ' → logprob: -16.000558853149414
    10. '+y' → logprob: -16.375558853149414

Token 1527: '_fixed' (ID: 89932)
  Prédit: '_fixed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fixed' → logprob: -5.2762428822461516e-05
    2. '_bits' → logprob: -10.000052452087402
    3. 'fixed' → logprob: -11.875052452087402
    4. '_FIXED' → logprob: -15.375052452087402
    5. 'Fixed' → logprob: -16.50005340576172
    6. '固定' → logprob: -18.50005340576172
    7. '=' → logprob: -19.12505340576172
    8. 'bits' → logprob: -19.37505340576172
    9. '_known' → logprob: -19.37505340576172
    10. '-fixed' → logprob: -19.37505340576172

Token 1528: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015354545321315527
    2. 'ones' → logprob: -6.501535415649414
    3. '_bits' → logprob: -10.626535415649414
    4. '=' → logprob: -12.751535415649414
    5. 'bits' → logprob: -12.876535415649414
    6. ' ones' → logprob: -13.501535415649414
    7. '.ones' → logprob: -14.751535415649414
    8. '
' → logprob: -14.876535415649414
    9. '_one' → logprob: -15.001535415649414
    10. 'one' → logprob: -15.501535415649414

Token 1529: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.981667537620524e-06
    2. 'one' → logprob: -13.750001907348633
    3. 'bits' → logprob: -15.000001907348633
    4. '1' → logprob: -15.125001907348633
    5. ' ones' → logprob: -15.875001907348633
    6. 'ons' → logprob: -17.250001907348633
    7. 'ONES' → logprob: -17.250001907348633
    8. 'o' → logprob: -17.625001907348633
    9. '.ones' → logprob: -17.625001907348633
    10. '0' → logprob: -18.000001907348633

Token 1530: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004583135014399886
    2. ' +=' → logprob: -7.750458240509033
    3. '=' → logprob: -10.500458717346191
    4. ']+=' → logprob: -16.250457763671875
    5. '   ' → logprob: -18.875457763671875
    6. '+' → logprob: -19.625457763671875
    7. '```' → logprob: -19.625457763671875
    8. ' =' → logprob: -20.375457763671875
    9. '       ' → logprob: -21.375457763671875
    10. '+="' → logprob: -21.500457763671875

Token 1531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '```' → logprob: -19.750017166137695
    5. '`' → logprob: -21.625017166137695
    6. '0' → logprob: -21.625017166137695
    7. '+' → logprob: -21.875017166137695
    8. '  ' → logprob: -22.375017166137695
    9. '       ' → logprob: -23.437517166137695
    10. '2' → logprob: -23.437517166137695

Token 1532: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1533: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023506345227360725
    2. 'elif' → logprob: -3.8985064029693604
    3. '<|end|>' → logprob: -6.648506164550781
    4. 'continue' → logprob: -7.148506164550781
    5. '           ' → logprob: -7.648506164550781
    6. '   ' → logprob: -8.773506164550781
    7. ' elif' → logprob: -9.273506164550781
    8. '```' → logprob: -9.648506164550781
    9. ' continue' → logprob: -11.148506164550781
    10. '<|end|>' → logprob: -11.148506164550781

Token 1534: ' y' (ID: 342)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.030943168327212334
    2. 'elif' → logprob: -3.9059431552886963
    3. '       ' → logprob: -4.905943393707275
    4. '           ' → logprob: -6.905943393707275
    5. ' continue' → logprob: -7.030943393707275
    6. 'unknown' → logprob: -7.405943393707275
    7. 'return' → logprob: -9.405942916870117
    8. 'continu' → logprob: -9.655942916870117
    9. 'contin' → logprob: -10.155942916870117
    10. 'if' → logprob: -10.155942916870117

Token 1535: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.05211874842643738
    2. '_fixed' → logprob: -3.0521187782287598
    3. '_unknown' → logprob: -7.30211877822876
    4. '_known' → logprob: -7.30211877822876
    5. 'bits' → logprob: -7.55211877822876
    6. '#' → logprob: -7.80211877822876
    7. '_bit' → logprob: -8.177118301391602
    8. 'fixed' → logprob: -8.177118301391602
    9. '=' → logprob: -8.677118301391602
    10. '_' → logprob: -9.927118301391602

Token 1536: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.016982372850179672
    2. 'vals' → logprob: -4.141982555389404
    3. '.append' → logprob: -7.641982555389404
    4. '=' → logprob: -9.016982078552246
    5. '_values' → logprob: -9.641982078552246
    6. '_bits' → logprob: -10.141982078552246
    7. 'Vals' → logprob: -10.266982078552246
    8. 'append' → logprob: -10.266982078552246
    9. '```' → logprob: -10.391982078552246
    10. '_val' → logprob: -10.516982078552246

Token 1537: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032154994551092386
    2. '.' → logprob: -6.003215312957764
    3. 'append' → logprob: -7.253215312957764
    4. '=' → logprob: -10.503215789794922
    5. '_append' → logprob: -13.753215789794922
    6. '+=' → logprob: -14.253215789794922
    7. '.app' → logprob: -14.378215789794922
    8. '.extend' → logprob: -14.503215789794922
    9. '.=' → logprob: -14.628215789794922
    10. ' append' → logprob: -15.253215789794922

Token 1538: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15962861478328705
    2. '(' → logprob: -2.2846286296844482
    3. ''' → logprob: -3.6596286296844482
    4. '('' → logprob: -4.534628391265869
    5. 'True' → logprob: -5.034628391265869
    6. '(True' → logprob: -5.909628391265869
    7. ' ' → logprob: -12.159628868103027
    8. 'c' → logprob: -12.534628868103027
    9. '(c' → logprob: -12.534628868103027
    10. ' (' → logprob: -12.909628868103027

Token 1539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043917540460824966
    2. ''' → logprob: -3.543917655944824
    3. 'True' → logprob: -4.293917655944824
    4. '(' → logprob: -8.168917655944824
    5. '(True' → logprob: -10.168917655944824
    6. '('' → logprob: -10.543917655944824
    7. '"' → logprob: -10.918917655944824
    8. ' ' → logprob: -11.168917655944824
    9. ''s' → logprob: -12.043917655944824
    10. '[' → logprob: -12.043917655944824

Token 1540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015212877187877893
    2. ')
' → logprob: -6.501521110534668
    3. ' )' → logprob: -11.501521110534668
    4. '
' → logprob: -12.751521110534668
    5. '<|end|>' → logprob: -13.501521110534668
    6. '')' → logprob: -14.001521110534668
    7. '       ' → logprob: -14.126521110534668
    8. '),' → logprob: -14.251521110534668
    9. 'elif' → logprob: -14.751521110534668
    10. '```' → logprob: -15.501521110534668

Token 1541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002705250633880496
    2. 'elif' → logprob: -6.627705097198486
    3. '<|end|>' → logprob: -7.127705097198486
    4. '```' → logprob: -7.627705097198486
    5. 'else' → logprob: -11.252705574035645
    6. '           ' → logprob: -11.252705574035645
    7. '   ' → logprob: -11.377705574035645
    8. ' elif' → logprob: -11.502705574035645
    9. '	elif' → logprob: -12.127705574035645
    10. '``' → logprob: -12.127705574035645

Token 1542: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5762254595756531
    2. '       ' → logprob: -0.8262254595756531
    3. ' elif' → logprob: -8.326225280761719
    4. '	elif' → logprob: -10.576225280761719
    5. '   ' → logprob: -11.826225280761719
    6. 'else' → logprob: -12.326225280761719
    7. '```' → logprob: -12.951225280761719
    8. '	' → logprob: -14.326225280761719
    9. '#elif' → logprob: -14.326225280761719
    10. ')' → logprob: -14.826225280761719

Token 1543: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019287518225610256
    2. ' c' → logprob: -6.251928806304932
    3. '	c' → logprob: -17.001928329467773
    4. '           ' → logprob: -17.751928329467773
    5. '   ' → logprob: -17.876928329467773
    6. '       ' → logprob: -17.876928329467773
    7. ')c' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.251928329467773
    9. '(c' → logprob: -18.376928329467773
    10. '$c' → logprob: -19.501928329467773

Token 1544: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25662922859191895
    2. ' ==' → logprob: -1.506629228591919
    3. '=='' → logprob: -5.50662899017334
    4. ' in' → logprob: -7.50662899017334
    5. 'in' → logprob: -10.38162899017334
    6. ' =='' → logprob: -10.50662899017334
    7. '=' → logprob: -12.00662899017334
    8. '[' → logprob: -12.50662899017334
    9. ']==' → logprob: -13.38162899017334
    10. ''' → logprob: -13.50662899017334

Token 1545: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0005345634999684989
    2. 'x' → logprob: -8.375535011291504
    3. ''' → logprob: -8.500535011291504
    4. '0' → logprob: -9.500535011291504
    5. ' '' → logprob: -11.625535011291504
    6. '"x' → logprob: -12.500535011291504
    7. '?' → logprob: -12.875535011291504
    8. ' ' → logprob: -13.000535011291504
    9. '   ' → logprob: -13.750535011291504
    10. '`' → logprob: -13.875535011291504

Token 1546: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000639169302303344
    2. ''x' → logprob: -7.375638961791992
    3. '0' → logprob: -11.625638961791992
    4. ''' → logprob: -12.750638961791992
    5. '?' → logprob: -14.625638961791992
    6. '"x' → logprob: -15.625638961791992
    7. ' x' → logprob: -16.500638961791992
    8. 'unknown' → logprob: -16.625638961791992
    9. '1' → logprob: -17.375638961791992
    10. '['' → logprob: -17.625638961791992

Token 1547: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7180221676826477
    2. ':
' → logprob: -0.8430221676826477
    3. '<|end|>' → logprob: -3.468022108078003
    4. '       ' → logprob: -3.593022108078003
    5. '           ' → logprob: -5.718022346496582
    6. '':
' → logprob: -5.843022346496582
    7. '<|end|>' → logprob: -6.218022346496582
    8. '':' → logprob: -6.218022346496582
    9. '):
' → logprob: -6.343022346496582
    10. '   ' → logprob: -6.593022346496582

Token 1548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15332984924316406
    2. '       ' → logprob: -2.028329849243164
    3. 'y' → logprob: -6.153329849243164
    4. ':
' → logprob: -6.153329849243164
    5. ' y' → logprob: -6.528329849243164
    6. ':' → logprob: -6.903329849243164
    7. '<|end|>' → logprob: -7.028329849243164
    8. '[' → logprob: -7.528329849243164
    9. ',' → logprob: -7.653329849243164
    10. '   ' → logprob: -8.278329849243164

Token 1549: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.39977455139160156
    2. ' y' → logprob: -1.1497745513916016
    3. '0' → logprob: -4.399774551391602
    4. '           ' → logprob: -8.024774551391602
    5. '       ' → logprob: -8.649774551391602
    6. ' ' → logprob: -11.399774551391602
    7. 'continue' → logprob: -12.274774551391602
    8. '	y' → logprob: -12.399774551391602
    9. '1' → logprob: -12.774774551391602
    10. 'None' → logprob: -13.274774551391602

Token 1550: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.00015502817404922098
    2. '_fixed' → logprob: -8.875155448913574
    3. 'bits' → logprob: -12.625155448913574
    4. 'fixed' → logprob: -12.750155448913574
    5. '=' → logprob: -13.125155448913574
    6. '.append' → logprob: -13.250155448913574
    7. '_BITS' → logprob: -14.000155448913574
    8. 'Bits' → logprob: -14.250155448913574
    9. '_bit' → logprob: -14.625155448913574
    10. '   ' → logprob: -14.750155448913574

Token 1551: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0002560945285949856
    2. '.append' → logprob: -8.625256538391113
    3. 'vals' → logprob: -10.125256538391113
    4. '_bits' → logprob: -11.250256538391113
    5. '=' → logprob: -12.000256538391113
    6. '       ' → logprob: -12.375256538391113
    7. 'append' → logprob: -12.500256538391113
    8. '           ' → logprob: -13.125256538391113
    9. 'Vals' → logprob: -13.500256538391113
    10. '_values' → logprob: -13.500256538391113

Token 1552: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005230080569162965
    2. '.' → logprob: -7.750523090362549
    3. 'append' → logprob: -9.50052261352539
    4. '+=' → logprob: -11.87552261352539
    5. '.extend' → logprob: -12.00052261352539
    6. '       ' → logprob: -13.12552261352539
    7. ' .' → logprob: -14.25052261352539
    8. ' +=' → logprob: -14.62552261352539
    9. '_append' → logprob: -15.37552261352539
    10. '   ' → logprob: -15.87552261352539

Token 1553: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062017086893320084
    2. '(' → logprob: -2.8120172023773193
    3. ' ' → logprob: -10.062017440795898
    4. ' (' → logprob: -12.062017440795898
    5. '   ' → logprob: -14.687017440795898
    6. '=' → logprob: -15.187017440795898
    7. ',' → logprob: -16.0620174407959
    8. '[' → logprob: -16.5620174407959
    9. '  ' → logprob: -16.9370174407959
    10. ')' → logprob: -17.4370174407959

Token 1554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -20.25
    4. '۰' → logprob: -20.25
    5. '00' → logprob: -21.4375
    6. '000' → logprob: -21.75
    7. '  ' → logprob: -22.25
    8. '=' → logprob: -22.25
    9. '(' → logprob: -22.375
    10. ')' → logprob: -22.8125

Token 1555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005601812736131251
    2. '<|end|>' → logprob: -8.37555980682373
    3. '       ' → logprob: -8.62555980682373
    4. ')
' → logprob: -9.37555980682373
    5. '')' → logprob: -11.00055980682373
    6. '<|end|>' → logprob: -11.37555980682373
    7. '   ' → logprob: -11.75055980682373
    8. ')return' → logprob: -11.87555980682373
    9. ' )' → logprob: -12.00055980682373
    10. '```' → logprob: -12.37555980682373

Token 1556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14091400802135468
    2. 'else' → logprob: -2.765913963317871
    3. ' else' → logprob: -4.140913963317871
    4. '```' → logprob: -4.140913963317871
    5. '<|end|>' → logprob: -4.265913963317871
    6. 'elif' → logprob: -4.515913963317871
    7. '   ' → logprob: -5.765913963317871
    8. '           ' → logprob: -5.765913963317871
    9. '	elif' → logprob: -6.890913963317871
    10. '...' → logprob: -7.140913963317871

Token 1557: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14204217493534088
    2. 'elif' → logprob: -2.1420421600341797
    3. 'else' (adapté à ' else') → logprob: -4.26704216003418
    4. ' elif' → logprob: -7.51704216003418
    5. ' else' → logprob: -8.14204216003418
    6. '   ' → logprob: -9.64204216003418
    7. '	elif' → logprob: -10.51704216003418
    8. '	' → logprob: -10.51704216003418
    9. '```' → logprob: -11.39204216003418
    10. '	else' → logprob: -13.51704216003418

Token 1558: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6220678687095642
    2. '           ' → logprob: -2.122067928314209
    3. '==' → logprob: -2.247067928314209
    4. ' ==' → logprob: -2.372067928314209
    5. ':
' → logprob: -3.497067928314209
    6. ' =' → logprob: -3.622067928314209
    7. '       ' → logprob: -3.622067928314209
    8. '=' → logprob: -3.747067928314209
    9. ' if' → logprob: -4.497067928314209
    10. 'if' → logprob: -5.247067928314209

Token 1559: ' #' (ID: 1069)
  Prédit: ' unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.656185507774353
    2. 'unknown' → logprob: -1.406185507774353
    3. '           ' → logprob: -1.656185507774353
    4. '       ' → logprob: -3.7811856269836426
    5. '   ' → logprob: -4.156185626983643
    6. ' ' → logprob: -7.531185626983643
    7. 'Unknown' → logprob: -7.531185626983643
    8. '[' → logprob: -7.656185626983643
    9. ' y' → logprob: -7.781185626983643
    10. '```' → logprob: -7.906185626983643

Token 1560: ' x' (ID: 1215)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.08030223101377487
    2. 'x' → logprob: -2.5803022384643555
    3. ' x' → logprob: -6.8303022384643555
    4. ' unknown' → logprob: -8.830302238464355
    5. 'unknown' → logprob: -10.080302238464355
    6. ' '' → logprob: -10.205302238464355
    7. '"x' → logprob: -10.455302238464355
    8. ''' → logprob: -10.580302238464355
    9. ''y' → logprob: -11.080302238464355
    10. ' ' → logprob: -11.955302238464355

Token 1561: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3228069543838501
    2. ' x' → logprob: -2.3228068351745605
    3. '<|end|>' → logprob: -2.9478068351745605
    4. '       ' → logprob: -3.6978068351745605
    5. '<|end|>' → logprob: -4.1978068351745605
    6. '           ' → logprob: -4.1978068351745605
    7. ':' → logprob: -4.5728068351745605
    8. ':
' → logprob: -4.6978068351745605
    9. ')' → logprob: -4.8228068351745605
    10. '   ' → logprob: -4.9478068351745605

Token 1562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04121061787009239
    2. '       ' → logprob: -3.291210651397705
    3. '```' → logprob: -7.291210651397705
    4. '   ' → logprob: -7.541210651397705
    5. 'x' → logprob: -7.541210651397705
    6. '	       ' → logprob: -8.166210174560547
    7. '		' → logprob: -8.166210174560547
    8. ' x' → logprob: -8.541210174560547
    9. '               ' → logprob: -9.416210174560547
    10. ' y' → logprob: -9.666210174560547

Token 1563: ' y' (ID: 342)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.0001105762057704851
    2. ' unknown' → logprob: -9.250110626220703
    3. '           ' → logprob: -12.125110626220703
    4. '   ' → logprob: -12.750110626220703
    5. 'y' (adapté à ' y') → logprob: -13.250110626220703
    6. 'x' → logprob: -13.625110626220703
    7. '1' → logprob: -13.875110626220703
    8. '0' → logprob: -14.250110626220703
    9. '
' → logprob: -14.875110626220703
    10. '```' → logprob: -15.125110626220703

Token 1564: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -2.3557529857498594e-05
    2. 'bits' → logprob: -10.87502384185791
    3. '_tokens' → logprob: -13.62502384185791
    4. 'Bits' → logprob: -14.00002384185791
    5. '_unknown' → logprob: -14.37502384185791
    6. 'unknown' → logprob: -14.50002384185791
    7. '_BITS' → logprob: -15.00002384185791
    8. '```' → logprob: -15.25002384185791
    9. '_fixed' → logprob: -15.50002384185791
    10. '=' → logprob: -15.87502384185791

Token 1565: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0014707031659781933
    2. '_bits' → logprob: -7.251470565795898
    3. 'vals' → logprob: -7.251470565795898
    4. '=' → logprob: -11.251470565795898
    5. 'bits' → logprob: -11.376470565795898
    6. '
' → logprob: -12.251470565795898
    7. '```' → logprob: -12.251470565795898
    8. 's' → logprob: -12.376470565795898
    9. 'v' → logprob: -13.501470565795898
    10. '(vals' → logprob: -13.626470565795898

Token 1566: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.30005842447280884
    2. '+=' → logprob: -1.425058364868164
    3. 'append' → logprob: -4.675058364868164
    4. '=' → logprob: -5.300058364868164
    5. '_vals' → logprob: -6.175058364868164
    6. ' +=' → logprob: -6.925058364868164
    7. '_append' → logprob: -7.425058364868164
    8. '+' → logprob: -7.925058364868164
    9. '.' → logprob: -9.050058364868164
    10. '_bits' → logprob: -9.425058364868164

Token 1567: '(-' (ID: 8087)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6223741173744202
    2. '-' → logprob: -1.1223740577697754
    3. '(None' → logprob: -2.2473740577697754
    4. '2' → logprob: -3.9973740577697754
    5. ''x' → logprob: -5.497374057769775
    6. '(-' → logprob: -5.497374057769775
    7. 'x' → logprob: -5.872374057769775
    8. '(' → logprob: -7.372374057769775
    9. ''' → logprob: -7.497374057769775
    10. '0' → logprob: -7.622374057769775

Token 1568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.75
    3. ' ' → logprob: -16.25
    4. '۱' → logprob: -18.5
    5. '   ' → logprob: -19.4375
    6. '=' → logprob: -19.8125
    7. '-' → logprob: -19.9375
    8. '3' → logprob: -20.0625
    9. '```' → logprob: -20.0625
    10. '
' → logprob: -20.25

Token 1569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002854328602552414
    2. '<|end|>' → logprob: -5.877854347229004
    3. '<|end|>' → logprob: -10.752854347229004
    4. '')' → logprob: -12.002854347229004
    5. ' )' → logprob: -12.127854347229004
    6. ')
' → logprob: -12.127854347229004
    7. ')return' → logprob: -13.002854347229004
    8. ')}' → logprob: -13.752854347229004
    9. '),' → logprob: -13.752854347229004
    10. ')#' → logprob: -13.877854347229004

Token 1570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6097154021263123
    2. '<|end|>' → logprob: -0.8597154021263123
    3. '<|end|>' → logprob: -4.109715461730957
    4. '   ' → logprob: -5.234715461730957
    5. '       ' → logprob: -5.859715461730957
    6. '```' → logprob: -6.734715461730957
    7. ' unknown' → logprob: -7.109715461730957
    8. ',' → logprob: -7.109715461730957
    9. 'Unknown' → logprob: -7.359715461730957
    10. '          ' → logprob: -7.609715461730957

Token 1571: ' unknown' (ID: 17927)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02762117236852646
    2. 'unknown' (adapté à ' unknown') → logprob: -3.652621269226074
    3. ' unknown' → logprob: -7.527621269226074
    4. '   ' → logprob: -7.527621269226074
    5. '       ' → logprob: -9.277621269226074
    6. '               ' → logprob: -9.402621269226074
    7. '          ' → logprob: -10.652621269226074
    8. '            ' → logprob: -11.152621269226074
    9. 'Unknown' → logprob: -12.277621269226074
    10. '         ' → logprob: -12.402621269226074

Token 1572: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -8.482821431243792e-05
    2. 'y' → logprob: -10.12508487701416
    3. '_bits' → logprob: -11.00008487701416
    4. 's' → logprob: -11.12508487701416
    5. '_' → logprob: -11.87508487701416
    6. '_x' → logprob: -12.37508487701416
    7. '```' → logprob: -15.12508487701416
    8. '=' → logprob: -15.25008487701416
    9. '\' → logprob: -15.37508487701416
    10. '_u' → logprob: -15.62508487701416

Token 1573: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07899609208106995
    2. ' +=' → logprob: -2.578996181488037
    3. '=' → logprob: -9.203995704650879
    4. ']+=' → logprob: -12.328995704650879
    5. ' =' → logprob: -14.203995704650879
    6. '+' → logprob: -15.328995704650879
    7. '+='' → logprob: -15.578995704650879
    8. '+=(' → logprob: -16.703996658325195
    9. '```' → logprob: -17.078996658325195
    10. '+="' → logprob: -18.328996658325195

Token 1574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '...' → logprob: -17.125059127807617
    4. '```' → logprob: -17.125059127807617
    5. 'unknown' → logprob: -17.375059127807617
    6. 'x' → logprob: -17.375059127807617
    7. '7' → logprob: -17.500059127807617
    8. '<|end|>' → logprob: -17.750059127807617
    9. '0' → logprob: -18.000059127807617
    10. '   ' → logprob: -18.000059127807617

Token 1575: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44527995586395264
    2. '
' → logprob: -1.6952799558639526
    3. '<|end|>' → logprob: -2.195280075073242
    4. ')' → logprob: -4.320280075073242
    5. '```' → logprob: -4.820280075073242
    6. '<|end|>' → logprob: -5.070280075073242
    7. ' if' → logprob: -5.070280075073242
    8. '#' → logprob: -5.070280075073242
    9. 'from' → logprob: -6.070280075073242
    10. 'Calculate' → logprob: -6.320280075073242

Token 1576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21620149910449982
    2. '```' → logprob: -2.4662015438079834
    3. ' if' → logprob: -3.5912015438079834
    4. 'if' → logprob: -4.341201305389404
    5. '
' → logprob: -4.466201305389404
    6. ')' → logprob: -4.591201305389404
    7. '       ' → logprob: -4.966201305389404
    8. 'count' → logprob: -5.341201305389404
    9. 'def' → logprob: -5.466201305389404
    10. 'from' → logprob: -5.591201305389404

Token 1577: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7198684215545654
    2. '   ' → logprob: -1.7198684215545654
    3. 'if' → logprob: -1.8448684215545654
    4. '#' (adapté à ' #') → logprob: -1.9698684215545654
    5. 'from' → logprob: -5.0948686599731445
    6. 'rest' → logprob: -5.3448686599731445
    7. 'possible' → logprob: -5.4698686599731445
    8. 'def' → logprob: -5.7198686599731445
    9. 'num' → logprob: -6.0948686599731445
    10. 'count' → logprob: -6.0948686599731445

Token 1578: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20394591987133026
    2. 'total' → logprob: -2.4539458751678467
    3. '   ' → logprob: -2.9539458751678467
    4. '#' → logprob: -3.4539458751678467
    5. 'from' → logprob: -5.078946113586426
    6. 'possible' → logprob: -5.953946113586426
    7. 'unknown' → logprob: -6.578946113586426
    8. 'all' → logprob: -7.328946113586426
    9. 'ways' → logprob: -7.453946113586426
    10. 'import' → logprob: -7.453946113586426

Token 1579: ' have' (ID: 679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7493953704833984
    2. 'assert' → logprob: -1.9993953704833984
    3. 'def' → logprob: -2.6243953704833984
    4. 'return' → logprob: -2.6243953704833984
    5. '   ' → logprob: -2.8743953704833984
    6. 'if' → logprob: -3.2493953704833984
    7. 'not' → logprob: -3.4993953704833984
    8. 'ensure' → logprob: -3.7493953704833984
    9. 'from' → logprob: -3.9993953704833984
    10. 'continue' → logprob: -4.249395370483398

Token 1580: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.2109680324792862
    2. ' at' → logprob: -1.710968017578125
    3. 'unknown' → logprob: -5.460968017578125
    4. 'y' → logprob: -6.085968017578125
    5. ' y' → logprob: -6.710968017578125
    6. ' unknown' → logprob: -6.960968017578125
    7. '   ' → logprob: -8.585968017578125
    8. '>' → logprob: -8.710968017578125
    9. 'not' → logprob: -9.210968017578125
    10. '1' → logprob: -9.710968017578125

Token 1581: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0051873899064958096
    2. ' least' → logprob: -5.505187511444092
    3. 'at' → logprob: -7.130187511444092
    4. 'lease' → logprob: -9.130187034606934
    5. 'east' → logprob: -9.505187034606934
    6. 'lest' → logprob: -10.005187034606934
    7. 'le' → logprob: -10.880187034606934
    8. '_le' → logprob: -11.255187034606934
    9. 'Least' → logprob: -11.630187034606934
    10. 'last' → logprob: -12.255187034606934

Token 1582: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.19181743264198303
    2. '1' → logprob: -2.44181752204895
    3. ' one' → logprob: -2.44181752204895
    4. ' ' → logprob: -7.691817283630371
    5. 'y' → logprob: -10.566817283630371
    6. 'unknown' → logprob: -10.691817283630371
    7. '_one' → logprob: -10.816817283630371
    8. ' y' → logprob: -12.316817283630371
    9. '   ' → logprob: -12.816817283630371
    10. '
' → logprob: -13.191817283630371

Token 1583: ' y' (ID: 342)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6217904686927795
    2. '1' → logprob: -1.1217904090881348
    3. 'y' → logprob: -2.8717904090881348
    4. ' one' → logprob: -3.3717904090881348
    5. 'x' → logprob: -3.8717904090881348
    6. ' y' → logprob: -4.996790409088135
    7. 'unknown' → logprob: -5.121790409088135
    8. ' ' → logprob: -5.871790409088135
    9. '```' → logprob: -6.621790409088135
    10. 'known' → logprob: -6.746790409088135

Token 1584: ' bit' (ID: 3546)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.6862202882766724
    2. '_bit' → logprob: -1.0612202882766724
    3. 'bit' → logprob: -2.311220169067383
    4. '_' → logprob: -3.936220169067383
    5. '_one' → logprob: -4.061220169067383
    6. 'bits' → logprob: -5.186220169067383
    7. '_set' → logprob: -6.061220169067383
    8. '1' → logprob: -6.686220169067383
    9. 'one' → logprob: -7.061220169067383
    10. '   ' → logprob: -7.186220169067383

Token 1585: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2762637138366699
    2. 'set' → logprob: -2.02626371383667
    3. '1' → logprob: -3.52626371383667
    4. '   ' → logprob: -4.02626371383667
    5. 'is' → logprob: -4.40126371383667
    6. 'if' → logprob: -4.65126371383667
    7. '_set' → logprob: -4.90126371383667
    8. ' =' → logprob: -5.52626371383667
    9. 'with' → logprob: -5.65126371383667
    10. ' set' → logprob: -5.77626371383667

Token 1586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009144435753114522
    2. ' ' → logprob: -7.000914573669434
    3. '```' → logprob: -13.875914573669434
    4. '
' → logprob: -14.000914573669434
    5. '`' → logprob: -14.500914573669434
    6. '   ' → logprob: -15.750914573669434
    7. ''' → logprob: -16.375913619995117
    8. '0' → logprob: -16.500913619995117
    9. '=' → logprob: -17.000913619995117
    10. '(' → logprob: -17.125913619995117

Token 1587: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04199758917093277
    2. 'count' → logprob: -4.41699743270874
    3. 'if' → logprob: -5.16699743270874
    4. '
' → logprob: -5.29199743270874
    5. 'from' → logprob: -5.41699743270874
    6. 'import' → logprob: -5.66699743270874
    7. 'total' → logprob: -6.04199743270874
    8. 'possible' → logprob: -6.66699743270874
    9. '#' → logprob: -6.79199743270874
    10. 'options' → logprob: -7.16699743270874

Token 1588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12162207067012787
    2. 'if' → logprob: -3.496622085571289
    3. 'total' → logprob: -3.871622085571289
    4. '
' → logprob: -3.996622085571289
    5. 'count' → logprob: -4.621622085571289
    6. 'from' → logprob: -4.621622085571289
    7. ' if' → logprob: -5.371622085571289
    8. '#' → logprob: -5.996622085571289
    9. 'import' → logprob: -6.121622085571289
    10. ' from' → logprob: -6.121622085571289

Token 1589: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6918308734893799
    2. 'total' → logprob: -1.0668308734893799
    3. '   ' → logprob: -3.06683087348938
    4. 'poss' → logprob: -3.31683087348938
    5. 'res' → logprob: -3.94183087348938
    6. 'count' → logprob: -4.566830635070801
    7. 'ways' → logprob: -4.691830635070801
    8. 'options' → logprob: -4.816830635070801
    9. 'possible' → logprob: -4.941830635070801
    10. 'from' → logprob: -5.316830635070801

Token 1590: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3471253216266632
    2. 'total' → logprob: -1.5971252918243408
    3. '   ' → logprob: -2.847125291824341
    4. 'unknown' → logprob: -5.09712553024292
    5. 'possible' → logprob: -5.09712553024292
    6. 'poss' → logprob: -5.09712553024292
    7. '#' → logprob: -5.34712553024292
    8. 'all' → logprob: -6.22212553024292
    9. 'from' → logprob: -6.22212553024292
    10. 'options' → logprob: -6.59712553024292

Token 1591: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06800052523612976
    2. 'total' → logprob: -3.318000555038452
    3. ' if' → logprob: -4.318000316619873
    4. '   ' → logprob: -4.818000316619873
    5. ' total' → logprob: -6.318000316619873
    6. '
' → logprob: -6.443000316619873
    7. 'unknown' → logprob: -6.568000316619873
    8. 'possible' → logprob: -7.193000316619873
    9. 'all' → logprob: -7.443000316619873
    10. 'def' → logprob: -7.568000316619873

Token 1592: ' number' (ID: 2086)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3241211771965027
    2. 'if' → logprob: -2.5741212368011475
    3. 'unknown' → logprob: -2.5741212368011475
    4. 'poss' → logprob: -3.0741212368011475
    5. 'all' → logprob: -3.6991212368011475
    6. 'possible' → logprob: -3.9491212368011475
    7. 'options' → logprob: -4.074120998382568
    8. '```' → logprob: -6.074120998382568
    9. '   ' → logprob: -6.324120998382568
    10. 'from' → logprob: -6.324120998382568

Token 1593: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7358829379081726
    2. 'of' → logprob: -1.7358829975128174
    3. '_of' → logprob: -2.4858829975128174
    4. '_unknown' → logprob: -2.6108829975128174
    5. '_options' → logprob: -3.1108829975128174
    6. '_tokens' → logprob: -3.2358829975128174
    7. '_bits' → logprob: -3.4858829975128174
    8. ' =' → logprob: -3.6108829975128174
    9. '_' → logprob: -4.110882759094238
    10. 'unknown' → logprob: -4.485882759094238

Token 1594: ' assignments' (ID: 41477)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.1477490663528442
    2. 'valid' → logprob: -1.7727490663528442
    3. 'possible' → logprob: -2.0227489471435547
    4. 'all' → logprob: -2.1477489471435547
    5. 'poss' → logprob: -2.1477489471435547
    6. 'total' → logprob: -2.3977489471435547
    7. 'y' → logprob: -3.7727489471435547
    8. 'options' → logprob: -4.522748947143555
    9. 'unknown' → logprob: -5.147748947143555
    10. 'com' → logprob: -5.522748947143555

Token 1595: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057198863476514816
    2. 'total' → logprob: -3.3071987628936768
    3. 'def' → logprob: -5.807199001312256
    4. '
' → logprob: -5.807199001312256
    5. 'options' → logprob: -6.182199001312256
    6. '#' → logprob: -6.307199001312256
    7. 'unknown' → logprob: -6.432199001312256
    8. 'from' → logprob: -6.557199001312256
    9. 'if' → logprob: -6.682199001312256
    10. 'known' → logprob: -7.557199001312256

Token 1596: ' the' (ID: 290)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.19249017536640167
    2. 'y' → logprob: -1.8174902200698853
    3. ' y' → logprob: -6.067490100860596
    4. '[y' → logprob: -6.192490100860596
    5. ''y' → logprob: -6.317490100860596
    6. ' unknown' → logprob: -6.567490100860596
    7. 'the' → logprob: -6.817490100860596
    8. '
' → logprob: -7.067490100860596
    9. '[' → logprob: -7.942490100860596
    10. '-' → logprob: -8.067490577697754

Token 1597: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.20893466472625732
    2. 'y' → logprob: -1.8339346647262573
    3. 'next' → logprob: -4.458934783935547
    4. 'remaining' → logprob: -4.708934783935547
    5. '-y' → logprob: -5.708934783935547
    6. '-' → logprob: -5.708934783935547
    7. ' y' → logprob: -8.458934783935547
    8. ''y' → logprob: -8.708934783935547
    9. '```' → logprob: -8.708934783935547
    10. '-next' → logprob: -8.833934783935547

Token 1598: '_y' (ID: 9410)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2809942960739136
    2. '_y' → logprob: -2.280994415283203
    3. 'x' → logprob: -3.530994415283203
    4. '_bits' → logprob: -3.530994415283203
    5. 'bits' → logprob: -3.655994415283203
    6. '   ' → logprob: -4.405994415283203
    7. ' y' → logprob: -4.655994415283203
    8. '_x' → logprob: -5.280994415283203
    9. ' bits' → logprob: -5.655994415283203
    10. ' _' → logprob: -5.655994415283203

Token 1599: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30165809392929077
    2. 'if' → logprob: -3.0516581535339355
    3. ' if' → logprob: -3.1766581535339355
    4. 'def' → logprob: -3.3016581535339355
    5. 'count' → logprob: -3.4266581535339355
    6. '
' → logprob: -3.8016581535339355
    7. ' options' → logprob: -4.9266581535339355
    8. 'options' → logprob: -5.1766581535339355
    9. 'cnt' → logprob: -5.1766581535339355
    10. 'unknown' → logprob: -5.1766581535339355

Token 1600: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33724120259284973
    2. 'if' → logprob: -2.7122411727905273
    3. 'total' → logprob: -2.8372411727905273
    4. '
' → logprob: -2.9622411727905273
    5. ' if' → logprob: -4.462241172790527
    6. 'def' → logprob: -4.587241172790527
    7. 'options' → logprob: -4.587241172790527
    8. 'unknown' → logprob: -4.712241172790527
    9. 'count' → logprob: -4.837241172790527
    10. 'from' → logprob: -5.087241172790527

Token 1601: ' produce' (ID: 10635)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.39249274134635925
    2. 'make' → logprob: -1.3924927711486816
    3. 'result' → logprob: -3.7674927711486816
    4. 'have' → logprob: -4.267492771148682
    5. 'exclude' → logprob: -4.892492771148682
    6. 'don't' → logprob: -5.017492771148682
    7. 'give' → logprob: -5.267492771148682
    8. 'produce' → logprob: -5.517492771148682
    9. 'yield' → logprob: -5.767492771148682
    10. 's' → logprob: -5.892492771148682

Token 1602: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.008217735216021538
    2. ' at' → logprob: -5.133217811584473
    3. 'y' → logprob: -7.133217811584473
    4. '>' → logprob: -7.633217811584473
    5. '>=' → logprob: -8.383217811584473
    6. 'a' → logprob: -8.633217811584473
    7. '```' → logprob: -8.633217811584473
    8. '1' → logprob: -8.883217811584473
    9. 'total' → logprob: -9.383217811584473
    10. 'count' → logprob: -10.008217811584473

Token 1603: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.000273971410933882
    2. ' least' → logprob: -8.500273704528809
    3. 'at' → logprob: -10.125273704528809
    4. 'lease' → logprob: -11.375273704528809
    5. 'le' → logprob: -11.625273704528809
    6. '```' → logprob: -12.625273704528809
    7. '_le' → logprob: -13.375273704528809
    8. 'lest' → logprob: -13.625273704528809
    9. 'Least' → logprob: -14.250273704528809
    10. 'east' → logprob: -14.500273704528809

Token 1604: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0020201168954372406
    2. '1' → logprob: -6.252019882202148
    3. ' one' → logprob: -10.002019882202148
    4. '```' → logprob: -10.127019882202148
    5. '_one' → logprob: -12.377019882202148
    6. 'One' → logprob: -13.877019882202148
    7. '
' → logprob: -14.252019882202148
    8. '``' → logprob: -15.627019882202148
    9. '   ' → logprob: -16.25201988220215
    10. 'ONE' → logprob: -16.75201988220215

Token 1605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06795196980237961
    2. 'y' → logprob: -2.9429519176483154
    3. '```' → logprob: -4.8179521560668945
    4. 'one' → logprob: -6.0679521560668945
    5. ' y' → logprob: -7.0679521560668945
    6. ' ' → logprob: -7.1929521560668945
    7. '`' → logprob: -7.5679521560668945
    8. '``' → logprob: -8.817952156066895
    9. 'bit' → logprob: -8.942952156066895
    10. ' one' → logprob: -9.817952156066895

Token 1606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001623291289433837
    2. 'one' → logprob: -6.501623153686523
    3. 'y' → logprob: -9.251623153686523
    4. '```' → logprob: -11.501623153686523
    5. ' ' → logprob: -11.876623153686523
    6. '`' → logprob: -12.751623153686523
    7. ' one' → logprob: -13.751623153686523
    8. '=' → logprob: -14.126623153686523
    9. ' y' → logprob: -14.501623153686523
    10. 'next' → logprob: -14.876623153686523

Token 1607: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11579229682683945
    2. 'count' → logprob: -3.1157922744750977
    3. '
' → logprob: -4.365792274475098
    4. 'total' → logprob: -4.990792274475098
    5. 'if' → logprob: -5.240792274475098
    6. ' if' → logprob: -5.365792274475098
    7. 'cnt' → logprob: -5.365792274475098
    8. 'def' → logprob: -5.740792274475098
    9. ' count' → logprob: -5.740792274475098
    10. 'result' → logprob: -5.865792274475098

Token 1608: ' fixed' (ID: 13213)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5472636818885803
    2. 'unknown' → logprob: -1.2972636222839355
    3. 'the' → logprob: -2.4222636222839355
    4. ' y' → logprob: -3.9222636222839355
    5. 'in' → logprob: -4.4222636222839355
    6. 'known' → logprob: -5.0472636222839355
    7. '
' → logprob: -5.5472636222839355
    8. '(' → logprob: -5.9222636222839355
    9. '```' → logprob: -6.1722636222839355
    10. 'remaining' → logprob: -6.5472636222839355

Token 1609: ' ones' (ID: 8104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8244031071662903
    2. 'count' → logprob: -1.4494030475616455
    3. 'unknown' → logprob: -1.9494030475616455
    4. ' if' → logprob: -3.4494030475616455
    5. '   ' → logprob: -3.6994030475616455
    6. 'bits' → logprob: -3.9494030475616455
    7. 'tokens' → logprob: -4.324403285980225
    8. '#' → logprob: -4.699403285980225
    9. 'y' → logprob: -4.824403285980225
    10. '_count' → logprob: -5.074403285980225

Token 1610: ' included' (ID: 7360)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5329992175102234
    2. '   ' → logprob: -1.9079992771148682
    3. 'total' → logprob: -2.407999277114868
    4. 'remaining' → logprob: -3.157999277114868
    5. 'rest' → logprob: -3.532999277114868
    6. 'count' → logprob: -3.657999277114868
    7. 'unknown' → logprob: -4.157999038696289
    8. ' if' → logprob: -4.657999038696289
    9. 'possible' → logprob: -4.907999038696289
    10. 'options' → logprob: -4.907999038696289

Token 1611: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.584702730178833
    2. 'from' → logprob: -1.834702730178833
    3. 'total' → logprob: -2.084702730178833
    4. 'if' → logprob: -3.084702730178833
    5. 'unknown' → logprob: -3.709702730178833
    6. 'import' → logprob: -4.459702491760254
    7. 'count' → logprob: -4.709702491760254
    8. '
' → logprob: -4.709702491760254
    9. '```' → logprob: -4.834702491760254
    10. 'remaining' → logprob: -4.959702491760254

Token 1612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1573859006166458
    2. ' if' → logprob: -2.40738582611084
    3. 'if' → logprob: -3.03238582611084
    4. '
' → logprob: -5.65738582611084
    5. '```' → logprob: -6.03238582611084
    6. '       ' → logprob: -8.03238582611084
    7. 'If' → logprob: -8.28238582611084
    8. 'from' → logprob: -8.40738582611084
    9. 'count' → logprob: -8.53238582611084
    10. '``' → logprob: -9.15738582611084

Token 1613: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14326515793800354
    2. 'total' → logprob: -2.8932652473449707
    3. '   ' → logprob: -3.0182652473449707
    4. 'count' → logprob: -4.893265247344971
    5. 'remaining' → logprob: -5.018265247344971
    6. 'rest' → logprob: -5.643265247344971
    7. 'unknown' → logprob: -6.018265247344971
    8. 'possible' → logprob: -6.018265247344971
    9. 'valid' → logprob: -6.768265247344971
    10. 'options' → logprob: -7.393265247344971

Token 1614: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006410174071788788
    2. ' y' → logprob: -5.631410121917725
    3. '(y' → logprob: -5.881410121917725
    4. '(' → logprob: -12.006410598754883
    5. ' (' → logprob: -12.256410598754883
    6. '   ' → logprob: -13.256410598754883
    7. '(not' → logprob: -14.256410598754883
    8. 'len' → logprob: -14.631410598754883
    9. 'not' → logprob: -14.756410598754883
    10. ' ' → logprob: -15.006410598754883

Token 1615: '_fixed' (ID: 89932)
  Prédit: '_fixed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fixed' → logprob: -4.3822154111694545e-05
    2. 'fixed' → logprob: -10.125043869018555
    3. '_FIXED' → logprob: -13.250043869018555
    4. '_known' → logprob: -13.500043869018555
    5. '\' → logprob: -16.250043869018555
    6. '[' → logprob: -16.250043869018555
    7. '固定' → logprob: -16.875043869018555
    8. '```' → logprob: -17.000043869018555
    9. '#' → logprob: -17.250043869018555
    10. 'Fixed' → logprob: -17.375043869018555

Token 1616: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.963691804325208e-05
    2. 'ones' → logprob: -11.750029563903809
    3. '_one' → logprob: -11.875029563903809
    4. '1' → logprob: -12.000029563903809
    5. '0' → logprob: -13.375029563903809
    6. '_on' → logprob: -13.500029563903809
    7. '>' → logprob: -13.750029563903809
    8. '\' → logprob: -14.375029563903809
    9. 's' → logprob: -14.375029563903809
    10. '_once' → logprob: -14.875029563903809

Token 1617: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.15700002014636993
    2. '1' → logprob: -2.0320000648498535
    3. '0' → logprob: -4.4070000648498535
    4. '_' → logprob: -6.5320000648498535
    5. 'zeros' → logprob: -8.281999588012695
    6. ' ' → logprob: -9.156999588012695
    7. ' ones' → logprob: -9.281999588012695
    8. '_one' → logprob: -10.281999588012695
    9. 'ons' → logprob: -10.406999588012695
    10. 'ONES' → logprob: -11.281999588012695

Token 1618: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5488775968551636
    2. '==' → logprob: -0.9238775968551636
    3. ' ==' → logprob: -4.173877716064453
    4. ' >' → logprob: -4.673877716064453
    5. '>=' → logprob: -7.548877716064453
    6. '<' → logprob: -9.173877716064453
    7. '!=' → logprob: -10.673877716064453
    8. ' >=' → logprob: -11.423877716064453
    9. ' <' → logprob: -11.673877716064453
    10. '0' → logprob: -12.423877716064453

Token 1619: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018935515254270285
    2. '=' → logprob: -9.250189781188965
    3. ' ' → logprob: -9.375189781188965
    4. '-' → logprob: -11.875189781188965
    5. '
' → logprob: -15.000189781188965
    6. ' -' → logprob: -15.375189781188965
    7. '1' → logprob: -15.375189781188965
    8. '```' → logprob: -16.18768882751465
    9. ' =' → logprob: -16.25018882751465
    10. '۰' → logprob: -16.43768882751465

Token 1620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.750022888183594
    3. '=' → logprob: -13.875022888183594
    4. '-' → logprob: -15.250022888183594
    5. '
' → logprob: -15.250022888183594
    6. '1' → logprob: -16.250022888183594
    7. '```' → logprob: -17.062522888183594
    8. '[' → logprob: -17.625022888183594
    9. '۰' → logprob: -17.750022888183594
    10. ' -' → logprob: -18.187522888183594

Token 1621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28040584921836853
    2. ':
' → logprob: -1.530405879020691
    3. '       ' → logprob: -4.2804059982299805
    4. ':return' → logprob: -4.5304059982299805
    5. '   ' → logprob: -5.7804059982299805
    6. ',' → logprob: -9.28040599822998
    7. 'return' → logprob: -9.65540599822998
    8. '):
' → logprob: -10.28040599822998
    9. '):' → logprob: -10.28040599822998
    10. ' return' → logprob: -10.65540599822998

Token 1622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10839222371578217
    2. ':' → logprob: -2.4833922386169434
    3. '   ' → logprob: -4.983392238616943
    4. ':return' → logprob: -5.358392238616943
    5. 'return' → logprob: -5.983392238616943
    6. ' return' → logprob: -6.108392238616943
    7. '```' → logprob: -7.358392238616943
    8. '):' → logprob: -7.608392238616943
    9. ':
' → logprob: -7.733392238616943
    10. '{' → logprob: -8.483391761779785

Token 1623: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4754330515861511
    2. 'count' → logprob: -1.600433111190796
    3. 'total' → logprob: -2.725433111190796
    4. 'cnt' → logprob: -3.350433111190796
    5. 'pass' → logprob: -4.100432872772217
    6. 'options' → logprob: -4.225432872772217
    7. 'res' → logprob: -4.475432872772217
    8. 'result' → logprob: -4.725432872772217
    9. 'poss' → logprob: -5.225432872772217
    10. '   ' → logprob: -5.600432872772217

Token 1624: '_valid' (ID: 23321)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.36351731419563293
    2. '_count' → logprob: -1.6135172843933105
    3. 'count' → logprob: -2.8635172843933105
    4. 'bits' → logprob: -4.7385172843933105
    5. '_fixed' → logprob: -4.8635172843933105
    6. '_possible' → logprob: -4.8635172843933105
    7. '_options' → logprob: -5.6135172843933105
    8. '_cnt' → logprob: -5.6135172843933105
    9. '=' → logprob: -5.9885172843933105
    10. '_counts' → logprob: -6.2385172843933105

Token 1625: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01280627865344286
    2. ' =' → logprob: -4.762806415557861
    3. 'count' → logprob: -6.137806415557861
    4. '_count' → logprob: -7.387806415557861
    5. '_options' → logprob: -7.637806415557861
    6. 'options' → logprob: -8.012805938720703
    7. '+=' → logprob: -8.262805938720703
    8. 'cnt' → logprob: -9.387805938720703
    9. '=count' → logprob: -10.012805938720703
    10. 'poss' → logprob: -10.262805938720703

Token 1626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324955351650715
    2. ' =' → logprob: -3.773249626159668
    3. '=y' → logprob: -13.148249626159668
    4. '=count' → logprob: -14.023249626159668
    5. '+=' → logprob: -15.148249626159668
    6. '=
' → logprob: -15.523249626159668
    7. '=True' → logprob: -15.898249626159668
    8. '=len' → logprob: -16.02324867248535
    9. '   ' → logprob: -16.14824867248535
    10. '=(' → logprob: -16.27324867248535

Token 1627: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.022853245958685875
    2. '(' → logprob: -4.022853374481201
    3. '2' → logprob: -5.897853374481201
    4. '1' → logprob: -6.397853374481201
    5. '(pow' → logprob: -8.272852897644043
    6. ' pow' → logprob: -10.772852897644043
    7. '   ' → logprob: -12.647852897644043
    8. ' (' → logprob: -14.272852897644043
    9. 'mod' → logprob: -14.772852897644043
    10. '((' → logprob: -15.147852897644043

Token 1628: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007114782347343862
    2. '(' → logprob: -7.250711441040039
    3. '```' → logprob: -14.125711441040039
    4. '
' → logprob: -14.625711441040039
    5. '   ' → logprob: -15.625711441040039
    6. ' ' → logprob: -16.25071144104004
    7. '       ' → logprob: -17.87571144104004
    8. '``' → logprob: -18.00071144104004
    9. '(
' → logprob: -18.37571144104004
    10. '     ' → logprob: -19.00071144104004

Token 1629: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.625
    3. '
' → logprob: -16.375
    4. '(' → logprob: -16.5
    5. ' ' → logprob: -16.75
    6. '   ' → logprob: -16.75
    7. '0' → logprob: -19.125
    8. '1' → logprob: -19.375
    9. '       ' → logprob: -19.5
    10. '`' → logprob: -19.625

Token 1630: ',' (ID: 11)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.030837755650281906
    2. ',' → logprob: -3.6558377742767334
    3. ' unknown' → logprob: -5.905837535858154
    4. ' ,' → logprob: -7.155837535858154
    5. '(' → logprob: -7.905837535858154
    6. '
' → logprob: -8.530838012695312
    7. ')' → logprob: -9.280838012695312
    8. '           ' → logprob: -9.655838012695312
    9. '                   ' → logprob: -9.780838012695312
    10. '               ' → logprob: -10.030838012695312

Token 1631: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -8.061054359131958e-06
    2. ' unknown' → logprob: -11.750007629394531
    3. '0' → logprob: -17.37500762939453
    4. '3' → logprob: -17.62500762939453
    5. '6' → logprob: -17.75000762939453
    6. 'known' → logprob: -17.87500762939453
    7. '
' → logprob: -18.00000762939453
    8. '7' → logprob: -18.12500762939453
    9. '```' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.87500762939453

Token 1632: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0003491705865599215
    2. 'y' → logprob: -8.000349044799805
    3. '
' → logprob: -12.875349044799805
    4. '_bits' → logprob: -13.000349044799805
    5. '_x' → logprob: -13.125349044799805
    6. ')_' → logprob: -13.250349044799805
    7. ')' → logprob: -13.625349044799805
    8. '   ' → logprob: -13.875349044799805
    9. '```' → logprob: -14.500349044799805
    10. '0' → logprob: -14.750349044799805

Token 1633: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12781065702438354
    2. ',' → logprob: -2.1278107166290283
    3. '-' → logprob: -7.877810478210449
    4. ')-' → logprob: -8.37781047821045
    5. ' ,' → logprob: -9.62781047821045
    6. ' -' → logprob: -9.75281047821045
    7. ' )' → logprob: -9.87781047821045
    8. '}' → logprob: -10.50281047821045
    9. '```' → logprob: -10.62781047821045
    10. ')
' → logprob: -11.25281047821045

Token 1634: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.704273118884885e-07
    2. ' MOD' → logprob: -14.250000953674316
    3. '_MOD' → logprob: -21.5
    4. '100' → logprob: -22.125
    5. '   ' → logprob: -22.625
    6. '.MOD' → logprob: -23.75
    7. 'MO' → logprob: -24.125
    8. 'mod' → logprob: -24.25
    9. '           ' → logprob: -24.875
    10. 'MODULE' → logprob: -24.875

Token 1635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02332327701151371
    2. ')
' → logprob: -3.7733232975006104
    3. ')-' → logprob: -10.273323059082031
    4. '   ' → logprob: -11.023323059082031
    5. ' )' → logprob: -11.148323059082031
    6. ')
' → logprob: -12.523323059082031
    7. '-' → logprob: -13.273323059082031
    8. ' )
' → logprob: -13.398323059082031
    9. ')

' → logprob: -13.773323059082031
    10. ')#' → logprob: -14.148323059082031

Token 1636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27668431401252747
    2. 'else' → logprob: -2.026684284210205
    3. '
' → logprob: -3.276684284210205
    4. ' else' → logprob: -3.526684284210205
    5. ')' → logprob: -3.901684284210205
    6. '```' → logprob: -4.651684284210205
    7. '%' → logprob: -5.276684284210205
    8. ':' → logprob: -5.901684284210205
    9. '<|end|>' → logprob: -6.776684284210205
    10. '       ' → logprob: -7.151684284210205

Token 1637: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.015029440633952618
    2. '   ' → logprob: -4.265029430389404
    3. ' else' → logprob: -7.140029430389404
    4. 'elif' → logprob: -9.640029907226562
    5. '```' → logprob: -11.890029907226562
    6. '	else' → logprob: -14.140029907226562
    7. ' elif' → logprob: -16.515029907226562
    8. '_else' → logprob: -16.890029907226562
    9. '}else' → logprob: -17.515029907226562
    10. ')' → logprob: -17.515029907226562

Token 1638: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8159825205802917
    2. ':
' → logprob: -0.9409825205802917
    3. '       ' → logprob: -1.8159825801849365
    4. 'if' → logprob: -6.440982341766357
    5. ' if' → logprob: -6.690982341766357
    6. '   ' → logprob: -7.190982341766357
    7. ',' → logprob: -8.065982818603516
    8. '):
' → logprob: -8.440982818603516
    9. '```' → logprob: -8.815982818603516
    10. '<|end|>' → logprob: -9.440982818603516

Token 1639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13102950155735016
    2. 'y' → logprob: -2.7560296058654785
    3. ' y' → logprob: -2.8810296058654785
    4. 'if' → logprob: -6.7560296058654785
    5. '```' → logprob: -6.7560296058654785
    6. ' if' → logprob: -7.6310296058654785
    7. '   ' → logprob: -8.38102912902832
    8. '#' → logprob: -10.00602912902832
    9. '``' → logprob: -10.75602912902832
    10. '
' → logprob: -10.75602912902832

Token 1640: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002456153277307749
    2. '       ' → logprob: -6.877456188201904
    3. ' y' → logprob: -7.252456188201904
    4. 'if' → logprob: -7.627456188201904
    5. 'valid' → logprob: -9.752455711364746
    6. '#' (adapté à ' #') → logprob: -10.002455711364746
    7. '
' → logprob: -10.252455711364746
    8. '```' → logprob: -10.377455711364746
    9. '   ' → logprob: -11.127455711364746
    10. 'total' → logprob: -11.752455711364746

Token 1641: ' no' (ID: 860)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.015325312502682209
    2. '
' → logprob: -5.265325546264648
    3. 'if' → logprob: -5.765325546264648
    4. ' y' → logprob: -5.890325546264648
    5. '       ' → logprob: -6.515325546264648
    6. '#' → logprob: -6.515325546264648
    7. '   ' → logprob: -7.140325546264648
    8. 'valid' → logprob: -8.640325546264648
    9. '```' → logprob: -10.140325546264648
    10. 'possible' → logprob: -10.640325546264648

Token 1642: ' fixed' (ID: 13213)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7963268160820007
    2. 'valid' → logprob: -1.1713268756866455
    3. ' y' → logprob: -2.2963268756866455
    4. 'unknown' → logprob: -2.9213268756866455
    5. 'known' → logprob: -3.2963268756866455
    6. ' valid' → logprob: -3.9213268756866455
    7. ' unknown' → logprob: -4.796326637268066
    8. 'w' → logprob: -5.546326637268066
    9. '_valid' → logprob: -5.921326637268066
    10. 'def' → logprob: -5.921326637268066

Token 1643: ' ' (ID: 220)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.6105658411979675
    2. '1' → logprob: -1.6105659008026123
    3. '_' → logprob: -1.9855659008026123
    4. 'y' → logprob: -2.4855659008026123
    5. 'bits' → logprob: -3.9855659008026123
    6. ' y' → logprob: -4.985565662384033
    7. ' ones' → logprob: -5.110565662384033
    8. '_y' → logprob: -6.360565662384033
    9. '_bits' → logprob: -6.860565662384033
    10. 'known' → logprob: -7.235565662384033

Token 1644: '1' (ID: 16)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0008004573755897582
    2. '1' → logprob: -7.250800609588623
    3. 'one' → logprob: -9.875800132751465
    4. ' ones' → logprob: -10.500800132751465
    5. '_' → logprob: -12.000800132751465
    6. '```' → logprob: -13.000800132751465
    7. 'bits' → logprob: -13.250800132751465
    8. '.ones' → logprob: -14.500800132751465
    9. 'ONES' → logprob: -15.250800132751465
    10. '_one' → logprob: -16.00080108642578

Token 1645: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0341535806655884
    2. ':' → logprob: -1.6591535806655884
    3. '   ' → logprob: -1.6591535806655884
    4. 'y' → logprob: -2.159153461456299
    5. ':
' → logprob: -2.784153461456299
    6. ' y' → logprob: -3.534153461456299
    7. 'count' → logprob: -4.659153461456299
    8. ')' → logprob: -4.909153461456299
    9. 'valid' → logprob: -5.284153461456299
    10. ' count' → logprob: -5.409153461456299

Token 1646: ' so' (ID: 813)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1010250672698021
    2. ' y' → logprob: -2.476025104522705
    3. '       ' → logprob: -4.726025104522705
    4. '
' → logprob: -7.226025104522705
    5. '#' → logprob: -7.226025104522705
    6. '           ' → logprob: -7.601025104522705
    7. 'if' → logprob: -7.851025104522705
    8. '   ' → logprob: -8.101024627685547
    9. ' #' → logprob: -8.851024627685547
    10. 'count' → logprob: -10.101024627685547

Token 1647: ' at' (ID: 540)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0160959605127573
    2. ' y' → logprob: -4.141096115112305
    3. 'valid' → logprob: -10.516096115112305
    4. 'if' → logprob: -11.766096115112305
    5. '       ' → logprob: -12.141096115112305
    6. '
' → logprob: -12.141096115112305
    7. '   ' → logprob: -12.516096115112305
    8. 'count' → logprob: -13.141096115112305
    9. '#' → logprob: -13.266096115112305
    10. 'return' → logprob: -13.516096115112305

Token 1648: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -4.656383680412546e-05
    2. ' least' → logprob: -11.000046730041504
    3. '_le' → logprob: -11.000046730041504
    4. 'le' → logprob: -12.250046730041504
    5. '#' → logprob: -13.000046730041504
    6. 'lease' → logprob: -13.250046730041504
    7. 'most' → logprob: -13.250046730041504
    8. 'lest' → logprob: -14.375046730041504
    9. '-le' → logprob: -14.750046730041504
    10. '
' → logprob: -14.875046730041504

Token 1649: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42911574244499207
    2. 'one' → logprob: -1.0541157722473145
    3. '
' → logprob: -8.804115295410156
    4. 'y' → logprob: -9.054115295410156
    5. ' one' → logprob: -10.304115295410156
    6. '(' → logprob: -10.304115295410156
    7. 'pow' → logprob: -10.429115295410156
    8. '   ' → logprob: -10.929115295410156
    9. '```' → logprob: -11.179115295410156
    10. '       ' → logprob: -13.304115295410156

Token 1650: ' unknown' (ID: 17927)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0575459003448486
    2. 'of' → logprob: -1.4325459003448486
    3. 'unknown' → logprob: -1.6825459003448486
    4. ' of' → logprob: -2.3075459003448486
    5. 'y' → logprob: -2.5575459003448486
    6. 'x' → logprob: -3.9325459003448486
    7. ' unknown' → logprob: -4.3075456619262695
    8. ' y' → logprob: -5.0575456619262695
    9. ' ' → logprob: -5.5575456619262695
    10. '=' → logprob: -5.8075456619262695

Token 1651: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8449506759643555
    2. 'bit' → logprob: -0.8449506759643555
    3. 'bits' → logprob: -3.0949506759643555
    4. '_bits' → logprob: -3.3449506759643555
    5. 'x' → logprob: -4.0949506759643555
    6. '_bit' → logprob: -4.2199506759643555
    7. '_y' → logprob: -4.8449506759643555
    8. ')' → logprob: -5.3449506759643555
    9. '```' → logprob: -5.4699506759643555
    10. ' bit' → logprob: -5.7199506759643555

Token 1652: ' bit' (ID: 3546)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.30438482761383057
    2. '_bits' → logprob: -1.4293848276138306
    3. 'bit' → logprob: -4.429384708404541
    4. 'must' → logprob: -5.929384708404541
    5. '>' → logprob: -6.429384708404541
    6. '_' → logprob: -6.554384708404541
    7. '=' → logprob: -6.679384708404541
    8. '_bit' → logprob: -7.054384708404541
    9. '```' → logprob: -7.429384708404541
    10. ' bits' → logprob: -7.679384708404541

Token 1653: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9421337246894836
    2. '>' → logprob: -1.8171336650848389
    3. '       ' → logprob: -2.442133665084839
    4. '   ' → logprob: -2.692133665084839
    5. 'must' → logprob: -2.692133665084839
    6. ' must' → logprob: -3.192133665084839
    7. '+' → logprob: -3.692133665084839
    8. '==' → logprob: -3.817133665084839
    9. '```' → logprob: -4.192133903503418
    10. '+=' → logprob: -4.692133903503418

Token 1654: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.023521719500422478
    2. ' be' → logprob: -3.898521661758423
    3. '=' → logprob: -6.523521900177002
    4. '==' → logprob: -6.898521900177002
    5. '1' → logprob: -8.523521423339844
    6. '```' → logprob: -8.773521423339844
    7. 'i' → logprob: -10.148521423339844
    8. '_be' → logprob: -10.523521423339844
    9. ' become' → logprob: -11.023521423339844
    10. 'remain' → logprob: -12.023521423339844

Token 1655: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008860878297127783
    2. 'set' → logprob: -7.625885963439941
    3. ' set' → logprob: -8.250885963439941
    4. ' ' → logprob: -9.500885963439941
    5. 'assigned' → logprob: -10.625885963439941
    6. ''s' → logprob: -11.875885963439941
    7. '```' → logprob: -12.125885963439941
    8. '`' → logprob: -12.125885963439941
    9. '=' → logprob: -12.250885963439941
    10. ''' → logprob: -12.375885963439941

Token 1656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017505438881926239
    2. 'set' → logprob: -8.750175476074219
    3. 'assigned' → logprob: -11.875175476074219
    4. 'chosen' → logprob: -13.250175476074219
    5. ''' → logprob: -13.500175476074219
    6. '```' → logprob: -13.500175476074219
    7. ' set' → logprob: -13.750175476074219
    8. '
' → logprob: -14.125175476074219
    9. '`' → logprob: -14.500175476074219
    10. ' ' → logprob: -14.500175476074219

Token 1657: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02401646599173546
    2. ' y' → logprob: -4.774016380310059
    3. 'count' → logprob: -5.649016380310059
    4. 'valid' → logprob: -5.899016380310059
    5. 'y' → logprob: -6.274016380310059
    6. ' valid' → logprob: -6.774016380310059
    7. '   ' → logprob: -7.024016380310059
    8. ',' → logprob: -7.149016380310059
    9. '```' → logprob: -7.274016380310059
    10. '
' → logprob: -7.524016380310059

Token 1658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22721534967422485
    2. 'count' → logprob: -2.47721529006958
    3. 'y' → logprob: -2.97721529006958
    4. ' y' → logprob: -3.60221529006958
    5. '```' → logprob: -4.35221529006958
    6. 'valid' → logprob: -4.72721529006958
    7. '   ' → logprob: -5.22721529006958
    8. '``' → logprob: -5.97721529006958
    9. ' count' → logprob: -6.10221529006958
    10. 'return' → logprob: -6.72721529006958

Token 1659: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006685179192572832
    2. ' y' → logprob: -5.256685256958008
    3. '       ' → logprob: -6.631685256958008
    4. '
' → logprob: -9.506685256958008
    5. '   ' → logprob: -11.256685256958008
    6. '```' → logprob: -11.506685256958008
    7. '           ' → logprob: -11.756685256958008
    8. 'if' → logprob: -11.881685256958008
    9. 'valid' → logprob: -12.256685256958008
    10. '(y' → logprob: -12.631685256958008

Token 1660: ' number' (ID: 2086)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005822144914418459
    2. '       ' → logprob: -5.75582218170166
    3. ' y' → logprob: -6.13082218170166
    4. '   ' → logprob: -9.13082218170166
    5. 'if' → logprob: -9.25582218170166
    6. '           ' → logprob: -9.63082218170166
    7. '
' → logprob: -10.00582218170166
    8. 'valid' → logprob: -10.13082218170166
    9. 'return' → logprob: -10.13082218170166
    10. '(y' → logprob: -10.63082218170166

Token 1661: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43499359488487244
    2. 'of' → logprob: -1.3099936246871948
    3. ' =' → logprob: -2.9349935054779053
    4. '**' → logprob: -4.934993743896484
    5. 'pow' → logprob: -4.934993743896484
    6. '_of' → logprob: -5.434993743896484
    7. ' of' → logprob: -5.559993743896484
    8. '   ' → logprob: -5.934993743896484
    9. '(' → logprob: -6.684993743896484
    10. '(pow' → logprob: -6.809993743896484

Token 1662: ' assignments' (ID: 41477)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.18713685870170593
    2. '(' → logprob: -2.0621368885040283
    3. 'all' → logprob: -3.9371368885040283
    4. '(pow' → logprob: -4.437136650085449
    5. 'valid' → logprob: -5.562136650085449
    6. 'total' → logprob: -5.562136650085449
    7. '((' → logprob: -7.187136650085449
    8. '
' → logprob: -7.437136650085449
    9. '#' → logprob: -7.437136650085449
    10. '(
' → logprob: -7.812136650085449

Token 1663: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005691045895218849
    2. ' =' → logprob: -5.505691051483154
    3. '(' → logprob: -7.005691051483154
    4. 'to' → logprob: -8.255690574645996
    5. 'y' → logprob: -8.880690574645996
    6. '=(' → logprob: -9.505690574645996
    7. 'pow' → logprob: -10.505690574645996
    8. 'with' → logprob: -10.880690574645996
    9. 'ans' → logprob: -11.130690574645996
    10. 'total' → logprob: -11.255690574645996

Token 1664: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.00022403974435292184
    2. ' unknown' → logprob: -9.125224113464355
    3. '2' → logprob: -10.000224113464355
    4. '(' → logprob: -11.375224113464355
    5. '```' → logprob: -11.375224113464355
    6. '   ' → logprob: -11.625224113464355
    7. 'unk' → logprob: -11.750224113464355
    8. '
' → logprob: -11.875224113464355
    9. 'y' → logprob: -12.125224113464355
    10. 'the' → logprob: -12.750224113464355

Token 1665: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00026336227892898023
    2. 'y' → logprob: -8.250263214111328
    3. '_bits' → logprob: -14.000263214111328
    4. '_x' → logprob: -14.375263214111328
    5. 'bits' → logprob: -15.625263214111328
    6. '```' → logprob: -16.125263214111328
    7. '_' → logprob: -16.250263214111328
    8. '\' → logprob: -16.375263214111328
    9. '_i' → logprob: -16.875263214111328
    10. 's' → logprob: -17.125263214111328

Token 1666: ' bits' (ID: 18189)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0562434196472168
    2. ' -' → logprob: -1.5562434196472168
    3. 'pow' → logprob: -1.8062434196472168
    4. '(' → logprob: -2.306243419647217
    5. ')' → logprob: -3.056243419647217
    6. 'bits' → logprob: -3.306243419647217
    7. ' (' → logprob: -4.306243419647217
    8. '_bits' → logprob: -4.306243419647217
    9. '```' → logprob: -4.681243419647217
    10. '=' → logprob: -4.681243419647217

Token 1667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3678502142429352
    2. ' =' → logprob: -1.7428501844406128
    3. '-' → logprob: -2.7428503036499023
    4. ' -' → logprob: -2.9928503036499023
    5. 'pow' → logprob: -4.867850303649902
    6. '(' → logprob: -5.242850303649902
    7. ')' → logprob: -6.367850303649902
    8. ' (' → logprob: -6.867850303649902
    9. '(pow' → logprob: -7.117850303649902
    10. '=(' → logprob: -7.617850303649902

Token 1668: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1660863608121872
    2. '(pow' → logprob: -2.041086435317993
    3. ' (' → logprob: -4.416086196899414
    4. 'pow' → logprob: -4.541086196899414
    5. '
' → logprob: -8.791086196899414
    6. '(p' → logprob: -9.291086196899414
    7. '   ' → logprob: -9.916086196899414
    8. '((' → logprob: -10.791086196899414
    9. '(power' → logprob: -11.041086196899414
    10. '(max' → logprob: -11.166086196899414

Token 1669: '2' (ID: 17)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.1312733143568039
    2. '(' → logprob: -2.2562732696533203
    3. 'pow' → logprob: -4.13127326965332
    4. '(p' → logprob: -6.88127326965332
    5. ' (' → logprob: -7.88127326965332
    6. '(mod' → logprob: -8.25627326965332
    7. '(power' → logprob: -9.00627326965332
    8. '
' → logprob: -9.00627326965332
    9. '((' → logprob: -9.25627326965332
    10. '   ' → logprob: -9.50627326965332

Token 1670: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012423468753695488
    2. ' **' → logprob: -4.762423515319824
    3. '```' → logprob: -5.887423515319824
    4. ')' → logprob: -8.387423515319824
    5. '^' → logprob: -8.762423515319824
    6. '
' → logprob: -8.887423515319824
    7. 'unknown' → logprob: -9.012423515319824
    8. '``' → logprob: -9.262423515319824
    9. '*' → logprob: -9.887423515319824
    10. 'pow' → logprob: -10.012423515319824

Token 1671: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -11.125020027160645
    3. ' unknown' → logprob: -12.250020027160645
    4. '_unknown' → logprob: -15.000020027160645
    5. '```' → logprob: -15.250020027160645
    6. '{' → logprob: -16.50002098083496
    7. 'known' → logprob: -17.62502098083496
    8. 'Unknown' → logprob: -18.00002098083496
    9. '`' → logprob: -18.00002098083496
    10. '0' → logprob: -18.25002098083496

Token 1672: '_y' (ID: 9410)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.14619623124599457
    2. '_unknown' → logprob: -2.146196126937866
    3. '_y' → logprob: -4.771196365356445
    4. 'y' → logprob: -5.396196365356445
    5. '_bits' → logprob: -6.271196365356445
    6. '_count' → logprob: -7.271196365356445
    7. '_' → logprob: -7.396196365356445
    8. '```' → logprob: -7.521196365356445
    9. '{' → logprob: -7.646196365356445
    10. ')' → logprob: -7.771196365356445

Token 1673: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6383357644081116
    2. ' -' → logprob: -0.7633357644081116
    3. '
' → logprob: -5.763335704803467
    4. '```' → logprob: -7.638335704803467
    5. '   ' → logprob: -7.763335704803467
    6. ')' → logprob: -7.763335704803467
    7. '       ' → logprob: -8.013336181640625
    8. '-
' → logprob: -8.138336181640625
    9. 'pow' → logprob: -8.263336181640625
    10. '-(' → logprob: -10.388336181640625

Token 1674: '       ' (ID: 309)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18768145143985748
    2. '-' → logprob: -1.8126814365386963
    3. '       ' → logprob: -5.187681674957275
    4. 'pow' → logprob: -6.437681674957275
    5. '```' → logprob: -8.562681198120117
    6. '
' → logprob: -8.937681198120117
    7. '-(' → logprob: -9.312681198120117
    8. ')' → logprob: -9.312681198120117
    9. '   ' → logprob: -10.062681198120117
    10. ' pow' → logprob: -10.687681198120117

Token 1675: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1035517454147339
    2. '       ' → logprob: -1.2285517454147339
    3. ' y' → logprob: -1.8535517454147339
    4. 'pow' → logprob: -2.3535518646240234
    5. 'valid' → logprob: -2.8535518646240234
    6. 'count' → logprob: -4.103551864624023
    7. ' (' → logprob: -4.353551864624023
    8. 'ans' → logprob: -5.228551864624023
    9. '(' → logprob: -5.228551864624023
    10. ' valid' → logprob: -5.353551864624023

Token 1676: ' excluding' (ID: 76651)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03164630010724068
    2. 'valid' → logprob: -4.281646251678467
    3. ' y' → logprob: -4.406646251678467
    4. '       ' → logprob: -5.406646251678467
    5. 'count' → logprob: -8.656646728515625
    6. ' valid' → logprob: -9.156646728515625
    7. '
' → logprob: -9.281646728515625
    8. 'ans' → logprob: -9.531646728515625
    9. '   ' → logprob: -10.156646728515625
    10. 'cnt' → logprob: -10.281646728515625

Token 1677: ' all' (ID: 722)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.041009608656167984
    2. '1' → logprob: -3.2910096645355225
    3. '(' → logprob: -6.166009426116943
    4. '0' → logprob: -7.916009426116943
    5. 'all' → logprob: -8.291009902954102
    6. '(pow' → logprob: -8.666009902954102
    7. ' pow' → logprob: -10.791009902954102
    8. 'one' → logprob: -11.166009902954102
    9. '2' → logprob: -11.791009902954102
    10. 'count' → logprob: -12.041009902954102

Token 1678: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34381741285324097
    2. 'zeros' → logprob: -1.3438174724578857
    3. 'zero' → logprob: -3.5938174724578857
    4. 'unknown' → logprob: -6.343817234039307
    5. 'ones' → logprob: -8.218817710876465
    6. 'bits' → logprob: -8.593817710876465
    7. '_zero' → logprob: -9.093817710876465
    8. ' zeros' → logprob: -9.343817710876465
    9. '_' → logprob: -9.968817710876465
    10. ' ' → logprob: -10.093817710876465

Token 1679: ' assignment' (ID: 24618)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3534049391746521
    2. '-' → logprob: -1.2284049987792969
    3. 'pow' → logprob: -6.228404998779297
    4. ')' → logprob: -6.603404998779297
    5. '(' → logprob: -7.478404998779297
    6. '
' → logprob: -8.728404998779297
    7. ' (' → logprob: -9.103404998779297
    8. '1' → logprob: -9.103404998779297
    9. ' pow' → logprob: -9.228404998779297
    10. 'count' → logprob: -9.603404998779297

Token 1680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9342947006225586
    2. ' -' → logprob: -2.0592947006225586
    3. ' y' → logprob: -2.1842947006225586
    4. '-' → logprob: -2.3092947006225586
    5. '       ' → logprob: -2.6842947006225586
    6. 'y' → logprob: -2.6842947006225586
    7. '=' → logprob: -2.8092947006225586
    8. '   ' → logprob: -3.6842947006225586
    9. ')' → logprob: -4.809294700622559
    10. '
' → logprob: -4.934294700622559

Token 1681: ' ' (ID: 220)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.02831657975912094
    2. '(' → logprob: -4.403316497802734
    3. 'pow' → logprob: -4.403316497802734
    4. '(p' → logprob: -6.403316497802734
    5. ' (' → logprob: -6.528316497802734
    6. '((' → logprob: -8.903316497802734
    7. '(power' → logprob: -9.778316497802734
    8. '(mod' → logprob: -10.278316497802734
    9. '(max' → logprob: -10.653316497802734
    10. ' pow' → logprob: -10.653316497802734

Token 1682: '2' (ID: 17)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.024889884516596794
    2. 'pow' → logprob: -4.149889945983887
    3. '(' → logprob: -4.774889945983887
    4. '(p' → logprob: -8.274889945983887
    5. ' (' → logprob: -10.024889945983887
    6. '(power' → logprob: -10.524889945983887
    7. '(max' → logprob: -11.274889945983887
    8. '(mod' → logprob: -11.399889945983887
    9. '((' → logprob: -11.399889945983887
    10. ' pow' → logprob: -12.524889945983887

Token 1683: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9288307428359985
    2. '(' → logprob: -1.4288307428359985
    3. '**' → logprob: -1.9288307428359985
    4. 'unknown' → logprob: -1.9288307428359985
    5. ' (' → logprob: -3.553830623626709
    6. '-' → logprob: -4.803830623626709
    7. ' -' → logprob: -5.053830623626709
    8. '^' → logprob: -5.678830623626709
    9. '^(' → logprob: -5.803830623626709
    10. '   ' → logprob: -5.803830623626709

Token 1684: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -9.088346359931165e-07
    2. '{' → logprob: -15.000000953674316
    3. ' unknown' → logprob: -15.000000953674316
    4. '```' → logprob: -16.75
    5. '(' → logprob: -17.25
    6. '
' → logprob: -17.375
    7. 'unk' → logprob: -18.5
    8. 'Unknown' → logprob: -18.625
    9. '_unknown' → logprob: -18.875
    10. 'UNKNOWN' → logprob: -19.0

Token 1685: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0199249517172575
    2. '_bits' → logprob: -4.144925117492676
    3. '_unknown' → logprob: -5.894925117492676
    4. '```' → logprob: -7.769925117492676
    5. '_bit' → logprob: -8.019925117492676
    6. '_' → logprob: -9.019925117492676
    7. '_known' → logprob: -9.769925117492676
    8. ''_' → logprob: -10.144925117492676
    9. '_count' → logprob: -10.394925117492676
    10. '_x' → logprob: -10.894925117492676

Token 1686: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2015445977449417
    2. '-' → logprob: -1.7015446424484253
    3. ')' → logprob: -10.201544761657715
    4. ')-' → logprob: -10.201544761657715
    5. ' ' → logprob: -10.951544761657715
    6. '```' → logprob: -11.576544761657715
    7. '-power' → logprob: -12.076544761657715
    8. '**' → logprob: -12.826544761657715
    9. ']-' → logprob: -13.076544761657715
    10. '
' → logprob: -13.076544761657715

Token 1687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.625038146972656
    3. 'pow' → logprob: -11.875038146972656
    4. ' ' → logprob: -12.375038146972656
    5. '
' → logprob: -13.875038146972656
    6. '```' → logprob: -14.000038146972656
    7. '`' → logprob: -16.125038146972656
    8. '   ' → logprob: -16.125038146972656
    9. ' (' → logprob: -16.500038146972656
    10. '``' → logprob: -17.125038146972656

Token 1688: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5308830738067627
    2. ')' → logprob: -1.6558830738067627
    3. ' -' → logprob: -1.6558830738067627
    4. '<|end|>' → logprob: -4.530882835388184
    5. '```' → logprob: -4.655882835388184
    6. '<|end|>' → logprob: -5.780882835388184
    7. '
' → logprob: -6.030882835388184
    8. '   ' → logprob: -6.905882835388184
    9. '(' → logprob: -7.030882835388184
    10. '%' → logprob: -7.780882835388184

Token 1689: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6637710928916931
    2. '-' → logprob: -1.038771152496338
    3. ' -' → logprob: -2.788771152496338
    4. '%' → logprob: -3.538771152496338
    5. ' %' → logprob: -4.538771152496338
    6. '```' → logprob: -4.663771152496338
    7. 'pow' → logprob: -4.788771152496338
    8. '(pow' → logprob: -5.913771152496338
    9. '(' → logprob: -6.163771152496338
    10. '
' → logprob: -6.288771152496338

Token 1690: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2725103497505188
    2. 'pow' → logprob: -2.147510290145874
    3. '(pow' → logprob: -2.647510290145874
    4. '(y' → logprob: -4.022510528564453
    5. 'return' → logprob: -4.397510528564453
    6. '(M' → logprob: -5.397510528564453
    7. 'MOD' → logprob: -5.897510528564453
    8. 'y' → logprob: -6.022510528564453
    9. 'count' → logprob: -6.397510528564453
    10. '-' → logprob: -6.647510528564453

Token 1691: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -5.676981345459353e-06
    2. ' unknown' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.3750057220459
    4. 'y' → logprob: -17.5000057220459
    5. '
' → logprob: -18.1250057220459
    6. 'unk' → logprob: -18.6250057220459
    7. 'undefined' → logprob: -19.0000057220459
    8. 'b' → logprob: -19.1250057220459
    9. '0' → logprob: -19.2500057220459
    10. '       ' → logprob: -19.7500057220459

Token 1692: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.9981420336989686e-05
    2. '_bits' → logprob: -11.375020027160645
    3. '>' → logprob: -12.875020027160645
    4. 'y' → logprob: -13.000020027160645
    5. '_' → logprob: -13.125020027160645
    6. '_unknown' → logprob: -14.500020027160645
    7. '_x' → logprob: -14.625020027160645
    8. ')_' → logprob: -16.500019073486328
    9. '_count' → logprob: -16.625019073486328
    10. '[' → logprob: -16.750019073486328

Token 1693: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26427945494651794
    2. '>' → logprob: -1.5142794847488403
    3. ' ==' → logprob: -4.639279365539551
    4. '!=' → logprob: -6.139279365539551
    5. ' >' → logprob: -8.38927936553955
    6. '<' → logprob: -9.88927936553955
    7. ' !=' → logprob: -10.01427936553955
    8. '```' → logprob: -10.63927936553955
    9. '[' → logprob: -10.88927936553955
    10. '0' → logprob: -11.01427936553955

Token 1694: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -17.5
    4. '=' → logprob: -18.375
    5. '
' → logprob: -19.0
    6. '1' → logprob: -19.125
    7. '```' → logprob: -19.875
    8. '０' → logprob: -20.25
    9. '000' → logprob: -21.0
    10. '00' → logprob: -21.25

Token 1695: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21887865662574768
    2. ':' → logprob: -2.093878746032715
    3. ':return' → logprob: -2.718878746032715
    4. '           ' → logprob: -5.468878746032715
    5. '):
' → logprob: -6.593878746032715
    6. '       ' → logprob: -7.343878746032715
    7. 'return' → logprob: -7.968878746032715
    8. '0' → logprob: -8.343878746032715
    9. '):' → logprob: -8.968878746032715
    10. ')' → logprob: -8.968878746032715

Token 1696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5173707008361816
    2. 'return' → logprob: -1.1423707008361816
    3. '0' → logprob: -3.3923707008361816
    4. ' return' → logprob: -3.6423707008361816
    5. '       ' → logprob: -4.392370700836182
    6. '	return' → logprob: -5.642370700836182
    7. '   ' → logprob: -5.642370700836182
    8. '```' → logprob: -5.767370700836182
    9. '               ' → logprob: -7.267370700836182
    10. ':return' → logprob: -7.392370700836182

Token 1697: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011953481007367373
    2. '0' → logprob: -6.751195430755615
    3. ' return' → logprob: -10.751194953918457
    4. '```' → logprob: -12.626194953918457
    5. '	return' → logprob: -16.001195907592773
    6. '``' → logprob: -16.251195907592773
    7. '{return' → logprob: -17.251195907592773
    8. '   ' → logprob: -17.251195907592773
    9. '           ' → logprob: -17.376195907592773
    10. ':return' → logprob: -17.876195907592773

Token 1698: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3873976469039917
    2. '0' → logprob: -1.1373976469039917
    3. '           ' → logprob: -7.762397766113281
    4. ' return' → logprob: -9.887397766113281
    5. '       ' → logprob: -10.762397766113281
    6. '```' → logprob: -11.137397766113281
    7. '   ' → logprob: -12.512397766113281
    8. '
' → logprob: -12.887397766113281
    9. '               ' → logprob: -13.262397766113281
    10. '1' → logprob: -13.512397766113281

Token 1699: ' unknown' (ID: 17927)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0928102433681488
    2. 'return' → logprob: -2.7178101539611816
    3. ' valid' → logprob: -4.592810153961182
    4. '0' → logprob: -5.342810153961182
    5. 'matches' → logprob: -5.842810153961182
    6. ' return' → logprob: -6.217810153961182
    7. '1' → logprob: -6.967810153961182
    8. '_valid' → logprob: -8.09281063079834
    9. 'options' → logprob: -8.34281063079834
    10. 'poss' → logprob: -8.34281063079834

Token 1700: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0607949495315552
    2. ' return' → logprob: -1.5607949495315552
    3. '0' → logprob: -2.1857948303222656
    4. ')' → logprob: -2.3107948303222656
    5. ':
' → logprob: -2.5607948303222656
    6. '   ' → logprob: -3.0607948303222656
    7. ':return' → logprob: -3.4357948303222656
    8. '):
' → logprob: -3.8107948303222656
    9. '       ' → logprob: -4.310794830322266
    10. '
' → logprob: -5.185794830322266

Token 1701: ' bits' (ID: 18189)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6596889495849609
    2. 'return' → logprob: -2.159688949584961
    3. ':return' → logprob: -2.409688949584961
    4. ':' → logprob: -3.034688949584961
    5. '):
' → logprob: -3.034688949584961
    6. '       ' → logprob: -3.034688949584961
    7. ' return' → logprob: -3.159688949584961
    8. '   ' → logprob: -3.534688949584961
    9. ')' → logprob: -3.534688949584961
    10. '0' → logprob: -4.534688949584961

Token 1702: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39587634801864624
    2. ':
' → logprob: -1.520876407623291
    3. ':return' → logprob: -3.145876407623291
    4. 'return' → logprob: -4.020876407623291
    5. '       ' → logprob: -4.145876407623291
    6. '               ' → logprob: -4.145876407623291
    7. '```' → logprob: -5.020876407623291
    8. ':' → logprob: -5.520876407623291
    9. ' return' → logprob: -6.270876407623291
    10. '):
' → logprob: -6.895876407623291

Token 1703: ' fixed' (ID: 13213)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01156503427773714
    2. '0' → logprob: -5.011565208435059
    3. '           ' → logprob: -5.386565208435059
    4. ' return' → logprob: -8.386565208435059
    5. '               ' → logprob: -11.636565208435059
    6. '```' → logprob: -12.011565208435059
    7. '   ' → logprob: -12.261565208435059
    8. '       ' → logprob: -12.511565208435059
    9. '	return' → logprob: -13.261565208435059
    10. ' ' → logprob: -13.386565208435059

Token 1704: ' ones' (ID: 8104)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39493685960769653
    2. 'return' → logprob: -1.8949368000030518
    3. ')' → logprob: -2.5199368000030518
    4. ' return' → logprob: -3.7699368000030518
    5. 'bits' → logprob: -4.144937038421631
    6. ':' → logprob: -4.394937038421631
    7. '=' → logprob: -4.769937038421631
    8. ' bits' → logprob: -4.769937038421631
    9. 'count' → logprob: -5.144937038421631
    10. ':return' → logprob: -5.644937038421631

Token 1705: '=' (ID: 28)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5991532802581787
    2. 'return' → logprob: -1.3491532802581787
    3. '       ' → logprob: -2.5991532802581787
    4. '==' → logprob: -3.2241532802581787
    5. ':return' → logprob: -4.224153518676758
    6. ' return' → logprob: -4.349153518676758
    7. '```' → logprob: -4.599153518676758
    8. ':' → logprob: -4.599153518676758
    9. '               ' → logprob: -5.099153518676758
    10. '{return' → logprob: -5.099153518676758

Token 1706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -17.125001907348633
    4. '1' → logprob: -17.250001907348633
    5. 'False' → logprob: -17.375001907348633
    6. '=' → logprob: -17.500001907348633
    7. '000' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'zero' → logprob: -19.000001907348633

Token 1707: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1334071010351181
    2. '       ' → logprob: -3.0084071159362793
    3. '0' → logprob: -3.3834071159362793
    4. 'return' → logprob: -3.8834071159362793
    5. '               ' → logprob: -4.133407115936279
    6. ':return' → logprob: -6.633407115936279
    7. '```' → logprob: -6.633407115936279
    8. ' return' → logprob: -7.008407115936279
    9. ':
' → logprob: -7.758407115936279
    10. '   ' → logprob: -8.008406639099121

Token 1708: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03204837068915367
    2. '           ' → logprob: -3.532048463821411
    3. '0' → logprob: -6.407048225402832
    4. ' return' → logprob: -7.532048225402832
    5. '       ' → logprob: -10.157048225402832
    6. '               ' → logprob: -10.407048225402832
    7. '```' → logprob: -11.032048225402832
    8. '   ' → logprob: -12.032048225402832
    9. '{return' → logprob: -12.282048225402832
    10. '
' → logprob: -12.532048225402832

Token 1709: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20167596638202667
    2. '0' → logprob: -1.7016760110855103
    3. ' return' → logprob: -8.576676368713379
    4. '           ' → logprob: -9.701676368713379
    5. '```' → logprob: -12.201676368713379
    6. '   ' → logprob: -12.951676368713379
    7. '       ' → logprob: -13.451676368713379
    8. '
' → logprob: -13.576676368713379
    9. ' ' → logprob: -13.951676368713379
    10. '	return' → logprob: -14.951676368713379

Token 1710: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.600653886795044
    2. 'valid' → logprob: -0.850653886795044
    3. '1' → logprob: -4.350653648376465
    4. 'matches' → logprob: -4.975653648376465
    5. ' return' → logprob: -6.975653648376465
    6. 'count' → logprob: -7.100653648376465
    7. 'possible' → logprob: -7.350653648376465
    8. '0' → logprob: -7.475653648376465
    9. 'match' → logprob: -7.475653648376465
    10. ' valid' → logprob: -7.600653648376465

Token 1711: '1' (ID: 16)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.37075328826904297
    2. 'poss' → logprob: -1.745753288269043
    3. 'possible' → logprob: -2.870753288269043
    4. 'matches' → logprob: -3.245753288269043
    5. 'match' → logprob: -4.120753288269043
    6. '1' → logprob: -4.120753288269043
    7. 'return' → logprob: -5.620753288269043
    8. 'options' → logprob: -5.870753288269043
    9. '0' → logprob: -8.245753288269043
    10. 'count' → logprob: -8.995753288269043

Token 1712: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028865709900856018
    2. '   ' → logprob: -4.278865814208984
    3. '0' → logprob: -5.653865814208984
    4. ':
' → logprob: -5.778865814208984
    5. '           ' → logprob: -5.903865814208984
    6. '
' → logprob: -6.278865814208984
    7. ')' → logprob: -7.028865814208984
    8. '):
' → logprob: -7.153865814208984
    9. 'return' → logprob: -7.403865814208984
    10. ':return' → logprob: -8.403865814208984

Token 1713: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3272196650505066
    2. '           ' → logprob: -1.5772197246551514
    3. 'return' → logprob: -3.2022197246551514
    4. '0' → logprob: -4.577219486236572
    5. '```' → logprob: -4.827219486236572
    6. '   ' → logprob: -5.952219486236572
    7. ':return' → logprob: -6.327219486236572
    8. '
' → logprob: -6.452219486236572
    9. ' return' → logprob: -6.577219486236572
    10. ')' → logprob: -6.702219486236572

Token 1714: ' invalid' (ID: 15796)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00010735770774772391
    2. '0' → logprob: -9.250107765197754
    3. ' return' → logprob: -11.500107765197754
    4. '```' → logprob: -13.750107765197754
    5. '
' → logprob: -17.750106811523438
    6. '   ' → logprob: -19.000106811523438
    7. '	return' → logprob: -19.125106811523438
    8. '           ' → logprob: -19.500106811523438
    9. '1' → logprob: -19.500106811523438
    10. '{return' → logprob: -19.625106811523438

Token 1715: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1257203072309494
    2. '           ' → logprob: -2.625720262527466
    3. 'return' → logprob: -3.750720262527466
    4. '
' → logprob: -4.125720500946045
    5. '   ' → logprob: -6.125720500946045
    6. ' return' → logprob: -7.125720500946045
    7. '0' → logprob: -7.250720500946045
    8. ':
' → logprob: -7.375720500946045
    9. '               ' → logprob: -7.875720500946045
    10. '```' → logprob: -8.000720024108887

Token 1716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027507632970809937
    2. 'return' → logprob: -4.027507781982422
    3. '       ' → logprob: -4.777507781982422
    4. '               ' → logprob: -7.777507781982422
    5. '```' → logprob: -8.402507781982422
    6. '   ' → logprob: -9.152507781982422
    7. ' return' → logprob: -9.777507781982422
    8. '0' → logprob: -10.527507781982422
    9. '{return' → logprob: -11.402507781982422
    10. '
' → logprob: -11.402507781982422

Token 1717: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02706996537744999
    2. '0' → logprob: -4.027070045471191
    3. '           ' → logprob: -4.902070045471191
    4. '       ' → logprob: -6.902070045471191
    5. ' return' → logprob: -8.402070045471191
    6. '```' → logprob: -8.777070045471191
    7. '   ' → logprob: -10.277070045471191
    8. '               ' → logprob: -12.027070045471191
    9. '	return' → logprob: -12.027070045471191
    10. '``' → logprob: -12.652070045471191

Token 1718: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.500001907348633
    5. '000' → logprob: -22.000001907348633
    6. '`' → logprob: -22.000001907348633
    7. '       ' → logprob: -22.375001907348633
    8. '``' → logprob: -22.625001907348633
    9. '           ' → logprob: -22.750001907348633
    10. '
' → logprob: -22.875001907348633

Token 1719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '```' → logprob: -20.5
    4. '000' → logprob: -21.625
    5. '`' → logprob: -22.125
    6. '۰' → logprob: -23.125
    7. 'return' → logprob: -24.125
    8. '00' → logprob: -24.25
    9. '
' → logprob: -24.25
    10. '``' → logprob: -24.375

Token 1720: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5524694919586182
    2. '       ' → logprob: -1.4274694919586182
    3. ')' → logprob: -2.677469491958618
    4. '\n' → logprob: -2.677469491958618
    5. '```' → logprob: -3.802469491958618
    6. '
' → logprob: -4.302469253540039
    7. '+' → logprob: -5.302469253540039
    8. '<|end|>' → logprob: -6.552469253540039
    9. '\' → logprob: -7.552469253540039
    10. '``' → logprob: -7.802469253540039

Token 1721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018502485007047653
    2. '   ' → logprob: -4.143502712249756
    3. '```' → logprob: -6.143502712249756
    4. ')' → logprob: -9.143502235412598
    5. '+' → logprob: -9.518502235412598
    6. 'else' → logprob: -9.643502235412598
    7. '           ' → logprob: -9.893502235412598
    8. '``' → logprob: -12.518502235412598
    9. '	' → logprob: -12.643502235412598
    10. ' else' → logprob: -13.143502235412598

Token 1722: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012542853131890297
    2. '           ' → logprob: -5.262542724609375
    3. 'return' → logprob: -5.762542724609375
    4. '
' → logprob: -6.637542724609375
    5. ' return' → logprob: -7.512542724609375
    6. ':
' → logprob: -7.762542724609375
    7. '   ' → logprob: -7.762542724609375
    8. '```' → logprob: -7.762542724609375
    9. 'count' → logprob: -8.387542724609375
    10. 'else' → logprob: -8.762542724609375

Token 1723: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.0005545823951251805
    2. 'valid' → logprob: -7.50055456161499
    3. '_invalid' → logprob: -14.000555038452148
    4. '_count' → logprob: -15.500555038452148
    5. 'y' → logprob: -15.625555038452148
    6. '_' → logprob: -16.00055503845215
    7. 'Valid' → logprob: -16.37555503845215
    8. '#' → logprob: -16.62555503845215
    9. '	valid' → logprob: -17.12555503845215
    10. '_val' → logprob: -17.87555503845215

Token 1724: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.763666947837919e-05
    2. '_counts' → logprob: -10.87504768371582
    3. '_bits' → logprob: -11.87504768371582
    4. '\' → logprob: -12.75004768371582
    5. '```' → logprob: -12.87504768371582
    6. 'count' → logprob: -12.87504768371582
    7. '=' → logprob: -13.00004768371582
    8. '_code' → logprob: -13.12504768371582
    9. '_tokens' → logprob: -13.50004768371582
    10. '_y' → logprob: -13.62504768371582

Token 1725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142745971679688
    2. ' =' → logprob: -1.7014274597167969
    3. '=(' → logprob: -11.451427459716797
    4. '```' → logprob: -13.326427459716797
    5. ' =(' → logprob: -14.701427459716797
    6. '=
' → logprob: -15.076427459716797
    7. '=((' → logprob: -15.451427459716797
    8. '*=' → logprob: -15.951427459716797
    9. ')' → logprob: -16.076427459716797
    10. '=`' → logprob: -16.451427459716797

Token 1726: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.010267133824527264
    2. 'pow' → logprob: -5.13526725769043
    3. '(' → logprob: -5.76026725769043
    4. '(p' → logprob: -7.01026725769043
    5. ' (' → logprob: -8.63526725769043
    6. '   ' → logprob: -10.38526725769043
    7. '(power' → logprob: -10.63526725769043
    8. '((' → logprob: -11.51026725769043
    9. '(mod' → logprob: -11.51026725769043
    10. '(max' → logprob: -12.26026725769043

Token 1727: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02007323130965233
    2. '(pow' → logprob: -4.020073413848877
    3. '(' → logprob: -6.270073413848877
    4. ' pow' → logprob: -11.270072937011719
    5. '(p' → logprob: -11.395072937011719
    6. ' (' → logprob: -13.145072937011719
    7. '2' → logprob: -13.645072937011719
    8. '   ' → logprob: -13.895072937011719
    9. '(power' → logprob: -15.270072937011719
    10. '((' → logprob: -15.520072937011719

Token 1728: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16022545099258423
    2. '(' → logprob: -1.9102253913879395
    3. '```' → logprob: -14.035225868225098
    4. ',' → logprob: -15.910225868225098
    5. 'def' → logprob: -16.03522491455078
    6. ' ' → logprob: -16.78522491455078
    7. '   ' → logprob: -17.03522491455078
    8. '       ' → logprob: -17.41022491455078
    9. ')' → logprob: -18.03522491455078
    10. '
' → logprob: -18.41022491455078

Token 1729: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. ',' → logprob: -17.625
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.75
    7. '
' → logprob: -20.0
    8. '       ' → logprob: -20.875
    9. ')' → logprob: -20.875
    10. 'def' → logprob: -21.125

Token 1730: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033384013921022415
    2. ',' → logprob: -3.533384084701538
    3. 'unknown' → logprob: -5.658383846282959
    4. '2' → logprob: -9.658384323120117
    5. '```' → logprob: -11.033384323120117
    6. ' unknown' → logprob: -11.408384323120117
    7. '10' → logprob: -11.783384323120117
    8. ')' → logprob: -11.783384323120117
    9. 'UNKNOWN' → logprob: -12.283384323120117
    10. '_unknown' → logprob: -12.408384323120117

Token 1731: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -2.2200749754119897e-06
    2. ' unknown' → logprob: -13.125001907348633
    3. '
' → logprob: -16.250001907348633
    4. '(' → logprob: -19.500001907348633
    5. 'undefined' → logprob: -19.750001907348633
    6. 'UNKNOWN' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '2' → logprob: -21.000001907348633
    9. 'known' → logprob: -21.125001907348633
    10. '```' → logprob: -21.375001907348633

Token 1732: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00032521432149223983
    2. '_unknown' → logprob: -8.375325202941895
    3. 'unknown' → logprob: -9.375325202941895
    4. '_x' → logprob: -12.750325202941895
    5. 'y' → logprob: -12.875325202941895
    6. '_bits' → logprob: -13.125325202941895
    7. '_' → logprob: -14.375325202941895
    8. '   ' → logprob: -14.500325202941895
    9. '```' → logprob: -14.875325202941895
    10. '-' → logprob: -15.250325202941895

Token 1733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10731483995914459
    2. ')' → logprob: -2.6073148250579834
    3. ')-' → logprob: -4.1073150634765625
    4. '-' → logprob: -4.9823150634765625
    5. ' -' → logprob: -6.4823150634765625
    6. '}-' → logprob: -6.9823150634765625
    7. '}' → logprob: -7.3573150634765625
    8. '```' → logprob: -7.8573150634765625
    9. ',-' → logprob: -8.107315063476562
    10. 'unknown' → logprob: -8.857315063476562

Token 1734: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00010723850573413074
    2. '100' → logprob: -9.500106811523438
    3. ' MOD' → logprob: -10.625106811523438
    4. ')' → logprob: -12.250106811523438
    5. '```' → logprob: -14.250106811523438
    6. '_MOD' → logprob: -14.250106811523438
    7. '10' → logprob: -15.375106811523438
    8. '-' → logprob: -15.625106811523438
    9. '999' → logprob: -15.625106811523438
    10. '
' → logprob: -15.875106811523438

Token 1735: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022362226620316505
    2. ')-' → logprob: -3.897362232208252
    3. '-' → logprob: -6.647362232208252
    4. ' -' → logprob: -7.647362232208252
    5. '')' → logprob: -11.022361755371094
    6. ' )' → logprob: -11.897361755371094
    7. '")' → logprob: -12.522361755371094
    8. '```' → logprob: -12.897361755371094
    9. ',' → logprob: -13.022361755371094
    10. '-)' → logprob: -13.147361755371094

Token 1736: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132949769496918
    2. '-' → logprob: -1.3132950067520142
    3. ')-' → logprob: -10.563295364379883
    4. ')' → logprob: -11.938295364379883
    5. '```' → logprob: -16.063295364379883
    6. '-
' → logprob: -16.188295364379883
    7. '-p' → logprob: -16.313295364379883
    8. '-)' → logprob: -16.563295364379883
    9. ' ' → logprob: -16.688295364379883
    10. '
' → logprob: -16.938295364379883

Token 1737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -17.25
    4. '   ' → logprob: -17.875
    5. '```' → logprob: -18.875
    6. ')' → logprob: -19.375
    7. '       ' → logprob: -20.0
    8. '[' → logprob: -20.875
    9. 'import' → logprob: -21.25
    10. '{
' → logprob: -21.625

Token 1738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. ')' → logprob: -21.625
    7. 'def' → logprob: -22.5
    8. '       ' → logprob: -22.5
    9. '`' → logprob: -23.125
    10. '[' → logprob: -23.125

Token 1739: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007686127442866564
    2. ')%' → logprob: -4.882686138153076
    3. '+' → logprob: -9.882685661315918
    4. '   ' → logprob: -12.132685661315918
    5. ' +' → logprob: -12.257685661315918
    6. ' )' → logprob: -12.382685661315918
    7. '')' → logprob: -12.757685661315918
    8. '<|end|>' → logprob: -12.757685661315918
    9. '%' → logprob: -13.757685661315918
    10. ')return' → logprob: -14.257685661315918

Token 1740: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9210467338562012
    2. '<|end|>' → logprob: -1.1710467338562012
    3. ' %' → logprob: -1.9210467338562012
    4. ')' → logprob: -2.046046733856201
    5. ')%' → logprob: -5.046046733856201
    6. '
' → logprob: -5.796046733856201
    7. '<|end|>' → logprob: -5.796046733856201
    8. '   ' → logprob: -6.296046733856201
    9. '```' → logprob: -7.171046733856201
    10. '       ' → logprob: -7.546046733856201

Token 1741: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '_MOD' → logprob: -20.250001907348633
    4. '.MOD' → logprob: -22.750001907348633
    5. '```' → logprob: -23.625001907348633
    6. '100' → logprob: -23.625001907348633
    7. 'MO' → logprob: -24.250001907348633
    8. 'MODULE' → logprob: -24.375001907348633
    9. 'MD' → logprob: -24.875001907348633
    10. 'mod' → logprob: -26.000001907348633

Token 1742: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05022010579705238
    2. ')' → logprob: -3.300220012664795
    3. '<|end|>' → logprob: -5.175220012664795
    4. '
' → logprob: -5.675220012664795
    5. '```' → logprob: -6.425220012664795
    6. '<|end|>' → logprob: -8.550220489501953
    7. '    
' → logprob: -8.675220489501953
    8. ')
' → logprob: -8.675220489501953
    9. '*' → logprob: -9.425220489501953
    10. ':' → logprob: -9.550220489501953

Token 1743: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0180755853652954
    2. 'count' → logprob: -1.2680755853652954
    3. 'cnt' → logprob: -1.6430755853652954
    4. 'rest' → logprob: -2.393075466156006
    5. 'total' → logprob: -3.893075466156006
    6. 'res' → logprob: -4.018075466156006
    7. 'result' → logprob: -4.143075466156006
    8. 'unknown' → logprob: -5.018075466156006
    9. 'options' → logprob: -5.393075466156006
    10. 'x' → logprob: -6.768075466156006

Token 1744: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6884733438491821
    2. 'cnt' → logprob: -1.8134733438491821
    3. 'count' → logprob: -1.9384733438491821
    4. 'rest' → logprob: -2.0634732246398926
    5. 'total' → logprob: -2.3134732246398926
    6. 'x' → logprob: -2.5634732246398926
    7. 'result' → logprob: -2.8134732246398926
    8. 'options' → logprob: -2.8134732246398926
    9. 'unknown' → logprob: -3.1884732246398926
    10. '#' (adapté à ' #') → logprob: -4.563473224639893

Token 1745: ' For' (ID: 2214)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2810779809951782
    2. 'rest' → logprob: -2.0310778617858887
    3. 'options' → logprob: -2.1560778617858887
    4. '   ' → logprob: -2.4060778617858887
    5. 'res' → logprob: -2.5310778617858887
    6. 'unknown' → logprob: -2.5310778617858887
    7. 'result' → logprob: -2.7810778617858887
    8. 'total' → logprob: -3.1560778617858887
    9. 'byte' → logprob: -3.1560778617858887
    10. '#' → logprob: -4.031077861785889

Token 1746: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23298877477645874
    2. ' x' → logprob: -2.2329888343811035
    3. 'b' → logprob: -3.7329888343811035
    4. 'unknown' → logprob: -3.9829888343811035
    5. ' b' → logprob: -4.2329888343811035
    6. '#' → logprob: -4.4829888343811035
    7. 'i' → logprob: -4.9829888343811035
    8. 'y' → logprob: -5.6079888343811035
    9. ' unknown' → logprob: -5.6079888343811035
    10. ' y' → logprob: -5.7329888343811035

Token 1747: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.3560200035572052
    2. '[' → logprob: -1.7310199737548828
    3. '1' → logprob: -3.231019973754883
    4. 's' → logprob: -3.856019973754883
    5. '=' → logprob: -4.231019973754883
    6. 'bits' → logprob: -4.231019973754883
    7. ' =' → logprob: -4.731019973754883
    8. '_positions' → logprob: -5.481019973754883
    9. '_' → logprob: -5.731019973754883
    10. '7' → logprob: -5.981019973754883

Token 1748: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23078499734401703
    2. 'for' → logprob: -2.3557848930358887
    3. '=' → logprob: -3.6057848930358887
    4. 'count' → logprob: -3.9807848930358887
    5. ' =' → logprob: -4.105784893035889
    6. 'x' → logprob: -5.230784893035889
    7. '
' → logprob: -5.230784893035889
    8. ' for' → logprob: -5.480784893035889
    9. '1' → logprob: -5.480784893035889
    10. '#' → logprob: -5.855784893035889

Token 1749: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15122783184051514
    2. '[' → logprob: -2.0262279510498047
    3. 'range' → logprob: -5.276227951049805
    4. '(' → logprob: -6.901227951049805
    5. '1' → logprob: -7.026227951049805
    6. '#' → logprob: -7.901227951049805
    7. ' [' → logprob: -8.401227951049805
    8. '
' → logprob: -8.901227951049805
    9. '[b' → logprob: -8.901227951049805
    10. ' b' → logprob: -9.151227951049805

Token 1750: ' byte' (ID: 9239)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0929831713438034
    2. '[' → logprob: -2.7179832458496094
    3. ']' → logprob: -4.342983245849609
    4. '][' → logprob: -5.842983245849609
    5. '```' → logprob: -5.967983245849609
    6. '6' → logprob: -6.342983245849609
    7. 'b' → logprob: -7.342983245849609
    8. '`' → logprob: -7.592983245849609
    9. 'byte' → logprob: -8.59298324584961
    10. '
' → logprob: -8.59298324584961

Token 1751: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.541625440120697
    2. '7' → logprob: -2.666625499725342
    3. '   ' → logprob: -2.791625499725342
    4. 'count' → logprob: -2.916625499725342
    5. ',' → logprob: -3.041625499725342
    6. 'x' → logprob: -3.166625499725342
    7. '=' → logprob: -3.666625499725342
    8. 'i' → logprob: -3.666625499725342
    9. '6' → logprob: -3.791625499725342
    10. 'unknown' → logprob: -4.291625499725342

Token 1752: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9803076386451721
    2. 'for' → logprob: -0.9803076386451721
    3. '7' → logprob: -2.8553075790405273
    4. '6' → logprob: -2.9803075790405273
    5. '2' → logprob: -3.1053075790405273
    6. '0' → logprob: -3.7303075790405273
    7. ' for' → logprob: -4.480307579040527
    8. '1' → logprob: -4.480307579040527
    9. 'count' → logprob: -4.480307579040527
    10. ' b' → logprob: -4.855307579040527

Token 1753: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0010721079306676984
    2. '[' → logprob: -6.876071929931641
    3. '1' → logprob: -10.62607192993164
    4. '   ' → logprob: -12.00107192993164
    5. '
' → logprob: -12.25107192993164
    6. '7' → logprob: -13.87607192993164
    7. '```' → logprob: -13.87607192993164
    8. ']' → logprob: -14.50107192993164
    9. '``' → logprob: -15.00107192993164
    10. '#' → logprob: -15.37607192993164

Token 1754: '[' (ID: 58)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.47709599137306213
    2. '[' → logprob: -0.9770959615707397
    3. '```' → logprob: -6.227096080780029
    4. '`' → logprob: -7.977096080780029
    5. '``' → logprob: -8.352095603942871
    6. '(' → logprob: -8.852095603942871
    7. '[
' → logprob: -9.852095603942871
    8. ' =' → logprob: -10.352095603942871
    9. '=' → logprob: -10.477095603942871
    10. ']' → logprob: -10.477095603942871

Token 1755: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.750006675720215
    3. '1' → logprob: -14.000006675720215
    4. '
' → logprob: -14.375006675720215
    5. '(' → logprob: -14.625006675720215
    6. '0' → logprob: -14.625006675720215
    7. ']' → logprob: -14.750006675720215
    8. '```' → logprob: -15.312506675720215
    9. '[' → logprob: -15.625006675720215
    10. ''' → logprob: -15.875006675720215

Token 1756: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7701968550682068
    2. '],' → logprob: -0.8951968550682068
    3. ',' → logprob: -2.2701969146728516
    4. '7' → logprob: -4.395196914672852
    5. 'and' → logprob: -5.520196914672852
    6. '6' → logprob: -5.770196914672852
    7. ' and' → logprob: -5.895196914672852
    8. '],
' → logprob: -7.395196914672852
    9. ']=' → logprob: -7.895196914672852
    10. ':' → logprob: -8.020196914672852

Token 1757: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002848029136657715
    2. 'b' → logprob: -5.877848148345947
    3. ' ' → logprob: -10.627847671508789
    4. '```' → logprob: -11.127847671508789
    5. ' b' → logprob: -12.752847671508789
    6. '   ' → logprob: -15.002847671508789
    7. '`' → logprob: -15.502847671508789
    8. '0' → logprob: -15.627847671508789
    9. '``' → logprob: -15.627847671508789
    10. '
' → logprob: -15.877847671508789

Token 1758: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.6047699318733066e-05
    2. '1' → logprob: -12.000016212463379
    3. '0' → logprob: -12.125016212463379
    4. '6' → logprob: -13.250016212463379
    5. '[' → logprob: -14.000016212463379
    6. ']' → logprob: -14.250016212463379
    7. ' ' → logprob: -14.375016212463379
    8. '```' → logprob: -15.750016212463379
    9. '5' → logprob: -16.125015258789062
    10. '(' → logprob: -16.250015258789062

Token 1759: '[' (ID: 58)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.11316226422786713
    2. '[' → logprob: -2.2381622791290283
    3. ']' → logprob: -8.73816204071045
    4. '```' → logprob: -9.36316204071045
    5. ',' → logprob: -10.23816204071045
    6. '(' → logprob: -10.36316204071045
    7. '][' → logprob: -11.11316204071045
    8. '[
' → logprob: -13.23816204071045
    9. '],' → logprob: -13.61316204071045
    10. '`' → logprob: -13.61316204071045

Token 1760: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.735893965815194e-05
    2. '0' → logprob: -11.375017166137695
    3. '1' → logprob: -13.375017166137695
    4. ']' → logprob: -13.750017166137695
    5. '```' → logprob: -13.875017166137695
    6. '5' → logprob: -14.250017166137695
    7. ' ' → logprob: -14.500017166137695
    8. '6' → logprob: -15.125017166137695
    9. '
' → logprob: -15.250017166137695
    10. '[' → logprob: -16.000017166137695

Token 1761: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3974350392818451
    2. ')' → logprob: -1.6474350690841675
    3. ',' → logprob: -2.397434949874878
    4. '],' → logprob: -3.397434949874878
    5. '),' → logprob: -5.897435188293457
    6. '])' → logprob: -6.272435188293457
    7. ':' → logprob: -6.522435188293457
    8. '...' → logprob: -6.522435188293457
    9. '<|end|>' → logprob: -7.397435188293457
    10. ']=' → logprob: -7.647435188293457

Token 1762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20178167521953583
    2. ')' → logprob: -2.576781749725342
    3. ',' → logprob: -3.951781749725342
    4. '=' → logprob: -4.576781749725342
    5. ' =' → logprob: -4.576781749725342
    6. 'count' → logprob: -4.701781749725342
    7. 'x' → logprob: -4.951781749725342
    8. '*' → logprob: -5.076781749725342
    9. '```' → logprob: -5.201781749725342
    10. ' x' → logprob: -5.451781749725342

Token 1763: ' x' (ID: 1215)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7623459100723267
    2. 'unknown' → logprob: -1.3873459100723267
    3. '   ' → logprob: -2.262345790863037
    4. 'if' → logprob: -2.637345790863037
    5. 'x' (adapté à ' x') → logprob: -3.137345790863037
    6. 'cnt' → logprob: -4.262345790863037
    7. ' unknown' → logprob: -4.637345790863037
    8. ' count' → logprob: -4.637345790863037
    9. ' if' → logprob: -5.137345790863037
    10. '```' → logprob: -5.387345790863037

Token 1764: '1' (ID: 16)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.23491081595420837
    2. '_vals' → logprob: -2.359910726547241
    3. 'bits' → logprob: -3.359910726547241
    4. '=' → logprob: -3.359910726547241
    5. ' =' → logprob: -4.60991096496582
    6. 'vals' → logprob: -4.73491096496582
    7. '_count' → logprob: -4.85991096496582
    8. 'count' → logprob: -5.10991096496582
    9. '_counts' → logprob: -5.60991096496582
    10. '_val' → logprob: -5.85991096496582

Token 1765: '_count' (ID: 7536)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.8583946824073792
    2. ' =' → logprob: -1.4833946228027344
    3. '_vals' → logprob: -1.9833946228027344
    4. '=' → logprob: -2.6083946228027344
    5. '_counts' → logprob: -3.6083946228027344
    6. '_count' → logprob: -3.6083946228027344
    7. '_val' → logprob: -3.7333946228027344
    8. 'bits' → logprob: -3.9833946228027344
    9. '_values' → logprob: -4.733394622802734
    10. 'vals' → logprob: -5.108394622802734

Token 1766: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048528365790844
    2. ' =' → logprob: -4.511048316955566
    3. '=(' → logprob: -14.886048316955566
    4. '=
' → logprob: -15.386048316955566
    5. '   ' → logprob: -16.136049270629883
    6. '*=' → logprob: -17.136049270629883
    7. '=((' → logprob: -17.761049270629883
    8. '```' → logprob: -17.886049270629883
    9. '=count' → logprob: -18.011049270629883
    10. '=

' → logprob: -18.761049270629883

Token 1767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13129182159900665
    2. 'pow' → logprob: -2.5062918663024902
    3. '(' → logprob: -3.2562918663024902
    4. '(pow' → logprob: -5.88129186630249
    5. '2' → logprob: -9.506291389465332
    6. '((' → logprob: -11.381291389465332
    7. ' pow' → logprob: -11.631291389465332
    8. 'count' → logprob: -11.881291389465332
    9. '(s' → logprob: -12.006291389465332
    10. '   ' → logprob: -12.381291389465332

Token 1768: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2755231261253357
    2. '
' → logprob: -2.0255231857299805
    3. ' =' → logprob: -2.7755231857299805
    4. '*' → logprob: -4.0255231857299805
    5. 'for' → logprob: -4.5255231857299805
    6. 'if' → logprob: -4.6505231857299805
    7. '*=' → logprob: -5.9005231857299805
    8. '*(' → logprob: -6.6505231857299805
    9. ' *=' → logprob: -6.7755231857299805
    10. ' *' → logprob: -7.2755231857299805

Token 1769: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1027476042509079
    2. '
' → logprob: -2.727747678756714
    3. '   ' → logprob: -3.727747678756714
    4. '```' → logprob: -5.352747440338135
    5. 'for' → logprob: -6.352747440338135
    6. '*' → logprob: -7.602747440338135
    7. ' if' → logprob: -8.102747917175293
    8. '1' → logprob: -8.352747917175293
    9. 'def' → logprob: -8.852747917175293
    10. '=' → logprob: -8.977747917175293

Token 1770: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03008078783750534
    2. 'for' (adapté à ' for') → logprob: -3.530080795288086
    3. '```' → logprob: -8.405080795288086
    4. ' if' → logprob: -9.905080795288086
    5. '1' → logprob: -11.030080795288086
    6. '   ' → logprob: -11.280080795288086
    7. '
' → logprob: -11.780080795288086
    8. '*' → logprob: -11.905080795288086
    9. 'If' → logprob: -12.530080795288086
    10. '=' → logprob: -12.780080795288086

Token 1771: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018947436183225363
    2. 'pos' → logprob: -8.625189781188965
    3. 'idx' → logprob: -11.750189781188965
    4. ' i' → logprob: -14.375189781188965
    5. 'bit' → logprob: -14.375189781188965
    6. 'j' → logprob: -14.750189781188965
    7. 'c' → logprob: -15.250189781188965
    8. 'p' → logprob: -16.75018882751465
    9. '(i' → logprob: -16.87518882751465
    10. 'ch' → logprob: -17.00018882751465

Token 1772: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.029757659882307053
    2. ' in' → logprob: -3.5297577381134033
    3. '6' → logprob: -12.404757499694824
    4. '```' → logprob: -13.779757499694824
    5. '   ' → logprob: -14.404757499694824
    6. 'i' → logprob: -14.404757499694824
    7. '
' → logprob: -15.154757499694824
    8. ' ' → logprob: -16.02975845336914
    9. '	in' → logprob: -16.02975845336914
    10. 'In' → logprob: -16.27975845336914

Token 1773: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024187646806240082
    2. '[' → logprob: -3.7741875648498535
    3. '(' → logprob: -7.0241875648498535
    4. ' range' → logprob: -9.899188041687012
    5. '(range' → logprob: -14.149188041687012
    6. '6' → logprob: -14.899188041687012
    7. ' [' → logprob: -15.524188041687012
    8. '([' → logprob: -16.899187088012695
    9. 'Range' → logprob: -17.649187088012695
    10. '{' → logprob: -18.774187088012695

Token 1774: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11480522155761719
    2. '6' → logprob: -2.239805221557617
    3. 'range' → logprob: -6.239805221557617
    4. '[' → logprob: -10.989805221557617
    5. ' (' → logprob: -12.364805221557617
    6. '   ' → logprob: -12.739805221557617
    7. ' range' → logprob: -13.239805221557617
    8. '(
' → logprob: -14.364805221557617
    9. '(range' → logprob: -14.364805221557617
    10. '7' → logprob: -14.489805221557617

Token 1775: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.000003814697266
    4. 'len' → logprob: -16.375003814697266
    5. '```' → logprob: -16.500003814697266
    6. '
' → logprob: -17.125003814697266
    7. '2' → logprob: -17.125003814697266
    8. '(' → logprob: -17.125003814697266
    9. '[' → logprob: -17.250003814697266
    10. '  ' → logprob: -18.500003814697266

Token 1776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. '7' → logprob: -9.750072479248047
    3. '6' → logprob: -12.000072479248047
    4. ',len' → logprob: -12.500072479248047
    5. ' ,' → logprob: -12.750072479248047
    6. ',
' → logprob: -14.500072479248047
    7. ',i' → logprob: -15.375072479248047
    8. '```' → logprob: -16.125072479248047
    9. '
' → logprob: -16.375072479248047
    10. ',b' → logprob: -16.875072479248047

Token 1777: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. 'len' → logprob: -18.125
    4. '   ' → logprob: -18.625
    5. '7' → logprob: -19.25
    6. '```' → logprob: -21.0
    7. '9' → logprob: -21.25
    8. '８' → logprob: -21.875
    9. ')' → logprob: -22.375
    10. '=' → logprob: -22.75

Token 1778: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015822838991880417
    2. ':
' → logprob: -5.140822887420654
    3. '):' → logprob: -5.390822887420654
    4. '   ' → logprob: -5.765822887420654
    5. ':' → logprob: -6.265822887420654
    6. ')' → logprob: -9.515822410583496
    7. ',' → logprob: -10.140822410583496
    8. '       ' → logprob: -10.390822410583496
    9. 'if' → logprob: -10.765822410583496
    10. '```' → logprob: -10.765822410583496

Token 1779: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2384304255247116
    2. '       ' → logprob: -1.613430380821228
    3. ' if' → logprob: -4.738430500030518
    4. '```' → logprob: -6.238430500030518
    5. '   ' → logprob: -6.988430500030518
    6. '=' → logprob: -6.988430500030518
    7. '	if' → logprob: -8.73843002319336
    8. '
' → logprob: -9.61343002319336
    9. 'for' → logprob: -10.36343002319336
    10. ' =' → logprob: -10.61343002319336

Token 1780: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003097500652074814
    2. '       ' → logprob: -6.3780975341796875
    3. ' if' → logprob: -6.6280975341796875
    4. '```' → logprob: -9.878097534179688
    5. '	if' → logprob: -12.003097534179688
    6. '   ' → logprob: -12.128097534179688
    7. 'c' → logprob: -12.378097534179688
    8. 'If' → logprob: -13.878097534179688
    9. '``' → logprob: -14.753097534179688
    10. 'x' → logprob: -14.753097534179688

Token 1781: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.87520408630371
    4. '	b' → logprob: -18.50020408630371
    5. ' ' → logprob: -19.37520408630371
    6. '(b' → logprob: -20.37520408630371
    7. '       ' → logprob: -21.12520408630371
    8. '  ' → logprob: -21.37520408630371
    9. '```' → logprob: -21.37520408630371
    10. '[b' → logprob: -21.50020408630371

Token 1782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002387302927672863
    2. '[i' → logprob: -6.127387523651123
    3. '[' → logprob: -8.877387046813965
    4. 'i' → logprob: -9.752387046813965
    5. '```' → logprob: -13.002387046813965
    6. 'b' → logprob: -14.002387046813965
    7. '
' → logprob: -15.002387046813965
    8. '[
' → logprob: -15.752387046813965
    9. 's' → logprob: -15.877387046813965
    10. '(i' → logprob: -16.12738800048828

Token 1783: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.153795766294934e-06
    2. 'i' → logprob: -12.250005722045898
    3. '```' → logprob: -14.375005722045898
    4. '[
' → logprob: -15.750005722045898
    5. '(i' → logprob: -15.750005722045898
    6. '   ' → logprob: -16.6250057220459
    7. '[' → logprob: -16.6250057220459
    8. '`' → logprob: -16.7500057220459
    9. '[I' → logprob: -16.8750057220459
    10. '
' → logprob: -17.6250057220459

Token 1784: ']=='' (ID: 71177)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27541840076446533
    2. ']==' → logprob: -1.5254184007644653
    3. '==' → logprob: -4.400418281555176
    4. ']=='' → logprob: -4.650418281555176
    5. ' ==' → logprob: -7.025418281555176
    6. '=='' → logprob: -7.775418281555176
    7. '[' → logprob: -10.525418281555176
    8. '   ' → logprob: -11.025418281555176
    9. ' ]' → logprob: -12.025418281555176
    10. '']' → logprob: -12.150418281555176

Token 1785: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.008630638010799885
    2. 'x' → logprob: -4.758630752563477
    3. '"x' → logprob: -12.133630752563477
    4. ' '' → logprob: -13.008630752563477
    5. ' ' → logprob: -13.133630752563477
    6. ''' → logprob: -13.133630752563477
    7. ' x' → logprob: -13.508630752563477
    8. '   ' → logprob: -13.758630752563477
    9. '['' → logprob: -14.508630752563477
    10. '	x' → logprob: -14.758630752563477

Token 1786: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11533796787261963
    2. ':' → logprob: -2.99033784866333
    3. '):
' → logprob: -2.99033784866333
    4. '       ' → logprob: -5.24033784866333
    5. '           ' → logprob: -6.61533784866333
    6. '):' → logprob: -7.61533784866333
    7. ')' → logprob: -7.74033784866333
    8. ''):
' → logprob: -8.240338325500488
    9. '':
' → logprob: -8.865338325500488
    10. '   ' → logprob: -9.365338325500488

Token 1787: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6392779350280762
    2. '=' → logprob: -1.5142779350280762
    3. '       ' → logprob: -1.8892779350280762
    4. '           ' → logprob: -2.639277935028076
    5. '```' → logprob: -4.639277935028076
    6. ' x' → logprob: -4.764277935028076
    7. '               ' → logprob: -5.389277935028076
    8. ' =' → logprob: -6.389277935028076
    9. '   ' → logprob: -6.389277935028076
    10. '=x' → logprob: -7.389277935028076

Token 1788: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00012606535165105015
    2. ' x' → logprob: -9.000125885009766
    3. '```' → logprob: -13.250125885009766
    4. '2' → logprob: -14.625125885009766
    5. '``' → logprob: -14.875125885009766
    6. '(x' → logprob: -16.625125885009766
    7. '`' → logprob: -17.125125885009766
    8. 'count' → logprob: -19.125125885009766
    9. '=' → logprob: -19.125125885009766
    10. '   ' → logprob: -19.250125885009766

Token 1789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. '_count' → logprob: -12.000008583068848
    3. 'count' → logprob: -13.250008583068848
    4. '=' → logprob: -15.000008583068848
    5. '
' → logprob: -15.500008583068848
    6. '```' → logprob: -16.250009536743164
    7. 'x' → logprob: -17.125009536743164
    8. '`' → logprob: -18.125009536743164
    9. '１' → logprob: -19.000009536743164
    10. '' → logprob: -19.125009536743164

Token 1790: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005778160993941128
    2. '=' → logprob: -7.875577926635742
    3. 'count' → logprob: -8.750577926635742
    4. '=_' → logprob: -10.500577926635742
    5. 'x' → logprob: -11.875577926635742
    6. ' =' → logprob: -13.500577926635742
    7. '_x' → logprob: -13.625577926635742
    8. '=x' → logprob: -14.375577926635742
    9. ' _' → logprob: -15.250577926635742
    10. '```' → logprob: -15.250577926635742

Token 1791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014628116972744465
    2. '*=' → logprob: -4.264627933502197
    3. ' =' → logprob: -7.764627933502197
    4. '=(' → logprob: -10.514628410339355
    5. '*' → logprob: -11.514628410339355
    6. '```' → logprob: -13.264628410339355
    7. ' *=' → logprob: -13.889628410339355
    8. '+=' → logprob: -16.51462745666504
    9. '%=' → logprob: -16.88962745666504
    10. '=*' → logprob: -17.13962745666504

Token 1792: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.542423165636137e-05
    2. ' (' → logprob: -9.375085830688477
    3. '(' → logprob: -15.750085830688477
    4. '           ' → logprob: -16.000085830688477
    5. 'x' → logprob: -16.250085830688477
    6. '   ' → logprob: -16.500085830688477
    7. '```' → logprob: -16.750085830688477
    8. '       ' → logprob: -18.875085830688477
    9. '(a' → logprob: -19.125085830688477
    10. '`' → logprob: -19.250085830688477

Token 1793: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740845859050751
    2. '(x' → logprob: -0.9740846157073975
    3. ' x' → logprob: -12.349084854125977
    4. '(' → logprob: -13.599084854125977
    5. ' (' → logprob: -14.099084854125977
    6. ')x' → logprob: -14.974084854125977
    7. '{x' → logprob: -15.099084854125977
    8. '`' → logprob: -15.974084854125977
    9. '```' → logprob: -16.224084854125977
    10. '[x' → logprob: -16.474084854125977

Token 1794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07338830828666687
    2. 'x' → logprob: -2.6983883380889893
    3. '(x' → logprob: -5.69838809967041
    4. ' x' → logprob: -9.69838809967041
    5. '```' → logprob: -11.94838809967041
    6. '[x' → logprob: -11.94838809967041
    7. '(' → logprob: -12.19838809967041
    8. ' (' → logprob: -12.82338809967041
    9. '_x' → logprob: -12.82338809967041
    10. '*x' → logprob: -12.94838809967041

Token 1795: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.06739525496959686
    2. 'x' → logprob: -3.4423952102661133
    3. '1' → logprob: -4.067395210266113
    4. '*' → logprob: -4.192395210266113
    5. '*x' → logprob: -7.567395210266113
    6. ' *' → logprob: -8.317395210266113
    7. '*_' → logprob: -9.067395210266113
    8. ' x' → logprob: -10.692395210266113
    9. 'count' → logprob: -10.692395210266113
    10. '```' → logprob: -11.567395210266113

Token 1796: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0031797364354133606
    2. ' *' → logprob: -5.753179550170898
    3. '*x' → logprob: -13.503179550170898
    4. '```' → logprob: -15.128179550170898
    5. '*(' → logprob: -15.753179550170898
    6. '2' → logprob: -15.878179550170898
    7. '**' → logprob: -16.8781795501709
    8. '*=' → logprob: -17.1281795501709
    9. '*object' → logprob: -17.2531795501709
    10. '=' → logprob: -18.3781795501709

Token 1797: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '   ' → logprob: -17.125001907348633
    5. 'pow' → logprob: -17.125001907348633
    6. '```' → logprob: -17.375001907348633
    7. '۲' → logprob: -19.562501907348633
    8. '
' → logprob: -19.750001907348633
    9. '       ' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.312501907348633

Token 1798: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014167149551212788
    2. ')%' → logprob: -4.264167308807373
    3. ' )' → logprob: -12.764166831970215
    4. '%' → logprob: -14.264166831970215
    5. ')...' → logprob: -16.63916778564453
    6. '%)' → logprob: -16.88916778564453
    7. '),' → logprob: -17.13916778564453
    8. ')
' → logprob: -17.26416778564453
    9. '*' → logprob: -17.51416778564453
    10. ')#' → logprob: -18.51416778564453

Token 1799: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.5
    3. '100' → logprob: -20.75
    4. '_MOD' → logprob: -22.125
    5. '.MOD' → logprob: -23.375
    6. '```' → logprob: -23.875
    7. 'MD' → logprob: -24.125
    8. 'MO' → logprob: -25.375
    9. '(M' → logprob: -26.125
    10. '`' → logprob: -26.375

Token 1800: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46252378821372986
    2. '<|end|>' → logprob: -1.9625238180160522
    3. '```' → logprob: -2.5875236988067627
    4. '   ' → logprob: -2.7125236988067627
    5. 'continue' → logprob: -3.5875236988067627
    6. 'else' → logprob: -3.5875236988067627
    7. '	continue' → logprob: -5.212523937225342
    8. '<|end|>' → logprob: -5.337523937225342
    9. '           ' → logprob: -5.712523937225342
    10. 'x' → logprob: -6.212523937225342

Token 1802: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09284228831529617
    2. '   ' → logprob: -3.3428423404693604
    3. ' else' → logprob: -3.8428423404693604
    4. '       ' → logprob: -4.092842102050781
    5. 'elif' (adapté à ' elif') → logprob: -4.717842102050781
    6. 'continue' → logprob: -6.092842102050781
    7. ')' → logprob: -6.342842102050781
    8. '```' → logprob: -7.217842102050781
    9. '.' → logprob: -8.217842102050781
    10. '#' → logprob: -8.467842102050781

Token 1803: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3856492842023727e-06
    2. 'False' → logprob: -14.125000953674316
    3. 'True' → logprob: -15.125000953674316
    4. ' b' → logprob: -15.375000953674316
    5. '   ' → logprob: -17.000001907348633
    6. '
' → logprob: -17.250001907348633
    7. '1' → logprob: -17.375001907348633
    8. '(b' → logprob: -17.625001907348633
    9. '#' → logprob: -17.875001907348633
    10. 'x' → logprob: -18.750001907348633

Token 1804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6484274864196777
    2. '[i' → logprob: -0.7734274864196777
    3. '[' → logprob: -4.523427486419678
    4. 'i' → logprob: -5.398427486419678
    5. '```' → logprob: -8.648427963256836
    6. '(i' → logprob: -10.523427963256836
    7. '0' → logprob: -10.648427963256836
    8. ''[' → logprob: -10.773427963256836
    9. '[]' → logprob: -11.148427963256836
    10. ''i' → logprob: -11.898427963256836

Token 1805: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -15.000001907348633
    4. '[I' → logprob: -16.875001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '(i' → logprob: -17.125001907348633
    7. '```' → logprob: -18.125001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. 'in' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.250001907348633

Token 1806: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07283130288124084
    2. ']' → logprob: -3.447831392288208
    3. ']==' → logprob: -3.697831392288208
    4. '[' → logprob: -5.072831153869629
    5. 'i' → logprob: -5.947831153869629
    6. ']=='' → logprob: -6.072831153869629
    7. '==' → logprob: -6.947831153869629
    8. ']!=' → logprob: -7.322831153869629
    9. ']!='' → logprob: -8.197831153869629
    10. '=='' → logprob: -8.322831153869629

Token 1807: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1665372848510742
    2. 'not' → logprob: -1.2915372848510742
    3. '!=' → logprob: -1.4165372848510742
    4. '[' → logprob: -2.916537284851074
    5. ' not' → logprob: -2.916537284851074
    6. 'in' → logprob: -3.166537284851074
    7. '[i' → logprob: -5.041537284851074
    8. '!='' → logprob: -5.416537284851074
    9. '=='' → logprob: -5.666537284851074
    10. ' in' → logprob: -6.041537284851074

Token 1808: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0012652362929657102
    2. '['' → logprob: -7.501265048980713
    3. ' ('' → logprob: -7.751265048980713
    4. ''' → logprob: -8.501265525817871
    5. '{'' → logprob: -9.501265525817871
    6. ' ['' → logprob: -13.876265525817871
    7. '("' → logprob: -14.251265525817871
    8. '(' → logprob: -14.501265525817871
    9. '(['' → logprob: -14.751265525817871
    10. '(('' → logprob: -15.376265525817871

Token 1809: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1568034589290619
    2. '01' → logprob: -2.4068033695220947
    3. '0' → logprob: -2.9068033695220947
    4. '('' → logprob: -8.406803131103516
    5. '{'' → logprob: -9.281803131103516
    6. '['' → logprob: -10.531803131103516
    7. '00' → logprob: -11.656803131103516
    8. '"' → logprob: -12.031803131103516
    9. '10' → logprob: -12.406803131103516
    10. '012' → logprob: -12.781803131103516

Token 1810: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.11335929483175278
    2. ',' → logprob: -2.488359212875366
    3. '','' → logprob: -3.738359212875366
    4. '',' → logprob: -8.363359451293945
    5. ''' → logprob: -10.113359451293945
    6. ',
' → logprob: -10.988359451293945
    7. ' ,' → logprob: -11.988359451293945
    8. '   ' → logprob: -12.113359451293945
    9. ',"' → logprob: -12.113359451293945
    10. ' ,'' → logprob: -12.238359451293945

Token 1811: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6931543946266174
    2. '1' → logprob: -0.6931543946266174
    3. '"' → logprob: -13.443154335021973
    4. ' ' → logprob: -13.443154335021973
    5. '   ' → logprob: -13.568154335021973
    6. ' '' → logprob: -13.818154335021973
    7. '`' → logprob: -14.443154335021973
    8. '('' → logprob: -14.818154335021973
    9. ')' → logprob: -15.068154335021973
    10. '{'' → logprob: -15.193154335021973

Token 1812: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35697925090789795
    2. '):' → logprob: -1.606979250907898
    3. ')' → logprob: -2.7319793701171875
    4. ''):
' → logprob: -4.2319793701171875
    5. ':' → logprob: -4.8569793701171875
    6. ',' → logprob: -4.9819793701171875
    7. ''):' → logprob: -6.3569793701171875
    8. ':
' → logprob: -6.6069793701171875
    9. '       ' → logprob: -6.8569793701171875
    10. '')' → logprob: -8.231979370117188

Token 1813: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08176015317440033
    2. '       ' → logprob: -3.0817601680755615
    3. 'continue' → logprob: -3.7067601680755615
    4. 'pass' → logprob: -5.956759929656982
    5. ':' → logprob: -6.206759929656982
    6. ' continue' → logprob: -6.456759929656982
    7. ':
' → logprob: -7.581759929656982
    8. '```' → logprob: -7.956759929656982
    9. 'x' → logprob: -8.20676040649414
    10. '   ' → logprob: -8.33176040649414

Token 1814: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.26619577407836914
    2. 'x' → logprob: -1.5161957740783691
    3. 'continue' → logprob: -4.266195774078369
    4. ' pass' → logprob: -9.641195297241211
    5. '1' → logprob: -10.266195297241211
    6. '           ' → logprob: -10.891195297241211
    7. '       ' → logprob: -12.141195297241211
    8. '0' → logprob: -13.516195297241211
    9. ' continue' → logprob: -13.766195297241211
    10. '   ' → logprob: -13.766195297241211

Token 1815: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1816: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1817: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.31188100576400757
    2. '       ' → logprob: -1.5618810653686523
    3. '   ' → logprob: -3.0618810653686523
    4. ' else' → logprob: -4.686881065368652
    5. 'continue' → logprob: -6.561881065368652
    6. '```' → logprob: -7.686881065368652
    7. '<|end|>' → logprob: -9.811881065368652
    8. ' continue' → logprob: -10.061881065368652
    9. '	else' → logprob: -10.436881065368652
    10. '           ' → logprob: -10.436881065368652

Token 1818: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44604185223579407
    2. ':' → logprob: -1.9460418224334717
    3. ':
' → logprob: -2.1960418224334717
    4. '       ' → logprob: -2.6960418224334717
    5. ':return' → logprob: -3.8210418224334717
    6. '=' → logprob: -4.321042060852051
    7. ' return' → logprob: -7.571042060852051
    8. 'return' → logprob: -7.821042060852051
    9. '):
' → logprob: -8.19604206085205
    10. '   ' → logprob: -8.19604206085205

Token 1819: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03239569440484047
    2. ' return' → logprob: -4.282395839691162
    3. '           ' → logprob: -4.407395839691162
    4. '       ' → logprob: -5.407395839691162
    5. '```' → logprob: -7.157395839691162
    6. '   ' → logprob: -8.032395362854004
    7. '0' → logprob: -9.907395362854004
    8. 'continue' → logprob: -9.907395362854004
    9. '	return' → logprob: -10.157395362854004
    10. ' ' → logprob: -10.157395362854004

Token 1820: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001749351795297116
    2. ' return' → logprob: -9.000174522399902
    3. '           ' → logprob: -10.000174522399902
    4. '       ' → logprob: -12.875174522399902
    5. '   ' → logprob: -13.250174522399902
    6. '```' → logprob: -13.875174522399902
    7. '	return' → logprob: -14.875174522399902
    8. '0' → logprob: -16.37517547607422
    9. '               ' → logprob: -16.50017547607422
    10. '
' → logprob: -16.62517547607422

Token 1821: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '۰' → logprob: -21.875553131103516
    4. '000' → logprob: -22.000553131103516
    5. '  ' → logprob: -22.125553131103516
    6. 'None' → logprob: -22.375553131103516
    7. '```' → logprob: -22.625553131103516
    8. '   ' → logprob: -22.625553131103516
    9. '(' → logprob: -22.875553131103516
    10. 'False' → logprob: -22.875553131103516

Token 1822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.625
    4. 'None' → logprob: -21.0
    5. '`' → logprob: -21.5
    6. '000' → logprob: -21.625
    7. '   ' → logprob: -22.0
    8. '۰' → logprob: -22.25
    9. 'False' → logprob: -22.75
    10. ')' → logprob: -22.75

Token 1823: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004005742259323597
    2. ')' → logprob: -6.2540059089660645
    3. 'x' → logprob: -7.2540059089660645
    4. '```' → logprob: -7.2540059089660645
    5. '<|end|>' → logprob: -8.129005432128906
    6. '#' → logprob: -9.379005432128906
    7. 'for' → logprob: -9.629005432128906
    8. '.' → logprob: -9.754005432128906
    9. ' x' → logprob: -11.004005432128906
    10. ' for' → logprob: -11.004005432128906

Token 1824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024628328159451485
    2. '```' → logprob: -4.399628162384033
    3. 'x' → logprob: -4.649628162384033
    4. '
' → logprob: -6.649628162384033
    5. ')' → logprob: -7.524628162384033
    6. '    
' → logprob: -8.649628639221191
    7. '``' → logprob: -8.774628639221191
    8. ' x' → logprob: -9.149628639221191
    9. 'for' → logprob: -9.899628639221191
    10. 'count' → logprob: -10.524628639221191

Token 1825: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009859968908131123
    2. 'count' → logprob: -5.134860038757324
    3. '```' → logprob: -6.134860038757324
    4. '   ' → logprob: -6.884860038757324
    5. 'cnt' → logprob: -8.259860038757324
    6. '
' → logprob: -8.509860038757324
    7. '``' → logprob: -8.634860038757324
    8. 'total' → logprob: -10.509860038757324
    9. '#' (adapté à ' #') → logprob: -11.009860038757324
    10. ' x' → logprob: -11.009860038757324

Token 1826: ' For' (ID: 2214)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002776823937892914
    2. '   ' → logprob: -6.377776622772217
    3. '#' → logprob: -6.877776622772217
    4. '```' → logprob: -10.627777099609375
    5. '
' → logprob: -11.377777099609375
    6. 'for' → logprob: -13.252777099609375
    7. ' x' → logprob: -13.502777099609375
    8. 'if' → logprob: -13.627777099609375
    9. '``' → logprob: -13.877777099609375
    10. 'def' → logprob: -14.252777099609375

Token 1827: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019321197643876076
    2. 'b' → logprob: -4.644320964813232
    3. 'for' → logprob: -4.894320964813232
    4. '#' → logprob: -7.394320964813232
    5. 'range' → logprob: -7.519320964813232
    6. ' i' → logprob: -8.01932144165039
    7. 'x' → logprob: -8.51932144165039
    8. 'def' → logprob: -8.64432144165039
    9. '
' → logprob: -10.26932144165039
    10. '2' → logprob: -10.51932144165039

Token 1828: ' bits' (ID: 18189)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06436024606227875
    2. '(' → logprob: -3.1893601417541504
    3. 'i' → logprob: -4.68936014175415
    4. '[' → logprob: -5.43936014175415
    5. 'for' → logprob: -5.43936014175415
    6. '7' → logprob: -6.81436014175415
    7. 'bits' → logprob: -7.06436014175415
    8. '1' → logprob: -8.064360618591309
    9. 'b' → logprob: -8.564360618591309
    10. 'positions' → logprob: -8.689360618591309

Token 1829: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.36039814352989197
    2. 'for' → logprob: -1.4853981733322144
    3. 'count' → logprob: -2.985398054122925
    4. '(' → logprob: -4.610398292541504
    5. '   ' → logprob: -5.110398292541504
    6. ' in' → logprob: -5.485398292541504
    7. '=' → logprob: -7.235398292541504
    8. ' for' → logprob: -7.360398292541504
    9. 'range' → logprob: -7.360398292541504
    10. 'i' → logprob: -7.360398292541504

Token 1830: ' second' (ID: 3099)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001434690784662962
    2. 'range' → logprob: -8.875143051147461
    3. '[' → logprob: -13.500143051147461
    4. ' b' → logprob: -13.625143051147461
    5. '#' → logprob: -15.500143051147461
    6. '(b' → logprob: -15.625143051147461
    7. '(' → logprob: -15.750143051147461
    8. '1' → logprob: -16.37514305114746
    9. '2' → logprob: -16.50014305114746
    10. '
' → logprob: -16.62514305114746

Token 1831: ' byte' (ID: 9239)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6503544449806213
    2. 'byte' → logprob: -0.7753544449806213
    3. 'b' → logprob: -4.150354385375977
    4. '[' → logprob: -7.400354385375977
    5. '_byte' → logprob: -7.900354385375977
    6. '```' → logprob: -8.275354385375977
    7. ' byte' → logprob: -8.900354385375977
    8. 'def' → logprob: -8.900354385375977
    9. 'Byte' → logprob: -9.025354385375977
    10. 'bytes' → logprob: -9.150354385375977

Token 1832: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12233792245388031
    2. '   ' → logprob: -2.247337818145752
    3. 'count' → logprob: -5.122337818145752
    4. ' for' → logprob: -6.747337818145752
    5. '2' → logprob: -6.872337818145752
    6. '(' → logprob: -7.747337818145752
    7. '
' → logprob: -8.12233829498291
    8. '```' → logprob: -8.62233829498291
    9. 'range' → logprob: -9.37233829498291
    10. '6' → logprob: -9.49733829498291

Token 1833: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06032119691371918
    2. 'range' → logprob: -3.060321092605591
    3. '2' → logprob: -4.56032133102417
    4. 'from' → logprob: -7.81032133102417
    5. '```' → logprob: -8.560320854187012
    6. ' for' → logprob: -8.685320854187012
    7. '   ' → logprob: -8.685320854187012
    8. 'i' → logprob: -9.435320854187012
    9. '
' → logprob: -9.685320854187012
    10. 'def' → logprob: -10.685320854187012

Token 1834: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004450892156455666
    2. '[' → logprob: -7.7504448890686035
    3. '(' → logprob: -12.375445365905762
    4. '```' → logprob: -12.375445365905762
    5. 'range' → logprob: -13.250445365905762
    6. '1' → logprob: -14.125445365905762
    7. '   ' → logprob: -14.750445365905762
    8. '
' → logprob: -14.937945365905762
    9. 'in' → logprob: -15.062945365905762
    10. 'i' → logprob: -15.250445365905762

Token 1835: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025795292109251022
    2. '2' → logprob: -3.7757952213287354
    3. 'for' → logprob: -6.1507954597473145
    4. '```' → logprob: -8.650794982910156
    5. 'import' → logprob: -9.650794982910156
    6. '   ' → logprob: -9.900794982910156
    7. '(' → logprob: -10.275794982910156
    8. 'from' → logprob: -10.525794982910156
    9. 'range' → logprob: -10.900794982910156
    10. '
' → logprob: -11.150794982910156

Token 1836: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.857719275401905e-05
    2. ' ' → logprob: -10.750038146972656
    3. 'range' → logprob: -11.625038146972656
    4. '   ' → logprob: -12.750038146972656
    5. '```' → logprob: -13.250038146972656
    6. '[' → logprob: -14.000038146972656
    7. '
' → logprob: -14.500038146972656
    8. '  ' → logprob: -14.500038146972656
    9. 'from' → logprob: -14.500038146972656
    10. '(' → logprob: -15.000038146972656

Token 1837: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002985428785905242
    2. '...' → logprob: -7.25298547744751
    3. ':' → logprob: -7.37798547744751
    4. '6' → logprob: -8.127985000610352
    5. ',...' → logprob: -8.252985000610352
    6. ' ,' → logprob: -9.002985000610352
    7. '],' → logprob: -9.127985000610352
    8. '2' → logprob: -9.252985000610352
    9. ')' → logprob: -9.627985000610352
    10. '```' → logprob: -9.627985000610352

Token 1838: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23211252689361572
    2. 'for' → logprob: -1.7321125268936157
    3. ' for' → logprob: -4.357112407684326
    4. 'if' → logprob: -5.232112407684326
    5. '   ' → logprob: -6.482112407684326
    6. 'in' → logprob: -6.732112407684326
    7. '...' → logprob: -6.732112407684326
    8. '```' → logprob: -6.857112407684326
    9. ' if' → logprob: -6.982112407684326
    10. ' ,' → logprob: -7.232112407684326

Token 1839: 'b' (ID: 65)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.615255839889869e-05
    2. '2' → logprob: -9.375096321105957
    3. '3' → logprob: -13.000096321105957
    4. ' ' → logprob: -13.000096321105957
    5. 'b' → logprob: -13.375096321105957
    6. '```' → logprob: -13.625096321105957
    7. '5' → logprob: -14.125096321105957
    8. '   ' → logprob: -14.125096321105957
    9. 'len' → logprob: -14.250096321105957
    10. '
' → logprob: -14.500096321105957

Token 1840: '2' (ID: 17)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0018365412252023816
    2. '3' → logprob: -7.126836776733398
    3. '[' → logprob: -7.126836776733398
    4. '2' → logprob: -8.501836776733398
    5. '5' → logprob: -11.001836776733398
    6. '(' → logprob: -12.876836776733398
    7. '```' → logprob: -13.001836776733398
    8. '`' → logprob: -14.501836776733398
    9. '<|end|>' → logprob: -14.501836776733398
    10. ''' → logprob: -15.001836776733398

Token 1841: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10183912515640259
    2. '[' → logprob: -2.476839065551758
    3. '3' → logprob: -5.351839065551758
    4. '7' → logprob: -5.726839065551758
    5. '(' → logprob: -5.726839065551758
    6. '```' → logprob: -6.976839065551758
    7. '`' → logprob: -8.476839065551758
    8. ']' → logprob: -9.226839065551758
    9. '
' → logprob: -9.601839065551758
    10. ' ' → logprob: -9.601839065551758

Token 1842: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.869017852295656e-06
    2. '2' → logprob: -12.375006675720215
    3. '```' → logprob: -14.000006675720215
    4. ' ' → logprob: -14.250006675720215
    5. ']' → logprob: -15.750006675720215
    6. '[' → logprob: -16.00000762939453
    7. '
' → logprob: -16.31250762939453
    8. '   ' → logprob: -16.37500762939453
    9. '۷' → logprob: -16.37500762939453
    10. '3' → logprob: -16.81250762939453

Token 1843: ']
' (ID: 1592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.461740642786026
    2. ')' → logprob: -1.5867406129837036
    3. 'for' → logprob: -2.961740732192993
    4. ',' → logprob: -3.336740732192993
    5. '   ' → logprob: -4.211740493774414
    6. '```' → logprob: -4.211740493774414
    7. '=' → logprob: -4.461740493774414
    8. '):' → logprob: -4.461740493774414
    9. ']' → logprob: -4.836740493774414
    10. '(' → logprob: -5.711740493774414

Token 1844: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.326183944940567
    2. '   ' → logprob: -1.4511839151382446
    3. '```' → logprob: -3.701184034347534
    4. 'x' → logprob: -4.576183795928955
    5. '``' → logprob: -5.451183795928955
    6. 'cnt' → logprob: -5.826183795928955
    7. ' count' → logprob: -6.701183795928955
    8. '
' → logprob: -8.451184272766113
    9. '_count' → logprob: -9.076184272766113
    10. ' x' → logprob: -9.451184272766113

Token 1845: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0098650511354208
    2. 'count' → logprob: -5.1348652839660645
    3. '   ' → logprob: -6.1348652839660645
    4. 'cnt' → logprob: -6.5098652839660645
    5. '```' → logprob: -8.384864807128906
    6. '``' → logprob: -10.259864807128906
    7. 'ans' → logprob: -13.259864807128906
    8. ' x' → logprob: -13.259864807128906
    9. '`' → logprob: -14.009864807128906
    10. 'c' → logprob: -14.134864807128906

Token 1846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00333349104039371
    2. '_count' → logprob: -5.753333568572998
    3. 'count' → logprob: -8.87833309173584
    4. '```' → logprob: -12.12833309173584
    5. '6' → logprob: -12.62833309173584
    6. 'x' → logprob: -13.00333309173584
    7. '=' → logprob: -13.62833309173584
    8. '`' → logprob: -13.87833309173584
    9. '_counts' → logprob: -14.50333309173584
    10. '
' → logprob: -14.75333309173584

Token 1847: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0802738870552275e-05
    2. 'count' → logprob: -13.12501049041748
    3. '_counts' → logprob: -13.12501049041748
    4. '_tokens' → logprob: -13.37501049041748
    5. '_code' → logprob: -13.50001049041748
    6. '=' → logprob: -14.12501049041748
    7. '```' → logprob: -14.50001049041748
    8. '_bits' → logprob: -14.62501049041748
    9. '_x' → logprob: -15.00001049041748
    10. '=_' → logprob: -15.12501049041748

Token 1848: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.7697225252486533e-06
    2. ' =' → logprob: -12.500003814697266
    3. '=
' → logprob: -21.000003814697266
    4. '1' → logprob: -21.750003814697266
    5. '   ' → logprob: -22.000003814697266
    6. '```' → logprob: -22.125003814697266
    7. 'def' → logprob: -24.125003814697266
    8. '`' → logprob: -24.250003814697266
    9. ' ' → logprob: -24.375003814697266
    10. '=

' → logprob: -25.125003814697266

Token 1849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. '```' → logprob: -16.37501335144043
    4. 'pow' → logprob: -16.50001335144043
    5. ' ' → logprob: -17.25001335144043
    6. '=' → logprob: -17.62501335144043
    7. 'x' → logprob: -17.87501335144043
    8. 'count' → logprob: -18.37501335144043
    9. '64' → logprob: -19.00001335144043
    10. '   ' → logprob: -19.12501335144043

Token 1850: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020671142265200615
    2. ' for' → logprob: -6.3770670890808105
    3. '```' → logprob: -8.627067565917969
    4. '
' → logprob: -9.502067565917969
    5. '   ' → logprob: -9.502067565917969
    6. '<|end|>' → logprob: -10.877067565917969
    7. '	for' → logprob: -12.127067565917969
    8. ')' → logprob: -13.127067565917969
    9. '``' → logprob: -13.252067565917969
    10. 'For' → logprob: -13.752067565917969

Token 1851: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007985501433722675
    2. '   ' → logprob: -7.25079870223999
    3. ' for' → logprob: -9.750798225402832
    4. '```' → logprob: -10.625798225402832
    5. '	for' → logprob: -12.750798225402832
    6. '
' → logprob: -12.750798225402832
    7. '``' → logprob: -15.375798225402832
    8. 'For' → logprob: -17.75079917907715
    9. 'from' → logprob: -18.25079917907715
    10. '`' → logprob: -18.62579917907715

Token 1852: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.36574100604048e-06
    2. ' for' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.375004768371582
    4. '```' → logprob: -14.750004768371582
    5. '	for' → logprob: -17.250003814697266
    6. 'For' → logprob: -17.500003814697266
    7. '``' → logprob: -18.625003814697266
    8. 'from' → logprob: -20.500003814697266
    9. '
' → logprob: -20.625003814697266
    10. 'i' → logprob: -20.625003814697266

Token 1853: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -15.625
    3. ' i' → logprob: -16.25
    4. 'idx' → logprob: -21.25
    5. '	i' → logprob: -21.625
    6. '_i' → logprob: -21.625
    7. '```' → logprob: -21.75
    8. 'pos' → logprob: -22.375
    9. '   ' → logprob: -22.5
    10. '`' → logprob: -24.375

Token 1854: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06211075559258461
    2. ' in' → logprob: -2.812110662460327
    3. 'range' → logprob: -9.062110900878906
    4. '(' → logprob: -10.687110900878906
    5. '
' → logprob: -13.937110900878906
    6. '=' → logprob: -14.062110900878906
    7. '```' → logprob: -14.562110900878906
    8. '   ' → logprob: -14.687110900878906
    9. '2' → logprob: -14.812110900878906
    10. ' range' → logprob: -14.937110900878906

Token 1855: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014327198266983
    2. '2' → logprob: -1.701432704925537
    3. ' range' → logprob: -10.951433181762695
    4. '(' → logprob: -13.701433181762695
    5. '   ' → logprob: -14.701433181762695
    6. '
' → logprob: -15.201433181762695
    7. '(range' → logprob: -17.201433181762695
    8. ' ' → logprob: -17.201433181762695
    9. 'in' → logprob: -17.701433181762695
    10. 'def' → logprob: -18.451433181762695

Token 1856: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25193333625793457
    2. '(' → logprob: -1.5019333362579346
    3. '   ' → logprob: -13.126933097839355
    4. 'i' → logprob: -14.376933097839355
    5. 'range' → logprob: -14.501933097839355
    6. ' ' → logprob: -14.876933097839355
    7. '
' → logprob: -15.126933097839355
    8. ' (' → logprob: -16.001934051513672
    9. '(
' → logprob: -16.376934051513672
    10. '[' → logprob: -16.376934051513672

Token 1857: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -20.25
    5. '２' → logprob: -20.625
    6. '۲' → logprob: -20.625
    7. '  ' → logprob: -21.0
    8. 'i' → logprob: -21.375
    9. '২' → logprob: -21.875
    10. '```' → logprob: -22.0625

Token 1858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008051026379689574
    2. ',len' → logprob: -7.875804901123047
    3. ',b' → logprob: -8.875804901123047
    4. '6' → logprob: -9.000804901123047
    5. ',i' → logprob: -9.375804901123047
    6. ' ,' → logprob: -9.750804901123047
    7. '(' → logprob: -11.625804901123047
    8. ',int' → logprob: -13.375804901123047
    9. ',
' → logprob: -13.750804901123047
    10. '```' → logprob: -13.875804901123047

Token 1859: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. 'len' → logprob: -18.625
    3. ' ' → logprob: -18.75
    4. 'eight' → logprob: -20.0
    5. '6' → logprob: -20.75
    6. '８' → logprob: -21.125
    7. '   ' → logprob: -21.75
    8. 'byte' → logprob: -21.875
    9. '۸' → logprob: -22.125
    10. ' вось' → logprob: -22.5

Token 1860: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0755480527877808
    2. '):
' → logprob: -1.0755480527877808
    3. ':
' → logprob: -1.9505480527877808
    4. '   ' → logprob: -2.3255481719970703
    5. '):' → logprob: -2.7005481719970703
    6. '       ' → logprob: -5.57554817199707
    7. ')' → logprob: -5.95054817199707
    8. ',' → logprob: -6.20054817199707
    9. '[i' → logprob: -8.07554817199707
    10. '  ' → logprob: -8.20054817199707

Token 1861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007784420158714056
    2. 'if' → logprob: -5.007784366607666
    3. ' if' → logprob: -7.132784366607666
    4. '```' → logprob: -8.632784843444824
    5. '   ' → logprob: -9.382784843444824
    6. '``' → logprob: -12.632784843444824
    7. '      ' → logprob: -14.132784843444824
    8. '{
' → logprob: -14.257784843444824
    9. '           ' → logprob: -14.507784843444824
    10. '	if' → logprob: -14.632784843444824

Token 1862: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2539990544319153
    2. '       ' → logprob: -1.5039989948272705
    3. ' if' → logprob: -6.25399923324585
    4. '   ' → logprob: -9.253998756408691
    5. '```' → logprob: -10.003998756408691
    6. '	if' → logprob: -13.628998756408691
    7. '``' → logprob: -13.878998756408691
    8. '     ' → logprob: -14.378998756408691
    9. '           ' → logprob: -14.878998756408691
    10. 'x' → logprob: -15.753998756408691

Token 1863: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -20.50020408630371
    4. '(b' → logprob: -20.75020408630371
    5. '[b' → logprob: -22.00020408630371
    6. '	b' → logprob: -22.00020408630371
    7. '$b' → logprob: -22.37520408630371
    8. ')b' → logprob: -22.37520408630371
    9. ''b' → logprob: -22.75020408630371
    10. ' б' → logprob: -23.87520408630371

Token 1864: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. '₂' → logprob: -18.0
    4. '[' → logprob: -18.125
    5. '1' → logprob: -18.75
    6. '   ' → logprob: -19.25
    7. '_' → logprob: -19.625
    8. '``' → logprob: -20.4375
    9. '{' → logprob: -20.75
    10. 'user' → logprob: -21.125

Token 1865: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008334511076100171
    2. '[' → logprob: -7.125833511352539
    3. 'i' → logprob: -10.500833511352539
    4. '==' → logprob: -14.125833511352539
    5. '[
' → logprob: -15.375833511352539
    6. '(i' → logprob: -15.500833511352539
    7. '=='' → logprob: -16.12583351135254
    8. ' ==' → logprob: -16.37583351135254
    9. '{i' → logprob: -17.25083351135254
    10. '```' → logprob: -17.25083351135254

Token 1866: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.5879397392272949
    2. ']=='' → logprob: -1.337939739227295
    3. '==' → logprob: -2.212939739227295
    4. ']==' → logprob: -2.962939739227295
    5. ']' → logprob: -4.337939739227295
    6. ' ==' → logprob: -5.212939739227295
    7. '[' → logprob: -6.212939739227295
    8. '']=='' → logprob: -8.462940216064453
    9. ' =='' → logprob: -9.087940216064453
    10. ''' → logprob: -9.337940216064453

Token 1867: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0031781906727701426
    2. 'x' → logprob: -5.753178119659424
    3. '"x' → logprob: -15.878178596496582
    4. ' '' → logprob: -16.628177642822266
    5. '['' → logprob: -16.628177642822266
    6. ' x' → logprob: -17.003177642822266
    7. ' ' → logprob: -17.378177642822266
    8. ''' → logprob: -18.128177642822266
    9. ')x' → logprob: -18.253177642822266
    10. '']' → logprob: -18.253177642822266

Token 1868: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003958478569984436
    2. '=' → logprob: -6.503958702087402
    3. ' x' → logprob: -7.503958702087402
    4. ':
' → logprob: -7.503958702087402
    5. 'x' → logprob: -7.753958702087402
    6. '          ' → logprob: -8.753958702087402
    7. ' =' → logprob: -8.878958702087402
    8. '       ' → logprob: -9.128958702087402
    9. '(x' → logprob: -9.378958702087402
    10. '               ' → logprob: -9.753958702087402

Token 1869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017490806058049202
    2. 'x' → logprob: -6.626749038696289
    3. '       ' → logprob: -8.751749038696289
    4. ' x' → logprob: -9.501749038696289
    5. '```' → logprob: -9.501749038696289
    6. '{
' → logprob: -9.751749038696289
    7. '          ' → logprob: -11.251749038696289
    8. '               ' → logprob: -11.876749038696289
    9. '=' → logprob: -12.251749038696289
    10. '``' → logprob: -12.501749038696289

Token 1870: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.011373155459296e-05
    2. ' x' → logprob: -10.500030517578125
    3. '           ' → logprob: -13.625030517578125
    4. '```' → logprob: -14.375030517578125
    5. '       ' → logprob: -14.500030517578125
    6. '(x' → logprob: -15.750030517578125
    7. '``' → logprob: -16.750030517578125
    8. '   ' → logprob: -17.500030517578125
    9. '               ' → logprob: -19.625030517578125
    10. '
' → logprob: -19.750030517578125

Token 1871: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02632085606455803
    2. '_count' → logprob: -3.6513209342956543
    3. 'count' → logprob: -11.276320457458496
    4. '=' → logprob: -12.776320457458496
    5. 'x' → logprob: -12.901320457458496
    6. '1' → logprob: -13.776320457458496
    7. '```' → logprob: -14.151320457458496
    8. '   ' → logprob: -15.401320457458496
    9. '`' → logprob: -15.651320457458496
    10. ' =' → logprob: -16.276321411132812

Token 1872: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010163593105971813
    2. '2' → logprob: -9.250102043151855
    3. 'count' → logprob: -12.375102043151855
    4. '=' → logprob: -14.625102043151855
    5. 'x' → logprob: -15.000102043151855
    6. '1' → logprob: -15.375102043151855
    7. '```' → logprob: -17.12510108947754
    8. '   ' → logprob: -17.62510108947754
    9. '_c' → logprob: -17.62510108947754
    10. '_x' → logprob: -18.37510108947754

Token 1873: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234594456851482
    2. ' =' → logprob: -5.255234718322754
    3. '=(' → logprob: -15.005234718322754
    4. '*=' → logprob: -15.005234718322754
    5. '   ' → logprob: -16.880233764648438
    6. '```' → logprob: -17.505233764648438
    7. '=x' → logprob: -18.130233764648438
    8. '           ' → logprob: -18.130233764648438
    9. 'x' → logprob: -18.380233764648438
    10. '       ' → logprob: -18.505233764648438

Token 1874: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0325924449716695e-05
    2. ' (' → logprob: -11.50001049041748
    3. '(' → logprob: -16.500009536743164
    4. 'x' → logprob: -17.125009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '```' → logprob: -18.625009536743164
    7. '       ' → logprob: -19.125009536743164
    8. '`' → logprob: -19.750009536743164
    9. '           ' → logprob: -19.875009536743164
    10. '(a' → logprob: -19.875009536743164

Token 1875: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.7120533811976202e-05
    2. 'x' → logprob: -11.000017166137695
    3. '(' → logprob: -14.875017166137695
    4. ' (' → logprob: -16.875017166137695
    5. '[x' → logprob: -18.250017166137695
    6. '{x' → logprob: -18.750017166137695
    7. ',x' → logprob: -19.375017166137695
    8. '   ' → logprob: -19.500017166137695
    9. '```' → logprob: -19.625017166137695
    10. '2' → logprob: -20.250017166137695

Token 1876: '2' (ID: 17)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00012487331696320325
    2. 'x' → logprob: -9.12512493133545
    3. '2' → logprob: -12.00012493133545
    4. ' (' → logprob: -12.12512493133545
    5. '(' → logprob: -12.50012493133545
    6. '[x' → logprob: -15.75012493133545
    7. ' x' → logprob: -15.75012493133545
    8. '{x' → logprob: -15.87512493133545
    9. 'def' → logprob: -17.125123977661133
    10. '<x' → logprob: -17.375123977661133

Token 1877: '_count' (ID: 7536)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0016994642792269588
    2. '(' → logprob: -7.376699447631836
    3. '*x' → logprob: -7.501699447631836
    4. '*(' → logprob: -8.251699447631836
    5. ' (' → logprob: -9.626699447631836
    6. 'x' → logprob: -9.876699447631836
    7. '[x' → logprob: -10.376699447631836
    8. '_count' → logprob: -10.751699447631836
    9. '*' → logprob: -11.126699447631836
    10. '_tokens' → logprob: -11.126699447631836

Token 1878: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04411408677697182
    2. '*(' → logprob: -3.669114112854004
    3. '(x' → logprob: -4.919114112854004
    4. ' *' → logprob: -5.169114112854004
    5. '(' → logprob: -5.419114112854004
    6. ' (' → logprob: -8.919114112854004
    7. '=' → logprob: -10.044114112854004
    8. '*x' → logprob: -10.794114112854004
    9. '```' → logprob: -11.669114112854004
    10. '=(' → logprob: -12.544114112854004

Token 1879: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.888114098226652e-05
    2. '(' → logprob: -9.375088691711426
    3. 'pow' → logprob: -12.500088691711426
    4. ' ' → logprob: -15.250088691711426
    5. '(pow' → logprob: -17.750089645385742
    6. '```' → logprob: -18.000089645385742
    7. '   ' → logprob: -18.875089645385742
    8. '64' → logprob: -19.250089645385742
    9. 'powers' → logprob: -19.375089645385742
    10. 'def' → logprob: -19.875089645385742

Token 1880: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.49241989850997925
    2. '%' → logprob: -0.9924198985099792
    3. ')' → logprob: -4.117419719696045
    4. '%)' → logprob: -6.367419719696045
    5. ']%' → logprob: -9.742420196533203
    6. '%x' → logprob: -10.242420196533203
    7. '%i' → logprob: -10.867420196533203
    8. ' %' → logprob: -11.117420196533203
    9. '%b' → logprob: -11.742420196533203
    10. '()%' → logprob: -11.992420196533203

Token 1881: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -17.5
    3. ' MOD' → logprob: -17.75
    4. '_MOD' → logprob: -18.375
    5. '100' → logprob: -19.25
    6. '0' → logprob: -19.25
    7. '.MOD' → logprob: -19.75
    8. '1' → logprob: -20.0
    9. '   ' → logprob: -20.0
    10. '```' → logprob: -20.25

Token 1882: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02819652482867241
    2. '<|end|>' → logprob: -4.153196334838867
    3. '   ' → logprob: -5.403196334838867
    4. ')' → logprob: -5.903196334838867
    5. 'continue' → logprob: -5.903196334838867
    6. '           ' → logprob: -6.903196334838867
    7. '```' → logprob: -8.278196334838867
    8. ' continue' → logprob: -8.403196334838867
    9. '...' → logprob: -9.153196334838867
    10. '<|end|>' → logprob: -9.153196334838867

Token 1883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04175785183906555
    2. '           ' → logprob: -3.291757822036743
    3. 'continue' → logprob: -6.666758060455322
    4. 'return' → logprob: -7.166758060455322
    5. '```' → logprob: -7.416758060455322
    6. ')' → logprob: -7.791758060455322
    7. '               ' → logprob: -8.541757583618164
    8. '<|end|>' → logprob: -8.666757583618164
    9. '   ' → logprob: -8.791757583618164
    10. ' continue' → logprob: -10.416757583618164

Token 1884: ' elif' (ID: 9497)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3135284185409546
    2. '       ' → logprob: -1.8135284185409546
    3. '1' → logprob: -4.063528537750244
    4. '   ' → logprob: -4.063528537750244
    5. ')' → logprob: -4.313528537750244
    6. 'i' → logprob: -4.438528537750244
    7. '           ' → logprob: -4.563528537750244
    8. '0' → logprob: -4.938528537750244
    9. 'x' → logprob: -5.313528537750244
    10. '```' → logprob: -5.313528537750244

Token 1885: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004891689168289304
    2. ' b' → logprob: -7.625489234924316
    3. ' ' → logprob: -14.750489234924316
    4. '   ' → logprob: -15.250489234924316
    5. '(b' → logprob: -15.500489234924316
    6. '[b' → logprob: -16.75048828125
    7. 'not' → logprob: -17.00048828125
    8. '	b' → logprob: -17.25048828125
    9. ' not' → logprob: -17.37548828125
    10. '  ' → logprob: -17.75048828125

Token 1886: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '```' → logprob: -16.625
    4. 'in' → logprob: -16.75
    5. ' ' → logprob: -18.5
    6. '_' → logprob: -18.5
    7. 'not' → logprob: -18.75
    8. '`' → logprob: -18.875
    9. '₂' → logprob: -18.875
    10. '   ' → logprob: -19.125

Token 1887: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.62501335144043
    3. 'in' → logprob: -13.12501335144043
    4. 'i' → logprob: -13.62501335144043
    5. '[in' → logprob: -15.25001335144043
    6. '   ' → logprob: -15.75001335144043
    7. '```' → logprob: -16.12501335144043
    8. ' in' → logprob: -16.50001335144043
    9. '[
' → logprob: -16.87501335144043
    10. '{i' → logprob: -17.50001335144043

Token 1888: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48973339796066284
    2. ' in' → logprob: -1.1147334575653076
    3. ']' → logprob: -3.3647334575653076
    4. '[' → logprob: -4.2397332191467285
    5. ']=='' → logprob: -5.4897332191467285
    6. '=='' → logprob: -6.3647332191467285
    7. '==' → logprob: -7.1147332191467285
    8. ']==' → logprob: -7.3647332191467285
    9. '   ' → logprob: -7.4897332191467285
    10. 'not' → logprob: -7.6147332191467285

Token 1889: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8955503106117249
    2. 'not' → logprob: -1.14555025100708
    3. 'in' → logprob: -1.64555025100708
    4. ' in' → logprob: -2.52055025100708
    5. '[' → logprob: -9.270550727844238
    6. '==' → logprob: -10.020550727844238
    7. '[in' → logprob: -10.770550727844238
    8. '   ' → logprob: -11.395550727844238
    9. ' ' → logprob: -11.645550727844238
    10. '```' → logprob: -11.770550727844238

Token 1890: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.36574100604048e-06
    2. ' ('' → logprob: -12.625004768371582
    3. '(' → logprob: -14.500004768371582
    4. ''' → logprob: -15.250004768371582
    5. '{'' → logprob: -15.875004768371582
    6. '['' → logprob: -16.000003814697266
    7. '(('' → logprob: -18.000003814697266
    8. '("' → logprob: -18.500003814697266
    9. '('\' → logprob: -19.625003814697266
    10. '('+' → logprob: -19.875003814697266

Token 1891: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01736612431704998
    2. '0' → logprob: -4.1423659324646
    3. '('' → logprob: -6.7673659324646
    4. '{'' → logprob: -8.767366409301758
    5. '['' → logprob: -11.517366409301758
    6. ' '' → logprob: -12.142366409301758
    7. '`' → logprob: -13.017366409301758
    8. '   ' → logprob: -14.017366409301758
    9. 'def' → logprob: -14.017366409301758
    10. '{
' → logprob: -14.267366409301758

Token 1892: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.07632836699485779
    2. ','' → logprob: -2.7013282775878906
    3. ',' → logprob: -5.701328277587891
    4. '',' → logprob: -5.951328277587891
    5. ''' → logprob: -8.32632827758789
    6. '       ' → logprob: -9.70132827758789
    7. '   ' → logprob: -10.32632827758789
    8. '           ' → logprob: -10.95132827758789
    9. ''s' → logprob: -11.70132827758789
    10. ')','' → logprob: -11.70132827758789

Token 1893: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0486002042889595
    2. '1' → logprob: -3.048600196838379
    3. '   ' → logprob: -12.548600196838379
    4. '
' → logprob: -13.298600196838379
    5. '('' → logprob: -13.298600196838379
    6. '`' → logprob: -13.673600196838379
    7. ')' → logprob: -14.298600196838379
    8. ' ' → logprob: -14.423600196838379
    9. '           ' → logprob: -14.548600196838379
    10. ' '' → logprob: -14.673600196838379

Token 1894: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6230841279029846
    2. '):
' → logprob: -1.3730840682983398
    3. '           ' → logprob: -1.8730840682983398
    4. ')' → logprob: -3.87308406829834
    5. '       ' → logprob: -3.87308406829834
    6. ':' → logprob: -4.87308406829834
    7. ':
' → logprob: -5.12308406829834
    8. ''):
' → logprob: -7.74808406829834
    9. '   ' → logprob: -8.12308406829834
    10. '          ' → logprob: -8.24808406829834

Token 1895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005794408731162548
    2. '       ' → logprob: -5.255794525146484
    3. '```' → logprob: -8.255794525146484
    4. ':' → logprob: -8.380794525146484
    5. '          ' → logprob: -11.005794525146484
    6. '               ' → logprob: -11.505794525146484
    7. 'pass' → logprob: -11.630794525146484
    8. ':
' → logprob: -11.755794525146484
    9. '	       ' → logprob: -12.130794525146484
    10. '         ' → logprob: -12.255794525146484

Token 1896: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.031170589849352837
    2. '           ' → logprob: -3.531170606613159
    3. 'continue' → logprob: -7.28117036819458
    4. ' pass' → logprob: -7.28117036819458
    5. '       ' → logprob: -10.531170845031738
    6. '```' → logprob: -11.531170845031738
    7. '               ' → logprob: -13.156170845031738
    8. '	pass' → logprob: -13.281170845031738
    9. ' continue' → logprob: -13.656170845031738
    10. '0' → logprob: -15.281170845031738

Token 1897: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01836778223514557
    2. '           ' → logprob: -4.518367767333984
    3. '<|end|>' → logprob: -5.893367767333984
    4. '```' → logprob: -6.143367767333984
    5. 'continue' → logprob: -7.393367767333984
    6. '   ' → logprob: -7.768367767333984
    7. ':' → logprob: -8.018367767333984
    8. ':return' → logprob: -8.643367767333984
    9. '               ' → logprob: -8.893367767333984
    10. ' continue' → logprob: -8.893367767333984

Token 1898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027197604067623615
    2. 'else' → logprob: -6.252719879150391
    3. '           ' → logprob: -7.752719879150391
    4. '   ' → logprob: -8.50271987915039
    5. ' else' → logprob: -9.37771987915039
    6. '```' → logprob: -10.12771987915039
    7. '<|end|>' → logprob: -11.25271987915039
    8. 'continue' → logprob: -11.75271987915039
    9. '               ' → logprob: -12.25271987915039
    10. ')' → logprob: -14.00271987915039

Token 1899: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2235175520181656
    2. 'else' (adapté à ' else') → logprob: -1.7235175371170044
    3. '           ' → logprob: -3.973517656326294
    4. '   ' → logprob: -6.348517417907715
    5. ' else' → logprob: -7.098517417907715
    6. 'continue' → logprob: -7.848517417907715
    7. '```' → logprob: -10.223517417907715
    8. '               ' → logprob: -11.723517417907715
    9. ' continue' → logprob: -11.848517417907715
    10. '      ' → logprob: -12.223517417907715

Token 1900: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001129498123191297
    2. '       ' → logprob: -7.126129627227783
    3. ':
' → logprob: -9.251129150390625
    4. ':' → logprob: -9.876129150390625
    5. '          ' → logprob: -10.001129150390625
    6. '               ' → logprob: -10.126129150390625
    7. '   ' → logprob: -10.876129150390625
    8. '         ' → logprob: -11.001129150390625
    9. '0' → logprob: -11.501129150390625
    10. '=' → logprob: -11.751129150390625

Token 1901: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3348057270050049
    2. '0' → logprob: -1.7098057270050049
    3. 'return' → logprob: -2.584805727005005
    4. '       ' → logprob: -3.834805727005005
    5. '```' → logprob: -5.709805488586426
    6. ' return' → logprob: -7.084805488586426
    7. '   ' → logprob: -7.209805488586426
    8. '               ' → logprob: -7.209805488586426
    9. '{return' → logprob: -7.959805488586426
    10. ' ' → logprob: -9.209805488586426

Token 1902: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004821505572181195
    2. ' return' → logprob: -8.500482559204102
    3. '0' → logprob: -8.625482559204102
    4. '           ' → logprob: -10.000482559204102
    5. '```' → logprob: -10.250482559204102
    6. '       ' → logprob: -11.875482559204102
    7. '	return' → logprob: -12.375482559204102
    8. '``' → logprob: -12.875482559204102
    9. '{return' → logprob: -13.750482559204102
    10. '`' → logprob: -13.750482559204102

Token 1903: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -21.750001907348633
    4. '```' → logprob: -22.750001907348633
    5. '   ' → logprob: -23.250001907348633
    6. '  ' → logprob: -23.750001907348633
    7. '<|end|>' → logprob: -23.875001907348633
    8. ' ' → logprob: -24.875001907348633
    9. '
' → logprob: -25.000001907348633
    10. '０' → logprob: -25.000001907348633

Token 1904: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -20.625
    4. '۰' → logprob: -20.75
    5. '   ' → logprob: -21.5
    6. '=' → logprob: -22.875
    7. '  ' → logprob: -23.0
    8. '
' → logprob: -23.25
    9. '`' → logprob: -23.25
    10. '<|end|>' → logprob: -23.625

Token 1905: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020776940509676933
    2. '```' → logprob: -6.252077579498291
    3. '
' → logprob: -9.50207805633545
    4. '       ' → logprob: -10.25207805633545
    5. 'return' → logprob: -10.75207805633545
    6. '``' → logprob: -11.25207805633545
    7. '    
' → logprob: -13.87707805633545
    8. ')' → logprob: -13.87707805633545
    9. '	return' → logprob: -14.62707805633545
    10. ':return' → logprob: -14.75207805633545

Token 1906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004348229616880417
    2. 'return' → logprob: -6.004348278045654
    3. 'total' → logprob: -6.754348278045654
    4. '
' → logprob: -7.754348278045654
    5. '```' → logprob: -9.129347801208496
    6. 'count' → logprob: -9.504347801208496
    7. 'result' → logprob: -9.754347801208496
    8. '    
' → logprob: -10.879347801208496
    9. '``' → logprob: -12.129347801208496
    10. ' return' → logprob: -12.504347801208496

Token 1907: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4181506931781769
    2. 'return' → logprob: -1.1681506633758545
    3. 'result' → logprob: -4.168150901794434
    4. 'total' (adapté à ' total') → logprob: -5.043150901794434
    5. 'count' → logprob: -5.168150901794434
    6. 'res' → logprob: -6.668150901794434
    7. '
' → logprob: -6.793150901794434
    8. '```' → logprob: -7.918150901794434
    9. 'ans' → logprob: -9.043150901794434
    10. ' return' → logprob: -9.043150901794434

Token 1908: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06123318523168564
    2. '_count' → logprob: -3.3112332820892334
    3. ' =' → logprob: -3.8112332820892334
    4. '=_' → logprob: -8.311233520507812
    5. 'count' → logprob: -8.686233520507812
    6. '=count' → logprob: -9.311233520507812
    7. '```' → logprob: -9.561233520507812
    8. '   ' → logprob: -9.686233520507812
    9. '_counts' → logprob: -9.811233520507812
    10. '_' → logprob: -10.186233520507812

Token 1909: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -13.500001907348633
    3. 'y' → logprob: -14.750001907348633
    4. '(x' → logprob: -15.125001907348633
    5. '(' → logprob: -15.875001907348633
    6. '((' → logprob: -17.625001907348633
    7. ' (' → logprob: -18.500001907348633
    8. '(Y' → logprob: -20.375001907348633
    9. '(u' → logprob: -20.625001907348633
    10. '[y' → logprob: -20.625001907348633

Token 1910: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06231687217950821
    2. '(y' → logprob: -2.81231689453125
    3. ' y' → logprob: -8.68731689453125
    4. 'x' → logprob: -8.81231689453125
    5. '(x' → logprob: -10.81231689453125
    6. '(' → logprob: -11.68731689453125
    7. ' (' → logprob: -13.31231689453125
    8. '   ' → logprob: -14.18731689453125
    9. '((' → logprob: -15.56231689453125
    10. '	y' → logprob: -16.06231689453125

Token 1911: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -5.796184723294573e-06
    2. 'valid' → logprob: -12.125005722045898
    3. 'Valid' → logprob: -15.875005722045898
    4. '_bits' → logprob: -16.6250057220459
    5. '_VALID' → logprob: -18.6250057220459
    6. '_count' → logprob: -18.7500057220459
    7. '```' → logprob: -18.7500057220459
    8. '_invalid' → logprob: -18.8750057220459
    9. '*_' → logprob: -19.2500057220459
    10. '_val' → logprob: -19.2500057220459

Token 1912: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.4849443838757e-06
    2. 'count' → logprob: -12.375004768371582
    3. '_valid' → logprob: -15.500004768371582
    4. '   ' → logprob: -17.500003814697266
    5. '_counts' → logprob: -18.125003814697266
    6. '\' → logprob: -18.625003814697266
    7. '=' → logprob: -19.250003814697266
    8. '`' → logprob: -19.500003814697266
    9. 'valid' → logprob: -19.625003814697266
    10. ' count' → logprob: -19.625003814697266

Token 1913: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20144695043563843
    2. '*' → logprob: -1.7014470100402832
    3. '*(' → logprob: -10.951446533203125
    4. '   ' → logprob: -11.701446533203125
    5. '*x' → logprob: -12.201446533203125
    6. ')' → logprob: -14.201446533203125
    7. '*object' → logprob: -14.576446533203125
    8. '*p' → logprob: -14.576446533203125
    9. '**' → logprob: -15.451446533203125
    10. '*out' → logprob: -15.576446533203125

Token 1914: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002498013898730278
    2. '(x' → logprob: -6.002498149871826
    3. '((' → logprob: -11.252497673034668
    4. ' x' → logprob: -11.877497673034668
    5. ' (' → logprob: -13.877497673034668
    6. '(' → logprob: -14.127497673034668
    7. 'y' → logprob: -14.502497673034668
    8. '   ' → logprob: -15.877497673034668
    9. '
' → logprob: -16.377498626708984
    10. '(y' → logprob: -17.127498626708984

Token 1915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '_count' → logprob: -13.125004768371582
    3. 'count' → logprob: -13.625004768371582
    4. '(x' → logprob: -13.875004768371582
    5. '```' → logprob: -15.125004768371582
    6. 'x' → logprob: -15.625004768371582
    7. '(' → logprob: -15.750004768371582
    8. '(count' → logprob: -16.5000057220459
    9. 'Count' → logprob: -17.0000057220459
    10. '１' → logprob: -17.2500057220459

Token 1916: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.292907877039397e-06
    2. 'count' → logprob: -13.00000286102295
    3. '_x' → logprob: -14.50000286102295
    4. 'x' → logprob: -15.50000286102295
    5. '```' → logprob: -16.250003814697266
    6. '*_' → logprob: -16.750003814697266
    7. '\' → logprob: -17.250003814697266
    8. '_c' → logprob: -17.750003814697266
    9. '_counts' → logprob: -17.750003814697266
    10. '``' → logprob: -18.250003814697266

Token 1917: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8000332713127136
    2. ' *' → logprob: -0.8000332713127136
    3. ')' → logprob: -2.3000333309173584
    4. '%' → logprob: -7.550033092498779
    5. ')%' → logprob: -7.675033092498779
    6. '*(' → logprob: -10.175033569335938
    7. '   ' → logprob: -10.800033569335938
    8. '```' → logprob: -10.800033569335938
    9. '*x' → logprob: -11.175033569335938
    10. ' %' → logprob: -11.675033569335938

Token 1918: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.745599627494812
    2. ' *' → logprob: -1.370599627494812
    3. '*' → logprob: -1.620599627494812
    4. '```' → logprob: -3.1205997467041016
    5. ' %' → logprob: -4.120599746704102
    6. '   ' → logprob: -4.495599746704102
    7. ')' → logprob: -6.870599746704102
    8. '*(' → logprob: -7.370599746704102
    9. ')%' → logprob: -8.745599746704102
    10. '``' → logprob: -9.370599746704102

Token 1919: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '(M' → logprob: -18.75
    4. '100' → logprob: -19.25
    5. '(' → logprob: -19.75
    6. '_MOD' → logprob: -20.375
    7. '   ' → logprob: -21.75
    8. '(mod' → logprob: -22.0
    9. '.MOD' → logprob: -22.25
    10. ' ' → logprob: -22.5

Token 1920: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.276885062456131
    2. '*' → logprob: -1.5268850326538086
    3. '```' → logprob: -4.526885032653809
    4. '
' → logprob: -4.776885032653809
    5. 'return' → logprob: -6.026885032653809
    6. ' *' → logprob: -6.151885032653809
    7. ')' → logprob: -7.776885032653809
    8. '*(' → logprob: -9.401885032653809
    9. '  ' → logprob: -9.651885032653809
    10. '    
' → logprob: -9.776885032653809

Token 1921: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20983771979808807
    2. '*' → logprob: -2.2098376750946045
    3. '```' → logprob: -3.0848376750946045
    4. '(total' → logprob: -3.9598376750946045
    5. '
' → logprob: -4.959837913513184
    6. 'total' → logprob: -5.334837913513184
    7. '*(' → logprob: -7.584837913513184
    8. '``' → logprob: -7.834837913513184
    9. ' *' → logprob: -7.959837913513184
    10. '`' → logprob: -7.959837913513184

Token 1922: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -1.7954958821064793e-05
    2. 'return' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.375018119812012
    4. ' total' → logprob: -14.625018119812012
    5. '```' → logprob: -16.250017166137695
    6. '(total' → logprob: -18.000017166137695
    7. '``' → logprob: -18.875017166137695
    8. 'final' → logprob: -19.750017166137695
    9. ',total' → logprob: -20.250017166137695
    10. '	total' → logprob: -20.625017166137695

Token 1923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008967067115008831
    2. ' =' → logprob: -4.75896692276001
    3. '   ' → logprob: -8.258967399597168
    4. '*' → logprob: -9.758967399597168
    5. '*=' → logprob: -10.508967399597168
    6. '```' → logprob: -12.008967399597168
    7. 'def' → logprob: -14.758967399597168
    8. ' *=' → logprob: -14.758967399597168
    9. ')' → logprob: -14.883967399597168
    10. 'return' → logprob: -15.258967399597168

Token 1924: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -5.931863051955588e-05
    2. ' (' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.625059127807617
    4. '(' → logprob: -15.500059127807617
    5. 'total' → logprob: -15.875059127807617
    6. '(t' → logprob: -16.500059127807617
    7. '(the' → logprob: -19.375059127807617
    8. '  ' → logprob: -19.500059127807617
    9. '(current' → logprob: -19.625059127807617
    10. '(to' → logprob: -19.750059127807617

Token 1925: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0007681751740165055
    2. '(total' → logprob: -7.250768184661865
    3. ' total' → logprob: -9.750767707824707
    4. '	total' → logprob: -18.625768661499023
    5. '$total' → logprob: -19.125768661499023
    6. ',total' → logprob: -20.375768661499023
    7. '.total' → logprob: -20.750768661499023
    8. '_total' → logprob: -20.875768661499023
    9. '(' → logprob: -21.250768661499023
    10. '
' → logprob: -21.750768661499023

Token 1926: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.693147599697113
    2. ' *' → logprob: -0.693147599697113
    3. ' ' → logprob: -16.068147659301758
    4. '```' → logprob: -16.068147659301758
    5. '   ' → logprob: -16.693147659301758
    6. '
' → logprob: -16.943147659301758
    7. '**' → logprob: -17.693147659301758
    8. '*(' → logprob: -18.318147659301758
    9. '*object' → logprob: -18.443147659301758
    10. '=' → logprob: -18.568147659301758

Token 1927: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011703446507453918
    2. ' x' → logprob: -6.7511701583862305
    3. '(x' → logprob: -15.62617015838623
    4. '   ' → logprob: -18.376171112060547
    5. ' ' → logprob: -19.126171112060547
    6. 'pow' → logprob: -20.126171112060547
    7. ' (' → logprob: -20.501171112060547
    8. '	x' → logprob: -20.876171112060547
    9. '
' → logprob: -21.126171112060547
    10. '  ' → logprob: -21.501171112060547

Token 1928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '
' → logprob: -19.0
    4. '_count' → logprob: -19.5
    5. '_' → logprob: -20.5
    6. '``' → logprob: -20.75
    7. '1' → logprob: -21.125
    8. '２' → logprob: -21.25
    9. 'count' → logprob: -21.375
    10. '۲' → logprob: -21.375

Token 1929: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -15.0
    3. '1' → logprob: -17.75
    4. '2' → logprob: -18.375
    5. '```' → logprob: -18.75
    6. '_COUNT' → logprob: -19.125
    7. '\' → logprob: -19.25
    8. 'Count' → logprob: -19.25
    9. '_counts' → logprob: -19.5
    10. '[' → logprob: -19.875

Token 1930: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034312061965465546
    2. ')%' → logprob: -3.5343120098114014
    3. '%' → logprob: -5.4093122482299805
    4. '<|end|>' → logprob: -10.90931224822998
    5. ' %' → logprob: -11.03431224822998
    6. ' )' → logprob: -11.15931224822998
    7. '```' → logprob: -11.78431224822998
    8. '   ' → logprob: -12.15931224822998
    9. '%)' → logprob: -12.65931224822998
    10. '<|end|>' → logprob: -12.65931224822998

Token 1931: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11352863907814026
    2. ' %' → logprob: -2.2385287284851074
    3. ')' → logprob: -8.23852825164795
    4. ')%' → logprob: -8.61352825164795
    5. '   ' → logprob: -8.98852825164795
    6. '<|end|>' → logprob: -9.48852825164795
    7. ' %=' → logprob: -11.23852825164795
    8. '
' → logprob: -11.48852825164795
    9. '```' → logprob: -11.61352825164795
    10. '<|end|>' → logprob: -11.98852825164795

Token 1932: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -15.75
    3. '_MOD' → logprob: -21.125
    4. '.MOD' → logprob: -21.75
    5. '   ' → logprob: -22.375
    6. '```' → logprob: -23.0
    7. '(M' → logprob: -23.125
    8. '100' → logprob: -23.25
    9. 'MO' → logprob: -24.125
    10. '`' → logprob: -24.625

Token 1933: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28640875220298767
    2. 'return' → logprob: -1.91140878200531
    3. '\n' → logprob: -3.1614086627960205
    4. '```' → logprob: -4.1614089012146
    5. ' return' → logprob: -4.4114089012146
    6. ':return' → logprob: -4.6614089012146
    7. '
' → logprob: -4.7864089012146
    8. '    
' → logprob: -5.1614089012146
    9. '\' → logprob: -6.0364089012146
    10. '  
' → logprob: -7.0364089012146

Token 1934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031900706235319376
    2. 'return' → logprob: -5.753190040588379
    3. '```' → logprob: -11.878190040588379
    4. ' return' → logprob: -12.253190040588379
    5. '	return' → logprob: -15.003190040588379
    6. ':return' → logprob: -15.753190040588379
    7. '       ' → logprob: -17.128190994262695
    8. '
' → logprob: -17.378190994262695
    9. '{return' → logprob: -17.503190994262695
    10. '``' → logprob: -17.753190994262695

Token 1935: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00015121731848921627
    2. '```' → logprob: -9.375151634216309
    3. ' return' → logprob: -10.250151634216309
    4. '   ' → logprob: -10.500151634216309
    5. '``' → logprob: -13.125151634216309
    6. '
' → logprob: -14.375151634216309
    7. ':return' → logprob: -14.875151634216309
    8. '{return' → logprob: -15.500151634216309
    9. '`' → logprob: -16.375150680541992
    10. 'eturn' → logprob: -16.500150680541992

Token 1936: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06197351589798927
    2. ' total' → logprob: -2.8119735717773438
    3. '(total' → logprob: -12.061973571777344
    4. '   ' → logprob: -17.936973571777344
    5. 'tot' → logprob: -19.186973571777344
    6. ' ' → logprob: -19.436973571777344
    7. ' (' → logprob: -19.561973571777344
    8. '	total' → logprob: -20.186973571777344
    9. '$total' → logprob: -20.311973571777344
    10. ',total' → logprob: -20.686973571777344

Token 1937: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04533733054995537
    2. '<|end|>' → logprob: -3.170337438583374
    3. '#' → logprob: -6.545337200164795
    4. '```' → logprob: -8.045337677001953
    5. ')' → logprob: -8.670337677001953
    6. '
' → logprob: -8.795337677001953
    7. '<|end|>' → logprob: -9.420337677001953
    8. ' def' → logprob: -9.670337677001953
    9. '...' → logprob: -10.420337677001953
    10. '\' → logprob: -11.295337677001953

Token 1938: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14767280220985413
    2. '<|end|>' → logprob: -2.2726728916168213
    3. '#' → logprob: -4.397672653198242
    4. '```' → logprob: -5.022672653198242
    5. '\n' → logprob: -5.522672653198242
    6. ')' → logprob: -5.647672653198242
    7. '\' → logprob: -6.147672653198242
    8. '...' → logprob: -6.647672653198242
    9. '(' → logprob: -6.897672653198242
    10. '
' → logprob: -7.397672653198242

Token 1939: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -8.0536883615423e-05
    2. 'is' → logprob: -9.750080108642578
    3. ' count' → logprob: -10.750080108642578
    4. 'def' → logprob: -14.875080108642578
    5. '(count' → logprob: -15.875080108642578
    6. 'decode' → logprob: -16.125080108642578
    7. 'main' → logprob: -16.875080108642578
    8. ' is' → logprob: -17.750080108642578
    9. '`' → logprob: -17.750080108642578
    10. 'parse' → logprob: -18.375080108642578

Token 1940: '_three' (ID: 121681)
  Prédit: '_three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_three' → logprob: -0.1395300328731537
    2. '_two' → logprob: -2.2645299434661865
    3. '_one' → logprob: -3.8895299434661865
    4. '_matches' → logprob: -6.264530181884766
    5. '_utf' → logprob: -6.389530181884766
    6. '_' → logprob: -7.639530181884766
    7. '_mult' → logprob: -7.639530181884766
    8. '_multi' → logprob: -7.639530181884766
    9. '_four' → logprob: -8.014530181884766
    10. '_bytes' → logprob: -8.639530181884766

Token 1941: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.00027468299958854914
    2. '_token' → logprob: -9.375274658203125
    3. '_' → logprob: -9.750274658203125
    4. '_bytes' → logprob: -9.875274658203125
    5. '```' → logprob: -10.125274658203125
    6. '_bit' → logprob: -11.625274658203125
    7. '_chunk' → logprob: -12.000274658203125
    8. '_piece' → logprob: -12.750274658203125
    9. '_BYTE' → logprob: -12.875274658203125
    10. '_char' → logprob: -12.875274658203125

Token 1942: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.015305552864447e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -14.125060081481934
    4. '(a' → logprob: -14.500060081481934
    5. '(s' → logprob: -16.00006103515625
    6. 'def' → logprob: -16.12506103515625
    7. '(def' → logprob: -16.25006103515625
    8. '(byte' → logprob: -16.50006103515625
    9. '((' → logprob: -17.62506103515625
    10. '(f' → logprob: -17.75006103515625

Token 1943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000511687423568219
    2. '(b' → logprob: -8.75051212310791
    3. '(' → logprob: -9.12551212310791
    4. 'def' → logprob: -9.62551212310791
    5. '[' → logprob: -9.75051212310791
    6. '```' → logprob: -9.75051212310791
    7. ')' → logprob: -10.37551212310791
    8. '_' → logprob: -10.75051212310791
    9. ')(' → logprob: -12.50051212310791
    10. ' def' → logprob: -14.25051212310791

Token 1944: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.00317783304490149
    2. ',' → logprob: -5.753177642822266
    3. ',
' → logprob: -16.253177642822266
    4. ' ,' → logprob: -16.878177642822266
    5. 'b' → logprob: -19.003177642822266
    6. ',B' → logprob: -19.378177642822266
    7. ',p' → logprob: -19.878177642822266
    8. ',d' → logprob: -20.003177642822266
    9. ',c' → logprob: -20.003177642822266
    10. '   ' → logprob: -20.628177642822266

Token 1945: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5247313380241394
    2. '2' → logprob: -0.8997313380241394
    3. '1' → logprob: -6.524731159210205
    4. '```' → logprob: -9.274731636047363
    5. '[
' → logprob: -10.399731636047363
    6. '(' → logprob: -12.899731636047363
    7. ')' → logprob: -12.899731636047363
    8. '0' → logprob: -13.149731636047363
    9. 'def' → logprob: -13.149731636047363
    10. '``' → logprob: -14.274731636047363

Token 1946: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0011732018319889903
    2. ',' → logprob: -6.75117301940918
    3. ' ,' → logprob: -13.37617301940918
    4. 'b' → logprob: -13.62617301940918
    5. ',c' → logprob: -16.87617301940918
    6. ',
' → logprob: -17.87617301940918
    7. ',d' → logprob: -18.00117301940918
    8. '):
' → logprob: -18.25117301940918
    9. ',p' → logprob: -18.37617301940918
    10. '   ' → logprob: -18.50117301940918

Token 1947: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003092393046244979
    2. '[' → logprob: -5.878092288970947
    3. '1' → logprob: -9.128092765808105
    4. ')' → logprob: -9.253092765808105
    5. '<|end|>' → logprob: -11.003092765808105
    6. '```' → logprob: -11.253092765808105
    7. ',' → logprob: -11.378092765808105
    8. 'b' → logprob: -11.753092765808105
    9. '2' → logprob: -12.003092765808105
    10. '[
' → logprob: -12.253092765808105

Token 1948: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6931813359260559
    2. '):' → logprob: -0.6931813359260559
    3. ')' → logprob: -11.193181037902832
    4. '):
' → logprob: -11.318181037902832
    5. '):

' → logprob: -12.068181037902832
    6. '   ' → logprob: -13.443181037902832
    7. ',b' → logprob: -15.318181037902832
    8. ',' → logprob: -15.818181037902832
    9. ' ):' → logprob: -16.06818199157715
    10. ':' → logprob: -16.56818199157715

Token 1949: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017781148198992014
    2. '#' → logprob: -7.0017781257629395
    3. 'def' → logprob: -7.5017781257629395
    4. '```' → logprob: -8.126777648925781
    5. '``' → logprob: -12.126777648925781
    6. '	' → logprob: -12.751777648925781
    7. 'if' → logprob: -13.251777648925781
    8. '[' → logprob: -13.501777648925781
    9. '(' → logprob: -13.751777648925781
    10. '	if' → logprob: -13.751777648925781

Token 1950: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27511143684387207
    2. '#' (adapté à ' #') → logprob: -1.775111436843872
    3. 'if' → logprob: -2.650111436843872
    4. '```' → logprob: -8.650111198425293
    5. 'def' → logprob: -9.525111198425293
    6. '
' → logprob: -10.150111198425293
    7. ' if' → logprob: -10.150111198425293
    8. ' #' → logprob: -10.650111198425293
    9. '``' → logprob: -11.775111198425293
    10. '	if' → logprob: -11.775111198425293

Token 1951: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007292950991541147
    2. '   ' → logprob: -5.007292747497559
    3. 'if' → logprob: -7.507292747497559
    4. 'def' → logprob: -10.757292747497559
    5. '
' → logprob: -12.257292747497559
    6. '```' → logprob: -13.257292747497559
    7. '#
' → logprob: -15.507292747497559
    8. ' #' → logprob: -15.632292747497559
    9. '``' → logprob: -16.382293701171875
    10. '       ' → logprob: -17.632293701171875

Token 1952: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07928433269262314
    2. '   ' → logprob: -2.829284429550171
    3. 'if' → logprob: -4.079284191131592
    4. 'def' → logprob: -8.45428466796875
    5. '
' → logprob: -10.95428466796875
    6. ' #' → logprob: -12.32928466796875
    7. '```' → logprob: -12.32928466796875
    8. 'for' → logprob: -12.45428466796875
    9. '       ' → logprob: -13.95428466796875
    10. 'i' → logprob: -14.20428466796875

Token 1953: ' bytes' (ID: 11643)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.017000067979097366
    2. 'def' → logprob: -4.267000198364258
    3. '   ' → logprob: -6.267000198364258
    4. ' #' → logprob: -7.642000198364258
    5. '7' → logprob: -8.767000198364258
    6. '0' → logprob: -9.017000198364258
    7. '[' → logprob: -9.017000198364258
    8. ' ' → logprob: -11.017000198364258
    9. ' def' → logprob: -11.767000198364258
    10. 'b' → logprob: -12.142000198364258

Token 1954: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11009184271097183
    2. '#' → logprob: -2.3600919246673584
    3. 'def' → logprob: -4.735091686248779
    4. 'if' → logprob: -7.360091686248779
    5. ':' → logprob: -8.985092163085938
    6. ':
' → logprob: -9.360092163085938
    7. '```' → logprob: -9.360092163085938
    8. '(' → logprob: -10.485092163085938
    9. '
' → logprob: -10.610092163085938
    10. ' if' → logprob: -10.985092163085938

Token 1955: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38726386427879333
    2. '#' → logprob: -1.1372638940811157
    3. 'def' → logprob: -8.012264251708984
    4. '```' → logprob: -10.887264251708984
    5. '	' → logprob: -11.012264251708984
    6. 'if' → logprob: -11.262264251708984
    7. '
' → logprob: -12.512264251708984
    8. ' #' → logprob: -13.137264251708984
    9. '#
' → logprob: -13.512264251708984
    10. '    
' → logprob: -13.887264251708984

Token 1956: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.38925647735595703
    2. '   ' → logprob: -1.139256477355957
    3. 'if' → logprob: -6.139256477355957
    4. ' #' → logprob: -9.264256477355957
    5. '
' → logprob: -9.889256477355957
    6. ' if' → logprob: -10.389256477355957
    7. '	' → logprob: -11.639256477355957
    8. '```' → logprob: -11.639256477355957
    9. 'def' → logprob: -11.639256477355957
    10. ' ' → logprob: -12.389256477355957

Token 1957: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24784834682941437
    2. '#' → logprob: -1.622848391532898
    3. 'def' → logprob: -4.3728485107421875
    4. ' #' → logprob: -5.4978485107421875
    5. '[' → logprob: -5.6228485107421875
    6. 'b' → logprob: -7.4978485107421875
    7. ' ' → logprob: -7.9978485107421875
    8. '
' → logprob: -8.747848510742188
    9. '    ' → logprob: -8.747848510742188
    10. 'if' → logprob: -9.122848510742188

Token 1958: '111' (ID: 8780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.662244975566864
    2. '   ' → logprob: -0.787244975566864
    3. 'if' → logprob: -3.912245035171509
    4. 'def' → logprob: -5.53724479675293
    5. 'b' → logprob: -5.91224479675293
    6. '
' → logprob: -6.53724479675293
    7. ' #' → logprob: -7.53724479675293
    8. '[' → logprob: -8.66224479675293
    9. ' ' → logprob: -9.53724479675293
    10. '#
' → logprob: -9.53724479675293

Token 1959: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.103531114757061
    2. '[' → logprob: -2.8535311222076416
    3. 'b' → logprob: -3.2285311222076416
    4. '000' → logprob: -7.2285308837890625
    5. '[b' → logprob: -8.978530883789062
    6. 'def' → logprob: -9.728530883789062
    7. ' b' → logprob: -10.103530883789062
    8. '   ' → logprob: -10.478530883789062
    9. '(' → logprob: -10.728530883789062
    10. '```' → logprob: -11.228530883789062

Token 1960: 'yyyy' (ID: 27343)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004352621268481016
    2. 'b' → logprob: -5.754352569580078
    3. '[
' → logprob: -7.879352569580078
    4. '(' → logprob: -8.379352569580078
    5. ''' → logprob: -8.879352569580078
    6. 'def' → logprob: -9.004352569580078
    7. '#' → logprob: -9.629352569580078
    8. '`' → logprob: -9.754352569580078
    9. '0' → logprob: -9.879352569580078
    10. '```' → logprob: -9.879352569580078

Token 1961: ' ' (ID: 220)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.8716694712638855
    2. '[' → logprob: -1.2466695308685303
    3. 'b' → logprob: -1.3716695308685303
    4. '   ' → logprob: -4.621669292449951
    5. 'def' → logprob: -4.746669292449951
    6. '[b' → logprob: -4.746669292449951
    7. '(' → logprob: -4.996669292449951
    8. '```' → logprob: -6.121669292449951
    9. '#' → logprob: -6.496669292449951
    10. ' b' → logprob: -6.871669292449951

Token 1962: '10' (ID: 702)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04654528200626373
    2. 'if' → logprob: -3.5465452671051025
    3. ' b' → logprob: -4.921545505523682
    4. 'def' → logprob: -5.796545505523682
    5. 'for' → logprob: -6.421545505523682
    6. ' if' → logprob: -6.421545505523682
    7. '   ' → logprob: -6.671545505523682
    8. '
' → logprob: -7.796545505523682
    9. '#' → logprob: -7.921545505523682
    10. ' ' → logprob: -8.296545028686523

Token 1963: 'y' (ID: 88)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005057279486209154
    2. 'bbb' → logprob: -6.130057334899902
    3. 'xxx' → logprob: -6.630057334899902
    4. 'yyy' → logprob: -6.755057334899902
    5. 'zzz' → logprob: -9.255057334899902
    6. '```' → logprob: -9.880057334899902
    7. 'y' → logprob: -10.130057334899902
    8. 'bb' → logprob: -10.255057334899902
    9. 'bbbb' → logprob: -10.255057334899902
    10. ' b' → logprob: -10.380057334899902

Token 1964: 'xxxxx' (ID: 162711)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.15709976851940155
    2. 'yy' → logprob: -2.407099723815918
    3. 'y' → logprob: -2.907099723815918
    4. 'yyyy' → logprob: -7.407099723815918
    5. '```' → logprob: -10.532099723815918
    6. '[' → logprob: -11.157099723815918
    7. 'zzz' → logprob: -11.407099723815918
    8. 'xxx' → logprob: -13.032099723815918
    9. 'yes' → logprob: -13.157099723815918
    10. 'mmm' → logprob: -13.407099723815918

Token 1965: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014195355586707592
    2. 'def' → logprob: -5.389195442199707
    3. '[' → logprob: -5.889195442199707
    4. '
' → logprob: -6.139195442199707
    5. '(' → logprob: -6.514195442199707
    6. ':' → logprob: -6.889195442199707
    7. ' def' → logprob: -7.264195442199707
    8. ' (' → logprob: -8.139195442199707
    9. '```' → logprob: -8.514195442199707
    10. ':
' → logprob: -9.264195442199707

Token 1966: '10' (ID: 702)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703879773616791
    2. 'def' → logprob: -2.020387887954712
    3. 'b' → logprob: -3.395387887954712
    4. ' ' → logprob: -3.895387887954712
    5. '[' → logprob: -4.520388126373291
    6. '
' → logprob: -5.020388126373291
    7. '#' → logprob: -5.145388126373291
    8. 'for' → logprob: -5.395388126373291
    9. ' b' → logprob: -5.520388126373291
    10. '  ' → logprob: -6.020388126373291

Token 1967: 'xxxx' (ID: 30950)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32946667075157166
    2. '[b' → logprob: -1.704466700553894
    3. '[' → logprob: -2.4544665813446045
    4. 'y' → logprob: -5.704466819763184
    5. '[
' → logprob: -5.704466819763184
    6. '[y' → logprob: -6.829466819763184
    7. '   ' → logprob: -7.204466819763184
    8. '(b' → logprob: -7.454466819763184
    9. ' b' → logprob: -7.704466819763184
    10. ']' → logprob: -7.954466819763184

Token 1968: 'xx' (ID: 7605)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9698233604431152
    2. 'xxx' → logprob: -1.4698233604431152
    3. '```' → logprob: -1.8448233604431152
    4. '[' → logprob: -2.3448233604431152
    5. 'b' → logprob: -2.8448233604431152
    6. '(' → logprob: -3.9698233604431152
    7. '(b' → logprob: -4.969823360443115
    8. '   ' → logprob: -5.094823360443115
    9. '>>>' → logprob: -5.094823360443115
    10. 'xx' → logprob: -5.094823360443115

Token 1969: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03561227023601532
    2. '#' → logprob: -3.4106123447418213
    3. 'def' → logprob: -6.660612106323242
    4. '```' → logprob: -7.785612106323242
    5. 'if' → logprob: -8.910612106323242
    6. '
' → logprob: -9.160612106323242
    7. '``' → logprob: -11.035612106323242
    8. '{
' → logprob: -12.035612106323242
    9. 'for' → logprob: -13.660612106323242
    10. ' #' → logprob: -13.785612106323242

Token 1970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059274970553815365
    2. '#' → logprob: -5.755927562713623
    3. 'def' → logprob: -6.005927562713623
    4. '```' → logprob: -8.505927085876465
    5. '
' → logprob: -9.630927085876465
    6. 'if' → logprob: -12.130927085876465
    7. '``' → logprob: -12.255927085876465
    8. 'for' → logprob: -13.880927085876465
    9. 'import' → logprob: -14.005927085876465
    10. '`' → logprob: -14.255927085876465

Token 1971: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01007313933223486
    2. '#' (adapté à ' #') → logprob: -4.760073184967041
    3. 'def' → logprob: -6.885073184967041
    4. '
' → logprob: -8.385072708129883
    5. '```' → logprob: -8.635072708129883
    6. 'if' → logprob: -11.260072708129883
    7. '``' → logprob: -12.010072708129883
    8. 'n' → logprob: -13.135072708129883
    9. '`' → logprob: -13.385072708129883
    10. '{
' → logprob: -13.510072708129883

Token 1972: ' byte' (ID: 9239)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40424466133117676
    2. '   ' → logprob: -1.1542446613311768
    3. 'if' → logprob: -4.154244422912598
    4. 'def' → logprob: -6.529244422912598
    5. '```' → logprob: -9.904244422912598
    6. 'for' → logprob: -12.154244422912598
    7. '
' → logprob: -12.404244422912598
    8. '``' → logprob: -13.154244422912598
    9. ' #' → logprob: -13.404244422912598
    10. '`' → logprob: -14.404244422912598

Token 1973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037692084442824125
    2. 'def' → logprob: -6.253769397735596
    3. '[' → logprob: -7.128769397735596
    4. '7' → logprob: -7.628769397735596
    5. '```' → logprob: -7.753769397735596
    6. '(' → logprob: -10.503768920898438
    7. '#' → logprob: -10.628768920898438
    8. '
' → logprob: -10.878768920898438
    9. '``' → logprob: -11.253768920898438
    10. '0' → logprob: -11.378768920898438

Token 1974: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00036514020757749677
    2. 'def' → logprob: -8.625365257263184
    3. '#' → logprob: -9.375365257263184
    4. '   ' → logprob: -10.625365257263184
    5. '```' → logprob: -10.750365257263184
    6. '=' → logprob: -10.875365257263184
    7. 'b' → logprob: -11.750365257263184
    8. ':' → logprob: -11.875365257263184
    9. '[
' → logprob: -12.000365257263184
    10. ' =' → logprob: -12.750365257263184

Token 1975: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04419654980301857
    2. ' =' → logprob: -4.169196605682373
    3. '   ' → logprob: -4.169196605682373
    4. ':' → logprob: -5.169196605682373
    5. '=' → logprob: -5.419196605682373
    6. 'def' → logprob: -7.419196605682373
    7. 'b' → logprob: -7.794196605682373
    8. '#' → logprob: -8.044196128845215
    9. '7' → logprob: -8.294196128845215
    10. '=[' → logprob: -8.544196128845215

Token 1976: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6163648962974548
    2. '[' → logprob: -1.4913649559020996
    3. 'b' → logprob: -1.7413649559020996
    4. ' b' → logprob: -3.2413649559020996
    5. ' ' → logprob: -5.6163649559021
    6. ' if' → logprob: -5.6163649559021
    7. 'if' → logprob: -5.9913649559021
    8. '7' → logprob: -6.1163649559021
    9. '0' → logprob: -6.4913649559021
    10. ''' → logprob: -6.4913649559021

Token 1977: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.016447339206933975
    2. '[' → logprob: -4.1414475440979
    3. '0' → logprob: -7.8914475440979
    4. '[
' → logprob: -11.641447067260742
    5. ' ' → logprob: -11.766447067260742
    6. '=' → logprob: -11.766447067260742
    7. '```' → logprob: -12.141447067260742
    8. 'def' → logprob: -13.391447067260742
    9. 's' → logprob: -13.516447067260742
    10. ' [' → logprob: -13.516447067260742

Token 1978: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0727749913930893
    2. '[' → logprob: -2.822774887084961
    3. '='' → logprob: -5.447774887084961
    4. ' =' → logprob: -6.072774887084961
    5. '=
' → logprob: -7.322774887084961
    6. '```' → logprob: -7.322774887084961
    7. '   ' → logprob: -7.447774887084961
    8. '==' → logprob: -7.697774887084961
    9. '`' → logprob: -7.822774887084961
    10. 'def' → logprob: -8.197774887084961

Token 1979: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00025776340044103563
    2. '1' → logprob: -8.37525749206543
    3. ' '' → logprob: -11.25025749206543
    4. '['' → logprob: -12.62525749206543
    5. '[' → logprob: -13.00025749206543
    6. '`' → logprob: -13.12525749206543
    7. '   ' → logprob: -13.37525749206543
    8. '
' → logprob: -13.75025749206543
    9. '"' → logprob: -14.12525749206543
    10. '('' → logprob: -14.62525749206543

Token 1980: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22665385901927948
    2. ',' → logprob: -1.851653814315796
    3. '   ' → logprob: -3.851653814315796
    4. '[' → logprob: -4.726654052734375
    5. 'b' → logprob: -5.101654052734375
    6. ')' → logprob: -5.851654052734375
    7. 'def' → logprob: -6.726654052734375
    8. '```' → logprob: -7.101654052734375
    9. '`' → logprob: -7.226654052734375
    10. ' =' → logprob: -7.226654052734375

Token 1981: '6' (ID: 21)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1941228210926056
    2. '7' → logprob: -2.569122791290283
    3. 'bit' → logprob: -3.194122791290283
    4. ' b' → logprob: -3.444122791290283
    5. '1' → logprob: -4.069122791290283
    6. ' bit' → logprob: -5.444122791290283
    7. '0' → logprob: -6.319122791290283
    8. ' ' → logprob: -6.319122791290283
    9. 'def' → logprob: -7.319122791290283
    10. '6' → logprob: -7.444122791290283

Token 1982: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0055606551468372345
    2. ',' → logprob: -6.130560874938965
    3. ')' → logprob: -6.380560874938965
    4. '=True' → logprob: -7.880560874938965
    5. '```' → logprob: -8.005560874938965
    6. ' =' → logprob: -8.380560874938965
    7. '==' → logprob: -8.755560874938965
    8. '7' → logprob: -9.005560874938965
    9. '='' → logprob: -9.130560874938965
    10. '=
' → logprob: -9.255560874938965

Token 1983: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002822231501340866
    2. ''' → logprob: -5.877822399139404
    3. '"' → logprob: -12.627821922302246
    4. ')' → logprob: -13.002821922302246
    5. ''''' → logprob: -13.127821922302246
    6. 'True' → logprob: -13.502821922302246
    7. ' '' → logprob: -13.877821922302246
    8. ' ' → logprob: -14.002821922302246
    9. '>' → logprob: -14.252821922302246
    10. '('' → logprob: -14.252821922302246

Token 1984: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03637997806072235
    2. '   ' → logprob: -4.036379814147949
    3. '```' → logprob: -4.786379814147949
    4. '7' → logprob: -6.536379814147949
    5. '#' → logprob: -6.536379814147949
    6. ' ,' → logprob: -6.911379814147949
    7. ' ' → logprob: -7.036379814147949
    8. ',
' → logprob: -7.286379814147949
    9. '``' → logprob: -7.286379814147949
    10. '',' → logprob: -7.286379814147949

Token 1985: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.602024900028482e-05
    2. '2' → logprob: -9.625085830688477
    3. ' ' → logprob: -11.250085830688477
    4. '```' → logprob: -13.375085830688477
    5. '0' → logprob: -13.625085830688477
    6. '7' → logprob: -13.750085830688477
    7. 'bit' → logprob: -13.750085830688477
    8. '   ' → logprob: -14.750085830688477
    9. 'def' → logprob: -14.875085830688477
    10. '  ' → logprob: -15.125085830688477

Token 1986: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17374108731746674
    2. ',' → logprob: -2.798741102218628
    3. '='' → logprob: -3.173741102218628
    4. '0' → logprob: -3.548741102218628
    5. ''' → logprob: -4.173740863800049
    6. '1' → logprob: -5.423740863800049
    7. ')' → logprob: -5.923740863800049
    8. '```' → logprob: -6.048740863800049
    9. '5' → logprob: -6.923740863800049
    10. '=True' → logprob: -7.673740863800049

Token 1987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07428812980651855
    2. '0' → logprob: -2.6992881298065186
    3. ''' → logprob: -5.449288368225098
    4. '"' → logprob: -11.324288368225098
    5. ''e' → logprob: -11.699288368225098
    6. '```' → logprob: -12.324288368225098
    7. ''''' → logprob: -12.949288368225098
    8. 'True' → logprob: -12.949288368225098
    9. '['' → logprob: -13.699288368225098
    10. '`' → logprob: -13.949288368225098

Token 1988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026751074939966202
    2. '   ' → logprob: -3.9017510414123535
    3. ',b' → logprob: -6.2767510414123535
    4. ',
' → logprob: -6.9017510414123535
    5. '[' → logprob: -7.0267510414123535
    6. 'def' → logprob: -7.1517510414123535
    7. '```' → logprob: -7.2767510414123535
    8. ' ,' → logprob: -8.151751518249512
    9. ' ' → logprob: -8.776751518249512
    10. '#' → logprob: -9.401751518249512

Token 1989: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7393721342086792
    2. '5' → logprob: -0.9893721342086792
    3. '7' → logprob: -2.6143722534179688
    4. '2' → logprob: -2.8643722534179688
    5. '3' → logprob: -4.239372253417969
    6. '0' → logprob: -5.739372253417969
    7. ' ' → logprob: -6.864372253417969
    8. '   ' → logprob: -6.989372253417969
    9. '```' → logprob: -7.739372253417969
    10. '1' → logprob: -8.864372253417969

Token 1990: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006232248619198799
    2. '='' → logprob: -5.881232261657715
    3. ' =' → logprob: -7.131232261657715
    4. '```' → logprob: -7.131232261657715
    5. '=y' → logprob: -7.756232261657715
    6. '0' → logprob: -8.006232261657715
    7. ',' → logprob: -8.881232261657715
    8. '==' → logprob: -9.006232261657715
    9. '3' → logprob: -9.381232261657715
    10. ''=' → logprob: -9.381232261657715

Token 1991: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5566921234130859
    2. ''y' → logprob: -1.431692123413086
    3. '0' → logprob: -1.681692123413086
    4. ''x' → logprob: -7.056692123413086
    5. ''b' → logprob: -7.306692123413086
    6. 'y' → logprob: -8.681692123413086
    7. '1' → logprob: -9.931692123413086
    8. ''z' → logprob: -10.181692123413086
    9. ''e' → logprob: -10.306692123413086
    10. '‘y' → logprob: -10.556692123413086

Token 1992: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11274340003728867
    2. ',' → logprob: -2.362743377685547
    3. '
' → logprob: -4.987743377685547
    4. 'def' → logprob: -6.237743377685547
    5. '```' → logprob: -6.862743377685547
    6. ',
' → logprob: -7.112743377685547
    7. ')' → logprob: -7.987743377685547
    8. ',b' → logprob: -8.237743377685547
    9. '[' → logprob: -8.487743377685547
    10. ' ' → logprob: -8.487743377685547

Token 1993: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05186410993337631
    2. '5' → logprob: -3.6768641471862793
    3. '4' → logprob: -4.301864147186279
    4. '7' → logprob: -5.176864147186279
    5. '1' → logprob: -6.176864147186279
    6. ' ' → logprob: -6.301864147186279
    7. '   ' → logprob: -6.551864147186279
    8. '	' → logprob: -8.426863670349121
    9. '6' → logprob: -8.801863670349121
    10. '0' → logprob: -9.301863670349121

Token 1994: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032403396908193827
    2. '='' → logprob: -6.50324010848999
    3. '=y' → logprob: -7.62824010848999
    4. ',' → logprob: -8.003240585327148
    5. '=True' → logprob: -8.003240585327148
    6. ' =' → logprob: -8.628240585327148
    7. ',y' → logprob: -9.503240585327148
    8. '=#' → logprob: -9.878240585327148
    9. '<|end|>' → logprob: -9.878240585327148
    10. ')' → logprob: -10.253240585327148

Token 1995: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20780032873153687
    2. ',' → logprob: -2.0828003883361816
    3. 'def' → logprob: -4.332800388336182
    4. ' =' → logprob: -4.582800388336182
    5. '=' → logprob: -4.707800388336182
    6. '[' → logprob: -5.457800388336182
    7. ',y' → logprob: -5.582800388336182
    8. '#' → logprob: -5.832800388336182
    9. '<|end|>' → logprob: -5.832800388336182
    10. ' y' → logprob: -6.082800388336182

Token 1996: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005779353086836636
    2. '3' → logprob: -7.625577926635742
    3. '5' → logprob: -9.750577926635742
    4. ' ' → logprob: -10.875577926635742
    5. '
' → logprob: -12.000577926635742
    6. '   ' → logprob: -12.500577926635742
    7. '```' → logprob: -13.625577926635742
    8. '#' → logprob: -14.125577926635742
    9. '  ' → logprob: -15.000577926635742
    10. 'def' → logprob: -15.125577926635742

Token 1997: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027574315667152405
    2. '1' → logprob: -4.40257453918457
    3. '2' → logprob: -5.15257453918457
    4. ''y' → logprob: -6.27757453918457
    5. '```' → logprob: -6.27757453918457
    6. '3' → logprob: -6.65257453918457
    7. '5' → logprob: -6.65257453918457
    8. ',y' → logprob: -6.90257453918457
    9. ' y' → logprob: -7.90257453918457
    10. '4' → logprob: -8.27757453918457

Token 1998: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02137785032391548
    2. ',' → logprob: -4.771378040313721
    3. '   ' → logprob: -4.896378040313721
    4. '[' → logprob: -6.021378040313721
    5. ' ' → logprob: -6.771378040313721
    6. ''' → logprob: -7.646378040313721
    7. '	' → logprob: -8.021377563476562
    8. '```' → logprob: -8.021377563476562
    9. '#' → logprob: -8.771377563476562
    10. '`' → logprob: -9.021377563476562

Token 1999: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '5' → logprob: -12.250006675720215
    3. ' ' → logprob: -14.625006675720215
    4. '```' → logprob: -14.625006675720215
    5. '#' → logprob: -15.500006675720215
    6. '   ' → logprob: -15.750006675720215
    7. '`' → logprob: -16.2500057220459
    8. 'def' → logprob: -16.6250057220459
    9. '' → logprob: -17.1250057220459
    10. '...' → logprob: -17.8750057220459

Token 2000: '=y' (ID: 70421)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02951359562575817
    2. '0' → logprob: -4.529513359069824
    3. '=' → logprob: -4.779513359069824
    4. 'x' → logprob: -5.904513359069824
    5. 'y' → logprob: -6.029513359069824
    6. '```' → logprob: -6.404513359069824
    7. ''' → logprob: -7.029513359069824
    8. '[' → logprob: -7.279513359069824
    9. ''y' → logprob: -7.654513359069824
    10. '`' → logprob: -7.904513359069824

Token 2001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09597058594226837
    2. '0' → logprob: -3.345970630645752
    3. '1' → logprob: -3.470970630645752
    4. '[' → logprob: -4.220970630645752
    5. '   ' → logprob: -5.970970630645752
    6. '4' → logprob: -6.720970630645752
    7. '```' → logprob: -6.720970630645752
    8. '#' → logprob: -6.970970630645752
    9. '',' → logprob: -7.095970630645752
    10. '3' → logprob: -7.220970630645752

Token 2002: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '`' → logprob: -19.625001907348633
    7. '7' → logprob: -19.750001907348633
    8. '#' → logprob: -20.125001907348633
    9. '2' → logprob: -20.125001907348633
    10. '  ' → logprob: -20.250001907348633

Token 2003: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8603475689888
    2. ''x' → logprob: -1.2353475093841553
    3. ''' → logprob: -1.8603475093841553
    4. '='' → logprob: -2.3603475093841553
    5. ''=' → logprob: -3.6103475093841553
    6. 'x' → logprob: -5.735347747802734
    7. '0' → logprob: -6.110347747802734
    8. '=x' → logprob: -6.860347747802734
    9. ')' → logprob: -6.985347747802734
    10. '`' → logprob: -8.110347747802734

Token 2004: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05329544469714165
    2. 'def' → logprob: -3.178295373916626
    3. 'if' → logprob: -6.178295612335205
    4. '
' → logprob: -6.553295612335205
    5. ':' → logprob: -6.678295612335205
    6. '```' → logprob: -6.803295612335205
    7. ',' → logprob: -6.928295612335205
    8. ' if' → logprob: -7.053295612335205
    9. '#' → logprob: -7.428295612335205
    10. '[' → logprob: -7.553295612335205

Token 2005: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004551646299660206
    2. '```' → logprob: -5.629551410675049
    3. 'def' → logprob: -8.254551887512207
    4. '[' → logprob: -8.754551887512207
    5. '``' → logprob: -9.504551887512207
    6. '
' → logprob: -9.629551887512207
    7. 'b' → logprob: -9.754551887512207
    8. ',' → logprob: -9.879551887512207
    9. ':' → logprob: -10.254551887512207
    10. ' b' → logprob: -10.504551887512207

Token 2006: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018090566154569387
    2. ' if' → logprob: -6.501809120178223
    3. '```' → logprob: -8.876809120178223
    4. 'if' → logprob: -9.751809120178223
    5. 'def' → logprob: -10.376809120178223
    6. '[' → logprob: -10.501809120178223
    7. '`' → logprob: -11.876809120178223
    8. ',' → logprob: -12.001809120178223
    9. ')' → logprob: -12.126809120178223
    10. '
' → logprob: -12.251809120178223

Token 2007: ' byte' (ID: 9239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5119897723197937
    2. 'if' → logprob: -1.0119898319244385
    3. 'def' → logprob: -4.011989593505859
    4. ' if' → logprob: -4.136989593505859
    5. '#' → logprob: -5.886989593505859
    6. '
' → logprob: -8.51198959350586
    7. 'for' → logprob: -9.51198959350586
    8. ' #' → logprob: -10.51198959350586
    9. ' def' → logprob: -11.01198959350586
    10. '```' → logprob: -11.63698959350586

Token 2008: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003715662460308522
    2. '0' → logprob: -9.125371932983398
    3. '2' → logprob: -9.500371932983398
    4. '3' → logprob: -9.875371932983398
    5. '7' → logprob: -10.000371932983398
    6. '```' → logprob: -10.125371932983398
    7. '[' → logprob: -10.500371932983398
    8. 'def' → logprob: -11.625371932983398
    9. '#' → logprob: -12.375371932983398
    10. '
' → logprob: -12.500371932983398

Token 2009: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00372834550216794
    2. 'def' → logprob: -5.87872838973999
    3. '```' → logprob: -7.37872838973999
    4. '#' → logprob: -8.878727912902832
    5. '=' → logprob: -9.878727912902832
    6. ':' → logprob: -11.253727912902832
    7. '==' → logprob: -11.378727912902832
    8. '0' → logprob: -11.503727912902832
    9. '   ' → logprob: -11.503727912902832
    10. ' =' → logprob: -11.628727912902832

Token 2010: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.753032386302948
    2. '[' → logprob: -1.0030324459075928
    3. ' =' → logprob: -2.7530324459075928
    4. '=' → logprob: -2.8780324459075928
    5. 'def' → logprob: -3.7530324459075928
    6. '#' → logprob: -4.503032207489014
    7. '   ' → logprob: -5.253032207489014
    8. 'b' → logprob: -7.003032207489014
    9. '=[' → logprob: -7.378032207489014
    10. ' def' → logprob: -8.378032684326172

Token 2011: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8794525861740112
    2. ''' → logprob: -2.379452705383301
    3. '1' → logprob: -2.504452705383301
    4. '   ' → logprob: -2.504452705383301
    5. ' ' → logprob: -2.629452705383301
    6. '0' → logprob: -2.754452705383301
    7. 'b' → logprob: -3.129452705383301
    8. ' b' → logprob: -3.254452705383301
    9. '7' → logprob: -3.629452705383301
    10. ' '' → logprob: -4.129452705383301

Token 2012: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8244248628616333
    2. '0' → logprob: -1.0744248628616333
    3. '[' → logprob: -2.1994247436523438
    4. '7' → logprob: -3.4494247436523438
    5. '4' → logprob: -3.8244247436523438
    6. ''' → logprob: -4.074424743652344
    7. 'b' → logprob: -4.449424743652344
    8. 'def' → logprob: -4.699424743652344
    9. 'bit' → logprob: -4.949424743652344
    10. '3' → logprob: -5.949424743652344

Token 2013: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10934408754110336
    2. '[' → logprob: -2.484344005584717
    3. '7' → logprob: -4.484344005584717
    4. ' ' → logprob: -5.109344005584717
    5. ',' → logprob: -7.359344005584717
    6. '   ' → logprob: -7.359344005584717
    7. '=' → logprob: -7.984344005584717
    8. '1' → logprob: -7.984344005584717
    9. ']' → logprob: -7.984344005584717
    10. ')' → logprob: -8.984344482421875

Token 2014: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005420754197984934
    2. '1' → logprob: -5.630420684814453
    3. '7' → logprob: -6.505420684814453
    4. ' ' → logprob: -8.505420684814453
    5. '[' → logprob: -9.755420684814453
    6. '=' → logprob: -10.630420684814453
    7. ']' → logprob: -11.505420684814453
    8. ')' → logprob: -12.380420684814453
    9. ',' → logprob: -12.505420684814453
    10. '6' → logprob: -12.630420684814453

Token 2015: ' y' (ID: 342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8258772492408752
    2. '7' → logprob: -1.2008771896362305
    3. '3' → logprob: -1.4508771896362305
    4. '0' → logprob: -4.9508771896362305
    5. ' ' → logprob: -5.3258771896362305
    6. '[' → logprob: -5.7008771896362305
    7. '```' → logprob: -5.8258771896362305
    8. '   ' → logprob: -5.9508771896362305
    9. '2' → logprob: -6.3258771896362305
    10. ',' → logprob: -6.3258771896362305

Token 2016: ' x' (ID: 1215)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2857900857925415
    2. '7' → logprob: -1.9107900857925415
    3. '[' → logprob: -3.035789966583252
    4. ',' → logprob: -3.910789966583252
    5. '2' → logprob: -5.160789966583252
    6. ']' → logprob: -5.285789966583252
    7. 'y' → logprob: -5.535789966583252
    8. ')' → logprob: -5.660789966583252
    9. '1' → logprob: -5.910789966583252
    10. ' ' → logprob: -6.035789966583252

Token 2017: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06389737129211426
    2. '2' → logprob: -3.4388973712921143
    3. '3' → logprob: -3.6888973712921143
    4. '7' → logprob: -5.813897132873535
    5. ',' → logprob: -7.938897132873535
    6. '```' → logprob: -7.938897132873535
    7. '   ' → logprob: -8.688897132873535
    8. 'def' → logprob: -8.813897132873535
    9. ')' → logprob: -8.938897132873535
    10. '(' → logprob: -8.938897132873535

Token 2018: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19998890161514282
    2. '[' → logprob: -2.699988842010498
    3. '7' → logprob: -3.074988842010498
    4. '3' → logprob: -3.824988842010498
    5. ')' → logprob: -3.949988842010498
    6. ',' → logprob: -4.074988842010498
    7. ']' → logprob: -6.199988842010498
    8. '```' → logprob: -6.199988842010498
    9. 'x' → logprob: -6.574988842010498
    10. '(' → logprob: -6.824988842010498

Token 2019: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13972721993923187
    2. ',' → logprob: -2.1397271156311035
    3. '[' → logprob: -5.2647271156311035
    4. ' ' → logprob: -5.8897271156311035
    5. '   ' → logprob: -6.8897271156311035
    6. 'def' → logprob: -7.0147271156311035
    7. '#' → logprob: -7.3897271156311035
    8. ')' → logprob: -7.6397271156311035
    9. '3' → logprob: -8.014727592468262
    10. 'b' → logprob: -8.514727592468262

Token 2020: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2793350219726562
    2. ',' → logprob: -1.4043350219726562
    3. '7' → logprob: -1.9043350219726562
    4. ')' → logprob: -2.4043350219726562
    5. '   ' → logprob: -2.5293350219726562
    6. '2' → logprob: -2.9043350219726562
    7. ' ' → logprob: -4.029335021972656
    8. ':' → logprob: -4.404335021972656
    9. '4' → logprob: -4.529335021972656
    10. 'def' → logprob: -4.654335021972656

Token 2021: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07404661178588867
    2. 'def' → logprob: -2.6990466117858887
    3. '[' → logprob: -6.699046611785889
    4. '```' → logprob: -6.699046611785889
    5. 'if' → logprob: -7.199046611785889
    6. ' if' → logprob: -7.949046611785889
    7. '
' → logprob: -8.199047088623047
    8. '#' → logprob: -9.574047088623047
    9. '``' → logprob: -10.324047088623047
    10. ' def' → logprob: -10.324047088623047

Token 2022: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09133496880531311
    2. 'def' → logprob: -2.7163350582122803
    3. '```' → logprob: -4.091334819793701
    4. '[' → logprob: -6.591334819793701
    5. ' def' → logprob: -7.091334819793701
    6. '``' → logprob: -7.591334819793701
    7. '#' → logprob: -7.591334819793701
    8. '
' → logprob: -8.09133529663086
    9. '7' → logprob: -8.71633529663086
    10. '4' → logprob: -8.96633529663086

Token 2023: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04268671199679375
    2. ' if' → logprob: -3.917686700820923
    3. 'if' → logprob: -3.917686700820923
    4. '```' → logprob: -6.667686939239502
    5. 'def' → logprob: -7.917686939239502
    6. '
' → logprob: -8.542686462402344
    7. '``' → logprob: -9.667686462402344
    8. 'for' → logprob: -10.292686462402344
    9. '#' (adapté à ' #') → logprob: -10.792686462402344
    10. '`' → logprob: -11.292686462402344

Token 2024: ' byte' (ID: 9239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09017914533615112
    2. 'def' → logprob: -2.715179204940796
    3. '#' → logprob: -5.090178966522217
    4. 'if' → logprob: -5.215178966522217
    5. '```' → logprob: -5.215178966522217
    6. 'b' → logprob: -6.715178966522217
    7. '
' → logprob: -7.465178966522217
    8. '``' → logprob: -7.465178966522217
    9. 'for' → logprob: -8.215179443359375
    10. ' if' → logprob: -9.715179443359375

Token 2025: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.015010657720267773
    2. '2' → logprob: -4.265010833740234
    3. '[' → logprob: -7.140010833740234
    4. '0' → logprob: -11.390010833740234
    5. '1' → logprob: -11.515010833740234
    6. '#' → logprob: -11.515010833740234
    7. 'def' → logprob: -11.515010833740234
    8. '7' → logprob: -12.140010833740234
    9. ' ' → logprob: -13.390010833740234
    10. '   ' → logprob: -13.390010833740234

Token 2026: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01206678245216608
    2. 'bits' → logprob: -5.137066841125488
    3. ' bits' → logprob: -5.887066841125488
    4. ' =' → logprob: -6.512066841125488
    5. ' [' → logprob: -6.887066841125488
    6. '=' → logprob: -8.387066841125488
    7. '_bits' → logprob: -8.887066841125488
    8. '   ' → logprob: -9.387066841125488
    9. ' ' → logprob: -9.762066841125488
    10. 'def' → logprob: -10.137066841125488

Token 2027: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.356313019990921
    2. ':' → logprob: -1.8563129901885986
    3. '=' → logprob: -2.7313129901885986
    4. ' =' → logprob: -2.8563129901885986
    5. 'def' → logprob: -4.981313228607178
    6. '#' → logprob: -5.106313228607178
    7. '   ' → logprob: -6.356313228607178
    8. 'b' → logprob: -6.481313228607178
    9. ' ' → logprob: -6.731313228607178
    10. ' [' → logprob: -6.856313228607178

Token 2028: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04964900761842728
    2. ''' → logprob: -3.4246490001678467
    3. ' ' → logprob: -4.674649238586426
    4. '[' → logprob: -5.799649238586426
    5. '['' → logprob: -6.049649238586426
    6. ' '' → logprob: -7.424649238586426
    7. '   ' → logprob: -8.674649238586426
    8. ' ['' → logprob: -8.924649238586426
    9. ' [' → logprob: -9.799649238586426
    10. '`' → logprob: -9.799649238586426

Token 2029: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08628475666046143
    2. ''' → logprob: -2.586284637451172
    3. '['' → logprob: -5.586284637451172
    4. '[' → logprob: -5.836284637451172
    5. '('' → logprob: -7.961284637451172
    6. '`' → logprob: -9.461284637451172
    7. ' ' → logprob: -10.336284637451172
    8. ' '' → logprob: -10.336284637451172
    9. '[
' → logprob: -10.336284637451172
    10. 'b' → logprob: -10.461284637451172

Token 2030: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07771649211645126
    2. '0' → logprob: -2.952716588973999
    3. ',' → logprob: -4.57771635055542
    4. '7' → logprob: -5.20271635055542
    5. '(' → logprob: -5.95271635055542
    6. '=' → logprob: -7.20271635055542
    7. ' ' → logprob: -7.20271635055542
    8. '```' → logprob: -7.70271635055542
    9. '[
' → logprob: -7.70271635055542
    10. 'def' → logprob: -7.82771635055542

Token 2031: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007224413566291332
    2. '[' → logprob: -7.250722408294678
    3. '(' → logprob: -12.500722885131836
    4. ' ' → logprob: -13.250722885131836
    5. '7' → logprob: -13.375722885131836
    6. '```' → logprob: -13.375722885131836
    7. 'def' → logprob: -14.000722885131836
    8. '
' → logprob: -14.250722885131836
    9. '6' → logprob: -14.375722885131836
    10. '[
' → logprob: -14.875722885131836

Token 2032: ' x' (ID: 1215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.44090667366981506
    2. '[' → logprob: -1.1909066438674927
    3. '0' → logprob: -3.3159067630767822
    4. ''b' → logprob: -5.190906524658203
    5. ''' → logprob: -5.565906524658203
    6. '['' → logprob: -5.815906524658203
    7. '[
' → logprob: -6.565906524658203
    8. 'x' → logprob: -7.815906524658203
    9. '3' → logprob: -7.815906524658203
    10. '[b' → logprob: -8.190906524658203

Token 2033: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.202541321516037
    2. 'b' → logprob: -3.0775413513183594
    3. 'x' → logprob: -3.4525413513183594
    4. 'xxxx' → logprob: -3.5775413513183594
    5. '[x' → logprob: -4.202541351318359
    6. '[b' → logprob: -4.327541351318359
    7. '[]' → logprob: -4.452541351318359
    8. '7' → logprob: -4.702541351318359
    9. '```' → logprob: -4.827541351318359
    10. '3' → logprob: -5.452541351318359

Token 2034: ' x' (ID: 1215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04529904946684837
    2. '3' → logprob: -3.9202990531921387
    3. 'x' → logprob: -4.670299053192139
    4. '2' → logprob: -4.920299053192139
    5. '7' → logprob: -5.170299053192139
    6. '[' → logprob: -7.295299053192139
    7. '0' → logprob: -8.17029857635498
    8. ' b' → logprob: -8.29529857635498
    9. '6' → logprob: -8.54529857635498
    10. '8' → logprob: -9.17029857635498

Token 2035: ' x' (ID: 1215)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.151492714881897
    2. '7' → logprob: -1.151492714881897
    3. 'b' → logprob: -1.401492714881897
    4. ',' → logprob: -3.2764925956726074
    5. 'def' → logprob: -3.4014925956726074
    6. '[' → logprob: -3.5264925956726074
    7. '```' → logprob: -5.276492595672607
    8. '   ' → logprob: -6.151492595672607
    9. ',b' → logprob: -6.151492595672607
    10. ' ' → logprob: -6.276492595672607

Token 2036: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9129534959793091
    2. '[' → logprob: -1.037953495979309
    3. 'b' → logprob: -2.4129533767700195
    4. '7' → logprob: -2.7879533767700195
    5. ',' → logprob: -3.1629533767700195
    6. ' ' → logprob: -4.2879533767700195
    7. ' x' → logprob: -4.6629533767700195
    8. '0' → logprob: -5.1629533767700195
    9. ' b' → logprob: -5.4129533767700195
    10. '   ' → logprob: -5.6629533767700195

Token 2037: ' x' (ID: 1215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4917105436325073
    2. '[' → logprob: -0.9917105436325073
    3. '   ' → logprob: -4.241710662841797
    4. 'if' → logprob: -7.366710662841797
    5. '[
' → logprob: -7.616710662841797
    6. '```' → logprob: -7.741710662841797
    7. '(' → logprob: -8.116710662841797
    8. '#' → logprob: -8.491710662841797
    9. 'b' → logprob: -8.616710662841797
    10. '
' → logprob: -8.866710662841797

Token 2038: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08510775119066238
    2. 'def' → logprob: -2.9601078033447266
    3. '#' → logprob: -3.9601078033447266
    4. 'if' → logprob: -4.960107803344727
    5. '
' → logprob: -5.710107803344727
    6. '```' → logprob: -8.460107803344727
    7. ' if' → logprob: -9.710107803344727
    8. ' #' → logprob: -10.710107803344727
    9. 'import' → logprob: -10.835107803344727
    10. '``' → logprob: -11.085107803344727

Token 2039: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004863342270255089
    2. '
' → logprob: -6.129863262176514
    3. 'if' → logprob: -6.629863262176514
    4. 'def' → logprob: -7.129863262176514
    5. '#' → logprob: -7.629863262176514
    6. ' if' → logprob: -9.879863739013672
    7. '```' → logprob: -11.754863739013672
    8. '    
' → logprob: -12.379863739013672
    9. 'for' → logprob: -13.504863739013672
    10. 'import' → logprob: -14.254863739013672

Token 2040: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44838231801986694
    2. 'if' → logprob: -1.1983823776245117
    3. '#' (adapté à ' #') → logprob: -2.9483823776245117
    4. 'def' → logprob: -5.323382377624512
    5. '
' → logprob: -6.073382377624512
    6. '```' → logprob: -10.573382377624512
    7. ' if' → logprob: -11.323382377624512
    8. 'for' → logprob: -11.823382377624512
    9. '    
' → logprob: -13.198382377624512
    10. '``' → logprob: -13.698382377624512

Token 2041: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44136983156204224
    2. '   ' → logprob: -1.6913697719573975
    3. '#' → logprob: -1.8163697719573975
    4. 'def' → logprob: -4.691370010375977
    5. 'for' → logprob: -7.816370010375977
    6. '
' → logprob: -8.316370010375977
    7. '```' → logprob: -9.566370010375977
    8. ' if' → logprob: -10.191370010375977
    9. ' #' → logprob: -11.066370010375977
    10. '``' → logprob: -12.316370010375977

Token 2042: ' y' (ID: 342)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5206923484802246
    2. '#' → logprob: -1.6456923484802246
    3. '=' → logprob: -2.0206923484802246
    4. '   ' → logprob: -2.8956923484802246
    5. ' =' → logprob: -4.520692348480225
    6. 'b' → logprob: -5.645692348480225
    7. 'bits' → logprob: -6.270692348480225
    8. '=
' → logprob: -6.395692348480225
    9. 'length' → logprob: -6.645692348480225
    10. '
' → logprob: -6.895692348480225

Token 2043: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.4753282964229584
    2. 'def' → logprob: -1.9753283262252808
    3. '_count' → logprob: -2.350328207015991
    4. '=' → logprob: -2.600328207015991
    5. ' =' → logprob: -4.22532844543457
    6. 'count' → logprob: -4.60032844543457
    7. '[' → logprob: -4.60032844543457
    8. 'bits' → logprob: -4.72532844543457
    9. '_' → logprob: -5.35032844543457
    10. '#' → logprob: -5.60032844543457

Token 2044: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7518764138221741
    2. '=' → logprob: -1.1268763542175293
    3. ' =' → logprob: -1.8768763542175293
    4. 'def' → logprob: -3.6268763542175293
    5. 'b' → logprob: -5.126876354217529
    6. '#' → logprob: -5.251876354217529
    7. 'y' → logprob: -5.501876354217529
    8. '=
' → logprob: -6.126876354217529
    9. '7' → logprob: -6.751876354217529
    10. '(' → logprob: -7.376876354217529

Token 2045: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6568803787231445
    2. '[' → logprob: -1.6568803787231445
    3. '7' → logprob: -1.9068803787231445
    4. '5' → logprob: -3.1568803787231445
    5. '3' → logprob: -3.1568803787231445
    6. '6' → logprob: -4.0318803787231445
    7. '8' → logprob: -4.2818803787231445
    8. '9' → logprob: -5.0318803787231445
    9. '(' → logprob: -5.9068803787231445
    10. '[
' → logprob: -5.9068803787231445

Token 2046: '4' (ID: 19)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41297298669815063
    2. '7' → logprob: -1.9129729270935059
    3. '4' → logprob: -2.412972927093506
    4. '[
' → logprob: -3.787972927093506
    5. '8' → logprob: -4.037972927093506
    6. '5' → logprob: -4.162972927093506
    7. 'b' → logprob: -4.537972927093506
    8. '3' → logprob: -4.662972927093506
    9. '6' → logprob: -4.787972927093506
    10. '9' → logprob: -5.412972927093506

Token 2047: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13069817423820496
    2. 'def' → logprob: -2.7556982040405273
    3. '#' → logprob: -3.3806982040405273
    4. 'if' → logprob: -3.8806982040405273
    5. '```' → logprob: -6.005698204040527
    6. ' if' → logprob: -7.255698204040527
    7. '
' → logprob: -7.255698204040527
    8. '``' → logprob: -9.630698204040527
    9. 'b' → logprob: -9.880698204040527
    10. 'for' → logprob: -10.005698204040527

Token 2048: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15494544804096222
    2. '[' → logprob: -2.0299453735351562
    3. 'range' → logprob: -4.904945373535156
    4. 'def' → logprob: -6.154945373535156
    5. '#' → logprob: -6.779945373535156
    6. '[
' → logprob: -8.154945373535156
    7. 'byte' → logprob: -8.404945373535156
    8. ' [' → logprob: -9.279945373535156
    9. 'first' → logprob: -9.404945373535156
    10. '```' → logprob: -9.404945373535156

Token 2049: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3383875787258148
    2. 'def' → logprob: -1.5883876085281372
    3. 'b' → logprob: -3.3383874893188477
    4. '1' → logprob: -3.3383874893188477
    5. '   ' → logprob: -4.963387489318848
    6. '
' → logprob: -6.963387489318848
    7. '```' → logprob: -6.963387489318848
    8. '7' → logprob: -7.338387489318848
    9. '(' → logprob: -7.338387489318848
    10. '#' → logprob: -7.963387489318848

Token 2050: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19919174909591675
    2. 'def' → logprob: -2.0741918087005615
    3. '[' → logprob: -3.9491918087005615
    4. '#' → logprob: -3.9491918087005615
    5. 'if' → logprob: -4.699191570281982
    6. ':' → logprob: -6.949191570281982
    7. '
' → logprob: -6.949191570281982
    8. 'b' → logprob: -7.199191570281982
    9. ' if' → logprob: -7.199191570281982
    10. '```' → logprob: -7.199191570281982

Token 2051: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07631301134824753
    2. '4' → logprob: -2.701313018798828
    3. '0' → logprob: -6.201313018798828
    4. '1' → logprob: -6.576313018798828
    5. '2' → logprob: -6.951313018798828
    6. '7' → logprob: -7.201313018798828
    7. 'b' → logprob: -7.326313018798828
    8. '5' → logprob: -7.951313018798828
    9. '6' → logprob: -9.701313018798828
    10. '[' → logprob: -9.826313018798828

Token 2052: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6367564797401428
    2. '4' → logprob: -0.7617564797401428
    3. 'b' → logprob: -5.886756420135498
    4. '1' → logprob: -8.011756896972656
    5. '5' → logprob: -8.136756896972656
    6. '7' → logprob: -8.261756896972656
    7. '0' → logprob: -8.636756896972656
    8. '2' → logprob: -8.761756896972656
    9. 'byte' → logprob: -9.511756896972656
    10. '(' → logprob: -10.636756896972656

Token 2053: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0076535940170288
    2. '[' → logprob: -1.6326535940170288
    3. 'for' → logprob: -1.6326535940170288
    4. '   ' → logprob: -2.5076537132263184
    5. ' for' → logprob: -3.6326537132263184
    6. ' ' → logprob: -3.8826537132263184
    7. ' =' → logprob: -4.257653713226318
    8. '(' → logprob: -4.507653713226318
    9. '
' → logprob: -4.507653713226318
    10. ',' → logprob: -4.757653713226318

Token 2054: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010800320655107498
    2. 'byte' → logprob: -5.010800361633301
    3. '2' → logprob: -5.760800361633301
    4. '1' → logprob: -7.010800361633301
    5. '0' → logprob: -11.3858003616333
    6. 'def' → logprob: -12.3858003616333
    7. '[' → logprob: -12.5108003616333
    8. '   ' → logprob: -12.8858003616333
    9. ' b' → logprob: -13.5108003616333
    10. ' ' → logprob: -14.7608003616333

Token 2055: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.351697033504024e-05
    2. '[' → logprob: -10.000083923339844
    3. '1' → logprob: -11.250083923339844
    4. '0' → logprob: -12.125083923339844
    5. 'def' → logprob: -12.250083923339844
    6. '3' → logprob: -12.750083923339844
    7. '(' → logprob: -13.000083923339844
    8. ' ' → logprob: -13.125083923339844
    9. '
' → logprob: -13.250083923339844
    10. '   ' → logprob: -13.250083923339844

Token 2056: ' bit' (ID: 3546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48183152079582214
    2. '   ' → logprob: -0.9818315505981445
    3. '#' → logprob: -5.6068315505981445
    4. '
' → logprob: -6.4818315505981445
    5. '```' → logprob: -7.4818315505981445
    6. '=' → logprob: -7.7318315505981445
    7. '(' → logprob: -7.8568315505981445
    8. 'b' → logprob: -8.356831550598145
    9. '[' → logprob: -8.981831550598145
    10. 'y' → logprob: -9.231831550598145

Token 2057: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.013556985184550285
    2. '[' → logprob: -5.263556957244873
    3. '2' → logprob: -5.388556957244873
    4. 'def' → logprob: -5.888556957244873
    5. '7' → logprob: -7.638556957244873
    6. ' ' → logprob: -9.013557434082031
    7. '   ' → logprob: -9.388557434082031
    8. '0' → logprob: -9.513557434082031
    9. '(' → logprob: -10.138557434082031
    10. '
' → logprob: -10.638557434082031

Token 2058: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16909773647785187
    2. 'def' → logprob: -1.9190977811813354
    3. '#' → logprob: -5.919097900390625
    4. '
' → logprob: -6.544097900390625
    5. '```' → logprob: -6.669097900390625
    6. '=' → logprob: -8.044097900390625
    7. '{
' → logprob: -8.044097900390625
    8. '[' → logprob: -8.294097900390625
    9. '(' → logprob: -8.294097900390625
    10. ':' → logprob: -8.419097900390625

Token 2059: ' y' (ID: 342)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.44373267889022827
    2. '3' → logprob: -2.068732738494873
    3. '5' → logprob: -2.068732738494873
    4. '2' → logprob: -2.443732738494873
    5. '1' → logprob: -4.443732738494873
    6. '0' → logprob: -5.193732738494873
    7. '6' → logprob: -7.068732738494873
    8. '7' → logprob: -7.943732738494873
    9. '   ' → logprob: -9.818732261657715
    10. '```' → logprob: -9.943732261657715

Token 2060: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.076603002846241
    2. 'def' → logprob: -2.7016029357910156
    3. '
' → logprob: -6.326602935791016
    4. ':
' → logprob: -7.076602935791016
    5. ':' → logprob: -7.701602935791016
    6. '[' → logprob: -7.701602935791016
    7. '#' → logprob: -7.826602935791016
    8. '```' → logprob: -7.826602935791016
    9. ' def' → logprob: -7.951602935791016
    10. 'if' → logprob: -8.201602935791016

Token 2061: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25318634510040283
    2. 'def' → logprob: -1.6281863451004028
    3. '
' → logprob: -4.503186225891113
    4. '#' → logprob: -5.003186225891113
    5. '[' → logprob: -6.003186225891113
    6. '```' → logprob: -6.503186225891113
    7. '(' → logprob: -6.753186225891113
    8. '{
' → logprob: -7.503186225891113
    9. '=' → logprob: -7.753186225891113
    10. 'b' → logprob: -8.253186225891113

Token 2062: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008751065470278263
    2. 'def' → logprob: -5.133750915527344
    3. '```' → logprob: -6.508750915527344
    4. '
' → logprob: -7.258750915527344
    5. '#' → logprob: -8.008750915527344
    6. 'for' → logprob: -9.633750915527344
    7. 'y' → logprob: -9.758750915527344
    8. '``' → logprob: -10.508750915527344
    9. '`' → logprob: -10.758750915527344
    10. '       ' → logprob: -10.883750915527344

Token 2063: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008514458313584328
    2. 'def' → logprob: -5.383514404296875
    3. '
' → logprob: -6.633514404296875
    4. 'y' → logprob: -7.508514404296875
    5. 'if' → logprob: -7.508514404296875
    6. '#' (adapté à ' #') → logprob: -7.758514404296875
    7. 'for' → logprob: -7.883514404296875
    8. 'b' → logprob: -9.633514404296875
    9. '    
' → logprob: -9.883514404296875
    10. ' y' → logprob: -9.883514404296875

Token 2064: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014253887347877026
    2. 'def' → logprob: -5.264254093170166
    3. '#' → logprob: -5.389254093170166
    4. 'unknown' → logprob: -6.389254093170166
    5. 'y' → logprob: -7.264254093170166
    6. 'if' → logprob: -7.514254093170166
    7. 'c' → logprob: -8.139253616333008
    8. '
' → logprob: -8.139253616333008
    9. 'fixed' → logprob: -8.389253616333008
    10. 'b' → logprob: -8.889253616333008

Token 2065: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.22655397653579712
    2. 'ensure' → logprob: -1.8515539169311523
    3. ' have' → logprob: -4.226553916931152
    4. '   ' → logprob: -4.601553916931152
    5. 'def' → logprob: -4.601553916931152
    6. '#' → logprob: -5.476553916931152
    7. ' ensure' → logprob: -5.976553916931152
    8. 'count' → logprob: -6.976553916931152
    9. 'continue' → logprob: -7.226553916931152
    10. 'include' → logprob: -7.476553916931152

Token 2066: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.026166178286075592
    2. ' at' → logprob: -4.151165962219238
    3. 'y' → logprob: -4.776165962219238
    4. 'b' → logprob: -7.401165962219238
    5. '(' → logprob: -8.526165962219238
    6. '   ' → logprob: -8.526165962219238
    7. ' y' → logprob: -8.776165962219238
    8. '#' → logprob: -8.901165962219238
    9. '
' → logprob: -9.901165962219238
    10. 'any' → logprob: -10.026165962219238

Token 2067: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.017454219982028008
    2. ' least' → logprob: -4.142454147338867
    3. 'at' → logprob: -6.892454147338867
    4. 'lease' → logprob: -8.892454147338867
    5. 'Least' → logprob: -9.767454147338867
    6. '1' → logprob: -10.142454147338867
    7. '#' → logprob: -10.392454147338867
    8. 'east' → logprob: -10.517454147338867
    9. '0' → logprob: -11.392454147338867
    10. 'last' → logprob: -11.517454147338867

Token 2068: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0023280750028789043
    2. '1' → logprob: -6.127327919006348
    3. ' one' → logprob: -9.752327919006348
    4. 'least' → logprob: -10.002327919006348
    5. '_one' → logprob: -11.627327919006348
    6. 'at' → logprob: -11.877327919006348
    7. 'One' → logprob: -11.877327919006348
    8. '```' → logprob: -12.877327919006348
    9. '0' → logprob: -13.127327919006348
    10. '
' → logprob: -13.252327919006348

Token 2069: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1360403299331665
    2. '1' → logprob: -3.011040210723877
    3. 'def' → logprob: -3.761040210723877
    4. ' y' → logprob: -4.511040210723877
    5. ')' → logprob: -4.761040210723877
    6. 'fixed' → logprob: -4.886040210723877
    7. '=' → logprob: -5.011040210723877
    8. '```' → logprob: -5.761040210723877
    9. ' fixed' → logprob: -5.886040210723877
    10. 'b' → logprob: -6.261040210723877

Token 2070: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7286795377731323
    2. 'def' → logprob: -1.3536795377731323
    3. '[' → logprob: -1.6036795377731323
    4. '=' → logprob: -3.603679656982422
    5. ' =' → logprob: -5.103679656982422
    6. '_' → logprob: -5.603679656982422
    7. 'if' → logprob: -6.103679656982422
    8. '```' → logprob: -6.103679656982422
    9. ':' → logprob: -6.228679656982422
    10. '#' → logprob: -6.228679656982422

Token 2071: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06734131276607513
    2. 'def' → logprob: -2.8173413276672363
    3. '```' → logprob: -6.567341327667236
    4. '
' → logprob: -6.817341327667236
    5. ' def' → logprob: -7.192341327667236
    6. '#' → logprob: -7.567341327667236
    7. ':' → logprob: -7.692341327667236
    8. '(' → logprob: -7.942341327667236
    9. '[' → logprob: -8.692340850830078
    10. ' if' → logprob: -8.817340850830078

Token 2072: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017131395870819688
    2. 'True' → logprob: -6.876713275909424
    3. ' ' → logprob: -8.251712799072266
    4. ''' → logprob: -8.751712799072266
    5. '
' → logprob: -9.751712799072266
    6. '```' → logprob: -9.751712799072266
    7. '`' → logprob: -10.626712799072266
    8. '7' → logprob: -10.876712799072266
    9. '   ' → logprob: -11.126712799072266
    10. '(' → logprob: -11.126712799072266

Token 2073: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025013606995344162
    2. 'def' → logprob: -3.7750136852264404
    3. '
' → logprob: -7.275013446807861
    4. '```' → logprob: -7.525013446807861
    5. '#' → logprob: -8.65001392364502
    6. 'y' → logprob: -9.65001392364502
    7. '{
' → logprob: -9.77501392364502
    8. ' def' → logprob: -9.77501392364502
    9. ' if' → logprob: -10.40001392364502
    10. 'if' → logprob: -10.77501392364502

Token 2074: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005073997308500111
    2. 'def' → logprob: -8.000507354736328
    3. '
' → logprob: -9.500507354736328
    4. '```' → logprob: -10.250507354736328
    5. ' def' → logprob: -11.125507354736328
    6. 'b' → logprob: -11.375507354736328
    7. ')' → logprob: -11.750507354736328
    8. '#' → logprob: -12.125507354736328
    9. ' b' → logprob: -12.500507354736328
    10. '[' → logprob: -12.500507354736328

Token 2075: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026981167029589415
    2. 'def' → logprob: -6.752697944641113
    3. '```' → logprob: -7.002697944641113
    4. '
' → logprob: -7.502697944641113
    5. 'if' → logprob: -10.627697944641113
    6. '``' → logprob: -11.502697944641113
    7. ' if' → logprob: -11.877697944641113
    8. '       ' → logprob: -12.502697944641113
    9. '    
' → logprob: -12.627697944641113
    10. 'b' → logprob: -12.877697944641113

Token 2076: ' Check' (ID: 6208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012272165156900883
    2. 'def' → logprob: -5.137272357940674
    3. 'if' → logprob: -5.387272357940674
    4. '```' → logprob: -6.637272357940674
    5. ' if' → logprob: -8.762271881103516
    6. '#' → logprob: -9.137271881103516
    7. '
' → logprob: -9.137271881103516
    8. 'b' → logprob: -11.137271881103516
    9. '``' → logprob: -11.262271881103516
    10. '`' → logprob: -11.262271881103516

Token 2077: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3332698941230774
    2. 'if' → logprob: -1.3332698345184326
    3. 'def' → logprob: -4.833270072937012
    4. '#' → logprob: -5.083270072937012
    5. 'for' → logprob: -5.958270072937012
    6. 'b' → logprob: -6.458270072937012
    7. ' if' → logprob: -7.208270072937012
    8. '
' → logprob: -7.458270072937012
    9. '```' → logprob: -8.958270072937012
    10. ' #' → logprob: -11.458270072937012

Token 2078: ' bits' (ID: 18189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46368545293807983
    2. 'def' → logprob: -1.3386855125427246
    3. 'b' → logprob: -2.7136855125427246
    4. 'bits' → logprob: -3.4636855125427246
    5. '   ' → logprob: -4.713685512542725
    6. ' if' → logprob: -7.088685512542725
    7. 'for' → logprob: -7.713685512542725
    8. ' bits' → logprob: -8.338685035705566
    9. '
' → logprob: -8.963685035705566
    10. 'positions' → logprob: -9.338685035705566

Token 2079: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15323218703269958
    2. 'if' → logprob: -2.1532320976257324
    3. 'def' → logprob: -4.403232097625732
    4. ' if' → logprob: -4.528232097625732
    5. 'for' → logprob: -6.028232097625732
    6. '```' → logprob: -8.65323257446289
    7. ' for' → logprob: -8.77823257446289
    8. 'b' → logprob: -9.15323257446289
    9. '
' → logprob: -10.77823257446289
    10. '#' → logprob: -11.15323257446289

Token 2080: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016841089818626642
    2. 'def' → logprob: -6.751684188842773
    3. '[' → logprob: -8.001684188842773
    4. ' b' → logprob: -10.001684188842773
    5. '#' → logprob: -10.501684188842773
    6. '```' → logprob: -10.626684188842773
    7. '   ' → logprob: -10.751684188842773
    8. 'byte' → logprob: -11.126684188842773
    9. '[b' → logprob: -11.126684188842773
    10. '
' → logprob: -12.126684188842773

Token 2081: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04299337416887283
    2. 'def' → logprob: -3.7929933071136475
    3. '[' → logprob: -4.167993545532227
    4. '7' → logprob: -6.542993545532227
    5. 'b' → logprob: -7.042993545532227
    6. '```' → logprob: -7.167993545532227
    7. '
' → logprob: -8.167993545532227
    8. '0' → logprob: -8.167993545532227
    9. '#' → logprob: -9.167993545532227
    10. '   ' → logprob: -9.292993545532227

Token 2082: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1435314118862152
    2. 'if' → logprob: -2.643531322479248
    3. 'def' → logprob: -3.018531322479248
    4. ' if' → logprob: -4.518531322479248
    5. '```' → logprob: -6.518531322479248
    6. '[' → logprob: -7.018531322479248
    7. '
' → logprob: -9.018531799316406
    8. ' def' → logprob: -9.143531799316406
    9. 'for' → logprob: -9.768531799316406
    10. 'b' → logprob: -9.893531799316406

Token 2083: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012929379008710384
    2. 'if' → logprob: -4.512929439544678
    3. 'def' → logprob: -6.387929439544678
    4. '```' → logprob: -9.38792896270752
    5. ' if' → logprob: -9.51292896270752
    6. 'for' → logprob: -10.51292896270752
    7. '
' → logprob: -11.38792896270752
    8. '``' → logprob: -13.76292896270752
    9. '`' → logprob: -15.38792896270752
    10. '#' → logprob: -15.38792896270752

Token 2084: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013347156345844269
    2. 'if' (adapté à ' if') → logprob: -4.388347148895264
    3. 'def' → logprob: -7.763347148895264
    4. ' if' → logprob: -8.013347625732422
    5. '```' → logprob: -9.888347625732422
    6. 'for' → logprob: -11.138347625732422
    7. '
' → logprob: -11.263347625732422
    8. '``' → logprob: -13.638347625732422
    9. '	if' → logprob: -14.263347625732422
    10. '    
' → logprob: -15.513347625732422

Token 2085: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0018800891702994704
    2. ' b' → logprob: -6.376880168914795
    3. '   ' → logprob: -9.001879692077637
    4. 'not' → logprob: -10.251879692077637
    5. ' not' → logprob: -11.751879692077637
    6. 'len' → logprob: -11.876879692077637
    7. ' ' → logprob: -13.001879692077637
    8. '(b' → logprob: -14.251879692077637
    9. '    ' → logprob: -14.626879692077637
    10. '  ' → logprob: -15.126879692077637

Token 2086: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036002177745103836
    2. '[' → logprob: -3.4110021591186523
    3. '0' → logprob: -6.661002159118652
    4. '2' → logprob: -7.536002159118652
    5. '```' → logprob: -8.161002159118652
    6. '
' → logprob: -9.911002159118652
    7. '3' → logprob: -10.286002159118652
    8. 'b' → logprob: -10.536002159118652
    9. '(' → logprob: -10.661002159118652
    10. 'def' → logprob: -10.911002159118652

Token 2087: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001149867384810932
    2. '```' → logprob: -9.750115394592285
    3. '   ' → logprob: -9.875115394592285
    4. '
' → logprob: -13.750115394592285
    5. 'def' → logprob: -14.125115394592285
    6. '0' → logprob: -14.250115394592285
    7. '``' → logprob: -14.250115394592285
    8. ' [' → logprob: -15.000115394592285
    9. '==' → logprob: -15.250115394592285
    10. '`' → logprob: -15.375115394592285

Token 2088: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -11.625020980834961
    3. '
' → logprob: -12.875020980834961
    4. '```' → logprob: -13.250020980834961
    5. '#' → logprob: -13.375020980834961
    6. '=' → logprob: -13.500020980834961
    7. ' ' → logprob: -13.625020980834961
    8. '   ' → logprob: -14.000020980834961
    9. ']' → logprob: -14.500020980834961
    10. 'def' → logprob: -14.625020980834961

Token 2089: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006763351848348975
    2. ']==' → logprob: -8.125676155090332
    3. 'not' → logprob: -8.875676155090332
    4. ']!=' → logprob: -9.125676155090332
    5. ']!='' → logprob: -10.000676155090332
    6. ']=='' → logprob: -10.125676155090332
    7. '==' → logprob: -11.250676155090332
    8. '   ' → logprob: -11.375676155090332
    9. ' ]' → logprob: -12.000676155090332
    10. ' not' → logprob: -12.125676155090332

Token 2090: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20191095769405365
    2. 'not' → logprob: -1.7019109725952148
    3. '!=' → logprob: -7.826910972595215
    4. ' !=' → logprob: -9.576910972595215
    5. '!='' → logprob: -10.951910972595215
    6. '==' → logprob: -11.701910972595215
    7. '```' → logprob: -13.451910972595215
    8. '   ' → logprob: -14.451910972595215
    9. ' ==' → logprob: -15.326910972595215
    10. ')' → logprob: -15.326910972595215

Token 2091: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05490259826183319
    2. ' in' → logprob: -2.9299025535583496
    3. '=' → logprob: -11.429903030395508
    4. '
' → logprob: -12.679903030395508
    5. 'In' → logprob: -13.054903030395508
    6. '```' → logprob: -14.554903030395508
    7. '==' → logprob: -14.679903030395508
    8. 'i' → logprob: -15.054903030395508
    9. ')' → logprob: -15.054903030395508
    10. '['' → logprob: -15.179903030395508

Token 2092: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.981667537620524e-06
    2. ' ('' → logprob: -14.500001907348633
    3. '['' → logprob: -14.750001907348633
    4. ''' → logprob: -14.750001907348633
    5. '(' → logprob: -15.000001907348633
    6. '{'' → logprob: -15.125001907348633
    7. '(('' → logprob: -17.875001907348633
    8. '("' → logprob: -18.625001907348633
    9. ''s' → logprob: -18.875001907348633
    10. '(['' → logprob: -19.000001907348633

Token 2093: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02769920788705349
    2. '1' → logprob: -3.6526992321014404
    3. '('' → logprob: -6.652698993682861
    4. '{'' → logprob: -9.90269947052002
    5. '['' → logprob: -10.52769947052002
    6. '`' → logprob: -11.27769947052002
    7. ' '' → logprob: -11.77769947052002
    8. '"' → logprob: -12.02769947052002
    9. '{' → logprob: -14.40269947052002
    10. '
' → logprob: -14.52769947052002

Token 2094: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.5598931312561035
    2. '','' → logprob: -1.4348931312561035
    3. ',' → logprob: -1.6848931312561035
    4. '',' → logprob: -5.3098931312561035
    5. ')' → logprob: -10.184892654418945
    6. ',
' → logprob: -10.434892654418945
    7. ',"' → logprob: -10.559892654418945
    8. '   ' → logprob: -11.184892654418945
    9. ''' → logprob: -11.309892654418945
    10. ',['' → logprob: -11.434892654418945

Token 2095: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01109592616558075
    2. ''x' → logprob: -4.511096000671387
    3. '1' → logprob: -10.011096000671387
    4. '"x' → logprob: -13.261096000671387
    5. ' x' → logprob: -13.886096000671387
    6. ''' → logprob: -15.011096000671387
    7. ')x' → logprob: -16.88609504699707
    8. '
' → logprob: -17.01109504699707
    9. '$x' → logprob: -17.01109504699707
    10. '_x' → logprob: -17.63609504699707

Token 2096: ''):' (ID: 83830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2741837203502655
    2. '):' → logprob: -2.274183750152588
    3. '')' → logprob: -2.649183750152588
    4. ''):' → logprob: -3.399183750152588
    5. '):
' → logprob: -4.024183750152588
    6. ''):
' → logprob: -4.399183750152588
    7. '   ' → logprob: -6.149183750152588
    8. ':' → logprob: -8.27418327331543
    9. ',' → logprob: -9.39918327331543
    10. '',' → logprob: -10.39918327331543

Token 2097: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0106539661064744
    2. '   ' → logprob: -5.010653972625732
    3. 'if' → logprob: -6.385653972625732
    4. ' if' → logprob: -6.510653972625732
    5. 'return' → logprob: -8.260653495788574
    6. ')' → logprob: -8.885653495788574
    7. '<|end|>' → logprob: -9.135653495788574
    8. ' return' → logprob: -9.260653495788574
    9. '```' → logprob: -10.010653495788574
    10. ' ' → logprob: -10.385653495788574

Token 2098: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5750647187232971
    2. 'b' → logprob: -1.4500646591186523
    3. ' b' → logprob: -2.5750646591186523
    4. '       ' → logprob: -2.5750646591186523
    5. '1' → logprob: -3.7000646591186523
    6. ' ' → logprob: -5.700064659118652
    7. ''' → logprob: -5.700064659118652
    8. 'True' → logprob: -5.950064659118652
    9. 'return' → logprob: -6.200064659118652
    10. '
' → logprob: -6.200064659118652

Token 2099: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07415840774774551
    2. '1' → logprob: -2.8241584300994873
    3. '[' → logprob: -4.574158191680908
    4. '=' → logprob: -6.824158191680908
    5. '==' → logprob: -8.824158668518066
    6. '```' → logprob: -9.199158668518066
    7. ')' → logprob: -9.449158668518066
    8. ']' → logprob: -9.449158668518066
    9. 'def' → logprob: -9.699158668518066
    10. '0' → logprob: -9.699158668518066

Token 2100: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4293849468231201
    2. '==' → logprob: -1.9293849468231201
    3. '   ' → logprob: -2.05438494682312
    4. '=' → logprob: -3.42938494682312
    5. ' and' → logprob: -4.929385185241699
    6. ':' → logprob: -5.054385185241699
    7. 'and' → logprob: -5.054385185241699
    8. '!=' → logprob: -5.304385185241699
    9. '):' → logprob: -5.429385185241699
    10. '):
' → logprob: -6.179385185241699

Token 2101: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005407234653830528
    2. '1' → logprob: -5.255407333374023
    3. ' '' → logprob: -9.880407333374023
    4. '')' → logprob: -10.630407333374023
    5. '
' → logprob: -10.880407333374023
    6. '`' → logprob: -11.130407333374023
    7. '   ' → logprob: -11.755407333374023
    8. ')' → logprob: -12.005407333374023
    9. ' ' → logprob: -12.255407333374023
    10. '[' → logprob: -12.505407333374023

Token 2102: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7762521505355835
    2. '   ' → logprob: -0.9012521505355835
    3. 'and' → logprob: -2.526252269744873
    4. ')' → logprob: -3.026252269744873
    5. ':' → logprob: -6.401252269744873
    6. '       ' → logprob: -7.026252269744873
    7. '<|end|>' → logprob: -7.401252269744873
    8. ' or' → logprob: -7.526252269744873
    9. '):' → logprob: -7.901252269744873
    10. ':
' → logprob: -8.401251792907715

Token 2103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1615198850631714
    2. '   ' → logprob: -1.9115198850631714
    3. 'if' → logprob: -8.161520004272461
    4. '	if' → logprob: -8.661520004272461
    5. ' if' → logprob: -8.661520004272461
    6. ')' → logprob: -8.911520004272461
    7. '	' → logprob: -8.911520004272461
    8. '[' → logprob: -9.161520004272461
    9. ' and' → logprob: -9.786520004272461
    10. '```' → logprob: -9.911520004272461

Token 2104: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.271704763174057
    2. 'return' (adapté à ' return') → logprob: -1.5217047929763794
    3. 'if' → logprob: -4.27170467376709
    4. ' return' → logprob: -5.39670467376709
    5. '   ' → logprob: -7.14670467376709
    6. ' if' → logprob: -8.52170467376709
    7. '```' → logprob: -9.52170467376709
    8. '	return' → logprob: -11.02170467376709
    9. '    ' → logprob: -12.14670467376709
    10. ' ' → logprob: -13.02170467376709

Token 2105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.875
    4. '```' → logprob: -22.0
    5. '۰' → logprob: -22.875
    6. '1' → logprob: -23.125
    7. '
' → logprob: -23.25
    8. '  ' → logprob: -23.5
    9. 'False' → logprob: -24.0
    10. '000' → logprob: -24.0

Token 2106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '1' → logprob: -21.125
    4. '```' → logprob: -21.5
    5. '`' → logprob: -22.125
    6. '(' → logprob: -22.25
    7. 'False' → logprob: -22.25
    8. '۰' → logprob: -22.5
    9. '[' → logprob: -22.875
    10. '   ' → logprob: -22.875

Token 2107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3249969482421875
    2. 'if' → logprob: -1.8249969482421875
    3. ' if' → logprob: -2.1999969482421875
    4. '```' → logprob: -5.6999969482421875
    5. ')' → logprob: -6.6999969482421875
    6. '<|end|>' → logprob: -8.074996948242188
    7. '       ' → logprob: -8.574996948242188
    8. ',' → logprob: -9.449996948242188
    9. '	if' → logprob: -10.074996948242188
    10. '``' → logprob: -10.199996948242188

Token 2108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10148634761571884
    2. 'if' → logprob: -2.3514864444732666
    3. ' if' → logprob: -6.8514862060546875
    4. '```' → logprob: -8.476486206054688
    5. 'b' → logprob: -12.101486206054688
    6. '
' → logprob: -12.851486206054688
    7. '`' → logprob: -13.351486206054688
    8. '	if' → logprob: -13.476486206054688
    9. '``' → logprob: -14.726486206054688
    10. 'def' → logprob: -14.726486206054688

Token 2109: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004000873304903507
    2. '   ' → logprob: -5.754000663757324
    3. ' if' → logprob: -7.254000663757324
    4. 'b' → logprob: -9.129000663757324
    5. '```' → logprob: -12.379000663757324
    6. '	if' → logprob: -13.129000663757324
    7. ' ' → logprob: -14.879000663757324
    8. ' b' → logprob: -16.00400161743164
    9. 'def' → logprob: -16.50400161743164
    10. '`' → logprob: -16.75400161743164

Token 2110: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023248855024576187
    2. ' b' → logprob: -3.7732489109039307
    3. '   ' → logprob: -12.898248672485352
    4. '1' → logprob: -14.523248672485352
    5. ' ' → logprob: -15.898248672485352
    6. '	b' → logprob: -16.27324867248535
    7. '       ' → logprob: -17.14824867248535
    8. '    ' → logprob: -17.64824867248535
    9. '  ' → logprob: -17.77324867248535
    10. 'not' → logprob: -17.89824867248535

Token 2111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. '(' → logprob: -15.125001907348633
    4. '```' → logprob: -16.875001907348633
    5. '2' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.625001907348633
    8. '
' → logprob: -18.375001907348633
    9. '7' → logprob: -18.375001907348633
    10. '`' → logprob: -18.562501907348633

Token 2112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006804898846894503
    2. '1' → logprob: -5.006804943084717
    3. '   ' → logprob: -9.506804466247559
    4. '```' → logprob: -11.506804466247559
    5. '
' → logprob: -13.381804466247559
    6. '       ' → logprob: -14.256804466247559
    7. '[
' → logprob: -14.506804466247559
    8. ' [' → logprob: -14.756804466247559
    9. 'def' → logprob: -15.131804466247559
    10. '`' → logprob: -15.506804466247559

Token 2113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -11.75001335144043
    3. '0' → logprob: -12.50001335144043
    4. '   ' → logprob: -14.87501335144043
    5. '
' → logprob: -15.00001335144043
    6. 'def' → logprob: -15.75001335144043
    7. ' ' → logprob: -15.75001335144043
    8. '```' → logprob: -15.75001335144043
    9. '(' → logprob: -16.12501335144043
    10. '`' → logprob: -16.50001335144043

Token 2114: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0938766598701477
    2. 'not' → logprob: -2.593876600265503
    3. ']' → logprob: -4.218876838684082
    4. '[' → logprob: -9.468876838684082
    5. ')' → logprob: -10.468876838684082
    6. '   ' → logprob: -10.593876838684082
    7. '	not' → logprob: -11.093876838684082
    8. ']!='' → logprob: -12.593876838684082
    9. '    ' → logprob: -13.218876838684082
    10. '```' → logprob: -13.468876838684082

Token 2115: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.693149983882904
    2. 'not' → logprob: -0.693149983882904
    3. '	not' → logprob: -13.44314956665039
    4. '   ' → logprob: -14.81814956665039
    5. '```' → logprob: -14.81814956665039
    6. '[' → logprob: -15.69314956665039
    7. '...' → logprob: -16.19314956665039
    8. '
' → logprob: -16.81814956665039
    9. ' ' → logprob: -17.31814956665039
    10. ')' → logprob: -17.56814956665039

Token 2116: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16036853194236755
    2. ' in' → logprob: -1.91036856174469
    3. '('' → logprob: -9.035368919372559
    4. 'In' → logprob: -11.535368919372559
    5. ''in' → logprob: -12.910368919372559
    6. ')' → logprob: -13.035368919372559
    7. ''' → logprob: -13.035368919372559
    8. '_in' → logprob: -13.785368919372559
    9. ' ('' → logprob: -13.910368919372559
    10. '['' → logprob: -13.910368919372559

Token 2117: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.9981420336989686e-05
    2. ' ('' → logprob: -10.875020027160645
    3. '(' → logprob: -14.125020027160645
    4. ''' → logprob: -15.875020027160645
    5. '['' → logprob: -16.375019073486328
    6. '(
' → logprob: -17.000019073486328
    7. ''s' → logprob: -18.250019073486328
    8. '   ' → logprob: -18.375019073486328
    9. '("' → logprob: -19.500019073486328
    10. ' ' → logprob: -19.500019073486328

Token 2118: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008273754501715302
    2. '1' → logprob: -7.125827312469482
    3. '('' → logprob: -10.87582778930664
    4. ' '' → logprob: -13.00082778930664
    5. '
' → logprob: -14.87582778930664
    6. '"' → logprob: -15.12582778930664
    7. ''x' → logprob: -15.25082778930664
    8. '`' → logprob: -15.50082778930664
    9. '['' → logprob: -15.75082778930664
    10. ' ' → logprob: -16.25082778930664

Token 2119: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0004350797680672258
    2. ','' → logprob: -8.375434875488281
    3. '',' → logprob: -9.500434875488281
    4. ',' → logprob: -9.625434875488281
    5. ',x' → logprob: -10.500434875488281
    6. ')','' → logprob: -11.375434875488281
    7. ''x' → logprob: -11.625434875488281
    8. '',"' → logprob: -11.750434875488281
    9. ''' → logprob: -13.000434875488281
    10. '","' → logprob: -13.750434875488281

Token 2120: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031797364354133606
    2. ''x' → logprob: -5.753179550170898
    3. ''' → logprob: -14.128179550170898
    4. '"x' → logprob: -14.503179550170898
    5. ' x' → logprob: -15.253179550170898
    6. ')x' → logprob: -15.628179550170898
    7. '
' → logprob: -16.7531795501709
    8. ')' → logprob: -16.7531795501709
    9. ''s' → logprob: -17.0031795501709
    10. '```' → logprob: -17.2531795501709

Token 2121: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.08654629439115524
    2. '):' → logprob: -2.5865461826324463
    3. ''):
' → logprob: -5.086546421051025
    4. '   ' → logprob: -7.211546421051025
    5. '):
' → logprob: -7.961546421051025
    6. '')' → logprob: -8.961545944213867
    7. ')' → logprob: -9.211545944213867
    8. ':' → logprob: -9.961545944213867
    9. '"):' → logprob: -10.836545944213867
    10. '       ' → logprob: -10.961545944213867

Token 2122: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11736791580915451
    2. ''' → logprob: -2.24236798286438
    3. '('' → logprob: -6.992367744445801
    4. ' not' → logprob: -6.992367744445801
    5. '   ' → logprob: -7.367367744445801
    6. '(' → logprob: -7.992367744445801
    7. ' '' → logprob: -8.1173677444458
    8. ')' → logprob: -8.6173677444458
    9. '```' → logprob: -8.6173677444458
    10. '[' → logprob: -8.7423677444458

Token 2123: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06330449879169464
    2. ''x' → logprob: -3.3133044242858887
    3. ' '' → logprob: -4.188304424285889
    4. '1' → logprob: -4.938304424285889
    5. '   ' → logprob: -6.313304424285889
    6. '('' → logprob: -8.438304901123047
    7. 'x' → logprob: -9.063304901123047
    8. '       ' → logprob: -9.188304901123047
    9. '`' → logprob: -9.688304901123047
    10. ' ' → logprob: -9.813304901123047

Token 2124: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030218899250030518
    2. '1' → logprob: -3.5302188396453857
    3. '7' → logprob: -8.655219078063965
    4. ' ' → logprob: -8.905219078063965
    5. '```' → logprob: -10.155219078063965
    6. '[' → logprob: -10.280219078063965
    7. '   ' → logprob: -10.405219078063965
    8. '...' → logprob: -11.155219078063965
    9. '(' → logprob: -11.905219078063965
    10. '
' → logprob: -12.030219078063965

Token 2125: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8032734394073486
    2. 'not' → logprob: -0.9282734394073486
    3. ')' → logprob: -2.0532734394073486
    4. '   ' → logprob: -4.3032732009887695
    5. '<|end|>' → logprob: -5.4282732009887695
    6. '```' → logprob: -5.5532732009887695
    7. '):
' → logprob: -6.6782732009887695
    8. '==' → logprob: -6.6782732009887695
    9. ' in' → logprob: -7.4282732009887695
    10. 'in' → logprob: -7.5532732009887695

Token 2126: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.021839957684278488
    2. ''x' → logprob: -4.5218400955200195
    3. '1' → logprob: -4.7718400955200195
    4. '('' → logprob: -6.2718400955200195
    5. ' '' → logprob: -8.27184009552002
    6. '(' → logprob: -11.02184009552002
    7. '`' → logprob: -11.14684009552002
    8. '   ' → logprob: -11.39684009552002
    9. '
' → logprob: -11.64684009552002
    10. ' ' → logprob: -11.64684009552002

Token 2127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2573666572570801
    2. '   ' → logprob: -1.50736665725708
    3. ')' → logprob: -6.00736665725708
    4. '```' → logprob: -6.00736665725708
    5. ':' → logprob: -9.007366180419922
    6. '    ' → logprob: -10.007366180419922
    7. ',' → logprob: -10.382366180419922
    8. '==' → logprob: -10.507366180419922
    9. ' ' → logprob: -10.507366180419922
    10. '     ' → logprob: -10.632366180419922

Token 2128: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021268151700496674
    2. '       ' → logprob: -3.896268129348755
    3. '```' → logprob: -7.521268367767334
    4. 'if' → logprob: -9.646267890930176
    5. ' if' → logprob: -9.771267890930176
    6. ')' → logprob: -10.521267890930176
    7. '``' → logprob: -12.146267890930176
    8. ' ' → logprob: -12.146267890930176
    9. ' and' → logprob: -12.521267890930176
    10. ' not' → logprob: -12.771267890930176

Token 2129: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9781494140625
    2. '   ' → logprob: -1.2281494140625
    3. ' if' → logprob: -1.9781494140625
    4. '       ' → logprob: -2.1031494140625
    5. ' not' → logprob: -3.7281494140625
    6. 'not' → logprob: -3.9781494140625
    7. '```' → logprob: -4.6031494140625
    8. ' ' → logprob: -5.1031494140625
    9. 'b' → logprob: -5.3531494140625
    10. '    ' → logprob: -6.1031494140625

Token 2130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '1' → logprob: -15.000335693359375
    4. '   ' → logprob: -16.500335693359375
    5. '(' → logprob: -16.875335693359375
    6. '...' → logprob: -17.375335693359375
    7. '```' → logprob: -18.000335693359375
    8. '  ' → logprob: -18.750335693359375
    9. '2' → logprob: -19.250335693359375
    10. 'return' → logprob: -19.250335693359375

Token 2131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00048048171447589993
    2. ''' → logprob: -7.750480651855469
    3. '1' → logprob: -10.500480651855469
    4. '('' → logprob: -11.125480651855469
    5. ' ' → logprob: -12.500480651855469
    6. '(' → logprob: -13.125480651855469
    7. ''s' → logprob: -14.500480651855469
    8. '
' → logprob: -15.250480651855469
    9. '...' → logprob: -15.500480651855469
    10. '"' → logprob: -16.12548065185547

Token 2132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16463956236839294
    2. 'if' → logprob: -1.9146395921707153
    3. '```' → logprob: -5.789639472961426
    4. ' if' → logprob: -6.664639472961426
    5. '``' → logprob: -10.289639472961426
    6. ')' → logprob: -11.039639472961426
    7. '`' → logprob: -12.289639472961426
    8. '
' → logprob: -12.539639472961426
    9. 'b' → logprob: -13.039639472961426
    10. '	if' → logprob: -13.164639472961426

Token 2133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016818398609757423
    2. '```' → logprob: -4.641818523406982
    3. 'if' → logprob: -5.016818523406982
    4. 'b' → logprob: -8.141818046569824
    5. '``' → logprob: -10.016818046569824
    6. ' if' → logprob: -10.266818046569824
    7. '       ' → logprob: -11.016818046569824
    8. '`' → logprob: -11.141818046569824
    9. '[' → logprob: -12.891818046569824
    10. ')' → logprob: -13.391818046569824

Token 2134: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0020052457693964243
    2. '   ' → logprob: -6.252005100250244
    3. '```' → logprob: -9.502005577087402
    4. ' if' → logprob: -13.252005577087402
    5. '``' → logprob: -16.252004623413086
    6. '       ' → logprob: -18.377004623413086
    7. 'for' → logprob: -19.002004623413086
    8. '	if' → logprob: -19.002004623413086
    9. 'def' → logprob: -19.627004623413086
    10. '`' → logprob: -19.752004623413086

Token 2135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047935113310814
    2. ' b' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.26104736328125
    4. ' not' → logprob: -19.13604736328125
    5. 'not' → logprob: -19.26104736328125
    6. '1' → logprob: -19.26104736328125
    7. '```' → logprob: -20.01104736328125
    8. '    ' → logprob: -20.51104736328125
    9. ' ' → logprob: -20.63604736328125
    10. '       ' → logprob: -20.76104736328125

Token 2136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012916464766021818
    2. '2' → logprob: -9.000128746032715
    3. '[' → logprob: -12.750128746032715
    4. '```' → logprob: -13.125128746032715
    5. '(' → logprob: -15.750128746032715
    6. '   ' → logprob: -16.00012969970703
    7. ' ' → logprob: -16.25012969970703
    8. '``' → logprob: -16.62512969970703
    9. '3' → logprob: -16.87512969970703
    10. '...' → logprob: -17.50012969970703

Token 2137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005234848940744996
    2. '2' → logprob: -7.750523567199707
    3. '```' → logprob: -10.000523567199707
    4. 'def' → logprob: -10.375523567199707
    5. '   ' → logprob: -11.250523567199707
    6. '``' → logprob: -14.125523567199707
    7. '
' → logprob: -14.250523567199707
    8. ' [' → logprob: -14.500523567199707
    9. '...' → logprob: -15.500523567199707
    10. '[
' → logprob: -15.750523567199707

Token 2138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.500004768371582
    3. '   ' → logprob: -13.625004768371582
    4. '```' → logprob: -14.375004768371582
    5. '
' → logprob: -14.750004768371582
    6. '[' → logprob: -15.250004768371582
    7. '  ' → logprob: -16.125003814697266
    8. '    ' → logprob: -16.625003814697266
    9. '0' → logprob: -16.750003814697266
    10. '...' → logprob: -17.125003814697266

Token 2139: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.033997081220149994
    2. 'not' → logprob: -3.408997058868408
    3. '[' → logprob: -8.033997535705566
    4. '	not' → logprob: -11.283997535705566
    5. ']' → logprob: -12.408997535705566
    6. ')' → logprob: -12.533997535705566
    7. '   ' → logprob: -13.408997535705566
    8. '!='' → logprob: -14.033997535705566
    9. 'Not' → logprob: -14.408997535705566
    10. '```' → logprob: -14.783997535705566

Token 2140: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3868902027606964
    2. ' not' → logprob: -1.136890172958374
    3. '[' → logprob: -12.261890411376953
    4. '   ' → logprob: -12.386890411376953
    5. '```' → logprob: -12.761890411376953
    6. '	not' → logprob: -13.511890411376953
    7. '==' → logprob: -13.636890411376953
    8. '       ' → logprob: -14.011890411376953
    9. '
' → logprob: -14.136890411376953
    10. ')' → logprob: -14.636890411376953

Token 2141: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04482819512486458
    2. ' in' → logprob: -3.169828176498413
    3. '('' → logprob: -6.419828414916992
    4. 'not' → logprob: -9.794828414916992
    5. ' ('' → logprob: -10.294828414916992
    6. ''in' → logprob: -10.294828414916992
    7. '['' → logprob: -10.794828414916992
    8. '   ' → logprob: -11.669828414916992
    9. ''' → logprob: -11.669828414916992
    10. ' not' → logprob: -12.044828414916992

Token 2142: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001114106344175525
    2. ' ('' → logprob: -9.12511157989502
    3. ''' → logprob: -13.62511157989502
    4. '(' → logprob: -14.62511157989502
    5. '['' → logprob: -14.87511157989502
    6. '(
' → logprob: -15.37511157989502
    7. ''s' → logprob: -15.62511157989502
    8. '   ' → logprob: -17.000110626220703
    9. '{'' → logprob: -18.375110626220703
    10. '(('' → logprob: -18.375110626220703

Token 2143: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0016092435689643025
    2. '1' → logprob: -6.5016093254089355
    3. ''x' → logprob: -9.751608848571777
    4. ' '' → logprob: -10.876608848571777
    5. '('' → logprob: -11.501608848571777
    6. 'x' → logprob: -12.251608848571777
    7. '`' → logprob: -12.376608848571777
    8. '"' → logprob: -12.751608848571777
    9. '
' → logprob: -13.376608848571777
    10. '...' → logprob: -14.126608848571777

Token 2144: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.06524234265089035
    2. ','' → logprob: -2.815242290496826
    3. ',' → logprob: -6.190242290496826
    4. '',' → logprob: -6.940242290496826
    5. ',x' → logprob: -8.815242767333984
    6. ')' → logprob: -10.190242767333984
    7. '",'' → logprob: -11.315242767333984
    8. ')','' → logprob: -11.565242767333984
    9. '',"' → logprob: -11.690242767333984
    10. ',"' → logprob: -12.190242767333984

Token 2145: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197642162442207
    2. ''x' → logprob: -2.811976432800293
    3. '0' → logprob: -12.936976432800293
    4. '```' → logprob: -13.186976432800293
    5. '"x' → logprob: -13.936976432800293
    6. ''' → logprob: -14.186976432800293
    7. ' x' → logprob: -14.561976432800293
    8. '...' → logprob: -14.686976432800293
    9. '')' → logprob: -14.811976432800293
    10. ')x' → logprob: -15.061976432800293

Token 2146: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.5180755257606506
    2. '):' → logprob: -1.0180754661560059
    3. ''):
' → logprob: -3.643075466156006
    4. '   ' → logprob: -4.893075466156006
    5. '):
' → logprob: -5.143075466156006
    6. ':' → logprob: -6.643075466156006
    7. ')' → logprob: -6.768075466156006
    8. '')' → logprob: -7.018075466156006
    9. '':' → logprob: -9.893075942993164
    10. '       ' → logprob: -10.268075942993164

Token 2147: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053832054138183594
    2. ' ' → logprob: -4.053832054138184
    3. '<|end|>' → logprob: -4.303832054138184
    4. '   ' → logprob: -4.928832054138184
    5. ' #' → logprob: -5.678832054138184
    6. '#' → logprob: -6.303832054138184
    7. '    ' → logprob: -6.678832054138184
    8. '        ' → logprob: -6.803832054138184
    9. ' return' → logprob: -7.053832054138184
    10. ' '' → logprob: -7.553832054138184

Token 2148: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0032656495459377766
    2. '0' → logprob: -6.753265857696533
    3. ''b' → logprob: -6.753265857696533
    4. ' '' → logprob: -8.128265380859375
    5. ''x' → logprob: -8.253265380859375
    6. 'b' → logprob: -8.628265380859375
    7. '   ' → logprob: -9.128265380859375
    8. '`' → logprob: -11.003265380859375
    9. ''s' → logprob: -11.503265380859375
    10. ' ' → logprob: -11.503265380859375

Token 2149: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009859968908131123
    2. '3' → logprob: -4.759860038757324
    3. '[' → logprob: -6.759860038757324
    4. ' ' → logprob: -10.259860038757324
    5. '   ' → logprob: -11.134860038757324
    6. '```' → logprob: -11.259860038757324
    7. '  ' → logprob: -12.259860038757324
    8. '(' → logprob: -12.509860038757324
    9. '...' → logprob: -13.134860038757324
    10. '
' → logprob: -13.509860038757324

Token 2150: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016063109040260315
    2. 'not' → logprob: -4.141063213348389
    3. '   ' → logprob: -11.64106273651123
    4. '	not' → logprob: -12.39106273651123
    5. ' !=' → logprob: -12.51606273651123
    6. ')' → logprob: -12.64106273651123
    7. '!=' → logprob: -12.64106273651123
    8. '!='' → logprob: -12.76606273651123
    9. '[' → logprob: -14.01606273651123
    10. '```' → logprob: -14.39106273651123

Token 2151: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007702016155235469
    2. ''x' → logprob: -7.250770092010498
    3. '0' → logprob: -10.500770568847656
    4. ' '' → logprob: -11.625770568847656
    5. '('' → logprob: -12.000770568847656
    6. '`' → logprob: -12.625770568847656
    7. 'x' → logprob: -12.625770568847656
    8. '
' → logprob: -13.125770568847656
    9. '['' → logprob: -13.500770568847656
    10. ''o' → logprob: -13.875770568847656

Token 2152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03885205462574959
    2. '   ' → logprob: -3.4138519763946533
    3. '```' → logprob: -5.288852214813232
    4. '``' → logprob: -10.038851737976074
    5. ':' → logprob: -10.663851737976074
    6. '           ' → logprob: -11.288851737976074
    7. ':
' → logprob: -11.413851737976074
    8. '
' → logprob: -11.538851737976074
    9. ')' → logprob: -11.788851737976074
    10. '     ' → logprob: -12.163851737976074

Token 2153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05023914948105812
    2. '       ' → logprob: -3.050239086151123
    3. '```' → logprob: -6.550239086151123
    4. ' if' → logprob: -9.550239562988281
    5. '``' → logprob: -10.550239562988281
    6. 'if' → logprob: -10.675239562988281
    7. '	if' → logprob: -11.300239562988281
    8. '	' → logprob: -11.425239562988281
    9. ' ' → logprob: -11.675239562988281
    10. ')' → logprob: -11.675239562988281

Token 2154: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1268107146024704
    2. ' if' → logprob: -2.3768107891082764
    3. '   ' → logprob: -4.376810550689697
    4. ' ' → logprob: -5.251810550689697
    5. 'if' → logprob: -5.751810550689697
    6. '    ' → logprob: -5.876810550689697
    7. ' return' → logprob: -7.626810550689697
    8. '<|end|>' → logprob: -7.626810550689697
    9. '        ' → logprob: -7.751810550689697
    10. '```' → logprob: -8.251811027526855

Token 2155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. 'return' → logprob: -14.250052452087402
    4. '```' → logprob: -16.375051498413086
    5. '   ' → logprob: -16.750051498413086
    6. '
' → logprob: -17.000051498413086
    7. '  ' → logprob: -18.875051498413086
    8. '1' → logprob: -19.500051498413086
    9. ' return' → logprob: -19.500051498413086
    10. '``' → logprob: -19.625051498413086

Token 2156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006080791936255991
    2. ''' → logprob: -7.500607967376709
    3. ' ' → logprob: -9.875608444213867
    4. '('' → logprob: -13.250608444213867
    5. '(' → logprob: -14.375608444213867
    6. ''s' → logprob: -14.750608444213867
    7. '1' → logprob: -15.375608444213867
    8. '`' → logprob: -15.875608444213867
    9. '...' → logprob: -16.000608444213867
    10. '"' → logprob: -16.000608444213867

Token 2157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012022611685097218
    2. 'if' → logprob: -4.637022495269775
    3. '```' → logprob: -6.262022495269775
    4. ' if' → logprob: -8.012022972106934
    5. '``' → logprob: -11.512022972106934
    6. '	if' → logprob: -12.137022972106934
    7. 'def' → logprob: -12.637022972106934
    8. '       ' → logprob: -13.637022972106934
    9. '`' → logprob: -13.637022972106934
    10. '
' → logprob: -13.887022972106934

Token 2158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049256667494773865
    2. '```' → logprob: -3.0492565631866455
    3. 'if' → logprob: -7.549256801605225
    4. '``' → logprob: -9.049256324768066
    5. ' if' → logprob: -11.299256324768066
    6. '`' → logprob: -11.549256324768066
    7. 'b' → logprob: -13.674256324768066
    8. '       ' → logprob: -14.174256324768066
    9. 'def' → logprob: -15.299256324768066
    10. 'If' → logprob: -15.549256324768066

Token 2159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6218897104263306
    2. '   ' → logprob: -0.8718897104263306
    3. '```' → logprob: -3.121889591217041
    4. '``' → logprob: -7.621889591217041
    5. ' if' → logprob: -7.996889591217041
    6. '
' → logprob: -11.9968900680542
    7. '`' → logprob: -13.2468900680542
    8. 'def' → logprob: -13.6218900680542
    9. '       ' → logprob: -14.8718900680542
    10. ' ' → logprob: -15.1218900680542

Token 2160: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014164566993713379
    2. ' b' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.014164924621582
    4. 'not' → logprob: -15.764164924621582
    5. ' not' → logprob: -16.639163970947266
    6. '```' → logprob: -18.389163970947266
    7. '1' → logprob: -18.764163970947266
    8. '	b' → logprob: -18.889163970947266
    9. ' ' → logprob: -19.014163970947266
    10. '       ' → logprob: -19.389163970947266

Token 2161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10023870319128036
    2. '3' → logprob: -2.350238800048828
    3. '[' → logprob: -11.350238800048828
    4. '```' → logprob: -11.350238800048828
    5. ' ' → logprob: -12.850238800048828
    6. '(' → logprob: -13.725238800048828
    7. '  ' → logprob: -14.100238800048828
    8. '   ' → logprob: -14.225238800048828
    9. '
' → logprob: -14.475238800048828
    10. '2' → logprob: -14.600238800048828

Token 2162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002258277963846922
    2. '3' → logprob: -8.625226020812988
    3. '```' → logprob: -10.500226020812988
    4. '   ' → logprob: -11.750226020812988
    5. ' [' → logprob: -12.750226020812988
    6. 'def' → logprob: -13.125226020812988
    7. '
' → logprob: -13.625226020812988
    8. 'not' → logprob: -13.875226020812988
    9. '``' → logprob: -14.250226020812988
    10. '[
' → logprob: -14.250226020812988

Token 2163: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.75
    3. ' ' → logprob: -17.375
    4. '```' → logprob: -17.875
    5. '  ' → logprob: -18.0
    6. '
' → logprob: -18.125
    7. '３' → logprob: -19.75
    8. '۳' → logprob: -19.75
    9. '03' → logprob: -20.0
    10. '[' → logprob: -20.125

Token 2164: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11292900145053864
    2. 'not' → logprob: -2.237929105758667
    3. '[' → logprob: -9.862929344177246
    4. '	not' → logprob: -11.362929344177246
    5. '!='' → logprob: -11.862929344177246
    6. ''' → logprob: -12.112929344177246
    7. '   ' → logprob: -12.237929344177246
    8. '!=' → logprob: -12.487929344177246
    9. ')' → logprob: -12.487929344177246
    10. ' !=' → logprob: -12.737929344177246

Token 2165: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31328487396240234
    2. ' not' → logprob: -1.3132848739624023
    3. '!='' → logprob: -12.063284873962402
    4. '!=' → logprob: -12.063284873962402
    5. ''' → logprob: -12.688284873962402
    6. '	not' → logprob: -12.688284873962402
    7. '[' → logprob: -13.188284873962402
    8. '...' → logprob: -13.938284873962402
    9. ' !=' → logprob: -14.313284873962402
    10. '[]' → logprob: -14.688284873962402

Token 2166: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.016494115814566612
    2. ' in' → logprob: -4.141494274139404
    3. '('' → logprob: -7.891494274139404
    4. ''' → logprob: -10.891493797302246
    5. '=' → logprob: -11.016493797302246
    6. ''in' → logprob: -11.391493797302246
    7. 'not' → logprob: -11.891493797302246
    8. '['' → logprob: -12.141493797302246
    9. '='' → logprob: -12.266493797302246
    10. '```' → logprob: -13.016493797302246

Token 2167: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.2961512513575144e-05
    2. ' ('' → logprob: -11.375022888183594
    3. ''' → logprob: -12.250022888183594
    4. '(' → logprob: -12.500022888183594
    5. '['' → logprob: -13.375022888183594
    6. '{'' → logprob: -14.250022888183594
    7. '   ' → logprob: -15.625022888183594
    8. ''s' → logprob: -16.250022888183594
    9. 'in' → logprob: -16.375022888183594
    10. '(('' → logprob: -16.625022888183594

Token 2168: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.027488267049193382
    2. '('' → logprob: -3.6524882316589355
    3. '0' → logprob: -6.9024882316589355
    4. ''x' → logprob: -9.027488708496094
    5. 'x' → logprob: -10.527488708496094
    6. '`' → logprob: -11.902488708496094
    7. '{'' → logprob: -12.027488708496094
    8. '['' → logprob: -12.027488708496094
    9. '(' → logprob: -12.402488708496094
    10. ' '' → logprob: -12.652488708496094

Token 2169: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0012227282859385014
    2. '',' → logprob: -7.751222610473633
    3. ','' → logprob: -7.751222610473633
    4. ',' → logprob: -9.126222610473633
    5. ',x' → logprob: -9.251222610473633
    6. '',"' → logprob: -9.876222610473633
    7. ''x' → logprob: -10.126222610473633
    8. '",'' → logprob: -10.876222610473633
    9. '')' → logprob: -11.376222610473633
    10. ')','' → logprob: -11.501222610473633

Token 2170: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.10021162778139114
    2. 'x' → logprob: -2.3502116203308105
    3. '"x' → logprob: -13.350212097167969
    4. '['' → logprob: -13.975212097167969
    5. ')x' → logprob: -14.850212097167969
    6. '')' → logprob: -14.850212097167969
    7. '```' → logprob: -15.225212097167969
    8. '<x' → logprob: -15.350212097167969
    9. '%x' → logprob: -15.725212097167969
    10. '$x' → logprob: -15.975212097167969

Token 2171: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.1266794353723526
    2. ''):
' → logprob: -2.2516794204711914
    3. '):' → logprob: -4.501679420471191
    4. '   ' → logprob: -6.501679420471191
    5. '')' → logprob: -7.626679420471191
    6. '):
' → logprob: -7.751679420471191
    7. ':' → logprob: -8.876679420471191
    8. ')' → logprob: -10.126679420471191
    9. ''):
' → logprob: -10.876679420471191
    10. '':' → logprob: -11.626679420471191

Token 2172: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17829462885856628
    2. ' return' → logprob: -2.3032946586608887
    3. 'return' → logprob: -3.5532946586608887
    4. '<|end|>' → logprob: -4.303294658660889
    5. ' ' → logprob: -4.553294658660889
    6. '   ' → logprob: -5.303294658660889
    7. '        ' → logprob: -6.678294658660889
    8. '           ' → logprob: -7.178294658660889
    9. '    ' → logprob: -7.428294658660889
    10. '0' → logprob: -7.553294658660889

Token 2173: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08866459876298904
    2. ''' → logprob: -3.3386645317077637
    3. 'x' → logprob: -3.7136645317077637
    4. ''b' → logprob: -4.338664531707764
    5. ''x' → logprob: -4.713664531707764
    6. '   ' → logprob: -7.088664531707764
    7. ' b' → logprob: -7.588664531707764
    8. '0' → logprob: -7.713664531707764
    9. ' '' → logprob: -7.963664531707764
    10. ')' → logprob: -8.463665008544922

Token 2174: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.994086627149954e-05
    2. '[' → logprob: -9.750080108642578
    3. '4' → logprob: -11.875080108642578
    4. '```' → logprob: -12.000080108642578
    5. '   ' → logprob: -12.125080108642578
    6. ' ' → logprob: -13.500080108642578
    7. 'def' → logprob: -14.250080108642578
    8. '``' → logprob: -15.500080108642578
    9. '`' → logprob: -15.875080108642578
    10. ''' → logprob: -16.375080108642578

Token 2175: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1618587076663971
    2. '<|end|>' → logprob: -2.5368587970733643
    3. 'not' → logprob: -3.4118587970733643
    4. ')' → logprob: -4.411858558654785
    5. '==' → logprob: -4.911858558654785
    6. 'in' → logprob: -5.036858558654785
    7. ' in' → logprob: -5.161858558654785
    8. ' ==' → logprob: -6.661858558654785
    9. '=' → logprob: -7.161858558654785
    10. '[]' → logprob: -7.411858558654785

Token 2176: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003764535649679601
    2. '0' → logprob: -8.00037670135498
    3. ' '' → logprob: -10.62537670135498
    4. '('' → logprob: -11.37537670135498
    5. '`' → logprob: -12.75037670135498
    6. ''x' → logprob: -14.12537670135498
    7. '"' → logprob: -14.87537670135498
    8. 'x' → logprob: -15.62537670135498
    9. ' ' → logprob: -15.62537670135498
    10. '['' → logprob: -15.62537670135498

Token 2177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011667657643556595
    2. '   ' → logprob: -4.511667728424072
    3. '```' → logprob: -8.261667251586914
    4. ':' → logprob: -8.386667251586914
    5. '<|end|>' → logprob: -10.136667251586914
    6. ')' → logprob: -10.136667251586914
    7. ':
' → logprob: -11.636667251586914
    8. ' ' → logprob: -12.011667251586914
    9. '):
' → logprob: -12.136667251586914
    10. '``' → logprob: -12.261667251586914

Token 2178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019171984866261482
    2. '   ' → logprob: -4.144172191619873
    3. '<|end|>' → logprob: -6.394172191619873
    4. '```' → logprob: -7.644172191619873
    5. ')' → logprob: -7.769172191619873
    6. '=' → logprob: -9.394171714782715
    7. ':return' → logprob: -9.519171714782715
    8. ' not' → logprob: -9.644171714782715
    9. ' ' → logprob: -10.019171714782715
    10. 'return' → logprob: -10.144171714782715

Token 2179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2207099199295044
    2. ' return' → logprob: -1.7207099199295044
    3. '       ' → logprob: -3.970709800720215
    4. '   ' → logprob: -8.720709800720215
    5. 'if' → logprob: -10.220709800720215
    6. '```' → logprob: -11.220709800720215
    7. '           ' → logprob: -11.470709800720215
    8. ' ' → logprob: -12.095709800720215
    9. '
' → logprob: -12.220709800720215
    10. ' if' → logprob: -12.470709800720215

Token 2180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.876502990722656
    4. 'return' → logprob: -16.876502990722656
    5. '  ' → logprob: -17.501502990722656
    6. '```' → logprob: -17.751502990722656
    7. 'False' → logprob: -17.751502990722656
    8. '(' → logprob: -17.876502990722656
    9. '000' → logprob: -19.376502990722656
    10. '       ' → logprob: -19.376502990722656

Token 2181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '(' → logprob: -15.375012397766113
    4. ''' → logprob: -15.875012397766113
    5. '1' → logprob: -16.625011444091797
    6. '
' → logprob: -17.625011444091797
    7. '   ' → logprob: -18.000011444091797
    8. '('' → logprob: -18.625011444091797
    9. ''s' → logprob: -18.875011444091797
    10. '```' → logprob: -19.125011444091797

Token 2182: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005831745453178883
    2. 'if' → logprob: -5.380831718444824
    3. '```' → logprob: -6.880831718444824
    4. ' if' → logprob: -8.880831718444824
    5. 'def' → logprob: -10.630831718444824
    6. '``' → logprob: -12.380831718444824
    7. '
' → logprob: -12.630831718444824
    8. ')' → logprob: -12.880831718444824
    9. '`' → logprob: -12.880831718444824
    10. 'for' → logprob: -13.005831718444824

Token 2183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008875728584825993
    2. 'if' → logprob: -4.883875846862793
    3. '```' → logprob: -6.883875846862793
    4. ' if' → logprob: -8.758875846862793
    5. 'def' → logprob: -10.008875846862793
    6. '#' → logprob: -11.133875846862793
    7. '
' → logprob: -11.883875846862793
    8. 'for' → logprob: -12.133875846862793
    9. '``' → logprob: -12.133875846862793
    10. '`' → logprob: -12.758875846862793

Token 2184: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15095254778862
    2. '   ' → logprob: -2.2759525775909424
    3. 'if' → logprob: -3.5259525775909424
    4. '#' (adapté à ' #') → logprob: -5.525952339172363
    5. 'unknown' → logprob: -5.775952339172363
    6. '```' → logprob: -8.650952339172363
    7. 'ys' → logprob: -9.275952339172363
    8. 'fixed' → logprob: -9.400952339172363
    9. 'for' → logprob: -9.525952339172363
    10. 'count' → logprob: -9.525952339172363

Token 2185: ' Check' (ID: 6208)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4521443545818329
    2. '   ' → logprob: -1.2021443843841553
    3. 'if' → logprob: -3.4521443843841553
    4. 'unknown' → logprob: -3.8271443843841553
    5. '#' → logprob: -5.202144145965576
    6. 'count' → logprob: -6.577144145965576
    7. 'fixed' → logprob: -7.452144145965576
    8. 'n' → logprob: -7.452144145965576
    9. 'idx' → logprob: -8.452144622802734
    10. 'def' → logprob: -8.452144622802734

Token 2186: ' fixed' (ID: 13213)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2948405128554441e-05
    2. ' b' → logprob: -12.00001335144043
    3. '   ' → logprob: -12.25001335144043
    4. 'def' → logprob: -13.62501335144043
    5. '```' → logprob: -14.25001335144043
    6. '(b' → logprob: -17.12501335144043
    7. '#' → logprob: -17.75001335144043
    8. '	b' → logprob: -17.87501335144043
    9. '
' → logprob: -18.12501335144043
    10. 'if' → logprob: -18.37501335144043

Token 2187: ' bits' (ID: 18189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027360916137695312
    2. '[' → logprob: -4.402360916137695
    3. '```' → logprob: -5.027360916137695
    4. '   ' → logprob: -5.777360916137695
    5. 'def' → logprob: -6.277360916137695
    6. ' b' → logprob: -7.027360916137695
    7. '(b' → logprob: -7.152360916137695
    8. 'bits' → logprob: -7.777360916137695
    9. 'if' → logprob: -8.027360916137695
    10. '``' → logprob: -8.777360916137695

Token 2188: ' byte' (ID: 9239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11605671793222427
    2. 'if' → logprob: -2.6160566806793213
    3. '```' → logprob: -3.3660566806793213
    4. 'for' → logprob: -7.2410569190979
    5. 'def' → logprob: -7.3660569190979
    6. '``' → logprob: -7.6160569190979
    7. ' if' → logprob: -9.616056442260742
    8. '[' → logprob: -10.866056442260742
    9. '
' → logprob: -11.116056442260742
    10. '	if' → logprob: -12.241056442260742

Token 2189: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002782292664051056
    2. '1' → logprob: -6.002782344818115
    3. '[' → logprob: -8.502781867980957
    4. 'b' → logprob: -10.002781867980957
    5. '```' → logprob: -10.002781867980957
    6. 'def' → logprob: -12.127781867980957
    7. '#' → logprob: -12.627781867980957
    8. '3' → logprob: -13.627781867980957
    9. ' ' → logprob: -14.002781867980957
    10. '
' → logprob: -14.252781867980957

Token 2190: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10306292772293091
    2. 'if' → logprob: -2.853062868118286
    3. '```' → logprob: -3.228062868118286
    4. ' if' → logprob: -7.853063106536865
    5. '``' → logprob: -8.978062629699707
    6. 'def' → logprob: -9.603062629699707
    7. '`' → logprob: -10.728062629699707
    8. '[' → logprob: -12.103062629699707
    9. 'for' → logprob: -12.478062629699707
    10. 'If' → logprob: -12.478062629699707

Token 2191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3884362280368805
    2. 'if' → logprob: -1.138436198234558
    3. '```' → logprob: -7.138436317443848
    4. ' if' → logprob: -7.263436317443848
    5. 'def' → logprob: -9.763436317443848
    6. '``' → logprob: -12.263436317443848
    7. 'If' → logprob: -12.638436317443848
    8. '	if' → logprob: -13.263436317443848
    9. '#' → logprob: -14.138436317443848
    10. '
' → logprob: -14.888436317443848

Token 2192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -8.101369894575328e-05
    2. '   ' → logprob: -9.500081062316895
    3. '```' → logprob: -12.500081062316895
    4. ' if' → logprob: -13.125081062316895
    5. 'def' → logprob: -15.125081062316895
    6. 'for' → logprob: -15.875081062316895
    7. '``' → logprob: -17.500080108642578
    8. '#' → logprob: -19.875080108642578
    9. 'If' → logprob: -20.625080108642578
    10. '`' → logprob: -20.750080108642578

Token 2193: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012356207298580557
    2. ' b' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.500123977661133
    4. '  ' → logprob: -21.625123977661133
    5. ' ' → logprob: -22.250123977661133
    6. '    ' → logprob: -22.375123977661133
    7. '	b' → logprob: -22.375123977661133
    8. '       ' → logprob: -22.875123977661133
    9. '>b' → logprob: -23.250123977661133
    10. '(b' → logprob: -23.375123977661133

Token 2194: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028065370861440897
    2. '1' → logprob: -5.877806663513184
    3. '```' → logprob: -13.752806663513184
    4. '   ' → logprob: -15.752806663513184
    5. '0' → logprob: -16.002805709838867
    6. '
' → logprob: -16.127805709838867
    7. '[' → logprob: -16.252805709838867
    8. '(' → logprob: -16.377805709838867
    9. '...' → logprob: -17.377805709838867
    10. ' ' → logprob: -17.752805709838867

Token 2195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.774276774493046e-05
    2. '   ' → logprob: -10.750038146972656
    3. '```' → logprob: -11.375038146972656
    4. '0' → logprob: -12.625038146972656
    5. '2' → logprob: -14.875038146972656
    6. '``' → logprob: -15.125038146972656
    7. '
' → logprob: -16.000038146972656
    8. '1' → logprob: -16.125038146972656
    9. '[
' → logprob: -16.125038146972656
    10. ' [' → logprob: -16.250038146972656

Token 2196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.125007629394531
    4. '(' → logprob: -15.875007629394531
    5. '   ' → logprob: -16.62500762939453
    6. '```' → logprob: -17.25000762939453
    7. '#' → logprob: -17.75000762939453
    8. '...' → logprob: -17.75000762939453
    9. '۰' → logprob: -18.00000762939453
    10. 'def' → logprob: -18.00000762939453

Token 2197: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5086430311203003
    2. 'not' → logprob: -1.0086430311203003
    3. ']' → logprob: -3.38364315032959
    4. ')' → logprob: -10.75864315032959
    5. '   ' → logprob: -11.25864315032959
    6. ' ]' → logprob: -12.63364315032959
    7. '	not' → logprob: -12.75864315032959
    8. '```' → logprob: -12.75864315032959
    9. '[' → logprob: -13.13364315032959
    10. ']!='' → logprob: -13.38364315032959

Token 2198: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2519298195838928
    2. 'not' → logprob: -1.501929759979248
    3. '	not' → logprob: -14.626930236816406
    4. '   ' → logprob: -15.751930236816406
    5. '```' → logprob: -16.126930236816406
    6. '!='' → logprob: -17.751930236816406
    7. '==' → logprob: -18.126930236816406
    8. '!=' → logprob: -18.376930236816406
    9. ''' → logprob: -18.501930236816406
    10. ')' → logprob: -18.626930236816406

Token 2199: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0788973867893219
    2. ' in' → logprob: -2.578897476196289
    3. '```' → logprob: -13.203897476196289
    4. 'In' → logprob: -13.453897476196289
    5. '('' → logprob: -13.828897476196289
    6. 'not' → logprob: -14.078897476196289
    7. ')' → logprob: -14.453897476196289
    8. '['' → logprob: -14.828897476196289
    9. '   ' → logprob: -15.078897476196289
    10. '[' → logprob: -15.078897476196289

Token 2200: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.9743012671824545e-05
    2. ' ('' → logprob: -10.875020027160645
    3. '['' → logprob: -14.875020027160645
    4. '(' → logprob: -15.125020027160645
    5. '{'' → logprob: -16.625019073486328
    6. '   ' → logprob: -17.500019073486328
    7. '(('' → logprob: -17.625019073486328
    8. '(['' → logprob: -18.250019073486328
    9. ''s' → logprob: -18.375019073486328
    10. ''' → logprob: -18.375019073486328

Token 2201: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010530341416597366
    2. '('' → logprob: -4.760530471801758
    3. '1' → logprob: -6.260530471801758
    4. '['' → logprob: -13.510530471801758
    5. '{'' → logprob: -13.760530471801758
    6. '`' → logprob: -14.135530471801758
    7. ' '' → logprob: -15.385530471801758
    8. '(' → logprob: -16.010530471801758
    9. '"' → logprob: -16.635530471801758
    10. '   ' → logprob: -16.760530471801758

Token 2202: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.020170794799923897
    2. ','' → logprob: -4.39517068862915
    3. '',' → logprob: -5.27017068862915
    4. ',' → logprob: -6.02017068862915
    5. ')' → logprob: -11.020171165466309
    6. ')','' → logprob: -11.270171165466309
    7. '')' → logprob: -11.645171165466309
    8. '',"' → logprob: -11.645171165466309
    9. '",'' → logprob: -12.520171165466309
    10. ''' → logprob: -13.145171165466309

Token 2203: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.004080658778548241
    2. 'x' → logprob: -5.504080772399902
    3. '"x' → logprob: -13.879080772399902
    4. ')x' → logprob: -14.879080772399902
    5. ''' → logprob: -15.129080772399902
    6. '1' → logprob: -15.754080772399902
    7. '['' → logprob: -15.754080772399902
    8. '')' → logprob: -16.504079818725586
    9. '```' → logprob: -17.504079818725586
    10. '('' → logprob: -17.504079818725586

Token 2204: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.07961563020944595
    2. ''):
' → logprob: -2.829615592956543
    3. '):' → logprob: -4.579615592956543
    4. '   ' → logprob: -5.829615592956543
    5. '')' → logprob: -5.829615592956543
    6. '):
' → logprob: -7.454615592956543
    7. ')' → logprob: -8.079615592956543
    8. ':' → logprob: -8.454615592956543
    9. '       ' → logprob: -8.829615592956543
    10. '',' → logprob: -10.329615592956543

Token 2205: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30930793285369873
    2. ' not' → logprob: -1.4343079328536987
    3. '   ' → logprob: -4.434308052062988
    4. 'not' → logprob: -4.684308052062988
    5. ')' → logprob: -6.559308052062988
    6. ' if' → logprob: -6.934308052062988
    7. '```' → logprob: -7.059308052062988
    8. '<|end|>' → logprob: -7.434308052062988
    9. '    ' → logprob: -7.684308052062988
    10. ' ' → logprob: -7.934308052062988

Token 2206: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027525149285793304
    2. '1' → logprob: -3.7775251865386963
    3. '   ' → logprob: -6.027524948120117
    4. ''b' → logprob: -6.902524948120117
    5. ' b' → logprob: -7.777524948120117
    6. ''' → logprob: -8.902524948120117
    7. '       ' → logprob: -9.152524948120117
    8. 'not' → logprob: -10.152524948120117
    9. '
' → logprob: -10.527524948120117
    10. '0' → logprob: -10.652524948120117

Token 2207: '7' (ID: 22)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014424506574869156
    2. '[' → logprob: -4.2644243240356445
    3. '```' → logprob: -8.514424324035645
    4. '1' → logprob: -10.514424324035645
    5. '   ' → logprob: -10.889424324035645
    6. ' ' → logprob: -12.764424324035645
    7. ']' → logprob: -12.889424324035645
    8. 'b' → logprob: -13.014424324035645
    9. '(' → logprob: -13.264424324035645
    10. '  ' → logprob: -13.639424324035645

Token 2208: '=' (ID: 28)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1628679782152176
    2. ' not' → logprob: -2.287868022918701
    3. ')' → logprob: -3.037868022918701
    4. ']' → logprob: -8.412867546081543
    5. '!=' → logprob: -8.537867546081543
    6. '```' → logprob: -9.037867546081543
    7. '   ' → logprob: -9.912867546081543
    8. '')' → logprob: -9.912867546081543
    9. ')!=' → logprob: -10.162867546081543
    10. '!='' → logprob: -10.162867546081543

Token 2209: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0016486376989632845
    2. '1' → logprob: -6.501648426055908
    3. ' '' → logprob: -9.126648902893066
    4. '('' → logprob: -10.626648902893066
    5. '
' → logprob: -13.126648902893066
    6. '   ' → logprob: -13.126648902893066
    7. ' ' → logprob: -13.126648902893066
    8. '`' → logprob: -13.251648902893066
    9. 'not' → logprob: -13.626648902893066
    10. '0' → logprob: -14.001648902893066

Token 2210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4172718822956085
    2. '       ' → logprob: -1.1672718524932861
    3. ' not' → logprob: -4.417272090911865
    4. '```' → logprob: -5.292272090911865
    5. ')' → logprob: -5.417272090911865
    6. ' and' → logprob: -6.167272090911865
    7. 'not' → logprob: -6.542272090911865
    8. ':' → logprob: -6.792272090911865
    9. 'and' → logprob: -7.042272090911865
    10. '[' → logprob: -7.292272090911865

Token 2211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22991704940795898
    2. '   ' → logprob: -1.729917049407959
    3. ' if' → logprob: -4.104917049407959
    4. 'if' → logprob: -4.479917049407959
    5. '```' → logprob: -8.604917526245117
    6. 'and' → logprob: -10.604917526245117
    7. ' and' → logprob: -10.979917526245117
    8. ' not' → logprob: -11.229917526245117
    9. '
' → logprob: -11.854917526245117
    10. ' ' → logprob: -12.229917526245117

Token 2212: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8607497811317444
    2. '       ' → logprob: -1.6107497215270996
    3. ' return' → logprob: -1.6107497215270996
    4. 'if' → logprob: -2.2357497215270996
    5. 'return' (adapté à ' return') → logprob: -3.2357497215270996
    6. '   ' → logprob: -4.3607497215271
    7. ')' → logprob: -4.4857497215271
    8. '```' → logprob: -5.6107497215271
    9. ' not' → logprob: -6.8607497215271
    10. '    ' → logprob: -7.2357497215271

Token 2213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.50407886505127
    4. 'False' → logprob: -16.879077911376953
    5. 'return' → logprob: -17.129077911376953
    6. '  ' → logprob: -17.504077911376953
    7. '
' → logprob: -17.879077911376953
    8. '(' → logprob: -18.379077911376953
    9. '```' → logprob: -18.504077911376953
    10. ' return' → logprob: -18.504077911376953

Token 2214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000526938121765852
    2. ' ' → logprob: -8.625527381896973
    3. '1' → logprob: -8.750527381896973
    4. ''' → logprob: -8.750527381896973
    5. 'False' → logprob: -11.250527381896973
    6. ''s' → logprob: -12.500527381896973
    7. 'True' → logprob: -12.500527381896973
    8. '(' → logprob: -12.750527381896973
    9. '   ' → logprob: -14.000527381896973
    10. '{' → logprob: -14.125527381896973

Token 2215: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027857425156980753
    2. 'if' → logprob: -6.127785682678223
    3. '```' → logprob: -7.627785682678223
    4. ' if' → logprob: -9.127785682678223
    5. '``' → logprob: -13.502785682678223
    6. '`' → logprob: -13.752785682678223
    7. 'b' → logprob: -14.127785682678223
    8. '       ' → logprob: -14.252785682678223
    9. ' ' → logprob: -14.752785682678223
    10. '	if' → logprob: -15.127785682678223

Token 2216: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.63722825050354
    2. '   ' → logprob: -1.01222825050354
    3. ' if' → logprob: -2.26222825050354
    4. '```' → logprob: -5.762228012084961
    5. 'b' → logprob: -8.762228012084961
    6. ' ' → logprob: -9.262228012084961
    7. '	if' → logprob: -9.762228012084961
    8. 'If' → logprob: -9.887228012084961
    9. '``' → logprob: -9.887228012084961
    10. '       ' → logprob: -10.012228012084961

Token 2217: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001216186792589724
    2. '   ' → logprob: -6.751216411590576
    3. '```' → logprob: -10.251215934753418
    4. ' if' → logprob: -11.501215934753418
    5. '``' → logprob: -14.751215934753418
    6. 'b' → logprob: -16.501216888427734
    7. '`' → logprob: -17.251216888427734
    8. 'def' → logprob: -18.376216888427734
    9. '	if' → logprob: -18.501216888427734
    10. 'If' → logprob: -18.876216888427734

Token 2218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03805583342909813
    2. ' b' → logprob: -3.288055896759033
    3. '   ' → logprob: -11.163055419921875
    4. '	b' → logprob: -16.038055419921875
    5. '    ' → logprob: -17.288055419921875
    6. '
' → logprob: -17.413055419921875
    7. ' ' → logprob: -17.663055419921875
    8. '```' → logprob: -17.663055419921875
    9. '(b' → logprob: -17.913055419921875
    10. '  ' → logprob: -18.288055419921875

Token 2219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004366294015198946
    2. '1' → logprob: -7.750436782836914
    3. '3' → logprob: -12.875436782836914
    4. '[' → logprob: -12.875436782836914
    5. '```' → logprob: -14.750436782836914
    6. '(' → logprob: -15.750436782836914
    7. 'b' → logprob: -16.125436782836914
    8. '   ' → logprob: -17.000436782836914
    9. '
' → logprob: -17.687936782836914
    10. '#' → logprob: -17.812936782836914

Token 2220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014184900559484959
    2. '1' → logprob: -4.264184951782227
    3. '```' → logprob: -11.264184951782227
    4. '   ' → logprob: -12.139184951782227
    5. '[
' → logprob: -14.389184951782227
    6. '2' → logprob: -14.389184951782227
    7. '
' → logprob: -14.889184951782227
    8. '`' → logprob: -15.014184951782227
    9. '(' → logprob: -15.014184951782227
    10. '``' → logprob: -15.264184951782227

Token 2221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.250001907348633
    3. '0' → logprob: -15.125001907348633
    4. '
' → logprob: -15.312501907348633
    5. '```' → logprob: -16.062501907348633
    6. '   ' → logprob: -16.250001907348633
    7. ' ' → logprob: -16.875001907348633
    8. '2' → logprob: -16.937501907348633
    9. '`' → logprob: -16.937501907348633
    10. '' → logprob: -16.937501907348633

Token 2222: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014282791875302792
    2. 'not' → logprob: -4.264282703399658
    3. ']' → logprob: -9.389283180236816
    4. '[' → logprob: -10.514283180236816
    5. '	not' → logprob: -12.389283180236816
    6. '   ' → logprob: -14.014283180236816
    7. ')' → logprob: -14.389283180236816
    8. '...' → logprob: -14.389283180236816
    9. 'Not' → logprob: -14.889283180236816
    10. '```' → logprob: -14.889283180236816

Token 2223: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4740809500217438
    2. 'not' → logprob: -0.9740809202194214
    3. '	not' → logprob: -12.724081039428711
    4. '```' → logprob: -15.349081039428711
    5. '[' → logprob: -15.474081039428711
    6. '...' → logprob: -15.724081039428711
    7. ')' → logprob: -16.22408103942871
    8. ''' → logprob: -16.47408103942871
    9. '==' → logprob: -16.97408103942871
    10. ':not' → logprob: -17.34908103942871

Token 2224: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.017375973984599113
    2. ' in' → logprob: -4.392375946044922
    3. '('' → logprob: -5.517375946044922
    4. ''' → logprob: -7.767375946044922
    5. ''in' → logprob: -8.767375946044922
    6. 'not' → logprob: -9.142375946044922
    7. ' ('' → logprob: -10.392375946044922
    8. '```' → logprob: -10.517375946044922
    9. ' '' → logprob: -11.142375946044922
    10. '=' → logprob: -11.142375946044922

Token 2225: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.625006675720215
    3. ' ('' → logprob: -13.000006675720215
    4. '(
' → logprob: -15.125006675720215
    5. ''' → logprob: -15.500006675720215
    6. ''s' → logprob: -17.2500057220459
    7. '['' → logprob: -17.2500057220459
    8. '[' → logprob: -18.7500057220459
    9. '(('' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.1250057220459

Token 2226: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.762356209335849e-05
    2. '('' → logprob: -10.62503719329834
    3. '0' → logprob: -11.50003719329834
    4. ' '' → logprob: -14.12503719329834
    5. '1' → logprob: -14.37503719329834
    6. ''x' → logprob: -14.37503719329834
    7. '['' → logprob: -14.62503719329834
    8. '`' → logprob: -14.75003719329834
    9. '
' → logprob: -16.125038146972656
    10. '{'' → logprob: -16.250038146972656

Token 2227: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.03423706814646721
    2. ','' → logprob: -3.7842371463775635
    3. '',' → logprob: -5.034236907958984
    4. ''x' → logprob: -6.284236907958984
    5. ',' → logprob: -7.034236907958984
    6. ',x' → logprob: -7.534236907958984
    7. ''' → logprob: -7.909236907958984
    8. '')' → logprob: -8.534236907958984
    9. '",'' → logprob: -8.909236907958984
    10. ')','' → logprob: -9.534236907958984

Token 2228: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3868772089481354
    2. 'x' → logprob: -1.136877179145813
    3. '"x' → logprob: -13.011877059936523
    4. '['' → logprob: -13.511877059936523
    5. ' x' → logprob: -14.386877059936523
    6. '```' → logprob: -14.511877059936523
    7. '('' → logprob: -15.011877059936523
    8. '1' → logprob: -15.386877059936523
    9. ')x' → logprob: -15.636877059936523
    10. ''' → logprob: -16.136877059936523

Token 2229: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.28681671619415283
    2. ''):
' → logprob: -1.4118167161941528
    3. '):' → logprob: -5.786816596984863
    4. '   ' → logprob: -6.911816596984863
    5. '):
' → logprob: -7.161816596984863
    6. '')' → logprob: -7.286816596984863
    7. '       ' → logprob: -10.286816596984863
    8. ')' → logprob: -10.411816596984863
    9. ''):
' → logprob: -10.786816596984863
    10. ':' → logprob: -11.411816596984863

Token 2230: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6302657127380371
    2. ''x' → logprob: -2.005265712738037
    3. 'x' → logprob: -2.130265712738037
    4. '<|end|>' → logprob: -3.005265712738037
    5. ' '' → logprob: -3.255265712738037
    6. ''' → logprob: -3.505265712738037
    7. ')' → logprob: -3.630265712738037
    8. 'return' → logprob: -4.005265712738037
    9. ' return' → logprob: -4.005265712738037
    10. '0' → logprob: -5.005265712738037

Token 2231: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3340173363685608
    2. ''x' → logprob: -1.334017276763916
    3. ' '' → logprob: -4.959017276763916
    4. '('' → logprob: -5.084017276763916
    5. '1' → logprob: -5.834017276763916
    6. ''b' → logprob: -6.334017276763916
    7. ''o' → logprob: -7.334017276763916
    8. '(' → logprob: -7.334017276763916
    9. '')' → logprob: -8.584017753601074
    10. ''y' → logprob: -8.834017753601074

Token 2232: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3967653214931488
    2. '2' → logprob: -1.8967653512954712
    3. '[' → logprob: -2.3967652320861816
    4. '7' → logprob: -2.6467652320861816
    5. ')' → logprob: -5.146765232086182
    6. '<|end|>' → logprob: -5.646765232086182
    7. '```' → logprob: -5.896765232086182
    8. '...' → logprob: -6.896765232086182
    9. ' ' → logprob: -7.771765232086182
    10. '   ' → logprob: -7.896765232086182

Token 2233: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01905374601483345
    2. 'not' → logprob: -4.019053936004639
    3. ')' → logprob: -7.269053936004639
    4. ']' → logprob: -9.89405345916748
    5. '<|end|>' → logprob: -10.39405345916748
    6. '	not' → logprob: -10.51905345916748
    7. '   ' → logprob: -10.89405345916748
    8. '[' → logprob: -11.14405345916748
    9. '')' → logprob: -11.26905345916748
    10. '']' → logprob: -11.39405345916748

Token 2234: '0' (ID: 15)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -7.004696090007201e-05
    2. ' '' → logprob: -10.625069618225098
    3. '('' → logprob: -10.625069618225098
    4. ''' → logprob: -11.875069618225098
    5. '0' → logprob: -12.125069618225098
    6. '`' → logprob: -13.000069618225098
    7. '```' → logprob: -13.375069618225098
    8. '
' → logprob: -13.625069618225098
    9. '['' → logprob: -14.250069618225098
    10. '"x' → logprob: -14.625069618225098

Token 2235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16324371099472046
    2. '       ' → logprob: -2.1632437705993652
    3. ':' → logprob: -4.413243770599365
    4. ':
' → logprob: -4.413243770599365
    5. '):
' → logprob: -5.038243770599365
    6. '```' → logprob: -6.288243770599365
    7. ')' → logprob: -6.788243770599365
    8. '):' → logprob: -6.913243770599365
    9. ':return' → logprob: -7.788243770599365
    10. '<|end|>' → logprob: -8.663243293762207

Token 2236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01852506399154663
    2. '   ' → logprob: -4.018525123596191
    3. '```' → logprob: -8.893525123596191
    4. '<|end|>' → logprob: -9.268525123596191
    5. ':' → logprob: -10.018525123596191
    6. ')' → logprob: -10.143525123596191
    7. '):
' → logprob: -11.268525123596191
    8. ':
' → logprob: -11.268525123596191
    9. ':return' → logprob: -11.893525123596191
    10. '[' → logprob: -12.518525123596191

Token 2237: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2979818284511566
    2. ' return' → logprob: -1.422981858253479
    3. '       ' → logprob: -4.5479817390441895
    4. ' not' → logprob: -6.0479817390441895
    5. 'not' → logprob: -6.1729817390441895
    6. '0' → logprob: -6.7979817390441895
    7. '   ' → logprob: -8.422982215881348
    8. ')' → logprob: -9.797982215881348
    9. ' ' → logprob: -9.922982215881348
    10. '    ' → logprob: -9.922982215881348

Token 2238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00671584764495492
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.756715774536133
    4. '(' → logprob: -16.381715774536133
    5. 'return' → logprob: -16.631715774536133
    6. '  ' → logprob: -16.881715774536133
    7. '1' → logprob: -17.006715774536133
    8. '
' → logprob: -17.881715774536133
    9. '    ' → logprob: -18.756715774536133
    10. ' return' → logprob: -18.756715774536133

Token 2239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032664805185049772
    2. ''' → logprob: -5.753266334533691
    3. ' ' → logprob: -9.378266334533691
    4. ' '' → logprob: -13.503266334533691
    5. ''s' → logprob: -14.003266334533691
    6. ''x' → logprob: -14.128266334533691
    7. '('' → logprob: -14.253266334533691
    8. 'x' → logprob: -16.128267288208008
    9. '(' → logprob: -16.378267288208008
    10. '
' → logprob: -16.628267288208008

Token 2240: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09378169476985931
    2. '```' → logprob: -3.0937817096710205
    3. 'if' → logprob: -3.2187817096710205
    4. ' if' → logprob: -5.843781471252441
    5. '``' → logprob: -7.343781471252441
    6. '<|end|>' → logprob: -8.843781471252441
    7. '
' → logprob: -8.968781471252441
    8. 'def' → logprob: -9.218781471252441
    9. '#' → logprob: -10.218781471252441
    10. '	if' → logprob: -10.218781471252441

Token 2241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41359949111938477
    2. 'if' → logprob: -1.4135994911193848
    3. '```' → logprob: -2.4135994911193848
    4. '
' → logprob: -5.913599491119385
    5. 'for' → logprob: -6.288599491119385
    6. '``' → logprob: -7.538599491119385
    7. '#' → logprob: -7.788599491119385
    8. 'def' → logprob: -8.038599014282227
    9. ' if' → logprob: -9.038599014282227
    10. 'from' → logprob: -11.788599014282227

Token 2242: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42091256380081177
    2. 'if' → logprob: -1.170912504196167
    3. '#' (adapté à ' #') → logprob: -4.045912742614746
    4. 'for' → logprob: -4.420912742614746
    5. '```' → logprob: -5.670912742614746
    6. '``' → logprob: -8.420912742614746
    7. '
' → logprob: -9.045912742614746
    8. 'def' → logprob: -9.670912742614746
    9. 'y' → logprob: -9.795912742614746
    10. 'i' → logprob: -10.420912742614746

Token 2243: ' Check' (ID: 6208)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1541714370250702
    2. '#' → logprob: -2.0291714668273926
    3. '   ' → logprob: -5.029171466827393
    4. 'ys' → logprob: -6.279171466827393
    5. 'if' → logprob: -6.404171466827393
    6. 'def' → logprob: -7.404171466827393
    7. 'y's' → logprob: -8.404170989990234
    8. 'b' → logprob: -9.029170989990234
    9. 'unknown' → logprob: -9.404170989990234
    10. 'for' → logprob: -9.904170989990234

Token 2244: ' fixed' (ID: 13213)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001036383560858667
    2. ' b' → logprob: -7.001036167144775
    3. '   ' → logprob: -9.001036643981934
    4. '```' → logprob: -14.751036643981934
    5. '#' → logprob: -15.001036643981934
    6. 'def' → logprob: -15.376036643981934
    7. '
' → logprob: -15.626036643981934
    8. ' ' → logprob: -15.876036643981934
    9. '	b' → logprob: -16.501035690307617
    10. '       ' → logprob: -16.501035690307617

Token 2245: ' bits' (ID: 18189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16243143379688263
    2. 'bits' → logprob: -1.9124314785003662
    3. '   ' → logprob: -6.412431240081787
    4. '```' → logprob: -8.287431716918945
    5. '[b' → logprob: -8.537431716918945
    6. '[' → logprob: -10.162431716918945
    7. 'def' → logprob: -11.162431716918945
    8. 'if' → logprob: -11.412431716918945
    9. '(b' → logprob: -11.412431716918945
    10. ' bits' → logprob: -11.662431716918945

Token 2246: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24745042622089386
    2. '   ' → logprob: -1.7474504709243774
    3. 'if' → logprob: -3.247450351715088
    4. '```' → logprob: -5.872450351715088
    5. ' if' → logprob: -6.622450351715088
    6. ' b' → logprob: -6.872450351715088
    7. 'def' → logprob: -7.372450351715088
    8. 'for' → logprob: -8.622450828552246
    9. 'byte' → logprob: -9.747450828552246
    10. '``' → logprob: -10.497450828552246

Token 2247: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043129581958055496
    2. '[' → logprob: -3.1681296825408936
    3. '3' → logprob: -9.793129920959473
    4. '```' → logprob: -9.918129920959473
    5. 'b' → logprob: -11.543129920959473
    6. 'def' → logprob: -12.293129920959473
    7. '   ' → logprob: -12.793129920959473
    8. '#' → logprob: -12.918129920959473
    9. '
' → logprob: -13.668129920959473
    10. '(' → logprob: -13.668129920959473

Token 2248: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013003537897020578
    2. '```' → logprob: -7.25130033493042
    3. ' if' → logprob: -8.126300811767578
    4. '   ' → logprob: -8.501300811767578
    5. 'for' → logprob: -10.126300811767578
    6. 'def' → logprob: -10.501300811767578
    7. '``' → logprob: -11.126300811767578
    8. '[' → logprob: -12.376300811767578
    9. 'If' → logprob: -12.501300811767578
    10. '`' → logprob: -14.751300811767578

Token 2249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016021816059947014
    2. 'if' → logprob: -4.516021728515625
    3. '```' → logprob: -5.641021728515625
    4. ' if' → logprob: -6.641021728515625
    5. '``' → logprob: -9.891021728515625
    6. '`' → logprob: -11.641021728515625
    7. 'def' → logprob: -11.641021728515625
    8. '[' → logprob: -11.641021728515625
    9. 'If' → logprob: -11.641021728515625
    10. '	if' → logprob: -11.766021728515625

Token 2250: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3137536346912384
    2. 'if' (adapté à ' if') → logprob: -1.313753604888916
    3. '```' → logprob: -7.813753604888916
    4. ' if' → logprob: -9.438754081726074
    5. '``' → logprob: -11.938754081726074
    6. 'for' → logprob: -14.563754081726074
    7. 'def' → logprob: -14.688754081726074
    8. '	if' → logprob: -15.063754081726074
    9. '`' → logprob: -15.438754081726074
    10. 'If' → logprob: -16.313753128051758

Token 2251: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019298245897516608
    2. ' b' → logprob: -6.251929759979248
    3. 'c' → logprob: -14.126930236816406
    4. '   ' → logprob: -14.626930236816406
    5. '  ' → logprob: -19.751930236816406
    6. '(b' → logprob: -20.251930236816406
    7. '    ' → logprob: -20.501930236816406
    8. '```' → logprob: -20.751930236816406
    9. ' c' → logprob: -21.251930236816406
    10. 'a' → logprob: -21.501930236816406

Token 2252: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.875004768371582
    3. '[' → logprob: -13.625004768371582
    4. '1' → logprob: -14.250004768371582
    5. '```' → logprob: -15.125004768371582
    6. '   ' → logprob: -16.0000057220459
    7. '``' → logprob: -17.6250057220459
    8. ' ' → logprob: -18.0000057220459
    9. '  ' → logprob: -18.2500057220459
    10. '
' → logprob: -18.3750057220459

Token 2253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.625
    3. '0' → logprob: -15.75
    4. '```' → logprob: -16.0
    5. '[
' → logprob: -17.625
    6. ' [' → logprob: -18.125
    7. 'b' → logprob: -18.75
    8. '`' → logprob: -19.25
    9. 'def' → logprob: -19.625
    10. '  ' → logprob: -20.375

Token 2254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.25
    4. '...' → logprob: -19.125
    5. '   ' → logprob: -19.25
    6. '#' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '(' → logprob: -21.125
    9. '۰' → logprob: -21.25
    10. 'def' → logprob: -21.375

Token 2255: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.35076671838760376
    2. 'not' → logprob: -1.850766658782959
    3. ']' → logprob: -1.975766658782959
    4. '[' → logprob: -10.350767135620117
    5. '   ' → logprob: -11.350767135620117
    6. '	not' → logprob: -11.475767135620117
    7. ']!='' → logprob: -12.100767135620117
    8. ')' → logprob: -12.350767135620117
    9. ' ]' → logprob: -12.600767135620117
    10. '']' → logprob: -12.725767135620117

Token 2256: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02975071594119072
    2. 'not' → logprob: -3.5297508239746094
    3. '	not' → logprob: -15.40475082397461
    4. '[' → logprob: -16.90475082397461
    5. '```' → logprob: -17.52975082397461
    6. 'in' → logprob: -18.65475082397461
    7. ' in' → logprob: -19.15475082397461
    8. 'Not' → logprob: -19.40475082397461
    9. '
' → logprob: -19.65475082397461
    10. ''' → logprob: -19.77975082397461

Token 2257: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16062743961811066
    2. ' in' → logprob: -1.9106274843215942
    3. '('' → logprob: -7.910627365112305
    4. 'not' → logprob: -11.035627365112305
    5. ' ('' → logprob: -12.160627365112305
    6. '['' → logprob: -12.410627365112305
    7. 'In' → logprob: -12.535627365112305
    8. '   ' → logprob: -13.535627365112305
    9. ''in' → logprob: -14.035627365112305
    10. '[' → logprob: -14.035627365112305

Token 2258: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.47495681833243e-05
    2. ' ('' → logprob: -10.625024795532227
    3. '(' → logprob: -15.000024795532227
    4. ''' → logprob: -16.625024795532227
    5. '(
' → logprob: -18.500024795532227
    6. '['' → logprob: -18.750024795532227
    7. '(('' → logprob: -18.750024795532227
    8. ''s' → logprob: -19.000024795532227
    9. '("' → logprob: -19.125024795532227
    10. '   ' → logprob: -19.625024795532227

Token 2259: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4741498529911041
    2. '('' → logprob: -0.9741498231887817
    3. '1' → logprob: -9.599149703979492
    4. '{'' → logprob: -13.349149703979492
    5. ' '' → logprob: -13.724149703979492
    6. '['' → logprob: -14.099149703979492
    7. '(' → logprob: -14.724149703979492
    8. '`' → logprob: -15.224149703979492
    9. ' ('' → logprob: -15.599149703979492
    10. ''s' → logprob: -15.849149703979492

Token 2260: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.002730336505919695
    2. ','' → logprob: -6.252730369567871
    3. '',' → logprob: -7.502730369567871
    4. ',' → logprob: -8.502730369567871
    5. '[' → logprob: -11.127730369567871
    6. '',"' → logprob: -11.627730369567871
    7. ''' → logprob: -12.377730369567871
    8. '","' → logprob: -13.002730369567871
    9. '",'' → logprob: -13.002730369567871
    10. ')','' → logprob: -13.127730369567871

Token 2261: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3132725954055786
    2. 'x' → logprob: -1.3132725954055786
    3. 'b' → logprob: -12.438272476196289
    4. '"x' → logprob: -13.438272476196289
    5. '
' → logprob: -13.688272476196289
    6. ''' → logprob: -14.063272476196289
    7. ')x' → logprob: -14.563272476196289
    8. ' x' → logprob: -14.563272476196289
    9. '['' → logprob: -14.938272476196289
    10. '```' → logprob: -15.063272476196289

Token 2262: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.02934286743402481
    2. '')' → logprob: -4.2793426513671875
    3. ''):
' → logprob: -4.5293426513671875
    4. '   ' → logprob: -6.0293426513671875
    5. '):' → logprob: -6.6543426513671875
    6. '',' → logprob: -8.029342651367188
    7. ')' → logprob: -9.904342651367188
    8. '       ' → logprob: -10.029342651367188
    9. '','' → logprob: -10.529342651367188
    10. ',' → logprob: -10.654342651367188

Token 2263: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22422996163368225
    2. '#' → logprob: -2.2242300510406494
    3. ' #' → logprob: -2.5992300510406494
    4. '   ' → logprob: -4.47422981262207
    5. ' not' → logprob: -5.84922981262207
    6. ' ' → logprob: -6.59922981262207
    7. '    ' → logprob: -7.72422981262207
    8. '      ' → logprob: -7.97422981262207
    9. '        ' → logprob: -8.34922981262207
    10. 'not' → logprob: -8.72422981262207

Token 2264: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016349162615370005
    2. ''b' → logprob: -8.875163078308105
    3. ' b' → logprob: -11.750163078308105
    4. ''' → logprob: -11.750163078308105
    5. '1' → logprob: -12.625163078308105
    6. '   ' → logprob: -13.000163078308105
    7. '3' → logprob: -14.500163078308105
    8. '
' → logprob: -14.625163078308105
    9. '```' → logprob: -15.375163078308105
    10. 'if' → logprob: -15.375163078308105

Token 2265: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010463856160640717
    2. 'b' → logprob: -7.501046180725098
    3. '[' → logprob: -7.626046180725098
    4. '```' → logprob: -12.751046180725098
    5. '...' → logprob: -14.251046180725098
    6. '=' → logprob: -14.751046180725098
    7. '2' → logprob: -14.751046180725098
    8. '_' → logprob: -15.376046180725098
    9. ')' → logprob: -15.501046180725098
    10. '0' → logprob: -15.501046180725098

Token 2266: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2887411117553711
    2. 'not' → logprob: -1.913741111755371
    3. '[' → logprob: -2.288741111755371
    4. '   ' → logprob: -6.538741111755371
    5. '       ' → logprob: -9.038741111755371
    6. ')' → logprob: -9.288741111755371
    7. '==' → logprob: -10.413741111755371
    8. '```' → logprob: -10.663741111755371
    9. 'and' → logprob: -11.038741111755371
    10. '	not' → logprob: -11.288741111755371

Token 2267: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011796205304563046
    2. ''x' → logprob: -4.511795997619629
    3. '1' → logprob: -7.261795997619629
    4. '('' → logprob: -10.511795997619629
    5. '
' → logprob: -12.261795997619629
    6. ' '' → logprob: -12.511795997619629
    7. ''y' → logprob: -12.636795997619629
    8. '`' → logprob: -13.511795997619629
    9. '['' → logprob: -14.136795997619629
    10. '...' → logprob: -14.386795997619629

Token 2268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03750230744481087
    2. '       ' → logprob: -3.6625022888183594
    3. ')' → logprob: -4.787502288818359
    4. '<|end|>' → logprob: -6.537502288818359
    5. '```' → logprob: -7.912502288818359
    6. '[' → logprob: -8.28750228881836
    7. ' if' → logprob: -8.66250228881836
    8. ' ' → logprob: -9.16250228881836
    9. 'if' → logprob: -9.16250228881836
    10. ' not' → logprob: -9.53750228881836

Token 2269: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03836642950773239
    2. '       ' → logprob: -3.2883663177490234
    3. 'if' → logprob: -8.788366317749023
    4. ' if' → logprob: -8.913366317749023
    5. '```' → logprob: -10.538366317749023
    6. 'def' → logprob: -13.288366317749023
    7. ' ' → logprob: -13.413366317749023
    8. 'and' → logprob: -13.538366317749023
    9. ' not' → logprob: -13.663366317749023
    10. ' and' → logprob: -14.163366317749023

Token 2270: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018296310445293784
    2. ' if' → logprob: -7.001829624176025
    3. 'b' → logprob: -7.126829624176025
    4. '   ' → logprob: -9.126830101013184
    5. '       ' → logprob: -13.001830101013184
    6. '3' → logprob: -13.001830101013184
    7. 'return' (adapté à ' return') → logprob: -15.001830101013184
    8. '0' → logprob: -15.251830101013184
    9. ' ' → logprob: -15.501830101013184
    10. '	if' → logprob: -15.626830101013184

Token 2271: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029752571135759354
    2. ' ' → logprob: -3.529752492904663
    3. '(' → logprob: -13.654752731323242
    4. '('' → logprob: -15.529752731323242
    5. '   ' → logprob: -15.779752731323242
    6. '  ' → logprob: -15.904752731323242
    7. '
' → logprob: -16.154752731323242
    8. 'False' → logprob: -16.154752731323242
    9. ''' → logprob: -16.279752731323242
    10. '```' → logprob: -16.654752731323242

Token 2272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023643692838959396
    2. ''' → logprob: -8.375236511230469
    3. ' ' → logprob: -12.250236511230469
    4. '('' → logprob: -14.125236511230469
    5. '(' → logprob: -16.00023651123047
    6. 'return' → logprob: -16.25023651123047
    7. ''s' → logprob: -17.62523651123047
    8. '   ' → logprob: -17.87523651123047
    9. ' '' → logprob: -18.62523651123047
    10. '
' → logprob: -18.75023651123047

Token 2273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013683044351637363
    2. 'if' → logprob: -4.888682842254639
    3. ' if' → logprob: -5.388682842254639
    4. '```' → logprob: -6.888682842254639
    5. '``' → logprob: -8.638683319091797
    6. '       ' → logprob: -9.263683319091797
    7. '<|end|>' → logprob: -9.388683319091797
    8. '[' → logprob: -10.388683319091797
    9. '	if' → logprob: -10.388683319091797
    10. '`' → logprob: -11.263683319091797

Token 2274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2022649049758911
    2. 'if' → logprob: -1.7022649049758911
    3. ' if' → logprob: -7.452264785766602
    4. '```' → logprob: -8.452264785766602
    5. 'def' → logprob: -9.952264785766602
    6. '``' → logprob: -12.577264785766602
    7. '
' → logprob: -13.077264785766602
    8. '	if' → logprob: -13.077264785766602
    9. '       ' → logprob: -13.702264785766602
    10. 'for' → logprob: -14.952264785766602

Token 2275: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008386960835196078
    2. '   ' → logprob: -7.250838756561279
    3. ' if' → logprob: -9.000838279724121
    4. 'def' → logprob: -12.500838279724121
    5. '```' → logprob: -13.375838279724121
    6. '
' → logprob: -15.875838279724121
    7. '``' → logprob: -16.625839233398438
    8. '	if' → logprob: -17.250839233398438
    9. 'for' → logprob: -17.250839233398438
    10. 'If' → logprob: -17.875839233398438

Token 2276: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.941850526549388e-06
    2. ' b' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.25000762939453
    4. '```' → logprob: -20.25000762939453
    5. 'a' → logprob: -20.37500762939453
    6. '[b' → logprob: -20.62500762939453
    7. ')b' → logprob: -21.75000762939453
    8. '(b' → logprob: -21.75000762939453
    9. '$b' → logprob: -21.87500762939453
    10. 'c' → logprob: -22.12500762939453

Token 2277: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5094070477061905e-05
    2. 'b' → logprob: -11.750015258789062
    3. '[' → logprob: -11.875015258789062
    4. '```' → logprob: -16.500015258789062
    5. '<|end|>' → logprob: -17.000015258789062
    6. '(' → logprob: -17.375015258789062
    7. 'user' → logprob: -17.500015258789062
    8. '1' → logprob: -17.625015258789062
    9. ' ' → logprob: -17.625015258789062
    10. '...' → logprob: -18.250015258789062

Token 2278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -17.875
    3. '[
' → logprob: -18.0
    4. '3' → logprob: -18.75
    5. 'def' → logprob: -19.0
    6. 'user' → logprob: -19.5
    7. ' [' → logprob: -20.0
    8. '   ' → logprob: -20.25
    9. '#' → logprob: -20.75
    10. 'b' → logprob: -20.875

Token 2279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4060561776859686e-05
    2. '[' → logprob: -10.750043869018555
    3. '3' → logprob: -10.750043869018555
    4. '0' → logprob: -15.000043869018555
    5. '
' → logprob: -15.000043869018555
    6. '2' → logprob: -15.750043869018555
    7. '#' → logprob: -16.375043869018555
    8. '(' → logprob: -16.500043869018555
    9. 'b' → logprob: -16.625043869018555
    10. '```' → logprob: -16.750043869018555

Token 2280: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01828327216207981
    2. 'not' → logprob: -4.018283367156982
    3. ']' → logprob: -9.268282890319824
    4. '[' → logprob: -10.893282890319824
    5. ' in' → logprob: -12.393282890319824
    6. '	not' → logprob: -12.393282890319824
    7. '   ' → logprob: -12.643282890319824
    8. '...' → logprob: -13.143282890319824
    9. '<|end|>' → logprob: -13.268282890319824
    10. '<|end|>' → logprob: -13.768282890319824

Token 2281: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16023103892803192
    2. 'not' → logprob: -1.9102309942245483
    3. '<|end|>' → logprob: -12.53523063659668
    4. '```' → logprob: -13.91023063659668
    5. ' in' → logprob: -14.41023063659668
    6. '	not' → logprob: -14.41023063659668
    7. '[' → logprob: -14.78523063659668
    8. '...' → logprob: -15.41023063659668
    9. 'Not' → logprob: -15.53523063659668
    10. ')' → logprob: -16.03523063659668

Token 2282: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34962645173072815
    2. ' in' → logprob: -1.2246264219284058
    3. '('' → logprob: -6.849626541137695
    4. 'not' → logprob: -9.974626541137695
    5. '```' → logprob: -10.849626541137695
    6. 'In' → logprob: -11.099626541137695
    7. '['' → logprob: -11.224626541137695
    8. ' not' → logprob: -12.349626541137695
    9. '...' → logprob: -12.599626541137695
    10. ' ('' → logprob: -12.599626541137695

Token 2283: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010370950913056731
    2. ' ('' → logprob: -6.876037120819092
    3. '(' → logprob: -12.626036643981934
    4. ''' → logprob: -14.001036643981934
    5. '(
' → logprob: -16.87603759765625
    6. ''s' → logprob: -17.00103759765625
    7. '>('' → logprob: -17.00103759765625
    8. '['' → logprob: -17.25103759765625
    9. '```' → logprob: -17.37603759765625
    10. '("' → logprob: -17.50103759765625

Token 2284: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00874587893486023
    2. '0' → logprob: -4.7587456703186035
    3. '('' → logprob: -9.008746147155762
    4. ''x' → logprob: -12.383746147155762
    5. '['' → logprob: -13.508746147155762
    6. ' '' → logprob: -14.008746147155762
    7. '"' → logprob: -14.133746147155762
    8. 'x' → logprob: -14.508746147155762
    9. '`' → logprob: -15.008746147155762
    10. '
' → logprob: -15.883746147155762

Token 2285: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.1302213966846466
    2. ','' → logprob: -2.130221366882324
    3. ',x' → logprob: -6.505221366882324
    4. '',' → logprob: -6.880221366882324
    5. ''x' → logprob: -7.880221366882324
    6. ',' → logprob: -8.505221366882324
    7. '",'' → logprob: -9.755221366882324
    8. '',"' → logprob: -10.130221366882324
    9. '['' → logprob: -11.005221366882324
    10. ''' → logprob: -11.505221366882324

Token 2286: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.100216805934906
    2. 'x' → logprob: -2.350216865539551
    3. '```' → logprob: -11.97521686553955
    4. '('' → logprob: -13.60021686553955
    5. '"x' → logprob: -14.10021686553955
    6. ')x' → logprob: -15.10021686553955
    7. '\x' → logprob: -15.10021686553955
    8. '['' → logprob: -15.22521686553955
    9. '%x' → logprob: -15.60021686553955
    10. '`' → logprob: -15.85021686553955

Token 2287: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.0493534617125988
    2. ''):
' → logprob: -3.2993533611297607
    3. '')' → logprob: -4.79935359954834
    4. '):' → logprob: -6.42435359954834
    5. '   ' → logprob: -7.79935359954834
    6. '',' → logprob: -8.42435359954834
    7. 'def' → logprob: -9.29935359954834
    8. ')' → logprob: -9.42435359954834
    9. '('' → logprob: -9.54935359954834
    10. ''' → logprob: -9.54935359954834

Token 2288: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24534720182418823
    2. ' return' → logprob: -1.745347261428833
    3. 'return' → logprob: -3.995347261428833
    4. ' ' → logprob: -4.870347023010254
    5. '   ' → logprob: -5.370347023010254
    6. '        ' → logprob: -5.995347023010254
    7. '<|end|>' → logprob: -6.120347023010254
    8. '    ' → logprob: -6.245347023010254
    9. '```' → logprob: -6.370347023010254
    10. '0' → logprob: -7.120347023010254

Token 2289: ' bit' (ID: 3546)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0115090636536479
    2. 'x' → logprob: -4.511508941650391
    3. '('' → logprob: -8.01150894165039
    4. ''' → logprob: -9.38650894165039
    5. 'b' → logprob: -11.63650894165039
    6. ''b' → logprob: -12.01150894165039
    7. '```' → logprob: -12.13650894165039
    8. ''s' → logprob: -12.26150894165039
    9. ' '' → logprob: -12.51150894165039
    10. '0' → logprob: -12.63650894165039

Token 2290: '6' (ID: 21)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3669833838939667
    2. '0' → logprob: -1.366983413696289
    3. '```' → logprob: -3.866983413696289
    4. ''x' → logprob: -3.991983413696289
    5. '2' → logprob: -5.866983413696289
    6. 'b' → logprob: -6.241983413696289
    7. '   ' → logprob: -6.491983413696289
    8. ')' → logprob: -6.741983413696289
    9. ' ' → logprob: -6.866983413696289
    10. '...' → logprob: -7.116983413696289

Token 2291: '=' (ID: 28)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.21761515736579895
    2. 'not' → logprob: -1.7176151275634766
    3. '=='' → logprob: -4.717615127563477
    4. ''x' → logprob: -5.967615127563477
    5. '==' → logprob: -6.592615127563477
    6. '!='' → logprob: -6.967615127563477
    7. '```' → logprob: -7.592615127563477
    8. '('' → logprob: -7.842615127563477
    9. ')' → logprob: -8.467615127563477
    10. ' ==' → logprob: -8.592615127563477

Token 2292: '0' (ID: 15)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.14603349566459656
    2. ''' → logprob: -2.021033525466919
    3. '('' → logprob: -6.02103328704834
    4. '0' → logprob: -7.39603328704834
    5. ' '' → logprob: -8.39603328704834
    6. '['' → logprob: -11.02103328704834
    7. '`' → logprob: -11.27103328704834
    8. ''s' → logprob: -12.02103328704834
    9. '```' → logprob: -12.02103328704834
    10. ''ok' → logprob: -12.02103328704834

Token 2293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012608295073732734
    2. '   ' → logprob: -7.126260757446289
    3. '```' → logprob: -8.001260757446289
    4. ':
' → logprob: -10.501260757446289
    5. ')' → logprob: -10.751260757446289
    6. '):
' → logprob: -11.001260757446289
    7. ':' → logprob: -11.251260757446289
    8. '
' → logprob: -11.501260757446289
    9. '      ' → logprob: -12.126260757446289
    10. '``' → logprob: -12.251260757446289

Token 2294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004996551433578134
    2. '   ' → logprob: -7.750499725341797
    3. ')' → logprob: -10.625499725341797
    4. '```' → logprob: -11.250499725341797
    5. ':' → logprob: -11.375499725341797
    6. ':
' → logprob: -12.250499725341797
    7. ' not' → logprob: -12.875499725341797
    8. ' ' → logprob: -13.375499725341797
    9. '      ' → logprob: -13.375499725341797
    10. ':return' → logprob: -13.750499725341797

Token 2295: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36933696269989014
    2. '       ' → logprob: -1.8693369626998901
    3. ' return' → logprob: -1.8693369626998901
    4. ':return' → logprob: -9.49433708190918
    5. '0' → logprob: -9.74433708190918
    6. '        ' → logprob: -9.99433708190918
    7. '```' → logprob: -10.11933708190918
    8. '   ' → logprob: -10.11933708190918
    9. '	return' → logprob: -10.99433708190918
    10. 'True' → logprob: -11.11933708190918

Token 2296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022787988185883
    2. ' ' → logprob: -1.91022789478302
    3. 'return' → logprob: -13.16022777557373
    4. ' return' → logprob: -13.78522777557373
    5. '   ' → logprob: -14.91022777557373
    6. '  ' → logprob: -16.410228729248047
    7. '(' → logprob: -16.410228729248047
    8. '```' → logprob: -16.535228729248047
    9. '1' → logprob: -16.660228729248047
    10. 'True' → logprob: -16.910228729248047

Token 2297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'return' → logprob: -19.25001335144043
    4. '1' → logprob: -20.00001335144043
    5. 'False' → logprob: -20.12501335144043
    6. '   ' → logprob: -20.12501335144043
    7. '
' → logprob: -20.62501335144043
    8. '۰' → logprob: -20.62501335144043
    9. '  ' → logprob: -21.37501335144043
    10. '```' → logprob: -21.50001335144043

Token 2298: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1016983911395073
    2. '
' → logprob: -2.351698398590088
    3. '```' → logprob: -6.726698398590088
    4. '#' → logprob: -9.10169792175293
    5. '    
' → logprob: -9.10169792175293
    6. 'y' → logprob: -10.85169792175293
    7. 'def' → logprob: -11.72669792175293
    8. '

' → logprob: -11.72669792175293
    9. 'from' → logprob: -12.10169792175293
    10. ' y' → logprob: -12.22669792175293

Token 2299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002414299873635173
    2. '#' → logprob: -6.377414226531982
    3. 'y' → logprob: -7.502414226531982
    4. '```' → logprob: -9.12741470336914
    5. 'def' → logprob: -10.75241470336914
    6. '
' → logprob: -10.87741470336914
    7. ' y' → logprob: -11.75241470336914
    8. '``' → logprob: -13.87741470336914
    9. '    
' → logprob: -14.25241470336914
    10. ' #' → logprob: -14.50241470336914

Token 2300: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8628399968147278
    2. '   ' → logprob: -0.8628399968147278
    3. '#' (adapté à ' #') → logprob: -1.862839937210083
    4. '```' → logprob: -7.487840175628662
    5. 'def' → logprob: -8.612839698791504
    6. ' y' → logprob: -9.612839698791504
    7. '``' → logprob: -11.487839698791504
    8. '
' → logprob: -11.612839698791504
    9. ' #' → logprob: -11.987839698791504
    10. '	y' → logprob: -13.237839698791504

Token 2301: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.939412534236908
    2. '#' → logprob: -1.1894125938415527
    3. '   ' → logprob: -1.1894125938415527
    4. 'def' → logprob: -8.939412117004395
    5. '```' → logprob: -8.939412117004395
    6. '
' → logprob: -10.689412117004395
    7. ' y' → logprob: -10.689412117004395
    8. 'ys' → logprob: -11.064412117004395
    9. '``' → logprob: -12.564412117004395
    10. 'y's' → logprob: -12.814412117004395

Token 2302: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.003998496104031801
    2. 'bits' → logprob: -5.878998279571533
    3. 'y' → logprob: -7.128998279571533
    4. '_y' → logprob: -8.378998756408691
    5. '   ' → logprob: -9.003998756408691
    6. '_fixed' → logprob: -11.253998756408691
    7. '```' → logprob: -11.753998756408691
    8. '_positions' → logprob: -12.878998756408691
    9. 'fixed' → logprob: -13.003998756408691
    10. '#' → logprob: -13.128998756408691

Token 2303: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46554115414619446
    2. 'y' → logprob: -1.465541124343872
    3. '_vals' → logprob: -2.590541124343872
    4. '_y' → logprob: -3.340541124343872
    5. ' =' → logprob: -4.090541362762451
    6. '=' → logprob: -5.465541362762451
    7. '_bits' → logprob: -5.465541362762451
    8. 'vals' → logprob: -6.465541362762451
    9. '_positions' → logprob: -6.715541362762451
    10. '_indices' → logprob: -6.965541362762451

Token 2304: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5248729586601257
    2. '   ' → logprob: -0.8998729586601257
    3. '#' → logprob: -7.274872779846191
    4. 'ys' → logprob: -7.274872779846191
    5. ' y' → logprob: -8.649872779846191
    6. 'yb' → logprob: -9.774872779846191
    7. '```' → logprob: -10.024872779846191
    8. '    
' → logprob: -11.274872779846191
    9. 'def' → logprob: -11.524872779846191
    10. '	y' → logprob: -11.774872779846191

Token 2305: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04099312797188759
    2. '   ' → logprob: -3.2909932136535645
    3. 'ys' → logprob: -6.0409932136535645
    4. '```' → logprob: -8.790992736816406
    5. 'yb' → logprob: -9.040992736816406
    6. ' y' → logprob: -9.040992736816406
    7. '#' (adapté à ' #') → logprob: -9.915992736816406
    8. 'b' → logprob: -10.790992736816406
    9. 'y's' → logprob: -10.915992736816406
    10. '``' → logprob: -11.040992736816406

Token 2306: ' byte' (ID: 9239)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3177778124809265
    2. '   ' → logprob: -1.3177778720855713
    3. 'ys' → logprob: -5.567777633666992
    4. '#' → logprob: -8.317777633666992
    5. ' y' → logprob: -9.317777633666992
    6. 'def' → logprob: -9.567777633666992
    7. 'yy' → logprob: -10.067777633666992
    8. 'b' → logprob: -10.192777633666992
    9. '```' → logprob: -10.317777633666992
    10. 'yb' → logprob: -10.567777633666992

Token 2307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013120103627443314
    2. '[' → logprob: -5.263120174407959
    3. 's' → logprob: -6.263120174407959
    4. 'for' → logprob: -6.263120174407959
    5. 'b' → logprob: -6.638120174407959
    6. '```' → logprob: -7.013120174407959
    7. 'bits' → logprob: -7.513120174407959
    8. 'def' → logprob: -7.888120174407959
    9. 'y' → logprob: -8.0131196975708
    10. '
' → logprob: -9.1381196975708

Token 2308: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08765869587659836
    2. '_vals' → logprob: -3.837658643722534
    3. '```' → logprob: -4.587658882141113
    4. 'def' → logprob: -4.587658882141113
    5. '   ' → logprob: -4.712658882141113
    6. '#' → logprob: -5.337658882141113
    7. 'for' → logprob: -5.462658882141113
    8. '4' → logprob: -5.462658882141113
    9. '
' → logprob: -5.712658882141113
    10. '_chars' → logprob: -5.837658882141113

Token 2309: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0365266799926758
    2. ' =' → logprob: -1.5365266799926758
    3. '[' → logprob: -1.9115266799926758
    4. '_vals' → logprob: -2.411526679992676
    5. '=' → logprob: -3.036526679992676
    6. 'for' → logprob: -3.161526679992676
    7. '_bits' → logprob: -4.036526679992676
    8. 'def' → logprob: -4.036526679992676
    9. '4' → logprob: -4.411526679992676
    10. 'y' → logprob: -4.786526679992676

Token 2310: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03525374457240105
    2. '4' → logprob: -3.7852537631988525
    3. 'for' → logprob: -4.785253524780273
    4. 'c' → logprob: -6.785253524780273
    5. 'y' → logprob: -7.535253524780273
    6. '   ' → logprob: -7.785253524780273
    7. 'b' → logprob: -8.035253524780273
    8. '#' → logprob: -8.410253524780273
    9. ' [' → logprob: -8.535253524780273
    10. 'positions' → logprob: -9.035253524780273

Token 2311: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3729412257671356
    2. '[' → logprob: -1.747941255569458
    3. '3' → logprob: -1.997941255569458
    4. '(' → logprob: -7.747941017150879
    5. '```' → logprob: -8.247941017150879
    6. '2' → logprob: -8.497941017150879
    7. 's' → logprob: -9.122941017150879
    8. '   ' → logprob: -9.372941017150879
    9. '
' → logprob: -9.372941017150879
    10. '=' → logprob: -9.497941017150879

Token 2312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22555162012577057
    2. 'in' → logprob: -3.4755516052246094
    3. ' in' → logprob: -3.6005516052246094
    4. '=' → logprob: -3.7255516052246094
    5. ' not' → logprob: -3.7255516052246094
    6. 'not' → logprob: -3.7255516052246094
    7. ')' → logprob: -3.8505516052246094
    8. '   ' → logprob: -4.350551605224609
    9. '```' → logprob: -5.100551605224609
    10. ' and' → logprob: -5.350551605224609

Token 2313: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000157293034135364
    2. ' ' → logprob: -9.250157356262207
    3. 'bit' → logprob: -10.125157356262207
    4. '2' → logprob: -11.750157356262207
    5. '   ' → logprob: -12.000157356262207
    6. '
' → logprob: -14.000157356262207
    7. ' bit' → logprob: -14.000157356262207
    8. '  ' → logprob: -14.000157356262207
    9. '0' → logprob: -14.125157356262207
    10. '#' → logprob: -14.375157356262207

Token 2314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008993526920676231
    2. '```' → logprob: -5.633993625640869
    3. '4' → logprob: -6.383993625640869
    4. ',b' → logprob: -6.883993625640869
    5. ' ,' → logprob: -7.133993625640869
    6. '   ' → logprob: -7.508993625640869
    7. '=' → logprob: -8.133993148803711
    8. '`,' → logprob: -8.133993148803711
    9. '`' → logprob: -9.008993148803711
    10. ',
' → logprob: -9.383993148803711

Token 2315: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.273621405242011e-05
    2. '1' → logprob: -11.125032424926758
    3. '0' → logprob: -12.375032424926758
    4. '3' → logprob: -12.500032424926758
    5. '7' → logprob: -13.000032424926758
    6. '#' → logprob: -13.125032424926758
    7. ' ' → logprob: -13.125032424926758
    8. '6' → logprob: -13.375032424926758
    9. '   ' → logprob: -13.625032424926758
    10. '5' → logprob: -14.625032424926758

Token 2316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03086688555777073
    2. '   ' → logprob: -4.280867099761963
    3. '```' → logprob: -4.530867099761963
    4. ' ,' → logprob: -5.780867099761963
    5. ',b' → logprob: -6.905867099761963
    6. '4' → logprob: -8.405866622924805
    7. '=' → logprob: -8.530866622924805
    8. ' and' → logprob: -8.655866622924805
    9. '`' → logprob: -8.780866622924805
    10. '[' → logprob: -8.905866622924805

Token 2317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013535681646317244
    2. '4' → logprob: -6.626353740692139
    3. '7' → logprob: -11.12635326385498
    4. '```' → logprob: -12.62635326385498
    5. ' ' → logprob: -12.87635326385498
    6. '5' → logprob: -13.25135326385498
    7. '#' → logprob: -13.25135326385498
    8. '6' → logprob: -13.75135326385498
    9. '   ' → logprob: -14.25135326385498
    10. '`' → logprob: -14.62635326385498

Token 2318: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007847821339964867
    2. 'y' → logprob: -6.257847785949707
    3. 'for' → logprob: -6.757847785949707
    4. ',y' → logprob: -6.882847785949707
    5. ',' → logprob: -7.132847785949707
    6. ' for' → logprob: -7.257847785949707
    7. ' y' → logprob: -7.632847785949707
    8. ' =' → logprob: -7.757847785949707
    9. '```' → logprob: -7.882847785949707
    10. '=' → logprob: -8.757847785949707

Token 2319: 'positions' (ID: 32297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9973916411399841
    2. '3' → logprob: -1.372391700744629
    3. 'b' → logprob: -2.372391700744629
    4. ',' → logprob: -2.372391700744629
    5. '   ' → logprob: -2.372391700744629
    6. ')' → logprob: -3.247391700744629
    7. 'for' → logprob: -4.247391700744629
    8. '4' → logprob: -4.497391700744629
    9. 'def' → logprob: -5.497391700744629
    10. '
' → logprob: -5.747391700744629

Token 2320: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28688186407089233
    2. '3' → logprob: -2.161881923675537
    3. ',' → logprob: -2.411881923675537
    4. ')' → logprob: -4.036881923675537
    5. '4' → logprob: -5.161881923675537
    6. '=' → logprob: -5.286881923675537
    7. '```' → logprob: -5.286881923675537
    8. ':' → logprob: -6.161881923675537
    9. 'in' → logprob: -6.286881923675537
    10. ' =' → logprob: -6.911881923675537

Token 2321: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17402511835098267
    2. '4' → logprob: -2.299025058746338
    3. '3' → logprob: -3.299025058746338
    4. '(' → logprob: -3.924025058746338
    5. 'range' → logprob: -7.549025058746338
    6. '```' → logprob: -7.674025058746338
    7. '`' → logprob: -7.924025058746338
    8. ')' → logprob: -8.049025535583496
    9. 'def' → logprob: -8.424025535583496
    10. '   ' → logprob: -8.549025535583496

Token 2322: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031247884035110474
    2. ')' → logprob: -4.406248092651367
    3. '4' → logprob: -4.906248092651367
    4. ':' → logprob: -5.031248092651367
    5. '```' → logprob: -6.531248092651367
    6. '...' → logprob: -7.531248092651367
    7. '=' → logprob: -7.906248092651367
    8. 'def' → logprob: -8.031248092651367
    9. '),' → logprob: -8.281248092651367
    10. '):' → logprob: -8.406248092651367

Token 2323: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06494098901748657
    2. '3' → logprob: -3.439940929412842
    3. '2' → logprob: -3.689940929412842
    4. '7' → logprob: -6.814940929412842
    5. '...' → logprob: -6.814940929412842
    6. '
' → logprob: -7.189940929412842
    7. ',' → logprob: -7.439940929412842
    8. ' ' → logprob: -7.689940929412842
    9. '6' → logprob: -7.814940929412842
    10. '```' → logprob: -8.06494140625

Token 2324: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5288052558898926
    2. '):
' → logprob: -2.0288052558898926
    3. ')' → logprob: -2.4038052558898926
    4. ':' → logprob: -3.0288052558898926
    5. ':
' → logprob: -3.2788052558898926
    6. ',' → logprob: -3.4038052558898926
    7. '):' → logprob: -4.028805255889893
    8. ']' → logprob: -4.153805255889893
    9. '```' → logprob: -4.653805255889893
    10. ']:
' → logprob: -5.278805255889893

Token 2325: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026062061078846455
    2. '[' → logprob: -9.125260353088379
    3. '```' → logprob: -9.375260353088379
    4. 'def' → logprob: -10.625260353088379
    5. ' b' → logprob: -10.875260353088379
    6. '`' → logprob: -11.875260353088379
    7. ')' → logprob: -12.500260353088379
    8. '
' → logprob: -12.875260353088379
    9. '   ' → logprob: -13.250260353088379
    10. ']' → logprob: -13.375260353088379

Token 2326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034084629733115435
    2. '[' → logprob: -5.753408432006836
    3. '```' → logprob: -8.503408432006836
    4. ']' → logprob: -11.628408432006836
    5. '`' → logprob: -11.753408432006836
    6. ')' → logprob: -12.753408432006836
    7. '``' → logprob: -13.128408432006836
    8. '[]' → logprob: -13.628408432006836
    9. 'b' → logprob: -13.753408432006836
    10. '[
' → logprob: -13.878408432006836

Token 2327: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04183445870876312
    2. ')' → logprob: -4.666834354400635
    3. ',' → logprob: -5.166834354400635
    4. '```' → logprob: -5.416834354400635
    5. '):
' → logprob: -5.666834354400635
    6. ' =' → logprob: -5.916834354400635
    7. '=' → logprob: -6.041834354400635
    8. ':
' → logprob: -6.166834354400635
    9. 'def' → logprob: -6.416834354400635
    10. ':' → logprob: -6.541834354400635

Token 2328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004579649772495031
    2. 'y' → logprob: -5.629579544067383
    3. ' y' → logprob: -8.379579544067383
    4. ' =' → logprob: -8.879579544067383
    5. '```' → logprob: -8.879579544067383
    6. ',' → logprob: -9.254579544067383
    7. ',y' → logprob: -9.379579544067383
    8. '=' → logprob: -9.504579544067383
    9. 'bits' → logprob: -10.504579544067383
    10. '[y' → logprob: -10.629579544067383

Token 2329: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1280066967010498
    2. '   ' → logprob: -2.12800669670105
    3. ' y' → logprob: -7.128006935119629
    4. 'ys' → logprob: -9.003006935119629
    5. '```' → logprob: -9.878006935119629
    6. 'yb' → logprob: -10.753006935119629
    7. 'y's' → logprob: -11.378006935119629
    8. '    
' → logprob: -11.503006935119629
    9. '=' → logprob: -11.753006935119629
    10. ',y' → logprob: -12.003006935119629

Token 2330: ' byte' (ID: 9239)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011901873163878918
    2. 'ys' → logprob: -5.01190185546875
    3. '   ' → logprob: -5.38690185546875
    4. 'b' → logprob: -9.01190185546875
    5. 'yb' → logprob: -9.13690185546875
    6. 'y's' → logprob: -9.26190185546875
    7. 'byte' → logprob: -9.76190185546875
    8. '#' → logprob: -10.01190185546875
    9. 'positions' → logprob: -10.26190185546875
    10. ' y' → logprob: -10.51190185546875

Token 2331: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.21423454582691193
    2. '[' → logprob: -2.7142345905303955
    3. '4' → logprob: -3.0892345905303955
    4. '1' → logprob: -3.0892345905303955
    5. '2' → logprob: -3.7142345905303955
    6. '```' → logprob: -5.964234352111816
    7. '
' → logprob: -6.214234352111816
    8. 'def' → logprob: -6.214234352111816
    9. ']' → logprob: -6.964234352111816
    10. '][' → logprob: -7.339234352111816

Token 2332: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034833617974072695
    2. '```' → logprob: -8.750348091125488
    3. '2' → logprob: -9.875348091125488
    4. '#' → logprob: -10.000348091125488
    5. '3' → logprob: -10.625348091125488
    6. '
' → logprob: -11.000348091125488
    7. 'def' → logprob: -12.125348091125488
    8. '`' → logprob: -12.125348091125488
    9. '4' → logprob: -12.250348091125488
    10. 'indices' → logprob: -12.375348091125488

Token 2333: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31893956661224365
    2. '2' → logprob: -1.4439395666122437
    3. '3' → logprob: -3.443939685821533
    4. '```' → logprob: -5.818939685821533
    5. '4' → logprob: -7.318939685821533
    6. '
' → logprob: -7.568939685821533
    7. '`' → logprob: -8.193939208984375
    8. '   ' → logprob: -8.193939208984375
    9. '``' → logprob: -8.818939208984375
    10. ' [' → logprob: -9.443939208984375

Token 2334: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8453882932662964
    2. '=' → logprob: -1.9703882932662964
    3. ' =' → logprob: -2.220388412475586
    4. 'not' → logprob: -2.595388412475586
    5. 'def' → logprob: -2.720388412475586
    6. '```' → logprob: -3.095388412475586
    7. ' not' → logprob: -3.345388412475586
    8. '==' → logprob: -4.220388412475586
    9. '<|end|>' → logprob: -4.720388412475586
    10. ',' → logprob: -4.720388412475586

Token 2335: 'position' (ID: 4504)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.45607492327690125
    2. '3' → logprob: -1.8310749530792236
    3. '2' → logprob: -2.5810749530792236
    4. 'b' → logprob: -2.7060749530792236
    5. '5' → logprob: -3.5810749530792236
    6. '```' → logprob: -4.2060747146606445
    7. ')' → logprob: -5.0810747146606445
    8. '   ' → logprob: -5.2060747146606445
    9. '``' → logprob: -6.8310747146606445
    10. ']' → logprob: -6.8310747146606445

Token 2336: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00444246269762516
    2. '=' → logprob: -7.1294426918029785
    3. '5' → logprob: -7.2544426918029785
    4. '(' → logprob: -7.3794426918029785
    5. '   ' → logprob: -7.6294426918029785
    6. '[' → logprob: -7.7544426918029785
    7. '4' → logprob: -8.12944221496582
    8. '`' → logprob: -8.62944221496582
    9. '
' → logprob: -9.00444221496582
    10. ')' → logprob: -9.00444221496582

Token 2337: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.031137773767113686
    2. '5' → logprob: -3.781137704849243
    3. '4' → logprob: -4.906137943267822
    4. '1' → logprob: -8.781137466430664
    5. '3' → logprob: -9.281137466430664
    6. '[' → logprob: -9.781137466430664
    7. '(' → logprob: -10.156137466430664
    8. '   ' → logprob: -10.281137466430664
    9. '```' → logprob: -11.031137466430664
    10. '6' → logprob: -11.281137466430664

Token 2338: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039980094879865646
    2. ')==' → logprob: -4.414979934692383
    3. '):' → logprob: -5.289979934692383
    4. ']==' → logprob: -5.289979934692383
    5. ']' → logprob: -5.789979934692383
    6. '):
' → logprob: -6.164979934692383
    7. '```' → logprob: -6.164979934692383
    8. '   ' → logprob: -6.289979934692383
    9. ')=' → logprob: -6.789979934692383
    10. ')!=' → logprob: -6.789979934692383

Token 2339: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.125
    3. '```' → logprob: -20.0
    4. '`' → logprob: -21.5
    5. ')b' → logprob: -22.25
    6. 'def' → logprob: -22.5
    7. '[' → logprob: -22.75
    8. '[b' → logprob: -23.0
    9. ''b' → logprob: -23.25
    10. '   ' → logprob: -23.625

Token 2340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. 'b' → logprob: -13.000004768371582
    3. '1' → logprob: -13.250004768371582
    4. '```' → logprob: -14.625004768371582
    5. '
' → logprob: -15.625004768371582
    6. '#' → logprob: -17.1250057220459
    7. '[' → logprob: -17.2500057220459
    8. '...' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.5000057220459
    10. 'def' → logprob: -17.7500057220459

Token 2341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.56109219789505
    2. '   ' → logprob: -1.6860921382904053
    3. '):
' → logprob: -1.9360921382904053
    4. '):' → logprob: -3.5610921382904053
    5. '```' → logprob: -3.6860921382904053
    6. ':' → logprob: -5.186092376708984
    7. ')==' → logprob: -5.311092376708984
    8. ')
' → logprob: -5.311092376708984
    9. 'b' → logprob: -5.436092376708984
    10. '
' → logprob: -5.561092376708984

Token 2342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.316987007856369
    2. 'y' → logprob: -1.3169870376586914
    3. ' y' → logprob: -5.941987037658691
    4. 'def' → logprob: -8.066987037658691
    5. '#' → logprob: -8.441987037658691
    6. 'b' → logprob: -8.691987037658691
    7. '    
' → logprob: -9.191987037658691
    8. '
' → logprob: -9.316987037658691
    9. '```' → logprob: -9.316987037658691
    10. 'ys' → logprob: -10.691987037658691

Token 2343: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.47658950090408325
    2. '   ' → logprob: -0.9765895009040833
    3. ' y' → logprob: -6.351589679718018
    4. 'ys' → logprob: -8.10158920288086
    5. '```' → logprob: -8.35158920288086
    6. 'b' → logprob: -9.85158920288086
    7. '    
' → logprob: -10.10158920288086
    8. 'yb' → logprob: -10.10158920288086
    9. '``' → logprob: -10.72658920288086
    10. '
' → logprob: -11.60158920288086

Token 2344: '_positions' (ID: 93193)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0034803354647010565
    2. '_positions' → logprob: -6.003480434417725
    3. 'bits' → logprob: -7.128480434417725
    4. '_indices' → logprob: -9.003479957580566
    5. '_vals' → logprob: -10.003479957580566
    6. '_pos' → logprob: -11.628479957580566
    7. '_bit' → logprob: -12.753479957580566
    8. '_fixed' → logprob: -12.753479957580566
    9. 'positions' → logprob: -12.753479957580566
    10. '_chars' → logprob: -13.253479957580566

Token 2345: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00044377794256433845
    2. ' =' → logprob: -7.750443935394287
    3. '=[' → logprob: -11.250443458557129
    4. '=
' → logprob: -17.625444412231445
    5. '[' → logprob: -18.750444412231445
    6. '```' → logprob: -19.125444412231445
    7. ' =[' → logprob: -19.375444412231445
    8. '=`' → logprob: -19.625444412231445
    9. 'b' → logprob: -19.750444412231445
    10. '=b' → logprob: -20.000444412231445

Token 2346: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06623080372810364
    2. '1' → logprob: -2.8162307739257812
    3. '=' → logprob: -6.066230773925781
    4. '=[' → logprob: -6.441230773925781
    5. ' =' → logprob: -8.566230773925781
    6. '```' → logprob: -10.441230773925781
    7. '[
' → logprob: -10.691230773925781
    8. '(' → logprob: -11.816230773925781
    9. '[]' → logprob: -11.816230773925781
    10. '[-' → logprob: -11.941230773925781

Token 2347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0022247217129915953
    2. ' =' → logprob: -6.252224922180176
    3. '=[' → logprob: -8.127224922180176
    4. '=
' → logprob: -15.127224922180176
    5. ' =[' → logprob: -16.50222396850586
    6. '[' → logprob: -16.75222396850586
    7. '=[
' → logprob: -16.87722396850586
    8. ',' → logprob: -17.37722396850586
    9. '=['' → logprob: -17.37722396850586
    10. '=`' → logprob: -17.87722396850586

Token 2348: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.625000953674316
    3. '(' → logprob: -16.0
    4. 'range' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '[
' → logprob: -18.875
    7. '3' → logprob: -18.875
    8. '4' → logprob: -19.25
    9. '[(' → logprob: -20.875
    10. '  ' → logprob: -21.25

Token 2349: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.176947600673884e-05
    2. '4' → logprob: -10.750021934509277
    3. '0' → logprob: -16.00002098083496
    4. '(' → logprob: -17.00002098083496
    5. '1' → logprob: -17.12502098083496
    6. '   ' → logprob: -17.50002098083496
    7. '2' → logprob: -17.75002098083496
    8. ' ' → logprob: -17.87502098083496
    9. 'b' → logprob: -18.62502098083496
    10. '5' → logprob: -19.00002098083496

Token 2350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036139667499810457
    2. '4' → logprob: -5.6286139488220215
    3. '2' → logprob: -12.00361442565918
    4. ' ,' → logprob: -12.12861442565918
    5. ',
' → logprob: -13.75361442565918
    6. ']' → logprob: -14.75361442565918
    7. ' ' → logprob: -14.87861442565918
    8. '3' → logprob: -15.87861442565918
    9. ',b' → logprob: -16.37861442565918
    10. '```' → logprob: -16.37861442565918

Token 2351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10026782006025314
    2. '4' → logprob: -2.3502678871154785
    3. ' ' → logprob: -9.72526741027832
    4. '   ' → logprob: -13.72526741027832
    5. '0' → logprob: -15.47526741027832
    6. '  ' → logprob: -16.35026741027832
    7. '3' → logprob: -17.60026741027832
    8. '1' → logprob: -17.72526741027832
    9. '    ' → logprob: -18.22526741027832
    10. '```' → logprob: -18.47526741027832

Token 2352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024870390188880265
    2. '1' → logprob: -8.375248908996582
    3. '4' → logprob: -11.875248908996582
    4. ' ,' → logprob: -11.875248908996582
    5. ',
' → logprob: -13.500248908996582
    6. ']' → logprob: -13.750248908996582
    7. '   ' → logprob: -14.375248908996582
    8. '```' → logprob: -14.875248908996582
    9. '],' → logprob: -15.625248908996582
    10. '],[' → logprob: -15.750248908996582

Token 2353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '１' → logprob: -18.5
    4. '   ' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '[' → logprob: -20.0
    7. '۱' → logprob: -20.125
    8. '`' → logprob: -20.375
    9. '#' → logprob: -20.625
    10. '  ' → logprob: -20.75

Token 2354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002998312993440777
    2. '0' → logprob: -8.375299453735352
    3. '4' → logprob: -9.750299453735352
    4. ' ,' → logprob: -12.125299453735352
    5. ']' → logprob: -13.125299453735352
    6. '   ' → logprob: -14.000299453735352
    7. ',
' → logprob: -14.000299453735352
    8. '```' → logprob: -14.625299453735352
    9. ' ' → logprob: -15.000299453735352
    10. '#' → logprob: -15.250299453735352

Token 2355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '۰' → logprob: -21.125
    4. '０' → logprob: -21.625
    5. '4' → logprob: -22.875
    6. '   ' → logprob: -23.125
    7. '1' → logprob: -23.5
    8. '```' → logprob: -25.0
    9. '  ' → logprob: -25.375
    10. '०' → logprob: -25.375

Token 2356: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.257686585187912
    2. ']
' → logprob: -1.5076866149902344
    3. '   ' → logprob: -5.507686614990234
    4. ',' → logprob: -6.507686614990234
    5. ' ]' → logprob: -9.632686614990234
    6. ']

' → logprob: -10.007686614990234
    7. ']
' → logprob: -10.132686614990234
    8. ' ]
' → logprob: -11.007686614990234
    9. '```' → logprob: -11.382686614990234
    10. '  ' → logprob: -12.757686614990234

Token 2357: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10506785660982132
    2. '   ' → logprob: -2.6050679683685303
    3. 'for' → logprob: -3.8550679683685303
    4. '
' → logprob: -5.980067729949951
    5. 'if' → logprob: -6.730067729949951
    6. '```' → logprob: -7.980067729949951
    7. 'b' → logprob: -8.60506820678711
    8. '#' → logprob: -8.60506820678711
    9. 'c' → logprob: -10.35506820678711
    10. ' y' → logprob: -10.48006820678711

Token 2358: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.004837126471102238
    2. '   ' → logprob: -6.6298370361328125
    3. 'b' → logprob: -6.8798370361328125
    4. 'unknown' → logprob: -6.8798370361328125
    5. 'total' → logprob: -8.129837036132812
    6. 'count' → logprob: -8.504837036132812
    7. 'c' → logprob: -8.629837036132812
    8. 'positions' → logprob: -8.629837036132812
    9. '#' → logprob: -9.004837036132812
    10. 'valid' → logprob: -9.254837036132812

Token 2359: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.03004377894103527
    2. '_bits' → logprob: -3.530043840408325
    3. 'positions' → logprob: -8.280043601989746
    4. 'bits' → logprob: -10.655043601989746
    5. '_indices' → logprob: -11.780043601989746
    6. '=' → logprob: -13.405043601989746
    7. ' =' → logprob: -13.405043601989746
    8. '_counts' → logprob: -13.655043601989746
    9. '```' → logprob: -13.780043601989746
    10. '_values' → logprob: -13.780043601989746

Token 2360: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006985076237469912
    2. '=[' → logprob: -5.631985187530518
    3. 'b' → logprob: -6.006985187530518
    4. ' =' → logprob: -7.256985187530518
    5. '[' → logprob: -9.38198471069336
    6. 'in' → logprob: -9.63198471069336
    7. '=b' → logprob: -10.25698471069336
    8. '_b' → logprob: -11.75698471069336
    9. '=
' → logprob: -12.00698471069336
    10. '```' → logprob: -12.50698471069336

Token 2361: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014011908788233995
    2. '3' → logprob: -7.001401424407959
    3. '2' → logprob: -7.876401424407959
    4. '[' → logprob: -9.8764009475708
    5. '(' → logprob: -10.6264009475708
    6. '```' → logprob: -10.7514009475708
    7. '4' → logprob: -11.7514009475708
    8. '#' → logprob: -13.2514009475708
    9. '5' → logprob: -14.6264009475708
    10. '=' → logprob: -15.0014009475708

Token 2362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138013482093811
    2. ' =' → logprob: -1.3138012886047363
    3. '=[' → logprob: -7.563801288604736
    4. ' =[' → logprob: -11.188801765441895
    5. '[' → logprob: -12.313801765441895
    6. '   ' → logprob: -14.938801765441895
    7. '.append' → logprob: -14.938801765441895
    8. ']' → logprob: -15.313801765441895
    9. ' ' → logprob: -15.563801765441895
    10. '=['' → logprob: -15.813801765441895

Token 2363: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '5' → logprob: -13.375001907348633
    3. ' [' → logprob: -17.250001907348633
    4. '{' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '(' → logprob: -19.750001907348633
    7. '[
' → logprob: -19.750001907348633
    8. '[[' → logprob: -20.375001907348633
    9. '```' → logprob: -20.500001907348633
    10. '=[' → logprob: -20.625001907348633

Token 2364: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. ' ' → logprob: -17.375
    4. '５' → logprob: -17.375
    5. '(' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. '۵' → logprob: -18.75
    8. '٥' → logprob: -19.5
    9. '```' → logprob: -20.25
    10. '
' → logprob: -20.375

Token 2365: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10622449964284897
    2. '5' → logprob: -2.356224536895752
    3. '3' → logprob: -6.606224536895752
    4. ',' → logprob: -6.981224536895752
    5. '(' → logprob: -7.606224536895752
    6. '()]' → logprob: -7.606224536895752
    7. '#' → logprob: -7.981224536895752
    8. '4' → logprob: -8.231224060058594
    9. '0' → logprob: -8.231224060058594
    10. '1' → logprob: -8.356224060058594

Token 2366: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6687731742858887
    2. 'c' → logprob: -1.6687731742858887
    3. '   ' → logprob: -1.6687731742858887
    4. 'if' → logprob: -3.1687731742858887
    5. '#' → logprob: -3.7937731742858887
    6. 'def' → logprob: -3.9187731742858887
    7. ' if' → logprob: -4.793773174285889
    8. ' c' → logprob: -5.043773174285889
    9. 'y' → logprob: -5.793773174285889
    10. ' #' → logprob: -6.293773174285889

Token 2367: 'bit' (ID: 6516)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3617434799671173
    2. '[' → logprob: -1.611743450164795
    3. '4' → logprob: -3.111743450164795
    4. 'def' → logprob: -4.111743450164795
    5. 'b' → logprob: -4.111743450164795
    6. '#' → logprob: -4.361743450164795
    7. '3' → logprob: -4.861743450164795
    8. 'y' → logprob: -6.861743450164795
    9. '2' → logprob: -6.986743450164795
    10. '```' → logprob: -7.111743450164795

Token 2368: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002636653371155262
    2. '2' → logprob: -7.002636432647705
    3. '```' → logprob: -7.502636432647705
    4. ']' → logprob: -7.752636432647705
    5. '   ' → logprob: -9.002636909484863
    6. '[' → logprob: -9.002636909484863
    7. '#' → logprob: -9.252636909484863
    8. ' ' → logprob: -9.502636909484863
    9. '1' → logprob: -9.877636909484863
    10. '(' → logprob: -9.877636909484863

Token 2369: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6587302088737488
    2. '
' → logprob: -1.1587302684783936
    3. 'def' → logprob: -1.9087302684783936
    4. 'if' → logprob: -4.6587300300598145
    5. ' if' → logprob: -5.7837300300598145
    6. ' =' → logprob: -6.6587300300598145
    7. '#' → logprob: -6.7837300300598145
    8. ')' → logprob: -7.2837300300598145
    9. ' (' → logprob: -7.5337300300598145
    10. 'y' → logprob: -7.5337300300598145

Token 2370: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7152118682861328
    2. '<|end|>' → logprob: -1.2152118682861328
    3. '<|end|>' → logprob: -2.715211868286133
    4. ' =' → logprob: -3.090211868286133
    5. '5' → logprob: -3.465211868286133
    6. '[' → logprob: -3.715211868286133
    7. '#' → logprob: -3.840211868286133
    8. ']' → logprob: -5.090211868286133
    9. '
' → logprob: -5.965211868286133
    10. ',' → logprob: -5.965211868286133

Token 2371: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08385073393583298
    2. 'y' → logprob: -2.708850622177124
    3. 'unknown' → logprob: -5.208850860595703
    4. '   ' → logprob: -5.333850860595703
    5. '#' → logprob: -7.208850860595703
    6. 'if' → logprob: -7.333850860595703
    7. 'count' → logprob: -7.708850860595703
    8. 'fixed' → logprob: -7.958850860595703
    9. '
' → logprob: -8.333850860595703
    10. '```' → logprob: -8.708850860595703

Token 2372: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.014030109159648418
    2. '   ' → logprob: -4.5140299797058105
    3. 'unknown' → logprob: -6.3890299797058105
    4. 'c' → logprob: -7.3890299797058105
    5. '#' → logprob: -8.014030456542969
    6. '
' → logprob: -8.514030456542969
    7. ' y' → logprob: -9.639030456542969
    8. 'ys' → logprob: -10.764030456542969
    9. 'def' → logprob: -11.014030456542969
    10. 'y's' → logprob: -11.764030456542969

Token 2373: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.00577295757830143
    2. '_positions' → logprob: -5.380773067474365
    3. 'bits' → logprob: -7.005773067474365
    4. '_vals' → logprob: -8.755772590637207
    5. '_indices' → logprob: -10.005772590637207
    6. '_values' → logprob: -11.005772590637207
    7. '_fixed' → logprob: -12.005772590637207
    8. 'positions' → logprob: -12.130772590637207
    9. 'vals' → logprob: -12.255772590637207
    10. '_chars' → logprob: -13.130772590637207

Token 2374: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5882090330123901
    2. '_vals' → logprob: -0.8382090330123901
    3. ' =' → logprob: -5.33820915222168
    4. '=[]' → logprob: -5.58820915222168
    5. 'vals' → logprob: -5.83820915222168
    6. '=[]
' → logprob: -7.96320915222168
    7. 's' → logprob: -9.33820915222168
    8. '=[' → logprob: -9.33820915222168
    9. '_values' → logprob: -9.46320915222168
    10. '_val' → logprob: -9.71320915222168

Token 2375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006732422858476639
    2. ' =' → logprob: -5.50673246383667
    3. '=[]' → logprob: -6.00673246383667
    4. '=[]
' → logprob: -8.756731986999512
    5. '=[' → logprob: -10.506731986999512
    6. '.append' → logprob: -13.506731986999512
    7. 'b' → logprob: -14.631731986999512
    8. '[:]' → logprob: -15.006731986999512
    9. '[]' → logprob: -15.256731986999512
    10. '=[]
' → logprob: -15.381731986999512

Token 2376: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.4789547622203827
    2. '[b' → logprob: -1.478954792022705
    3. '[]' → logprob: -2.353954792022705
    4. '[y' → logprob: -3.103954792022705
    5. '[]

' → logprob: -5.353954792022705
    6. '[' → logprob: -5.603954792022705
    7. '[
' → logprob: -5.728954792022705
    8. 'b' → logprob: -7.353954792022705
    9. '[(' → logprob: -8.228954315185547
    10. '[-' → logprob: -9.353954315185547

Token 2377: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018223343417048454
    2. '   ' → logprob: -4.143223285675049
    3. 'unknown' → logprob: -6.518223285675049
    4. 'count' → logprob: -8.518223762512207
    5. '
' → logprob: -8.893223762512207
    6. 'y' → logprob: -9.018223762512207
    7. ' for' → logprob: -9.268223762512207
    8. 'fixed' → logprob: -9.893223762512207
    9. 'cnt' → logprob: -10.643223762512207
    10. '#' → logprob: -10.643223762512207

Token 2378: ' unknown' (ID: 17927)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00300444639287889
    2. 'unknown' (adapté à ' unknown') → logprob: -6.253004550933838
    3. 'y' → logprob: -7.753004550933838
    4. '#' → logprob: -8.12800407409668
    5. '   ' → logprob: -9.00300407409668
    6. 'def' → logprob: -9.62800407409668
    7. 'count' → logprob: -9.75300407409668
    8. 'fixed' → logprob: -10.12800407409668
    9. '
' → logprob: -11.00300407409668
    10. 'total' → logprob: -11.50300407409668

Token 2379: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.006955957971513271
    2. '_bits' → logprob: -6.006956100463867
    3. '_positions' → logprob: -6.256956100463867
    4. '_b' → logprob: -6.756956100463867
    5. 'y' → logprob: -7.506956100463867
    6. '_indices' → logprob: -7.881956100463867
    7. 's' → logprob: -9.381956100463867
    8. '_count' → logprob: -9.506956100463867
    9. '=' → logprob: -9.631956100463867
    10. '=[]' → logprob: -10.131956100463867

Token 2380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008474154397845268
    2. ' =' → logprob: -4.883474349975586
    3. '_positions' → logprob: -7.883474349975586
    4. '+=' → logprob: -8.383474349975586
    5. '=[]' → logprob: -8.758474349975586
    6. '_bits' → logprob: -10.133474349975586
    7. '=[]
' → logprob: -11.008474349975586
    8. ' +=' → logprob: -11.633474349975586
    9. '_indices' → logprob: -11.633474349975586
    10. '_count' → logprob: -11.758474349975586

Token 2381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000122608442325145
    2. ' ' → logprob: -9.875123023986816
    3. '3' → logprob: -10.750123023986816
    4. '1' → logprob: -10.750123023986816
    5. '4' → logprob: -11.125123023986816
    6. '2' → logprob: -11.750123023986816
    7. '5' → logprob: -12.875123023986816
    8. '=' → logprob: -13.375123023986816
    9. '```' → logprob: -14.500123023986816
    10. '...' → logprob: -14.875123023986816

Token 2382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1754714995622635
    2. '3' → logprob: -2.925471544265747
    3. '1' → logprob: -3.050471544265747
    4. '5' → logprob: -3.175471544265747
    5. '4' → logprob: -4.300471305847168
    6. '2' → logprob: -5.425471305847168
    7. '6' → logprob: -8.675471305847168
    8. ' ' → logprob: -11.550471305847168
    9. '[' → logprob: -11.612971305847168
    10. 'y' → logprob: -11.675471305847168

Token 2383: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017658589640632272
    2. '   ' → logprob: -6.626765727996826
    3. ' for' → logprob: -8.501766204833984
    4. '
' → logprob: -8.876766204833984
    5. '```' → logprob: -9.501766204833984
    6. '=' → logprob: -12.001766204833984
    7. '``' → logprob: -12.001766204833984
    8. 'y' → logprob: -13.001766204833984
    9. 'count' → logprob: -13.501766204833984
    10. '#' → logprob: -13.626766204833984

Token 2384: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003462390974164009
    2. '   ' → logprob: -5.753462314605713
    3. 'y' → logprob: -8.503462791442871
    4. 'fixed' → logprob: -10.003462791442871
    5. 'count' → logprob: -11.253462791442871
    6. 'total' → logprob: -11.378462791442871
    7. '
' → logprob: -12.503462791442871
    8. ' for' → logprob: -12.628462791442871
    9. '```' → logprob: -13.753462791442871
    10. '#' → logprob: -14.003462791442871

Token 2385: ' fixed' (ID: 13213)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5094070477061905e-05
    2. ' for' → logprob: -12.000015258789062
    3. 'if' → logprob: -12.750015258789062
    4. '#' → logprob: -13.000015258789062
    5. '```' → logprob: -13.500015258789062
    6. '   ' → logprob: -13.750015258789062
    7. 'y' → logprob: -14.750015258789062
    8. 'from' → logprob: -15.375015258789062
    9. '
' → logprob: -15.375015258789062
    10. 'def' → logprob: -16.375015258789062

Token 2386: '_y' (ID: 9410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004055282333865762
    2. '_bits' → logprob: -8.125405311584473
    3. '_y' → logprob: -10.125405311584473
    4. '```' → logprob: -11.000405311584473
    5. '_one' → logprob: -11.125405311584473
    6. 'ones' → logprob: -11.375405311584473
    7. '=' → logprob: -11.750405311584473
    8. '_on' → logprob: -12.375405311584473
    9. '_positions' → logprob: -12.750405311584473
    10. '1' → logprob: -13.500405311584473

Token 2387: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002520607551559806
    2. '_bits' → logprob: -6.752520561218262
    3. '=' → logprob: -6.877520561218262
    4. 'ones' → logprob: -9.002520561218262
    5. '```' → logprob: -9.752520561218262
    6. ' =' → logprob: -9.877520561218262
    7. '1' → logprob: -10.377520561218262
    8. '_one' → logprob: -11.502520561218262
    9. '_on' → logprob: -11.627520561218262
    10. '_positions' → logprob: -11.752520561218262

Token 2388: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00022988072305452079
    2. '1' → logprob: -8.750229835510254
    3. '_' → logprob: -10.375229835510254
    4. '=' → logprob: -10.500229835510254
    5. '0' → logprob: -12.500229835510254
    6. '```' → logprob: -12.500229835510254
    7. 'ons' → logprob: -13.500229835510254
    8. 'zeros' → logprob: -13.750229835510254
    9. 's' → logprob: -14.750229835510254
    10. ' =' → logprob: -15.000229835510254

Token 2389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026718929409980774
    2. ' =' → logprob: -4.276719093322754
    3. '+=' → logprob: -4.526719093322754
    4. ' +=' → logprob: -6.401719093322754
    5. '+' → logprob: -13.776719093322754
    6. '```' → logprob: -14.526719093322754
    7. '   ' → logprob: -15.651719093322754
    8. ' ' → logprob: -16.276718139648438
    9. '=
' → logprob: -16.901718139648438
    10. '.=' → logprob: -17.026718139648438

Token 2390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '=' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.375003814697266
    5. '```' → logprob: -20.750003814697266
    6. '۰' → logprob: -21.000003814697266
    7. '1' → logprob: -21.312503814697266
    8. '#' → logprob: -21.437503814697266
    9. '[' → logprob: -21.562503814697266
    10. '(' → logprob: -21.812503814697266

Token 2391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '=' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '۰' → logprob: -19.875001907348633
    6. '1' → logprob: -20.250001907348633
    7. '[' → logprob: -20.375001907348633
    8. '#' → logprob: -21.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. '{' → logprob: -21.625001907348633

Token 2392: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019128151470795274
    2. ' for' → logprob: -6.751912593841553
    3. '   ' → logprob: -7.376912593841553
    4. '```' → logprob: -9.126913070678711
    5. '#' → logprob: -12.376913070678711
    6. '``' → logprob: -13.501913070678711
    7. '	for' → logprob: -13.751913070678711
    8. '
' → logprob: -14.251913070678711
    9. 'For' → logprob: -15.501913070678711
    10. ':' → logprob: -15.876913070678711

Token 2393: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00028529210248962045
    2. '   ' → logprob: -8.625285148620605
    3. ' for' → logprob: -9.250285148620605
    4. '```' → logprob: -11.750285148620605
    5. '
' → logprob: -14.625285148620605
    6. 'def' → logprob: -14.875285148620605
    7. '#' → logprob: -15.250285148620605
    8. '``' → logprob: -15.375285148620605
    9. 'from' → logprob: -15.875285148620605
    10. '	for' → logprob: -16.000286102294922

Token 2394: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.566264295950532e-05
    2. '   ' → logprob: -9.625085830688477
    3. '```' → logprob: -12.000085830688477
    4. ' for' → logprob: -12.250085830688477
    5. 'def' → logprob: -12.375085830688477
    6. '#' (adapté à ' #') → logprob: -12.875085830688477
    7. '
' → logprob: -13.500085830688477
    8. '``' → logprob: -15.125085830688477
    9. '	for' → logprob: -16.500085830688477
    10. 'positions' → logprob: -16.750085830688477

Token 2395: ' byte' (ID: 9239)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022506495006382465
    2. '   ' → logprob: -6.127250671386719
    3. '```' → logprob: -10.627250671386719
    4. ' for' → logprob: -11.127250671386719
    5. 'def' → logprob: -11.127250671386719
    6. '
' → logprob: -12.377250671386719
    7. '#' → logprob: -12.502250671386719
    8. '``' → logprob: -13.502250671386719
    9. 'from' → logprob: -14.127250671386719
    10. 'positions' → logprob: -14.752250671386719

Token 2396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0685969814658165
    2. 'for' → logprob: -2.8185970783233643
    3. '2' → logprob: -5.818596839904785
    4. '```' → logprob: -6.443596839904785
    5. 'def' → logprob: -7.068596839904785
    6. '3' → logprob: -7.943596839904785
    7. '#' → logprob: -8.318596839904785
    8. 'b' → logprob: -8.568596839904785
    9. ' for' → logprob: -9.193596839904785
    10. '[' → logprob: -9.193596839904785

Token 2397: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003384580137208104
    2. ' for' → logprob: -6.253384590148926
    3. '   ' → logprob: -7.128384590148926
    4. 'def' → logprob: -8.128384590148926
    5. '```' → logprob: -8.753384590148926
    6. '
' → logprob: -9.128384590148926
    7. 'y' → logprob: -10.628384590148926
    8. 'i' → logprob: -11.253384590148926
    9. 'bits' → logprob: -11.378384590148926
    10. '``' → logprob: -11.878384590148926

Token 2398: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02339758723974228
    2. '   ' → logprob: -4.273397445678711
    3. '_bits' → logprob: -6.023397445678711
    4. 'i' → logprob: -6.148397445678711
    5. '
' → logprob: -6.648397445678711
    6. ' for' → logprob: -6.898397445678711
    7. 'bits' → logprob: -7.148397445678711
    8. 'pos' → logprob: -8.273397445678711
    9. '```' → logprob: -8.648397445678711
    10. 'positions' → logprob: -8.898397445678711

Token 2399: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06991130858659744
    2. '   ' → logprob: -2.819911241531372
    3. ' for' → logprob: -5.444911479949951
    4. '
' → logprob: -6.819911479949951
    5. '```' → logprob: -7.194911479949951
    6. 'def' → logprob: -7.694911479949951
    7. ' =' → logprob: -7.819911479949951
    8. 'c' → logprob: -8.194911003112793
    9. '=' → logprob: -8.694911003112793
    10. '``' → logprob: -10.069911003112793

Token 2400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011718329042196274
    2. 'for' → logprob: -4.511718273162842
    3. '```' → logprob: -7.511718273162842
    4. ' for' → logprob: -9.13671875
    5. ':' → logprob: -12.13671875
    6. '	for' → logprob: -12.63671875
    7. '``' → logprob: -12.76171875
    8. '=' → logprob: -13.76171875
    9. '
' → logprob: -14.13671875
    10. '       ' → logprob: -14.51171875

Token 2401: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004550457466393709
    2. '   ' → logprob: -5.504550457000732
    3. ' for' → logprob: -8.25455093383789
    4. '```' → logprob: -8.50455093383789
    5. '``' → logprob: -12.00455093383789
    6. '	for' → logprob: -13.00455093383789
    7. '
' → logprob: -14.62955093383789
    8. '    
' → logprob: -16.25455093383789
    9. '       ' → logprob: -16.50455093383789
    10. '`' → logprob: -16.87955093383789

Token 2402: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.029782429337501526
    2. 'i' → logprob: -3.52978253364563
    3. 'p' → logprob: -10.65478229522705
    4. 'idx' → logprob: -11.77978229522705
    5. ' pos' → logprob: -14.27978229522705
    6. ' i' → logprob: -18.154783248901367
    7. 'pi' → logprob: -18.154783248901367
    8. '(pos' → logprob: -18.279783248901367
    9. '_pos' → logprob: -18.404783248901367
    10. 'Pos' → logprob: -18.404783248901367

Token 2403: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01253496203571558
    2. ' in' → logprob: -4.387535095214844
    3. 'i' → logprob: -11.262535095214844
    4. '   ' → logprob: -12.012535095214844
    5. '
' → logprob: -12.762535095214844
    6. '```' → logprob: -14.012535095214844
    7. ' ' → logprob: -14.137535095214844
    8. ')' → logprob: -14.887535095214844
    9. '#' → logprob: -15.387535095214844
    10. '  ' → logprob: -16.012535095214844

Token 2404: ' y' (ID: 342)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5762295722961426
    2. 'y' → logprob: -0.8262295722961426
    3. ' [' → logprob: -9.076229095458984
    4. ' y' → logprob: -9.451229095458984
    5. '(' → logprob: -9.701229095458984
    6. '[y' → logprob: -11.326229095458984
    7. '   ' → logprob: -11.451229095458984
    8. '([' → logprob: -12.576229095458984
    9. 'range' → logprob: -12.951229095458984
    10. 'b' → logprob: -13.451229095458984

Token 2405: '_positions' (ID: 93193)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6205951571464539
    2. '_positions' → logprob: -0.9955951571464539
    3. 'range' → logprob: -2.9955952167510986
    4. '(' → logprob: -3.3705952167510986
    5. '1' → logprob: -5.8705949783325195
    6. 'Positions' → logprob: -6.3705949783325195
    7. '(range' → logprob: -6.4955949783325195
    8. 'b' → logprob: -7.3705949783325195
    9. 'positions' → logprob: -7.4955949783325195
    10. '3' → logprob: -8.62059497833252

Token 2406: '_b' (ID: 1535)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23722387850284576
    2. '_b' → logprob: -1.6122238636016846
    3. '[' → logprob: -4.737224102020264
    4. 'in' → logprob: -6.862224102020264
    5. '   ' → logprob: -7.612224102020264
    6. 'range' → logprob: -7.862224102020264
    7. '```' → logprob: -8.112223625183105
    8. '1' → logprob: -8.362223625183105
    9. ':
' → logprob: -8.862223625183105
    10. ':' → logprob: -9.612223625183105

Token 2407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038479414070025086
    2. '[' → logprob: -8.500384330749512
    3. 'range' → logprob: -9.250384330749512
    4. '```' → logprob: -9.750384330749512
    5. '(' → logprob: -11.125384330749512
    6. '3' → logprob: -12.375384330749512
    7. '[
' → logprob: -13.750384330749512
    8. '[-' → logprob: -14.250384330749512
    9. '[::-' → logprob: -14.625384330749512
    10. '[:' → logprob: -14.625384330749512

Token 2408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7258386611938477
    2. ':
' → logprob: -0.7258386611938477
    3. '[' → logprob: -3.6008386611938477
    4. 'in' → logprob: -6.225838661193848
    5. '   ' → logprob: -6.475838661193848
    6. '(' → logprob: -7.850838661193848
    7. '       ' → logprob: -8.600838661193848
    8. '```' → logprob: -8.725838661193848
    9. 'range' → logprob: -8.850838661193848
    10. '[::-' → logprob: -8.975838661193848

Token 2409: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04138173535466194
    2. 'c' → logprob: -3.7913818359375
    3. '       ' → logprob: -4.4163818359375
    4. '```' → logprob: -5.7913818359375
    5. ' c' → logprob: -5.9163818359375
    6. ':' → logprob: -10.0413818359375
    7. '``' → logprob: -10.5413818359375
    8. ' ' → logprob: -10.9163818359375
    9. ':c' → logprob: -11.2913818359375
    10. '	c' → logprob: -11.2913818359375

Token 2410: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.014202293008565903
    2. 'if' → logprob: -4.764202117919922
    3. '       ' → logprob: -5.514202117919922
    4. '   ' → logprob: -6.764202117919922
    5. '```' → logprob: -8.889202117919922
    6. ' c' → logprob: -9.139202117919922
    7. '{
' → logprob: -9.389202117919922
    8. 'def' → logprob: -10.639202117919922
    9. '``' → logprob: -11.889202117919922
    10. ' if' → logprob: -11.889202117919922

Token 2411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016073670238256454
    2. ' =' → logprob: -4.141073703765869
    3. '=c' → logprob: -10.766073226928711
    4. '=b' → logprob: -12.141073226928711
    5. '   ' → logprob: -12.516073226928711
    6. 'c' → logprob: -13.266073226928711
    7. 'if' → logprob: -13.266073226928711
    8. '       ' → logprob: -13.391073226928711
    9. '```' → logprob: -13.516073226928711
    10. '==' → logprob: -13.766073226928711

Token 2412: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '```' → logprob: -18.50002098083496
    5. '       ' → logprob: -19.25002098083496
    6. '	b' → logprob: -20.25002098083496
    7. '`' → logprob: -20.50002098083496
    8. '>b' → logprob: -21.37502098083496
    9. ')b' → logprob: -21.37502098083496
    10. ''b' → logprob: -21.50002098083496

Token 2413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. 'b' → logprob: -9.875052452087402
    3. '```' → logprob: -15.125052452087402
    4. '_' → logprob: -16.500051498413086
    5. ' b' → logprob: -16.500051498413086
    6. 'a' → logprob: -16.625051498413086
    7. 's' → logprob: -16.625051498413086
    8. '`' → logprob: -16.875051498413086
    9. ' ' → logprob: -16.875051498413086
    10. 'def' → logprob: -17.500051498413086

Token 2414: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00039968726923689246
    2. '[' → logprob: -7.875399589538574
    3. '[c' → logprob: -11.875399589538574
    4. 'pos' → logprob: -12.375399589538574
    5. '[
' → logprob: -12.375399589538574
    6. '[position' → logprob: -13.625399589538574
    7. '[p' → logprob: -14.250399589538574
    8. '[i' → logprob: -14.500399589538574
    9. '```' → logprob: -15.125399589538574
    10. '[len' → logprob: -15.125399589538574

Token 2415: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.013315523974597454
    2. ']' → logprob: -4.388315677642822
    3. ']==' → logprob: -8.013315200805664
    4. '       ' → logprob: -8.388315200805664
    5. ']=='' → logprob: -8.638315200805664
    6. ']
' → logprob: -10.888315200805664
    7. ']:
' → logprob: -11.263315200805664
    8. '           ' → logprob: -11.638315200805664
    9. '   ' → logprob: -12.638315200805664
    10. ']>
' → logprob: -12.638315200805664

Token 2416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007785839028656483
    2. 'if' → logprob: -5.132785797119141
    3. ' if' → logprob: -6.507785797119141
    4. '```' → logprob: -8.00778579711914
    5. '   ' → logprob: -11.38278579711914
    6. '           ' → logprob: -12.13278579711914
    7. '<|end|>' → logprob: -13.00778579711914
    8. '{
' → logprob: -13.00778579711914
    9. ':' → logprob: -13.63278579711914
    10. '``' → logprob: -13.75778579711914

Token 2417: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008552397484891117
    2. '       ' → logprob: -7.250855445861816
    3. ' if' → logprob: -8.875855445861816
    4. '```' → logprob: -12.250855445861816
    5. '           ' → logprob: -15.125855445861816
    6. '
' → logprob: -15.750855445861816
    7. '#' → logprob: -16.3758544921875
    8. '	if' → logprob: -16.6258544921875
    9. '   ' → logprob: -16.6258544921875
    10. '``' → logprob: -16.7508544921875

Token 2418: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067154900170862675
    2. ' c' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.506715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '	c' → logprob: -17.131715774536133
    6. '(c' → logprob: -17.631715774536133
    7. '  ' → logprob: -18.506715774536133
    8. ')c' → logprob: -19.506715774536133
    9. '```' → logprob: -19.631715774536133
    10. '    ' → logprob: -20.006715774536133

Token 2419: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4913880228996277
    2. ' ==' → logprob: -0.9913880228996277
    3. '=='' → logprob: -4.116387844085693
    4. ' in' → logprob: -7.866387844085693
    5. 'in' → logprob: -8.241388320922852
    6. ' =='' → logprob: -9.741388320922852
    7. '```' → logprob: -10.116388320922852
    8. ' not' → logprob: -10.116388320922852
    9. ')' → logprob: -11.491388320922852
    10. '=="' → logprob: -11.616388320922852

Token 2420: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.706686690449715e-05
    2. ''x' → logprob: -10.000066757202148
    3. ' '' → logprob: -11.875066757202148
    4. '1' → logprob: -12.250066757202148
    5. '`' → logprob: -12.750066757202148
    6. '('' → logprob: -13.000066757202148
    7. '   ' → logprob: -14.125066757202148
    8. ''y' → logprob: -14.125066757202148
    9. 'x' → logprob: -14.250066757202148
    10. '"' → logprob: -14.250066757202148

Token 2421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12710542976856232
    2. ''' → logprob: -2.127105474472046
    3. 'x' → logprob: -9.377105712890625
    4. ''x' → logprob: -9.752105712890625
    5. '0' → logprob: -11.002105712890625
    6. '`' → logprob: -12.627105712890625
    7. '"' → logprob: -12.752105712890625
    8. ' ' → logprob: -13.127105712890625
    9. ' '' → logprob: -13.127105712890625
    10. '('' → logprob: -13.377105712890625

Token 2422: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6262034177780151
    2. '':
' → logprob: -0.8762034177780151
    3. '           ' → logprob: -3.2512035369873047
    4. ':' → logprob: -5.001203536987305
    5. '       ' → logprob: -6.751203536987305
    6. '):
' → logprob: -6.876203536987305
    7. '':' → logprob: -7.126203536987305
    8. ''):
' → logprob: -8.251203536987305
    9. '          ' → logprob: -8.876203536987305
    10. ''' → logprob: -10.126203536987305

Token 2423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012594614236149937
    2. '```' → logprob: -10.000125885009766
    3. 'fixed' → logprob: -10.000125885009766
    4. '       ' → logprob: -11.250125885009766
    5. '               ' → logprob: -12.250125885009766
    6. ' fixed' → logprob: -12.375125885009766
    7. '          ' → logprob: -12.625125885009766
    8. '``' → logprob: -12.875125885009766
    9. 'if' → logprob: -13.750125885009766
    10. '         ' → logprob: -13.750125885009766

Token 2424: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.017691880464553833
    2. ' fixed' → logprob: -4.7676920890808105
    3. '           ' → logprob: -5.1426920890808105
    4. '       ' → logprob: -5.7676920890808105
    5. '```' → logprob: -10.642691612243652
    6. '   ' → logprob: -10.767691612243652
    7. '``' → logprob: -11.892691612243652
    8. '.fixed' → logprob: -12.517691612243652
    9. '
' → logprob: -12.767691612243652
    10. '+' → logprob: -13.392691612243652

Token 2425: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -6.706686690449715e-05
    2. 'y' → logprob: -9.625066757202148
    3. '_' → logprob: -14.500066757202148
    4. '   ' → logprob: -15.375066757202148
    5. '	y' → logprob: -17.37506675720215
    6. '_x' → logprob: -17.62506675720215
    7. '```' → logprob: -17.62506675720215
    8. '=' → logprob: -17.87506675720215
    9. ')' → logprob: -18.12506675720215
    10. 's' → logprob: -18.37506675720215

Token 2426: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00030566859641112387
    2. 'ones' → logprob: -8.125306129455566
    3. '_bits' → logprob: -12.750306129455566
    4. '=' → logprob: -13.875306129455566
    5. '
' → logprob: -14.250306129455566
    6. 'bits' → logprob: -14.250306129455566
    7. '1' → logprob: -14.375306129455566
    8. '_one' → logprob: -14.750306129455566
    9. '+' → logprob: -14.875306129455566
    10. '#' → logprob: -14.875306129455566

Token 2427: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -2.1008713702030946e-06
    2. 'one' → logprob: -14.000001907348633
    3. '1' → logprob: -14.375001907348633
    4. ' ones' → logprob: -14.750001907348633
    5. '_' → logprob: -16.125001907348633
    6. '```' → logprob: -16.750001907348633
    7. '0' → logprob: -17.250001907348633
    8. 'ONES' → logprob: -17.625001907348633
    9. 'ons' → logprob: -17.875001907348633
    10. '.ones' → logprob: -18.000001907348633

Token 2428: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03806077316403389
    2. ' +=' → logprob: -3.2880606651306152
    3. '=' → logprob: -11.038061141967773
    4. '   ' → logprob: -13.913061141967773
    5. '       ' → logprob: -14.163061141967773
    6. '           ' → logprob: -14.413061141967773
    7. ']+=' → logprob: -14.663061141967773
    8. '+' → logprob: -15.413061141967773
    9. '```' → logprob: -15.788061141967773
    10. ' =' → logprob: -16.663061141967773

Token 2429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -18.75
    4. '<|end|>' → logprob: -20.5
    5. '１' → logprob: -21.5
    6. '>' → logprob: -21.875
    7. '۱' → logprob: -22.0
    8. '=' → logprob: -22.125
    9. '+' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 2430: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01910964958369732
    2. 'y' → logprob: -4.269109725952148
    3. '       ' → logprob: -6.144109725952148
    4. '```' → logprob: -6.269109725952148
    5. ' y' → logprob: -7.519109725952148
    6. '<|end|>' → logprob: -8.769109725952148
    7. ',y' → logprob: -10.144109725952148
    8. '``' → logprob: -10.394109725952148
    9. '               ' → logprob: -10.519109725952148
    10. '
' → logprob: -11.144109725952148

Token 2431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052366871386766434
    2. '       ' → logprob: -3.0523669719696045
    3. '```' → logprob: -5.802366733551025
    4. ' y' → logprob: -8.427367210388184
    5. 'y' → logprob: -8.802367210388184
    6. '<|end|>' → logprob: -9.052367210388184
    7. '   ' → logprob: -10.052367210388184
    8. 'continue' → logprob: -10.427367210388184
    9. ',y' → logprob: -10.552367210388184
    10. '          ' → logprob: -10.677367210388184

Token 2432: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -9.088346359931165e-07
    2. '           ' → logprob: -14.500000953674316
    3. ' y' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375
    5. '       ' → logprob: -16.5
    6. ''y' → logprob: -19.5
    7. '1' → logprob: -19.625
    8. '   ' → logprob: -19.625
    9. '
' → logprob: -19.625
    10. 'y's' → logprob: -19.875

Token 2433: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.00010199354437645525
    2. 'bits' → logprob: -9.250102043151855
    3. '_positions' → logprob: -12.625102043151855
    4. 'Bits' → logprob: -14.250102043151855
    5. '_BITS' → logprob: -14.625102043151855
    6. '.append' → logprob: -14.875102043151855
    7. '[' → logprob: -15.375102043151855
    8. '
' → logprob: -15.875102043151855
    9. '```' → logprob: -15.875102043151855
    10. 'append' → logprob: -16.75010108947754

Token 2434: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.025856172665953636
    2. '.append' → logprob: -3.7758562564849854
    3. 'append' → logprob: -6.275856018066406
    4. 'list' → logprob: -7.775856018066406
    5. '_bits' → logprob: -8.275856018066406
    6. 'bits' → logprob: -11.275856018066406
    7. '=' → logprob: -11.900856018066406
    8. '_vals' → logprob: -12.025856018066406
    9. '+=' → logprob: -12.400856018066406
    10. '_append' → logprob: -12.525856018066406

Token 2435: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002639582962729037
    2. '.' → logprob: -8.250264167785645
    3. 'append' → logprob: -12.875264167785645
    4. ' .' → logprob: -16.500263214111328
    5. '_append' → logprob: -17.375263214111328
    6. '.extend' → logprob: -17.750263214111328
    7. '.Append' → logprob: -18.000263214111328
    8. '.ap' → logprob: -18.375263214111328
    9. '.app' → logprob: -18.375263214111328
    10. 'Append' → logprob: -18.500263214111328

Token 2436: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078639671206474
    2. '(' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.62907886505127
    4. '   ' → logprob: -17.379077911376953
    5. ' (' → logprob: -18.129077911376953
    6. '[' → logprob: -18.504077911376953
    7. '```' → logprob: -18.629077911376953
    8. '(
' → logprob: -19.004077911376953
    9. '`' → logprob: -19.004077911376953
    10. '0' → logprob: -19.379077911376953

Token 2437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.0
    4. '`' → logprob: -20.375
    5. '(' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. '１' → logprob: -21.625
    8. '۱' → logprob: -21.6875
    9. '0' → logprob: -21.75
    10. '  ' → logprob: -21.75

Token 2438: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6938300132751465
    2. ')
' → logprob: -0.6938300132751465
    3. '       ' → logprob: -7.3188300132751465
    4. '   ' → logprob: -12.318830490112305
    5. ')
' → logprob: -12.443830490112305
    6. '```' → logprob: -12.693830490112305
    7. '           ' → logprob: -13.443830490112305
    8. '
' → logprob: -13.693830490112305
    9. '')
' → logprob: -13.818830490112305
    10. '<|end|>' → logprob: -14.068830490112305

Token 2439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006529859383590519
    2. 'elif' → logprob: -8.125653266906738
    3. '```' → logprob: -8.250653266906738
    4. '<|end|>' → logprob: -9.500653266906738
    5. '   ' → logprob: -11.875653266906738
    6. '``' → logprob: -12.625653266906738
    7. '           ' → logprob: -13.125653266906738
    8. 'continue' → logprob: -13.250653266906738
    9. '
' → logprob: -13.375653266906738
    10. '...' → logprob: -14.000653266906738

Token 2440: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18033495545387268
    2. 'elif' (adapté à ' elif') → logprob: -1.8053349256515503
    3. '```' → logprob: -8.43033504486084
    4. '
' → logprob: -8.68033504486084
    5. '   ' → logprob: -8.80533504486084
    6. ' elif' → logprob: -10.43033504486084
    7. '	elif' → logprob: -12.05533504486084
    8. 'def' → logprob: -13.05533504486084
    9. ')' → logprob: -13.05533504486084
    10. '#elif' → logprob: -13.18033504486084

Token 2441: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004882152716163546
    2. ' c' → logprob: -7.62548828125
    3. ''' → logprob: -16.62548828125
    4. ')c' → logprob: -18.25048828125
    5. '	c' → logprob: -18.37548828125
    6. '0' → logprob: -18.37548828125
    7. '           ' → logprob: -18.50048828125
    8. ' ' → logprob: -18.62548828125
    9. '       ' → logprob: -18.87548828125
    10. '(c' → logprob: -19.12548828125

Token 2442: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018238557502627373
    2. ' ==' → logprob: -4.018238544464111
    3. '=='' → logprob: -9.39323902130127
    4. '=' → logprob: -13.39323902130127
    5. '==
' → logprob: -13.51823902130127
    6. ' in' → logprob: -14.26823902130127
    7. 'in' → logprob: -14.89323902130127
    8. '[' → logprob: -15.14323902130127
    9. ']==' → logprob: -15.26823902130127
    10. '=="' → logprob: -15.39323902130127

Token 2443: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000249061529757455
    2. ' '' → logprob: -8.750248908996582
    3. '0' → logprob: -10.250248908996582
    4. '`' → logprob: -10.500248908996582
    5. '('' → logprob: -10.875248908996582
    6. ' ' → logprob: -12.875248908996582
    7. '"' → logprob: -13.375248908996582
    8. '['' → logprob: -13.750248908996582
    9. '```' → logprob: -14.375248908996582
    10. '‘' → logprob: -14.750248908996582

Token 2444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003187459195032716
    2. ''' → logprob: -5.753187656402588
    3. ' ' → logprob: -12.00318717956543
    4. ''x' → logprob: -13.50318717956543
    5. 'x' → logprob: -14.12818717956543
    6. '`' → logprob: -14.62818717956543
    7. ' '' → logprob: -14.75318717956543
    8. '"' → logprob: -15.87818717956543
    9. '('' → logprob: -16.75318717956543
    10. '1' → logprob: -16.75318717956543

Token 2445: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18510018289089203
    2. ':' → logprob: -3.0601000785827637
    3. '):
' → logprob: -3.1851000785827637
    4. '       ' → logprob: -3.4351000785827637
    5. '==' → logprob: -4.060100078582764
    6. ')' → logprob: -4.935100078582764
    7. '           ' → logprob: -5.310100078582764
    8. '<|end|>' → logprob: -5.310100078582764
    9. '[' → logprob: -5.560100078582764
    10. '':
' → logprob: -6.060100078582764

Token 2446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4290425479412079
    2. '```' → logprob: -1.4290425777435303
    3. '       ' → logprob: -2.3040425777435303
    4. ':' → logprob: -5.804042339324951
    5. '``' → logprob: -6.304042339324951
    6. ':
' → logprob: -6.929042339324951
    7. '[' → logprob: -7.054042339324951
    8. '<|end|>' → logprob: -7.179042339324951
    9. '0' → logprob: -7.929042339324951
    10. '          ' → logprob: -8.05404281616211

Token 2447: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028449371457099915
    2. 'y' (adapté à ' y') → logprob: -6.00284481048584
    3. ' y' → logprob: -8.00284481048584
    4. ' ' → logprob: -11.00284481048584
    5. '       ' → logprob: -11.62784481048584
    6. '```' → logprob: -12.37784481048584
    7. '           ' → logprob: -13.12784481048584
    8. '[' → logprob: -14.25284481048584
    9. '(y' → logprob: -14.87784481048584
    10. '        ' → logprob: -15.12784481048584

Token 2448: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -4.811348480870947e-05
    2. 'bits' → logprob: -10.37504768371582
    3. '=' → logprob: -11.25004768371582
    4. 'Bits' → logprob: -13.25004768371582
    5. '```' → logprob: -14.75004768371582
    6. '_BITS' → logprob: -14.87504768371582
    7. 's' → logprob: -15.62504768371582
    8. '_list' → logprob: -15.75004768371582
    9. '
' → logprob: -15.75004768371582
    10. ' =' → logprob: -16.00004768371582

Token 2449: '_list' (ID: 4162)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.3887670636177063
    2. '_list' → logprob: -1.1387670040130615
    3. '.append' → logprob: -6.388767242431641
    4. 'bits' → logprob: -9.26376724243164
    5. '=' → logprob: -10.01376724243164
    6. 'append' → logprob: -10.26376724243164
    7. 'list' → logprob: -11.13876724243164
    8. '_append' → logprob: -12.01376724243164
    9. 's' → logprob: -12.38876724243164
    10. '_lists' → logprob: -13.01376724243164

Token 2450: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013723729643970728
    2. 'append' → logprob: -6.626372337341309
    3. '.' → logprob: -10.376372337341309
    4. '=' → logprob: -11.876372337341309
    5. '_append' → logprob: -12.501372337341309
    6. '+=' → logprob: -13.501372337341309
    7. 'Append' → logprob: -13.876372337341309
    8. ' append' → logprob: -14.626372337341309
    9. '.Append' → logprob: -14.876372337341309
    10. '0' → logprob: -15.501372337341309

Token 2451: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. ' ' → logprob: -16.500431060791016
    4. ' (' → logprob: -19.625431060791016
    5. '۰' → logprob: -19.625431060791016
    6. '[' → logprob: -20.750431060791016
    7. '```' → logprob: -21.375431060791016
    8. '   ' → logprob: -21.375431060791016
    9. '(
' → logprob: -22.500431060791016
    10. '０' → logprob: -22.625431060791016

Token 2452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -18.625
    4. '   ' → logprob: -20.125
    5. '=' → logprob: -20.625
    6. ')' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. '[' → logprob: -21.1875
    9. '(' → logprob: -21.4375
    10. '1' → logprob: -21.5625

Token 2453: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5147963166236877
    2. ')' → logprob: -1.389796257019043
    3. ')
' → logprob: -1.889796257019043
    4. '```' → logprob: -7.139796257019043
    5. '<|end|>' → logprob: -7.514796257019043
    6. '   ' → logprob: -7.764796257019043
    7. '')' → logprob: -9.389796257019043
    8. '
' → logprob: -9.639796257019043
    9. '           ' → logprob: -9.639796257019043
    10. '``' → logprob: -10.014796257019043

Token 2454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05548592656850815
    2. '```' → logprob: -2.930485963821411
    3. '``' → logprob: -8.180485725402832
    4. '<|end|>' → logprob: -8.930485725402832
    5. 'elif' → logprob: -9.555485725402832
    6. 'else' → logprob: -9.805485725402832
    7. '
' → logprob: -11.305485725402832
    8. '   ' → logprob: -11.430485725402832
    9. '#' → logprob: -11.430485725402832
    10. ')' → logprob: -11.805485725402832

Token 2455: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1246747076511383
    2. 'else' (adapté à ' else') → logprob: -2.2496747970581055
    3. 'elif' → logprob: -4.4996747970581055
    4. '```' → logprob: -8.124674797058105
    5. ' else' → logprob: -8.249674797058105
    6. '   ' → logprob: -9.624674797058105
    7. '
' → logprob: -11.124674797058105
    8. ' elif' → logprob: -11.374674797058105
    9. '<|end|>' → logprob: -12.499674797058105
    10. ' ' → logprob: -12.874674797058105

Token 2456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40559491515159607
    2. '           ' → logprob: -1.6555949449539185
    3. '==' → logprob: -2.780594825744629
    4. ' ==' → logprob: -2.780594825744629
    5. ':
' → logprob: -4.280594825744629
    6. '       ' → logprob: -6.280594825744629
    7. '          ' → logprob: -7.530594825744629
    8. '=' → logprob: -7.655594825744629
    9. '=='' → logprob: -8.030594825744629
    10. ' =' → logprob: -8.280594825744629

Token 2457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008988813497126102
    2. 'x' → logprob: -5.508988857269287
    3. '```' → logprob: -5.758988857269287
    4. ' x' → logprob: -7.008988857269287
    5. '          ' → logprob: -8.508988380432129
    6. '       ' → logprob: -9.258988380432129
    7. '   ' → logprob: -9.508988380432129
    8. '-' → logprob: -9.633988380432129
    9. '<|end|>' → logprob: -9.883988380432129
    10. '{
' → logprob: -10.008988380432129

Token 2458: ' y' (ID: 342)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07058682292699814
    2. 'y' (adapté à ' y') → logprob: -2.945586919784546
    3. '           ' → logprob: -4.445586681365967
    4. 'x' → logprob: -6.320586681365967
    5. ' -' → logprob: -7.070586681365967
    6. '```' → logprob: -7.695586681365967
    7. ' y' → logprob: -7.820586681365967
    8. '(-' → logprob: -9.070587158203125
    9. '-y' → logprob: -9.320587158203125
    10. '       ' → logprob: -10.195587158203125

Token 2459: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.00024477019906044006
    2. 'bits' → logprob: -9.125245094299316
    3. '=' → logprob: -9.625245094299316
    4. '[-' → logprob: -11.125245094299316
    5. '```' → logprob: -11.500245094299316
    6. 'x' → logprob: -11.875245094299316
    7. 'Bits' → logprob: -12.000245094299316
    8. '_BITS' → logprob: -12.375245094299316
    9. '_x' → logprob: -12.625245094299316
    10. '==' → logprob: -12.875245094299316

Token 2460: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.555654105497524e-05
    2. 'List' → logprob: -10.37509536743164
    3. '_bits' → logprob: -10.50009536743164
    4. 'bits' → logprob: -10.75009536743164
    5. 'list' → logprob: -11.25009536743164
    6. '_lists' → logprob: -14.25009536743164
    7. '_LIST' → logprob: -15.12509536743164
    8. '-list' → logprob: -15.50009536743164
    9. '           ' → logprob: -15.50009536743164
    10. '```' → logprob: -15.62509536743164

Token 2461: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010070850839838386
    2. '=' → logprob: -7.626007080078125
    3. 'append' → logprob: -7.876007080078125
    4. '```' → logprob: -10.251007080078125
    5. '           ' → logprob: -10.376007080078125
    6. '_append' → logprob: -10.626007080078125
    7. ' =' → logprob: -11.376007080078125
    8. '.' → logprob: -11.501007080078125
    9. 'Append' → logprob: -11.751007080078125
    10. '=-' → logprob: -12.251007080078125

Token 2462: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.06199637055397034
    2. '-' → logprob: -2.8119964599609375
    3. ' -' → logprob: -10.561996459960938
    4. '(' → logprob: -13.561996459960938
    5. '[-' → logprob: -13.561996459960938
    6. ' (-' → logprob: -15.936996459960938
    7. '```' → logprob: -16.811996459960938
    8. '(
' → logprob: -18.561996459960938
    9. '   ' → logprob: -18.561996459960938
    10. '{-' → logprob: -18.936996459960938

Token 2463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '<|end|>' → logprob: -15.125000953674316
    3. ' ' → logprob: -16.0
    4. '<|end|>' → logprob: -16.5
    5. '```' → logprob: -16.875
    6. '۱' → logprob: -18.3125
    7. '...' → logprob: -18.625
    8. ')' → logprob: -18.6875
    9. '[' → logprob: -19.0625
    10. '१' → logprob: -19.25

Token 2464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004575496073812246
    2. '<|end|>' → logprob: -5.629575729370117
    3. ')
' → logprob: -7.629575729370117
    4. '           ' → logprob: -8.254575729370117
    5. '<|end|>' → logprob: -9.504575729370117
    6. '       ' → logprob: -10.004575729370117
    7. '```' → logprob: -10.504575729370117
    8. '   ' → logprob: -11.004575729370117
    9. '')' → logprob: -11.629575729370117
    10. ')return' → logprob: -11.629575729370117

Token 2465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009813699871301651
    2. '```' → logprob: -4.7598137855529785
    3. '<|end|>' → logprob: -7.2598137855529785
    4. '``' → logprob: -8.75981330871582
    5. '       ' → logprob: -9.50981330871582
    6. ':
' → logprob: -9.75981330871582
    7. '{
' → logprob: -10.50981330871582
    8. ':' → logprob: -10.50981330871582
    9. '<|end|>' → logprob: -10.63481330871582
    10. '		' → logprob: -10.63481330871582

Token 2466: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.01529561635106802
    2. '           ' → logprob: -4.515295505523682
    3. ' unknown' → logprob: -5.515295505523682
    4. '```' → logprob: -8.76529598236084
    5. 'Unknown' → logprob: -10.51529598236084
    6. '
' → logprob: -12.01529598236084
    7. '               ' → logprob: -12.14029598236084
    8. '``' → logprob: -12.39029598236084
    9. '1' → logprob: -12.51529598236084
    10. '_unknown' → logprob: -12.89029598236084

Token 2467: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.5822400857578032e-05
    2. 'y' → logprob: -10.625025749206543
    3. '```' → logprob: -14.625025749206543
    4. '_x' → logprob: -14.750025749206543
    5. '_' → logprob: -15.250025749206543
    6. 's' → logprob: -16.50002670288086
    7. '=' → logprob: -16.50002670288086
    8. 'Y' → logprob: -17.00002670288086
    9. '0' → logprob: -17.50002670288086
    10. '1' → logprob: -17.75002670288086

Token 2468: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08013874292373657
    2. ' +=' → logprob: -2.580138683319092
    3. '=' → logprob: -6.705138683319092
    4. '```' → logprob: -11.45513916015625
    5. ']+=' → logprob: -12.33013916015625
    6. ' =' → logprob: -12.95513916015625
    7. '+' → logprob: -13.33013916015625
    8. '           ' → logprob: -13.45513916015625
    9. '<|end|>' → logprob: -13.83013916015625
    10. '   ' → logprob: -14.33013916015625

Token 2469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '=' → logprob: -17.625
    4. '<|end|>' → logprob: -17.75
    5. '```' → logprob: -18.75
    6. '<|end|>' → logprob: -20.25
    7. '+' → logprob: -20.5
    8. '۱' → logprob: -21.25
    9. '0' → logprob: -21.25
    10. '...' → logprob: -22.0

Token 2470: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6955311894416809
    2. '```' → logprob: -1.0705311298370361
    3. '       ' → logprob: -2.445531129837036
    4. '
' → logprob: -2.820531129837036
    5. '           ' → logprob: -4.695531368255615
    6. '``' → logprob: -6.070531368255615
    7. 'for' → logprob: -8.195530891418457
    8. 'if' → logprob: -9.570530891418457
    9. '#' → logprob: -9.820530891418457
    10. '<|end|>' → logprob: -9.820530891418457

Token 2471: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5704143643379211
    2. '   ' → logprob: -1.0704143047332764
    3. 'for' → logprob: -4.0704145431518555
    4. '
' → logprob: -4.1954145431518555
    5. '       ' → logprob: -4.3204145431518555
    6. '<|end|>' → logprob: -4.4454145431518555
    7. 'if' → logprob: -4.9454145431518555
    8. '           ' → logprob: -5.3204145431518555
    9. '``' → logprob: -5.5704145431518555
    10. '#' → logprob: -5.5704145431518555

Token 2472: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027980005368590355
    2. '   ' → logprob: -3.777980089187622
    3. ' for' → logprob: -6.152979850769043
    4. '```' → logprob: -6.527979850769043
    5. '
' → logprob: -7.027979850769043
    6. 'from' → logprob: -9.277979850769043
    7. '#' (adapté à ' #') → logprob: -9.777979850769043
    8. '``' → logprob: -10.277979850769043
    9. 'For' → logprob: -10.527979850769043
    10. 'if' → logprob: -11.277979850769043

Token 2473: ' byte' (ID: 9239)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1200537383556366
    2. 'for' → logprob: -2.245053768157959
    3. 'pos' → logprob: -5.745053768157959
    4. 'if' → logprob: -6.245053768157959
    5. '   ' → logprob: -7.620053768157959
    6. 'b' → logprob: -7.745053768157959
    7. '#' → logprob: -7.870053768157959
    8. 'For' → logprob: -7.995053768157959
    9. '```' → logprob: -8.7450532913208
    10. '
' → logprob: -9.4950532913208

Token 2474: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009889844805002213
    2. '3' → logprob: -7.750988960266113
    3. 'b' → logprob: -8.125988960266113
    4. '```' → logprob: -8.750988960266113
    5. '
' → logprob: -11.000988960266113
    6. '   ' → logprob: -11.250988960266113
    7. '`' → logprob: -11.375988960266113
    8. '``' → logprob: -11.500988960266113
    9. '#' → logprob: -11.625988960266113
    10. 'positions' → logprob: -11.875988960266113

Token 2475: ' y' (ID: 342)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1264808177947998
    2. '
' → logprob: -3.6264808177948
    3. 'for' → logprob: -3.6264808177948
    4. '_pos' → logprob: -3.6264808177948
    5. '[pos' → logprob: -4.501481056213379
    6. 'c' → logprob: -4.876481056213379
    7. '   ' → logprob: -5.376481056213379
    8. '[' → logprob: -5.876481056213379
    9. 'def' → logprob: -6.126481056213379
    10. 'bit' → logprob: -6.501481056213379

Token 2476: ' bit' (ID: 3546)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.6165246367454529
    2. 'pos' → logprob: -1.4915246963500977
    3. 'bits' → logprob: -1.9915246963500977
    4. '[' → logprob: -2.7415246963500977
    5. '[pos' → logprob: -4.741524696350098
    6. '_positions' → logprob: -4.741524696350098
    7. '_list' → logprob: -5.491524696350098
    8. 'positions' → logprob: -5.866524696350098
    9. 'list' → logprob: -6.241524696350098
    10. '.append' → logprob: -6.366524696350098

Token 2477: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.21250957250595093
    2. '_pos' → logprob: -2.3375096321105957
    3. '   ' → logprob: -3.7125096321105957
    4. ' =' → logprob: -4.337509632110596
    5. 'c' → logprob: -4.462509632110596
    6. '=' → logprob: -5.087509632110596
    7. '```' → logprob: -5.087509632110596
    8. '.append' → logprob: -5.212509632110596
    9. '_index' → logprob: -5.337509632110596
    10. '_idx' → logprob: -5.837509632110596

Token 2478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5611349940299988
    2. '```' → logprob: -1.1861350536346436
    3. '
' → logprob: -3.0611350536346436
    4. ' =' → logprob: -4.0611348152160645
    5. 'for' → logprob: -4.0611348152160645
    6. '.append' → logprob: -4.4361348152160645
    7. '``' → logprob: -4.4361348152160645
    8. '=' → logprob: -5.5611348152160645
    9. ' for' → logprob: -5.9361348152160645
    10. '       ' → logprob: -5.9361348152160645

Token 2479: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.05946938320994377
    2. '```' → logprob: -2.93446946144104
    3. '   ' → logprob: -6.309469223022461
    4. '``' → logprob: -6.809469223022461
    5. 'b' → logprob: -7.684469223022461
    6. ' c' → logprob: -7.684469223022461
    7. '
' → logprob: -7.934469223022461
    8. '{
' → logprob: -8.559469223022461
    9. 'for' → logprob: -9.434469223022461
    10. '`' → logprob: -10.309469223022461

Token 2480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012787687592208385
    2. '=b' → logprob: -5.012787818908691
    3. ' =' → logprob: -5.137787818908691
    4. 'b' → logprob: -8.637787818908691
    5. '=
' → logprob: -13.262787818908691
    6. '=c' → logprob: -13.512787818908691
    7. ' b' → logprob: -14.512787818908691
    8. '=`' → logprob: -14.762787818908691
    9. 's' → logprob: -15.137787818908691
    10. '```' → logprob: -15.262787818908691

Token 2481: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.125261306762695
    4. '	b' → logprob: -21.750261306762695
    5. ' ' → logprob: -22.125261306762695
    6. '`' → logprob: -22.125261306762695
    7. '```' → logprob: -22.500261306762695
    8. ''b' → logprob: -23.500261306762695
    9. '(b' → logprob: -24.125261306762695
    10. '  ' → logprob: -24.375261306762695

Token 2482: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10038113594055176
    2. 'b' → logprob: -2.3503811359405518
    3. '[' → logprob: -9.225380897521973
    4. '```' → logprob: -9.850380897521973
    5. ' b' → logprob: -11.850380897521973
    6. '   ' → logprob: -11.975380897521973
    7. '[b' → logprob: -12.100380897521973
    8. '`' → logprob: -13.975380897521973
    9. '[
' → logprob: -14.600380897521973
    10. '₂' → logprob: -15.225380897521973

Token 2483: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7133641196996905e-05
    2. '2' → logprob: -11.25002670288086
    3. '   ' → logprob: -11.62502670288086
    4. '```' → logprob: -12.87502670288086
    5. '[
' → logprob: -13.50002670288086
    6. '3' → logprob: -14.62502670288086
    7. ' [' → logprob: -15.62502670288086
    8. '5' → logprob: -16.00002670288086
    9. '       ' → logprob: -16.37502670288086
    10. '`' → logprob: -16.75002670288086

Token 2484: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003887719241902232
    2. '5' → logprob: -5.75388765335083
    3. '[' → logprob: -7.62888765335083
    4. '4' → logprob: -8.753888130187988
    5. '   ' → logprob: -10.878888130187988
    6. '```' → logprob: -11.628888130187988
    7. 'pos' → logprob: -11.628888130187988
    8. ' ' → logprob: -11.753888130187988
    9. '0' → logprob: -11.878888130187988
    10. '3' → logprob: -13.003888130187988

Token 2485: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6626096963882446
    2. ']
' → logprob: -1.2876096963882446
    3. '<|end|>' → logprob: -3.162609577178955
    4. '   ' → logprob: -3.287609577178955
    5. ')' → logprob: -3.287609577178955
    6. ')
' → logprob: -3.662609577178955
    7. '
' → logprob: -4.037609577178955
    8. 'if' → logprob: -4.287609577178955
    9. ']==' → logprob: -5.162609577178955
    10. '<|end|>' → logprob: -5.287609577178955

Token 2486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14131855964660645
    2. 'if' → logprob: -2.6413185596466064
    3. '       ' → logprob: -3.6413185596466064
    4. ' if' → logprob: -3.8913185596466064
    5. '```' → logprob: -4.891318321228027
    6. '=' → logprob: -5.766318321228027
    7. '
' → logprob: -6.766318321228027
    8. ' =' → logprob: -7.766318321228027
    9. ':
' → logprob: -7.891318321228027
    10. '==' → logprob: -8.016318321228027

Token 2487: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.041914016008377075
    2. '   ' → logprob: -4.041913986206055
    3. ' if' → logprob: -4.291913986206055
    4. '       ' → logprob: -4.916913986206055
    5. '```' → logprob: -6.541913986206055
    6. '	if' → logprob: -7.416913986206055
    7. '
' → logprob: -8.166913986206055
    8. '{
' → logprob: -10.541913986206055
    9. '``' → logprob: -10.791913986206055
    10. '           ' → logprob: -10.791913986206055

Token 2488: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008709636749699712
    2. ' c' → logprob: -7.500871181488037
    3. 'b' → logprob: -8.125870704650879
    4. '   ' → logprob: -11.250870704650879
    5. ''' → logprob: -11.875870704650879
    6. ' ' → logprob: -14.750870704650879
    7. ' b' → logprob: -14.875870704650879
    8. '```' → logprob: -15.250870704650879
    9. '(c' → logprob: -16.000871658325195
    10. '    ' → logprob: -16.250871658325195

Token 2489: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14668430387973785
    2. ' ==' → logprob: -2.521684408187866
    3. '=='' → logprob: -2.896684408187866
    4. '==-' → logprob: -8.146684646606445
    5. ')' → logprob: -8.646684646606445
    6. '==
' → logprob: -9.271684646606445
    7. ')==' → logprob: -9.521684646606445
    8. ']==' → logprob: -9.896684646606445
    9. ' =='' → logprob: -10.146684646606445
    10. '```' → logprob: -10.271684646606445

Token 2490: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06263390183448792
    2. ''x' → logprob: -2.812633991241455
    3. ' '' → logprob: -7.812633991241455
    4. '-' → logprob: -9.187633514404297
    5. ''y' → logprob: -9.437633514404297
    6. ''-' → logprob: -11.062633514404297
    7. '1' → logprob: -11.062633514404297
    8. '('' → logprob: -12.187633514404297
    9. ''in' → logprob: -12.187633514404297
    10. ' ' → logprob: -12.437633514404297

Token 2491: '1' (ID: 16)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0012388024479150772
    2. 'x' → logprob: -6.751238822937012
    3. '1' → logprob: -10.251238822937012
    4. '"x' → logprob: -11.251238822937012
    5. ''' → logprob: -11.626238822937012
    6. '-x' → logprob: -13.001238822937012
    7. '-' → logprob: -13.251238822937012
    8. ' '' → logprob: -14.001238822937012
    9. '['' → logprob: -14.251238822937012
    10. '')' → logprob: -14.376238822937012

Token 2492: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.007108540274202824
    2. ':
' → logprob: -5.632108688354492
    3. '':' → logprob: -6.382108688354492
    4. ''' → logprob: -6.882108688354492
    5. '):
' → logprob: -7.632108688354492
    6. ':' → logprob: -8.882108688354492
    7. ''):
' → logprob: -9.507108688354492
    8. '       ' → logprob: -10.382108688354492
    9. ')' → logprob: -10.882108688354492
    10. '   ' → logprob: -11.257108688354492

Token 2493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021295640617609024
    2. '           ' → logprob: -6.252129554748535
    3. '<|end|>' → logprob: -9.127129554748535
    4. '   ' → logprob: -10.127129554748535
    5. '```' → logprob: -10.877129554748535
    6. ':
' → logprob: -11.627129554748535
    7. ' ' → logprob: -12.127129554748535
    8. '        
' → logprob: -13.127129554748535
    9. '{
' → logprob: -13.252129554748535
    10. '      ' → logprob: -13.502129554748535

Token 2494: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.20441071689128876
    2. '       ' → logprob: -1.7044106721878052
    3. ' fixed' → logprob: -6.079410552978516
    4. '           ' → logprob: -7.579410552978516
    5. '```' → logprob: -9.204410552978516
    6. '   ' → logprob: -9.579410552978516
    7. '``' → logprob: -11.829410552978516
    8. 'Fixed' → logprob: -12.329410552978516
    9. '.fixed' → logprob: -12.454410552978516
    10. '
' → logprob: -13.454410552978516

Token 2495: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -6.704273118884885e-07
    2. 'y' → logprob: -14.750000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_fixed' → logprob: -17.375
    5. '_x' → logprob: -18.125
    6. '_you' → logprob: -18.875
    7. '_yes' → logprob: -19.0
    8. '\' → logprob: -19.375
    9. '_z' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 2496: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000623918604105711
    2. '_y' → logprob: -7.87562370300293
    3. 'ones' → logprob: -8.37562370300293
    4. 'y' → logprob: -12.25062370300293
    5. '```' → logprob: -12.50062370300293
    6. '_one' → logprob: -14.25062370300293
    7. '+' → logprob: -14.62562370300293
    8. '``' → logprob: -14.62562370300293
    9. '_bits' → logprob: -14.62562370300293
    10. '1' → logprob: -14.75062370300293

Token 2497: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -6.988221684878226e-06
    2. ' ones' → logprob: -13.000006675720215
    3. '_' → logprob: -13.125006675720215
    4. 'one' → logprob: -13.875006675720215
    5. 'ons' → logprob: -14.375006675720215
    6. '1' → logprob: -15.250006675720215
    7. '
' → logprob: -15.250006675720215
    8. 'ONES' → logprob: -15.500006675720215
    9. '```' → logprob: -16.25000762939453
    10. '.ones' → logprob: -16.50000762939453

Token 2498: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6935158967971802
    2. '+=' → logprob: -0.6935158967971802
    3. '       ' → logprob: -8.06851577758789
    4. '   ' → logprob: -10.31851577758789
    5. ']+=' → logprob: -11.69351577758789
    6. '           ' → logprob: -11.69351577758789
    7. '      ' → logprob: -13.56851577758789
    8. '```' → logprob: -13.69351577758789
    9. '        ' → logprob: -14.06851577758789
    10. '    ' → logprob: -14.31851577758789

Token 2499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -18.875
    4. 'count' → logprob: -20.625
    5. '<|end|>' → logprob: -20.875
    6. '+' → logprob: -21.0
    7. '=' → logprob: -21.25
    8. '   ' → logprob: -21.375
    9. '`' → logprob: -21.5
    10. '0' → logprob: -21.875

Token 2500: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3930208384990692
    2. '<|end|>' → logprob: -1.6430208683013916
    3. '   ' → logprob: -2.1430208683013916
    4. '           ' → logprob: -5.2680206298828125
    5. ')' → logprob: -5.8930206298828125
    6. 'elif' → logprob: -6.0180206298828125
    7. '```' → logprob: -6.5180206298828125
    8. '<|end|>' → logprob: -7.5180206298828125
    9. ':
' → logprob: -7.8930206298828125
    10. '        
' → logprob: -8.393020629882812

Token 2501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26747870445251465
    2. 'elif' → logprob: -1.6424787044525146
    3. '           ' → logprob: -3.6424787044525146
    4. '```' → logprob: -4.767478942871094
    5. '   ' → logprob: -5.642478942871094
    6. '<|end|>' → logprob: -6.892478942871094
    7. '
' → logprob: -6.892478942871094
    8. ' elif' → logprob: -8.142478942871094
    9. ':
' → logprob: -9.017478942871094
    10. 'else' → logprob: -9.142478942871094

Token 2502: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00047630956396460533
    2. '       ' → logprob: -8.625475883483887
    3. 'elif' → logprob: -8.750475883483887
    4. ' y' → logprob: -9.375475883483887
    5. '   ' → logprob: -11.125475883483887
    6. '           ' → logprob: -11.250475883483887
    7. '```' → logprob: -11.500475883483887
    8. 'unknown' → logprob: -13.000475883483887
    9. '#' → logprob: -13.125475883483887
    10. '
' → logprob: -13.250475883483887

Token 2503: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -7.226628895296017e-06
    2. 'bits' → logprob: -12.125007629394531
    3. 'Bits' → logprob: -13.750007629394531
    4. '_BITS' → logprob: -15.375007629394531
    5. '```' → logprob: -16.12500762939453
    6. '#' → logprob: -16.37500762939453
    7. '
' → logprob: -16.62500762939453
    8. '=' → logprob: -16.75000762939453
    9. '[-' → logprob: -17.12500762939453
    10. '[' → logprob: -17.25000762939453

Token 2504: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.008772811852395535
    2. '_bits' → logprob: -4.883772850036621
    3. 'list' → logprob: -7.008772850036621
    4. 'bits' → logprob: -8.383772850036621
    5. 'append' → logprob: -11.508772850036621
    6. '_lists' → logprob: -11.633772850036621
    7. 'ist' → logprob: -12.758772850036621
    8. 'List' → logprob: -12.758772850036621
    9. '.append' → logprob: -13.133772850036621
    10. '```' → logprob: -13.633772850036621

Token 2505: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.9160102712921798e-05
    2. '.' → logprob: -10.625029563903809
    3. 'append' → logprob: -12.375029563903809
    4. '_append' → logprob: -15.375029563903809
    5. '.app' → logprob: -15.750029563903809
    6. '.Append' → logprob: -16.375028610229492
    7. 'Append' → logprob: -17.375028610229492
    8. ' .' → logprob: -17.625028610229492
    9. '	append' → logprob: -18.125028610229492
    10. '.extend' → logprob: -18.250028610229492

Token 2506: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038042064756155014
    2. '(' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.663042068481445
    4. '[' → logprob: -16.538042068481445
    5. ' (' → logprob: -16.913042068481445
    6. '   ' → logprob: -18.038042068481445
    7. '```' → logprob: -18.913042068481445
    8. '(
' → logprob: -19.038042068481445
    9. '
' → logprob: -19.413042068481445
    10. '`' → logprob: -19.788042068481445

Token 2507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.75
    4. '[' → logprob: -20.375
    5. '`' → logprob: -20.375
    6. '```' → logprob: -20.875
    7. '(' → logprob: -21.0
    8. '0' → logprob: -21.625
    9. '2' → logprob: -21.75
    10. '１' → logprob: -21.9375

Token 2508: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4769427180290222
    2. ')' → logprob: -1.226942777633667
    3. ')
' → logprob: -2.601942777633667
    4. '<|end|>' → logprob: -4.976942539215088
    5. '       ' → logprob: -5.851942539215088
    6. '```' → logprob: -6.726942539215088
    7. '
' → logprob: -7.726942539215088
    8. 'elif' → logprob: -8.226943016052246
    9. '``' → logprob: -9.976943016052246
    10. '<|end|>' → logprob: -10.101943016052246

Token 2509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33529964089393616
    2. 'elif' → logprob: -1.4602996110916138
    3. '       ' → logprob: -2.9602997303009033
    4. '```' → logprob: -7.835299491882324
    5. '
' → logprob: -8.085299491882324
    6. ' elif' → logprob: -9.460299491882324
    7. 'else' → logprob: -10.335299491882324
    8. '           ' → logprob: -10.335299491882324
    9. ' ' → logprob: -11.210299491882324
    10. '  ' → logprob: -11.585299491882324

Token 2510: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0005816269549541175
    2. '   ' → logprob: -7.500581741333008
    3. ' elif' → logprob: -11.500581741333008
    4. '       ' → logprob: -11.500581741333008
    5. '```' → logprob: -11.750581741333008
    6. 'else' → logprob: -15.750581741333008
    7. '
' → logprob: -15.875581741333008
    8. '#elif' → logprob: -16.625581741333008
    9. '``' → logprob: -17.000581741333008
    10. '	elif' → logprob: -17.000581741333008

Token 2511: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005234832875430584
    2. ' c' → logprob: -5.255234718322754
    3. 'b' → logprob: -14.255234718322754
    4. '   ' → logprob: -15.255234718322754
    5. ' ' → logprob: -16.50523567199707
    6. '(c' → logprob: -16.63023567199707
    7. ' (' → logprob: -18.13023567199707
    8. '(' → logprob: -18.13023567199707
    9. ' b' → logprob: -18.25523567199707
    10. ''' → logprob: -18.75523567199707

Token 2512: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25588494539260864
    2. ' ==' → logprob: -1.5058848857879639
    3. '[' → logprob: -5.755885124206543
    4. '=='' → logprob: -7.255885124206543
    5. ']==' → logprob: -10.880885124206543
    6. ' =='' → logprob: -11.505885124206543
    7. ' in' → logprob: -11.880885124206543
    8. ']' → logprob: -12.255885124206543
    9. '==
' → logprob: -12.380885124206543
    10. ')' → logprob: -12.380885124206543

Token 2513: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017964430153369904
    2. ' '' → logprob: -6.501796245574951
    3. '('' → logprob: -9.12679672241211
    4. '0' → logprob: -9.62679672241211
    5. '`' → logprob: -10.37679672241211
    6. ' ' → logprob: -10.50179672241211
    7. '['' → logprob: -10.87679672241211
    8. '"' → logprob: -11.37679672241211
    9. '[' → logprob: -12.62679672241211
    10. '   ' → logprob: -13.25179672241211

Token 2514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002813909435644746
    2. ''' → logprob: -5.877813816070557
    3. 'x' → logprob: -12.627814292907715
    4. ''x' → logprob: -12.752814292907715
    5. ' ' → logprob: -13.002814292907715
    6. '`' → logprob: -15.502814292907715
    7. '"' → logprob: -16.2528133392334
    8. '```' → logprob: -16.8778133392334
    9. ' '' → logprob: -17.1278133392334
    10. '[' → logprob: -17.1278133392334

Token 2515: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3209596872329712
    2. ':' → logprob: -1.6959596872329712
    3. '):
' → logprob: -3.0709595680236816
    4. ')' → logprob: -4.195959568023682
    5. '```' → logprob: -4.820959568023682
    6. '<|end|>' → logprob: -5.320959568023682
    7. '       ' → logprob: -5.445959568023682
    8. '):' → logprob: -6.195959568023682
    9. '==' → logprob: -6.320959568023682
    10. '   ' → logprob: -6.570959568023682

Token 2516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1637869030237198
    2. '           ' → logprob: -2.2887868881225586
    3. '```' → logprob: -3.0387868881225586
    4. '``' → logprob: -6.663786888122559
    5. '   ' → logprob: -8.288786888122559
    6. '<|end|>' → logprob: -8.788786888122559
    7. ' ' → logprob: -10.413786888122559
    8. '[' → logprob: -11.038786888122559
    9. '               ' → logprob: -11.913786888122559
    10. '        ' → logprob: -11.913786888122559

Token 2517: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.29986000061035156
    2. '0' → logprob: -2.1748600006103516
    3. ' y' → logprob: -2.4248600006103516
    4. '       ' → logprob: -2.9248600006103516
    5. '           ' → logprob: -5.924860000610352
    6. ' ' → logprob: -8.299860000610352
    7. '```' → logprob: -8.299860000610352
    8. '``' → logprob: -10.674860000610352
    9. '   ' → logprob: -10.674860000610352
    10. 'x' → logprob: -11.799860000610352

Token 2518: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -6.659005157416686e-05
    2. 'bits' → logprob: -10.375066757202148
    3. 'Bits' → logprob: -11.000066757202148
    4. '_list' → logprob: -11.875066757202148
    5. '_BITS' → logprob: -12.375066757202148
    6. '```' → logprob: -13.250066757202148
    7. '
' → logprob: -13.875066757202148
    8. '=' → logprob: -13.875066757202148
    9. '[' → logprob: -14.250066757202148
    10. '_' → logprob: -15.000066757202148

Token 2519: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001726349350064993
    2. '_bits' → logprob: -6.376726150512695
    3. 'List' → logprob: -11.126726150512695
    4. 'bits' → logprob: -12.626726150512695
    5. '_lists' → logprob: -13.376726150512695
    6. '[' → logprob: -13.751726150512695
    7. '   ' → logprob: -14.376726150512695
    8. 'list' → logprob: -14.626726150512695
    9. '.append' → logprob: -14.876726150512695
    10. '```' → logprob: -14.876726150512695

Token 2520: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001180704333819449
    2. 'append' → logprob: -6.751180648803711
    3. '_append' → logprob: -12.001180648803711
    4. '.' → logprob: -13.751180648803711
    5. 'Append' → logprob: -13.751180648803711
    6. '=' → logprob: -14.626180648803711
    7. '       ' → logprob: -14.751180648803711
    8. '           ' → logprob: -15.126180648803711
    9. '```' → logprob: -15.626180648803711
    10. '          ' → logprob: -15.751180648803711

Token 2521: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004626649431884289
    2. '(' → logprob: -5.379626750946045
    3. ' ' → logprob: -12.004626274108887
    4. ' (' → logprob: -15.879626274108887
    5. '[' → logprob: -15.879626274108887
    6. '```' → logprob: -18.754627227783203
    7. '=' → logprob: -18.879627227783203
    8. '   ' → logprob: -19.379627227783203
    9. '۰' → logprob: -19.629627227783203
    10. '00' → logprob: -19.629627227783203

Token 2522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -19.625
    4. '2' → logprob: -20.875
    5. '```' → logprob: -21.125
    6. '(' → logprob: -21.3125
    7. '1' → logprob: -21.625
    8. '０' → logprob: -21.8125
    9. '[' → logprob: -21.875
    10. '   ' → logprob: -21.875

Token 2523: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28998029232025146
    2. '           ' → logprob: -2.539980411529541
    3. '```' → logprob: -2.539980411529541
    4. ')' → logprob: -3.039980411529541
    5. '   ' → logprob: -4.039980411529541
    6. '<|end|>' → logprob: -4.414980411529541
    7. '):
' → logprob: -5.039980411529541
    8. ':
' → logprob: -6.039980411529541
    9. 'else' → logprob: -6.289980411529541
    10. ')
' → logprob: -6.289980411529541

Token 2524: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5710304975509644
    2. '       ' → logprob: -0.9460304975509644
    3. '   ' → logprob: -3.821030616760254
    4. ' else' → logprob: -4.196030616760254
    5. '```' → logprob: -5.071030616760254
    6. '           ' → logprob: -5.946030616760254
    7. 'elif' → logprob: -7.946030616760254
    8. '<|end|>' → logprob: -8.821030616760254
    9. '
' → logprob: -9.071030616760254
    10. '``' → logprob: -9.196030616760254

Token 2525: ' else' (ID: 1203)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.13769352436065674
    2. 'else' (adapté à ' else') → logprob: -2.512693405151367
    3. 'elif' → logprob: -3.637693405151367
    4. '``' → logprob: -4.262693405151367
    5. ' else' → logprob: -5.512693405151367
    6. '       ' → logprob: -6.512693405151367
    7. '   ' → logprob: -7.262693405151367
    8. '           ' → logprob: -8.262693405151367
    9. ':
' → logprob: -8.762693405151367
    10. '<|end|>' → logprob: -9.262693405151367

Token 2526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32832789421081543
    2. '           ' → logprob: -1.7033278942108154
    3. ':
' → logprob: -2.5783278942108154
    4. '       ' → logprob: -4.0783281326293945
    5. '```' → logprob: -5.8283281326293945
    6. '   ' → logprob: -7.7033281326293945
    7. '[' → logprob: -7.8283281326293945
    8. '=' → logprob: -8.078328132629395
    9. '==' → logprob: -8.078328132629395
    10. ' =' → logprob: -9.453328132629395

Token 2527: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004084693267941475
    2. '       ' → logprob: -6.129084587097168
    3. '```' → logprob: -6.379084587097168
    4. '``' → logprob: -9.754084587097168
    5. 'y' → logprob: -9.879084587097168
    6. ' y' → logprob: -10.254084587097168
    7. '   ' → logprob: -10.879084587097168
    8. '               ' → logprob: -11.254084587097168
    9. '          ' → logprob: -12.379084587097168
    10. '{
' → logprob: -12.504084587097168

Token 2528: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.1172819435596466
    2. '           ' → logprob: -2.367281913757324
    3. ' y' → logprob: -4.117281913757324
    4. '       ' → logprob: -7.742281913757324
    5. '```' → logprob: -8.992281913757324
    6. '   ' → logprob: -10.242281913757324
    7. 'unknown' → logprob: -11.117281913757324
    8. '``' → logprob: -11.742281913757324
    9. '               ' → logprob: -12.742281913757324
    10. '{
' → logprob: -12.742281913757324

Token 2529: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -7.3458322731312364e-06
    2. 'Bits' → logprob: -12.500007629394531
    3. 'bits' → logprob: -13.750007629394531
    4. '_BITS' → logprob: -14.000007629394531
    5. '[-' → logprob: -14.375007629394531
    6. '[' → logprob: -15.125007629394531
    7. '```' → logprob: -15.500007629394531
    8. '[
' → logprob: -15.875007629394531
    9. '_list' → logprob: -16.12500762939453
    10. '
' → logprob: -16.75000762939453

Token 2530: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04969029128551483
    2. '_bits' → logprob: -3.0496902465820312
    3. '.append' → logprob: -6.924690246582031
    4. '[-' → logprob: -9.674690246582031
    5. 'bits' → logprob: -10.799690246582031
    6. 'List' → logprob: -11.299690246582031
    7. 'Bits' → logprob: -12.174690246582031
    8. 'append' → logprob: -12.549690246582031
    9. '```' → logprob: -12.924690246582031
    10. '_append' → logprob: -13.174690246582031

Token 2531: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043615259346552193
    2. 'append' → logprob: -7.750436305999756
    3. '=' → logprob: -13.000435829162598
    4. '.' → logprob: -13.875435829162598
    5. '_append' → logprob: -14.125435829162598
    6. 'Append' → logprob: -15.125435829162598
    7. 'app' → logprob: -15.375435829162598
    8. '.app' → logprob: -15.500435829162598
    9. '           ' → logprob: -15.500435829162598
    10. '       ' → logprob: -15.625435829162598

Token 2532: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03820328041911125
    2. '(-' → logprob: -3.288203239440918
    3. ' -' → logprob: -9.163203239440918
    4. '[-' → logprob: -9.788203239440918
    5. ' (-' → logprob: -14.538203239440918
    6. '(' → logprob: -15.538203239440918
    7. '```' → logprob: -16.663204193115234
    8. '<|end|>' → logprob: -17.788204193115234
    9. '   ' → logprob: -18.038204193115234
    10. '()-' → logprob: -18.413204193115234

Token 2533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '<|end|>' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -16.500001907348633
    5. '<|end|>' → logprob: -17.375001907348633
    6. '۱' → logprob: -18.500001907348633
    7. '[' → logprob: -18.750001907348633
    8. '0' → logprob: -18.750001907348633
    9. ')' → logprob: -18.937501907348633
    10. '১' → logprob: -18.937501907348633

Token 2534: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24839460849761963
    2. '       ' → logprob: -2.12339448928833
    3. ')' → logprob: -2.49839448928833
    4. ')
' → logprob: -4.62339448928833
    5. '
' → logprob: -5.74839448928833
    6. '<|end|>' → logprob: -5.99839448928833
    7. '```' → logprob: -6.74839448928833
    8. ',' → logprob: -7.74839448928833
    9. '   ' → logprob: -7.74839448928833
    10. '<|end|>' → logprob: -8.748394966125488

Token 2535: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47779709100723267
    2. '       ' → logprob: -0.9777970910072327
    3. '   ' → logprob: -6.602797031402588
    4. '```' → logprob: -6.602797031402588
    5. '``' → logprob: -7.852797031402588
    6. '
' → logprob: -8.477797508239746
    7. ',' → logprob: -8.852797508239746
    8. '               ' → logprob: -9.227797508239746
    9. '     ' → logprob: -10.227797508239746
    10. '        ' → logprob: -10.352797508239746

Token 2536: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.001201062579639256
    2. ' unknown' → logprob: -6.751201152801514
    3. '           ' → logprob: -10.876200675964355
    4. '
' → logprob: -12.376200675964355
    5. '   ' → logprob: -12.501200675964355
    6. '       ' → logprob: -12.626200675964355
    7. '```' → logprob: -14.751200675964355
    8. '``' → logprob: -16.501201629638672
    9. '1' → logprob: -16.751201629638672
    10. 'Unknown' → logprob: -16.751201629638672

Token 2537: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.4974866644479334e-05
    2. 'y' → logprob: -11.125015258789062
    3. '_user' → logprob: -16.875015258789062
    4. 'Y' → logprob: -17.625015258789062
    5. '_' → logprob: -18.500015258789062
    6. '_bits' → logprob: -18.500015258789062
    7. '	y' → logprob: -18.625015258789062
    8. '_unknown' → logprob: -18.625015258789062
    9. '_you' → logprob: -18.750015258789062
    10. '```' → logprob: -18.875015258789062

Token 2538: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38708969950675964
    2. ' +=' → logprob: -1.137089729309082
    3. '=' → logprob: -8.512089729309082
    4. '```' → logprob: -12.012089729309082
    5. ' =' → logprob: -12.512089729309082
    6. ']+=' → logprob: -12.637089729309082
    7. '+' → logprob: -12.762089729309082
    8. '   ' → logprob: -14.387089729309082
    9. '+=(' → logprob: -15.012089729309082
    10. '           ' → logprob: -15.262089729309082

Token 2539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '=' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '+' → logprob: -14.750001907348633
    5. '+=' → logprob: -17.375001907348633
    6. '```' → logprob: -17.375001907348633
    7. '
' → logprob: -17.500001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '0' → logprob: -18.500001907348633
    10. '>' → logprob: -18.875001907348633

Token 2540: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15608637034893036
    2. '
' → logprob: -3.1560864448547363
    3. '<|end|>' → logprob: -3.1560864448547363
    4. '```' → logprob: -3.2810864448547363
    5. ')' → logprob: -4.281086444854736
    6. '       ' → logprob: -5.531086444854736
    7. '#' → logprob: -6.781086444854736
    8. '``' → logprob: -7.531086444854736
    9. '<|end|>' → logprob: -7.781086444854736
    10. ')
' → logprob: -7.906086444854736

Token 2541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3543138802051544
    2. '
' → logprob: -1.479313850402832
    3. '```' → logprob: -2.729313850402832
    4. '#' → logprob: -5.604313850402832
    5. '``' → logprob: -7.104313850402832
    6. 'def' → logprob: -7.604313850402832
    7. 'x' → logprob: -8.979313850402832
    8. 'from' → logprob: -9.979313850402832
    9. '    
' → logprob: -10.354313850402832
    10. '`' → logprob: -11.354313850402832

Token 2542: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4557373821735382
    2. '#' (adapté à ' #') → logprob: -1.3307373523712158
    3. 'if' → logprob: -2.455737352371216
    4. '```' → logprob: -4.205737590789795
    5. '
' → logprob: -7.330737590789795
    6. '``' → logprob: -8.830737113952637
    7. 'import' → logprob: -9.580737113952637
    8. 'from' → logprob: -10.455737113952637
    9. 'def' → logprob: -10.455737113952637
    10. 'total' → logprob: -10.705737113952637

Token 2543: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3070031702518463
    2. '   ' → logprob: -1.807003140449524
    3. '#' → logprob: -2.3070032596588135
    4. '
' → logprob: -8.307003021240234
    5. '```' → logprob: -8.432003021240234
    6. 'def' → logprob: -10.057003021240234
    7. 'If' → logprob: -10.182003021240234
    8. 'from' → logprob: -10.307003021240234
    9. 'import' → logprob: -10.682003021240234
    10. ' if' → logprob: -10.682003021240234

Token 2544: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10799948126077652
    2. 'if' → logprob: -2.357999563217163
    3. ' if' → logprob: -4.982999324798584
    4. '
' → logprob: -7.857999324798584
    5. '```' → logprob: -7.982999324798584
    6. '#' → logprob: -9.107999801635742
    7. 'import' → logprob: -10.857999801635742
    8. '``' → logprob: -10.982999801635742
    9. 'total' → logprob: -11.607999801635742
    10. 'from' → logprob: -11.857999801635742

Token 2545: ' bits' (ID: 18189)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.9542108178138733
    2. '_fixed' → logprob: -1.0792107582092285
    3. 'if' → logprob: -1.5792107582092285
    4. '_bits' → logprob: -2.9542107582092285
    5. 'fixed' → logprob: -4.7042107582092285
    6. 'valid' → logprob: -6.0792107582092285
    7. 'bits' → logprob: -6.4542107582092285
    8. '
' → logprob: -7.3292107582092285
    9. '```' → logprob: -7.3292107582092285
    10. '_count' → logprob: -8.079211235046387

Token 2546: ' constraint' (ID: 44762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006252977065742016
    2. ' if' → logprob: -5.631252765655518
    3. '
' → logprob: -6.631252765655518
    4. 'if' → logprob: -6.756252765655518
    5. '```' → logprob: -9.506253242492676
    6. '#' → logprob: -9.881253242492676
    7. '    
' → logprob: -11.881253242492676
    8. ')' → logprob: -12.006253242492676
    9. '=' → logprob: -12.131253242492676
    10. ',' → logprob: -12.506253242492676

Token 2547: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02987070195376873
    2. 'if' → logprob: -3.5298707485198975
    3. 'from' → logprob: -9.904870986938477
    4. ' if' → logprob: -10.904870986938477
    5. '
' → logprob: -11.279870986938477
    6. '```' → logprob: -11.279870986938477
    7. '#' → logprob: -11.529870986938477
    8. 'total' → logprob: -11.779870986938477
    9. 'import' → logprob: -12.154870986938477
    10. 'count' → logprob: -14.029870986938477

Token 2548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009634139947593212
    2. '```' → logprob: -4.884634017944336
    3. 'if' → logprob: -6.634634017944336
    4. ' if' → logprob: -7.384634017944336
    5. '
' → logprob: -9.884634017944336
    6. '``' → logprob: -10.509634017944336
    7. '#' → logprob: -12.509634017944336
    8. ')' → logprob: -13.134634017944336
    9. '    
' → logprob: -13.384634017944336
    10. 'If' → logprob: -13.634634017944336

Token 2549: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5767714381217957
    2. 'if' (adapté à ' if') → logprob: -0.8267714381217957
    3. ' if' → logprob: -7.826771259307861
    4. '```' → logprob: -7.826771259307861
    5. '
' → logprob: -10.45177173614502
    6. '``' → logprob: -12.95177173614502
    7. '    
' → logprob: -13.82677173614502
    8. '       ' → logprob: -15.32677173614502
    9. '`' → logprob: -15.32677173614502
    10. 'If' → logprob: -15.45177173614502

Token 2550: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.0005538671393878758
    2. ' fixed' → logprob: -7.500554084777832
    3. '   ' → logprob: -15.125554084777832
    4. ' (' → logprob: -15.625554084777832
    5. '(f' → logprob: -16.000553131103516
    6. 'fix' → logprob: -16.500553131103516
    7. '
' → logprob: -16.625553131103516
    8. '(' → logprob: -16.875553131103516
    9. '_fixed' → logprob: -17.125553131103516
    10. 'y' → logprob: -17.750553131103516

Token 2551: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0009672032319940627
    2. '_fixed' → logprob: -7.000967025756836
    3. 'y' → logprob: -9.875967025756836
    4. '_' → logprob: -13.250967025756836
    5. '_bits' → logprob: -13.750967025756836
    6. 'fixed' → logprob: -15.250967025756836
    7. '_x' → logprob: -15.500967025756836
    8. '```' → logprob: -15.625967025756836
    9. '_valid' → logprob: -16.250967025756836
    10. '`' → logprob: -16.500967025756836

Token 2552: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.968312951968983e-06
    2. '_fixed' → logprob: -12.125009536743164
    3. '_bits' → logprob: -12.375009536743164
    4. '>' → logprob: -16.375009536743164
    5. '```' → logprob: -17.000009536743164
    6. 'ones' → logprob: -17.125009536743164
    7. '
' → logprob: -17.250009536743164
    8. '\' → logprob: -17.625009536743164
    9. '_one' → logprob: -18.000009536743164
    10. '[' → logprob: -18.125009536743164

Token 2553: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -6.32523515378125e-05
    2. 'ons' → logprob: -10.625062942504883
    3. '_' → logprob: -11.000062942504883
    4. '
' → logprob: -12.000062942504883
    5. '0' → logprob: -12.375062942504883
    6. '```' → logprob: -13.000062942504883
    7. '1' → logprob: -13.375062942504883
    8. ' ones' → logprob: -13.500062942504883
    9. 'one' → logprob: -13.750062942504883
    10. '   ' → logprob: -13.875062942504883

Token 2554: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07890135049819946
    2. ' ==' → logprob: -2.5789012908935547
    3. '>' → logprob: -12.203901290893555
    4. '<=' → logprob: -12.828901290893555
    5. '==
' → logprob: -13.203901290893555
    6. '```' → logprob: -14.078901290893555
    7. ')==' → logprob: -14.328901290893555
    8. ']==' → logprob: -15.578901290893555
    9. ' <=' → logprob: -16.078901290893555
    10. '===' → logprob: -16.203901290893555

Token 2555: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '=' → logprob: -15.625027656555176
    4. '   ' → logprob: -16.250028610229492
    5. '-' → logprob: -17.625028610229492
    6. '۰' → logprob: -17.625028610229492
    7. '```' → logprob: -17.750028610229492
    8. '
' → logprob: -17.875028610229492
    9. '>' → logprob: -18.375028610229492
    10. '[' → logprob: -19.125028610229492

Token 2556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.375009536743164
    4. '۰' → logprob: -17.875009536743164
    5. '```' → logprob: -18.625009536743164
    6. '
' → logprob: -18.812509536743164
    7. '  ' → logprob: -19.562509536743164
    8. '０' → logprob: -19.875009536743164
    9. '[' → logprob: -19.875009536743164
    10. '000' → logprob: -20.000009536743164

Token 2557: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6218894720077515
    2. ':' → logprob: -1.3718894720077515
    3. ':
' → logprob: -1.6218894720077515
    4. ':return' → logprob: -4.621889591217041
    5. '   ' → logprob: -6.496889591217041
    6. ' or' → logprob: -8.746889114379883
    7. '):
' → logprob: -8.871889114379883
    8. ' and' → logprob: -9.246889114379883
    9. '```' → logprob: -10.246889114379883
    10. '<|end|>' → logprob: -10.246889114379883

Token 2558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007975964690558612
    2. '   ' → logprob: -7.375797748565674
    3. '```' → logprob: -8.750797271728516
    4. 'return' → logprob: -11.875797271728516
    5. ' return' → logprob: -13.875797271728516
    6. ':
' → logprob: -14.000797271728516
    7. '``' → logprob: -14.250797271728516
    8. ':' → logprob: -14.250797271728516
    9. '     ' → logprob: -14.375797271728516
    10. '           ' → logprob: -14.875797271728516

Token 2559: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.10495741665363312
    2. '       ' → logprob: -2.479957342147827
    3. 'return' → logprob: -4.229957580566406
    4. ' y' → logprob: -7.104957580566406
    5. '   ' → logprob: -7.854957580566406
    6. '```' → logprob: -9.354957580566406
    7. ' return' → logprob: -11.729957580566406
    8. '	y' → logprob: -11.854957580566406
    9. 'valid' → logprob: -12.104957580566406
    10. 'count' → logprob: -12.604957580566406

Token 2560: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.710618905955926e-05
    2. 'valid' → logprob: -9.250097274780273
    3. 'Valid' → logprob: -14.875097274780273
    4. '_bits' → logprob: -15.375097274780273
    5. '_count' → logprob: -16.875097274780273
    6. '#' → logprob: -16.875097274780273
    7. '
' → logprob: -17.000097274780273
    8. '_' → logprob: -17.000097274780273
    9. '```' → logprob: -17.000097274780273
    10. '	valid' → logprob: -17.375097274780273

Token 2561: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0013888046378269792
    2. '_valid' → logprob: -6.626389026641846
    3. '_bits' → logprob: -10.376388549804688
    4. 'count' → logprob: -11.001388549804688
    5. '_counts' → logprob: -11.626388549804688
    6. '```' → logprob: -12.501388549804688
    7. '_' → logprob: -14.376388549804688
    8. '=' → logprob: -15.001388549804688
    9. 'y' → logprob: -15.501388549804688
    10. 'valid' → logprob: -15.751388549804688

Token 2562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '```' → logprob: -18.008615493774414
    4. '   ' → logprob: -18.758615493774414
    5. '=

' → logprob: -18.883615493774414
    6. '=
' → logprob: -19.883615493774414
    7. ')' → logprob: -20.008615493774414
    8. '+=' → logprob: -20.133615493774414
    9. '=}' → logprob: -20.508615493774414
    10. ' ' → logprob: -20.633615493774414

Token 2563: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.9385402993066236e-05
    2. ' pow' → logprob: -11.250019073486328
    3. '(pow' → logprob: -12.000019073486328
    4. '```' → logprob: -15.875019073486328
    5. '_pow' → logprob: -19.000019073486328
    6. '.pow' → logprob: -19.250019073486328
    7. '1' → logprob: -19.375019073486328
    8. '   ' → logprob: -19.875019073486328
    9. 'power' → logprob: -20.625019073486328
    10. '(' → logprob: -20.750019073486328

Token 2564: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.014684110297821e-06
    2. '2' → logprob: -11.625008583068848
    3. '```' → logprob: -18.875009536743164
    4. 'def' → logprob: -19.875009536743164
    5. ' (' → logprob: -20.625009536743164
    6. '(
' → logprob: -20.875009536743164
    7. '10' → logprob: -21.000009536743164
    8. ' ' → logprob: -21.875009536743164
    9. '{' → logprob: -22.000009536743164
    10. '`' → logprob: -23.250009536743164

Token 2565: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. ' ' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -18.125
    6. '
' → logprob: -18.75
    7. 'pow' → logprob: -19.875
    8. 'def' → logprob: -20.0
    9. '       ' → logprob: -21.5
    10. ')' → logprob: -21.875

Token 2566: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7015182375907898
    2. ',' → logprob: -0.7015182375907898
    3. 'unknown' → logprob: -4.8265180587768555
    4. ' unknown' → logprob: -8.326518058776855
    5. 'Unknown' → logprob: -10.951518058776855
    6. '```' → logprob: -11.076518058776855
    7. ' ,' → logprob: -11.201518058776855
    8. ')' → logprob: -11.576518058776855
    9. '_unknown' → logprob: -11.826518058776855
    10. 'UNKNOWN' → logprob: -12.451518058776855

Token 2567: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -6.392202976712724e-06
    2. ' unknown' → logprob: -12.000006675720215
    3. '(' → logprob: -16.5000057220459
    4. 'UNKNOWN' → logprob: -18.1250057220459
    5. '_unknown' → logprob: -18.6250057220459
    6. '```' → logprob: -18.6250057220459
    7. 'known' → logprob: -18.7500057220459
    8. 'Unknown' → logprob: -19.2500057220459
    9. 'unk' → logprob: -19.5000057220459
    10. '   ' → logprob: -20.2500057220459

Token 2568: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.3193259835243225
    2. '_unknown' → logprob: -1.3193259239196777
    3. 'unknown' → logprob: -5.194325923919678
    4. '_x' → logprob: -9.319326400756836
    5. '-' → logprob: -9.444326400756836
    6. '```' → logprob: -9.569326400756836
    7. '(' → logprob: -9.819326400756836
    8. '   ' → logprob: -10.069326400756836
    9. 'y' → logprob: -10.194326400756836
    10. '_' → logprob: -10.444326400756836

Token 2569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -13.125004768371582
    3. ')' → logprob: -13.750004768371582
    4. ' ,' → logprob: -13.875004768371582
    5. ',
' → logprob: -14.250004768371582
    6. '   ' → logprob: -16.5000057220459
    7. 'unknown' → logprob: -16.6250057220459
    8. '
' → logprob: -17.1250057220459
    9. '(' → logprob: -18.6250057220459
    10. '``' → logprob: -18.7500057220459

Token 2570: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0206720617134124e-05
    2. '```' → logprob: -11.75001049041748
    3. ')' → logprob: -13.50001049041748
    4. ' MOD' → logprob: -14.37501049041748
    5. '   ' → logprob: -16.250009536743164
    6. '
' → logprob: -16.625009536743164
    7. '100' → logprob: -16.625009536743164
    8. '`' → logprob: -17.125009536743164
    9. '(M' → logprob: -17.375009536743164
    10. '       ' → logprob: -17.875009536743164

Token 2571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014318044297397137
    2. ')
' → logprob: -4.264317989349365
    3. '```' → logprob: -9.514318466186523
    4. '   ' → logprob: -10.014318466186523
    5. ' )' → logprob: -11.389318466186523
    6. '-' → logprob: -11.389318466186523
    7. ',' → logprob: -12.764318466186523
    8. ')-' → logprob: -12.889318466186523
    9. '
' → logprob: -13.639318466186523
    10. ' -' → logprob: -13.764318466186523

Token 2572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7104712724685669
    2. ')' → logprob: -1.710471272468567
    3. '```' → logprob: -1.960471272468567
    4. '%' → logprob: -2.2104711532592773
    5. 'else' → logprob: -2.7104711532592773
    6. ' else' → logprob: -5.210471153259277
    7. '
' → logprob: -6.710471153259277
    8. '-' → logprob: -6.835471153259277
    9. '       ' → logprob: -6.960471153259277
    10. ')
' → logprob: -8.085471153259277

Token 2573: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8336538076400757
    2. 'else' (adapté à ' else') → logprob: -1.3336538076400757
    3. '```' → logprob: -1.4586538076400757
    4. ')' → logprob: -3.2086539268493652
    5. ' else' → logprob: -3.5836539268493652
    6. '       ' → logprob: -8.333653450012207
    7. '``' → logprob: -8.583653450012207
    8. '%' → logprob: -8.708653450012207
    9. '-' → logprob: -8.708653450012207
    10. ':' → logprob: -9.083653450012207

Token 2574: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6112591624259949
    2. ':' → logprob: -1.2362592220306396
    3. '       ' → logprob: -1.8612592220306396
    4. '```' → logprob: -4.7362589836120605
    5. '   ' → logprob: -6.3612589836120605
    6. '):
' → logprob: -8.236259460449219
    7. ':return' → logprob: -8.361259460449219
    8. '{
' → logprob: -9.986259460449219
    9. '**' → logprob: -10.111259460449219
    10. ':

' → logprob: -10.236259460449219

Token 2575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04982582852244377
    2. '```' → logprob: -3.04982590675354
    3. '``' → logprob: -6.799825668334961
    4. '{
' → logprob: -9.924825668334961
    5. '
' → logprob: -10.674825668334961
    6. '           ' → logprob: -11.049825668334961
    7. ':
' → logprob: -11.674825668334961
    8. '+' → logprob: -11.674825668334961
    9. '`' → logprob: -12.799825668334961
    10. ':' → logprob: -12.799825668334961

Token 2576: ' if' (ID: 538)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6997631788253784
    2. '       ' → logprob: -0.6997631788253784
    3. '```' → logprob: -5.824763298034668
    4. ' y' → logprob: -6.574763298034668
    5. '           ' → logprob: -7.324763298034668
    6. '   ' → logprob: -7.324763298034668
    7. '
' → logprob: -7.574763298034668
    8. '``' → logprob: -8.449763298034668
    9. '{
' → logprob: -9.824763298034668
    10. '(y' → logprob: -10.074763298034668

Token 2577: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.005233882926404476
    2. ' unknown' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.880233764648438
    4. '_unknown' → logprob: -18.130233764648438
    5. 'user' → logprob: -18.505233764648438
    6. 'Unknown' → logprob: -18.630233764648438
    7. '```' → logprob: -18.755233764648438
    8. '
' → logprob: -19.755233764648438
    9. 'unk' → logprob: -20.005233764648438
    10. '0' → logprob: -20.005233764648438

Token 2578: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.1008713702030946e-06
    2. 'y' → logprob: -13.750001907348633
    3. '_unknown' → logprob: -15.000001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_you' → logprob: -16.000001907348633
    6. '_x' → logprob: -16.750001907348633
    7. '_user' → logprob: -17.125001907348633
    8. '_yes' → logprob: -17.250001907348633
    9. '```' → logprob: -17.250001907348633
    10. '_u' → logprob: -17.375001907348633

Token 2579: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05934670940041542
    2. '!=' → logprob: -3.4343466758728027
    3. '==' → logprob: -3.8093466758728027
    4. '```' → logprob: -6.309346675872803
    5. ' !=' → logprob: -7.809346675872803
    6. '<|end|>' → logprob: -8.559347152709961
    7. ' >' → logprob: -9.184347152709961
    8. '<|end|>' → logprob: -9.184347152709961
    9. ')' → logprob: -9.434347152709961
    10. '{' → logprob: -9.684347152709961

Token 2580: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.000017166137695
    4. '```' → logprob: -15.625017166137695
    5. '
' → logprob: -16.875017166137695
    6. '=' → logprob: -17.750017166137695
    7. '(' → logprob: -17.750017166137695
    8. '>' → logprob: -18.000017166137695
    9. '``' → logprob: -18.125017166137695
    10. '1' → logprob: -18.125017166137695

Token 2581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '>' → logprob: -16.875
    4. '
' → logprob: -17.875
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.25
    7. '``' → logprob: -20.625
    8. '1' → logprob: -20.75
    9. '=' → logprob: -21.25
    10. '  ' → logprob: -21.375

Token 2582: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04443705454468727
    2. ':
' → logprob: -3.1694371700286865
    3. ':' → logprob: -7.044436931610107
    4. ':return' → logprob: -8.544437408447266
    5. '```' → logprob: -8.794437408447266
    6. '):
' → logprob: -8.919437408447266
    7. 'return' → logprob: -10.419437408447266
    8. '               ' → logprob: -11.294437408447266
    9. '       ' → logprob: -11.419437408447266
    10. '          ' → logprob: -11.919437408447266

Token 2583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012213163427077234
    2. '```' → logprob: -9.1251220703125
    3. '       ' → logprob: -11.7501220703125
    4. '               ' → logprob: -12.6251220703125
    5. 'return' → logprob: -13.6251220703125
    6. '``' → logprob: -15.7501220703125
    7. '          ' → logprob: -15.8751220703125
    8. '                   ' → logprob: -16.1251220703125
    9. '   ' → logprob: -16.5001220703125
    10. ':
' → logprob: -16.6251220703125

Token 2584: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4850286841392517
    2. 'return' (adapté à ' return') → logprob: -0.9850286841392517
    3. '       ' → logprob: -4.7350287437438965
    4. '```' → logprob: -6.3600287437438965
    5. '   ' → logprob: -8.110028266906738
    6. ' return' → logprob: -10.360028266906738
    7. '               ' → logprob: -10.610028266906738
    8. '``' → logprob: -11.110028266906738
    9. '{return' → logprob: -12.610028266906738
    10. '
' → logprob: -13.485028266906738

Token 2585: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -17.62502670288086
    4. '
' → logprob: -18.50002670288086
    5. '1' → logprob: -19.00002670288086
    6. '   ' → logprob: -19.25002670288086
    7. '(' → logprob: -19.37502670288086
    8. '000' → logprob: -20.12502670288086
    9. '``' → logprob: -21.25002670288086
    10. '`' → logprob: -21.62502670288086

Token 2586: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' ' → logprob: -17.75
    4. '``' → logprob: -19.375
    5. '000' → logprob: -20.0
    6. '`' → logprob: -20.75
    7. '   ' → logprob: -21.375
    8. '00' → logprob: -21.5
    9. '
' → logprob: -21.625
    10. '۰' → logprob: -22.5

Token 2587: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013521412620320916
    2. '   ' → logprob: -7.126352310180664
    3. '
' → logprob: -8.126352310180664
    4. '```' → logprob: -9.001352310180664
    5. ')' → logprob: -9.876352310180664
    6. ')
' → logprob: -11.251352310180664
    7. ' y' → logprob: -11.626352310180664
    8. '(' → logprob: -11.626352310180664
    9. '#' → logprob: -11.876352310180664
    10. ',' → logprob: -12.251352310180664

Token 2588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006494098342955112
    2. '           ' → logprob: -8.375649452209473
    3. '```' → logprob: -8.375649452209473
    4. '   ' → logprob: -8.750649452209473
    5. '
' → logprob: -11.000649452209473
    6. 'return' → logprob: -12.375649452209473
    7. '(' → logprob: -12.750649452209473
    8. 'y' → logprob: -14.250649452209473
    9. '               ' → logprob: -14.250649452209473
    10. ',' → logprob: -14.250649452209473

Token 2589: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23892715573310852
    2. 'y' (adapté à ' y') → logprob: -1.9889271259307861
    3. ' y' → logprob: -2.613927125930786
    4. '```' → logprob: -6.238927364349365
    5. '   ' → logprob: -8.488926887512207
    6. '           ' → logprob: -9.113926887512207
    7. 'return' → logprob: -9.988926887512207
    8. '``' → logprob: -10.238926887512207
    9. '
' → logprob: -10.738926887512207
    10. '	y' → logprob: -10.738926887512207

Token 2590: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.639096970204264e-05
    2. 'valid' → logprob: -9.250096321105957
    3. 'Valid' → logprob: -16.250097274780273
    4. '_invalid' → logprob: -16.625097274780273
    5. '_VALID' → logprob: -19.375097274780273
    6. '	valid' → logprob: -19.500097274780273
    7. '
' → logprob: -19.875097274780273
    8. '```' → logprob: -20.125097274780273
    9. '_possible' → logprob: -20.500097274780273
    10. '_known' → logprob: -20.750097274780273

Token 2591: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.160971628967673e-05
    2. '_valid' → logprob: -9.500082015991211
    3. 'count' → logprob: -12.000082015991211
    4. 'valid' → logprob: -15.875082015991211
    5. '_counts' → logprob: -16.25008201599121
    6. '```' → logprob: -16.75008201599121
    7. '_code' → logprob: -16.87508201599121
    8. '_bits' → logprob: -17.37508201599121
    9. '=' → logprob: -18.12508201599121
    10. '_' → logprob: -18.25008201599121

Token 2592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269301027059555
    2. ' =' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.626930236816406
    4. '```' → logprob: -14.751930236816406
    5. '=(' → logprob: -15.376930236816406
    6. ')' → logprob: -16.126930236816406
    7. '+=' → logprob: -17.251930236816406
    8. ' +=' → logprob: -17.501930236816406
    9. '       ' → logprob: -17.751930236816406
    10. '=
' → logprob: -18.001930236816406

Token 2593: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.12698711454868317
    2. ' (' → logprob: -2.1269872188568115
    3. '(p' → logprob: -10.50198745727539
    4. '(power' → logprob: -11.62698745727539
    5. '   ' → logprob: -11.87698745727539
    6. '       ' → logprob: -12.50198745727539
    7. '(pop' → logprob: -12.75198745727539
    8. '(po' → logprob: -13.75198745727539
    9. 'pow' → logprob: -13.87698745727539
    10. '(' → logprob: -14.12698745727539

Token 2594: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.014172682538628578
    2. 'pow' → logprob: -4.264172554016113
    3. '(p' → logprob: -12.014172554016113
    4. ' (' → logprob: -13.139172554016113
    5. ' pow' → logprob: -14.514172554016113
    6. '(power' → logprob: -14.889172554016113
    7. '.pow' → logprob: -15.764172554016113
    8. '(po' → logprob: -16.76417350769043
    9. '_pow' → logprob: -16.88917350769043
    10. '(' → logprob: -17.26417350769043

Token 2595: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.493430894101039e-05
    2. '2' → logprob: -9.500075340270996
    3. '(
' → logprob: -17.37507438659668
    4. '```' → logprob: -18.62507438659668
    5. 'def' → logprob: -18.75007438659668
    6. ' (' → logprob: -19.62507438659668
    7. '
' → logprob: -20.25007438659668
    8. 'pow' → logprob: -21.00007438659668
    9. '   ' → logprob: -21.75007438659668
    10. '(pow' → logprob: -21.75007438659668

Token 2596: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. '       ' → logprob: -19.25
    7. 'def' → logprob: -19.375
    8. '
' → logprob: -19.5
    9. ')' → logprob: -19.875
    10. '           ' → logprob: -20.0

Token 2597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3143053650856018
    2. '(' → logprob: -1.314305305480957
    3. 'unknown' → logprob: -6.939305305480957
    4. '```' → logprob: -10.439305305480957
    5. '(
' → logprob: -11.564305305480957
    6. ',
' → logprob: -11.689305305480957
    7. ')' → logprob: -12.064305305480957
    8. ' unknown' → logprob: -12.189305305480957
    9. ' (' → logprob: -12.564305305480957
    10. '
' → logprob: -12.564305305480957

Token 2598: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -1.1875571544806007e-05
    2. ' unknown' → logprob: -11.375011444091797
    3. '(' → logprob: -14.875011444091797
    4. '
' → logprob: -18.000011444091797
    5. '```' → logprob: -18.125011444091797
    6. '2' → logprob: -18.250011444091797
    7. 'UNKNOWN' → logprob: -18.875011444091797
    8. '   ' → logprob: -19.000011444091797
    9. '0' → logprob: -19.250011444091797
    10. 'known' → logprob: -19.250011444091797

Token 2599: '_y' (ID: 9410)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.07883702218532562
    2. ',' → logprob: -2.9538369178771973
    3. '_unknown' → logprob: -3.8288369178771973
    4. '   ' → logprob: -7.578836917877197
    5. '_,' → logprob: -7.828836917877197
    6. '```' → logprob: -8.078837394714355
    7. '
' → logprob: -8.828837394714355
    8. ')' → logprob: -8.953837394714355
    9. '_y' → logprob: -9.453837394714355
    10. '-' → logprob: -9.703837394714355

Token 2600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2166411478538066e-05
    2. ')' → logprob: -10.125052452087402
    3. ' ,' → logprob: -12.500052452087402
    4. '-' → logprob: -12.750052452087402
    5. ',
' → logprob: -13.125052452087402
    6. '```' → logprob: -14.000052452087402
    7. '(' → logprob: -14.500052452087402
    8. ',-' → logprob: -14.875052452087402
    9. ',user' → logprob: -14.875052452087402
    10. ')-' → logprob: -15.125052452087402

Token 2601: ' MOD' (ID: 32868)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.009261795319616795
    2. ' unknown' → logprob: -4.759261608123779
    3. '-' → logprob: -8.134262084960938
    4. '(' → logprob: -8.634262084960938
    5. 'MOD' → logprob: -9.134262084960938
    6. ' (' → logprob: -10.009262084960938
    7. ' -' → logprob: -11.134262084960938
    8. ' MOD' → logprob: -13.134262084960938
    9. '
' → logprob: -13.134262084960938
    10. 'UNKNOWN' → logprob: -13.509262084960938

Token 2602: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02181021310389042
    2. ' -' → logprob: -4.271810054779053
    3. ')-' → logprob: -5.521810054779053
    4. '-' → logprob: -5.646810054779053
    5. '```' → logprob: -10.646810531616211
    6. ' )' → logprob: -10.896810531616211
    7. '       ' → logprob: -11.396810531616211
    8. '   ' → logprob: -11.646810531616211
    9. '')' → logprob: -12.521810531616211
    10. '()' → logprob: -12.646810531616211

Token 2603: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20143292844295502
    2. '-' → logprob: -1.7014329433441162
    3. ')' → logprob: -11.826433181762695
    4. '```' → logprob: -11.826433181762695
    5. ' ' → logprob: -13.451433181762695
    6. ')-' → logprob: -13.701433181762695
    7. 'def' → logprob: -13.826433181762695
    8. '
' → logprob: -14.826433181762695
    9. '   ' → logprob: -14.951433181762695
    10. '       ' → logprob: -15.451433181762695

Token 2604: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.375
    4. '
' → logprob: -17.5
    5. '   ' → logprob: -18.5
    6. '       ' → logprob: -20.375
    7. '{
' → logprob: -21.25
    8. ')' → logprob: -21.375
    9. '[' → logprob: -21.625
    10. '           ' → logprob: -21.875

Token 2605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -18.5
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -20.5
    6. '<|end|>' → logprob: -20.875
    7. 'def' → logprob: -21.25
    8. '[' → logprob: -21.25
    9. ')' → logprob: -21.875
    10. '`' → logprob: -22.25

Token 2606: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017073206836357713
    2. ')%' → logprob: -6.376707553863525
    3. '   ' → logprob: -12.876707077026367
    4. ' )' → logprob: -13.626707077026367
    5. '```' → logprob: -14.001707077026367
    6. '       ' → logprob: -15.626707077026367
    7. '+' → logprob: -16.251707077026367
    8. '%' → logprob: -16.626707077026367
    9. ')
' → logprob: -17.251707077026367
    10. '')' → logprob: -17.751707077026367

Token 2607: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.39126092195510864
    2. '%' → logprob: -1.1412608623504639
    3. ')' → logprob: -5.641261100769043
    4. ')%' → logprob: -7.141261100769043
    5. '```' → logprob: -10.391261100769043
    6. 'def' → logprob: -13.141261100769043
    7. '   ' → logprob: -13.516261100769043
    8. '<|end|>' → logprob: -13.891261100769043
    9. '
' → logprob: -14.141261100769043
    10. ' %)' → logprob: -14.266261100769043

Token 2608: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.088346359931165e-07
    2. ' MOD' → logprob: -14.000000953674316
    3. '100' → logprob: -18.625
    4. '```' → logprob: -19.0
    5. '_MOD' → logprob: -19.375
    6. '.MOD' → logprob: -20.5
    7. '`' → logprob: -20.75
    8. 'MO' → logprob: -21.125
    9. 'MD' → logprob: -21.625
    10. '(M' → logprob: -22.0

Token 2609: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28009679913520813
    2. '```' → logprob: -1.5300967693328857
    3. ')' → logprob: -4.280097007751465
    4. '
' → logprob: -4.405097007751465
    5. '``' → logprob: -7.155097007751465
    6. '<|end|>' → logprob: -8.655097007751465
    7. ')
' → logprob: -8.905097007751465
    8. '       ' → logprob: -8.905097007751465
    9. ' return' → logprob: -9.405097007751465
    10. 'return' → logprob: -9.655097007751465

Token 2610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031426265835762024
    2. '
' → logprob: -3.531426191329956
    3. '```' → logprob: -6.406426429748535
    4. '``' → logprob: -11.406426429748535
    5. '    
' → logprob: -12.406426429748535
    6. 'total' → logprob: -12.906426429748535
    7. 'x' → logprob: -12.906426429748535
    8. '
' → logprob: -13.281426429748535
    9. '`' → logprob: -14.906426429748535
    10. 'return' → logprob: -15.406426429748535

Token 2611: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37079256772994995
    2. '#' (adapté à ' #') → logprob: -1.4957926273345947
    3. 'x' → logprob: -2.4957926273345947
    4. '```' → logprob: -5.870792388916016
    5. '
' → logprob: -8.120792388916016
    6. '``' → logprob: -9.120792388916016
    7. 'total' → logprob: -10.370792388916016
    8. '    
' → logprob: -10.745792388916016
    9. 'def' → logprob: -11.995792388916016
    10. ' #' → logprob: -12.495792388916016

Token 2612: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027800898998975754
    2. '#' → logprob: -3.7778007984161377
    3. '   ' → logprob: -5.402801036834717
    4. '```' → logprob: -11.652800559997559
    5. 'count' → logprob: -11.777800559997559
    6. 'total' → logprob: -12.027800559997559
    7. 'def' → logprob: -12.277800559997559
    8. '
' → logprob: -12.652800559997559
    9. 'rest' → logprob: -13.152800559997559
    10. 'cnt' → logprob: -13.402800559997559

Token 2613: ' bits' (ID: 18189)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.06936291605234146
    2. '_bits' → logprob: -3.1943628787994385
    3. 'count' → logprob: -4.444363117218018
    4. '1' → logprob: -4.819363117218018
    5. 'bits' → logprob: -5.694363117218018
    6. '#' → logprob: -6.694363117218018
    7. '   ' → logprob: -7.194363117218018
    8. '_counts' → logprob: -7.444363117218018
    9. 'for' → logprob: -9.44436264038086
    10. '```' → logprob: -9.69436264038086

Token 2614: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02239440381526947
    2. '#' → logprob: -4.897394180297852
    3. 'x' → logprob: -5.647394180297852
    4. '_count' → logprob: -5.772394180297852
    5. '
' → logprob: -6.147394180297852
    6. '=' → logprob: -6.147394180297852
    7. ' =' → logprob: -6.397394180297852
    8. '```' → logprob: -7.272394180297852
    9. 'for' → logprob: -7.522394180297852
    10. 'count' → logprob: -8.772394180297852

Token 2615: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39014554023742676
    2. 'x' → logprob: -1.1401455402374268
    3. '
' → logprob: -6.515145301818848
    4. '=' → logprob: -7.140145301818848
    5. '```' → logprob: -7.265145301818848
    6. ' =' → logprob: -9.265145301818848
    7. ' x' → logprob: -9.765145301818848
    8. '``' → logprob: -9.765145301818848
    9. '#' → logprob: -10.390145301818848
    10. '    
' → logprob: -11.140145301818848

Token 2616: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47692063450813293
    2. '   ' → logprob: -0.9769206047058105
    3. '```' → logprob: -5.9769206047058105
    4. ' x' → logprob: -8.851921081542969
    5. '``' → logprob: -8.976921081542969
    6. '
' → logprob: -10.726921081542969
    7. '#' → logprob: -12.476921081542969
    8. '    
' → logprob: -13.226921081542969
    9. '`' → logprob: -13.226921081542969
    10. 'cnt' → logprob: -13.726921081542969

Token 2617: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2534410357475281
    2. '   ' → logprob: -1.5034410953521729
    3. '```' → logprob: -6.628440856933594
    4. '``' → logprob: -9.503440856933594
    5. '
' → logprob: -9.878440856933594
    6. ' x' → logprob: -10.128440856933594
    7. 'cnt' → logprob: -11.878440856933594
    8. 'count' → logprob: -12.253440856933594
    9. '    
' → logprob: -12.378440856933594
    10. '#' (adapté à ' #') → logprob: -13.128440856933594

Token 2618: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014153540832921863
    2. '#' → logprob: -7.376415252685547
    3. '   ' → logprob: -7.376415252685547
    4. 'count' → logprob: -9.376415252685547
    5. 'for' → logprob: -10.501415252685547
    6. 'total' → logprob: -11.251415252685547
    7. 'cnt' → logprob: -11.376415252685547
    8. 'def' → logprob: -11.751415252685547
    9. '```' → logprob: -11.751415252685547
    10. '``' → logprob: -13.001415252685547

Token 2619: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.36115962266921997
    2. '3' → logprob: -1.2361595630645752
    3. '[' → logprob: -5.361159801483154
    4. 'b' → logprob: -5.486159801483154
    5. '2' → logprob: -6.611159801483154
    6. '#' → logprob: -7.111159801483154
    7. '1' → logprob: -7.361159801483154
    8. '```' → logprob: -7.986159801483154
    9. 's' → logprob: -8.611159324645996
    10. '
' → logprob: -8.611159324645996

Token 2620: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.744219183921814
    2. 'count' → logprob: -1.244219183921814
    3. '_count' → logprob: -2.4942193031311035
    4. '[' → logprob: -3.4942193031311035
    5. '```' → logprob: -3.4942193031311035
    6. '   ' → logprob: -4.1192193031311035
    7. '=' → logprob: -4.3692193031311035
    8. 'Count' → logprob: -4.3692193031311035
    9. 'x' → logprob: -4.4942193031311035
    10. ' =' → logprob: -4.6192193031311035

Token 2621: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6335064768791199
    2. ' =' → logprob: -1.8835065364837646
    3. 'for' → logprob: -2.0085065364837646
    4. '=' → logprob: -2.5085065364837646
    5. '```' → logprob: -3.2585065364837646
    6. '[' → logprob: -3.8835065364837646
    7. 'def' → logprob: -4.3835062980651855
    8. '
' → logprob: -5.0085062980651855
    9. ' for' → logprob: -5.3835062980651855
    10. 'count' → logprob: -5.5085062980651855

Token 2622: ' checked' (ID: 15579)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2782374918460846
    2. 'covered' → logprob: -2.6532375812530518
    3. '```' → logprob: -3.5282375812530518
    4. 'used' → logprob: -3.5282375812530518
    5. '[' → logprob: -3.7782375812530518
    6. '6' → logprob: -4.153237342834473
    7. '=' → logprob: -4.278237342834473
    8. '7' → logprob: -4.653237342834473
    9. 'completed' → logprob: -4.778237342834473
    10. 'included' → logprob: -5.028237342834473

Token 2623: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7193528413772583
    2. '   ' → logprob: -0.9693528413772583
    3. ' for' → logprob: -2.0943527221679688
    4. ':' → logprob: -5.844352722167969
    5. '[' → logprob: -6.219352722167969
    6. '=' → logprob: -6.719352722167969
    7. ' =' → logprob: -6.719352722167969
    8. '```' → logprob: -7.094352722167969
    9. ',' → logprob: -7.594352722167969
    10. 'def' → logprob: -8.344352722167969

Token 2624: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026151543483138084
    2. '   ' → logprob: -3.776151657104492
    3. ' for' → logprob: -6.401151657104492
    4. '```' → logprob: -7.151151657104492
    5. '``' → logprob: -8.151151657104492
    6. 'count' → logprob: -10.026151657104492
    7. 'x' → logprob: -10.151151657104492
    8. '7' → logprob: -10.776151657104492
    9. '`' → logprob: -11.026151657104492
    10. '       ' → logprob: -11.526151657104492

Token 2625: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0051599894650280476
    2. '[' → logprob: -5.755159854888916
    3. '7' → logprob: -6.505159854888916
    4. '5' → logprob: -8.255160331726074
    5. '```' → logprob: -9.630160331726074
    6. '(' → logprob: -10.005160331726074
    7. '6' → logprob: -10.380160331726074
    8. '``' → logprob: -10.630160331726074
    9. '3' → logprob: -11.005160331726074
    10. '   ' → logprob: -11.880160331726074

Token 2626: ' fixed' (ID: 13213)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.580147922039032
    2. '=' → logprob: -1.8301479816436768
    3. 'for' → logprob: -2.4551479816436768
    4. '   ' → logprob: -3.0801479816436768
    5. '```' → logprob: -3.2051479816436768
    6. ' for' → logprob: -3.4551479816436768
    7. ' =' → logprob: -3.7051479816436768
    8. 'def' → logprob: -5.205147743225098
    9. 'if' → logprob: -5.205147743225098
    10. ')' → logprob: -5.330147743225098

Token 2627: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5470427870750427
    2. '   ' → logprob: -1.0470428466796875
    3. ' for' → logprob: -4.0470428466796875
    4. '=' → logprob: -4.0470428466796875
    5. '```' → logprob: -4.2970428466796875
    6. ',' → logprob: -4.7970428466796875
    7. 'def' → logprob: -5.9220428466796875
    8. '
' → logprob: -6.0470428466796875
    9. 'count' → logprob: -6.0470428466796875
    10. ' =' → logprob: -6.1720428466796875

Token 2628: 'already' (ID: 89136)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06439042836427689
    2. '5' → logprob: -3.6893904209136963
    3. '6' → logprob: -4.689390659332275
    4. '#' → logprob: -5.314390659332275
    5. ',' → logprob: -5.439390659332275
    6. '7' → logprob: -5.689390659332275
    7. ')' → logprob: -5.814390659332275
    8. '`' → logprob: -6.064390659332275
    9. '```' → logprob: -6.064390659332275
    10. 'not' → logprob: -6.439390659332275

Token 2629: ' ' (ID: 220)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.0009531481191515923
    2. '```' → logprob: -8.00095272064209
    3. '#' → logprob: -9.12595272064209
    4. ' checked' → logprob: -9.25095272064209
    5. 'fixed' → logprob: -9.50095272064209
    6. ')' → logprob: -9.62595272064209
    7. 'passed' → logprob: -10.12595272064209
    8. 'covered' → logprob: -10.25095272064209
    9. '=' → logprob: -10.50095272064209
    10. 'count' → logprob: -11.00095272064209

Token 2630: '0' (ID: 15)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.4219099283218384
    2. ''' → logprob: -1.6719099283218384
    3. '```' → logprob: -3.046909809112549
    4. '`' → logprob: -3.796909809112549
    5. 'fixed' → logprob: -4.171909809112549
    6. '0' → logprob: -4.296909809112549
    7. '=' → logprob: -4.546909809112549
    8. ')' → logprob: -4.671909809112549
    9. 'b' → logprob: -4.921909809112549
    10. '#' → logprob: -5.421909809112549

Token 2631: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8715180158615112
    2. ',' → logprob: -0.9965180158615112
    3. '),' → logprob: -1.8715180158615112
    4. '```' → logprob: -4.246518135070801
    5. '
' → logprob: -4.371518135070801
    6. '   ' → logprob: -4.496518135070801
    7. ')
' → logprob: -4.621518135070801
    8. ' and' → logprob: -6.246518135070801
    9. ',b' → logprob: -6.246518135070801
    10. 'def' → logprob: -6.746518135070801

Token 2632: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030778687447309494
    2. '#' → logprob: -3.655778646469116
    3. ' for' → logprob: -6.280778884887695
    4. '```' → logprob: -7.155778884887695
    5. 'b' → logprob: -7.405778884887695
    6. '6' → logprob: -8.405778884887695
    7. 'bit' → logprob: -8.405778884887695
    8. 'bits' → logprob: -8.655778884887695
    9. '   ' → logprob: -8.905778884887695
    10. '7' → logprob: -8.905778884887695

Token 2633: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.009820197708904743
    2. '[' → logprob: -4.759819984436035
    3. '6' → logprob: -7.884819984436035
    4. '```' → logprob: -8.509819984436035
    5. '``' → logprob: -9.009819984436035
    6. 'range' → logprob: -9.134819984436035
    7. '(' → logprob: -9.384819984436035
    8. 'from' → logprob: -9.759819984436035
    9. '7' → logprob: -9.884819984436035
    10. '
' → logprob: -10.259819984436035

Token 2634: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.007542853709310293
    2. '6' → logprob: -5.507543087005615
    3. '[' → logprob: -5.757543087005615
    4. '(' → logprob: -9.132542610168457
    5. '7' → logprob: -9.632542610168457
    6. '```' → logprob: -10.132542610168457
    7. '``' → logprob: -11.007542610168457
    8. '   ' → logprob: -11.257542610168457
    9. ' ' → logprob: -11.632542610168457
    10. '#' → logprob: -12.007542610168457

Token 2635: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01141736563295126
    2. '```' → logprob: -5.261417388916016
    3. 'not' → logprob: -6.386417388916016
    4. ',b' → logprob: -6.886417388916016
    5. 'and' → logprob: -7.261417388916016
    6. ',#' → logprob: -7.636417388916016
    7. '=' → logprob: -7.886417388916016
    8. '6' → logprob: -7.886417388916016
    9. 'def' → logprob: -8.261417388916016
    10. '...' → logprob: -8.386417388916016

Token 2636: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03539585694670677
    2. '7' → logprob: -3.910395860671997
    3. '```' → logprob: -4.410395622253418
    4. '...' → logprob: -6.910395622253418
    5. '`' → logprob: -7.410395622253418
    6. ',' → logprob: -8.785395622253418
    7. '``' → logprob: -8.785395622253418
    8. ')' → logprob: -8.910395622253418
    9. '5' → logprob: -9.535395622253418
    10. '#' → logprob: -9.535395622253418

Token 2637: ' fixed' (ID: 13213)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0597586631774902
    2. '```' → logprob: -1.4347586631774902
    3. '   ' → logprob: -1.6847586631774902
    4. 'for' → logprob: -2.9347586631774902
    5. ' for' → logprob: -3.3097586631774902
    6. '[' → logprob: -3.5597586631774902
    7. '#' → logprob: -4.05975866317749
    8. '...' → logprob: -4.30975866317749
    9. '=' → logprob: -4.30975866317749
    10. ')' → logprob: -4.43475866317749

Token 2638: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8126190900802612
    2. 'for' → logprob: -1.0626190900802612
    3. '=' → logprob: -2.187619209289551
    4. '```' → logprob: -3.187619209289551
    5. ' for' → logprob: -3.937619209289551
    6. ' =' → logprob: -4.187619209289551
    7. 'x' → logprob: -5.062619209289551
    8. 'count' → logprob: -5.187619209289551
    9. ')' → logprob: -5.812619209289551
    10. '``' → logprob: -6.562619209289551

Token 2639: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1194723844528198
    2. 'for' → logprob: -1.2444723844528198
    3. ',' → logprob: -1.9944723844528198
    4. ' for' → logprob: -2.3694725036621094
    5. '```' → logprob: -2.8694725036621094
    6. ')' → logprob: -3.2444725036621094
    7. '=' → logprob: -4.119472503662109
    8. '#' → logprob: -5.119472503662109
    9. '(' → logprob: -5.369472503662109
    10. '...' → logprob: -5.369472503662109

Token 2640: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24039538204669952
    2. 'for' → logprob: -1.865395426750183
    3. 'x' → logprob: -3.9903953075408936
    4. ' for' → logprob: -4.240395545959473
    5. '#' → logprob: -4.990395545959473
    6. '```' → logprob: -5.240395545959473
    7. '
' → logprob: -5.990395545959473
    8. '=' → logprob: -5.990395545959473
    9. ')' → logprob: -6.115395545959473
    10. 'count' → logprob: -6.240395545959473

Token 2641: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24607446789741516
    2. '   ' → logprob: -2.6210744380950928
    3. '#' → logprob: -3.4960744380950928
    4. 'for' → logprob: -3.6210744380950928
    5. '```' → logprob: -3.6210744380950928
    6. 'def' → logprob: -3.9960744380950928
    7. ',b' → logprob: -4.746074676513672
    8. ' for' → logprob: -5.246074676513672
    9. ')' → logprob: -5.496074676513672
    10. ':' → logprob: -5.496074676513672

Token 2642: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19312642514705658
    2. 'for' → logprob: -2.8181264400482178
    3. '   ' → logprob: -3.3181264400482178
    4. '#' → logprob: -3.4431264400482178
    5. '6' → logprob: -4.443126201629639
    6. 'def' → logprob: -4.568126201629639
    7. ' for' → logprob: -5.068126201629639
    8. '```' → logprob: -5.318126201629639
    9. ' ,' → logprob: -5.943126201629639
    10. ',b' → logprob: -6.318126201629639

Token 2643: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3231199085712433
    2. '```' → logprob: -2.573119878768921
    3. '7' → logprob: -2.698119878768921
    4. '6' → logprob: -2.823119878768921
    5. ')' → logprob: -3.198119878768921
    6. 'b' → logprob: -4.6981201171875
    7. '#' → logprob: -5.1981201171875
    8. '`' → logprob: -6.3231201171875
    9. '5' → logprob: -6.4481201171875
    10. ',b' → logprob: -6.5731201171875

Token 2644: ' already' (ID: 4279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15646037459373474
    2. 'for' → logprob: -2.1564602851867676
    3. '```' → logprob: -4.156460285186768
    4. ' for' → logprob: -5.031460285186768
    5. 'x' → logprob: -5.906460285186768
    6. '``' → logprob: -7.031460285186768
    7. 'def' → logprob: -7.281460285186768
    8. ')' → logprob: -7.531460285186768
    9. '
' → logprob: -7.656460285186768
    10. '#' → logprob: -7.781460285186768

Token 2645: ' done' (ID: 4167)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5046843886375427
    2. 'for' → logprob: -1.3796844482421875
    3. 'x' → logprob: -2.3796844482421875
    4. '#' → logprob: -3.5046844482421875
    5. '=' → logprob: -5.1296844482421875
    6. 'count' → logprob: -5.6296844482421875
    7. '```' → logprob: -5.6296844482421875
    8. ' for' → logprob: -6.2546844482421875
    9. '
' → logprob: -6.2546844482421875
    10. 'def' → logprob: -6.7546844482421875

Token 2646: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949542999267578
    2. 'for' → logprob: -1.6699542999267578
    3. 'x' → logprob: -3.044954299926758
    4. 'count' → logprob: -5.169954299926758
    5. '
' → logprob: -5.419954299926758
    6. '```' → logprob: -5.544954299926758
    7. '#' → logprob: -5.919954299926758
    8. ' for' → logprob: -6.794954299926758
    9. '``' → logprob: -7.294954299926758
    10. 'total' → logprob: -8.294954299926758

Token 2647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43818801641464233
    2. 'for' → logprob: -1.063188076019287
    3. '```' → logprob: -5.188188076019287
    4. ' for' → logprob: -6.313188076019287
    5. 'x' → logprob: -6.688188076019287
    6. '``' → logprob: -7.938188076019287
    7. '
' → logprob: -8.813187599182129
    8. '#' → logprob: -9.313187599182129
    9. 'count' → logprob: -9.688187599182129
    10. 'remaining' → logprob: -9.688187599182129

Token 2648: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2586030066013336
    2. '   ' → logprob: -1.5086029767990112
    3. 'for' → logprob: -6.133603096008301
    4. 'count' → logprob: -6.133603096008301
    5. '```' → logprob: -6.383603096008301
    6. '``' → logprob: -8.0086030960083
    7. 'cnt' → logprob: -9.0086030960083
    8. '
' → logprob: -10.0086030960083
    9. '#' (adapté à ' #') → logprob: -10.1336030960083
    10. ' x' → logprob: -10.6336030960083

Token 2649: ' we' (ID: 581)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08314824104309082
    2. '   ' → logprob: -2.583148241043091
    3. 'for' → logprob: -5.708148002624512
    4. '```' → logprob: -8.083148002624512
    5. '#' → logprob: -8.583148002624512
    6. 'count' → logprob: -8.833148002624512
    7. 'cnt' → logprob: -9.208148002624512
    8. '``' → logprob: -9.833148002624512
    9. 'remaining' → logprob: -10.208148002624512
    10. '
' → logprob: -10.833148002624512

Token 2650: ' accounted' (ID: 83982)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18229681253433228
    2. 'need' → logprob: -3.1822967529296875
    3. 'def' → logprob: -3.5572967529296875
    4. '#' → logprob: -3.8072967529296875
    5. 'continue' → logprob: -3.8072967529296875
    6. 'have' → logprob: -4.3072967529296875
    7. '[' → logprob: -5.1822967529296875
    8. '   ' → logprob: -5.3072967529296875
    9. 'left' → logprob: -5.4322967529296875
    10. '7' → logprob: -5.8072967529296875

Token 2651: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006662200670689344
    2. '   ' → logprob: -5.506662368774414
    3. ' for' → logprob: -6.631662368774414
    4. '#' → logprob: -7.131662368774414
    5. 'in' → logprob: -8.506662368774414
    6. 'b' → logprob: -9.381662368774414
    7. '
' → logprob: -10.256662368774414
    8. '```' → logprob: -10.381662368774414
    9. '=' → logprob: -10.881662368774414
    10. 'only' → logprob: -11.131662368774414

Token 2652: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9066300392150879
    2. '   ' → logprob: -1.031630039215088
    3. '=' → logprob: -1.781630039215088
    4. ' =' → logprob: -4.031630039215088
    5. '```' → logprob: -4.031630039215088
    6. 'count' → logprob: -4.906630039215088
    7. '_count' → logprob: -5.031630039215088
    8. ' for' → logprob: -5.281630039215088
    9. 'x' → logprob: -5.406630039215088
    10. '#' → logprob: -6.031630039215088

Token 2653: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24351270496845245
    2. 'for' → logprob: -1.743512749671936
    3. 'x' → logprob: -3.7435126304626465
    4. '```' → logprob: -5.1185126304626465
    5. 'count' → logprob: -6.1185126304626465
    6. '#' → logprob: -6.1185126304626465
    7. ' for' → logprob: -6.2435126304626465
    8. '=' → logprob: -6.4935126304626465
    9. '
' → logprob: -7.1185126304626465
    10. ')' → logprob: -7.3685126304626465

Token 2654: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0631227493286133
    2. 'x' → logprob: -1.9381227493286133
    3. 'for' → logprob: -2.0631227493286133
    4. 'range' → logprob: -2.3131227493286133
    5. 'bits' → logprob: -2.4381227493286133
    6. '#' → logprob: -2.5631227493286133
    7. 'bit' → logprob: -2.9381227493286133
    8. '[' → logprob: -3.8131227493286133
    9. '(' → logprob: -4.688122749328613
    10. 'the' → logprob: -4.813122749328613

Token 2655: ' others' (ID: 5036)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.7557136416435242
    2. 'rest' → logprob: -1.880713701248169
    3. '6' → logprob: -2.130713701248169
    4. '#' → logprob: -2.755713701248169
    5. '[' → logprob: -3.255713701248169
    6. 'bits' → logprob: -3.505713701248169
    7. '7' → logprob: -3.755713701248169
    8. 'other' → logprob: -4.25571346282959
    9. 'b' → logprob: -4.38071346282959
    10. 'positions' → logprob: -4.50571346282959

Token 2656: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41675737500190735
    2. 'for' → logprob: -1.416757345199585
    3. 'x' → logprob: -3.291757345199585
    4. '#' → logprob: -3.291757345199585
    5. 'count' → logprob: -4.541757583618164
    6. '=' → logprob: -5.916757583618164
    7. '
' → logprob: -6.416757583618164
    8. ' for' → logprob: -6.541757583618164
    9. 'unknown' → logprob: -6.541757583618164
    10. '```' → logprob: -6.666757583618164

Token 2657: ' fixed' (ID: 13213)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17715899646282196
    2. 'x' → logprob: -2.927159070968628
    3. 'ignored' → logprob: -3.677159070968628
    4. '('' → logprob: -4.052158832550049
    5. ''' → logprob: -4.552158832550049
    6. 'b' → logprob: -4.677158832550049
    7. '0' → logprob: -4.802158832550049
    8. '[' → logprob: -5.177158832550049
    9. 'bits' → logprob: -5.427158832550049
    10. ''x' → logprob: -5.677158832550049

Token 2658: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06026912480592728
    2. 'x' → logprob: -3.8102691173553467
    3. '#' → logprob: -4.060269355773926
    4. 'for' → logprob: -4.560269355773926
    5. '
' → logprob: -5.560269355773926
    6. 'count' → logprob: -6.435269355773926
    7. 'def' → logprob: -7.185269355773926
    8. '```' → logprob: -7.185269355773926
    9. 'remaining' → logprob: -7.435269355773926
    10. 'unknown' → logprob: -8.685269355773926

Token 2659: ' y' (ID: 342)
  Prédit: 'ignored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignored' → logprob: -0.14725187420845032
    2. 'checked' → logprob: -3.022251844406128
    3. 'not' → logprob: -3.647251844406128
    4. 'passed' → logprob: -4.272252082824707
    5. 'sk' → logprob: -4.397252082824707
    6. 'known' → logprob: -4.647252082824707
    7. 'unknown' → logprob: -5.022252082824707
    8. 'pass' → logprob: -5.772252082824707
    9. 'already' → logprob: -5.897252082824707
    10. '0' → logprob: -6.522252082824707

Token 2660: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21306824684143066
    2. 'for' → logprob: -2.4630682468414307
    3. '```' → logprob: -2.5880682468414307
    4. 'x' → logprob: -4.713068008422852
    5. ' for' → logprob: -5.463068008422852
    6. '#' → logprob: -5.463068008422852
    7. '=' → logprob: -5.588068008422852
    8. '``' → logprob: -5.963068008422852
    9. '
' → logprob: -6.588068008422852
    10. ')' → logprob: -6.713068008422852

Token 2661: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013276233337819576
    2. ''x' → logprob: -4.513276100158691
    3. 'ignored' → logprob: -6.513276100158691
    4. '#' → logprob: -9.013276100158691
    5. '0' → logprob: -9.388276100158691
    6. 'not' → logprob: -9.513276100158691
    7. 'excluded' → logprob: -9.888276100158691
    8. '1' → logprob: -10.013276100158691
    9. ''' → logprob: -10.138276100158691
    10. ' x' → logprob: -10.263276100158691

Token 2662: '?

' (ID: 1715)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04919981583952904
    2. 'for' → logprob: -3.6741998195648193
    3. 'x' → logprob: -4.42419958114624
    4. '```' → logprob: -5.29919958114624
    5. 'count' → logprob: -6.67419958114624
    6. '#' → logprob: -7.17419958114624
    7. 'remaining' → logprob: -7.42419958114624
    8. ' for' → logprob: -7.67419958114624
    9. '
' → logprob: -7.79919958114624
    10. 'def' → logprob: -7.92419958114624

Token 2663: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14171954989433289
    2. 'for' → logprob: -2.5167195796966553
    3. '#' → logprob: -4.141719341278076
    4. '   ' → logprob: -4.266719341278076
    5. 'remaining' → logprob: -4.641719341278076
    6. 'unknown' → logprob: -4.891719341278076
    7. 'rest' → logprob: -6.516719341278076
    8. 'count' → logprob: -7.516719341278076
    9. 'un' → logprob: -7.641719341278076
    10. 'unused' → logprob: -8.516719818115234

Token 2664: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007484049070626497
    2. '   ' → logprob: -5.632483959197998
    3. '#' (adapté à ' #') → logprob: -5.882483959197998
    4. 'unknown' → logprob: -7.757483959197998
    5. 'for' → logprob: -8.507484436035156
    6. 'remaining' → logprob: -8.507484436035156
    7. 'rest' → logprob: -9.632484436035156
    8. 'count' → logprob: -9.882484436035156
    9. 'unused' → logprob: -10.757484436035156
    10. 'un' → logprob: -10.882484436035156

Token 2665: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020143331959843636
    2. '   ' → logprob: -4.145143508911133
    3. '#' → logprob: -5.520143508911133
    4. 'unknown' → logprob: -10.645143508911133
    5. 'def' → logprob: -11.395143508911133
    6. '```' → logprob: -11.520143508911133
    7. '    
' → logprob: -11.645143508911133
    8. 'remaining' → logprob: -11.645143508911133
    9. '
' → logprob: -11.770143508911133
    10. 'i' → logprob: -12.645143508911133

Token 2666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008145838975906372
    2. '2' → logprob: -5.258145809173584
    3. '```' → logprob: -7.008145809173584
    4. '3' → logprob: -7.383145809173584
    5. '
' → logprob: -7.508145809173584
    6. '[' → logprob: -7.883145809173584
    7. '4' → logprob: -8.133146286010742
    8. '`' → logprob: -10.133146286010742
    9. '#' → logprob: -10.633146286010742
    10. 'def' → logprob: -11.008146286010742

Token 2667: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17288124561309814
    2. '#' → logprob: -2.2978811264038086
    3. 'for' → logprob: -4.172881126403809
    4. '_bits' → logprob: -4.422881126403809
    5. 'bits' → logprob: -4.797881126403809
    6. '[' → logprob: -4.922881126403809
    7. '```' → logprob: -5.922881126403809
    8. '   ' → logprob: -6.297881126403809
    9. '
' → logprob: -6.297881126403809
    10. '_x' → logprob: -6.422881126403809

Token 2668: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8134047985076904
    2. ' =' → logprob: -1.8134047985076904
    3. '_count' → logprob: -2.0634047985076904
    4. 'for' → logprob: -3.1884047985076904
    5. 'count' → logprob: -3.1884047985076904
    6. '=' → logprob: -3.3134047985076904
    7. 'x' → logprob: -4.1884050369262695
    8. '7' → logprob: -4.1884050369262695
    9. '```' → logprob: -4.1884050369262695
    10. '_bits' → logprob: -4.3134050369262695

Token 2669: '5' (ID: 20)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2937566041946411
    2. '4' → logprob: -1.6687566041946411
    3. 'for' → logprob: -2.0437564849853516
    4. '[' → logprob: -2.1687564849853516
    5. '=' → logprob: -3.0437564849853516
    6. '5' → logprob: -3.2937564849853516
    7. ' =' → logprob: -3.4187564849853516
    8. 'def' → logprob: -3.4187564849853516
    9. 'count' → logprob: -3.7937564849853516
    10. '
' → logprob: -4.043756484985352

Token 2670: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057657744735479355
    2. ':' → logprob: -3.3076577186584473
    3. '```' → logprob: -5.057657718658447
    4. '6' → logprob: -5.807657718658447
    5. '...' → logprob: -6.182657718658447
    6. '=' → logprob: -6.682657718658447
    7. '#' → logprob: -6.682657718658447
    8. ',#' → logprob: -6.807657718658447
    9. '7' → logprob: -6.932657718658447
    10. ',b' → logprob: -7.057657718658447

Token 2671: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.47448471188545227
    2. '6' → logprob: -0.9744846820831299
    3. '```' → logprob: -9.22448444366455
    4. '5' → logprob: -9.97448444366455
    5. '...' → logprob: -10.09948444366455
    6. '#' → logprob: -10.09948444366455
    7. '4' → logprob: -10.22448444366455
    8. '0' → logprob: -10.34948444366455
    9. ')' → logprob: -10.34948444366455
    10. '8' → logprob: -11.41198444366455

Token 2672: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3323902487754822
    2. '#' → logprob: -2.582390308380127
    3. 'for' → logprob: -2.707390308380127
    4. ' for' → logprob: -2.832390308380127
    5. '```' → logprob: -3.832390308380127
    6. ',' → logprob: -3.957390308380127
    7. '=' → logprob: -5.332390308380127
    8. ' (' → logprob: -5.457390308380127
    9. ' and' → logprob: -5.582390308380127
    10. 'if' → logprob: -5.707390308380127

Token 2673: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7610676288604736
    2. ',' → logprob: -1.6360676288604736
    3. ':' → logprob: -2.1360676288604736
    4. ' and' → logprob: -2.5110676288604736
    5. '```' → logprob: -3.0110676288604736
    6. '<|end|>' → logprob: -3.5110676288604736
    7. '=' → logprob: -4.5110673904418945
    8. '#' → logprob: -4.5110673904418945
    9. ')' → logprob: -5.3860673904418945
    10. ':
' → logprob: -5.6360673904418945

Token 2674: '111' (ID: 8780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9386757016181946
    2. '#' → logprob: -1.5636756420135498
    3. 'already' → logprob: -2.18867564201355
    4. 'and' → logprob: -2.93867564201355
    5. '   ' → logprob: -3.18867564201355
    6. '=' → logprob: -3.81367564201355
    7. 'in' → logprob: -3.81367564201355
    8. 'b' → logprob: -3.93867564201355
    9. ' and' → logprob: -4.438675880432129
    10. ')' → logprob: -4.438675880432129

Token 2675: ' done' (ID: 4167)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08715591579675674
    2. '```' → logprob: -2.712155818939209
    3. 'for' → logprob: -4.712155818939209
    4. ')' → logprob: -6.087155818939209
    5. ' for' → logprob: -6.212155818939209
    6. ',' → logprob: -6.337155818939209
    7. '
' → logprob: -8.212156295776367
    8. ' and' → logprob: -8.212156295776367
    9. '       ' → logprob: -8.212156295776367
    10. '``' → logprob: -8.587156295776367

Token 2676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08896052092313766
    2. 'for' → logprob: -2.7139604091644287
    3. '```' → logprob: -4.213960647583008
    4. '#' → logprob: -6.463960647583008
    5. ' for' → logprob: -6.713960647583008
    6. '
' → logprob: -8.088960647583008
    7. '``' → logprob: -8.213960647583008
    8. 'x' → logprob: -8.338960647583008
    9. 'count' → logprob: -8.963960647583008
    10. ')' → logprob: -9.088960647583008

Token 2677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04424718767404556
    2. '```' → logprob: -3.2942471504211426
    3. 'for' → logprob: -5.294247150421143
    4. ' for' → logprob: -7.419247150421143
    5. '``' → logprob: -7.669247150421143
    6. '#' → logprob: -10.2942476272583
    7. 'x' → logprob: -10.6692476272583
    8. '
' → logprob: -11.5442476272583
    9. '`' → logprob: -11.9192476272583
    10. ')' → logprob: -12.0442476272583

Token 2678: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8342058062553406
    2. 'for' → logprob: -0.9592058062553406
    3. '#' (adapté à ' #') → logprob: -1.9592058658599854
    4. 'x' → logprob: -3.3342058658599854
    5. '```' → logprob: -5.834205627441406
    6. 'count' → logprob: -7.209205627441406
    7. '
' → logprob: -7.334205627441406
    8. ' for' → logprob: -7.584205627441406
    9. '``' → logprob: -7.584205627441406
    10. 'if' → logprob: -8.334205627441406

Token 2679: ' byte' (ID: 9239)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9518769383430481
    2. 'x' → logprob: -1.0768768787384033
    3. '   ' → logprob: -1.7018768787384033
    4. '#' → logprob: -2.4518768787384033
    5. '```' → logprob: -6.451877117156982
    6. 'from' → logprob: -7.201877117156982
    7. '6' → logprob: -7.951877117156982
    8. '7' → logprob: -8.076876640319824
    9. 'remaining' → logprob: -8.076876640319824
    10. 'unknown' → logprob: -8.201876640319824

Token 2680: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06436504423618317
    2. '1' → logprob: -2.8143651485443115
    3. '3' → logprob: -7.314364910125732
    4. '5' → logprob: -7.689364910125732
    5. '```' → logprob: -7.689364910125732
    6. '7' → logprob: -7.939364910125732
    7. '
' → logprob: -8.06436538696289
    8. '[' → logprob: -9.56436538696289
    9. '2' → logprob: -10.56436538696289
    10. '6' → logprob: -11.18936538696289

Token 2681: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044514138251543045
    2. 'bits' → logprob: -3.5445141792297363
    3. '6' → logprob: -4.919514179229736
    4. '#' → logprob: -5.919514179229736
    5. '_bits' → logprob: -6.669514179229736
    6. '```' → logprob: -6.669514179229736
    7. '4' → logprob: -7.419514179229736
    8. 'def' → logprob: -8.169513702392578
    9. '
' → logprob: -8.544513702392578
    10. '   ' → logprob: -8.794513702392578

Token 2682: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1252414435148239
    2. '5' → logprob: -2.50024151802063
    3. '6' → logprob: -4.000241279602051
    4. '[' → logprob: -4.375241279602051
    5. '#' → logprob: -6.500241279602051
    6. '(' → logprob: -7.250241279602051
    7. '
' → logprob: -7.625241279602051
    8. '   ' → logprob: -8.00024127960205
    9. '7' → logprob: -8.25024127960205
    10. 's' → logprob: -8.37524127960205

Token 2683: ' fixed' (ID: 13213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3340833783149719
    2. ' not' → logprob: -2.209083318710327
    3. '=' → logprob: -2.459083318710327
    4. '   ' → logprob: -3.959083318710327
    5. '==' → logprob: -4.584083557128906
    6. '```' → logprob: -4.584083557128906
    7. '#' → logprob: -4.709083557128906
    8. ' =' → logprob: -4.959083557128906
    9. 'in' → logprob: -5.084083557128906
    10. 'count' → logprob: -5.459083557128906

Token 2684: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43885496258735657
    2. '=' → logprob: -2.188854932785034
    3. ' =' → logprob: -2.688854932785034
    4. '
' → logprob: -3.563854932785034
    5. ':
' → logprob: -3.938854932785034
    6. '==' → logprob: -3.938854932785034
    7. ':' → logprob: -4.063855171203613
    8. '<|end|>' → logprob: -4.313855171203613
    9. '```' → logprob: -4.313855171203613
    10. '#' → logprob: -4.438855171203613

Token 2685: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5793163180351257
    2. ''' → logprob: -1.7043163776397705
    3. '='' → logprob: -2.4543163776397705
    4. 'not' → logprob: -2.4543163776397705
    5. '0' → logprob: -3.2043163776397705
    6. 'in' → logprob: -4.579316139221191
    7. 'b' → logprob: -4.829316139221191
    8. '=
' → logprob: -5.704316139221191
    9. ' not' → logprob: -5.829316139221191
    10. '('' → logprob: -5.829316139221191

Token 2686: ' done' (ID: 4167)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07071112096309662
    2. '```' → logprob: -3.195711135864258
    3. 'for' → logprob: -4.445711135864258
    4. '
' → logprob: -4.695711135864258
    5. ' for' → logprob: -5.945711135864258
    6. ',' → logprob: -6.945711135864258
    7. '``' → logprob: -7.070711135864258
    8. '#' → logprob: -7.570711135864258
    9. ')' → logprob: -7.695711135864258
    10. 'def' → logprob: -8.195711135864258

Token 2687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16299186646938324
    2. 'for' → logprob: -2.537991762161255
    3. '```' → logprob: -3.412991762161255
    4. '#' → logprob: -3.912991762161255
    5. '
' → logprob: -4.537992000579834
    6. '``' → logprob: -5.662992000579834
    7. ' for' → logprob: -6.162992000579834
    8. 'x' → logprob: -6.537992000579834
    9. 'count' → logprob: -8.537991523742676
    10. '    
' → logprob: -9.412991523742676

Token 2688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19310322403907776
    2. 'for' → logprob: -1.8181031942367554
    3. '```' → logprob: -5.193103313446045
    4. ' for' → logprob: -5.818103313446045
    5. '#' → logprob: -5.943103313446045
    6. 'x' → logprob: -6.818103313446045
    7. '
' → logprob: -7.943103313446045
    8. '``' → logprob: -8.318102836608887
    9. 'count' → logprob: -8.693102836608887
    10. ',' → logprob: -9.818102836608887

Token 2689: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9681937098503113
    2. '   ' → logprob: -1.093193769454956
    3. 'x' → logprob: -1.468193769454956
    4. 'count' → logprob: -3.093193769454956
    5. '#' (adapté à ' #') → logprob: -5.593193531036377
    6. 'cnt' → logprob: -5.968193531036377
    7. '```' → logprob: -6.093193531036377
    8. '``' → logprob: -8.343194007873535
    9. 'i' → logprob: -8.968194007873535
    10. 'total' → logprob: -9.093194007873535

Token 2690: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030609628185629845
    2. 'for' → logprob: -4.280609607696533
    3. '#' → logprob: -4.530609607696533
    4. '   ' → logprob: -5.405609607696533
    5. '```' → logprob: -7.655609607696533
    6. 'count' → logprob: -8.905610084533691
    7. 'unknown' → logprob: -9.155610084533691
    8. '``' → logprob: -9.530610084533691
    9. 'i' → logprob: -9.780610084533691
    10. 'cnt' → logprob: -10.030610084533691

Token 2691: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.26524850726127625
    2. '5' → logprob: -1.6402485370635986
    3. ' ' → logprob: -3.6402485370635986
    4. '[' → logprob: -5.5152482986450195
    5. '7' → logprob: -6.3902482986450195
    6. ' =' → logprob: -6.7652482986450195
    7. '(' → logprob: -6.8902482986450195
    8. '   ' → logprob: -7.1402482986450195
    9. ':' → logprob: -7.3902482986450195
    10. 'from' → logprob: -7.7652482986450195

Token 2692: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.009996416047215462
    2. '6' → logprob: -4.63499641418457
    3. '[' → logprob: -9.50999641418457
    4. '0' → logprob: -9.75999641418457
    5. '(' → logprob: -9.88499641418457
    6. '7' → logprob: -10.75999641418457
    7. '1' → logprob: -11.88499641418457
    8. ' ' → logprob: -11.88499641418457
    9. '#' → logprob: -12.13499641418457
    10. '```' → logprob: -12.38499641418457

Token 2693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1451045125722885
    2. ':' → logprob: -2.52010440826416
    3. '7' → logprob: -4.02010440826416
    4. '6' → logprob: -4.39510440826416
    5. '...' → logprob: -5.14510440826416
    6. '=' → logprob: -5.52010440826416
    7. '```' → logprob: -5.52010440826416
    8. '5' → logprob: -6.02010440826416
    9. '<|end|>' → logprob: -7.02010440826416
    10. '#' → logprob: -7.14510440826416

Token 2694: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9274914264678955
    2. '2' → logprob: -1.1774914264678955
    3. '1' → logprob: -2.4274914264678955
    4. '5' → logprob: -2.5524914264678955
    5. '4' → logprob: -2.9274914264678955
    6. ' ' → logprob: -3.3024914264678955
    7. '#' → logprob: -4.052491188049316
    8. '```' → logprob: -4.552491188049316
    9. '   ' → logprob: -5.052491188049316
    10. '  ' → logprob: -7.177491188049316

Token 2695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020261097699403763
    2. '7' → logprob: -4.770261287689209
    3. '5' → logprob: -5.395261287689209
    4. '```' → logprob: -5.520261287689209
    5. '...' → logprob: -7.395261287689209
    6. ',
' → logprob: -8.14526081085205
    7. ',...' → logprob: -8.27026081085205
    8. '1' → logprob: -8.39526081085205
    9. ',#' → logprob: -8.64526081085205
    10. '#' → logprob: -8.77026081085205

Token 2696: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '１' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '0' → logprob: -18.125
    6. '۱' → logprob: -18.25
    7. '   ' → logprob: -18.375
    8. '#' → logprob: -18.625
    9. '' → logprob: -18.75
    10. '१' → logprob: -19.125

Token 2697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005740356631577015
    2. ':' → logprob: -6.255740165710449
    3. '```' → logprob: -6.505740165710449
    4. '4' → logprob: -7.505740165710449
    5. '..' → logprob: -8.13074016571045
    6. '...' → logprob: -8.50574016571045
    7. '],' → logprob: -8.88074016571045
    8. '5' → logprob: -9.00574016571045
    9. ']' → logprob: -9.25574016571045
    10. '7' → logprob: -9.38074016571045

Token 2698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' ' → logprob: -17.25
    4. '۰' → logprob: -17.5
    5. '1' → logprob: -17.5
    6. '[' → logprob: -18.0
    7. '`' → logprob: -18.125
    8. '#' → logprob: -18.5
    9. '０' → logprob: -18.625
    10. '   ' → logprob: -18.625

Token 2699: ' y' (ID: 342)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7431567907333374
    2. '=' → logprob: -1.7431567907333374
    3. '#' → logprob: -2.118156909942627
    4. ' are' → logprob: -2.493156909942627
    5. '```' → logprob: -2.743156909942627
    6. '<|end|>' → logprob: -2.743156909942627
    7. ' =' → logprob: -3.243156909942627
    8. 'for' → logprob: -3.368156909942627
    9. 'not' → logprob: -3.493156909942627
    10. '   ' → logprob: -3.868156909942627

Token 2700: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13391105830669403
    2. '
' → logprob: -2.8839111328125
    3. '```' → logprob: -4.2589111328125
    4. ',' → logprob: -4.6339111328125
    5. 'def' → logprob: -4.8839111328125
    6. '#' → logprob: -5.1339111328125
    7. ')' → logprob: -5.3839111328125
    8. ' =' → logprob: -5.3839111328125
    9. '<|end|>' → logprob: -5.3839111328125
    10. '=' → logprob: -5.3839111328125

Token 2701: ' handled' (ID: 29594)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07206625491380692
    2. '#' → logprob: -3.697066307067871
    3. '```' → logprob: -3.697066307067871
    4. 'for' → logprob: -4.572066307067871
    5. '
' → logprob: -5.697066307067871
    6. ' for' → logprob: -6.822066307067871
    7. ',' → logprob: -7.197066307067871
    8. ')' → logprob: -7.197066307067871
    9. '``' → logprob: -7.572066307067871
    10. 'x' → logprob: -7.572066307067871

Token 2702: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021903986111283302
    2. '#' → logprob: -4.396903991699219
    3. '```' → logprob: -5.646903991699219
    4. 'for' → logprob: -6.271903991699219
    5. '
' → logprob: -6.396903991699219
    6. 'x' → logprob: -6.396903991699219
    7. '``' → logprob: -8.646903991699219
    8. 'count' → logprob: -9.271903991699219
    9. '    
' → logprob: -9.396903991699219
    10. 'def' → logprob: -9.396903991699219

Token 2703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057663820683956146
    2. 'x' → logprob: -2.932663917541504
    3. '```' → logprob: -6.432663917541504
    4. '#' → logprob: -7.932663917541504
    5. 'for' → logprob: -8.182663917541504
    6. '``' → logprob: -8.682663917541504
    7. '
' → logprob: -8.932663917541504
    8. 'count' → logprob: -8.932663917541504
    9. 'cnt' → logprob: -10.057663917541504
    10. '    
' → logprob: -11.057663917541504

Token 2704: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8588712811470032
    2. 'x' → logprob: -0.9838712811470032
    3. '   ' → logprob: -1.6088712215423584
    4. '```' → logprob: -6.4838714599609375
    5. '``' → logprob: -7.4838714599609375
    6. '
' → logprob: -8.608871459960938
    7. '    
' → logprob: -10.858871459960938
    8. 'count' → logprob: -10.858871459960938
    9. 'for' → logprob: -11.358871459960938
    10. ' #' → logprob: -11.483871459960938

Token 2705: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011349715292453766
    2. '#' → logprob: -4.636349678039551
    3. '   ' → logprob: -6.511349678039551
    4. '```' → logprob: -10.38634967803955
    5. 'for' → logprob: -10.63634967803955
    6. '
' → logprob: -10.76134967803955
    7. '``' → logprob: -12.01134967803955
    8. 'i' → logprob: -12.38634967803955
    9. 'count' → logprob: -12.38634967803955
    10. 'unknown' → logprob: -12.63634967803955

Token 2706: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10373831540346146
    2. '2' → logprob: -2.478738307952881
    3. '[' → logprob: -4.353738307952881
    4. '1' → logprob: -7.103738307952881
    5. '
' → logprob: -7.978738307952881
    6. '```' → logprob: -8.478738784790039
    7. '(' → logprob: -8.728738784790039
    8. '   ' → logprob: -9.353738784790039
    9. ' ' → logprob: -9.353738784790039
    10. 'bits' → logprob: -10.853738784790039

Token 2707: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8392293453216553
    2. 'bits' → logprob: -1.7142293453216553
    3. 'for' → logprob: -2.7142293453216553
    4. '_bits' → logprob: -2.7142293453216553
    5. 'positions' → logprob: -2.8392293453216553
    6. '#' → logprob: -3.2142293453216553
    7. '_positions' → logprob: -3.4642293453216553
    8. 'pos' → logprob: -3.4642293453216553
    9. '```' → logprob: -3.5892293453216553
    10. 'bit' → logprob: -3.8392293453216553

Token 2708: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9468904137611389
    2. '3' → logprob: -2.321890354156494
    3. 'count' → logprob: -2.821890354156494
    4. 'rest' → logprob: -2.946890354156494
    5. '_remaining' → logprob: -3.071890354156494
    6. ' =' → logprob: -3.196890354156494
    7. '=' → logprob: -3.321890354156494
    8. '_count' → logprob: -3.446890354156494
    9. 'remaining' → logprob: -3.571890354156494
    10. '_positions' → logprob: -3.571890354156494

Token 2709: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6418079137802124
    2. '3' → logprob: -1.5168079137802124
    3. '[' → logprob: -1.6418079137802124
    4. 'range' → logprob: -3.641808032989502
    5. ' for' → logprob: -5.141808032989502
    6. '4' → logprob: -5.266808032989502
    7. '   ' → logprob: -5.266808032989502
    8. '```' → logprob: -5.391808032989502
    9. '5' → logprob: -6.266808032989502
    10. 'list' → logprob: -6.391808032989502

Token 2710: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009348961524665356
    2. '4' → logprob: -5.1343488693237305
    3. '5' → logprob: -6.7593488693237305
    4. '[' → logprob: -6.8843488693237305
    5. '7' → logprob: -8.00934886932373
    6. '2' → logprob: -8.25934886932373
    7. '(' → logprob: -8.50934886932373
    8. '   ' → logprob: -9.13434886932373
    9. '```' → logprob: -9.75934886932373
    10. '1' → logprob: -9.88434886932373

Token 2711: '=' (ID: 28)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5500246286392212
    2. '2' → logprob: -1.9250246286392212
    3. ' not' → logprob: -2.4250245094299316
    4. '[' → logprob: -2.9250245094299316
    5. '   ' → logprob: -2.9250245094299316
    6. ',' → logprob: -3.8000245094299316
    7. 'in' → logprob: -4.175024509429932
    8. '=' → logprob: -4.425024509429932
    9. '```' → logprob: -5.175024509429932
    10. 'and' → logprob: -5.675024509429932

Token 2712: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5595263242721558
    2. '1' → logprob: -1.3095263242721558
    3. '3' → logprob: -2.3095264434814453
    4. '[' → logprob: -3.0595264434814453
    5. '5' → logprob: -6.059526443481445
    6. '2' → logprob: -6.059526443481445
    7. '4' → logprob: -6.184526443481445
    8. '   ' → logprob: -6.434526443481445
    9. ' ' → logprob: -6.684526443481445
    10. '(' → logprob: -7.309526443481445

Token 2713: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8956477642059326
    2. 'not' → logprob: -1.2706477642059326
    3. ',' → logprob: -1.8956477642059326
    4. ' not' → logprob: -2.5206477642059326
    5. '```' → logprob: -3.7706477642059326
    6. 'and' → logprob: -3.8956477642059326
    7. ' and' → logprob: -4.395648002624512
    8. 'if' → logprob: -5.395648002624512
    9. 'def' → logprob: -5.645648002624512
    10. ')' → logprob: -5.895648002624512

Token 2714: ' bit' (ID: 3546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21982024610042572
    2. '1' → logprob: -2.594820261001587
    3. 'b' → logprob: -2.844820261001587
    4. '   ' → logprob: -3.344820261001587
    5. '3' → logprob: -3.719820261001587
    6. 'bit' → logprob: -7.094820022583008
    7. '
' → logprob: -7.219820022583008
    8. '6' → logprob: -7.594820022583008
    9. '```' → logprob: -7.594820022583008
    10. '#' → logprob: -7.594820022583008

Token 2715: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000923965300898999
    2. '3' → logprob: -7.250924110412598
    3. '
' → logprob: -10.250924110412598
    4. '   ' → logprob: -10.375924110412598
    5. '6' → logprob: -10.500924110412598
    6. ' ' → logprob: -10.625924110412598
    7. '```' → logprob: -10.625924110412598
    8. ']' → logprob: -10.875924110412598
    9. '[' → logprob: -11.500924110412598
    10. '1' → logprob: -11.500924110412598

Token 2716: '=' (ID: 28)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.24706044793128967
    2. '2' → logprob: -1.9970604181289673
    3. ' not' → logprob: -3.372060537338257
    4. '```' → logprob: -3.997060537338257
    5. ']' → logprob: -4.122060298919678
    6. '3' → logprob: -5.747060298919678
    7. ')' → logprob: -6.247060298919678
    8. '   ' → logprob: -6.747060298919678
    9. 'in' → logprob: -6.872060298919678
    10. ',' → logprob: -6.872060298919678

Token 2717: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004130288027226925
    2. ''' → logprob: -5.5041303634643555
    3. '('' → logprob: -10.879130363464355
    4. '1' → logprob: -11.504130363464355
    5. ''s' → logprob: -12.004130363464355
    6. ' ' → logprob: -12.754130363464355
    7. '`' → logprob: -13.004130363464355
    8. ''o' → logprob: -13.754130363464355
    9. '```' → logprob: -13.879130363464355
    10. ' '' → logprob: -13.879130363464355

Token 2718: ' done' (ID: 4167)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5967124104499817
    2. '   ' → logprob: -1.346712350845337
    3. ' for' → logprob: -2.471712350845337
    4. ',' → logprob: -2.846712350845337
    5. '```' → logprob: -3.721712350845337
    6. '#' → logprob: -4.596712589263916
    7. 'def' → logprob: -5.596712589263916
    8. '
' → logprob: -6.346712589263916
    9. 'count' → logprob: -6.346712589263916
    10. ')' → logprob: -7.221712589263916

Token 2719: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1850084364414215
    2. 'for' → logprob: -2.3100085258483887
    3. '```' → logprob: -2.9350085258483887
    4. '#' → logprob: -4.685008525848389
    5. '
' → logprob: -5.935008525848389
    6. 'if' → logprob: -6.310008525848389
    7. '``' → logprob: -6.310008525848389
    8. ' for' → logprob: -7.810008525848389
    9. ',' → logprob: -8.43500804901123
    10. 'For' → logprob: -9.18500804901123

Token 2720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10111643373966217
    2. 'for' → logprob: -2.476116418838501
    3. ' for' → logprob: -4.72611665725708
    4. '```' → logprob: -5.97611665725708
    5. '
' → logprob: -7.72611665725708
    6. '``' → logprob: -9.226116180419922
    7. ',' → logprob: -9.851116180419922
    8. '#' → logprob: -10.101116180419922
    9. '`' → logprob: -11.226116180419922
    10. ')' → logprob: -11.351116180419922

Token 2721: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1657160520553589
    2. '   ' → logprob: -1.9157160520553589
    3. 'x' → logprob: -5.665716171264648
    4. '```' → logprob: -7.290716171264648
    5. ' for' → logprob: -8.165716171264648
    6. '#' (adapté à ' #') → logprob: -8.165716171264648
    7. '
' → logprob: -8.665716171264648
    8. '``' → logprob: -8.915716171264648
    9. 'count' → logprob: -9.040716171264648
    10. '[' → logprob: -9.790716171264648

Token 2722: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01597818359732628
    2. '   ' → logprob: -4.2659783363342285
    3. '
' → logprob: -7.5159783363342285
    4. '```' → logprob: -7.6409783363342285
    5. ' for' → logprob: -8.14097785949707
    6. 'x' → logprob: -8.26597785949707
    7. '``' → logprob: -9.51597785949707
    8. '#' → logprob: -10.14097785949707
    9. 'def' → logprob: -10.39097785949707
    10. 'positions' → logprob: -11.01597785949707

Token 2723: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002390594017924741
    2. '7' → logprob: -9.500239372253418
    3. '(' → logprob: -9.625239372253418
    4. '[' → logprob: -10.375239372253418
    5. '   ' → logprob: -10.875239372253418
    6. '```' → logprob: -11.125239372253418
    7. ' ' → logprob: -11.625239372253418
    8. '
' → logprob: -12.500239372253418
    9. '5' → logprob: -12.750239372253418
    10. '    ' → logprob: -13.375239372253418

Token 2724: ' y' (ID: 342)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14249342679977417
    2. '=' → logprob: -3.017493486404419
    3. ' not' → logprob: -3.267493486404419
    4. 'in' → logprob: -4.51749324798584
    5. '3' → logprob: -4.51749324798584
    6. '   ' → logprob: -5.26749324798584
    7. '```' → logprob: -6.01749324798584
    8. '#' → logprob: -6.01749324798584
    9. '...' → logprob: -6.14249324798584
    10. '[' → logprob: -6.39249324798584

Token 2725: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23716133832931519
    2. '=' → logprob: -2.48716139793396
    3. 'for' → logprob: -2.98716139793396
    4. ' for' → logprob: -3.98716139793396
    5. ' =' → logprob: -4.237161159515381
    6. ',' → logprob: -4.362161159515381
    7. 'x' → logprob: -5.237161159515381
    8. '
' → logprob: -5.487161159515381
    9. '       ' → logprob: -6.112161159515381
    10. '#' → logprob: -6.112161159515381

Token 2726: ' handled' (ID: 29594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.677886426448822
    2. '   ' → logprob: -1.4278864860534668
    3. ',' → logprob: -2.052886486053467
    4. ' =' → logprob: -2.552886486053467
    5. '[' → logprob: -4.802886486053467
    6. '```' → logprob: -5.177886486053467
    7. '=
' → logprob: -5.552886486053467
    8. '#' → logprob: -5.802886486053467
    9. ':' → logprob: -5.927886486053467
    10. ':
' → logprob: -6.427886486053467

Token 2727: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48872846364974976
    2. '#' → logprob: -1.6137285232543945
    3. 'for' → logprob: -1.8637285232543945
    4. '```' → logprob: -4.3637285232543945
    5. 'x' → logprob: -4.8637285232543945
    6. ' for' → logprob: -5.3637285232543945
    7. '
' → logprob: -5.6137285232543945
    8. 'count' → logprob: -6.6137285232543945
    9. '``' → logprob: -6.8637285232543945
    10. ',' → logprob: -7.4887285232543945

Token 2728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6163538694381714
    2. 'for' → logprob: -0.8663538694381714
    3. ' for' → logprob: -3.866353988647461
    4. '```' → logprob: -4.366353988647461
    5. '#' → logprob: -6.116353988647461
    6. 'count' → logprob: -7.116353988647461
    7. '
' → logprob: -7.241353988647461
    8. ',' → logprob: -7.366353988647461
    9. '``' → logprob: -7.366353988647461
    10. 'x' → logprob: -7.616353988647461

Token 2729: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05539220944046974
    2. '   ' → logprob: -3.055392265319824
    3. ' for' → logprob: -5.305392265319824
    4. '```' → logprob: -6.930392265319824
    5. '[' → logprob: -8.430392265319824
    6. '#' (adapté à ' #') → logprob: -8.680392265319824
    7. '``' → logprob: -8.680392265319824
    8. '
' → logprob: -8.805392265319824
    9. 'x' → logprob: -10.430392265319824
    10. ',' → logprob: -10.555392265319824

Token 2730: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22282899916172028
    2. '   ' → logprob: -1.972828984260559
    3. 'x' → logprob: -3.0978291034698486
    4. '#' → logprob: -5.3478288650512695
    5. 'bits' → logprob: -5.4728288650512695
    6. ' for' → logprob: -6.3478288650512695
    7. 'count' → logprob: -6.4728288650512695
    8. '```' → logprob: -7.2228288650512695
    9. '
' → logprob: -7.4728288650512695
    10. '[' → logprob: -7.4728288650512695

Token 2731: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08163875341415405
    2. '=' → logprob: -3.206638813018799
    3. '   ' → logprob: -4.456638813018799
    4. '=[' → logprob: -4.956638813018799
    5. '[' → logprob: -5.206638813018799
    6. ' =' → logprob: -5.831638813018799
    7. ' ' → logprob: -5.956638813018799
    8. 'from' → logprob: -6.956638813018799
    9. '6' → logprob: -6.956638813018799
    10. 'in' → logprob: -7.081638813018799

Token 2732: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004736395552754402
    2. '2' → logprob: -6.379736423492432
    3. '[' → logprob: -6.879736423492432
    4. 'range' → logprob: -7.254736423492432
    5. '(' → logprob: -7.629736423492432
    6. '   ' → logprob: -8.379735946655273
    7. '6' → logprob: -8.879735946655273
    8. '4' → logprob: -9.254735946655273
    9. 'i' → logprob: -9.254735946655273
    10. 'for' → logprob: -10.254735946655273

Token 2733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09137479960918427
    2. '=' → logprob: -3.3413748741149902
    3. '4' → logprob: -4.21637487411499
    4. '```' → logprob: -4.71637487411499
    5. '=[' → logprob: -5.71637487411499
    6. 'and' → logprob: -5.84137487411499
    7. ',
' → logprob: -5.84137487411499
    8. ' =' → logprob: -6.21637487411499
    9. '7' → logprob: -6.21637487411499
    10. '   ' → logprob: -6.34137487411499

Token 2734: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.625014305114746
    4. '0' → logprob: -13.875014305114746
    5. '
' → logprob: -13.875014305114746
    6. '1' → logprob: -14.500014305114746
    7. '5' → logprob: -14.750014305114746
    8. '```' → logprob: -15.125014305114746
    9. '#' → logprob: -16.125015258789062
    10. '  ' → logprob: -16.750015258789062

Token 2735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2867329716682434
    2. '4' → logprob: -1.4117329120635986
    3. '```' → logprob: -5.786733150482178
    4. ',b' → logprob: -6.536733150482178
    5. '``' → logprob: -8.41173267364502
    6. ' ,' → logprob: -8.41173267364502
    7. '=' → logprob: -8.53673267364502
    8. 'b' → logprob: -9.78673267364502
    9. '`,' → logprob: -10.03673267364502
    10. '[' → logprob: -10.03673267364502

Token 2736: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014355769380927086
    2. '4' → logprob: -4.514355659484863
    3. '0' → logprob: -6.389355659484863
    4. ' ' → logprob: -6.639355659484863
    5. '1' → logprob: -8.889355659484863
    6. '```' → logprob: -9.389355659484863
    7. ',' → logprob: -10.639355659484863
    8. '   ' → logprob: -10.889355659484863
    9. '
' → logprob: -11.264355659484863
    10. '#' → logprob: -11.639355659484863

Token 2737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22251442074775696
    2. 'for' → logprob: -2.4725143909454346
    3. '[' → logprob: -3.4725143909454346
    4. ' for' → logprob: -3.8475143909454346
    5. '```' → logprob: -3.9725143909454346
    6. '=' → logprob: -5.222514629364014
    7. '   ' → logprob: -5.347514629364014
    8. ' =' → logprob: -5.597514629364014
    9. ' in' → logprob: -5.847514629364014
    10. ':' → logprob: -5.972514629364014

Token 2738: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.437980055809021
    2. '1' → logprob: -1.062980055809021
    3. '0' → logprob: -5.0629801750183105
    4. '```' → logprob: -6.4379801750183105
    5. '7' → logprob: -7.4379801750183105
    6. ' ' → logprob: -8.312979698181152
    7. '3' → logprob: -8.687979698181152
    8. '   ' → logprob: -9.812979698181152
    9. '2' → logprob: -9.937979698181152
    10. '
' → logprob: -10.187979698181152

Token 2739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08462217450141907
    2. '```' → logprob: -3.3346221446990967
    3. 'for' → logprob: -3.9596221446990967
    4. '[' → logprob: -4.709622383117676
    5. ' for' → logprob: -5.959622383117676
    6. '=' → logprob: -5.959622383117676
    7. '``' → logprob: -6.084622383117676
    8. ' =' → logprob: -6.459622383117676
    9. '#' → logprob: -6.459622383117676
    10. '4' → logprob: -6.709622383117676

Token 2740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.77022064034827e-05
    2. '1' → logprob: -9.875097274780273
    3. '```' → logprob: -10.625097274780273
    4. '4' → logprob: -11.125097274780273
    5. ' ' → logprob: -13.000097274780273
    6. '7' → logprob: -13.625097274780273
    7. '   ' → logprob: -13.875097274780273
    8. '#' → logprob: -14.000097274780273
    9. '[' → logprob: -14.625097274780273
    10. '`' → logprob: -14.750097274780273

Token 2741: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0868338346481323
    2. '   ' → logprob: -1.8368338346481323
    3. '=' → logprob: -2.211833953857422
    4. ' for' → logprob: -2.211833953857422
    5. 'for' → logprob: -2.336833953857422
    6. ',' → logprob: -2.836833953857422
    7. '```' → logprob: -2.836833953857422
    8. 'x' → logprob: -4.211833953857422
    9. 'count' → logprob: -4.336833953857422
    10. ':' → logprob: -4.461833953857422

Token 2742: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23958687484264374
    2. '('' → logprob: -2.11458683013916
    3. ''x' → logprob: -2.86458683013916
    4. '['' → logprob: -3.98958683013916
    5. ' x' → logprob: -4.73958683013916
    6. '```' → logprob: -6.48958683013916
    7. '`' → logprob: -6.98958683013916
    8. ''' → logprob: -6.98958683013916
    9. 'range' → logprob: -7.36458683013916
    10. ' in' → logprob: -7.48958683013916

Token 2743: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2612452507019043
    2. 'for' → logprob: -1.6362452507019043
    3. ' for' → logprob: -4.511245250701904
    4. '=' → logprob: -4.761245250701904
    5. 'x' → logprob: -5.636245250701904
    6. ' =' → logprob: -5.761245250701904
    7. '
' → logprob: -6.136245250701904
    8. '[' → logprob: -6.386245250701904
    9. '```' → logprob: -6.386245250701904
    10. 'count' → logprob: -7.261245250701904

Token 2744: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6205926537513733
    2. 'for' → logprob: -0.8705926537513733
    3. 'x' → logprob: -3.8705925941467285
    4. ' for' → logprob: -4.6205925941467285
    5. '```' → logprob: -5.1205925941467285
    6. '=' → logprob: -6.2455925941467285
    7. 'count' → logprob: -6.4955925941467285
    8. '``' → logprob: -7.2455925941467285
    9. '#' → logprob: -7.3705925941467285
    10. ' =' → logprob: -7.6205925941467285

Token 2745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38394662737846375
    2. 'for' → logprob: -1.2589466571807861
    3. ' for' → logprob: -4.008946418762207
    4. '```' → logprob: -4.633946418762207
    5. '[' → logprob: -5.758946418762207
    6. '``' → logprob: -6.508946418762207
    7. ':' → logprob: -7.633946418762207
    8. 'range' → logprob: -7.633946418762207
    9. ',' → logprob: -8.383946418762207
    10. 'def' → logprob: -8.633946418762207

Token 2746: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5892276167869568
    2. '   ' → logprob: -0.8392276167869568
    3. 'x' → logprob: -5.339227676391602
    4. '```' → logprob: -5.464227676391602
    5. ' for' → logprob: -6.214227676391602
    6. '``' → logprob: -6.714227676391602
    7. 'count' → logprob: -7.964227676391602
    8. '[' → logprob: -8.714227676391602
    9. '
' → logprob: -9.214227676391602
    10. 'def' → logprob: -9.714227676391602

Token 2747: ' byte' (ID: 9239)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5981273055076599
    2. '   ' → logprob: -1.0981273651123047
    3. 'x' → logprob: -2.3481273651123047
    4. 'count' → logprob: -4.223127365112305
    5. '4' → logprob: -6.723127365112305
    6. 'total' → logprob: -6.723127365112305
    7. 'i' → logprob: -7.098127365112305
    8. 'cnt' → logprob: -7.223127365112305
    9. '```' → logprob: -7.473127365112305
    10. 'def' → logprob: -7.598127365112305

Token 2748: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011496452614665031
    2. '2' → logprob: -4.636496543884277
    3. '4' → logprob: -7.636496543884277
    4. '[' → logprob: -7.886496543884277
    5. '```' → logprob: -7.886496543884277
    6. '
' → logprob: -8.761496543884277
    7. '   ' → logprob: -9.136496543884277
    8. '#' → logprob: -9.886496543884277
    9. '(' → logprob: -10.261496543884277
    10. '`' → logprob: -10.511496543884277

Token 2749: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04940827190876007
    2. 'bits' → logprob: -3.424408197402954
    3. 'for' → logprob: -5.049408435821533
    4. '#' → logprob: -6.049408435821533
    5. 'positions' → logprob: -6.299408435821533
    6. '_bits' → logprob: -6.924408435821533
    7. '```' → logprob: -7.049408435821533
    8. '   ' → logprob: -7.299408435821533
    9. 'x' → logprob: -7.424408435821533
    10. ' =' → logprob: -7.674408435821533

Token 2750: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5136286616325378
    2. '   ' → logprob: -1.0136287212371826
    3. 'for' → logprob: -4.2636284828186035
    4. 'def' → logprob: -5.1386284828186035
    5. ' =' → logprob: -5.2636284828186035
    6. ' for' → logprob: -5.3886284828186035
    7. '```' → logprob: -5.3886284828186035
    8. ':' → logprob: -6.3886284828186035
    9. '=' → logprob: -7.2636284828186035
    10. '`' → logprob: -7.7636284828186035

Token 2751: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.689689040184021
    2. 'for' → logprob: -1.564689040184021
    3. '4' → logprob: -1.814689040184021
    4. '3' → logprob: -2.6896891593933105
    5. 'range' → logprob: -3.8146891593933105
    6. '   ' → logprob: -4.1896891593933105
    7. '5' → logprob: -4.9396891593933105
    8. '```' → logprob: -5.1896891593933105
    9. ' for' → logprob: -6.0646891593933105
    10. '``' → logprob: -6.8146891593933105

Token 2752: '7' (ID: 22)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02227712608873844
    2. '3' → logprob: -4.272277355194092
    3. '4' → logprob: -5.147277355194092
    4. '7' → logprob: -6.772277355194092
    5. '[' → logprob: -6.897277355194092
    6. '0' → logprob: -10.397276878356934
    7. ' ' → logprob: -11.272276878356934
    8. '   ' → logprob: -11.397276878356934
    9. '5' → logprob: -11.522276878356934
    10. '1' → logprob: -11.647276878356934

Token 2753: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8669975996017456
    2. '2' → logprob: -1.4919975996017456
    3. 'not' → logprob: -1.8669975996017456
    4. '=' → logprob: -2.866997718811035
    5. ',' → logprob: -2.991997718811035
    6. '```' → logprob: -3.366997718811035
    7. ']' → logprob: -4.366997718811035
    8. ' not' → logprob: -4.491997718811035
    9. '   ' → logprob: -4.741997718811035
    10. '`' → logprob: -5.116997718811035

Token 2754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020627493038773537
    2. ''' → logprob: -3.895627498626709
    3. '
' → logprob: -10.64562702178955
    4. ' ' → logprob: -11.14562702178955
    5. '[' → logprob: -11.52062702178955
    6. '['' → logprob: -11.64562702178955
    7. '   ' → logprob: -12.02062702178955
    8. ' '' → logprob: -12.14562702178955
    9. '`' → logprob: -12.64562702178955
    10. ''s' → logprob: -12.89562702178955

Token 2755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28531572222709656
    2. '```' → logprob: -2.285315752029419
    3. '   ' → logprob: -2.535315752029419
    4. 'def' → logprob: -4.41031551361084
    5. 'if' → logprob: -4.53531551361084
    6. 'not' → logprob: -4.66031551361084
    7. ' if' → logprob: -4.78531551361084
    8. 'b' → logprob: -5.03531551361084
    9. '[' → logprob: -5.53531551361084
    10. ' not' → logprob: -5.91031551361084

Token 2756: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5401481986045837
    2. '2' → logprob: -0.9151481986045837
    3. '3' → logprob: -5.2901482582092285
    4. '   ' → logprob: -5.7901482582092285
    5. 'b' → logprob: -5.7901482582092285
    6. '[' → logprob: -6.2901482582092285
    7. '0' → logprob: -6.6651482582092285
    8. ' ' → logprob: -7.4151482582092285
    9. '#' → logprob: -7.5401482582092285
    10. '6' → logprob: -7.7901482582092285

Token 2757: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0677795484662056
    2. '2' → logprob: -2.942779541015625
    3. '[' → logprob: -4.692779541015625
    4. '```' → logprob: -5.817779541015625
    5. '   ' → logprob: -7.942779541015625
    6. '[
' → logprob: -9.317779541015625
    7. '``' → logprob: -9.942779541015625
    8. ']' → logprob: -10.442779541015625
    9. ' ' → logprob: -10.567779541015625
    10. ')' → logprob: -10.567779541015625

Token 2758: '=' (ID: 28)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03386099264025688
    2. ' not' → logprob: -3.533860921859741
    3. ')' → logprob: -6.40886116027832
    4. ',' → logprob: -7.03386116027832
    5. '```' → logprob: -7.28386116027832
    6. '=' → logprob: -8.53386116027832
    7. ']' → logprob: -9.15886116027832
    8. '
' → logprob: -9.40886116027832
    9. '`' → logprob: -9.53386116027832
    10. '...' → logprob: -9.65886116027832

Token 2759: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004817780572921038
    2. ''' → logprob: -5.629817962646484
    3. '1' → logprob: -6.754817962646484
    4. ''x' → logprob: -10.504817962646484
    5. 'x' → logprob: -11.754817962646484
    6. ' ' → logprob: -11.754817962646484
    7. '`' → logprob: -12.629817962646484
    8. ')' → logprob: -13.629817962646484
    9. '   ' → logprob: -14.504817962646484
    10. ''s' → logprob: -14.629817962646484

Token 2760: ' done' (ID: 4167)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7099077701568604
    2. '   ' → logprob: -0.9599077701568604
    3. ' for' → logprob: -2.7099077701568604
    4. '```' → logprob: -3.7099077701568604
    5. 'def' → logprob: -4.084907531738281
    6. ',' → logprob: -4.459907531738281
    7. '
' → logprob: -5.959907531738281
    8. '``' → logprob: -7.209907531738281
    9. '#' → logprob: -7.459907531738281
    10. 'count' → logprob: -8.084907531738281

Token 2761: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17675749957561493
    2. 'for' → logprob: -2.051757574081421
    3. '
' → logprob: -4.301757335662842
    4. ' for' → logprob: -4.801757335662842
    5. 'count' → logprob: -5.176757335662842
    6. '```' → logprob: -5.676757335662842
    7. 'def' → logprob: -7.301757335662842
    8. 'x' → logprob: -7.551757335662842
    9. '``' → logprob: -7.676757335662842
    10. ',' → logprob: -7.801757335662842

Token 2762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05727924033999443
    2. 'for' → logprob: -3.182279348373413
    3. '```' → logprob: -4.432279109954834
    4. '``' → logprob: -6.807279109954834
    5. ' for' → logprob: -6.932279109954834
    6. '	for' → logprob: -9.057279586791992
    7. '[' → logprob: -10.682279586791992
    8. ' ' → logprob: -10.932279586791992
    9. '       ' → logprob: -11.057279586791992
    10. '`' → logprob: -11.932279586791992

Token 2763: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07815691828727722
    2. '   ' → logprob: -2.7031569480895996
    3. ' for' → logprob: -5.4531569480896
    4. 'count' → logprob: -6.0781569480896
    5. '
' → logprob: -7.4531569480896
    6. '```' → logprob: -8.203156471252441
    7. 'i' → logprob: -8.328156471252441
    8. 'x' → logprob: -8.953156471252441
    9. 'idx' → logprob: -9.078156471252441
    10. '``' → logprob: -9.203156471252441

Token 2764: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001519503304734826
    2. '   ' → logprob: -8.001519203186035
    3. 'x' → logprob: -8.251519203186035
    4. 'bits' → logprob: -8.501519203186035
    5. '4' → logprob: -8.626519203186035
    6. '#' → logprob: -8.626519203186035
    7. ' for' → logprob: -9.126519203186035
    8. 'def' → logprob: -9.626519203186035
    9. '```' → logprob: -10.001519203186035
    10. '3' → logprob: -10.126519203186035

Token 2765: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03525328263640404
    2. '[' → logprob: -3.9102532863616943
    3. '=' → logprob: -5.410253047943115
    4. '   ' → logprob: -5.535253047943115
    5. 'from' → logprob: -6.285253047943115
    6. 'for' → logprob: -6.910253047943115
    7. ' ' → logprob: -7.035253047943115
    8. '```' → logprob: -7.285253047943115
    9. '  ' → logprob: -7.910253047943115
    10. '=[' → logprob: -8.160253524780273

Token 2766: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09645024687051773
    2. '3' → logprob: -2.4714503288269043
    3. '[' → logprob: -5.096450328826904
    4. '7' → logprob: -7.096450328826904
    5. '(' → logprob: -8.221449851989746
    6. ' ' → logprob: -8.846449851989746
    7. '  ' → logprob: -10.221449851989746
    8. '```' → logprob: -10.346449851989746
    9. '   ' → logprob: -11.096449851989746
    10. '`' → logprob: -11.346449851989746

Token 2767: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44257858395576477
    2. '=' → logprob: -1.0675785541534424
    3. ',b' → logprob: -4.5675787925720215
    4. '```' → logprob: -6.9425787925720215
    5. 'b' → logprob: -7.1925787925720215
    6. ' =' → logprob: -8.442578315734863
    7. '   ' → logprob: -8.442578315734863
    8. 'def' → logprob: -8.442578315734863
    9. ',
' → logprob: -9.067578315734863
    10. '3' → logprob: -9.442578315734863

Token 2768: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0004846538067795336
    2. '5' → logprob: -8.250484466552734
    3. ' ' → logprob: -9.750484466552734
    4. '```' → logprob: -9.875484466552734
    5. '...' → logprob: -10.750484466552734
    6. '0' → logprob: -10.875484466552734
    7. '1' → logprob: -11.000484466552734
    8. '2' → logprob: -11.375484466552734
    9. '   ' → logprob: -11.375484466552734
    10. '4' → logprob: -11.375484466552734

Token 2769: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044673848897218704
    2. ' =' → logprob: -3.7946739196777344
    3. 'for' → logprob: -4.544673919677734
    4. '[' → logprob: -6.044673919677734
    5. '```' → logprob: -6.169673919677734
    6. 'def' → logprob: -6.294673919677734
    7. ',' → logprob: -6.919673919677734
    8. ' for' → logprob: -7.044673919677734
    9. '   ' → logprob: -7.794673919677734
    10. 'in' → logprob: -8.044673919677734

Token 2770: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27651479840278625
    2. '=' → logprob: -2.776514768600464
    3. 'for' → logprob: -2.776514768600464
    4. '```' → logprob: -3.276514768600464
    5. ' =' → logprob: -3.526514768600464
    6. 'def' → logprob: -4.026515007019043
    7. '``' → logprob: -5.276515007019043
    8. ',' → logprob: -5.526515007019043
    9. 'x' → logprob: -5.651515007019043
    10. '_count' → logprob: -5.901515007019043

Token 2771: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03554461896419525
    2. '```' → logprob: -4.660544395446777
    3. 'for' → logprob: -4.660544395446777
    4. '=' → logprob: -5.285544395446777
    5. ' =' → logprob: -5.410544395446777
    6. ' for' → logprob: -6.035544395446777
    7. '[' → logprob: -6.785544395446777
    8. ',' → logprob: -6.785544395446777
    9. '``' → logprob: -7.410544395446777
    10. ':' → logprob: -8.285544395446777

Token 2772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026036028284579515
    2. '```' → logprob: -6.252603530883789
    3. 'def' → logprob: -8.377603530883789
    4. 'for' → logprob: -8.377603530883789
    5. '``' → logprob: -9.627603530883789
    6. ' for' → logprob: -9.627603530883789
    7. 'x' → logprob: -10.127603530883789
    8. '
' → logprob: -10.752603530883789
    9. ')' → logprob: -12.377603530883789
    10. '[' → logprob: -12.627603530883789

Token 2773: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009951692074537277
    2. 'x' → logprob: -4.759951591491699
    3. '```' → logprob: -6.884951591491699
    4. '
' → logprob: -8.8849515914917
    5. '``' → logprob: -9.7599515914917
    6. 'for' → logprob: -10.1349515914917
    7. '#' (adapté à ' #') → logprob: -10.5099515914917
    8. 'def' → logprob: -11.1349515914917
    9. ' x' → logprob: -11.5099515914917
    10. 'count' → logprob: -12.1349515914917

Token 2774: ' count' (ID: 3605)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15575334429740906
    2. '   ' → logprob: -2.2807533740997314
    3. 'count' → logprob: -4.030753135681152
    4. 'for' → logprob: -4.405753135681152
    5. 'cnt' → logprob: -4.780753135681152
    6. 'def' → logprob: -7.030753135681152
    7. '```' → logprob: -7.280753135681152
    8. 'i' → logprob: -7.405753135681152
    9. '``' → logprob: -8.030753135681152
    10. '#' → logprob: -8.655753135681152

Token 2775: ' unknown' (ID: 17927)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23615992069244385
    2. 'x' → logprob: -1.7361599206924438
    3. ' x' → logprob: -4.736159801483154
    4. 'cnt' → logprob: -5.111159801483154
    5. 'count' → logprob: -5.486159801483154
    6. 'for' → logprob: -5.736159801483154
    7. ' =' → logprob: -6.111159801483154
    8. '=' → logprob: -6.236159801483154
    9. ' (' → logprob: -6.361159801483154
    10. '(' → logprob: -6.486159801483154

Token 2776: ' x' (ID: 1215)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7657883167266846
    2. 'x' → logprob: -1.0157883167266846
    3. 'count' → logprob: -3.1407883167266846
    4. '_x' → logprob: -3.3907883167266846
    5. '_counts' → logprob: -3.5157883167266846
    6. '   ' → logprob: -4.0157880783081055
    7. '=' → logprob: -4.3907880783081055
    8. '_cnt' → logprob: -5.2657880783081055
    9. 'bits' → logprob: -5.3907880783081055
    10. ' =' → logprob: -5.3907880783081055

Token 2777: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11212976276874542
    2. 'count' → logprob: -2.7371296882629395
    3. '   ' → logprob: -3.6121296882629395
    4. 'cnt' → logprob: -5.2371296882629395
    5. '_count' → logprob: -5.3621296882629395
    6. '=' → logprob: -6.4871296882629395
    7. 'unknown' → logprob: -6.9871296882629395
    8. '```' → logprob: -7.3621296882629395
    9. '#' → logprob: -8.112130165100098
    10. ' =' → logprob: -8.487130165100098

Token 2778: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06363923102617264
    2. 'x' → logprob: -2.8136391639709473
    3. '```' → logprob: -6.938639163970947
    4. 'cnt' → logprob: -8.188639640808105
    5. '
' → logprob: -9.063639640808105
    6. 'count' → logprob: -9.438639640808105
    7. 'def' → logprob: -9.813639640808105
    8. '    
' → logprob: -10.188639640808105
    9. '``' → logprob: -10.188639640808105
    10. ' x' → logprob: -10.438639640808105

Token 2779: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006173660513013601
    2. '[b' → logprob: -7.500617504119873
    3. '[' → logprob: -10.375617027282715
    4. 'range' → logprob: -11.125617027282715
    5. '   ' → logprob: -11.750617027282715
    6. ' b' → logprob: -12.250617027282715
    7. '```' → logprob: -13.375617027282715
    8. 'def' → logprob: -13.750617027282715
    9. '#' → logprob: -14.250617027282715
    10. '[
' → logprob: -14.500617027282715

Token 2780: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12986896932125092
    2. '1' → logprob: -3.254868984222412
    3. '2' → logprob: -3.629868984222412
    4. '```' → logprob: -4.004868984222412
    5. 'b' → logprob: -4.504868984222412
    6. 's' → logprob: -5.004868984222412
    7. '``' → logprob: -5.254868984222412
    8. '3' → logprob: -6.129868984222412
    9. '
' → logprob: -6.254868984222412
    10. '   ' → logprob: -6.629868984222412

Token 2781: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44435569643974304
    2. 'for' → logprob: -1.4443557262420654
    3. '   ' → logprob: -2.5693557262420654
    4. 'count' → logprob: -3.8193557262420654
    5. 'unknown' → logprob: -4.569355487823486
    6. 'cnt' → logprob: -5.069355487823486
    7. '```' → logprob: -5.319355487823486
    8. '=' → logprob: -6.444355487823486
    9. '``' → logprob: -8.194355964660645
    10. ' =' → logprob: -8.444355964660645

Token 2782: 'bits' (ID: 24043)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2737478017807007
    2. 'range' → logprob: -1.3987478017807007
    3. '[' → logprob: -1.6487478017807007
    4. '6' → logprob: -2.3987479209899902
    5. ')' → logprob: -2.5237479209899902
    6. '#' → logprob: -3.3987479209899902
    7. '```' → logprob: -3.3987479209899902
    8. '7' → logprob: -4.14874792098999
    9. '``' → logprob: -5.27374792098999
    10. '[])' → logprob: -5.39874792098999

Token 2783: ' not' (ID: 625)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2624646425247192
    2. '[' → logprob: -1.3874646425247192
    3. '7' → logprob: -2.0124645233154297
    4. '#' → logprob: -2.3874645233154297
    5. '6' → logprob: -2.7624645233154297
    6. ')' → logprob: -3.3874645233154297
    7. '4' → logprob: -3.6374645233154297
    8. '=' → logprob: -3.6374645233154297
    9. '(' → logprob: -4.51246452331543
    10. '
' → logprob: -4.76246452331543

Token 2784: ' y' (ID: 342)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.8889585733413696
    2. 'checked' → logprob: -1.3889585733413696
    3. 'handled' → logprob: -1.6389585733413696
    4. 'count' → logprob: -2.38895845413208
    5. '7' → logprob: -4.26395845413208
    6. 'used' → logprob: -4.38895845413208
    7. 'account' → logprob: -5.01395845413208
    8. '6' → logprob: -5.51395845413208
    9. 'def' → logprob: -6.13895845413208
    10. 'expl' → logprob: -6.26395845413208

Token 2785: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23384661972522736
    2. '[' → logprob: -2.483846664428711
    3. 'and' → logprob: -3.858846664428711
    4. '7' → logprob: -4.233846664428711
    5. ')' → logprob: -4.233846664428711
    6. 'def' → logprob: -4.233846664428711
    7. '6' → logprob: -4.483846664428711
    8. ':' → logprob: -4.858846664428711
    9. '),' → logprob: -5.483846664428711
    10. 's' → logprob: -5.608846664428711

Token 2786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3146829605102539
    2. 'for' → logprob: -1.439682960510254
    3. '=' → logprob: -4.564682960510254
    4. '```' → logprob: -4.689682960510254
    5. ' for' → logprob: -5.439682960510254
    6. ' =' → logprob: -5.564682960510254
    7. 'count' → logprob: -5.564682960510254
    8. '``' → logprob: -8.064682960510254
    9. ',' → logprob: -8.689682960510254
    10. 'x' → logprob: -9.064682960510254

Token 2787: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4290104806423187
    2. 'x' → logprob: -1.4290105104446411
    3. 'count' → logprob: -3.0540103912353516
    4. 'unknown' → logprob: -3.5540103912353516
    5. 'cnt' → logprob: -3.8040103912353516
    6. 'for' → logprob: -4.929010391235352
    7. '```' → logprob: -6.304010391235352
    8. '``' → logprob: -7.054010391235352
    9. '#' (adapté à ' #') → logprob: -8.679010391235352
    10. 'known' → logprob: -9.054010391235352

Token 2788: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17850704491138458
    2. '   ' → logprob: -2.803507089614868
    3. 'count' → logprob: -2.928507089614868
    4. 'unknown' → logprob: -3.678507089614868
    5. 'for' → logprob: -4.553506851196289
    6. 'cnt' → logprob: -4.678506851196289
    7. '```' → logprob: -5.928506851196289
    8. '``' → logprob: -7.928506851196289
    9. 'remaining' → logprob: -8.178506851196289
    10. '#' → logprob: -8.178506851196289

Token 2789: ' byte' (ID: 9239)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15497219562530518
    2. 'b' → logprob: -2.4049720764160156
    3. 'for' → logprob: -4.154972076416016
    4. 'def' → logprob: -4.279972076416016
    5. '[' → logprob: -4.404972076416016
    6. '#' → logprob: -5.279972076416016
    7. '
' → logprob: -6.529972076416016
    8. ' range' → logprob: -6.654972076416016
    9. '[b' → logprob: -6.779972076416016
    10. '   ' → logprob: -7.279972076416016

Token 2790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001224870327860117
    2. '[' → logprob: -7.251224994659424
    3. '```' → logprob: -7.876224994659424
    4. '`' → logprob: -9.626224517822266
    5. '
' → logprob: -10.626224517822266
    6. ']' → logprob: -11.751224517822266
    7. 'b' → logprob: -11.876224517822266
    8. '``' → logprob: -12.001224517822266
    9. '[
' → logprob: -12.626224517822266
    10. 'range' → logprob: -13.001224517822266

Token 2791: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10864678025245667
    2. '   ' → logprob: -2.983646869659424
    3. ' for' → logprob: -3.233646869659424
    4. '```' → logprob: -6.108646869659424
    5. 'x' → logprob: -6.233646869659424
    6. '
' → logprob: -6.358646869659424
    7. ' =' → logprob: -6.483646869659424
    8. '#' → logprob: -7.358646869659424
    9. 'unknown' → logprob: -7.483646869659424
    10. '``' → logprob: -7.608646869659424

Token 2792: ' are' (ID: 553)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20240209996700287
    2. ' =' → logprob: -3.577402114868164
    3. 'def' → logprob: -3.827402114868164
    4. '7' → logprob: -4.077402114868164
    5. '=' → logprob: -4.077402114868164
    6. '```' → logprob: -4.077402114868164
    7. '6' → logprob: -4.202402114868164
    8. 'range' → logprob: -4.702402114868164
    9. '   ' → logprob: -5.202402114868164
    10. 'remaining' → logprob: -5.452402114868164

Token 2793: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015384355559945107
    2. '[]' → logprob: -5.390384197235107
    3. '7' → logprob: -6.015384197235107
    4. '6' → logprob: -6.140384197235107
    5. 'range' → logprob: -6.515384197235107
    6. ' [' → logprob: -6.765384197235107
    7. '   ' → logprob: -7.265384197235107
    8. '[]
' → logprob: -7.515384197235107
    9. '(' → logprob: -7.640384197235107
    10. '['' → logprob: -8.140384674072266

Token 2794: '8' (ID: 23)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014198064804077148
    2. '[]' → logprob: -5.014198303222656
    3. 'range' → logprob: -6.264198303222656
    4. '6' → logprob: -6.514198303222656
    5. 'set' → logprob: -7.014198303222656
    6. '[]
' → logprob: -7.514198303222656
    7. '7' → logprob: -7.639198303222656
    8. ' [' → logprob: -7.764198303222656
    9. '```' → logprob: -8.139198303222656
    10. '`' → logprob: -8.514198303222656

Token 2795: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.921120822429657
    2. 'for' → logprob: -1.2961208820343018
    3. ':' → logprob: -2.2961208820343018
    4. ' for' → logprob: -2.5461208820343018
    5. ':
' → logprob: -2.9211208820343018
    6. '[' → logprob: -3.9211208820343018
    7. '=' → logprob: -4.671120643615723
    8. ')' → logprob: -4.796120643615723
    9. ' =' → logprob: -4.921120643615723
    10. 'b' → logprob: -5.171120643615723

Token 2796: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20610551536083221
    2. '[' → logprob: -3.3311054706573486
    3. 'for' → logprob: -3.3311054706573486
    4. '```' → logprob: -3.5811054706573486
    5. ' for' → logprob: -3.7061054706573486
    6. ' =' → logprob: -3.9561054706573486
    7. '=' → logprob: -4.456105709075928
    8. ':' → logprob: -4.456105709075928
    9. 'b' → logprob: -5.831105709075928
    10. ',' → logprob: -5.831105709075928

Token 2797: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9455826282501221
    2. '```' → logprob: -1.320582628250122
    3. 'for' → logprob: -1.820582628250122
    4. '``' → logprob: -2.195582628250122
    5. ' for' → logprob: -2.695582628250122
    6. '7' → logprob: -6.695582389831543
    7. '`' → logprob: -7.195582389831543
    8. 'b' → logprob: -8.070582389831543
    9. '6' → logprob: -8.195582389831543
    10. '[' → logprob: -8.445582389831543

Token 2798: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1744503378868103
    2. '   ' → logprob: -2.549450397491455
    3. '```' → logprob: -3.924450397491455
    4. '[' → logprob: -4.049450397491455
    5. ' for' → logprob: -4.174450397491455
    6. '7' → logprob: -4.174450397491455
    7. '``' → logprob: -4.924450397491455
    8. '#' (adapté à ' #') → logprob: -5.924450397491455
    9. 'range' → logprob: -6.924450397491455
    10. '6' → logprob: -7.049450397491455

Token 2799: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11489663273096085
    2. '   ' → logprob: -3.364896535873413
    3. 'range' → logprob: -4.114896774291992
    4. '
' → logprob: -4.614896774291992
    5. ' for' → logprob: -4.614896774291992
    6. '7' → logprob: -4.739896774291992
    7. '[' → logprob: -5.364896774291992
    8. '```' → logprob: -5.364896774291992
    9. '6' → logprob: -5.489896774291992
    10. '#' → logprob: -5.614896774291992

Token 2800: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08198246359825134
    2. '5' → logprob: -3.081982374191284
    3. '4' → logprob: -3.706982374191284
    4. '[' → logprob: -5.581982612609863
    5. '```' → logprob: -6.456982612609863
    6. '
' → logprob: -7.331982612609863
    7. '(' → logprob: -7.581982612609863
    8. '1' → logprob: -7.831982612609863
    9. '``' → logprob: -8.081982612609863
    10. '3' → logprob: -8.581982612609863

Token 2801: '..' (ID: 485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01361095905303955
    2. ',' → logprob: -5.76361083984375
    3. '7' → logprob: -6.01361083984375
    4. '[' → logprob: -6.13861083984375
    5. ' =' → logprob: -6.51361083984375
    6. '```' → logprob: -6.63861083984375
    7. '=
' → logprob: -6.88861083984375
    8. '==' → logprob: -8.26361083984375
    9. ':' → logprob: -8.38861083984375
    10. '>' → logprob: -8.51361083984375

Token 2802: 'bit' (ID: 6516)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20809274911880493
    2. '7' → logprob: -2.20809268951416
    3. '5' → logprob: -2.95809268951416
    4. '6' → logprob: -4.33309268951416
    5. '[' → logprob: -5.20809268951416
    6. '#' → logprob: -6.45809268951416
    7. '   ' → logprob: -6.45809268951416
    8. '(' → logprob: -6.58309268951416
    9. '
' → logprob: -7.58309268951416
    10. '```' → logprob: -7.83309268951416

Token 2803: '0' (ID: 15)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0019092427100986242
    2. '5' → logprob: -6.376909255981445
    3. '7' → logprob: -9.001909255981445
    4. '4' → logprob: -10.626909255981445
    5. '0' → logprob: -10.751909255981445
    6. '```' → logprob: -11.626909255981445
    7. '3' → logprob: -12.001909255981445
    8. '1' → logprob: -12.126909255981445
    9. '[' → logprob: -12.626909255981445
    10. ' ' → logprob: -13.001909255981445

Token 2804: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8757002949714661
    2. '   ' → logprob: -2.1257002353668213
    3. ' =' → logprob: -2.2507002353668213
    4. 'for' → logprob: -2.6257002353668213
    5. '=' → logprob: -2.8757002353668213
    6. '```' → logprob: -3.0007002353668213
    7. ':' → logprob: -3.1257002353668213
    8. ' for' → logprob: -3.1257002353668213
    9. ',' → logprob: -3.6257002353668213
    10. '7' → logprob: -4.3757004737854

Token 2805: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10352016240358353
    2. 'for' → logprob: -2.603520154953003
    3. '7' → logprob: -4.853520393371582
    4. '   ' → logprob: -5.478520393371582
    5. 'range' → logprob: -5.603520393371582
    6. '4' → logprob: -6.228520393371582
    7. ' for' → logprob: -6.603520393371582
    8. ' [' → logprob: -6.853520393371582
    9. '#' → logprob: -7.103520393371582
    10. '5' → logprob: -7.228520393371582

Token 2806: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.028581911697983742
    2. '4' → logprob: -4.7785820960998535
    3. '6' → logprob: -4.9035820960998535
    4. ''' → logprob: -5.2785820960998535
    5. '5' → logprob: -5.7785820960998535
    6. '0' → logprob: -6.4035820960998535
    7. '1' → logprob: -7.1535820960998535
    8. ' ' → logprob: -7.7785820960998535
    9. '3' → logprob: -8.278581619262695
    10. '[' → logprob: -8.903581619262695

Token 2807: '],[' (ID: 32964)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7335416674613953
    2. ',' → logprob: -1.35854172706604
    3. '7' → logprob: -1.73354172706604
    4. '...' → logprob: -3.73354172706604
    5. ':' → logprob: -4.108541488647461
    6. '4' → logprob: -4.858541488647461
    7. '6' → logprob: -4.983541488647461
    8. '...]' → logprob: -5.358541488647461
    9. ':]' → logprob: -5.483541488647461
    10. '...,' → logprob: -5.983541488647461

Token 2808: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.29689642786979675
    2. '1' → logprob: -1.9218964576721191
    3. '7' → logprob: -2.421896457672119
    4. '5' → logprob: -4.796896457672119
    5. ']' → logprob: -5.046896457672119
    6. '
' → logprob: -6.296896457672119
    7. ' ' → logprob: -7.421896457672119
    8. '0' → logprob: -7.546896457672119
    9. '6' → logprob: -7.546896457672119
    10. '3' → logprob: -7.671896457672119

Token 2809: '],[' (ID: 32964)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3742409944534302
    2. ',' → logprob: -1.8742409944534302
    3. '],[' → logprob: -2.4992408752441406
    4. ']' → logprob: -3.3742408752441406
    5. '7' → logprob: -4.249240875244141
    6. '...' → logprob: -4.749240875244141
    7. '2' → logprob: -4.874240875244141
    8. '],
' → logprob: -6.124240875244141
    9. '6' → logprob: -6.249240875244141
    10. '4' → logprob: -6.624240875244141

Token 2810: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06015610694885254
    2. '7' → logprob: -3.4351561069488525
    3. '4' → logprob: -3.8101561069488525
    4. '6' → logprob: -6.435155868530273
    5. '0' → logprob: -7.435155868530273
    6. '1' → logprob: -7.810155868530273
    7. '5' → logprob: -7.935155868530273
    8. ']' → logprob: -8.060155868530273
    9. ' ' → logprob: -8.310155868530273
    10. '3' → logprob: -9.060155868530273

Token 2811: '],[' (ID: 32964)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.260862946510315
    2. '],[' → logprob: -1.260862946510315
    3. ']' → logprob: -1.510862946510315
    4. ',' → logprob: -2.1358628273010254
    5. '...' → logprob: -3.3858628273010254
    6. '3' → logprob: -3.5108628273010254
    7. '7' → logprob: -4.260862827301025
    8. ']=' → logprob: -5.510862827301025
    9. '],'' → logprob: -6.260862827301025
    10. '],
' → logprob: -6.760862827301025

Token 2812: '3' (ID: 18)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5575868487358093
    2. '3' → logprob: -1.432586908340454
    3. '4' → logprob: -1.682586908340454
    4. '5' → logprob: -6.932586669921875
    5. ']' → logprob: -7.307586669921875
    6. '6' → logprob: -7.557586669921875
    7. '
' → logprob: -8.682586669921875
    8. ' ' → logprob: -9.057586669921875
    9. '])' → logprob: -9.932586669921875
    10. '```' → logprob: -10.182586669921875

Token 2813: '],[' (ID: 32964)
  Prédit: '],['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.47900840640068054
    2. '],' → logprob: -1.979008436203003
    3. ',' → logprob: -2.354008436203003
    4. '4' → logprob: -2.479008436203003
    5. ']' → logprob: -2.979008436203003
    6. '7' → logprob: -4.979008197784424
    7. '],
' → logprob: -6.104008197784424
    8. '...' → logprob: -6.604008197784424
    9. ',
' → logprob: -8.104008674621582
    10. '#' → logprob: -8.479008674621582

Token 2814: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005802351515740156
    2. '7' → logprob: -5.380802154541016
    3. '6' → logprob: -7.630802154541016
    4. '5' → logprob: -8.505802154541016
    5. ',' → logprob: -9.005802154541016
    6. '
' → logprob: -9.255802154541016
    7. ']' → logprob: -9.505802154541016
    8. '],' → logprob: -9.505802154541016
    9. ' ' → logprob: -10.005802154541016
    10. '#' → logprob: -11.505802154541016

Token 2815: '],[' (ID: 32964)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4529554545879364
    2. '],[' → logprob: -1.5779554843902588
    3. '],' → logprob: -2.952955484390259
    4. ']' → logprob: -2.952955484390259
    5. '5' → logprob: -3.327955484390259
    6. '...' → logprob: -5.20295524597168
    7. '4' → logprob: -5.57795524597168
    8. '7' → logprob: -6.20295524597168
    9. ']=' → logprob: -6.45295524597168
    10. '#' → logprob: -7.70295524597168

Token 2816: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.063287153840065
    2. '5' → logprob: -2.8132872581481934
    3. '7' → logprob: -6.938287258148193
    4. '
' → logprob: -8.688286781311035
    5. ',' → logprob: -10.063286781311035
    6. '6' → logprob: -10.438286781311035
    7. ' ' → logprob: -10.563286781311035
    8. ']' → logprob: -10.563286781311035
    9. '],' → logprob: -11.188286781311035
    10. '#' → logprob: -11.313286781311035

Token 2817: '],[' (ID: 32964)
  Prédit: '],['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.6959933638572693
    2. ',' → logprob: -0.8209933638572693
    3. '],' → logprob: -2.945993423461914
    4. ']' → logprob: -6.070993423461914
    5. '7' → logprob: -6.570993423461914
    6. '6' → logprob: -6.695993423461914
    7. '],
' → logprob: -7.070993423461914
    8. '],'' → logprob: -7.195993423461914
    9. ',
' → logprob: -8.070993423461914
    10. '...' → logprob: -8.070993423461914

Token 2818: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5243887305259705
    2. '4' → logprob: -0.8993887305259705
    3. '7' → logprob: -7.399388790130615
    4. ']' → logprob: -8.274388313293457
    5. ',' → logprob: -9.024388313293457
    6. ' ' → logprob: -9.774388313293457
    7. '5' → logprob: -10.274388313293457
    8. '#' → logprob: -10.774388313293457
    9. '
' → logprob: -10.774388313293457
    10. ''' → logprob: -10.899388313293457

Token 2819: '],[' (ID: 32964)
  Prédit: '],['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.08812641352415085
    2. ',' → logprob: -2.5881264209747314
    3. '7' → logprob: -5.463126182556152
    4. '],' → logprob: -5.588126182556152
    5. ']' → logprob: -7.463126182556152
    6. '],
' → logprob: -8.338126182556152
    7. '),(' → logprob: -9.713126182556152
    8. '6' → logprob: -9.963126182556152
    9. '#' → logprob: -10.213126182556152
    10. '4' → logprob: -10.338126182556152

Token 2820: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01886763982474804
    2. '6' → logprob: -4.143867492675781
    3. ']' → logprob: -6.268867492675781
    4. '4' → logprob: -7.643867492675781
    5. '#' → logprob: -8.893867492675781
    6. '0' → logprob: -9.518867492675781
    7. '
' → logprob: -9.768867492675781
    8. '])' → logprob: -9.768867492675781
    9. '...' → logprob: -11.018867492675781
    10. '```' → logprob: -11.143867492675781

Token 2821: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08506373316049576
    2. ']=' → logprob: -3.2100636959075928
    3. ']
' → logprob: -4.210063934326172
    4. '7' → logprob: -5.085063934326172
    5. ',' → logprob: -5.460063934326172
    6. ']:
' → logprob: -5.585063934326172
    7. ']:' → logprob: -6.585063934326172
    8. '   ' → logprob: -6.585063934326172
    9. 'def' → logprob: -6.585063934326172
    10. '],' → logprob: -6.710063934326172

Token 2822: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5339526534080505
    2. '[' → logprob: -1.2839527130126953
    3. ' =' → logprob: -3.4089527130126953
    4. '```' → logprob: -3.7839527130126953
    5. 'for' → logprob: -4.158952713012695
    6. '#' → logprob: -4.283952713012695
    7. ',' → logprob: -4.408952713012695
    8. '=' → logprob: -4.908952713012695
    9. ' for' → logprob: -5.033952713012695
    10. '
' → logprob: -5.283952713012695

Token 2823: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0766807422041893
    2. '[' → logprob: -3.4516806602478027
    3. ' for' → logprob: -4.201680660247803
    4. 'for' → logprob: -4.701680660247803
    5. '```' → logprob: -4.826680660247803
    6. ',' → logprob: -5.576680660247803
    7. '``' → logprob: -6.701680660247803
    8. '7' → logprob: -6.826680660247803
    9. 'def' → logprob: -7.701680660247803
    10. ' =' → logprob: -7.951680660247803

Token 2824: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03200934827327728
    2. 'for' → logprob: -4.032009124755859
    3. ' for' → logprob: -5.282009124755859
    4. 'count' → logprob: -5.907009124755859
    5. '#' → logprob: -6.657009124755859
    6. 'x' → logprob: -6.782009124755859
    7. 'unknown' → logprob: -7.532009124755859
    8. 'def' → logprob: -7.782009124755859
    9. '```' → logprob: -7.782009124755859
    10. 'i' → logprob: -7.782009124755859

Token 2825: ' careful' (ID: 25120)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8020593523979187
    2. 'b' → logprob: -1.9270594120025635
    3. 'for' → logprob: -2.3020594120025635
    4. ' for' → logprob: -2.4270594120025635
    5. 'def' → logprob: -2.8020594120025635
    6. '7' → logprob: -3.0520594120025635
    7. '[' → logprob: -3.8020594120025635
    8. '   ' → logprob: -4.552059173583984
    9. ' #' → logprob: -4.677059173583984
    10. '```' → logprob: -4.677059173583984

Token 2826: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17891234159469604
    2. 'for' → logprob: -2.803912401199341
    3. '[' → logprob: -2.928912401199341
    4. ' for' → logprob: -4.178912162780762
    5. ')' → logprob: -4.803912162780762
    6. '#' → logprob: -4.803912162780762
    7. 'def' → logprob: -5.178912162780762
    8. 'b' → logprob: -5.678912162780762
    9. '=' → logprob: -6.303912162780762
    10. ' =' → logprob: -6.428912162780762

Token 2827: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7018178105354309
    2. 'for' → logprob: -1.0768177509307861
    3. '#' → logprob: -3.076817750930786
    4. ' for' → logprob: -3.201817750930786
    5. '7' → logprob: -3.701817750930786
    6. '[' → logprob: -4.201817989349365
    7. 'def' → logprob: -4.201817989349365
    8. '```' → logprob: -5.076817989349365
    9. ')' → logprob: -5.701817989349365
    10. 'b' → logprob: -5.951817989349365

Token 2828: ' index' (ID: 3472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03464259207248688
    2. '7' → logprob: -4.284642696380615
    3. '```' → logprob: -5.034642696380615
    4. '=' → logprob: -5.159642696380615
    5. '#' → logprob: -6.159642696380615
    6. '6' → logprob: -6.784642696380615
    7. 'def' → logprob: -7.659642696380615
    8. '5' → logprob: -7.784642696380615
    9. '=[' → logprob: -7.784642696380615
    10. '   ' → logprob: -7.909642696380615

Token 2829: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02789793349802494
    2. '```' → logprob: -4.902897834777832
    3. '[' → logprob: -5.402897834777832
    4. '7' → logprob: -5.777897834777832
    5. ':' → logprob: -6.152897834777832
    6. '==' → logprob: -6.402897834777832
    7. 's' → logprob: -6.902897834777832
    8. ' =' → logprob: -6.902897834777832
    9. 'b' → logprob: -7.027897834777832
    10. '>' → logprob: -7.277897834777832

Token 2830: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14045532047748566
    2. '4' → logprob: -3.6404552459716797
    3. '7' → logprob: -3.6404552459716797
    4. 'def' → logprob: -4.39045524597168
    5. '[' → logprob: -4.51545524597168
    6. '#' → logprob: -4.89045524597168
    7. 'in' → logprob: -5.01545524597168
    8. 'are' → logprob: -5.39045524597168
    9. '```' → logprob: -5.39045524597168
    10. '=[' → logprob: -5.64045524597168

Token 2831: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1503678560256958
    2. ']' → logprob: -1.2753678560256958
    3. ':' → logprob: -2.0253677368164062
    4. '=' → logprob: -2.9003677368164062
    5. '7' → logprob: -3.0253677368164062
    6. '   ' → logprob: -3.7753677368164062
    7. ']==' → logprob: -4.150367736816406
    8. ',' → logprob: -4.275367736816406
    9. ']=' → logprob: -4.400367736816406
    10. '```' → logprob: -4.400367736816406

Token 2832: ' MS' (ID: 15861)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0003633521846495569
    2. '[' → logprob: -9.50036334991455
    3. 'b' → logprob: -9.62536334991455
    4. ' ' → logprob: -10.12536334991455
    5. '#' → logprob: -10.37536334991455
    6. '0' → logprob: -10.50036334991455
    7. 'bit' → logprob: -10.75036334991455
    8. '```' → logprob: -11.00036334991455
    9. '3' → logprob: -11.50036334991455
    10. '   ' → logprob: -11.62536334991455

Token 2833: 'B' (ID: 33)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.44251748919487
    2. '[' → logprob: -1.0675175189971924
    3. 'def' → logprob: -5.067517280578613
    4. ']' → logprob: -5.817517280578613
    5. '[
' → logprob: -6.317517280578613
    6. '6' → logprob: -7.192517280578613
    7. 'b' → logprob: -7.817517280578613
    8. 'B' → logprob: -7.817517280578613
    9. '   ' → logprob: -8.067517280578613
    10. '[-' → logprob: -8.942517280578613

Token 2834: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3848864436149597
    2. '[' → logprob: -1.5098865032196045
    3. 'def' → logprob: -3.7598865032196045
    4. '```' → logprob: -3.8848865032196045
    5. 'b' → logprob: -4.134886264801025
    6. ')' → logprob: -4.384886264801025
    7. '[
' → logprob: -5.759886264801025
    8. ' for' → logprob: -5.759886264801025
    9. '=' → logprob: -6.134886264801025
    10. '(' → logprob: -6.134886264801025

Token 2835: 'bit' (ID: 6516)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.14172036945819855
    2. 'def' → logprob: -3.5167202949523926
    3. ']' → logprob: -4.016720294952393
    4. '4' → logprob: -4.141720294952393
    5. '#' → logprob: -4.266720294952393
    6. '0' → logprob: -4.391720294952393
    7. '5' → logprob: -4.516720294952393
    8. 'b' → logprob: -5.016720294952393
    9. ')' → logprob: -5.391720294952393
    10. '[' → logprob: -5.516720294952393

Token 2836: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0415528304874897
    2. '[' → logprob: -3.791552782058716
    3. ']' → logprob: -5.041553020477295
    4. '#' → logprob: -6.041553020477295
    5. '5' → logprob: -6.041553020477295
    6. '][' → logprob: -6.166553020477295
    7. '4' → logprob: -7.041553020477295
    8. 'def' → logprob: -7.166553020477295
    9. '=' → logprob: -7.166553020477295
    10. ')' → logprob: -7.666553020477295

Token 2837: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.557319700717926
    2. ']=' → logprob: -2.1823196411132812
    3. '=' → logprob: -2.4323196411132812
    4. ']==' → logprob: -3.3073196411132812
    5. '[' → logprob: -3.4323196411132812
    6. '][' → logprob: -3.5573196411132812
    7. ',' → logprob: -3.6823196411132812
    8. '],' → logprob: -4.307319641113281
    9. '7' → logprob: -4.557319641113281
    10. 'def' → logprob: -4.682319641113281

Token 2838: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2909769117832184
    2. '[' → logprob: -2.4159770011901855
    3. 'def' → logprob: -2.5409770011901855
    4. 'b' → logprob: -3.7909770011901855
    5. '```' → logprob: -3.9159770011901855
    6. ')' → logprob: -4.9159770011901855
    7. '#' → logprob: -5.1659770011901855
    8. 'for' → logprob: -5.5409770011901855
    9. ' for' → logprob: -5.6659770011901855
    10. '       ' → logprob: -5.7909770011901855

Token 2839: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09774807095527649
    2. '5' → logprob: -3.847748041152954
    3. '7' → logprob: -3.972748041152954
    4. '4' → logprob: -4.097748279571533
    5. '```' → logprob: -4.972748279571533
    6. '>' → logprob: -5.472748279571533
    7. 'is' → logprob: -5.847748279571533
    8. '3' → logprob: -5.972748279571533
    9. ']' → logprob: -6.097748279571533
    10. '#' → logprob: -6.097748279571533

Token 2840: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10369973629713058
    2. '5' → logprob: -3.1036996841430664
    3. '7' → logprob: -3.3536996841430664
    4. '0' → logprob: -5.103699684143066
    5. '[' → logprob: -5.228699684143066
    6. '```' → logprob: -6.103699684143066
    7. '3' → logprob: -6.853699684143066
    8. '6' → logprob: -7.228699684143066
    9. '(' → logprob: -7.478699684143066
    10. ' ' → logprob: -7.603699684143066

Token 2841: ' is' (ID: 382)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4942118227481842
    2. '[' → logprob: -2.3692119121551514
    3. ':' → logprob: -2.7442119121551514
    4. '   ' → logprob: -3.1192119121551514
    5. '=' → logprob: -3.2442119121551514
    6. ' =' → logprob: -3.8692119121551514
    7. ',' → logprob: -3.9942119121551514
    8. '```' → logprob: -4.244211673736572
    9. '][' → logprob: -4.619211673736572
    10. 'def' → logprob: -4.869211673736572

Token 2842: ' L' (ID: 451)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031749794725328684
    2. '5' → logprob: -6.253174781799316
    3. 'bit' → logprob: -7.253174781799316
    4. '4' → logprob: -8.253174781799316
    5. '```' → logprob: -9.753174781799316
    6. '#' → logprob: -9.878174781799316
    7. ''' → logprob: -10.253174781799316
    8. 'b' → logprob: -10.753174781799316
    9. '6' → logprob: -11.003174781799316
    10. '3' → logprob: -11.003174781799316

Token 2843: 'SB' (ID: 28639)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017752613639459014
    2. 'ength' → logprob: -7.00177526473999
    3. '5' → logprob: -7.87677526473999
    4. '1' → logprob: -8.876774787902832
    5. 'ist' → logprob: -9.251774787902832
    6. 'e' → logprob: -9.376774787902832
    7. '```' → logprob: -10.251774787902832
    8. 'eft' → logprob: -10.626774787902832
    9. '6' → logprob: -10.876774787902832
    10. '[' → logprob: -11.001774787902832

Token 2844: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4884631633758545
    2. '[' → logprob: -1.1134631633758545
    3. 'def' → logprob: -3.4884631633758545
    4. '=' → logprob: -5.363463401794434
    5. 'for' → logprob: -5.488463401794434
    6. ' for' → logprob: -5.988463401794434
    7. '```' → logprob: -5.988463401794434
    8. '[
' → logprob: -5.988463401794434
    9. ')' → logprob: -6.238463401794434
    10. ' =' → logprob: -6.613463401794434

Token 2845: 'bit' (ID: 6516)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.262297660112381
    2. '4' → logprob: -2.2622976303100586
    3. '5' → logprob: -2.7622976303100586
    4. '6' → logprob: -3.6372976303100586
    5. '```' → logprob: -4.512297630310059
    6. ']' → logprob: -5.387297630310059
    7. ')' → logprob: -5.512297630310059
    8. 'b' → logprob: -5.637297630310059
    9. '[' → logprob: -5.637297630310059
    10. '#' → logprob: -6.012297630310059

Token 2846: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.024608904495835304
    2. '5' → logprob: -4.274609088897705
    3. '4' → logprob: -5.024609088897705
    4. '6' → logprob: -6.899609088897705
    5. ')' → logprob: -7.149609088897705
    6. ']' → logprob: -7.274609088897705
    7. '```' → logprob: -7.274609088897705
    8. '1' → logprob: -8.149608612060547
    9. '3' → logprob: -9.524608612060547
    10. '0' → logprob: -9.899608612060547

Token 2847: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8389921188354492
    2. ']' → logprob: -1.0889921188354492
    3. 'def' → logprob: -2.713992118835449
    4. ')' → logprob: -2.963992118835449
    5. ',' → logprob: -3.838992118835449
    6. '[' → logprob: -3.963992118835449
    7. ']:
' → logprob: -4.588992118835449
    8. '```' → logprob: -4.588992118835449
    9. '):
' → logprob: -4.963992118835449
    10. ':' → logprob: -5.088992118835449

Token 2848: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0908796414732933
    2. 'for' → logprob: -2.9658796787261963
    3. ' for' → logprob: -3.7158796787261963
    4. '```' → logprob: -5.715879440307617
    5. 'def' → logprob: -6.090879440307617
    6. '[' → logprob: -6.465879440307617
    7. '#' → logprob: -6.965879440307617
    8. ' =' → logprob: -7.840879440307617
    9. '
' → logprob: -7.965879440307617
    10. '=' → logprob: -8.090879440307617

Token 2849: ' is' (ID: 382)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03295491263270378
    2. 'def' → logprob: -4.782954692840576
    3. '4' → logprob: -4.907954692840576
    4. '```' → logprob: -6.032954692840576
    5. ' ' → logprob: -6.282954692840576
    6. '   ' → logprob: -6.407954692840576
    7. '6' → logprob: -6.407954692840576
    8. '...' → logprob: -6.407954692840576
    9. '[' → logprob: -6.532954692840576
    10. '#' → logprob: -6.782954692840576

Token 2850: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003594375215470791
    2. 'not' → logprob: -6.628594398498535
    3. 'len' → logprob: -7.628594398498535
    4. 'def' → logprob: -7.628594398498535
    5. 'b' → logprob: -7.753594398498535
    6. '```' → logprob: -8.503594398498535
    7. '(' → logprob: -8.753594398498535
    8. '8' → logprob: -9.503594398498535
    9. ' ' → logprob: -9.503594398498535
    10. '1' → logprob: -9.878594398498535

Token 2851: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.15870702266693115
    2. '[' → logprob: -2.4087071418762207
    3. '1' → logprob: -3.0337071418762207
    4. ']' → logprob: -5.408707141876221
    5. ')' → logprob: -6.033707141876221
    6. '3' → logprob: -7.908707141876221
    7. '[]' → logprob: -8.033706665039062
    8. '```' → logprob: -8.283706665039062
    9. 'def' → logprob: -8.658706665039062
    10. '[
' → logprob: -9.158706665039062

Token 2852: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1978377252817154
    2. ')' → logprob: -2.5728378295898438
    3. '=' → logprob: -3.4478378295898438
    4. '   ' → logprob: -4.072837829589844
    5. '```' → logprob: -4.322837829589844
    6. 'def' → logprob: -4.447837829589844
    7. ':' → logprob: -5.197837829589844
    8. ' =' → logprob: -5.322837829589844
    9. '[
' → logprob: -6.072837829589844
    10. ']' → logprob: -6.322837829589844

Token 2853: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.573624312877655
    2. '4' → logprob: -1.4486243724822998
    3. '6' → logprob: -1.6986243724822998
    4. '3' → logprob: -5.323624134063721
    5. '0' → logprob: -5.573624134063721
    6. '5' → logprob: -5.573624134063721
    7. ']' → logprob: -6.073624134063721
    8. '[' → logprob: -7.073624134063721
    9. '```' → logprob: -7.073624134063721
    10. ' ' → logprob: -8.511124610900879

Token 2854: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043398890644311905
    2. '[' → logprob: -4.168398857116699
    3. ']==' → logprob: -4.668398857116699
    4. ':' → logprob: -5.043398857116699
    5. ']=' → logprob: -5.793398857116699
    6. '']' → logprob: -6.043398857116699
    7. ']:' → logprob: -6.543398857116699
    8. '7' → logprob: -6.543398857116699
    9. ')' → logprob: -7.668398857116699
    10. '   ' → logprob: -8.4183988571167

Token 2855: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3384082317352295
    2. '   ' → logprob: -1.9634082317352295
    3. 'def' → logprob: -2.9634082317352295
    4. ':' → logprob: -4.088408470153809
    5. '=' → logprob: -4.088408470153809
    6. ']' → logprob: -4.213408470153809
    7. ',' → logprob: -5.213408470153809
    8. ' =' → logprob: -5.213408470153809
    9. '#' → logprob: -5.463408470153809
    10. '<|end|>' → logprob: -5.713408470153809

Token 2856: '7' (ID: 22)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11259565502405167
    2. '=' → logprob: -3.237595558166504
    3. ']' → logprob: -3.487595558166504
    4. '7' → logprob: -4.362595558166504
    5. ')' → logprob: -4.737595558166504
    6. '   ' → logprob: -5.612595558166504
    7. '6' → logprob: -5.862595558166504
    8. 'def' → logprob: -6.612595558166504
    9. ']=' → logprob: -6.862595558166504
    10. ':' → logprob: -6.862595558166504

Token 2857: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18995921313762665
    2. '=' → logprob: -2.4399592876434326
    3. '[' → logprob: -3.1899592876434326
    4. 'def' → logprob: -4.3149590492248535
    5. ' =' → logprob: -4.6899590492248535
    6. 'for' → logprob: -5.8149590492248535
    7. ':' → logprob: -5.8149590492248535
    8. ',' → logprob: -6.0649590492248535
    9. '=
' → logprob: -6.3149590492248535
    10. '#' → logprob: -6.4399590492248535

Token 2858: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5387320518493652
    2. '   ' → logprob: -0.9137320518493652
    3. '#' → logprob: -5.663732051849365
    4. '```' → logprob: -6.038732051849365
    5. ')' → logprob: -6.163732051849365
    6. 'def' → logprob: -6.788732051849365
    7. '[
' → logprob: -6.913732051849365
    8. 'b' → logprob: -7.038732051849365
    9. '<|end|>' → logprob: -7.288732051849365
    10. ' for' → logprob: -7.538732051849365

Token 2859: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06573306769132614
    2. ')' → logprob: -3.815732955932617
    3. '[' → logprob: -4.440732955932617
    4. '#' (adapté à ' #') → logprob: -4.815732955932617
    5. ' for' → logprob: -5.315732955932617
    6. '```' → logprob: -5.690732955932617
    7. 'for' → logprob: -6.190732955932617
    8. ' if' → logprob: -6.440732955932617
    9. '[
' → logprob: -6.440732955932617
    10. 'def' → logprob: -6.815732955932617

Token 2860: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014726202934980392
    2. 'for' → logprob: -4.514726161956787
    3. '[' → logprob: -7.264726161956787
    4. 'def' → logprob: -7.389726161956787
    5. '       ' → logprob: -7.514726161956787
    6. ' for' → logprob: -7.514726161956787
    7. '```' → logprob: -7.764726161956787
    8. ')' → logprob: -8.514726638793945
    9. ':' → logprob: -8.889726638793945
    10. '=' → logprob: -9.014726638793945

Token 2861: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1343287229537964
    2. '#' → logprob: -1.2593287229537964
    3. '   ' → logprob: -1.2593287229537964
    4. 'def' → logprob: -3.634328842163086
    5. '[' → logprob: -3.759328842163086
    6. ' b' → logprob: -4.259328842163086
    7. ')' → logprob: -4.384328842163086
    8. '=' → logprob: -4.634328842163086
    9. 'for' → logprob: -5.509328842163086
    10. ' for' → logprob: -6.009328842163086

Token 2862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6731195449829102
    2. '[' → logprob: -0.7981195449829102
    3. '7' → logprob: -3.29811954498291
    4. '3' → logprob: -7.42311954498291
    5. ']' → logprob: -7.67311954498291
    6. '```' → logprob: -7.67311954498291
    7. ')' → logprob: -8.54811954498291
    8. '6' → logprob: -9.04811954498291
    9. '=' → logprob: -9.17311954498291
    10. '#' → logprob: -9.29811954498291

Token 2863: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026766068767756224
    2. '```' → logprob: -7.127676486968994
    3. '#' → logprob: -7.752676486968994
    4. '`' → logprob: -8.002676963806152
    5. 'def' → logprob: -8.377676963806152
    6. 'index' → logprob: -8.627676963806152
    7. 'indices' → logprob: -9.002676963806152
    8. '=' → logprob: -9.002676963806152
    9. ' =' → logprob: -9.377676963806152
    10. 'is' → logprob: -9.752676963806152

Token 2864: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8135119080543518
    2. '3' → logprob: -1.188511848449707
    3. '6' → logprob: -2.188511848449707
    4. '7' → logprob: -2.813511848449707
    5. '0' → logprob: -3.438511848449707
    6. '5' → logprob: -3.563511848449707
    7. ']' → logprob: -4.688511848449707
    8. '[' → logprob: -5.063511848449707
    9. '#' → logprob: -6.938511848449707
    10. ')' → logprob: -7.813511848449707

Token 2865: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07850181311368942
    2. ']==' → logprob: -3.5785017013549805
    3. '[' → logprob: -3.9535017013549805
    4. ']=='' → logprob: -4.5785017013549805
    5. 'not' → logprob: -5.7035017013549805
    6. '==' → logprob: -6.2035017013549805
    7. '7' → logprob: -6.3285017013549805
    8. 'def' → logprob: -6.8285017013549805
    9. '=' → logprob: -6.8285017013549805
    10. '][' → logprob: -6.9535017013549805

Token 2866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6415291428565979
    2. ']' → logprob: -2.266529083251953
    3. '[' → logprob: -2.391529083251953
    4. 'is' → logprob: -2.891529083251953
    5. ' is' → logprob: -3.016529083251953
    6. 'not' → logprob: -3.516529083251953
    7. '==' → logprob: -3.891529083251953
    8. ' not' → logprob: -4.266529083251953
    9. ' =' → logprob: -4.266529083251953
    10. '='' → logprob: -4.391529083251953

Token 2867: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0020690178498625755
    2. '7' → logprob: -7.502068996429443
    3. '1' → logprob: -7.877068996429443
    4. ''b' → logprob: -7.877068996429443
    5. '0' → logprob: -8.627069473266602
    6. 'b' → logprob: -8.877069473266602
    7. ' '' → logprob: -9.377069473266602
    8. '"' → logprob: -9.502069473266602
    9. '[' → logprob: -10.002069473266602
    10. '`' → logprob: -10.252069473266602

Token 2868: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00038038729690015316
    2. '[' → logprob: -9.000380516052246
    3. '6' → logprob: -9.250380516052246
    4. ']' → logprob: -9.250380516052246
    5. ''' → logprob: -11.000380516052246
    6. 'def' → logprob: -11.875380516052246
    7. ' ' → logprob: -12.000380516052246
    8. '```' → logprob: -12.250380516052246
    9. '`' → logprob: -12.375380516052246
    10. 'index' → logprob: -12.500380516052246

Token 2869: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13570795953273773
    2. '[' → logprob: -2.6357078552246094
    3. '```' → logprob: -4.010707855224609
    4. 'for' → logprob: -4.885707855224609
    5. ' for' → logprob: -5.135707855224609
    6. '7' → logprob: -5.260707855224609
    7. '6' → logprob: -5.510707855224609
    8. 'def' → logprob: -5.760707855224609
    9. ' =' → logprob: -6.385707855224609
    10. ')' → logprob: -6.510707855224609

Token 2870: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45090505480766296
    2. 'b' → logprob: -1.5759050846099854
    3. ' b' → logprob: -2.4509050846099854
    4. ' for' → logprob: -4.200904846191406
    5. '```' → logprob: -4.200904846191406
    6. 'for' → logprob: -4.450904846191406
    7. 'def' → logprob: -4.700904846191406
    8. '#' → logprob: -5.075904846191406
    9. '       ' → logprob: -6.325904846191406
    10. '`' → logprob: -6.450904846191406

Token 2871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24459794163703918
    2. '7' → logprob: -2.119597911834717
    3. '5' → logprob: -2.994597911834717
    4. '3' → logprob: -3.994597911834717
    5. '4' → logprob: -4.244597911834717
    6. '6' → logprob: -4.619597911834717
    7. '[' → logprob: -6.619597911834717
    8. '2' → logprob: -6.619597911834717
    9. '```' → logprob: -7.619597911834717
    10. '
' → logprob: -8.369598388671875

Token 2872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008454177528619766
    2. '```' → logprob: -6.258454322814941
    3. '=' → logprob: -6.633454322814941
    4. '6' → logprob: -6.633454322814941
    5. '7' → logprob: -6.883454322814941
    6. '3' → logprob: -7.508454322814941
    7. ']' → logprob: -7.633454322814941
    8. 'def' → logprob: -8.133454322814941
    9. '][' → logprob: -8.508454322814941
    10. '`' → logprob: -8.633454322814941

Token 2873: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.017319034785032272
    2. '3' → logprob: -4.642319202423096
    3. '7' → logprob: -5.767319202423096
    4. '5' → logprob: -6.142319202423096
    5. '1' → logprob: -6.267319202423096
    6. '6' → logprob: -9.142318725585938
    7. '2' → logprob: -9.517318725585938
    8. '[' → logprob: -10.392318725585938
    9. '```' → logprob: -10.392318725585938
    10. '
' → logprob: -10.642318725585938

Token 2874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03375980257987976
    2. ']==' → logprob: -3.533759832382202
    3. ']=='' → logprob: -5.783759593963623
    4. ']=' → logprob: -7.783759593963623
    5. ']='' → logprob: -8.908760070800781
    6. '```' → logprob: -9.533760070800781
    7. '[' → logprob: -9.658760070800781
    8. '==' → logprob: -10.158760070800781
    9. ']
' → logprob: -10.283760070800781
    10. ']:
' → logprob: -10.408760070800781

Token 2875: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9953919649124146
    2. '=' → logprob: -1.6203919649124146
    3. ']' → logprob: -2.245391845703125
    4. '```' → logprob: -2.245391845703125
    5. ')' → logprob: -2.620391845703125
    6. ' =' → logprob: -2.745391845703125
    7. ':' → logprob: -4.495391845703125
    8. '==' → logprob: -4.620391845703125
    9. '=
' → logprob: -5.245391845703125
    10. ']=' → logprob: -5.370391845703125

Token 2876: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.039352916181087494
    2. 'bit' → logprob: -3.7893528938293457
    3. '7' → logprob: -5.039352893829346
    4. ''b' → logprob: -5.164352893829346
    5. ''x' → logprob: -5.914352893829346
    6. 'b' → logprob: -8.414353370666504
    7. '`' → logprob: -9.164353370666504
    8. '')' → logprob: -9.289353370666504
    9. 'x' → logprob: -9.539353370666504
    10. '```' → logprob: -9.664353370666504

Token 2877: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0005039428360760212
    2. '8' → logprob: -8.500503540039062
    3. '6' → logprob: -8.750503540039062
    4. ' ' → logprob: -10.625503540039062
    5. '4' → logprob: -10.750503540039062
    6. ']' → logprob: -11.125503540039062
    7. '3' → logprob: -11.125503540039062
    8. ''' → logprob: -11.625503540039062
    9. '`' → logprob: -11.625503540039062
    10. '```' → logprob: -11.750503540039062

Token 2878: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08324774354696274
    2. '```' → logprob: -2.833247661590576
    3. 'for' → logprob: -4.333247661590576
    4. ' for' → logprob: -5.333247661590576
    5. '``' → logprob: -6.958247661590576
    6. 'def' → logprob: -7.333247661590576
    7. '[' → logprob: -7.708247661590576
    8. ')' → logprob: -8.208248138427734
    9. '       ' → logprob: -8.458248138427734
    10. 'b' → logprob: -9.333248138427734

Token 2879: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019598156213760376
    2. 'for' → logprob: -4.769598007202148
    3. ' for' → logprob: -5.144598007202148
    4. '```' → logprob: -5.519598007202148
    5. 'def' → logprob: -7.644598007202148
    6. 'count' → logprob: -9.394598007202148
    7. '``' → logprob: -9.519598007202148
    8. '
' → logprob: -9.519598007202148
    9. 'i' → logprob: -9.769598007202148
    10. ')' → logprob: -10.144598007202148

Token 2880: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01838638447225094
    2. 'x' → logprob: -4.518386363983154
    3. 'count' → logprob: -6.518386363983154
    4. ' x' → logprob: -6.768386363983154
    5. '```' → logprob: -6.893386363983154
    6. ' for' → logprob: -7.018386363983154
    7. 'for' → logprob: -7.268386363983154
    8. '
' → logprob: -7.893386363983154
    9. 'i' → logprob: -7.893386363983154
    10. '#' (adapté à ' #') → logprob: -7.893386363983154

Token 2881: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039054419845342636
    2. 'for' → logprob: -3.6640543937683105
    3. ' for' → logprob: -4.9140543937683105
    4. 'x' → logprob: -6.5390543937683105
    5. 'i' → logprob: -6.9140543937683105
    6. 'count' → logprob: -7.0390543937683105
    7. '```' → logprob: -7.4140543937683105
    8. 'def' → logprob: -7.9140543937683105
    9. 'idx' → logprob: -8.039054870605469
    10. '
' → logprob: -9.289054870605469

Token 2882: ' to' (ID: 316)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2641141414642334
    2. '   ' → logprob: -1.2641141414642334
    3. 'unknown' → logprob: -1.2641141414642334
    4. '#' → logprob: -2.6391141414642334
    5. 'for' → logprob: -3.0141141414642334
    6. '```' → logprob: -5.1391143798828125
    7. 'count' → logprob: -5.3891143798828125
    8. ' for' → logprob: -5.8891143798828125
    9. 'idx' → logprob: -6.0141143798828125
    10. ' unknown' → logprob: -6.3891143798828125

Token 2883: ' understand' (ID: 4218)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45576080679893494
    2. 'for' → logprob: -2.3307607173919678
    3. '7' → logprob: -2.4557607173919678
    4. 'range' → logprob: -3.0807607173919678
    5. 'continue' → logprob: -3.5807607173919678
    6. 'def' → logprob: -3.9557607173919678
    7. '#' → logprob: -3.9557607173919678
    8. '6' → logprob: -4.830760955810547
    9. 'len' → logprob: -4.830760955810547
    10. 'complete' → logprob: -4.955760955810547

Token 2884: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2014676332473755
    2. '#' → logprob: -1.5764676332473755
    3. '   ' → logprob: -1.7014676332473755
    4. 'unknown' → logprob: -1.8264676332473755
    5. 'for' → logprob: -2.576467514038086
    6. 'count' → logprob: -3.826467514038086
    7. ' for' → logprob: -4.076467514038086
    8. '```' → logprob: -5.576467514038086
    9. 'idx' → logprob: -5.701467514038086
    10. ' x' → logprob: -5.951467514038086

Token 2885: ' numbering' (ID: 169570)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8137198686599731
    2. '[' → logprob: -1.1887198686599731
    3. 'b' → logprob: -3.0637197494506836
    4. '=' → logprob: -3.0637197494506836
    5. 'def' → logprob: -3.6887197494506836
    6. 'for' → logprob: -4.063719749450684
    7. ')' → logprob: -4.188719749450684
    8. ' for' → logprob: -4.188719749450684
    9. '```' → logprob: -4.188719749450684
    10. '       ' → logprob: -4.438719749450684

Token 2886: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08385150134563446
    2. '[' → logprob: -2.8338515758514404
    3. '#' → logprob: -5.458851337432861
    4. 'def' → logprob: -5.458851337432861
    5. 'b' → logprob: -6.083851337432861
    6. ' for' → logprob: -6.208851337432861
    7. '```' → logprob: -6.208851337432861
    8. ',' → logprob: -7.333851337432861
    9. ':' → logprob: -7.333851337432861
    10. 'for' → logprob: -7.458851337432861

Token 2887: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15719063580036163
    2. ' for' → logprob: -2.6571905612945557
    3. 'count' → logprob: -4.157190799713135
    4. '```' → logprob: -4.157190799713135
    5. 'for' → logprob: -4.407190799713135
    6. 'x' → logprob: -4.657190799713135
    7. ' count' → logprob: -5.032190799713135
    8. ' x' → logprob: -5.532190799713135
    9. '#' → logprob: -6.657190799713135
    10. 'i' → logprob: -6.657190799713135

Token 2888: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43973129987716675
    2. '7' → logprob: -1.4397313594818115
    3. '[' → logprob: -2.1897313594818115
    4. ']' → logprob: -5.689731121063232
    5. ')' → logprob: -6.814731121063232
    6. '```' → logprob: -7.439731121063232
    7. '6' → logprob: -8.06473159790039
    8. '=' → logprob: -8.43973159790039
    9. '][' → logprob: -8.68973159790039
    10. 'def' → logprob: -8.93973159790039

Token 2889: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26658132672309875
    2. 'index' → logprob: -2.3915812969207764
    3. 'indices' → logprob: -3.2665812969207764
    4. '=' → logprob: -3.3915812969207764
    5. '```' → logprob: -4.5165815353393555
    6. '_index' → logprob: -4.6415815353393555
    7. ' =' → logprob: -4.7665815353393555
    8. 'indexes' → logprob: -4.8915815353393555
    9. '7' → logprob: -5.1415815353393555
    10. '=[' → logprob: -5.1415815353393555

Token 2890: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.865317165851593
    2. '6' → logprob: -1.2403171062469482
    3. '4' → logprob: -1.8653171062469482
    4. '0' → logprob: -2.6153171062469482
    5. '3' → logprob: -3.4903171062469482
    6. '5' → logprob: -4.240317344665527
    7. ']' → logprob: -4.365317344665527
    8. '
' → logprob: -6.865317344665527
    9. '])' → logprob: -7.365317344665527
    10. '][' → logprob: -8.115317344665527

Token 2891: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024453850463032722
    2. ']==' → logprob: -4.399453639984131
    3. ']=='' → logprob: -4.649453639984131
    4. ']=' → logprob: -7.899453639984131
    5. ']='' → logprob: -8.274454116821289
    6. '7' → logprob: -8.774454116821289
    7. '...' → logprob: -8.899454116821289
    8. '   ' → logprob: -9.024454116821289
    9. ']
' → logprob: -9.024454116821289
    10. ']!='' → logprob: -9.024454116821289

Token 2892: 'bit' (ID: 6516)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23048323392868042
    2. '7' → logprob: -1.6054832935333252
    3. 'bit' → logprob: -7.105483055114746
    4. '`' → logprob: -7.355483055114746
    5. ' '' → logprob: -7.480483055114746
    6. '6' → logprob: -7.605483055114746
    7. '```' → logprob: -7.980483055114746
    8. '
' → logprob: -7.980483055114746
    9. '0' → logprob: -8.105483055114746
    10. 'b' → logprob: -8.605483055114746

Token 2893: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00027254095766693354
    2. ']' → logprob: -8.500272750854492
    3. '[' → logprob: -10.625272750854492
    4. '```' → logprob: -11.625272750854492
    5. '0' → logprob: -11.875272750854492
    6. '6' → logprob: -12.625272750854492
    7. '1' → logprob: -12.625272750854492
    8. ''' → logprob: -12.625272750854492
    9. '#' → logprob: -12.750272750854492
    10. ')' → logprob: -13.000272750854492

Token 2894: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27680298686027527
    2. '[' → logprob: -2.1518030166625977
    3. ',' → logprob: -3.2768030166625977
    4. 'def' → logprob: -4.026803016662598
    5. '```' → logprob: -4.151803016662598
    6. '       ' → logprob: -4.776803016662598
    7. ')' → logprob: -4.901803016662598
    8. '...' → logprob: -4.901803016662598
    9. ']' → logprob: -5.151803016662598
    10. '#' → logprob: -5.651803016662598

Token 2895: 'MS' (ID: 6359)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7403774857521057
    2. '5' → logprob: -1.740377426147461
    3. ')' → logprob: -2.115377426147461
    4. '6' → logprob: -2.490377426147461
    5. '4' → logprob: -2.865377426147461
    6. ']' → logprob: -4.490377426147461
    7. '3' → logprob: -4.490377426147461
    8. '```' → logprob: -4.740377426147461
    9. '])' → logprob: -4.865377426147461
    10. '1' → logprob: -5.240377426147461

Token 2896: 'B' (ID: 33)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002854328602552414
    2. ']' → logprob: -6.502854347229004
    3. 'b' → logprob: -7.627854347229004
    4. '[' → logprob: -8.252854347229004
    5. 'def' → logprob: -8.502854347229004
    6. '])' → logprob: -9.252854347229004
    7. '6' → logprob: -9.627854347229004
    8. '1' → logprob: -9.752854347229004
    9. 'B' → logprob: -9.752854347229004
    10. ')' → logprob: -10.502854347229004

Token 2897: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11912750452756882
    2. '],' → logprob: -2.9941275119781494
    3. ']
' → logprob: -4.36912727355957
    4. ']=' → logprob: -4.49412727355957
    5. '   ' → logprob: -4.99412727355957
    6. '```' → logprob: -5.36912727355957
    7. 'def' → logprob: -5.49412727355957
    8. ']:
' → logprob: -5.74412727355957
    9. '...' → logprob: -5.86912727355957
    10. ',' → logprob: -5.86912727355957

Token 2898: ' ...' (ID: 2550)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16614684462547302
    2. '```' → logprob: -2.541146755218506
    3. ' b' → logprob: -3.416146755218506
    4. '   ' → logprob: -3.666146755218506
    5. ' for' → logprob: -5.291146755218506
    6. 'for' → logprob: -5.666146755218506
    7. '4' → logprob: -6.041146755218506
    8. '``' → logprob: -6.916146755218506
    9. 'def' → logprob: -7.041146755218506
    10. '7' → logprob: -7.666146755218506

Token 2899: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7508334517478943
    2. '7' → logprob: -1.000833511352539
    3. '```' → logprob: -2.500833511352539
    4. ')' → logprob: -3.875833511352539
    5. '...' → logprob: -4.250833511352539
    6. 'for' → logprob: -4.750833511352539
    7. '6' → logprob: -5.000833511352539
    8. 'b' → logprob: -5.250833511352539
    9. ',' → logprob: -5.375833511352539
    10. ' for' → logprob: -5.750833511352539

Token 2900: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024326926097273827
    2. '7' → logprob: -3.774327039718628
    3. '5' → logprob: -7.649326801300049
    4. '4' → logprob: -8.399327278137207
    5. '[' → logprob: -9.274327278137207
    6. '6' → logprob: -9.399327278137207
    7. '```' → logprob: -9.649327278137207
    8. '2' → logprob: -10.149327278137207
    9. '3' → logprob: -10.899327278137207
    10. ']' → logprob: -11.149327278137207

Token 2901: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02662978135049343
    2. '3' → logprob: -4.77662992477417
    3. '4' → logprob: -5.02662992477417
    4. '```' → logprob: -5.65162992477417
    5. '7' → logprob: -6.27662992477417
    6. '5' → logprob: -7.02662992477417
    7. '][' → logprob: -7.15162992477417
    8. ']' → logprob: -7.27662992477417
    9. '...' → logprob: -7.40162992477417
    10. '`' → logprob: -7.77662992477417

Token 2902: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.35604557394981384
    2. '7' → logprob: -1.2310456037521362
    3. '6' → logprob: -5.231045722961426
    4. '5' → logprob: -6.231045722961426
    5. '1' → logprob: -9.231045722961426
    6. '3' → logprob: -9.606045722961426
    7. '0' → logprob: -10.481045722961426
    8. '[' → logprob: -11.356045722961426
    9. '
' → logprob: -11.731045722961426
    10. ']' → logprob: -11.731045722961426

Token 2903: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011589671485126019
    2. ']=' → logprob: -5.761589527130127
    3. ']==' → logprob: -5.886589527130127
    4. ']='' → logprob: -6.136589527130127
    5. ']=='' → logprob: -6.761589527130127
    6. ']:
' → logprob: -7.011589527130127
    7. ']:' → logprob: -7.261589527130127
    8. '```' → logprob: -8.261590003967285
    9. ':]' → logprob: -8.886590003967285
    10. ':' → logprob: -9.761590003967285

Token 2904: ' bit' (ID: 3546)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7105985283851624
    2. 'bit' → logprob: -0.9605985283851624
    3. '7' → logprob: -2.0855984687805176
    4. ''b' → logprob: -7.585598468780518
    5. '```' → logprob: -8.335598945617676
    6. '6' → logprob: -8.460598945617676
    7. ''x' → logprob: -8.835598945617676
    8. ' bit' → logprob: -8.835598945617676
    9. '`' → logprob: -9.210598945617676
    10. 'b' → logprob: -9.585598945617676

Token 2905: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0008077251841314137
    2. '```' → logprob: -8.000807762145996
    3. '6' → logprob: -8.250807762145996
    4. '4' → logprob: -9.750807762145996
    5. '`' → logprob: -10.250807762145996
    6. '5' → logprob: -10.750807762145996
    7. ']' → logprob: -10.875807762145996
    8. '0' → logprob: -11.125807762145996
    9. '``' → logprob: -11.375807762145996
    10. '...' → logprob: -11.500807762145996

Token 2906: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05578451603651047
    2. '```' → logprob: -3.8057844638824463
    3. '[' → logprob: -4.430784702301025
    4. ' for' → logprob: -5.430784702301025
    5. 'for' → logprob: -5.555784702301025
    6. ',' → logprob: -5.680784702301025
    7. ')' → logprob: -5.805784702301025
    8. 'def' → logprob: -6.680784702301025
    9. '``' → logprob: -6.805784702301025
    10. '`' → logprob: -7.805784702301025

Token 2907: 'LS' (ID: 10172)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9343037605285645
    2. '7' → logprob: -1.0593037605285645
    3. '5' → logprob: -2.0593037605285645
    4. '6' → logprob: -2.8093037605285645
    5. '4' → logprob: -3.6843037605285645
    6. '```' → logprob: -4.4343037605285645
    7. '])' → logprob: -4.9343037605285645
    8. ')]' → logprob: -5.4343037605285645
    9. '   ' → logprob: -5.9343037605285645
    10. ']' → logprob: -5.9343037605285645

Token 2908: 'B' (ID: 33)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.017639296129345894
    2. 'B' → logprob: -4.26763916015625
    3. 'b' → logprob: -6.14263916015625
    4. '])' → logprob: -7.01763916015625
    5. ')' → logprob: -9.01763916015625
    6. '[' → logprob: -10.14263916015625
    7. 'S' → logprob: -10.14263916015625
    8. ']' → logprob: -10.39263916015625
    9. '])
' → logprob: -10.76763916015625
    10. '#' → logprob: -10.76763916015625

Token 2909: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13105563819408417
    2. ')' → logprob: -2.7560555934906006
    3. ']' → logprob: -3.7560555934906006
    4. ')
' → logprob: -4.13105583190918
    5. ']
' → logprob: -5.13105583190918
    6. '```' → logprob: -5.25605583190918
    7. ',' → logprob: -6.00605583190918
    8. 'def' → logprob: -6.63105583190918
    9. '[' → logprob: -7.00605583190918
    10. '
' → logprob: -7.38105583190918

Token 2910: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03408556804060936
    2. '```' → logprob: -3.409085512161255
    3. '``' → logprob: -8.534085273742676
    4. 'for' → logprob: -9.284085273742676
    5. '`' → logprob: -9.784085273742676
    6. ')' → logprob: -10.409085273742676
    7. '       ' → logprob: -11.409085273742676
    8. ',' → logprob: -11.534085273742676
    9. ' for' → logprob: -11.659085273742676
    10. '
' → logprob: -11.909085273742676

Token 2911: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010548989288508892
    2. 'x' → logprob: -5.385549068450928
    3. ' for' → logprob: -6.635549068450928
    4. 'for' → logprob: -6.885549068450928
    5. ' x' → logprob: -6.885549068450928
    6. '#' (adapté à ' #') → logprob: -7.635549068450928
    7. '```' → logprob: -7.635549068450928
    8. '
' → logprob: -8.01054859161377
    9. 'count' → logprob: -8.13554859161377
    10. ' #' → logprob: -8.63554859161377

Token 2912: ' Previously' (ID: 95616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005582468118518591
    2. 'for' → logprob: -6.255582332611084
    3. 'x' → logprob: -6.505582332611084
    4. '```' → logprob: -7.755582332611084
    5. '#' → logprob: -8.005582809448242
    6. 'i' → logprob: -8.130582809448242
    7. 'def' → logprob: -8.255582809448242
    8. 'idx' → logprob: -8.880582809448242
    9. ' for' → logprob: -9.005582809448242
    10. '
' → logprob: -9.005582809448242

Token 2913: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.592512309551239
    2. 'for' → logprob: -1.4675123691558838
    3. ' for' → logprob: -2.467512369155884
    4. '#' → logprob: -2.592512369155884
    5. 'def' → logprob: -4.092512130737305
    6. '```' → logprob: -4.342512130737305
    7. 'count' → logprob: -5.467512130737305
    8. ')' → logprob: -5.467512130737305
    9. ' #' → logprob: -6.092512130737305
    10. '[' → logprob: -6.467512130737305

Token 2914: ' used' (ID: 2061)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.237730622291565
    2. '[' → logprob: -1.612730622291565
    3. '   ' → logprob: -2.2377305030822754
    4. 'def' → logprob: -2.2377305030822754
    5. 'for' → logprob: -2.4877305030822754
    6. 'have' → logprob: -3.7377305030822754
    7. 'continue' → logprob: -4.112730503082275
    8. ' for' → logprob: -4.112730503082275
    9. 'continued' → logprob: -4.112730503082275
    10. ' =' → logprob: -4.487730503082275

Token 2915: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.592259407043457
    2. '7' → logprob: -1.717259407043457
    3. 'b' → logprob: -1.842259407043457
    4. 'for' → logprob: -3.092259407043457
    5. 'def' → logprob: -3.842259407043457
    6. 'range' → logprob: -4.592259407043457
    7. '```' → logprob: -4.967259407043457
    8. '#' → logprob: -5.217259407043457
    9. '(' → logprob: -5.467259407043457
    10. '6' → logprob: -5.592259407043457

Token 2916: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005171020515263081
    2. '```' → logprob: -6.255170822143555
    3. '7' → logprob: -6.880170822143555
    4. '#' → logprob: -7.505170822143555
    5. '6' → logprob: -7.755170822143555
    6. '4' → logprob: -8.380170822143555
    7. '5' → logprob: -8.755170822143555
    8. 'def' → logprob: -8.880170822143555
    9. 'for' → logprob: -9.130170822143555
    10. '`' → logprob: -9.255170822143555

Token 2917: ' positions' (ID: 15897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7068797945976257
    2. '7' → logprob: -0.9568797945976257
    3. 'b' → logprob: -2.5818798542022705
    4. '#' → logprob: -4.706879615783691
    5. 'index' → logprob: -5.081879615783691
    6. 'indexed' → logprob: -5.081879615783691
    7. '   ' → logprob: -5.456879615783691
    8. 'indices' → logprob: -5.706879615783691
    9. 'indexes' → logprob: -5.706879615783691
    10. 'def' → logprob: -6.331879615783691

Token 2918: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27554023265838623
    2. '[' → logprob: -1.7755402326583862
    3. ')' → logprob: -3.525540351867676
    4. 'def' → logprob: -4.525540351867676
    5. '```' → logprob: -4.900540351867676
    6. ':' → logprob: -5.150540351867676
    7. 'for' → logprob: -6.150540351867676
    8. ' for' → logprob: -6.150540351867676
    9. '=' → logprob: -6.400540351867676
    10. ']' → logprob: -6.525540351867676

Token 2919: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.10787823796272278
    2. '[' → logprob: -2.7328782081604004
    3. '4' → logprob: -4.7328782081604
    4. ']' → logprob: -5.4828782081604
    5. '```' → logprob: -5.6078782081604
    6. '=' → logprob: -5.8578782081604
    7. ':' → logprob: -5.8578782081604
    8. '0' → logprob: -5.8578782081604
    9. ')' → logprob: -6.1078782081604
    10. '6' → logprob: -6.7328782081604

Token 2920: '..' (ID: 485)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8311540484428406
    2. '   ' → logprob: -1.7061541080474854
    3. ']' → logprob: -2.0811541080474854
    4. ':' → logprob: -2.5811541080474854
    5. ')' → logprob: -3.2061541080474854
    6. 'def' → logprob: -3.3311541080474854
    7. '7' → logprob: -3.3311541080474854
    8. ',' → logprob: -3.7061541080474854
    9. '```' → logprob: -4.831153869628906
    10. ':
' → logprob: -5.331153869628906

Token 2921: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2471589798224159e-05
    2. '1' → logprob: -12.750012397766113
    3. '#' → logprob: -13.125012397766113
    4. '```' → logprob: -13.500012397766113
    5. 'def' → logprob: -13.625012397766113
    6. '...' → logprob: -14.500012397766113
    7. '>' → logprob: -14.500012397766113
    8. '0' → logprob: -14.687512397766113
    9. '3' → logprob: -15.062512397766113
    10. '6' → logprob: -15.250012397766113

Token 2922: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002979840850457549
    2. 'def' → logprob: -6.877979755401611
    3. 'for' → logprob: -7.502979755401611
    4. '[' → logprob: -8.25298023223877
    5. '```' → logprob: -8.37798023223877
    6. ')' → logprob: -8.50298023223877
    7. ' for' → logprob: -8.62798023223877
    8. ',' → logprob: -9.00298023223877
    9. '	for' → logprob: -9.62798023223877
    10. ':' → logprob: -9.87798023223877

Token 2923: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0582716278731823
    2. 'b' → logprob: -3.308271646499634
    3. ''' → logprob: -4.683271408081055
    4. '[' → logprob: -5.933271408081055
    5. ' b' → logprob: -6.558271408081055
    6. 'bit' → logprob: -6.683271408081055
    7. ''b' → logprob: -6.808271408081055
    8. ' ' → logprob: -7.433271408081055
    9. '   ' → logprob: -7.558271408081055
    10. '3' → logprob: -7.558271408081055

Token 2924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7313076853752136
    2. '7' → logprob: -0.7313076853752136
    3. ']' → logprob: -3.4813077449798584
    4. '[' → logprob: -5.231307506561279
    5. ')' → logprob: -8.231307983398438
    6. '][' → logprob: -8.606307983398438
    7. '[]' → logprob: -8.606307983398438
    8. '])' → logprob: -9.106307983398438
    9. 'def' → logprob: -9.231307983398438
    10. '```' → logprob: -9.356307983398438

Token 2925: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05506360903382301
    2. ']' → logprob: -3.6800637245178223
    3. '7' → logprob: -4.680063724517822
    4. '```' → logprob: -5.305063724517822
    5. '[
' → logprob: -5.305063724517822
    6. ')' → logprob: -5.680063724517822
    7. '   ' → logprob: -6.055063724517822
    8. 'def' → logprob: -7.305063724517822
    9. '][' → logprob: -7.430063724517822
    10. '#' → logprob: -8.055063247680664

Token 2926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48121291399002075
    2. '7' → logprob: -1.356212854385376
    3. '4' → logprob: -2.606212854385376
    4. '3' → logprob: -3.356212854385376
    5. ']' → logprob: -4.981213092803955
    6. '5' → logprob: -5.606213092803955
    7. '
' → logprob: -6.231213092803955
    8. '6' → logprob: -6.731213092803955
    9. '1' → logprob: -7.481213092803955
    10. '```' → logprob: -8.606212615966797

Token 2927: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018324362114071846
    2. '7' → logprob: -4.143324375152588
    3. '],' → logprob: -8.14332389831543
    4. ']:' → logprob: -8.14332389831543
    5. ']=' → logprob: -8.14332389831543
    6. ']==' → logprob: -8.26832389831543
    7. '[' → logprob: -8.64332389831543
    8. ':' → logprob: -9.01832389831543
    9. '']' → logprob: -9.14332389831543
    10. ']:
' → logprob: -9.14332389831543

Token 2928: '..' (ID: 485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.261076956987381
    2. 'def' → logprob: -2.5110769271850586
    3. '[' → logprob: -2.8860769271850586
    4. ',' → logprob: -3.3860769271850586
    5. ')' → logprob: -4.011076927185059
    6. ']' → logprob: -4.511076927185059
    7. '```' → logprob: -4.636076927185059
    8. 'for' → logprob: -5.886076927185059
    9. '7' → logprob: -6.386076927185059
    10. '...' → logprob: -6.386076927185059

Token 2929: 'b' (ID: 65)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003276937175542116
    2. 'b' → logprob: -6.503276824951172
    3. '```' → logprob: -6.753276824951172
    4. '[' → logprob: -8.628276824951172
    5. '...' → logprob: -8.878276824951172
    6. 'def' → logprob: -9.503276824951172
    7. '#' → logprob: -10.128276824951172
    8. '4' → logprob: -10.503276824951172
    9. '1' → logprob: -10.628276824951172
    10. '(' → logprob: -10.878276824951172

Token 2930: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001455951132811606
    2. '1' → logprob: -6.626455783843994
    3. '5' → logprob: -10.376456260681152
    4. '[' → logprob: -10.376456260681152
    5. '3' → logprob: -10.751456260681152
    6. '```' → logprob: -11.001456260681152
    7. ']' → logprob: -11.751456260681152
    8. '4' → logprob: -12.001456260681152
    9. '(' → logprob: -12.376456260681152
    10. '6' → logprob: -12.501456260681152

Token 2931: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018069108482450247
    2. '7' → logprob: -6.751806735992432
    3. '```' → logprob: -8.12680721282959
    4. ']' → logprob: -8.75180721282959
    5. '[
' → logprob: -10.00180721282959
    6. '][' → logprob: -10.25180721282959
    7. 'def' → logprob: -10.62680721282959
    8. '6' → logprob: -11.00180721282959
    9. '...' → logprob: -11.50180721282959
    10. '`' → logprob: -11.62680721282959

Token 2932: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.30273473262786865
    2. '3' → logprob: -2.177734851837158
    3. '6' → logprob: -2.552734851837158
    4. '4' → logprob: -2.802734851837158
    5. '5' → logprob: -5.302734851837158
    6. '1' → logprob: -6.802734851837158
    7. '2' → logprob: -6.927734851837158
    8. '0' → logprob: -6.927734851837158
    9. ']' → logprob: -7.302734851837158
    10. '```' → logprob: -8.802734375

Token 2933: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.716885507106781
    2. ']
' → logprob: -1.2168855667114258
    3. '   ' → logprob: -2.216885566711426
    4. ']:
' → logprob: -2.591885566711426
    5. 'def' → logprob: -5.341885566711426
    6. '],' → logprob: -5.591885566711426
    7. ')' → logprob: -5.716885566711426
    8. '):
' → logprob: -5.716885566711426
    9. '```' → logprob: -5.841885566711426
    10. ')
' → logprob: -5.841885566711426

Token 2934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01701342687010765
    2. '```' → logprob: -4.1420135498046875
    3. 'for' → logprob: -8.267013549804688
    4. '``' → logprob: -8.642013549804688
    5. '#' → logprob: -9.142013549804688
    6. '
' → logprob: -9.267013549804688
    7. ')' → logprob: -9.517013549804688
    8. 'x' → logprob: -9.642013549804688
    9. '`' → logprob: -10.017013549804688
    10. ' for' → logprob: -10.142013549804688

Token 2935: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006440499797463417
    2. '```' → logprob: -5.50644063949585
    3. '#' (adapté à ' #') → logprob: -7.00644063949585
    4. '
' → logprob: -7.75644063949585
    5. 'x' → logprob: -8.256440162658691
    6. '``' → logprob: -8.381440162658691
    7. 'def' → logprob: -8.631440162658691
    8. 'for' → logprob: -8.631440162658691
    9. 'i' → logprob: -10.006440162658691
    10. '`' → logprob: -10.506440162658691

Token 2936: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023231988307088614
    2. 'x' → logprob: -6.877323150634766
    3. '
' → logprob: -7.752323150634766
    4. 'for' → logprob: -8.127323150634766
    5. '```' → logprob: -8.502323150634766
    6. '#' → logprob: -8.877323150634766
    7. 'unknown' → logprob: -9.752323150634766
    8. 'def' → logprob: -10.002323150634766
    9. '``' → logprob: -11.002323150634766
    10. '    
' → logprob: -11.127323150634766

Token 2937: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6971694827079773
    2. 'unknown' → logprob: -1.197169542312622
    3. '#' → logprob: -2.197169542312622
    4. '   ' → logprob: -2.822169542312622
    5. 'for' → logprob: -3.947169542312622
    6. 'count' → logprob: -5.947169303894043
    7. '```' → logprob: -6.697169303894043
    8. 'def' → logprob: -6.697169303894043
    9. '
' → logprob: -6.822169303894043
    10. ' unknown' → logprob: -7.697169303894043

Token 2938: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35084620118141174
    2. '1' → logprob: -1.2258461713790894
    3. '```' → logprob: -6.725846290588379
    4. '#' → logprob: -8.350846290588379
    5. '
' → logprob: -8.600846290588379
    6. 'def' → logprob: -8.975846290588379
    7. '`' → logprob: -9.100846290588379
    8. 'b' → logprob: -9.225846290588379
    9. '][' → logprob: -9.725846290588379
    10. ' [' → logprob: -9.725846290588379

Token 2939: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.242008924484253
    2. '_bits' → logprob: -2.242008924484253
    3. 'x' → logprob: -2.492008924484253
    4. '   ' → logprob: -2.617008924484253
    5. 'count' → logprob: -2.617008924484253
    6. 'bits' → logprob: -2.617008924484253
    7. '#' → logprob: -2.867008924484253
    8. 'for' → logprob: -2.867008924484253
    9. 'def' → logprob: -3.367008924484253
    10. ' =' → logprob: -3.992008924484253

Token 2940: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2352643013000488
    2. ':' → logprob: -2.110264301300049
    3. '   ' → logprob: -2.110264301300049
    4. '#' → logprob: -2.235264301300049
    5. ' =' → logprob: -2.485264301300049
    6. 'not' → logprob: -3.485264301300049
    7. 'count' → logprob: -3.735264301300049
    8. 'def' → logprob: -3.860264301300049
    9. '=' → logprob: -3.860264301300049
    10. 'for' → logprob: -3.985264301300049

Token 2941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003739387495443225
    2. '```' → logprob: -6.253739356994629
    3. '#' → logprob: -7.378739356994629
    4. ' for' → logprob: -7.878739356994629
    5. 'for' → logprob: -8.003739356994629
    6. '`' → logprob: -9.128739356994629
    7. '``' → logprob: -9.253739356994629
    8. '[' → logprob: -9.378739356994629
    9. ' #' → logprob: -10.253739356994629
    10. '
' → logprob: -10.378739356994629

Token 2942: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10477257519960403
    2. 'for' → logprob: -2.8547725677490234
    3. '#' (adapté à ' #') → logprob: -3.6047725677490234
    4. '```' → logprob: -4.979772567749023
    5. ' for' → logprob: -5.979772567749023
    6. '[' → logprob: -6.854772567749023
    7. '``' → logprob: -6.854772567749023
    8. 'count' → logprob: -7.229772567749023
    9. 'x' → logprob: -7.479772567749023
    10. 'bits' → logprob: -8.104772567749023

Token 2943: ' bit' (ID: 3546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43171218037605286
    2. '   ' → logprob: -1.4317121505737305
    3. '7' → logprob: -3.3067121505737305
    4. '[' → logprob: -3.5567121505737305
    5. 'fixed' → logprob: -4.3067121505737305
    6. 'for' → logprob: -4.4317121505737305
    7. ' #' → logprob: -5.3067121505737305
    8. 'x' → logprob: -6.3067121505737305
    9. 'remaining' → logprob: -6.5567121505737305
    10. 'unknown' → logprob: -6.8067121505737305

Token 2944: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2625868618488312
    2. '4' → logprob: -2.262586832046509
    3. '5' → logprob: -2.512586832046509
    4. '[' → logprob: -3.637586832046509
    5. '1' → logprob: -5.012587070465088
    6. '
' → logprob: -5.887587070465088
    7. ']' → logprob: -6.012587070465088
    8. '#' → logprob: -6.387587070465088
    9. '6' → logprob: -6.512587070465088
    10. 'index' → logprob: -6.637587070465088

Token 2945: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2108267992734909
    2. '[' → logprob: -2.210826873779297
    3. ']' → logprob: -3.460826873779297
    4. '='' → logprob: -3.835826873779297
    5. ' =' → logprob: -4.960826873779297
    6. ']=' → logprob: -4.960826873779297
    7. '=
' → logprob: -5.835826873779297
    8. '=[' → logprob: -6.335826873779297
    9. ':' → logprob: -7.210826873779297
    10. '```' → logprob: -7.335826873779297

Token 2946: ' b' (ID: 287)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0724039375782013
    2. 'b' → logprob: -3.072403907775879
    3. ''b' → logprob: -4.572403907775879
    4. '1' → logprob: -5.322403907775879
    5. '   ' → logprob: -6.072403907775879
    6. ' '' → logprob: -6.072403907775879
    7. 'if' → logprob: -7.447403907775879
    8. ' b' → logprob: -7.572403907775879
    9. '#' → logprob: -7.697403907775879
    10. '[' → logprob: -7.947403907775879

Token 2947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010973571334034204
    2. '[' → logprob: -7.001097202301025
    3. '7' → logprob: -8.751097679138184
    4. ']' → logprob: -12.126097679138184
    5. '```' → logprob: -12.126097679138184
    6. ')' → logprob: -13.126097679138184
    7. ''' → logprob: -13.501097679138184
    8. '3' → logprob: -13.501097679138184
    9. '5' → logprob: -13.751097679138184
    10. '0' → logprob: -13.751097679138184

Token 2948: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018775923177599907
    2. ']' → logprob: -5.143775939941406
    3. '7' → logprob: -5.393775939941406
    4. '```' → logprob: -5.518775939941406
    5. '][' → logprob: -7.018775939941406
    6. '6' → logprob: -7.643775939941406
    7. '#' → logprob: -7.893775939941406
    8. 'def' → logprob: -8.018775939941406
    9. '[
' → logprob: -8.143775939941406
    10. '=' → logprob: -8.393775939941406

Token 2949: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03153518959879875
    2. '4' → logprob: -3.9065351486206055
    3. '3' → logprob: -5.1565351486206055
    4. '5' → logprob: -6.2815351486206055
    5. '1' → logprob: -6.4065351486206055
    6. '6' → logprob: -7.7815351486206055
    7. ']' → logprob: -8.031535148620605
    8. '2' → logprob: -8.406535148620605
    9. '   ' → logprob: -8.781535148620605
    10. '
' → logprob: -9.031535148620605

Token 2950: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04084356129169464
    2. ']
' → logprob: -3.6658434867858887
    3. ']==' → logprob: -5.415843486785889
    4. ']:
' → logprob: -5.665843486785889
    5. '   ' → logprob: -5.915843486785889
    6. ']=='' → logprob: -6.540843486785889
    7. '],' → logprob: -6.790843486785889
    8. ')' → logprob: -8.415843963623047
    9. ']=' → logprob: -9.040843963623047
    10. 'def' → logprob: -9.165843963623047

Token 2951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5745576024055481
    2. '#' → logprob: -1.3245575428009033
    3. '[' → logprob: -2.1995575428009033
    4. '```' → logprob: -2.9495575428009033
    5. '``' → logprob: -6.699557781219482
    6. '`' → logprob: -6.699557781219482
    7. 'b' → logprob: -7.324557781219482
    8. '=' → logprob: -7.324557781219482
    9. ' =' → logprob: -7.449557781219482
    10. ',' → logprob: -7.449557781219482

Token 2952: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4314766824245453
    2. '   ' → logprob: -1.1814767122268677
    3. '```' → logprob: -3.931476593017578
    4. '[' → logprob: -4.431476593017578
    5. '`' → logprob: -5.931476593017578
    6. '#
' → logprob: -6.306476593017578
    7. '``' → logprob: -6.681476593017578
    8. '       ' → logprob: -6.806476593017578
    9. '=' → logprob: -7.056476593017578
    10. 'def' → logprob: -7.181476593017578

Token 2953: ' bit' (ID: 3546)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7788220643997192
    2. '#' → logprob: -1.5288220643997192
    3. '4' → logprob: -1.9038220643997192
    4. '7' → logprob: -2.6538219451904297
    5. '[' → logprob: -3.0288219451904297
    6. '6' → logprob: -4.15382194519043
    7. 'b' → logprob: -4.40382194519043
    8. '   ' → logprob: -4.65382194519043
    9. 'for' → logprob: -5.02882194519043
    10. '1' → logprob: -5.27882194519043

Token 2954: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6509774923324585
    2. '1' → logprob: -0.9009774923324585
    3. '5' → logprob: -3.525977611541748
    4. '4' → logprob: -3.900977611541748
    5. '[' → logprob: -4.025977611541748
    6. '6' → logprob: -6.900977611541748
    7. '3' → logprob: -7.025977611541748
    8. ']' → logprob: -7.150977611541748
    9. '```' → logprob: -7.275977611541748
    10. '
' → logprob: -7.775977611541748

Token 2955: ' :' (ID: 712)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5809464454650879
    2. ']' → logprob: -1.830946445465088
    3. ' not' → logprob: -2.205946445465088
    4. '[' → logprob: -2.455946445465088
    5. ':' → logprob: -3.705946445465088
    6. '```' → logprob: -3.830946445465088
    7. 'def' → logprob: -3.955946445465088
    8. ')' → logprob: -5.330946445465088
    9. '   ' → logprob: -5.455946445465088
    10. '=' → logprob: -5.830946445465088

Token 2956: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002204855205491185
    2. ' b' → logprob: -6.127204895019531
    3. '1' → logprob: -11.627204895019531
    4. '   ' → logprob: -12.127204895019531
    5. ''' → logprob: -13.002204895019531
    6. '```' → logprob: -13.877204895019531
    7. '`' → logprob: -14.127204895019531
    8. ' ' → logprob: -14.252204895019531
    9. ''b' → logprob: -15.127204895019531
    10. '[' → logprob: -15.252204895019531

Token 2957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. '2' → logprob: -12.750019073486328
    3. '[' → logprob: -12.875019073486328
    4. '```' → logprob: -12.875019073486328
    5. '7' → logprob: -13.250019073486328
    6. '3' → logprob: -13.250019073486328
    7. '   ' → logprob: -13.500019073486328
    8. '#' → logprob: -13.875019073486328
    9. ' ' → logprob: -14.312519073486328
    10. '
' → logprob: -14.312519073486328

Token 2958: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1457442045211792
    2. '1' → logprob: -2.0207443237304688
    3. '2' → logprob: -6.645744323730469
    4. '```' → logprob: -7.395744323730469
    5. '3' → logprob: -8.395744323730469
    6. '   ' → logprob: -8.520744323730469
    7. '6' → logprob: -8.770744323730469
    8. '7' → logprob: -8.895744323730469
    9. ']' → logprob: -8.895744323730469
    10. '5' → logprob: -9.145744323730469

Token 2959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001927567063830793
    2. '4' → logprob: -6.376927375793457
    3. '3' → logprob: -9.501927375793457
    4. '2' → logprob: -9.501927375793457
    5. '7' → logprob: -10.501927375793457
    6. '5' → logprob: -10.626927375793457
    7. '   ' → logprob: -12.126927375793457
    8. '
' → logprob: -12.501927375793457
    9. ' ' → logprob: -12.501927375793457
    10. ']' → logprob: -13.126927375793457

Token 2960: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012804759899154305
    2. ']:
' → logprob: -7.251280307769775
    3. ']
' → logprob: -8.751280784606934
    4. '   ' → logprob: -8.751280784606934
    5. 'not' → logprob: -9.626280784606934
    6. '],' → logprob: -10.126280784606934
    7. '```' → logprob: -10.126280784606934
    8. 'def' → logprob: -11.126280784606934
    9. ']==' → logprob: -11.126280784606934
    10. ']=' → logprob: -11.751280784606934

Token 2961: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5673545598983765
    2. '   ' → logprob: -1.0673545598983765
    3. '```' → logprob: -2.442354679107666
    4. '``' → logprob: -6.692354679107666
    5. 'b' → logprob: -7.692354679107666
    6. '[' → logprob: -8.317354202270508
    7. ' #' → logprob: -9.692354202270508
    8. '`' → logprob: -9.692354202270508
    9. 'def' → logprob: -11.317354202270508
    10. '
' → logprob: -11.817354202270508

Token 2962: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.871717631816864
    2. '[' → logprob: -1.1217176914215088
    3. '#' (adapté à ' #') → logprob: -1.7467176914215088
    4. '```' → logprob: -2.746717691421509
    5. '2' → logprob: -4.49671745300293
    6. '``' → logprob: -5.99671745300293
    7. '`' → logprob: -7.12171745300293
    8. '       ' → logprob: -7.49671745300293
    9. 'b' → logprob: -7.62171745300293
    10. '4' → logprob: -7.87171745300293

Token 2963: ' bit' (ID: 3546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018132269382476807
    2. '5' → logprob: -5.018132209777832
    3. '```' → logprob: -5.268132209777832
    4. '[' → logprob: -6.268132209777832
    5. '#' → logprob: -6.768132209777832
    6. '   ' → logprob: -6.893132209777832
    7. '4' → logprob: -7.143132209777832
    8. '7' → logprob: -7.893132209777832
    9. '6' → logprob: -7.893132209777832
    10. '3' → logprob: -8.393132209777832

Token 2964: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -9.949026571121067e-05
    2. '[' → logprob: -10.250099182128906
    3. '
' → logprob: -10.750099182128906
    4. '   ' → logprob: -11.000099182128906
    5. '```' → logprob: -11.875099182128906
    6. '7' → logprob: -12.125099182128906
    7. '3' → logprob: -12.750099182128906
    8. ' ' → logprob: -13.250099182128906
    9. ']' → logprob: -13.500099182128906
    10. '(' → logprob: -13.875099182128906

Token 2965: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22866758704185486
    2. ']' → logprob: -2.1036674976348877
    3. 'not' → logprob: -2.9786674976348877
    4. '```' → logprob: -4.353667736053467
    5. ' not' → logprob: -4.853667736053467
    6. 'def' → logprob: -5.478667736053467
    7. '   ' → logprob: -5.728667736053467
    8. ':' → logprob: -6.478667736053467
    9. '2' → logprob: -7.603667736053467
    10. ')' → logprob: -7.978667736053467

Token 2966: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020830852736253291
    2. ' b' → logprob: -8.625207901000977
    3. '2' → logprob: -11.125207901000977
    4. ''' → logprob: -12.375207901000977
    5. '   ' → logprob: -12.500207901000977
    6. '```' → logprob: -13.250207901000977
    7. '3' → logprob: -13.625207901000977
    8. ''b' → logprob: -13.875207901000977
    9. '[' → logprob: -14.250207901000977
    10. '4' → logprob: -14.625207901000977

Token 2967: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002119330922141671
    2. '[' → logprob: -6.252119541168213
    3. '```' → logprob: -9.252119064331055
    4. '7' → logprob: -10.627119064331055
    5. '
' → logprob: -11.252119064331055
    6. ']' → logprob: -11.377119064331055
    7. '3' → logprob: -11.377119064331055
    8. '1' → logprob: -11.377119064331055
    9. '   ' → logprob: -12.252119064331055
    10. '5' → logprob: -12.377119064331055

Token 2968: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24750542640686035
    2. '[' → logprob: -1.6225054264068604
    3. '```' → logprob: -4.622505187988281
    4. ']' → logprob: -4.747505187988281
    5. '   ' → logprob: -5.997505187988281
    6. 'def' → logprob: -8.497505187988281
    7. '...' → logprob: -9.247505187988281
    8. ':' → logprob: -9.372505187988281
    9. '3' → logprob: -9.497505187988281
    10. ')' → logprob: -9.997505187988281

Token 2969: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8908587662735954e-05
    2. '   ' → logprob: -11.500019073486328
    3. '
' → logprob: -12.625019073486328
    4. '```' → logprob: -13.375019073486328
    5. ' ' → logprob: -14.000019073486328
    6. '3' → logprob: -14.125019073486328
    7. '[' → logprob: -14.625019073486328
    8. '1' → logprob: -15.437519073486328
    9. '``' → logprob: -15.437519073486328
    10. '5' → logprob: -15.437519073486328

Token 2970: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5520675182342529
    2. ']' → logprob: -1.302067518234253
    3. ')' → logprob: -2.677067518234253
    4. '```' → logprob: -3.052067518234253
    5. 'def' → logprob: -3.927067518234253
    6. '):
' → logprob: -5.552067756652832
    7. '#' → logprob: -6.052067756652832
    8. ']
' → logprob: -6.302067756652832
    9. ')
' → logprob: -6.302067756652832
    10. ']:
' → logprob: -6.427067756652832

Token 2971: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049306370317935944
    2. '```' → logprob: -3.0493063926696777
    3. '``' → logprob: -7.424306392669678
    4. '       ' → logprob: -9.92430591583252
    5. ',' → logprob: -10.79930591583252
    6. '`' → logprob: -11.17430591583252
    7. ')' → logprob: -11.92430591583252
    8. '\t' → logprob: -12.17430591583252
    9. '	for' → logprob: -12.42430591583252
    10. '[' → logprob: -12.42430591583252

Token 2972: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08044974505901337
    2. '#' (adapté à ' #') → logprob: -2.5804498195648193
    3. '```' → logprob: -7.20544958114624
    4. 'b' → logprob: -7.95544958114624
    5. 'for' → logprob: -8.455450057983398
    6. '[' → logprob: -8.705450057983398
    7. '
' → logprob: -10.080450057983398
    8. '``' → logprob: -10.955450057983398
    9. 'def' → logprob: -12.205450057983398
    10. '`' → logprob: -12.330450057983398

Token 2973: ' bit' (ID: 3546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.263436883687973
    2. '   ' → logprob: -2.138436794281006
    3. '4' → logprob: -2.388436794281006
    4. '5' → logprob: -4.638436794281006
    5. '```' → logprob: -5.138436794281006
    6. '6' → logprob: -5.888436794281006
    7. 'for' → logprob: -6.263436794281006
    8. '7' → logprob: -7.638436794281006
    9. '#' → logprob: -7.888436794281006
    10. '[' → logprob: -8.138437271118164

Token 2974: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -6.790129555156454e-05
    2. '[' → logprob: -10.500067710876465
    3. '7' → logprob: -11.125067710876465
    4. '   ' → logprob: -11.750067710876465
    5. ']' → logprob: -11.875067710876465
    6. '```' → logprob: -12.375067710876465
    7. ' ' → logprob: -13.375067710876465
    8. '
' → logprob: -14.250067710876465
    9. '#' → logprob: -14.375067710876465
    10. '``' → logprob: -14.500067710876465

Token 2975: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06839549541473389
    2. '   ' → logprob: -3.1933956146240234
    3. '```' → logprob: -4.443395614624023
    4. ':' → logprob: -5.318395614624023
    5. '==' → logprob: -5.693395614624023
    6. 'def' → logprob: -6.443395614624023
    7. ']' → logprob: -6.943395614624023
    8. ' ==' → logprob: -7.568395614624023
    9. ' =' → logprob: -7.568395614624023
    10. '#' → logprob: -8.068395614624023

Token 2976: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014333443716168404
    2. '3' → logprob: -4.264333248138428
    3. ' b' → logprob: -9.639333724975586
    4. '   ' → logprob: -9.764333724975586
    5. '```' → logprob: -10.639333724975586
    6. '`' → logprob: -11.389333724975586
    7. '4' → logprob: -12.264333724975586
    8. ' ' → logprob: -13.389333724975586
    9. '[' → logprob: -13.514333724975586
    10. ''' → logprob: -13.639333724975586

Token 2977: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002927187830209732
    2. '7' → logprob: -6.377927303314209
    3. '4' → logprob: -7.127927303314209
    4. '1' → logprob: -8.25292682647705
    5. '[' → logprob: -9.25292682647705
    6. '5' → logprob: -10.75292682647705
    7. ']' → logprob: -11.25292682647705
    8. '
' → logprob: -11.50292682647705
    9. '   ' → logprob: -11.75292682647705
    10. '6' → logprob: -12.37792682647705

Token 2978: '[' (ID: 58)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07966803759336472
    2. '[' → logprob: -2.5796680450439453
    3. '```' → logprob: -7.329668045043945
    4. '   ' → logprob: -10.204668045043945
    5. ']' → logprob: -10.454668045043945
    6. 'def' → logprob: -11.079668045043945
    7. '
' → logprob: -11.329668045043945
    8. '``' → logprob: -11.579668045043945
    9. '`' → logprob: -11.829668045043945
    10. '4' → logprob: -12.454668045043945

Token 2979: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -14.375001907348633
    3. '4' → logprob: -15.125001907348633
    4. ' ' → logprob: -15.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '[' → logprob: -16.625001907348633
    7. '
' → logprob: -16.750001907348633
    8. ']' → logprob: -17.625001907348633
    9. '#' → logprob: -17.875001907348633
    10. '...' → logprob: -18.625001907348633

Token 2980: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15829530358314514
    2. '   ' → logprob: -2.2832953929901123
    3. ']
' → logprob: -4.033295154571533
    4. ']:
' → logprob: -4.533295154571533
    5. 'def' → logprob: -5.533295154571533
    6. '```' → logprob: -5.908295154571533
    7. ']=' → logprob: -6.658295154571533
    8. '4' → logprob: -6.658295154571533
    9. ']==' → logprob: -7.158295154571533
    10. ':' → logprob: -7.283295154571533

Token 2981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08956167846918106
    2. '```' → logprob: -2.589561700820923
    3. '``' → logprob: -5.214561462402344
    4. '[' → logprob: -5.589561462402344
    5. '#' → logprob: -7.339561462402344
    6. ',' → logprob: -8.089561462402344
    7. 'b' → logprob: -8.839561462402344
    8. ')' → logprob: -9.464561462402344
    9. '`' → logprob: -10.089561462402344
    10. '       ' → logprob: -10.339561462402344

Token 2982: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14437487721443176
    2. 'for' → logprob: -2.6443748474121094
    3. '```' → logprob: -3.2693748474121094
    4. '[' → logprob: -4.394374847412109
    5. ' for' → logprob: -5.644374847412109
    6. '``' → logprob: -5.644374847412109
    7. '#' (adapté à ' #') → logprob: -5.644374847412109
    8. '4' → logprob: -7.019374847412109
    9. '       ' → logprob: -7.519374847412109
    10. '`' → logprob: -8.01937484741211

Token 2983: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6610707640647888
    2. '   ' → logprob: -1.4110708236694336
    3. '4' → logprob: -1.5360708236694336
    4. '[' → logprob: -4.911070823669434
    5. '#' → logprob: -5.661070823669434
    6. ' for' → logprob: -5.661070823669434
    7. 'i' → logprob: -6.536070823669434
    8. '5' → logprob: -6.661070823669434
    9. 'b' → logprob: -7.036070823669434
    10. '```' → logprob: -7.036070823669434

Token 2984: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -3.297462171758525e-05
    2. '[' → logprob: -11.250033378601074
    3. '
' → logprob: -11.375033378601074
    4. '```' → logprob: -12.500033378601074
    5. ']' → logprob: -13.625033378601074
    6. '#' → logprob: -13.875033378601074
    7. '5' → logprob: -14.625033378601074
    8. '[
' → logprob: -14.875033378601074
    9. '(' → logprob: -15.250033378601074
    10. '=' → logprob: -15.500033378601074

Token 2985: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8883568048477173
    2. '   ' → logprob: -2.0133566856384277
    3. '[' → logprob: -2.0133566856384277
    4. ' =' → logprob: -2.1383566856384277
    5. 'def' → logprob: -2.1383566856384277
    6. '```' → logprob: -2.1383566856384277
    7. '=' → logprob: -2.7633566856384277
    8. ':' → logprob: -3.3883566856384277
    9. '#' → logprob: -3.3883566856384277
    10. '4' → logprob: -3.6383566856384277

Token 2986: ' b' (ID: 287)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.05010366812348366
    2. 'b' → logprob: -3.0501036643981934
    3. '7' → logprob: -7.050103664398193
    4. ' ' → logprob: -8.300104141235352
    5. '5' → logprob: -9.675104141235352
    6. ' b' → logprob: -9.675104141235352
    7. '[' → logprob: -9.800104141235352
    8. '```' → logprob: -9.925104141235352
    9. '6' → logprob: -10.175104141235352
    10. '   ' → logprob: -10.300104141235352

Token 2987: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0007289938512258232
    2. '5' → logprob: -7.875729084014893
    3. '[' → logprob: -8.250728607177734
    4. '7' → logprob: -10.125728607177734
    5. '1' → logprob: -10.750728607177734
    6. '3' → logprob: -11.750728607177734
    7. '```' → logprob: -11.750728607177734
    8. '6' → logprob: -12.875728607177734
    9. ''' → logprob: -13.000728607177734
    10. '(' → logprob: -13.750728607177734

Token 2988: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09066016972064972
    2. '4' → logprob: -3.0906600952148438
    3. ']' → logprob: -3.7156600952148438
    4. '```' → logprob: -4.715660095214844
    5. '7' → logprob: -5.840660095214844
    6. '5' → logprob: -6.465660095214844
    7. '6' → logprob: -7.340660095214844
    8. '3' → logprob: -7.590660095214844
    9. '[
' → logprob: -8.090660095214844
    10. '#' → logprob: -8.465660095214844

Token 2989: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.455048449221067e-05
    2. '5' → logprob: -10.750054359436035
    3. '3' → logprob: -11.625054359436035
    4. '```' → logprob: -12.250054359436035
    5. '6' → logprob: -12.625054359436035
    6. '   ' → logprob: -12.750054359436035
    7. '7' → logprob: -13.000054359436035
    8. '
' → logprob: -13.125054359436035
    9. ']' → logprob: -13.125054359436035
    10. '`' → logprob: -13.375054359436035

Token 2990: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8611828088760376
    2. '   ' → logprob: -1.2361828088760376
    3. '[' → logprob: -2.611182689666748
    4. '```' → logprob: -2.611182689666748
    5. 'def' → logprob: -2.986182689666748
    6. 'b' → logprob: -3.611182689666748
    7. ':' → logprob: -4.236182689666748
    8. ']:
' → logprob: -4.611182689666748
    9. '
' → logprob: -4.986182689666748
    10. ':
' → logprob: -4.986182689666748

Token 2991: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055647749453783035
    2. '```' → logprob: -3.305647850036621
    3. '#' → logprob: -5.055647850036621
    4. 'for' → logprob: -5.805647850036621
    5. '[' → logprob: -5.930647850036621
    6. 'b' → logprob: -6.055647850036621
    7. '``' → logprob: -6.805647850036621
    8. ',' → logprob: -7.180647850036621
    9. 'def' → logprob: -7.555647850036621
    10. '	for' → logprob: -8.430647850036621

Token 2992: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21549203991889954
    2. 'for' → logprob: -2.340492010116577
    3. '```' → logprob: -2.965492010116577
    4. ' for' → logprob: -4.090492248535156
    5. '#' (adapté à ' #') → logprob: -4.340492248535156
    6. '``' → logprob: -4.965492248535156
    7. '[' → logprob: -5.590492248535156
    8. 'b' → logprob: -5.965492248535156
    9. '4' → logprob: -6.715492248535156
    10. ',' → logprob: -7.090492248535156

Token 2993: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003221150254830718
    2. '   ' → logprob: -8.250322341918945
    3. '5' → logprob: -10.625322341918945
    4. '#' → logprob: -11.125322341918945
    5. ' ' → logprob: -11.375322341918945
    6. 'for' → logprob: -12.000322341918945
    7. '```' → logprob: -13.000322341918945
    8. 'def' → logprob: -14.250322341918945
    9. '  ' → logprob: -14.875322341918945
    10. '`' → logprob: -15.000322341918945

Token 2994: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0046324534341692924
    2. '4' → logprob: -5.379632472991943
    3. '
' → logprob: -12.129631996154785
    4. '```' → logprob: -13.254631996154785
    5. '   ' → logprob: -13.254631996154785
    6. '7' → logprob: -14.129631996154785
    7. '#' → logprob: -14.379631996154785
    8. ' ' → logprob: -14.504631996154785
    9. ']' → logprob: -15.004631996154785
    10. '  ' → logprob: -15.379631996154785

Token 2995: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04546467587351799
    2. ']' → logprob: -3.9204647541046143
    3. ':' → logprob: -4.795464515686035
    4. '```' → logprob: -5.545464515686035
    5. '=' → logprob: -5.795464515686035
    6. '   ' → logprob: -5.920464515686035
    7. ' =' → logprob: -6.545464515686035
    8. ' [' → logprob: -7.045464515686035
    9. 'def' → logprob: -7.045464515686035
    10. '5' → logprob: -7.420464515686035

Token 2996: ' b' (ID: 287)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.29626479744911194
    2. '5' → logprob: -1.4212647676467896
    3. 'b' → logprob: -4.4212646484375
    4. '[' → logprob: -5.9212646484375
    5. ' ' → logprob: -8.9212646484375
    6. '   ' → logprob: -9.6712646484375
    7. '(' → logprob: -9.7962646484375
    8. '```' → logprob: -10.9212646484375
    9. ' b' → logprob: -11.5462646484375
    10. '  ' → logprob: -12.1712646484375

Token 2997: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.007463111542165279
    2. '4' → logprob: -5.132462978363037
    3. '[' → logprob: -6.632462978363037
    4. '(' → logprob: -9.257463455200195
    5. '1' → logprob: -9.882463455200195
    6. ']' → logprob: -11.007463455200195
    7. '3' → logprob: -11.507463455200195
    8. '7' → logprob: -11.632463455200195
    9. '6' → logprob: -11.882463455200195
    10. ''' → logprob: -12.382463455200195

Token 2998: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010164948180317879
    2. '5' → logprob: -7.876016616821289
    3. '```' → logprob: -8.001016616821289
    4. '4' → logprob: -9.126016616821289
    5. '][' → logprob: -9.751016616821289
    6. '   ' → logprob: -10.626016616821289
    7. '6' → logprob: -10.751016616821289
    8. ']' → logprob: -10.751016616821289
    9. '7' → logprob: -11.001016616821289
    10. '[
' → logprob: -11.251016616821289

Token 2999: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.65707261255011e-06
    2. '   ' → logprob: -12.875008583068848
    3. '4' → logprob: -13.500008583068848
    4. '
' → logprob: -13.875008583068848
    5. '[' → logprob: -14.000008583068848
    6. '```' → logprob: -14.500008583068848
    7. ' ' → logprob: -14.625008583068848
    8. ']' → logprob: -14.875008583068848
    9. '6' → logprob: -15.000008583068848
    10. '7' → logprob: -15.250008583068848

Token 3000: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6329501867294312
    2. '```' → logprob: -1.1329501867294312
    3. ')' → logprob: -2.3829503059387207
    4. ']' → logprob: -4.507950305938721
    5. '[' → logprob: -4.632950305938721
    6. 'def' → logprob: -5.132950305938721
    7. ',' → logprob: -5.132950305938721
    8. '       ' → logprob: -5.382950305938721
    9. '``' → logprob: -5.507950305938721
    10. '4' → logprob: -5.757950305938721

Token 3001: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29712948203086853
    2. '#' → logprob: -1.672129511833191
    3. '```' → logprob: -2.7971293926239014
    4. '[' → logprob: -5.1721296310424805
    5. '``' → logprob: -6.6721296310424805
    6. '`' → logprob: -7.2971296310424805
    7. '4' → logprob: -7.9221296310424805
    8. ',' → logprob: -9.54712963104248
    9. ' #' → logprob: -9.92212963104248
    10. ' ' → logprob: -10.67212963104248

Token 3002: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017416629940271378
    2. '```' → logprob: -4.767416477203369
    3. '#' (adapté à ' #') → logprob: -5.017416477203369
    4. '[' → logprob: -6.642416477203369
    5. '``' → logprob: -7.642416477203369
    6. '`' → logprob: -9.017416954040527
    7. '4' → logprob: -9.642416954040527
    8. 'for' → logprob: -9.642416954040527
    9. 'b' → logprob: -10.017416954040527
    10. ',' → logprob: -11.142416954040527

Token 3003: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.15656974911689758
    2. '   ' → logprob: -2.156569719314575
    3. '```' → logprob: -4.281569957733154
    4. 'b' → logprob: -4.781569957733154
    5. 'for' → logprob: -5.781569957733154
    6. '#' → logprob: -6.531569957733154
    7. '5' → logprob: -7.031569957733154
    8. '[' → logprob: -7.281569957733154
    9. ' b' → logprob: -8.281569480895996
    10. ' for' → logprob: -8.406569480895996

Token 3004: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0003218766360078007
    2. '[' → logprob: -8.250322341918945
    3. '   ' → logprob: -10.750322341918945
    4. '7' → logprob: -11.125322341918945
    5. '```' → logprob: -11.625322341918945
    6. '(' → logprob: -11.875322341918945
    7. '
' → logprob: -13.250322341918945
    8. ']' → logprob: -13.500322341918945
    9. '  ' → logprob: -13.750322341918945
    10. ' ' → logprob: -13.875322341918945

Token 3005: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029640309512615204
    2. '6' → logprob: -6.377964019775391
    3. '```' → logprob: -7.127964019775391
    4. ']' → logprob: -8.87796401977539
    5. ':' → logprob: -9.50296401977539
    6. '=' → logprob: -9.75296401977539
    7. '`' → logprob: -10.50296401977539
    8. ' [' → logprob: -10.50296401977539
    9. ' =' → logprob: -10.62796401977539
    10. '   ' → logprob: -10.75296401977539

Token 3006: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5153206586837769
    2. '6' → logprob: -1.3903206586837769
    3. '[' → logprob: -1.8903206586837769
    4. '```' → logprob: -6.390320777893066
    5. '(' → logprob: -8.015320777893066
    6. ' b' → logprob: -8.640320777893066
    7. '5' → logprob: -9.015320777893066
    8. '4' → logprob: -9.015320777893066
    9. '`' → logprob: -9.765320777893066
    10. '   ' → logprob: -10.140320777893066

Token 3007: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.008937053382396698
    2. '[' → logprob: -4.758936882019043
    3. '7' → logprob: -8.633936882019043
    4. ']' → logprob: -9.383936882019043
    5. '```' → logprob: -11.008936882019043
    6. '5' → logprob: -11.633936882019043
    7. '(' → logprob: -12.133936882019043
    8. ')' → logprob: -12.258936882019043
    9. '[
' → logprob: -12.508936882019043
    10. '4' → logprob: -12.508936882019043

Token 3008: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.632918119430542
    2. '6' → logprob: -0.757918119430542
    3. ']' → logprob: -8.882918357849121
    4. '```' → logprob: -9.382918357849121
    5. '(' → logprob: -10.507918357849121
    6. '
' → logprob: -11.132918357849121
    7. '][' → logprob: -11.132918357849121
    8. '   ' → logprob: -11.507918357849121
    9. '4' → logprob: -11.757918357849121
    10. ')' → logprob: -12.257918357849121

Token 3009: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -11.250016212463379
    3. '
' → logprob: -13.375016212463379
    4. '   ' → logprob: -14.625016212463379
    5. '```' → logprob: -15.125016212463379
    6. ']' → logprob: -15.375016212463379
    7. '(' → logprob: -16.375015258789062
    8. '[
' → logprob: -16.750015258789062
    9. '``' → logprob: -17.125015258789062
    10. '7' → logprob: -17.375015258789062

Token 3010: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1811087131500244
    2. '```' → logprob: -1.1811087131500244
    3. '   ' → logprob: -1.8061087131500244
    4. ')' → logprob: -2.0561087131500244
    5. ',' → logprob: -3.0561087131500244
    6. 'def' → logprob: -4.056108474731445
    7. '``' → logprob: -4.181108474731445
    8. '#' → logprob: -5.431108474731445
    9. '),' → logprob: -6.056108474731445
    10. ']' → logprob: -6.681108474731445

Token 3011: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18512733280658722
    2. '   ' → logprob: -1.9351273775100708
    3. '``' → logprob: -4.435127258300781
    4. '#' → logprob: -5.185127258300781
    5. ',' → logprob: -5.685127258300781
    6. 'b' → logprob: -6.560127258300781
    7. '[' → logprob: -6.685127258300781
    8. '`' → logprob: -7.560127258300781
    9. ',b' → logprob: -8.560127258300781
    10. 'def' → logprob: -8.810127258300781

Token 3012: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.29934412240982056
    2. '   ' → logprob: -1.7993440628051758
    3. '#' (adapté à ' #') → logprob: -2.549344062805176
    4. '``' → logprob: -4.424344062805176
    5. '[' → logprob: -6.549344062805176
    6. '`' → logprob: -6.674344062805176
    7. 'for' → logprob: -8.799344062805176
    8. ',' → logprob: -9.049344062805176
    9. 'b' → logprob: -9.299344062805176
    10. 'def' → logprob: -10.049344062805176

Token 3013: ' bit' (ID: 3546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8745066523551941
    2. '```' → logprob: -0.8745066523551941
    3. 'b' → logprob: -1.8745067119598389
    4. '   ' → logprob: -4.87450647354126
    5. '``' → logprob: -5.74950647354126
    6. 'def' → logprob: -7.24950647354126
    7. '[' → logprob: -7.87450647354126
    8. '`' → logprob: -8.499506950378418
    9. ' b' → logprob: -8.624506950378418
    10. '7' → logprob: -9.874506950378418

Token 3014: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0020336804445832968
    2. '[' → logprob: -6.252033710479736
    3. '(' → logprob: -10.002033233642578
    4. '```' → logprob: -10.002033233642578
    5. '   ' → logprob: -12.377033233642578
    6. ']' → logprob: -12.752033233642578
    7. '[
' → logprob: -14.002033233642578
    8. 'def' → logprob: -14.002033233642578
    9. '6' → logprob: -14.127033233642578
    10. '#' → logprob: -14.127033233642578

Token 3015: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10680951923131943
    2. ' =' → logprob: -3.106809616088867
    3. ':' → logprob: -3.856809616088867
    4. '=' → logprob: -4.356809616088867
    5. '==' → logprob: -4.856809616088867
    6. '```' → logprob: -4.981809616088867
    7. ' ==' → logprob: -5.981809616088867
    8. ']' → logprob: -6.731809616088867
    9. ')' → logprob: -6.981809616088867
    10. '`' → logprob: -7.106809616088867

Token 3016: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11698633432388306
    2. '7' → logprob: -2.7419862747192383
    3. ' b' → logprob: -3.2419862747192383
    4. '(' → logprob: -6.116986274719238
    5. '[' → logprob: -6.116986274719238
    6. ' (' → logprob: -6.866986274719238
    7. ' ' → logprob: -7.491986274719238
    8. '```' → logprob: -7.741986274719238
    9. ''' → logprob: -8.366986274719238
    10. '('' → logprob: -9.491986274719238

Token 3017: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45593565702438354
    2. '7' → logprob: -1.4559357166290283
    3. '6' → logprob: -2.0809357166290283
    4. '```' → logprob: -5.205935478210449
    5. ']' → logprob: -7.080935478210449
    6. '`' → logprob: -7.455935478210449
    7. '(' → logprob: -8.20593547821045
    8. ''' → logprob: -8.20593547821045
    9. '5' → logprob: -8.83093547821045
    10. '][' → logprob: -9.20593547821045

Token 3018: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008282098569907248
    2. '```' → logprob: -8.12582778930664
    3. ']' → logprob: -8.87582778930664
    4. '7' → logprob: -8.87582778930664
    5. '6' → logprob: -9.00082778930664
    6. '][' → logprob: -9.50082778930664
    7. '`' → logprob: -11.25082778930664
    8. '>' → logprob: -11.50082778930664
    9. '   ' → logprob: -11.75082778930664
    10. 'def' → logprob: -12.25082778930664

Token 3019: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.771655115589965e-05
    2. '```' → logprob: -11.875018119812012
    3. '5' → logprob: -12.000018119812012
    4. '(' → logprob: -13.875018119812012
    5. '
' → logprob: -14.125018119812012
    6. '6' → logprob: -14.875018119812012
    7. ' ' → logprob: -15.000018119812012
    8. '   ' → logprob: -15.000018119812012
    9. '``' → logprob: -15.062518119812012
    10. '[' → logprob: -15.062518119812012

Token 3020: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14619170129299164
    2. '   ' → logprob: -2.7711915969848633
    3. ']
' → logprob: -3.2711915969848633
    4. ')' → logprob: -3.7711915969848633
    5. '```' → logprob: -5.271191596984863
    6. ']:
' → logprob: -5.896191596984863
    7. '       ' → logprob: -6.271191596984863
    8. '']' → logprob: -7.521191596984863
    9. ')
' → logprob: -7.521191596984863
    10. 'def' → logprob: -8.146191596984863

Token 3021: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005600361153483391
    2. '```' → logprob: -5.255600452423096
    3. 'x' → logprob: -8.755599975585938
    4. '``' → logprob: -9.380599975585938
    5. 'for' → logprob: -10.880599975585938
    6. ')' → logprob: -11.005599975585938
    7. 'def' → logprob: -11.005599975585938
    8. '
' → logprob: -11.130599975585938
    9. '       ' → logprob: -11.505599975585938
    10. 'count' → logprob: -11.755599975585938

Token 3022: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00809972733259201
    2. '```' → logprob: -5.133099555969238
    3. 'x' → logprob: -6.633099555969238
    4. 'for' → logprob: -8.133099555969238
    5. '``' → logprob: -8.883099555969238
    6. '#' (adapté à ' #') → logprob: -9.133099555969238
    7. 'def' → logprob: -9.258099555969238
    8. 'i' → logprob: -9.508099555969238
    9. '
' → logprob: -10.008099555969238
    10. 'count' → logprob: -10.008099555969238

Token 3023: ' Our' (ID: 5339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034136823378503323
    2. '#' → logprob: -7.003413677215576
    3. '```' → logprob: -7.503413677215576
    4. 'def' → logprob: -7.753413677215576
    5. 'for' → logprob: -7.753413677215576
    6. 'x' → logprob: -8.128414154052734
    7. 'i' → logprob: -8.628414154052734
    8. 'y' → logprob: -8.878414154052734
    9. ' for' → logprob: -9.503414154052734
    10. '
' → logprob: -9.503414154052734

Token 3024: ' previous' (ID: 5880)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2848866283893585
    2. 'def' → logprob: -2.409886598587036
    3. '#' → logprob: -2.909886598587036
    4. '```' → logprob: -3.409886598587036
    5. 'for' → logprob: -4.909886837005615
    6. ' code' → logprob: -5.159886837005615
    7. '   ' → logprob: -5.159886837005615
    8. '[
' → logprob: -5.159886837005615
    9. ' #' → logprob: -5.534886837005615
    10. '
' → logprob: -5.659886837005615

Token 3025: ' y' (ID: 342)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25335896015167236
    2. '```' → logprob: -2.003358840942383
    3. ' code' → logprob: -3.378358840942383
    4. ']' → logprob: -4.628358840942383
    5. ')' → logprob: -4.753358840942383
    6. 'code' → logprob: -5.253358840942383
    7. '#' → logprob: -5.503358840942383
    8. 'def' → logprob: -5.628358840942383
    9. '   ' → logprob: -5.753358840942383
    10. 'b' → logprob: -6.003358840942383

Token 3026: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.021297801285982132
    2. '_positions' → logprob: -4.646297931671143
    3. 'bits' → logprob: -5.521297931671143
    4. '[' → logprob: -5.521297931671143
    5. '```' → logprob: -5.896297931671143
    6. '_indices' → logprob: -8.396297454833984
    7. 'positions' → logprob: -8.771297454833984
    8. '#' → logprob: -9.396297454833984
    9. '``' → logprob: -10.271297454833984
    10. '_' → logprob: -10.646297454833984

Token 3027: ' were' (ID: 1504)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7967520952224731
    2. '[' → logprob: -2.0467519760131836
    3. '   ' → logprob: -2.0467519760131836
    4. ' =' → logprob: -2.4217519760131836
    5. '```' → logprob: -2.9217519760131836
    6. '_positions' → logprob: -3.2967519760131836
    7. '_bits' → logprob: -3.6717519760131836
    8. 'positions' → logprob: -4.796751976013184
    9. '#' → logprob: -4.921751976013184
    10. '=[' → logprob: -5.046751976013184

Token 3028: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012679748237133026
    2. ' [' → logprob: -4.762679576873779
    3. '   ' → logprob: -6.762679576873779
    4. '```' → logprob: -7.262679576873779
    5. 'b' → logprob: -7.637679576873779
    6. '(' → logprob: -7.887679576873779
    7. '7' → logprob: -8.512680053710938
    8. ' =' → logprob: -8.512680053710938
    9. '4' → logprob: -8.512680053710938
    10. ' (' → logprob: -8.887680053710938

Token 3029: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3779391348361969
    2. '1' → logprob: -1.5029391050338745
    3. '7' → logprob: -2.502939224243164
    4. '4' → logprob: -5.127939224243164
    5. ']' → logprob: -6.377939224243164
    6. '```' → logprob: -6.752939224243164
    7. '6' → logprob: -8.252939224243164
    8. '#' → logprob: -8.377939224243164
    9. '5' → logprob: -8.502939224243164
    10. ''' → logprob: -8.877939224243164

Token 3030: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014902232214808464
    2. '```' → logprob: -7.001490116119385
    3. ']' → logprob: -9.126490592956543
    4. '   ' → logprob: -9.501490592956543
    5. '7' → logprob: -9.501490592956543
    6. ')' → logprob: -9.626490592956543
    7. '[
' → logprob: -9.751490592956543
    8. '=' → logprob: -10.001490592956543
    9. 'def' → logprob: -10.626490592956543
    10. '#' → logprob: -10.751490592956543

Token 3031: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.010356920771300793
    2. '3' → logprob: -5.010356903076172
    3. '7' → logprob: -6.510356903076172
    4. '0' → logprob: -7.510356903076172
    5. '6' → logprob: -7.510356903076172
    6. '8' → logprob: -7.635356903076172
    7. '5' → logprob: -8.135356903076172
    8. '(' → logprob: -8.885356903076172
    9. '[' → logprob: -10.010356903076172
    10. ']' → logprob: -10.760356903076172

Token 3032: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18169967830181122
    2. '],' → logprob: -2.056699752807617
    3. ':' → logprob: -4.306699752807617
    4. ':]' → logprob: -4.681699752807617
    5. '4' → logprob: -5.306699752807617
    6. ']:
' → logprob: -6.181699752807617
    7. ',' → logprob: -6.181699752807617
    8. '7' → logprob: -6.806699752807617
    9. '```' → logprob: -7.056699752807617
    10. ']=' → logprob: -7.306699752807617

Token 3033: 'b' (ID: 65)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18775002658367157
    2. 'b' → logprob: -1.812749981880188
    3. '```' → logprob: -5.562749862670898
    4. ' b' → logprob: -6.062749862670898
    5. '   ' → logprob: -7.312749862670898
    6. '6' → logprob: -7.937749862670898
    7. '[' → logprob: -8.562749862670898
    8. ' ' → logprob: -9.062749862670898
    9. '`' → logprob: -9.187749862670898
    10. '#' → logprob: -9.687749862670898

Token 3034: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.02247483655810356
    2. '[' → logprob: -4.147474765777588
    3. '7' → logprob: -5.272474765777588
    4. '5' → logprob: -7.147474765777588
    5. '6' → logprob: -8.397475242614746
    6. '```' → logprob: -9.397475242614746
    7. ']' → logprob: -9.772475242614746
    8. '1' → logprob: -9.897475242614746
    9. '3' → logprob: -10.522475242614746
    10. '(' → logprob: -10.897475242614746

Token 3035: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011230080388486385
    2. '4' → logprob: -4.886229991912842
    3. '6' → logprob: -5.761229991912842
    4. ']' → logprob: -8.51123046875
    5. '```' → logprob: -9.63623046875
    6. '7' → logprob: -10.01123046875
    7. '][' → logprob: -10.01123046875
    8. '5' → logprob: -10.51123046875
    9. '#' → logprob: -10.63623046875
    10. '],' → logprob: -11.38623046875

Token 3036: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.016748180612921715
    2. '8' → logprob: -4.641747951507568
    3. '7' → logprob: -5.516747951507568
    4. '6' → logprob: -6.391747951507568
    5. '(' → logprob: -7.891747951507568
    6. '5' → logprob: -7.891747951507568
    7. '[' → logprob: -8.141748428344727
    8. ']' → logprob: -9.766748428344727
    9. '3' → logprob: -10.141748428344727
    10. '```' → logprob: -10.266748428344727

Token 3037: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04927448555827141
    2. ',' → logprob: -3.049274444580078
    3. ']' → logprob: -7.674274444580078
    4. ',b' → logprob: -9.424274444580078
    5. '6' → logprob: -9.549274444580078
    6. '],
' → logprob: -10.549274444580078
    7. 'b' → logprob: -10.924274444580078
    8. '```' → logprob: -11.924274444580078
    9. '7' → logprob: -12.049274444580078
    10. ':' → logprob: -12.799274444580078

Token 3038: 'b' (ID: 65)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6273988485336304
    2. 'b' → logprob: -0.8773988485336304
    3. '```' → logprob: -3.50239896774292
    4. '5' → logprob: -4.87739896774292
    5. '7' → logprob: -5.12739896774292
    6. '   ' → logprob: -5.87739896774292
    7. '`' → logprob: -6.75239896774292
    8. '``' → logprob: -7.50239896774292
    9. '[' → logprob: -7.87739896774292
    10. 'def' → logprob: -7.87739896774292

Token 3039: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.000662280130200088
    2. '[' → logprob: -7.625662326812744
    3. '1' → logprob: -9.375661849975586
    4. '7' → logprob: -9.875661849975586
    5. '```' → logprob: -10.875661849975586
    6. '(' → logprob: -12.125661849975586
    7. '6' → logprob: -12.125661849975586
    8. ']' → logprob: -13.000661849975586
    9. '
' → logprob: -14.000661849975586
    10. ',' → logprob: -14.125661849975586

Token 3040: '[' (ID: 58)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6421160697937012
    2. '[' → logprob: -0.7671160697937012
    3. '6' → logprob: -5.142116069793701
    4. ']' → logprob: -5.892116069793701
    5. '```' → logprob: -8.01711654663086
    6. '7' → logprob: -8.51711654663086
    7. '][' → logprob: -8.76711654663086
    8. ',' → logprob: -9.51711654663086
    9. '],' → logprob: -9.76711654663086
    10. '`' → logprob: -11.76711654663086

Token 3041: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0064935581758618355
    2. '6' → logprob: -5.13149356842041
    3. '7' → logprob: -7.63149356842041
    4. '3' → logprob: -11.00649356842041
    5. '
' → logprob: -11.13149356842041
    6. '0' → logprob: -11.13149356842041
    7. '```' → logprob: -11.94399356842041
    8. '8' → logprob: -12.13149356842041
    9. '1' → logprob: -12.25649356842041
    10. '2' → logprob: -12.63149356842041

Token 3042: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7167875170707703
    2. '],' → logprob: -0.8417875170707703
    3. ']' → logprob: -2.591787576675415
    4. ',b' → logprob: -5.466787338256836
    5. ':' → logprob: -7.966787338256836
    6. ']=' → logprob: -7.966787338256836
    7. ']:
' → logprob: -8.841787338256836
    8. '6' → logprob: -9.091787338256836
    9. '],
' → logprob: -9.341787338256836
    10. 'b' → logprob: -9.341787338256836

Token 3043: 'b' (ID: 65)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.006941625382751226
    2. 'b' → logprob: -5.006941795349121
    3. '```' → logprob: -9.131941795349121
    4. '   ' → logprob: -10.131941795349121
    5. ',' → logprob: -10.881941795349121
    6. '7' → logprob: -11.131941795349121
    7. '`' → logprob: -11.381941795349121
    8. '[' → logprob: -11.756941795349121
    9. ']' → logprob: -12.631941795349121
    10. '(' → logprob: -12.881941795349121

Token 3044: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.5252596464706585e-05
    2. '[' → logprob: -10.625044822692871
    3. '
' → logprob: -11.625044822692871
    4. ']' → logprob: -12.625044822692871
    5. '```' → logprob: -13.250044822692871
    6. '7' → logprob: -13.625044822692871
    7. '1' → logprob: -13.875044822692871
    8. '(' → logprob: -13.875044822692871
    9. '   ' → logprob: -14.000044822692871
    10. '3' → logprob: -14.625044822692871

Token 3045: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3909797966480255
    2. '6' → logprob: -1.1409797668457031
    3. ']' → logprob: -5.765979766845703
    4. '(' → logprob: -8.140979766845703
    5. '```' → logprob: -8.265979766845703
    6. '=' → logprob: -9.140979766845703
    7. '][' → logprob: -9.515979766845703
    8. '[
' → logprob: -10.140979766845703
    9. ',' → logprob: -10.640979766845703
    10. '<|end|>' → logprob: -10.640979766845703

Token 3046: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1994775377388578e-05
    2. '
' → logprob: -12.250012397766113
    3. '```' → logprob: -13.250012397766113
    4. '7' → logprob: -13.375012397766113
    5. '3' → logprob: -13.875012397766113
    6. '5' → logprob: -14.250012397766113
    7. '[' → logprob: -14.875012397766113
    8. '0' → logprob: -15.000012397766113
    9. '...' → logprob: -15.062512397766113
    10. '``' → logprob: -15.437512397766113

Token 3047: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025845257565379143
    2. ']=' → logprob: -4.775845050811768
    3. '],' → logprob: -4.900845050811768
    4. ',' → logprob: -5.400845050811768
    5. '```' → logprob: -6.900845050811768
    6. '7' → logprob: -7.150845050811768
    7. ']:' → logprob: -7.150845050811768
    8. ']:
' → logprob: -7.650845050811768
    9. ']==' → logprob: -8.025845527648926
    10. ']='' → logprob: -8.025845527648926

Token 3048: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02372744120657444
    2. ')' → logprob: -4.2737274169921875
    3. '[' → logprob: -5.8987274169921875
    4. 'for' → logprob: -6.7737274169921875
    5. 'def' → logprob: -7.0237274169921875
    6. ',' → logprob: -7.0237274169921875
    7. '#' → logprob: -7.5237274169921875
    8. '```' → logprob: -7.6487274169921875
    9. '...' → logprob: -7.7737274169921875
    10. '=' → logprob: -7.8987274169921875

Token 3049: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45923009514808655
    2. ')' → logprob: -1.4592300653457642
    3. '[' → logprob: -2.9592301845550537
    4. '```' → logprob: -3.4592301845550537
    5. 'b' → logprob: -4.084229946136475
    6. '<|end|>' → logprob: -4.209229946136475
    7. ',' → logprob: -5.209229946136475
    8. ' for' → logprob: -6.459229946136475
    9. '       ' → logprob: -6.459229946136475
    10. ' b' → logprob: -6.584229946136475

Token 3050: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047010552138090134
    2. '```' → logprob: -3.172010660171509
    3. ')' → logprob: -5.92201042175293
    4. ',' → logprob: -8.17201042175293
    5. 'for' → logprob: -8.42201042175293
    6. '``' → logprob: -8.42201042175293
    7. ' for' → logprob: -8.67201042175293
    8. '       ' → logprob: -8.67201042175293
    9. '#' (adapté à ' #') → logprob: -9.67201042175293
    10. '...' → logprob: -10.42201042175293

Token 3051: ' Wait' (ID: 24305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0240160021930933
    2. '```' → logprob: -4.5240159034729
    3. 'for' → logprob: -5.6490159034729
    4. ')' → logprob: -5.8990159034729
    5. '       ' → logprob: -6.2740159034729
    6. 'def' → logprob: -6.7740159034729
    7. '#' → logprob: -6.7740159034729
    8. ' for' → logprob: -7.1490159034729
    9. ',' → logprob: -8.024016380310059
    10. '[' → logprob: -8.274016380310059

Token 3052: ' there' (ID: 1354)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.48248305916786194
    2. 'b' → logprob: -1.2324830293655396
    3. '   ' → logprob: -3.607483148574829
    4. '#' → logprob: -3.982483148574829
    5. ')' → logprob: -4.48248291015625
    6. '[' → logprob: -4.48248291015625
    7. 'for' → logprob: -5.10748291015625
    8. ' b' → logprob: -5.48248291015625
    9. ' for' → logprob: -5.73248291015625
    10. 'def' → logprob: -5.98248291015625

Token 3053: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1555272489786148
    2. '=' → logprob: -3.030527353286743
    3. ' is' → logprob: -3.280527353286743
    4. 'b' → logprob: -4.155527114868164
    5. '```' → logprob: -4.530527114868164
    6. '...' → logprob: -5.280527114868164
    7. ''s' → logprob: -5.280527114868164
    8. '#' → logprob: -5.530527114868164
    9. '[
' → logprob: -6.155527114868164
    10. ')' → logprob: -6.155527114868164

Token 3054: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2441478967666626
    2. '[' → logprob: -1.6191478967666626
    3. '```' → logprob: -2.244147777557373
    4. '(' → logprob: -2.369147777557373
    5. 'an' → logprob: -2.494147777557373
    6. 'b' → logprob: -2.619147777557373
    7. 'a' → logprob: -2.869147777557373
    8. '   ' → logprob: -3.369147777557373
    9. ' an' → logprob: -3.869147777557373
    10. ')' → logprob: -3.994147777557373

Token 3055: ' mistake' (ID: 28597)
  Prédit: ' mistake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mistake' → logprob: -0.6333045959472656
    2. '[' → logprob: -1.3833045959472656
    3. ' discrepancy' → logprob: -2.5083045959472656
    4. ' mismatch' → logprob: -3.1333045959472656
    5. '```' → logprob: -4.008304595947266
    6. ' continuation' → logprob: -4.258304595947266
    7. ' bug' → logprob: -4.383304595947266
    8. 'bug' → logprob: -4.633304595947266
    9. 'mist' → logprob: -4.883304595947266
    10. 'continu' → logprob: -5.633304595947266

Token 3056: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2471061646938324
    2. '#' → logprob: -2.3721060752868652
    3. ')' → logprob: -2.6221060752868652
    4. '```' → logprob: -3.9971060752868652
    5. '...' → logprob: -4.747106075286865
    6. '[' → logprob: -5.247106075286865
    7. '       ' → logprob: -5.372106075286865
    8. 'b' → logprob: -5.872106075286865
    9. '<|end|>' → logprob: -5.997106075286865
    10. 'def' → logprob: -5.997106075286865

Token 3057: ' y' (ID: 342)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08277707546949387
    2. '```' → logprob: -3.4577770233154297
    3. 'the' → logprob: -4.08277702331543
    4. '#' → logprob: -4.70777702331543
    5. 'def' → logprob: -5.20777702331543
    6. ' b' → logprob: -5.70777702331543
    7. '   ' → logprob: -5.83277702331543
    8. 'line' → logprob: -6.45777702331543
    9. '`' → logprob: -6.83277702331543
    10. ' the' → logprob: -6.95777702331543

Token 3058: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7077518105506897
    2. ')' → logprob: -1.082751750946045
    3. '   ' → logprob: -2.457751750946045
    4. ']' → logprob: -4.207751750946045
    5. '(' → logprob: -4.582751750946045
    6. '[
' → logprob: -4.707751750946045
    7. 'b' → logprob: -4.832751750946045
    8. '<|end|>' → logprob: -4.957751750946045
    9. '#' → logprob: -5.082751750946045
    10. '```' → logprob: -5.082751750946045

Token 3059: ' positions' (ID: 15897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1347017139196396
    2. '```' → logprob: -2.259701728820801
    3. ')' → logprob: -4.884701728820801
    4. '[' → logprob: -5.509701728820801
    5. 'def' → logprob: -5.884701728820801
    6. 'b' → logprob: -5.884701728820801
    7. '#' → logprob: -6.134701728820801
    8. '``' → logprob: -7.884701728820801
    9. '       ' → logprob: -8.1347017288208
    10. '(' → logprob: -8.2597017288208

Token 3060: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08077670633792877
    2. '#' → logprob: -3.3307766914367676
    3. ')' → logprob: -4.205776691436768
    4. 'def' → logprob: -4.580776691436768
    5. '=' → logprob: -5.705776691436768
    6. 'b' → logprob: -5.830776691436768
    7. '[' → logprob: -5.955776691436768
    8. '```' → logprob: -6.455776691436768
    9. ',' → logprob: -6.705776691436768
    10. 'for' → logprob: -6.830776691436768

Token 3061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11479481309652328
    2. '```' → logprob: -2.2397947311401367
    3. ')' → logprob: -7.114794731140137
    4. 'def' → logprob: -7.614794731140137
    5. '``' → logprob: -8.364794731140137
    6. '#' → logprob: -9.364794731140137
    7. ',' → logprob: -9.364794731140137
    8. '       ' → logprob: -10.114794731140137
    9. 'b' → logprob: -10.114794731140137
    10. '[' → logprob: -10.239794731140137

Token 3062: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017403971403837204
    2. '```' → logprob: -4.392404079437256
    3. 'def' → logprob: -5.642404079437256
    4. '#' (adapté à ' #') → logprob: -7.017404079437256
    5. 'for' → logprob: -8.892403602600098
    6. 'b' → logprob: -9.017403602600098
    7. ')' → logprob: -10.142403602600098
    8. '``' → logprob: -10.392403602600098
    9. '       ' → logprob: -10.517403602600098
    10. '
' → logprob: -10.517403602600098

Token 3063: ' From' (ID: 7217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012793805450201035
    2. '#' → logprob: -5.512794017791748
    3. ')' → logprob: -6.012794017791748
    4. 'def' → logprob: -6.512794017791748
    5. '```' → logprob: -6.762794017791748
    6. 'for' → logprob: -6.887794017791748
    7. '[' → logprob: -7.387794017791748
    8. 'b' → logprob: -7.512794017791748
    9. '       ' → logprob: -8.01279354095459
    10. '...' → logprob: -8.26279354095459

Token 3064: ' initial' (ID: 4871)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2172788828611374
    2. 'b' → logprob: -1.8422788381576538
    3. 'def' → logprob: -3.5922789573669434
    4. '```' → logprob: -5.217278957366943
    5. 'code' → logprob: -6.967278957366943
    6. '"""
' → logprob: -7.717278957366943
    7. '
' → logprob: -7.842278957366943
    8. 'line' → logprob: -8.467278480529785
    9. 'range' → logprob: -8.592278480529785
    10. 'comment' → logprob: -8.592278480529785

Token 3065: ' problem' (ID: 4792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5535298585891724
    2. 'b' → logprob: -1.4285298585891724
    3. '#' → logprob: -2.303529739379883
    4. 'def' → logprob: -3.303529739379883
    5. '```' → logprob: -4.428529739379883
    6. '[
' → logprob: -4.928529739379883
    7. ':' → logprob: -5.178529739379883
    8. ' b' → logprob: -5.428529739379883
    9. 'code' → logprob: -5.553529739379883
    10. ' code' → logprob: -5.928529739379883

Token 3066: ' analysis' (ID: 8450)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04262629151344299
    2. '```' → logprob: -4.16762638092041
    3. ')' → logprob: -4.79262638092041
    4. 'b' → logprob: -5.04262638092041
    5. '   ' → logprob: -5.29262638092041
    6. '<|end|>' → logprob: -6.41762638092041
    7. 'def' → logprob: -6.91762638092041
    8. '(' → logprob: -7.29262638092041
    9. '[
' → logprob: -7.29262638092041
    10. '...' → logprob: -7.66762638092041

Token 3067: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028633352369070053
    2. 'def' → logprob: -4.653633117675781
    3. '```' → logprob: -4.778633117675781
    4. '#' → logprob: -5.028633117675781
    5. ',' → logprob: -6.903633117675781
    6. ')' → logprob: -7.028633117675781
    7. 'b' → logprob: -7.403633117675781
    8. '``' → logprob: -8.653633117675781
    9. '       ' → logprob: -9.028633117675781
    10. 'for' → logprob: -9.028633117675781

Token 3068: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07526641339063644
    2. '#' → logprob: -3.0752663612365723
    3. 'def' → logprob: -4.575266361236572
    4. 'b' → logprob: -4.700266361236572
    5. 'for' → logprob: -6.075266361236572
    6. '```' → logprob: -6.325266361236572
    7. ' for' → logprob: -7.575266361236572
    8. '...' → logprob: -7.950266361236572
    9. 'y' → logprob: -8.20026683807373
    10. ')' → logprob: -8.45026683807373

Token 3069: '111' (ID: 8780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2512253522872925
    2. '#' → logprob: -2.251225471496582
    3. 'y' → logprob: -3.501225471496582
    4. 'for' → logprob: -3.626225471496582
    5. 'def' → logprob: -3.626225471496582
    6. 'b' → logprob: -3.751225471496582
    7. 'x' → logprob: -5.876225471496582
    8. '```' → logprob: -6.001225471496582
    9. 'pos' → logprob: -7.126225471496582
    10. ' for' → logprob: -7.251225471496582

Token 3070: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5353195667266846
    2. '0' → logprob: -0.9103195667266846
    3. 'def' → logprob: -4.6603193283081055
    4. 'b' → logprob: -6.7853193283081055
    5. '```' → logprob: -7.2853193283081055
    6. '000' → logprob: -8.410319328308105
    7. ')' → logprob: -9.160319328308105
    8. ']' → logprob: -9.410319328308105
    9. '...' → logprob: -9.785319328308105
    10. '#' → logprob: -9.785319328308105

Token 3071: 'yyyy' (ID: 27343)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25924673676490784
    2. '[' → logprob: -1.5092467069625854
    3. '```' → logprob: -5.884246826171875
    4. 'yyyy' → logprob: -6.509246826171875
    5. '[b' → logprob: -6.509246826171875
    6. 'bbbb' → logprob: -8.384246826171875
    7. '[y' → logprob: -8.384246826171875
    8. 'def' → logprob: -8.634246826171875
    9. '`' → logprob: -8.884246826171875
    10. ' b' → logprob: -9.134246826171875

Token 3072: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22101004421710968
    2. '[' → logprob: -2.3460099697113037
    3. 'def' → logprob: -3.2210099697113037
    4. 'b' → logprob: -3.4710099697113037
    5. '#' → logprob: -4.471010208129883
    6. '```' → logprob: -4.971010208129883
    7. ',' → logprob: -5.471010208129883
    8. '       ' → logprob: -6.471010208129883
    9. ')' → logprob: -6.596010208129883
    10. 'for' → logprob: -6.846010208129883

Token 3073: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.024020768702030182
    2. ' b' → logprob: -4.899020671844482
    3. '#' → logprob: -5.399020671844482
    4. '   ' → logprob: -5.399020671844482
    5. 'bit' → logprob: -6.024020671844482
    6. '`' → logprob: -6.399020671844482
    7. '```' → logprob: -6.774020671844482
    8. 'def' → logprob: -7.024020671844482
    9. '[' → logprob: -8.39902114868164
    10. '1' → logprob: -9.14902114868164

Token 3074: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09086669236421585
    2. '1' → logprob: -2.465866804122925
    3. '```' → logprob: -6.965866565704346
    4. 'b' → logprob: -8.340867042541504
    5. 'def' → logprob: -8.465867042541504
    6. '[
' → logprob: -8.840867042541504
    7. '`' → logprob: -8.840867042541504
    8. ']' → logprob: -9.965867042541504
    9. '[]' → logprob: -10.340867042541504
    10. '#' → logprob: -10.340867042541504

Token 3075: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017851332668215036
    2. '```' → logprob: -7.2517852783203125
    3. 'b' → logprob: -7.6267852783203125
    4. ' =' → logprob: -9.126785278320312
    5. '   ' → logprob: -9.376785278320312
    6. '`' → logprob: -9.626785278320312
    7. '#' → logprob: -10.001785278320312
    8. 'def' → logprob: -10.126785278320312
    9. ')' → logprob: -10.251785278320312
    10. '[
' → logprob: -10.501785278320312

Token 3076: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1412133127450943
    2. '=' → logprob: -3.3912134170532227
    3. ' =' → logprob: -3.5162134170532227
    4. 'b' → logprob: -3.8912134170532227
    5. '```' → logprob: -4.141213417053223
    6. '   ' → logprob: -4.391213417053223
    7. ':' → logprob: -5.266213417053223
    8. '#' → logprob: -5.641213417053223
    9. '=[' → logprob: -6.016213417053223
    10. 'def' → logprob: -6.641213417053223

Token 3077: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3065526783466339
    2. '   ' → logprob: -2.0565526485443115
    3. 'b' → logprob: -2.5565526485443115
    4. '```' → logprob: -3.3065526485443115
    5. ' b' → logprob: -4.806552886962891
    6. '#' → logprob: -5.306552886962891
    7. '``' → logprob: -6.431552886962891
    8. '...' → logprob: -6.681552886962891
    9. '(' → logprob: -7.056552886962891
    10. ' [' → logprob: -7.056552886962891

Token 3078: ' #' (ID: 1069)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5615919828414917
    2. '4' → logprob: -2.1865921020507812
    3. '   ' → logprob: -2.1865921020507812
    4. 'b' → logprob: -2.6865921020507812
    5. '```' → logprob: -2.9365921020507812
    6. '[' → logprob: -3.5615921020507812
    7. '#' (adapté à ' #') → logprob: -4.436592102050781
    8. ' b' → logprob: -4.561592102050781
    9. ' ' → logprob: -4.686592102050781
    10. '...' → logprob: -4.686592102050781

Token 3079: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.34196043014526367
    2. '   ' → logprob: -1.8419604301452637
    3. '[' → logprob: -2.5919604301452637
    4. '7' → logprob: -3.7169604301452637
    5. '3' → logprob: -4.341960430145264
    6. '#' → logprob: -5.216960430145264
    7. 'b' → logprob: -5.716960430145264
    8. 'def' → logprob: -5.966960430145264
    9. '(' → logprob: -6.091960430145264
    10. ' ' → logprob: -6.341960430145264

Token 3080: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.030043084174394608
    2. '[' → logprob: -3.780043125152588
    3. '4' → logprob: -5.405043125152588
    4. '```' → logprob: -6.905043125152588
    5. '3' → logprob: -7.780043125152588
    6. '1' → logprob: -8.03004264831543
    7. ']' → logprob: -8.28004264831543
    8. '
' → logprob: -10.15504264831543
    9. '``' → logprob: -10.28004264831543
    10. ')' → logprob: -10.53004264831543

Token 3081: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009513601544313133
    2. '=
' → logprob: -7.250951290130615
    3. ' =' → logprob: -9.500951766967773
    4. '```' → logprob: -10.250951766967773
    5. '='' → logprob: -10.750951766967773
    6. ',' → logprob: -10.750951766967773
    7. ']' → logprob: -11.250951766967773
    8. '[' → logprob: -11.375951766967773
    9. '=`' → logprob: -11.750951766967773
    10. '=#' → logprob: -11.875951766967773

Token 3082: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0023224835749715567
    2. '1' → logprob: -6.127322673797607
    3. ' '' → logprob: -10.00232219696045
    4. '`' → logprob: -10.25232219696045
    5. '   ' → logprob: -11.62732219696045
    6. '
' → logprob: -11.62732219696045
    7. '"' → logprob: -11.87732219696045
    8. 'b' → logprob: -12.50232219696045
    9. '```' → logprob: -12.50232219696045
    10. '[' → logprob: -12.75232219696045

Token 3083: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5717422962188721
    2. ',' → logprob: -1.196742296218872
    3. '[' → logprob: -2.696742296218872
    4. 'b' → logprob: -4.321742057800293
    5. '```' → logprob: -4.321742057800293
    6. '   ' → logprob: -4.571742057800293
    7. 'def' → logprob: -4.571742057800293
    8. ',
' → logprob: -5.571742057800293
    9. ']' → logprob: -5.821742057800293
    10. '=
' → logprob: -6.446742057800293

Token 3084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1651948243379593
    2. '[' → logprob: -1.9151948690414429
    3. ']' → logprob: -5.915194988250732
    4. '```' → logprob: -6.665194988250732
    5. '7' → logprob: -7.665194988250732
    6. ''' → logprob: -9.040194511413574
    7. ')' → logprob: -9.040194511413574
    8. '`' → logprob: -9.415194511413574
    9. '#' → logprob: -10.290194511413574
    10. 'def' → logprob: -10.790194511413574

Token 3085: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005923516000621021
    2. ']' → logprob: -8.500592231750488
    3. '7' → logprob: -9.125592231750488
    4. '```' → logprob: -9.125592231750488
    5. '][' → logprob: -10.250592231750488
    6. '`' → logprob: -10.750592231750488
    7. '[
' → logprob: -10.750592231750488
    8. '#' → logprob: -10.875592231750488
    9. ')' → logprob: -11.250592231750488
    10. '=' → logprob: -11.625592231750488

Token 3086: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08766122162342072
    2. '3' → logprob: -2.5876612663269043
    3. '4' → logprob: -4.962661266326904
    4. ']' → logprob: -7.212661266326904
    5. '7' → logprob: -7.587661266326904
    6. '1' → logprob: -8.462660789489746
    7. ' ' → logprob: -9.587660789489746
    8. '```' → logprob: -9.712660789489746
    9. '   ' → logprob: -10.712660789489746
    10. '2' → logprob: -10.962660789489746

Token 3087: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047649532556533813
    2. '],' → logprob: -3.422649621963501
    3. ']==' → logprob: -5.422649383544922
    4. ']
' → logprob: -5.672649383544922
    5. ']=' → logprob: -6.172649383544922
    6. ']=='' → logprob: -7.047649383544922
    7. ']='' → logprob: -7.047649383544922
    8. '']' → logprob: -7.797649383544922
    9. '   ' → logprob: -7.797649383544922
    10. ' not' → logprob: -8.922649383544922

Token 3088: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.615474283695221
    2. 'b' → logprob: -1.6154742240905762
    3. '```' → logprob: -1.9904742240905762
    4. '#' → logprob: -2.115474224090576
    5. '``' → logprob: -6.365474224090576
    6. '`' → logprob: -7.240474224090576
    7. ',' → logprob: -7.615474224090576
    8. ' b' → logprob: -7.740474224090576
    9. '[' → logprob: -9.615474700927734
    10. ' #' → logprob: -9.865474700927734

Token 3089: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9536309242248535
    2. '```' → logprob: -0.9536309242248535
    3. 'b' → logprob: -2.4536309242248535
    4. '   ' → logprob: -2.7036309242248535
    5. '=' → logprob: -3.4536309242248535
    6. ',' → logprob: -4.4536309242248535
    7. '#' (adapté à ' #') → logprob: -4.8286309242248535
    8. '4' → logprob: -4.9536309242248535
    9. '``' → logprob: -5.4536309242248535
    10. ')' → logprob: -5.8286309242248535

Token 3090: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12222136557102203
    2. '3' → logprob: -2.9972214698791504
    3. '7' → logprob: -3.6222214698791504
    4. 'b' → logprob: -4.74722146987915
    5. '```' → logprob: -4.74722146987915
    6. '#' → logprob: -5.12222146987915
    7. '   ' → logprob: -5.24722146987915
    8. '6' → logprob: -5.74722146987915
    9. '1' → logprob: -5.87222146987915
    10. 'def' → logprob: -6.12222146987915

Token 3091: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6894782781600952
    2. '7' → logprob: -0.8144782781600952
    3. '[' → logprob: -2.9394783973693848
    4. '```' → logprob: -6.814478397369385
    5. '4' → logprob: -7.689478397369385
    6. '(' → logprob: -7.939478397369385
    7. ']' → logprob: -9.314477920532227
    8. '5' → logprob: -9.564477920532227
    9. '
' → logprob: -9.689477920532227
    10. '`' → logprob: -9.814477920532227

Token 3092: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21134376525878906
    2. 'not' → logprob: -1.711343765258789
    3. ' not' → logprob: -5.086343765258789
    4. '```' → logprob: -5.961343765258789
    5. 'b' → logprob: -8.586343765258789
    6. '=' → logprob: -8.836343765258789
    7. '   ' → logprob: -8.836343765258789
    8. '1' → logprob: -8.836343765258789
    9. ']' → logprob: -9.086343765258789
    10. 'def' → logprob: -9.086343765258789

Token 3093: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015474741347134113
    2. '1' → logprob: -4.390474796295166
    3. '3' → logprob: -6.265474796295166
    4. 'b' → logprob: -8.015474319458008
    5. ''b' → logprob: -8.265474319458008
    6. '`' → logprob: -8.890474319458008
    7. '2' → logprob: -9.390474319458008
    8. '```' → logprob: -9.640474319458008
    9. '0' → logprob: -10.015474319458008
    10. ' '' → logprob: -10.140474319458008

Token 3094: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06350488215684891
    2. '```' → logprob: -3.813504934310913
    3. '[' → logprob: -4.563504695892334
    4. '   ' → logprob: -4.813504695892334
    5. 'def' → logprob: -4.813504695892334
    6. ',' → logprob: -5.563504695892334
    7. ' b' → logprob: -5.563504695892334
    8. 'if' → logprob: -6.438504695892334
    9. '#' → logprob: -6.938504695892334
    10. ')' → logprob: -7.063504695892334

Token 3095: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020830852736253291
    2. '[' → logprob: -9.125207901000977
    3. '```' → logprob: -9.625207901000977
    4. '7' → logprob: -11.250207901000977
    5. '2' → logprob: -12.125207901000977
    6. '(' → logprob: -12.250207901000977
    7. '``' → logprob: -13.000207901000977
    8. '   ' → logprob: -13.125207901000977
    9. '`' → logprob: -13.500207901000977
    10. '3' → logprob: -13.875207901000977

Token 3096: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018289341824129224
    2. '1' → logprob: -6.376829147338867
    3. '```' → logprob: -9.626829147338867
    4. ']' → logprob: -10.751829147338867
    5. '7' → logprob: -11.126829147338867
    6. '[
' → logprob: -11.376829147338867
    7. '`' → logprob: -12.376829147338867
    8. '][' → logprob: -13.001829147338867
    9. '2' → logprob: -13.251829147338867
    10. '   ' → logprob: -13.501829147338867

Token 3097: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05543754994869232
    2. '2' → logprob: -2.9304375648498535
    3. '7' → logprob: -7.6804375648498535
    4. '3' → logprob: -10.555437088012695
    5. ']' → logprob: -10.805437088012695
    6. '0' → logprob: -11.430437088012695
    7. '   ' → logprob: -11.430437088012695
    8. '```' → logprob: -11.930437088012695
    9. ' ' → logprob: -12.430437088012695
    10. '`' → logprob: -12.930437088012695

Token 3098: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7635825276374817
    2. ']' → logprob: -1.013582468032837
    3. '```' → logprob: -2.638582468032837
    4. ')' → logprob: -3.138582468032837
    5. 'def' → logprob: -3.638582468032837
    6. '#' → logprob: -4.388582706451416
    7. ']
' → logprob: -5.263582706451416
    8. 'b' → logprob: -5.513582706451416
    9. ')
' → logprob: -6.513582706451416
    10. '``' → logprob: -6.638582706451416

Token 3099: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.28582796454429626
    2. 'b' → logprob: -2.285827875137329
    3. '   ' → logprob: -2.285827875137329
    4. '#' → logprob: -3.285827875137329
    5. '``' → logprob: -4.910828113555908
    6. '`' → logprob: -8.78582763671875
    7. ' b' → logprob: -8.91082763671875
    8. '[' → logprob: -10.16082763671875
    9. ',' → logprob: -10.28582763671875
    10. '       ' → logprob: -10.91082763671875

Token 3100: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6680976748466492
    2. '```' → logprob: -0.7930976748466492
    3. '   ' → logprob: -4.418097496032715
    4. '``' → logprob: -4.793097496032715
    5. 'b' → logprob: -5.043097496032715
    6. '2' → logprob: -5.543097496032715
    7. '[' → logprob: -6.793097496032715
    8. '3' → logprob: -6.918097496032715
    9. '4' → logprob: -7.293097496032715
    10. '`' → logprob: -7.543097496032715

Token 3101: ' bit' (ID: 3546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20391131937503815
    2. '4' → logprob: -2.578911304473877
    3. '```' → logprob: -2.953911304473877
    4. '2' → logprob: -3.953911304473877
    5. 'b' → logprob: -4.078911304473877
    6. '7' → logprob: -5.078911304473877
    7. '#' → logprob: -5.203911304473877
    8. '5' → logprob: -6.078911304473877
    9. '6' → logprob: -6.203911304473877
    10. 'def' → logprob: -6.328911304473877

Token 3102: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026196138933300972
    2. '[' → logprob: -3.901196241378784
    3. '7' → logprob: -5.276196002960205
    4. '```' → logprob: -8.151196479797363
    5. '(' → logprob: -9.151196479797363
    6. ']' → logprob: -10.401196479797363
    7. '1' → logprob: -10.526196479797363
    8. '3' → logprob: -10.776196479797363
    9. '][' → logprob: -11.026196479797363
    10. '6' → logprob: -11.651196479797363

Token 3103: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12993356585502625
    2. 'not' → logprob: -2.3799335956573486
    3. '```' → logprob: -4.1299333572387695
    4. ' not' → logprob: -5.3799333572387695
    5. ']' → logprob: -5.8799333572387695
    6. '2' → logprob: -5.8799333572387695
    7. '`' → logprob: -7.1299333572387695
    8. ''' → logprob: -7.5049333572387695
    9. '   ' → logprob: -7.6299333572387695
    10. 'def' → logprob: -8.62993335723877

Token 3104: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011110781691968441
    2. '2' → logprob: -4.511110782623291
    3. ' '' → logprob: -10.511110305786133
    4. '`' → logprob: -11.886110305786133
    5. '```' → logprob: -12.011110305786133
    6. ''b' → logprob: -12.386110305786133
    7. '
' → logprob: -12.761110305786133
    8. ''s' → logprob: -12.886110305786133
    9. 'b' → logprob: -12.886110305786133
    10. '"' → logprob: -12.886110305786133

Token 3105: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5599604249000549
    2. 'b' → logprob: -0.9349604249000549
    3. '   ' → logprob: -4.18496036529541
    4. '```' → logprob: -5.05996036529541
    5. ' not' → logprob: -5.18496036529541
    6. 'def' → logprob: -5.80996036529541
    7. ')' → logprob: -6.43496036529541
    8. ']' → logprob: -6.93496036529541
    9. ' if' → logprob: -7.18496036529541
    10. ' def' → logprob: -7.93496036529541

Token 3106: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28326523303985596
    2. '[' → logprob: -1.408265233039856
    3. '```' → logprob: -6.783265113830566
    4. '7' → logprob: -7.533265113830566
    5. ']' → logprob: -9.158265113830566
    6. '1' → logprob: -9.658265113830566
    7. '(' → logprob: -10.033265113830566
    8. '   ' → logprob: -10.033265113830566
    9. '[
' → logprob: -10.283265113830566
    10. '`' → logprob: -10.658265113830566

Token 3107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39252981543540955
    2. ']' → logprob: -1.142529845237732
    3. '2' → logprob: -5.6425299644470215
    4. '']' → logprob: -7.0175299644470215
    5. '```' → logprob: -7.6425299644470215
    6. '   ' → logprob: -7.8925299644470215
    7. '#' → logprob: -9.142529487609863
    8. 'def' → logprob: -9.392529487609863
    9. '][' → logprob: -10.767529487609863
    10. '"]' → logprob: -11.017529487609863

Token 3108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.191489642835222e-05
    2. '   ' → logprob: -11.375041961669922
    3. '```' → logprob: -11.750041961669922
    4. ''' → logprob: -11.875041961669922
    5. '3' → logprob: -12.625041961669922
    6. '1' → logprob: -13.000041961669922
    7. ' ' → logprob: -13.250041961669922
    8. '(' → logprob: -13.562541961669922
    9. '`' → logprob: -13.750041961669922
    10. ']' → logprob: -13.875041961669922

Token 3109: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2881412208080292
    2. '```' → logprob: -2.4131412506103516
    3. 'b' → logprob: -3.2881412506103516
    4. 'def' → logprob: -3.5381412506103516
    5. ')' → logprob: -3.5381412506103516
    6. ')
' → logprob: -3.6631412506103516
    7. ' b' → logprob: -4.288141250610352
    8. '#' → logprob: -5.163141250610352
    9. ']' → logprob: -5.538141250610352
    10. ',' → logprob: -5.538141250610352

Token 3110: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6993030905723572
    2. '   ' → logprob: -0.9493030905723572
    3. '#' → logprob: -2.574303150177002
    4. 'b' → logprob: -3.324303150177002
    5. '``' → logprob: -5.949303150177002
    6. '`' → logprob: -6.949303150177002
    7. ' b' → logprob: -9.449302673339844
    8. ',' → logprob: -9.824302673339844
    9. '[' → logprob: -10.199302673339844
    10. ')' → logprob: -10.199302673339844

Token 3111: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37166911363601685
    2. '```' → logprob: -1.371669054031372
    3. '#' (adapté à ' #') → logprob: -2.996669054031372
    4. 'b' → logprob: -5.621669292449951
    5. '`' → logprob: -6.371669292449951
    6. '``' → logprob: -6.871669292449951
    7. ',' → logprob: -8.621668815612793
    8. '       ' → logprob: -9.996668815612793
    9. ' b' → logprob: -9.996668815612793
    10. ')' → logprob: -10.496668815612793

Token 3112: ' bit' (ID: 3546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1420324593782425
    2. '4' → logprob: -2.6420323848724365
    3. 'b' → logprob: -3.3920323848724365
    4. '#' → logprob: -4.767032623291016
    5. '```' → logprob: -4.767032623291016
    6. '   ' → logprob: -5.392032623291016
    7. '7' → logprob: -5.767032623291016
    8. 'def' → logprob: -6.267032623291016
    9. '`' → logprob: -7.892032623291016
    10. '``' → logprob: -8.517032623291016

Token 3113: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.016502441838383675
    2. '[' → logprob: -4.141502380371094
    3. '```' → logprob: -8.016502380371094
    4. '7' → logprob: -9.266502380371094
    5. '   ' → logprob: -11.266502380371094
    6. ']' → logprob: -12.016502380371094
    7. '``' → logprob: -12.141502380371094
    8. '[
' → logprob: -12.641502380371094
    9. '(' → logprob: -12.766502380371094
    10. '`' → logprob: -12.766502380371094

Token 3114: '=' (ID: 28)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3203970789909363
    2. ' not' → logprob: -1.320397138595581
    3. '```' → logprob: -5.195396900177002
    4. '[' → logprob: -7.570396900177002
    5. '==' → logprob: -8.32039737701416
    6. '   ' → logprob: -8.44539737701416
    7. '`' → logprob: -8.94539737701416
    8. ''' → logprob: -9.19539737701416
    9. ']' → logprob: -9.44539737701416
    10. ')' → logprob: -9.82039737701416

Token 3115: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001047339290380478
    2. '3' → logprob: -7.126047134399414
    3. ''b' → logprob: -8.876047134399414
    4. ' '' → logprob: -9.751047134399414
    5. 'b' → logprob: -10.626047134399414
    6. '`' → logprob: -12.001047134399414
    7. ''x' → logprob: -12.126047134399414
    8. '
' → logprob: -13.751047134399414
    9. '('' → logprob: -14.126047134399414
    10. '   ' → logprob: -14.126047134399414

Token 3116: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36822569370269775
    2. 'def' → logprob: -2.118225574493408
    3. '```' → logprob: -2.243225574493408
    4. '[' → logprob: -3.118225574493408
    5. ',' → logprob: -4.618225574493408
    6. '#' → logprob: -5.118225574493408
    7. 'b' → logprob: -5.493225574493408
    8. '``' → logprob: -5.868225574493408
    9. ')' → logprob: -6.243225574493408
    10. '       ' → logprob: -6.618225574493408

Token 3117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2016339749097824
    2. '3' → logprob: -1.7016339302062988
    3. '```' → logprob: -8.576634407043457
    4. '2' → logprob: -11.451634407043457
    5. '[' → logprob: -11.701634407043457
    6. '``' → logprob: -12.826634407043457
    7. '   ' → logprob: -13.076634407043457
    8. '
' → logprob: -13.326634407043457
    9. ' ' → logprob: -13.451634407043457
    10. '`' → logprob: -13.451634407043457

Token 3118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022882839664816856
    2. '3' → logprob: -3.8978829383850098
    3. '```' → logprob: -6.39788293838501
    4. ']' → logprob: -7.77288293838501
    5. '`' → logprob: -8.897882461547852
    6. '   ' → logprob: -10.272882461547852
    7. '``' → logprob: -10.397882461547852
    8. ''' → logprob: -10.897882461547852
    9. '#' → logprob: -12.272882461547852
    10. '][' → logprob: -12.272882461547852

Token 3119: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.250001907348633
    3. '   ' → logprob: -14.500001907348633
    4. ']' → logprob: -15.625001907348633
    5. '```' → logprob: -16.000001907348633
    6. '`' → logprob: -16.750001907348633
    7. '#' → logprob: -17.125001907348633
    8. '4' → logprob: -17.625001907348633
    9. ''' → logprob: -17.750001907348633
    10. '[' → logprob: -17.875001907348633

Token 3120: ']
' (ID: 1592)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.041518211364746
    2. ')' → logprob: -1.166518211364746
    3. '   ' → logprob: -1.541518211364746
    4. ']' → logprob: -3.041518211364746
    5. '<|end|>' → logprob: -3.916518211364746
    6. 'def' → logprob: -4.666518211364746
    7. ')
' → logprob: -4.791518211364746
    8. '
' → logprob: -5.166518211364746
    9. '):
' → logprob: -5.291518211364746
    10. '#' → logprob: -5.666518211364746

Token 3121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32020825147628784
    2. '```' → logprob: -1.3202083110809326
    3. '``' → logprob: -5.4452080726623535
    4. 'b' → logprob: -6.4452080726623535
    5. '#' → logprob: -7.8202080726623535
    6. '
' → logprob: -8.945208549499512
    7. ',' → logprob: -9.070208549499512
    8. '`' → logprob: -9.195208549499512
    9. ' b' → logprob: -9.320208549499512
    10. '[' → logprob: -9.570208549499512

Token 3122: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11169188469648361
    2. '```' → logprob: -2.361691951751709
    3. '#' (adapté à ' #') → logprob: -4.736691951751709
    4. '``' → logprob: -6.486691951751709
    5. '`' → logprob: -7.861691951751709
    6. 'b' → logprob: -7.986691951751709
    7. '       ' → logprob: -9.11169147491455
    8. '4' → logprob: -9.23669147491455
    9. '
' → logprob: -9.61169147491455
    10. 'for' → logprob: -10.11169147491455

Token 3123: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48301932215690613
    2. 'b' → logprob: -1.2330193519592285
    3. '#' → logprob: -2.9830193519592285
    4. '4' → logprob: -3.8580193519592285
    5. '```' → logprob: -4.2330193519592285
    6. '
' → logprob: -6.6080193519592285
    7. '`' → logprob: -6.6080193519592285
    8. 'for' → logprob: -7.4830193519592285
    9. '``' → logprob: -7.6080193519592285
    10. 'def' → logprob: -7.8580193519592285

Token 3124: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.215330409351736e-05
    2. '7' → logprob: -10.875041961669922
    3. '```' → logprob: -11.125041961669922
    4. '[' → logprob: -12.750041961669922
    5. '3' → logprob: -13.000041961669922
    6. '
' → logprob: -13.375041961669922
    7. '   ' → logprob: -14.000041961669922
    8. '``' → logprob: -15.000041961669922
    9. '(' → logprob: -15.500041961669922
    10. '5' → logprob: -15.625041961669922

Token 3125: '=y' (ID: 70421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15755118429660797
    2. '4' → logprob: -2.0325512886047363
    3. '```' → logprob: -4.532551288604736
    4. '=' → logprob: -6.282551288604736
    5. ''' → logprob: -7.157551288604736
    6. '`' → logprob: -8.032550811767578
    7. '   ' → logprob: -8.282550811767578
    8. '='' → logprob: -9.407550811767578
    9. ')' → logprob: -9.532550811767578
    10. '``' → logprob: -9.657550811767578

Token 3126: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5897967219352722
    2. '```' → logprob: -1.589796781539917
    3. ',' → logprob: -1.839796781539917
    4. 'b' → logprob: -3.589796781539917
    5. 'def' → logprob: -4.214796543121338
    6. '[' → logprob: -4.714796543121338
    7. '=' → logprob: -4.839796543121338
    8. ' =' → logprob: -5.214796543121338
    9. ',
' → logprob: -5.714796543121338
    10. '       ' → logprob: -5.964796543121338

Token 3127: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002610974188428372
    2. '[' → logprob: -8.375261306762695
    3. '1' → logprob: -11.375261306762695
    4. ''' → logprob: -12.250261306762695
    5. '```' → logprob: -12.375261306762695
    6. ']' → logprob: -13.000261306762695
    7. '
' → logprob: -13.250261306762695
    8. '7' → logprob: -13.500261306762695
    9. '5' → logprob: -13.750261306762695
    10. '   ' → logprob: -13.875261306762695

Token 3128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11330150812864304
    2. '4' → logprob: -2.2383015155792236
    3. '```' → logprob: -8.363301277160645
    4. '   ' → logprob: -9.113301277160645
    5. '3' → logprob: -9.863301277160645
    6. '(' → logprob: -10.988301277160645
    7. 'def' → logprob: -11.238301277160645
    8. '`' → logprob: -11.488301277160645
    9. ']' → logprob: -11.488301277160645
    10. '7' → logprob: -12.363301277160645

Token 3129: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -15.375001907348633
    3. '[' → logprob: -15.500001907348633
    4. '(' → logprob: -15.500001907348633
    5. ' ' → logprob: -15.625001907348633
    6. '```' → logprob: -15.625001907348633
    7. '
' → logprob: -16.125001907348633
    8. '`' → logprob: -16.312501907348633
    9. '۴' → logprob: -17.000001907348633
    10. '' → logprob: -17.125001907348633

Token 3130: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3768668472766876
    2. ']' → logprob: -1.3768668174743652
    3. '],' → logprob: -4.001866817474365
    4. ')
' → logprob: -4.251866817474365
    5. '```' → logprob: -4.626866817474365
    6. '   ' → logprob: -5.001866817474365
    7. ')' → logprob: -5.251866817474365
    8. ',' → logprob: -6.501866817474365
    9. '],
' → logprob: -6.751866817474365
    10. '#' → logprob: -6.751866817474365

Token 3131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7089775204658508
    2. '```' → logprob: -0.7089775204658508
    3. '``' → logprob: -4.958977699279785
    4. 'b' → logprob: -4.958977699279785
    5. '`' → logprob: -6.833977699279785
    6. ',' → logprob: -8.583977699279785
    7. ' b' → logprob: -8.583977699279785
    8. '#' → logprob: -9.208977699279785
    9. '       ' → logprob: -10.583977699279785
    10. 'def' → logprob: -10.583977699279785

Token 3132: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31098634004592896
    2. '```' → logprob: -1.6859862804412842
    3. '#' (adapté à ' #') → logprob: -2.560986280441284
    4. '``' → logprob: -5.935986518859863
    5. 'b' → logprob: -6.435986518859863
    6. '`' → logprob: -8.060986518859863
    7. '
' → logprob: -9.935986518859863
    8. '4' → logprob: -10.185986518859863
    9. ',' → logprob: -10.435986518859863
    10. '       ' → logprob: -10.810986518859863

Token 3133: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14005526900291443
    2. '```' → logprob: -2.3900551795959473
    3. '4' → logprob: -3.7650551795959473
    4. '#' → logprob: -4.390055179595947
    5. '   ' → logprob: -6.265055179595947
    6. '`' → logprob: -7.140055179595947
    7. '``' → logprob: -8.515055656433105
    8. '6' → logprob: -8.515055656433105
    9. '5' → logprob: -8.640055656433105
    10. 'def' → logprob: -9.265055656433105

Token 3134: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -5.438573680294212e-06
    2. '7' → logprob: -12.625005722045898
    3. '[' → logprob: -13.875005722045898
    4. '   ' → logprob: -14.000005722045898
    5. '```' → logprob: -15.875005722045898
    6. '
' → logprob: -16.6250057220459
    7. '(' → logprob: -17.1250057220459
    8. '#' → logprob: -17.2500057220459
    9. '  ' → logprob: -17.2500057220459
    10. '3' → logprob: -17.6250057220459

Token 3135: '=y' (ID: 70421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6739761829376221
    2. '5' → logprob: -0.7989761829376221
    3. '```' → logprob: -4.173975944519043
    4. 'b' → logprob: -4.548975944519043
    5. ']' → logprob: -4.673975944519043
    6. '`' → logprob: -5.923975944519043
    7. '4' → logprob: -6.798975944519043
    8. '   ' → logprob: -7.673975944519043
    9. ')' → logprob: -7.923975944519043
    10. '=' → logprob: -8.798975944519043

Token 3136: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3866269886493683
    2. '       ' → logprob: -1.886626958847046
    3. ',' → logprob: -3.011626958847046
    4. '4' → logprob: -3.761626958847046
    5. 'b' → logprob: -3.761626958847046
    6. '```' → logprob: -3.761626958847046
    7. '[' → logprob: -3.886626958847046
    8. 'def' → logprob: -4.386627197265625
    9. '5' → logprob: -5.261627197265625
    10. ' b' → logprob: -5.636627197265625

Token 3137: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4292517304420471
    2. '[' → logprob: -1.0542516708374023
    3. ']' → logprob: -8.179251670837402
    4. '4' → logprob: -9.804251670837402
    5. '   ' → logprob: -9.929251670837402
    6. '(' → logprob: -9.929251670837402
    7. '```' → logprob: -10.179251670837402
    8. '[
' → logprob: -10.554251670837402
    9. '][' → logprob: -10.929251670837402
    10. '<|end|>' → logprob: -12.054251670837402

Token 3138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14975668489933014
    2. '5' → logprob: -2.024756669998169
    3. '4' → logprob: -5.274756908416748
    4. '```' → logprob: -6.649756908416748
    5. ']' → logprob: -8.27475643157959
    6. '   ' → logprob: -9.14975643157959
    7. '(' → logprob: -9.77475643157959
    8. '`' → logprob: -9.77475643157959
    9. '][' → logprob: -10.02475643157959
    10. '[
' → logprob: -10.27475643157959

Token 3139: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.080963092041202e-06
    2. '6' → logprob: -13.250004768371582
    3. '7' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.625004768371582
    5. '(' → logprob: -14.750004768371582
    6. '```' → logprob: -14.875004768371582
    7. '
' → logprob: -15.125004768371582
    8. '4' → logprob: -15.250004768371582
    9. '[' → logprob: -15.375004768371582
    10. '{' → logprob: -16.8125057220459

Token 3140: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12852206826210022
    2. '       ' → logprob: -3.1285221576690674
    3. '```' → logprob: -3.3785221576690674
    4. ')' → logprob: -3.7535221576690674
    5. ',' → logprob: -5.003521919250488
    6. ')
' → logprob: -5.503521919250488
    7. '``' → logprob: -6.378521919250488
    8. 'b' → logprob: -6.628521919250488
    9. '#' → logprob: -6.878521919250488
    10. ']' → logprob: -6.878521919250488

Token 3141: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6204115152359009
    2. '   ' → logprob: -0.9954115152359009
    3. '#' → logprob: -2.4954113960266113
    4. '``' → logprob: -5.495411396026611
    5. 'b' → logprob: -5.620411396026611
    6. '`' → logprob: -6.495411396026611
    7. '       ' → logprob: -7.495411396026611
    8. ' b' → logprob: -8.37041187286377
    9. ',' → logprob: -9.74541187286377
    10. ' #' → logprob: -10.24541187286377

Token 3142: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4728195369243622
    2. '       ' → logprob: -1.4728195667266846
    3. '   ' → logprob: -2.0978195667266846
    4. '#' (adapté à ' #') → logprob: -3.9728195667266846
    5. '``' → logprob: -5.3478193283081055
    6. 'b' → logprob: -7.4728193283081055
    7. '`' → logprob: -7.7228193283081055
    8. '           ' → logprob: -9.722819328308105
    9. ',' → logprob: -10.972819328308105
    10. '     ' → logprob: -11.347819328308105

Token 3143: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5411940217018127
    2. '```' → logprob: -0.9161940217018127
    3. '   ' → logprob: -4.291193962097168
    4. '``' → logprob: -6.166193962097168
    5. '#' → logprob: -7.666193962097168
    6. ' b' → logprob: -7.666193962097168
    7. '       ' → logprob: -7.791193962097168
    8. '`' → logprob: -7.916193962097168
    9. '6' → logprob: -8.666193962097168
    10. '7' → logprob: -9.416193962097168

Token 3144: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.786196975852363e-05
    2. '[' → logprob: -10.750038146972656
    3. '```' → logprob: -11.625038146972656
    4. '(' → logprob: -12.750038146972656
    5. '7' → logprob: -13.125038146972656
    6. '   ' → logprob: -13.250038146972656
    7. '``' → logprob: -15.125038146972656
    8. '1' → logprob: -15.375038146972656
    9. ']' → logprob: -16.250038146972656
    10. '
' → logprob: -16.375038146972656

Token 3145: '=y' (ID: 70421)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.022395214065909386
    2. '[' → logprob: -3.897395133972168
    3. ']' → logprob: -7.147395133972168
    4. '```' → logprob: -7.147395133972168
    5. '`' → logprob: -9.022395133972168
    6. '=' → logprob: -9.272395133972168
    7. ''' → logprob: -10.647395133972168
    8. ' =' → logprob: -11.897395133972168
    9. '   ' → logprob: -12.272395133972168
    10. ' ' → logprob: -12.272395133972168

Token 3146: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5065364241600037
    2. '[' → logprob: -1.6315364837646484
    3. '   ' → logprob: -2.7565364837646484
    4. '```' → logprob: -3.1315364837646484
    5. '6' → logprob: -3.2565364837646484
    6. ']' → logprob: -4.881536483764648
    7. '7' → logprob: -5.006536483764648
    8. 'def' → logprob: -5.381536483764648
    9. '=' → logprob: -5.381536483764648
    10. '       ' → logprob: -5.631536483764648

Token 3147: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4754405915737152
    2. '6' → logprob: -0.9754406213760376
    3. ']' → logprob: -7.225440502166748
    4. '[
' → logprob: -8.475440979003906
    5. '```' → logprob: -8.475440979003906
    6. '][' → logprob: -9.725440979003906
    7. '   ' → logprob: -9.850440979003906
    8. '1' → logprob: -11.225440979003906
    9. '`' → logprob: -11.350440979003906
    10. '(' → logprob: -11.350440979003906

Token 3148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004788128426298499
    2. '```' → logprob: -8.125478744506836
    3. '6' → logprob: -9.250478744506836
    4. '[
' → logprob: -10.250478744506836
    5. '`' → logprob: -11.000478744506836
    6. ']' → logprob: -11.375478744506836
    7. '7' → logprob: -11.875478744506836
    8. '][' → logprob: -12.125478744506836
    9. '   ' → logprob: -13.125478744506836
    10. '(' → logprob: -13.250478744506836

Token 3149: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.36574100604048e-06
    2. '7' → logprob: -13.625004768371582
    3. '[' → logprob: -14.125004768371582
    4. '   ' → logprob: -14.250004768371582
    5. '
' → logprob: -14.875004768371582
    6. ' ' → logprob: -14.875004768371582
    7. '(' → logprob: -15.125004768371582
    8. '```' → logprob: -15.625004768371582
    9. '4' → logprob: -16.000003814697266
    10. ']' → logprob: -16.125003814697266

Token 3150: ']
' (ID: 1592)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2124333381652832
    2. ')' → logprob: -1.5874333381652832
    3. ',' → logprob: -1.7124333381652832
    4. '   ' → logprob: -1.8374333381652832
    5. ']' → logprob: -2.837433338165283
    6. '[' → logprob: -3.337433338165283
    7. 'def' → logprob: -4.087433338165283
    8. '7' → logprob: -4.712433338165283
    9. '#' → logprob: -5.087433338165283
    10. '],' → logprob: -5.212433338165283

Token 3151: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18122723698616028
    2. '   ' → logprob: -2.181227207183838
    3. 'b' → logprob: -3.181227207183838
    4. '``' → logprob: -4.806227207183838
    5. '`' → logprob: -5.931227207183838
    6. ' b' → logprob: -8.556227684020996
    7. '#' → logprob: -9.306227684020996
    8. '[' → logprob: -9.431227684020996
    9. ',' → logprob: -9.931227684020996
    10. ' ' → logprob: -11.306227684020996

Token 3152: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.08952135592699051
    2. 'b' → logprob: -2.8395214080810547
    3. '   ' → logprob: -3.7145214080810547
    4. '``' → logprob: -6.089521408081055
    5. '`' → logprob: -8.589521408081055
    6. '       ' → logprob: -8.714521408081055
    7. ' b' → logprob: -9.089521408081055
    8. '#' (adapté à ' #') → logprob: -10.589521408081055
    9. '[' → logprob: -11.339521408081055
    10. ',' → logprob: -11.339521408081055

Token 3153: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06255944073200226
    2. '```' → logprob: -2.8125593662261963
    3. '``' → logprob: -8.187559127807617
    4. ' b' → logprob: -8.437559127807617
    5. '   ' → logprob: -9.687559127807617
    6. '`' → logprob: -10.562559127807617
    7. '#' → logprob: -12.562559127807617
    8. '7' → logprob: -13.062559127807617
    9. 'def' → logprob: -13.812559127807617
    10. '8' → logprob: -14.687559127807617

Token 3154: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.7491250875755213e-05
    2. '[' → logprob: -10.625027656555176
    3. '```' → logprob: -12.750027656555176
    4. '
' → logprob: -16.50002670288086
    5. '``' → logprob: -16.87502670288086
    6. '`' → logprob: -17.37502670288086
    7. '   ' → logprob: -17.75002670288086
    8. '0' → logprob: -17.87502670288086
    9. '  ' → logprob: -18.25002670288086
    10. '(' → logprob: -18.25002670288086

Token 3155: '=y' (ID: 70421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6772196888923645
    2. '=' → logprob: -0.8022196888923645
    3. '==' → logprob: -4.302219867706299
    4. '```' → logprob: -4.427219867706299
    5. ' =' → logprob: -4.552219867706299
    6. '7' → logprob: -6.552219867706299
    7. 'b' → logprob: -6.802219867706299
    8. '='' → logprob: -6.802219867706299
    9. '`' → logprob: -6.927219867706299
    10. ')' → logprob: -6.927219867706299

Token 3156: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022500536870211363
    2. 'def' → logprob: -6.5022501945495605
    3. '```' → logprob: -8.127249717712402
    4. '
' → logprob: -8.627249717712402
    5. '#' → logprob: -10.127249717712402
    6. '[' → logprob: -10.252249717712402
    7. 'y' → logprob: -10.377249717712402
    8. ',' → logprob: -10.502249717712402
    9. ' =' → logprob: -11.002249717712402
    10. ')' → logprob: -11.002249717712402

Token 3157: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.4746716320514679
    2. '[' → logprob: -0.9746716022491455
    3. '```' → logprob: -7.599671840667725
    4. ']' → logprob: -10.974671363830566
    5. '][' → logprob: -11.224671363830566
    6. '[
' → logprob: -11.224671363830566
    7. '(' → logprob: -11.474671363830566
    8. ''' → logprob: -11.974671363830566
    9. '`' → logprob: -12.099671363830566
    10. ')' → logprob: -12.474671363830566

Token 3158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002568283583968878
    2. '```' → logprob: -6.752568244934082
    3. '   ' → logprob: -7.752568244934082
    4. ')' → logprob: -8.502568244934082
    5. '[
' → logprob: -8.752568244934082
    6. '7' → logprob: -9.127568244934082
    7. 'def' → logprob: -9.127568244934082
    8. '=' → logprob: -9.627568244934082
    9. ' =' → logprob: -9.877568244934082
    10. ':' → logprob: -10.002568244934082

Token 3159: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.375017166137695
    3. '[' → logprob: -13.125017166137695
    4. '```' → logprob: -13.750017166137695
    5. '`' → logprob: -14.250017166137695
    6. ''' → logprob: -14.750017166137695
    7. ']' → logprob: -15.000017166137695
    8. '   ' → logprob: -15.500017166137695
    9. ' ' → logprob: -15.750017166137695
    10. ')' → logprob: -16.250017166137695

Token 3160: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3877638280391693
    2. ']
' → logprob: -1.2627638578414917
    3. ']:
' → logprob: -4.012763977050781
    4. ')' → logprob: -5.387763977050781
    5. '']' → logprob: -5.387763977050781
    6. '   ' → logprob: -5.637763977050781
    7. ')
' → logprob: -6.012763977050781
    8. '```' → logprob: -6.637763977050781
    9. '']
' → logprob: -7.012763977050781
    10. '):
' → logprob: -7.387763977050781

Token 3161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020848875865340233
    2. '```' → logprob: -3.8958489894866943
    3. '       ' → logprob: -8.895849227905273
    4. '``' → logprob: -9.645849227905273
    5. 'for' → logprob: -10.270849227905273
    6. '#' → logprob: -10.395849227905273
    7. '
' → logprob: -11.270849227905273
    8. 'def' → logprob: -11.770849227905273
    9. '`' → logprob: -11.895849227905273
    10. ',' → logprob: -12.645849227905273

Token 3162: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0487329363822937
    2. '```' → logprob: -3.0487329959869385
    3. '``' → logprob: -9.42373275756836
    4. '#' (adapté à ' #') → logprob: -10.29873275756836
    5. '       ' → logprob: -11.42373275756836
    6. '
' → logprob: -11.42373275756836
    7. 'y' → logprob: -12.67373275756836
    8. 'def' → logprob: -13.29873275756836
    9. '`' → logprob: -13.54873275756836
    10. ')' → logprob: -14.17373275756836

Token 3163: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001351306913420558
    2. '```' → logprob: -6.876351356506348
    3. '#' → logprob: -8.626351356506348
    4. '       ' → logprob: -10.501351356506348
    5. '
' → logprob: -10.501351356506348
    6. 'y' → logprob: -10.501351356506348
    7. 'def' → logprob: -10.501351356506348
    8. ' y' → logprob: -11.126351356506348
    9. '``' → logprob: -12.376351356506348
    10. 'for' → logprob: -13.251351356506348

Token 3164: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04259179159998894
    2. '   ' → logprob: -3.4175918102264404
    3. ' y' → logprob: -5.417591571807861
    4. '#' → logprob: -5.667591571807861
    5. 'for' → logprob: -7.667591571807861
    6. 'b' → logprob: -8.79259204864502
    7. '```' → logprob: -9.16759204864502
    8. 'def' → logprob: -9.29259204864502
    9. '
' → logprob: -9.66759204864502
    10. ' #' → logprob: -10.91759204864502

Token 3165: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.32309970259666443
    2. '_positions' → logprob: -1.3230997323989868
    3. '[' → logprob: -4.823099613189697
    4. 'bits' → logprob: -7.323099613189697
    5. '```' → logprob: -7.823099613189697
    6. 'positions' → logprob: -8.448100090026855
    7. 's' → logprob: -8.948100090026855
    8. '_indices' → logprob: -9.448100090026855
    9. '`' → logprob: -10.198100090026855
    10. '``' → logprob: -10.323100090026855

Token 3166: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06886041909456253
    2. ' =' → logprob: -2.8188605308532715
    3. '=[' → logprob: -5.1938605308532715
    4. '   ' → logprob: -7.0688605308532715
    5. 'positions' → logprob: -9.193860054016113
    6. '[' → logprob: -9.443860054016113
    7. 'are' → logprob: -9.818860054016113
    8. 'at' → logprob: -10.193860054016113
    9. '_positions' → logprob: -10.568860054016113
    10. '```' → logprob: -10.568860054016113

Token 3167: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01629922352731228
    2. '[' → logprob: -4.141299247741699
    3. '```' → logprob: -9.2662992477417
    4. ' b' → logprob: -10.1412992477417
    5. '   ' → logprob: -10.5162992477417
    6. 'range' → logprob: -10.7662992477417
    7. ' [' → logprob: -11.2662992477417
    8. '#' → logprob: -11.2662992477417
    9. 'def' → logprob: -11.6412992477417
    10. 'byte' → logprob: -11.7662992477417

Token 3168: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017364670056849718
    2. '1' → logprob: -6.501736640930176
    3. '```' → logprob: -8.751736640930176
    4. '[
' → logprob: -9.876736640930176
    5. '`' → logprob: -12.126736640930176
    6. 'b' → logprob: -12.376736640930176
    7. '#' → logprob: -12.876736640930176
    8. ' [' → logprob: -13.001736640930176
    9. '``' → logprob: -13.126736640930176
    10. ']' → logprob: -13.376736640930176

Token 3169: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27439647912979126
    2. ' =' → logprob: -1.5243964195251465
    3. '=[' → logprob: -4.1493964195251465
    4. '   ' → logprob: -5.8993964195251465
    5. '[' → logprob: -6.2743964195251465
    6. 'positions' → logprob: -6.8993964195251465
    7. 'b' → logprob: -8.649396896362305
    8. '```' → logprob: -9.274396896362305
    9. '#' → logprob: -9.899396896362305
    10. ' positions' → logprob: -10.024396896362305

Token 3170: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8087270038668066e-05
    2. 'b' → logprob: -11.000027656555176
    3. ' [' → logprob: -11.625027656555176
    4. '   ' → logprob: -13.750027656555176
    5. '[
' → logprob: -14.500027656555176
    6. '```' → logprob: -14.750027656555176
    7. '[b' → logprob: -15.250027656555176
    8. '``' → logprob: -17.125028610229492
    9. '`' → logprob: -17.250028610229492
    10. ' b' → logprob: -17.375028610229492

Token 3171: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00041267683263868093
    2. '4' → logprob: -8.000412940979004
    3. '1' → logprob: -9.875412940979004
    4. '```' → logprob: -11.500412940979004
    5. '[
' → logprob: -12.125412940979004
    6. '7' → logprob: -12.125412940979004
    7. '`' → logprob: -13.625412940979004
    8. '['' → logprob: -13.875412940979004
    9. '(' → logprob: -14.750412940979004
    10. ' [' → logprob: -15.000412940979004

Token 3172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006519131129607558
    2. ' =' → logprob: -8.500652313232422
    3. '4' → logprob: -8.625652313232422
    4. '7' → logprob: -9.375652313232422
    5. '   ' → logprob: -9.625652313232422
    6. '=[' → logprob: -10.000652313232422
    7. '```' → logprob: -11.250652313232422
    8. '456' → logprob: -11.375652313232422
    9. '=' → logprob: -11.500652313232422
    10. '`' → logprob: -11.625652313232422

Token 3173: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002214488573372364
    2. '[' → logprob: -6.127214431762695
    3. '(' → logprob: -11.252214431762695
    4. ''' → logprob: -12.002214431762695
    5. '`' → logprob: -12.752214431762695
    6. '```' → logprob: -13.502214431762695
    7. '"' → logprob: -13.627214431762695
    8. '{' → logprob: -13.877214431762695
    9. ' ' → logprob: -14.502214431762695
    10. '   ' → logprob: -14.752214431762695

Token 3174: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.15008926391601562
    2. ',' → logprob: -2.2750892639160156
    3. ']' → logprob: -3.5250892639160156
    4. ':' → logprob: -5.400089263916016
    5. '],
' → logprob: -7.650089263916016
    6. ':],' → logprob: -7.900089263916016
    7. '..' → logprob: -8.025089263916016
    8. '],'' → logprob: -8.150089263916016
    9. '...' → logprob: -8.400089263916016
    10. '7' → logprob: -8.525089263916016

Token 3175: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008885911083780229
    2. '5' → logprob: -7.500888824462891
    3. '7' → logprob: -8.12588882446289
    4. '6' → logprob: -10.50088882446289
    5. '```' → logprob: -12.25088882446289
    6. ' b' → logprob: -12.37588882446289
    7. '[' → logprob: -13.25088882446289
    8. '`' → logprob: -14.37588882446289
    9. '   ' → logprob: -15.12588882446289
    10. '4' → logprob: -15.25088882446289

Token 3176: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023514265194535255
    2. '7' → logprob: -3.8985142707824707
    3. '5' → logprob: -6.148514270782471
    4. '4' → logprob: -7.648514270782471
    5. '1' → logprob: -8.523513793945312
    6. '6' → logprob: -9.773513793945312
    7. '```' → logprob: -10.148513793945312
    8. '(' → logprob: -10.398513793945312
    9. '[
' → logprob: -11.148513793945312
    10. '<|end|>' → logprob: -12.773513793945312

Token 3177: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00633092550560832
    2. '7' → logprob: -5.381330966949463
    3. '5' → logprob: -6.506330966949463
    4. '```' → logprob: -8.756330490112305
    5. '`' → logprob: -10.631330490112305
    6. '[
' → logprob: -11.506330490112305
    7. ',' → logprob: -12.256330490112305
    8. '][' → logprob: -12.381330490112305
    9. '6' → logprob: -12.756330490112305
    10. ']' → logprob: -12.881330490112305

Token 3178: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.11287714540958405
    2. '7' → logprob: -2.237877130508423
    3. '[' → logprob: -10.862876892089844
    4. '```' → logprob: -11.112876892089844
    5. '(' → logprob: -11.987876892089844
    6. '4' → logprob: -12.487876892089844
    7. '0' → logprob: -12.737876892089844
    8. '6' → logprob: -13.112876892089844
    9. '8' → logprob: -13.237876892089844
    10. '
' → logprob: -13.487876892089844

Token 3179: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19301192462444305
    2. ',b' → logprob: -1.9430118799209595
    3. '],' → logprob: -3.443011999130249
    4. 'b' → logprob: -8.568012237548828
    5. ' ,' → logprob: -10.693012237548828
    6. '[' → logprob: -10.693012237548828
    7. '   ' → logprob: -10.818012237548828
    8. '```' → logprob: -11.693012237548828
    9. ']' → logprob: -11.943012237548828
    10. '`,' → logprob: -12.443012237548828

Token 3180: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12697955965995789
    2. '6' → logprob: -2.1269795894622803
    3. '7' → logprob: -10.25197982788086
    4. '```' → logprob: -11.25197982788086
    5. ' b' → logprob: -13.25197982788086
    6. '   ' → logprob: -14.62697982788086
    7. '`' → logprob: -14.75197982788086
    8. '[' → logprob: -15.00197982788086
    9. ' ' → logprob: -15.87697982788086
    10. '``' → logprob: -16.62697982788086

Token 3181: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -5.88418151892256e-05
    2. '[' → logprob: -9.750059127807617
    3. '```' → logprob: -15.625059127807617
    4. '६' → logprob: -16.375059127807617
    5. 'b' → logprob: -17.500059127807617
    6. '۶' → logprob: -17.625059127807617
    7. '(' → logprob: -17.750059127807617
    8. '   ' → logprob: -17.875059127807617
    9. '['' → logprob: -18.000059127807617
    10. '৬' → logprob: -18.000059127807617

Token 3182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008553589577786624
    2. '6' → logprob: -7.250855445861816
    3. ',' → logprob: -9.500855445861816
    4. '```' → logprob: -10.125855445861816
    5. '7' → logprob: -11.125855445861816
    6. '`' → logprob: -12.250855445861816
    7. '][' → logprob: -12.500855445861816
    8. ']' → logprob: -13.125855445861816
    9. '[
' → logprob: -13.625855445861816
    10. '   ' → logprob: -13.625855445861816

Token 3183: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. '```' → logprob: -16.875
    4. '
' → logprob: -17.75
    5. '۶' → logprob: -18.5
    6. '६' → logprob: -18.5
    7. ' ' → logprob: -18.625
    8. '   ' → logprob: -19.125
    9. '' → logprob: -19.375
    10. '...' → logprob: -19.5

Token 3184: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4166680872440338
    2. ',b' → logprob: -1.1666680574417114
    3. '],' → logprob: -3.541668176651001
    4. 'b' → logprob: -8.291667938232422
    5. '```' → logprob: -9.916667938232422
    6. '   ' → logprob: -11.166667938232422
    7. ' ,' → logprob: -11.166667938232422
    8. '`,' → logprob: -11.291667938232422
    9. '),' → logprob: -11.541667938232422
    10. '7' → logprob: -11.666667938232422

Token 3185: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023631771910004318
    2. '```' → logprob: -8.750236511230469
    3. '7' → logprob: -9.500236511230469
    4. '[' → logprob: -13.000236511230469
    5. '`' → logprob: -14.750236511230469
    6. '``' → logprob: -16.00023651123047
    7. ' b' → logprob: -16.25023651123047
    8. '
' → logprob: -17.87523651123047
    9. ',' → logprob: -18.00023651123047
    10. ',b' → logprob: -18.25023651123047

Token 3186: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019293478690087795
    2. '[' → logprob: -6.25192928314209
    3. '```' → logprob: -15.12692928314209
    4. '(' → logprob: -15.50192928314209
    5. '[
' → logprob: -15.87692928314209
    6. '`' → logprob: -17.751930236816406
    7. '<|end|>' → logprob: -18.251930236816406
    8. ']' → logprob: -18.376930236816406
    9. '[]' → logprob: -18.501930236816406
    10. '   ' → logprob: -18.876930236816406

Token 3187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0347747802734375
    2. '7' → logprob: -3.4097747802734375
    3. '][' → logprob: -7.6597747802734375
    4. '```' → logprob: -7.7847747802734375
    5. ']' → logprob: -8.909774780273438
    6. '[
' → logprob: -10.284774780273438
    7. '`' → logprob: -10.284774780273438
    8. '``' → logprob: -11.784774780273438
    9. '<|end|>' → logprob: -12.409774780273438
    10. '#' → logprob: -12.784774780273438

Token 3188: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. '[' → logprob: -17.500001907348633
    4. '۷' → logprob: -18.250001907348633
    5. ' ' → logprob: -18.750001907348633
    6. '``' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '७' → logprob: -19.125001907348633
    9. '(' → logprob: -19.375001907348633
    10. '٧' → logprob: -19.500001907348633

Token 3189: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6793380975723267
    2. ']
' → logprob: -1.0543380975723267
    3. ']:
' → logprob: -2.554337978363037
    4. '   ' → logprob: -2.804337978363037
    5. ']:' → logprob: -6.679337978363037
    6. '],' → logprob: -6.929337978363037
    7. ',' → logprob: -7.054337978363037
    8. '```' → logprob: -7.554337978363037
    9. ':
' → logprob: -7.804337978363037
    10. '']' → logprob: -7.804337978363037

Token 3190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04889697954058647
    2. '```' → logprob: -3.0488970279693604
    3. '``' → logprob: -8.923896789550781
    4. ',' → logprob: -9.548896789550781
    5. '       ' → logprob: -9.923896789550781
    6. ')' → logprob: -11.173896789550781
    7. 'for' → logprob: -11.423896789550781
    8. '`' → logprob: -11.923896789550781
    9. ' for' → logprob: -12.298896789550781
    10. '
' → logprob: -12.298896789550781

Token 3191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023294975981116295
    2. '```' → logprob: -3.7732949256896973
    3. '``' → logprob: -11.023295402526855
    4. '       ' → logprob: -11.523295402526855
    5. '#' (adapté à ' #') → logprob: -11.773295402526855
    6. 'for' → logprob: -12.273295402526855
    7. 'y' → logprob: -13.148295402526855
    8. '
' → logprob: -13.148295402526855
    9. 'def' → logprob: -13.273295402526855
    10. ')' → logprob: -13.398295402526855

Token 3192: ' Similarly' (ID: 65037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039963615126907825
    2. '```' → logprob: -5.6289963722229
    3. '       ' → logprob: -8.128995895385742
    4. '#' → logprob: -10.378995895385742
    5. 'def' → logprob: -10.753995895385742
    6. 'y' → logprob: -11.003995895385742
    7. 'b' → logprob: -11.503995895385742
    8. '``' → logprob: -11.753995895385742
    9. 'from' → logprob: -13.128995895385742
    10. '
' → logprob: -13.128995895385742

Token 3193: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10198402404785156
    2. '[' → logprob: -2.9769840240478516
    3. 'b' → logprob: -3.8519840240478516
    4. '#' → logprob: -4.351984024047852
    5. 'for' → logprob: -4.976984024047852
    6. '```' → logprob: -6.226984024047852
    7. 'c' → logprob: -7.351984024047852
    8. ' for' → logprob: -7.601984024047852
    9. '       ' → logprob: -7.976984024047852
    10. '``' → logprob: -8.101984024047852

Token 3194: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007959473878145218
    2. 'byte' → logprob: -4.882959365844727
    3. '   ' → logprob: -8.757959365844727
    4. '#' → logprob: -9.632959365844727
    5. '```' → logprob: -9.757959365844727
    6. '
' → logprob: -10.507959365844727
    7. ' b' → logprob: -10.507959365844727
    8. 'def' → logprob: -12.132959365844727
    9. 'y' → logprob: -12.632959365844727
    10. 'c' → logprob: -13.257959365844727

Token 3195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08643685281276703
    2. '7' → logprob: -2.7114367485046387
    3. '3' → logprob: -4.711436748504639
    4. '4' → logprob: -5.711436748504639
    5. 'b' → logprob: -5.961436748504639
    6. '1' → logprob: -7.086436748504639
    7. '[' → logprob: -7.836436748504639
    8. '```' → logprob: -9.086437225341797
    9. '5' → logprob: -10.086437225341797
    10. '#' → logprob: -10.336437225341797

Token 3196: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15115906298160553
    2. '   ' → logprob: -2.2761590480804443
    3. '```' → logprob: -3.5261590480804443
    4. '``' → logprob: -5.651159286499023
    5. '       ' → logprob: -6.526159286499023
    6. 'b' → logprob: -7.026159286499023
    7. ',' → logprob: -7.401159286499023
    8. '#' → logprob: -7.651159286499023
    9. '4' → logprob: -8.151159286499023
    10. '`' → logprob: -8.526159286499023

Token 3197: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003600901924073696
    2. '   ' → logprob: -6.37860107421875
    3. 'b' → logprob: -7.75360107421875
    4. '```' → logprob: -7.75360107421875
    5. ' [' → logprob: -8.00360107421875
    6. '#' → logprob: -8.37860107421875
    7. '       ' → logprob: -9.00360107421875
    8. ',' → logprob: -9.87860107421875
    9. '``' → logprob: -10.12860107421875
    10. ':' → logprob: -10.37860107421875

Token 3198: 'y' (ID: 88)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022658761590719223
    2. 'b' → logprob: -4.397658824920654
    3. '```' → logprob: -5.897658824920654
    4. '   ' → logprob: -6.147658824920654
    5. ']' → logprob: -6.397658824920654
    6. '#' → logprob: -7.647658824920654
    7. '`' → logprob: -7.647658824920654
    8. '4' → logprob: -8.022658348083496
    9. '``' → logprob: -8.147658348083496
    10. ',' → logprob: -8.272658348083496

Token 3199: 'xxxxx' (ID: 162711)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009994645603001118
    2. 'b' → logprob: -5.1349945068359375
    3. '```' → logprob: -6.5099945068359375
    4. ']' → logprob: -7.0099945068359375
    5. '   ' → logprob: -8.009994506835938
    6. '][' → logprob: -8.134994506835938
    7. '`' → logprob: -8.509994506835938
    8. '#' → logprob: -9.009994506835938
    9. '``' → logprob: -9.134994506835938
    10. '7' → logprob: -9.384994506835938

Token 3200: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011880877427756786
    2. 'def' → logprob: -7.126188278198242
    3. '```' → logprob: -9.001188278198242
    4. '       ' → logprob: -9.126188278198242
    5. 'from' → logprob: -10.001188278198242
    6. '#' → logprob: -10.751188278198242
    7. 'y' → logprob: -11.376188278198242
    8. '
' → logprob: -11.376188278198242
    9. '[' → logprob: -11.501188278198242
    10. ')' → logprob: -12.251188278198242

Token 3201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08345820754766464
    2. '```' → logprob: -3.083458185195923
    3. '#' → logprob: -4.083458423614502
    4. '[' → logprob: -4.583458423614502
    5. '``' → logprob: -5.583458423614502
    6. 'b' → logprob: -6.083458423614502
    7. '       ' → logprob: -7.458458423614502
    8. '`' → logprob: -8.583457946777344
    9. ' b' → logprob: -9.583457946777344
    10. '
' → logprob: -9.708457946777344

Token 3202: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27309685945510864
    2. '[' → logprob: -1.7730967998504639
    3. '#' (adapté à ' #') → logprob: -2.898096799850464
    4. '```' → logprob: -5.148097038269043
    5. 'b' → logprob: -5.898097038269043
    6. '``' → logprob: -6.148097038269043
    7. ' #' → logprob: -7.148097038269043
    8. ' [' → logprob: -7.523097038269043
    9. '       ' → logprob: -7.898097038269043
    10. '`' → logprob: -8.023097038269043

Token 3203: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1364329308271408
    2. '#' → logprob: -2.7614328861236572
    3. '[' → logprob: -3.1364328861236572
    4. 'b' → logprob: -4.636433124542236
    5. '```' → logprob: -5.386433124542236
    6. '       ' → logprob: -6.011433124542236
    7. '``' → logprob: -6.511433124542236
    8. '4' → logprob: -6.761433124542236
    9. ' b' → logprob: -7.761433124542236
    10. 'def' → logprob: -8.636432647705078

Token 3204: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.192027285695076
    2. '7' → logprob: -2.1920273303985596
    3. '2' → logprob: -3.5670273303985596
    4. '5' → logprob: -3.9420273303985596
    5. '[' → logprob: -4.5670270919799805
    6. '3' → logprob: -5.5670270919799805
    7. '```' → logprob: -8.19202709197998
    8. '#' → logprob: -8.56702709197998
    9. '=' → logprob: -9.06702709197998
    10. ']' → logprob: -9.19202709197998

Token 3205: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.301607221364975
    2. '=' → logprob: -2.176607131958008
    3. 'not' → logprob: -2.676607131958008
    4. '```' → logprob: -3.301607131958008
    5. ' not' → logprob: -4.426607131958008
    6. ']' → logprob: -4.801607131958008
    7. ' =' → logprob: -5.676607131958008
    8. '7' → logprob: -6.051607131958008
    9. ')' → logprob: -6.176607131958008
    10. '`' → logprob: -6.176607131958008

Token 3206: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05530209094285965
    2. '1' → logprob: -2.930302143096924
    3. 'b' → logprob: -9.180301666259766
    4. ''b' → logprob: -9.305301666259766
    5. ' '' → logprob: -9.305301666259766
    6. '`' → logprob: -9.680301666259766
    7. '"' → logprob: -11.430301666259766
    8. ' ' → logprob: -11.930301666259766
    9. '0' → logprob: -12.055301666259766
    10. '   ' → logprob: -12.180301666259766

Token 3207: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.19147789478302
    2. ',' → logprob: -1.56647789478302
    3. '   ' → logprob: -1.69147789478302
    4. ' b' → logprob: -2.0664777755737305
    5. ' not' → logprob: -2.4414777755737305
    6. '```' → logprob: -3.4414777755737305
    7. 'not' → logprob: -3.6914777755737305
    8. ',b' → logprob: -3.8164777755737305
    9. '       ' → logprob: -6.0664777755737305
    10. '[' → logprob: -6.3164777755737305

Token 3208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007096902118064463
    2. '[' → logprob: -7.625709533691406
    3. '1' → logprob: -8.875709533691406
    4. '```' → logprob: -9.875709533691406
    5. ']' → logprob: -10.875709533691406
    6. '3' → logprob: -12.500709533691406
    7. '`' → logprob: -13.375709533691406
    8. '][' → logprob: -14.000709533691406
    9. '``' → logprob: -14.000709533691406
    10. '7' → logprob: -14.250709533691406

Token 3209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010069480165839195
    2. '2' → logprob: -5.635069370269775
    3. '7' → logprob: -5.635069370269775
    4. '```' → logprob: -6.635069370269775
    5. ']' → logprob: -7.010069370269775
    6. '   ' → logprob: -9.135069847106934
    7. '4' → logprob: -9.510069847106934
    8. '(' → logprob: -9.635069847106934
    9. '[
' → logprob: -9.760069847106934
    10. '`' → logprob: -9.885069847106934

Token 3210: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.213091179728508
    2. '4' → logprob: -1.8380911350250244
    3. '0' → logprob: -3.7130911350250244
    4. '1' → logprob: -5.2130913734436035
    5. '3' → logprob: -6.0880913734436035
    6. '7' → logprob: -8.338090896606445
    7. '[' → logprob: -8.963090896606445
    8. ']' → logprob: -9.588090896606445
    9. '(' → logprob: -9.713090896606445
    10. ' ' → logprob: -10.088090896606445

Token 3211: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13279926776885986
    2. '],' → logprob: -2.7577991485595703
    3. ']
' → logprob: -3.0077991485595703
    4. ')' → logprob: -5.25779914855957
    5. ')
' → logprob: -7.00779914855957
    6. '```' → logprob: -7.25779914855957
    7. ',' → logprob: -7.38279914855957
    8. ']=' → logprob: -7.63279914855957
    9. ']:
' → logprob: -7.88279914855957
    10. ']='' → logprob: -7.88279914855957

Token 3212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7242804169654846
    2. '```' → logprob: -1.2242803573608398
    3. 'b' → logprob: -1.8492803573608398
    4. '#' → logprob: -2.84928035736084
    5. '``' → logprob: -6.22428035736084
    6. ' b' → logprob: -6.34928035736084
    7. '`' → logprob: -6.59928035736084
    8. ' ' → logprob: -8.09928035736084
    9. '       ' → logprob: -8.22428035736084
    10. ' #' → logprob: -8.97428035736084

Token 3213: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.880793035030365
    2. 'b' → logprob: -1.2557930946350098
    3. '```' → logprob: -1.5057930946350098
    4. '   ' → logprob: -3.0057930946350098
    5. '``' → logprob: -3.7557930946350098
    6. '[' → logprob: -5.75579309463501
    7. '`' → logprob: -7.00579309463501
    8. ' b' → logprob: -7.25579309463501
    9. ' #' → logprob: -7.75579309463501
    10. 'bit' → logprob: -8.880792617797852

Token 3214: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010565371252596378
    2. '6' → logprob: -6.010565280914307
    3. '3' → logprob: -6.135565280914307
    4. '[' → logprob: -6.385565280914307
    5. 'b' → logprob: -6.885565280914307
    6. '4' → logprob: -6.885565280914307
    7. '```' → logprob: -7.260565280914307
    8. '5' → logprob: -7.385565280914307
    9. '2' → logprob: -7.760565280914307
    10. '   ' → logprob: -8.885565757751465

Token 3215: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26592400670051575
    2. '1' → logprob: -1.6409239768981934
    3. '3' → logprob: -3.2659239768981934
    4. '7' → logprob: -7.390923976898193
    5. '```' → logprob: -8.140924453735352
    6. '4' → logprob: -8.390924453735352
    7. '[' → logprob: -8.890924453735352
    8. '(' → logprob: -9.515924453735352
    9. '5' → logprob: -9.765924453735352
    10. ']' → logprob: -10.390924453735352

Token 3216: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16000452637672424
    2. '1' → logprob: -2.1600046157836914
    3. ']' → logprob: -4.160004615783691
    4. '=' → logprob: -4.660004615783691
    5. '```' → logprob: -6.035004615783691
    6. '2' → logprob: -6.160004615783691
    7. 'not' → logprob: -6.410004615783691
    8. '==' → logprob: -8.285004615783691
    9. ' =' → logprob: -8.910004615783691
    10. '   ' → logprob: -9.035004615783691

Token 3217: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07029584795236588
    2. ''' → logprob: -2.695295810699463
    3. '('' → logprob: -9.320296287536621
    4. ''b' → logprob: -9.695296287536621
    5. '`' → logprob: -9.820296287536621
    6. 'b' → logprob: -10.320296287536621
    7. '(' → logprob: -10.445296287536621
    8. ''s' → logprob: -11.070296287536621
    9. ' '' → logprob: -11.195296287536621
    10. '2' → logprob: -11.195296287536621

Token 3218: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22777728736400604
    2. 'b' → logprob: -1.6027772426605225
    3. '   ' → logprob: -6.727777481079102
    4. '```' → logprob: -6.852777481079102
    5. '`' → logprob: -9.852777481079102
    6. '``' → logprob: -11.352777481079102
    7. ' ' → logprob: -11.727777481079102
    8. '    ' → logprob: -11.977777481079102
    9. '[' → logprob: -12.102777481079102
    10. '	b' → logprob: -12.352777481079102

Token 3219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00403411453589797
    2. '[' → logprob: -6.129034042358398
    3. '1' → logprob: -6.379034042358398
    4. '```' → logprob: -9.254034042358398
    5. ']' → logprob: -10.629034042358398
    6. '3' → logprob: -11.379034042358398
    7. '(' → logprob: -12.004034042358398
    8. '`' → logprob: -12.629034042358398
    9. '``' → logprob: -12.879034042358398
    10. '7' → logprob: -13.504034042358398

Token 3220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004428458865731955
    2. '2' → logprob: -6.004428386688232
    3. ']' → logprob: -7.379428386688232
    4. '```' → logprob: -7.879428386688232
    5. '][' → logprob: -8.37942886352539
    6. '(' → logprob: -8.75442886352539
    7. '   ' → logprob: -8.75442886352539
    8. '1' → logprob: -9.25442886352539
    9. '7' → logprob: -9.37942886352539
    10. '[
' → logprob: -10.12942886352539

Token 3221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. '2' → logprob: -10.250052452087402
    3. ' ' → logprob: -12.000052452087402
    4. '(' → logprob: -13.000052452087402
    5. '```' → logprob: -13.375052452087402
    6. '   ' → logprob: -13.625052452087402
    7. '3' → logprob: -13.625052452087402
    8. '[' → logprob: -13.750052452087402
    9. ''' → logprob: -13.875052452087402
    10. '`' → logprob: -14.625052452087402

Token 3222: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6538172364234924
    2. ')' → logprob: -1.0288171768188477
    3. '   ' → logprob: -2.7788171768188477
    4. 'b' → logprob: -3.7788171768188477
    5. '```' → logprob: -4.528817176818848
    6. 'def' → logprob: -5.153817176818848
    7. ']' → logprob: -5.653817176818848
    8. ']
' → logprob: -5.903817176818848
    9. '#' → logprob: -6.028817176818848
    10. ',' → logprob: -6.153817176818848

Token 3223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042093243449926376
    2. '```' → logprob: -3.292093276977539
    3. 'b' → logprob: -6.167093276977539
    4. '       ' → logprob: -6.917093276977539
    5. '``' → logprob: -7.542093276977539
    6. ' b' → logprob: -9.167093276977539
    7. '#' → logprob: -9.417093276977539
    8. '[' → logprob: -9.792093276977539
    9. '`' → logprob: -10.292093276977539
    10. ',' → logprob: -10.292093276977539

Token 3224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7287515997886658
    2. '```' → logprob: -1.2287516593933105
    3. '#' (adapté à ' #') → logprob: -1.8537516593933105
    4. 'b' → logprob: -3.2287516593933105
    5. '``' → logprob: -4.3537516593933105
    6. '       ' → logprob: -4.4787516593933105
    7. '
' → logprob: -6.9787516593933105
    8. '[' → logprob: -7.2287516593933105
    9. '`' → logprob: -7.3537516593933105
    10. ' b' → logprob: -7.6037516593933105

Token 3225: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4070241153240204
    2. '3' → logprob: -1.4070241451263428
    3. '2' → logprob: -2.7820241451263428
    4. '5' → logprob: -4.657023906707764
    5. '```' → logprob: -4.907023906707764
    6. '   ' → logprob: -5.157023906707764
    7. '[' → logprob: -5.907023906707764
    8. '(' → logprob: -6.782023906707764
    9. '6' → logprob: -8.157024383544922
    10. '#' → logprob: -8.657024383544922

Token 3226: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003722884226590395
    2. '3' → logprob: -6.128722667694092
    3. '[' → logprob: -7.128722667694092
    4. '   ' → logprob: -8.12872314453125
    5. '```' → logprob: -9.00372314453125
    6. '4' → logprob: -9.12872314453125
    7. '5' → logprob: -10.00372314453125
    8. '  ' → logprob: -10.25372314453125
    9. '(' → logprob: -10.25372314453125
    10. ' ' → logprob: -10.37872314453125

Token 3227: '=y' (ID: 70421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05501362308859825
    2. '=' → logprob: -3.430013656616211
    3. '```' → logprob: -5.055013656616211
    4. 'b' → logprob: -5.180013656616211
    5. '   ' → logprob: -5.555013656616211
    6. '==' → logprob: -5.805013656616211
    7. ' =' → logprob: -7.305013656616211
    8. '`' → logprob: -8.180013656616211
    9. ']' → logprob: -8.430013656616211
    10. 'def' → logprob: -8.555013656616211

Token 3228: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32102030515670776
    2. '[' → logprob: -1.9460203647613525
    3. ' =' → logprob: -3.5710203647613525
    4. '=' → logprob: -3.9460203647613525
    5. ':
' → logprob: -3.9460203647613525
    6. ',' → logprob: -4.071020126342773
    7. ')
' → logprob: -4.696020126342773
    8. ']
' → logprob: -5.321020126342773
    9. ']' → logprob: -5.446020126342773
    10. '```' → logprob: -5.571020126342773

Token 3229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000720891694072634
    2. '[' → logprob: -8.125720977783203
    3. '5' → logprob: -8.875720977783203
    4. ']' → logprob: -9.000720977783203
    5. '3' → logprob: -9.875720977783203
    6. '   ' → logprob: -10.250720977783203
    7. '(' → logprob: -10.625720977783203
    8. '1' → logprob: -11.375720977783203
    9. ' ' → logprob: -11.375720977783203
    10. '```' → logprob: -11.875720977783203

Token 3230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1840827912092209
    2. '2' → logprob: -1.8090827465057373
    3. '5' → logprob: -6.559082984924316
    4. '```' → logprob: -6.934082984924316
    5. '   ' → logprob: -7.309082984924316
    6. '4' → logprob: -7.809082984924316
    7. '(' → logprob: -9.184082984924316
    8. '3' → logprob: -9.184082984924316
    9. ']' → logprob: -9.309082984924316
    10. '][' → logprob: -9.309082984924316

Token 3231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017398154886905104
    2. '5' → logprob: -9.750173568725586
    3. '4' → logprob: -10.125173568725586
    4. ' ' → logprob: -10.250173568725586
    5. '3' → logprob: -10.375173568725586
    6. '   ' → logprob: -12.500173568725586
    7. '1' → logprob: -13.375173568725586
    8. '```' → logprob: -13.875173568725586
    9. '  ' → logprob: -14.125173568725586
    10. '[' → logprob: -14.500173568725586

Token 3232: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0841509103775024
    2. ']' → logprob: -1.5841509103775024
    3. ']
' → logprob: -1.5841509103775024
    4. ')
' → logprob: -2.334150791168213
    5. ')' → logprob: -3.209150791168213
    6. ']:
' → logprob: -3.209150791168213
    7. '):
' → logprob: -3.334150791168213
    8. ':
' → logprob: -4.209150791168213
    9. '```' → logprob: -4.709150791168213
    10. '
' → logprob: -6.459150791168213

Token 3233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0786333978176117
    2. ',' → logprob: -3.2036333084106445
    3. '```' → logprob: -3.8286333084106445
    4. '#' → logprob: -4.9536333084106445
    5. '
' → logprob: -6.3286333084106445
    6. 'for' → logprob: -6.5786333084106445
    7. '[' → logprob: -7.3286333084106445
    8. ')' → logprob: -7.4536333084106445
    9. ' for' → logprob: -7.8286333084106445
    10. '``' → logprob: -7.9536333084106445

Token 3234: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005458459258079529
    2. '```' → logprob: -6.255458354949951
    3. ',' → logprob: -6.880458354949951
    4. '       ' → logprob: -7.255458354949951
    5. 'for' → logprob: -7.630458354949951
    6. ' for' → logprob: -7.755458354949951
    7. '
' → logprob: -8.50545883178711
    8. '``' → logprob: -9.13045883178711
    9. 'def' → logprob: -9.25545883178711
    10. 'from' → logprob: -9.50545883178711

Token 3235: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21263600885868073
    2. 'for' → logprob: -2.0876359939575195
    3. '4' → logprob: -3.5876359939575195
    4. '```' → logprob: -4.3376359939575195
    5. '#' → logprob: -4.8376359939575195
    6. 'y' → logprob: -5.9626359939575195
    7. 'x' → logprob: -6.0876359939575195
    8. 'def' → logprob: -6.4626359939575195
    9. '       ' → logprob: -6.5876359939575195
    10. '
' → logprob: -6.5876359939575195

Token 3236: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00048048171447589993
    2. '[' → logprob: -7.750480651855469
    3. '```' → logprob: -10.625480651855469
    4. '
' → logprob: -11.500480651855469
    5. '(' → logprob: -12.250480651855469
    6. '   ' → logprob: -12.375480651855469
    7. '``' → logprob: -13.500480651855469
    8. '5' → logprob: -14.125480651855469
    9. '#' → logprob: -14.250480651855469
    10. '  ' → logprob: -14.750480651855469

Token 3237: '=x' (ID: 56980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2283770591020584
    2. ',' → logprob: -2.728377103805542
    3. '```' → logprob: -2.728377103805542
    4. 'b' → logprob: -3.853377103805542
    5. ']' → logprob: -4.478376865386963
    6. '   ' → logprob: -4.853376865386963
    7. ')' → logprob: -5.478376865386963
    8. '`' → logprob: -5.478376865386963
    9. '3' → logprob: -5.728376865386963
    10. '=' → logprob: -5.853376865386963

Token 3238: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5515438914299011
    2. '[' → logprob: -1.176543951034546
    3. 'for' → logprob: -3.176543951034546
    4. ',' → logprob: -3.551543951034546
    5. 'b' → logprob: -4.176543712615967
    6. '       ' → logprob: -5.426543712615967
    7. '4' → logprob: -5.426543712615967
    8. '
' → logprob: -5.426543712615967
    9. '3' → logprob: -5.551543712615967
    10. ' for' → logprob: -5.676543712615967

Token 3239: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.28212761878967285
    2. '2' → logprob: -1.4071276187896729
    3. '[' → logprob: -7.407127380371094
    4. '4' → logprob: -8.907127380371094
    5. '```' → logprob: -8.907127380371094
    6. ']' → logprob: -10.657127380371094
    7. '   ' → logprob: -11.032127380371094
    8. '5' → logprob: -11.157127380371094
    9. '(' → logprob: -11.407127380371094
    10. ' ' → logprob: -11.907127380371094

Token 3240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1723180115222931
    2. '3' → logprob: -2.1723179817199707
    3. '```' → logprob: -3.4223179817199707
    4. ']' → logprob: -5.672317981719971
    5. '`' → logprob: -5.797317981719971
    6. '4' → logprob: -6.172317981719971
    7. '   ' → logprob: -6.922317981719971
    8. '2' → logprob: -7.547317981719971
    9. '=' → logprob: -7.797317981719971
    10. '``' → logprob: -8.172318458557129

Token 3241: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.319370302458992e-06
    2. '4' → logprob: -13.125005722045898
    3. ' ' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '```' → logprob: -15.125005722045898
    6. ']' → logprob: -15.250005722045898
    7. '[' → logprob: -15.375005722045898
    8. '`' → logprob: -15.625005722045898
    9. '(' → logprob: -16.1250057220459
    10. ''' → logprob: -16.2500057220459

Token 3242: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.353844553232193
    2. ']' → logprob: -1.2288445234298706
    3. '```' → logprob: -5.97884464263916
    4. '   ' → logprob: -7.35384464263916
    5. '],' → logprob: -7.35384464263916
    6. '4' → logprob: -7.47884464263916
    7. ']:
' → logprob: -9.10384464263916
    8. ',' → logprob: -9.35384464263916
    9. '],
' → logprob: -9.35384464263916
    10. ']
' → logprob: -9.47884464263916

Token 3243: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5082194209098816
    2. '   ' → logprob: -1.0082194805145264
    3. '``' → logprob: -4.383219242095947
    4. ',' → logprob: -4.633219242095947
    5. '#' → logprob: -5.383219242095947
    6. '       ' → logprob: -6.258219242095947
    7. 'b' → logprob: -6.383219242095947
    8. '
' → logprob: -6.383219242095947
    9. '`' → logprob: -8.008219718933105
    10. ' b' → logprob: -8.008219718933105

Token 3244: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6954953670501709
    2. '   ' → logprob: -0.9454953670501709
    3. '#' (adapté à ' #') → logprob: -3.195495367050171
    4. '``' → logprob: -3.570495367050171
    5. 'b' → logprob: -3.695495367050171
    6. ',' → logprob: -5.69549560546875
    7. '[' → logprob: -5.82049560546875
    8. '4' → logprob: -5.82049560546875
    9. '       ' → logprob: -6.19549560546875
    10. '
' → logprob: -6.19549560546875

Token 3245: ' bit' (ID: 3546)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008805661462247372
    2. 'b' → logprob: -4.758805751800537
    3. 'for' → logprob: -9.258805274963379
    4. '```' → logprob: -10.008805274963379
    5. '   ' → logprob: -10.258805274963379
    6. '#' → logprob: -12.133805274963379
    7. ' b' → logprob: -12.383805274963379
    8. ' ' → logprob: -12.883805274963379
    9. '[' → logprob: -14.008805274963379
    10. '``' → logprob: -14.133805274963379

Token 3246: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -7.3458322731312364e-06
    2. '5' → logprob: -12.375007629394531
    3. '
' → logprob: -14.000007629394531
    4. '[' → logprob: -14.375007629394531
    5. '```' → logprob: -14.625007629394531
    6. ']' → logprob: -15.125007629394531
    7. '#' → logprob: -15.625007629394531
    8. '   ' → logprob: -15.750007629394531
    9. ' ' → logprob: -16.00000762939453
    10. '7' → logprob: -16.00000762939453

Token 3247: '=x' (ID: 56980)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4759267270565033
    2. '[' → logprob: -1.2259267568588257
    3. '4' → logprob: -2.600926637649536
    4. '```' → logprob: -4.725926876068115
    5. '`' → logprob: -7.475926876068115
    6. ' b' → logprob: -7.600926876068115
    7. ']' → logprob: -7.725926876068115
    8. '   ' → logprob: -8.225926399230957
    9. '``' → logprob: -8.975926399230957
    10. ''' → logprob: -9.975926399230957

Token 3248: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31831032037734985
    2. '   ' → logprob: -2.068310260772705
    3. ',' → logprob: -2.943310260772705
    4. 'b' → logprob: -3.068310260772705
    5. '```' → logprob: -3.693310260772705
    6. ' b' → logprob: -4.318310260772705
    7. '4' → logprob: -5.943310260772705
    8. '       ' → logprob: -6.068310260772705
    9. '
' → logprob: -6.693310260772705
    10. ',b' → logprob: -7.318310260772705

Token 3249: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0012109491508454084
    2. '[' → logprob: -6.751211166381836
    3. '3' → logprob: -11.126211166381836
    4. ']' → logprob: -11.501211166381836
    5. '5' → logprob: -11.876211166381836
    6. '7' → logprob: -12.501211166381836
    7. '```' → logprob: -13.251211166381836
    8. ')' → logprob: -14.001211166381836
    9. '[
' → logprob: -14.751211166381836
    10. '6' → logprob: -14.876211166381836

Token 3250: '[' (ID: 58)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01623518206179142
    2. '[' → logprob: -4.1412353515625
    3. ']' → logprob: -8.7662353515625
    4. '3' → logprob: -11.5162353515625
    5. '[
' → logprob: -11.6412353515625
    6. '7' → logprob: -11.6412353515625
    7. ')' → logprob: -12.5162353515625
    8. '(' → logprob: -12.7662353515625
    9. '```' → logprob: -13.1412353515625
    10. '   ' → logprob: -13.7662353515625

Token 3251: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.7697225252486533e-06
    2. '5' → logprob: -13.750003814697266
    3. '7' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.125003814697266
    5. '```' → logprob: -15.250003814697266
    6. ' ' → logprob: -15.250003814697266
    7. ']' → logprob: -15.875003814697266
    8. '(' → logprob: -16.000003814697266
    9. '[' → logprob: -16.000003814697266
    10. '
' → logprob: -16.000003814697266

Token 3252: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5291916131973267
    2. ']
' → logprob: -1.0291916131973267
    3. '[' → logprob: -4.029191493988037
    4. ',' → logprob: -4.404191493988037
    5. ')
' → logprob: -4.654191493988037
    6. ')' → logprob: -5.529191493988037
    7. '```' → logprob: -5.904191493988037
    8. 'b' → logprob: -6.029191493988037
    9. '#' → logprob: -6.404191493988037
    10. '   ' → logprob: -6.904191493988037

Token 3253: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18324528634548187
    2. '   ' → logprob: -2.0582451820373535
    3. 'b' → logprob: -4.0582451820373535
    4. '``' → logprob: -4.1832451820373535
    5. '#' → logprob: -5.6832451820373535
    6. ' b' → logprob: -6.0582451820373535
    7. '`' → logprob: -7.6832451820373535
    8. '	b' → logprob: -7.8082451820373535
    9. '<|end|>' → logprob: -8.558245658874512
    10. '[' → logprob: -9.433245658874512

Token 3254: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2563371956348419
    2. '[' → logprob: -1.8813371658325195
    3. '```' → logprob: -3.2563371658325195
    4. '   ' → logprob: -3.6313371658325195
    5. ' b' → logprob: -5.6313371658325195
    6. '#' (adapté à ' #') → logprob: -6.3813371658325195
    7. '``' → logprob: -6.6313371658325195
    8. '4' → logprob: -7.0063371658325195
    9. '       ' → logprob: -7.8813371658325195
    10. '`' → logprob: -8.00633716583252

Token 3255: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02441476471722126
    2. '5' → logprob: -3.7744147777557373
    3. '[' → logprob: -7.774414539337158
    4. '```' → logprob: -8.024415016174316
    5. '   ' → logprob: -8.774415016174316
    6. '2' → logprob: -8.899415016174316
    7. '4' → logprob: -9.774415016174316
    8. '#' → logprob: -10.149415016174316
    9. ' b' → logprob: -11.274415016174316
    10. '`' → logprob: -11.899415016174316

Token 3256: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.500008583068848
    3. '   ' → logprob: -12.500008583068848
    4. '```' → logprob: -14.250008583068848
    5. ']' → logprob: -15.125008583068848
    6. ' ' → logprob: -16.750009536743164
    7. '  ' → logprob: -16.750009536743164
    8. '
' → logprob: -17.125009536743164
    9. '`' → logprob: -17.250009536743164
    10. '    ' → logprob: -17.625009536743164

Token 3257: '=x' (ID: 56980)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6376765966415405
    2. '[' → logprob: -0.7626765966415405
    3. '```' → logprob: -5.76267671585083
    4. '`' → logprob: -6.88767671585083
    5. ']' → logprob: -7.63767671585083
    6. 'b' → logprob: -8.762676239013672
    7. '(' → logprob: -9.387676239013672
    8. ''' → logprob: -10.137676239013672
    9. '   ' → logprob: -10.262676239013672
    10. '``' → logprob: -10.387676239013672

Token 3258: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5911495089530945
    2. '```' → logprob: -1.9661495685577393
    3. 'b' → logprob: -2.3411495685577393
    4. '       ' → logprob: -2.4661495685577393
    5. '   ' → logprob: -2.4661495685577393
    6. '5' → logprob: -4.21614933013916
    7. '``' → logprob: -4.96614933013916
    8. ',' → logprob: -5.34114933013916
    9. '`' → logprob: -5.71614933013916
    10. ']' → logprob: -6.09114933013916

Token 3259: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012009777128696442
    2. '[' → logprob: -4.512009620666504
    3. ']' → logprob: -7.012009620666504
    4. '```' → logprob: -10.637009620666504
    5. '4' → logprob: -11.262009620666504
    6. '']' → logprob: -12.762009620666504
    7. '[
' → logprob: -12.762009620666504
    8. '][' → logprob: -12.762009620666504
    9. '...' → logprob: -13.012009620666504
    10. '   ' → logprob: -13.262009620666504

Token 3260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1726660132408142
    2. '5' → logprob: -1.922666072845459
    3. '```' → logprob: -5.047666072845459
    4. ']' → logprob: -5.547666072845459
    5. '4' → logprob: -7.172666072845459
    6. '3' → logprob: -8.0476655960083
    7. '']' → logprob: -8.5476655960083
    8. '...' → logprob: -8.6726655960083
    9. '`' → logprob: -9.0476655960083
    10. '][' → logprob: -9.4226655960083

Token 3261: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -14.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '```' → logprob: -14.50000286102295
    5. '(' → logprob: -15.25000286102295
    6. ' ' → logprob: -15.50000286102295
    7. ']' → logprob: -15.75000286102295
    8. '  ' → logprob: -16.500001907348633
    9. '...' → logprob: -17.125001907348633
    10. '6' → logprob: -17.625001907348633

Token 3262: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5606648325920105
    2. '[' → logprob: -1.5606648921966553
    3. ']
' → logprob: -1.8106648921966553
    4. '```' → logprob: -3.3106648921966553
    5. ',' → logprob: -5.310664653778076
    6. '``' → logprob: -5.810664653778076
    7. '   ' → logprob: -5.935664653778076
    8. '<|end|>' → logprob: -6.560664653778076
    9. '']' → logprob: -6.935664653778076
    10. '#' → logprob: -6.935664653778076

Token 3263: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5462855100631714
    2. '   ' → logprob: -1.5462855100631714
    3. '[' → logprob: -2.046285629272461
    4. 'b' → logprob: -3.046285629272461
    5. '``' → logprob: -4.296285629272461
    6. '#' → logprob: -4.921285629272461
    7. '4' → logprob: -5.171285629272461
    8. '`' → logprob: -6.546285629272461
    9. '5' → logprob: -7.046285629272461
    10. '       ' → logprob: -7.171285629272461

Token 3264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8676481246948242
    2. '```' → logprob: -1.1176481246948242
    3. 'b' → logprob: -1.8676481246948242
    4. '#' (adapté à ' #') → logprob: -2.742648124694824
    5. '``' → logprob: -3.742648124694824
    6. '[' → logprob: -5.492648124694824
    7. '`' → logprob: -5.992648124694824
    8. ' b' → logprob: -6.742648124694824
    9. ' ' → logprob: -7.117648124694824
    10. '5' → logprob: -7.242648124694824

Token 3265: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007316163973882794
    2. '5' → logprob: -7.875731468200684
    3. '```' → logprob: -9.000731468200684
    4. '#' → logprob: -9.750731468200684
    5. '[' → logprob: -9.875731468200684
    6. ' b' → logprob: -10.125731468200684
    7. '   ' → logprob: -10.250731468200684
    8. '4' → logprob: -10.750731468200684
    9. '`' → logprob: -11.375731468200684
    10. '``' → logprob: -11.875731468200684

Token 3266: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.004662234336137772
    2. '[' → logprob: -5.379662036895752
    3. '   ' → logprob: -10.87966251373291
    4. ']' → logprob: -11.62966251373291
    5. '```' → logprob: -12.00466251373291
    6. '(' → logprob: -12.75466251373291
    7. '`' → logprob: -13.50466251373291
    8. '[
' → logprob: -14.50466251373291
    9. '  ' → logprob: -14.75466251373291
    10. ' ' → logprob: -15.00466251373291

Token 3267: '=x' (ID: 56980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007557047996670008
    2. '5' → logprob: -5.632556915283203
    3. '```' → logprob: -6.132556915283203
    4. ']' → logprob: -7.382556915283203
    5. '`' → logprob: -7.632556915283203
    6. '6' → logprob: -7.882556915283203
    7. 'b' → logprob: -10.007556915283203
    8. '][' → logprob: -10.007556915283203
    9. '``' → logprob: -10.132556915283203
    10. '=' → logprob: -10.257556915283203

Token 3268: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18701396882534027
    2. '   ' → logprob: -2.437013864517212
    3. '5' → logprob: -3.562013864517212
    4. '       ' → logprob: -4.062014102935791
    5. '```' → logprob: -4.312014102935791
    6. ',' → logprob: -4.812014102935791
    7. '=' → logprob: -5.687014102935791
    8. '(' → logprob: -5.937014102935791
    9. '6' → logprob: -6.062014102935791
    10. ' (' → logprob: -6.812014102935791

Token 3269: '2' (ID: 17)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0028570592403411865
    2. '[' → logprob: -5.877857208251953
    3. '```' → logprob: -10.502857208251953
    4. '['' → logprob: -12.127857208251953
    5. '[
' → logprob: -12.127857208251953
    6. ']' → logprob: -12.252857208251953
    7. '   ' → logprob: -13.627857208251953
    8. '``' → logprob: -13.627857208251953
    9. '`' → logprob: -13.627857208251953
    10. '<|end|>' → logprob: -13.877857208251953

Token 3270: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0051356772892177105
    2. '```' → logprob: -6.005135536193848
    3. ']' → logprob: -6.630135536193848
    4. '`' → logprob: -6.880135536193848
    5. '6' → logprob: -9.005135536193848
    6. '``' → logprob: -9.880135536193848
    7. '][' → logprob: -10.130135536193848
    8. '#' → logprob: -11.255135536193848
    9. '5' → logprob: -11.255135536193848
    10. '   ' → logprob: -11.255135536193848

Token 3271: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.558399319241289e-05
    2. '[' → logprob: -11.375025749206543
    3. '(' → logprob: -12.125025749206543
    4. '   ' → logprob: -12.375025749206543
    5. ']' → logprob: -13.625025749206543
    6. ''' → logprob: -14.125025749206543
    7. '```' → logprob: -14.500025749206543
    8. ' ' → logprob: -15.375025749206543
    9. '['' → logprob: -15.937525749206543
    10. '`' → logprob: -15.937525749206543

Token 3272: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3389297425746918
    2. ')
' → logprob: -1.5889297723770142
    3. '   ' → logprob: -3.4639296531677246
    4. ',' → logprob: -4.088929653167725
    5. '```' → logprob: -4.213929653167725
    6. '[' → logprob: -4.963929653167725
    7. '#' → logprob: -5.213929653167725
    8. '``' → logprob: -5.713929653167725
    9. 'b' → logprob: -6.838929653167725
    10. 'def' → logprob: -7.088929653167725

Token 3273: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.82863450050354
    2. '#' → logprob: -1.20363450050354
    3. '   ' → logprob: -1.82863450050354
    4. 'b' → logprob: -2.82863450050354
    5. '`' → logprob: -3.57863450050354
    6. '``' → logprob: -4.328634262084961
    7. '[' → logprob: -6.953634262084961
    8. ' b' → logprob: -7.203634262084961
    9. ' #' → logprob: -8.203634262084961
    10. ''' → logprob: -8.828634262084961

Token 3274: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5202258825302124
    2. '#' (adapté à ' #') → logprob: -1.8952258825302124
    3. '   ' → logprob: -1.8952258825302124
    4. '```' → logprob: -2.520226001739502
    5. '``' → logprob: -4.520226001739502
    6. '[' → logprob: -5.020226001739502
    7. '`' → logprob: -5.520226001739502
    8. ' b' → logprob: -6.020226001739502
    9. ' #' → logprob: -8.145225524902344
    10. ' ' → logprob: -9.020225524902344

Token 3275: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002342469524592161
    2. '```' → logprob: -6.752342700958252
    3. '[' → logprob: -7.002342700958252
    4. '#' → logprob: -9.502342224121094
    5. '`' → logprob: -10.002342224121094
    6. '7' → logprob: -10.002342224121094
    7. ' b' → logprob: -10.127342224121094
    8. '``' → logprob: -10.752342224121094
    9. '5' → logprob: -11.127342224121094
    10. '0' → logprob: -11.252342224121094

Token 3276: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0010437668533995748
    2. '[' → logprob: -6.876043796539307
    3. '```' → logprob: -12.501043319702148
    4. '(' → logprob: -13.001043319702148
    5. '   ' → logprob: -13.501043319702148
    6. ']' → logprob: -13.751043319702148
    7. '  ' → logprob: -14.376043319702148
    8. '0' → logprob: -14.376043319702148
    9. '5' → logprob: -15.126043319702148
    10. '[
' → logprob: -15.376043319702148

Token 3277: '=x' (ID: 56980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2169019877910614
    2. '=' → logprob: -2.841902017593384
    3. ']' → logprob: -2.966902017593384
    4. '```' → logprob: -2.966902017593384
    5. 'b' → logprob: -3.966902017593384
    6. '`' → logprob: -4.466901779174805
    7. ']=' → logprob: -7.341901779174805
    8. '='' → logprob: -7.466901779174805
    9. ' =' → logprob: -7.716901779174805
    10. '][' → logprob: -7.966901779174805

Token 3278: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5785987377166748
    2. '   ' → logprob: -1.0785987377166748
    3. ']' → logprob: -3.828598737716675
    4. '       ' → logprob: -4.203598976135254
    5. ',' → logprob: -4.453598976135254
    6. '=' → logprob: -4.578598976135254
    7. '```' → logprob: -4.828598976135254
    8. ' =' → logprob: -5.078598976135254
    9. '[
' → logprob: -5.328598976135254
    10. '=[' → logprob: -5.453598976135254

Token 3279: '2' (ID: 17)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00017946491425391287
    2. '[' → logprob: -9.000179290771484
    3. ']' → logprob: -10.750179290771484
    4. '6' → logprob: -10.875179290771484
    5. '```' → logprob: -11.625179290771484
    6. '<|end|>' → logprob: -12.875179290771484
    7. '5' → logprob: -13.250179290771484
    8. '2' → logprob: -14.500179290771484
    9. '``' → logprob: -15.375179290771484
    10. '(' → logprob: -15.500179290771484

Token 3280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04659204185009003
    2. ']' → logprob: -3.1715919971466064
    3. '7' → logprob: -6.1715922355651855
    4. '][' → logprob: -7.0465922355651855
    5. '```' → logprob: -7.7965922355651855
    6. '']' → logprob: -9.796591758728027
    7. '[
' → logprob: -10.046591758728027
    8. '`' → logprob: -10.546591758728027
    9. ']>' → logprob: -10.671591758728027
    10. '>' → logprob: -11.671591758728027

Token 3281: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.054500666621607e-06
    2. '```' → logprob: -13.37500286102295
    3. '[' → logprob: -14.75000286102295
    4. '(' → logprob: -15.12500286102295
    5. '5' → logprob: -15.62500286102295
    6. ']' → logprob: -15.87500286102295
    7. '
' → logprob: -16.500003814697266
    8. '``' → logprob: -16.625003814697266
    9. '6' → logprob: -17.125003814697266
    10. '`' → logprob: -17.125003814697266

Token 3282: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1730724722146988
    2. ']
' → logprob: -1.9230724573135376
    3. '   ' → logprob: -4.798072338104248
    4. ')' → logprob: -5.923072338104248
    5. ']

' → logprob: -7.423072338104248
    6. '```' → logprob: -7.423072338104248
    7. ')
' → logprob: -7.923072338104248
    8. '']' → logprob: -9.173072814941406
    9. ']
' → logprob: -10.173072814941406
    10. ')]' → logprob: -10.423072814941406

Token 3283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016992258606478572
    2. '```' → logprob: -7.501699447631836
    3. 'for' → logprob: -7.876699447631836
    4. '#' → logprob: -8.001699447631836
    5. 'x' → logprob: -8.376699447631836
    6. '
' → logprob: -9.376699447631836
    7. 'def' → logprob: -10.751699447631836
    8. 'y' → logprob: -10.751699447631836
    9. '       ' → logprob: -11.001699447631836
    10. '``' → logprob: -11.126699447631836

Token 3284: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021097645163536072
    2. '```' → logprob: -3.8960976600646973
    3. '#' (adapté à ' #') → logprob: -8.146097183227539
    4. '``' → logprob: -9.021097183227539
    5. '
' → logprob: -9.771097183227539
    6. 'y' → logprob: -10.021097183227539
    7. 'def' → logprob: -11.146097183227539
    8. '`' → logprob: -11.646097183227539
    9. '       ' → logprob: -12.021097183227539
    10. 'b' → logprob: -12.771097183227539

Token 3285: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008375041070394218
    2. 'def' → logprob: -8.125837326049805
    3. 'y' → logprob: -8.750837326049805
    4. '```' → logprob: -9.000837326049805
    5. '       ' → logprob: -9.125837326049805
    6. ' y' → logprob: -10.125837326049805
    7. '#' → logprob: -10.250837326049805
    8. 'from' → logprob: -11.000837326049805
    9. '4' → logprob: -11.375837326049805
    10. '[' → logprob: -12.125837326049805

Token 3286: ' byte' (ID: 9239)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08595588058233261
    2. 'byte' → logprob: -4.21095609664917
    3. 'b' → logprob: -4.46095609664917
    4. '7' → logprob: -4.46095609664917
    5. 'pos' → logprob: -4.58595609664917
    6. 'x' → logprob: -4.83595609664917
    7. '#' → logprob: -5.33595609664917
    8. '3' → logprob: -5.58595609664917
    9. ' i' → logprob: -5.96095609664917
    10. '5' → logprob: -6.46095609664917

Token 3287: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11352532356977463
    2. '3' → logprob: -2.238525390625
    3. '#' → logprob: -8.488525390625
    4. '```' → logprob: -8.613525390625
    5. 'b' → logprob: -8.863525390625
    6. '[' → logprob: -10.238525390625
    7. '
' → logprob: -10.488525390625
    8. '`' → logprob: -10.863525390625
    9. '``' → logprob: -10.988525390625
    10. '1' → logprob: -11.363525390625

Token 3288: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00721921119838953
    2. '#' → logprob: -5.382219314575195
    3. '   ' → logprob: -6.132219314575195
    4. '[
' → logprob: -8.507219314575195
    5. 'b' → logprob: -9.632219314575195
    6. 'def' → logprob: -10.007219314575195
    7. '3' → logprob: -10.007219314575195
    8. ' [' → logprob: -11.132219314575195
    9. '```' → logprob: -11.382219314575195
    10. '``' → logprob: -12.132219314575195

Token 3289: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006009306525811553
    2. '7' → logprob: -8.500600814819336
    3. '   ' → logprob: -8.625600814819336
    4. '#' → logprob: -9.875600814819336
    5. '3' → logprob: -10.125600814819336
    6. '```' → logprob: -10.750600814819336
    7. 'def' → logprob: -10.750600814819336
    8. '[
' → logprob: -10.875600814819336
    9. ' [' → logprob: -11.000600814819336
    10. '`' → logprob: -11.750600814819336

Token 3290: 'xxxx' (ID: 30950)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008500635623931885
    2. '3' → logprob: -5.508500576019287
    3. '2' → logprob: -6.508500576019287
    4. 'b' → logprob: -7.133500576019287
    5. '   ' → logprob: -7.383500576019287
    6. '```' → logprob: -7.883500576019287
    7. '0' → logprob: -8.633501052856445
    8. ']' → logprob: -8.883501052856445
    9. '(' → logprob: -9.008501052856445
    10. '#' → logprob: -9.133501052856445

Token 3291: 'xx' (ID: 7605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46212929487228394
    2. '   ' → logprob: -1.2121293544769287
    3. '```' → logprob: -3.0871293544769287
    4. ']' → logprob: -4.58712911605835
    5. 'def' → logprob: -5.33712911605835
    6. 'b' → logprob: -5.71212911605835
    7. '``' → logprob: -6.58712911605835
    8. '       ' → logprob: -6.58712911605835
    9. '#' → logprob: -6.83712911605835
    10. '[
' → logprob: -6.96212911605835

Token 3292: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027221334166824818
    2. '```' → logprob: -6.127722263336182
    3. 'def' → logprob: -8.127721786499023
    4. '[' → logprob: -9.752721786499023
    5. '       ' → logprob: -10.002721786499023
    6. 'b' → logprob: -10.877721786499023
    7. '`' → logprob: -11.002721786499023
    8. '#' → logprob: -11.127721786499023
    9. 'from' → logprob: -11.127721786499023
    10. '``' → logprob: -11.252721786499023

Token 3293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07860475033521652
    2. '#' → logprob: -3.2036046981811523
    3. '```' → logprob: -4.328604698181152
    4. '[' → logprob: -4.578604698181152
    5. 'b' → logprob: -5.078604698181152
    6. '`' → logprob: -6.828604698181152
    7. '``' → logprob: -7.078604698181152
    8. ' b' → logprob: -7.203604698181152
    9. 'def' → logprob: -7.328604698181152
    10. '    ' → logprob: -7.828604698181152

Token 3294: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17934176325798035
    2. '#' (adapté à ' #') → logprob: -2.0543417930603027
    3. 'def' → logprob: -4.054341793060303
    4. '[' → logprob: -4.804341793060303
    5. '```' → logprob: -5.429341793060303
    6. 'b' → logprob: -5.929341793060303
    7. '``' → logprob: -6.679341793060303
    8. 'bit' → logprob: -7.554341793060303
    9. '`' → logprob: -8.179341316223145
    10. ' b' → logprob: -8.679341316223145

Token 3295: ' bit' (ID: 3546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8169001936912537
    2. '   ' → logprob: -1.1919002532958984
    3. '[' → logprob: -1.9419002532958984
    4. 'def' → logprob: -2.6919002532958984
    5. 'b' → logprob: -4.316900253295898
    6. '```' → logprob: -4.441900253295898
    7. 'bit' → logprob: -5.191900253295898
    8. '       ' → logprob: -5.941900253295898
    9. '``' → logprob: -5.941900253295898
    10. '7' → logprob: -6.191900253295898

Token 3296: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03504875674843788
    2. '[' → logprob: -3.660048723220825
    3. '7' → logprob: -4.785048961639404
    4. '2' → logprob: -8.285048484802246
    5. '```' → logprob: -10.285048484802246
    6. '][' → logprob: -11.160048484802246
    7. ']' → logprob: -11.285048484802246
    8. '0' → logprob: -12.160048484802246
    9. '4' → logprob: -12.160048484802246
    10. ' [' → logprob: -12.410048484802246

Token 3297: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012390851974487305
    2. '=' → logprob: -4.887391090393066
    3. '```' → logprob: -6.012391090393066
    4. '   ' → logprob: -7.637391090393066
    5. 'not' → logprob: -7.762391090393066
    6. ' =' → logprob: -8.387391090393066
    7. 'b' → logprob: -8.637391090393066
    8. ']' → logprob: -8.887391090393066
    9. '=[' → logprob: -9.012391090393066
    10. ' not' → logprob: -9.262391090393066

Token 3298: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03311534598469734
    2. ''b' → logprob: -3.6581153869628906
    3. ''' → logprob: -5.408115386962891
    4. '1' → logprob: -6.783115386962891
    5. '[' → logprob: -7.658115386962891
    6. ' b' → logprob: -8.03311538696289
    7. '`' → logprob: -8.78311538696289
    8. '```' → logprob: -9.40811538696289
    9. ' '' → logprob: -10.28311538696289
    10. '2' → logprob: -11.15811538696289

Token 3299: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16683022677898407
    2. 'b' → logprob: -1.9168301820755005
    3. '[' → logprob: -5.916830062866211
    4. '   ' → logprob: -6.041830062866211
    5. '```' → logprob: -7.666830062866211
    6. ',' → logprob: -8.166830062866211
    7. ' [' → logprob: -8.666830062866211
    8. ' #' → logprob: -8.791830062866211
    9. '#' → logprob: -8.791830062866211
    10. ' def' → logprob: -9.166830062866211

Token 3300: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2085823118686676
    2. '3' → logprob: -1.7085822820663452
    3. ']' → logprob: -5.833582401275635
    4. '7' → logprob: -6.208582401275635
    5. '2' → logprob: -6.833582401275635
    6. '```' → logprob: -7.333582401275635
    7. '][' → logprob: -8.083581924438477
    8. '[
' → logprob: -9.708581924438477
    9. '`' → logprob: -10.583581924438477
    10. ')' → logprob: -10.958581924438477

Token 3301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012011249782517552
    2. '```' → logprob: -9.750120162963867
    3. '7' → logprob: -10.000120162963867
    4. ']' → logprob: -12.250120162963867
    5. '][' → logprob: -13.125120162963867
    6. '   ' → logprob: -13.250120162963867
    7. '`' → logprob: -13.250120162963867
    8. '[
' → logprob: -13.375120162963867
    9. '#' → logprob: -13.875120162963867
    10. '3' → logprob: -14.500120162963867

Token 3302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018016954883933067
    2. '2' → logprob: -4.393016815185547
    3. '1' → logprob: -5.768016815185547
    4. '3' → logprob: -6.518016815185547
    5. '7' → logprob: -8.143016815185547
    6. '```' → logprob: -8.268016815185547
    7. '[' → logprob: -8.768016815185547
    8. ']' → logprob: -9.643016815185547
    9. '`' → logprob: -10.018016815185547
    10. '   ' → logprob: -10.768016815185547

Token 3303: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022530551999807358
    2. ']
' → logprob: -4.397530555725098
    3. '```' → logprob: -5.647530555725098
    4. '[' → logprob: -6.022530555725098
    5. ',' → logprob: -6.897530555725098
    6. '],' → logprob: -7.272530555725098
    7. 'b' → logprob: -7.772530555725098
    8. ')' → logprob: -7.897530555725098
    9. 'def' → logprob: -7.897530555725098
    10. '   ' → logprob: -8.397530555725098

Token 3304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4434989094734192
    2. '```' → logprob: -1.4434988498687744
    3. 'b' → logprob: -2.5684988498687744
    4. '#' → logprob: -4.0684990882873535
    5. '``' → logprob: -4.9434990882873535
    6. '[' → logprob: -4.9434990882873535
    7. 'def' → logprob: -5.0684990882873535
    8. '       ' → logprob: -5.9434990882873535
    9. '`' → logprob: -6.4434990882873535
    10. '	b' → logprob: -6.4434990882873535

Token 3305: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10856454074382782
    2. 'b' → logprob: -2.608564615249634
    3. '   ' → logprob: -3.983564615249634
    4. '[' → logprob: -5.858564376831055
    5. '```' → logprob: -5.983564376831055
    6. 'bit' → logprob: -6.358564376831055
    7. 'def' → logprob: -6.358564376831055
    8. '7' → logprob: -7.983564376831055
    9. '#
' → logprob: -8.108564376831055
    10. '3' → logprob: -8.233564376831055

Token 3306: ' bit' (ID: 3546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4236220717430115
    2. 'b' → logprob: -1.2986221313476562
    3. '4' → logprob: -4.298622131347656
    4. '#' → logprob: -4.298622131347656
    5. '7' → logprob: -4.298622131347656
    6. '1' → logprob: -4.798622131347656
    7. 'bit' → logprob: -4.798622131347656
    8. '   ' → logprob: -5.173622131347656
    9. '5' → logprob: -5.548622131347656
    10. 'def' → logprob: -6.423622131347656

Token 3307: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.015736130997538567
    2. '1' → logprob: -4.765736103057861
    3. '7' → logprob: -5.265736103057861
    4. '[' → logprob: -6.515736103057861
    5. '4' → logprob: -8.39073657989502
    6. '```' → logprob: -8.76573657989502
    7. '
' → logprob: -11.39073657989502
    8. '6' → logprob: -11.39073657989502
    9. '(' → logprob: -11.76573657989502
    10. '2' → logprob: -11.89073657989502

Token 3308: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020484542474150658
    2. 'not' → logprob: -4.020484447479248
    3. ' not' → logprob: -6.895484447479248
    4. '```' → logprob: -7.145484447479248
    5. ']' → logprob: -8.270484924316406
    6. '][' → logprob: -10.020484924316406
    7. '3' → logprob: -10.020484924316406
    8. 'b' → logprob: -10.020484924316406
    9. '=' → logprob: -10.020484924316406
    10. ')' → logprob: -10.895484924316406

Token 3309: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.027652710676193237
    2. '1' → logprob: -4.652652740478516
    3. 'b' → logprob: -4.652652740478516
    4. '3' → logprob: -4.902652740478516
    5. ''b' → logprob: -7.652652740478516
    6. '[' → logprob: -8.777652740478516
    7. ' '' → logprob: -9.777652740478516
    8. '('' → logprob: -10.652652740478516
    9. '`' → logprob: -11.277652740478516
    10. '(' → logprob: -11.527652740478516

Token 3310: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2258569747209549
    2. 'b' → logprob: -1.6008570194244385
    3. '   ' → logprob: -8.60085678100586
    4. '[' → logprob: -9.60085678100586
    5. ' ' → logprob: -9.85085678100586
    6. '    ' → logprob: -9.97585678100586
    7. '```' → logprob: -10.35085678100586
    8. '`' → logprob: -10.72585678100586
    9. ' `' → logprob: -11.47585678100586
    10. ' [' → logprob: -11.85085678100586

Token 3311: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0014926036819815636
    2. '7' → logprob: -7.001492500305176
    3. '[' → logprob: -7.626492500305176
    4. ']' → logprob: -10.001492500305176
    5. '```' → logprob: -11.001492500305176
    6. '1' → logprob: -11.126492500305176
    7. 'b' → logprob: -12.126492500305176
    8. '   ' → logprob: -13.251492500305176
    9. '#' → logprob: -13.376492500305176
    10. '`' → logprob: -13.751492500305176

Token 3312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003229494614060968
    2. '```' → logprob: -8.375323295593262
    3. '7' → logprob: -10.375323295593262
    4. ']' → logprob: -10.875323295593262
    5. '`' → logprob: -11.125323295593262
    6. '][' → logprob: -11.125323295593262
    7. '6' → logprob: -13.375323295593262
    8. '``' → logprob: -13.500323295593262
    9. '   ' → logprob: -13.750323295593262
    10. '[
' → logprob: -13.875323295593262

Token 3313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.955703818472102e-05
    2. '7' → logprob: -10.500059127807617
    3. '3' → logprob: -11.750059127807617
    4. '2' → logprob: -12.000059127807617
    5. '[' → logprob: -12.125059127807617
    6. '```' → logprob: -12.125059127807617
    7. '(' → logprob: -12.750059127807617
    8. '`' → logprob: -13.750059127807617
    9. ']' → logprob: -14.000059127807617
    10. '   ' → logprob: -14.250059127807617

Token 3314: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5204797983169556
    2. ']' → logprob: -1.6454797983169556
    3. '   ' → logprob: -1.7704797983169556
    4. 'def' → logprob: -2.145479679107666
    5. '```' → logprob: -2.395479679107666
    6. 'b' → logprob: -2.770479679107666
    7. ')' → logprob: -3.395479679107666
    8. ',' → logprob: -3.895479679107666
    9. ']
' → logprob: -3.895479679107666
    10. '#' → logprob: -4.020479679107666

Token 3315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4131932854652405
    2. '```' → logprob: -1.4131932258605957
    3. '#' → logprob: -2.5381932258605957
    4. '``' → logprob: -4.663193225860596
    5. 'def' → logprob: -6.163193225860596
    6. '[' → logprob: -6.663193225860596
    7. 'b' → logprob: -6.788193225860596
    8. 'for' → logprob: -7.288193225860596
    9. '`' → logprob: -7.288193225860596
    10. '(' → logprob: -9.413193702697754

Token 3316: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5108059048652649
    2. 'for' → logprob: -1.6358058452606201
    3. '#' (adapté à ' #') → logprob: -1.8858058452606201
    4. 'bit' → logprob: -3.76080584526062
    5. '```' → logprob: -4.510806083679199
    6. 'bits' → logprob: -5.010806083679199
    7. '
' → logprob: -5.885806083679199
    8. '``' → logprob: -6.010806083679199
    9. 'b' → logprob: -6.135806083679199
    10. 'def' → logprob: -6.260806083679199

Token 3317: ' others' (ID: 5036)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2254801988601685
    2. '#' → logprob: -1.7254801988601685
    3. '3' → logprob: -1.9754801988601685
    4. 'for' → logprob: -1.9754801988601685
    5. 'b' → logprob: -2.475480079650879
    6. 'def' → logprob: -2.475480079650879
    7. '```' → logprob: -3.850480079650879
    8. '4' → logprob: -3.975480079650879
    9. '5' → logprob: -4.600480079650879
    10. '7' → logprob: -4.975480079650879

Token 3318: ' x' (ID: 1215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9894071221351624
    2. 'b' → logprob: -1.6144070625305176
    3. '[' → logprob: -1.8644070625305176
    4. '   ' → logprob: -1.8644070625305176
    5. '=' → logprob: -3.3644070625305176
    6. '```' → logprob: -3.3644070625305176
    7. ' =' → logprob: -3.9894070625305176
    8. '`' → logprob: -4.614407062530518
    9. ' b' → logprob: -5.239407062530518
    10. ',' → logprob: -5.739407062530518

Token 3319: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011429627425968647
    2. '```' → logprob: -5.261429786682129
    3. 'def' → logprob: -5.386429786682129
    4. '[' → logprob: -7.261429786682129
    5. 'y' → logprob: -8.761429786682129
    6. ')' → logprob: -9.511429786682129
    7. ',' → logprob: -9.511429786682129
    8. '       ' → logprob: -9.761429786682129
    9. 'b' → logprob: -9.886429786682129
    10. ' y' → logprob: -9.886429786682129

Token 3320: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04362669587135315
    2. '3' → logprob: -3.2936267852783203
    3. '[' → logprob: -5.29362678527832
    4. ']' → logprob: -7.79362678527832
    5. '```' → logprob: -9.91862678527832
    6. '#' → logprob: -10.79362678527832
    7. '`' → logprob: -11.54362678527832
    8. ''' → logprob: -11.66862678527832
    9. '][' → logprob: -11.79362678527832
    10. ''''
' → logprob: -12.41862678527832

Token 3321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007053864188492298
    2. '```' → logprob: -5.382053852081299
    3. '[
' → logprob: -6.882053852081299
    4. '=' → logprob: -7.757053852081299
    5. ' =' → logprob: -8.882054328918457
    6. 'def' → logprob: -8.882054328918457
    7. '=[' → logprob: -8.882054328918457
    8. '   ' → logprob: -9.007054328918457
    9. ')' → logprob: -9.132054328918457
    10. '`' → logprob: -9.882054328918457

Token 3322: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.472211968386546e-05
    2. '(' → logprob: -10.125094413757324
    3. '   ' → logprob: -10.875094413757324
    4. '[' → logprob: -11.000094413757324
    5. '```' → logprob: -12.250094413757324
    6. ' ' → logprob: -12.375094413757324
    7. '3' → logprob: -12.750094413757324
    8. '`' → logprob: -13.250094413757324
    9. '...' → logprob: -13.750094413757324
    10. ''' → logprob: -13.875094413757324

Token 3323: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45492011308670044
    2. ',' → logprob: -1.5799200534820557
    3. ':' → logprob: -3.0799200534820557
    4. ':]' → logprob: -3.5799200534820557
    5. '],' → logprob: -3.8299200534820557
    6. '..' → logprob: -3.9549200534820557
    7. '...' → logprob: -4.329920291900635
    8. ']:
' → logprob: -4.704920291900635
    9. ']=' → logprob: -4.954920291900635
    10. ':]
' → logprob: -5.954920291900635

Token 3324: 'b' (ID: 65)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8034449219703674
    2. 'b' → logprob: -1.3034448623657227
    3. '[' → logprob: -1.5534448623657227
    4. '7' → logprob: -3.4284448623657227
    5. '```' → logprob: -3.4284448623657227
    6. 'for' → logprob: -6.678444862365723
    7. 'def' → logprob: -7.053444862365723
    8. ' b' → logprob: -7.928444862365723
    9. '`' → logprob: -8.428444862365723
    10. '2' → logprob: -8.428444862365723

Token 3325: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5139734148979187
    2. '2' → logprob: -1.0139734745025635
    3. '[' → logprob: -3.6389734745025635
    4. '7' → logprob: -4.388973236083984
    5. ']' → logprob: -8.263973236083984
    6. '(' → logprob: -9.763973236083984
    7. '```' → logprob: -9.888973236083984
    8. ')' → logprob: -11.138973236083984
    9. '[
' → logprob: -11.263973236083984
    10. '   ' → logprob: -11.638973236083984

Token 3326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.132831409573555
    2. ']' → logprob: -2.632831335067749
    3. '2' → logprob: -3.132831335067749
    4. '3' → logprob: -5.382831573486328
    5. '```' → logprob: -6.382831573486328
    6. '`' → logprob: -6.882831573486328
    7. '7' → logprob: -8.257831573486328
    8. '[
' → logprob: -8.382831573486328
    9. '(' → logprob: -8.507831573486328
    10. ')' → logprob: -8.757831573486328

Token 3327: '7' (ID: 22)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -14.25000286102295
    3. ' ' → logprob: -14.62500286102295
    4. '3' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.25000286102295
    6. '[' → logprob: -15.81250286102295
    7. '7' → logprob: -15.93750286102295
    8. '(' → logprob: -16.187501907348633
    9. '۲' → logprob: -16.437501907348633
    10. '２' → logprob: -16.875001907348633

Token 3328: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0786091610789299
    2. ']:
' → logprob: -3.7036092281341553
    3. ']
' → logprob: -4.203608989715576
    4. ')' → logprob: -4.453608989715576
    5. ']:' → logprob: -5.328608989715576
    6. '   ' → logprob: -5.453608989715576
    7. ']=' → logprob: -5.578608989715576
    8. '):
' → logprob: -5.703608989715576
    9. '']' → logprob: -6.453608989715576
    10. '[' → logprob: -6.703608989715576

Token 3329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05049589276313782
    2. '```' → logprob: -3.0504958629608154
    3. '``' → logprob: -6.9254961013793945
    4. '
' → logprob: -7.1754961013793945
    5. 'def' → logprob: -10.175496101379395
    6. '#' → logprob: -10.425496101379395
    7. '`' → logprob: -10.675496101379395
    8. ')' → logprob: -11.300496101379395
    9. '[' → logprob: -11.300496101379395
    10. 'for' → logprob: -11.675496101379395

Token 3330: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006321339402347803
    2. '#' → logprob: -5.506321430206299
    3. '
' → logprob: -6.631321430206299
    4. '```' → logprob: -7.631321430206299
    5. 'x' → logprob: -8.00632095336914
    6. 'def' → logprob: -10.13132095336914
    7. '``' → logprob: -10.75632095336914
    8. 'unknown' → logprob: -11.13132095336914
    9. 'y' (adapté à ' y') → logprob: -11.25632095336914
    10. '    
' → logprob: -12.50632095336914

Token 3331: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.008687375113368034
    2. '_positions' → logprob: -4.758687496185303
    3. 'bits' → logprob: -10.883687019348145
    4. '_pos' → logprob: -11.383687019348145
    5. '_indices' → logprob: -11.758687019348145
    6. '[' → logprob: -12.258687019348145
    7. '=' → logprob: -12.508687019348145
    8. ' =' → logprob: -12.633687019348145
    9. '_' → logprob: -12.633687019348145
    10. '_counts' → logprob: -12.758687019348145

Token 3332: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11925914138555527
    2. '_vals' → logprob: -2.4942591190338135
    3. '_positions' → logprob: -3.9942591190338135
    4. ' =' → logprob: -4.869259357452393
    5. '_list' → logprob: -7.119259357452393
    6. '_pos' → logprob: -7.244259357452393
    7. '_idxs' → logprob: -7.369259357452393
    8. '_indices' → logprob: -7.619259357452393
    9. 'positions' → logprob: -8.494258880615234
    10. '=[' → logprob: -8.494258880615234

Token 3333: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019213721388950944
    2. '4' → logprob: -6.7519211769104
    3. '[
' → logprob: -8.251921653747559
    4. '=[' → logprob: -8.501921653747559
    5. '```' → logprob: -9.501921653747559
    6. '7' → logprob: -9.626921653747559
    7. '=' → logprob: -10.376921653747559
    8. '[]' → logprob: -10.626921653747559
    9. '1' → logprob: -11.251921653747559
    10. '=[
' → logprob: -11.376921653747559

Token 3334: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38841158151626587
    2. ' =' → logprob: -1.138411521911621
    3. '=[' → logprob: -6.513411521911621
    4. '   ' → logprob: -10.388411521911621
    5. ' =[' → logprob: -11.888411521911621
    6. '[' → logprob: -12.138411521911621
    7. '```' → logprob: -12.513411521911621
    8. ']' → logprob: -13.263411521911621
    9. '_positions' → logprob: -13.638411521911621
    10. 's' → logprob: -14.138411521911621

Token 3335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02440173178911209
    2. ' =' → logprob: -3.7744016647338867
    3. '=[' → logprob: -6.774401664733887
    4. '```' → logprob: -12.399401664733887
    5. '=[]' → logprob: -13.399401664733887
    6. 's' → logprob: -13.649401664733887
    7. ' =[' → logprob: -13.649401664733887
    8. '=
' → logprob: -13.649401664733887
    9. '   ' → logprob: -13.774401664733887
    10. '=[
' → logprob: -14.399401664733887

Token 3336: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. ' [' → logprob: -12.375004768371582
    3. '[
' → logprob: -15.875004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '(' → logprob: -18.125003814697266
    6. '4' → logprob: -18.500003814697266
    7. '['' → logprob: -18.875003814697266
    8. '=[' → logprob: -19.875003814697266
    9. 'b' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.250003814697266

Token 3337: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -16.5
    4. '[' → logprob: -16.625
    5. '(' → logprob: -19.875
    6. '４' → logprob: -20.25
    7. '  ' → logprob: -20.625
    8. '```' → logprob: -20.625
    9. '۴' → logprob: -20.75
    10. '       ' → logprob: -21.125

Token 3338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. '4' → logprob: -11.125017166137695
    3. ' ,' → logprob: -13.125017166137695
    4. ',
' → logprob: -15.000017166137695
    5. '6' → logprob: -15.375017166137695
    6. '```' → logprob: -17.750017166137695
    7. ']' → logprob: -18.000017166137695
    8. ' ' → logprob: -18.375017166137695
    9. '   ' → logprob: -18.500017166137695
    10. '[' → logprob: -18.625017166137695

Token 3339: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -17.75
    4. '[' → logprob: -19.875
    5. '５' → logprob: -20.0
    6. '۵' → logprob: -20.125
    7. '4' → logprob: -20.6875
    8. '५' → logprob: -20.8125
    9. '6' → logprob: -21.0
    10. '  ' → logprob: -21.0625

Token 3340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014025058771949261
    2. '6' → logprob: -8.875140190124512
    3. ' ,' → logprob: -15.125140190124512
    4. ',
' → logprob: -16.500141143798828
    5. '```' → logprob: -17.000141143798828
    6. '   ' → logprob: -18.125141143798828
    7. '[' → logprob: -19.125141143798828
    8. '7' → logprob: -19.250141143798828
    9. ' ' → logprob: -19.375141143798828
    10. '
' → logprob: -20.125141143798828

Token 3341: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -19.375
    4. '[' → logprob: -20.25
    5. '۶' → logprob: -20.75
    6. '٦' → logprob: -20.75
    7. '६' → logprob: -20.75
    8. '' → logprob: -21.625
    9. '６' → logprob: -21.875
    10. '   ' → logprob: -22.125

Token 3342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011212585377506912
    2. '7' → logprob: -9.125112533569336
    3. ' ,' → logprob: -12.750112533569336
    4. ',
' → logprob: -15.625112533569336
    5. '```' → logprob: -17.250112533569336
    6. '[' → logprob: -18.500112533569336
    7. '   ' → logprob: -19.250112533569336
    8. '
' → logprob: -19.750112533569336
    9. '،' → logprob: -19.875112533569336
    10. '4' → logprob: -20.000112533569336

Token 3343: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -21.0
    5. '७' → logprob: -21.0
    6. '۷' → logprob: -21.375
    7. '[' → logprob: -21.5
    8. '７' → logprob: -21.625
    9. '٧' → logprob: -21.75
    10. '৭' → logprob: -22.0

Token 3344: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3491652309894562
    2. ']
' → logprob: -1.2241652011871338
    3. '   ' → logprob: -7.349165439605713
    4. ',' → logprob: -10.599164962768555
    5. ']

' → logprob: -10.724164962768555
    6. ']
' → logprob: -11.349164962768555
    7. '```' → logprob: -12.099164962768555
    8. ' ]' → logprob: -12.849164962768555
    9. ' ]
' → logprob: -13.599164962768555
    10. ')' → logprob: -13.599164962768555

Token 3345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018523775041103363
    2. '```' → logprob: -4.018523693084717
    3. 'y' → logprob: -8.768524169921875
    4. '``' → logprob: -9.143524169921875
    5. '
' → logprob: -10.018524169921875
    6. ' y' → logprob: -10.393524169921875
    7. 'for' → logprob: -11.768524169921875
    8. '#' → logprob: -11.893524169921875
    9. '`' → logprob: -11.893524169921875
    10. '       ' → logprob: -12.643524169921875

Token 3346: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.763001561164856
    2. '   ' → logprob: -0.763001561164856
    3. 'unknown' → logprob: -3.5130014419555664
    4. 'for' → logprob: -3.7630014419555664
    5. '```' → logprob: -4.513001441955566
    6. '#' → logprob: -7.013001441955566
    7. ' y' → logprob: -7.013001441955566
    8. '
' → logprob: -7.263001441955566
    9. '``' → logprob: -7.638001441955566
    10. 'x' → logprob: -8.763001441955566

Token 3347: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.001211783615872264
    2. '_positions' → logprob: -7.001211643218994
    3. 'bits' → logprob: -8.251212120056152
    4. '_indices' → logprob: -10.751212120056152
    5. '_idx' → logprob: -12.251212120056152
    6. '```' → logprob: -12.501212120056152
    7. '_pos' → logprob: -13.126212120056152
    8. 'Bits' → logprob: -14.126212120056152
    9. 'positions' → logprob: -14.126212120056152
    10. 'idx' → logprob: -14.251212120056152

Token 3348: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.14424248039722443
    2. '_idx' → logprob: -2.769242525100708
    3. ' =' → logprob: -3.269242525100708
    4. '=' → logprob: -3.519242525100708
    5. 'b' → logprob: -6.519242286682129
    6. '_indices' → logprob: -6.769242286682129
    7. '_idxs' → logprob: -7.644242286682129
    8. 'idx' → logprob: -8.519242286682129
    9. '   ' → logprob: -8.644242286682129
    10. '_bits' → logprob: -9.144242286682129

Token 3349: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.314612478017807
    2. '_idx' → logprob: -1.5646125078201294
    3. '1' → logprob: -3.93961238861084
    4. 'idx' → logprob: -4.06461238861084
    5. '7' → logprob: -4.68961238861084
    6. '=[' → logprob: -5.06461238861084
    7. '```' → logprob: -6.18961238861084
    8. '8' → logprob: -6.93961238861084
    9. '=[]' → logprob: -7.06461238861084
    10. '=' → logprob: -7.43961238861084

Token 3350: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13293181359767914
    2. ' =' → logprob: -2.132931709289551
    3. '[' → logprob: -5.382931709289551
    4. '=[' → logprob: -7.007931709289551
    5. '_idx' → logprob: -8.25793170928955
    6. 'idx' → logprob: -9.88293170928955
    7. ']' → logprob: -10.00793170928955
    8. '_indices' → logprob: -10.75793170928955
    9. '```' → logprob: -11.00793170928955
    10. ']=' → logprob: -11.50793170928955

Token 3351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011136840097606182
    2. ' =' → logprob: -4.511137008666992
    3. '=[' → logprob: -9.511137008666992
    4. '[' → logprob: -11.136137008666992
    5. '```' → logprob: -15.761137008666992
    6. '=
' → logprob: -16.386137008666992
    7. ' =[' → logprob: -16.386137008666992
    8. ':' → logprob: -17.261137008666992
    9. '.append' → logprob: -17.386137008666992
    10. '=[]' → logprob: -17.636137008666992

Token 3352: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -15.75
    3. '   ' → logprob: -17.75
    4. '2' → logprob: -19.125
    5. '[
' → logprob: -19.125
    6. '([' → logprob: -19.875
    7. '(' → logprob: -20.0
    8. '=[' → logprob: -20.375
    9. '{' → logprob: -20.5
    10. '```' → logprob: -21.875

Token 3353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '[' → logprob: -15.125001907348633
    5. '(' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. '  ' → logprob: -17.375001907348633
    8. '２' → logprob: -18.000001907348633
    9. '۲' → logprob: -18.562501907348633
    10. '       ' → logprob: -18.812501907348633

Token 3354: ']

' (ID: 3144)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08597928285598755
    2. ']' → logprob: -2.5859792232513428
    3. ']
' → logprob: -5.335979461669922
    4. '2' → logprob: -6.460979461669922
    5. '```' → logprob: -7.960979461669922
    6. ']

' → logprob: -8.585979461669922
    7. '#' → logprob: -10.585979461669922
    8. ',
' → logprob: -10.710979461669922
    9. ' ,' → logprob: -11.210979461669922
    10. '[' → logprob: -11.210979461669922

Token 3355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023052819073200226
    2. '```' → logprob: -4.39805269241333
    3. 'unknown' → logprob: -4.77305269241333
    4. '
' → logprob: -6.52305269241333
    5. '``' → logprob: -8.023053169250488
    6. ' unknown' → logprob: -9.398053169250488
    7. 'fixed' → logprob: -9.773053169250488
    8. 'y' → logprob: -10.273053169250488
    9. '#' → logprob: -10.648053169250488
    10. 'def' → logprob: -11.148053169250488

Token 3356: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06407785415649414
    2. 'unknown' → logprob: -3.189077854156494
    3. 'fixed' → logprob: -4.189077854156494
    4. 'y' (adapté à ' y') → logprob: -5.814077854156494
    5. '```' → logprob: -6.314077854156494
    6. '
' → logprob: -8.064077377319336
    7. '#' → logprob: -8.314077377319336
    8. '``' → logprob: -8.439077377319336
    9. 'def' → logprob: -9.814077377319336
    10. '    
' → logprob: -11.064077377319336

Token 3357: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.00029041420202702284
    2. 'bits' → logprob: -8.875290870666504
    3. '_positions' → logprob: -9.375290870666504
    4. '_fixed' → logprob: -10.250290870666504
    5. '_indices' → logprob: -11.125290870666504
    6. 'Bits' → logprob: -13.000290870666504
    7. 'fixed' → logprob: -13.250290870666504
    8. '```' → logprob: -13.250290870666504
    9. '_idx' → logprob: -13.500290870666504
    10. '_bit' → logprob: -13.875290870666504

Token 3358: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10731612145900726
    2. '_b' → logprob: -2.357316017150879
    3. ' =' → logprob: -5.232316017150879
    4. '_bits' → logprob: -7.232316017150879
    5. 'b' → logprob: -7.482316017150879
    6. '=[]' → logprob: -8.607316017150879
    7. '=[' → logprob: -9.482316017150879
    8. '=[]
' → logprob: -9.982316017150879
    9. '_list' → logprob: -10.357316017150879
    10. '```' → logprob: -10.482316017150879

Token 3359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.161794662475586
    2. '.extend' → logprob: -1.411794662475586
    3. '=[]' → logprob: -1.786794662475586
    4. '.append' → logprob: -1.786794662475586
    5. ' =' → logprob: -2.411794662475586
    6. '=[]
' → logprob: -4.286794662475586
    7. '+=' → logprob: -6.286794662475586
    8. ' +=' → logprob: -6.786794662475586
    9. '.clear' → logprob: -7.286794662475586
    10. '=[' → logprob: -8.161794662475586

Token 3360: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3884512484073639
    2. '[]' → logprob: -1.1384512186050415
    3. '[]

' → logprob: -6.638451099395752
    4. '[' → logprob: -9.26345157623291
    5. '[y' → logprob: -9.51345157623291
    6. '[-' → logprob: -9.76345157623291
    7. 'y' → logprob: -10.63845157623291
    8. '[
' → logprob: -11.51345157623291
    9. '[])
' → logprob: -13.13845157623291
    10. ' []
' → logprob: -13.51345157623291

Token 3361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04670161008834839
    2. 'unknown' → logprob: -3.296701669692993
    3. 'for' → logprob: -4.921701431274414
    4. 'fixed' → logprob: -7.046701431274414
    5. '
' → logprob: -8.421701431274414
    6. '```' → logprob: -9.296701431274414
    7. ' unknown' → logprob: -9.796701431274414
    8. ' for' → logprob: -10.046701431274414
    9. '``' → logprob: -10.921701431274414
    10. '    
' → logprob: -11.171701431274414

Token 3362: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.029521698132157326
    2. 'fixed' → logprob: -3.6545217037200928
    3. 'for' → logprob: -6.029521465301514
    4. '   ' → logprob: -7.529521465301514
    5. '
' → logprob: -8.779521942138672
    6. '```' → logprob: -9.404521942138672
    7. 'known' → logprob: -11.279521942138672
    8. '``' → logprob: -11.779521942138672
    9. '#' → logprob: -12.279521942138672
    10. '    
' → logprob: -12.529521942138672

Token 3363: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000111768240458332
    2. 'y' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.87511157989502
    4. '_bits' → logprob: -14.25011157989502
    5. '_x' → logprob: -14.37511157989502
    6. '```' → logprob: -15.00011157989502
    7. '_tokens' → logprob: -16.875112533569336
    8. 's' → logprob: -17.125112533569336
    9. '	y' → logprob: -17.125112533569336
    10. '
' → logprob: -17.250112533569336

Token 3364: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.46766969561576843
    2. '=' → logprob: -1.4676697254180908
    3. ' +=' → logprob: -1.9676697254180908
    4. ' =' → logprob: -5.717669486999512
    5. '```' → logprob: -12.342669486999512
    6. '   ' → logprob: -13.342669486999512
    7. '+' → logprob: -13.592669486999512
    8. ']+=' → logprob: -15.342669486999512
    9. '+='' → logprob: -16.967670440673828
    10. 'count' → logprob: -17.092670440673828

Token 3365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003705777460709214
    2. ' ' → logprob: -6.253705978393555
    3. '4' → logprob: -7.003705978393555
    4. '1' → logprob: -7.253705978393555
    5. '5' → logprob: -9.503705978393555
    6. '2' → logprob: -9.878705978393555
    7. '3' → logprob: -11.503705978393555
    8. '   ' → logprob: -11.753705978393555
    9. '```' → logprob: -11.878705978393555
    10. 'y' → logprob: -13.253705978393555

Token 3366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12839344143867493
    2. '5' → logprob: -2.8783934116363525
    3. '4' → logprob: -3.1283934116363525
    4. '1' → logprob: -4.253393650054932
    5. '2' → logprob: -5.378393650054932
    6. '3' → logprob: -6.753393650054932
    7. '6' → logprob: -7.878393650054932
    8. ' ' → logprob: -10.003393173217773
    9. 'y' → logprob: -10.753393173217773
    10. '   ' → logprob: -11.628393173217773

Token 3367: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09967011958360672
    2. 'for' → logprob: -2.849670171737671
    3. 'fixed' → logprob: -3.724670171737671
    4. '
' → logprob: -4.974669933319092
    5. '```' → logprob: -5.224669933319092
    6. ' for' → logprob: -8.47467041015625
    7. '``' → logprob: -8.59967041015625
    8. ' fixed' → logprob: -10.09967041015625
    9. 'Fixed' → logprob: -10.34967041015625
    10. '    
' → logprob: -10.47467041015625

Token 3368: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32887783646583557
    2. '   ' → logprob: -1.5788778066635132
    3. '
' → logprob: -3.2038779258728027
    4. 'fixed' → logprob: -3.9538779258728027
    5. ' for' → logprob: -4.703877925872803
    6. '```' → logprob: -5.703877925872803
    7. 'y' → logprob: -7.703877925872803
    8. ',' → logprob: -8.328877449035645
    9. '=' → logprob: -8.828877449035645
    10. '``' → logprob: -9.203877449035645

Token 3369: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.0004348413785919547
    2. 'for' → logprob: -7.750434875488281
    3. ' fixed' → logprob: -13.250434875488281
    4. '```' → logprob: -13.875434875488281
    5. '   ' → logprob: -14.375434875488281
    6. '
' → logprob: -14.875434875488281
    7. 'from' → logprob: -15.875434875488281
    8. 'fix' → logprob: -16.75043487548828
    9. 'filled' → logprob: -16.87543487548828
    10. '``' → logprob: -17.12543487548828

Token 3370: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00021641071361955255
    2. '_' → logprob: -9.000216484069824
    3. 'y' → logprob: -9.500216484069824
    4. '_bits' → logprob: -12.125216484069824
    5. '```' → logprob: -12.250216484069824
    6. '_x' → logprob: -12.750216484069824
    7. '_fixed' → logprob: -13.375216484069824
    8. '   ' → logprob: -14.375216484069824
    9. '1' → logprob: -14.625216484069824
    10. ''_' → logprob: -14.875216484069824

Token 3371: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.421908958349377e-05
    2. '```' → logprob: -10.00007438659668
    3. '_on' → logprob: -11.62507438659668
    4. 'ones' → logprob: -11.87507438659668
    5. '=' → logprob: -12.00007438659668
    6. ' =' → logprob: -12.75007438659668
    7. '\' → logprob: -14.00007438659668
    8. '
' → logprob: -14.50007438659668
    9. 'On' → logprob: -14.75007438659668
    10. '1' → logprob: -15.25007438659668

Token 3372: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00010187433508690447
    2. '1' → logprob: -10.000102043151855
    3. '_' → logprob: -11.000102043151855
    4. '```' → logprob: -11.375102043151855
    5. 'ons' → logprob: -12.125102043151855
    6. '0' → logprob: -12.500102043151855
    7. ' ones' → logprob: -12.500102043151855
    8. 'one' → logprob: -12.875102043151855
    9. 'ONES' → logprob: -13.500102043151855
    10. 'import' → logprob: -13.500102043151855

Token 3373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10532324016094208
    2. '+=' → logprob: -2.355323314666748
    3. ' +=' → logprob: -5.855323314666748
    4. ' =' → logprob: -6.105323314666748
    5. '   ' → logprob: -12.48032283782959
    6. '```' → logprob: -12.98032283782959
    7. '+' → logprob: -13.85532283782959
    8. '=
' → logprob: -14.60532283782959
    9. ']+=' → logprob: -16.230323791503906
    10. 'import' → logprob: -16.980323791503906

Token 3374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.951771421066951e-05
    2. ' ' → logprob: -10.500029563903809
    3. '<|end|>' → logprob: -13.625029563903809
    4. '=' → logprob: -14.750029563903809
    5. '```' → logprob: -16.125028610229492
    6. '+' → logprob: -16.500028610229492
    7. '۰' → logprob: -17.375028610229492
    8. ')' → logprob: -17.500028610229492
    9. '1' → logprob: -17.625028610229492
    10. '#' → logprob: -18.000028610229492

Token 3375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -16.37500762939453
    4. '=' → logprob: -16.62500762939453
    5. '```' → logprob: -17.50000762939453
    6. '۰' → logprob: -18.62500762939453
    7. '+' → logprob: -19.37500762939453
    8. '+=' → logprob: -20.12500762939453
    9. '
' → logprob: -20.62500762939453
    10. ')' → logprob: -20.62500762939453

Token 3376: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02677835337817669
    2. '   ' → logprob: -3.77677845954895
    3. '```' → logprob: -6.151778221130371
    4. ' for' → logprob: -6.651778221130371
    5. '#' → logprob: -10.026778221130371
    6. '
' → logprob: -10.776778221130371
    7. 'def' → logprob: -11.026778221130371
    8. '``' → logprob: -11.901778221130371
    9. 'For' → logprob: -12.276778221130371
    10. '	for' → logprob: -12.401778221130371

Token 3377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5764389038085938
    2. 'for' → logprob: -0.8264389038085938
    3. '```' → logprob: -7.951438903808594
    4. ' for' → logprob: -9.451438903808594
    5. 'def' → logprob: -10.701438903808594
    6. '#' → logprob: -11.326438903808594
    7. 'from' → logprob: -11.326438903808594
    8. '
' → logprob: -11.451438903808594
    9. 'For' → logprob: -11.951438903808594
    10. '``' → logprob: -13.451438903808594

Token 3378: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002889874158427119
    2. '   ' → logprob: -8.250288963317871
    3. ' for' → logprob: -10.875288963317871
    4. 'def' → logprob: -12.625288963317871
    5. '```' → logprob: -13.000288963317871
    6. '
' → logprob: -13.500288963317871
    7. 'from' → logprob: -13.625288963317871
    8. 'y' → logprob: -14.750288963317871
    9. '#' → logprob: -15.875288963317871
    10. '``' → logprob: -17.125289916992188

Token 3379: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.49849528074264526
    2. 'idx' → logprob: -1.24849534034729
    3. 'pos' → logprob: -2.24849534034729
    4. ' idx' → logprob: -10.123495101928711
    5. ' pos' → logprob: -11.373495101928711
    6. ' i' → logprob: -11.623495101928711
    7. '
' → logprob: -15.248495101928711
    8. 'ix' → logprob: -15.623495101928711
    9. '   ' → logprob: -15.623495101928711
    10. '(i' → logprob: -15.748495101928711

Token 3380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38691768050193787
    2. 'in' → logprob: -1.1369177103042603
    3. '   ' → logprob: -10.011918067932129
    4. '	in' → logprob: -14.761918067932129
    5. '    ' → logprob: -15.386918067932129
    6. '
' → logprob: -15.511918067932129
    7. ' ' → logprob: -15.636918067932129
    8. 'In' → logprob: -15.886918067932129
    9. ')' → logprob: -16.011917114257812
    10. '  ' → logprob: -16.136917114257812

Token 3381: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03913421928882599
    2. '[' → logprob: -3.2891342639923096
    3. '(' → logprob: -7.0391340255737305
    4. '(y' → logprob: -9.28913402557373
    5. '[y' → logprob: -9.66413402557373
    6. ' y' → logprob: -9.91413402557373
    7. ' [' → logprob: -12.66413402557373
    8. '([' → logprob: -12.78913402557373
    9. '   ' → logprob: -13.03913402557373
    10. ' (' → logprob: -14.41413402557373

Token 3382: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.11429368704557419
    2. '[' → logprob: -2.2392935752868652
    3. 'bits' → logprob: -7.239293575286865
    4. 'range' → logprob: -7.614293575286865
    5. 'Bits' → logprob: -9.114294052124023
    6. '_BITS' → logprob: -10.364294052124023
    7. '[
' → logprob: -10.614294052124023
    8. '```' → logprob: -10.989294052124023
    9. '(' → logprob: -11.489294052124023
    10. 'b' → logprob: -11.614294052124023

Token 3383: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0839184522628784
    2. '_bits' → logprob: -1.0839184522628784
    3. '_b' → logprob: -1.8339184522628784
    4. 'b' → logprob: -1.8339184522628784
    5. 'bits' → logprob: -5.958918571472168
    6. '   ' → logprob: -7.708918571472168
    7. 'range' → logprob: -8.458918571472168
    8. '```' → logprob: -9.333918571472168
    9. 'Bits' → logprob: -9.458918571472168
    10. '1' → logprob: -9.458918571472168

Token 3384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23237137496471405
    2. '4' → logprob: -1.6073713302612305
    3. '[' → logprob: -5.6073713302612305
    4. '7' → logprob: -5.8573713302612305
    5. '(' → logprob: -9.10737133026123
    6. '3' → logprob: -9.23237133026123
    7. '5' → logprob: -9.48237133026123
    8. '```' → logprob: -10.35737133026123
    9. 'in' → logprob: -11.10737133026123
    10. '0' → logprob: -11.23237133026123

Token 3385: '_idx' (ID: 15257)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3019885718822479
    2. ':' → logprob: -2.3019886016845703
    3. '4' → logprob: -3.1769886016845703
    4. ']' → logprob: -3.3019886016845703
    5. ']:
' → logprob: -4.05198860168457
    6. ':
' → logprob: -4.42698860168457
    7. '7' → logprob: -4.55198860168457
    8. ']:' → logprob: -4.67698860168457
    9. '```' → logprob: -4.67698860168457
    10. '   ' → logprob: -4.92698860168457

Token 3386: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5145700573921204
    2. ':
' → logprob: -1.3895699977874756
    3. ':' → logprob: -2.3895699977874756
    4. '   ' → logprob: -3.2645699977874756
    5. ' in' → logprob: -4.639570236206055
    6. 'in' → logprob: -5.139570236206055
    7. '[' → logprob: -5.764570236206055
    8. '=' → logprob: -5.764570236206055
    9. ' =' → logprob: -7.764570236206055
    10. '):
' → logprob: -7.889570236206055

Token 3387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21706177294254303
    2. '   ' → logprob: -2.342061758041382
    3. 'c' → logprob: -2.467061758041382
    4. '```' → logprob: -4.467061996459961
    5. ' c' → logprob: -6.092061996459961
    6. '``' → logprob: -8.092061996459961
    7. '`' → logprob: -10.342061996459961
    8. '           ' → logprob: -10.592061996459961
    9. '{
' → logprob: -10.842061996459961
    10. ' ' → logprob: -12.217061996459961

Token 3388: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0003872974484693259
    2. '       ' → logprob: -8.000387191772461
    3. '   ' → logprob: -10.125387191772461
    4. '```' → logprob: -12.250387191772461
    5. ' c' → logprob: -12.500387191772461
    6. '{
' → logprob: -12.750387191772461
    7. '	c' → logprob: -15.500387191772461
    8. '``' → logprob: -15.625387191772461
    9. ')c' → logprob: -17.50038719177246
    10. '
' → logprob: -17.75038719177246

Token 3389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01606052741408348
    2. ' =' → logprob: -4.1410603523254395
    3. '=c' → logprob: -11.016060829162598
    4. '==' → logprob: -13.016060829162598
    5. '=b' → logprob: -13.266060829162598
    6. '       ' → logprob: -13.641060829162598
    7. '   ' → logprob: -13.641060829162598
    8. 'c' → logprob: -13.641060829162598
    9. 'if' → logprob: -14.266060829162598
    10. '```' → logprob: -15.266060829162598

Token 3390: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.64708495605737e-05
    2. ' b' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.875066757202148
    4. '       ' → logprob: -18.37506675720215
    5. '	b' → logprob: -19.25006675720215
    6. '```' → logprob: -19.75006675720215
    7. ' ' → logprob: -20.25006675720215
    8. '    ' → logprob: -20.62506675720215
    9. '
' → logprob: -20.75006675720215
    10. '           ' → logprob: -20.87506675720215

Token 3391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. '[' → logprob: -10.375053405761719
    3. '[idx' → logprob: -11.750053405761719
    4. 'b' → logprob: -11.875053405761719
    5. '```' → logprob: -12.375053405761719
    6. '
' → logprob: -13.750053405761719
    7. 'idx' → logprob: -14.125053405761719
    8. '   ' → logprob: -14.750053405761719
    9. '[
' → logprob: -15.125053405761719
    10. 'i' → logprob: -16.25005340576172

Token 3392: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00015872348740231246
    2. 'idx' → logprob: -8.875158309936523
    3. '[
' → logprob: -12.000158309936523
    4. '```' → logprob: -12.625158309936523
    5. '       ' → logprob: -13.375158309936523
    6. '[c' → logprob: -13.500158309936523
    7. '(idx' → logprob: -13.625158309936523
    8. '[' → logprob: -13.625158309936523
    9. '
' → logprob: -14.125158309936523
    10. 'c' → logprob: -14.250158309936523

Token 3393: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.08459226787090302
    2. ']' → logprob: -3.209592342376709
    3. '       ' → logprob: -3.334592342376709
    4. ')
' → logprob: -5.584592342376709
    5. ')' → logprob: -7.709592342376709
    6. '   ' → logprob: -8.58459186553955
    7. 'if' → logprob: -8.58459186553955
    8. ']==' → logprob: -8.95959186553955
    9. '           ' → logprob: -9.45959186553955
    10. '
' → logprob: -9.58459186553955

Token 3394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005274149589240551
    2. 'if' → logprob: -7.625527381896973
    3. ' if' → logprob: -10.375527381896973
    4. '           ' → logprob: -12.875527381896973
    5. '   ' → logprob: -12.875527381896973
    6. '```' → logprob: -12.875527381896973
    7. '
' → logprob: -16.00052833557129
    8. '<|end|>' → logprob: -16.50052833557129
    9. '{
' → logprob: -16.75052833557129
    10. '	if' → logprob: -16.87552833557129

Token 3395: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16128617525100708
    2. '       ' → logprob: -1.9112861156463623
    3. ' if' → logprob: -7.036286354064941
    4. '```' → logprob: -8.661286354064941
    5. '   ' → logprob: -12.161286354064941
    6. '``' → logprob: -12.911286354064941
    7. '	if' → logprob: -15.161286354064941
    8. '           ' → logprob: -15.161286354064941
    9. '
' → logprob: -15.661286354064941
    10. 'If' → logprob: -16.411285400390625

Token 3396: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.547789674485102e-05
    2. ' c' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. ''' → logprob: -18.875036239624023
    5. '       ' → logprob: -18.875036239624023
    6. '(c' → logprob: -19.750036239624023
    7. '           ' → logprob: -20.000036239624023
    8. '	c' → logprob: -20.125036239624023
    9. ' ' → logprob: -20.250036239624023
    10. '
' → logprob: -20.375036239624023

Token 3397: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.060547199100255966
    2. ' ==' → logprob: -3.060547113418579
    3. '=='' → logprob: -4.435547351837158
    4. 'in' → logprob: -11.560546875
    5. '==
' → logprob: -11.810546875
    6. '       ' → logprob: -12.310546875
    7. ' =='' → logprob: -12.435546875
    8. '```' → logprob: -12.685546875
    9. ' in' → logprob: -13.435546875
    10. ''' → logprob: -13.560546875

Token 3398: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2233183042553719e-05
    2. '1' → logprob: -11.875012397766113
    3. ' '' → logprob: -12.625012397766113
    4. '('' → logprob: -13.875012397766113
    5. '`' → logprob: -14.250012397766113
    6. '"' → logprob: -15.000012397766113
    7. ' ' → logprob: -17.000011444091797
    8. '
' → logprob: -17.000011444091797
    9. '['' → logprob: -17.125011444091797
    10. '   ' → logprob: -17.375011444091797

Token 3399: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20141762495040894
    2. '1' → logprob: -1.7014176845550537
    3. '"' → logprob: -13.451417922973633
    4. ''x' → logprob: -13.451417922973633
    5. ''''' → logprob: -14.451417922973633
    6. 'x' → logprob: -14.951417922973633
    7. ' '' → logprob: -16.076417922973633
    8. '')' → logprob: -16.076417922973633
    9. '`' → logprob: -16.201417922973633
    10. '['' → logprob: -16.451417922973633

Token 3400: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15245918929576874
    2. '           ' → logprob: -2.027459144592285
    3. ':' → logprob: -4.902459144592285
    4. '):
' → logprob: -6.652459144592285
    5. '       ' → logprob: -7.152459144592285
    6. '          ' → logprob: -9.527459144592285
    7. '':
' → logprob: -10.027459144592285
    8. ''):
' → logprob: -10.527459144592285
    9. '         ' → logprob: -10.777459144592285
    10. '```' → logprob: -11.152459144592285

Token 3401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001017551330733113
    2. '       ' → logprob: -9.875102043151855
    3. '```' → logprob: -10.375102043151855
    4. '               ' → logprob: -11.375102043151855
    5. 'fixed' → logprob: -12.125102043151855
    6. '``' → logprob: -14.125102043151855
    7. ' fixed' → logprob: -14.375102043151855
    8. '          ' → logprob: -15.375102043151855
    9. '   ' → logprob: -15.750102043151855
    10. '		' → logprob: -16.00010108947754

Token 3402: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.0071336389519274235
    2. '           ' → logprob: -5.007133483886719
    3. ' fixed' → logprob: -8.257133483886719
    4. '       ' → logprob: -8.757133483886719
    5. '```' → logprob: -14.257133483886719
    6. '   ' → logprob: -15.257133483886719
    7. '.fixed' → logprob: -15.757133483886719
    8. '
' → logprob: -15.757133483886719
    9. '               ' → logprob: -15.882133483886719
    10. '``' → logprob: -16.13213348388672

Token 3403: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -6.988221684878226e-06
    2. 'y' → logprob: -11.875006675720215
    3. '_x' → logprob: -18.12500762939453
    4. '   ' → logprob: -19.00000762939453
    5. '```' → logprob: -19.62500762939453
    6. '	y' → logprob: -19.87500762939453
    7. '_' → logprob: -19.87500762939453
    8. 'fixed' → logprob: -19.87500762939453
    9. '_fixed' → logprob: -20.37500762939453
    10. '\' → logprob: -21.12500762939453

Token 3404: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.869017852295656e-06
    2. 'ones' → logprob: -12.500006675720215
    3. '_y' → logprob: -13.000006675720215
    4. 'y' → logprob: -15.375006675720215
    5. '_bits' → logprob: -15.500006675720215
    6. '_
' → logprob: -16.25000762939453
    7. '1' → logprob: -16.62500762939453
    8. '\' → logprob: -16.75000762939453
    9. '```' → logprob: -17.62500762939453
    10. '=' → logprob: -17.75000762939453

Token 3405: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -9.364928700961173e-05
    2. '1' → logprob: -9.500093460083008
    3. ' ones' → logprob: -12.125093460083008
    4. 'ons' → logprob: -13.000093460083008
    5. '_' → logprob: -13.250093460083008
    6. 'one' → logprob: -13.375093460083008
    7. '0' → logprob: -13.375093460083008
    8. 'ONES' → logprob: -13.375093460083008
    9. '```' → logprob: -13.875093460083008
    10. '
' → logprob: -14.375093460083008

Token 3406: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3134264051914215
    2. ' +=' → logprob: -1.3134263753890991
    3. '       ' → logprob: -9.18842601776123
    4. '   ' → logprob: -10.18842601776123
    5. '           ' → logprob: -11.81342601776123
    6. '        ' → logprob: -12.06342601776123
    7. '    ' → logprob: -12.81342601776123
    8. '+' → logprob: -13.06342601776123
    9. '=' → logprob: -13.06342601776123
    10. ']+=' → logprob: -13.18842601776123

Token 3407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -19.375
    4. '+' → logprob: -21.125
    5. '=' → logprob: -21.5
    6. '0' → logprob: -22.75
    7. '   ' → logprob: -23.125
    8. '>' → logprob: -23.125
    9. '۱' → logprob: -23.375
    10. '１' → logprob: -23.375

Token 3408: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05680070072412491
    2. '       ' → logprob: -2.931800603866577
    3. '```' → logprob: -6.431800842285156
    4. '<|end|>' → logprob: -8.931800842285156
    5. '   ' → logprob: -9.681800842285156
    6. '               ' → logprob: -9.931800842285156
    7. '``' → logprob: -11.306800842285156
    8. '          ' → logprob: -12.056800842285156
    9. '
' → logprob: -12.056800842285156
    10. ')' → logprob: -12.056800842285156

Token 3409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01935451291501522
    2. '       ' → logprob: -4.019354343414307
    3. '```' → logprob: -6.769354343414307
    4. '               ' → logprob: -10.769354820251465
    5. 'continue' → logprob: -10.894354820251465
    6. '   ' → logprob: -12.269354820251465
    7. '``' → logprob: -12.644354820251465
    8. '          ' → logprob: -13.144354820251465
    9. '<|end|>' → logprob: -13.394354820251465
    10. '
' → logprob: -14.019354820251465

Token 3410: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -6.988221684878226e-06
    2. '           ' → logprob: -12.750006675720215
    3. ' y' → logprob: -12.875006675720215
    4. '       ' → logprob: -13.750006675720215
    5. '```' → logprob: -15.000006675720215
    6. '   ' → logprob: -16.62500762939453
    7. '``' → logprob: -18.12500762939453
    8. '	y' → logprob: -18.75000762939453
    9. '
' → logprob: -19.00000762939453
    10. '               ' → logprob: -19.37500762939453

Token 3411: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -2.3199920178740285e-05
    2. 'bits' → logprob: -10.750022888183594
    3. 'Bits' → logprob: -14.500022888183594
    4. '```' → logprob: -15.500022888183594
    5. '_BITS' → logprob: -15.500022888183594
    6. '[' → logprob: -15.750022888183594
    7. '.append' → logprob: -16.125022888183594
    8. '_tokens' → logprob: -16.625022888183594
    9. '_' → logprob: -16.875022888183594
    10. '_list' → logprob: -16.875022888183594

Token 3412: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.015987088903784752
    2. '_bits' → logprob: -4.640986919403076
    3. '.append' → logprob: -5.640986919403076
    4. 'append' → logprob: -6.765986919403076
    5. 'idx' → logprob: -7.390986919403076
    6. 'list' → logprob: -7.640986919403076
    7. 'bits' → logprob: -8.640987396240234
    8. '[idx' → logprob: -8.765987396240234
    9. 'List' → logprob: -11.140987396240234
    10. '=' → logprob: -11.140987396240234

Token 3413: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1318875446449965e-05
    2. 'append' → logprob: -10.625041007995605
    3. '.' → logprob: -11.000041007995605
    4. 'Append' → logprob: -15.750041007995605
    5. '_append' → logprob: -16.375041961669922
    6. '.app' → logprob: -17.125041961669922
    7. '.Append' → logprob: -17.500041961669922
    8. '```' → logprob: -17.625041961669922
    9. ' .' → logprob: -17.750041961669922
    10. ' append' → logprob: -18.875041961669922

Token 3414: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' ' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '[' → logprob: -20.125001907348633
    6. '```' → logprob: -20.125001907348633
    7. '0' → logprob: -20.625001907348633
    8. '
' → logprob: -21.000001907348633
    9. '(
' → logprob: -21.750001907348633
    10. '=' → logprob: -21.875001907348633

Token 3415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -20.125
    5. '0' → logprob: -20.875
    6. '`' → logprob: -21.75
    7. '(' → logprob: -21.875
    8. '2' → logprob: -21.875
    9. '
' → logprob: -22.4375
    10. '[' → logprob: -22.75

Token 3416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6814650297164917
    2. '       ' → logprob: -1.1814650297164917
    3. ')
' → logprob: -1.6814650297164917
    4. '<|end|>' → logprob: -7.306465148925781
    5. '   ' → logprob: -8.431465148925781
    6. '```' → logprob: -9.306465148925781
    7. '
' → logprob: -10.056465148925781
    8. '')' → logprob: -10.306465148925781
    9. '#' → logprob: -10.306465148925781
    10. 'elif' → logprob: -10.681465148925781

Token 3417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031377444975078106
    2. 'elif' → logprob: -8.250313758850098
    3. '```' → logprob: -10.250313758850098
    4. '   ' → logprob: -11.375313758850098
    5. '
' → logprob: -13.375313758850098
    6. 'continue' → logprob: -13.375313758850098
    7. '           ' → logprob: -13.625313758850098
    8. ' elif' → logprob: -15.125313758850098
    9. '``' → logprob: -15.500313758850098
    10. ' ' → logprob: -15.750313758850098

Token 3418: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0052891382947564125
    2. '       ' → logprob: -5.255289077758789
    3. ' elif' → logprob: -9.880289077758789
    4. '   ' → logprob: -12.755289077758789
    5. '```' → logprob: -14.130289077758789
    6. '
' → logprob: -15.255289077758789
    7. '	elif' → logprob: -15.630289077758789
    8. '#elif' → logprob: -16.00528907775879
    9. 'el' → logprob: -16.88028907775879
    10. 'else' → logprob: -18.00528907775879

Token 3419: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00671809446066618
    2. ' c' → logprob: -5.006718158721924
    3. ''' → logprob: -13.256717681884766
    4. '   ' → logprob: -15.256717681884766
    5. '       ' → logprob: -15.381717681884766
    6. ' ' → logprob: -15.631717681884766
    7. '0' → logprob: -16.006717681884766
    8. '     ' → logprob: -17.381717681884766
    9. '	c' → logprob: -17.506717681884766
    10. '`' → logprob: -17.631717681884766

Token 3420: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10196734219789505
    2. ' ==' → logprob: -2.3519673347473145
    3. '=='' → logprob: -6.3519673347473145
    4. '=' → logprob: -12.601967811584473
    5. ''' → logprob: -12.851967811584473
    6. ' =='' → logprob: -12.976967811584473
    7. '       ' → logprob: -13.601967811584473
    8. '==
' → logprob: -13.851967811584473
    9. 'in' → logprob: -13.976967811584473
    10. '=="' → logprob: -14.226967811584473

Token 3421: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00018125296628568321
    2. '0' → logprob: -8.750181198120117
    3. ' '' → logprob: -11.250181198120117
    4. '`' → logprob: -11.750181198120117
    5. ' ' → logprob: -14.000181198120117
    6. '('' → logprob: -14.500181198120117
    7. '"' → logprob: -15.250181198120117
    8. '['' → logprob: -16.250181198120117
    9. '```' → logprob: -16.875181198120117
    10. '   ' → logprob: -17.000181198120117

Token 3422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602746844291687
    2. ''' → logprob: -1.9102747440338135
    3. ' ' → logprob: -10.535274505615234
    4. '`' → logprob: -11.785274505615234
    5. '"' → logprob: -12.160274505615234
    6. ' '' → logprob: -12.785274505615234
    7. '```' → logprob: -13.160274505615234
    8. '
' → logprob: -14.035274505615234
    9. '('' → logprob: -14.035274505615234
    10. 'x' → logprob: -14.160274505615234

Token 3423: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3624882698059082
    2. ':
' → logprob: -1.4874882698059082
    3. '):
' → logprob: -2.862488269805908
    4. ':' → logprob: -4.487488269805908
    5. '       ' → logprob: -5.862488269805908
    6. ')' → logprob: -6.112488269805908
    7. '          ' → logprob: -6.737488269805908
    8. ''):
' → logprob: -7.237488269805908
    9. '):' → logprob: -7.362488269805908
    10. '<|end|>' → logprob: -7.862488269805908

Token 3424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01215534470975399
    2. '```' → logprob: -4.512155532836914
    3. '       ' → logprob: -7.262155532836914
    4. '``' → logprob: -8.887155532836914
    5. 'y' → logprob: -9.387155532836914
    6. '               ' → logprob: -9.512155532836914
    7. ' y' → logprob: -9.762155532836914
    8. '   ' → logprob: -11.387155532836914
    9. '          ' → logprob: -12.137155532836914
    10. '[' → logprob: -12.387155532836914

Token 3425: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.022693252190947533
    2. '0' → logprob: -4.272693157196045
    3. '           ' → logprob: -5.272693157196045
    4. ' y' → logprob: -5.772693157196045
    5. '       ' → logprob: -8.772693634033203
    6. '```' → logprob: -9.522693634033203
    7. 'x' → logprob: -11.147693634033203
    8. '``' → logprob: -12.022693634033203
    9. ')y' → logprob: -14.397693634033203
    10. '        ' → logprob: -14.897693634033203

Token 3426: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -3.690834273584187e-05
    2. 'bits' → logprob: -10.25003719329834
    3. 'Bits' → logprob: -13.87503719329834
    4. '_list' → logprob: -15.75003719329834
    5. '_BITS' → logprob: -15.75003719329834
    6. 'append' → logprob: -16.125036239624023
    7. '.append' → logprob: -17.000036239624023
    8. '```' → logprob: -17.750036239624023
    9. '
' → logprob: -18.250036239624023
    10. '_' → logprob: -18.625036239624023

Token 3427: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00036299455678090453
    2. 'append' → logprob: -8.37536334991455
    3. '.append' → logprob: -9.12536334991455
    4. 'list' → logprob: -10.87536334991455
    5. '           ' → logprob: -12.75036334991455
    6. 'List' → logprob: -14.75036334991455
    7. '_bits' → logprob: -15.37536334991455
    8. '       ' → logprob: -15.50036334991455
    9. '_lists' → logprob: -15.62536334991455
    10. '_LIST' → logprob: -15.75036334991455

Token 3428: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015421189600601792
    2. 'append' → logprob: -6.501542091369629
    3. '           ' → logprob: -11.001542091369629
    4. '=' → logprob: -11.751542091369629
    5. 'Append' → logprob: -11.876542091369629
    6. '.' → logprob: -12.376542091369629
    7. '_append' → logprob: -13.251542091369629
    8. '          ' → logprob: -14.501542091369629
    9. '+=' → logprob: -14.876542091369629
    10. '```' → logprob: -15.126542091369629

Token 3429: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. ' ' → logprob: -18.0
    4. '[' → logprob: -21.375
    5. '۰' → logprob: -22.375
    6. ' (' → logprob: -22.625
    7. '   ' → logprob: -24.375
    8. '
' → logprob: -24.5
    9. '```' → logprob: -24.625
    10. '00' → logprob: -24.75

Token 3430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -20.5
    5. '```' → logprob: -21.625
    6. '[' → logprob: -22.0625
    7. '(' → logprob: -22.25
    8. 'def' → logprob: -22.5
    9. '=' → logprob: -22.5625
    10. '2' → logprob: -23.0625

Token 3431: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22465692460536957
    2. ')' → logprob: -2.099656820297241
    3. '           ' → logprob: -3.849656820297241
    4. ')
' → logprob: -3.974656820297241
    5. '```' → logprob: -3.974656820297241
    6. '<|end|>' → logprob: -4.22465705871582
    7. '):
' → logprob: -6.22465705871582
    8. '   ' → logprob: -7.09965705871582
    9. '
' → logprob: -7.22465705871582
    10. ':
' → logprob: -7.84965705871582

Token 3432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05066397413611412
    2. '```' → logprob: -3.175663948059082
    3. 'else' → logprob: -5.425663948059082
    4. '           ' → logprob: -5.800663948059082
    5. '``' → logprob: -9.425663948059082
    6. 'elif' → logprob: -9.675663948059082
    7. ' else' → logprob: -10.300663948059082
    8. '   ' → logprob: -11.050663948059082
    9. '{
' → logprob: -11.675663948059082
    10. '
' → logprob: -12.550663948059082

Token 3433: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002894274890422821
    2. 'else' → logprob: -6.252894401550293
    3. '```' → logprob: -7.252894401550293
    4. 'elif' (adapté à ' elif') → logprob: -8.377894401550293
    5. '   ' → logprob: -11.377894401550293
    6. ' else' → logprob: -11.627894401550293
    7. '           ' → logprob: -12.502894401550293
    8. '``' → logprob: -13.127894401550293
    9. ' elif' → logprob: -14.627894401550293
    10. '	' → logprob: -15.877894401550293

Token 3434: ' c' (ID: 274)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.002397293923422694
    2. ' '' → logprob: -6.627397060394287
    3. ' x' → logprob: -7.752397060394287
    4. 'x' → logprob: -8.002397537231445
    5. ''' → logprob: -8.127397537231445
    6. ' ' → logprob: -12.252397537231445
    7. '   ' → logprob: -12.877397537231445
    8. '"x' → logprob: -13.502397537231445
    9. '
' → logprob: -14.377397537231445
    10. '       ' → logprob: -14.877397537231445

Token 3435: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34145450592041016
    2. ' ==' → logprob: -1.3414545059204102
    3. '=='' → logprob: -3.59145450592041
    4. ''' → logprob: -9.46645450592041
    5. '           ' → logprob: -10.21645450592041
    6. '```' → logprob: -10.34145450592041
    7. '==
' → logprob: -10.46645450592041
    8. ' =='' → logprob: -10.84145450592041
    9. '       ' → logprob: -11.71645450592041
    10. ':' → logprob: -11.84145450592041

Token 3436: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0006354739889502525
    2. 'x' → logprob: -7.375635623931885
    3. ' '' → logprob: -12.875635147094727
    4. ' x' → logprob: -13.000635147094727
    5. ' ' → logprob: -13.625635147094727
    6. '   ' → logprob: -14.125635147094727
    7. '"x' → logprob: -14.125635147094727
    8. '```' → logprob: -15.500635147094727
    9. '['' → logprob: -15.750635147094727
    10. '	x' → logprob: -15.875635147094727

Token 3437: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.251935213804245
    2. ''x' → logprob: -1.5019352436065674
    3. ' x' → logprob: -12.501935005187988
    4. '"x' → logprob: -13.876935005187988
    5. '```' → logprob: -14.751935005187988
    6. '$x' → logprob: -15.376935005187988
    7. '['' → logprob: -15.876935005187988
    8. '	x' → logprob: -16.251935958862305
    9. '{x' → logprob: -16.501935958862305
    10. '-x' → logprob: -17.001935958862305

Token 3438: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.8305597901344299
    2. '           ' → logprob: -1.5805597305297852
    3. ':
' → logprob: -1.5805597305297852
    4. ''):
' → logprob: -2.205559730529785
    5. '):
' → logprob: -4.080559730529785
    6. ':' → logprob: -4.830559730529785
    7. '       ' → logprob: -5.080559730529785
    8. '':' → logprob: -5.580559730529785
    9. ''' → logprob: -5.705559730529785
    10. '```' → logprob: -6.580559730529785

Token 3439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003527136752381921
    2. '```' → logprob: -5.8785271644592285
    3. '       ' → logprob: -7.3785271644592285
    4. '{
' → logprob: -10.12852668762207
    5. '               ' → logprob: -10.50352668762207
    6. '``' → logprob: -11.00352668762207
    7. '
' → logprob: -11.75352668762207
    8. '   ' → logprob: -13.75352668762207
    9. '		' → logprob: -14.25352668762207
    10. '          ' → logprob: -14.50352668762207

Token 3440: ' y' (ID: 342)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11772478371858597
    2. 'unknown' → logprob: -2.242724895477295
    3. ' unknown' → logprob: -5.492724895477295
    4. '       ' → logprob: -7.867724895477295
    5. '
' → logprob: -8.992724418640137
    6. '   ' → logprob: -9.117724418640137
    7. '               ' → logprob: -9.992724418640137
    8. 'y' (adapté à ' y') → logprob: -10.492724418640137
    9. '```' → logprob: -10.492724418640137
    10. '``' → logprob: -11.492724418640137

Token 3441: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -6.034592388459714e-06
    2. 'bits' → logprob: -12.250005722045898
    3. 'Bits' → logprob: -14.125005722045898
    4. '=' → logprob: -15.500005722045898
    5. '_BITS' → logprob: -15.625005722045898
    6. '```' → logprob: -17.2500057220459
    7. '_list' → logprob: -17.7500057220459
    8. '_tokens' → logprob: -18.0000057220459
    9. '_parts' → logprob: -18.7500057220459
    10. '_' → logprob: -18.8750057220459

Token 3442: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1012858971953392
    2. '_bits' → logprob: -2.351285934448242
    3. 'bits' → logprob: -6.976285934448242
    4. 'list' → logprob: -9.226285934448242
    5. '.append' → logprob: -11.101285934448242
    6. '           ' → logprob: -11.476285934448242
    7. 'List' → logprob: -11.851285934448242
    8. 'Bits' → logprob: -13.351285934448242
    9. '```' → logprob: -13.351285934448242
    10. '       ' → logprob: -13.351285934448242

Token 3443: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09245958179235458
    2. '+=' → logprob: -2.5924596786499023
    3. '=' → logprob: -4.592459678649902
    4. 'append' → logprob: -6.092459678649902
    5. '           ' → logprob: -6.967459678649902
    6. ' +=' → logprob: -9.842459678649902
    7. 'Append' → logprob: -10.592459678649902
    8. '_append' → logprob: -11.092459678649902
    9. '.=' → logprob: -11.467459678649902
    10. '          ' → logprob: -11.592459678649902

Token 3444: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141996443271637
    2. '(-' → logprob: -1.7014199495315552
    3. ' -' → logprob: -11.951419830322266
    4. '(' → logprob: -15.701419830322266
    5. '[-' → logprob: -17.951419830322266
    6. '−' → logprob: -19.201419830322266
    7. ' (-' → logprob: -19.326419830322266
    8. '```' → logprob: -20.076419830322266
    9. '{-' → logprob: -20.326419830322266
    10. '(
' → logprob: -20.451419830322266

Token 3445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.75
    3. ' ' → logprob: -17.375
    4. '<|end|>' → logprob: -17.5
    5. '=' → logprob: -19.0
    6. '[' → logprob: -19.5
    7. '0' → logprob: -19.8125
    8. '۱' → logprob: -19.9375
    9. '```' → logprob: -20.0
    10. '...' → logprob: -20.3125

Token 3446: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04632052406668663
    2. ')
' → logprob: -3.1713204383850098
    3. ')' → logprob: -6.04632043838501
    4. '```' → logprob: -7.42132043838501
    5. ',' → logprob: -9.296320915222168
    6. '   ' → logprob: -9.671320915222168
    7. '       ' → logprob: -10.046320915222168
    8. '
' → logprob: -10.421320915222168
    9. '``' → logprob: -10.796320915222168
    10. '')
' → logprob: -10.796320915222168

Token 3447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020115631923545152
    2. '```' → logprob: -9.375201225280762
    3. '       ' → logprob: -9.750201225280762
    4. '               ' → logprob: -10.125201225280762
    5. '		' → logprob: -12.125201225280762
    6. '``' → logprob: -13.125201225280762
    7. '
' → logprob: -13.500201225280762
    8. ',' → logprob: -13.500201225280762
    9. '          ' → logprob: -13.500201225280762
    10. '{
' → logprob: -13.625201225280762

Token 3448: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.026662519201636314
    2. '           ' → logprob: -3.776662588119507
    3. ' unknown' → logprob: -5.776662349700928
    4. '```' → logprob: -8.526662826538086
    5. '       ' → logprob: -10.276662826538086
    6. '   ' → logprob: -10.276662826538086
    7. '               ' → logprob: -10.901662826538086
    8. '``' → logprob: -11.901662826538086
    9. 'Unknown' → logprob: -12.526662826538086
    10. '++' → logprob: -12.526662826538086

Token 3449: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -4.0484450437361374e-05
    2. 'y' → logprob: -10.125040054321289
    3. '_' → logprob: -15.875040054321289
    4. '```' → logprob: -16.37504005432129
    5. '1' → logprob: -16.87504005432129
    6. '   ' → logprob: -17.12504005432129
    7. '_user' → logprob: -17.25004005432129
    8. 'Y' → logprob: -17.37504005432129
    9. '_x' → logprob: -18.00004005432129
    10. '_you' → logprob: -18.37504005432129

Token 3450: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014272687956690788
    2. ' +=' → logprob: -4.264272689819336
    3. '=' → logprob: -9.139272689819336
    4. ']+=' → logprob: -14.389272689819336
    5. '+' → logprob: -14.764272689819336
    6. '   ' → logprob: -14.889272689819336
    7. '```' → logprob: -15.014272689819336
    8. '       ' → logprob: -16.639272689819336
    9. '+=(' → logprob: -16.764272689819336
    10. '           ' → logprob: -17.014272689819336

Token 3451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '=' → logprob: -17.75
    4. '<|end|>' → logprob: -17.875
    5. '<|end|>' → logprob: -19.0
    6. '0' → logprob: -19.75
    7. 'unknown' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. '۱' → logprob: -21.125
    10. '+' → logprob: -21.125

Token 3452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002311073010787368
    2. '   ' → logprob: -6.1273112297058105
    3. '           ' → logprob: -9.252310752868652
    4. 'else' → logprob: -10.752310752868652
    5. '```' → logprob: -11.877310752868652
    6. ' else' → logprob: -13.877310752868652
    7. 'elif' → logprob: -14.877310752868652
    8. 'continue' → logprob: -15.252310752868652
    9. ' ' → logprob: -16.25231170654297
    10. 'import' → logprob: -17.62731170654297

Token 3453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004638741724193096
    2. '```' → logprob: -5.629638671875
    3. '           ' → logprob: -7.254638671875
    4. 'else' → logprob: -8.629638671875
    5. '   ' → logprob: -8.879638671875
    6. '``' → logprob: -12.004638671875
    7. ' else' → logprob: -12.754638671875
    8. 'continue' → logprob: -13.004638671875
    9. 'elif' → logprob: -14.129638671875
    10. '
' → logprob: -14.379638671875

Token 3454: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010875551030039787
    2. 'else' (adapté à ' else') → logprob: -5.010875701904297
    3. '   ' → logprob: -5.635875701904297
    4. '```' → logprob: -7.635875701904297
    5. 'elif' → logprob: -9.760875701904297
    6. '           ' → logprob: -10.885875701904297
    7. ' else' → logprob: -10.885875701904297
    8. 'continue' → logprob: -13.510875701904297
    9. '``' → logprob: -13.510875701904297
    10. ' ' → logprob: -13.760875701904297

Token 3455: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8080589771270752
    2. ':' → logprob: -1.1830589771270752
    3. '           ' → logprob: -2.183058977127075
    4. '       ' → logprob: -2.308058977127075
    5. ':return' → logprob: -3.558058977127075
    6. '=' → logprob: -5.808058738708496
    7. '   ' → logprob: -6.933058738708496
    8. '               ' → logprob: -7.058058738708496
    9. 'return' → logprob: -7.558058738708496
    10. ' return' → logprob: -7.683058738708496

Token 3456: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19268958270549774
    2. '           ' → logprob: -1.8176895380020142
    3. '```' → logprob: -4.442689418792725
    4. '   ' → logprob: -7.942689418792725
    5. '               ' → logprob: -8.442689895629883
    6. '	       ' → logprob: -8.692689895629883
    7. '``' → logprob: -9.442689895629883
    8. 'return' → logprob: -9.692689895629883
    9. ':return' → logprob: -10.567689895629883
    10. ')' → logprob: -10.567689895629883

Token 3457: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00018542143516242504
    2. '           ' → logprob: -9.000185012817383
    3. ' return' → logprob: -9.750185012817383
    4. '               ' → logprob: -13.875185012817383
    5. '       ' → logprob: -14.125185012817383
    6. '```' → logprob: -14.250185012817383
    7. '   ' → logprob: -14.500185012817383
    8. '
' → logprob: -15.250185012817383
    9. '	return' → logprob: -15.250185012817383
    10. '{return' → logprob: -15.375185012817383

Token 3458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -21.500261306762695
    4. 'None' → logprob: -21.750261306762695
    5. '(' → logprob: -22.000261306762695
    6. '  ' → logprob: -22.375261306762695
    7. '000' → logprob: -22.625261306762695
    8. '
' → logprob: -22.625261306762695
    9. 'False' → logprob: -22.625261306762695
    10. ' 
' → logprob: -22.875261306762695

Token 3459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '000' → logprob: -21.375
    4. '```' → logprob: -21.375
    5. '۰' → logprob: -22.25
    6. '<|end|>' → logprob: -22.25
    7. 'False' → logprob: -23.0
    8. '`' → logprob: -23.25
    9. ')' → logprob: -23.375
    10. '00' → logprob: -23.375

Token 3460: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001519503304734826
    2. '```' → logprob: -6.751519680023193
    3. '
' → logprob: -8.001519203186035
    4. '#' → logprob: -12.126519203186035
    5. ')' → logprob: -12.376519203186035
    6. '<|end|>' → logprob: -14.001519203186035
    7. '       ' → logprob: -14.251519203186035
    8. '``' → logprob: -14.376519203186035
    9. 'Continue' → logprob: -14.751519203186035
    10. '    
' → logprob: -14.751519203186035

Token 3461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015254409983754158
    2. '```' → logprob: -4.265254497528076
    3. '
' → logprob: -7.015254497528076
    4. '       ' → logprob: -8.890254020690918
    5. '``' → logprob: -10.390254020690918
    6. 'Continue' → logprob: -12.390254020690918
    7. '<|end|>' → logprob: -12.765254020690918
    8. '#' → logprob: -12.765254020690918
    9. '           ' → logprob: -12.890254020690918
    10. 'Continu' → logprob: -13.015254020690918

Token 3462: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.025984415784478188
    2. '   ' → logprob: -3.775984525680542
    3. '```' → logprob: -6.525984287261963
    4. '
' → logprob: -7.150984287261963
    5. ' for' → logprob: -8.025984764099121
    6. 'c' → logprob: -9.025984764099121
    7. '    
' → logprob: -11.150984764099121
    8. '``' → logprob: -11.400984764099121
    9. 'b' → logprob: -11.650984764099121
    10. '#' → logprob: -13.525984764099121

Token 3463: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11215650290250778
    2. ' idx' → logprob: -2.362156391143799
    3. 'c' → logprob: -4.737156391143799
    4. 'b' → logprob: -6.737156391143799
    5. ' c' → logprob: -7.237156391143799
    6. '   ' → logprob: -7.612156391143799
    7. 'i' → logprob: -8.112156867980957
    8. ' b' → logprob: -8.737156867980957
    9. '	idx' → logprob: -9.987156867980957
    10. ' ' → logprob: -9.987156867980957

Token 3464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06199076771736145
    2. 'in' → logprob: -2.811990737915039
    3. 'b' → logprob: -11.561990737915039
    4. '   ' → logprob: -11.936990737915039
    5. '```' → logprob: -13.561990737915039
    6. 'In' → logprob: -13.811990737915039
    7. '_in' → logprob: -13.811990737915039
    8. ' ' → logprob: -14.061990737915039
    9. '[' → logprob: -14.936990737915039
    10. '#' → logprob: -15.186990737915039

Token 3465: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.24589894711971283
    2. '[' → logprob: -2.120898962020874
    3. 'b' → logprob: -2.370898962020874
    4. '[y' → logprob: -5.620898723602295
    5. ' y' → logprob: -7.495898723602295
    6. '[b' → logprob: -8.120899200439453
    7. ' [' → logprob: -8.995899200439453
    8. '(' → logprob: -10.745899200439453
    9. '(y' → logprob: -10.870899200439453
    10. '   ' → logprob: -11.370899200439453

Token 3466: '_bits' (ID: 48415)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03229493275284767
    2. '[' → logprob: -3.907294988632202
    3. 'b' → logprob: -5.157294750213623
    4. '_bits' → logprob: -5.407294750213623
    5. '(' → logprob: -7.282294750213623
    6. 'bits' → logprob: -7.532294750213623
    7. '
' → logprob: -10.407295227050781
    8. 'Bits' → logprob: -10.532295227050781
    9. '```' → logprob: -10.532295227050781
    10. '   ' → logprob: -10.782295227050781

Token 3467: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050295718014240265
    2. '2' → logprob: -3.550295829772949
    3. '   ' → logprob: -4.425295829772949
    4. 'b' → logprob: -5.050295829772949
    5. 'in' → logprob: -7.550295829772949
    6. '[
' → logprob: -7.675295829772949
    7. '(' → logprob: -8.30029582977295
    8. ' [' → logprob: -8.42529582977295
    9. '       ' → logprob: -9.05029582977295
    10. '```' → logprob: -9.30029582977295

Token 3468: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2593420445919037
    2. '[' → logprob: -1.509342074394226
    3. '(' → logprob: -5.759342193603516
    4. '1' → logprob: -6.509342193603516
    5. '3' → logprob: -6.634342193603516
    6. '```' → logprob: -7.134342193603516
    7. '7' → logprob: -7.759342193603516
    8. '[
' → logprob: -9.134342193603516
    9. '``' → logprob: -11.259342193603516
    10. ']' → logprob: -11.509342193603516

Token 3469: '_idx' (ID: 15257)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12272138148546219
    2. '2' → logprob: -2.2477214336395264
    3. '_idx' → logprob: -4.997721195220947
    4. 'idx' → logprob: -6.122721195220947
    5. '```' → logprob: -8.122721672058105
    6. '   ' → logprob: -8.997721672058105
    7. '(' → logprob: -9.247721672058105
    8. ']' → logprob: -9.247721672058105
    9. ')' → logprob: -9.747721672058105
    10. '3' → logprob: -9.872721672058105

Token 3470: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44875675439834595
    2. 'in' → logprob: -1.0737566947937012
    3. ':
' → logprob: -4.573756694793701
    4. '   ' → logprob: -5.198756694793701
    5. '       ' → logprob: -6.323756694793701
    6. '[' → logprob: -6.823756694793701
    7. ':' → logprob: -7.448756694793701
    8. ',' → logprob: -8.44875717163086
    9. '):
' → logprob: -9.32375717163086
    10. '```' → logprob: -9.94875717163086

Token 3471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030371559783816338
    2. '```' → logprob: -4.40537166595459
    3. '   ' → logprob: -5.28037166595459
    4. '[' → logprob: -5.28037166595459
    5. ' b' → logprob: -5.65537166595459
    6. ':
' → logprob: -6.65537166595459
    7. 'b' → logprob: -7.03037166595459
    8. ' in' → logprob: -7.15537166595459
    9. '``' → logprob: -8.65537166595459
    10. 'in' → logprob: -8.65537166595459

Token 3472: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0009545749635435641
    2. ' c' → logprob: -7.125954627990723
    3. '```' → logprob: -9.500954627990723
    4. '   ' → logprob: -9.875954627990723
    5. '       ' → logprob: -11.500954627990723
    6. '``' → logprob: -12.500954627990723
    7. '{
' → logprob: -12.625954627990723
    8. '	c' → logprob: -13.250954627990723
    9. '`' → logprob: -13.375954627990723
    10. 'b' → logprob: -14.375954627990723

Token 3473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09825552254915237
    2. ' =' → logprob: -2.5982556343078613
    3. 'in' → logprob: -4.348255634307861
    4. ' in' → logprob: -5.098255634307861
    5. '=b' → logprob: -9.598255157470703
    6. 'b' → logprob: -10.973255157470703
    7. '   ' → logprob: -11.223255157470703
    8. '==' → logprob: -11.348255157470703
    9. '```' → logprob: -12.348255157470703
    10. 'if' → logprob: -12.348255157470703

Token 3474: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0040793512016534805
    2. ' b' → logprob: -5.504079341888428
    3. '   ' → logprob: -13.879079818725586
    4. ' ' → logprob: -17.504079818725586
    5. '(b' → logprob: -18.254079818725586
    6. '	b' → logprob: -18.379079818725586
    7. '[b' → logprob: -18.504079818725586
    8. '  ' → logprob: -18.754079818725586
    9. '       ' → logprob: -19.254079818725586
    10. '    ' → logprob: -19.879079818725586

Token 3475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. 'b' → logprob: -17.875
    4. '[' → logprob: -18.125
    5. ' ' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '`' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. '₂' → logprob: -20.5
    10. 'r' → logprob: -20.5

Token 3476: '[idx' (ID: 25582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28278928995132446
    2. '[idx' → logprob: -1.4077892303466797
    3. '[
' → logprob: -6.65778923034668
    4. 'idx' → logprob: -9.03278923034668
    5. '```' → logprob: -9.03278923034668
    6. '2' → logprob: -9.90778923034668
    7. '[int' → logprob: -11.15778923034668
    8. '   ' → logprob: -11.78278923034668
    9. '[c' → logprob: -12.28278923034668
    10. '[index' → logprob: -12.53278923034668

Token 3477: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06608396768569946
    2. ']' → logprob: -2.9410839080810547
    3. ']==' → logprob: -5.316083908081055
    4. ']=='' → logprob: -5.566083908081055
    5. ']:
' → logprob: -7.816083908081055
    6. 'if' → logprob: -7.941083908081055
    7. '```' → logprob: -8.316083908081055
    8. '=='' → logprob: -8.691083908081055
    9. '==' → logprob: -8.816083908081055
    10. ']>
' → logprob: -8.816083908081055

Token 3478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4538157284259796
    2. '```' → logprob: -1.2038156986236572
    3. 'if' → logprob: -3.5788156986236572
    4. '==' → logprob: -3.9538156986236572
    5. '=='' → logprob: -5.578815937042236
    6. '   ' → logprob: -5.578815937042236
    7. ' if' → logprob: -5.828815937042236
    8. '
' → logprob: -6.078815937042236
    9. '``' → logprob: -6.453815937042236
    10. '{
' → logprob: -7.328815937042236

Token 3479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030737262219190598
    2. '       ' → logprob: -3.7807371616363525
    3. ' if' → logprob: -5.655737400054932
    4. ''' → logprob: -6.655737400054932
    5. '```' → logprob: -7.155737400054932
    6. '{
' → logprob: -7.780737400054932
    7. '   ' → logprob: -7.905737400054932
    8. '
' → logprob: -8.280736923217773
    9. '`' → logprob: -8.530736923217773
    10. 'c' → logprob: -8.905736923217773

Token 3480: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014700113795697689
    2. ' c' → logprob: -4.389699935913086
    3. ''' → logprob: -6.139699935913086
    4. ' '' → logprob: -11.264699935913086
    5. '   ' → logprob: -11.389699935913086
    6. ' ' → logprob: -12.639699935913086
    7. '  ' → logprob: -13.389699935913086
    8. '    ' → logprob: -14.389699935913086
    9. '('' → logprob: -14.389699935913086
    10. '     ' → logprob: -15.139699935913086

Token 3481: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08063474297523499
    2. ' ==' → logprob: -2.580634832382202
    3. ' not' → logprob: -7.080634593963623
    4. '=='' → logprob: -7.580634593963623
    5. 'not' → logprob: -8.080635070800781
    6. 'in' → logprob: -10.330635070800781
    7. ' in' → logprob: -11.205635070800781
    8. '   ' → logprob: -11.705635070800781
    9. ''' → logprob: -11.955635070800781
    10. '[' → logprob: -12.330635070800781

Token 3482: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017576448153704405
    2. '('' → logprob: -7.001757621765137
    3. ' '' → logprob: -7.626757621765137
    4. ''x' → logprob: -8.001757621765137
    5. '1' → logprob: -11.376757621765137
    6. '(' → logprob: -12.876757621765137
    7. ''s' → logprob: -13.001757621765137
    8. ' ' → logprob: -13.501757621765137
    9. ' ('' → logprob: -14.251757621765137
    10. '`' → logprob: -14.626757621765137

Token 3483: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004804734140634537
    2. ''x' → logprob: -5.504804611206055
    3. '1' → logprob: -7.254804611206055
    4. 'x' → logprob: -11.379804611206055
    5. ' '' → logprob: -12.254804611206055
    6. '('' → logprob: -14.004804611206055
    7. '
' → logprob: -14.004804611206055
    8. '['' → logprob: -14.504804611206055
    9. '`' → logprob: -15.504804611206055
    10. ' ' → logprob: -15.879804611206055

Token 3484: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8461782336235046
    2. '':
' → logprob: -1.7211782932281494
    3. '           ' → logprob: -1.8461782932281494
    4. '       ' → logprob: -2.3461782932281494
    5. ''):
' → logprob: -3.2211782932281494
    6. '):
' → logprob: -3.2211782932281494
    7. ':' → logprob: -4.09617805480957
    8. '<|end|>' → logprob: -4.34617805480957
    9. ''' → logprob: -5.09617805480957
    10. '```' → logprob: -5.22117805480957

Token 3485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020103710994590074
    2. '       ' → logprob: -8.875201225280762
    3. '```' → logprob: -9.875201225280762
    4. '{
' → logprob: -12.500201225280762
    5. '               ' → logprob: -13.500201225280762
    6. '   ' → logprob: -13.500201225280762
    7. '          ' → logprob: -13.750201225280762
    8. '``' → logprob: -13.875201225280762
    9. '
' → logprob: -14.500201225280762
    10. '         ' → logprob: -15.500201225280762

Token 3486: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.0019945392850786448
    2. ' fixed' → logprob: -6.751994609832764
    3. '           ' → logprob: -7.501994609832764
    4. '       ' → logprob: -8.251994132995605
    5. 'Fixed' → logprob: -12.501994132995605
    6. '```' → logprob: -12.501994132995605
    7. '.fixed' → logprob: -13.501994132995605
    8. '_fixed' → logprob: -14.126994132995605
    9. '``' → logprob: -14.501994132995605
    10. '   ' → logprob: -15.626994132995605

Token 3487: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -10.500030517578125
    3. 'y' → logprob: -12.750030517578125
    4. '_fixed' → logprob: -18.250030517578125
    5. '```' → logprob: -18.625030517578125
    6. '   ' → logprob: -19.000030517578125
    7. '_x' → logprob: -19.375030517578125
    8. '_w' → logprob: -19.375030517578125
    9. '+' → logprob: -19.500030517578125
    10. '_yes' → logprob: -19.625030517578125

Token 3488: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.97024549683556e-05
    2. 'ones' → logprob: -9.500080108642578
    3. '_y' → logprob: -13.375080108642578
    4. '_bits' → logprob: -13.375080108642578
    5. 'y' → logprob: -15.000080108642578
    6. '_
' → logprob: -15.125080108642578
    7. 'ONES' → logprob: -15.500080108642578
    8. '_one' → logprob: -15.750080108642578
    9. '1' → logprob: -15.750080108642578
    10. '+' → logprob: -16.125080108642578

Token 3489: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -9.014684110297821e-06
    2. '1' → logprob: -12.500008583068848
    3. ' ones' → logprob: -13.000008583068848
    4. 'ONES' → logprob: -13.625008583068848
    5. 'one' → logprob: -14.625008583068848
    6. 'ons' → logprob: -15.000008583068848
    7. '_' → logprob: -15.000008583068848
    8. '
' → logprob: -15.875008583068848
    9. '.ones' → logprob: -16.000009536743164
    10. '0' → logprob: -16.375009536743164

Token 3490: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31334665417671204
    2. ' +=' → logprob: -1.3133466243743896
    3. '+' → logprob: -10.563346862792969
    4. '       ' → logprob: -11.063346862792969
    5. ']+=' → logprob: -11.063346862792969
    6. '           ' → logprob: -11.563346862792969
    7. '   ' → logprob: -12.063346862792969
    8. '```' → logprob: -12.188346862792969
    9. '=' → logprob: -12.438346862792969
    10. ')' → logprob: -14.313346862792969

Token 3491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -20.0
    4. '`' → logprob: -23.0
    5. '+' → logprob: -23.0
    6. '   ' → logprob: -23.5
    7. '１' → logprob: -23.625
    8. '
' → logprob: -23.875
    9. '0' → logprob: -24.0
    10. '<|end|>' → logprob: -24.5

Token 3492: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006965887732803822
    2. '```' → logprob: -7.625696659088135
    3. '          ' → logprob: -9.500696182250977
    4. '       ' → logprob: -10.000696182250977
    5. '=' → logprob: -10.625696182250977
    6. '<|end|>' → logprob: -11.375696182250977
    7. '1' → logprob: -11.500696182250977
    8. '
' → logprob: -12.375696182250977
    9. '+=' → logprob: -12.375696182250977
    10. '``' → logprob: -12.500696182250977

Token 3493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006906117312610149
    2. '```' → logprob: -5.131906032562256
    3. '       ' → logprob: -7.256906032562256
    4. '          ' → logprob: -9.381906509399414
    5. ' y' → logprob: -10.256906509399414
    6. '<|end|>' → logprob: -10.506906509399414
    7. '``' → logprob: -10.631906509399414
    8. ' ' → logprob: -11.256906509399414
    9. '               ' → logprob: -11.256906509399414
    10. '
' → logprob: -11.881906509399414

Token 3494: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00011093381908722222
    2. '1' → logprob: -9.500110626220703
    3. '           ' → logprob: -10.875110626220703
    4. ' y' → logprob: -11.750110626220703
    5. '       ' → logprob: -12.125110626220703
    6. '```' → logprob: -13.375110626220703
    7. ''y' → logprob: -13.625110626220703
    8. '   ' → logprob: -14.875110626220703
    9. '``' → logprob: -16.250110626220703
    10. '2' → logprob: -16.625110626220703

Token 3495: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0028017910663038492
    2. '2' → logprob: -6.002801895141602
    3. 'bits' → logprob: -8.252801895141602
    4. 'Bits' → logprob: -10.377801895141602
    5. '[' → logprob: -11.377801895141602
    6. 'b' → logprob: -12.377801895141602
    7. '_BITS' → logprob: -12.377801895141602
    8. '1' → logprob: -12.627801895141602
    9. '```' → logprob: -12.877801895141602
    10. '
' → logprob: -13.627801895141602

Token 3496: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0006514362758025527
    2. 'list' → logprob: -7.5006513595581055
    3. 'append' → logprob: -10.375651359558105
    4. 'bits' → logprob: -10.625651359558105
    5. '.append' → logprob: -10.750651359558105
    6. '_bits' → logprob: -11.250651359558105
    7. 'List' → logprob: -11.875651359558105
    8. '[' → logprob: -14.625651359558105
    9. '```' → logprob: -15.750651359558105
    10. '   ' → logprob: -15.875651359558105

Token 3497: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.759734732331708e-05
    2. 'append' → logprob: -11.000017166137695
    3. '.' → logprob: -14.000017166137695
    4. '_append' → logprob: -17.250017166137695
    5. 'Append' → logprob: -17.750017166137695
    6. '```' → logprob: -18.875017166137695
    7. '.extend' → logprob: -19.000017166137695
    8. '	append' → logprob: -19.000017166137695
    9. '.Append' → logprob: -19.125017166137695
    10. ' .' → logprob: -19.500017166137695

Token 3498: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. '(' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.633614540100098
    4. '[' → logprob: -16.133615493774414
    5. '0' → logprob: -17.133615493774414
    6. ' (' → logprob: -18.883615493774414
    7. '```' → logprob: -19.633615493774414
    8. '   ' → logprob: -20.633615493774414
    9. '(
' → logprob: -20.633615493774414
    10. '<|end|>' → logprob: -21.008615493774414

Token 3499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '0' → logprob: -21.25
    4. '```' → logprob: -21.25
    5. '2' → logprob: -21.625
    6. '[' → logprob: -22.375
    7. '`' → logprob: -22.75
    8. '   ' → logprob: -23.125
    9. '(' → logprob: -23.5
    10. '۱' → logprob: -23.5625

Token 3500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16086962819099426
    2. '       ' → logprob: -2.285869598388672
    3. ')
' → logprob: -3.160869598388672
    4. '<|end|>' → logprob: -5.785869598388672
    5. '```' → logprob: -7.285869598388672
    6. '):
' → logprob: -8.910869598388672
    7. '
' → logprob: -9.035869598388672
    8. '           ' → logprob: -9.160869598388672
    9. '   ' → logprob: -9.160869598388672
    10. '#' → logprob: -9.910869598388672

Token 3501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009412972256541252
    2. '           ' → logprob: -5.50941276550293
    3. '```' → logprob: -5.50941276550293
    4. 'elif' → logprob: -6.75941276550293
    5. '
' → logprob: -9.38441276550293
    6. '   ' → logprob: -11.63441276550293
    7. '``' → logprob: -11.75941276550293
    8. ' elif' → logprob: -12.75941276550293
    9. '               ' → logprob: -13.00941276550293
    10. '<|end|>' → logprob: -14.13441276550293

Token 3502: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.004087185952812433
    2. '       ' → logprob: -5.504086971282959
    3. ' elif' → logprob: -12.004087448120117
    4. '```' → logprob: -13.254087448120117
    5. '   ' → logprob: -14.754087448120117
    6. '
' → logprob: -15.379087448120117
    7. '           ' → logprob: -16.004087448120117
    8. '	elif' → logprob: -16.379087448120117
    9. '#elif' → logprob: -16.629087448120117
    10. 'else' → logprob: -17.379087448120117

Token 3503: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033546582562848926
    2. ' c' → logprob: -8.000335693359375
    3. '(c' → logprob: -18.125335693359375
    4. '   ' → logprob: -18.375335693359375
    5. 'b' → logprob: -18.750335693359375
    6. '           ' → logprob: -19.250335693359375
    7. '	c' → logprob: -19.625335693359375
    8. '       ' → logprob: -19.625335693359375
    9. ''' → logprob: -20.000335693359375
    10. ')c' → logprob: -20.250335693359375

Token 3504: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5910881757736206
    2. '==' → logprob: -0.8410881757736206
    3. ' in' → logprob: -5.34108829498291
    4. '[' → logprob: -5.46608829498291
    5. '=='' → logprob: -5.71608829498291
    6. 'in' → logprob: -6.71608829498291
    7. ' not' → logprob: -8.34108829498291
    8. ''' → logprob: -8.71608829498291
    9. '```' → logprob: -8.71608829498291
    10. ' =='' → logprob: -8.84108829498291

Token 3505: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.52788148727268e-05
    2. ''x' → logprob: -10.500064849853516
    3. '('' → logprob: -11.125064849853516
    4. ' '' → logprob: -11.500064849853516
    5. '0' → logprob: -12.125064849853516
    6. '`' → logprob: -12.750064849853516
    7. '['' → logprob: -13.875064849853516
    8. '
' → logprob: -14.125064849853516
    9. '"' → logprob: -14.750064849853516
    10. '[' → logprob: -15.000064849853516

Token 3506: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019668763503432274
    2. '0' → logprob: -4.2696685791015625
    3. ''x' → logprob: -5.2696685791015625
    4. 'x' → logprob: -8.019668579101562
    5. ''o' → logprob: -12.144668579101562
    6. '`' → logprob: -12.269668579101562
    7. ''z' → logprob: -13.269668579101562
    8. ' '' → logprob: -14.394668579101562
    9. '"' → logprob: -14.519668579101562
    10. '```' → logprob: -14.644668579101562

Token 3507: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7467319965362549
    2. '```' → logprob: -1.9967319965362549
    3. ':' → logprob: -2.246731996536255
    4. '):
' → logprob: -2.621731996536255
    5. '           ' → logprob: -2.621731996536255
    6. '       ' → logprob: -2.996731996536255
    7. ')' → logprob: -3.371731996536255
    8. ''):
' → logprob: -4.496731758117676
    9. '<|end|>' → logprob: -4.621731758117676
    10. '')' → logprob: -4.621731758117676

Token 3508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002375534735620022
    2. '```' → logprob: -6.127375602722168
    3. '       ' → logprob: -9.377375602722168
    4. '``' → logprob: -10.002375602722168
    5. '               ' → logprob: -10.377375602722168
    6. '          ' → logprob: -11.377375602722168
    7. ':
' → logprob: -12.502375602722168
    8. '            ' → logprob: -12.627375602722168
    9. ' y' → logprob: -13.627375602722168
    10. ')' → logprob: -13.627375602722168

Token 3509: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.005635097622871399
    2. ' y' → logprob: -5.8806352615356445
    3. '           ' → logprob: -5.8806352615356445
    4. 'return' → logprob: -11.255635261535645
    5. '```' → logprob: -11.505635261535645
    6. 'x' → logprob: -12.880635261535645
    7. '0' → logprob: -13.505635261535645
    8. '``' → logprob: -13.505635261535645
    9. '       ' → logprob: -13.880635261535645
    10. 'yield' → logprob: -14.380635261535645

Token 3510: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.003195185214281082
    2. 'bits' → logprob: -5.753195285797119
    3. 'Bits' → logprob: -11.003194808959961
    4. '_BITS' → logprob: -14.878194808959961
    5. '```' → logprob: -15.128194808959961
    6. ' bits' → logprob: -16.62819480895996
    7. '``' → logprob: -17.37819480895996
    8. '[
' → logprob: -17.37819480895996
    9. '[' → logprob: -17.50319480895996
    10. '`' → logprob: -18.50319480895996

Token 3511: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1193525567650795
    2. '_bits' → logprob: -2.2443525791168213
    3. '.append' → logprob: -5.244352340698242
    4. 'append' → logprob: -7.119352340698242
    5. 'bits' → logprob: -7.869352340698242
    6. 'list' → logprob: -11.119352340698242
    7. '```' → logprob: -12.869352340698242
    8. '[' → logprob: -12.869352340698242
    9. '_lists' → logprob: -12.994352340698242
    10. '   ' → logprob: -13.119352340698242

Token 3512: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001515576965175569
    2. 'append' → logprob: -6.5015153884887695
    3. '_append' → logprob: -11.62651538848877
    4. '.' → logprob: -13.50151538848877
    5. 'Append' → logprob: -13.62651538848877
    6. '+=' → logprob: -14.37651538848877
    7. ' append' → logprob: -14.87651538848877
    8. '           ' → logprob: -16.001516342163086
    9. '=' → logprob: -16.626516342163086
    10. '       ' → logprob: -16.626516342163086

Token 3513: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2528182566165924
    2. '0' → logprob: -1.50281822681427
    3. '[' → logprob: -7.1278181076049805
    4. ' (' → logprob: -9.50281810760498
    5. ' ' → logprob: -11.50281810760498
    6. '(
' → logprob: -14.00281810760498
    7. '[
' → logprob: -15.87781810760498
    8. '```' → logprob: -15.87781810760498
    9. '=' → logprob: -16.627819061279297
    10. '
' → logprob: -16.627819061279297

Token 3514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '(' → logprob: -20.125
    4. '۰' → logprob: -20.75
    5. '[' → logprob: -21.5
    6. '   ' → logprob: -21.9375
    7. '2' → logprob: -22.0625
    8. '```' → logprob: -22.5
    9. '00' → logprob: -22.5625
    10. '1' → logprob: -22.625

Token 3515: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3243759274482727
    2. '```' → logprob: -1.574375867843628
    3. '       ' → logprob: -2.824375867843628
    4. ':
' → logprob: -5.824376106262207
    5. ')' → logprob: -6.074376106262207
    6. '``' → logprob: -6.949376106262207
    7. 'else' → logprob: -7.199376106262207
    8. '               ' → logprob: -7.199376106262207
    9. '):
' → logprob: -7.949376106262207
    10. '<|end|>' → logprob: -7.949376106262207

Token 3516: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3808183968067169
    2. '```' → logprob: -1.6308183670043945
    3. '       ' → logprob: -2.1308183670043945
    4. '``' → logprob: -6.3808183670043945
    5. 'elif' → logprob: -8.505818367004395
    6. '               ' → logprob: -8.755818367004395
    7. 'else' → logprob: -9.255818367004395
    8. ' else' → logprob: -11.130818367004395
    9. '   ' → logprob: -11.630818367004395
    10. ' elif' → logprob: -12.505818367004395

Token 3517: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05794228985905647
    2. 'elif' (adapté à ' elif') → logprob: -3.1829423904418945
    3. '```' → logprob: -4.3079423904418945
    4. 'else' → logprob: -6.6829423904418945
    5. ' elif' → logprob: -10.182942390441895
    6. '``' → logprob: -10.557942390441895
    7. '           ' → logprob: -10.932942390441895
    8. '   ' → logprob: -11.307942390441895
    9. '
' → logprob: -11.807942390441895
    10. ' else' → logprob: -12.182942390441895

Token 3518: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04946499317884445
    2. ' c' → logprob: -3.0494649410247803
    3. ''' → logprob: -7.174465179443359
    4. ''x' → logprob: -9.67446517944336
    5. 'x' → logprob: -10.17446517944336
    6. ' x' → logprob: -12.92446517944336
    7. 'b' → logprob: -13.42446517944336
    8. '`' → logprob: -13.67446517944336
    9. ')c' → logprob: -13.67446517944336
    10. ' '' → logprob: -13.67446517944336

Token 3519: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8162901997566223
    2. '=='' → logprob: -0.8162901997566223
    3. ' ==' → logprob: -2.4412901401519775
    4. '[' → logprob: -3.5662901401519775
    5. '==
' → logprob: -9.066289901733398
    6. ' =='' → logprob: -9.066289901733398
    7. '```' → logprob: -9.441289901733398
    8. '[
' → logprob: -10.191289901733398
    9. ''' → logprob: -10.191289901733398
    10. '=="' → logprob: -10.441289901733398

Token 3520: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -3.2378600735682994e-05
    2. ' '' → logprob: -11.000032424926758
    3. 'x' → logprob: -11.625032424926758
    4. '['' → logprob: -13.000032424926758
    5. '('' → logprob: -13.125032424926758
    6. ''' → logprob: -14.750032424926758
    7. '[
' → logprob: -14.875032424926758
    8. '```' → logprob: -15.500032424926758
    9. '‘' → logprob: -15.875032424926758
    10. '
' → logprob: -15.875032424926758

Token 3521: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3868730664253235
    2. 'x' → logprob: -1.1368730068206787
    3. '"x' → logprob: -13.636873245239258
    4. '```' → logprob: -15.386873245239258
    5. ' x' → logprob: -15.636873245239258
    6. '['' → logprob: -16.261873245239258
    7. ''' → logprob: -16.261873245239258
    8. '(x' → logprob: -16.761873245239258
    9. '_x' → logprob: -17.136873245239258
    10. '$x' → logprob: -17.136873245239258

Token 3522: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021985506638884544
    2. ':
' → logprob: -5.0219855308532715
    3. '```' → logprob: -5.3969855308532715
    4. '       ' → logprob: -5.5219855308532715
    5. '':
' → logprob: -6.5219855308532715
    6. '{
' → logprob: -6.7719855308532715
    7. '==' → logprob: -6.8969855308532715
    8. '):
' → logprob: -7.7719855308532715
    9. '[' → logprob: -7.7719855308532715
    10. ':' → logprob: -7.8969855308532715

Token 3523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005724519141949713
    2. '{
' → logprob: -8.375572204589844
    3. '```' → logprob: -8.625572204589844
    4. '       ' → logprob: -10.500572204589844
    5. ':
' → logprob: -10.500572204589844
    6. '               ' → logprob: -10.875572204589844
    7. '          ' → logprob: -11.000572204589844
    8. '(' → logprob: -11.250572204589844
    9. ''' → logprob: -11.625572204589844
    10. 'x' → logprob: -11.625572204589844

Token 3524: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.005666752345860004
    2. '           ' → logprob: -5.880666732788086
    3. 'x' → logprob: -6.005666732788086
    4. ' y' → logprob: -8.005666732788086
    5. '(y' → logprob: -11.005666732788086
    6. '```' → logprob: -11.505666732788086
    7. 'count' → logprob: -12.380666732788086
    8. '[y' → logprob: -12.505666732788086
    9. '``' → logprob: -12.630666732788086
    10. '[' → logprob: -12.880666732788086

Token 3525: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0003241414960939437
    2. 'bits' → logprob: -8.125324249267578
    3. 'Bits' → logprob: -11.500324249267578
    4. '[
' → logprob: -11.750324249267578
    5. '[' → logprob: -12.000324249267578
    6. '_BITS' → logprob: -13.500324249267578
    7. '_list' → logprob: -14.250324249267578
    8. '[-' → logprob: -14.875324249267578
    9. '```' → logprob: -14.875324249267578
    10. '{
' → logprob: -15.750324249267578

Token 3526: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.933173426659778e-05
    2. '_bits' → logprob: -10.375069618225098
    3. 'list' → logprob: -10.625069618225098
    4. 'List' → logprob: -12.500069618225098
    5. 'bits' → logprob: -12.625069618225098
    6. '           ' → logprob: -12.625069618225098
    7. '       ' → logprob: -13.375069618225098
    8. '[
' → logprob: -14.750069618225098
    9. '[' → logprob: -15.250069618225098
    10. '   ' → logprob: -15.375069618225098

Token 3527: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013049989938735962
    2. 'append' → logprob: -6.751305103302002
    3. '+=' → logprob: -9.376304626464844
    4. '           ' → logprob: -10.251304626464844
    5. '_append' → logprob: -12.251304626464844
    6. '       ' → logprob: -12.876304626464844
    7. '          ' → logprob: -13.126304626464844
    8. '=' → logprob: -13.376304626464844
    9. 'Append' → logprob: -13.501304626464844
    10. ' +=' → logprob: -14.501304626464844

Token 3528: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.6166903151315637e-05
    2. '-' → logprob: -11.125016212463379
    3. '[-' → logprob: -14.125016212463379
    4. '(' → logprob: -14.875016212463379
    5. '(
' → logprob: -15.250016212463379
    6. '[
' → logprob: -19.000015258789062
    7. ' (-' → logprob: -20.625015258789062
    8. '           ' → logprob: -21.000015258789062
    9. '```' → logprob: -21.125015258789062
    10. 'x' → logprob: -21.500015258789062

Token 3529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -18.125
    4. '```' → logprob: -18.5
    5. '[' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. '2' → logprob: -19.9375
    8. '=' → logprob: -20.1875
    9. 'token' → logprob: -20.25
    10. '0' → logprob: -20.3125

Token 3530: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15777793526649475
    2. ')' → logprob: -2.032778024673462
    3. ')
' → logprob: -4.782777786254883
    4. '       ' → logprob: -6.157777786254883
    5. '
' → logprob: -6.907777786254883
    6. '<|end|>' → logprob: -6.907777786254883
    7. '               ' → logprob: -7.282777786254883
    8. '):
' → logprob: -7.282777786254883
    9. ':
' → logprob: -8.532777786254883
    10. '   ' → logprob: -8.782777786254883

Token 3531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018117944709956646
    2. '```' → logprob: -6.376811981201172
    3. '``' → logprob: -9.751811981201172
    4. '
' → logprob: -11.001811981201172
    5. '{
' → logprob: -11.001811981201172
    6. '               ' → logprob: -12.251811981201172
    7. '          ' → logprob: -12.876811981201172
    8. '<|end|>' → logprob: -13.501811981201172
    9. '       ' → logprob: -13.751811981201172
    10. ')' → logprob: -13.751811981201172

Token 3532: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.32469433546066284
    2. '1' → logprob: -1.3246943950653076
    3. '           ' → logprob: -4.6996941566467285
    4. ' unknown' → logprob: -7.0746941566467285
    5. '```' → logprob: -8.074694633483887
    6. '2' → logprob: -8.449694633483887
    7. '(' → logprob: -8.824694633483887
    8. '
' → logprob: -8.949694633483887
    9. '6' → logprob: -8.949694633483887
    10. '++' → logprob: -9.324694633483887

Token 3533: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00020401719666551799
    2. 'y' → logprob: -8.500204086303711
    3. 'Y' → logprob: -14.625204086303711
    4. '   ' → logprob: -18.25020408630371
    5. '_' → logprob: -19.50020408630371
    6. '	y' → logprob: -20.00020408630371
    7. '1' → logprob: -20.50020408630371
    8. '=' → logprob: -20.62520408630371
    9. ' y' → logprob: -21.00020408630371
    10. '_user' → logprob: -21.00020408630371

Token 3534: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25737106800079346
    2. ' +=' → logprob: -1.5073710680007935
    3. '=' → logprob: -5.257370948791504
    4. ' =' → logprob: -8.507370948791504
    5. '```' → logprob: -11.882370948791504
    6. '+=(' → logprob: -12.507370948791504
    7. '+' → logprob: -13.007370948791504
    8. ']+=' → logprob: -13.007370948791504
    9. '+='' → logprob: -15.507370948791504
    10. '<|end|>' → logprob: -15.507370948791504

Token 3535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -18.125
    4. '<|end|>' → logprob: -18.125
    5. '=' → logprob: -18.25
    6. '+' → logprob: -19.375
    7. '<|end|>' → logprob: -19.625
    8. '```' → logprob: -20.25
    9. '(' → logprob: -20.375
    10. '۱' → logprob: -21.625

Token 3536: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03063124418258667
    2. '```' → logprob: -4.155631065368652
    3. '           ' → logprob: -4.280631065368652
    4. '   ' → logprob: -8.155631065368652
    5. '``' → logprob: -9.155631065368652
    6. '               ' → logprob: -9.405631065368652
    7. '<|end|>' → logprob: -10.030631065368652
    8. ')' → logprob: -10.280631065368652
    9. '
' → logprob: -10.780631065368652
    10. ':
' → logprob: -11.405631065368652

Token 3537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5821471214294434
    2. '           ' → logprob: -0.8321471214294434
    3. '```' → logprob: -5.207147121429443
    4. '               ' → logprob: -8.207147598266602
    5. 'else' → logprob: -8.832147598266602
    6. ':
' → logprob: -9.207147598266602
    7. '   ' → logprob: -9.707147598266602
    8. ':' → logprob: -10.082147598266602
    9. ' else' → logprob: -10.582147598266602
    10. '``' → logprob: -10.832147598266602

Token 3538: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013347749598324299
    2. 'else' (adapté à ' else') → logprob: -5.013347625732422
    3. '```' → logprob: -5.888347625732422
    4. '           ' → logprob: -6.138347625732422
    5. '   ' → logprob: -6.638347625732422
    6. ' else' → logprob: -8.263347625732422
    7. 'elif' → logprob: -9.638347625732422
    8. '``' → logprob: -11.138347625732422
    9. '               ' → logprob: -12.013347625732422
    10. ' ' → logprob: -12.513347625732422

Token 3539: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.61041659116745
    2. '       ' → logprob: -1.7354166507720947
    3. ':
' → logprob: -2.6104166507720947
    4. '   ' → logprob: -3.2354166507720947
    5. ':return' → logprob: -3.4854166507720947
    6. '=' → logprob: -3.6104166507720947
    7. ':' → logprob: -3.6104166507720947
    8. 'return' → logprob: -3.7354166507720947
    9. '               ' → logprob: -4.360416412353516
    10. '0' → logprob: -4.610416412353516

Token 3540: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3513929545879364
    2. '           ' → logprob: -1.3513929843902588
    3. '0' → logprob: -4.10139274597168
    4. '       ' → logprob: -4.72639274597168
    5. '```' → logprob: -5.35139274597168
    6. ' return' → logprob: -5.85139274597168
    7. '   ' → logprob: -6.47639274597168
    8. '{return' → logprob: -7.10139274597168
    9. '``' → logprob: -7.47639274597168
    10. '               ' → logprob: -7.60139274597168

Token 3541: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16052478551864624
    2. '0' → logprob: -1.910524845123291
    3. '```' → logprob: -8.785524368286133
    4. ' return' → logprob: -10.535524368286133
    5. '           ' → logprob: -10.535524368286133
    6. '{return' → logprob: -10.660524368286133
    7. '``' → logprob: -11.160524368286133
    8. ':return' → logprob: -11.285524368286133
    9. '1' → logprob: -11.535524368286133
    10. '
' → logprob: -12.035524368286133

Token 3542: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '(' → logprob: -18.625158309936523
    4. '   ' → logprob: -19.625158309936523
    5. '  ' → logprob: -19.625158309936523
    6. '۰' → logprob: -19.875158309936523
    7. '`' → logprob: -20.625158309936523
    8. '=' → logprob: -20.625158309936523
    9. '<|end|>' → logprob: -20.625158309936523
    10. '```' → logprob: -20.875158309936523

Token 3543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -20.875
    4. '```' → logprob: -22.75
    5. '(' → logprob: -23.125
    6. '０' → logprob: -23.5
    7. '০' → logprob: -23.75
    8. '=' → logprob: -24.125
    9. '>' → logprob: -24.125
    10. '٠' → logprob: -24.5

Token 3544: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13107424974441528
    2. '```' → logprob: -2.5060741901397705
    3. '
' → logprob: -3.2560741901397705
    4. '#' → logprob: -6.38107442855835
    5. 'x' → logprob: -7.75607442855835
    6. '``' → logprob: -7.88107442855835
    7. '<|end|>' → logprob: -9.506073951721191
    8. ')' → logprob: -10.006073951721191
    9. '

' → logprob: -10.256073951721191
    10. ' x' → logprob: -10.881073951721191

Token 3545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024349266663193703
    2. '
' → logprob: -3.8993492126464844
    3. '```' → logprob: -5.649349212646484
    4. '#' → logprob: -8.524349212646484
    5. 'x' → logprob: -10.024349212646484
    6. '``' → logprob: -10.399349212646484
    7. '    
' → logprob: -12.274349212646484
    8. '`' → logprob: -14.649349212646484
    9. ' #' → logprob: -14.774349212646484
    10. ' x' → logprob: -15.149349212646484

Token 3546: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4386015832424164
    2. '#' → logprob: -1.1886016130447388
    3. 'x' → logprob: -3.063601493835449
    4. '```' → logprob: -5.813601493835449
    5. '
' → logprob: -7.563601493835449
    6. '``' → logprob: -9.06360149383545
    7. ' #' → logprob: -10.43860149383545
    8. 'unknown' → logprob: -11.31360149383545
    9. '    
' → logprob: -11.43860149383545
    10. ' x' → logprob: -11.81360149383545

Token 3547: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.07889870554208755
    2. ' fixed' → logprob: -2.5788986682891846
    3. '   ' → logprob: -11.703898429870605
    4. ' y' → logprob: -15.578898429870605
    5. 'y' → logprob: -16.078899383544922
    6. ' ' → logprob: -16.078899383544922
    7. 'fix' → logprob: -16.453899383544922
    8. '       ' → logprob: -17.078899383544922
    9. '     ' → logprob: -17.328899383544922
    10. '    ' → logprob: -17.453899383544922

Token 3548: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -7.896309739408025e-07
    2. '_valid' → logprob: -14.625000953674316
    3. '_fixed' → logprob: -16.375
    4. 'y' → logprob: -16.75
    5. '_x' → logprob: -16.75
    6. '_' → logprob: -17.875
    7. ''_' → logprob: -20.875
    8. '(y' → logprob: -21.5
    9. '\' → logprob: -22.125
    10. '   ' → logprob: -22.125

Token 3549: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.93710636976175e-05
    2. '_valid' → logprob: -9.250099182128906
    3. '_bits' → logprob: -13.125099182128906
    4. '_fixed' → logprob: -14.125099182128906
    5. '_y' → logprob: -15.375099182128906
    6. '>' → logprob: -16.250099182128906
    7. '_one' → logprob: -18.625099182128906
    8. 's' → logprob: -19.000099182128906
    9. '```' → logprob: -19.000099182128906
    10. '_
' → logprob: -19.000099182128906

Token 3550: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00027897433028556406
    2. '_' → logprob: -8.250279426574707
    3. '0' → logprob: -11.500279426574707
    4. 'ons' → logprob: -13.000279426574707
    5. '1' → logprob: -13.125279426574707
    6. ' ones' → logprob: -13.375279426574707
    7. '>' → logprob: -14.625279426574707
    8. 'ONES' → logprob: -14.875279426574707
    9. '
' → logprob: -15.250279426574707
    10. '   ' → logprob: -15.750279426574707

Token 3551: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28674009442329407
    2. '==' → logprob: -1.5367400646209717
    3. ' ==' → logprob: -3.5367400646209717
    4. ' >' → logprob: -5.286740303039551
    5. '!=' → logprob: -10.78674030303955
    6. '=' → logprob: -11.78674030303955
    7. ')' → logprob: -12.03674030303955
    8. ' !=' → logprob: -12.78674030303955
    9. '```' → logprob: -13.41174030303955
    10. ':' → logprob: -13.53674030303955

Token 3552: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007113590254448354
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.125711441040039
    4. '=' → logprob: -14.750711441040039
    5. '
' → logprob: -16.12571144104004
    6. '```' → logprob: -17.62571144104004
    7. '>' → logprob: -18.12571144104004
    8. '۰' → logprob: -18.25071144104004
    9. '０' → logprob: -18.75071144104004
    10. '  ' → logprob: -18.81321144104004

Token 3553: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.625036239624023
    4. '۰' → logprob: -20.125036239624023
    5. '  ' → logprob: -20.500036239624023
    6. '
' → logprob: -20.625036239624023
    7. ' ' → logprob: -20.625036239624023
    8. '０' → logprob: -21.000036239624023
    9. '     ' → logprob: -21.750036239624023
    10. '    ' → logprob: -22.000036239624023

Token 3554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14782045781612396
    2. ':
' → logprob: -2.147820472717285
    3. '       ' → logprob: -3.897820472717285
    4. '   ' → logprob: -8.272820472717285
    5. ':return' → logprob: -9.272820472717285
    6. '):
' → logprob: -11.022820472717285
    7. '=' → logprob: -12.647820472717285
    8. ':

' → logprob: -12.772820472717285
    9. '```' → logprob: -12.772820472717285
    10. '           ' → logprob: -13.147820472717285

Token 3555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028162896633148193
    2. '```' → logprob: -6.002816200256348
    3. '   ' → logprob: -8.127816200256348
    4. '``' → logprob: -10.877816200256348
    5. '           ' → logprob: -11.752816200256348
    6. '     ' → logprob: -12.127816200256348
    7. '
' → logprob: -12.502816200256348
    8. ' y' → logprob: -12.752816200256348
    9. '{
' → logprob: -13.752816200256348
    10. ':' → logprob: -13.877816200256348

Token 3556: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.025799479335546494
    2. 'return' → logprob: -4.02579927444458
    3. '   ' → logprob: -5.40079927444458
    4. '       ' → logprob: -6.15079927444458
    5. ' y' → logprob: -7.40079927444458
    6. '```' → logprob: -8.025799751281738
    7. ' return' → logprob: -10.900799751281738
    8. '``' → logprob: -11.650799751281738
    9. '`' → logprob: -13.025799751281738
    10. '           ' → logprob: -13.525799751281738

Token 3557: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -2.7848862373502925e-05
    2. 'valid' → logprob: -10.500027656555176
    3. 'Valid' → logprob: -16.125028610229492
    4. '_count' → logprob: -16.750028610229492
    5. 'alid' → logprob: -18.500028610229492
    6. '_val' → logprob: -19.125028610229492
    7. '	valid' → logprob: -19.375028610229492
    8. '_VALID' → logprob: -19.500028610229492
    9. ' valid' → logprob: -19.875028610229492
    10. 'count' → logprob: -20.125028610229492

Token 3558: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.47495681833243e-05
    2. '_valid' → logprob: -10.750024795532227
    3. 'count' → logprob: -13.125024795532227
    4. '_counts' → logprob: -14.500024795532227
    5. '```' → logprob: -15.000024795532227
    6. '_' → logprob: -15.625024795532227
    7. '=' → logprob: -16.625024795532227
    8. '_val' → logprob: -17.000024795532227
    9. '_code' → logprob: -17.125024795532227
    10. '_c' → logprob: -17.500024795532227

Token 3559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. '   ' → logprob: -14.886871337890625
    4. '=True' → logprob: -18.261871337890625
    5. '```' → logprob: -18.261871337890625
    6. ')' → logprob: -18.636871337890625
    7. ' ' → logprob: -18.886871337890625
    8. ':' → logprob: -19.011871337890625
    9. ' +=' → logprob: -19.386871337890625
    10. '+=' → logprob: -19.511871337890625

Token 3560: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.805981972021982e-05
    2. ' pow' → logprob: -9.25009822845459
    3. '(pow' → logprob: -13.25009822845459
    4. '   ' → logprob: -16.000097274780273
    5. '       ' → logprob: -17.125097274780273
    6. '_pow' → logprob: -17.750097274780273
    7. '```' → logprob: -18.625097274780273
    8. '.pow' → logprob: -18.750097274780273
    9. 'Pow' → logprob: -19.375097274780273
    10. 'power' → logprob: -20.000097274780273

Token 3561: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. '2' → logprob: -12.625003814697266
    3. ' (' → logprob: -18.375003814697266
    4. '```' → logprob: -18.625003814697266
    5. '10' → logprob: -18.875003814697266
    6. '(
' → logprob: -19.000003814697266
    7. 'def' → logprob: -19.250003814697266
    8. ' ' → logprob: -21.375003814697266
    9. ',' → logprob: -22.000003814697266
    10. ')' → logprob: -22.125003814697266

Token 3562: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. ' ' → logprob: -18.5000057220459
    4. '   ' → logprob: -19.5000057220459
    5. '
' → logprob: -19.5000057220459
    6. '```' → logprob: -20.1250057220459
    7. '(
' → logprob: -22.0000057220459
    8. '       ' → logprob: -22.2500057220459
    9. '{' → logprob: -22.7500057220459
    10. 'pow' → logprob: -23.2500057220459

Token 3563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006002502050250769
    2. '(' → logprob: -5.131002426147461
    3. ',
' → logprob: -10.631002426147461
    4. 'unknown' → logprob: -10.631002426147461
    5. '(',',' → logprob: -11.881002426147461
    6. '```' → logprob: -12.256002426147461
    7. ')' → logprob: -13.131002426147461
    8. '(
' → logprob: -13.506002426147461
    9. 'UNKNOWN' → logprob: -13.631002426147461
    10. '
' → logprob: -13.631002426147461

Token 3564: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -4.5491004129871726e-05
    2. ' unknown' → logprob: -10.000045776367188
    3. '(' → logprob: -18.375045776367188
    4. 'known' → logprob: -19.375045776367188
    5. 'UNKNOWN' → logprob: -20.000045776367188
    6. '```' → logprob: -20.000045776367188
    7. '_unknown' → logprob: -20.500045776367188
    8. '   ' → logprob: -20.750045776367188
    9. 'unk' → logprob: -21.000045776367188
    10. '
' → logprob: -21.625045776367188

Token 3565: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0013215499930083752
    2. '_unknown' → logprob: -7.001321315765381
    3. '_' → logprob: -8.501321792602539
    4. ',' → logprob: -9.501321792602539
    5. '_,' → logprob: -9.626321792602539
    6. '   ' → logprob: -10.501321792602539
    7. 'y' → logprob: -11.626321792602539
    8. '_bits' → logprob: -11.751321792602539
    9. '_x' → logprob: -12.251321792602539
    10. 'unknown' → logprob: -12.626321792602539

Token 3566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14397208392620087
    2. '(' → logprob: -2.018972158432007
    3. ')' → logprob: -7.393971920013428
    4. '```' → logprob: -7.393971920013428
    5. '(y' → logprob: -10.643972396850586
    6. 'unknown' → logprob: -11.768972396850586
    7. '   ' → logprob: -12.768972396850586
    8. ' ,' → logprob: -12.768972396850586
    9. '``' → logprob: -13.268972396850586
    10. '(user' → logprob: -13.268972396850586

Token 3567: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '```' → logprob: -17.750001907348633
    4. '_MOD' → logprob: -18.375001907348633
    5. ')' → logprob: -18.875001907348633
    6. '.MOD' → logprob: -19.000001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '`' → logprob: -20.375001907348633
    9. '10' → logprob: -20.375001907348633
    10. '100' → logprob: -20.750001907348633

Token 3568: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27960553765296936
    2. ')' → logprob: -1.529605507850647
    3. '
' → logprob: -3.9046056270599365
    4. ')
' → logprob: -5.279605388641357
    5. '```' → logprob: -6.904605388641357
    6. '       ' → logprob: -7.654605388641357
    7. ')return' → logprob: -8.904605865478516
    8. 'return' → logprob: -8.904605865478516
    9. '):
' → logprob: -9.029605865478516
    10. 'else' → logprob: -9.779605865478516

Token 3569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00475383410230279
    2. 'else' → logprob: -5.379754066467285
    3. '```' → logprob: -9.004754066467285
    4. ' else' → logprob: -12.004754066467285
    5. '       ' → logprob: -12.754754066467285
    6. '
' → logprob: -14.004754066467285
    7. '``' → logprob: -15.254754066467285
    8. '[' → logprob: -15.629754066467285
    9. 'return' → logprob: -16.00475311279297
    10. ')' → logprob: -16.62975311279297

Token 3570: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08009450137615204
    2. 'else' (adapté à ' else') → logprob: -2.580094575881958
    3. '```' → logprob: -6.830094337463379
    4. ' else' → logprob: -9.330094337463379
    5. '       ' → logprob: -11.080094337463379
    6. '
' → logprob: -11.330094337463379
    7. '``' → logprob: -12.955094337463379
    8. 'elif' → logprob: -13.830094337463379
    9. ')' → logprob: -14.080094337463379
    10. 'return' → logprob: -14.205094337463379

Token 3571: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6952394247055054
    2. '       ' → logprob: -0.9452394247055054
    3. ':
' → logprob: -2.195239543914795
    4. '```' → logprob: -7.320239543914795
    5. '):
' → logprob: -8.820239067077637
    6. '   ' → logprob: -8.945239067077637
    7. ':return' → logprob: -10.320239067077637
    8. '{
' → logprob: -10.445239067077637
    9. ',' → logprob: -10.570239067077637
    10. '[' → logprob: -11.320239067077637

Token 3572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006677717436105013
    2. '```' → logprob: -5.131677627563477
    3. '``' → logprob: -8.131677627563477
    4. '           ' → logprob: -8.756677627563477
    5. 'y' → logprob: -8.881677627563477
    6. '   ' → logprob: -9.756677627563477
    7. ' y' → logprob: -10.256677627563477
    8. '{
' → logprob: -10.381677627563477
    9. '
' → logprob: -11.131677627563477
    10. '`' → logprob: -12.381677627563477

Token 3573: ' if' (ID: 538)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.939851037808694e-05
    2. '       ' → logprob: -11.125029563903809
    3. ' y' → logprob: -12.375029563903809
    4. '   ' → logprob: -12.500029563903809
    5. '```' → logprob: -12.500029563903809
    6. '(y' → logprob: -13.250029563903809
    7. '           ' → logprob: -14.125029563903809
    8. '``' → logprob: -15.125029563903809
    9. '
' → logprob: -16.375028610229492
    10. 'return' → logprob: -16.750028610229492

Token 3574: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.00861729308962822
    2. ' unknown' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.633617401123047
    4. '           ' → logprob: -14.383617401123047
    5. '       ' → logprob: -14.633617401123047
    6. '```' → logprob: -15.883617401123047
    7. 'Unknown' → logprob: -16.008617401123047
    8. '_unknown' → logprob: -16.258617401123047
    9. 'UNKNOWN' → logprob: -17.008617401123047
    10. '    ' → logprob: -17.258617401123047

Token 3575: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.7729658540920354e-05
    2. '_unknown' → logprob: -10.625027656555176
    3. 'unknown' → logprob: -13.500027656555176
    4. 'y' → logprob: -13.500027656555176
    5. '_u' → logprob: -14.875027656555176
    6. '_x' → logprob: -16.875028610229492
    7. '_user' → logprob: -17.875028610229492
    8. '   ' → logprob: -17.875028610229492
    9. '_n' → logprob: -18.625028610229492
    10. '_' → logprob: -18.750028610229492

Token 3576: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20376469194889069
    2. '==' → logprob: -1.7037646770477295
    3. ' ==' → logprob: -6.703764915466309
    4. '```' → logprob: -7.578764915466309
    5. '!=' → logprob: -7.703764915466309
    6. ' >' → logprob: -8.953764915466309
    7. ' !=' → logprob: -11.078764915466309
    8. ')' → logprob: -12.078764915466309
    9. '
' → logprob: -12.828764915466309
    10. '``' → logprob: -13.578764915466309

Token 3577: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. '1' → logprob: -14.000110626220703
    4. '(' → logprob: -15.000110626220703
    5. '   ' → logprob: -15.750110626220703
    6. '```' → logprob: -16.250110626220703
    7. '
' → logprob: -16.500110626220703
    8. ' (' → logprob: -18.000110626220703
    9. '`' → logprob: -18.125110626220703
    10. '>' → logprob: -18.250110626220703

Token 3578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.250003814697266
    4. '   ' → logprob: -16.750003814697266
    5. '>' → logprob: -16.875003814697266
    6. '`' → logprob: -17.375003814697266
    7. '1' → logprob: -17.500003814697266
    8. '
' → logprob: -17.500003814697266
    9. '(' → logprob: -17.500003814697266
    10. '``' → logprob: -18.000003814697266

Token 3579: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04412012919783592
    2. ':
' → logprob: -3.4191200733184814
    3. ':' → logprob: -4.6691203117370605
    4. ':return' → logprob: -7.5441203117370605
    5. '```' → logprob: -7.9191203117370605
    6. 'return' → logprob: -9.919119834899902
    7. '       ' → logprob: -10.294119834899902
    8. '               ' → logprob: -10.919119834899902
    9. '):
' → logprob: -11.919119834899902
    10. '          ' → logprob: -12.044119834899902

Token 3580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007056408794596791
    2. '```' → logprob: -7.625705718994141
    3. '       ' → logprob: -8.87570571899414
    4. 'return' → logprob: -9.87570571899414
    5. '   ' → logprob: -10.87570571899414
    6. '               ' → logprob: -12.62570571899414
    7. '``' → logprob: -13.62570571899414
    8. '{
' → logprob: -13.62570571899414
    9. '{return' → logprob: -14.75070571899414
    10. '                   ' → logprob: -15.12570571899414

Token 3581: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015162250958383083
    2. '           ' → logprob: -4.265162467956543
    3. '```' → logprob: -7.015162467956543
    4. '       ' → logprob: -9.515162467956543
    5. ' return' → logprob: -11.515162467956543
    6. '   ' → logprob: -11.765162467956543
    7. '``' → logprob: -11.890162467956543
    8. '               ' → logprob: -13.765162467956543
    9. '
' → logprob: -15.265162467956543
    10. '	return' → logprob: -15.515162467956543

Token 3582: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.625335693359375
    4. '00' → logprob: -19.875335693359375
    5. '
' → logprob: -20.125335693359375
    6. '  ' → logprob: -20.500335693359375
    7. '000' → logprob: -20.750335693359375
    8. '۰' → logprob: -21.250335693359375
    9. '(' → logprob: -21.500335693359375
    10. '```' → logprob: -21.625335693359375

Token 3583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -18.125
    4. '000' → logprob: -20.125
    5. '
' → logprob: -20.5
    6. '۰' → logprob: -20.625
    7. '   ' → logprob: -20.625
    8. '00' → logprob: -20.875
    9. '``' → logprob: -20.875
    10. '`' → logprob: -21.625

Token 3584: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018625955563038588
    2. '```' → logprob: -6.751862525939941
    3. '   ' → logprob: -8.626862525939941
    4. '
' → logprob: -8.751862525939941
    5. '           ' → logprob: -8.876862525939941
    6. ' y' → logprob: -9.251862525939941
    7. 'y' → logprob: -9.751862525939941
    8. '``' → logprob: -10.876862525939941
    9. ':
' → logprob: -11.626862525939941
    10. 'return' → logprob: -11.751862525939941

Token 3585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1355886608362198
    2. '           ' → logprob: -2.1355886459350586
    3. '```' → logprob: -4.885588645935059
    4. '               ' → logprob: -8.135588645935059
    5. '
' → logprob: -8.260588645935059
    6. ' return' → logprob: -8.760588645935059
    7. '   ' → logprob: -8.760588645935059
    8. 'return' → logprob: -9.010588645935059
    9. '``' → logprob: -10.010588645935059
    10. '{
' → logprob: -12.010588645935059

Token 3586: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16375967860221863
    2. 'y' (adapté à ' y') → logprob: -1.913759708404541
    3. '           ' → logprob: -6.413759708404541
    4. ' y' → logprob: -6.913759708404541
    5. '```' → logprob: -7.288759708404541
    6. '   ' → logprob: -8.788759231567383
    7. 'return' → logprob: -10.163759231567383
    8. '``' → logprob: -11.538759231567383
    9. '               ' → logprob: -12.288759231567383
    10. '
' → logprob: -13.288759231567383

Token 3587: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -6.2729995988775045e-06
    2. 'valid' → logprob: -12.000006675720215
    3. 'Valid' → logprob: -16.2500057220459
    4. '_invalid' → logprob: -18.2500057220459
    5. 'alid' → logprob: -18.5000057220459
    6. '_VALID' → logprob: -18.7500057220459
    7. '	valid' → logprob: -20.6250057220459
    8. ' valid' → logprob: -21.6250057220459
    9. '-valid' → logprob: -21.6250057220459
    10. ' Valid' → logprob: -22.0000057220459

Token 3588: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.16061463952064514
    2. '_valid' → logprob: -1.9106146097183228
    3. 'count' → logprob: -8.285614967346191
    4. 'valid' → logprob: -8.910614967346191
    5. '_code' → logprob: -14.160614967346191
    6. 'Valid' → logprob: -14.285614967346191
    7. '   ' → logprob: -14.660614967346191
    8. '=' → logprob: -14.785614967346191
    9. '_counts' → logprob: -15.035614967346191
    10. ' =' → logprob: -15.035614967346191

Token 3589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '=
' → logprob: -16.061967849731445
    4. '=(' → logprob: -16.686967849731445
    5. ')' → logprob: -16.936967849731445
    6. '```' → logprob: -17.686967849731445
    7. '   ' → logprob: -17.936967849731445
    8. ' =(' → logprob: -18.811967849731445
    9. ' ' → logprob: -19.311967849731445
    10. '=((' → logprob: -19.811967849731445

Token 3590: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.023476768285036087
    2. ' (' → logprob: -3.7734768390655518
    3. '(p' → logprob: -8.398476600646973
    4. '(power' → logprob: -12.648476600646973
    5. '(pop' → logprob: -14.023476600646973
    6. '(prob' → logprob: -15.023476600646973
    7. 'pow' → logprob: -15.148476600646973
    8. '   ' → logprob: -15.273476600646973
    9. '(po' → logprob: -15.523476600646973
    10. '(py' → logprob: -15.898476600646973

Token 3591: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0006093903793953359
    2. 'pow' → logprob: -7.500609397888184
    3. '(p' → logprob: -10.375609397888184
    4. ' (' → logprob: -10.625609397888184
    5. '(power' → logprob: -14.250609397888184
    6. '(prob' → logprob: -16.375608444213867
    7. ' pow' → logprob: -16.625608444213867
    8. '(po' → logprob: -16.875608444213867
    9. '.pow' → logprob: -17.000608444213867
    10. '(py' → logprob: -17.875608444213867

Token 3592: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '2' → logprob: -12.75000286102295
    3. ' (' → logprob: -17.000003814697266
    4. '(
' → logprob: -18.750003814697266
    5. '       ' → logprob: -19.375003814697266
    6. '           ' → logprob: -19.500003814697266
    7. 'pow' → logprob: -19.500003814697266
    8. '```' → logprob: -19.625003814697266
    9. '   ' → logprob: -19.750003814697266
    10. '               ' → logprob: -20.000003814697266

Token 3593: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'pow' → logprob: -15.875003814697266
    4. ' ' → logprob: -17.625003814697266
    5. '```' → logprob: -19.250003814697266
    6. '1' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.375003814697266
    8. '0' → logprob: -19.375003814697266
    9. '-' → logprob: -19.875003814697266
    10. '
' → logprob: -20.125003814697266

Token 3594: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10165014863014221
    2. ',' → logprob: -2.3516502380371094
    3. '2' → logprob: -6.601650238037109
    4. '       ' → logprob: -10.72665023803711
    5. ' (' → logprob: -11.10165023803711
    6. '   ' → logprob: -11.47665023803711
    7. '           ' → logprob: -11.72665023803711
    8. '
' → logprob: -11.85165023803711
    9. ',
' → logprob: -12.47665023803711
    10. '0' → logprob: -12.60165023803711

Token 3595: ' unknown' (ID: 17927)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6176964044570923
    2. 'unknown' → logprob: -0.8676964044570923
    3. '(' → logprob: -3.2426962852478027
    4. 'pow' → logprob: -7.367696285247803
    5. '1' → logprob: -7.992696285247803
    6. '
' → logprob: -8.617696762084961
    7. '   ' → logprob: -9.117696762084961
    8. ' unknown' → logprob: -9.242696762084961
    9. ' ' → logprob: -9.242696762084961
    10. ' (' → logprob: -9.492696762084961

Token 3596: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -7.97024549683556e-05
    2. 'y' → logprob: -9.500080108642578
    3. '_,' → logprob: -13.875080108642578
    4. '_unknown' → logprob: -14.250080108642578
    5. '   ' → logprob: -14.375080108642578
    6. '_bits' → logprob: -14.500080108642578
    7. 'Y' → logprob: -14.625080108642578
    8. '_u' → logprob: -15.125080108642578
    9. '_x' → logprob: -15.500080108642578
    10. '_' → logprob: -15.750080108642578

Token 3597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004886346403509378
    2. '+' → logprob: -5.629886150360107
    3. ' +' → logprob: -7.004886150360107
    4. '-' → logprob: -9.004886627197266
    5. ' ,' → logprob: -9.629886627197266
    6. ',
' → logprob: -9.754886627197266
    7. ' -' → logprob: -9.879886627197266
    8. ')' → logprob: -10.379886627197266
    9. '```' → logprob: -10.379886627197266
    10. '
' → logprob: -12.129886627197266

Token 3598: ' MOD' (ID: 32868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09090401977300644
    2. '1' → logprob: -3.4659039974212646
    3. ' (' → logprob: -3.7159039974212646
    4. '(pow' → logprob: -4.840904235839844
    5. 'pow' → logprob: -4.965904235839844
    6. '-' → logprob: -4.965904235839844
    7. 'MOD' → logprob: -4.965904235839844
    8. '(M' → logprob: -6.590904235839844
    9. '(Mod' → logprob: -8.215904235839844
    10. ' -' → logprob: -9.090904235839844

Token 3599: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0016329283826053143
    2. '-' → logprob: -6.5016326904296875
    3. ')' → logprob: -9.001632690429688
    4. ' ' → logprob: -12.501632690429688
    5. ')-' → logprob: -13.501632690429688
    6. 'def' → logprob: -14.626632690429688
    7. '```' → logprob: -14.626632690429688
    8. '   ' → logprob: -14.876632690429688
    9. '()' → logprob: -15.001632690429688
    10. ' )' → logprob: -15.751632690429688

Token 3600: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004099773708730936
    2. '-' → logprob: -5.5040998458862305
    3. ')' → logprob: -11.75409984588623
    4. ' ' → logprob: -12.12909984588623
    5. 'def' → logprob: -12.50409984588623
    6. '   ' → logprob: -13.37909984588623
    7. '```' → logprob: -14.37909984588623
    8. 'import' → logprob: -14.62909984588623
    9. ' =' → logprob: -14.62909984588623
    10. '
' → logprob: -14.87909984588623

Token 3601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.750097274780273
    4. '
' → logprob: -15.500097274780273
    5. '```' → logprob: -17.125097274780273
    6. ')' → logprob: -18.500097274780273
    7. ' ' → logprob: -18.500097274780273
    8. '       ' → logprob: -18.750097274780273
    9. '  ' → logprob: -19.125097274780273
    10. '(' → logprob: -19.437597274780273

Token 3602: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029319413006305695
    2. ')%' → logprob: -5.877932071685791
    3. ' )' → logprob: -9.002931594848633
    4. '   ' → logprob: -13.252931594848633
    5. '%' → logprob: -13.752931594848633
    6. '```' → logprob: -14.627931594848633
    7. ' %' → logprob: -15.127931594848633
    8. ')
' → logprob: -15.752931594848633
    9. '       ' → logprob: -16.627931594848633
    10. 'def' → logprob: -16.877931594848633

Token 3603: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3158392012119293
    2. '%' → logprob: -1.315839171409607
    3. ')' → logprob: -6.1908392906188965
    4. ')%' → logprob: -7.6908392906188965
    5. '```' → logprob: -9.940838813781738
    6. '<|end|>' → logprob: -12.190838813781738
    7. ' %)' → logprob: -12.815838813781738
    8. ' ' → logprob: -13.315838813781738
    9. '()%' → logprob: -13.565838813781738
    10. '%c' → logprob: -13.565838813781738

Token 3604: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001234428636962548
    2. ' MOD' → logprob: -9.000123023986816
    3. '_MOD' → logprob: -18.250123977661133
    4. '.MOD' → logprob: -19.250123977661133
    5. '```' → logprob: -20.000123977661133
    6. '100' → logprob: -20.125123977661133
    7. 'MO' → logprob: -20.625123977661133
    8. 'MD' → logprob: -21.375123977661133
    9. 'M' → logprob: -22.500123977661133
    10. 'Mod' → logprob: -22.625123977661133

Token 3605: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22611971199512482
    2. '
' → logprob: -1.9761197566986084
    3. '```' → logprob: -2.8511197566986084
    4. ')' → logprob: -6.351119518280029
    5. '<|end|>' → logprob: -6.351119518280029
    6. '+' → logprob: -8.101119995117188
    7. '[' → logprob: -8.226119995117188
    8. 'def' → logprob: -8.351119995117188
    9. '``' → logprob: -8.351119995117188
    10. '

' → logprob: -8.476119995117188

Token 3606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1254044473171234
    2. '
' → logprob: -2.5004043579101562
    3. '```' → logprob: -3.3754043579101562
    4. '``' → logprob: -6.750404357910156
    5. 'x' → logprob: -8.000404357910156
    6. '    
' → logprob: -9.750404357910156
    7. '#' → logprob: -11.250404357910156
    8. '`' → logprob: -12.000404357910156
    9. '

' → logprob: -12.500404357910156
    10. '`
' → logprob: -12.625404357910156

Token 3607: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4352323114871979
    2. 'x' → logprob: -1.4352322816848755
    3. '#' (adapté à ' #') → logprob: -2.185232400894165
    4. '```' → logprob: -6.185232162475586
    5. '``' → logprob: -8.310232162475586
    6. '
' → logprob: -10.185232162475586
    7. 'unknown' → logprob: -11.560232162475586
    8. '    
' → logprob: -12.060232162475586
    9. ' x' → logprob: -12.185232162475586
    10. '`' → logprob: -12.810232162475586

Token 3608: ' Count' (ID: 6789)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018205663189291954
    2. '#' → logprob: -4.018205642700195
    3. '   ' → logprob: -10.018205642700195
    4. '```' → logprob: -12.643205642700195
    5. 'unknown' → logprob: -12.643205642700195
    6. 'total' → logprob: -13.268205642700195
    7. 'count' → logprob: -14.518205642700195
    8. 'def' → logprob: -14.518205642700195
    9. 'cnt' → logprob: -14.518205642700195
    10. '``' → logprob: -14.768205642700195

Token 3609: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1040969043970108
    2. 'unknown' → logprob: -2.4790968894958496
    3. '   ' → logprob: -4.22909688949585
    4. '#' → logprob: -8.979097366333008
    5. 'cnt' → logprob: -9.729097366333008
    6. '```' → logprob: -9.729097366333008
    7. '(' → logprob: -9.729097366333008
    8. ' x' → logprob: -9.854097366333008
    9. '
' → logprob: -10.104097366333008
    10. '(x' → logprob: -10.604097366333008

Token 3610: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.11223088949918747
    2. '_count' → logprob: -2.3622307777404785
    3. 'bits' → logprob: -4.4872307777404785
    4. 'count' → logprob: -7.6122307777404785
    5. '_counts' → logprob: -9.612231254577637
    6. '_indices' → logprob: -10.737231254577637
    7. 'x' → logprob: -10.862231254577637
    8. '_positions' → logprob: -11.237231254577637
    9. '_b' → logprob: -11.362231254577637
    10. '#' → logprob: -11.612231254577637

Token 3611: ' unknown' (ID: 17927)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.017389681190252304
    2. '   ' → logprob: -4.14238977432251
    3. '=' → logprob: -7.51738977432251
    4. '
' → logprob: -8.267389297485352
    5. 'cnt' → logprob: -8.892389297485352
    6. 'unknown' → logprob: -9.017389297485352
    7. 'def' → logprob: -9.517389297485352
    8. '```' → logprob: -9.642389297485352
    9. ' =' → logprob: -10.017389297485352
    10. '#' → logprob: -10.142389297485352

Token 3612: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4304828643798828
    2. 'x' → logprob: -1.1804828643798828
    3. '=' → logprob: -3.805482864379883
    4. '_count' → logprob: -4.430482864379883
    5. ' =' → logprob: -6.055482864379883
    6. 'count' → logprob: -6.555482864379883
    7. '
' → logprob: -6.680482864379883
    8. '_x' → logprob: -6.930482864379883
    9. '```' → logprob: -7.180482864379883
    10. ' x' → logprob: -7.805482864379883

Token 3613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3217248320579529
    2. '=' → logprob: -1.5717248916625977
    3. 'x' → logprob: -3.6967248916625977
    4. '_count' → logprob: -3.8217248916625977
    5. ' =' → logprob: -4.696724891662598
    6. '```' → logprob: -5.196724891662598
    7. 'count' → logprob: -5.946724891662598
    8. '_x' → logprob: -6.946724891662598
    9. '
' → logprob: -7.321724891662598
    10. '=
' → logprob: -7.821724891662598

Token 3614: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0022902563214302063
    2. '   ' → logprob: -6.25229024887085
    3. 'unknown' → logprob: -8.627290725708008
    4. 'cnt' → logprob: -9.502290725708008
    5. '```' → logprob: -10.377290725708008
    6. '
' → logprob: -10.752290725708008
    7. ' x' → logprob: -11.002290725708008
    8. 'def' → logprob: -11.002290725708008
    9. 'count' → logprob: -11.627290725708008
    10. 'total' → logprob: -12.127290725708008

Token 3615: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002687894506379962
    2. 'unknown' → logprob: -6.627687931060791
    3. 'count' → logprob: -7.877687931060791
    4. 'cnt' → logprob: -8.127687454223633
    5. '   ' → logprob: -8.377687454223633
    6. 'total' → logprob: -8.627687454223633
    7. 'byte' → logprob: -9.252687454223633
    8. '#' → logprob: -9.377687454223633
    9. '```' → logprob: -9.752687454223633
    10. 'def' → logprob: -11.002687454223633

Token 3616: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02484523132443428
    2. '2' → logprob: -4.274845123291016
    3. 'x' → logprob: -5.149845123291016
    4. '#' → logprob: -6.399845123291016
    5. '3' → logprob: -6.524845123291016
    6. 'def' → logprob: -7.399845123291016
    7. 'counts' → logprob: -8.024845123291016
    8. 'for' → logprob: -8.524845123291016
    9. '```' → logprob: -9.024845123291016
    10. 'bits' → logprob: -9.149845123291016

Token 3617: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10007713735103607
    2. '_x' → logprob: -2.8500771522521973
    3. '   ' → logprob: -4.350077152252197
    4. '_count' → logprob: -4.725077152252197
    5. 'unknown' → logprob: -5.225077152252197
    6. '_unknown' → logprob: -5.975077152252197
    7. '=' → logprob: -6.475077152252197
    8. ' =' → logprob: -6.600077152252197
    9. '_cnt' → logprob: -7.350077152252197
    10. '_bits' → logprob: -7.350077152252197

Token 3618: ' unknown' (ID: 17927)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.3840223550796509
    2. '_idx' → logprob: -1.8840223550796509
    3. '_unknown' → logprob: -1.8840223550796509
    4. 'x' → logprob: -2.0090222358703613
    5. 'unknown' → logprob: -2.6340222358703613
    6. '_count' → logprob: -2.7590222358703613
    7. 'idx' → logprob: -3.0090222358703613
    8. '_not' → logprob: -4.134022235870361
    9. '_indices' → logprob: -4.259022235870361
    10. ' =' → logprob: -4.259022235870361

Token 3619: ' x' (ID: 1215)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7890125513076782
    2. '_idx' → logprob: -2.0390124320983887
    3. '_x' → logprob: -2.1640124320983887
    4. 'x' → logprob: -2.1640124320983887
    5. '_cnt' → logprob: -3.0390124320983887
    6. '_unknown' → logprob: -3.5390124320983887
    7. 'idx' → logprob: -3.7890124320983887
    8. 'count' → logprob: -3.9140124320983887
    9. ' =' → logprob: -4.039012432098389
    10. 'unknown' → logprob: -4.164012432098389

Token 3620: ' bits' (ID: 18189)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04696301370859146
    2. 'idx' → logprob: -3.9219629764556885
    3. '_bits' → logprob: -5.046963214874268
    4. '_indices' → logprob: -5.046963214874268
    5. '_idxs' → logprob: -5.046963214874268
    6. '_count' → logprob: -5.296963214874268
    7. '_cnt' → logprob: -7.421963214874268
    8. ' =' → logprob: -8.17196273803711
    9. 'bits' → logprob: -9.04696273803711
    10. '_counts' → logprob: -9.04696273803711

Token 3621: ' are' (ID: 553)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08938335627317429
    2. '   ' → logprob: -2.589383363723755
    3. '=' → logprob: -5.464383125305176
    4. 'unknown' → logprob: -5.589383125305176
    5. 'cnt' → logprob: -6.464383125305176
    6. ' =' → logprob: -7.589383125305176
    7. 'count' → logprob: -8.589383125305176
    8. '```' → logprob: -9.714383125305176
    9. 'non' → logprob: -10.839383125305176
    10. '_cnt' → logprob: -11.089383125305176

Token 3622: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5249190330505371
    2. '[]
' → logprob: -1.274919033050537
    3. '[i' → logprob: -2.274919033050537
    4. '[]' → logprob: -3.774919033050537
    5. ' [' → logprob: -6.899919033050537
    6. '[b' → logprob: -7.024919033050537
    7. '[]

' → logprob: -8.524919509887695
    8. '   ' → logprob: -8.649919509887695
    9. ' []
' → logprob: -8.899919509887695
    10. 'set' → logprob: -8.899919509887695

Token 3623: ' not' (ID: 625)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5542346835136414
    2. ' =' → logprob: -1.5542347431182861
    3. '=[' → logprob: -2.054234743118286
    4. '[' → logprob: -2.929234743118286
    5. '_indices' → logprob: -4.929234504699707
    6. 'indices' → logprob: -5.304234504699707
    7. 'idx' → logprob: -5.554234504699707
    8. '_idx' → logprob: -6.054234504699707
    9. 'indexes' → logprob: -6.179234504699707
    10. 'def' → logprob: -6.304234504699707

Token 3624: ' fixed' (ID: 13213)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.684401273727417
    2. 'in' → logprob: -1.434401273727417
    3. 'y' → logprob: -1.934401273727417
    4. 'covered' → logprob: -3.059401273727417
    5. '[y' → logprob: -3.684401273727417
    6. 'handled' → logprob: -4.184401512145996
    7. '[' → logprob: -4.434401512145996
    8. 'count' → logprob: -5.434401512145996
    9. 'used' → logprob: -5.559401512145996
    10. 'range' → logprob: -7.059401512145996

Token 3625: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1773829460144043
    2. 'count' → logprob: -3.3023829460144043
    3. '_count' → logprob: -3.4273829460144043
    4. 'x' → logprob: -3.5523829460144043
    5. '=' → logprob: -4.052382946014404
    6. '```' → logprob: -4.552382946014404
    7. ' =' → logprob: -4.677382946014404
    8. 'unknown' → logprob: -4.802382946014404
    9. 'for' → logprob: -5.302382946014404
    10. 'cnt' → logprob: -6.677382946014404

Token 3626: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16781626641750336
    2. '[' → logprob: -3.542816162109375
    3. '[i' → logprob: -3.542816162109375
    4. 'c' → logprob: -3.542816162109375
    5. 'b' → logprob: -3.917816162109375
    6. 'bits' → logprob: -4.792816162109375
    7. 'range' → logprob: -4.917816162109375
    8. 'in' → logprob: -5.167816162109375
    9. '[c' → logprob: -5.292816162109375
    10. '#' → logprob: -5.542816162109375

Token 3627: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1853477954864502
    2. 'in' → logprob: -1.9353477954864502
    3. '[' → logprob: -4.560347557067871
    4. '[y' → logprob: -5.060347557067871
    5. ' in' → logprob: -6.060347557067871
    6. 'range' → logprob: -6.560347557067871
    7. 'checked' → logprob: -6.810347557067871
    8. ' y' → logprob: -7.185347557067871
    9. '#' → logprob: -7.560347557067871
    10. 'def' → logprob: -7.685347557067871

Token 3628: '

' (ID: 279)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26287156343460083
    2. '   ' → logprob: -1.637871503829956
    3. 'unknown' → logprob: -3.762871503829956
    4. 'non' → logprob: -5.762871742248535
    5. ' =' → logprob: -5.887871742248535
    6. '=' → logprob: -6.012871742248535
    7. '```' → logprob: -6.262871742248535
    8. 'known' → logprob: -7.262871742248535
    9. '#' → logprob: -7.637871742248535
    10. '``' → logprob: -8.012871742248535

Token 3629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08882799744606018
    2. 'x' → logprob: -2.8388280868530273
    3. 'count' → logprob: -4.588828086853027
    4. 'unknown' → logprob: -4.963828086853027
    5. '```' → logprob: -5.713828086853027
    6. 'remaining' → logprob: -6.838828086853027
    7. '``' → logprob: -7.213828086853027
    8. 'cnt' → logprob: -7.213828086853027
    9. 'known' → logprob: -7.338828086853027
    10. ' =' → logprob: -7.713828086853027

Token 3630: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08576114475727081
    2. '   ' → logprob: -2.960761070251465
    3. 'known' → logprob: -4.585761070251465
    4. 'unknown' → logprob: -4.710761070251465
    5. '#' (adapté à ' #') → logprob: -5.710761070251465
    6. '```' → logprob: -6.460761070251465
    7. 'rest' → logprob: -6.835761070251465
    8. 'non' → logprob: -6.835761070251465
    9. 'remaining' → logprob: -7.085761070251465
    10. '``' → logprob: -7.210761070251465

Token 3631: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09218621253967285
    2. '   ' → logprob: -2.842186212539673
    3. 'unknown' → logprob: -3.717186212539673
    4. 'unused' → logprob: -6.592185974121094
    5. 'count' → logprob: -6.967185974121094
    6. 'known' → logprob: -7.342185974121094
    7. '#' → logprob: -7.717185974121094
    8. 'remaining' → logprob: -7.967185974121094
    9. 'non' → logprob: -8.092185974121094
    10. 'cnt' → logprob: -8.217185974121094

Token 3632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008741820929571986
    2. '7' → logprob: -7.875874042510986
    3. '```' → logprob: -8.250874519348145
    4. '[' → logprob: -9.125874519348145
    5. '3' → logprob: -10.000874519348145
    6. '`' → logprob: -11.000874519348145
    7. 'def' → logprob: -11.125874519348145
    8. '
' → logprob: -11.250874519348145
    9. '``' → logprob: -11.875874519348145
    10. ']' → logprob: -12.125874519348145

Token 3633: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.47187644243240356
    2. '_unknown' → logprob: -2.346876382827759
    3. '_known' → logprob: -2.846876382827759
    4. '_x' → logprob: -2.846876382827759
    5. 'x' → logprob: -3.096876382827759
    6. 'unknown' → logprob: -3.721876382827759
    7. '_idx' → logprob: -4.221876621246338
    8. '_fixed' → logprob: -4.471876621246338
    9. '_used' → logprob: -4.471876621246338
    10. '_unused' → logprob: -4.471876621246338

Token 3634: ':' (ID: 25)
  Prédit: '_unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unknown' → logprob: -0.820438802242279
    2. 'unknown' → logprob: -1.6954388618469238
    3. '_x' → logprob: -1.9454388618469238
    4. 'x' → logprob: -2.445438861846924
    5. '_idx' → logprob: -3.570438861846924
    6. '   ' → logprob: -3.945438861846924
    7. '_bits' → logprob: -4.320438861846924
    8. '_not' → logprob: -4.445438861846924
    9. '_count' → logprob: -4.695438861846924
    10. '_indices' → logprob: -4.945438861846924

Token 3635: ' indexes' (ID: 50739)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7068617343902588
    2. 'x' → logprob: -0.9568617343902588
    3. 'unknown' → logprob: -2.706861734390259
    4. 'fixed' → logprob: -3.831861734390259
    5. 'for' → logprob: -4.83186149597168
    6. 'count' → logprob: -5.33186149597168
    7. ' x' → logprob: -5.58186149597168
    8. '[' → logprob: -5.83186149597168
    9. '```' → logprob: -5.83186149597168
    10. 'free' → logprob: -6.33186149597168

Token 3636: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8637834787368774
    2. '=' → logprob: -1.8637834787368774
    3. '[' → logprob: -2.113783359527588
    4. 'def' → logprob: -2.738783359527588
    5. '=[' → logprob: -3.363783359527588
    6. 'set' → logprob: -3.863783359527588
    7. 'rest' → logprob: -3.863783359527588
    8. '#' → logprob: -3.863783359527588
    9. '6' → logprob: -4.238783359527588
    10. '_set' → logprob: -4.238783359527588

Token 3637: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09268789738416672
    2. '0' → logprob: -3.7176878452301025
    3. '=[' → logprob: -4.092688083648682
    4. '4' → logprob: -4.217688083648682
    5. 'range' → logprob: -4.717688083648682
    6. 'def' → logprob: -4.842688083648682
    7. ' =' → logprob: -5.717688083648682
    8. '=' → logprob: -6.217688083648682
    9. '[:' → logprob: -6.217688083648682
    10. '8' → logprob: -6.842688083648682

Token 3638: '..' (ID: 485)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7261747121810913
    2. '```' → logprob: -2.226174831390381
    3. ',' → logprob: -2.476174831390381
    4. '=' → logprob: -2.601174831390381
    5. '...' → logprob: -2.976174831390381
    6. '7' → logprob: -3.226174831390381
    7. '#' → logprob: -3.226174831390381
    8. ':' → logprob: -3.226174831390381
    9. 'def' → logprob: -3.226174831390381
    10. '..' → logprob: -4.476174831390381

Token 3639: '7' (ID: 22)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.518322229385376
    2. '4' → logprob: -1.643322229385376
    3. '7' → logprob: -2.518322229385376
    4. '(' → logprob: -2.893322229385376
    5. '3' → logprob: -3.143322229385376
    6. '5' → logprob: -5.143321990966797
    7. '6' → logprob: -5.268321990966797
    8. '```' → logprob: -5.268321990966797
    9. ']' → logprob: -6.143321990966797
    10. '`' → logprob: -6.143321990966797

Token 3640: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27350282669067383
    2. 'used' → logprob: -2.148502826690674
    3. 'unknown' → logprob: -3.023502826690674
    4. 'known' → logprob: -3.773502826690674
    5. 'x' → logprob: -4.398502826690674
    6. 'fixed' → logprob: -4.648502826690674
    7. '=' → logprob: -4.773502826690674
    8. 'for' → logprob: -5.523502826690674
    9. ' =' → logprob: -6.023502826690674
    10. 'unused' → logprob: -6.273502826690674

Token 3641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021770549938082695
    2. 'x' → logprob: -4.396770477294922
    3. 'unknown' → logprob: -5.521770477294922
    4. 'used' → logprob: -6.771770477294922
    5. 'known' → logprob: -7.021770477294922
    6. 'fixed' → logprob: -7.146770477294922
    7. '```' → logprob: -7.521770477294922
    8. 'non' → logprob: -8.146770477294922
    9. '``' → logprob: -8.271770477294922
    10. ' x' → logprob: -8.396770477294922

Token 3642: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2835099995136261
    2. 'x' → logprob: -1.6585099697113037
    3. 'fixed' → logprob: -4.158510208129883
    4. 'used' → logprob: -4.283510208129883
    5. 'unknown' → logprob: -4.408510208129883
    6. 'known' → logprob: -4.658510208129883
    7. 'count' → logprob: -6.783510208129883
    8. 'for' → logprob: -7.033510208129883
    9. '#' (adapté à ' #') → logprob: -7.158510208129883
    10. '```' → logprob: -7.533510208129883

Token 3643: ' fixed' (ID: 13213)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25787174701690674
    2. '   ' → logprob: -2.007871627807617
    3. 'unknown' → logprob: -2.632871627807617
    4. 'known' → logprob: -4.632871627807617
    5. 'fixed' → logprob: -5.757871627807617
    6. 'non' → logprob: -6.007871627807617
    7. 'unused' → logprob: -6.632871627807617
    8. '#' → logprob: -6.757871627807617
    9. '```' → logprob: -6.757871627807617
    10. 'used' → logprob: -7.257871627807617

Token 3644: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.5710365176200867
    2. '_count' → logprob: -1.9460365772247314
    3. 'bits' → logprob: -2.0710365772247314
    4. '_unknown' → logprob: -3.5710365772247314
    5. '_fixed' → logprob: -3.6960365772247314
    6. '_counts' → logprob: -4.071036338806152
    7. 'unknown' → logprob: -4.196036338806152
    8. 'count' → logprob: -4.446036338806152
    9. ' =' → logprob: -4.446036338806152
    10. '=' → logprob: -4.446036338806152

Token 3645: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0203765630722046
    2. '   ' → logprob: -1.1453765630722046
    3. '=' → logprob: -2.145376682281494
    4. 'unknown' → logprob: -3.770376682281494
    5. 'used' → logprob: -3.770376682281494
    6. '_used' → logprob: -4.145376682281494
    7. '=[' → logprob: -4.395376682281494
    8. '```' → logprob: -4.395376682281494
    9. '_unknown' → logprob: -4.520376682281494
    10. '_set' → logprob: -4.645376682281494

Token 3646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04765624180436134
    2. 'fixed' → logprob: -3.172656297683716
    3. '#' → logprob: -5.672656059265137
    4. '```' → logprob: -7.922656059265137
    5. 'for' → logprob: -8.047656059265137
    6. '_fixed' → logprob: -8.797656059265137
    7. '[' → logprob: -9.047656059265137
    8. '``' → logprob: -9.172656059265137
    9. '
' → logprob: -9.672656059265137
    10. '`' → logprob: -10.672656059265137

Token 3647: ' #' (ID: 1069)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.005000820849090815
    2. '   ' → logprob: -5.505000591278076
    3. 'for' → logprob: -7.630000591278076
    4. ' fixed' → logprob: -8.630001068115234
    5. '#' (adapté à ' #') → logprob: -8.630001068115234
    6. '[' → logprob: -9.880001068115234
    7. '_fixed' → logprob: -11.880001068115234
    8. '
' → logprob: -12.505001068115234
    9. '{' → logprob: -12.630001068115234
    10. 'known' → logprob: -12.630001068115234

Token 3648: ' b' (ID: 287)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.019613584503531456
    2. 'for' → logprob: -4.394613742828369
    3. '   ' → logprob: -5.894613742828369
    4. '#' → logprob: -5.894613742828369
    5. 'excluded' → logprob: -8.394613265991211
    6. 'known' → logprob: -8.394613265991211
    7. 'used' → logprob: -8.519613265991211
    8. 'x' → logprob: -8.644613265991211
    9. '[' → logprob: -8.769613265991211
    10. '4' → logprob: -9.644613265991211

Token 3649: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0927806869149208
    2. '1' → logprob: -2.967780590057373
    3. '4' → logprob: -3.342780590057373
    4. '3' → logprob: -7.092780590057373
    5. '7' → logprob: -7.592780590057373
    6. '```' → logprob: -8.592781066894531
    7. '[
' → logprob: -9.467781066894531
    8. '5' → logprob: -9.842781066894531
    9. '#' → logprob: -9.967781066894531
    10. ']' → logprob: -10.967781066894531

Token 3650: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012403888104017824
    2. '```' → logprob: -9.750123977661133
    3. '#' → logprob: -10.625123977661133
    4. '4' → logprob: -11.625123977661133
    5. '`' → logprob: -12.000123977661133
    6. '=' → logprob: -12.000123977661133
    7. '[
' → logprob: -12.625123977661133
    8. '=[' → logprob: -12.625123977661133
    9. '
' → logprob: -13.000123977661133
    10. ' =' → logprob: -13.250123977661133

Token 3651: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6222066879272461
    2. '0' → logprob: -0.9972066879272461
    3. '3' → logprob: -2.622206687927246
    4. '7' → logprob: -4.122206687927246
    5. '(' → logprob: -5.497206687927246
    6. '[' → logprob: -8.122206687927246
    7. '6' → logprob: -8.497206687927246
    8. '5' → logprob: -8.747206687927246
    9. '2' → logprob: -8.747206687927246
    10. '
' → logprob: -8.872206687927246

Token 3652: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018962513655424118
    2. '],' → logprob: -5.393962383270264
    3. '..' → logprob: -5.518962383270264
    4. 'not' → logprob: -6.143962383270264
    5. '...' → logprob: -6.143962383270264
    6. ':' → logprob: -6.268962383270264
    7. ' not' → logprob: -7.268962383270264
    8. '```' → logprob: -7.393962383270264
    9. '   ' → logprob: -7.768962383270264
    10. ']=='' → logprob: -8.143962860107422

Token 3653: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7659897804260254
    2. '1' → logprob: -0.8909897804260254
    3. ']' → logprob: -2.3909897804260254
    4. '7' → logprob: -4.515989780426025
    5. '3' → logprob: -5.140989780426025
    6. '0' → logprob: -5.390989780426025
    7. '```' → logprob: -5.890989780426025
    8. '5' → logprob: -6.140989780426025
    9. '])' → logprob: -6.515989780426025
    10. '(' → logprob: -6.765989780426025

Token 3654: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10791794210672379
    2. ':' → logprob: -2.9829180240631104
    3. '```' → logprob: -3.9829180240631104
    4. '[' → logprob: -4.982917785644531
    5. '...' → logprob: -5.357917785644531
    6. '7' → logprob: -5.357917785644531
    7. '..' → logprob: -5.482917785644531
    8. ',' → logprob: -6.107917785644531
    9. ']=' → logprob: -6.482917785644531
    10. ':]' → logprob: -6.607917785644531

Token 3655: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6830341219902039
    2. '3' → logprob: -1.9330341815948486
    3. ')' → logprob: -2.8080341815948486
    4. '7' → logprob: -3.1830341815948486
    5. ' not' → logprob: -3.3080341815948486
    6. ''' → logprob: -3.4330341815948486
    7. '```' → logprob: -3.4330341815948486
    8. ' b' → logprob: -3.6830341815948486
    9. ' ' → logprob: -4.1830339431762695
    10. '`' → logprob: -4.4330339431762695

Token 3656: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14583724737167358
    2. '```' → logprob: -2.6458373069763184
    3. ' for' → logprob: -4.270837306976318
    4. 'for' → logprob: -4.645837306976318
    5. '       ' → logprob: -4.895837306976318
    6. '[' → logprob: -5.270837306976318
    7. ',' → logprob: -5.395837306976318
    8. 'b' → logprob: -5.520837306976318
    9. '#' → logprob: -5.895837306976318
    10. 'def' → logprob: -6.020837306976318

Token 3657: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22433483600616455
    2. '1' → logprob: -3.224334716796875
    3. 'b' → logprob: -3.224334716796875
    4. '('' → logprob: -3.849334716796875
    5. ',' → logprob: -4.099334716796875
    6. ''b' → logprob: -4.099334716796875
    7. '`' → logprob: -4.224334716796875
    8. '(' → logprob: -4.474334716796875
    9. '=' → logprob: -4.849334716796875
    10. '='' → logprob: -5.599334716796875

Token 3658: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.35409677028656
    2. '   ' → logprob: -1.47909677028656
    3. ',' → logprob: -2.1040968894958496
    4. '3' → logprob: -2.4790968894958496
    5. '[' → logprob: -3.1040968894958496
    6. 'def' → logprob: -3.1040968894958496
    7. ')' → logprob: -3.2290968894958496
    8. '7' → logprob: -3.4790968894958496
    9. 'b' → logprob: -3.7290968894958496
    10. '#' → logprob: -3.8540968894958496

Token 3659: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04899245500564575
    2. '3' → logprob: -3.423992395401001
    3. '7' → logprob: -5.54899263381958
    4. '```' → logprob: -5.67399263381958
    5. ']' → logprob: -6.54899263381958
    6. 'b' → logprob: -7.29899263381958
    7. ' ,' → logprob: -7.42399263381958
    8. ',b' → logprob: -7.54899263381958
    9. '   ' → logprob: -7.67399263381958
    10. '1' → logprob: -7.67399263381958

Token 3660: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6432309150695801
    2. '3' → logprob: -1.01823091506958
    3. '```' → logprob: -3.01823091506958
    4. 'b' → logprob: -3.51823091506958
    5. '[' → logprob: -4.26823091506958
    6. '   ' → logprob: -4.64323091506958
    7. ',b' → logprob: -5.51823091506958
    8. '``' → logprob: -6.51823091506958
    9. ',
' → logprob: -6.64323091506958
    10. '#' → logprob: -7.01823091506958

Token 3661: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015124442987143993
    2. '3' → logprob: -4.515124320983887
    3. '1' → logprob: -6.015124320983887
    4. '```' → logprob: -6.765124320983887
    5. '`' → logprob: -8.390124320983887
    6. ' ' → logprob: -8.640124320983887
    7. ''' → logprob: -10.765124320983887
    8. '   ' → logprob: -11.015124320983887
    9. '``' → logprob: -11.890124320983887
    10. '
' → logprob: -12.140124320983887

Token 3662: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7823524475097656
    2. '   ' → logprob: -1.6573524475097656
    3. 'for' → logprob: -1.6573524475097656
    4. 'b' → logprob: -2.9073524475097656
    5. 'def' → logprob: -3.2823524475097656
    6. '[' → logprob: -3.4073524475097656
    7. '#' → logprob: -4.282352447509766
    8. ' for' → logprob: -4.532352447509766
    9. '``' → logprob: -5.282352447509766
    10. ',' → logprob: -6.032352447509766

Token 3663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05448273569345474
    2. '```' → logprob: -3.1794826984405518
    3. 'for' → logprob: -5.054482936859131
    4. '#' → logprob: -5.679482936859131
    5. '``' → logprob: -7.429482936859131
    6. ' for' → logprob: -8.179482460021973
    7. ',' → logprob: -8.429482460021973
    8. '[' → logprob: -9.054482460021973
    9. 'b' → logprob: -9.054482460021973
    10. 'def' → logprob: -9.304482460021973

Token 3664: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07305704057216644
    2. '```' → logprob: -3.198056936264038
    3. 'for' → logprob: -3.823056936264038
    4. ' for' → logprob: -6.198057174682617
    5. '[' → logprob: -6.323057174682617
    6. '``' → logprob: -6.698057174682617
    7. 'b' → logprob: -6.823057174682617
    8. ')' → logprob: -7.948057174682617
    9. ',' → logprob: -8.448057174682617
    10. '
' → logprob: -8.448057174682617

Token 3665: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3219655454158783
    2. '   ' → logprob: -2.196965456008911
    3. 'b' → logprob: -2.696965456008911
    4. '#' → logprob: -3.696965456008911
    5. 'fixed' → logprob: -3.821965456008911
    6. '[' → logprob: -3.821965456008911
    7. 'x' → logprob: -4.82196569442749
    8. 'count' → logprob: -5.32196569442749
    9. 'remaining' → logprob: -5.82196569442749
    10. '
' → logprob: -6.07196569442749

Token 3666: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.25000286102295
    3. '[' → logprob: -15.75000286102295
    4. '
' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.125001907348633
    6. '#' → logprob: -16.500001907348633
    7. '``' → logprob: -16.500001907348633
    8. '1' → logprob: -17.000001907348633
    9. '(' → logprob: -17.625001907348633
    10. '`' → logprob: -17.750001907348633

Token 3667: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013321286998689175
    2. '3' → logprob: -4.388321399688721
    3. '   ' → logprob: -7.763321399688721
    4. '```' → logprob: -9.013320922851562
    5. '
' → logprob: -9.513320922851562
    6. 'def' → logprob: -10.013320922851562
    7. '4' → logprob: -10.638320922851562
    8. '`' → logprob: -11.013320922851562
    9. '=' → logprob: -11.388320922851562
    10. ' =' → logprob: -11.388320922851562

Token 3668: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -13.875001907348633
    3. '
' → logprob: -14.375001907348633
    4. '```' → logprob: -15.000001907348633
    5. '(' → logprob: -15.625001907348633
    6. '[' → logprob: -16.125001907348633
    7. ' ' → logprob: -16.125001907348633
    8. ']' → logprob: -16.875001907348633
    9. '4' → logprob: -17.000001907348633
    10. '  ' → logprob: -17.375001907348633

Token 3669: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26801592111587524
    2. 'not' → logprob: -1.8930158615112305
    3. ' not' → logprob: -3.5180158615112305
    4. ']=='' → logprob: -3.6430158615112305
    5. ']!='' → logprob: -4.3930158615112305
    6. ']==' → logprob: -4.7680158615112305
    7. ']!=' → logprob: -5.5180158615112305
    8. ':' → logprob: -7.3930158615112305
    9. ']='' → logprob: -7.8930158615112305
    10. ']:
' → logprob: -8.01801586151123

Token 3670: ' fixed' (ID: 13213)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26929640769958496
    2. ''x' → logprob: -1.519296407699585
    3. '('' → logprob: -5.519296646118164
    4. ''in' → logprob: -5.644296646118164
    5. ' '' → logprob: -5.644296646118164
    6. 'not' → logprob: -5.894296646118164
    7. '0' → logprob: -7.019296646118164
    8. ' not' → logprob: -7.519296646118164
    9. 'in' → logprob: -8.144296646118164
    10. ''b' → logprob: -8.269296646118164

Token 3671: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3154338598251343
    2. 'not' → logprob: -1.4404338598251343
    3. 'in' → logprob: -1.5654338598251343
    4. '```' → logprob: -2.315433979034424
    5. '==' → logprob: -2.815433979034424
    6. '=='' → logprob: -3.440433979034424
    7. '`' → logprob: -3.565433979034424
    8. ' not' → logprob: -4.315433979034424
    9. ' in' → logprob: -4.440433979034424
    10. '
' → logprob: -4.815433979034424

Token 3672: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.747814349073451e-05
    2. '0' → logprob: -11.500017166137695
    3. '`' → logprob: -12.500017166137695
    4. ' '' → logprob: -13.500017166137695
    5. '('' → logprob: -14.125017166137695
    6. '='' → logprob: -14.875017166137695
    7. '    
' → logprob: -14.875017166137695
    8. '```' → logprob: -15.250017166137695
    9. '"' → logprob: -16.000017166137695
    10. '   ' → logprob: -16.750017166137695

Token 3673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010800083167850971
    2. '```' → logprob: -5.135799884796143
    3. 'for' → logprob: -6.010799884796143
    4. '
' → logprob: -6.635799884796143
    5. 'if' → logprob: -7.760799884796143
    6. ' for' → logprob: -8.1358003616333
    7. ')' → logprob: -9.1358003616333
    8. '       ' → logprob: -9.3858003616333
    9. ' if' → logprob: -10.0108003616333
    10. '    
' → logprob: -10.8858003616333

Token 3674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3994249105453491
    2. 'for' → logprob: -1.1494249105453491
    3. '```' → logprob: -4.524425029754639
    4. ' for' → logprob: -7.149425029754639
    5. '#' → logprob: -8.27442455291748
    6. '``' → logprob: -8.52442455291748
    7. 'b' → logprob: -8.77442455291748
    8. '`' → logprob: -9.27442455291748
    9. 'x' → logprob: -9.77442455291748
    10. 'count' → logprob: -11.14942455291748

Token 3675: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04184165596961975
    2. 'x' → logprob: -4.041841506958008
    3. 'count' → logprob: -4.291841506958008
    4. '```' → logprob: -5.541841506958008
    5. 'for' → logprob: -6.291841506958008
    6. 'unknown' → logprob: -6.541841506958008
    7. 'cnt' → logprob: -7.041841506958008
    8. '``' → logprob: -7.291841506958008
    9. '
' → logprob: -7.916841506958008
    10. 'remaining' → logprob: -9.041841506958008

Token 3676: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0018694984028115869
    2. '   ' → logprob: -7.0018696784973145
    3. 'unknown' → logprob: -7.5018696784973145
    4. 'cnt' → logprob: -8.501869201660156
    5. 'count' → logprob: -9.501869201660156
    6. '#' → logprob: -10.251869201660156
    7. 'fixed' → logprob: -10.501869201660156
    8. 'def' → logprob: -11.126869201660156
    9. 'total' → logprob: -11.751869201660156
    10. 'b' → logprob: -11.751869201660156

Token 3677: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.22281686961650848
    2. '[' → logprob: -1.847816824913025
    3. '7' → logprob: -3.2228169441223145
    4. '1' → logprob: -6.7228169441223145
    5. '#' → logprob: -7.7228169441223145
    6. '```' → logprob: -8.347816467285156
    7. '[
' → logprob: -8.597816467285156
    8. '3' → logprob: -9.847816467285156
    9. '5' → logprob: -9.972816467285156
    10. ']' → logprob: -10.597816467285156

Token 3678: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006618033512495458
    2. '4' → logprob: -8.375661849975586
    3. '#' → logprob: -8.875661849975586
    4. '7' → logprob: -9.250661849975586
    5. '```' → logprob: -9.875661849975586
    6. '   ' → logprob: -10.375661849975586
    7. 'def' → logprob: -10.625661849975586
    8. '6' → logprob: -10.625661849975586
    9. '
' → logprob: -11.000661849975586
    10. 'for' → logprob: -12.000661849975586

Token 3679: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.750000953674316
    3. '(' → logprob: -15.375000953674316
    4. '#' → logprob: -16.250001907348633
    5. 'i' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.750001907348633
    7. ']' → logprob: -16.875001907348633
    8. '```' → logprob: -17.000001907348633
    9. '7' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.625001907348633

Token 3680: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08709101378917694
    2. ':' → logprob: -3.0870909690856934
    3. ']' → logprob: -4.212090969085693
    4. ':]' → logprob: -4.337090969085693
    5. '],' → logprob: -5.462090969085693
    6. ']=' → logprob: -6.837090969085693
    7. '7' → logprob: -7.087090969085693
    8. ',
' → logprob: -7.337090969085693
    9. '
' → logprob: -7.712090969085693
    10. '6' → logprob: -7.837090969085693

Token 3681: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06320535391569138
    2. '7' → logprob: -2.8132052421569824
    3. '4' → logprob: -6.813205242156982
    4. '6' → logprob: -9.18820571899414
    5. '
' → logprob: -11.06320571899414
    6. '```' → logprob: -11.43820571899414
    7. ' ' → logprob: -13.43820571899414
    8. '   ' → logprob: -13.56320571899414
    9. ']' → logprob: -13.68820571899414
    10. '#' → logprob: -13.68820571899414

Token 3682: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46295487880706787
    2. ']:' → logprob: -1.2129548788070679
    3. ']:
' → logprob: -3.0879549980163574
    4. ']=' → logprob: -4.337954998016357
    5. ':' → logprob: -5.087954998016357
    6. ':]' → logprob: -5.337954998016357
    7. '],' → logprob: -6.837954998016357
    8. ',' → logprob: -7.462954998016357
    9. ']='' → logprob: -7.712954998016357
    10. '   ' → logprob: -8.3379545211792

Token 3683: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9519977569580078
    2. '0' → logprob: -1.8269977569580078
    3. 'x' → logprob: -1.9519977569580078
    4. '[]' → logprob: -2.701997756958008
    5. 'None' → logprob: -3.201997756958008
    6. 'pass' → logprob: -3.451997756958008
    7. 'b' → logprob: -3.701997756958008
    8. 'def' → logprob: -3.826997756958008
    9. ')' → logprob: -3.951997756958008
    10. '   ' → logprob: -4.201997756958008

Token 3684: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017645858228206635
    2. 'x' → logprob: -4.767645835876465
    3. '```' → logprob: -5.267645835876465
    4. '
' → logprob: -7.017645835876465
    5. 'unknown' → logprob: -7.017645835876465
    6. 'for' → logprob: -7.767645835876465
    7. '#' → logprob: -8.142645835876465
    8. '``' → logprob: -8.267645835876465
    9. 'def' → logprob: -8.392645835876465
    10. 'count' → logprob: -8.392645835876465

Token 3685: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0539044626057148
    2. 'x' → logprob: -3.3039045333862305
    3. '
' → logprob: -4.6789045333862305
    4. 'for' → logprob: -6.4289045333862305
    5. '```' → logprob: -6.5539045333862305
    6. 'unknown' → logprob: -7.0539045333862305
    7. '    
' → logprob: -7.3039045333862305
    8. 'def' → logprob: -7.6789045333862305
    9. 'count' → logprob: -7.6789045333862305
    10. '#' → logprob: -8.42890453338623

Token 3686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16156239807605743
    2. 'x' → logprob: -2.036562442779541
    3. 'count' → logprob: -4.536562442779541
    4. 'for' → logprob: -6.036562442779541
    5. 'i' → logprob: -6.661562442779541
    6. 'unknown' → logprob: -6.786562442779541
    7. '```' → logprob: -7.036562442779541
    8. 'cnt' → logprob: -7.286562442779541
    9. '
' → logprob: -7.536562442779541
    10. 'idx' → logprob: -8.536561965942383

Token 3687: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3159225583076477
    2. '   ' → logprob: -1.315922498703003
    3. '```' → logprob: -7.065922737121582
    4. 'count' → logprob: -7.315922737121582
    5. 'unknown' → logprob: -7.315922737121582
    6. '#' (adapté à ' #') → logprob: -8.815922737121582
    7. '
' → logprob: -9.315922737121582
    8. '``' → logprob: -9.565922737121582
    9. ' x' → logprob: -10.315922737121582
    10. 'cnt' → logprob: -10.565922737121582

Token 3688: ' So' (ID: 2632)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05781617760658264
    2. '   ' → logprob: -3.18281626701355
    3. 'unknown' → logprob: -4.557816028594971
    4. 'count' → logprob: -6.432816028594971
    5. 'cnt' → logprob: -6.807816028594971
    6. '#' → logprob: -7.182816028594971
    7. '```' → logprob: -9.057816505432129
    8. 'rest' → logprob: -9.057816505432129
    9. 'remaining' → logprob: -9.807816505432129
    10. 'unused' → logprob: -9.932816505432129

Token 3689: ' no' (ID: 860)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00028159678913652897
    2. '#' → logprob: -9.00028133392334
    3. '   ' → logprob: -9.50028133392334
    4. 'unknown' → logprob: -10.25028133392334
    5. 'cnt' → logprob: -10.75028133392334
    6. ' x' → logprob: -11.75028133392334
    7. 'for' → logprob: -12.00028133392334
    8. 'count' → logprob: -12.12528133392334
    9. 'def' → logprob: -12.87528133392334
    10. '
' → logprob: -13.37528133392334

Token 3690: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4818291664123535
    2. '#' → logprob: -1.6068291664123535
    3. 'unknown' → logprob: -1.6068291664123535
    4. '   ' → logprob: -2.1068291664123535
    5. 'more' → logprob: -2.7318291664123535
    6. '
' → logprob: -3.2318291664123535
    7. 'def' → logprob: -3.6068291664123535
    8. 'change' → logprob: -3.9818291664123535
    9. 'code' → logprob: -4.4818291664123535
    10. 'count' → logprob: -4.6068291664123535

Token 3691: ' bits' (ID: 18189)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5571791529655457
    2. '   ' → logprob: -1.1821792125701904
    3. '```' → logprob: -3.0571792125701904
    4. '
' → logprob: -4.057178974151611
    5. 'for' → logprob: -4.307178974151611
    6. ')' → logprob: -4.682178974151611
    7. 'def' → logprob: -5.182178974151611
    8. 'count' → logprob: -5.182178974151611
    9. '#' → logprob: -5.307178974151611
    10. 'x' → logprob: -5.432178974151611

Token 3692: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03250844031572342
    2. 'for' → logprob: -4.782508373260498
    3. '```' → logprob: -4.782508373260498
    4. '
' → logprob: -5.157508373260498
    5. 'def' → logprob: -6.032508373260498
    6. '#' → logprob: -6.407508373260498
    7. ')' → logprob: -6.407508373260498
    8. 'x' → logprob: -6.782508373260498
    9. ',' → logprob: -7.782508373260498
    10. '    
' → logprob: -7.907508373260498

Token 3693: ' byte' (ID: 9239)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5776344537734985
    2. 'byte' → logprob: -0.8276344537734985
    3. 'the' → logprob: -7.577634334564209
    4. 'this' → logprob: -7.952634334564209
    5. 'def' → logprob: -8.202634811401367
    6. 'remaining' → logprob: -9.077634811401367
    7. '```' → logprob: -9.202634811401367
    8. '#' → logprob: -9.577634811401367
    9. 'bytes' → logprob: -9.702634811401367
    10. 'positions' → logprob: -9.827634811401367

Token 3694: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6428107619285583
    2. ':
' → logprob: -2.142810821533203
    3. ':' → logprob: -2.267810821533203
    4. 'def' → logprob: -2.267810821533203
    5. ')' → logprob: -2.767810821533203
    6. '```' → logprob: -3.267810821533203
    7. '):
' → logprob: -4.267810821533203
    8. '):' → logprob: -4.267810821533203
    9. ')
' → logprob: -5.767810821533203
    10. '[' → logprob: -6.267810821533203

Token 3695: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05909033119678497
    2. 'x' → logprob: -3.0590903759002686
    3. '#' → logprob: -5.5590901374816895
    4. '
' → logprob: -6.0590901374816895
    5. 'def' → logprob: -6.4340901374816895
    6. '```' → logprob: -6.5590901374816895
    7. 'for' → logprob: -6.9340901374816895
    8. '    
' → logprob: -9.184090614318848
    9. '``' → logprob: -10.559090614318848
    10. 'count' → logprob: -10.684090614318848

Token 3696: ' all' (ID: 722)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5768408179283142
    2. '   ' → logprob: -0.9518408179283142
    3. '#' → logprob: -3.951840877532959
    4. '```' → logprob: -4.201840877532959
    5. 'for' → logprob: -4.951840877532959
    6. '
' → logprob: -5.201840877532959
    7. 'return' → logprob: -6.326840877532959
    8. 'count' → logprob: -6.576840877532959
    9. 'pass' → logprob: -7.076840877532959
    10. '    
' → logprob: -8.2018404006958

Token 3697: ' fixed' (ID: 13213)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -1.3685235977172852
    2. 'fixed' → logprob: -1.3685235977172852
    3. 'remaining' → logprob: -1.9935235977172852
    4. 'handled' → logprob: -2.368523597717285
    5. 'bits' → logprob: -2.868523597717285
    6. 'known' → logprob: -3.243523597717285
    7. 'processed' → logprob: -3.368523597717285
    8. 'other' → logprob: -3.493523597717285
    9. 'unknown' → logprob: -3.618523597717285
    10. 'done' → logprob: -3.993523597717285

Token 3698: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07966583222150803
    2. '```' → logprob: -3.3296658992767334
    3. 'for' → logprob: -3.9546658992767334
    4. '
' → logprob: -4.329665660858154
    5. '#' → logprob: -5.829665660858154
    6. 'x' → logprob: -6.079665660858154
    7. ' for' → logprob: -7.079665660858154
    8. '``' → logprob: -7.454665660858154
    9. '    
' → logprob: -7.704665660858154
    10. ')' → logprob: -8.079666137695312

Token 3699: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00022976152831688523
    2. '#' → logprob: -8.750229835510254
    3. 'covered' → logprob: -11.000229835510254
    4. 'checked' → logprob: -11.125229835510254
    5. 'y's' → logprob: -11.750229835510254
    6. 'known' → logprob: -11.750229835510254
    7. 'ignored' → logprob: -12.500229835510254
    8. 'handled' → logprob: -12.625229835510254
    9. ''y' → logprob: -12.625229835510254
    10. 'reserved' → logprob: -12.750229835510254

Token 3700: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10130377858877182
    2. 'x' → logprob: -2.851303815841675
    3. '
' → logprob: -3.851303815841675
    4. '#' → logprob: -4.851303577423096
    5. '```' → logprob: -5.101303577423096
    6. 'for' → logprob: -6.351303577423096
    7. 'def' → logprob: -6.976303577423096
    8. '    
' → logprob: -8.726304054260254
    9. ' for' → logprob: -8.851304054260254
    10. 'count' → logprob: -8.851304054260254

Token 3701: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18069800734519958
    2. 'x' → logprob: -1.930698037147522
    3. '#' → logprob: -4.930697917938232
    4. '
' → logprob: -5.305697917938232
    5. '```' → logprob: -5.680697917938232
    6. 'for' → logprob: -5.930697917938232
    7. '    
' → logprob: -7.055697917938232
    8. 'count' → logprob: -7.430697917938232
    9. 'def' → logprob: -8.43069839477539
    10. '``' → logprob: -9.80569839477539

Token 3702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08194324374198914
    2. 'x' → logprob: -2.7069432735443115
    3. '```' → logprob: -5.206943035125732
    4. '
' → logprob: -5.581943035125732
    5. '#' → logprob: -6.456943035125732
    6. 'count' → logprob: -7.581943035125732
    7. 'for' → logprob: -8.08194351196289
    8. '``' → logprob: -8.83194351196289
    9. '    
' → logprob: -9.83194351196289
    10. 'byte' → logprob: -10.20694351196289

Token 3703: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31353408098220825
    2. '#' (adapté à ' #') → logprob: -1.6885340213775635
    3. 'x' → logprob: -2.5635340213775635
    4. '
' → logprob: -5.688534259796143
    5. '```' → logprob: -5.688534259796143
    6. '``' → logprob: -8.313533782958984
    7. 'def' → logprob: -9.688533782958984
    8. 'count' → logprob: -9.688533782958984
    9. '    
' → logprob: -9.938533782958984
    10. 'cnt' → logprob: -10.188533782958984

Token 3704: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33847951889038086
    2. '   ' → logprob: -1.3384795188903809
    3. '#' → logprob: -3.713479518890381
    4. '```' → logprob: -8.088479995727539
    5. '
' → logprob: -9.463479995727539
    6. 'cnt' → logprob: -10.213479995727539
    7. 'unknown' → logprob: -10.963479995727539
    8. 'byte' → logprob: -11.088479995727539
    9. 'count' → logprob: -11.213479995727539
    10. '``' → logprob: -11.588479995727539

Token 3705: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -13.125003814697266
    3. '3' → logprob: -14.125003814697266
    4. '[' → logprob: -14.750003814697266
    5. '```' → logprob: -15.000003814697266
    6. '1' → logprob: -15.250003814697266
    7. '#' → logprob: -15.625003814697266
    8. '`' → logprob: -16.125003814697266
    9. ' ' → logprob: -16.875003814697266
    10. 'b' → logprob: -17.000003814697266

Token 3706: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6577564477920532
    2. '_bits' → logprob: -1.1577564477920532
    3. 'bits' → logprob: -2.0327563285827637
    4. 'unknown' → logprob: -4.532756328582764
    5. '#' → logprob: -4.907756328582764
    6. '_x' → logprob: -5.032756328582764
    7. '_idx' → logprob: -5.532756328582764
    8. 'idx' → logprob: -5.907756328582764
    9. '_unknown' → logprob: -7.032756328582764
    10. '_indices' → logprob: -7.157756328582764

Token 3707: ':
' (ID: 734)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7480583190917969
    2. '_x' → logprob: -0.9980583190917969
    3. 'unknown' → logprob: -2.998058319091797
    4. '   ' → logprob: -2.998058319091797
    5. '_unknown' → logprob: -3.873058319091797
    6. '#' → logprob: -3.998058319091797
    7. 'for' → logprob: -5.748058319091797
    8. '[' → logprob: -6.123058319091797
    9. '_bits' → logprob: -6.248058319091797
    10. ' =' → logprob: -6.498058319091797

Token 3708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04336784780025482
    2. '#' → logprob: -3.418367862701416
    3. 'for' → logprob: -5.293367862701416
    4. 'x' → logprob: -6.168367862701416
    5. '[' → logprob: -6.918367862701416
    6. '```' → logprob: -7.043367862701416
    7. '
' → logprob: -8.918367385864258
    8. '`' → logprob: -8.918367385864258
    9. '``' → logprob: -8.918367385864258
    10. ' #' → logprob: -9.543367385864258

Token 3709: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06031166389584541
    2. 'x' → logprob: -3.9353115558624268
    3. 'for' → logprob: -4.060311794281006
    4. '#' (adapté à ' #') → logprob: -4.810311794281006
    5. '[' → logprob: -4.810311794281006
    6. '```' → logprob: -6.810311794281006
    7. '``' → logprob: -6.935311794281006
    8. ' for' → logprob: -7.810311794281006
    9. '`' → logprob: -8.185311317443848
    10. 'idx' → logprob: -8.185311317443848

Token 3710: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8600038290023804
    2. '#' → logprob: -1.1100038290023804
    3. '   ' → logprob: -1.6100038290023804
    4. 'for' → logprob: -3.48500394821167
    5. '3' → logprob: -5.36000394821167
    6. '4' → logprob: -5.86000394821167
    7. '[' → logprob: -5.86000394821167
    8. 'unknown' → logprob: -6.36000394821167
    9. 'y' → logprob: -6.73500394821167
    10. 'range' → logprob: -7.23500394821167

Token 3711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4329845607280731
    2. '[' → logprob: -1.0579845905303955
    3. '3' → logprob: -6.432984352111816
    4. ']' → logprob: -7.182984352111816
    5. '4' → logprob: -7.432984352111816
    6. 'r' → logprob: -7.807984352111816
    7. '5' → logprob: -8.682984352111816
    8. '#' → logprob: -8.682984352111816
    9. '7' → logprob: -8.807984352111816
    10. '```' → logprob: -9.057984352111816

Token 3712: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12586043775081635
    2. '#' → logprob: -3.6258604526519775
    3. '=' → logprob: -3.6258604526519775
    4. '4' → logprob: -3.6258604526519775
    5. ' =' → logprob: -4.500860214233398
    6. '3' → logprob: -5.375860214233398
    7. '```' → logprob: -5.375860214233398
    8. 'def' → logprob: -5.875860214233398
    9. '
' → logprob: -6.125860214233398
    10. '8' → logprob: -6.500860214233398

Token 3713: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03827110677957535
    2. '2' → logprob: -3.288271188735962
    3. '[' → logprob: -9.413270950317383
    4. '   ' → logprob: -9.413270950317383
    5. '(' → logprob: -10.163270950317383
    6. ' ' → logprob: -11.538270950317383
    7. 'range' → logprob: -11.788270950317383
    8. '  ' → logprob: -12.913270950317383
    9. '
' → logprob: -13.163270950317383
    10. ']' → logprob: -13.913270950317383

Token 3714: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0591599941253662
    2. '3' → logprob: -2.184159994125366
    3. ':' → logprob: -2.434159994125366
    4. 'not' → logprob: -2.434159994125366
    5. ':]' → logprob: -2.434159994125366
    6. '2' → logprob: -2.684159994125366
    7. '
' → logprob: -3.059159994125366
    8. '...' → logprob: -3.559159994125366
    9. ':
' → logprob: -3.934159994125366
    10. '[' → logprob: -4.309160232543945

Token 3715: ' fixed' (ID: 13213)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25775447487831116
    2. 'not' → logprob: -1.7577544450759888
    3. ' not' → logprob: -3.3827545642852783
    4. '1' → logprob: -4.382754325866699
    5. ''in' → logprob: -5.507754325866699
    6. '2' → logprob: -6.882754325866699
    7. '   ' → logprob: -7.257754325866699
    8. '3' → logprob: -7.507754325866699
    9. ' '' → logprob: -8.0077543258667
    10. ''int' → logprob: -8.5077543258667

Token 3716: ' ' (ID: 220)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6667197346687317
    2. ' not' → logprob: -1.166719675064087
    3. ''' → logprob: -1.791719675064087
    4. ''in' → logprob: -5.791719913482666
    5. '
' → logprob: -6.791719913482666
    6. '   ' → logprob: -7.291719913482666
    7. ''n' → logprob: -7.791719913482666
    8. '```' → logprob: -7.916719913482666
    9. '1' → logprob: -8.041719436645508
    10. ''b' → logprob: -8.166719436645508

Token 3717: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012763909064233303
    2. '1' → logprob: -5.137763977050781
    3. ''in' → logprob: -5.762763977050781
    4. '
' → logprob: -6.887763977050781
    5. '='' → logprob: -8.012763977050781
    6. '`' → logprob: -8.012763977050781
    7. ']' → logprob: -8.137763977050781
    8. 'not' → logprob: -8.387763977050781
    9. '=' → logprob: -8.512763977050781
    10. 'in' → logprob: -8.887763977050781

Token 3718: '
' (ID: 198)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0797266960144043
    2. '
' → logprob: -1.7047266960144043
    3. 'b' → logprob: -1.9547266960144043
    4. '   ' → logprob: -2.2047266960144043
    5. ' not' → logprob: -2.3297266960144043
    6. ',' → logprob: -2.8297266960144043
    7. '```' → logprob: -3.5797266960144043
    8. 'if' → logprob: -4.704726696014404
    9. ')' → logprob: -5.079726696014404
    10. ' if' → logprob: -5.454726696014404

Token 3719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09634687006473541
    2. 'b' → logprob: -3.221346855163574
    3. '```' → logprob: -3.346346855163574
    4. '#' → logprob: -4.471346855163574
    5. '
' → logprob: -5.971346855163574
    6. ',' → logprob: -7.596346855163574
    7. '``' → logprob: -7.721346855163574
    8. ' #' → logprob: -8.096346855163574
    9. ' ' → logprob: -8.471346855163574
    10. 'and' → logprob: -8.721346855163574

Token 3720: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8820378184318542
    2. 'b' → logprob: -1.382037878036499
    3. '```' → logprob: -1.882037878036499
    4. '#' (adapté à ' #') → logprob: -2.507037878036499
    5. '
' → logprob: -3.257037878036499
    6. '[' → logprob: -3.382037878036499
    7. '``' → logprob: -4.25703763961792
    8. ')' → logprob: -5.63203763961792
    9. '1' → logprob: -6.00703763961792
    10. '`' → logprob: -6.38203763961792

Token 3721: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004740791395306587
    2. '1' → logprob: -6.0047407150268555
    3. '   ' → logprob: -6.1297407150268555
    4. '#' → logprob: -10.379740715026855
    5. '```' → logprob: -10.754740715026855
    6. ' b' → logprob: -11.629740715026855
    7. '
' → logprob: -11.879740715026855
    8. 'if' → logprob: -11.879740715026855
    9. 'for' → logprob: -12.129740715026855
    10. '`' → logprob: -13.379740715026855

Token 3722: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006423805025406182
    2. '1' → logprob: -7.3756422996521
    3. '```' → logprob: -12.000642776489258
    4. '3' → logprob: -12.375642776489258
    5. '[' → logprob: -13.250642776489258
    6. '   ' → logprob: -14.250642776489258
    7. '#' → logprob: -14.250642776489258
    8. '
' → logprob: -14.375642776489258
    9. '``' → logprob: -14.375642776489258
    10. ']' → logprob: -14.875642776489258

Token 3723: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12853549420833588
    2. '[' → logprob: -2.128535509109497
    3. '
' → logprob: -7.128535270690918
    4. '   ' → logprob: -7.878535270690918
    5. ']' → logprob: -9.253535270690918
    6. '```' → logprob: -9.378535270690918
    7. ' [' → logprob: -9.628535270690918
    8. ')' → logprob: -10.378535270690918
    9. '][' → logprob: -10.628535270690918
    10. ':' → logprob: -10.878535270690918

Token 3724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. '2' → logprob: -11.500017166137695
    3. '[' → logprob: -13.125017166137695
    4. ' ' → logprob: -13.375017166137695
    5. '   ' → logprob: -13.750017166137695
    6. ']' → logprob: -14.125017166137695
    7. '
' → logprob: -14.750017166137695
    8. '3' → logprob: -14.875017166137695
    9. '(' → logprob: -15.375017166137695
    10. '```' → logprob: -16.000017166137695

Token 3725: ']:' (ID: 12433)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.19671207666397095
    2. ':' → logprob: -2.571712017059326
    3. ' not' → logprob: -2.946712017059326
    4. ']' → logprob: -3.071712017059326
    5. ']:' → logprob: -7.321712017059326
    6. ':]' → logprob: -7.696712017059326
    7. ')' → logprob: -8.071712493896484
    8. '
' → logprob: -8.321712493896484
    9. '```' → logprob: -8.321712493896484
    10. ':not' → logprob: -8.821712493896484

Token 3726: ' fixed' (ID: 13213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4446488320827484
    2. ''' → logprob: -1.4446488618850708
    3. ' not' → logprob: -2.9446487426757812
    4. 'fixed' → logprob: -3.8196487426757812
    5. '2' → logprob: -4.069648742675781
    6. ''x' → logprob: -4.944648742675781
    7. '0' → logprob: -5.694648742675781
    8. ''in' → logprob: -5.819648742675781
    9. ''b' → logprob: -5.819648742675781
    10. '('' → logprob: -6.444648742675781

Token 3727: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21617308259010315
    2. '0' → logprob: -2.2161731719970703
    3. 'not' → logprob: -2.8411731719970703
    4. '```' → logprob: -5.09117317199707
    5. ''x' → logprob: -5.21617317199707
    6. '   ' → logprob: -5.59117317199707
    7. ' not' → logprob: -5.59117317199707
    8. '`' → logprob: -5.59117317199707
    9. ' '' → logprob: -6.46617317199707
    10. '
' → logprob: -7.84117317199707

Token 3728: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010773492977023125
    2. '0' → logprob: -6.876077175140381
    3. '`' → logprob: -10.501077651977539
    4. '('' → logprob: -12.001077651977539
    5. ' '' → logprob: -12.501077651977539
    6. '```' → logprob: -13.251077651977539
    7. '"' → logprob: -14.001077651977539
    8. ''x' → logprob: -14.126077651977539
    9. '['' → logprob: -14.251077651977539
    10. '
' → logprob: -14.751077651977539

Token 3729: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07288327813148499
    2. '```' → logprob: -2.822883367538452
    3. 'for' → logprob: -5.447883129119873
    4. 'b' → logprob: -5.822883129119873
    5. '
' → logprob: -6.572883129119873
    6. '``' → logprob: -7.072883129119873
    7. 'def' → logprob: -7.947883129119873
    8. '#' → logprob: -8.197883605957031
    9. ',' → logprob: -8.822883605957031
    10. '       ' → logprob: -9.322883605957031

Token 3730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007810797076672316
    2. 'for' → logprob: -5.132810592651367
    3. '#' → logprob: -6.632810592651367
    4. '```' → logprob: -7.632810592651367
    5. ' for' → logprob: -10.257810592651367
    6. '	for' → logprob: -11.507810592651367
    7. '``' → logprob: -11.507810592651367
    8. '
' → logprob: -11.632810592651367
    9. 'b' → logprob: -11.757810592651367
    10. '`' → logprob: -13.257810592651367

Token 3731: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.501703143119812
    2. '   ' → logprob: -1.001703143119812
    3. '#' (adapté à ' #') → logprob: -4.001703262329102
    4. '```' → logprob: -5.251703262329102
    5. 'b' → logprob: -6.001703262329102
    6. '``' → logprob: -7.751703262329102
    7. ' for' → logprob: -8.126703262329102
    8. '
' → logprob: -8.626703262329102
    9. 'x' → logprob: -8.751703262329102
    10. 'count' → logprob: -9.001703262329102

Token 3732: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7223890423774719
    2. 'for' → logprob: -0.7223890423774719
    3. '   ' → logprob: -4.472389221191406
    4. 'x' → logprob: -4.597389221191406
    5. '#' → logprob: -5.972389221191406
    6. 'remaining' → logprob: -6.472389221191406
    7. '[' → logprob: -7.472389221191406
    8. '```' → logprob: -7.722389221191406
    9. 'unknown' → logprob: -7.847389221191406
    10. 'count' → logprob: -7.972389221191406

Token 3733: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011483728885650635
    2. '[' → logprob: -5.011483669281006
    3. '3' → logprob: -5.386483669281006
    4. '
' → logprob: -10.011484146118164
    5. '```' → logprob: -10.386484146118164
    6. '   ' → logprob: -10.761484146118164
    7. ']' → logprob: -10.886484146118164
    8. '(' → logprob: -11.136484146118164
    9. '][' → logprob: -12.136484146118164
    10. '[
' → logprob: -12.261484146118164

Token 3734: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011469116434454918
    2. '2' → logprob: -4.636468887329102
    3. '   ' → logprob: -7.386468887329102
    4. '```' → logprob: -7.886468887329102
    5. '3' → logprob: -8.136468887329102
    6. '
' → logprob: -9.511468887329102
    7. ']' → logprob: -9.511468887329102
    8. '`' → logprob: -9.886468887329102
    9. '#' → logprob: -10.636468887329102
    10. '(' → logprob: -10.636468887329102

Token 3735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00028266964363865554
    2. '   ' → logprob: -9.000282287597656
    3. 'range' → logprob: -9.750282287597656
    4. '3' → logprob: -10.250282287597656
    5. '(' → logprob: -10.375282287597656
    6. '[' → logprob: -11.500282287597656
    7. 'from' → logprob: -12.250282287597656
    8. ' ' → logprob: -12.375282287597656
    9. '
' → logprob: -12.625282287597656
    10. 'i' → logprob: -12.625282287597656

Token 3736: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5085664987564087
    2. ']' → logprob: -2.008566379547119
    3. ':]' → logprob: -2.383566379547119
    4. 'not' → logprob: -2.758566379547119
    5. ']:' → logprob: -3.883566379547119
    6. '=' → logprob: -4.508566379547119
    7. ',' → logprob: -4.883566379547119
    8. 'in' → logprob: -5.008566379547119
    9. ' not' → logprob: -5.008566379547119
    10. ']=' → logprob: -5.133566379547119

Token 3737: ' y' (ID: 342)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.009140134789049625
    2. 'x' → logprob: -5.2591400146484375
    3. ''' → logprob: -5.7591400146484375
    4. '`' → logprob: -8.509140014648438
    5. '```' → logprob: -9.009140014648438
    6. ' '' → logprob: -10.134140014648438
    7. ''b' → logprob: -10.259140014648438
    8. '1' → logprob: -10.384140014648438
    9. '0' → logprob: -10.509140014648438
    10. '"x' → logprob: -10.634140014648438

Token 3738: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11443030089139938
    2. '
' → logprob: -3.4894301891326904
    3. '```' → logprob: -3.9894301891326904
    4. ',' → logprob: -4.2394304275512695
    5. '#' → logprob: -4.3644304275512695
    6. 'for' → logprob: -4.7394304275512695
    7. '       ' → logprob: -5.1144304275512695
    8. ')' → logprob: -5.9894304275512695
    9. ',
' → logprob: -6.1144304275512695
    10. ' for' → logprob: -6.3644304275512695

Token 3739: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08731607347726822
    2. '```' → logprob: -2.8373160362243652
    3. 'for' → logprob: -5.212316036224365
    4. '#' → logprob: -5.462316036224365
    5. ',' → logprob: -5.712316036224365
    6. ')' → logprob: -5.962316036224365
    7. 'b' → logprob: -6.087316036224365
    8. '
' → logprob: -6.337316036224365
    9. ' for' → logprob: -6.962316036224365
    10. '``' → logprob: -6.962316036224365

Token 3740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23613789677619934
    2. 'for' → logprob: -1.736137866973877
    3. '```' → logprob: -3.736137866973877
    4. ' for' → logprob: -5.361137866973877
    5. '
' → logprob: -6.236137866973877
    6. ',' → logprob: -6.361137866973877
    7. '#' → logprob: -6.736137866973877
    8. '``' → logprob: -7.611137866973877
    9. 'b' → logprob: -10.111138343811035
    10. ')' → logprob: -10.111138343811035

Token 3741: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5748836994171143
    2. 'for' → logprob: -0.9498836994171143
    3. '#' (adapté à ' #') → logprob: -3.4498836994171143
    4. '```' → logprob: -4.824883460998535
    5. ' for' → logprob: -5.574883460998535
    6. '
' → logprob: -6.199883460998535
    7. 'b' → logprob: -6.199883460998535
    8. 'x' → logprob: -7.074883460998535
    9. '``' → logprob: -7.074883460998535
    10. 'count' → logprob: -8.574883460998535

Token 3742: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7743480801582336
    2. 'b' → logprob: -1.6493480205535889
    3. '   ' → logprob: -1.8993480205535889
    4. 'x' → logprob: -2.024348020553589
    5. '#' → logprob: -3.024348020553589
    6. 'unknown' → logprob: -4.649348258972168
    7. 'remaining' → logprob: -5.899348258972168
    8. '
' → logprob: -6.774348258972168
    9. '```' → logprob: -7.399348258972168
    10. 'count' → logprob: -7.649348258972168

Token 3743: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.750007629394531
    3. '4' → logprob: -13.500007629394531
    4. '```' → logprob: -13.500007629394531
    5. '``' → logprob: -14.875007629394531
    6. '5' → logprob: -15.000007629394531
    7. '#' → logprob: -15.375007629394531
    8. ']' → logprob: -15.625007629394531
    9. '7' → logprob: -15.750007629394531
    10. '   ' → logprob: -15.750007629394531

Token 3744: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04135395213961601
    2. '3' → logprob: -3.791353940963745
    3. '   ' → logprob: -5.416354179382324
    4. '#' → logprob: -5.541354179382324
    5. '```' → logprob: -6.166354179382324
    6. '=' → logprob: -6.791354179382324
    7. '
' → logprob: -6.916354179382324
    8. ':' → logprob: -7.416354179382324
    9. 'def' → logprob: -7.416354179382324
    10. ']' → logprob: -7.541354179382324

Token 3745: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -16.625
    4. '
' → logprob: -17.125
    5. ']' → logprob: -18.125
    6. '#' → logprob: -18.375
    7. '۳' → logprob: -18.75
    8. '  ' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. 'from' → logprob: -19.375

Token 3746: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6614706516265869
    2. ',' → logprob: -1.036470651626587
    3. ':' → logprob: -3.411470651626587
    4. ':]' → logprob: -3.411470651626587
    5. '],' → logprob: -4.411470413208008
    6. '..' → logprob: -4.911470413208008
    7. ']='' → logprob: -4.911470413208008
    8. '...' → logprob: -5.036470413208008
    9. ']=' → logprob: -5.036470413208008
    10. '
' → logprob: -5.161470413208008

Token 3747: 'b' (ID: 65)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008849145844578743
    2. '4' → logprob: -5.008849143981934
    3. 'b' → logprob: -6.258849143981934
    4. '```' → logprob: -9.508849143981934
    5. '[' → logprob: -9.633849143981934
    6. '5' → logprob: -10.633849143981934
    7. '6' → logprob: -11.133849143981934
    8. '`' → logprob: -11.883849143981934
    9. ' ' → logprob: -12.008849143981934
    10. '#' → logprob: -12.133849143981934

Token 3748: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.016224753111600876
    2. '7' → logprob: -4.1412248611450195
    3. '[' → logprob: -8.76622486114502
    4. '
' → logprob: -10.89122486114502
    5. ']' → logprob: -11.89122486114502
    6. '```' → logprob: -13.26622486114502
    7. '5' → logprob: -13.39122486114502
    8. '   ' → logprob: -13.39122486114502
    9. '(' → logprob: -13.64122486114502
    10. '6' → logprob: -13.89122486114502

Token 3749: '[' (ID: 58)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04334067925810814
    2. '[' → logprob: -3.1683406829833984
    3. '7' → logprob: -9.043340682983398
    4. ']' → logprob: -9.293340682983398
    5. '```' → logprob: -10.168340682983398
    6. '
' → logprob: -10.918340682983398
    7. '(' → logprob: -11.168340682983398
    8. '[
' → logprob: -11.293340682983398
    9. ':' → logprob: -11.918340682983398
    10. '=' → logprob: -12.043340682983398

Token 3750: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.624555291840807e-05
    2. '7' → logprob: -9.625076293945312
    3. ']' → logprob: -12.625076293945312
    4. '
' → logprob: -13.000076293945312
    5. '3' → logprob: -13.125076293945312
    6. '[' → logprob: -14.125076293945312
    7. '```' → logprob: -14.250076293945312
    8. '   ' → logprob: -15.125076293945312
    9. '...' → logprob: -16.000076293945312
    10. '(' → logprob: -16.437576293945312

Token 3751: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1506657749414444
    2. ']:' → logprob: -2.525665760040283
    3. ']:
' → logprob: -3.025665760040283
    4. ']=' → logprob: -4.900665760040283
    5. ']==' → logprob: -6.400665760040283
    6. ':]' → logprob: -7.150665760040283
    7. ']='' → logprob: -7.525665760040283
    8. ':' → logprob: -8.150666236877441
    9. ']=='' → logprob: -9.275666236877441
    10. '   ' → logprob: -9.650666236877441

Token 3752: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.041136711835861206
    2. 'range' → logprob: -3.2911367416381836
    3. '   ' → logprob: -7.541136741638184
    4. ' [' → logprob: -7.666136741638184
    5. ' range' → logprob: -7.791136741638184
    6. '7' → logprob: -7.916136741638184
    7. '['' → logprob: -8.291136741638184
    8. 'for' → logprob: -8.416136741638184
    9. 'x' → logprob: -8.416136741638184
    10. '[
' → logprob: -8.791136741638184

Token 3753: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033652618527412415
    2. 'for' → logprob: -3.6586525440216064
    3. 'count' → logprob: -6.2836527824401855
    4. 'x' → logprob: -6.7836527824401855
    5. ' for' → logprob: -7.0336527824401855
    6. '```' → logprob: -7.4086527824401855
    7. '
' → logprob: -7.5336527824401855
    8. '=' → logprob: -7.7836527824401855
    9. ',' → logprob: -8.533652305603027
    10. 'def' → logprob: -8.783652305603027

Token 3754: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003928914200514555
    2. 'x' → logprob: -6.128929138183594
    3. 'count' → logprob: -7.128929138183594
    4. '```' → logprob: -7.753929138183594
    5. '
' → logprob: -8.628929138183594
    6. 'for' → logprob: -9.003929138183594
    7. 'cnt' → logprob: -10.378929138183594
    8. 'def' → logprob: -10.503929138183594
    9. ' x' → logprob: -10.753929138183594
    10. '``' → logprob: -10.753929138183594

Token 3755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009149347431957722
    2. 'for' → logprob: -5.134149551391602
    3. '```' → logprob: -6.759149551391602
    4. ' for' → logprob: -7.134149551391602
    5. 'x' → logprob: -7.509149551391602
    6. '
' → logprob: -7.884149551391602
    7. 'count' → logprob: -8.384149551391602
    8. '``' → logprob: -10.384149551391602
    9. '    
' → logprob: -11.509149551391602
    10. '       ' → logprob: -11.634149551391602

Token 3756: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.12274131923913956
    2. '   ' → logprob: -2.247741222381592
    3. 'cnt' → logprob: -5.247741222381592
    4. 'count' → logprob: -5.747741222381592
    5. '```' → logprob: -7.122741222381592
    6. '#' → logprob: -8.74774169921875
    7. 'for' → logprob: -8.87274169921875
    8. '
' → logprob: -8.99774169921875
    9. '``' → logprob: -9.37274169921875
    10. ' x' → logprob: -10.24774169921875

Token 3757: '_bits' (ID: 48415)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.20194505155086517
    2. '_bits' → logprob: -2.5769450664520264
    3. '2' → logprob: -2.7019450664520264
    4. '_counts' → logprob: -3.9519450664520264
    5. '_indices' → logprob: -4.576944828033447
    6. 'count' → logprob: -5.826944828033447
    7. '_cnt' → logprob: -5.951944828033447
    8. '1' → logprob: -6.201944828033447
    9. '_idx' → logprob: -6.701944828033447
    10. '_idxs' → logprob: -7.451944828033447

Token 3758: '_b' (ID: 1535)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.025640076026320457
    2. '_indices' → logprob: -4.27564001083374
    3. '_idxs' → logprob: -4.65064001083374
    4. 'idx' → logprob: -6.90064001083374
    5. '_b' → logprob: -8.275640487670898
    6. '_indexes' → logprob: -8.400640487670898
    7. ' =' → logprob: -8.650640487670898
    8. '=' → logprob: -8.900640487670898
    9. '   ' → logprob: -11.400640487670898
    10. 'indices' → logprob: -11.650640487670898

Token 3759: '2' (ID: 17)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.3379195928573608
    2. '[' → logprob: -1.4629195928573608
    3. 'idx' → logprob: -1.4629195928573608
    4. '2' → logprob: -1.7129195928573608
    5. '3' → logprob: -2.5879197120666504
    6. 'indices' → logprob: -5.33791971206665
    7. '=[' → logprob: -5.46291971206665
    8. '=' → logprob: -6.33791971206665
    9. '_indices' → logprob: -6.46291971206665
    10. '234' → logprob: -6.96291971206665

Token 3760: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.005575117189437151
    2. 'idx' → logprob: -6.005575180053711
    3. '_idxs' → logprob: -6.880575180053711
    4. '_indices' → logprob: -7.255575180053711
    5. ' =' → logprob: -7.255575180053711
    6. '=' → logprob: -7.380575180053711
    7. '_indexes' → logprob: -11.130575180053711
    8. 'indices' → logprob: -12.005575180053711
    9. '   ' → logprob: -13.005575180053711
    10. '_index' → logprob: -13.130575180053711

Token 3761: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10056798160076141
    2. ' =' → logprob: -2.3505680561065674
    3. '=[' → logprob: -7.975567817687988
    4. '   ' → logprob: -11.475567817687988
    5. ' =[' → logprob: -12.600567817687988
    6. '=
' → logprob: -13.600567817687988
    7. '=[
' → logprob: -13.975567817687988
    8. '[' → logprob: -14.225567817687988
    9. '```' → logprob: -15.225567817687988
    10. ' ' → logprob: -15.725567817687988

Token 3762: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. ' [' → logprob: -12.750005722045898
    3. '   ' → logprob: -12.875005722045898
    4. 'range' → logprob: -15.875005722045898
    5. 'list' → logprob: -17.6250057220459
    6. '[
' → logprob: -18.3750057220459
    7. ' ' → logprob: -19.2500057220459
    8. '  ' → logprob: -19.3750057220459
    9. '=[' → logprob: -20.2500057220459
    10. '[]' → logprob: -20.5000057220459

Token 3763: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.3458322731312364e-06
    2. 'i' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.125007629394531
    4. '   ' → logprob: -14.875007629394531
    5. '(' → logprob: -17.87500762939453
    6. '  ' → logprob: -18.50000762939453
    7. 'j' → logprob: -18.75000762939453
    8. 'range' → logprob: -18.75000762939453
    9. '(i' → logprob: -18.87500762939453
    10. '
' → logprob: -19.12500762939453

Token 3764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008353583980351686
    2. '4' → logprob: -7.250835418701172
    3. '3' → logprob: -10.125835418701172
    4. ',
' → logprob: -10.375835418701172
    5. '5' → logprob: -11.125835418701172
    6. ' ,' → logprob: -11.375835418701172
    7. '   ' → logprob: -11.875835418701172
    8. '
' → logprob: -11.875835418701172
    9. '7' → logprob: -12.125835418701172
    10. 'for' → logprob: -13.125835418701172

Token 3765: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -18.875
    4. '４' → logprob: -19.25
    5. '۴' → logprob: -20.75
    6. '  ' → logprob: -21.75
    7. '४' → logprob: -22.875
    8. '    ' → logprob: -23.0
    9. '[' → logprob: -23.0
    10. '' → logprob: -23.125

Token 3766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04858941584825516
    2. '5' → logprob: -3.0485894680023193
    3. '```' → logprob: -13.923589706420898
    4. '   ' → logprob: -14.923589706420898
    5. ',
' → logprob: -15.173589706420898
    6. ' ,' → logprob: -15.673589706420898
    7. '...' → logprob: -16.5485897064209
    8. '
' → logprob: -16.7985897064209
    9. '[' → logprob: -17.1735897064209
    10. '`' → logprob: -17.4235897064209

Token 3767: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '   ' → logprob: -18.0
    3. ' ' → logprob: -19.125
    4. '  ' → logprob: -21.25
    5. '```' → logprob: -21.875
    6. '
' → logprob: -22.875
    7. '۵' → logprob: -23.625
    8. '    ' → logprob: -23.75
    9. '５' → logprob: -23.75
    10. '[' → logprob: -24.0

Token 3768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. '6' → logprob: -10.000046730041504
    3. '```' → logprob: -13.875046730041504
    4. ' ,' → logprob: -14.375046730041504
    5. ',
' → logprob: -16.25004768371582
    6. '   ' → logprob: -16.37504768371582
    7. '``' → logprob: -17.75004768371582
    8. '...' → logprob: -18.50004768371582
    9. ']' → logprob: -18.87504768371582
    10. '`,' → logprob: -19.00004768371582

Token 3769: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -18.625
    4. '۶' → logprob: -19.75
    5. '６' → logprob: -19.875
    6. '६' → logprob: -20.125
    7. '[' → logprob: -21.125
    8. '```' → logprob: -21.125
    9. '٦' → logprob: -21.375
    10. '৬' → logprob: -21.625

Token 3770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031803252641111612
    2. '7' → logprob: -5.753180503845215
    3. '```' → logprob: -13.128180503845215
    4. ' ,' → logprob: -14.878180503845215
    5. ',
' → logprob: -15.003180503845215
    6. ']' → logprob: -17.2531795501709
    7. '``' → logprob: -17.2531795501709
    8. '   ' → logprob: -17.6281795501709
    9. '`' → logprob: -17.6281795501709
    10. '`,' → logprob: -18.0031795501709

Token 3771: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -20.875
    5. '  ' → logprob: -21.875
    6. '７' → logprob: -22.0
    7. '۷' → logprob: -22.75
    8. '`' → logprob: -24.125
    9. '७' → logprob: -24.125
    10. '٧' → logprob: -24.25

Token 3772: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10517193377017975
    2. ']' → logprob: -2.4801719188690186
    3. '   ' → logprob: -4.855172157287598
    4. ']

' → logprob: -5.105172157287598
    5. ',' → logprob: -6.230172157287598
    6. ']
' → logprob: -8.355172157287598
    7. '```' → logprob: -11.730172157287598
    8. ']


' → logprob: -12.105172157287598
    9. ']

' → logprob: -12.105172157287598
    10. ' ]
' → logprob: -12.105172157287598

Token 3773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12836837768554688
    2. 'x' → logprob: -2.253368377685547
    3. 'for' → logprob: -5.128368377685547
    4. '
' → logprob: -5.378368377685547
    5. 'count' → logprob: -6.378368377685547
    6. '```' → logprob: -6.378368377685547
    7. 'cnt' → logprob: -7.253368377685547
    8. '    
' → logprob: -8.503368377685547
    9. '``' → logprob: -8.753368377685547
    10. 'total' → logprob: -8.878368377685547

Token 3774: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0012936893617734313
    2. '   ' → logprob: -7.001293659210205
    3. 'unknown' → logprob: -9.001294136047363
    4. '```' → logprob: -9.126294136047363
    5. 'for' → logprob: -9.876294136047363
    6. 'cnt' → logprob: -10.251294136047363
    7. 'def' → logprob: -10.876294136047363
    8. '
' → logprob: -11.126294136047363
    9. '#' → logprob: -11.376294136047363
    10. '``' → logprob: -11.626294136047363

Token 3775: '2' (ID: 17)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0013309523928910494
    2. '_count' → logprob: -7.251330852508545
    3. 'bits' → logprob: -8.001331329345703
    4. '_counts' → logprob: -9.251331329345703
    5. 'count' → logprob: -9.376331329345703
    6. '_indices' → logprob: -9.501331329345703
    7. '_idx' → logprob: -11.126331329345703
    8. '_cnt' → logprob: -12.751331329345703
    9. '_idxs' → logprob: -12.751331329345703
    10. '```' → logprob: -13.001331329345703

Token 3776: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.145613431930542
    2. '_bits' → logprob: -2.020613431930542
    3. '_counts' → logprob: -6.395613670349121
    4. '_idx' → logprob: -7.020613670349121
    5. '_cnt' → logprob: -8.645613670349121
    6. 'count' → logprob: -10.020613670349121
    7. '_indices' → logprob: -10.145613670349121
    8. '=' → logprob: -10.395613670349121
    9. '_len' → logprob: -11.395613670349121
    10. '_' → logprob: -11.520613670349121

Token 3777: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012403888104017824
    2. ' =' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.625123977661133
    4. '```' → logprob: -16.125123977661133
    5. 'x' → logprob: -18.625123977661133
    6. '=
' → logprob: -19.375123977661133
    7. '=x' → logprob: -19.500123977661133
    8. 'def' → logprob: -19.500123977661133
    9. '=(' → logprob: -19.625123977661133
    10. '+=' → logprob: -20.375123977661133

Token 3778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '(' → logprob: -14.625001907348633
    5. '```' → logprob: -16.500001907348633
    6. '=' → logprob: -16.750001907348633
    7. 'pow' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.500001907348633
    9. 'def' → logprob: -19.000001907348633
    10. '`' → logprob: -19.375001907348633

Token 3779: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010072042932733893
    2. '   ' → logprob: -7.251007080078125
    3. ' for' → logprob: -8.251007080078125
    4. '
' → logprob: -10.626007080078125
    5. '	for' → logprob: -11.501007080078125
    6. '```' → logprob: -13.376007080078125
    7. 'For' → logprob: -15.751007080078125
    8. '``' → logprob: -17.126007080078125
    9. ' ' → logprob: -17.626007080078125
    10. '    
' → logprob: -17.751007080078125

Token 3780: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023265045136213303
    2. '   ' → logprob: -3.7732651233673096
    3. '```' → logprob: -11.52326488494873
    4. ' for' → logprob: -11.89826488494873
    5. '
' → logprob: -13.02326488494873
    6. '	for' → logprob: -15.14826488494873
    7. '``' → logprob: -15.39826488494873
    8. '    
' → logprob: -16.523265838623047
    9. '       ' → logprob: -17.898265838623047
    10. 'For' → logprob: -17.898265838623047

Token 3781: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -12.500004768371582
    3. '```' → logprob: -14.250004768371582
    4. ' for' → logprob: -14.625004768371582
    5. '``' → logprob: -18.3750057220459
    6. '
' → logprob: -19.1250057220459
    7. '	for' → logprob: -20.1250057220459
    8. 'def' → logprob: -22.7500057220459
    9. '#' → logprob: -23.2500057220459
    10. '`' → logprob: -23.3750057220459

Token 3782: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815052703022957
    2. 'idx' → logprob: -4.018150329589844
    3. ' i' → logprob: -14.893150329589844
    4. ' idx' → logprob: -15.893150329589844
    5. 'pos' → logprob: -16.643150329589844
    6. '   ' → logprob: -16.643150329589844
    7. 'ix' → logprob: -16.768150329589844
    8. '
' → logprob: -18.768150329589844
    9. 'index' → logprob: -19.018150329589844
    10. '```' → logprob: -19.268150329589844

Token 3783: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.011055129580199718
    2. ' in' → logprob: -4.511054992675781
    3. '   ' → logprob: -12.136054992675781
    4. ' ' → logprob: -13.886054992675781
    5. '    ' → logprob: -15.761054992675781
    6. '
' → logprob: -15.886054992675781
    7. '  ' → logprob: -15.886054992675781
    8. '```' → logprob: -16.01105499267578
    9. 'idx' → logprob: -16.51105499267578
    10. '       ' → logprob: -16.76105499267578

Token 3784: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.65707261255011e-06
    2. ' x' → logprob: -11.875008583068848
    3. '[' → logprob: -13.625008583068848
    4. 'range' → logprob: -15.000008583068848
    5. '[x' → logprob: -16.250009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '(x' → logprob: -18.125009536743164
    8. '(' → logprob: -18.500009536743164
    9. 'b' → logprob: -18.625009536743164
    10. '```' → logprob: -18.750009536743164

Token 3785: '_bits' (ID: 48415)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8669540286064148
    2. '[' → logprob: -1.1169540882110596
    3. 'idx' → logprob: -2.1169540882110596
    4. '(' → logprob: -2.3669540882110596
    5. '2' → logprob: -4.3669538497924805
    6. ']' → logprob: -4.7419538497924805
    7. '=' → logprob: -4.7419538497924805
    8. '[idx' → logprob: -5.8669538497924805
    9. '_idx' → logprob: -6.6169538497924805
    10. 'nd' → logprob: -6.8669538497924805

Token 3786: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08472118526697159
    2. 'in' → logprob: -3.209721088409424
    3. 'b' → logprob: -3.959721088409424
    4. 'idx' → logprob: -4.709721088409424
    5. '2' → logprob: -5.209721088409424
    6. '3' → logprob: -5.584721088409424
    7. '_idx' → logprob: -7.084721088409424
    8. '(' → logprob: -7.334721088409424
    9. '```' → logprob: -7.334721088409424
    10. '_b' → logprob: -7.959721088409424

Token 3787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038825106457807124
    2. 'idx' → logprob: -8.375388145446777
    3. '3' → logprob: -9.000388145446777
    4. '[' → logprob: -11.125388145446777
    5. 'index' → logprob: -12.000388145446777
    6. '   ' → logprob: -12.625388145446777
    7. '```' → logprob: -12.875388145446777
    8. '_idx' → logprob: -13.375388145446777
    9. '(' → logprob: -13.875388145446777
    10. 'nd' → logprob: -14.125388145446777

Token 3788: '_idx' (ID: 15257)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6837364435195923
    2. 'x' → logprob: -0.9337364435195923
    3. 'nd' → logprob: -2.9337363243103027
    4. 'ex' → logprob: -4.183736324310303
    5. 'dx' → logprob: -4.183736324310303
    6. '_idx' → logprob: -5.433736324310303
    7. '3' → logprob: -6.058736324310303
    8. ']' → logprob: -6.183736324310303
    9. 'index' → logprob: -6.183736324310303
    10. 'n' → logprob: -6.308736324310303

Token 3789: ':
' (ID: 734)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6163436770439148
    2. '       ' → logprob: -1.6163437366485596
    3. ' in' → logprob: -1.6163437366485596
    4. ':
' → logprob: -2.9913437366485596
    5. '   ' → logprob: -4.8663434982299805
    6. ':' → logprob: -5.4913434982299805
    7. '```' → logprob: -8.49134349822998
    8. '=' → logprob: -8.86634349822998
    9. '[' → logprob: -8.86634349822998
    10. ',' → logprob: -9.24134349822998

Token 3790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23769083619117737
    2. 'in' → logprob: -1.862690806388855
    3. ' in' → logprob: -3.6126909255981445
    4. '   ' → logprob: -4.1126909255981445
    5. 'if' → logprob: -4.8626909255981445
    6. '```' → logprob: -6.1126909255981445
    7. 'range' → logprob: -6.1126909255981445
    8. 'for' → logprob: -8.987690925598145
    9. ':
' → logprob: -8.987690925598145
    10. '[' → logprob: -9.487690925598145

Token 3791: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01713378168642521
    2. 'c' (adapté à ' c') → logprob: -4.767133712768555
    3. '       ' → logprob: -5.017133712768555
    4. ' if' → logprob: -6.517133712768555
    5. '```' → logprob: -8.392133712768555
    6. 'i' → logprob: -9.267133712768555
    7. ' c' → logprob: -10.642133712768555
    8. '   ' → logprob: -10.892133712768555
    9. '``' → logprob: -12.392133712768555
    10. 'for' → logprob: -12.642133712768555

Token 3792: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16433373093605042
    2. 'in' → logprob: -2.5393338203430176
    3. ' =' → logprob: -2.6643338203430176
    4. ' in' → logprob: -6.164333820343018
    5. '=b' → logprob: -8.28933334350586
    6. '=c' → logprob: -8.78933334350586
    7. '   ' → logprob: -8.91433334350586
    8. '```' → logprob: -9.28933334350586
    9. ')' → logprob: -9.53933334350586
    10. '=in' → logprob: -10.91433334350586

Token 3793: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000158842682139948
    2. ' b' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.00015926361084
    4. ''b' → logprob: -19.250158309936523
    5. '	b' → logprob: -19.375158309936523
    6. '```' → logprob: -19.750158309936523
    7. '       ' → logprob: -19.875158309936523
    8. '`' → logprob: -19.875158309936523
    9. ' ' → logprob: -20.000158309936523
    10. '(b' → logprob: -20.625158309936523

Token 3794: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'b' → logprob: -18.375
    5. '`' → logprob: -18.5
    6. '   ' → logprob: -18.75
    7. '``' → logprob: -19.0
    8. ' ' → logprob: -19.125
    9. ''' → logprob: -19.625
    10. 'r' → logprob: -19.875

Token 3795: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.001191298826597631
    2. 'idx' → logprob: -6.751191139221191
    3. '```' → logprob: -12.001191139221191
    4. 'c' → logprob: -12.251191139221191
    5. '   ' → logprob: -13.001191139221191
    6. '       ' → logprob: -13.126191139221191
    7. '[
' → logprob: -13.751191139221191
    8. '
' → logprob: -14.001191139221191
    9. '[c' → logprob: -14.126191139221191
    10. ' idx' → logprob: -14.376191139221191

Token 3796: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2903760075569153
    2. ']==' → logprob: -2.0403759479522705
    3. ']=='' → logprob: -2.5403759479522705
    4. ']
' → logprob: -3.9153759479522705
    5. ']:
' → logprob: -4.54037618637085
    6. '       ' → logprob: -5.66537618637085
    7. 'if' → logprob: -5.66537618637085
    8. '=='' → logprob: -5.66537618637085
    9. '==' → logprob: -6.91537618637085
    10. ']'' → logprob: -7.66537618637085

Token 3797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042388198198750615
    2. 'if' → logprob: -8.250423431396484
    3. ' if' → logprob: -9.375423431396484
    4. '```' → logprob: -9.625423431396484
    5. '   ' → logprob: -12.000423431396484
    6. ':
' → logprob: -13.125423431396484
    7. '           ' → logprob: -13.750423431396484
    8. '{
' → logprob: -14.625423431396484
    9. '``' → logprob: -15.000423431396484
    10. ':' → logprob: -15.125423431396484

Token 3798: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00018375257786829025
    2. '       ' → logprob: -8.750184059143066
    3. '```' → logprob: -11.000184059143066
    4. ' if' → logprob: -11.750184059143066
    5. '   ' → logprob: -14.750184059143066
    6. '``' → logprob: -15.625184059143066
    7. '           ' → logprob: -17.12518310546875
    8. '	if' → logprob: -17.62518310546875
    9. 'for' → logprob: -18.00018310546875
    10. '{
' → logprob: -18.37518310546875

Token 3799: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001097417771234177
    2. ' c' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.125109672546387
    4. 'b' → logprob: -15.250109672546387
    5. '       ' → logprob: -15.375109672546387
    6. '           ' → logprob: -16.875110626220703
    7. '```' → logprob: -17.625110626220703
    8. '	c' → logprob: -17.875110626220703
    9. ' ' → logprob: -19.125110626220703
    10. '     ' → logprob: -19.125110626220703

Token 3800: ' ==' (ID: 951)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.47441813349723816
    2. '==' → logprob: -0.9744181632995605
    3. ' ==' → logprob: -8.099417686462402
    4. '==
' → logprob: -10.599417686462402
    5. 'c' → logprob: -12.724417686462402
    6. ']=='' → logprob: -12.849417686462402
    7. '=="' → logprob: -13.349417686462402
    8. ''' → logprob: -13.724417686462402
    9. '=' → logprob: -13.849417686462402
    10. ' =='' → logprob: -14.474417686462402

Token 3801: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.00015335931675508618
    2. ' '' → logprob: -9.125153541564941
    3. ''' → logprob: -10.125153541564941
    4. 'x' → logprob: -13.500153541564941
    5. '"x' → logprob: -13.500153541564941
    6. ' ' → logprob: -14.375153541564941
    7. '   ' → logprob: -15.375153541564941
    8. '‘' → logprob: -16.375152587890625
    9. ' x' → logprob: -16.625152587890625
    10. '```' → logprob: -16.625152587890625

Token 3802: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.07890080660581589
    2. 'x' → logprob: -2.5789008140563965
    3. ''' → logprob: -11.703900337219238
    4. '"x' → logprob: -13.453900337219238
    5. '```' → logprob: -14.828900337219238
    6. ' '' → logprob: -14.953900337219238
    7. '`' → logprob: -15.578900337219238
    8. ' x' → logprob: -15.828900337219238
    9. '['' → logprob: -16.328901290893555
    10. '   ' → logprob: -16.828901290893555

Token 3803: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.3137896955013275
    2. ':
' → logprob: -1.68878972530365
    3. ''' → logprob: -2.9387896060943604
    4. '           ' → logprob: -4.6887898445129395
    5. ''):
' → logprob: -5.0637898445129395
    6. '       ' → logprob: -5.5637898445129395
    7. '==' → logprob: -5.9387898445129395
    8. '```' → logprob: -6.1887898445129395
    9. ':' → logprob: -6.4387898445129395
    10. '':' → logprob: -6.4387898445129395

Token 3804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004169221967458725
    2. 'x' → logprob: -5.75416898727417
    3. '```' → logprob: -7.25416898727417
    4. ' x' → logprob: -8.629169464111328
    5. '=' → logprob: -10.379169464111328
    6. '               ' → logprob: -11.004169464111328
    7. '          ' → logprob: -11.254169464111328
    8. '``' → logprob: -11.629169464111328
    9. '       ' → logprob: -11.754169464111328
    10. '(x' → logprob: -11.879169464111328

Token 3805: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.380904672667384e-05
    2. ' x' → logprob: -10.500033378601074
    3. '           ' → logprob: -12.375033378601074
    4. '```' → logprob: -13.375033378601074
    5. '``' → logprob: -15.500033378601074
    6. '       ' → logprob: -16.12503433227539
    7. '               ' → logprob: -17.25003433227539
    8. '(x' → logprob: -17.75003433227539
    9. '   ' → logprob: -18.12503433227539
    10. '                   ' → logprob: -20.37503433227539

Token 3806: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '_count' → logprob: -14.625000953674316
    3. '
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875
    5. '=' → logprob: -17.125
    6. '   ' → logprob: -17.625
    7. 'count' → logprob: -17.875
    8. '_counts' → logprob: -18.375
    9. '₂' → logprob: -18.5
    10. ' =' → logprob: -18.75

Token 3807: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.3458322731312364e-06
    2. 'count' → logprob: -12.125007629394531
    3. '=' → logprob: -13.875007629394531
    4. '2' → logprob: -15.375007629394531
    5. 'x' → logprob: -15.500007629394531
    6. '\' → logprob: -16.25000762939453
    7. '```' → logprob: -16.75000762939453
    8. '=_' → logprob: -17.12500762939453
    9. '_counts' → logprob: -17.12500762939453
    10. '
' → logprob: -17.50000762939453

Token 3808: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007685328018851578
    2. ' =' → logprob: -7.250768661499023
    3. '*=' → logprob: -9.750768661499023
    4. '=(' → logprob: -15.250768661499023
    5. '   ' → logprob: -16.875768661499023
    6. '```' → logprob: -17.000768661499023
    7. ' *=' → logprob: -18.125768661499023
    8. '=
' → logprob: -19.250768661499023
    9. '.=' → logprob: -19.375768661499023
    10. '*' → logprob: -19.375768661499023

Token 3809: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.125001907348633
    5. 'x' → logprob: -19.125001907348633
    6. '(a' → logprob: -20.000001907348633
    7. '```' → logprob: -20.000001907348633
    8. '(int' → logprob: -20.500001907348633
    9. '(s' → logprob: -20.750001907348633
    10. '`' → logprob: -20.875001907348633

Token 3810: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.061972394585609436
    2. 'x' → logprob: -2.8119723796844482
    3. ' (' → logprob: -13.436972618103027
    4. '(' → logprob: -13.561972618103027
    5. ' x' → logprob: -13.811972618103027
    6. '[x' → logprob: -15.311972618103027
    7. '{x' → logprob: -15.561972618103027
    8. '   ' → logprob: -15.936972618103027
    9. ',x' → logprob: -16.31197166442871
    10. '
' → logprob: -16.43697166442871

Token 3811: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35233402252197266
    2. '(x' → logprob: -1.6023340225219727
    3. 'x' → logprob: -2.3523340225219727
    4. '[x' → logprob: -8.227334022521973
    5. ' x' → logprob: -10.102334022521973
    6. '(' → logprob: -10.977334022521973
    7. '   ' → logprob: -10.977334022521973
    8. '_count' → logprob: -11.477334022521973
    9. ' (' → logprob: -11.602334022521973
    10. '{x' → logprob: -11.727334022521973

Token 3812: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.06941564381122589
    2. '2' → logprob: -2.81941556930542
    3. '(x' → logprob: -4.94441556930542
    4. 'x' → logprob: -8.694416046142578
    5. 'count' → logprob: -9.444416046142578
    6. '   ' → logprob: -11.194416046142578
    7. '(' → logprob: -11.194416046142578
    8. ' (' → logprob: -12.069416046142578
    9. ' x' → logprob: -12.694416046142578
    10. '[x' → logprob: -13.194416046142578

Token 3813: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0019445802317932248
    2. ' *' → logprob: -6.251944541931152
    3. '*x' → logprob: -11.126944541931152
    4. '*(' → logprob: -14.376944541931152
    5. '**' → logprob: -14.876944541931152
    6. '```' → logprob: -15.876944541931152
    7. '*object' → logprob: -16.12694549560547
    8. '*out' → logprob: -17.50194549560547
    9. '*c' → logprob: -17.62694549560547
    10. '*p' → logprob: -18.00194549560547

Token 3814: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0921942703134846e-05
    2. '(' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.25001049041748
    4. 'pow' → logprob: -16.625011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '```' → logprob: -18.375011444091797
    7. '
' → logprob: -20.125011444091797
    8. ' (' → logprob: -20.250011444091797
    9. '       ' → logprob: -21.000011444091797
    10. '۲' → logprob: -21.125011444091797

Token 3815: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.37500286102295
    3. '(' → logprob: -13.62500286102295
    4. 'pow' → logprob: -16.250003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '```' → logprob: -18.500003814697266
    7. '۲' → logprob: -20.625003814697266
    8. '       ' → logprob: -20.750003814697266
    9. '  ' → logprob: -21.250003814697266
    10. '２' → logprob: -21.250003814697266

Token 3816: ')' (ID: 8)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.023246292024850845
    2. ')' → logprob: -3.7732462882995605
    3. '%' → logprob: -14.898246765136719
    4. '%)' → logprob: -15.523246765136719
    5. '```' → logprob: -16.14824676513672
    6. '   ' → logprob: -17.27324676513672
    7. ' )' → logprob: -17.52324676513672
    8. ']%' → logprob: -17.64824676513672
    9. ')#' → logprob: -18.02324676513672
    10. '}%' → logprob: -18.14824676513672

Token 3817: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0004940562648698688
    2. ')%' → logprob: -7.625494003295898
    3. '%)' → logprob: -13.000494003295898
    4. ')' → logprob: -13.875494003295898
    5. '%x' → logprob: -14.250494003295898
    6. ' %' → logprob: -14.375494003295898
    7. '```' → logprob: -14.625494003295898
    8. ']%' → logprob: -15.000494003295898
    9. '%
' → logprob: -15.250494003295898
    10. '()%' → logprob: -15.500494003295898

Token 3818: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.0
    3. '100' → logprob: -20.25
    4. '_MOD' → logprob: -22.0
    5. '```' → logprob: -22.75
    6. '.MOD' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. 'MD' → logprob: -24.5
    9. 'MO' → logprob: -24.625
    10. 'MODULE' → logprob: -25.125

Token 3819: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0646110475063324
    2. '```' → logprob: -2.9396109580993652
    3. 'continue' → logprob: -5.439610958099365
    4. '           ' → logprob: -5.564610958099365
    5. '<|end|>' → logprob: -7.189610958099365
    6. '   ' → logprob: -8.064611434936523
    7. ' continue' → logprob: -8.939611434936523
    8. '``' → logprob: -9.564611434936523
    9. ')' → logprob: -10.189611434936523
    10. '               ' → logprob: -10.314611434936523

Token 3820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011629798245849088
    2. 'continue' → logprob: -9.625116348266602
    3. '```' → logprob: -10.500116348266602
    4. '   ' → logprob: -11.375116348266602
    5. '           ' → logprob: -11.750116348266602
    6. ' continue' → logprob: -13.875116348266602
    7. 'elif' → logprob: -14.500116348266602
    8. '
' → logprob: -14.500116348266602
    9. 'for' → logprob: -15.625116348266602
    10. ')' → logprob: -15.750116348266602

Token 3821: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12943808734416962
    2. 'elif' (adapté à ' elif') → logprob: -2.1294381618499756
    3. 'else' → logprob: -6.5044379234313965
    4. '```' → logprob: -7.3794379234313965
    5. '   ' → logprob: -8.254438400268555
    6. 'continue' → logprob: -9.379438400268555
    7. ' elif' → logprob: -10.504438400268555
    8. '           ' → logprob: -12.379438400268555
    9. '``' → logprob: -13.379438400268555
    10. '	' → logprob: -13.754438400268555

Token 3822: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.505351095460355e-05
    2. ' c' → logprob: -9.500075340270996
    3. '(c' → logprob: -16.00007438659668
    4. '   ' → logprob: -16.87507438659668
    5. '
' → logprob: -18.25007438659668
    6. '```' → logprob: -18.37507438659668
    7. '	c' → logprob: -18.87507438659668
    8. '(' → logprob: -19.87507438659668
    9. '`' → logprob: -19.87507438659668
    10. '1' → logprob: -20.00007438659668

Token 3823: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.13612887263298035
    2. ' in' → logprob: -2.1361289024353027
    3. '[' → logprob: -5.261128902435303
    4. '==' → logprob: -6.261128902435303
    5. '[in' → logprob: -7.011128902435303
    6. '   ' → logprob: -8.386128425598145
    7. ')' → logprob: -8.386128425598145
    8. 'not' → logprob: -8.761128425598145
    9. '```' → logprob: -8.761128425598145
    10. ']' → logprob: -9.261128425598145

Token 3824: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1875571544806007e-05
    2. '['' → logprob: -12.000011444091797
    3. ' ('' → logprob: -12.250011444091797
    4. '{'' → logprob: -14.625011444091797
    5. ''' → logprob: -15.125011444091797
    6. '(' → logprob: -15.500011444091797
    7. '(('' → logprob: -17.125011444091797
    8. '("' → logprob: -17.125011444091797
    9. '   ' → logprob: -18.000011444091797
    10. '(
' → logprob: -18.375011444091797

Token 3825: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008446489810012281
    2. '('' → logprob: -7.500844478607178
    3. '0' → logprob: -8.500844955444336
    4. '['' → logprob: -10.000844955444336
    5. '{'' → logprob: -10.125844955444336
    6. ' '' → logprob: -13.500844955444336
    7. '`' → logprob: -14.250844955444336
    8. '{
' → logprob: -15.375844955444336
    9. '"' → logprob: -15.500844955444336
    10. '
' → logprob: -16.000844955444336

Token 3826: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.051376502960920334
    2. '','' → logprob: -3.4263765811920166
    3. ',' → logprob: -4.0513763427734375
    4. '',' → logprob: -9.176376342773438
    5. ''' → logprob: -10.051376342773438
    6. '   ' → logprob: -11.801376342773438
    7. ',"' → logprob: -12.176376342773438
    8. '(),'' → logprob: -12.551376342773438
    9. ',''' → logprob: -12.801376342773438
    10. ' ,'' → logprob: -13.051376342773438

Token 3827: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000556012790184468
    2. '1' → logprob: -7.500555992126465
    3. ' '' → logprob: -13.125555992126465
    4. '('' → logprob: -14.375555992126465
    5. '"' → logprob: -15.250555992126465
    6. '   ' → logprob: -16.37555694580078
    7. '`' → logprob: -16.75055694580078
    8. '{'' → logprob: -17.12555694580078
    9. ' ' → logprob: -17.75055694580078
    10. ')' → logprob: -18.37555694580078

Token 3828: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.6423354744911194
    2. '):
' → logprob: -0.7673354744911194
    3. '       ' → logprob: -5.392335414886475
    4. '           ' → logprob: -6.767335414886475
    5. ',' → logprob: -6.767335414886475
    6. ')' → logprob: -7.267335414886475
    7. ':
' → logprob: -7.517335414886475
    8. '):' → logprob: -8.017335891723633
    9. '',' → logprob: -8.267335891723633
    10. '')' → logprob: -8.267335891723633

Token 3829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004473540757317096
    2. '```' → logprob: -8.375447273254395
    3. ':
' → logprob: -9.000447273254395
    4. '       ' → logprob: -9.750447273254395
    5. ':' → logprob: -10.875447273254395
    6. 'pass' → logprob: -12.125447273254395
    7. 'continue' → logprob: -12.250447273254395
    8. '               ' → logprob: -13.125447273254395
    9. '``' → logprob: -13.375447273254395
    10. '          ' → logprob: -14.625447273254395

Token 3830: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0072354283183813095
    2. '           ' → logprob: -5.507235527038574
    3. 'continue' → logprob: -6.007235527038574
    4. ' pass' → logprob: -7.507235527038574
    5. '```' → logprob: -9.007235527038574
    6. '               ' → logprob: -11.507235527038574
    7. ' continue' → logprob: -12.507235527038574
    8. '
' → logprob: -12.757235527038574
    9. '       ' → logprob: -13.757235527038574
    10. '	pass' → logprob: -14.507235527038574

Token 3831: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.5120287066092715e-05
    2. '           ' → logprob: -11.750035285949707
    3. 'else' → logprob: -11.750035285949707
    4. '```' → logprob: -11.750035285949707
    5. '   ' → logprob: -11.875035285949707
    6. '	' → logprob: -13.125035285949707
    7. '<|end|>' → logprob: -14.500035285949707
    8. '
' → logprob: -14.500035285949707
    9. 'elif' → logprob: -15.000035285949707
    10. 'continue' → logprob: -15.125035285949707

Token 3832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019737191032618284
    2. '```' → logprob: -7.001973628997803
    3. 'else' → logprob: -7.126973628997803
    4. '   ' → logprob: -8.751974105834961
    5. 'continue' → logprob: -10.376974105834961
    6. '           ' → logprob: -10.376974105834961
    7. '
' → logprob: -10.376974105834961
    8. '``' → logprob: -13.126974105834961
    9. ' else' → logprob: -13.251974105834961
    10. '               ' → logprob: -14.251974105834961

Token 3833: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01836930774152279
    2. '```' → logprob: -4.393369197845459
    3. 'else' (adapté à ' else') → logprob: -5.393369197845459
    4. '   ' → logprob: -7.143369197845459
    5. '           ' → logprob: -9.018369674682617
    6. ' else' → logprob: -9.143369674682617
    7. 'continue' → logprob: -9.768369674682617
    8. '``' → logprob: -9.768369674682617
    9. 'elif' → logprob: -10.268369674682617
    10. '<|end|>' → logprob: -10.393369674682617

Token 3834: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008364219218492508
    2. ':
' → logprob: -5.383364200592041
    3. ':' → logprob: -6.008364200592041
    4. '               ' → logprob: -7.883364200592041
    5. '       ' → logprob: -8.3833646774292
    6. ':return' → logprob: -8.5083646774292
    7. 'return' → logprob: -8.6333646774292
    8. '```' → logprob: -8.8833646774292
    9. '          ' → logprob: -10.0083646774292
    10. '):
' → logprob: -10.8833646774292

Token 3835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049385346472263336
    2. 'return' → logprob: -3.0493853092193604
    3. '       ' → logprob: -7.6743855476379395
    4. '               ' → logprob: -8.674385070800781
    5. '```' → logprob: -9.049385070800781
    6. '   ' → logprob: -10.924385070800781
    7. ' return' → logprob: -11.174385070800781
    8. '          ' → logprob: -12.799385070800781
    9. '{return' → logprob: -12.799385070800781
    10. '``' → logprob: -13.174385070800781

Token 3836: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00017398154886905104
    2. '           ' → logprob: -9.125173568725586
    3. ' return' → logprob: -10.375173568725586
    4. '```' → logprob: -10.625173568725586
    5. '0' → logprob: -12.500173568725586
    6. '{return' → logprob: -13.500173568725586
    7. '   ' → logprob: -13.625173568725586
    8. '``' → logprob: -13.875173568725586
    9. '       ' → logprob: -14.500173568725586
    10. '               ' → logprob: -14.625173568725586

Token 3837: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.8750057220459
    4. '   ' → logprob: -20.8750057220459
    5. '۰' → logprob: -21.6250057220459
    6. '  ' → logprob: -22.1250057220459
    7. '
' → logprob: -22.2500057220459
    8. '00' → logprob: -22.6250057220459
    9. '`' → logprob: -22.7500057220459
    10. ')' → logprob: -22.8750057220459

Token 3838: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.75
    4. '۰' → logprob: -19.375
    5. '(' → logprob: -20.625
    6. '000' → logprob: -21.0
    7. 'return' → logprob: -21.25
    8. '   ' → logprob: -21.25
    9. '1' → logprob: -21.25
    10. '`' → logprob: -21.25

Token 3839: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.31983038783073425
    2. '   ' → logprob: -1.3198304176330566
    3. '       ' → logprob: -5.944830417633057
    4. '
' → logprob: -6.444830417633057
    5. '``' → logprob: -6.444830417633057
    6. '<|end|>' → logprob: -7.819830417633057
    7. 'continue' → logprob: -9.069829940795898
    8. 'x' → logprob: -9.569829940795898
    9. '           ' → logprob: -10.069829940795898
    10. '  ' → logprob: -11.194829940795898

Token 3840: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3458056151866913
    2. '```' → logprob: -1.5958056449890137
    3. 'x' → logprob: -2.5958056449890137
    4. '
' → logprob: -4.345805644989014
    5. '``' → logprob: -6.220805644989014
    6. ' x' → logprob: -10.095805168151855
    7. '`' → logprob: -11.720805168151855
    8. '    
' → logprob: -12.220805168151855
    9. '  ' → logprob: -12.220805168151855
    10. '

' → logprob: -12.845805168151855

Token 3841: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004570511635392904
    2. '   ' → logprob: -6.004570484161377
    3. '```' → logprob: -6.254570484161377
    4. '
' → logprob: -9.004570960998535
    5. '``' → logprob: -10.004570960998535
    6. '#' (adapté à ' #') → logprob: -13.129570960998535
    7. ' x' → logprob: -14.379570960998535
    8. '    
' → logprob: -15.004570960998535
    9. '`' → logprob: -17.00457000732422
    10. '

' → logprob: -17.37957000732422

Token 3842: ' byte' (ID: 9239)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002000130945816636
    2. '   ' → logprob: -6.252000331878662
    3. '```' → logprob: -10.126999855041504
    4. '
' → logprob: -11.126999855041504
    5. '#' → logprob: -11.126999855041504
    6. ' x' → logprob: -13.876999855041504
    7. '``' → logprob: -14.251999855041504
    8. '    
' → logprob: -15.626999855041504
    9. 'def' → logprob: -16.75200080871582
    10. ' ' → logprob: -17.00200080871582

Token 3843: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -15.875
    3. 'b' → logprob: -18.125
    4. '
' → logprob: -18.75
    5. '   ' → logprob: -18.875
    6. ' ' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. 'three' → logprob: -19.75
    9. '_' → logprob: -19.875
    10. '三' → logprob: -20.5

Token 3844: ' bits' (ID: 18189)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15330101549625397
    2. '[' → logprob: -3.2783010005950928
    3. '_count' → logprob: -3.4033010005950928
    4. '_bits' → logprob: -3.4033010005950928
    5. 'bits' → logprob: -3.5283010005950928
    6. '#' → logprob: -5.778301239013672
    7. '   ' → logprob: -6.778301239013672
    8. '```' → logprob: -7.028301239013672
    9. '_idx' → logprob: -7.153301239013672
    10. 'count' → logprob: -7.278301239013672

Token 3845: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11737406998872757
    2. 'x' → logprob: -2.6173741817474365
    3. '```' → logprob: -4.117373943328857
    4. '[' → logprob: -4.492373943328857
    5. '#' → logprob: -5.617373943328857
    6. 'idx' → logprob: -6.617373943328857
    7. 'for' → logprob: -6.742373943328857
    8. '
' → logprob: -6.742373943328857
    9. ' =' → logprob: -6.867373943328857
    10. '=' → logprob: -7.742373943328857

Token 3846: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013526180991902947
    2. 'x' → logprob: -7.126352787017822
    3. '```' → logprob: -8.001352310180664
    4. 'for' → logprob: -9.001352310180664
    5. '``' → logprob: -10.376352310180664
    6. '
' → logprob: -10.876352310180664
    7. ' x' → logprob: -11.126352310180664
    8. '[' → logprob: -11.376352310180664
    9. ' for' → logprob: -12.626352310180664
    10. '`' → logprob: -12.626352310180664

Token 3847: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3489117920398712
    2. '   ' → logprob: -1.3489117622375488
    3. 'for' → logprob: -3.473911762237549
    4. '[' → logprob: -5.848911762237549
    5. '```' → logprob: -7.973911762237549
    6. ' x' → logprob: -8.223912239074707
    7. '``' → logprob: -8.473912239074707
    8. '
' → logprob: -8.473912239074707
    9. ' for' → logprob: -10.223912239074707
    10. 'b' → logprob: -10.598912239074707

Token 3848: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5469025373458862
    2. 'for' → logprob: -1.4219025373458862
    3. 'x' → logprob: -1.9219025373458862
    4. '[' → logprob: -4.171902656555176
    5. 'b' → logprob: -4.421902656555176
    6. '
' → logprob: -5.671902656555176
    7. '```' → logprob: -6.796902656555176
    8. '#' → logprob: -6.921902656555176
    9. '``' → logprob: -8.296902656555176
    10. ' for' → logprob: -8.296902656555176

Token 3849: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12700769305229187
    2. '[' → logprob: -2.1270077228546143
    3. '2' → logprob: -10.502007484436035
    4. '   ' → logprob: -10.877007484436035
    5. '[
' → logprob: -12.127007484436035
    6. '][' → logprob: -12.377007484436035
    7. '
' → logprob: -12.502007484436035
    8. 'for' → logprob: -12.627007484436035
    9. ']' → logprob: -12.752007484436035
    10. 'i' → logprob: -12.752007484436035

Token 3850: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012868782505393028
    2. '   ' → logprob: -9.625128746032715
    3. '
' → logprob: -10.875128746032715
    4. '```' → logprob: -11.000128746032715
    5. 'for' → logprob: -12.375128746032715
    6. '[
' → logprob: -12.625128746032715
    7. 'idx' → logprob: -13.000128746032715
    8. '`' → logprob: -13.375128746032715
    9. '       ' → logprob: -13.375128746032715
    10. '=[' → logprob: -13.375128746032715

Token 3851: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7372048862162046e-05
    2. '   ' → logprob: -11.000027656555176
    3. ' ' → logprob: -12.500027656555176
    4. '
' → logprob: -12.750027656555176
    5. '```' → logprob: -13.250027656555176
    6. '  ' → logprob: -13.750027656555176
    7. '[' → logprob: -15.125027656555176
    8. '``' → logprob: -15.375027656555176
    9. 'from' → logprob: -15.625027656555176
    10. '#' → logprob: -16.50002670288086

Token 3852: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1590762585401535
    2. '[' → logprob: -2.78407621383667
    3. '   ' → logprob: -4.03407621383667
    4. 'in' → logprob: -4.28407621383667
    5. ':' → logprob: -4.53407621383667
    6. '
' → logprob: -4.90907621383667
    7. 'not' → logprob: -5.40907621383667
    8. '```' → logprob: -5.40907621383667
    9. ' in' → logprob: -5.53407621383667
    10. ',' → logprob: -5.65907621383667

Token 3853: ' =' (ID: 314)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5117269158363342
    2. ' not' → logprob: -1.5117268562316895
    3. '[' → logprob: -2.8867268562316895
    4. '   ' → logprob: -3.0117268562316895
    5. '```' → logprob: -3.6367268562316895
    6. 'b' → logprob: -4.3867268562316895
    7. '
' → logprob: -5.1367268562316895
    8. 'def' → logprob: -5.3867268562316895
    9. '#' → logprob: -5.5117268562316895
    10. 'for' → logprob: -5.7617268562316895

Token 3854: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02397782728075981
    2. ''b' → logprob: -4.523977756500244
    3. '2' → logprob: -5.523977756500244
    4. '3' → logprob: -5.773977756500244
    5. ' '' → logprob: -6.523977756500244
    6. ''in' → logprob: -7.023977756500244
    7. '1' → logprob: -7.023977756500244
    8. 'b' → logprob: -7.273977756500244
    9. '   ' → logprob: -7.648977756500244
    10. 'not' → logprob: -8.773978233337402

Token 3855: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005041271448135376
    2. '1' → logprob: -6.130041122436523
    3. ''b' → logprob: -6.130041122436523
    4. 'not' → logprob: -8.505041122436523
    5. ''in' → logprob: -8.630041122436523
    6. ' '' → logprob: -9.005041122436523
    7. '
' → logprob: -9.880041122436523
    8. 'b' → logprob: -10.755041122436523
    9. '('' → logprob: -11.255041122436523
    10. ' not' → logprob: -11.255041122436523

Token 3856: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9947490692138672
    2. ' not' → logprob: -0.9947490692138672
    3. 'not' → logprob: -1.9947490692138672
    4. 'b' → logprob: -3.494749069213867
    5. '       ' → logprob: -3.744749069213867
    6. '```' → logprob: -3.994749069213867
    7. '
' → logprob: -4.369749069213867
    8. '[' → logprob: -4.744749069213867
    9. ')' → logprob: -5.119749069213867
    10. ',' → logprob: -5.244749069213867

Token 3857: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0823981761932373
    2. '```' → logprob: -3.3323981761932373
    3. 'b' → logprob: -3.7073981761932373
    4. 'def' → logprob: -4.832398414611816
    5. 'if' → logprob: -5.082398414611816
    6. '
' → logprob: -6.957398414611816
    7. ' if' → logprob: -7.332398414611816
    8. '#' → logprob: -7.457398414611816
    9. '<|end|>' → logprob: -7.582398414611816
    10. '``' → logprob: -7.707398414611816

Token 3858: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5226110816001892
    2. 'for' → logprob: -1.022611141204834
    3. 'b' → logprob: -3.772611141204834
    4. '```' → logprob: -4.147611141204834
    5. '#' → logprob: -5.272611141204834
    6. '
' → logprob: -6.147611141204834
    7. '``' → logprob: -7.397611141204834
    8. ' for' → logprob: -8.522610664367676
    9. '3' → logprob: -8.897610664367676
    10. '`' → logprob: -9.022610664367676

Token 3859: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3359936773777008
    2. 'b' → logprob: -1.5859936475753784
    3. '```' → logprob: -2.835993766784668
    4. '#' (adapté à ' #') → logprob: -4.335993766784668
    5. '``' → logprob: -5.585993766784668
    6. 'for' → logprob: -5.585993766784668
    7. '
' → logprob: -6.960993766784668
    8. '[' → logprob: -8.835993766784668
    9. '`' → logprob: -8.960993766784668
    10. '#
' → logprob: -10.210993766784668

Token 3860: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34511497616767883
    2. '   ' → logprob: -1.4701149463653564
    3. 'for' → logprob: -2.8451149463653564
    4. '```' → logprob: -6.2201151847839355
    5. '#' → logprob: -6.7201151847839355
    6. '
' → logprob: -8.220114707946777
    7. '``' → logprob: -8.720114707946777
    8. 'def' → logprob: -10.220114707946777
    9. '`' → logprob: -10.345114707946777
    10. '3' → logprob: -10.345114707946777

Token 3861: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. 'b' → logprob: -16.5
    4. '```' → logprob: -16.875
    5. '1' → logprob: -17.25
    6. 'r' → logprob: -17.375
    7. '#' → logprob: -17.75
    8. ']' → logprob: -18.75
    9. '   ' → logprob: -18.9375
    10. '``' → logprob: -18.9375

Token 3862: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055398404598236084
    2. '1' → logprob: -2.930398464202881
    3. '```' → logprob: -8.055397987365723
    4. '3' → logprob: -8.680397987365723
    5. '
' → logprob: -11.180397987365723
    6. '``' → logprob: -12.680397987365723
    7. '   ' → logprob: -13.055397987365723
    8. ' [' → logprob: -13.180397987365723
    9. 'b' → logprob: -13.305397987365723
    10. 'def' → logprob: -13.555397987365723

Token 3863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.500001907348633
    3. '
' → logprob: -14.750001907348633
    4. '3' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.375001907348633
    6. '```' → logprob: -15.375001907348633
    7. '2' → logprob: -15.750001907348633
    8. ']' → logprob: -15.875001907348633
    9. ' ' → logprob: -16.125001907348633
    10. '(' → logprob: -16.812501907348633

Token 3864: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5242606401443481
    2. ' not' → logprob: -1.2742606401443481
    3. ')' → logprob: -2.6492605209350586
    4. 'not' → logprob: -3.0242605209350586
    5. 'def' → logprob: -5.524260520935059
    6. '   ' → logprob: -6.024260520935059
    7. '```' → logprob: -7.274260520935059
    8. '[' → logprob: -7.399260520935059
    9. '
' → logprob: -7.524260520935059
    10. '#' → logprob: -8.399260520935059

Token 3865: ' =' (ID: 314)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4225414991378784
    2. 'not' → logprob: -1.1725414991378784
    3. '[' → logprob: -4.172541618347168
    4. '   ' → logprob: -4.672541618347168
    5. '```' → logprob: -5.172541618347168
    6. '=' → logprob: -7.422541618347168
    7. '==' → logprob: -7.422541618347168
    8. ')' → logprob: -7.547541618347168
    9. '!=' → logprob: -7.547541618347168
    10. 'b' → logprob: -7.672541618347168

Token 3866: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008883526548743248
    2. '0' → logprob: -5.258883476257324
    3. '('' → logprob: -5.758883476257324
    4. ''x' → logprob: -8.633883476257324
    5. ''b' → logprob: -9.008883476257324
    6. '(' → logprob: -10.133883476257324
    7. ''o' → logprob: -10.383883476257324
    8. '`' → logprob: -10.508883476257324
    9. '```' → logprob: -11.008883476257324
    10. '
' → logprob: -11.133883476257324

Token 3867: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003208726877346635
    2. '0' → logprob: -5.753208637237549
    3. '('' → logprob: -10.878209114074707
    4. ' '' → logprob: -12.753209114074707
    5. ''x' → logprob: -13.003209114074707
    6. '`' → logprob: -13.128209114074707
    7. '[' → logprob: -13.878209114074707
    8. '['' → logprob: -14.378209114074707
    9. ''o' → logprob: -14.378209114074707
    10. '(' → logprob: -14.503209114074707

Token 3868: ' fixed' (ID: 13213)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6305456161499023
    2. '```' → logprob: -1.6305456161499023
    3. '   ' → logprob: -2.2555456161499023
    4. 'if' → logprob: -3.2555456161499023
    5. '#' → logprob: -3.2555456161499023
    6. '
' → logprob: -4.005545616149902
    7. ' b' → logprob: -4.130545616149902
    8. '       ' → logprob: -4.630545616149902
    9. 'def' → logprob: -4.880545616149902
    10. 'for' → logprob: -5.005545616149902

Token 3869: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36464184522628784
    2. '   ' → logprob: -1.3646419048309326
    3. '```' → logprob: -3.2396419048309326
    4. '
' → logprob: -5.6146416664123535
    5. '``' → logprob: -6.2396416664123535
    6. '#' → logprob: -6.2396416664123535
    7. ' for' → logprob: -6.7396416664123535
    8. 'def' → logprob: -6.8646416664123535
    9. 'b' → logprob: -7.1146416664123535
    10. '	for' → logprob: -8.864642143249512

Token 3870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3297896683216095
    2. 'for' → logprob: -1.329789638519287
    3. '```' → logprob: -4.204789638519287
    4. '``' → logprob: -7.079789638519287
    5. 'b' → logprob: -7.704789638519287
    6. '
' → logprob: -9.329790115356445
    7. ' for' → logprob: -9.704790115356445
    8. '#' → logprob: -11.454790115356445
    9. '	for' → logprob: -12.329790115356445
    10. '`' → logprob: -12.829790115356445

Token 3871: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13517335057258606
    2. '   ' → logprob: -2.1351733207702637
    3. '```' → logprob: -5.010173320770264
    4. '
' → logprob: -7.385173320770264
    5. '``' → logprob: -7.760173320770264
    6. 'x' → logprob: -8.885173797607422
    7. ' for' → logprob: -8.885173797607422
    8. '#' (adapté à ' #') → logprob: -9.260173797607422
    9. 'b' → logprob: -9.260173797607422
    10. 'For' → logprob: -11.385173797607422

Token 3872: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05184352025389671
    2. 'b' → logprob: -3.8018434047698975
    3. '   ' → logprob: -4.051843643188477
    4. 'x' → logprob: -4.926843643188477
    5. '```' → logprob: -5.801843643188477
    6. '
' → logprob: -8.051843643188477
    7. '``' → logprob: -9.301843643188477
    8. ' for' → logprob: -9.676843643188477
    9. 'c' → logprob: -10.426843643188477
    10. 'remaining' → logprob: -12.301843643188477

Token 3873: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28121235966682434
    2. '3' → logprob: -1.406212329864502
    3. '[' → logprob: -10.03121280670166
    4. '   ' → logprob: -11.90621280670166
    5. '(' → logprob: -12.78121280670166
    6. '```' → logprob: -12.90621280670166
    7. ' ' → logprob: -13.53121280670166
    8. '``' → logprob: -13.65621280670166
    9. '
' → logprob: -14.28121280670166
    10. '[
' → logprob: -15.03121280670166

Token 3874: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005911595653742552
    2. '3' → logprob: -7.750591278076172
    3. '```' → logprob: -9.625591278076172
    4. '   ' → logprob: -10.000591278076172
    5. '
' → logprob: -11.375591278076172
    6. '[
' → logprob: -11.500591278076172
    7. '``' → logprob: -11.875591278076172
    8. 'for' → logprob: -12.125591278076172
    9. ' =' → logprob: -12.625591278076172
    10. '=' → logprob: -13.000591278076172

Token 3875: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9040898880339228e-05
    2. '   ' → logprob: -10.875028610229492
    3. ' ' → logprob: -12.250028610229492
    4. '
' → logprob: -13.375028610229492
    5. 'range' → logprob: -14.000028610229492
    6. 'from' → logprob: -14.375028610229492
    7. '(' → logprob: -15.000028610229492
    8. '  ' → logprob: -15.125028610229492
    9. '[' → logprob: -15.250028610229492
    10. ']' → logprob: -15.500028610229492

Token 3876: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9781410098075867
    2. '=' → logprob: -0.9781410098075867
    3. ' =' → logprob: -2.9781410694122314
    4. ']' → logprob: -3.3531410694122314
    5. '...' → logprob: -3.4781410694122314
    6. ')' → logprob: -3.8531410694122314
    7. '```' → logprob: -4.228140830993652
    8. 'def' → logprob: -4.478140830993652
    9. '..' → logprob: -4.478140830993652
    10. ']=' → logprob: -4.853140830993652

Token 3877: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00011629798245849088
    2. '3' → logprob: -9.125116348266602
    3. ']' → logprob: -12.250116348266602
    4. '```' → logprob: -13.000116348266602
    5. '[' → logprob: -15.875116348266602
    6. '
' → logprob: -17.1251163482666
    7. '2' → logprob: -17.2501163482666
    8. '   ' → logprob: -17.7501163482666
    9. '``' → logprob: -17.7501163482666
    10. '][' → logprob: -18.2501163482666

Token 3878: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.921503484249115
    2. '=' → logprob: -1.6715035438537598
    3. '       ' → logprob: -1.9215035438537598
    4. '   ' → logprob: -2.7965035438537598
    5. ':' → logprob: -3.0465035438537598
    6. ' =' → logprob: -3.2965035438537598
    7. '```' → logprob: -3.2965035438537598
    8. ']=' → logprob: -3.6715035438537598
    9. 'for' → logprob: -4.17150354385376
    10. ':
' → logprob: -4.92150354385376

Token 3879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6188624501228333
    2. 'for' → logprob: -1.6188623905181885
    3. ' =' → logprob: -2.3688623905181885
    4. ':' → logprob: -3.6188623905181885
    5. 'c' → logprob: -3.9938623905181885
    6. ' for' → logprob: -4.118862628936768
    7. '```' → logprob: -4.118862628936768
    8. '   ' → logprob: -4.118862628936768
    9. 'def' → logprob: -4.493862628936768
    10. 'in' → logprob: -4.493862628936768

Token 3880: ' x' (ID: 1215)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.21489672362804413
    2. '[' → logprob: -2.4648966789245605
    3. 'x' → logprob: -3.0898966789245605
    4. ''x' → logprob: -3.2148966789245605
    5. '[
' → logprob: -4.8398966789245605
    6. '[x' → logprob: -5.2148966789245605
    7. '('' → logprob: -5.5898966789245605
    8. 'range' → logprob: -6.3398966789245605
    9. '(' → logprob: -6.7148966789245605
    10. '6' → logprob: -7.3398966789245605

Token 3881: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09603935480117798
    2. 'for' → logprob: -2.721039295196533
    3. '```' → logprob: -4.346039295196533
    4. '[' → logprob: -5.471039295196533
    5. 'x' → logprob: -5.596039295196533
    6. ' for' → logprob: -6.721039295196533
    7. '       ' → logprob: -6.721039295196533
    8. '(' → logprob: -7.096039295196533
    9. '``' → logprob: -7.346039295196533
    10. 'def' → logprob: -8.471039772033691

Token 3882: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01727275550365448
    2. '```' → logprob: -4.51727294921875
    3. 'for' → logprob: -5.39227294921875
    4. 'x' → logprob: -7.26727294921875
    5. '``' → logprob: -7.39227294921875
    6. '
' → logprob: -8.76727294921875
    7. ' for' → logprob: -9.51727294921875
    8. '       ' → logprob: -9.76727294921875
    9. '`' → logprob: -11.64227294921875
    10. '(' → logprob: -11.76727294921875

Token 3883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04957752674818039
    2. 'x' → logprob: -3.049577474594116
    3. '```' → logprob: -7.299577713012695
    4. '
' → logprob: -8.799577713012695
    5. '``' → logprob: -9.424577713012695
    6. ' x' → logprob: -9.674577713012695
    7. ' ' → logprob: -12.049577713012695
    8. 'for' → logprob: -12.049577713012695
    9. '  ' → logprob: -12.674577713012695
    10. '       ' → logprob: -13.549577713012695

Token 3884: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023606013506650925
    2. '   ' → logprob: -3.773606061935425
    3. '```' → logprob: -8.023606300354004
    4. '``' → logprob: -11.023606300354004
    5. '
' → logprob: -11.273606300354004
    6. ' x' → logprob: -12.773606300354004
    7. 'for' → logprob: -14.398606300354004
    8. '       ' → logprob: -15.023606300354004
    9. ' ' → logprob: -16.273605346679688
    10. '    
' → logprob: -17.273605346679688

Token 3885: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -12.625016212463379
    3. '_count' → logprob: -12.750016212463379
    4. 'bits' → logprob: -13.125016212463379
    5. '2' → logprob: -13.500016212463379
    6. '_indices' → logprob: -13.500016212463379
    7. '_' → logprob: -13.625016212463379
    8. '_counts' → logprob: -14.125016212463379
    9. '_BITS' → logprob: -14.250016212463379
    10. '```' → logprob: -14.375016212463379

Token 3886: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.033109117299318314
    2. 'b' → logprob: -3.533109188079834
    3. '=' → logprob: -6.158109188079834
    4. ' =' → logprob: -7.783109188079834
    5. 'indices' → logprob: -7.783109188079834
    6. '_indices' → logprob: -8.033108711242676
    7. '=[' → logprob: -10.408108711242676
    8. 'idx' → logprob: -11.283108711242676
    9. '_idx' → logprob: -12.033108711242676
    10. '_' → logprob: -12.283108711242676

Token 3887: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.038727983832359314
    2. '[' → logprob: -3.4137279987335205
    3. '2' → logprob: -5.788727760314941
    4. 'indices' → logprob: -6.788727760314941
    5. '=[' → logprob: -8.663727760314941
    6. '_indices' → logprob: -8.788727760314941
    7. '```' → logprob: -9.288727760314941
    8. 'its' → logprob: -9.538727760314941
    9. 'idx' → logprob: -9.663727760314941
    10. 'index' → logprob: -9.913727760314941

Token 3888: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.001586866332218051
    2. 'idx' → logprob: -6.5015869140625
    3. '=' → logprob: -10.0015869140625
    4. '_idxs' → logprob: -10.8765869140625
    5. '_indices' → logprob: -11.3765869140625
    6. ' =' → logprob: -12.8765869140625
    7. 'indices' → logprob: -13.0015869140625
    8. '=[' → logprob: -13.7515869140625
    9. '_index' → logprob: -13.7515869140625
    10. '[' → logprob: -14.6265869140625

Token 3889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03809220716357231
    2. ' =' → logprob: -3.2880921363830566
    3. '=[' → logprob: -9.913092613220215
    4. '   ' → logprob: -14.413092613220215
    5. ' =[' → logprob: -14.788092613220215
    6. '[' → logprob: -15.538092613220215
    7. '=
' → logprob: -16.7880916595459
    8. '=[
' → logprob: -17.1630916595459
    9. '```' → logprob: -17.6630916595459
    10. ' ' → logprob: -17.9130916595459

Token 3890: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -13.250001907348633
    3. 'list' → logprob: -16.125001907348633
    4. 'range' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '[
' → logprob: -19.625001907348633
    7. '[list' → logprob: -21.500001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '  ' → logprob: -23.375001907348633
    10. '[List' → logprob: -24.375001907348633

Token 3891: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '  ' → logprob: -15.750003814697266
    5. '```' → logprob: -17.750003814697266
    6. '    ' → logprob: -18.500003814697266
    7. '       ' → logprob: -18.750003814697266
    8. '(' → logprob: -19.375003814697266
    9. '	' → logprob: -19.437503814697266
    10. '``' → logprob: -19.500003814697266

Token 3892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005052540800534189
    2. '3' → logprob: -7.625505447387695
    3. '```' → logprob: -12.000505447387695
    4. ' ,' → logprob: -12.375505447387695
    5. ',
' → logprob: -13.125505447387695
    6. '[' → logprob: -13.375505447387695
    7. '...,' → logprob: -14.250505447387695
    8. '   ' → logprob: -14.250505447387695
    9. '``' → logprob: -14.750505447387695
    10. ',...' → logprob: -15.250505447387695

Token 3893: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -19.875
    4. '2' → logprob: -21.125
    5. '３' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '۳' → logprob: -22.5
    8. '...' → logprob: -22.75
    9. '
' → logprob: -23.125
    10. '  ' → logprob: -23.875

Token 3894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052360063418745995
    2. '4' → logprob: -5.2552361488342285
    3. '```' → logprob: -13.38023567199707
    4. ' ,' → logprob: -14.75523567199707
    5. ',
' → logprob: -16.13023567199707
    6. '   ' → logprob: -16.25523567199707
    7. '`,' → logprob: -16.63023567199707
    8. '``' → logprob: -16.75523567199707
    9. '
' → logprob: -17.13023567199707
    10. '...,' → logprob: -17.38023567199707

Token 3895: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '４' → logprob: -21.125
    4. '   ' → logprob: -21.375
    5. '۴' → logprob: -21.5
    6. '```' → logprob: -22.375
    7. '[' → logprob: -23.125
    8. '  ' → logprob: -24.0
    9. '' → logprob: -24.0
    10. '(' → logprob: -24.0

Token 3896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01815333589911461
    2. '5' → logprob: -4.018153190612793
    3. '```' → logprob: -12.768153190612793
    4. ' ,' → logprob: -15.518153190612793
    5. '   ' → logprob: -16.14315414428711
    6. ',
' → logprob: -16.26815414428711
    7. '``' → logprob: -16.51815414428711
    8. '[' → logprob: -17.89315414428711
    9. '`,' → logprob: -18.01815414428711
    10. '
' → logprob: -18.64315414428711

Token 3897: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -20.75
    5. '[' → logprob: -21.0
    6. '۵' → logprob: -22.625
    7. '  ' → logprob: -22.75
    8. '(' → logprob: -23.125
    9. '4' → logprob: -23.25
    10. '５' → logprob: -23.625

Token 3898: ',' (ID: 11)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.25200656056404114
    2. ',' → logprob: -1.5020065307617188
    3. '```' → logprob: -9.502006530761719
    4. '[' → logprob: -13.877006530761719
    5. '   ' → logprob: -13.877006530761719
    6. '``' → logprob: -14.752006530761719
    7. ' ,' → logprob: -16.00200653076172
    8. ' ' → logprob: -16.00200653076172
    9. ']' → logprob: -16.37700653076172
    10. '`' → logprob: -16.37700653076172

Token 3899: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '```' → logprob: -19.625
    4. '[' → logprob: -19.75
    5. '६' → logprob: -21.25
    6. '' → logprob: -22.0
    7. '۶' → logprob: -22.0
    8. '   ' → logprob: -22.125
    9. '৬' → logprob: -22.375
    10. '٦' → logprob: -22.75

Token 3900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023252001032233238
    2. '7' → logprob: -3.773252010345459
    3. '[' → logprob: -12.6482515335083
    4. '```' → logprob: -13.0232515335083
    5. ' ,' → logprob: -14.5232515335083
    6. '   ' → logprob: -15.1482515335083
    7. ',
' → logprob: -16.523252487182617
    8. ',[' → logprob: -17.148252487182617
    9. ']' → logprob: -17.273252487182617
    10. '``' → logprob: -17.398252487182617

Token 3901: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.250000953674316
    3. '6' → logprob: -15.125000953674316
    4. '```' → logprob: -15.750000953674316
    5. '[' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '(' → logprob: -18.625001907348633
    8. '4' → logprob: -19.000001907348633
    9. '5' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.625001907348633

Token 3902: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04368751496076584
    2. ']' → logprob: -3.168687582015991
    3. '   ' → logprob: -7.418687343597412
    4. ']
' → logprob: -10.16868782043457
    5. ']

' → logprob: -11.16868782043457
    6. '```' → logprob: -11.16868782043457
    7. ']:
' → logprob: -11.41868782043457
    8. ',' → logprob: -12.41868782043457
    9. ' ]
' → logprob: -13.41868782043457
    10. '``' → logprob: -14.04368782043457

Token 3903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.586593508720398
    2. 'for' → logprob: -0.836593508720398
    3. '```' → logprob: -5.0865936279296875
    4. 'x' → logprob: -6.0865936279296875
    5. '
' → logprob: -6.5865936279296875
    6. '``' → logprob: -7.4615936279296875
    7. ' for' → logprob: -8.711593627929688
    8. 'count' → logprob: -11.336593627929688
    9. '    
' → logprob: -12.711593627929688
    10. '`' → logprob: -12.961593627929688

Token 3904: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0010318574495613575
    2. 'for' → logprob: -7.501031875610352
    3. '   ' → logprob: -7.751031875610352
    4. '```' → logprob: -10.001031875610352
    5. '``' → logprob: -13.126031875610352
    6. '
' → logprob: -14.501031875610352
    7. ' x' → logprob: -14.501031875610352
    8. '       ' → logprob: -17.00103187561035
    9. 'count' → logprob: -18.00103187561035
    10. ' for' → logprob: -18.00103187561035

Token 3905: '3' (ID: 18)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.47450438141822815
    2. '_bits' → logprob: -0.9745043516159058
    3. 'count' → logprob: -8.099504470825195
    4. '_' → logprob: -10.474504470825195
    5. '_counts' → logprob: -10.474504470825195
    6. 'bits' → logprob: -10.849504470825195
    7. '_cnt' → logprob: -11.224504470825195
    8. '```' → logprob: -11.849504470825195
    9. '=' → logprob: -12.224504470825195
    10. '_idx' → logprob: -12.974504470825195

Token 3906: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00043400691356509924
    2. '_bits' → logprob: -7.750433921813965
    3. '=' → logprob: -14.375433921813965
    4. '_counts' → logprob: -14.375433921813965
    5. 'count' → logprob: -14.500433921813965
    6. '_cnt' → logprob: -14.625433921813965
    7. '_' → logprob: -15.000433921813965
    8. '=_' → logprob: -16.00043487548828
    9. '```' → logprob: -16.12543487548828
    10. '_idx' → logprob: -16.25043487548828

Token 3907: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.306760805164231e-05
    2. ' =' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '=x' → logprob: -18.25001335144043
    5. '```' → logprob: -19.00001335144043
    6. 'x' → logprob: -19.50001335144043
    7. '=(' → logprob: -20.87501335144043
    8. '=
' → logprob: -21.00001335144043
    9. '  ' → logprob: -21.62501335144043
    10. ' ' → logprob: -21.87501335144043

Token 3908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000713266315869987
    2. '(' → logprob: -7.250713348388672
    3. 'x' → logprob: -13.500713348388672
    4. '(x' → logprob: -13.750713348388672
    5. ' ' → logprob: -15.000713348388672
    6. '   ' → logprob: -15.250713348388672
    7. '```' → logprob: -15.875713348388672
    8. '=' → logprob: -16.125713348388672
    9. ' (' → logprob: -16.875713348388672
    10. '`' → logprob: -17.875713348388672

Token 3909: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015300170343834907
    2. ' for' → logprob: -9.125152587890625
    3. '```' → logprob: -10.625152587890625
    4. '   ' → logprob: -11.375152587890625
    5. '	for' → logprob: -11.750152587890625
    6. '``' → logprob: -15.500152587890625
    7. 'For' → logprob: -16.000152587890625
    8. '
' → logprob: -16.250152587890625
    9. '       ' → logprob: -18.250152587890625
    10. '_for' → logprob: -19.000152587890625

Token 3910: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018458699923940003
    2. '   ' → logprob: -9.000185012817383
    3. ' for' → logprob: -10.375185012817383
    4. '```' → logprob: -11.000185012817383
    5. '	for' → logprob: -11.250185012817383
    6. '``' → logprob: -15.875185012817383
    7. 'For' → logprob: -16.875185012817383
    8. '
' → logprob: -17.500185012817383
    9. '       ' → logprob: -18.375185012817383
    10. ' ' → logprob: -20.625185012817383

Token 3911: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.816093228830141e-06
    2. ' for' → logprob: -13.62500286102295
    3. '```' → logprob: -14.00000286102295
    4. '   ' → logprob: -14.25000286102295
    5. '	for' → logprob: -16.750001907348633
    6. '``' → logprob: -18.250001907348633
    7. 'For' → logprob: -19.125001907348633
    8. '
' → logprob: -21.625001907348633
    9. '       ' → logprob: -22.625001907348633
    10. '`' → logprob: -23.375001907348633

Token 3912: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015034328680485487
    2. 'i' → logprob: -6.5015034675598145
    3. ' idx' → logprob: -13.751502990722656
    4. '   ' → logprob: -18.376502990722656
    5. 'index' → logprob: -18.376502990722656
    6. 'c' → logprob: -18.501502990722656
    7. '	idx' → logprob: -18.501502990722656
    8. '_idx' → logprob: -19.126502990722656
    9. 'ix' → logprob: -20.126502990722656
    10. ' i' → logprob: -20.501502990722656

Token 3913: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.028832579031586647
    2. ' in' → logprob: -3.6538326740264893
    3. 'idx' → logprob: -6.02883243560791
    4. ' idx' → logprob: -10.15383243560791
    5. 'x' → logprob: -10.65383243560791
    6. '(idx' → logprob: -11.02883243560791
    7. '(' → logprob: -11.40383243560791
    8. '   ' → logprob: -11.90383243560791
    9. '[idx' → logprob: -12.40383243560791
    10. '(in' → logprob: -12.90383243560791

Token 3914: ' x' (ID: 1215)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05747013911604881
    2. '[' → logprob: -3.0574700832366943
    3. '2' → logprob: -5.182470321655273
    4. 'x' → logprob: -5.932470321655273
    5. 'range' → logprob: -7.932470321655273
    6. ' idx' → logprob: -9.307470321655273
    7. '[idx' → logprob: -9.432470321655273
    8. '   ' → logprob: -10.682470321655273
    9. '(' → logprob: -11.432470321655273
    10. '6' → logprob: -12.932470321655273

Token 3915: '_bits' (ID: 48415)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014142591506242752
    2. '(' → logprob: -4.8891425132751465
    3. 'x' → logprob: -5.1391425132751465
    4. 'range' → logprob: -7.8891425132751465
    5. 'idx' → logprob: -10.264142990112305
    6. 'b' → logprob: -10.264142990112305
    7. '_bits' → logprob: -10.264142990112305
    8. '[
' → logprob: -10.764142990112305
    9. 'in' → logprob: -10.889142990112305
    10. '=' → logprob: -10.889142990112305

Token 3916: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002251125843031332
    2. '3' → logprob: -8.875225067138672
    3. '   ' → logprob: -10.375225067138672
    4. '(' → logprob: -10.875225067138672
    5. '```' → logprob: -11.375225067138672
    6. ' [' → logprob: -12.125225067138672
    7. '=' → logprob: -12.125225067138672
    8. '2' → logprob: -13.250225067138672
    9. '][' → logprob: -13.500225067138672
    10. '_idx' → logprob: -13.500225067138672

Token 3917: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2531552016735077
    2. '3' → logprob: -1.50315523147583
    3. '2' → logprob: -7.00315523147583
    4. '6' → logprob: -9.378154754638672
    5. '(' → logprob: -9.878154754638672
    6. 'idx' → logprob: -10.128154754638672
    7. '7' → logprob: -10.378154754638672
    8. '```' → logprob: -10.378154754638672
    9. ']' → logprob: -10.878154754638672
    10. '][' → logprob: -11.003154754638672

Token 3918: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.4761907458305359
    2. 'idx' → logprob: -0.9761907458305359
    3. '[' → logprob: -6.976190567016602
    4. '3' → logprob: -7.851190567016602
    5. 'Idx' → logprob: -7.976190567016602
    6. '6' → logprob: -8.601190567016602
    7. 'x' → logprob: -9.726190567016602
    8. '2' → logprob: -10.101190567016602
    9. '[idx' → logprob: -10.351190567016602
    10. '   ' → logprob: -10.351190567016602

Token 3919: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5237297415733337
    2. 'in' → logprob: -1.7737298011779785
    3. ':
' → logprob: -1.8987298011779785
    4. ' in' → logprob: -2.6487298011779785
    5. ':' → logprob: -5.1487298011779785
    6. '```' → logprob: -5.2737298011779785
    7. '[' → logprob: -5.8987298011779785
    8. '=' → logprob: -6.1487298011779785
    9. '   ' → logprob: -7.7737298011779785
    10. '(' → logprob: -8.39872932434082

Token 3920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033546582562848926
    2. 'idx' → logprob: -9.250335693359375
    3. '   ' → logprob: -9.500335693359375
    4. '```' → logprob: -9.625335693359375
    5. '(' → logprob: -10.000335693359375
    6. '[' → logprob: -10.875335693359375
    7. 'for' → logprob: -12.250335693359375
    8. '           ' → logprob: -12.250335693359375
    9. '``' → logprob: -12.250335693359375
    10. 'if' → logprob: -12.500335693359375

Token 3921: ' c' (ID: 274)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09214511513710022
    2. '       ' → logprob: -2.7171452045440674
    3. '   ' → logprob: -4.467144966125488
    4. 'if' → logprob: -4.967144966125488
    5. 'range' → logprob: -6.092144966125488
    6. '[' → logprob: -8.342144966125488
    7. '
' → logprob: -8.342144966125488
    8. ' idx' → logprob: -8.717144966125488
    9. '```' → logprob: -9.092144966125488
    10. 'in' → logprob: -9.467144966125488

Token 3922: ' =' (ID: 314)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47794556617736816
    2. ' in' → logprob: -0.9779455661773682
    3. '=' → logprob: -5.977945327758789
    4. '   ' → logprob: -8.352945327758789
    5. ')' → logprob: -8.352945327758789
    6. '```' → logprob: -8.352945327758789
    7. '       ' → logprob: -8.477945327758789
    8. ' =' → logprob: -8.602945327758789
    9. '==' → logprob: -9.227945327758789
    10. ']' → logprob: -10.227945327758789

Token 3923: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.688212614681106e-05
    2. ' b' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. '```' → logprob: -19.750017166137695
    5. '	b' → logprob: -20.250017166137695
    6. '       ' → logprob: -21.000017166137695
    7. ')b' → logprob: -21.875017166137695
    8. '>b' → logprob: -22.375017166137695
    9. ''b' → logprob: -22.375017166137695
    10. ' ' → logprob: -22.500017166137695

Token 3924: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004330532974563539
    2. 'b' → logprob: -7.750432968139648
    3. '[' → logprob: -14.125432968139648
    4. '```' → logprob: -14.125432968139648
    5. '   ' → logprob: -14.375432968139648
    6. '  ' → logprob: -16.87543296813965
    7. ' b' → logprob: -16.87543296813965
    8. ' ' → logprob: -16.87543296813965
    9. '
' → logprob: -17.50043296813965
    10. '_' → logprob: -17.62543296813965

Token 3925: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.03913009166717529
    2. 'idx' → logprob: -3.289130210876465
    3. 'c' → logprob: -8.039130210876465
    4. '[c' → logprob: -8.164130210876465
    5. '```' → logprob: -8.414130210876465
    6. '[' → logprob: -9.039130210876465
    7. '[
' → logprob: -10.039130210876465
    8. '   ' → logprob: -10.414130210876465
    9. '       ' → logprob: -11.039130210876465
    10. '`' → logprob: -11.914130210876465

Token 3926: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3147223889827728
    2. ']
' → logprob: -2.1897222995758057
    3. ']=='' → logprob: -2.5647222995758057
    4. ']==' → logprob: -2.9397222995758057
    5. '       ' → logprob: -4.564722537994385
    6. '=='' → logprob: -4.689722537994385
    7. ']'' → logprob: -5.939722537994385
    8. 'if' → logprob: -6.439722537994385
    9. '           ' → logprob: -6.939722537994385
    10. '==' → logprob: -6.939722537994385

Token 3927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04517633467912674
    2. '           ' → logprob: -4.0451765060424805
    3. '==' → logprob: -4.4201765060424805
    4. 'if' → logprob: -5.1701765060424805
    5. '```' → logprob: -5.6701765060424805
    6. ' if' → logprob: -5.7951765060424805
    7. '=='' → logprob: -6.7951765060424805
    8. ' ==' → logprob: -7.6701765060424805
    9. '{
' → logprob: -8.42017650604248
    10. '        ' → logprob: -9.17017650604248

Token 3928: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3923500180244446
    2. '       ' → logprob: -1.1423499584197998
    3. ' if' → logprob: -5.767350196838379
    4. ''x' → logprob: -7.142350196838379
    5. '           ' → logprob: -7.392350196838379
    6. '```' → logprob: -8.142350196838379
    7. ''' → logprob: -8.642350196838379
    8. '{
' → logprob: -8.642350196838379
    9. '   ' → logprob: -9.267350196838379
    10. '==' → logprob: -10.017350196838379

Token 3929: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0014358278131112456
    2. ' c' → logprob: -6.62643575668335
    3. ''' → logprob: -9.501436233520508
    4. '       ' → logprob: -11.126436233520508
    5. '   ' → logprob: -11.876436233520508
    6. 'x' → logprob: -12.126436233520508
    7. ''x' → logprob: -12.251436233520508
    8. '           ' → logprob: -13.751436233520508
    9. '(c' → logprob: -14.751436233520508
    10. '     ' → logprob: -14.876436233520508

Token 3930: ' ==' (ID: 951)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.03189527615904808
    2. '==' → logprob: -3.531895160675049
    3. ' ==' → logprob: -6.156895160675049
    4. ''' → logprob: -11.906895637512207
    5. ']=='' → logprob: -12.031895637512207
    6. '==
' → logprob: -12.031895637512207
    7. '=="' → logprob: -13.406895637512207
    8. ' =='' → logprob: -13.656895637512207
    9. '[' → logprob: -14.656895637512207
    10. '='' → logprob: -14.781895637512207

Token 3931: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0001640876434976235
    2. ' '' → logprob: -8.750164031982422
    3. 'x' → logprob: -12.875164031982422
    4. '   ' → logprob: -14.250164031982422
    5. ' ' → logprob: -14.500164031982422
    6. '('' → logprob: -14.625164031982422
    7. '1' → logprob: -14.750164031982422
    8. '"x' → logprob: -15.375164031982422
    9. ''' → logprob: -16.250164031982422
    10. '\x' → logprob: -16.250164031982422

Token 3932: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0019300628919154406
    2. 'x' → logprob: -6.251930236816406
    3. '"x' → logprob: -15.001930236816406
    4. ' '' → logprob: -15.376930236816406
    5. ' x' → logprob: -15.751930236816406
    6. ''' → logprob: -16.001930236816406
    7. '[
' → logprob: -16.001930236816406
    8. '['' → logprob: -16.251930236816406
    9. '('' → logprob: -17.126930236816406
    10. '
' → logprob: -17.126930236816406

Token 3933: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1723152995109558
    2. '==' → logprob: -2.1723153591156006
    3. ':
' → logprob: -3.4223153591156006
    4. ' ==' → logprob: -5.0473151206970215
    5. '=' → logprob: -5.9223151206970215
    6. '       ' → logprob: -7.4223151206970215
    7. '{
' → logprob: -7.5473151206970215
    8. '```' → logprob: -7.7973151206970215
    9. '):
' → logprob: -8.04731559753418
    10. ':' → logprob: -8.29731559753418

Token 3934: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02795311063528061
    2. '(' → logprob: -4.777953147888184
    3. '(x' → logprob: -4.777953147888184
    4. '```' → logprob: -4.902953147888184
    5. '{
' → logprob: -6.152953147888184
    6. '               ' → logprob: -7.527953147888184
    7. '``' → logprob: -8.777953147888184
    8. ' (' → logprob: -8.902953147888184
    9. ':
' → logprob: -9.402953147888184
    10. '(
' → logprob: -9.402953147888184

Token 3935: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00040636269841343164
    2. '(x' → logprob: -8.750406265258789
    3. ' x' → logprob: -9.125406265258789
    4. '           ' → logprob: -9.375406265258789
    5. '(' → logprob: -10.000406265258789
    6. '       ' → logprob: -12.625406265258789
    7. '```' → logprob: -12.625406265258789
    8. '   ' → logprob: -13.875406265258789
    9. ' (' → logprob: -15.000406265258789
    10. '(
' → logprob: -15.125406265258789

Token 3936: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. '_count' → logprob: -14.500000953674316
    3. '_' → logprob: -17.0
    4. 'count' → logprob: -18.125
    5. '=' → logprob: -18.375
    6. '```' → logprob: -19.625
    7. '\' → logprob: -19.875
    8. '_counts' → logprob: -20.0
    9. '۳' → logprob: -20.125
    10. ' =' → logprob: -20.125

Token 3937: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.2520297169685364
    2. '3' → logprob: -1.5020296573638916
    3. 'count' → logprob: -10.252029418945312
    4. '=' → logprob: -10.252029418945312
    5. '_' → logprob: -12.002029418945312
    6. '_counts' → logprob: -12.127029418945312
    7. '```' → logprob: -12.627029418945312
    8. '`' → logprob: -12.627029418945312
    9. ''_' → logprob: -13.002029418945312
    10. 'x' → logprob: -13.252029418945312

Token 3938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. '*=' → logprob: -15.648245811462402
    4. '```' → logprob: -15.648245811462402
    5. '=
' → logprob: -18.02324676513672
    6. '=(' → logprob: -18.02324676513672
    7. '   ' → logprob: -18.27324676513672
    8. '`' → logprob: -19.27324676513672
    9. '(' → logprob: -19.27324676513672
    10. '＝' → logprob: -19.52324676513672

Token 3939: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005735247395932674
    2. ' (' → logprob: -7.500573635101318
    3. '(' → logprob: -10.87557315826416
    4. '   ' → logprob: -14.00057315826416
    5. '           ' → logprob: -14.75057315826416
    6. 'x' → logprob: -16.125574111938477
    7. '       ' → logprob: -16.125574111938477
    8. ' ' → logprob: -17.250574111938477
    9. '
' → logprob: -17.625574111938477
    10. '`' → logprob: -17.875574111938477

Token 3940: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031791406217962503
    2. '(x' → logprob: -5.75317907333374
    3. ' x' → logprob: -14.378179550170898
    4. '{x' → logprob: -15.253179550170898
    5. '   ' → logprob: -15.503179550170898
    6. '```' → logprob: -16.3781795501709
    7. ' (' → logprob: -16.5031795501709
    8. '"x' → logprob: -16.7531795501709
    9. ''x' → logprob: -17.0031795501709
    10. '[x' → logprob: -17.0031795501709

Token 3941: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00022999993234407157
    2. 'x' → logprob: -8.625229835510254
    3. '(x' → logprob: -10.000229835510254
    4. '_count' → logprob: -13.500229835510254
    5. '_' → logprob: -13.750229835510254
    6. '(' → logprob: -14.625229835510254
    7. '_(' → logprob: -15.125229835510254
    8. ' x' → logprob: -15.500229835510254
    9. '[x' → logprob: -15.500229835510254
    10. '(_' → logprob: -15.750229835510254

Token 3942: '_count' (ID: 7536)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03821143880486488
    2. '_count' → logprob: -3.2882113456726074
    3. '(x' → logprob: -9.288211822509766
    4. 'x' → logprob: -10.038211822509766
    5. '_counts' → logprob: -11.913211822509766
    6. '   ' → logprob: -12.038211822509766
    7. '_' → logprob: -12.663211822509766
    8. 'count' → logprob: -12.788211822509766
    9. '_x' → logprob: -13.038211822509766
    10. '(' → logprob: -13.038211822509766

Token 3943: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32104218006134033
    2. ' *' → logprob: -1.3210421800613403
    3. '*(' → logprob: -4.946042060852051
    4. '=' → logprob: -7.696042060852051
    5. '```' → logprob: -9.32104206085205
    6. '(x' → logprob: -10.82104206085205
    7. '(' → logprob: -11.07104206085205
    8. '*x' → logprob: -11.44604206085205
    9. ')' → logprob: -11.57104206085205
    10. ' (' → logprob: -12.07104206085205

Token 3944: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001505578518845141
    2. '(' → logprob: -6.501505374908447
    3. ' ' → logprob: -13.001505851745605
    4. ' (' → logprob: -14.126505851745605
    5. '```' → logprob: -15.501505851745605
    6. '
' → logprob: -17.62650489807129
    7. '   ' → logprob: -17.75150489807129
    8. 'pow' → logprob: -18.12650489807129
    9. '           ' → logprob: -18.25150489807129
    10. 'x' → logprob: -18.87650489807129

Token 3945: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.750021934509277
    3. 'pow' → logprob: -14.875021934509277
    4. ' ' → logprob: -16.125022888183594
    5. '```' → logprob: -18.375022888183594
    6. '
' → logprob: -18.750022888183594
    7. ' (' → logprob: -19.125022888183594
    8. '(
' → logprob: -20.000022888183594
    9. '   ' → logprob: -20.125022888183594
    10. 'def' → logprob: -21.000022888183594

Token 3946: ')' (ID: 8)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.007640463300049305
    2. ')' → logprob: -4.882640361785889
    3. '%)' → logprob: -10.757640838623047
    4. '%' → logprob: -11.757640838623047
    5. '   ' → logprob: -13.632640838623047
    6. '*' → logprob: -13.757640838623047
    7. '```' → logprob: -13.757640838623047
    8. ']%' → logprob: -14.007640838623047
    9. '       ' → logprob: -15.257640838623047
    10. '}%' → logprob: -15.507640838623047

Token 3947: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -3.2020991056924686e-05
    2. ')%' → logprob: -10.750032424926758
    3. ' %' → logprob: -11.625032424926758
    4. '()%' → logprob: -15.125032424926758
    5. ']%' → logprob: -15.125032424926758
    6. '```' → logprob: -15.125032424926758
    7. '%d' → logprob: -15.875032424926758
    8. '%c' → logprob: -16.000032424926758
    9. '%x' → logprob: -16.375032424926758
    10. '%D' → logprob: -16.375032424926758

Token 3948: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -15.125000953674316
    3. '100' → logprob: -16.875
    4. '_MOD' → logprob: -17.25
    5. '```' → logprob: -18.0
    6. '(M' → logprob: -18.125
    7. '6' → logprob: -19.125
    8. '.MOD' → logprob: -19.25
    9. '2' → logprob: -19.375
    10. '   ' → logprob: -19.875

Token 3949: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005177308339625597
    2. '```' → logprob: -5.7551774978637695
    3. '           ' → logprob: -6.7551774978637695
    4. '               ' → logprob: -7.7551774978637695
    5. '%' → logprob: -8.38017749786377
    6. ')' → logprob: -9.75517749786377
    7. 'continue' → logprob: -10.63017749786377
    8. '(' → logprob: -11.00517749786377
    9. '<|end|>' → logprob: -11.13017749786377
    10. '   ' → logprob: -11.63017749786377

Token 3950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01607472635805607
    2. 'for' → logprob: -4.3910746574401855
    3. '           ' → logprob: -6.3910746574401855
    4. '```' → logprob: -6.6410746574401855
    5. '               ' → logprob: -7.6410746574401855
    6. ' for' → logprob: -10.391075134277344
    7. '``' → logprob: -10.516075134277344
    8. '(' → logprob: -11.391075134277344
    9. '   ' → logprob: -11.391075134277344
    10. 'continue' → logprob: -12.516075134277344

Token 3951: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039158877916634083
    2. '           ' → logprob: -9.000391960144043
    3. '```' → logprob: -9.250391960144043
    4. 'continue' → logprob: -10.000391960144043
    5. '   ' → logprob: -10.250391960144043
    6. 'elif' (adapté à ' elif') → logprob: -10.500391960144043
    7. 'for' → logprob: -11.125391960144043
    8. 'else' → logprob: -11.250391960144043
    9. '               ' → logprob: -11.250391960144043
    10. '	' → logprob: -11.250391960144043

Token 3952: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031777136027812958
    2. ' c' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.378177642822266
    4. '	c' → logprob: -18.503177642822266
    5. '(c' → logprob: -18.628177642822266
    6. ')c' → logprob: -20.003177642822266
    7. '```' → logprob: -20.503177642822266
    8. ' ' → logprob: -20.628177642822266
    9. '    ' → logprob: -21.003177642822266
    10. '0' → logprob: -21.378177642822266

Token 3953: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1002630665898323
    2. ' in' → logprob: -2.3502631187438965
    3. '==' → logprob: -10.100262641906738
    4. '[' → logprob: -12.475262641906738
    5. '```' → logprob: -12.475262641906738
    6. ' ==' → logprob: -13.100262641906738
    7. 'In' → logprob: -13.100262641906738
    8. 'not' → logprob: -14.100262641906738
    9. '[in' → logprob: -14.100262641906738
    10. '   ' → logprob: -14.600262641906738

Token 3954: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.843177233240567e-05
    2. ' ('' → logprob: -11.000018119812012
    3. '(' → logprob: -13.375018119812012
    4. ''' → logprob: -16.625019073486328
    5. '['' → logprob: -18.000019073486328
    6. '   ' → logprob: -19.000019073486328
    7. '(
' → logprob: -19.000019073486328
    8. '('\' → logprob: -20.375019073486328
    9. ''s' → logprob: -20.500019073486328
    10. '('.' → logprob: -20.625019073486328

Token 3955: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017703777411952615
    2. '('' → logprob: -6.376770496368408
    3. '0' → logprob: -9.75177001953125
    4. ' '' → logprob: -12.50177001953125
    5. '['' → logprob: -13.00177001953125
    6. '(' → logprob: -13.37677001953125
    7. '`' → logprob: -13.87677001953125
    8. '{'' → logprob: -14.87677001953125
    9. '
' → logprob: -15.50177001953125
    10. '[' → logprob: -15.50177001953125

Token 3956: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.26166507601737976
    2. '','' → logprob: -1.5116651058197021
    3. ',' → logprob: -4.761664867401123
    4. '',' → logprob: -6.886664867401123
    5. ''' → logprob: -10.011665344238281
    6. '   ' → logprob: -10.261665344238281
    7. ' ,'' → logprob: -11.636665344238281
    8. ',
' → logprob: -12.011665344238281
    9. '       ' → logprob: -12.511665344238281
    10. ',"' → logprob: -12.761665344238281

Token 3957: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07892702519893646
    2. '1' → logprob: -2.5789270401000977
    3. '('' → logprob: -10.703927040100098
    4. '`' → logprob: -12.453927040100098
    5. '"' → logprob: -13.078927040100098
    6. ')' → logprob: -13.203927040100098
    7. '['' → logprob: -13.578927040100098
    8. ' '' → logprob: -13.828927040100098
    9. '[' → logprob: -13.953927040100098
    10. '```' → logprob: -13.953927040100098

Token 3958: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11151126772165298
    2. '           ' → logprob: -2.48651123046875
    3. '):' → logprob: -4.73651123046875
    4. '       ' → logprob: -4.98651123046875
    5. ':
' → logprob: -5.61151123046875
    6. '```' → logprob: -6.48651123046875
    7. ''):
' → logprob: -7.36151123046875
    8. ')' → logprob: -7.48651123046875
    9. ':' → logprob: -9.23651123046875
    10. '   ' → logprob: -9.36151123046875

Token 3959: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007239921484142542
    2. '```' → logprob: -5.507239818572998
    3. '       ' → logprob: -5.882239818572998
    4. ':
' → logprob: -8.507240295410156
    5. '               ' → logprob: -9.757240295410156
    6. '``' → logprob: -10.382240295410156
    7. 'pass' → logprob: -10.757240295410156
    8. ':' → logprob: -11.382240295410156
    9. '):
' → logprob: -11.757240295410156
    10. '          ' → logprob: -11.757240295410156

Token 3960: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.012498227879405022
    2. '           ' → logprob: -4.762498378753662
    3. ' pass' → logprob: -5.762498378753662
    4. '       ' → logprob: -7.887498378753662
    5. '```' → logprob: -8.137497901916504
    6. 'continue' → logprob: -10.012497901916504
    7. '
' → logprob: -12.012497901916504
    8. '	pass' → logprob: -12.387497901916504
    9. '``' → logprob: -12.637497901916504
    10. '               ' → logprob: -12.762497901916504

Token 3961: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8372063040733337
    2. '```' → logprob: -0.9622063040733337
    3. '       ' → logprob: -1.8372063636779785
    4. '               ' → logprob: -3.9622063636779785
    5. ':
' → logprob: -5.3372063636779785
    6. '``' → logprob: -7.4622063636779785
    7. ':' → logprob: -7.8372063636779785
    8. ')' → logprob: -8.33720588684082
    9. '):
' → logprob: -8.83720588684082
    10. '<|end|>' → logprob: -9.46220588684082

Token 3962: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3673974871635437
    2. '```' → logprob: -1.7423975467681885
    3. '       ' → logprob: -2.1173975467681885
    4. '               ' → logprob: -4.617397308349609
    5. ':
' → logprob: -7.117397308349609
    6. 'else' → logprob: -7.367397308349609
    7. '``' → logprob: -7.992397308349609
    8. 'return' → logprob: -9.61739730834961
    9. ')' → logprob: -9.61739730834961
    10. 'continue' → logprob: -9.74239730834961

Token 3963: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5161160826683044
    2. '       ' → logprob: -1.3911161422729492
    3. '```' → logprob: -2.141116142272949
    4. 'else' (adapté à ' else') → logprob: -4.016116142272949
    5. 'return' → logprob: -4.266116142272949
    6. '               ' → logprob: -6.141116142272949
    7. '``' → logprob: -6.641116142272949
    8. '0' → logprob: -8.01611614227295
    9. '   ' → logprob: -8.64111614227295
    10. 'continue' → logprob: -8.64111614227295

Token 3964: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010725544765591621
    2. ':
' → logprob: -5.010725498199463
    3. '       ' → logprob: -5.760725498199463
    4. ':' → logprob: -8.385725975036621
    5. 'return' → logprob: -8.510725975036621
    6. '               ' → logprob: -8.510725975036621
    7. ':return' → logprob: -8.760725975036621
    8. '```' → logprob: -10.635725975036621
    9. '          ' → logprob: -11.135725975036621
    10. '         ' → logprob: -12.010725975036621

Token 3965: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3421308994293213
    2. '           ' → logprob: -1.3421308994293213
    3. 'return' → logprob: -3.8421308994293213
    4. '0' → logprob: -5.592130661010742
    5. '```' → logprob: -6.467130661010742
    6. '   ' → logprob: -7.217130661010742
    7. '               ' → logprob: -7.342130661010742
    8. '	       ' → logprob: -8.842130661010742
    9. ' return' → logprob: -9.342130661010742
    10. '{return' → logprob: -10.092130661010742

Token 3966: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0041134231723845005
    2. '           ' → logprob: -5.75411319732666
    3. ' return' → logprob: -7.25411319732666
    4. '```' → logprob: -9.00411319732666
    5. '               ' → logprob: -10.25411319732666
    6. '       ' → logprob: -10.62911319732666
    7. '{return' → logprob: -11.12911319732666
    8. '0' → logprob: -11.12911319732666
    9. '``' → logprob: -12.25411319732666
    10. '	return' → logprob: -12.62911319732666

Token 3967: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -21.375003814697266
    4. '
' → logprob: -21.875003814697266
    5. '```' → logprob: -22.500003814697266
    6. '۰' → logprob: -22.750003814697266
    7. '  ' → logprob: -23.000003814697266
    8. '000' → logprob: -23.000003814697266
    9. '00' → logprob: -23.250003814697266
    10. 'return' → logprob: -23.500003814697266

Token 3968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -22.375
    4. '```' → logprob: -22.5
    5. '
' → logprob: -22.75
    6. '   ' → logprob: -23.125
    7. '1' → logprob: -23.75
    8. '  ' → logprob: -24.25
    9. '000' → logprob: -24.625
    10. '00' → logprob: -24.625

Token 3969: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3062049150466919
    2. '```' → logprob: -1.806204915046692
    3. '           ' → logprob: -2.4312047958374023
    4. '   ' → logprob: -5.056204795837402
    5. '``' → logprob: -5.556204795837402
    6. '               ' → logprob: -7.431204795837402
    7. '
' → logprob: -8.181204795837402
    8. 'x' → logprob: -8.431204795837402
    9. 'continue' → logprob: -9.931204795837402
    10. ')' → logprob: -10.431204795837402

Token 3970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006530511658638716
    2. '```' → logprob: -5.131530284881592
    3. '       ' → logprob: -7.631530284881592
    4. '``' → logprob: -9.38153076171875
    5. '
' → logprob: -11.25653076171875
    6. ')' → logprob: -11.38153076171875
    7. 'return' → logprob: -12.75653076171875
    8. 'x' → logprob: -13.25653076171875
    9. '           ' → logprob: -13.75653076171875
    10. ')
' → logprob: -14.25653076171875

Token 3971: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0035168027970939875
    2. '   ' → logprob: -5.753516674041748
    3. '```' → logprob: -8.503517150878906
    4. ' total' → logprob: -9.503517150878906
    5. '
' → logprob: -10.503517150878906
    6. 'return' → logprob: -10.753517150878906
    7. '``' → logprob: -11.378517150878906
    8. 'result' → logprob: -14.753517150878906
    9. 'x' → logprob: -14.878517150878906
    10. '`' → logprob: -15.378517150878906

Token 3972: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016967236995697
    2. ' =' → logprob: -1.701696753501892
    3. '   ' → logprob: -8.326696395874023
    4. '```' → logprob: -10.201696395874023
    5. ')' → logprob: -13.576696395874023
    6. '=(' → logprob: -13.826696395874023
    7. ' =(' → logprob: -14.951696395874023
    8. '`' → logprob: -14.951696395874023
    9. ' ' → logprob: -15.701696395874023
    10. '    ' → logprob: -15.826696395874023

Token 3973: ' y' (ID: 342)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0004130344314035028
    2. ' (' → logprob: -8.000412940979004
    3. '   ' → logprob: -9.750412940979004
    4. '(' → logprob: -10.875412940979004
    5. '(x' → logprob: -15.625412940979004
    6. 'y' → logprob: -16.62541389465332
    7. '((' → logprob: -17.00041389465332
    8. '(int' → logprob: -17.87541389465332
    9. '(Y' → logprob: -17.87541389465332
    10. ' ' → logprob: -18.12541389465332

Token 3974: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -4.961759259458631e-06
    2. 'valid' → logprob: -12.500004768371582
    3. 'Valid' → logprob: -13.750004768371582
    4. '_VALID' → logprob: -16.8750057220459
    5. '_invalid' → logprob: -18.3750057220459
    6. '_count' → logprob: -18.7500057220459
    7. 'VALID' → logprob: -18.8750057220459
    8. '(valid' → logprob: -19.1250057220459
    9. '```' → logprob: -19.5000057220459
    10. '_validate' → logprob: -19.7500057220459

Token 3975: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7120533811976202e-05
    2. '_valid' → logprob: -11.250017166137695
    3. 'count' → logprob: -13.000017166137695
    4. '_total' → logprob: -14.125017166137695
    5. '```' → logprob: -14.875017166137695
    6. '_counts' → logprob: -15.000017166137695
    7. '_code' → logprob: -15.625017166137695
    8. '\' → logprob: -16.875017166137695
    9. '_cnt' → logprob: -17.000017166137695
    10. '`' → logprob: -17.000017166137695

Token 3976: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22579620778560638
    2. '*' → logprob: -1.7257962226867676
    3. '   ' → logprob: -3.8507962226867676
    4. '```' → logprob: -7.475796222686768
    5. ' ' → logprob: -7.725796222686768
    6. '  ' → logprob: -7.850796222686768
    7. ')' → logprob: -7.850796222686768
    8. '
' → logprob: -8.10079574584961
    9. '*(' → logprob: -8.60079574584961
    10. 'def' → logprob: -8.72579574584961

Token 3977: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3871486485004425
    2. '(x' → logprob: -1.1371486186981201
    3. ' (' → logprob: -9.2621488571167
    4. ' x' → logprob: -9.5121488571167
    5. '((' → logprob: -9.5121488571167
    6. '(' → logprob: -10.3871488571167
    7. '   ' → logprob: -13.2621488571167
    8. '```' → logprob: -13.7621488571167
    9. '(
' → logprob: -15.2621488571167
    10. '_x' → logprob: -15.5121488571167

Token 3978: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003463936736807227
    2. '_count' → logprob: -6.2534637451171875
    3. '_valid' → logprob: -6.7534637451171875
    4. '1' → logprob: -8.003463745117188
    5. '_counts' → logprob: -11.628463745117188
    6. '```' → logprob: -11.628463745117188
    7. '3' → logprob: -11.878463745117188
    8. '_' → logprob: -13.628463745117188
    9. '_bits' → logprob: -13.628463745117188
    10. '
' → logprob: -13.753463745117188

Token 3979: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.512236498361744e-07
    2. 'count' → logprob: -15.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. '_valid' → logprob: -16.375
    5. '_counts' → logprob: -16.625
    6. '_total' → logprob: -16.875
    7. '_cnt' → logprob: -17.75
    8. '\' → logprob: -18.0
    9. '`' → logprob: -18.25
    10. '_COUNT' → logprob: -18.625

Token 3980: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07952821999788284
    2. ' %' → logprob: -2.579528331756592
    3. '   ' → logprob: -8.204527854919434
    4. '```' → logprob: -8.454527854919434
    5. ')' → logprob: -9.079527854919434
    6. '
' → logprob: -10.954527854919434
    7. ')%' → logprob: -11.204527854919434
    8. ' %=' → logprob: -12.829527854919434
    9. '`' → logprob: -13.579527854919434
    10. '%=' → logprob: -14.579527854919434

Token 3981: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.054500666621607e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '(M' → logprob: -17.000003814697266
    4. '100' → logprob: -17.250003814697266
    5. '(' → logprob: -18.750003814697266
    6. '_MOD' → logprob: -18.875003814697266
    7. 'MO' → logprob: -19.125003814697266
    8. '```' → logprob: -20.125003814697266
    9. '`' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.500003814697266

Token 3982: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5353895425796509
    2. '```' → logprob: -1.1603895425796509
    3. '*' → logprob: -2.5353894233703613
    4. '
' → logprob: -4.160389423370361
    5. '%' → logprob: -6.160389423370361
    6. ')' → logprob: -7.160389423370361
    7. '``' → logprob: -7.160389423370361
    8. ' *' → logprob: -7.410389423370361
    9. 'total' → logprob: -7.785389423370361
    10. '(total' → logprob: -7.785389423370361

Token 3983: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5789555907249451
    2. '   ' → logprob: -1.3289556503295898
    3. '*' → logprob: -1.9539556503295898
    4. '
' → logprob: -3.70395565032959
    5. '``' → logprob: -5.70395565032959
    6. '(total' → logprob: -6.20395565032959
    7. ')' → logprob: -6.82895565032959
    8. ' *' → logprob: -6.95395565032959
    9. '%' → logprob: -8.20395565032959
    10. 'total' → logprob: -9.07895565032959

Token 3984: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.15756238996982574
    2. '```' → logprob: -2.782562494277954
    3. '   ' → logprob: -2.907562494277954
    4. 'x' → logprob: -3.782562494277954
    5. '(total' → logprob: -5.907562255859375
    6. '``' → logprob: -6.282562255859375
    7. ' total' → logprob: -7.282562255859375
    8. '
' → logprob: -7.532562255859375
    9. '`' → logprob: -7.907562255859375
    10. ' x' → logprob: -9.157562255859375

Token 3985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02692759782075882
    2. '   ' → logprob: -3.9019277095794678
    3. ' =' → logprob: -5.401927471160889
    4. '*' → logprob: -6.901927471160889
    5. '*=' → logprob: -8.151927947998047
    6. '```' → logprob: -8.526927947998047
    7. ')' → logprob: -9.026927947998047
    8. '%=' → logprob: -9.026927947998047
    9. '
' → logprob: -10.651927947998047
    10. '  ' → logprob: -10.651927947998047

Token 3986: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.002498490735888481
    2. ' (' → logprob: -6.002498626708984
    3. 'total' → logprob: -11.002498626708984
    4. '(' → logprob: -13.002498626708984
    5. ' total' → logprob: -13.002498626708984
    6. '(t' → logprob: -14.127498626708984
    7. '(x' → logprob: -14.752498626708984
    8. '   ' → logprob: -15.002498626708984
    9. ',total' → logprob: -17.752498626708984
    10. ' ' → logprob: -18.877498626708984

Token 3987: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.01830621249973774
    2. '(total' → logprob: -4.018306255340576
    3. ' total' → logprob: -8.768305778503418
    4. 'x' → logprob: -14.893305778503418
    5. ' (' → logprob: -15.393305778503418
    6. '(' → logprob: -16.768306732177734
    7. '(x' → logprob: -18.018306732177734
    8. '   ' → logprob: -18.268306732177734
    9. '$total' → logprob: -18.768306732177734
    10. '	total' → logprob: -18.893306732177734

Token 3988: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003618720220401883
    2. ' *' → logprob: -5.6286187171936035
    3. '```' → logprob: -11.128619194030762
    4. ')' → logprob: -13.378619194030762
    5. '(total' → logprob: -14.128619194030762
    6. '*(' → logprob: -14.878619194030762
    7. '
' → logprob: -15.128619194030762
    8. '   ' → logprob: -15.253619194030762
    9. '**' → logprob: -15.503619194030762
    10. 'total' → logprob: -16.003618240356445

Token 3989: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '
' → logprob: -17.251171112060547
    4. '(x' → logprob: -17.376171112060547
    5. '   ' → logprob: -18.126171112060547
    6. '```' → logprob: -20.501171112060547
    7. '	x' → logprob: -21.001171112060547
    8. ' ' → logprob: -21.376171112060547
    9. ' (' → logprob: -21.501171112060547
    10. '    ' → logprob: -22.001171112060547

Token 3990: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '
' → logprob: -18.75
    4. '```' → logprob: -19.375
    5. '۳' → logprob: -20.625
    6. 'count' → logprob: -21.25
    7. '_count' → logprob: -21.375
    8. ' ' → logprob: -21.625
    9. '３' → logprob: -21.875
    10. '``' → logprob: -22.125

Token 3991: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.014684110297821e-06
    2. '3' → logprob: -11.875008583068848
    3. 'count' → logprob: -13.375008583068848
    4. '_bits' → logprob: -15.875008583068848
    5. '_cnt' → logprob: -16.250009536743164
    6. '_counts' → logprob: -16.750009536743164
    7. '[' → logprob: -17.000009536743164
    8. '```' → logprob: -17.000009536743164
    9. '_COUNT' → logprob: -17.125009536743164
    10. 'Count' → logprob: -17.250009536743164

Token 3992: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006718452088534832
    2. ')%' → logprob: -5.006718635559082
    3. ' )' → logprob: -13.256718635559082
    4. '%' → logprob: -13.756718635559082
    5. '   ' → logprob: -16.381717681884766
    6. '%)' → logprob: -17.131717681884766
    7. '```' → logprob: -17.756717681884766
    8. ' %' → logprob: -17.881717681884766
    9. '`)' → logprob: -18.006717681884766
    10. '")' → logprob: -18.506717681884766

Token 3993: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.011104179546236992
    2. ' %' → logprob: -4.511104106903076
    3. ')%' → logprob: -10.511104583740234
    4. '```' → logprob: -11.011104583740234
    5. ')' → logprob: -11.386104583740234
    6. '()%' → logprob: -15.011104583740234
    7. ']%' → logprob: -15.511104583740234
    8. '%=' → logprob: -16.136104583740234
    9. ' %=' → logprob: -16.386104583740234
    10. '%\' → logprob: -16.386104583740234

Token 3994: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.370294846012257e-05
    2. ' MOD' → logprob: -10.250043869018555
    3. 'total' → logprob: -12.375043869018555
    4. '(M' → logprob: -12.875043869018555
    5. '100' → logprob: -13.625043869018555
    6. 'TOTAL' → logprob: -16.250043869018555
    7. '(' → logprob: -16.625043869018555
    8. '_MOD' → logprob: -16.875043869018555
    9. '```' → logprob: -17.000043869018555
    10. '(total' → logprob: -17.000043869018555

Token 3995: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21044224500656128
    2. '   ' → logprob: -1.710442304611206
    3. 'return' → logprob: -5.085442066192627
    4. ' return' → logprob: -7.335442066192627
    5. '```' → logprob: -7.335442066192627
    6. '<|end|>' → logprob: -7.710442066192627
    7. ')' → logprob: -8.210442543029785
    8. '
' → logprob: -8.585442543029785
    9. '	return' → logprob: -9.210442543029785
    10. '    
' → logprob: -9.210442543029785

Token 3996: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8999927639961243
    2. 'return' → logprob: -1.1499927043914795
    3. '   ' → logprob: -1.6499927043914795
    4. '```' → logprob: -3.1499927043914795
    5. ' return' → logprob: -3.3999927043914795
    6. ')' → logprob: -5.649992942810059
    7. '<|end|>' → logprob: -6.524992942810059
    8. '``' → logprob: -7.774992942810059
    9. ' 
' → logprob: -7.774992942810059
    10. '  
' → logprob: -7.899992942810059

Token 3997: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016235295915976167
    2. ' return' → logprob: -6.501623630523682
    3. '   ' → logprob: -9.501623153686523
    4. '```' → logprob: -10.501623153686523
    5. '
' → logprob: -11.001623153686523
    6. ':return' → logprob: -13.876623153686523
    7. '``' → logprob: -15.001623153686523
    8. '	return' → logprob: -15.501623153686523
    9. 'Return' → logprob: -15.501623153686523
    10. '`' → logprob: -16.001623153686523

Token 3998: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5769916772842407
    2. 'total' → logprob: -0.8269916772842407
    3. '(total' → logprob: -6.951991558074951
    4. ' y' → logprob: -9.70199203491211
    5. ' (' → logprob: -10.70199203491211
    6. 'y' → logprob: -12.32699203491211
    7. '   ' → logprob: -12.45199203491211
    8. '```' → logprob: -14.07699203491211
    9. ' ' → logprob: -14.20199203491211
    10. 'tot' → logprob: -15.07699203491211

Token 3999: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2689935564994812
    2. '<|end|>' → logprob: -2.143993616104126
    3. '
' → logprob: -2.768993616104126
    4. '```' → logprob: -3.268993616104126
    5. '#' → logprob: -4.768993377685547
    6. ')' → logprob: -6.268993377685547
    7. ' def' → logprob: -6.393993377685547
    8. '\' → logprob: -6.518993377685547
    9. ':' → logprob: -7.143993377685547
    10. '

' → logprob: -7.268993377685547

Token 4000: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076675559394061565
    2. '<|end|>' → logprob: -5.882667541503906
    3. '#' → logprob: -6.007667541503906
    4. '```' → logprob: -6.882667541503906
    5. '
' → logprob: -7.882667541503906
    6. '\' → logprob: -8.007667541503906
    7. '   ' → logprob: -8.507667541503906
    8. ' def' → logprob: -8.757667541503906
    9. '_' → logprob: -9.007667541503906
    10. ')' → logprob: -9.632667541503906

Token 4001: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05490879714488983
    2. ' count' → logprob: -3.1799087524414062
    3. 'main' → logprob: -4.804908752441406
    4. ' main' → logprob: -5.929908752441406
    5. 'decode' → logprob: -7.554908752441406
    6. 'parse' → logprob: -9.179908752441406
    7. ' decode' → logprob: -9.804908752441406
    8. 'is' → logprob: -9.929908752441406
    9. 'solve' → logprob: -10.554908752441406
    10. 'total' → logprob: -10.679908752441406

Token 4002: '_four' (ID: 137487)
  Prédit: '_utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_utf' → logprob: -0.734983503818512
    2. '_' → logprob: -1.1099834442138672
    3. '_four' → logprob: -2.734983444213867
    4. '_matches' → logprob: -3.359983444213867
    5. '_bytes' → logprob: -3.984983444213867
    6. '_mult' → logprob: -4.359983444213867
    7. '_encoded' → logprob: -4.359983444213867
    8. '_char' → logprob: -4.609983444213867
    9. '_byte' → logprob: -4.859983444213867
    10. '_valid' → logprob: -5.109983444213867

Token 4003: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.0020474824123084545
    2. '_bytes' → logprob: -6.752047538757324
    3. '_BYTE' → logprob: -7.877047538757324
    4. '```' → logprob: -9.127047538757324
    5. '_four' → logprob: -9.252047538757324
    6. '_' → logprob: -9.752047538757324
    7. 'Byte' → logprob: -9.752047538757324
    8. 'def' → logprob: -10.252047538757324
    9. '_bit' → logprob: -10.377047538757324
    10. 'byte' → logprob: -10.877047538757324

Token 4004: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0009845776949077845
    2. '(' → logprob: -7.0009846687316895
    3. 'def' → logprob: -10.250984191894531
    4. '(_' → logprob: -11.625984191894531
    5. '(def' → logprob: -12.000984191894531
    6. '(f' → logprob: -12.125984191894531
    7. '(
' → logprob: -12.375984191894531
    8. '(a' → logprob: -12.625984191894531
    9. '(s' → logprob: -13.125984191894531
    10. ' (' → logprob: -13.500984191894531

Token 4005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005786505062133074
    2. '[' → logprob: -7.625578880310059
    3. 'def' → logprob: -10.000578880310059
    4. '(' → logprob: -10.500578880310059
    5. '```' → logprob: -11.750578880310059
    6. ''' → logprob: -13.125578880310059
    7. ')' → logprob: -13.375578880310059
    8. '_' → logprob: -13.500578880310059
    9. 'unction' → logprob: -14.000578880310059
    10. '
' → logprob: -14.250578880310059

Token 4006: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0015036711702123284
    2. ',' → logprob: -6.5015034675598145
    3. ' ,' → logprob: -14.126503944396973
    4. ',
' → logprob: -14.751503944396973
    5. 'b' → logprob: -15.626503944396973
    6. '_,' → logprob: -17.751502990722656
    7. '   ' → logprob: -18.376502990722656
    8. ',p' → logprob: -18.376502990722656
    9. '```' → logprob: -18.626502990722656
    10. '#,' → logprob: -19.126502990722656

Token 4007: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3359876275062561
    2. '0' → logprob: -1.5859875679016113
    3. '1' → logprob: -2.8359875679016113
    4. '4' → logprob: -4.960987567901611
    5. '[
' → logprob: -5.585987567901611
    6. '(' → logprob: -6.085987567901611
    7. '```' → logprob: -6.335987567901611
    8. '2' → logprob: -6.460987567901611
    9. 'def' → logprob: -6.585987567901611
    10. '<|end|>' → logprob: -6.585987567901611

Token 4008: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0013310716021806002
    2. ',' → logprob: -6.626330852508545
    3. 'b' → logprob: -12.751331329345703
    4. ' ,' → logprob: -13.501331329345703
    5. ',
' → logprob: -15.376331329345703
    6. '[' → logprob: -16.001331329345703
    7. '   ' → logprob: -16.126331329345703
    8. '_,' → logprob: -16.376331329345703
    9. ',[' → logprob: -16.501331329345703
    10. '```' → logprob: -16.751331329345703

Token 4009: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10066218674182892
    2. '[' → logprob: -2.3506622314453125
    3. '2' → logprob: -8.850662231445312
    4. '[
' → logprob: -9.600662231445312
    5. '```' → logprob: -9.850662231445312
    6. '7' → logprob: -10.100662231445312
    7. ')' → logprob: -10.350662231445312
    8. '1' → logprob: -10.725662231445312
    9. 'def' → logprob: -10.850662231445312
    10. '0' → logprob: -11.350662231445312

Token 4010: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0009221808286383748
    2. ',' → logprob: -7.000922203063965
    3. '[' → logprob: -12.500922203063965
    4. ',[' → logprob: -13.375922203063965
    5. 'b' → logprob: -13.625922203063965
    6. ',
' → logprob: -13.875922203063965
    7. '```' → logprob: -13.875922203063965
    8. ',c' → logprob: -14.750922203063965
    9. ' ,' → logprob: -15.000922203063965
    10. '[b' → logprob: -15.125922203063965

Token 4011: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. '1' → logprob: -15.750001907348633
    4. ')' → logprob: -15.875001907348633
    5. '```' → logprob: -16.750001907348633
    6. '
' → logprob: -17.125001907348633
    7. '2' → logprob: -17.125001907348633
    8. '(' → logprob: -17.625001907348633
    9. 'r' → logprob: -18.250001907348633
    10. '0' → logprob: -18.625001907348633

Token 4012: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25201424956321716
    2. '):
' → logprob: -1.5020142793655396
    3. '):
' → logprob: -9.87701416015625
    4. ')' → logprob: -10.50201416015625
    5. '):

' → logprob: -12.37701416015625
    6. '   ' → logprob: -13.75201416015625
    7. ':' → logprob: -14.25201416015625
    8. '```' → logprob: -16.25201416015625
    9. ' ):' → logprob: -16.62701416015625
    10. ' ' → logprob: -17.37701416015625

Token 4013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041267683263868093
    2. '```' → logprob: -7.875412464141846
    3. 'def' → logprob: -10.625412940979004
    4. '``' → logprob: -12.625412940979004
    5. '#' → logprob: -13.125412940979004
    6. '
' → logprob: -13.625412940979004
    7. '    
' → logprob: -14.625412940979004
    8. '{
' → logprob: -14.625412940979004
    9. '[' → logprob: -15.000412940979004
    10. '(' → logprob: -15.625412940979004

Token 4014: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.20195771753787994
    2. '   ' → logprob: -1.7019577026367188
    3. 'if' → logprob: -7.701957702636719
    4. '```' → logprob: -9.451957702636719
    5. 'def' → logprob: -11.451957702636719
    6. '
' → logprob: -13.451957702636719
    7. '``' → logprob: -13.576957702636719
    8. ' #' → logprob: -15.076957702636719
    9. '	' → logprob: -16.70195770263672
    10. '`' → logprob: -17.32695770263672

Token 4015: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4733826220035553
    2. '   ' → logprob: -1.223382592201233
    3. 'if' → logprob: -2.7233827114105225
    4. 'def' → logprob: -4.098382472991943
    5. '```' → logprob: -7.973382472991943
    6. '
' → logprob: -8.473382949829102
    7. 'for' → logprob: -10.223382949829102
    8. ' #' → logprob: -11.348382949829102
    9. '``' → logprob: -11.473382949829102
    10. ' if' → logprob: -12.098382949829102

Token 4016: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16632594168186188
    2. '   ' → logprob: -2.1663260459899902
    3. 'if' → logprob: -3.4163260459899902
    4. 'def' → logprob: -5.16632604598999
    5. '
' → logprob: -9.416325569152832
    6. 'b' → logprob: -12.416325569152832
    7. '#
' → logprob: -12.541325569152832
    8. '       ' → logprob: -13.916325569152832
    9. ' #' → logprob: -14.166325569152832
    10. '```' → logprob: -14.291325569152832

Token 4017: ' bytes' (ID: 11643)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4262499213218689
    2. '#' → logprob: -1.6762499809265137
    3. '   ' → logprob: -2.6762499809265137
    4. 'b' → logprob: -2.8012499809265137
    5. 'byte' → logprob: -5.051249980926514
    6. ' #' → logprob: -5.051249980926514
    7. '#
' → logprob: -5.301249980926514
    8. '[' → logprob: -5.676249980926514
    9. ' def' → logprob: -6.176249980926514
    10. '1' → logprob: -6.676249980926514

Token 4018: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11177621781826019
    2. '#' → logprob: -2.361776113510132
    3. 'if' → logprob: -4.736776351928711
    4. 'def' → logprob: -5.986776351928711
    5. '
' → logprob: -8.736776351928711
    6. '```' → logprob: -10.361776351928711
    7. ':
' → logprob: -11.486776351928711
    8. ':' → logprob: -12.111776351928711
    9. ' if' → logprob: -12.361776351928711
    10. '{
' → logprob: -12.736776351928711

Token 4019: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001943514565937221
    2. '#' → logprob: -6.751943588256836
    3. '```' → logprob: -7.251943588256836
    4. 'def' → logprob: -10.376943588256836
    5. '``' → logprob: -11.126943588256836
    6. '
' → logprob: -11.126943588256836
    7. 'if' → logprob: -14.126943588256836
    8. '`' → logprob: -14.501943588256836
    9. '       ' → logprob: -14.751943588256836
    10. '(' → logprob: -14.876943588256836

Token 4020: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.45315995812416077
    2. 'if' → logprob: -1.7031599283218384
    3. '   ' → logprob: -1.7031599283218384
    4. 'def' → logprob: -9.703160285949707
    5. '```' → logprob: -9.703160285949707
    6. '
' → logprob: -10.453160285949707
    7. 'for' → logprob: -11.828160285949707
    8. '``' → logprob: -11.953160285949707
    9. ' if' → logprob: -12.828160285949707
    10. ' #' → logprob: -14.453160285949707

Token 4021: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6972540616989136
    2. 'if' → logprob: -0.9472540616989136
    3. '#' → logprob: -2.197254180908203
    4. 'def' → logprob: -5.947254180908203
    5. 'b' → logprob: -8.447254180908203
    6. '
' → logprob: -8.697254180908203
    7. 'for' → logprob: -9.322254180908203
    8. ' if' → logprob: -10.322254180908203
    9. ' #' → logprob: -12.197254180908203
    10. '```' → logprob: -12.447254180908203

Token 4022: '111' (ID: 8780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20200788974761963
    2. '   ' → logprob: -1.7020078897476196
    3. '
' → logprob: -8.577008247375488
    4. 'def' → logprob: -8.827008247375488
    5. 'if' → logprob: -8.952008247375488
    6. 'b' → logprob: -9.577008247375488
    7. '#
' → logprob: -10.452008247375488
    8. ' #' → logprob: -11.202008247375488
    9. '1' → logprob: -12.202008247375488
    10. '0' → logprob: -12.452008247375488

Token 4023: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001923352392623201
    2. '[' → logprob: -9.250192642211914
    3. '   ' → logprob: -9.750192642211914
    4. 'def' → logprob: -10.500192642211914
    5. ' ' → logprob: -12.125192642211914
    6. '    ' → logprob: -13.375192642211914
    7. '000' → logprob: -13.750192642211914
    8. '1' → logprob: -14.625192642211914
    9. ')' → logprob: -14.750192642211914
    10. '(' → logprob: -15.125192642211914

Token 4024: 'yyy' (ID: 77541)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000146687583765015
    2. ' b' → logprob: -10.250146865844727
    3. ''' → logprob: -10.375146865844727
    4. '   ' → logprob: -10.500146865844727
    5. '(b' → logprob: -11.500146865844727
    6. ''b' → logprob: -11.625146865844727
    7. '0' → logprob: -11.875146865844727
    8. '[' → logprob: -11.875146865844727
    9. '[b' → logprob: -12.000146865844727
    10. '=' → logprob: -12.875146865844727

Token 4025: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04576705023646355
    2. ' b' → logprob: -3.795767068862915
    3. '[' → logprob: -4.420766830444336
    4. '   ' → logprob: -5.295766830444336
    5. '(b' → logprob: -5.920766830444336
    6. 'def' → logprob: -7.045766830444336
    7. '(' → logprob: -7.670766830444336
    8. ' ' → logprob: -7.795766830444336
    9. ' (' → logprob: -8.795766830444336
    10. '[b' → logprob: -9.170766830444336

Token 4026: '10' (ID: 702)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.43751034140586853
    2. 'b' → logprob: -1.062510371208191
    3. '   ' → logprob: -5.3125104904174805
    4. '[' → logprob: -6.6875104904174805
    5. ' ' → logprob: -7.1875104904174805
    6. ' def' → logprob: -7.4375104904174805
    7. 'def' → logprob: -7.9375104904174805
    8. '    ' → logprob: -8.18751049041748
    9. ' [' → logprob: -8.81251049041748
    10. ' if' → logprob: -8.81251049041748

Token 4027: 'yy' (ID: 7496)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14855602383613586
    2. 'yyy' → logprob: -2.0235559940338135
    3. 'yyyy' → logprob: -6.398556232452393
    4. 'yy' → logprob: -6.648556232452393
    5. 'xxx' → logprob: -6.648556232452393
    6. 'zzz' → logprob: -7.648556232452393
    7. 'z' → logprob: -7.648556232452393
    8. 'x' → logprob: -8.648555755615234
    9. '[' → logprob: -9.398555755615234
    10. '```' → logprob: -9.773555755615234

Token 4028: 'xxxx' (ID: 30950)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.10564998537302017
    2. 'yy' → logprob: -2.355649948120117
    3. 'y' → logprob: -5.605649948120117
    4. 'yyyy' → logprob: -6.730649948120117
    5. 'zzz' → logprob: -7.605649948120117
    6. 'xxx' → logprob: -10.105649948120117
    7. 'yz' → logprob: -11.980649948120117
    8. 'zz' → logprob: -12.355649948120117
    9. 'www' → logprob: -13.105649948120117
    10. '```' → logprob: -13.355649948120117

Token 4029: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11179295927286148
    2. ' b' → logprob: -2.986793041229248
    3. 'b' → logprob: -3.486793041229248
    4. ' ' → logprob: -4.361793041229248
    5. 'def' → logprob: -4.986793041229248
    6. '
' → logprob: -6.611793041229248
    7. '  ' → logprob: -6.736793041229248
    8. ' def' → logprob: -6.986793041229248
    9. '[' → logprob: -7.611793041229248
    10. '```' → logprob: -8.73679256439209

Token 4030: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8547534346580505
    2. 'b' → logprob: -0.9797534346580505
    3. 'def' → logprob: -2.6047534942626953
    4. '#' → logprob: -3.2297534942626953
    5. '   ' → logprob: -3.3547534942626953
    6. ' b' → logprob: -3.6047534942626953
    7. ' ' → logprob: -4.229753494262695
    8. '[' → logprob: -5.854753494262695
    9. ' #' → logprob: -6.479753494262695
    10. '111' → logprob: -7.104753494262695

Token 4031: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.001395592000335455
    2. 'xxx' → logprob: -6.7513957023620605
    3. 'xxxxx' → logprob: -8.751395225524902
    4. 'xx' → logprob: -10.001395225524902
    5. 'x' → logprob: -11.001395225524902
    6. 'xxxxxxxx' → logprob: -12.876395225524902
    7. 'yyyy' → logprob: -13.251395225524902
    8. 'y' → logprob: -15.251395225524902
    9. 'yy' → logprob: -15.376395225524902
    10. 'zz' → logprob: -15.376395225524902

Token 4032: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.002515969565138221
    2. 'x' → logprob: -6.37751579284668
    3. 'xxx' → logprob: -7.12751579284668
    4. '[' → logprob: -12.25251579284668
    5. '```' → logprob: -12.50251579284668
    6. 'xxxx' → logprob: -14.12751579284668
    7. 'c' → logprob: -14.87751579284668
    8. 'xc' → logprob: -15.50251579284668
    9. 'xcc' → logprob: -15.62751579284668
    10. 'xxxxx' → logprob: -15.62751579284668

Token 4033: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05236019194126129
    2. 'def' → logprob: -3.8023602962493896
    3. '
' → logprob: -4.1773600578308105
    4. 'b' → logprob: -5.0523600578308105
    5. ' ' → logprob: -5.6773600578308105
    6. ' b' → logprob: -6.8023600578308105
    7. '#' → logprob: -7.3023600578308105
    8. ' def' → logprob: -7.8023600578308105
    9. '  ' → logprob: -7.9273600578308105
    10. '```' → logprob: -8.552360534667969

Token 4034: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5079571008682251
    2. '   ' → logprob: -1.632957100868225
    3. 'def' → logprob: -3.0079569816589355
    4. ' ' → logprob: -3.1329569816589355
    5. '#' → logprob: -3.2579569816589355
    6. 'b' → logprob: -3.5079569816589355
    7. '[' → logprob: -3.7579569816589355
    8. ' b' → logprob: -5.5079569816589355
    9. '```' → logprob: -5.5079569816589355
    10. '
' → logprob: -5.7579569816589355

Token 4035: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -2.2127087504486553e-05
    2. 'xxx' → logprob: -11.375021934509277
    3. 'xxxxx' → logprob: -11.625021934509277
    4. 'xxxxxxxx' → logprob: -14.000021934509277
    5. 'xx' → logprob: -14.250021934509277
    6. ' xxxx' → logprob: -15.875021934509277
    7. 'x' → logprob: -19.000022888183594
    8. 'XXXX' → logprob: -19.875022888183594
    9. '[' → logprob: -20.500022888183594
    10. '   ' → logprob: -20.625022888183594

Token 4036: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -7.32654589228332e-05
    2. 'xxx' → logprob: -10.000073432922363
    3. 'x' → logprob: -10.500073432922363
    4. '```' → logprob: -16.125072479248047
    5. 'xxxx' → logprob: -17.375072479248047
    6. ')' → logprob: -18.250072479248047
    7. ' xx' → logprob: -19.000072479248047
    8. '   ' → logprob: -19.125072479248047
    9. 'cc' → logprob: -19.250072479248047
    10. 'pp' → logprob: -19.500072479248047

Token 4037: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011016583070158958
    2. 'def' → logprob: -4.636016368865967
    3. '
' → logprob: -6.886016368865967
    4. '#' → logprob: -8.886016845703125
    5. '```' → logprob: -9.636016845703125
    6. 'if' → logprob: -10.511016845703125
    7. '    
' → logprob: -13.386016845703125
    8. '``' → logprob: -13.636016845703125
    9. '{
' → logprob: -13.761016845703125
    10. '
' → logprob: -14.386016845703125

Token 4038: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025008674710989
    2. 'def' → logprob: -6.127501010894775
    3. '
' → logprob: -8.127500534057617
    4. '```' → logprob: -11.377500534057617
    5. '    
' → logprob: -13.002500534057617
    6. '#' → logprob: -13.127500534057617
    7. '       ' → logprob: -14.127500534057617
    8. '{
' → logprob: -14.127500534057617
    9. '[' → logprob: -14.252500534057617
    10. ' def' → logprob: -14.752500534057617

Token 4039: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018709594383835793
    2. 'if' → logprob: -4.268709659576416
    3. 'def' → logprob: -5.643709659576416
    4. '
' → logprob: -7.143709659576416
    5. '#' (adapté à ' #') → logprob: -9.143709182739258
    6. 'for' → logprob: -10.143709182739258
    7. '```' → logprob: -10.143709182739258
    8. ' if' → logprob: -11.018709182739258
    9. '``' → logprob: -13.268709182739258
    10. '    
' → logprob: -14.393709182739258

Token 4040: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04370873421430588
    2. '#' → logprob: -3.6687088012695312
    3. 'if' → logprob: -4.293708801269531
    4. 'def' → logprob: -5.668708801269531
    5. 'for' → logprob: -9.793708801269531
    6. '
' → logprob: -9.793708801269531
    7. '```' → logprob: -10.918708801269531
    8. 'y' → logprob: -12.043708801269531
    9. ' if' → logprob: -12.918708801269531
    10. ' #' → logprob: -13.043708801269531

Token 4041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001450187264708802
    2. '[' → logprob: -8.875144958496094
    3. 'def' → logprob: -13.375144958496094
    4. ''' → logprob: -13.625144958496094
    5. '```' → logprob: -14.500144958496094
    6. '#' → logprob: -14.750144958496094
    7. '[
' → logprob: -15.000144958496094
    8. '"' → logprob: -15.375144958496094
    9. '=' → logprob: -15.875144958496094
    10. ''''
' → logprob: -16.000144958496094

Token 4042: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037013579276390374
    2. 'def' → logprob: -8.250370025634766
    3. '   ' → logprob: -10.500370025634766
    4. '=' → logprob: -11.000370025634766
    5. '```' → logprob: -11.250370025634766
    6. ' =' → logprob: -11.375370025634766
    7. '[
' → logprob: -11.375370025634766
    8. 'b' → logprob: -11.500370025634766
    9. '#' → logprob: -11.750370025634766
    10. '
' → logprob: -12.500370025634766

Token 4043: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05206499993801117
    2. ''' → logprob: -3.552064895629883
    3. '   ' → logprob: -5.052064895629883
    4. '['' → logprob: -5.177064895629883
    5. 'def' → logprob: -5.677064895629883
    6. '0' → logprob: -6.177064895629883
    7. 'b' → logprob: -6.552064895629883
    8. ''[' → logprob: -7.177064895629883
    9. ' [' → logprob: -7.427064895629883
    10. '[
' → logprob: -8.052064895629883

Token 4044: '111' (ID: 8780)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2617911398410797
    2. 'def' → logprob: -2.386791229248047
    3. 'if' → logprob: -2.886791229248047
    4. 'b' → logprob: -3.386791229248047
    5. ''' → logprob: -4.011791229248047
    6. '0' → logprob: -4.636791229248047
    7. '   ' → logprob: -5.136791229248047
    8. '['' → logprob: -5.886791229248047
    9. ''b' → logprob: -5.886791229248047
    10. ''[' → logprob: -6.011791229248047

Token 4045: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020833229646086693
    2. '10' → logprob: -4.0208330154418945
    3. '1' → logprob: -6.6458330154418945
    4. '0' → logprob: -6.8958330154418945
    5. '   ' → logprob: -8.895833015441895
    6. '110' → logprob: -9.395833015441895
    7. '
' → logprob: -10.020833015441895
    8. '```' → logprob: -10.270833015441895
    9. '['' → logprob: -11.395833015441895
    10. ' [' → logprob: -11.395833015441895

Token 4046: 'yyy' (ID: 77541)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5549891591072083
    2. 'yyy' → logprob: -1.0549890995025635
    3. 'b' → logprob: -3.1799890995025635
    4. '[y' → logprob: -4.429989337921143
    5. 'y' → logprob: -4.679989337921143
    6. ''y' → logprob: -5.304989337921143
    7. ''' → logprob: -5.554989337921143
    8. '['' → logprob: -6.304989337921143
    9. ''[' → logprob: -6.804989337921143
    10. 'yyyy' → logprob: -7.054989337921143

Token 4047: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27338629961013794
    2. '[' → logprob: -1.6483862400054932
    3. 'def' → logprob: -4.273386478424072
    4. ' ' → logprob: -4.773386478424072
    5. ' b' → logprob: -5.273386478424072
    6. '
' → logprob: -5.523386478424072
    7. ' [' → logprob: -5.648386478424072
    8. 'b' → logprob: -5.898386478424072
    9. ',' → logprob: -6.273386478424072
    10. ' def' → logprob: -6.523386478424072

Token 4048: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13882575929164886
    2. '[' → logprob: -3.2638256549835205
    3. 'if' → logprob: -3.3888256549835205
    4. 'def' → logprob: -3.8888256549835205
    5. '
' → logprob: -4.3888258934021
    6. 'b' → logprob: -4.6388258934021
    7. ' if' → logprob: -5.3888258934021
    8. 'for' → logprob: -6.1388258934021
    9. '       ' → logprob: -6.6388258934021
    10. '```' → logprob: -6.7638258934021

Token 4049: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3665066957473755
    2. '[' → logprob: -1.6165066957473755
    3. '0' → logprob: -2.241506576538086
    4. '1' → logprob: -6.866506576538086
    5. '```' → logprob: -8.616506576538086
    6. '#' → logprob: -8.866506576538086
    7. ']' → logprob: -9.116506576538086
    8. '=' → logprob: -9.491506576538086
    9. 'b' → logprob: -9.866506576538086
    10. '
' → logprob: -9.866506576538086

Token 4050: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018213508650660515
    2. '[' → logprob: -4.393213272094727
    3. ' =' → logprob: -5.768213272094727
    4. '   ' → logprob: -7.018213272094727
    5. '='' → logprob: -7.643213272094727
    6. '==' → logprob: -8.393213272094727
    7. 'b' → logprob: -8.518213272094727
    8. '`' → logprob: -8.643213272094727
    9. '```' → logprob: -9.018213272094727
    10. '=[' → logprob: -9.518213272094727

Token 4051: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005007279687561095
    2. '1' → logprob: -7.625500679016113
    3. ' '' → logprob: -12.125500679016113
    4. '[' → logprob: -13.000500679016113
    5. '['' → logprob: -13.875500679016113
    6. '"' → logprob: -13.875500679016113
    7. ''b' → logprob: -14.250500679016113
    8. '`' → logprob: -14.375500679016113
    9. '   ' → logprob: -14.750500679016113
    10. 'b' → logprob: -15.000500679016113

Token 4052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39718449115753174
    2. '   ' → logprob: -1.8971844911575317
    3. 'b' → logprob: -2.397184371948242
    4. ')' → logprob: -3.147184371948242
    5. ',b' → logprob: -4.897184371948242
    6. '[' → logprob: -5.022184371948242
    7. ' b' → logprob: -5.272184371948242
    8. '=' → logprob: -5.522184371948242
    9. ' ' → logprob: -6.022184371948242
    10. ' if' → logprob: -6.022184371948242

Token 4053: '6' (ID: 21)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004154618363827467
    2. ' b' → logprob: -5.879154682159424
    3. '0' → logprob: -7.004154682159424
    4. 'bit' → logprob: -8.504154205322266
    5. '6' → logprob: -9.254154205322266
    6. '   ' → logprob: -10.004154205322266
    7. ' ' → logprob: -10.129154205322266
    8. '1' → logprob: -10.379154205322266
    9. '7' → logprob: -11.754154205322266
    10. '4' → logprob: -11.754154205322266

Token 4054: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2100173532962799
    2. ')' → logprob: -2.460017442703247
    3. '=' → logprob: -3.085017442703247
    4. '0' → logprob: -4.210017204284668
    5. 'b' → logprob: -4.835017204284668
    6. '1' → logprob: -5.085017204284668
    7. '7' → logprob: -5.210017204284668
    8. '5' → logprob: -5.210017204284668
    9. ']' → logprob: -5.585017204284668
    10. '),' → logprob: -5.710017204284668

Token 4055: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041540260426700115
    2. ''' → logprob: -5.504154205322266
    3. '5' → logprob: -10.254154205322266
    4. '0' → logprob: -11.004154205322266
    5. ' ' → logprob: -12.004154205322266
    6. '"' → logprob: -12.754154205322266
    7. 'True' → logprob: -12.754154205322266
    8. '7' → logprob: -13.629154205322266
    9. ')' → logprob: -13.754154205322266
    10. '4' → logprob: -13.879154205322266

Token 4056: ',' (ID: 11)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5485360026359558
    2. '   ' → logprob: -1.9235360622406006
    3. 'b' → logprob: -1.9235360622406006
    4. '1' → logprob: -2.4235360622406006
    5. '7' → logprob: -3.9235360622406006
    6. 'def' → logprob: -5.0485358238220215
    7. '3' → logprob: -5.7985358238220215
    8. ' ' → logprob: -6.0485358238220215
    9. ' b' → logprob: -6.2985358238220215
    10. '    ' → logprob: -6.2985358238220215

Token 4057: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005155019462108612
    2. 'b' → logprob: -7.625515460968018
    3. ' ' → logprob: -11.500515937805176
    4. '2' → logprob: -12.000515937805176
    5. '   ' → logprob: -12.625515937805176
    6. '3' → logprob: -12.875515937805176
    7. '7' → logprob: -13.625515937805176
    8. '    ' → logprob: -13.750515937805176
    9. '```' → logprob: -13.750515937805176
    10. '0' → logprob: -14.250515937805176

Token 4058: '=' (ID: 28)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0815095454454422
    2. '7' → logprob: -3.331509590148926
    3. ',' → logprob: -3.956509590148926
    4. '=' → logprob: -4.956509590148926
    5. ''' → logprob: -5.456509590148926
    6. '4' → logprob: -5.956509590148926
    7. ' ' → logprob: -6.206509590148926
    8. '3' → logprob: -6.581509590148926
    9. '```' → logprob: -6.706509590148926
    10. '1' → logprob: -6.831509590148926

Token 4059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ''' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.37501335144043
    4. '...' → logprob: -15.12501335144043
    5. ''''' → logprob: -15.25001335144043
    6. '<|end|>' → logprob: -15.50001335144043
    7. '0' → logprob: -16.37501335144043
    8. '<|end|>' → logprob: -16.62501335144043
    9. '"' → logprob: -16.93751335144043
    10. ''s' → logprob: -17.25001335144043

Token 4060: ',' (ID: 11)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3729608654975891
    2. ',' → logprob: -1.4979608058929443
    3. '7' → logprob: -3.1229608058929443
    4. '5' → logprob: -3.2479608058929443
    5. '   ' → logprob: -5.997961044311523
    6. '```' → logprob: -6.997961044311523
    7. '4' → logprob: -8.247961044311523
    8. ' ' → logprob: -8.372961044311523
    9. 'def' → logprob: -8.497961044311523
    10. ',b' → logprob: -9.247961044311523

Token 4061: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003820524725597352
    2. '5' → logprob: -8.000382423400879
    3. '4' → logprob: -10.750382423400879
    4. '7' → logprob: -11.000382423400879
    5. ' ' → logprob: -12.000382423400879
    6. '   ' → logprob: -13.125382423400879
    7. '```' → logprob: -16.000381469726562
    8. '  ' → logprob: -16.375381469726562
    9. '    ' → logprob: -16.750381469726562
    10. '1' → logprob: -17.125381469726562

Token 4062: '=' (ID: 28)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04631255939602852
    2. '=' → logprob: -3.5463125705718994
    3. '5' → logprob: -5.29631233215332
    4. '```' → logprob: -5.67131233215332
    5. '7' → logprob: -5.92131233215332
    6. ',' → logprob: -6.67131233215332
    7. '==' → logprob: -6.67131233215332
    8. 'not' → logprob: -7.29631233215332
    9. '`' → logprob: -7.92131233215332
    10. ' ' → logprob: -8.29631233215332

Token 4063: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011079294607043266
    2. ''' → logprob: -4.51107931137085
    3. '1' → logprob: -11.011078834533691
    4. ' ' → logprob: -12.011078834533691
    5. ''x' → logprob: -12.761078834533691
    6. 'False' → logprob: -13.511078834533691
    7. '`' → logprob: -13.886078834533691
    8. ' '' → logprob: -14.136078834533691
    9. '('' → logprob: -14.761078834533691
    10. '"' → logprob: -14.886078834533691

Token 4064: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48137331008911133
    2. ',' → logprob: -1.1063733100891113
    3. 'def' → logprob: -3.9813733100891113
    4. '[' → logprob: -4.606373310089111
    5. '```' → logprob: -4.731373310089111
    6. '#' → logprob: -5.356373310089111
    7. '4' → logprob: -6.606373310089111
    8. '5' → logprob: -6.731373310089111
    9. '	' → logprob: -6.856373310089111
    10. '
' → logprob: -7.106373310089111

Token 4065: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.329167369287461e-05
    2. '5' → logprob: -9.375093460083008
    3. '7' → logprob: -13.000093460083008
    4. '   ' → logprob: -13.125093460083008
    5. 'def' → logprob: -13.125093460083008
    6. ' ' → logprob: -13.500093460083008
    7. '
' → logprob: -15.250093460083008
    8. 'b' → logprob: -15.625093460083008
    9. '0' → logprob: -16.125093460083008
    10. '  ' → logprob: -16.375093460083008

Token 4066: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34568944573402405
    2. 'not' → logprob: -2.345689535140991
    3. 'in' → logprob: -2.845689535140991
    4. ''' → logprob: -3.845689535140991
    5. '10' → logprob: -3.970689535140991
    6. '0' → logprob: -4.345689296722412
    7. '[' → logprob: -4.470689296722412
    8. '='' → logprob: -4.595689296722412
    9. ' in' → logprob: -4.595689296722412
    10. '=y' → logprob: -4.595689296722412

Token 4067: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.610331654548645
    2. ''y' → logprob: -0.860331654548645
    3. '0' → logprob: -4.1103315353393555
    4. ''x' → logprob: -4.1103315353393555
    5. ''n' → logprob: -8.610331535339355
    6. 'y' → logprob: -8.860331535339355
    7. ''o' → logprob: -9.110331535339355
    8. ''b' → logprob: -9.235331535339355
    9. '('' → logprob: -9.610331535339355
    10. 'x' → logprob: -9.610331535339355

Token 4068: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01701413094997406
    2. 'b' → logprob: -5.267014026641846
    3. 'def' → logprob: -5.267014026641846
    4. '
' → logprob: -6.392014026641846
    5. '```' → logprob: -6.642014026641846
    6. ',' → logprob: -6.767014026641846
    7. '	b' → logprob: -7.517014026641846
    8. '[' → logprob: -7.642014026641846
    9. '#' → logprob: -8.642014503479004
    10. ' ' → logprob: -8.642014503479004

Token 4069: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03834463283419609
    2. '3' → logprob: -3.288344621658325
    3. '   ' → logprob: -9.163344383239746
    4. 'b' → logprob: -9.788344383239746
    5. '0' → logprob: -10.038344383239746
    6. 'def' → logprob: -10.163344383239746
    7. ' ' → logprob: -10.663344383239746
    8. '4' → logprob: -11.288344383239746
    9. '7' → logprob: -11.288344383239746
    10. '1' → logprob: -12.163344383239746

Token 4070: '=y' (ID: 70421)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9472328424453735
    2. ''y' → logprob: -1.3222328424453735
    3. '1' → logprob: -1.9472328424453735
    4. ''x' → logprob: -2.072232723236084
    5. '3' → logprob: -3.822232723236084
    6. 'x' → logprob: -4.572232723236084
    7. '0' → logprob: -5.072232723236084
    8. '   ' → logprob: -5.197232723236084
    9. '`' → logprob: -5.447232723236084
    10. ''b' → logprob: -5.447232723236084

Token 4071: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08547421544790268
    2. ',' → logprob: -2.5854742527008057
    3. '       ' → logprob: -5.835474014282227
    4. '
' → logprob: -6.960474014282227
    5. '3' → logprob: -7.835474014282227
    6. ',
' → logprob: -7.960474014282227
    7. ' ' → logprob: -8.085474014282227
    8. '[' → logprob: -8.085474014282227
    9. '  ' → logprob: -8.460474014282227
    10. '    ' → logprob: -8.710474014282227

Token 4072: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013357517309486866
    2. '3' → logprob: -9.125133514404297
    3. '#' → logprob: -11.625133514404297
    4. '   ' → logprob: -11.625133514404297
    5. 'def' → logprob: -12.500133514404297
    6. ' ' → logprob: -14.000133514404297
    7. '7' → logprob: -14.000133514404297
    8. '	' → logprob: -14.875133514404297
    9. '0' → logprob: -15.000133514404297
    10. 'b' → logprob: -15.125133514404297

Token 4073: '=y' (ID: 70421)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1022518128156662
    2. ''y' → logprob: -2.3522517681121826
    3. '=y' → logprob: -7.227252006530762
    4. ' y' → logprob: -7.602252006530762
    5. '1' → logprob: -8.227252006530762
    6. '‘y' → logprob: -8.852252006530762
    7. '[y' → logprob: -9.102252006530762
    8. ',y' → logprob: -9.477252006530762
    9. '0' → logprob: -9.852252006530762
    10. '7' → logprob: -9.852252006530762

Token 4074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28765931725502014
    2. '   ' → logprob: -1.5376592874526978
    3. '0' → logprob: -4.912659168243408
    4. '[' → logprob: -5.037659168243408
    5. '	' → logprob: -5.162659168243408
    6. '```' → logprob: -5.162659168243408
    7. ' ,' → logprob: -6.037659168243408
    8. 'def' → logprob: -6.162659168243408
    9. ' ' → logprob: -6.287659168243408
    10. '2' → logprob: -7.412659168243408

Token 4075: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.125001907348633
    3. '7' → logprob: -16.000001907348633
    4. ' ' → logprob: -17.375001907348633
    5. '```' → logprob: -17.875001907348633
    6. '[' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '4' → logprob: -18.875001907348633
    9. '2' → logprob: -18.875001907348633
    10. '#' → logprob: -19.000001907348633

Token 4076: '=y' (ID: 70421)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.2668321132659912
    2. ''y' → logprob: -1.6418321132659912
    3. '='' → logprob: -4.01683235168457
    4. ''' → logprob: -4.39183235168457
    5. 'x' → logprob: -5.64183235168457
    6. '=' → logprob: -6.26683235168457
    7. ''=' → logprob: -6.51683235168457
    8. '=x' → logprob: -6.64183235168457
    9. '=y' → logprob: -8.39183235168457
    10. '```' → logprob: -8.39183235168457

Token 4077: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036787521094083786
    2. 'def' → logprob: -4.036787509918213
    3. '
' → logprob: -4.161787509918213
    4. 'if' → logprob: -6.536787509918213
    5. ' if' → logprob: -7.786787509918213
    6. '
' → logprob: -8.536787986755371
    7. '```' → logprob: -8.536787986755371
    8. 'for' → logprob: -8.786787986755371
    9. ' ' → logprob: -9.411787986755371
    10. ' for' → logprob: -10.036787986755371

Token 4078: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008774700574576855
    2. 'def' → logprob: -4.883774757385254
    3. '```' → logprob: -7.508774757385254
    4. '
' → logprob: -8.133774757385254
    5. 'if' → logprob: -8.383774757385254
    6. 'b' → logprob: -11.008774757385254
    7. '``' → logprob: -11.258774757385254
    8. '       ' → logprob: -11.508774757385254
    9. '[' → logprob: -11.633774757385254
    10. '`' → logprob: -11.633774757385254

Token 4079: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028849986847490072
    2. 'if' → logprob: -6.127884864807129
    3. '```' → logprob: -7.627884864807129
    4. 'def' → logprob: -8.752884864807129
    5. '
' → logprob: -10.627884864807129
    6. ' if' → logprob: -11.002884864807129
    7. '``' → logprob: -11.252884864807129
    8. 'for' → logprob: -14.877884864807129
    9. '#' (adapté à ' #') → logprob: -15.252884864807129
    10. '	if' → logprob: -15.377884864807129

Token 4080: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20325544476509094
    2. 'if' → logprob: -1.7032554149627686
    3. 'def' → logprob: -6.828255653381348
    4. '```' → logprob: -7.953255653381348
    5. ' if' → logprob: -8.203255653381348
    6. '#' → logprob: -10.453255653381348
    7. 'for' → logprob: -10.578255653381348
    8. '``' → logprob: -10.578255653381348
    9. 'b' → logprob: -10.828255653381348
    10. '
' → logprob: -10.828255653381348

Token 4081: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030697984038852155
    2. '[' → logprob: -8.125307083129883
    3. '3' → logprob: -11.875307083129883
    4. ''' → logprob: -13.250307083129883
    5. '```' → logprob: -14.250307083129883
    6. '4' → logprob: -14.750307083129883
    7. ''[' → logprob: -15.250307083129883
    8. '`' → logprob: -15.875307083129883
    9. '7' → logprob: -16.000307083129883
    10. ''''' → logprob: -16.000307083129883

Token 4082: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005206601694226265
    2. 'def' → logprob: -5.75520658493042
    3. '   ' → logprob: -6.63020658493042
    4. '```' → logprob: -8.255207061767578
    5. '0' → logprob: -8.880207061767578
    6. '
' → logprob: -9.255207061767578
    7. '#' → logprob: -9.505207061767578
    8. 'b' → logprob: -9.630207061767578
    9. '=' → logprob: -11.130207061767578
    10. '``' → logprob: -11.255207061767578

Token 4083: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2563352584838867
    2. '0' → logprob: -1.7563352584838867
    3. '   ' → logprob: -3.2563352584838867
    4. 'b' → logprob: -5.506335258483887
    5. ' ' → logprob: -5.506335258483887
    6. 'def' → logprob: -5.506335258483887
    7. ' [' → logprob: -6.506335258483887
    8. '1' → logprob: -8.381335258483887
    9. '(' → logprob: -8.881335258483887
    10. '3' → logprob: -8.881335258483887

Token 4084: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11153899133205414
    2. '0' → logprob: -2.361538887023926
    3. 'b' → logprob: -4.736538887023926
    4. 'def' → logprob: -6.236538887023926
    5. 'if' → logprob: -8.736538887023926
    6. '   ' → logprob: -9.486538887023926
    7. '#' → logprob: -9.486538887023926
    8. '(' → logprob: -10.236538887023926
    9. ' [' → logprob: -10.486538887023926
    10. ' ' → logprob: -10.486538887023926

Token 4085: 'yy' (ID: 7496)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003441126784309745
    2. '0' → logprob: -6.503441333770752
    3. '1' → logprob: -6.628441333770752
    4. '(' → logprob: -8.628440856933594
    5. '2' → logprob: -9.003440856933594
    6. 'b' → logprob: -9.128440856933594
    7. '```' → logprob: -9.628440856933594
    8. ' [' → logprob: -10.253440856933594
    9. '   ' → logprob: -10.253440856933594
    10. '3' → logprob: -10.253440856933594

Token 4086: 'xxxx' (ID: 30950)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007847936823964119
    2. 'b' → logprob: -5.632847785949707
    3. '   ' → logprob: -6.382847785949707
    4. '(' → logprob: -6.882847785949707
    5. '3' → logprob: -7.507847785949707
    6. '```' → logprob: -8.632847785949707
    7. '0' → logprob: -8.757847785949707
    8. '2' → logprob: -8.882847785949707
    9. ' [' → logprob: -9.632847785949707
    10. '=' → logprob: -9.632847785949707

Token 4087: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7253930568695068
    2. '   ' → logprob: -1.1003930568695068
    3. 'def' → logprob: -1.8503930568695068
    4. 'b' → logprob: -4.100393295288086
    5. '#' → logprob: -5.600393295288086
    6. '
' → logprob: -6.725393295288086
    7. '```' → logprob: -6.850393295288086
    8. '(' → logprob: -7.225393295288086
    9. ':' → logprob: -7.600393295288086
    10. ' ' → logprob: -8.100393295288086

Token 4088: ' bit' (ID: 3546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29709166288375854
    2. '0' → logprob: -1.5470917224884033
    3. 'b' → logprob: -3.6720917224884033
    4. '   ' → logprob: -4.422091484069824
    5. '#' → logprob: -6.422091484069824
    6. ' ' → logprob: -6.672091484069824
    7. '3' → logprob: -6.922091484069824
    8. ' b' → logprob: -7.547091484069824
    9. 'def' → logprob: -7.547091484069824
    10. ' [' → logprob: -7.797091484069824

Token 4089: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04917621240019798
    2. '[' → logprob: -3.1741762161254883
    3. '0' → logprob: -5.549176216125488
    4. '3' → logprob: -7.049176216125488
    5. '4' → logprob: -7.549176216125488
    6. '1' → logprob: -8.174176216125488
    7. '5' → logprob: -8.299176216125488
    8. '```' → logprob: -8.674176216125488
    9. '2' → logprob: -9.424176216125488
    10. ']' → logprob: -11.049176216125488

Token 4090: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025460547767579556
    2. '='' → logprob: -6.8775458335876465
    3. '==' → logprob: -7.7525458335876465
    4. '[' → logprob: -8.127546310424805
    5. ' =' → logprob: -8.252546310424805
    6. '```' → logprob: -8.877546310424805
    7. '   ' → logprob: -9.377546310424805
    8. '`' → logprob: -9.752546310424805
    9. '=
' → logprob: -9.877546310424805
    10. 'not' → logprob: -9.877546310424805

Token 4091: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08937539160251617
    2. '1' → logprob: -2.4643754959106445
    3. '0' → logprob: -8.214375495910645
    4. ' '' → logprob: -9.339375495910645
    5. ' ' → logprob: -10.839375495910645
    6. '"' → logprob: -11.214375495910645
    7. '`' → logprob: -11.839375495910645
    8. '('' → logprob: -12.089375495910645
    9. '   ' → logprob: -12.464375495910645
    10. '['' → logprob: -12.714375495910645

Token 4092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.017397165298462
    2. 'b' → logprob: -1.517397165298462
    3. '   ' → logprob: -1.517397165298462
    4. ' b' → logprob: -2.142397165298462
    5. ',b' → logprob: -2.642397165298462
    6. ' ,' → logprob: -5.142396926879883
    7. '[' → logprob: -6.392396926879883
    8. ' ' → logprob: -6.517396926879883
    9. '```' → logprob: -7.267396926879883
    10. '
' → logprob: -7.642396926879883

Token 4093: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029973210766911507
    2. 'b' → logprob: -3.529973268508911
    3. '0' → logprob: -8.904973030090332
    4. '6' → logprob: -10.279973030090332
    5. '4' → logprob: -10.404973030090332
    6. '2' → logprob: -12.154973030090332
    7. ' ' → logprob: -12.279973030090332
    8. '5' → logprob: -12.404973030090332
    9. ' b' → logprob: -12.654973030090332
    10. '   ' → logprob: -13.029973030090332

Token 4094: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.522768497467041
    2. 'not' → logprob: -1.272768497467041
    3. 'b' → logprob: -3.272768497467041
    4. ']' → logprob: -3.772768497467041
    5. '=' → logprob: -3.897768497467041
    6. ' not' → logprob: -4.147768497467041
    7. ')' → logprob: -4.272768497467041
    8. '==' → logprob: -5.147768497467041
    9. '```' → logprob: -5.397768497467041
    10. '[' → logprob: -6.647768497467041

Token 4095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5811755657196045
    2. ''' → logprob: -0.8311755657196045
    3. '1' → logprob: -5.706175804138184
    4. ''x' → logprob: -6.456175804138184
    5. ''b' → logprob: -9.081175804138184
    6. 'x' → logprob: -9.706175804138184
    7. '('' → logprob: -10.081175804138184
    8. ' '' → logprob: -10.956175804138184
    9. ' ' → logprob: -11.456175804138184
    10. ')' → logprob: -11.706175804138184


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 1266
Tokens correctement prédits (1ère position, avec adaptation): 1386
Tokens correctement prédits (top 10): 2783
Précision stricte (1ère position): 30.93%
Précision adaptée (1ère position): 33.86%
Précision (top 10): 67.99%
================================================================================
