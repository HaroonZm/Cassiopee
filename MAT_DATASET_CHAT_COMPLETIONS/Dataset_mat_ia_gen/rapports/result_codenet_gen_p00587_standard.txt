================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class Node:
    def __init__(self, left=None, right=None):
        self.left = left
        self.right = right

def parse_tree(s, i=0):
    # Parse tree from s starting at index i, return (node, next_index)
    if s[i] != '(':
        return None, i
    i += 1
    # parse left child
    if s[i] == ',':
        left = None
        i += 1
    else:
        left, i = parse_tree(s, i)
        if s[i] != ',':
            raise ValueError("Expected ',' at %d" % i)
        i += 1
    # parse right child
    if s[i] == ')':
        right = None
    else:
        right, i = parse_tree(s, i)
    if s[i] != ')':
        raise ValueError("Expected ')' at %d" % i)
    i += 1
    return Node(left, right), i

def tree_to_str(node):
    if node is None:
        return ''
    if node.left is None and node.right is None:
        return '()'
    left_str = tree_to_str(node.left) if node.left else ''
    right_str = tree_to_str(node.right) if node.right else ''
    return '(' + left_str + ',' + right_str + ')'

def intersect(n1, n2):
    if n1 is None or n2 is None:
        return None
    left = intersect(n1.left, n2.left)
    right = intersect(n1.right, n2.right)
    if left is None and right is None:
        return None
    return Node(left, right)

def union(n1, n2):
    if n1 is None and n2 is None:
        return None
    left = union(n1.left if n1 else None, n2.left if n2 else None)
    right = union(n1.right if n1 else None, n2.right if n2 else None)
    if left is None and right is None:
        # leaf present if either leaf
        if (n1 is not None) or (n2 is not None):
            return Node()
        return None
    return Node(left, right)

for line in sys.stdin:
    if not line.strip():
        continue
    op, t1, t2 = line.strip().split()
    tree1, _ = parse_tree(t1, 0)
    tree2, _ = parse_tree(t2, 0)
    if op == 'i':
        res = intersect(tree1, tree2)
    else:
        res = union(tree1, tree2)
    if res is None:
        # no node, print empty leaf?
        print('()')
    else:
        print(tree_to_str(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010572222527116537
    2. '  ' → logprob: -7.626057147979736
    3. ' My' → logprob: -7.876057147979736
    4. ' Space' → logprob: -10.001057624816895
    5. ' A' → logprob: -10.251057624816895
    6. '_' → logprob: -10.876057624816895
    7. '   ' → logprob: -11.376057624816895
    8. ' C' → logprob: -11.626057624816895
    9. ' ' → logprob: -12.001057624816895
    10. ' System' → logprob: -12.126057624816895

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16069433093070984
    2. '(' → logprob: -1.9106943607330322
    3. '(:' → logprob: -7.910694122314453
    4. '{' → logprob: -10.160694122314453
    5. '():' → logprob: -11.160694122314453
    6. '.' → logprob: -11.160694122314453
    7. ' :' → logprob: -11.285694122314453
    8. ':**' → logprob: -12.160694122314453
    9. '(":' → logprob: -12.285694122314453
    10. '(
' → logprob: -12.660694122314453

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7011313438415527
    2. ':' → logprob: -1.2011313438415527
    3. '<|end|>' → logprob: -2.7011313438415527
    4. '(' → logprob: -2.8261313438415527
    5. ' ' → logprob: -3.3261313438415527
    6. '    ' → logprob: -4.701131343841553
    7. '(object' → logprob: -4.701131343841553
    8. '```' → logprob: -4.701131343841553
    9. '  ' → logprob: -5.701131343841553
    10. ' :' → logprob: -6.076131343841553

Token 7: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7119929194450378
    2. ' def' → logprob: -0.9619929194450378
    3. '   ' → logprob: -2.3369929790496826
    4. '    ' → logprob: -3.9619929790496826
    5. 'class' → logprob: -5.3369927406311035
    6. ' pass' → logprob: -5.5869927406311035
    7. '(' → logprob: -6.8369927406311035
    8. 'pass' → logprob: -7.3369927406311035
    9. ' ' → logprob: -7.5869927406311035
    10. '```' → logprob: -7.8369927406311035

Token 8: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1719125509262085
    2. 'init' → logprob: -3.171912670135498
    3. ' ' → logprob: -3.546912670135498
    4. 'nit' → logprob: -3.546912670135498
    5. ' init' → logprob: -3.796912670135498
    6. ' def' → logprob: -4.921912670135498
    7. ' nit' → logprob: -5.171912670135498
    8. '__' → logprob: -5.296912670135498
    9. 'itialize' → logprob: -5.796912670135498
    10. 'itial' → logprob: -5.796912670135498

Token 9: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.875
    3. 'ini' → logprob: -19.875
    4. '_init' → logprob: -20.0
    5. 'inite' → logprob: -21.0
    6. '	init' → logprob: -21.5
    7. 'int' → logprob: -21.625
    8. 'innit' → logprob: -22.625
    9. 'inti' → logprob: -23.0
    10. 'in' → logprob: -23.0

Token 10: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07053128629922867
    2. '__' → logprob: -2.6955313682556152
    3. '__(
' → logprob: -7.695531368255615
    4. '__((' → logprob: -9.320530891418457
    5. '__('' → logprob: -10.695530891418457
    6. '(self' → logprob: -11.820530891418457
    7. '(' → logprob: -12.070530891418457
    8. '_' → logprob: -12.570530891418457
    9. '___' → logprob: -12.820530891418457
    10. '__("' → logprob: -12.945530891418457

Token 11: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -12.375004768371582
    3. ')' → logprob: -15.875004768371582
    4. '(self' → logprob: -17.125003814697266
    5. '	self' → logprob: -17.875003814697266
    6. ' ' → logprob: -18.625003814697266
    7. ',self' → logprob: -18.750003814697266
    8. '_self' → logprob: -19.875003814697266
    9. '=self' → logprob: -20.000003814697266
    10. ',' → logprob: -20.125003814697266

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01990555040538311
    2. ' ,' → logprob: -4.1449055671691895
    3. ')' → logprob: -5.8949055671691895
    4. 'self' → logprob: -8.019905090332031
    5. ' )' → logprob: -8.144905090332031
    6. '<|end|>' → logprob: -8.519905090332031
    7. '_' → logprob: -9.519905090332031
    8. ',self' → logprob: -10.019905090332031
    9. ' ' → logprob: -10.144905090332031
    10. '(' → logprob: -10.144905090332031

Token 13: ' left' (ID: 3561)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7244104146957397
    2. 'value' → logprob: -0.9744104146957397
    3. ' data' → logprob: -2.7244105339050293
    4. ' value' → logprob: -2.7244105339050293
    5. 'val' → logprob: -5.474410533905029
    6. ' val' → logprob: -5.974410533905029
    7. 'self' → logprob: -10.599410057067871
    8. ' key' → logprob: -11.474410057067871
    9. ' self' → logprob: -11.599410057067871
    10. 'key' → logprob: -11.849410057067871

Token 14: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011920137330889702
    2. ')' → logprob: -5.136919975280762
    3. '=' → logprob: -5.261919975280762
    4. '):' → logprob: -7.886919975280762
    5. ' ,' → logprob: -8.511919975280762
    6. ' )' → logprob: -9.261919975280762
    7. ',)' → logprob: -10.011919975280762
    8. '=None' → logprob: -10.261919975280762
    9. ':' → logprob: -10.886919975280762
    10. ' ):' → logprob: -12.386919975280762

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038920470979064703
    2. ' ,' → logprob: -8.000389099121094
    3. ',right' → logprob: -10.375389099121094
    4. ',left' → logprob: -11.375389099121094
    5. '):' → logprob: -12.000389099121094
    6. '   ' → logprob: -13.750389099121094
    7. ',node' → logprob: -13.875389099121094
    8. ')' → logprob: -14.125389099121094
    9. ',column' → logprob: -14.750389099121094
    10. ' ' → logprob: -14.875389099121094

Token 16: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.011050059460103512
    2. 'right' → logprob: -4.511050224304199
    3. '	right' → logprob: -13.6360502243042
    4. ' rig' → logprob: -14.7610502243042
    5. ' middle' → logprob: -16.011049270629883
    6. ' ' → logprob: -16.386049270629883
    7. ' ' → logprob: -16.636049270629883
    8. '   ' → logprob: -16.886049270629883
    9. 'Right' → logprob: -16.886049270629883
    10. ',right' → logprob: -16.886049270629883

Token 17: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25588688254356384
    2. '=None' → logprob: -1.7558869123458862
    3. '=' → logprob: -3.3808867931365967
    4. ')' → logprob: -4.505887031555176
    5. ',' → logprob: -4.880887031555176
    6. ' ):' → logprob: -8.880887031555176
    7. ')=' → logprob: -9.755887031555176
    8. ':' → logprob: -10.130887031555176
    9. ' =' → logprob: -10.630887031555176
    10. ',None' → logprob: -10.755887031555176

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22577214241027832
    2. ',' → logprob: -1.6007721424102783
    3. ')' → logprob: -8.2257719039917
    4. ' ,' → logprob: -10.7257719039917
    5. ' ):' → logprob: -10.8507719039917
    6. '):
' → logprob: -11.2257719039917
    7. '   ' → logprob: -11.2257719039917
    8. ':' → logprob: -11.4757719039917
    9. ' ' → logprob: -13.2257719039917
    10. '),' → logprob: -13.2257719039917

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019333714619278908
    2. 'self' → logprob: -4.394333839416504
    3. '        ' → logprob: -6.019333839416504
    4. '    ' → logprob: -6.394333839416504
    5. ' self' → logprob: -6.894333839416504
    6. '   ' → logprob: -7.269333839416504
    7. '      ' → logprob: -8.519333839416504
    8. ' ):' → logprob: -8.519333839416504
    9. '     ' → logprob: -8.769333839416504
    10. ' ' → logprob: -9.269333839416504

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00466093048453331
    2. '       ' → logprob: -6.0046610832214355
    3. ' self' → logprob: -6.1296610832214355
    4. '   ' → logprob: -13.379660606384277
    5. ' ' → logprob: -13.879660606384277
    6. '        ' → logprob: -14.254660606384277
    7. 'left' → logprob: -14.879660606384277
    8. 'super' → logprob: -15.004660606384277
    9. 'sel' → logprob: -15.129660606384277
    10. '           ' → logprob: -15.129660606384277

Token 21: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00267387623898685
    2. '.left' → logprob: -6.252674102783203
    3. ' .' → logprob: -8.127674102783203
    4. '.value' → logprob: -8.502674102783203
    5. '.right' → logprob: -9.002674102783203
    6. '.space' → logprob: -10.252674102783203
    7. '.data' → logprob: -10.502674102783203
    8. '.val' → logprob: -11.502674102783203
    9. ' ' → logprob: -11.752674102783203
    10. '<|end|>' → logprob: -12.752674102783203

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288046956062317
    2. ' =' → logprob: -1.053804636001587
    3. '<|end|>' → logprob: -9.678804397583008
    4. ' is' → logprob: -11.803804397583008
    5. '=None' → logprob: -11.928804397583008
    6. ',' → logprob: -11.928804397583008
    7. ' ' → logprob: -12.303804397583008
    8. ')' → logprob: -12.803804397583008
    9. '<|end|>' → logprob: -12.803804397583008
    10. ' =
' → logprob: -12.803804397583008

Token 23: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.048589639365673065
    2. 'left' → logprob: -3.0485897064208984
    3. ' lef' → logprob: -13.548589706420898
    4. ' None' → logprob: -14.798589706420898
    5. '	left' → logprob: -14.798589706420898
    6. ' ' → logprob: -16.2985897064209
    7. 'None' → logprob: -17.2985897064209
    8. 'lef' → logprob: -17.7985897064209
    9. '(left' → logprob: -17.9235897064209
    10. '[left' → logprob: -18.0485897064209

Token 24: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12670516967773438
    2. '<|end|>' → logprob: -2.2517051696777344
    3. '        
' → logprob: -5.751705169677734
    4. ' 
' → logprob: -6.501705169677734
    5. '    
' → logprob: -6.751705169677734
    6. ' ' → logprob: -6.751705169677734
    7. '
' → logprob: -6.751705169677734
    8. '        ' → logprob: -6.876705169677734
    9. ')' → logprob: -7.251705169677734
    10. '   ' → logprob: -7.376705169677734

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010743469931185246
    2. '<|end|>' → logprob: -4.760743618011475
    3. '        ' → logprob: -7.510743618011475
    4. '   ' → logprob: -8.260743141174316
    5. '<|end|>' → logprob: -8.385743141174316
    6. '
' → logprob: -8.885743141174316
    7. '    ' → logprob: -8.885743141174316
    8. ')' → logprob: -8.885743141174316
    9. '        
' → logprob: -8.885743141174316
    10. 'self' → logprob: -9.010743141174316

Token 26: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11228841543197632
    2. ' self' → logprob: -2.987288475036621
    3. '       ' → logprob: -3.362288475036621
    4. 'right' → logprob: -4.362288475036621
    5. ' right' → logprob: -4.862288475036621
    6. '        ' → logprob: -7.862288475036621
    7. ' ' → logprob: -9.112288475036621
    8. '   ' → logprob: -10.362288475036621
    9. '           ' → logprob: -10.487288475036621
    10. '    ' → logprob: -11.112288475036621

Token 27: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22611193358898163
    2. '.right' → logprob: -1.601111888885498
    3. '.left' → logprob: -7.601111888885498
    4. '.value' → logprob: -9.476112365722656
    5. ' .' → logprob: -10.351112365722656
    6. 'right' → logprob: -10.351112365722656
    7. '.val' → logprob: -12.101112365722656
    8. '.is' → logprob: -12.226112365722656
    9. '=' → logprob: -12.226112365722656
    10. '.data' → logprob: -12.351112365722656

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28119122982025146
    2. '=' → logprob: -1.4061912298202515
    3. ' =
' → logprob: -11.406190872192383
    4. ' ' → logprob: -11.531190872192383
    5. '<|end|>' → logprob: -12.031190872192383
    6. ')' → logprob: -12.656190872192383
    7. '   ' → logprob: -13.031190872192383
    8. '<|end|>' → logprob: -13.281190872192383
    9. ' is' → logprob: -13.656190872192383
    10. ' ==' → logprob: -13.781190872192383

Token 29: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132626414299011
    2. ' right' → logprob: -1.313262701034546
    3. '	right' → logprob: -14.813262939453125
    4. '[right' → logprob: -16.063262939453125
    5. ' None' → logprob: -16.563262939453125
    6. 'r' → logprob: -16.563262939453125
    7. 'None' → logprob: -16.688262939453125
    8. ' ' → logprob: -16.938262939453125
    9. '(right' → logprob: -16.938262939453125
    10. 'Right' → logprob: -16.938262939453125

Token 30: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037021320313215256
    2. '
' → logprob: -4.037021160125732
    3. '    
' → logprob: -4.912021160125732
    4. '<|end|>' → logprob: -5.287021160125732
    5. 'class' → logprob: -5.912021160125732
    6. 'def' → logprob: -7.037021160125732
    7. '       ' → logprob: -7.537021160125732
    8. '\n' → logprob: -8.16202163696289
    9. ' ' → logprob: -8.41202163696289
    10. ',' → logprob: -8.53702163696289

Token 31: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.697860598564148
    2. 'def' → logprob: -0.822860598564148
    3. ':' → logprob: -3.3228607177734375
    4. '
' → logprob: -4.3228607177734375
    5. ' def' → logprob: -5.3228607177734375
    6. 'd' → logprob: -6.0728607177734375
    7. ')' → logprob: -6.5728607177734375
    8. ' ' → logprob: -6.8228607177734375
    9. '    
' → logprob: -6.9478607177734375
    10. ',' → logprob: -7.4478607177734375

Token 32: ' parse' (ID: 8420)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.47951555252075195
    2. ' create' → logprob: -2.104515552520752
    3. ' binary' → logprob: -2.229515552520752
    4. ' dfs' → logprob: -3.354515552520752
    5. ' tree' → logprob: -3.604515552520752
    6. ' decode' → logprob: -4.354515552520752
    7. ' parse' → logprob: -4.604515552520752
    8. ' main' → logprob: -4.729515552520752
    9. ' space' → logprob: -4.854515552520752
    10. ' find' → logprob: -5.229515552520752

Token 33: '_tree' (ID: 27118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1590503454208374
    2. '(' → logprob: -2.159050464630127
    3. '_tree' → logprob: -3.659050464630127
    4. '_expression' → logprob: -5.784050464630127
    5. '_node' → logprob: -7.784050464630127
    6. '(tree' → logprob: -8.034049987792969
    7. '_expr' → logprob: -8.159049987792969
    8. '_T' → logprob: -8.784049987792969
    9. '_code' → logprob: -8.784049987792969
    10. '_parent' → logprob: -8.784049987792969

Token 34: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05134853348135948
    2. '(tree' → logprob: -3.6763484477996826
    3. '(node' → logprob: -4.801348686218262
    4. '(root' → logprob: -5.176348686218262
    5. '(line' → logprob: -5.801348686218262
    6. '(s' → logprob: -6.051348686218262
    7. '(data' → logprob: -6.801348686218262
    8. '(text' → logprob: -7.051348686218262
    9. '("("' → logprob: -7.301348686218262
    10. '(parent' → logprob: -7.676348686218262

Token 35: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010917062871158123
    2. ',' → logprob: -5.1359171867370605
    3. ')' → logprob: -5.6359171867370605
    4. '[' → logprob: -7.3859171867370605
    5. 's' → logprob: -7.8859171867370605
    6. ':' → logprob: -8.135916709899902
    7. ' ):' → logprob: -9.635916709899902
    8. '):
' → logprob: -10.385916709899902
    9. '   ' → logprob: -13.135916709899902
    10. ' :' → logprob: -13.260916709899902

Token 36: ' i' (ID: 575)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.5247206687927246
    2. ' pos' → logprob: -1.1497206687927246
    3. ' i' → logprob: -2.7747206687927246
    4. ' idx' → logprob: -4.399720668792725
    5. 'index' → logprob: -4.774720668792725
    6. 'pos' → logprob: -5.274720668792725
    7. 'i' → logprob: -6.274720668792725
    8. ' start' → logprob: -7.149720668792725
    9. ' ' → logprob: -8.024721145629883
    10. ' depth' → logprob: -8.649721145629883

Token 37: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018411792116239667
    2. ')' → logprob: -6.876841068267822
    3. ' ):' → logprob: -7.626841068267822
    4. ':' → logprob: -8.12684154510498
    5. '=' → logprob: -11.37684154510498
    6. ',' → logprob: -11.62684154510498
    7. '):
' → logprob: -13.25184154510498
    8. ' :' → logprob: -13.75184154510498
    9. ' )' → logprob: -14.12684154510498
    10. ':**' → logprob: -15.00184154510498

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '1' → logprob: -15.00015926361084
    4. ')' → logprob: -17.500158309936523
    5. '2' → logprob: -19.250158309936523
    6. '۰' → logprob: -19.500158309936523
    7. '```' → logprob: -20.625158309936523
    8. '3' → logprob: -20.875158309936523
    9. ' )' → logprob: -21.250158309936523
    10. '   ' → logprob: -21.437658309936523

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028989017009735107
    2. ')' → logprob: -5.877898693084717
    3. ' ):' → logprob: -9.752899169921875
    4. ',' → logprob: -11.002899169921875
    5. ':' → logprob: -11.002899169921875
    6. '):
' → logprob: -13.252899169921875
    7. ' )' → logprob: -15.377899169921875
    8. ' ' → logprob: -16.127899169921875
    9. ':**' → logprob: -16.127899169921875
    10. ')：' → logprob: -17.002899169921875

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6173988580703735
    2. ' ' → logprob: -0.9923988580703735
    3. ' if' → logprob: -3.367398738861084
    4. '    ' → logprob: -3.367398738861084
    5. '  ' → logprob: -4.492398738861084
    6. 'if' → logprob: -5.242398738861084
    7. ' :' → logprob: -7.367398738861084
    8. 's' → logprob: -7.867398738861084
    9. '       ' → logprob: -7.867398738861084
    10. ':' → logprob: -8.117399215698242

Token 41: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12177849560976028
    2. ' if' → logprob: -2.2467784881591797
    3. ' ' → logprob: -5.49677848815918
    4. '   ' → logprob: -6.62177848815918
    5. 'while' → logprob: -7.12177848815918
    6. '    ' → logprob: -7.24677848815918
    7. 'n' → logprob: -7.49677848815918
    8. ' while' → logprob: -7.74677848815918
    9. 'i' → logprob: -7.99677848815918
    10. '#' (adapté à ' #') → logprob: -9.12177848815918

Token 42: ' Parse' (ID: 26701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.777716338634491
    2. ' if' → logprob: -0.902716338634491
    3. ' while' → logprob: -2.9027163982391357
    4. 'while' → logprob: -3.2777163982391357
    5. ' ' → logprob: -3.9027163982391357
    6. 'i' → logprob: -4.777716159820557
    7. 'n' → logprob: -5.902716159820557
    8. '   ' → logprob: -5.902716159820557
    9. 's' → logprob: -5.902716159820557
    10. ')' → logprob: -6.902716159820557

Token 43: ' tree' (ID: 8165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03335704281926155
    2. '(' → logprob: -4.6583571434021
    3. ' (' → logprob: -5.0333571434021
    4. ''' → logprob: -5.6583571434021
    5. ' )' → logprob: -5.7833571434021
    6. ')' → logprob: -6.0333571434021
    7. 's' → logprob: -6.2833571434021
    8. ' '' → logprob: -6.6583571434021
    9. ' if' → logprob: -7.2833571434021
    10. '[' → logprob: -7.2833571434021

Token 44: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7613731622695923
    2. ':' → logprob: -1.2613731622695923
    3. ' ' → logprob: -2.3863730430603027
    4. ' =' → logprob: -3.3863730430603027
    5. '   ' → logprob: -3.7613730430603027
    6. '=' → logprob: -4.011373043060303
    7. '<|end|>' → logprob: -4.511373043060303
    8. 'if' → logprob: -4.636373043060303
    9. '(' → logprob: -4.636373043060303
    10. ' :' → logprob: -4.761373043060303

Token 45: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5029778480529785
    2. ' s' → logprob: -1.0029778480529785
    3. ')' → logprob: -5.1279778480529785
    4. ' ' → logprob: -5.7529778480529785
    5. ' a' → logprob: -5.7529778480529785
    6. ' the' → logprob: -5.8779778480529785
    7. '(s' → logprob: -6.1279778480529785
    8. ''' → logprob: -6.2529778480529785
    9. ' )' → logprob: -6.2529778480529785
    10. ' (' → logprob: -6.3779778480529785

Token 46: ' starting' (ID: 8601)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766092538833618
    2. ' ' → logprob: -1.3266092538833618
    3. '   ' → logprob: -3.0766091346740723
    4. ' if' → logprob: -3.2016091346740723
    5. 'if' → logprob: -3.5766091346740723
    6. ',' → logprob: -3.7016091346740723
    7. ' :' → logprob: -3.9516091346740723
    8. '(' → logprob: -5.451609134674072
    9. '  ' → logprob: -5.826609134674072
    10. 'i' → logprob: -6.701609134674072

Token 47: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09761713445186615
    2. 'at' → logprob: -2.8476171493530273
    3. ')' → logprob: -4.847617149353027
    4. '=' → logprob: -5.097617149353027
    5. ' ' → logprob: -5.347617149353027
    6. ',' → logprob: -5.722617149353027
    7. ' from' → logprob: -5.847617149353027
    8. 'from' → logprob: -5.847617149353027
    9. ' with' → logprob: -6.597617149353027
    10. 'i' → logprob: -7.222617149353027

Token 48: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10908244550228119
    2. 'i' → logprob: -2.3590824604034424
    3. ' s' → logprob: -5.359082221984863
    4. ' the' → logprob: -6.484082221984863
    5. 's' → logprob: -6.609082221984863
    6. ' a' → logprob: -8.109082221984863
    7. ' index' → logprob: -8.109082221984863
    8. ')' → logprob: -8.859082221984863
    9. ' ' → logprob: -8.984082221984863
    10. 'index' → logprob: -9.109082221984863

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43175530433654785
    2. 'i' → logprob: -1.0567553043365479
    3. ' ' → logprob: -5.806755065917969
    4. '	i' → logprob: -11.556755065917969
    5. ')' → logprob: -12.181755065917969
    6. '  ' → logprob: -12.181755065917969
    7. '(i' → logprob: -12.931755065917969
    8. '   ' → logprob: -13.056755065917969
    9. ',' → logprob: -13.056755065917969
    10. ' `' → logprob: -13.306755065917969

Token 50: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9886550903320312
    2. '   ' → logprob: -1.3636550903320312
    3. ':' → logprob: -1.4886550903320312
    4. ',' → logprob: -2.8636550903320312
    5. ' :' → logprob: -2.8636550903320312
    6. '  ' → logprob: -4.488655090332031
    7. ' ,' → logprob: -5.238655090332031
    8. ' if' → logprob: -5.238655090332031
    9. '    ' → logprob: -5.613655090332031
    10. 'if' → logprob: -6.363655090332031

Token 51: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11911608278751373
    2. ' token' → logprob: -2.8691160678863525
    3. ' n' → logprob: -4.369116306304932
    4. 'if' → logprob: -4.619116306304932
    5. ' pos' → logprob: -4.869116306304932
    6. ' node' → logprob: -4.869116306304932
    7. 'token' → logprob: -5.244116306304932
    8. ' while' → logprob: -5.744116306304932
    9. '   ' → logprob: -6.369116306304932
    10. ' current' → logprob: -7.244116306304932

Token 52: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07012772560119629
    2. 'None' → logprob: -2.9451277256011963
    3. ' node' → logprob: -4.570127487182617
    4. '(None' → logprob: -5.945127487182617
    5. 'node' → logprob: -6.570127487182617
    6. ' (' → logprob: -8.695127487182617
    7. 'Node' → logprob: -9.070127487182617
    8. ' Node' → logprob: -9.320127487182617
    9. ',None' → logprob: -9.445127487182617
    10. ',' → logprob: -9.945127487182617

Token 53: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5338661670684814
    2. ' node' → logprob: -1.0338661670684814
    3. 'root' → logprob: -3.9088661670684814
    4. 'None' → logprob: -4.408865928649902
    5. ' None' → logprob: -4.408865928649902
    6. ' root' → logprob: -4.533865928649902
    7. 'Node' → logprob: -6.283865928649902
    8. ' Node' → logprob: -7.658865928649902
    9. 'tree' → logprob: -8.908865928649902
    10. 'new' → logprob: -9.408865928649902

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013643606507685035
    2. ')' → logprob: -9.750136375427246
    3. '),' → logprob: -10.125136375427246
    4. ',)' → logprob: -11.000136375427246
    5. ' ,' → logprob: -11.500136375427246
    6. ',None' → logprob: -12.000136375427246
    7. ',),' → logprob: -14.250136375427246
    8. '‌,' → logprob: -14.375136375427246
    9. ',node' → logprob: -14.625136375427246
    10. ' ' → logprob: -14.625136375427246

Token 55: ' next' (ID: 2613)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0896180123090744
    2. 'i' → logprob: -3.339617967605591
    3. ' next' → logprob: -3.464617967605591
    4. ' new' → logprob: -4.08961820602417
    5. ' index' → logprob: -6.71461820602417
    6. 'index' → logprob: -8.089617729187012
    7. 'new' → logprob: -8.464617729187012
    8. ')' → logprob: -9.214617729187012
    9. ' ' → logprob: -9.214617729187012
    10. 'next' → logprob: -9.339617729187012

Token 56: '_index' (ID: 7748)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08729991316795349
    2. '_index' → logprob: -2.5872998237609863
    3. ')' → logprob: -5.212299823760986
    4. '_)' → logprob: -6.462299823760986
    5. '_' → logprob: -6.712299823760986
    6. ' )' → logprob: -9.837300300598145
    7. ')_' → logprob: -10.837300300598145
    8. '_idx' → logprob: -10.962300300598145
    9. '_pos' → logprob: -10.962300300598145
    10. ' i' → logprob: -11.837300300598145

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. '):' → logprob: -11.250019073486328
    3. ' )' → logprob: -12.250019073486328
    4. '   ' → logprob: -14.500019073486328
    5. ' ' → logprob: -15.250019073486328
    6. ',' → logprob: -17.250019073486328
    7. ')`' → logprob: -17.375019073486328
    8. '),' → logprob: -17.500019073486328
    9. '`)' → logprob: -17.750019073486328
    10. ')
' → logprob: -17.750019073486328

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7212154865264893
    2. '   ' → logprob: -1.2212154865264893
    3. ' ' → logprob: -1.9712154865264893
    4. ' :' → logprob: -3.0962154865264893
    5. ',' → logprob: -4.47121524810791
    6. ')' → logprob: -5.22121524810791
    7. '  ' → logprob: -5.34621524810791
    8. '    ' → logprob: -5.34621524810791
    9. '):' → logprob: -6.47121524810791
    10. ' if' → logprob: -6.59621524810791

Token 59: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.774053692817688
    2. ' ' → logprob: -1.149053692817688
    3. ' if' → logprob: -2.2740535736083984
    4. '   ' → logprob: -2.3990535736083984
    5. '    ' → logprob: -4.649053573608398
    6. '  ' → logprob: -4.899053573608398
    7. 'n' → logprob: -5.149053573608398
    8. 'while' → logprob: -7.274053573608398
    9. 'i' → logprob: -7.399053573608398
    10. 's' → logprob: -7.524053573608398

Token 60: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3272934854030609
    2. ' s' → logprob: -1.3272935152053833
    3. 'i' → logprob: -4.702293395996094
    4. 's' → logprob: -6.077293395996094
    5. ' ' → logprob: -6.327293395996094
    6. ' not' → logprob: -7.452293395996094
    7. '  ' → logprob: -9.577293395996094
    8. ' (' → logprob: -10.202293395996094
    9. ' ' → logprob: -10.577293395996094
    10. '	i' → logprob: -11.139793395996094

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005251660477370024
    2. '[' → logprob: -5.255251884460449
    3. '[I' → logprob: -11.38025188446045
    4. ' [' → logprob: -12.63025188446045
    5. '[
' → logprob: -14.00525188446045
    6. '[int' → logprob: -14.25525188446045
    7. '   ' → logprob: -15.00525188446045
    8. '```' → logprob: -15.25525188446045
    9. ' ' → logprob: -15.75525188446045
    10. '.startswith' → logprob: -16.005250930786133

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19347836077213287
    2. ' ==' → logprob: -2.8184783458709717
    3. ' !=' → logprob: -2.9434783458709717
    4. '[' → logprob: -3.6934783458709717
    5. '==' → logprob: -4.193478584289551
    6. '!=' → logprob: -4.693478584289551
    7. ']==' → logprob: -5.068478584289551
    8. ' ]' → logprob: -5.568478584289551
    9. ']!=' → logprob: -6.818478584289551
    10. ']=='' → logprob: -6.943478584289551

Token 63: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6726142764091492
    2. '!=' → logprob: -0.7976142764091492
    3. ' ==' → logprob: -4.047614097595215
    4. ' !=' → logprob: -4.797614097595215
    5. '[' → logprob: -5.297614097595215
    6. '=' → logprob: -5.797614097595215
    7. '=='' → logprob: -5.797614097595215
    8. '!='' → logprob: -6.172614097595215
    9. 'is' → logprob: -9.297614097595215
    10. ' not' → logprob: -10.672614097595215

Token 64: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002937525510787964
    2. ''A' → logprob: -7.502937316894531
    3. '(' → logprob: -7.502937316894531
    4. '"' → logprob: -7.752937316894531
    5. ' '('' → logprob: -8.002937316894531
    6. ''L' → logprob: -8.627937316894531
    7. ''*' → logprob: -8.877937316894531
    8. ''N' → logprob: -8.877937316894531
    9. ''O' → logprob: -9.127937316894531
    10. ''T' → logprob: -9.127937316894531

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01990823820233345
    2. ' :' → logprob: -4.394908428192139
    3. '):' → logprob: -5.394908428192139
    4. ')' → logprob: -6.644908428192139
    5. ':return' → logprob: -7.769908428192139
    6. ' ' → logprob: -8.14490795135498
    7. ':
' → logprob: -8.14490795135498
    8. ' ):' → logprob: -8.26990795135498
    9. ' or' → logprob: -10.14490795135498
    10. '   ' → logprob: -10.26990795135498

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5860096216201782
    2. ' ' → logprob: -1.5860096216201782
    3. '    ' → logprob: -2.3360095024108887
    4. 'i' → logprob: -2.8360095024108887
    5. ' i' → logprob: -3.7110095024108887
    6. '   ' → logprob: -4.086009502410889
    7. ' return' → logprob: -4.461009502410889
    8. 'return' → logprob: -4.836009502410889
    9. ')' → logprob: -5.211009502410889
    10. 'raise' → logprob: -5.711009502410889

Token 67: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23247720301151276
    2. ' ' → logprob: -2.8574771881103516
    3. 'return' (adapté à ' return') → logprob: -2.9824771881103516
    4. '    ' → logprob: -3.4824771881103516
    5. ' return' → logprob: -3.7324771881103516
    6. 'n' → logprob: -4.232477188110352
    7. '   ' → logprob: -5.232477188110352
    8. ')' → logprob: -5.357477188110352
    9. ' None' → logprob: -5.357477188110352
    10. 'raise' → logprob: -5.482477188110352

Token 68: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3869096040725708
    2. ' None' → logprob: -1.1369096040725708
    3. '(None' → logprob: -10.386909484863281
    4. ',None' → logprob: -12.261909484863281
    5. 'none' → logprob: -13.761909484863281
    6. ' none' → logprob: -14.636909484863281
    7. '_None' → logprob: -14.761909484863281
    8. '_none' → logprob: -15.511909484863281
    9. 'node' → logprob: -15.761909484863281
    10. 'Node' → logprob: -15.761909484863281

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11748641729354858
    2. ' ,' → logprob: -3.2424864768981934
    3. ',None' → logprob: -3.3674864768981934
    4. ',i' → logprob: -4.117486476898193
    5. 'None' → logprob: -4.242486476898193
    6. ' None' → logprob: -5.242486476898193
    7. ' ' → logprob: -7.742486476898193
    8. 'i' → logprob: -8.242486000061035
    9. ' i' → logprob: -8.992486000061035
    10. ')' → logprob: -8.992486000061035

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269298940896988
    2. ' i' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.876930236816406
    4. '	i' → logprob: -14.876930236816406
    5. '0' → logprob: -15.126930236816406
    6. '   ' → logprob: -15.876930236816406
    7. '
' → logprob: -17.251930236816406
    8. '    ' → logprob: -17.251930236816406
    9. '_i' → logprob: -17.251930236816406
    10. '  ' → logprob: -17.501930236816406

Token 71: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5945385694503784
    2. 'i' → logprob: -0.8445385694503784
    3. ' i' → logprob: -4.969538688659668
    4. '
' → logprob: -5.344538688659668
    5. '+i' → logprob: -5.844538688659668
    6. ' +' → logprob: -7.094538688659668
    7. ' ' → logprob: -7.094538688659668
    8. '```' → logprob: -7.469538688659668
    9. '   ' → logprob: -7.844538688659668
    10. '+
' → logprob: -8.469538688659668

Token 72: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029726769775152206
    2. ' i' → logprob: -3.90472674369812
    3. ' ' → logprob: -5.779726982116699
    4. '   ' → logprob: -6.529726982116699
    5. '+' → logprob: -6.779726982116699
    6. ')' → logprob: -7.029726982116699
    7. ' (' → logprob: -7.404726982116699
    8. '(' → logprob: -7.404726982116699
    9. '
' → logprob: -8.5297269821167
    10. ' 
' → logprob: -8.5297269821167

Token 73: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.09223175048828125
    2. '   ' → logprob: -2.9672317504882812
    3. ' i' → logprob: -3.3422317504882812
    4. '	i' → logprob: -7.342231750488281
    5. '<|end|>' → logprob: -8.467231750488281
    6. '    ' → logprob: -8.592231750488281
    7. ' ' → logprob: -9.842231750488281
    8. '<|end|>' → logprob: -10.092231750488281
    9. '  ' → logprob: -10.217231750488281
    10. '    
' → logprob: -10.342231750488281

Token 74: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16918300092220306
    2. ' +=' → logprob: -2.1691830158233643
    3. '+=' → logprob: -3.2941830158233643
    4. ' +' → logprob: -5.544182777404785
    5. '=' → logprob: -8.544182777404785
    6. ' =' → logprob: -8.794182777404785
    7. ' ' → logprob: -11.669182777404785
    8. '+i' → logprob: -12.544182777404785
    9. '<|end|>' → logprob: -12.919182777404785
    10. '+='' → logprob: -13.169182777404785

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003404687449801713
    2. ' ' → logprob: -8.000340461730957
    3. '2' → logprob: -12.375340461730957
    4. '   ' → logprob: -14.625340461730957
    5. '```' → logprob: -15.625340461730957
    6. ' ' → logprob: -16.625341415405273
    7. '  ' → logprob: -16.937841415405273
    8. '3' → logprob: -17.875341415405273
    9. '۱' → logprob: -17.875341415405273
    10. '１' → logprob: -18.062841415405273

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -16.62500762939453
    4. '   ' → logprob: -17.25000762939453
    5. '2' → logprob: -18.37500762939453
    6. '(' → logprob: -19.12500762939453
    7. '  ' → logprob: -19.25000762939453
    8. '۱' → logprob: -19.31250762939453
    9. ' ' → logprob: -19.43750762939453
    10. 'len' → logprob: -19.62500762939453

Token 77: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48278316855430603
    2. ' ' → logprob: -1.8577831983566284
    3. ' if' → logprob: -1.9827831983566284
    4. ' 
' → logprob: -3.482783079147339
    5. '   ' → logprob: -4.232783317565918
    6. 'left' → logprob: -4.357783317565918
    7. 'n' → logprob: -4.857783317565918
    8. 'node' → logprob: -5.107783317565918
    9. '    
' → logprob: -5.357783317565918
    10. '
' → logprob: -6.482783317565918

Token 78: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03163163363933563
    2. ' if' → logprob: -4.4066314697265625
    3. 'node' → logprob: -4.6566314697265625
    4. 'left' → logprob: -5.5316314697265625
    5. '   ' → logprob: -6.5316314697265625
    6. '    
' → logprob: -6.6566314697265625
    7. 'n' → logprob: -6.9066314697265625
    8. ' ' → logprob: -7.5316314697265625
    9. 'token' → logprob: -8.406631469726562
    10. 'root' → logprob: -8.531631469726562

Token 79: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39442503452301025
    2. 'left' → logprob: -1.3944250345230103
    3. 'node' → logprob: -2.6444249153137207
    4. 'root' → logprob: -6.019424915313721
    5. 'l' → logprob: -6.269424915313721
    6. ' if' → logprob: -7.019424915313721
    7. 'n' → logprob: -7.769424915313721
    8. ' left' → logprob: -8.019425392150879
    9. '#' (adapté à ' #') → logprob: -8.519425392150879
    10. 'nodes' → logprob: -9.519425392150879

Token 80: ' parse' (ID: 8420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04765908047556877
    2. 'left' → logprob: -3.797659158706665
    3. ' if' → logprob: -4.422658920288086
    4. 'node' → logprob: -5.672658920288086
    5. 'root' → logprob: -5.672658920288086
    6. 'while' → logprob: -5.797658920288086
    7. ' left' → logprob: -7.422658920288086
    8. 'l' → logprob: -8.297658920288086
    9. 'token' → logprob: -8.297658920288086
    10. 'None' → logprob: -8.422658920288086

Token 81: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5376691818237305
    2. ' left' → logprob: -0.9126691818237305
    3. 'if' → logprob: -5.2876691818237305
    4. 'node' → logprob: -5.6626691818237305
    5. ' node' → logprob: -5.9126691818237305
    6. ' if' → logprob: -6.5376691818237305
    7. 'root' → logprob: -6.7876691818237305
    8. ' root' → logprob: -8.53766918182373
    9. 'token' → logprob: -9.91266918182373
    10. 'name' → logprob: -10.03766918182373

Token 82: ' child' (ID: 2320)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39794567227363586
    2. 'node' → logprob: -1.3979456424713135
    3. ',node' → logprob: -3.5229456424713135
    4. '_node' → logprob: -3.6479456424713135
    5. ' node' → logprob: -4.647945880889893
    6. ')' → logprob: -5.147945880889893
    7. 'if' → logprob: -5.522945880889893
    8. 'child' → logprob: -5.522945880889893
    9. ' if' → logprob: -7.897945880889893
    10. ' ,' → logprob: -7.897945880889893

Token 83: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6499797105789185
    2. ',node' → logprob: -1.5249797105789185
    3. 'node' → logprob: -2.024979591369629
    4. ' node' → logprob: -2.774979591369629
    5. 'left' → logprob: -4.399979591369629
    6. ' ,' → logprob: -4.399979591369629
    7. ',left' → logprob: -4.524979591369629
    8. ' if' → logprob: -4.524979591369629
    9. 'if' → logprob: -4.774979591369629
    10. '   ' → logprob: -5.899979591369629

Token 84: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.20138126611709595
    2. 'left' → logprob: -2.576381206512451
    3. ' node' → logprob: -2.826381206512451
    4. ',node' → logprob: -4.076381206512451
    5. 'if' → logprob: -4.451381206512451
    6. ',' → logprob: -5.201381206512451
    7. ' left' → logprob: -5.451381206512451
    8. ' if' → logprob: -5.576381206512451
    9. '   ' → logprob: -5.826381206512451
    10. 'child' → logprob: -7.076381206512451

Token 85: ' if' (ID: 538)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.28235188126564026
    2. 'node' → logprob: -1.5323518514633179
    3. ' left' → logprob: -3.7823519706726074
    4. ' node' → logprob: -5.032351970672607
    5. 'child' → logprob: -8.28235149383545
    6. '   ' → logprob: -8.90735149383545
    7. ',' → logprob: -9.53235149383545
    8. ',left' → logprob: -9.78235149383545
    9. 'root' → logprob: -10.28235149383545
    10. 'if' (adapté à ' if') → logprob: -10.28235149383545

Token 86: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0017096864758059382
    2. 's' → logprob: -6.376709461212158
    3. ' ' → logprob: -12.501709938049316
    4. '(s' → logprob: -13.876709938049316
    5. '	s' → logprob: -14.751709938049316
    6. ' (' → logprob: -14.939209938049316
    7. ' i' → logprob: -15.189209938049316
    8. ' not' → logprob: -15.564209938049316
    9. ' '' → logprob: -15.751709938049316
    10. ')' → logprob: -15.814209938049316

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0030995234847068787
    2. '[' → logprob: -6.50309944152832
    3. ' [' → logprob: -6.62809944152832
    4. ' ==' → logprob: -8.87809944152832
    5. ' !=' → logprob: -10.25309944152832
    6. '   ' → logprob: -10.25309944152832
    7. ' ' → logprob: -10.87809944152832
    8. '==' → logprob: -11.12809944152832
    9. '  ' → logprob: -12.00309944152832
    10. '[s' → logprob: -12.50309944152832

Token 88: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5361551642417908
    2. ' !=' → logprob: -1.2861552238464355
    3. '==' → logprob: -2.5361552238464355
    4. '!=' → logprob: -3.1611552238464355
    5. '=' → logprob: -5.0361552238464355
    6. '=='' → logprob: -6.0361552238464355
    7. ' ' → logprob: -6.6611552238464355
    8. '[' → logprob: -6.9111552238464355
    9. '!='' → logprob: -6.9111552238464355
    10. '(' → logprob: -6.9111552238464355

Token 89: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4454183578491211
    2. ' !=' → logprob: -1.445418357849121
    3. '==' → logprob: -2.695418357849121
    4. '!=' → logprob: -3.320418357849121
    5. '=='' → logprob: -4.945418357849121
    6. '=' → logprob: -5.570418357849121
    7. ' =='' → logprob: -5.945418357849121
    8. '!='' → logprob: -6.195418357849121
    9. '[' → logprob: -6.820418357849121
    10. '(' → logprob: -6.820418357849121

Token 90: ' ','' (ID: 56369)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014627646654844284
    2. ' '('' → logprob: -4.639627456665039
    3. '(' → logprob: -5.764627456665039
    4. ' '' → logprob: -7.014627456665039
    5. '"' → logprob: -7.764627456665039
    6. ' (' → logprob: -9.014627456665039
    7. ' ' → logprob: -9.764627456665039
    8. '('' → logprob: -10.389627456665039
    9. '')' → logprob: -10.514627456665039
    10. ''a' → logprob: -10.889627456665039

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43864747881889343
    2. ',' → logprob: -2.063647508621216
    3. ')' → logprob: -2.188647508621216
    4. '):' → logprob: -2.188647508621216
    5. ' :' → logprob: -7.313647270202637
    6. ' ):' → logprob: -7.313647270202637
    7. ' ' → logprob: -7.563647270202637
    8. '<|end|>' → logprob: -7.813647270202637
    9. '):
' → logprob: -7.938647270202637
    10. ' ,' → logprob: -8.063647270202637

Token 92: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5406929850578308
    2. ' None' → logprob: -1.2906930446624756
    3. 'None' → logprob: -2.0406930446624756
    4. ' 
' → logprob: -5.6656928062438965
    5. ',None' → logprob: -6.1656928062438965
    6. ' ,' → logprob: -6.1656928062438965
    7. ',' → logprob: -6.6656928062438965
    8. 'n' → logprob: -6.9156928062438965
    9. '  ' → logprob: -7.6656928062438965
    10. '   ' → logprob: -7.6656928062438965

Token 93: ' left' (ID: 3561)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7711771726608276
    2. ' None' → logprob: -0.8961771726608276
    3. 'left' (adapté à ' left') → logprob: -2.646177291870117
    4. ' left' → logprob: -3.146177291870117
    5. 'l' → logprob: -4.896177291870117
    6. '   ' → logprob: -6.521177291870117
    7. 'n' → logprob: -6.771177291870117
    8. ',None' → logprob: -6.896177291870117
    9. ' none' → logprob: -7.146177291870117
    10. ',' → logprob: -7.396177291870117

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12085343152284622
    2. ' =' → logprob: -2.2458534240722656
    3. ',' → logprob: -4.870853424072266
    4. '=None' → logprob: -8.120853424072266
    5. ' ' → logprob: -10.870853424072266
    6. '<|end|>' → logprob: -12.620853424072266
    7. ' ,' → logprob: -13.120853424072266
    8. '=null' → logprob: -13.245853424072266
    9. ',None' → logprob: -13.370853424072266
    10. ' None' → logprob: -13.370853424072266

Token 95: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.03804149478673935
    2. 'None' → logprob: -3.288041591644287
    3. ',None' → logprob: -16.788042068481445
    4. '_None' → logprob: -17.288042068481445
    5. ' none' → logprob: -17.413042068481445
    6. '(None' → logprob: -17.913042068481445
    7. ' ' → logprob: -18.288042068481445
    8. ' N' → logprob: -19.038042068481445
    9. ' No' → logprob: -19.788042068481445
    10. '.None' → logprob: -19.913042068481445

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6167433261871338
    2. ',' → logprob: -1.8667433261871338
    3. 'else' → logprob: -1.9917433261871338
    4. 'elif' → logprob: -2.741743326187134
    5. '<|end|>' → logprob: -2.741743326187134
    6. 'i' → logprob: -4.241743087768555
    7. ' else' → logprob: -4.616743087768555
    8. ',i' → logprob: -4.866743087768555
    9. '<|end|>' → logprob: -6.116743087768555
    10. '    
' → logprob: -6.866743087768555

Token 97: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3448367714881897
    2. 'elif' → logprob: -1.719836711883545
    3. '<|end|>' → logprob: -2.844836711883545
    4. ' else' → logprob: -3.594836711883545
    5. ',' → logprob: -3.969836711883545
    6. '   ' → logprob: -5.219836711883545
    7. ' elif' → logprob: -7.094836711883545
    8. '
' → logprob: -7.844836711883545
    9. '<|end|>' → logprob: -7.844836711883545
    10. '	elif' → logprob: -8.219837188720703

Token 98: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2007138878107071
    2. '   ' → logprob: -2.325713872909546
    3. '<|end|>' → logprob: -3.075713872909546
    4. 'elif' → logprob: -3.575713872909546
    5. '<|end|>' → logprob: -5.700714111328125
    6. ' i' → logprob: -5.825714111328125
    7. '
' → logprob: -7.075714111328125
    8. ' ' → logprob: -7.075714111328125
    9. '  ' → logprob: -7.450714111328125
    10. '       ' → logprob: -7.575714111328125

Token 99: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05023699626326561
    2. ' +=' → logprob: -3.300236940383911
    3. '+' → logprob: -4.42523717880249
    4. '=' → logprob: -9.050236701965332
    5. ' ' → logprob: -11.425236701965332
    6. '<|end|>' → logprob: -11.800236701965332
    7. '+='' → logprob: -12.550236701965332
    8. ' +' → logprob: -12.675236701965332
    9. '++' → logprob: -13.175236701965332
    10. ' =' → logprob: -13.300236701965332

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00760698551312089
    2. ' ' → logprob: -4.8826069831848145
    3. '2' → logprob: -14.507607460021973
    4. '0' → logprob: -14.882607460021973
    5. '3' → logprob: -17.570106506347656
    6. ' ' → logprob: -17.757606506347656
    7. '
' → logprob: -17.820106506347656
    8. '   ' → logprob: -17.820106506347656
    9. '```' → logprob: -18.070106506347656
    10. '+' → logprob: -18.382606506347656

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -16.812511444091797
    4. '
' → logprob: -17.375011444091797
    5. '```' → logprob: -17.625011444091797
    6. '2' → logprob: -17.812511444091797
    7. '   ' → logprob: -17.812511444091797
    8. '１' → logprob: -18.437511444091797
    9. '

' → logprob: -18.625011444091797
    10. '+' → logprob: -18.625011444091797

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15641674399375916
    2. 'else' → logprob: -2.156416654586792
    3. 'elif' → logprob: -3.656416654586792
    4. ' else' → logprob: -6.031416893005371
    5. '
' → logprob: -8.406416893005371
    6. ' elif' → logprob: -8.656416893005371
    7. '    
' → logprob: -9.031416893005371
    8. '<|end|>' → logprob: -9.656416893005371
    9. '	elif' → logprob: -9.656416893005371
    10. '	else' → logprob: -10.031416893005371

Token 103: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6416446566581726
    2. 'else' → logprob: -0.8916446566581726
    3. '   ' → logprob: -2.7666447162628174
    4. ' else' → logprob: -8.266644477844238
    5. 'e' → logprob: -8.391644477844238
    6. ' elif' → logprob: -9.141644477844238
    7. 'el' → logprob: -9.641644477844238
    8. ',' → logprob: -10.516644477844238
    9. '	elif' → logprob: -11.391644477844238
    10. ')' → logprob: -11.766644477844238

Token 104: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.31224146485328674
    2. 'else' (adapté à ' else') → logprob: -1.4372414350509644
    3. ' elif' → logprob: -3.937241554260254
    4. ' else' → logprob: -4.562241554260254
    5. '  ' → logprob: -8.562241554260254
    6. '   ' → logprob: -8.937241554260254
    7. ' ' → logprob: -9.062241554260254
    8. '<|end|>' → logprob: -9.187241554260254
    9. '	elif' → logprob: -9.562241554260254
    10. 'e' → logprob: -10.937241554260254

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7047871351242065
    2. ',' → logprob: -1.0797871351242065
    3. '       ' → logprob: -2.204787254333496
    4. ' ' → logprob: -4.329787254333496
    5. '   ' → logprob: -4.454787254333496
    6. ' (' → logprob: -4.829787254333496
    7. '    ' → logprob: -5.329787254333496
    8. '<|end|>' → logprob: -5.829787254333496
    9. ':
' → logprob: -6.079787254333496
    10. ' ,' → logprob: -6.079787254333496

Token 106: '       ' (ID: 309)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.36643099784851074
    2. 'left' → logprob: -1.7414309978485107
    3. '       ' → logprob: -2.4914309978485107
    4. ' node' → logprob: -3.4914309978485107
    5. 'node' → logprob: -4.11643123626709
    6. ',' → logprob: -7.86643123626709
    7. ',left' → logprob: -8.24143123626709
    8. '   ' → logprob: -8.36643123626709
    9. '(left' → logprob: -8.99143123626709
    10. 'n' → logprob: -8.99143123626709

Token 107: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.5770301818847656
    2. ' left' → logprob: -0.8270301818847656
    3. 'node' → logprob: -7.452030181884766
    4. ' node' → logprob: -8.202030181884766
    5. '   ' → logprob: -10.077030181884766
    6. '       ' → logprob: -10.202030181884766
    7. ',left' → logprob: -10.202030181884766
    8. ',' → logprob: -10.827030181884766
    9. 'root' → logprob: -10.827030181884766
    10. 'child' → logprob: -10.827030181884766

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025954778539016843
    2. ',node' → logprob: -8.375259399414062
    3. ',left' → logprob: -11.500259399414062
    4. ' ,' → logprob: -12.625259399414062
    5. ',right' → logprob: -13.000259399414062
    6. ',new' → logprob: -13.250259399414062
    7. ',n' → logprob: -13.500259399414062
    8. ',None' → logprob: -13.875259399414062
    9. ',parent' → logprob: -14.000259399414062
    10. ',next' → logprob: -14.125259399414062

Token 109: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7180601954460144
    2. ' i' → logprob: -1.0930602550506592
    3. ' next' → logprob: -1.9680602550506592
    4. 'next' → logprob: -4.21806001663208
    5. ' nxt' → logprob: -5.09306001663208
    6. ' new' → logprob: -5.71806001663208
    7. '_next' → logprob: -6.21806001663208
    8. '<|end|>' → logprob: -6.46806001663208
    9. 'rest' → logprob: -6.96806001663208
    10. 'index' → logprob: -6.96806001663208

Token 110: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6975492835044861
    2. '=' → logprob: -0.6975492835044861
    3. ' =' → logprob: -5.447549343109131
    4. ' ,' → logprob: -10.197548866271973
    5. '    ' → logprob: -11.322548866271973
    6. '   ' → logprob: -11.822548866271973
    7. ')' → logprob: -12.697548866271973
    8. '=

' → logprob: -12.822548866271973
    9. '),' → logprob: -12.947548866271973
    10. '<|end|>' → logprob: -13.197548866271973

Token 111: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.4740781784057617
    2. ' parse' → logprob: -0.9740781784057617
    3. '(parse' → logprob: -14.099078178405762
    4. '=parse' → logprob: -15.099078178405762
    5. '	parse' → logprob: -15.724078178405762
    6. 'par' → logprob: -18.974079132080078
    7. '_parse' → logprob: -19.474079132080078
    8. '.parse' → logprob: -19.599079132080078
    9. '
' → logprob: -19.724079132080078
    10. '```' → logprob: -20.724079132080078

Token 112: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.3856492842023727e-06
    2. '_t' → logprob: -13.625000953674316
    3. '_' → logprob: -16.625001907348633
    4. '_TREE' → logprob: -17.625001907348633
    5. 'tree' → logprob: -18.000001907348633
    6. '_parse' → logprob: -18.500001907348633
    7. '_node' → logprob: -18.750001907348633
    8. ' _' → logprob: -19.000001907348633
    9. '<Tree' → logprob: -19.125001907348633
    10. '```' → logprob: -20.000001907348633

Token 113: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003986144147347659
    2. 's' → logprob: -8.000398635864258
    3. '(' → logprob: -10.000398635864258
    4. ' (' → logprob: -11.000398635864258
    5. '(
' → logprob: -14.250398635864258
    6. '```' → logprob: -15.500398635864258
    7. ')' → logprob: -16.875398635864258
    8. ' ' → logprob: -17.250398635864258
    9. '`' → logprob: -17.375398635864258
    10. ' s' → logprob: -17.375398635864258

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0677613839507103
    2. 's' → logprob: -3.1927614212036133
    3. ',i' → logprob: -4.692761421203613
    4. '(i' → logprob: -4.942761421203613
    5. '(s' → logprob: -5.442761421203613
    6. ',s' → logprob: -6.192761421203613
    7. ' ,' → logprob: -7.067761421203613
    8. '(' → logprob: -7.817761421203613
    9. ')' → logprob: -8.067761421203613
    10. ' ' → logprob: -10.067761421203613

Token 115: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048408225178719
    2. ' i' → logprob: -4.511048316955566
    3. ')i' → logprob: -15.511048316955566
    4. ' ' → logprob: -16.136049270629883
    5. ')' → logprob: -16.136049270629883
    6. '	i' → logprob: -16.636049270629883
    7. '<|end|>' → logprob: -18.761049270629883
    8. '   ' → logprob: -19.761049270629883
    9. '
' → logprob: -20.136049270629883
    10. ',i' → logprob: -20.511049270629883

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023107275774236768
    2. '   ' → logprob: -9.00023078918457
    3. ' )' → logprob: -9.37523078918457
    4. ')
' → logprob: -11.12523078918457
    5. ' ' → logprob: -12.12523078918457
    6. '       ' → logprob: -14.62523078918457
    7. ')return' → logprob: -14.62523078918457
    8. '  ' → logprob: -14.87523078918457
    9. ')

' → logprob: -15.25023078918457
    10. ')i' → logprob: -15.37523078918457

Token 117: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002103625563904643
    2. ',' → logprob: -6.252103805541992
    3. '    
' → logprob: -9.377103805541992
    4. 'if' → logprob: -10.002103805541992
    5. ',
' → logprob: -11.752103805541992
    6. 'while' → logprob: -12.002103805541992
    7. '<|end|>' → logprob: -12.127103805541992
    8. '
' → logprob: -12.252103805541992
    9. ' ,' → logprob: -12.502103805541992
    10. '  
' → logprob: -12.627103805541992

Token 118: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022512251511216164
    2. 'if' (adapté à ' if') → logprob: -4.022512435913086
    3. ' if' → logprob: -6.272512435913086
    4. ',' → logprob: -6.397512435913086
    5. 'while' → logprob: -7.772512435913086
    6. ' ,' → logprob: -9.522512435913086
    7. '
' → logprob: -9.522512435913086
    8. '  ' → logprob: -9.772512435913086
    9. ' ' → logprob: -10.147512435913086
    10. ' while' → logprob: -10.397512435913086

Token 119: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007127839140594006
    2. 's' → logprob: -5.00712776184082
    3. ' i' → logprob: -8.00712776184082
    4. ' ' → logprob: -9.75712776184082
    5. 'i' → logprob: -11.63212776184082
    6. ' not' → logprob: -12.25712776184082
    7. '	s' → logprob: -12.50712776184082
    8. '   ' → logprob: -13.69462776184082
    9. '  ' → logprob: -14.31962776184082
    10. ' ' → logprob: -14.56962776184082

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0037928272504359484
    2. '[' → logprob: -6.628792762756348
    3. 's' → logprob: -7.128792762756348
    4. ',i' → logprob: -7.253792762756348
    5. ',' → logprob: -7.378792762756348
    6. 'i' → logprob: -8.753792762756348
    7. '   ' → logprob: -10.378792762756348
    8. '==' → logprob: -10.378792762756348
    9. ' ' → logprob: -10.503792762756348
    10. '  ' → logprob: -11.378792762756348

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2628048360347748
    2. ']==' → logprob: -1.5128048658370972
    3. '==' → logprob: -5.012804985046387
    4. ' ==' → logprob: -6.262804985046387
    5. ']!=' → logprob: -6.887804985046387
    6. ' ]' → logprob: -7.137804985046387
    7. ']=='' → logprob: -9.012804985046387
    8. ' !=' → logprob: -9.512804985046387
    9. '   ' → logprob: -10.012804985046387
    10. '!=' → logprob: -10.012804985046387

Token 122: ' !=' (ID: 1666)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01876024715602398
    2. ' ,' → logprob: -5.0187602043151855
    3. '','' → logprob: -5.3937602043151855
    4. '==' → logprob: -5.6437602043151855
    5. ' ==' → logprob: -6.3937602043151855
    6. '<|end|>' → logprob: -7.0187602043151855
    7. ' ' → logprob: -8.268760681152344
    8. '","' → logprob: -8.643760681152344
    9. '',' → logprob: -8.643760681152344
    10. '  ' → logprob: -8.768760681152344

Token 123: ' ','' (ID: 56369)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.2063211351633072
    2. ',' → logprob: -2.2063212394714355
    3. '',' → logprob: -2.5813212394714355
    4. '","' → logprob: -7.7063212394714355
    5. '",' → logprob: -10.081320762634277
    6. '`,`' → logprob: -10.331320762634277
    7. ' ','' → logprob: -10.581320762634277
    8. '`,' → logprob: -10.581320762634277
    9. '','=' → logprob: -10.581320762634277
    10. '   ' → logprob: -11.831320762634277

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7182570099830627
    2. ',' → logprob: -1.468256950378418
    3. '<|end|>' → logprob: -1.593256950378418
    4. '):' → logprob: -4.093256950378418
    5. '       ' → logprob: -4.343256950378418
    6. ' ' → logprob: -4.343256950378418
    7. ' ,' → logprob: -4.468256950378418
    8. ')' → logprob: -5.093256950378418
    9. '<|end|>' → logprob: -5.218256950378418
    10. '   ' → logprob: -5.343256950378418

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.562558650970459
    2. '           ' → logprob: -1.312558650970459
    3. ' i' → logprob: -2.437558650970459
    4. 'i' → logprob: -3.062558650970459
    5. '   ' → logprob: -4.562558650970459
    6. '        ' → logprob: -4.812558650970459
    7. '    ' → logprob: -5.437558650970459
    8. '	i' → logprob: -7.062558650970459
    9. '	       ' → logprob: -7.312558650970459
    10. '            ' → logprob: -7.937558650970459

Token 126: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.17577014863491058
    2. ' ' → logprob: -1.9257701635360718
    3. '    ' → logprob: -5.175770282745361
    4. 'raise' (adapté à ' raise') → logprob: -5.800770282745361
    5. ' return' → logprob: -6.050770282745361
    6. ' )' → logprob: -6.800770282745361
    7. ' 
' → logprob: -6.925770282745361
    8. '       ' → logprob: -7.425770282745361
    9. '        ' → logprob: -8.050769805908203
    10. ')' → logprob: -8.175769805908203

Token 127: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.16053301095962524
    2. 'Value' → logprob: -1.9105329513549805
    3. 'Syntax' → logprob: -8.53553295135498
    4. ' Syntax' → logprob: -9.16053295135498
    5. ' Exception' → logprob: -12.41053295135498
    6. 'Exception' → logprob: -13.66053295135498
    7. '(Value' → logprob: -14.16053295135498
    8. 'Index' → logprob: -14.78553295135498
    9. '	Value' → logprob: -15.41053295135498
    10. '_Value' → logprob: -15.41053295135498

Token 128: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00862143188714981
    2. 'rror' → logprob: -4.7586212158203125
    3. 'ror' → logprob: -11.883621215820312
    4. 'error' → logprob: -16.883621215820312
    5. 'r' → logprob: -17.133621215820312
    6. ' Error' → logprob: -18.008621215820312
    7. '_error' → logprob: -19.383621215820312
    8. 'Erro' → logprob: -20.133621215820312
    9. '    ' → logprob: -20.258621215820312
    10. '_Error' → logprob: -20.258621215820312

Token 129: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12898322939872742
    2. '("' → logprob: -2.50398325920105
    3. '('' → logprob: -3.25398325920105
    4. '("("' → logprob: -7.753983020782471
    5. '(
' → logprob: -9.503983497619629
    6. '(f' → logprob: -10.878983497619629
    7. '(",' → logprob: -10.878983497619629
    8. '"' → logprob: -10.878983497619629
    9. '("'' → logprob: -11.128983497619629
    10. '("'"' → logprob: -11.503983497619629

Token 130: 'Expected' (ID: 28041)
  Prédit: ' Expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Expected' → logprob: -0.2588508725166321
    2. ' Unexpected' → logprob: -2.6338508129119873
    3. ' expected' → logprob: -2.7588508129119873
    4. 'Expected' → logprob: -3.0088508129119873
    5. ' unexpected' → logprob: -4.758851051330566
    6. 'Unexpected' → logprob: -5.008851051330566
    7. ' Invalid' → logprob: -5.258851051330566
    8. ' Expect' → logprob: -5.633851051330566
    9. ' )' → logprob: -5.883851051330566
    10. ' "' → logprob: -6.133851051330566

Token 131: ' ','' (ID: 56369)
  Prédit: ' ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ','' → logprob: -0.13149209320545197
    2. '','' → logprob: -2.5064921379089355
    3. ' ,' → logprob: -4.3814921379089355
    4. ',' → logprob: -4.3814921379089355
    5. ' ',' → logprob: -4.5064921379089355
    6. '',' → logprob: -5.3814921379089355
    7. ' ',',' → logprob: -8.131491661071777
    8. '(','' → logprob: -8.506491661071777
    9. '","' → logprob: -8.756491661071777
    10. ' ' → logprob: -9.381491661071777

Token 132: ' at' (ID: 540)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12311787158250809
    2. ',' → logprob: -2.4981179237365723
    3. ' ")' → logprob: -3.9981179237365723
    4. '')' → logprob: -5.248117923736572
    5. ' after' → logprob: -5.623117923736572
    6. ' at' → logprob: -5.873117923736572
    7. ')' → logprob: -6.248117923736572
    8. ''' → logprob: -7.873117923736572
    9. ' ')' → logprob: -8.248117446899414
    10. ' but' → logprob: -8.373117446899414

Token 133: ' %' (ID: 1851)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014377033337950706
    2. 'i' → logprob: -4.389377117156982
    3. ' s' → logprob: -6.764377117156982
    4. 's' → logprob: -7.514377117156982
    5. ' ' → logprob: -8.764376640319824
    6. ' the' → logprob: -12.889376640319824
    7. ')' → logprob: -13.764376640319824
    8. '	i' → logprob: -14.014376640319824
    9. ',i' → logprob: -14.139376640319824
    10. '<|end|>' → logprob: -14.139376640319824

Token 134: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20146869122982025
    2. ' i' → logprob: -1.7014687061309814
    3. ' ' → logprob: -10.701468467712402
    4. ')' → logprob: -11.701468467712402
    5. 's' → logprob: -11.701468467712402
    6. '[i' → logprob: -12.201468467712402
    7. ')i' → logprob: -13.201468467712402
    8. ',i' → logprob: -13.451468467712402
    9. ' s' → logprob: -13.826468467712402
    10. ']' → logprob: -13.951468467712402

Token 135: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.07779701054096222
    2. '"' → logprob: -2.7027969360351562
    3. ' i' → logprob: -5.077796936035156
    4. 'i' → logprob: -7.077796936035156
    5. ' "%' → logprob: -8.702796936035156
    6. 's' → logprob: -8.702796936035156
    7. '"%' → logprob: -9.202796936035156
    8. '"%(' → logprob: -9.202796936035156
    9. ' s' → logprob: -9.327796936035156
    10. '%i' → logprob: -9.952796936035156

Token 136: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6048173904418945
    2. ' i' → logprob: -1.1048173904418945
    3. 'i' → logprob: -2.7298173904418945
    4. ')' → logprob: -4.1048173904418945
    5. '(i' → logprob: -4.2298173904418945
    6. ' ' → logprob: -4.3548173904418945
    7. '%' → logprob: -5.3548173904418945
    8. '%i' → logprob: -5.6048173904418945
    9. ' )' → logprob: -6.2298173904418945
    10. ' (' → logprob: -6.4798173904418945

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16022492945194244
    2. 'i' → logprob: -1.9102249145507812
    3. '(i' → logprob: -14.660224914550781
    4. '	i' → logprob: -15.785224914550781
    5. ')i' → logprob: -16.03522491455078
    6. ',i' → logprob: -16.53522491455078
    7. ' ' → logprob: -17.28522491455078
    8. '_i' → logprob: -17.41022491455078
    9. ')' → logprob: -18.16022491455078
    10. '{i' → logprob: -18.41022491455078

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01924823224544525
    2. ')
' → logprob: -4.769248008728027
    3. '   ' → logprob: -5.019248008728027
    4. ' )' → logprob: -6.019248008728027
    5. '       ' → logprob: -6.644248008728027
    6. ' )
' → logprob: -8.769248008728027
    7. '')' → logprob: -10.894248008728027
    8. '")' → logprob: -11.394248008728027
    9. '    ' → logprob: -11.769248008728027
    10. ',' → logprob: -12.019248008728027

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004447920247912407
    2. 'i' → logprob: -5.879447937011719
    3. '<|end|>' → logprob: -6.879447937011719
    4. ' i' → logprob: -7.879447937011719
    5. '       ' → logprob: -9.254447937011719
    6. '<|end|>' → logprob: -10.129447937011719
    7. '	i' → logprob: -10.504447937011719
    8. ',' → logprob: -10.504447937011719
    9. ',i' → logprob: -10.629447937011719
    10. '  ' → logprob: -12.254447937011719

Token 140: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3855065107345581
    2. 'i' (adapté à ' i') → logprob: -1.260506510734558
    3. ' i' → logprob: -3.3855066299438477
    4. '	i' → logprob: -7.260506629943848
    5. '<|end|>' → logprob: -7.635506629943848
    6. '       ' → logprob: -8.010506629943848
    7. '  ' → logprob: -8.260506629943848
    8. ' ' → logprob: -8.510506629943848
    9. ',i' → logprob: -8.635506629943848
    10. ',' → logprob: -9.010506629943848

Token 141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2015620619058609
    2. ' +=' → logprob: -1.7015620470046997
    3. '+' → logprob: -8.82656192779541
    4. ']+=' → logprob: -13.70156192779541
    5. '=' → logprob: -14.70156192779541
    6. ' +' → logprob: -15.82656192779541
    7. '+='' → logprob: -16.451562881469727
    8. '+="' → logprob: -16.451562881469727
    9. ')' → logprob: -16.701562881469727
    10. '++' → logprob: -17.326562881469727

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.630233764648438
    4. '   ' → logprob: -19.130233764648438
    5. '0' → logprob: -19.192733764648438
    6. '１' → logprob: -19.255233764648438
    7. '```' → logprob: -19.317733764648438
    8. '
' → logprob: -20.817733764648438
    9. '۱' → logprob: -21.067733764648438
    10. '2' → logprob: -21.130233764648438

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.37500762939453
    4. '１' → logprob: -19.25000762939453
    5. '```' → logprob: -19.31250762939453
    6. '0' → logprob: -19.62500762939453
    7. '
' → logprob: -20.06250762939453
    8. '  ' → logprob: -20.50000762939453
    9. '

' → logprob: -21.12500762939453
    10. '۱' → logprob: -21.18750762939453

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768471956253052
    2. '#' → logprob: -0.8268471956253052
    3. 'right' → logprob: -7.326847076416016
    4. '```' → logprob: -8.451847076416016
    5. '       ' → logprob: -11.201847076416016
    6. 'if' → logprob: -11.451847076416016
    7. ' #' → logprob: -12.826847076416016
    8. '	' → logprob: -12.951847076416016
    9. '    
' → logprob: -13.576847076416016
    10. '
' → logprob: -14.076847076416016

Token 145: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0833502933382988
    2. '   ' → logprob: -2.58335018157959
    3. 'right' → logprob: -5.45835018157959
    4. '```' → logprob: -9.08335018157959
    5. 'if' → logprob: -10.20835018157959
    6. ' #' → logprob: -10.95835018157959
    7. '
' → logprob: -11.95835018157959
    8. '       ' → logprob: -12.70835018157959
    9. ' right' → logprob: -13.08335018157959
    10. '    
' → logprob: -13.08335018157959

Token 146: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3245224952697754
    2. 'right' → logprob: -1.9495224952697754
    3. 'if' → logprob: -2.0745224952697754
    4. '   ' → logprob: -4.699522495269775
    5. '```' → logprob: -10.824522018432617
    6. ' #' → logprob: -11.199522018432617
    7. ' if' → logprob: -11.449522018432617
    8. ' right' → logprob: -11.699522018432617
    9. '    
' → logprob: -12.574522018432617
    10. 'Right' → logprob: -12.949522018432617

Token 147: ' parse' (ID: 8420)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7675065994262695
    2. '#' → logprob: -0.8925065994262695
    3. 'if' → logprob: -2.1425065994262695
    4. '   ' → logprob: -4.7675065994262695
    5. ' right' → logprob: -8.51750659942627
    6. ' if' → logprob: -10.26750659942627
    7. ' #' → logprob: -10.39250659942627
    8. '```' → logprob: -11.14250659942627
    9. 'Right' → logprob: -11.26750659942627
    10. 'parse' → logprob: -11.26750659942627

Token 148: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00012976066500414163
    2. ' right' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.250129699707031
    4. 'root' → logprob: -14.500129699707031
    5. '#' → logprob: -15.250129699707031
    6. '
' → logprob: -15.500129699707031
    7. '	right' → logprob: -16.25012969970703
    8. 'the' → logprob: -16.37512969970703
    9. ' ' → logprob: -16.62512969970703
    10. '

' → logprob: -17.00012969970703

Token 149: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.18419671058654785
    2. ' child' → logprob: -1.8091967105865479
    3. '   ' → logprob: -6.559196472167969
    4. 'if' → logprob: -7.059196472167969
    5. '	child' → logprob: -7.309196472167969
    6. ' if' → logprob: -7.559196472167969
    7. '_child' → logprob: -7.809196472167969
    8. ',' → logprob: -8.059196472167969
    9. ')' → logprob: -9.559196472167969
    10. '(child' → logprob: -9.684196472167969

Token 150: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027661988511681557
    2. '   ' → logprob: -3.6526620388031006
    3. ' if' → logprob: -6.6526618003845215
    4. '<|end|>' → logprob: -9.77766227722168
    5. '	if' → logprob: -12.65266227722168
    6. '  ' → logprob: -12.77766227722168
    7. ',' → logprob: -12.90266227722168
    8. '```' → logprob: -13.40266227722168
    9. 'If' → logprob: -13.90266227722168
    10. ' ' → logprob: -14.52766227722168

Token 151: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02342168241739273
    2. '   ' → logprob: -3.7734217643737793
    3. ' if' → logprob: -8.648421287536621
    4. '```' → logprob: -15.023421287536621
    5. '	if' → logprob: -15.273421287536621
    6. '  ' → logprob: -16.398422241210938
    7. ' ' → logprob: -17.148422241210938
    8. '<|end|>' → logprob: -17.398422241210938
    9. 'If' → logprob: -17.773422241210938
    10. ',' → logprob: -18.023422241210938

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016229959146585315
    2. '   ' → logprob: -8.750162124633789
    3. ' if' → logprob: -12.500162124633789
    4. '	if' → logprob: -17.00016212463379
    5. '```' → logprob: -18.00016212463379
    6. '    
' → logprob: -19.12516212463379
    7. 'If' → logprob: -19.25016212463379
    8. '  ' → logprob: -19.50016212463379
    9. ';if' → logprob: -20.00016212463379
    10. ' ' → logprob: -21.00016212463379

Token 153: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34846970438957214
    2. ' s' → logprob: -1.2234697341918945
    3. '   ' → logprob: -11.223469734191895
    4. '(s' → logprob: -12.098469734191895
    5. ' ' → logprob: -13.473469734191895
    6. ')' → logprob: -13.723469734191895
    7. ',' → logprob: -14.223469734191895
    8. '`s' → logprob: -14.723469734191895
    9. ' (' → logprob: -15.098469734191895
    10. '    ' → logprob: -15.223469734191895

Token 154: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[s' → logprob: -12.250008583068848
    3. '[' → logprob: -13.375008583068848
    4. 's' → logprob: -14.250008583068848
    5. 'i' → logprob: -14.250008583068848
    6. '[
' → logprob: -15.250008583068848
    7. '[I' → logprob: -16.12500762939453
    8. ' [' → logprob: -16.25000762939453
    9. '
' → logprob: -16.50000762939453
    10. '```' → logprob: -16.75000762939453

Token 155: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35576146841049194
    2. '==' → logprob: -1.3557615280151367
    3. ']' → logprob: -3.4807615280151367
    4. ']==' → logprob: -4.855761528015137
    5. '=' → logprob: -6.230761528015137
    6. ')' → logprob: -7.855761528015137
    7. ' ]' → logprob: -8.355761528015137
    8. ' ' → logprob: -8.730761528015137
    9. ')==' → logprob: -9.480761528015137
    10. ' =' → logprob: -10.105761528015137

Token 156: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5765070915222168
    2. ' ==' → logprob: -0.8265070915222168
    3. '=' → logprob: -7.826507091522217
    4. '=='' → logprob: -9.076507568359375
    5. ' ' → logprob: -11.201507568359375
    6. ' =' → logprob: -12.076507568359375
    7. '==
' → logprob: -12.076507568359375
    8. ',' → logprob: -12.201507568359375
    9. ')==' → logprob: -12.451507568359375
    10. ')' → logprob: -12.451507568359375

Token 157: ' ')' (ID: 35910)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.9587318301200867
    2. '')' → logprob: -0.9587318301200867
    3. '','' → logprob: -1.4587318897247314
    4. ''' → logprob: -7.958731651306152
    5. ')' → logprob: -8.583731651306152
    6. ''):' → logprob: -9.958731651306152
    7. ',' → logprob: -10.083731651306152
    8. '',(' → logprob: -11.208731651306152
    9. '']' → logprob: -11.458731651306152
    10. '",' → logprob: -11.958731651306152

Token 158: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26761865615844727
    2. ':' → logprob: -1.5176186561584473
    3. '   ' → logprob: -4.767618656158447
    4. '       ' → logprob: -5.017618656158447
    5. '    ' → logprob: -9.267618179321289
    6. '{
' → logprob: -9.767618179321289
    7. ',' → logprob: -9.892618179321289
    8. '):
' → logprob: -10.017618179321289
    9. ':

' → logprob: -10.392618179321289
    10. '{' → logprob: -10.642618179321289

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5248875021934509
    2. 'None' → logprob: -1.5248875617980957
    3. '   ' → logprob: -1.7748875617980957
    4. ' None' → logprob: -4.524887561798096
    5. 'right' → logprob: -5.149887561798096
    6. ' right' → logprob: -6.274887561798096
    7. '
' → logprob: -6.399887561798096
    8. '    
' → logprob: -8.649887084960938
    9. 'left' → logprob: -8.774887084960938
    10. 'return' → logprob: -9.024887084960938

Token 160: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.06414862722158432
    2. ' right' → logprob: -2.8141486644744873
    3. '       ' → logprob: -6.189148426055908
    4. '   ' → logprob: -9.939148902893066
    5. '	right' → logprob: -10.064148902893066
    6. 'return' → logprob: -10.939148902893066
    7. '
' → logprob: -11.564148902893066
    8. 'Right' → logprob: -13.439148902893066
    9. ',right' → logprob: -13.689148902893066
    10. '    ' → logprob: -13.939148902893066

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47418326139450073
    2. '=' → logprob: -0.9741832613945007
    3. ',' → logprob: -9.349183082580566
    4. '=None' → logprob: -10.974183082580566
    5. ')' → logprob: -14.349183082580566
    6. ' ' → logprob: -14.849183082580566
    7. '<|end|>' → logprob: -15.224183082580566
    8. ' None' → logprob: -15.349183082580566
    9. 'None' → logprob: -15.474183082580566
    10. 's' → logprob: -16.599184036254883

Token 162: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20141500234603882
    2. ' None' → logprob: -1.7014150619506836
    3. '_None' → logprob: -14.326415061950684
    4. '(None' → logprob: -14.701415061950684
    5. ',None' → logprob: -14.951415061950684
    6. '=None' → logprob: -15.451415061950684
    7. 'none' → logprob: -16.951414108276367
    8. '.None' → logprob: -17.076414108276367
    9. '_none' → logprob: -17.951414108276367
    10. '
' → logprob: -18.451414108276367

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035884641110897064
    2. '   ' → logprob: -4.035884857177734
    3. ',' → logprob: -4.410884857177734
    4. '<|end|>' → logprob: -5.410884857177734
    5. '
' → logprob: -8.285884857177734
    6. ',
' → logprob: -8.910884857177734
    7. '<|end|>' → logprob: -9.160884857177734
    8. ' ,' → logprob: -9.285884857177734
    9. ',i' → logprob: -9.285884857177734
    10. ' ' → logprob: -9.785884857177734

Token 164: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012486934661865234
    2. '   ' → logprob: -5.262486934661865
    3. ',' → logprob: -5.637486934661865
    4. '<|end|>' → logprob: -5.762486934661865
    5. '<|end|>' → logprob: -8.512487411499023
    6. ',i' → logprob: -10.012487411499023
    7. ',
' → logprob: -10.012487411499023
    8. '	' → logprob: -10.012487411499023
    9. '	   ' → logprob: -10.262487411499023
    10. '
' → logprob: -10.887487411499023

Token 165: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4965952932834625
    2. ' else' → logprob: -1.1215952634811401
    3. '   ' → logprob: -2.9965953826904297
    4. ',' → logprob: -5.12159538269043
    5. '	else' → logprob: -5.12159538269043
    6. '       ' → logprob: -6.12159538269043
    7. '<|end|>' → logprob: -6.99659538269043
    8. ' ,' → logprob: -9.37159538269043
    9. '  ' → logprob: -9.37159538269043
    10. ',
' → logprob: -9.49659538269043

Token 166: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08596409112215042
    2. ',right' → logprob: -3.5859642028808594
    3. 'right' → logprob: -3.9609642028808594
    4. '   ' → logprob: -4.335964202880859
    5. '       ' → logprob: -5.085964202880859
    6. ':' → logprob: -5.210964202880859
    7. ',
' → logprob: -5.335964202880859
    8. ' right' → logprob: -5.460964202880859
    9. ':
' → logprob: -7.210964202880859
    10. ' ,' → logprob: -7.835964202880859

Token 167: '       ' (ID: 309)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4825457036495209
    2. 'right' → logprob: -0.9825457334518433
    3. '       ' → logprob: -5.232545852661133
    4. '   ' → logprob: -6.232545852661133
    5. '	right' → logprob: -7.607545852661133
    6. ',right' → logprob: -8.232545852661133
    7. '(right' → logprob: -8.357545852661133
    8. '    ' → logprob: -10.232545852661133
    9. '[right' → logprob: -10.732545852661133
    10. ',' → logprob: -10.857545852661133

Token 168: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.10021346807479858
    2. ' right' → logprob: -2.3502135276794434
    3. '	right' → logprob: -12.600213050842285
    4. '(right' → logprob: -13.475213050842285
    5. ',right' → logprob: -13.975213050842285
    6. '       ' → logprob: -14.350213050842285
    7. '[right' → logprob: -15.600213050842285
    8. 'Right' → logprob: -15.850213050842285
    9. '.right' → logprob: -16.1002140045166
    10. '   ' → logprob: -16.9752140045166

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',right' → logprob: -11.500018119812012
    3. ' ,' → logprob: -11.875018119812012
    4. ',
' → logprob: -15.125018119812012
    5. ',left' → logprob: -15.250018119812012
    6. ',r' → logprob: -16.750017166137695
    7. ',new' → logprob: -17.000017166137695
    8. '‌,' → logprob: -17.250017166137695
    9. 'right' → logprob: -17.625017166137695
    10. ',i' → logprob: -17.750017166137695

Token 170: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890631258487701
    2. 'i' → logprob: -2.578906297683716
    3. '	i' → logprob: -12.078906059265137
    4. '<|end|>' → logprob: -12.078906059265137
    5. ',i' → logprob: -13.703906059265137
    6. ' ' → logprob: -13.953906059265137
    7. ' 
' → logprob: -14.203906059265137
    8. 's' → logprob: -14.453906059265137
    9. '<|end|>' → logprob: -14.453906059265137
    10. ' ' → logprob: -14.953906059265137

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20405897498130798
    2. ',' → logprob: -2.079058885574341
    3. ' =' → logprob: -2.829058885574341
    4. ' ,' → logprob: -7.70405912399292
    5. '    ' → logprob: -12.329058647155762
    6. '+=' → logprob: -12.329058647155762
    7. '   ' → logprob: -12.704058647155762
    8. ' +=' → logprob: -13.329058647155762
    9. ' ' → logprob: -13.829058647155762
    10. ')' → logprob: -13.954058647155762

Token 172: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.038042180240154266
    2. ' parse' → logprob: -3.2880420684814453
    3. '(parse' → logprob: -14.538042068481445
    4. '	parse' → logprob: -15.913042068481445
    5. '=parse' → logprob: -17.288042068481445
    6. '.parse' → logprob: -19.413042068481445
    7. 'par' → logprob: -19.788042068481445
    8. '_parse' → logprob: -19.913042068481445
    9. 'parser' → logprob: -21.663042068481445
    10. ' ' → logprob: -23.788042068481445

Token 173: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -9.014684110297821e-06
    2. 'parse' → logprob: -12.250008583068848
    3. 'tree' → logprob: -12.500008583068848
    4. '_parse' → logprob: -15.125008583068848
    5. '_t' → logprob: -15.750008583068848
    6. '_TREE' → logprob: -17.250009536743164
    7. '```' → logprob: -18.250009536743164
    8. 'Tree' → logprob: -18.250009536743164
    9. ' tree' → logprob: -18.750009536743164
    10. '_' → logprob: -19.125009536743164

Token 174: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.62501049041748
    4. 's' → logprob: -13.87501049041748
    5. '```' → logprob: -17.500009536743164
    6. '(
' → logprob: -17.625009536743164
    7. ')' → logprob: -18.750009536743164
    8. ' s' → logprob: -19.125009536743164
    9. ',' → logprob: -19.375009536743164
    10. ' ' → logprob: -20.000009536743164

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005935193970799446
    2. ',s' → logprob: -5.755935192108154
    3. 's' → logprob: -6.255935192108154
    4. '(s' → logprob: -7.630935192108154
    5. ' ,' → logprob: -8.380935668945312
    6. ' s' → logprob: -9.380935668945312
    7. '(' → logprob: -11.130935668945312
    8. ')' → logprob: -11.880935668945312
    9. ',i' → logprob: -11.880935668945312
    10. ')s' → logprob: -13.880935668945312

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007449256256222725
    2. ' i' → logprob: -5.007449150085449
    3. 's' → logprob: -7.257449150085449
    4. ' s' → logprob: -10.50744915008545
    5. ')' → logprob: -14.25744915008545
    6. ')i' → logprob: -15.50744915008545
    7. ' ' → logprob: -15.75744915008545
    8. ',i' → logprob: -16.507450103759766
    9. '(i' → logprob: -16.632450103759766
    10. '	i' → logprob: -16.882450103759766

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005705743096768856
    2. '   ' → logprob: -5.380705833435059
    3. ')
' → logprob: -7.255705833435059
    4. ',' → logprob: -8.255705833435059
    5. ' )' → logprob: -9.505705833435059
    6. '       ' → logprob: -10.755705833435059
    7. '),' → logprob: -12.255705833435059
    8. '<|end|>' → logprob: -12.505705833435059
    9. ' ' → logprob: -12.755705833435059
    10. ',)' → logprob: -13.005705833435059

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07352375984191895
    2. '       ' → logprob: -2.823523759841919
    3. '<|end|>' → logprob: -4.69852352142334
    4. ',' → logprob: -6.44852352142334
    5. '<|end|>' → logprob: -8.32352352142334
    6. ')' → logprob: -8.94852352142334
    7. '	' → logprob: -9.57352352142334
    8. '
' → logprob: -9.69852352142334
    9. '    ' → logprob: -9.82352352142334
    10. ' ' → logprob: -10.44852352142334

Token 179: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001416069339029491
    2. ' if' → logprob: -7.251416206359863
    3. ' i' → logprob: -8.376416206359863
    4. ')' → logprob: -8.751416206359863
    5. 'i' → logprob: -9.126416206359863
    6. 'if' (adapté à ' if') → logprob: -9.251416206359863
    7. '    ' → logprob: -10.126416206359863
    8. ',' → logprob: -10.751416206359863
    9. '<|end|>' → logprob: -11.501416206359863
    10. '       ' → logprob: -11.626416206359863

Token 180: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05489841848611832
    2. 's' → logprob: -2.929898500442505
    3. ' i' → logprob: -11.554898262023926
    4. 'i' → logprob: -12.929898262023926
    5. ' not' → logprob: -13.679898262023926
    6. ' ' → logprob: -14.179898262023926
    7. '   ' → logprob: -14.429898262023926
    8. '	s' → logprob: -14.804898262023926
    9. '    ' → logprob: -15.179898262023926
    10. ' ' → logprob: -15.179898262023926

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.0590548703912646e-05
    2. '[' → logprob: -10.625030517578125
    3. '[s' → logprob: -12.875030517578125
    4. 'i' → logprob: -14.000030517578125
    5. '[I' → logprob: -14.000030517578125
    6. ' [' → logprob: -14.125030517578125
    7. 's' → logprob: -14.625030517578125
    8. '```' → logprob: -15.125030517578125
    9. ' ' → logprob: -15.875030517578125
    10. '[
' → logprob: -15.875030517578125

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047221049666404724
    2. ')' → logprob: -3.5472209453582764
    3. ' ]' → logprob: -5.2972211837768555
    4. ']==' → logprob: -5.6722211837768555
    5. ' !=' → logprob: -5.9222211837768555
    6. ' ==' → logprob: -6.2972211837768555
    7. '==' → logprob: -6.6722211837768555
    8. ']!=' → logprob: -7.1722211837768555
    9. ' )' → logprob: -7.2972211837768555
    10. '']' → logprob: -7.7972211837768555

Token 183: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31826844811439514
    2. ' !=' → logprob: -1.6932684183120728
    3. ' ==' → logprob: -2.9432685375213623
    4. '==' → logprob: -3.8182685375213623
    5. '!=' → logprob: -4.693268299102783
    6. ' )' → logprob: -6.443268299102783
    7. '=' → logprob: -6.568268299102783
    8. ']' → logprob: -7.193268299102783
    9. '')' → logprob: -7.693268299102783
    10. ' ' → logprob: -8.818268775939941

Token 184: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07176106423139572
    2. ')' → logprob: -2.696761131286621
    3. ' ')'' → logprob: -6.446761131286621
    4. ' ')' → logprob: -8.571761131286621
    5. '")' → logprob: -10.446761131286621
    6. '   ' → logprob: -12.446761131286621
    7. '']' → logprob: -12.696761131286621
    8. '	' → logprob: -13.321761131286621
    9. ''):' → logprob: -13.446761131286621
    10. ' ' → logprob: -13.446761131286621

Token 185: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5893319845199585
    2. '   ' → logprob: -1.5893319845199585
    3. ')' → logprob: -2.214332103729248
    4. '):' → logprob: -2.714332103729248
    5. ':
' → logprob: -2.839332103729248
    6. '):
' → logprob: -5.464332103729248
    7. '       ' → logprob: -6.589332103729248
    8. ' :' → logprob: -8.21433162689209
    9. ' ' → logprob: -8.71433162689209
    10. ')
' → logprob: -8.83933162689209

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4315715730190277
    2. '   ' → logprob: -1.05657160282135
    3. ' i' → logprob: -6.3065714836120605
    4. '    ' → logprob: -7.6815714836120605
    5. ')' → logprob: -8.181571960449219
    6. 'i' → logprob: -9.056571960449219
    7. ' ' → logprob: -10.181571960449219
    8. ' raise' → logprob: -10.431571960449219
    9. '     ' → logprob: -10.806571960449219
    10. '      ' → logprob: -11.056571960449219

Token 187: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0032095611095428467
    2. 'raise' (adapté à ' raise') → logprob: -6.128209590911865
    3. '    ' → logprob: -7.253209590911865
    4. '       ' → logprob: -8.628209114074707
    5. '   ' → logprob: -9.878209114074707
    6. '        ' → logprob: -10.378209114074707
    7. '	raise' → logprob: -10.378209114074707
    8. ' i' → logprob: -11.503209114074707
    9. ' return' → logprob: -12.128209114074707
    10. ' ' → logprob: -12.128209114074707

Token 188: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0076176258735358715
    2. 'Value' → logprob: -4.882617473602295
    3. '	Value' → logprob: -12.132617950439453
    4. ' value' → logprob: -13.007617950439453
    5. ' ' → logprob: -13.007617950439453
    6. '_Value' → logprob: -14.507617950439453
    7. '_value' → logprob: -14.757617950439453
    8. '.Value' → logprob: -15.132617950439453
    9. ' ' → logprob: -15.257617950439453
    10. ' Val' → logprob: -16.757617950439453

Token 189: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.1041145626222715e-05
    2. 'Value' → logprob: -11.625011444091797
    3. 'rror' → logprob: -13.250011444091797
    4. ' Error' → logprob: -15.375011444091797
    5. 'Warning' → logprob: -18.500011444091797
    6. ' ' → logprob: -19.875011444091797
    7. 'Val' → logprob: -20.250011444091797
    8. 'error' → logprob: -20.375011444091797
    9. 'Erro' → logprob: -20.375011444091797
    10. 'LError' → logprob: -20.500011444091797

Token 190: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06210829317569733
    2. '(' → logprob: -2.812108278274536
    3. '(
' → logprob: -8.937108039855957
    4. '("("' → logprob: -12.562108039855957
    5. '('' → logprob: -13.187108039855957
    6. '"' → logprob: -13.562108039855957
    7. '(f' → logprob: -14.562108039855957
    8. ' ("' → logprob: -14.937108039855957
    9. '   ' → logprob: -15.312108039855957
    10. ' ' → logprob: -15.312108039855957

Token 191: 'Expected' (ID: 28041)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30598390102386475
    2. '")' → logprob: -1.4309839010238647
    3. ')i' → logprob: -4.930984020233154
    4. '')' → logprob: -5.430984020233154
    5. ')")' → logprob: -5.555984020233154
    6. '   ' → logprob: -5.930984020233154
    7. ' )' → logprob: -6.180984020233154
    8. ')"' → logprob: -7.555984020233154
    9. ' ' → logprob: -7.680984020233154
    10. ')
' → logprob: -7.680984020233154

Token 192: ' ')'' (ID: 198756)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.18536414206027985
    2. ' ')'' → logprob: -1.8103641271591187
    3. ')' → logprob: -5.560364246368408
    4. ''' → logprob: -7.435364246368408
    5. ' ' → logprob: -8.06036376953125
    6. ' ')' → logprob: -8.68536376953125
    7. '   ' → logprob: -9.06036376953125
    8. 's' → logprob: -9.31036376953125
    9. '")' → logprob: -9.43536376953125
    10. ' )' → logprob: -9.68536376953125

Token 193: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0022386356722563505
    2. ')' → logprob: -6.627238750457764
    3. ' ' → logprob: -7.377238750457764
    4. ' a' → logprob: -8.877238273620605
    5. ' )' → logprob: -9.252238273620605
    6. ',' → logprob: -11.002238273620605
    7. 'at' → logprob: -11.502238273620605
    8. '")' → logprob: -11.627238273620605
    9. '"' → logprob: -12.752238273620605
    10. '   ' → logprob: -12.877238273620605

Token 194: ' %' (ID: 1851)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003428769763559103
    2. 'i' → logprob: -5.753428936004639
    3. ' %' → logprob: -9.12842845916748
    4. ' ' → logprob: -9.12842845916748
    5. '%i' → logprob: -11.12842845916748
    6. ')' → logprob: -11.62842845916748
    7. 's' → logprob: -12.75342845916748
    8. ' s' → logprob: -13.12842845916748
    9. ' )' → logprob: -13.12842845916748
    10. '%' → logprob: -13.25342845916748

Token 195: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048104871064424515
    2. ' i' → logprob: -3.173104763031006
    3. ')' → logprob: -5.673104763031006
    4. ' ' → logprob: -6.548104763031006
    5. '<|end|>' → logprob: -9.173105239868164
    6. ']' → logprob: -9.798105239868164
    7. '
' → logprob: -11.673105239868164
    8. ' )' → logprob: -11.798105239868164
    9. 'd' → logprob: -12.173105239868164
    10. '  ' → logprob: -12.173105239868164

Token 196: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.04174116253852844
    2. '"' → logprob: -3.291741132736206
    3. ')"' → logprob: -5.916741371154785
    4. ')' → logprob: -7.291741371154785
    5. ' )' → logprob: -8.291741371154785
    6. '   ' → logprob: -10.541741371154785
    7. '```' → logprob: -11.416741371154785
    8. ' ' → logprob: -12.041741371154785
    9. ' i' → logprob: -12.166741371154785
    10. ',' → logprob: -12.166741371154785

Token 197: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22161874175071716
    2. ' )' → logprob: -1.7216187715530396
    3. ' ' → logprob: -4.47161865234375
    4. ' i' → logprob: -5.34661865234375
    5. ' %' → logprob: -6.47161865234375
    6. ' }' → logprob: -7.47161865234375
    7. ' )
' → logprob: -8.34661865234375
    8. ',' → logprob: -8.59661865234375
    9. ' s' → logprob: -8.59661865234375
    10. '%' → logprob: -8.59661865234375

Token 198: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029750952497124672
    2. 'i' → logprob: -3.5297510623931885
    3. ')' → logprob: -16.02975082397461
    4. 's' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.52975082397461
    6. ',i' → logprob: -17.02975082397461
    7. '	i' → logprob: -17.02975082397461
    8. ')i' → logprob: -17.02975082397461
    9. ',' → logprob: -17.90475082397461
    10. '(i' → logprob: -18.40475082397461

Token 199: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03535328432917595
    2. ')' → logprob: -3.410353183746338
    3. ')
' → logprob: -6.410353183746338
    4. ')i' → logprob: -10.160353660583496
    5. '
' → logprob: -12.535353660583496
    6. '       ' → logprob: -12.660353660583496
    7. ' i' → logprob: -12.785353660583496
    8. 'i' → logprob: -12.785353660583496
    9. '<|end|>' → logprob: -13.285353660583496
    10. ',' → logprob: -13.285353660583496

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009390931227244437
    2. ' i' → logprob: -7.500938892364502
    3. 'i' → logprob: -7.875938892364502
    4. '	i' → logprob: -12.50093936920166
    5. '       ' → logprob: -13.62593936920166
    6. ')' → logprob: -14.50093936920166
    7. '<|end|>' → logprob: -15.25093936920166
    8. ',i' → logprob: -15.75093936920166
    9. '    
' → logprob: -15.75093936920166
    10. '
' → logprob: -16.875938415527344

Token 201: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015112699009478092
    2. 'i' (adapté à ' i') → logprob: -4.51511287689209
    3. ' i' → logprob: -5.51511287689209
    4. '	i' → logprob: -11.26511287689209
    5. '       ' → logprob: -12.14011287689209
    6. 'return' → logprob: -12.26511287689209
    7. ' return' → logprob: -13.01511287689209
    8. ',i' → logprob: -13.51511287689209
    9. '    
' → logprob: -13.76511287689209
    10. '  ' → logprob: -14.14011287689209

Token 202: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3877161145210266
    2. ' +=' → logprob: -1.3877160549163818
    3. '+' → logprob: -2.637716054916382
    4. ' +' → logprob: -8.637716293334961
    5. '   ' → logprob: -10.637716293334961
    6. '=' → logprob: -11.137716293334961
    7. '+
' → logprob: -11.887716293334961
    8. ']+=' → logprob: -14.137716293334961
    9. '    ' → logprob: -14.637716293334961
    10. ' ' → logprob: -14.887716293334961

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.129077911376953
    4. '```' → logprob: -17.254077911376953
    5. '+' → logprob: -18.754077911376953
    6. '(' → logprob: -18.941577911376953
    7. '１' → logprob: -19.066577911376953
    8. ')' → logprob: -19.191577911376953
    9. '`' → logprob: -19.379077911376953
    10. '0' → logprob: -19.441577911376953

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -18.375
    5. '
' → logprob: -19.375
    6. '0' → logprob: -19.875
    7. '１' → logprob: -19.9375
    8. '`' → logprob: -20.6875
    9. '۱' → logprob: -21.125
    10. '  ' → logprob: -21.1875

Token 205: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00121737876906991
    2. 'return' → logprob: -7.376217365264893
    3. ' return' → logprob: -7.626217365264893
    4. '
' → logprob: -10.12621784210205
    5. '    
' → logprob: -10.25121784210205
    6. '	return' → logprob: -10.87621784210205
    7. '   ' → logprob: -13.12621784210205
    8. ':return' → logprob: -13.25121784210205
    9. '```' → logprob: -13.25121784210205
    10. '<|end|>' → logprob: -14.00121784210205

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004800048773176968
    2. 'return' → logprob: -8.250479698181152
    3. ' return' → logprob: -8.500479698181152
    4. '	return' → logprob: -12.000479698181152
    5. '    
' → logprob: -12.750479698181152
    6. '
' → logprob: -13.000479698181152
    7. '   ' → logprob: -13.000479698181152
    8. '```' → logprob: -14.625479698181152
    9. '       ' → logprob: -15.125479698181152
    10. ':return' → logprob: -15.375479698181152

Token 207: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39206835627555847
    2. 'return' (adapté à ' return') → logprob: -1.1420683860778809
    3. ' return' → logprob: -5.267068386077881
    4. '	return' → logprob: -11.267067909240723
    5. '
' → logprob: -12.142067909240723
    6. '    
' → logprob: -12.642067909240723
    7. 'node' → logprob: -13.642067909240723
    8. '  ' → logprob: -14.517067909240723
    9. '       ' → logprob: -14.767067909240723
    10. '   ' → logprob: -14.892067909240723

Token 208: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.20141635835170746
    2. ' Node' → logprob: -1.7014163732528687
    3. '	Node' → logprob: -13.576416015625
    4. '(Node' → logprob: -13.701416015625
    5. '   ' → logprob: -15.201416015625
    6. ' ' → logprob: -16.076416015625
    7. '_node' → logprob: -16.201416015625
    8. '_Node' → logprob: -16.201416015625
    9. '
' → logprob: -17.201416015625
    10. 'node' → logprob: -18.076416015625

Token 209: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0005552975926548243
    2. '(' → logprob: -7.500555515289307
    3. '(le' → logprob: -14.125555038452148
    4. 'left' → logprob: -14.500555038452148
    5. '(
' → logprob: -14.500555038452148
    6. ' (' → logprob: -15.125555038452148
    7. ',left' → logprob: -16.12555503845215
    8. '(lhs' → logprob: -17.12555503845215
    9. '[left' → logprob: -17.37555503845215
    10. '(None' → logprob: -17.62555503845215

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015502817404922098
    2. ',right' → logprob: -9.125155448913574
    3. ' ,' → logprob: -10.125155448913574
    4. '=' → logprob: -12.625155448913574
    5. ')' → logprob: -13.625155448913574
    6. ',
' → logprob: -14.125155448913574
    7. 'right' → logprob: -14.750155448913574
    8. '),' → logprob: -16.500154495239258
    9. ' right' → logprob: -17.000154495239258
    10. ',left' → logprob: -17.125154495239258

Token 211: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132619559764862
    2. ' right' → logprob: -1.3132619857788086
    3. '	right' → logprob: -15.688261985778809
    4. '(right' → logprob: -17.063261032104492
    5. 'Right' → logprob: -17.438261032104492
    6. ')' → logprob: -17.688261032104492
    7. ',right' → logprob: -18.313261032104492
    8. '[right' → logprob: -18.563261032104492
    9. ' ' → logprob: -19.188261032104492
    10. '_right' → logprob: -19.188261032104492

Token 212: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.874882430769503e-05
    2. '),' → logprob: -9.500079154968262
    3. ')
' → logprob: -13.000079154968262
    4. ' )' → logprob: -13.500079154968262
    5. ')#' → logprob: -16.625078201293945
    6. ')return' → logprob: -17.250078201293945
    7. ',' → logprob: -17.625078201293945
    8. ').' → logprob: -18.125078201293945
    9. ',)' → logprob: -18.250078201293945
    10. ')

' → logprob: -18.500078201293945

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011047814972698689
    2. ' i' → logprob: -4.511047840118408
    3. '	i' → logprob: -17.26104736328125
    4. ')i' → logprob: -19.38604736328125
    5. '_i' → logprob: -19.51104736328125
    6. '   ' → logprob: -19.51104736328125
    7. '*i' → logprob: -19.88604736328125
    8. '[i' → logprob: -20.26104736328125
    9. '(i' → logprob: -20.76104736328125
    10. ' ' → logprob: -20.76104736328125

Token 214: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6112953424453735
    2. '<|end|>' → logprob: -0.9862953424453735
    3. '#' → logprob: -2.736295223236084
    4. '
' → logprob: -4.486295223236084
    5. '<|end|>' → logprob: -6.236295223236084
    6. '(' → logprob: -6.361295223236084
    7. ')' → logprob: -6.861295223236084
    8. '```' → logprob: -7.486295223236084
    9. ' ' → logprob: -7.736295223236084
    10. '.' → logprob: -7.861295223236084

Token 216: ' tree' (ID: 8165)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9179326891899109
    2. ' inorder' → logprob: -2.2929327487945557
    3. ' is' → logprob: -2.4179327487945557
    4. 'is' → logprob: -2.4179327487945557
    5. 'count' → logprob: -2.9179327487945557
    6. 'main' → logprob: -3.0429327487945557
    7. 'print' → logprob: -3.1679327487945557
    8. 'serialize' → logprob: -3.6679327487945557
    9. ' count' → logprob: -4.042932510375977
    10. ' print' → logprob: -4.042932510375977

Token 217: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7964448928833008
    2. '_size' → logprob: -1.5464448928833008
    3. '_depth' → logprob: -1.9214448928833008
    4. '_' → logprob: -2.171444892883301
    5. '_height' → logprob: -3.046444892883301
    6. '_equal' → logprob: -4.671444892883301
    7. '_equals' → logprob: -5.421444892883301
    8. '_from' → logprob: -6.046444892883301
    9. '_is' → logprob: -6.296444892883301
    10. '_has' → logprob: -6.546444892883301

Token 218: '_str' (ID: 6182)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.5916727781295776
    2. '_string' → logprob: -1.8416727781295776
    3. '_tuple' → logprob: -2.966672897338867
    4. '_dot' → logprob: -2.966672897338867
    5. 'str' → logprob: -3.091672897338867
    6. 'tuple' → logprob: -3.341672897338867
    7. '_str' → logprob: -3.591672897338867
    8. 'list' → logprob: -3.716672897338867
    9. '_list' → logprob: -3.716672897338867
    10. 'dot' → logprob: -4.216672897338867

Token 219: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.10935135185718536
    2. '(tree' → logprob: -2.609351396560669
    3. '(root' → logprob: -3.609351396560669
    4. ' (' → logprob: -5.98435115814209
    5. '(' → logprob: -8.10935115814209
    6. '(t' → logprob: -9.48435115814209
    7. '(n' → logprob: -10.60935115814209
    8. '(Tree' → logprob: -11.85935115814209
    9. '(Node' → logprob: -12.48435115814209
    10. '(s' → logprob: -14.10935115814209

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002906158333644271
    2. '):
' → logprob: -6.002906322479248
    3. ' ):' → logprob: -8.62790584564209
    4. ',' → logprob: -8.87790584564209
    5. ')' → logprob: -9.12790584564209
    6. ':' → logprob: -13.25290584564209
    7. '   ' → logprob: -15.00290584564209
    8. '):

' → logprob: -15.25290584564209
    9. ',node' → logprob: -15.37790584564209
    10. '):
' → logprob: -15.37790584564209

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.9040898880339228e-05
    2. ' if' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.500028610229492
    4. '    ' → logprob: -15.000028610229492
    5. 'if' → logprob: -16.000028610229492
    6. '       ' → logprob: -16.000028610229492
    7. ',' → logprob: -16.500028610229492
    8. ':' → logprob: -16.875028610229492
    9. ')' → logprob: -17.000028610229492
    10. '	if' → logprob: -17.125028610229492

Token 222: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023486550897359848
    2. ' if' → logprob: -3.773486614227295
    3. 'if' (adapté à ' if') → logprob: -8.398486137390137
    4. '   ' → logprob: -11.898486137390137
    5. ' return' → logprob: -12.523486137390137
    6. '    ' → logprob: -13.648486137390137
    7. '	if' → logprob: -13.648486137390137
    8. 'return' → logprob: -14.148486137390137
    9. ' ' → logprob: -14.648486137390137
    10. '"' → logprob: -14.773486137390137

Token 223: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.004790376406162977
    2. 'node' → logprob: -5.504790306091309
    3. ' not' → logprob: -7.254790306091309
    4. 'not' → logprob: -12.379790306091309
    5. '	node' → logprob: -14.754790306091309
    6. '(node' → logprob: -15.379790306091309
    7. ' ' → logprob: -16.254791259765625
    8. '_node' → logprob: -18.254791259765625
    9. '   ' → logprob: -18.379791259765625
    10. '[node' → logprob: -18.754791259765625

Token 224: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004636603407561779
    2. 'is' → logprob: -5.379636764526367
    3. ')' → logprob: -11.254636764526367
    4. ')is' → logprob: -13.629636764526367
    5. '	is' → logprob: -14.129636764526367
    6. ' )' → logprob: -14.754636764526367
    7. '   ' → logprob: -15.004636764526367
    8. ' i' → logprob: -15.754636764526367
    9. '.is' → logprob: -15.879636764526367
    10. ' ' → logprob: -15.879636764526367

Token 225: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031777136027812958
    2. ' None' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.753177642822266
    4. '_None' → logprob: -17.753177642822266
    5. '(None' → logprob: -19.628177642822266
    6. '=None' → logprob: -19.628177642822266
    7. 'none' → logprob: -20.753177642822266
    8. ',None' → logprob: -20.753177642822266
    9. ' ' → logprob: -21.003177642822266
    10. '_none' → logprob: -21.253177642822266

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018454594537615776
    2. ':
' → logprob: -6.376845359802246
    3. ':return' → logprob: -9.126845359802246
    4. ' :' → logprob: -10.626845359802246
    5. '   ' → logprob: -11.751845359802246
    6. '):' → logprob: -13.501845359802246
    7. ' :
' → logprob: -15.126845359802246
    8. ')' → logprob: -15.251845359802246
    9. ' or' → logprob: -15.876845359802246
    10. '):
' → logprob: -16.251846313476562

Token 227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012629714328795671
    2. ' return' → logprob: -6.75126314163208
    3. '"' → logprob: -10.126262664794922
    4. 'return' → logprob: -10.251262664794922
    5. '       ' → logprob: -11.376262664794922
    6. '    ' → logprob: -12.626262664794922
    7. '  ' → logprob: -14.126262664794922
    8. ' ' → logprob: -14.501262664794922
    9. '   ' → logprob: -15.376262664794922
    10. '    
' → logprob: -15.626262664794922

Token 228: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5489804148674011
    2. 'return' (adapté à ' return') → logprob: -0.9239804148674011
    3. '   ' → logprob: -4.298980236053467
    4. '"' → logprob: -4.673980236053467
    5. ' ' → logprob: -7.423980236053467
    6. ''' → logprob: -7.423980236053467
    7. ' '' → logprob: -8.048980712890625
    8. '    ' → logprob: -8.673980712890625
    9. '       ' → logprob: -8.923980712890625
    10. ' "' → logprob: -9.048980712890625

Token 229: ' ''
' (ID: 25366)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33707740902900696
    2. ''' → logprob: -1.9620773792266846
    3. '""' → logprob: -2.4620773792266846
    4. '''' → logprob: -2.8370773792266846
    5. '","' → logprob: -7.462077617645264
    6. '','' → logprob: -7.712077617645264
    7. '",' → logprob: -9.212077140808105
    8. '()' → logprob: -9.837077140808105
    9. ''*' → logprob: -9.962077140808105
    10. '',' → logprob: -10.087077140808105

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005482682608999312
    2. 'return' → logprob: -8.625548362731934
    3. ''' → logprob: -8.750548362731934
    4. '(' → logprob: -9.125548362731934
    5. '"' → logprob: -10.125548362731934
    6. '('' → logprob: -11.000548362731934
    7. ' return' → logprob: -11.000548362731934
    8. ' '('' → logprob: -11.250548362731934
    9. ' (' → logprob: -12.750548362731934
    10. '()' → logprob: -13.000548362731934

Token 231: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5378082990646362
    2. ''' → logprob: -0.9128082990646362
    3. 'left' → logprob: -5.412808418273926
    4. '   ' → logprob: -5.662808418273926
    5. 'result' → logprob: -6.412808418273926
    6. '"' → logprob: -6.412808418273926
    7. 'res' → logprob: -6.537808418273926
    8. 's' → logprob: -7.162808418273926
    9. ' return' → logprob: -7.912808418273926
    10. ' '('' → logprob: -8.162808418273926

Token 232: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3874916732311249
    2. 'node' → logprob: -1.1374917030334473
    3. ' not' → logprob: -7.512491703033447
    4. 'not' → logprob: -10.012491226196289
    5. ' ' → logprob: -11.012491226196289
    6. '(node' → logprob: -12.137491226196289
    7. '   ' → logprob: -12.387491226196289
    8. '	node' → logprob: -13.262491226196289
    9. '  ' → logprob: -15.012491226196289
    10. 'n' → logprob: -15.262491226196289

Token 233: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.27099974633893e-05
    2. '.right' → logprob: -11.750012397766113
    3. '.' → logprob: -12.375012397766113
    4. '.le' → logprob: -14.625012397766113
    5. ' .' → logprob: -16.75001335144043
    6. '.Left' → logprob: -17.12501335144043
    7. 'left' → logprob: -17.37501335144043
    8. ' is' → logprob: -20.00001335144043
    9. '.next' → logprob: -20.12501335144043
    10. '.parent' → logprob: -20.75001335144043

Token 234: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04433397203683853
    2. 'is' → logprob: -3.1693339347839355
    3. ' or' → logprob: -7.4193339347839355
    4. ' and' → logprob: -7.5443339347839355
    5. 'and' → logprob: -8.794334411621094
    6. 'or' → logprob: -10.169334411621094
    7. ' ' → logprob: -12.044334411621094
    8. ')' → logprob: -13.044334411621094
    9. '   ' → logprob: -13.294334411621094
    10. '<|end|>' → logprob: -13.294334411621094

Token 235: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00523719098418951
    2. ' None' → logprob: -5.255237102508545
    3. '   ' → logprob: -13.755237579345703
    4. 'not' → logprob: -13.880237579345703
    5. '_None' → logprob: -14.630237579345703
    6. 'none' → logprob: -14.880237579345703
    7. '=None' → logprob: -15.880237579345703
    8. ' not' → logprob: -16.005237579345703
    9. '_none' → logprob: -16.505237579345703
    10. '(None' → logprob: -16.505237579345703

Token 236: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03822670131921768
    2. 'and' → logprob: -3.28822660446167
    3. '   ' → logprob: -8.663227081298828
    4. '    ' → logprob: -12.288227081298828
    5. '	and' → logprob: -12.538227081298828
    6. ' ' → logprob: -12.788227081298828
    7. '  ' → logprob: -14.413227081298828
    8. '       ' → logprob: -14.538227081298828
    9. ' и' → logprob: -16.288227081298828
    10. '        ' → logprob: -16.663227081298828

Token 237: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2519455850124359
    2. ' node' → logprob: -1.5019456148147583
    3. '   ' → logprob: -11.126945495605469
    4. '	node' → logprob: -13.876945495605469
    5. '(node' → logprob: -14.751945495605469
    6. ' ' → logprob: -15.376945495605469
    7. 'Node' → logprob: -16.75194549560547
    8. ',node' → logprob: -17.12694549560547
    9. '[node' → logprob: -17.25194549560547
    10. '_node' → logprob: -18.00194549560547

Token 238: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.000282431225059554
    2. '.' → logprob: -8.250282287597656
    3. ' .' → logprob: -11.375282287597656
    4. 'right' → logprob: -11.875282287597656
    5. '.left' → logprob: -13.000282287597656
    6. '   ' → logprob: -16.250282287597656
    7. ' right' → logprob: -16.500282287597656
    8. '.
' → logprob: -16.500282287597656
    9. '.Right' → logprob: -16.625282287597656
    10. ' ' → logprob: -16.875282287597656

Token 239: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02325153350830078
    2. 'is' → logprob: -3.773251533508301
    3. 'None' → logprob: -12.3982515335083
    4. ' ' → logprob: -14.5232515335083
    5. ' None' → logprob: -14.5232515335083
    6. '=None' → logprob: -15.1482515335083
    7. '==' → logprob: -15.8982515335083
    8. '	is' → logprob: -16.148250579833984
    9. 's' → logprob: -16.273250579833984
    10. ')' → logprob: -16.273250579833984

Token 240: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06197172403335571
    2. ' None' → logprob: -2.811971664428711
    3. '   ' → logprob: -14.186971664428711
    4. '(None' → logprob: -14.186971664428711
    5. '=None' → logprob: -14.311971664428711
    6. '_None' → logprob: -14.311971664428711
    7. 'none' → logprob: -14.436971664428711
    8. ' ' → logprob: -14.811971664428711
    9. '_none' → logprob: -15.561971664428711
    10. '.None' → logprob: -16.56197166442871

Token 241: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7537283897399902
    2. ':' → logprob: -1.0037283897399902
    3. '   ' → logprob: -2.2537283897399902
    4. ':
' → logprob: -3.1287283897399902
    5. ':return' → logprob: -4.37872838973999
    6. '():
' → logprob: -7.37872838973999
    7. '():' → logprob: -8.253728866577148
    8. ' return' → logprob: -8.878728866577148
    9. 'return' → logprob: -9.003728866577148
    10. '()' → logprob: -9.753728866577148

Token 242: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7762235403060913
    2. '   ' → logprob: -0.9012235403060913
    3. 'return' → logprob: -2.151223659515381
    4. '"' → logprob: -4.776223659515381
    5. ' return' → logprob: -5.776223659515381
    6. '       ' → logprob: -5.901223659515381
    7. ' ' → logprob: -7.401223659515381
    8. ' '('' → logprob: -7.401223659515381
    9. '()' → logprob: -7.901223659515381
    10. ' '' → logprob: -8.151223182678223

Token 243: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14537030458450317
    2. '''' → logprob: -2.2703702449798584
    3. '"' → logprob: -4.1453704833984375
    4. 'return' (adapté à ' return') → logprob: -5.5203704833984375
    5. ''.' → logprob: -5.7703704833984375
    6. '""' → logprob: -6.5203704833984375
    7. '')' → logprob: -6.7703704833984375
    8. ''re' → logprob: -6.7703704833984375
    9. ''*' → logprob: -6.8953704833984375
    10. '()' → logprob: -7.5203704833984375

Token 244: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3870697617530823
    2. '"' → logprob: -1.1370697021484375
    3. ''(' → logprob: -9.387069702148438
    4. '''' → logprob: -10.012069702148438
    5. '"(' → logprob: -11.262069702148438
    6. '""' → logprob: -11.762069702148438
    7. ''*' → logprob: -11.887069702148438
    8. '()' → logprob: -11.887069702148438
    9. '','' → logprob: -12.137069702148438
    10. ''x' → logprob: -12.637069702148438

Token 245: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04369950667023659
    2. '"' → logprob: -3.7936995029449463
    3. ''' → logprob: -4.168699741363525
    4. '()"' → logprob: -6.168699741363525
    5. '(' → logprob: -6.418699741363525
    6. '(),'' → logprob: -7.793699741363525
    7. '(),' → logprob: -7.918699741363525
    8. '().'' → logprob: -10.418699264526367
    9. '()*' → logprob: -10.793699264526367
    10. '(\' → logprob: -10.793699264526367

Token 246: ''
' (ID: 2207)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.255311518907547
    2. ''' → logprob: -1.5053114891052246
    3. ')'' → logprob: -6.130311489105225
    4. '')' → logprob: -6.755311489105225
    5. ')' → logprob: -10.755311965942383
    6. '(' → logprob: -12.130311965942383
    7. '())' → logprob: -12.255311965942383
    8. ''
' → logprob: -12.880311965942383
    9. ' ()' → logprob: -14.505311965942383
    10. '()
' → logprob: -14.880311965942383

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019245869480073452
    2. '(' → logprob: -6.626924514770508
    3. '()' → logprob: -8.751924514770508
    4. 'return' → logprob: -9.001924514770508
    5. '('' → logprob: -9.001924514770508
    6. ''' → logprob: -9.751924514770508
    7. '    
' → logprob: -10.126924514770508
    8. '(
' → logprob: -10.251924514770508
    9. ' return' → logprob: -10.876924514770508
    10. ' '('' → logprob: -11.626924514770508

Token 248: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.593519926071167
    2. 'return' → logprob: -0.843519926071167
    3. ' return' → logprob: -4.593520164489746
    4. 'left' (adapté à ' left') → logprob: -4.968520164489746
    5. ' left' → logprob: -8.718520164489746
    6. ''' → logprob: -9.593520164489746
    7. 'result' → logprob: -10.218520164489746
    8. 'res' → logprob: -11.218520164489746
    9. 'ret' → logprob: -11.218520164489746
    10. ' ' → logprob: -11.468520164489746

Token 249: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0320003367960453
    2. ' =' → logprob: -4.032000541687012
    3. '_' → logprob: -5.157000541687012
    4. '=' → logprob: -5.657000541687012
    5. ')' → logprob: -6.907000541687012
    6. '_repr' → logprob: -6.907000541687012
    7. '_part' → logprob: -7.782000541687012
    8. ' ' → logprob: -8.157000541687012
    9. 'str' → logprob: -8.532000541687012
    10. '_val' → logprob: -8.657000541687012

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07964711636304855
    2. '=' → logprob: -2.5796470642089844
    3. ' +' → logprob: -7.579647064208984
    4. '+' → logprob: -8.829647064208984
    5. '   ' → logprob: -10.204647064208984
    6. ' +=' → logprob: -10.579647064208984
    7. '()' → logprob: -11.204647064208984
    8. ' ' → logprob: -11.329647064208984
    9. '    ' → logprob: -12.204647064208984
    10. '(' → logprob: -13.204647064208984

Token 251: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.08896073698997498
    2. ' tree' → logprob: -2.463960647583008
    3. '(tree' → logprob: -11.713960647583008
    4. '	tree' → logprob: -12.588960647583008
    5. ' ' → logprob: -12.713960647583008
    6. ''' → logprob: -13.213960647583008
    7. '   ' → logprob: -13.463960647583008
    8. '''' → logprob: -14.088960647583008
    9. 'tre' → logprob: -14.588960647583008
    10. '
' → logprob: -14.588960647583008

Token 252: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'to' → logprob: -14.625000953674316
    3. 'To' → logprob: -15.625000953674316
    4. 'o' → logprob: -18.625
    5. ')' → logprob: -19.0
    6. ''_' → logprob: -19.25
    7. '"_' → logprob: -19.375
    8. '.to' → logprob: -19.5
    9. '._' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 253: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00014048899174667895
    2. 'str' → logprob: -8.875140190124512
    3. 's' → logprob: -15.750140190124512
    4. '_s' → logprob: -16.125141143798828
    5. '(node' → logprob: -16.125141143798828
    6. '_st' → logprob: -16.500141143798828
    7. '_' → logprob: -16.625141143798828
    8. '_string' → logprob: -17.375141143798828
    9. 'Str' → logprob: -17.875141143798828
    10. ' str' → logprob: -18.000141143798828

Token 254: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -16.625
    4. '(Node' → logprob: -18.25
    5. '(
' → logprob: -19.5
    6. ',node' → logprob: -20.125
    7. '(n' → logprob: -20.75
    8. '(root' → logprob: -21.25
    9. '[node' → logprob: -21.375
    10. '(user' → logprob: -21.625

Token 255: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.204110786318779
    2. '.node' → logprob: -1.7041107416152954
    3. '(node' → logprob: -6.329110622406006
    4. '.' → logprob: -7.454110622406006
    5. '.right' → logprob: -8.329111099243164
    6. ' .' → logprob: -9.454111099243164
    7. ').' → logprob: -12.704111099243164
    8. '.parent' → logprob: -13.204111099243164
    9. ')' → logprob: -13.454111099243164
    10. '.root' → logprob: -13.829111099243164

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007924106903374195
    2. ')
' → logprob: -4.8829240798950195
    3. ')+' → logprob: -8.50792407989502
    4. '()' → logprob: -10.13292407989502
    5. '())' → logprob: -10.88292407989502
    6. '+' → logprob: -11.25792407989502
    7. ' )' → logprob: -11.63292407989502
    8. '')' → logprob: -11.75792407989502
    9. ',' → logprob: -11.88292407989502
    10. ' +' → logprob: -12.38292407989502

Token 257: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1352636218070984
    2. ' +' → logprob: -3.135263681411743
    3. ',' → logprob: -3.385263681411743
    4. 'if' → logprob: -3.885263681411743
    5. '   ' → logprob: -4.510263442993164
    6. ' if' → logprob: -4.760263442993164
    7. '','' → logprob: -5.010263442993164
    8. ',
' → logprob: -7.260263442993164
    9. '","' → logprob: -8.010263442993164
    10. ' ,' → logprob: -8.260263442993164

Token 258: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07889121770858765
    2. 'node' → logprob: -2.5788912773132324
    3. '(node' → logprob: -13.953890800476074
    4. ' ' → logprob: -15.203890800476074
    5. '	node' → logprob: -15.203890800476074
    6. '   ' → logprob: -17.82889175415039
    7. '[node' → logprob: -18.32889175415039
    8. '=node' → logprob: -18.32889175415039
    9. 'Node' → logprob: -18.45389175415039
    10. ',node' → logprob: -18.57889175415039

Token 259: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0013601169921457767
    2. ' is' → logprob: -7.126359939575195
    3. '.right' → logprob: -8.626359939575195
    4. ' else' → logprob: -8.626359939575195
    5. '.' → logprob: -9.376359939575195
    6. 'else' → logprob: -9.751359939575195
    7. 'left' → logprob: -10.126359939575195
    8. 's' → logprob: -12.126359939575195
    9. '.node' → logprob: -13.251359939575195
    10. 'and' → logprob: -13.876359939575195

Token 260: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7620682716369629
    2. 'else' → logprob: -1.262068271636963
    3. ' is' → logprob: -1.387068271636963
    4. 'is' → logprob: -8.012067794799805
    5. ' ' → logprob: -9.512067794799805
    6. '!=' → logprob: -11.387067794799805
    7. '    ' → logprob: -13.012067794799805
    8. ' not' → logprob: -13.762067794799805
    9. 'not' → logprob: -14.012067794799805
    10. '   ' → logprob: -14.137067794799805

Token 261: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.022803839296102524
    2. ''' → logprob: -4.772803783416748
    3. '','' → logprob: -4.772803783416748
    4. ' ''' → logprob: -6.522803783416748
    5. '""' → logprob: -6.522803783416748
    6. '''
' → logprob: -6.772803783416748
    7. ''',' → logprob: -6.897803783416748
    8. '"' → logprob: -8.272804260253906
    9. '',' → logprob: -9.272804260253906
    10. '()' → logprob: -10.147804260253906

Token 262: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1368866115808487
    2. ' right' → logprob: -2.7618865966796875
    3. '','' → logprob: -2.7618865966796875
    4. '',' → logprob: -7.3868865966796875
    5. ',' → logprob: -7.6368865966796875
    6. ',right' → logprob: -8.136886596679688
    7. '   ' → logprob: -9.761886596679688
    8. ' ','' → logprob: -10.136886596679688
    9. '')' → logprob: -10.636886596679688
    10. '","' → logprob: -11.011886596679688

Token 263: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.18941181898117065
    2. ' right' → logprob: -1.9394118785858154
    3. '','' → logprob: -3.5644118785858154
    4. '',' → logprob: -8.314412117004395
    5. ' ','' → logprob: -9.439412117004395
    6. '''' → logprob: -10.439412117004395
    7. 'left' → logprob: -10.814412117004395
    8. '   ' → logprob: -11.064412117004395
    9. '(','' → logprob: -11.314412117004395
    10. '","' → logprob: -11.564412117004395

Token 264: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. 'str' → logprob: -14.375004768371582
    4. ''_' → logprob: -14.750004768371582
    5. ')_' → logprob: -16.250003814697266
    6. '>' → logprob: -16.500003814697266
    7. ' _' → logprob: -16.625003814697266
    8. '_s' → logprob: -17.000003814697266
    9. '```' → logprob: -17.000003814697266
    10. 'Str' → logprob: -17.125003814697266

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ' ' → logprob: -14.535224914550781
    4. '_' → logprob: -16.03522491455078
    5. ')' → logprob: -16.53522491455078
    6. ' =
' → logprob: -17.03522491455078
    7. ' +=' → logprob: -17.28522491455078
    8. '  ' → logprob: -17.41022491455078
    9. '_str' → logprob: -17.66022491455078
    10. ' if' → logprob: -17.91022491455078

Token 266: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2520199716091156
    2. ' tree' → logprob: -1.502020001411438
    3. '(tree' → logprob: -9.752019882202148
    4. ''' → logprob: -11.627019882202148
    5. '	tree' → logprob: -11.877019882202148
    6. '''' → logprob: -12.002019882202148
    7. ' ' → logprob: -12.377019882202148
    8. ''t' → logprob: -13.502019882202148
    9. ' '' → logprob: -13.752019882202148
    10. '_tree' → logprob: -14.127019882202148

Token 267: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.054500666621607e-06
    2. ''_' → logprob: -13.62500286102295
    3. 'to' → logprob: -13.75000286102295
    4. 'To' → logprob: -15.37500286102295
    5. '```' → logprob: -15.75000286102295
    6. '"_' → logprob: -16.500003814697266
    7. '##_' → logprob: -17.375003814697266
    8. ' _' → logprob: -17.500003814697266
    9. ')_' → logprob: -17.875003814697266
    10. '*_' → logprob: -18.000003814697266

Token 268: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4741547107696533
    2. 'str' → logprob: -0.9741547107696533
    3. 'tree' → logprob: -10.224154472351074
    4. 'r' → logprob: -10.349154472351074
    5. 's' → logprob: -12.849154472351074
    6. ' str' → logprob: -13.474154472351074
    7. 'string' → logprob: -13.599154472351074
    8. 'tr' → logprob: -13.599154472351074
    9. '	str' → logprob: -14.349154472351074
    10. 't' → logprob: -15.099154472351074

Token 269: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.500001907348633
    4. 'node' → logprob: -16.625001907348633
    5. '(root' → logprob: -17.000001907348633
    6. '[node' → logprob: -19.500001907348633
    7. '=node' → logprob: -19.750001907348633
    8. '(
' → logprob: -19.875001907348633
    9. '(Node' → logprob: -20.000001907348633
    10. ')' → logprob: -20.250001907348633

Token 270: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -7.827200897736475e-05
    2. '.node' → logprob: -9.875078201293945
    3. 'node' → logprob: -11.125078201293945
    4. '.' → logprob: -12.500078201293945
    5. '.left' → logprob: -12.750078201293945
    6. ' .' → logprob: -12.750078201293945
    7. 'right' → logprob: -14.125078201293945
    8. '   ' → logprob: -14.750078201293945
    9. '.root' → logprob: -15.000078201293945
    10. ' ' → logprob: -15.125078201293945

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6934557505883276e-05
    2. '()' → logprob: -10.500057220458984
    3. 'if' → logprob: -11.125057220458984
    4. ' if' → logprob: -11.625057220458984
    5. ' )' → logprob: -12.375057220458984
    6. '')' → logprob: -14.000057220458984
    7. '())' → logprob: -15.250057220458984
    8. '")' → logprob: -16.250057220458984
    9. ' ' → logprob: -16.750057220458984
    10. '   ' → logprob: -17.250057220458984

Token 272: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18212175369262695
    2. 'if' → logprob: -1.807121753692627
    3. '+' → logprob: -6.432121753692627
    4. ' +' → logprob: -8.307121276855469
    5. ' or' → logprob: -9.182121276855469
    6. '   ' → logprob: -9.307121276855469
    7. ' ' → logprob: -9.557121276855469
    8. ')' → logprob: -9.682121276855469
    9. '()' → logprob: -9.682121276855469
    10. 'else' → logprob: -10.432121276855469

Token 273: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.06216026842594147
    2. 'node' → logprob: -2.8121602535247803
    3. '(node' → logprob: -8.68716049194336
    4. ' not' → logprob: -11.31216049194336
    5. 'not' → logprob: -11.56216049194336
    6. '	node' → logprob: -14.43716049194336
    7. ' ' → logprob: -14.43716049194336
    8. 'None' → logprob: -14.93716049194336
    9. '[node' → logprob: -15.06216049194336
    10. ' (' → logprob: -15.93716049194336

Token 274: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0021494273096323013
    2. '.left' → logprob: -6.75214958190918
    3. 'else' → logprob: -7.37714958190918
    4. 'right' → logprob: -8.75214958190918
    5. ' is' → logprob: -8.75214958190918
    6. ' else' → logprob: -10.50214958190918
    7. '.' → logprob: -12.37714958190918
    8. 's' → logprob: -14.12714958190918
    9. ':' → logprob: -14.25214958190918
    10. 'and' → logprob: -14.25214958190918

Token 275: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16025906801223755
    2. 'else' → logprob: -1.9102590084075928
    3. ' is' → logprob: -10.535259246826172
    4. ')' → logprob: -12.285259246826172
    5. ' ' → logprob: -13.535259246826172
    6. '	else' → logprob: -14.910259246826172
    7. ':' → logprob: -14.910259246826172
    8. '```' → logprob: -15.035259246826172
    9. 'is' → logprob: -15.160259246826172
    10. '_else' → logprob: -15.660259246826172

Token 276: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0519830659031868
    2. ' ''' → logprob: -3.051983118057251
    3. ''' → logprob: -6.051982879638672
    4. 'tree' → logprob: -7.426982879638672
    5. 'None' → logprob: -9.301982879638672
    6. ' tree' → logprob: -9.551982879638672
    7. ' ' → logprob: -9.801982879638672
    8. ' '' → logprob: -9.926982879638672
    9. '''
' → logprob: -9.926982879638672
    10. ''t' → logprob: -10.801982879638672

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.300083648762666e-05
    2. ' return' → logprob: -10.375053405761719
    3. 'return' → logprob: -10.750053405761719
    4. '	return' → logprob: -16.00005340576172
    5. '       ' → logprob: -16.25005340576172
    6. '  ' → logprob: -16.75005340576172
    7. '    ' → logprob: -17.25005340576172
    8. '    
' → logprob: -17.25005340576172
    9. ')' → logprob: -17.37505340576172
    10. '   ' → logprob: -17.37505340576172

Token 278: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25717929005622864
    2. 'return' (adapté à ' return') → logprob: -1.5071792602539062
    3. ' return' → logprob: -5.257179260253906
    4. 'if' → logprob: -11.882179260253906
    5. '	return' → logprob: -11.882179260253906
    6. 'result' → logprob: -12.007179260253906
    7. '       ' → logprob: -13.382179260253906
    8. ' if' → logprob: -13.507179260253906
    9. ' ' → logprob: -13.632179260253906
    10. '  ' → logprob: -13.882179260253906

Token 279: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06471989303827286
    2. '"' → logprob: -2.9397199153900146
    3. ' '('' → logprob: -4.6897196769714355
    4. 'f' → logprob: -8.689720153808594
    5. ' "("' → logprob: -8.689720153808594
    6. ' f' → logprob: -9.314720153808594
    7. ' ' → logprob: -9.314720153808594
    8. ''(' → logprob: -10.314720153808594
    9. '   ' → logprob: -10.689720153808594
    10. ' '' → logprob: -11.939720153808594

Token 280: ' +' (ID: 659)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2067299485206604
    2. '+' → logprob: -1.7067298889160156
    3. ' +' → logprob: -5.331729888916016
    4. ' left' → logprob: -8.081729888916016
    5. '[left' → logprob: -9.706729888916016
    6. ',left' → logprob: -9.706729888916016
    7. '(left' → logprob: -11.206729888916016
    8. 'f' → logprob: -11.206729888916016
    9. '{}' → logprob: -12.706729888916016
    10. '{' → logprob: -13.706729888916016

Token 281: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00011129142512800172
    2. ' left' → logprob: -9.12511157989502
    3. '(left' → logprob: -13.37511157989502
    4. '[left' → logprob: -14.87511157989502
    5. ' ' → logprob: -16.500110626220703
    6. '   ' → logprob: -16.625110626220703
    7. '	left' → logprob: -16.750110626220703
    8. 'lef' → logprob: -17.000110626220703
    9. ',left' → logprob: -17.875110626220703
    10. ' lef' → logprob: -18.000110626220703

Token 282: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.080963092041202e-06
    2. 'str' → logprob: -12.500004768371582
    3. '_' → logprob: -14.250004768371582
    4. 'left' → logprob: -15.625004768371582
    5. ''_' → logprob: -16.2500057220459
    6. '_
' → logprob: -16.7500057220459
    7. '_to' → logprob: -16.8750057220459
    8. ')' → logprob: -17.0000057220459
    9. '_left' → logprob: -17.1250057220459
    10. 'to' → logprob: -17.1250057220459

Token 283: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02471916750073433
    2. ' +' → logprob: -4.27471923828125
    3. '   ' → logprob: -5.39971923828125
    4. ',' → logprob: -5.77471923828125
    5. '','' → logprob: -6.02471923828125
    6. '+","+' → logprob: -9.39971923828125
    7. '","' → logprob: -9.52471923828125
    8. '+,' → logprob: -9.64971923828125
    9. '+
' → logprob: -10.02471923828125
    10. '","+' → logprob: -10.39971923828125

Token 284: ' ','' (ID: 56369)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.00031043673516251147
    2. ' ','' → logprob: -8.250310897827148
    3. ',' → logprob: -10.250310897827148
    4. '","' → logprob: -11.625310897827148
    5. '(','' → logprob: -12.875310897827148
    6. '',' → logprob: -13.500310897827148
    7. '')' → logprob: -15.000310897827148
    8. '','.' → logprob: -15.125310897827148
    9. '','#' → logprob: -16.87531089782715
    10. ' ' → logprob: -17.00031089782715

Token 285: ' +' (ID: 659)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.38687896728515625
    2. ' right' → logprob: -1.1368789672851562
    3. '	right' → logprob: -12.511878967285156
    4. ' +' → logprob: -13.511878967285156
    5. '+' → logprob: -14.011878967285156
    6. 'r' → logprob: -14.136878967285156
    7. '(right' → logprob: -14.761878967285156
    8. '[right' → logprob: -14.761878967285156
    9. ''' → logprob: -15.261878967285156
    10. ',right' → logprob: -15.761878967285156

Token 286: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3868716359138489
    2. 'right' → logprob: -1.136871576309204
    3. '	right' → logprob: -14.636871337890625
    4. 'r' → logprob: -17.136871337890625
    5. '(right' → logprob: -17.136871337890625
    6. ' ' → logprob: -17.261871337890625
    7. '[right' → logprob: -18.386871337890625
    8. '右' → logprob: -18.511871337890625
    9. '_right' → logprob: -18.761871337890625
    10. '   ' → logprob: -19.136871337890625

Token 287: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.7120533811976202e-05
    2. 'str' → logprob: -11.125017166137695
    3. ''_' → logprob: -14.500017166137695
    4. '_' → logprob: -15.000017166137695
    5. 'Str' → logprob: -15.125017166137695
    6. 's' → logprob: -15.125017166137695
    7. 't' → logprob: -15.250017166137695
    8. ')' → logprob: -15.875017166137695
    9. '_s' → logprob: -16.375017166137695
    10. 'right' → logprob: -16.500017166137695

Token 288: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07516147196292877
    2. '')' → logprob: -2.7001614570617676
    3. '+')' → logprob: -5.700161457061768
    4. '+' → logprob: -6.700161457061768
    5. ' +' → logprob: -8.075161933898926
    6. ')`' → logprob: -9.200161933898926
    7. ' ')'' → logprob: -9.450161933898926
    8. '   ' → logprob: -10.075161933898926
    9. ')+' → logprob: -10.575161933898926
    10. ')")' → logprob: -11.075161933898926

Token 289: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006465247832238674
    2. ' ')'' → logprob: -5.256465435028076
    3. ')' → logprob: -6.756465435028076
    4. ')'' → logprob: -9.631464958190918
    5. ''' → logprob: -14.131464958190918
    6. '')"' → logprob: -14.256464958190918
    7. '")' → logprob: -15.631464958190918
    8. ' ')' → logprob: -17.006465911865234
    9. ')`' → logprob: -17.006465911865234
    10. ' ' → logprob: -17.256465911865234

Token 290: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1449885219335556
    2. '<|end|>' → logprob: -2.019988536834717
    3. '')' → logprob: -7.269988536834717
    4. '
' → logprob: -7.269988536834717
    5. '```' → logprob: -7.644988536834717
    6. '}' → logprob: -8.769988059997559
    7. '\n' → logprob: -9.019988059997559
    8. '<|end|>' → logprob: -9.644988059997559
    9. '#' → logprob: -10.769988059997559
    10. '")' → logprob: -11.019988059997559

Token 291: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0469362847507
    2. 'print' → logprob: -3.671936273574829
    3. '<|end|>' → logprob: -5.546936511993408
    4. '(' → logprob: -5.671936511993408
    5. 'def' → logprob: -5.796936511993408
    6. '```' → logprob: -6.046936511993408
    7. 'root' → logprob: -6.171936511993408
    8. 'tree' → logprob: -6.796936511993408
    9. 'if' → logprob: -7.046936511993408
    10. 'n' → logprob: -7.546936511993408

Token 292: ' intersect' (ID: 64353)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.31471750140190125
    2. 'main' → logprob: -1.5647175312042236
    3. 'invert' → logprob: -4.3147172927856445
    4. 'is' → logprob: -4.9397172927856445
    5. 'mirror' → logprob: -4.9397172927856445
    6. ' mirror' → logprob: -5.1897172927856445
    7. 'count' → logprob: -5.3147172927856445
    8. ' invert' → logprob: -5.4397172927856445
    9. ' is' → logprob: -5.5647172927856445
    10. ' count' → logprob: -6.1897172927856445

Token 293: '(n' (ID: 2406)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.38955414295196533
    2. '(t' → logprob: -1.5145541429519653
    3. '(node' → logprob: -2.639554023742676
    4. '(root' → logprob: -4.639554023742676
    5. '_t' → logprob: -4.764554023742676
    6. '(a' → logprob: -5.264554023742676
    7. '(s' → logprob: -6.139554023742676
    8. '(' → logprob: -6.264554023742676
    9. '(T' → logprob: -6.389554023742676
    10. '(Tree' → logprob: -7.514554023742676

Token 294: '1' (ID: 16)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.008599678054451942
    2. '1' → logprob: -5.258599758148193
    3. 'odes' → logprob: -5.758599758148193
    4. '```' → logprob: -9.133599281311035
    5. '   ' → logprob: -10.508599281311035
    6. ')' → logprob: -11.008599281311035
    7. ',' → logprob: -11.508599281311035
    8. 'a' → logprob: -12.508599281311035
    9. '
' → logprob: -12.508599281311035
    10. '``' → logprob: -12.633599281311035

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025633294717408717
    2. ',n' → logprob: -8.375256538391113
    3. ' ,' → logprob: -10.875256538391113
    4. ',node' → logprob: -12.250256538391113
    5. '1' → logprob: -13.750256538391113
    6. 's' → logprob: -15.250256538391113
    7. ',
' → logprob: -15.500256538391113
    8. ',right' → logprob: -16.000255584716797
    9. '):' → logprob: -16.875255584716797
    10. ')' → logprob: -16.875255584716797

Token 296: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868725895881653
    2. ' n' → logprob: -1.1368725299835205
    3. '   ' → logprob: -14.761872291564941
    4. ' ' → logprob: -15.136872291564941
    5. '	n' → logprob: -15.511872291564941
    6. 'node' → logprob: -16.011873245239258
    7. ')n' → logprob: -16.386873245239258
    8. '
' → logprob: -16.511873245239258
    9. ',' → logprob: -16.636873245239258
    10. '    ' → logprob: -16.636873245239258

Token 297: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003239863086491823
    2. 'ode' → logprob: -5.878239631652832
    3. ',' → logprob: -8.003239631652832
    4. ')' → logprob: -10.128239631652832
    5. '   ' → logprob: -11.503239631652832
    6. '):
' → logprob: -11.628239631652832
    7. '```' → logprob: -11.753239631652832
    8. ')
' → logprob: -12.378239631652832
    9. '2' → logprob: -12.503239631652832
    10. '),' → logprob: -12.753239631652832

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004215281922370195
    2. ',' → logprob: -6.004215240478516
    3. '):
' → logprob: -6.379215240478516
    4. ')' → logprob: -10.629215240478516
    5. ' ):' → logprob: -11.504215240478516
    6. '   ' → logprob: -12.379215240478516
    7. ':' → logprob: -13.254215240478516
    8. '):
' → logprob: -14.129215240478516
    9. ' ' → logprob: -16.254215240478516
    10. '):

' → logprob: -16.629215240478516

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011306817643344402
    2. ' if' → logprob: -5.0113067626953125
    3. 'if' → logprob: -5.3863067626953125
    4. '	if' → logprob: -13.261306762695312
    5. 'If' → logprob: -16.761306762695312
    6. '   ' → logprob: -17.011306762695312
    7. '```' → logprob: -17.136306762695312
    8. '    
' → logprob: -17.386306762695312
    9. '<|end|>' → logprob: -17.636306762695312
    10. '       ' → logprob: -18.386306762695312

Token 300: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1030818521976471
    2. ' if' → logprob: -2.3530819416046143
    3. '   ' → logprob: -5.853081703186035
    4. '	if' → logprob: -16.22808265686035
    5. ' ' → logprob: -18.60308265686035
    6. 'If' → logprob: -18.72808265686035
    7. '
' → logprob: -18.85308265686035
    8. 'None' → logprob: -19.47808265686035
    9. ' None' → logprob: -19.72808265686035
    10. '#' → logprob: -20.47808265686035

Token 301: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14275959134101868
    2. ' n' → logprob: -2.0177595615386963
    3. ' not' → logprob: -9.642759323120117
    4. 'not' → logprob: -10.892759323120117
    5. '   ' → logprob: -15.017759323120117
    6. '	n' → logprob: -15.142759323120117
    7. ' ' → logprob: -15.517759323120117
    8. '(n' → logprob: -15.767759323120117
    9. ' ' → logprob: -17.267759323120117
    10. 'n't' → logprob: -17.767759323120117

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'one' → logprob: -16.875
    3. 'ot' → logprob: -17.5
    4. 'n' → logprob: -17.875
    5. 'ode' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. ' ' → logprob: -19.5
    8. '   ' → logprob: -19.625
    9. '2' → logprob: -19.875
    10. '_' → logprob: -20.125

Token 303: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5759400725364685
    2. 'is' → logprob: -0.8259400725364685
    3. ')' → logprob: -15.075940132141113
    4. ' ' → logprob: -16.575939178466797
    5. 'i' → logprob: -16.700939178466797
    6. 'and' → logprob: -16.950939178466797
    7. '   ' → logprob: -17.200939178466797
    8. ')is' → logprob: -17.200939178466797
    9. '==' → logprob: -17.825939178466797
    10. 'or' → logprob: -17.825939178466797

Token 304: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018150178715586662
    2. ' None' → logprob: -4.018150329589844
    3. '_None' → logprob: -15.893150329589844
    4. '(None' → logprob: -16.143150329589844
    5. '=None' → logprob: -17.268150329589844
    6. 'none' → logprob: -17.518150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '_none' → logprob: -18.393150329589844
    9. '.None' → logprob: -18.643150329589844
    10. '   ' → logprob: -19.143150329589844

Token 305: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0075587136670947075
    2. 'or' → logprob: -5.257558822631836
    3. ' and' → logprob: -6.382558822631836
    4. '   ' → logprob: -7.882558822631836
    5. 'and' → logprob: -8.632558822631836
    6. ':' → logprob: -9.757558822631836
    7. '	or' → logprob: -12.007558822631836
    8. ' ' → logprob: -12.382558822631836
    9. ')' → logprob: -12.382558822631836
    10. ':
' → logprob: -13.757558822631836

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019476758316159248
    2. ' n' → logprob: -6.25194787979126
    3. '   ' → logprob: -10.876947402954102
    4. '  ' → logprob: -16.0019474029541
    5. ' ' → logprob: -16.7519474029541
    6. '	n' → logprob: -16.8769474029541
    7. '    ' → logprob: -18.1269474029541
    8. ' ' → logprob: -20.1269474029541
    9. 'n't' → logprob: -20.2519474029541
    10. 'not' → logprob: -20.3769474029541

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018558766692876816
    2. '1' → logprob: -4.018558979034424
    3. 'None' → logprob: -8.518558502197266
    4. '   ' → logprob: -9.518558502197266
    5. 'one' → logprob: -9.643558502197266
    6. 'n' → logprob: -10.268558502197266
    7. ' None' → logprob: -11.143558502197266
    8. 'One' → logprob: -12.143558502197266
    9. ' n' → logprob: -12.143558502197266
    10. 'ode' → logprob: -12.268558502197266

Token 308: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00016873658751137555
    2. 'is' → logprob: -8.750168800354004
    3. ' None' → logprob: -12.250168800354004
    4. 'None' → logprob: -12.250168800354004
    5. ' ' → logprob: -15.500168800354004
    6. '=None' → logprob: -15.500168800354004
    7. '   ' → logprob: -15.625168800354004
    8. ')' → logprob: -16.125167846679688
    9. '(None' → logprob: -18.125167846679688
    10. '	is' → logprob: -18.500167846679688

Token 309: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00407923199236393
    2. ' None' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.87907886505127
    4. ' ' → logprob: -15.50407886505127
    5. '_None' → logprob: -16.129079818725586
    6. 'none' → logprob: -16.504079818725586
    7. '(None' → logprob: -16.629079818725586
    8. '0' → logprob: -17.254079818725586
    9. '  ' → logprob: -17.379079818725586
    10. '=None' → logprob: -17.629079818725586

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4518645107746124
    2. ':
' → logprob: -1.45186448097229
    3. '   ' → logprob: -2.20186448097229
    4. '       ' → logprob: -4.201864719390869
    5. ':return' → logprob: -5.701864719390869
    6. ' or' → logprob: -8.076864242553711
    7. '):
' → logprob: -9.076864242553711
    8. ',' → logprob: -10.826864242553711
    9. '	return' → logprob: -11.451864242553711
    10. '    ' → logprob: -11.826864242553711

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.133701354265213
    2. '   ' → logprob: -2.1337013244628906
    3. ' return' → logprob: -5.383701324462891
    4. 'return' → logprob: -7.508701324462891
    5. '	return' → logprob: -7.633701324462891
    6. '	' → logprob: -8.13370132446289
    7. '
' → logprob: -8.50870132446289
    8. '    
' → logprob: -8.88370132446289
    9. '        
' → logprob: -9.25870132446289
    10. ' None' → logprob: -9.38370132446289

Token 312: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18363523483276367
    2. '   ' → logprob: -2.1836352348327637
    3. ' None' → logprob: -3.3086352348327637
    4. 'return' (adapté à ' return') → logprob: -4.183635234832764
    5. 'None' → logprob: -6.183635234832764
    6. '       ' → logprob: -7.058635234832764
    7. ' ' → logprob: -8.558635711669922
    8. '	return' → logprob: -9.183635711669922
    9. '    ' → logprob: -10.308635711669922
    10. '  ' → logprob: -11.058635711669922

Token 313: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3868749439716339
    2. ' None' → logprob: -1.1368749141693115
    3. 'Node' → logprob: -13.51187515258789
    4. '(None' → logprob: -13.51187515258789
    5. ',None' → logprob: -14.76187515258789
    6. '_None' → logprob: -14.88687515258789
    7. ' Node' → logprob: -15.88687515258789
    8. ' ' → logprob: -16.01187515258789
    9. '   ' → logprob: -16.13687515258789
    10. 'False' → logprob: -16.63687515258789

Token 314: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4436604976654053
    2. '
' → logprob: -1.3186604976654053
    3. '    
' → logprob: -2.9436604976654053
    4. '\n' → logprob: -3.5686604976654053
    5. '  
' → logprob: -5.193660736083984
    6. '<|end|>' → logprob: -6.068660736083984
    7. '   
' → logprob: -7.943660736083984
    8. ' 
' → logprob: -8.568660736083984
    9. '<|end|>' → logprob: -8.818660736083984
    10. 'newline' → logprob: -8.943660736083984

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08348497003316879
    2. '
' → logprob: -2.7084848880767822
    3. '    
' → logprob: -4.333485126495361
    4. '  
' → logprob: -8.583484649658203
    5. '   
' → logprob: -9.708484649658203
    6. '\n' → logprob: -10.208484649658203
    7. ' if' → logprob: -11.208484649658203
    8. 'if' → logprob: -11.833484649658203
    9. 'n' → logprob: -12.083484649658203
    10. ' 
' → logprob: -12.458484649658203

Token 316: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.03584243729710579
    2. ' left' → logprob: -3.5358424186706543
    3. '   ' → logprob: -5.535842418670654
    4. 'l' → logprob: -6.285842418670654
    5. 'res' → logprob: -9.035842895507812
    6. 'ln' → logprob: -10.660842895507812
    7. ' res' → logprob: -10.785842895507812
    8. 'node' → logprob: -10.785842895507812
    9. 'result' → logprob: -10.910842895507812
    10. 'if' → logprob: -11.160842895507812

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06203501671552658
    2. ' =' → logprob: -2.812035083770752
    3. '_sub' → logprob: -10.562034606933594
    4. '_inter' → logprob: -10.687034606933594
    5. 'sub' → logprob: -12.562034606933594
    6. '_node' → logprob: -12.562034606933594
    7. '=sub' → logprob: -13.062034606933594
    8. '_' → logprob: -13.187034606933594
    9. 'intersection' → logprob: -13.187034606933594
    10. '_left' → logprob: -14.062034606933594

Token 318: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.00861681904643774
    2. ' intersect' → logprob: -4.758616924285889
    3. 'intersection' → logprob: -13.63361644744873
    4. ' inter' → logprob: -14.88361644744873
    5. '(inter' → logprob: -15.13361644744873
    6. ' intersection' → logprob: -15.25861644744873
    7. ' ' → logprob: -16.008617401123047
    8. '   ' → logprob: -16.633617401123047
    9. ' intercept' → logprob: -17.133617401123047
    10. '_inter' → logprob: -17.633617401123047

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019308974733576179
    2. '(' → logprob: -6.2519307136535645
    3. '(
' → logprob: -13.251931190490723
    4. '(node' → logprob: -15.001931190490723
    5. ' (' → logprob: -16.251930236816406
    6. 'n' → logprob: -16.751930236816406
    7. '(

' → logprob: -18.376930236816406
    8. '('' → logprob: -19.626930236816406
    9. ' n' → logprob: -20.501930236816406
    10. '(noun' → logprob: -21.001930236816406

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.125004768371582
    4. 'ode' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.375004768371582
    6. ' .' → logprob: -15.500004768371582
    7. '```' → logprob: -15.875004768371582
    8. '2' → logprob: -16.3750057220459
    9. '.left' → logprob: -17.0625057220459
    10. ',' → logprob: -17.2500057220459

Token 321: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.001523790997453034
    2. '.' → logprob: -6.501523971557617
    3. '.right' → logprob: -10.876523971557617
    4. ' .' → logprob: -14.001523971557617
    5. '.Left' → logprob: -14.376523971557617
    6. '.n' → logprob: -15.126523971557617
    7. '.
' → logprob: -15.376523971557617
    8. '.le' → logprob: -16.001523971557617
    9. ').' → logprob: -16.626523971557617
    10. 'left' → logprob: -16.751523971557617

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005319731775671244
    2. ',n' → logprob: -5.255319595336914
    3. ' ,' → logprob: -9.380319595336914
    4. 'n' → logprob: -13.755319595336914
    5. ',
' → logprob: -15.005319595336914
    6. '(n' → logprob: -16.380319595336914
    7. ' n' → logprob: -16.880319595336914
    8. ',node' → logprob: -17.505319595336914
    9. '   ' → logprob: -18.005319595336914
    10. ')' → logprob: -18.255319595336914

Token 323: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868713080883026
    2. ' n' → logprob: -1.136871337890625
    3. '	n' → logprob: -15.886871337890625
    4. ' ' → logprob: -16.636871337890625
    5. '   ' → logprob: -16.761871337890625
    6. ')n' → logprob: -18.261871337890625
    7. '  ' → logprob: -18.761871337890625
    8. '    ' → logprob: -18.886871337890625
    9. '(n' → logprob: -19.011871337890625
    10. ')' → logprob: -19.886871337890625

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005665918346494436
    2. '1' → logprob: -5.2556657791137695
    3. '.left' → logprob: -8.38066577911377
    4. 'left' → logprob: -8.88066577911377
    5. '.right' → logprob: -10.38066577911377
    6. 'n' → logprob: -11.25566577911377
    7. 'right' → logprob: -11.38066577911377
    8. 'eft' → logprob: -12.88066577911377
    9. '.' → logprob: -14.00566577911377
    10. '```' → logprob: -14.13066577911377

Token 325: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.625001907348633
    3. 'left' → logprob: -14.250001907348633
    4. '.le' → logprob: -16.375001907348633
    5. ' .' → logprob: -16.875001907348633
    6. '.right' → logprob: -17.375001907348633
    7. '.Left' → logprob: -19.125001907348633
    8. ' left' → logprob: -19.750001907348633
    9. '	left' → logprob: -19.875001907348633
    10. '.l' → logprob: -20.250001907348633

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20160162448883057
    2. ')
' → logprob: -1.7016016244888306
    3. '   ' → logprob: -8.8266019821167
    4. ')
' → logprob: -10.8266019821167
    5. ' )
' → logprob: -11.4516019821167
    6. ' )' → logprob: -11.7016019821167
    7. ' ' → logprob: -13.5766019821167
    8. ')`
' → logprob: -14.3266019821167
    9. ')

' → logprob: -14.9516019821167
    10. ')n' → logprob: -16.576601028442383

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4630648195743561
    2. '	right' → logprob: -1.9630647897720337
    3. 'right' → logprob: -2.4630649089813232
    4. ' right' → logprob: -3.0880649089813232
    5. ',' → logprob: -3.3380649089813232
    6. ',
' → logprob: -3.9630649089813232
    7. '
' → logprob: -4.338064670562744
    8. ',right' → logprob: -4.463064670562744
    9. '    
' → logprob: -4.838064670562744
    10. ' ' → logprob: -5.213064670562744

Token 328: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.8108664155006409
    2. 'right' (adapté à ' right') → logprob: -0.8108664155006409
    3. '   ' → logprob: -2.310866355895996
    4. '	right' → logprob: -4.435866355895996
    5. ',right' → logprob: -11.310866355895996
    6. ' ' → logprob: -11.560866355895996
    7. '.right' → logprob: -13.310866355895996
    8. '    
' → logprob: -13.435866355895996
    9. '    ' → logprob: -13.435866355895996
    10. '[right' → logprob: -13.560866355895996

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194984674453735
    2. '=' → logprob: -1.5019497871398926
    3. ',' → logprob: -11.75195026397705
    4. ' ' → logprob: -12.12695026397705
    5. ')' → logprob: -12.25195026397705
    6. '   ' → logprob: -13.37695026397705
    7. ' =
' → logprob: -15.25195026397705
    8. '    ' → logprob: -15.62695026397705
    9. '<|end|>' → logprob: -15.87695026397705
    10. '[' → logprob: -16.001949310302734

Token 330: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.04300125315785408
    2. ' intersect' → logprob: -3.168001174926758
    3. '(inter' → logprob: -13.418001174926758
    4. ' inter' → logprob: -15.168001174926758
    5. 'intersection' → logprob: -15.793001174926758
    6. ' ' → logprob: -16.168001174926758
    7. 'int' → logprob: -17.043001174926758
    8. '.inter' → logprob: -17.168001174926758
    9. ' intersection' → logprob: -17.293001174926758
    10. '_inter' → logprob: -17.668001174926758

Token 331: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004079470410943031
    2. '(' → logprob: -5.504079341888428
    3. ' (' → logprob: -14.504079818725586
    4. '(
' → logprob: -14.754079818725586
    5. 'n' → logprob: -15.629079818725586
    6. '(

' → logprob: -18.254079818725586
    7. '(node' → logprob: -18.879079818725586
    8. '(s' → logprob: -19.379079818725586
    9. '(None' → logprob: -19.379079818725586
    10. '('' → logprob: -19.504079818725586

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037681119283661246
    2. '.right' → logprob: -8.00037670135498
    3. '2' → logprob: -10.25037670135498
    4. 'right' → logprob: -12.87537670135498
    5. '.left' → logprob: -13.75037670135498
    6. '```' → logprob: -14.00037670135498
    7. ' ' → logprob: -14.87537670135498
    8. '.' → logprob: -14.87537670135498
    9. ' .' → logprob: -15.37537670135498
    10. '   ' → logprob: -15.37537670135498

Token 333: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.009415337815880775
    2. '.left' → logprob: -4.759415149688721
    3. '.' → logprob: -7.134415149688721
    4. ',' → logprob: -13.759415626525879
    5. ' .' → logprob: -14.634415626525879
    6. ')' → logprob: -14.884415626525879
    7. '.Right' → logprob: -15.009415626525879
    8. ').' → logprob: -15.259415626525879
    9. 'right' → logprob: -15.259415626525879
    10. ',right' → logprob: -16.009414672851562

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002445317804813385
    2. ',n' → logprob: -8.375244140625
    3. ' ,' → logprob: -11.250244140625
    4. ',
' → logprob: -14.750244140625
    5. ')' → logprob: -15.750244140625
    6. ',node' → logprob: -16.375244140625
    7. ',right' → logprob: -16.375244140625
    8. 'n' → logprob: -16.875244140625
    9. ',s' → logprob: -17.125244140625
    10. ',user' → logprob: -17.375244140625

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.57597815990448
    2. ' n' → logprob: -0.82597815990448
    3. '(n' → logprob: -10.82597827911377
    4. ')' → logprob: -12.07597827911377
    5. ')n' → logprob: -12.57597827911377
    6. '	n' → logprob: -13.07597827911377
    7. ' ' → logprob: -13.07597827911377
    8. '   ' → logprob: -13.07597827911377
    9. '[n' → logprob: -14.70097827911377
    10. '  ' → logprob: -14.70097827911377

Token 336: '2' (ID: 17)
  Prédit: '.right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.02136186696588993
    2. 'ight' → logprob: -4.021361827850342
    3. 'right' → logprob: -5.771361827850342
    4. '.' → logprob: -9.3963623046875
    5. ' .' → logprob: -12.8963623046875
    6. 'ght' → logprob: -13.6463623046875
    7. '2' → logprob: -14.2713623046875
    8. ' right' → logprob: -14.3963623046875
    9. '   ' → logprob: -14.6463623046875
    10. ' ' → logprob: -14.7713623046875

Token 337: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0006334475474432111
    2. '.' → logprob: -7.500633239746094
    3. 'right' → logprob: -10.000633239746094
    4. 'ight' → logprob: -10.375633239746094
    5. ')' → logprob: -14.000633239746094
    6. ',' → logprob: -14.125633239746094
    7. ').' → logprob: -14.500633239746094
    8. '.left' → logprob: -15.000633239746094
    9. ',right' → logprob: -15.125633239746094
    10. '   ' → logprob: -15.375633239746094

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020924527198076248
    2. '   ' → logprob: -3.8959245681762695
    3. ')
' → logprob: -7.8959245681762695
    4. ')return' → logprob: -13.14592456817627
    5. ' )' → logprob: -13.39592456817627
    6. ',' → logprob: -13.52092456817627
    7. '       ' → logprob: -13.77092456817627
    8. ' if' → logprob: -14.02092456817627
    9. '<|end|>' → logprob: -14.02092456817627
    10. 'if' → logprob: -14.27092456817627

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004715450922958553
    2. 'return' → logprob: -7.750471591949463
    3. ' return' → logprob: -10.500471115112305
    4. 'if' → logprob: -11.500471115112305
    5. '
' → logprob: -13.875471115112305
    6. ' if' → logprob: -13.875471115112305
    7. '```' → logprob: -14.250471115112305
    8. ' ' → logprob: -15.000471115112305
    9. '    
' → logprob: -15.125471115112305
    10. '       ' → logprob: -16.625471115112305

Token 340: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11036348342895508
    2. 'if' (adapté à ' if') → logprob: -2.860363483428955
    3. '   ' → logprob: -3.360363483428955
    4. ' return' → logprob: -4.485363483428955
    5. ' if' → logprob: -6.735363483428955
    6. ' ' → logprob: -10.235363006591797
    7. ')' → logprob: -11.860363006591797
    8. '
' → logprob: -12.235363006591797
    9. '	return' → logprob: -12.360363006591797
    10. '    
' → logprob: -12.985363006591797

Token 341: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.47408154606819153
    2. ' left' → logprob: -0.9740815162658691
    3. '(left' → logprob: -13.099081993103027
    4. 'n' → logprob: -14.349081993103027
    5. 'not' → logprob: -14.724081993103027
    6. ' not' → logprob: -14.974081993103027
    7. '	left' → logprob: -15.099081993103027
    8. '   ' → logprob: -15.224081993103027
    9. ' n' → logprob: -15.599081993103027
    10. ' ' → logprob: -15.599081993103027

Token 342: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023331545293331146
    2. 'is' → logprob: -3.773331642150879
    3. ' or' → logprob: -9.398331642150879
    4. 'or' → logprob: -13.148331642150879
    5. ' ' → logprob: -14.273331642150879
    6. 'and' → logprob: -15.398331642150879
    7. ' and' → logprob: -15.523331642150879
    8. ')' → logprob: -17.273330688476562
    9. '	is' → logprob: -17.398330688476562
    10. '==' → logprob: -17.898330688476562

Token 343: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023368585854768753
    2. ' None' → logprob: -3.7733685970306396
    3. 'not' → logprob: -9.398368835449219
    4. ' not' → logprob: -10.148368835449219
    5. 'none' → logprob: -14.648368835449219
    6. ' ' → logprob: -15.523368835449219
    7. '   ' → logprob: -15.898368835449219
    8. '(None' → logprob: -16.02336883544922
    9. '_None' → logprob: -16.14836883544922
    10. '=None' → logprob: -17.39836883544922

Token 344: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04899301752448082
    2. 'and' → logprob: -3.0489931106567383
    3. '   ' → logprob: -8.173993110656738
    4. ' or' → logprob: -9.048993110656738
    5. '	and' → logprob: -12.923993110656738
    6. ' ' → logprob: -13.673993110656738
    7. ')' → logprob: -13.923993110656738
    8. '       ' → logprob: -14.048993110656738
    9. 'or' → logprob: -14.923993110656738
    10. '    ' → logprob: -15.298993110656738

Token 345: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0067209405824542046
    2. ' right' → logprob: -5.006721019744873
    3. '   ' → logprob: -12.131720542907715
    4. '	right' → logprob: -16.38172149658203
    5. ' ' → logprob: -17.25672149658203
    6. '(right' → logprob: -18.38172149658203
    7. '  ' → logprob: -18.63172149658203
    8. 'left' → logprob: -20.25672149658203
    9. '[right' → logprob: -20.25672149658203
    10. 'Right' → logprob: -20.38172149658203

Token 346: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0046218992210924625
    2. 'is' → logprob: -5.379621982574463
    3. '<|end|>' → logprob: -14.629621505737305
    4. ' ' → logprob: -14.879621505737305
    5. 'None' → logprob: -15.129621505737305
    6. ')' → logprob: -15.379621505737305
    7. ' None' → logprob: -16.004621505737305
    8. '()' → logprob: -16.379621505737305
    9. ')is' → logprob: -17.129621505737305
    10. '=None' → logprob: -17.254621505737305

Token 347: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20143507421016693
    2. ' None' → logprob: -1.7014350891113281
    3. ' not' → logprob: -11.201435089111328
    4. '(None' → logprob: -12.701435089111328
    5. 'not' → logprob: -13.576435089111328
    6. ' ' → logprob: -13.576435089111328
    7. '   ' → logprob: -14.076435089111328
    8. 'none' → logprob: -14.451435089111328
    9. '_None' → logprob: -14.701435089111328
    10. '=None' → logprob: -15.326435089111328

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6114280819892883
    2. ':
' → logprob: -1.4864280223846436
    3. '   ' → logprob: -1.7364280223846436
    4. '       ' → logprob: -2.9864280223846436
    5. ' and' → logprob: -5.611428260803223
    6. ':return' → logprob: -7.361428260803223
    7. '):
' → logprob: -9.361428260803223
    8. ' or' → logprob: -9.611428260803223
    9. ',' → logprob: -10.236428260803223
    10. ')' → logprob: -10.611428260803223

Token 349: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0790606439113617
    2. '       ' → logprob: -2.5790605545043945
    3. 'return' → logprob: -9.204060554504395
    4. ' return' → logprob: -9.579060554504395
    5. '    
' → logprob: -15.204060554504395
    6. '   ' → logprob: -15.579060554504395
    7. '	return' → logprob: -15.704060554504395
    8. '```' → logprob: -16.57906150817871
    9. ' ' → logprob: -16.70406150817871
    10. '
' → logprob: -16.95406150817871

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4024015963077545
    2. '   ' → logprob: -1.1524015665054321
    3. '       ' → logprob: -4.402401447296143
    4. ' return' → logprob: -5.777401447296143
    5. 'None' → logprob: -10.4024019241333
    6. ' ' → logprob: -10.7774019241333
    7. '	return' → logprob: -12.2774019241333
    8. '    
' → logprob: -12.9024019241333
    9. ' None' → logprob: -13.0274019241333
    10. '           ' → logprob: -13.2774019241333

Token 351: ' None' (ID: 4662)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.6933774948120117
    2. 'None' → logprob: -0.6933774948120117
    3. ' None' → logprob: -8.943377494812012
    4. ' Node' → logprob: -9.568377494812012
    5. '(None' → logprob: -11.318377494812012
    6. '()' → logprob: -11.943377494812012
    7. '   ' → logprob: -12.693377494812012
    8. '(Node' → logprob: -13.068377494812012
    9. '	Node' → logprob: -13.068377494812012
    10. 'node' → logprob: -14.318377494812012

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033546582562848926
    2. ')' → logprob: -8.500335693359375
    3. ',' → logprob: -9.625335693359375
    4. '       ' → logprob: -11.125335693359375
    5. '
' → logprob: -11.500335693359375
    6. '    
' → logprob: -11.750335693359375
    7. '(' → logprob: -12.000335693359375
    8. '.' → logprob: -12.125335693359375
    9. '<|end|>' → logprob: -12.125335693359375
    10. ' else' → logprob: -12.875335693359375

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016301940195262432
    2. '(' → logprob: -7.0016303062438965
    3. ')' → logprob: -8.501629829406738
    4. '(
' → logprob: -8.876629829406738
    5. ' else' → logprob: -9.376629829406738
    6. 'else' → logprob: -9.876629829406738
    7. '    
' → logprob: -10.251629829406738
    8. ',' → logprob: -10.501629829406738
    9. '	return' → logprob: -10.501629829406738
    10. '       ' → logprob: -10.626629829406738

Token 354: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7259830832481384
    2. '   ' → logprob: -0.9759830832481384
    3. ' return' → logprob: -1.9759831428527832
    4. ')' → logprob: -7.350983142852783
    5. '	return' → logprob: -10.100982666015625
    6. ' )' → logprob: -11.850982666015625
    7. '    
' → logprob: -12.975982666015625
    8. ' ' → logprob: -13.350982666015625
    9. 'Node' → logprob: -13.600982666015625
    10. 'node' → logprob: -13.600982666015625

Token 355: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.00020354038861114532
    2. ' Node' → logprob: -8.500203132629395
    3. '	Node' → logprob: -22.00020408630371
    4. '   ' → logprob: -23.50020408630371
    5. '(Node' → logprob: -23.50020408630371
    6. '_Node' → logprob: -23.87520408630371
    7. '.Node' → logprob: -24.12520408630371
    8. '<Node' → logprob: -25.75020408630371
    9. ' ' → logprob: -26.00020408630371
    10. '_node' → logprob: -26.37520408630371

Token 356: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.008636081591248512
    2. '(' → logprob: -4.758635997772217
    3. 'left' → logprob: -11.508636474609375
    4. '(
' → logprob: -11.883636474609375
    5. '()' → logprob: -12.383636474609375
    6. '(

' → logprob: -16.258636474609375
    7. ' (' → logprob: -17.008636474609375
    8. ',left' → logprob: -17.133636474609375
    9. '(`' → logprob: -17.383636474609375
    10. ' left' → logprob: -17.383636474609375

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020568810869008303
    2. ',right' → logprob: -6.252057075500488
    3. ' ,' → logprob: -9.127057075500488
    4. ',left' → logprob: -11.002057075500488
    5. ',
' → logprob: -13.252057075500488
    6. '   ' → logprob: -14.252057075500488
    7. 'right' → logprob: -15.627057075500488
    8. ')' → logprob: -16.627056121826172
    9. ',r' → logprob: -17.002056121826172
    10. 'left' → logprob: -17.377056121826172

Token 358: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0011703446507453918
    2. ' right' → logprob: -6.7511701583862305
    3. '	right' → logprob: -16.751171112060547
    4. '   ' → logprob: -17.001171112060547
    5. ')' → logprob: -17.251171112060547
    6. '[right' → logprob: -18.001171112060547
    7. '(right' → logprob: -18.376171112060547
    8. ' ' → logprob: -18.501171112060547
    9. 'Right' → logprob: -19.876171112060547
    10. 'r' → logprob: -20.126171112060547

Token 359: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.875001907348633
    5. ')return' → logprob: -19.500001907348633
    6. ')

' → logprob: -20.625001907348633
    7. '),' → logprob: -20.750001907348633
    8. ')`' → logprob: -20.750001907348633
    9. ')#' → logprob: -20.875001907348633
    10. '))' → logprob: -20.875001907348633

Token 360: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' union' (ID: 22208)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.6446216106414795
    2. 'union' → logprob: -2.0196216106414795
    3. ' main' → logprob: -2.3946216106414795
    4. 'main' → logprob: -2.5196216106414795
    5. ' intersect' → logprob: -3.0196216106414795
    6. 'tree' → logprob: -3.1446216106414795
    7. ' union' → logprob: -3.5196216106414795
    8. ' tree' → logprob: -3.6446216106414795
    9. 'intersection' → logprob: -5.019621849060059
    10. 'merge' → logprob: -6.144621849060059

Token 362: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0028073713183403015
    2. '(' → logprob: -5.877807140350342
    3. ' (' → logprob: -13.1278076171875
    4. '(node' → logprob: -15.5028076171875
    5. '(s' → logprob: -16.3778076171875
    6. '(
' → logprob: -16.6278076171875
    7. '(N' → logprob: -17.0028076171875
    8. 'def' → logprob: -17.1278076171875
    9. '((' → logprob: -17.5028076171875
    10. '(a' → logprob: -17.6278076171875

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037323508877307177
    2. 'n' → logprob: -8.500372886657715
    3. '(n' → logprob: -8.875372886657715
    4. ')' → logprob: -11.125372886657715
    5. ' n' → logprob: -12.250372886657715
    6. ')n' → logprob: -13.000372886657715
    7. '```' → logprob: -13.250372886657715
    8. ',' → logprob: -14.000372886657715
    9. '<|end|>' → logprob: -14.125372886657715
    10. '(' → logprob: -14.250372886657715

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002764710516203195
    2. ',n' → logprob: -8.250276565551758
    3. ' ,' → logprob: -11.125276565551758
    4. ',
' → logprob: -15.625276565551758
    5. ',node' → logprob: -16.250276565551758
    6. '‌,' → logprob: -17.000276565551758
    7. 'n' → logprob: -17.000276565551758
    8. '(n' → logprob: -17.375276565551758
    9. ',N' → logprob: -18.375276565551758
    10. ')' → logprob: -18.500276565551758

Token 365: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06196768581867218
    2. ' n' → logprob: -2.811967611312866
    3. ' н' → logprob: -18.686967849731445
    4. '	n' → logprob: -18.936967849731445
    5. '<|end|>' → logprob: -18.936967849731445
    6. '(n' → logprob: -19.436967849731445
    7. ')' → logprob: -19.561967849731445
    8. '_n' → logprob: -19.561967849731445
    9. ')n' → logprob: -19.811967849731445
    10. '   ' → logprob: -19.936967849731445

Token 366: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005693563143722713
    2. '2' → logprob: -7.5005693435668945
    3. '```' → logprob: -12.625569343566895
    4. 'ode' → logprob: -13.375569343566895
    5. 'one' → logprob: -13.375569343566895
    6. 'left' → logprob: -13.500569343566895
    7. 'None' → logprob: -13.750569343566895
    8. ',' → logprob: -14.000569343566895
    9. ')' → logprob: -14.125569343566895
    10. '.' → logprob: -14.125569343566895

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02803773805499077
    2. '):
' → logprob: -3.9030377864837646
    3. ',' → logprob: -4.9030375480651855
    4. '):
' → logprob: -10.528038024902344
    5. ':' → logprob: -12.153038024902344
    6. ' ):' → logprob: -12.528038024902344
    7. ')' → logprob: -12.653038024902344
    8. '   ' → logprob: -13.278038024902344
    9. ',n' → logprob: -13.278038024902344
    10. '):

' → logprob: -14.278038024902344

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004087066277861595
    2. ' if' → logprob: -5.754086971282959
    3. 'if' → logprob: -7.004086971282959
    4. '	if' → logprob: -15.129087448120117
    5. 'None' → logprob: -15.504087448120117
    6. '   ' → logprob: -15.754087448120117
    7. ' None' → logprob: -15.879087448120117
    8. '<|end|>' → logprob: -17.129087448120117
    9. '```' → logprob: -17.504087448120117
    10. '       ' → logprob: -17.754087448120117

Token 369: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002636006975080818
    2. ' if' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.000263214111328
    4. 'None' → logprob: -18.125263214111328
    5. '	if' → logprob: -18.875263214111328
    6. 'If' → logprob: -19.750263214111328
    7. '```' → logprob: -21.125263214111328
    8. '#' → logprob: -21.875263214111328
    9. '
' → logprob: -22.250263214111328
    10. ';if' → logprob: -22.375263214111328

Token 370: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5231246948242188
    2. 'n' → logprob: -0.8981246948242188
    3. '	n' → logprob: -14.273124694824219
    4. ' not' → logprob: -15.648124694824219
    5. '   ' → logprob: -16.02312469482422
    6. '(n' → logprob: -16.58562469482422
    7. 'None' → logprob: -16.71062469482422
    8. ' н' → logprob: -16.77312469482422
    9. 'not' → logprob: -16.96062469482422
    10. ' ' → logprob: -17.39812469482422

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. 'n' → logprob: -10.500051498413086
    3. ' is' → logprob: -11.875051498413086
    4. ' ' → logprob: -12.000051498413086
    5. ' n' → logprob: -12.250051498413086
    6. 'is' → logprob: -13.250051498413086
    7. 'None' → logprob: -13.625051498413086
    8. ' None' → logprob: -13.750051498413086
    9. '```' → logprob: -14.250051498413086
    10. 'one' → logprob: -14.500051498413086

Token 372: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06196959316730499
    2. 'is' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.561969757080078
    4. '<|end|>' → logprob: -15.186969757080078
    5. 's' → logprob: -15.436969757080078
    6. '	is' → logprob: -17.186969757080078
    7. ')' → logprob: -17.186969757080078
    8. ' i' → logprob: -18.061969757080078
    9. ' 
' → logprob: -18.186969757080078
    10. '
' → logprob: -18.186969757080078

Token 373: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031777136027812958
    2. ' None' → logprob: -5.753177642822266
    3. '_None' → logprob: -17.878177642822266
    4. 'none' → logprob: -18.753177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '(None' → logprob: -19.503177642822266
    7. '_none' → logprob: -20.253177642822266
    8. '=None' → logprob: -20.503177642822266
    9. '0' → logprob: -21.628177642822266
    10. '   ' → logprob: -22.003177642822266

Token 374: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2881647050380707
    2. ':' → logprob: -2.1631646156311035
    3. 'and' → logprob: -2.1631646156311035
    4. ' or' → logprob: -4.4131646156311035
    5. '   ' → logprob: -5.4131646156311035
    6. ':
' → logprob: -5.6631646156311035
    7. ':return' → logprob: -8.913165092468262
    8. ')' → logprob: -9.663165092468262
    9. ',' → logprob: -9.788165092468262
    10. 'n' → logprob: -10.663165092468262

Token 375: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3136237561702728
    2. ' n' → logprob: -1.3136237859725952
    3. '   ' → logprob: -7.938623905181885
    4. '	n' → logprob: -12.688623428344727
    5. '  ' → logprob: -14.063623428344727
    6. ' ' → logprob: -14.188623428344727
    7. 'None' → logprob: -14.813623428344727
    8. ' None' → logprob: -16.188623428344727
    9. '(n' → logprob: -16.188623428344727
    10. '    ' → logprob: -16.688623428344727

Token 376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5358694731257856e-05
    2. '1' → logprob: -10.625035285949707
    3. 'None' → logprob: -11.875035285949707
    4. 'ot' → logprob: -13.625035285949707
    5. 'one' → logprob: -13.750035285949707
    6. ' ' → logprob: -13.875035285949707
    7. ' None' → logprob: -15.000035285949707
    8. '_' → logprob: -15.625035285949707
    9. '   ' → logprob: -16.125036239624023
    10. 'o' → logprob: -16.750036239624023

Token 377: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2519543766975403
    2. 'is' → logprob: -1.5019543170928955
    3. 'None' → logprob: -11.126954078674316
    4. ' ' → logprob: -12.126954078674316
    5. ' None' → logprob: -12.626954078674316
    6. '<|end|>' → logprob: -14.001954078674316
    7. '=None' → logprob: -15.001954078674316
    8. ')' → logprob: -15.626954078674316
    9. '	is' → logprob: -15.626954078674316
    10. 's' → logprob: -16.251955032348633

Token 378: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038826022297143936
    2. ' None' → logprob: -3.2888259887695312
    3. ' not' → logprob: -7.788825988769531
    4. 'not' → logprob: -7.913825988769531
    5. '(None' → logprob: -13.788825988769531
    6. 'none' → logprob: -13.913825988769531
    7. '_None' → logprob: -14.163825988769531
    8. ' ' → logprob: -14.413825988769531
    9. 'Not' → logprob: -14.663825988769531
    10. '=None' → logprob: -16.03882598876953

Token 379: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8700742125511169
    2. '   ' → logprob: -1.1200742721557617
    3. ':' → logprob: -1.4950742721557617
    4. ':
' → logprob: -3.4950742721557617
    5. ':return' → logprob: -8.620074272155762
    6. '):
' → logprob: -10.870074272155762
    7. '  ' → logprob: -12.245074272155762
    8. ',' → logprob: -12.370074272155762
    9. ':
' → logprob: -12.495074272155762
    10. '           ' → logprob: -12.745074272155762

Token 380: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041188886389136314
    2. '       ' → logprob: -5.504118919372559
    3. ' return' → logprob: -10.629118919372559
    4. 'return' → logprob: -11.129118919372559
    5. '	return' → logprob: -13.754118919372559
    6. 'None' → logprob: -15.254118919372559
    7. ' None' → logprob: -15.879118919372559
    8. '  ' → logprob: -16.879117965698242
    9. '<|end|>' → logprob: -17.379117965698242
    10. ' ' → logprob: -17.629117965698242

Token 381: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4337065815925598
    2. 'return' (adapté à ' return') → logprob: -1.433706521987915
    3. ' return' → logprob: -2.183706521987915
    4. '       ' → logprob: -7.183706760406494
    5. '	return' → logprob: -9.433706283569336
    6. ' ' → logprob: -12.683706283569336
    7. 'None' → logprob: -12.933706283569336
    8. '           ' → logprob: -13.183706283569336
    9. ' None' → logprob: -13.558706283569336
    10. '  ' → logprob: -14.183706283569336

Token 382: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.2729995988775045e-06
    2. ' None' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.8750057220459
    4. '_None' → logprob: -20.8750057220459
    5. 'none' → logprob: -21.5000057220459
    6. '(None' → logprob: -21.5000057220459
    7. 'No' → logprob: -21.6250057220459
    8. ',None' → logprob: -22.1250057220459
    9. '=None' → logprob: -22.7500057220459
    10. 'Node' → logprob: -24.3750057220459

Token 383: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2119285762310028
    2. '   ' → logprob: -1.8369286060333252
    3. '    
' → logprob: -3.586928606033325
    4. '  
' → logprob: -6.461928367614746
    5. '   
' → logprob: -6.961928367614746
    6. ' 
' → logprob: -7.336928367614746
    7. '\n' → logprob: -7.586928367614746
    8. ',
' → logprob: -9.836928367614746
    9. ',' → logprob: -9.961928367614746
    10. ' if' → logprob: -10.336928367614746

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.703443770878948e-06
    2. '
' → logprob: -12.000007629394531
    3. '    
' → logprob: -14.500007629394531
    4. 'if' → logprob: -15.125007629394531
    5. 'import' → logprob: -15.250007629394531
    6. '```' → logprob: -15.375007629394531
    7. '       ' → logprob: -16.00000762939453
    8. ' if' → logprob: -16.25000762939453
    9. 'n' → logprob: -16.87500762939453
    10. ',' → logprob: -17.37500762939453

Token 385: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31478244066238403
    2. 'left' (adapté à ' left') → logprob: -1.3147823810577393
    3. '   ' → logprob: -7.064782619476318
    4. ' if' → logprob: -7.814782619476318
    5. ' left' → logprob: -8.31478214263916
    6. 'l' → logprob: -11.56478214263916
    7. 'return' → logprob: -12.81478214263916
    8. 'n' → logprob: -13.93978214263916
    9. 'elif' → logprob: -13.93978214263916
    10. 'lef' → logprob: -14.81478214263916

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740792512893677
    2. ' =' → logprob: -0.9740792512893677
    3. 'left' → logprob: -14.724079132080078
    4. '=
' → logprob: -14.849079132080078
    5. '=n' → logprob: -15.099079132080078
    6. ',' → logprob: -15.224079132080078
    7. ' ' → logprob: -15.224079132080078
    8. '_' → logprob: -15.724079132080078
    9. '   ' → logprob: -15.974079132080078
    10. '_left' → logprob: -16.349079132080078

Token 387: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.1602308303117752
    2. ' union' → logprob: -1.9102308750152588
    3. '   ' → logprob: -13.91023063659668
    4. 'None' → logprob: -13.91023063659668
    5. 'un' → logprob: -14.03523063659668
    6. ' None' → logprob: -14.03523063659668
    7. '.union' → logprob: -14.03523063659668
    8. '	union' → logprob: -14.16023063659668
    9. 'unit' → logprob: -14.53523063659668
    10. '_union' → logprob: -14.91023063659668

Token 388: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009831507923081517
    2. '(' → logprob: -7.625983238220215
    3. '(
' → logprob: -7.750983238220215
    4. '((' → logprob: -9.875983238220215
    5. '(get' → logprob: -11.875983238220215
    6. '(None' → logprob: -12.375983238220215
    7. ' (' → logprob: -13.375983238220215
    8. 'get' → logprob: -15.250983238220215
    9. '(

' → logprob: -15.625983238220215
    10. 'n' → logprob: -16.8759822845459

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. '(n' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.625020980834961
    4. '   ' → logprob: -15.500020980834961
    5. ' n' → logprob: -15.625020980834961
    6. 'n' → logprob: -15.750020980834961
    7. 'ode' → logprob: -16.37502098083496
    8. '(' → logprob: -16.87502098083496
    9. ' (' → logprob: -17.25002098083496
    10. '
' → logprob: -17.37502098083496

Token 390: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.028305688872933388
    2. '.n' → logprob: -4.028305530548096
    3. '(n' → logprob: -4.903305530548096
    4. 'left' → logprob: -6.278305530548096
    5. '.right' → logprob: -7.903305530548096
    6. ' and' → logprob: -8.278306007385254
    7. '(left' → logprob: -9.778306007385254
    8. ' .' → logprob: -10.278306007385254
    9. '.' → logprob: -10.778306007385254
    10. 'and' → logprob: -11.278306007385254

Token 391: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6440500617027283
    2. ',' → logprob: -0.7690500617027283
    3. 'if' → logprob: -4.644050121307373
    4. ',n' → logprob: -6.519050121307373
    5. ' ,' → logprob: -9.269049644470215
    6. 'n' → logprob: -9.519049644470215
    7. '   ' → logprob: -10.019049644470215
    8. ' ' → logprob: -10.269049644470215
    9. '(n' → logprob: -11.394049644470215
    10. ')' → logprob: -11.894049644470215

Token 392: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16022655367851257
    2. 'n' → logprob: -1.910226583480835
    3. '1' → logprob: -13.910226821899414
    4. '(n' → logprob: -14.410226821899414
    5. '	n' → logprob: -15.410226821899414
    6. 'None' → logprob: -15.410226821899414
    7. ' ' → logprob: -16.535226821899414
    8. ' None' → logprob: -16.785226821899414
    9. ' (' → logprob: -17.035226821899414
    10. 's' → logprob: -17.160226821899414

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005062263924628496
    2. '2' → logprob: -5.630062103271484
    3. ' not' → logprob: -7.380062103271484
    4. 'not' → logprob: -8.630062103271484
    5. ' ' → logprob: -9.005062103271484
    6. '   ' → logprob: -9.255062103271484
    7. 'else' → logprob: -9.505062103271484
    8. 'n' → logprob: -9.630062103271484
    9. ' else' → logprob: -9.630062103271484
    10. 'None' → logprob: -9.880062103271484

Token 394: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6949572563171387
    2. 'else' → logprob: -0.6949572563171387
    3. ' is' → logprob: -6.444957256317139
    4. ' and' → logprob: -9.319957733154297
    5. 'and' → logprob: -9.819957733154297
    6. 'is' → logprob: -9.819957733154297
    7. 'left' → logprob: -11.319957733154297
    8. '   ' → logprob: -12.569957733154297
    9. ' ' → logprob: -13.319957733154297
    10. ' left' → logprob: -13.444957733154297

Token 395: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14295437932014465
    2. ' None' → logprob: -2.0179543495178223
    3. 'n' → logprob: -8.89295482635498
    4. '   ' → logprob: -9.64295482635498
    5. '(None' → logprob: -10.64295482635498
    6. ' n' → logprob: -11.14295482635498
    7. 'Node' → logprob: -11.26795482635498
    8. ' ' → logprob: -11.39295482635498
    9. '  ' → logprob: -12.76795482635498
    10. '    ' → logprob: -12.89295482635498

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002005961025133729
    2. ',n' → logprob: -6.2520060539245605
    3. ' ,' → logprob: -9.627005577087402
    4. ',
' → logprob: -12.252005577087402
    5. '(n' → logprob: -12.502005577087402
    6. '   ' → logprob: -13.377005577087402
    7. 'n' → logprob: -13.877005577087402
    8. ' ' → logprob: -15.752005577087402
    9. ',(' → logprob: -15.877005577087402
    10. ' n' → logprob: -16.25200653076172

Token 397: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.575965940952301
    2. ' n' → logprob: -0.825965940952301
    3. '   ' → logprob: -10.950965881347656
    4. '(n' → logprob: -12.825965881347656
    5. '  ' → logprob: -13.075965881347656
    6. ' ' → logprob: -13.700965881347656
    7. '    ' → logprob: -13.825965881347656
    8. '	n' → logprob: -13.950965881347656
    9. ' (' → logprob: -14.450965881347656
    10. '       ' → logprob: -15.950965881347656

Token 398: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.50000286102295
    3. 'n' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.87500286102295
    6. '```' → logprob: -16.375001907348633
    7. '
' → logprob: -16.875001907348633
    8. '  ' → logprob: -17.125001907348633
    9. '.' → logprob: -17.187501907348633
    10. '``' → logprob: -17.312501907348633

Token 399: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.292907877039397e-06
    2. 'left' → logprob: -12.75000286102295
    3. '.' → logprob: -15.25000286102295
    4. ' .' → logprob: -16.000003814697266
    5. '[left' → logprob: -18.500003814697266
    6. '.Left' → logprob: -19.125003814697266
    7. '1' → logprob: -19.125003814697266
    8. '	left' → logprob: -19.625003814697266
    9. '.right' → logprob: -20.250003814697266
    10. ' left' → logprob: -20.750003814697266

Token 400: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06197093799710274
    2. 'if' → logprob: -2.8119709491729736
    3. ')' → logprob: -13.061970710754395
    4. '(if' → logprob: -13.936970710754395
    5. '   ' → logprob: -16.68697166442871
    6. '	if' → logprob: -16.81197166442871
    7. '),' → logprob: -17.18697166442871
    8. ' ' → logprob: -17.31197166442871
    9. 'If' → logprob: -17.93697166442871
    10. '()' → logprob: -18.06197166442871

Token 401: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858953505754471
    2. ' n' → logprob: -3.0485894680023193
    3. 'None' → logprob: -13.673589706420898
    4. '2' → logprob: -15.173589706420898
    5. '(n' → logprob: -15.548589706420898
    6. ' ' → logprob: -15.548589706420898
    7. '   ' → logprob: -17.0485897064209
    8. ' not' → logprob: -17.1735897064209
    9. 'not' → logprob: -17.1735897064209
    10. '  ' → logprob: -17.4235897064209

Token 402: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.183501293184236e-05
    2. 'n' → logprob: -10.37507152557373
    3. '1' → logprob: -11.00007152557373
    4. ' ' → logprob: -11.62507152557373
    5. 'None' → logprob: -12.12507152557373
    6. ' n' → logprob: -12.50007152557373
    7. '   ' → logprob: -13.25007152557373
    8. ' None' → logprob: -13.37507152557373
    9. '  ' → logprob: -14.00007152557373
    10. '```' → logprob: -15.12507152557373

Token 403: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02975083328783512
    2. 'else' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.02975082397461
    4. '	else' → logprob: -17.40475082397461
    5. ')' → logprob: -19.02975082397461
    6. '   ' → logprob: -19.15475082397461
    7. ' is' → logprob: -19.27975082397461
    8. '  ' → logprob: -19.40475082397461
    9. ' ' → logprob: -19.90475082397461
    10. '_else' → logprob: -19.90475082397461

Token 404: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011703446507453918
    2. ' None' → logprob: -6.7511701583862305
    3. '(None' → logprob: -16.876171112060547
    4. 'Node' → logprob: -18.001171112060547
    5. ',None' → logprob: -18.751171112060547
    6. ' ' → logprob: -18.876171112060547
    7. '=None' → logprob: -19.251171112060547
    8. '_None' → logprob: -19.626171112060547
    9. '   ' → logprob: -20.501171112060547
    10. '.None' → logprob: -21.126171112060547

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2536586821079254
    2. ')
' → logprob: -1.503658652305603
    3. '   ' → logprob: -6.378658771514893
    4. ')
' → logprob: -11.503658294677734
    5. ')

' → logprob: -12.128658294677734
    6. 'if' → logprob: -13.003658294677734
    7. ' )
' → logprob: -13.128658294677734
    8. ' )' → logprob: -13.378658294677734
    9. '),' → logprob: -13.378658294677734
    10. ' ' → logprob: -13.503658294677734

Token 406: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37955692410469055
    2. '   ' → logprob: -1.2545568943023682
    3. ',
' → logprob: -4.129557132720947
    4. ' ,' → logprob: -4.379557132720947
    5. ',right' → logprob: -7.504557132720947
    6. '    ' → logprob: -7.629557132720947
    7. '    
' → logprob: -8.629556655883789
    8. ')' → logprob: -8.754556655883789
    9. ' ' → logprob: -9.379556655883789
    10. ' ,
' → logprob: -9.754556655883789

Token 407: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.16250570118427277
    2. 'right' (adapté à ' right') → logprob: -2.662505626678467
    3. '   ' → logprob: -2.912505626678467
    4. '	right' → logprob: -4.412505626678467
    5. ' left' → logprob: -4.912505626678467
    6. 'left' → logprob: -5.912505626678467
    7. '    ' → logprob: -6.912505626678467
    8. ',' → logprob: -7.287505626678467
    9. '[' → logprob: -7.537505626678467
    10. '	left' → logprob: -8.162506103515625

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687366247177124
    2. '=' → logprob: -1.136873722076416
    3. ')' → logprob: -13.511873245239258
    4. ' ' → logprob: -14.511873245239258
    5. '   ' → logprob: -15.136873245239258
    6. ',' → logprob: -15.761873245239258
    7. '=
' → logprob: -16.511873245239258
    8. 's' → logprob: -16.511873245239258
    9. ' =
' → logprob: -16.511873245239258
    10. '(' → logprob: -17.261873245239258

Token 409: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.1002088338136673
    2. ' union' → logprob: -2.3502087593078613
    3. '.union' → logprob: -14.35020923614502
    4. '	union' → logprob: -14.72520923614502
    5. '_union' → logprob: -14.97520923614502
    6. 'unit' → logprob: -15.10020923614502
    7. 'un' → logprob: -15.47520923614502
    8. '   ' → logprob: -16.100208282470703
    9. ' ' → logprob: -16.600208282470703
    10. 'Union' → logprob: -16.975208282470703

Token 410: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00018685187387745827
    2. '(' → logprob: -8.625186920166016
    3. '((' → logprob: -12.750186920166016
    4. ' (' → logprob: -12.875186920166016
    5. '(
' → logprob: -13.750186920166016
    6. 'n' → logprob: -14.250186920166016
    7. '(

' → logprob: -18.875186920166016
    8. '   ' → logprob: -19.500186920166016
    9. '```' → logprob: -20.000186920166016
    10. ' ' → logprob: -20.250186920166016

Token 411: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07304607331752777
    2. 'n' → logprob: -2.6980459690093994
    3. '1' → logprob: -5.8230462074279785
    4. '(' → logprob: -9.44804573059082
    5. '(None' → logprob: -10.07304573059082
    6. ' n' → logprob: -11.57304573059082
    7. '(
' → logprob: -12.57304573059082
    8. 'None' → logprob: -12.57304573059082
    9. ',n' → logprob: -13.32304573059082
    10. '<n' → logprob: -14.07304573059082

Token 412: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.062190402299165726
    2. '.left' → logprob: -2.812190294265747
    3. '.' → logprob: -8.437190055847168
    4. ' .' → logprob: -13.437190055847168
    5. '.n' → logprob: -13.812190055847168
    6. 'right' → logprob: -13.937190055847168
    7. '   ' → logprob: -14.312190055847168
    8. ')' → logprob: -14.937190055847168
    9. ').' → logprob: -15.062190055847168
    10. ' ' → logprob: -15.437190055847168

Token 413: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.048587486147880554
    2. 'if' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.173587799072266
    4. ',' → logprob: -17.923587799072266
    5. '   ' → logprob: -18.173587799072266
    6. 'If' → logprob: -18.423587799072266
    7. '[' → logprob: -19.798587799072266
    8. ' ' → logprob: -19.923587799072266
    9. '(if' → logprob: -20.048587799072266
    10. '```' → logprob: -20.173587799072266

Token 414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0268902275711298
    2. ' n' → logprob: -3.651890277862549
    3. 'None' → logprob: -7.526890277862549
    4. ' None' → logprob: -10.15188980102539
    5. '(n' → logprob: -11.77688980102539
    6. '(None' → logprob: -13.40188980102539
    7. ' not' → logprob: -13.65188980102539
    8. '   ' → logprob: -14.65188980102539
    9. 'not' → logprob: -14.65188980102539
    10. 'none' → logprob: -15.27688980102539

Token 415: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6339300870895386
    2. ' None' → logprob: -1.3839300870895386
    3. '1' → logprob: -1.7589300870895386
    4. 'None' → logprob: -3.133930206298828
    5. ' else' → logprob: -7.633930206298828
    6. ' right' → logprob: -7.758930206298828
    7. '(None' → logprob: -7.758930206298828
    8. ' ' → logprob: -7.883930206298828
    9. '  ' → logprob: -8.133930206298828
    10. '   ' → logprob: -8.133930206298828

Token 416: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16023235023021698
    2. 'else' → logprob: -1.9102323055267334
    3. ' if' → logprob: -12.285232543945312
    4. ' or' → logprob: -13.410232543945312
    5. 'if' → logprob: -14.035232543945312
    6. ' ' → logprob: -14.660232543945312
    7. '```' → logprob: -15.035232543945312
    8. ' is' → logprob: -15.285232543945312
    9. '	else' → logprob: -16.910232543945312
    10. '   ' → logprob: -17.160232543945312

Token 417: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03804194927215576
    2. ' None' → logprob: -3.2880420684814453
    3. '(None' → logprob: -15.163042068481445
    4. '=None' → logprob: -16.288042068481445
    5. ',None' → logprob: -16.913042068481445
    6. ' ' → logprob: -17.538042068481445
    7. '_None' → logprob: -17.538042068481445
    8. '.None' → logprob: -18.163042068481445
    9. 'No' → logprob: -18.663042068481445
    10. '   ' → logprob: -19.163042068481445

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ' ,' → logprob: -9.750078201293945
    3. ',right' → logprob: -11.000078201293945
    4. ' if' → logprob: -13.625078201293945
    5. ',n' → logprob: -13.750078201293945
    6. 'if' → logprob: -14.875078201293945
    7. ',None' → logprob: -15.000078201293945
    8. '   ' → logprob: -15.625078201293945
    9. ',
' → logprob: -17.375078201293945
    10. ',left' → logprob: -17.500078201293945

Token 419: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868715465068817
    2. 'n' → logprob: -1.136871576309204
    3. '(n' → logprob: -15.136871337890625
    4. '   ' → logprob: -16.386871337890625
    5. 'None' → logprob: -16.636871337890625
    6. ' ' → logprob: -17.136871337890625
    7. '	n' → logprob: -17.386871337890625
    8. ' ' → logprob: -17.636871337890625
    9. ' None' → logprob: -18.011871337890625
    10. ' (' → logprob: -18.261871337890625

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014299227041192353
    2. '1' → logprob: -9.750143051147461
    3. 'right' → logprob: -10.250143051147461
    4. 'n' → logprob: -10.500143051147461
    5. 'ight' → logprob: -11.375143051147461
    6. '.right' → logprob: -12.875143051147461
    7. '   ' → logprob: -13.375143051147461
    8. 'r' → logprob: -14.625143051147461
    9. ' ' → logprob: -14.812643051147461
    10. '_' → logprob: -14.937643051147461

Token 421: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0001761272142175585
    2. '.' → logprob: -9.000176429748535
    3. 'right' → logprob: -9.875176429748535
    4. ' .' → logprob: -14.125176429748535
    5. '	right' → logprob: -16.00017547607422
    6. ' right' → logprob: -16.12517547607422
    7. '.
' → logprob: -16.62517547607422
    8. ')' → logprob: -16.87517547607422
    9. '.left' → logprob: -17.00017547607422
    10. ' ' → logprob: -17.12517547607422

Token 422: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0380416102707386
    2. 'if' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.413042068481445
    4. '   ' → logprob: -17.163042068481445
    5. ')' → logprob: -17.538042068481445
    6. '	if' → logprob: -19.413042068481445
    7. 'If' → logprob: -19.538042068481445
    8. ' ' → logprob: -19.788042068481445
    9. '  ' → logprob: -20.538042068481445
    10. '?' → logprob: -20.788042068481445

Token 423: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003259830642491579
    2. ' n' → logprob: -5.753259658813477
    3. 'None' → logprob: -9.503259658813477
    4. '(n' → logprob: -13.003259658813477
    5. ' None' → logprob: -13.253259658813477
    6. '(None' → logprob: -13.753259658813477
    7. 'not' → logprob: -14.628259658813477
    8. '   ' → logprob: -14.878259658813477
    9. ' not' → logprob: -14.878259658813477
    10. '(' → logprob: -14.878259658813477

Token 424: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.179569077678025e-05
    2. '1' → logprob: -10.750041961669922
    3. 'None' → logprob: -11.500041961669922
    4. '   ' → logprob: -13.250041961669922
    5. 'n' → logprob: -13.375041961669922
    6. ' None' → logprob: -13.625041961669922
    7. ' ' → logprob: -13.750041961669922
    8. '  ' → logprob: -14.375041961669922
    9. 'else' → logprob: -14.625041961669922
    10. 'one' → logprob: -14.625041961669922

Token 425: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5760254263877869
    2. 'else' → logprob: -0.8260254263877869
    3. 'right' → logprob: -10.201025009155273
    4. ' is' → logprob: -11.326025009155273
    5. ' right' → logprob: -11.451025009155273
    6. '```' → logprob: -12.201025009155273
    7. ' ' → logprob: -12.326025009155273
    8. '         ' → logprob: -12.576025009155273
    9. '   ' → logprob: -12.701025009155273
    10. ')' → logprob: -13.201025009155273

Token 426: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0059355515986680984
    2. ' None' → logprob: -5.1309356689453125
    3. 'right' → logprob: -12.630935668945312
    4. '(None' → logprob: -13.630935668945312
    5. 'Right' → logprob: -14.130935668945312
    6. ' ' → logprob: -14.755935668945312
    7. ' right' → logprob: -14.755935668945312
    8. '   ' → logprob: -15.005935668945312
    9. '=None' → logprob: -15.505935668945312
    10. 'none' → logprob: -15.880935668945312

Token 427: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3188531696796417
    2. ')' → logprob: -1.3188531398773193
    3. '   ' → logprob: -5.193853378295898
    4. ')
' → logprob: -11.943853378295898
    5. ' )
' → logprob: -12.193853378295898
    6. ' ' → logprob: -13.068853378295898
    7. ',' → logprob: -13.193853378295898
    8. '       ' → logprob: -13.568853378295898
    9. ' )' → logprob: -13.568853378295898
    10. ')

' → logprob: -13.693853378295898

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025143080856651068
    2. ' return' → logprob: -6.627514362335205
    3. 'return' → logprob: -6.752514362335205
    4. '    
' → logprob: -11.752513885498047
    5. '
' → logprob: -12.002513885498047
    6. '	return' → logprob: -13.002513885498047
    7. '       ' → logprob: -13.252513885498047
    8. ')' → logprob: -14.627513885498047
    9. '```' → logprob: -15.002513885498047
    10. '   ' → logprob: -15.627513885498047

Token 429: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008628170937299728
    2. 'if' (adapté à ' if') → logprob: -4.7586283683776855
    3. ' return' → logprob: -11.758627891540527
    4. '   ' → logprob: -12.258627891540527
    5. '
' → logprob: -15.133627891540527
    6. 'node' → logprob: -15.133627891540527
    7. ' if' → logprob: -15.758627891540527
    8. '	return' → logprob: -16.633628845214844
    9. '#' → logprob: -16.883628845214844
    10. '```' → logprob: -17.008628845214844

Token 430: ' left' (ID: 3561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2254640907049179
    2. ' n' → logprob: -1.600464105606079
    3. '(n' → logprob: -10.1004638671875
    4. ' (' → logprob: -12.3504638671875
    5. ' not' → logprob: -13.1004638671875
    6. 'not' → logprob: -13.3504638671875
    7. '(' → logprob: -13.8504638671875
    8. '   ' → logprob: -14.3504638671875
    9. '	n' → logprob: -14.6004638671875
    10. '
' → logprob: -16.1004638671875

Token 431: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12708024680614471
    2. 'is' → logprob: -2.127080202102661
    3. ' or' → logprob: -8.877079963684082
    4. 'or' → logprob: -11.627079963684082
    5. ' ' → logprob: -13.002079963684082
    6. ')' → logprob: -14.502079963684082
    7. '==' → logprob: -15.877079963684082
    8. '	is' → logprob: -16.1270809173584
    9. ')is' → logprob: -16.2520809173584
    10. '   ' → logprob: -16.5020809173584

Token 432: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12693671882152557
    2. ' None' → logprob: -2.126936674118042
    3. 'none' → logprob: -12.376936912536621
    4. ' not' → logprob: -13.126936912536621
    5. 'not' → logprob: -14.001936912536621
    6. ' none' → logprob: -15.001936912536621
    7. '   ' → logprob: -15.126936912536621
    8. 'left' → logprob: -15.626936912536621
    9. '=None' → logprob: -16.126935958862305
    10. '(None' → logprob: -16.126935958862305

Token 433: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3132673501968384
    2. ' and' → logprob: -1.3132673501968384
    3. '   ' → logprob: -12.313267707824707
    4. ' or' → logprob: -14.938267707824707
    5. '	and' → logprob: -15.188267707824707
    6. 'or' → logprob: -15.563267707824707
    7. ' ' → logprob: -16.06326675415039
    8. ')' → logprob: -16.31326675415039
    9. ',' → logprob: -16.68826675415039
    10. '       ' → logprob: -17.06326675415039

Token 434: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.14271700382232666
    2. ' right' → logprob: -2.017716884613037
    3. '   ' → logprob: -10.267717361450195
    4. '	right' → logprob: -13.142717361450195
    5. ' ' → logprob: -13.267717361450195
    6. '
' → logprob: -13.517717361450195
    7. '(right' → logprob: -14.517717361450195
    8. 'left' → logprob: -14.892717361450195
    9. 'Right' → logprob: -15.767717361450195
    10. '  ' → logprob: -15.767717361450195

Token 435: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16039350628852844
    2. 'is' → logprob: -1.910393476486206
    3. 'None' → logprob: -9.285393714904785
    4. ' None' → logprob: -10.160393714904785
    5. '<|end|>' → logprob: -10.785393714904785
    6. ' ' → logprob: -11.410393714904785
    7. '=None' → logprob: -12.910393714904785
    8. '	is' → logprob: -13.660393714904785
    9. ')is' → logprob: -13.910393714904785
    10. '<|end|>' → logprob: -15.285393714904785

Token 436: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029751643538475037
    2. ' None' → logprob: -3.5297515392303467
    3. '(None' → logprob: -14.779751777648926
    4. '   ' → logprob: -15.404751777648926
    5. ' ' → logprob: -15.654751777648926
    6. '_None' → logprob: -15.904751777648926
    7. '=None' → logprob: -16.27975082397461
    8. 'none' → logprob: -16.90475082397461
    9. ' not' → logprob: -17.40475082397461
    10. 'not' → logprob: -17.52975082397461

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6968141794204712
    2. '   ' → logprob: -1.3218141794204712
    3. ' and' → logprob: -2.1968140602111816
    4. '       ' → logprob: -2.5718140602111816
    5. ':
' → logprob: -3.0718140602111816
    6. 'and' → logprob: -7.446814060211182
    7. ':return' → logprob: -8.82181453704834
    8. ')' → logprob: -9.07181453704834
    9. '):
' → logprob: -9.32181453704834
    10. '):' → logprob: -9.32181453704834

Token 438: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6330952048301697
    2. '       ' → logprob: -0.7580952048301697
    3. 'return' → logprob: -8.258094787597656
    4. ' return' → logprob: -8.383094787597656
    5. '	return' → logprob: -13.133094787597656
    6. '```' → logprob: -13.383094787597656
    7. ' if' → logprob: -13.883094787597656
    8. 'if' → logprob: -14.508094787597656
    9. '   ' → logprob: -14.508094787597656
    10. ' ' → logprob: -15.008094787597656

Token 439: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18857617676258087
    2. '   ' → logprob: -1.9385762214660645
    3. 'if' → logprob: -4.3135762214660645
    4. 'None' → logprob: -4.9385762214660645
    5. ' return' → logprob: -5.0635762214660645
    6. '       ' → logprob: -7.8135762214660645
    7. ' None' → logprob: -8.063575744628906
    8. ' if' → logprob: -8.688575744628906
    9. '	return' → logprob: -9.688575744628906
    10. ' ' → logprob: -9.813575744628906

Token 440: ' leaf' (ID: 25882)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4295308291912079
    2. 'if' → logprob: -1.0545308589935303
    3. '   ' → logprob: -7.804530620574951
    4. ' if' → logprob: -8.55453109741211
    5. ' return' → logprob: -9.17953109741211
    6. '#' → logprob: -9.30453109741211
    7. '       ' → logprob: -10.55453109741211
    8. '	return' → logprob: -13.67953109741211
    9. 'If' → logprob: -13.92953109741211
    10. '```' → logprob: -14.05453109741211

Token 441: ' present' (ID: 3333)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07754375785589218
    2. ' return' → logprob: -3.2025437355041504
    3. 'return' → logprob: -4.07754373550415
    4. ' if' → logprob: -4.20254373550415
    5. '       ' → logprob: -6.70254373550415
    6. 'if' → logprob: -7.95254373550415
    7. '    
' → logprob: -9.077544212341309
    8. '
' → logprob: -9.952544212341309
    9. '    ' → logprob: -9.952544212341309
    10. '	return' → logprob: -10.202544212341309

Token 442: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04896463826298714
    2. ' if' → logprob: -3.423964738845825
    3. ' and' → logprob: -4.423964500427246
    4. 'if' → logprob: -6.673964500427246
    5. 'and' → logprob: -7.173964500427246
    6. 'return' → logprob: -7.423964500427246
    7. ':' → logprob: -8.173964500427246
    8. ' return' → logprob: -9.173964500427246
    9. ',' → logprob: -9.923964500427246
    10. ':
' → logprob: -10.173964500427246

Token 443: ' either' (ID: 4784)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09897175431251526
    2. ' (' → logprob: -3.0989718437194824
    3. 'n' → logprob: -3.2239718437194824
    4. ' n' → logprob: -5.098971843719482
    5. '((' → logprob: -5.848971843719482
    6. '(' → logprob: -8.723971366882324
    7. ' ((' → logprob: -9.223971366882324
    8. '(
' → logprob: -9.973971366882324
    9. '(not' → logprob: -11.723971366882324
    10. '(s' → logprob: -12.098971366882324

Token 444: ' leaf' (ID: 25882)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7115880250930786
    2. ' (' → logprob: -1.4615880250930786
    3. 'n' → logprob: -1.8365880250930786
    4. ' n' → logprob: -2.211587905883789
    5. '(' → logprob: -4.836587905883789
    6. '(
' → logprob: -8.211587905883789
    7. ' or' → logprob: -9.586587905883789
    8. '((' → logprob: -10.211587905883789
    9. ' (
' → logprob: -11.211587905883789
    10. ' ((' → logprob: -11.461587905883789

Token 445: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04393375292420387
    2. ' and' → logprob: -3.918933868408203
    3. ' (' → logprob: -4.668933868408203
    4. '(n' → logprob: -5.293933868408203
    5. 'or' → logprob: -5.418933868408203
    6. ' if' → logprob: -6.543933868408203
    7. 'and' → logprob: -7.168933868408203
    8. '   ' → logprob: -7.543933868408203
    9. ' is' → logprob: -7.793933868408203
    10. ',' → logprob: -8.418933868408203

Token 446: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026607146486639977
    2. '       ' → logprob: -3.651607036590576
    3. ' if' → logprob: -8.151607513427734
    4. ',' → logprob: -12.026607513427734
    5. 'if' → logprob: -12.401607513427734
    6. '```' → logprob: -12.901607513427734
    7. ' and' → logprob: -13.776607513427734
    8. ' return' → logprob: -13.776607513427734
    9. '<|end|>' → logprob: -14.526607513427734
    10. '    ' → logprob: -14.776607513427734

Token 447: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5272586941719055
    2. 'if' (adapté à ' if') → logprob: -1.0272586345672607
    3. '   ' → logprob: -3.2772586345672607
    4. ' return' → logprob: -4.90225887298584
    5. 'return' → logprob: -5.02725887298584
    6. '       ' → logprob: -10.27725887298584
    7. '(n' → logprob: -11.15225887298584
    8. ' n' → logprob: -11.40225887298584
    9. ' (' → logprob: -12.15225887298584
    10. 'n' → logprob: -12.65225887298584

Token 448: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13531361520290375
    2. 'n' → logprob: -2.2603135108947754
    3. ' (' → logprob: -4.010313510894775
    4. '((' → logprob: -6.260313510894775
    5. ' n' → logprob: -6.385313510894775
    6. '(' → logprob: -8.135313987731934
    7. '   ' → logprob: -9.635313987731934
    8. '(
' → logprob: -9.635313987731934
    9. ' ' → logprob: -10.635313987731934
    10. ' ((' → logprob: -11.010313987731934

Token 449: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26586103439331055
    2. 'n' → logprob: -1.6408610343933105
    3. ' (' → logprob: -3.3908610343933105
    4. ' n' → logprob: -5.2658610343933105
    5. '((' → logprob: -8.015861511230469
    6. '   ' → logprob: -8.890861511230469
    7. '(' → logprob: -9.015861511230469
    8. ' ' → logprob: -9.265861511230469
    9. '(not' → logprob: -11.078361511230469
    10. '  ' → logprob: -11.140861511230469

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'n' → logprob: -14.000001907348633
    3. ' n' → logprob: -14.500001907348633
    4. 'and' → logprob: -16.000001907348633
    5. 'on' → logprob: -16.625001907348633
    6. '```' → logprob: -17.125001907348633
    7. 'None' → logprob: -17.750001907348633
    8. '2' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '' → logprob: -18.625001907348633

Token 451: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5077804923057556
    2. ' and' → logprob: -1.0077805519104004
    3. 'and' → logprob: -3.6327805519104004
    4. 'is' → logprob: -5.0077805519104
    5. ' ' → logprob: -11.757780075073242
    6. '   ' → logprob: -12.632780075073242
    7. ')' → logprob: -14.257780075073242
    8. '    ' → logprob: -14.757780075073242
    9. ' 
' → logprob: -15.007780075073242
    10. ' left' → logprob: -15.757780075073242

Token 452: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7257215976715088
    2. ' not' → logprob: -0.9757215976715088
    3. 'None' → logprob: -2.225721597671509
    4. ' None' → logprob: -3.475721597671509
    5. '(None' → logprob: -9.10072135925293
    6. 'Not' → logprob: -11.22572135925293
    7. ' ' → logprob: -11.85072135925293
    8. 'none' → logprob: -11.85072135925293
    9. '	not' → logprob: -11.97572135925293
    10. '(not' → logprob: -12.10072135925293

Token 453: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038100581616163254
    2. ' None' → logprob: -3.288100481033325
    3. 'not' → logprob: -10.038100242614746
    4. '(None' → logprob: -11.788100242614746
    5. 'none' → logprob: -12.538100242614746
    6. ' not' → logprob: -13.163100242614746
    7. '_None' → logprob: -14.288100242614746
    8. ' ' → logprob: -14.913100242614746
    9. '=None' → logprob: -14.913100242614746
    10. '_none' → logprob: -15.288100242614746

Token 454: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12697754800319672
    2. 'and' → logprob: -2.1269774436950684
    3. ')' → logprob: -10.751977920532227
    4. '   ' → logprob: -11.001977920532227
    5. ' ' → logprob: -12.001977920532227
    6. ' or' → logprob: -12.376977920532227
    7. '	and' → logprob: -14.876977920532227
    8. '       ' → logprob: -15.501977920532227
    9. '    ' → logprob: -15.626977920532227
    10. 'or' → logprob: -16.251977920532227

Token 455: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.17409583926200867
    2. ' and' → logprob: -1.924095869064331
    3. 'and' → logprob: -4.674095630645752
    4. 'or' → logprob: -5.424095630645752
    5. ' ' → logprob: -10.79909610748291
    6. '   ' → logprob: -11.54909610748291
    7. '	or' → logprob: -13.29909610748291
    8. '       ' → logprob: -14.67409610748291
    9. '    ' → logprob: -14.79909610748291
    10. '  ' → logprob: -15.79909610748291

Token 456: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06268799304962158
    2. '(n' → logprob: -2.812687873840332
    3. '       ' → logprob: -7.687687873840332
    4. '   ' → logprob: -9.687687873840332
    5. '           ' → logprob: -10.062687873840332
    6. '          ' → logprob: -10.187687873840332
    7. '        ' → logprob: -10.687687873840332
    8. '      ' → logprob: -10.812687873840332
    9. '(not' → logprob: -10.937687873840332
    10. '    ' → logprob: -11.062687873840332

Token 457: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1789574772119522
    2. '(n' → logprob: -2.178957462310791
    3. ' n' → logprob: -3.053957462310791
    4. ' (' → logprob: -5.678957462310791
    5. '   ' → logprob: -9.80395793914795
    6. '(' → logprob: -10.42895793914795
    7. '	n' → logprob: -11.55395793914795
    8. '    ' → logprob: -12.55395793914795
    9. ' ' → logprob: -13.30395793914795
    10. '       ' → logprob: -13.55395793914795

Token 458: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014740281039848924
    2. 'n' → logprob: -9.500147819519043
    3. ' n' → logprob: -9.875147819519043
    4. ' ' → logprob: -11.000147819519043
    5. '   ' → logprob: -12.750147819519043
    6. '  ' → logprob: -15.125147819519043
    7. '    ' → logprob: -15.250147819519043
    8. '(n' → logprob: -15.375147819519043
    9. '```' → logprob: -16.000146865844727
    10. '
' → logprob: -16.250146865844727

Token 459: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03807488828897476
    2. 'is' → logprob: -3.2880749702453613
    3. ')' → logprob: -10.413074493408203
    4. ')is' → logprob: -13.163074493408203
    5. ' ' → logprob: -14.413074493408203
    6. '
' → logprob: -14.913074493408203
    7. ' )' → logprob: -15.538074493408203
    8. ' ' → logprob: -16.538074493408203
    9. '<|end|>' → logprob: -16.538074493408203
    10. '	is' → logprob: -16.663074493408203

Token 460: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03366102650761604
    2. 'not' → logprob: -3.408661127090454
    3. ' ' → logprob: -11.783660888671875
    4. 'None' → logprob: -12.658660888671875
    5. '	not' → logprob: -13.408660888671875
    6. ' None' → logprob: -13.783660888671875
    7. '   ' → logprob: -14.533660888671875
    8. 'Not' → logprob: -15.408660888671875
    9. '  ' → logprob: -15.533660888671875
    10. '1' → logprob: -15.783660888671875

Token 461: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018170194700360298
    2. ' None' → logprob: -4.018170356750488
    3. 'not' → logprob: -11.268170356750488
    4. '(None' → logprob: -12.768170356750488
    5. '_None' → logprob: -13.268170356750488
    6. ' not' → logprob: -13.893170356750488
    7. 'none' → logprob: -13.893170356750488
    8. '=None' → logprob: -14.643170356750488
    9. '_none' → logprob: -15.393170356750488
    10. ',None' → logprob: -16.018169403076172

Token 462: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04081735759973526
    2. '):' → logprob: -3.2908172607421875
    3. ')' → logprob: -6.2908172607421875
    4. '       ' → logprob: -7.6658172607421875
    5. '   ' → logprob: -9.040817260742188
    6. ':
' → logprob: -9.040817260742188
    7. ':' → logprob: -9.415817260742188
    8. ' and' → logprob: -9.665817260742188
    9. '):
' → logprob: -10.290817260742188
    10. ' ):
' → logprob: -11.290817260742188

Token 463: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016968417912721634
    2. '           ' → logprob: -7.001697063446045
    3. 'return' → logprob: -8.251696586608887
    4. ' return' → logprob: -8.376696586608887
    5. ':
' → logprob: -8.751696586608887
    6. '
' → logprob: -9.876696586608887
    7. '   ' → logprob: -11.251696586608887
    8. ':' → logprob: -11.501696586608887
    9. ':return' → logprob: -11.501696586608887
    10. '        
' → logprob: -11.751696586608887

Token 464: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26306015253067017
    2. 'return' (adapté à ' return') → logprob: -1.5130600929260254
    3. ' return' → logprob: -4.513060092926025
    4. '           ' → logprob: -9.763060569763184
    5. '   ' → logprob: -10.138060569763184
    6. '	return' → logprob: -12.263060569763184
    7. '               ' → logprob: -14.138060569763184
    8. ' ' → logprob: -14.638060569763184
    9. ':return' → logprob: -15.013060569763184
    10. '
' → logprob: -15.388060569763184

Token 465: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.01815567910671234
    2. ' Node' → logprob: -4.018155574798584
    3. '	Node' → logprob: -12.893156051635742
    4. '()' → logprob: -13.268156051635742
    5. '(Node' → logprob: -13.893156051635742
    6. '   ' → logprob: -15.518156051635742
    7. '_Node' → logprob: -15.893156051635742
    8. ' ' → logprob: -16.143156051635742
    9. '.Node' → logprob: -16.893156051635742
    10. '<Node' → logprob: -17.643156051635742

Token 466: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002013217657804489
    2. '(None' → logprob: -6.752013206481934
    3. '()
' → logprob: -7.127013206481934
    4. '(' → logprob: -10.752013206481934
    5. 'None' → logprob: -11.752013206481934
    6. ' ()' → logprob: -12.877013206481934
    7. '(),' → logprob: -13.002013206481934
    8. '())' → logprob: -13.127013206481934
    9. '()

' → logprob: -14.127013206481934
    10. ')' → logprob: -14.377013206481934

Token 467: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048666052520275116
    2. '       ' → logprob: -3.048666000366211
    3. '	return' → logprob: -10.548666000366211
    4. ')' → logprob: -10.798666000366211
    5. '    
' → logprob: -12.048666000366211
    6. '
' → logprob: -12.173666000366211
    7. '	' → logprob: -12.298666000366211
    8. '	else' → logprob: -12.423666000366211
    9. 'else' → logprob: -13.173666000366211
    10. 'return' → logprob: -13.298666000366211

Token 468: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001991298486245796
    2. 'return' (adapté à ' return') → logprob: -9.500199317932129
    3. ')' → logprob: -10.000199317932129
    4. '
' → logprob: -10.375199317932129
    5. ')
' → logprob: -10.750199317932129
    6. 'else' → logprob: -11.500199317932129
    7. '       ' → logprob: -12.125199317932129
    8. ' return' → logprob: -12.375199317932129
    9. '    
' → logprob: -12.625199317932129
    10. ' else' → logprob: -13.250199317932129

Token 469: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002613358374219388
    2. ' None' → logprob: -8.250261306762695
    3. '_None' → logprob: -18.125261306762695
    4. '(None' → logprob: -18.750261306762695
    5. ',None' → logprob: -19.500261306762695
    6. 'No' → logprob: -20.000261306762695
    7. 'Node' → logprob: -20.250261306762695
    8. '=None' → logprob: -20.750261306762695
    9. '   ' → logprob: -21.500261306762695
    10. '_none' → logprob: -21.500261306762695

Token 470: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.337155355140567e-05
    2. '    
' → logprob: -10.375062942504883
    3. '
' → logprob: -11.625062942504883
    4. '<|end|>' → logprob: -11.625062942504883
    5. ')' → logprob: -12.500062942504883
    6. '	return' → logprob: -13.000062942504883
    7. '       ' → logprob: -13.875062942504883
    8. 'else' → logprob: -13.875062942504883
    9. 'return' → logprob: -14.000062942504883
    10. ',' → logprob: -14.125062942504883

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001238004770129919
    2. '    
' → logprob: -9.625123977661133
    3. '	return' → logprob: -10.375123977661133
    4. '	else' → logprob: -11.625123977661133
    5. ')' → logprob: -12.000123977661133
    6. ' else' → logprob: -13.625123977661133
    7. '
' → logprob: -13.750123977661133
    8. '       ' → logprob: -14.000123977661133
    9. 'else' → logprob: -14.125123977661133
    10. '	
' → logprob: -14.125123977661133

Token 472: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034180781804025173
    2. 'return' (adapté à ' return') → logprob: -5.75341796875
    3. ' return' → logprob: -8.37841796875
    4. '	return' → logprob: -11.50341796875
    5. '       ' → logprob: -15.62841796875
    6. ' ' → logprob: -16.25341796875
    7. '  ' → logprob: -16.37841796875
    8. '    
' → logprob: -16.75341796875
    9. '
' → logprob: -17.87841796875
    10. ')' → logprob: -17.87841796875

Token 473: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.25193020701408386
    2. ' Node' → logprob: -1.5019302368164062
    3. '(Node' → logprob: -14.126930236816406
    4. '	Node' → logprob: -15.751930236816406
    5. '.Node' → logprob: -15.876930236816406
    6. '_Node' → logprob: -16.501930236816406
    7. '   ' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.626930236816406
    9. '<Node' → logprob: -18.251930236816406
    10. '_node' → logprob: -18.501930236816406

Token 474: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00016063073417171836
    2. '(' → logprob: -8.750160217285156
    3. '(
' → logprob: -13.125160217285156
    4. ',left' → logprob: -16.000160217285156
    5. 'left' → logprob: -17.875160217285156
    6. ' (' → logprob: -18.750160217285156
    7. '[left' → logprob: -19.625160217285156
    8. ' left' → logprob: -20.000160217285156
    9. '(

' → logprob: -20.625160217285156
    10. ',' → logprob: -20.625160217285156

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ',right' → logprob: -10.750028610229492
    3. ' ,' → logprob: -11.875028610229492
    4. ',
' → logprob: -14.500028610229492
    5. '   ' → logprob: -16.750028610229492
    6. 'right' → logprob: -18.375028610229492
    7. ',r' → logprob: -18.750028610229492
    8. ',

' → logprob: -18.875028610229492
    9. ')' → logprob: -19.375028610229492
    10. ' right' → logprob: -20.125028610229492

Token 476: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0024756586644798517
    2. ' right' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.25247573852539
    4. '	right' → logprob: -17.37747573852539
    5. '[right' → logprob: -18.25247573852539
    6. '(right' → logprob: -18.50247573852539
    7. ',right' → logprob: -19.50247573852539
    8. ' ' → logprob: -19.50247573852539
    9. '
' → logprob: -19.62747573852539
    10. 'Right' → logprob: -19.62747573852539

Token 477: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.750003814697266
    4. '   ' → logprob: -15.875003814697266
    5. ')return' → logprob: -18.500003814697266
    6. ')
' → logprob: -20.000003814697266
    7. '))' → logprob: -20.000003814697266
    8. '),' → logprob: -20.250003814697266
    9. ')}' → logprob: -20.250003814697266
    10. '}' → logprob: -20.750003814697266

Token 478: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.740511953830719
    2. '#' → logprob: -1.2405118942260742
    3. ')' → logprob: -1.9905118942260742
    4. '<|end|>' → logprob: -2.990511894226074
    5. '(' → logprob: -3.240511894226074
    6. '```' → logprob: -6.740511894226074
    7. '.' → logprob: -6.990511894226074
    8. '(n' → logprob: -7.240511894226074
    9. 'n' → logprob: -7.365511894226074
    10. '()' → logprob: -7.615511894226074

Token 479: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07474298030138016
    2. ' tree' → logprob: -2.8247430324554443
    3. 'line' → logprob: -5.074742794036865
    4. 'tree' → logprob: -6.324742794036865
    5. ' s' → logprob: -6.699742794036865
    6. ' t' → logprob: -6.699742794036865
    7. ' _' → logprob: -7.324742794036865
    8. ' i' → logprob: -7.949742794036865
    9. ' expr' → logprob: -8.324743270874023
    10. ' pair' → logprob: -8.824743270874023

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011247877962887287
    2. 'in' → logprob: -4.5112481117248535
    3. ' ' → logprob: -8.636247634887695
    4. '  ' → logprob: -12.011247634887695
    5. 'import' → logprob: -12.261247634887695
    6. ' i' → logprob: -13.136247634887695
    7. 'line' → logprob: -13.136247634887695
    8. ' =' → logprob: -13.636247634887695
    9. '	in' → logprob: -13.636247634887695
    10. '_' → logprob: -14.011247634887695

Token 481: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019289902411401272
    2. ' sys' → logprob: -6.251928806304932
    3. '(sys' → logprob: -15.87692928314209
    4. '=sys' → logprob: -16.001928329467773
    5. '	sys' → logprob: -16.876928329467773
    6. 'iter' → logprob: -17.126928329467773
    7. '```' → logprob: -19.126928329467773
    8. 'stdin' → logprob: -20.376928329467773
    9. '   ' → logprob: -21.501928329467773
    10. 'map' → logprob: -21.626928329467773

Token 482: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024050796404480934
    2. '.readline' → logprob: -4.649050712585449
    3. 'in' → logprob: -5.274050712585449
    4. 'stdin' → logprob: -5.524050712585449
    5. ' in' → logprob: -6.524050712585449
    6. '.' → logprob: -6.774050712585449
    7. '(stdin' → logprob: -6.899050712585449
    8. 'import' → logprob: -7.649050712585449
    9. '.readlines' → logprob: -8.14905071258545
    10. ' stdin' → logprob: -8.52405071258545

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3463042974472046
    2. ' in' → logprob: -2.096304416656494
    3. 'in' → logprob: -2.596304416656494
    4. '.readline' → logprob: -3.096304416656494
    5. '.strip' → logprob: -3.221304416656494
    6. ':
' → logprob: -6.096304416656494
    7. '.rstrip' → logprob: -6.221304416656494
    8. '_strip' → logprob: -6.596304416656494
    9. '.' → logprob: -7.221304416656494
    10. ' line' → logprob: -7.221304416656494

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011272405972704291
    2. ' line' → logprob: -6.876127243041992
    3. ' s' → logprob: -9.501127243041992
    4. 'line' → logprob: -12.001127243041992
    5. '	line' → logprob: -12.501127243041992
    6. 's' → logprob: -12.751127243041992
    7. '    
' → logprob: -13.501127243041992
    8. '(line' → logprob: -14.001127243041992
    9. '   ' → logprob: -14.126127243041992
    10. '```' → logprob: -14.376127243041992

Token 485: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07824423164129257
    2. 's' → logprob: -3.203244209289551
    3. ' line' → logprob: -3.828244209289551
    4. '   ' → logprob: -4.578244209289551
    5. 'tree' → logprob: -7.078244209289551
    6. 'l' → logprob: -7.203244209289551
    7. 'n' → logprob: -8.20324420928955
    8. ' s' → logprob: -8.20324420928955
    9. 't' → logprob: -8.32824420928955
    10. 'a' → logprob: -9.07824420928955

Token 486: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6990439891815186
    2. 'not' → logprob: -1.4490439891815186
    3. ' line' → logprob: -1.9490439891815186
    4. 'line' → logprob: -2.0740439891815186
    5. '=line' → logprob: -10.449044227600098
    6. '#line' → logprob: -11.699044227600098
    7. ' ' → logprob: -11.949044227600098
    8. '(line' → logprob: -12.449044227600098
    9. 'n' → logprob: -13.324044227600098
    10. 'no' → logprob: -13.574044227600098

Token 487: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3132633566856384
    2. ' line' → logprob: -1.3132634162902832
    3. '(line' → logprob: -14.438262939453125
    4. '#line' → logprob: -14.813262939453125
    5. ' ' → logprob: -15.063262939453125
    6. '	line' → logprob: -15.688262939453125
    7. '=line' → logprob: -15.938262939453125
    8. '[line' → logprob: -17.188262939453125
    9. 'ine' → logprob: -17.438262939453125
    10. '_line' → logprob: -18.063262939453125

Token 488: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0020216628909111023
    2. '.' → logprob: -6.252021789550781
    3. '.rstrip' → logprob: -9.627021789550781
    4. ' .' → logprob: -11.377021789550781
    5. '.startswith' → logprob: -11.752021789550781
    6. ':' → logprob: -12.752021789550781
    7. 'strip' → logprob: -13.002021789550781
    8. '.trim' → logprob: -13.752021789550781
    9. ' strip' → logprob: -14.752021789550781
    10. ':
' → logprob: -15.127021789550781

Token 489: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12836262583732605
    2. '():
' → logprob: -2.1283626556396484
    3. ':' → logprob: -6.628362655639648
    4. '()' → logprob: -9.378362655639648
    5. ':
' → logprob: -11.253362655639648
    6. '():
' → logprob: -11.753362655639648
    7. 'continue' → logprob: -13.378362655639648
    8. '().' → logprob: -14.003362655639648
    9. ':return' → logprob: -14.003362655639648
    10. '():

' → logprob: -14.128362655639648

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003577495808713138
    2. '   ' → logprob: -8.375357627868652
    3. ':' → logprob: -9.625357627868652
    4. ' continue' → logprob: -10.000357627868652
    5. ',' → logprob: -12.125357627868652
    6. 'continue' → logprob: -12.375357627868652
    7. ':
' → logprob: -13.000357627868652
    8. '	continue' → logprob: -14.500357627868652
    9. ' continues' → logprob: -14.625357627868652
    10. '      ' → logprob: -14.875357627868652

Token 491: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4201475977897644
    2. ' break' → logprob: -1.1701476573944092
    3. '   ' → logprob: -3.670147657394409
    4. '       ' → logprob: -5.04514741897583
    5. 'continue' (adapté à ' continue') → logprob: -7.79514741897583
    6. '	break' → logprob: -8.045147895812988
    7. ' continue' → logprob: -9.670147895812988
    8. ' ' → logprob: -12.170147895812988
    9. '    ' → logprob: -12.420147895812988
    10. '           ' → logprob: -12.795147895812988

Token 492: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041853196918964386
    2. ' tree' → logprob: -3.916853189468384
    3. ' s' → logprob: -4.416853427886963
    4. 's' → logprob: -5.791853427886963
    5. ' t' → logprob: -6.166853427886963
    6. 'tree' → logprob: -6.916853427886963
    7. 't' → logprob: -7.291853427886963
    8. ' line' → logprob: -7.416853427886963
    9. ' root' → logprob: -7.666853427886963
    10. ' n' → logprob: -8.166852951049805

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025004645809531212
    2. ' s' → logprob: -4.775004863739014
    3. ' tree' → logprob: -4.775004863739014
    4. ' t' → logprob: -5.650004863739014
    5. 's' → logprob: -6.400004863739014
    6. 't' → logprob: -7.400004863739014
    7. 'a' → logprob: -7.525004863739014
    8. 'tree' → logprob: -7.775004863739014
    9. ' parts' → logprob: -8.400004386901855
    10. ' a' → logprob: -8.525004386901855

Token 494: ' op' (ID: 991)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2916911542415619
    2. 'tree' → logprob: -1.9166911840438843
    3. 's' → logprob: -3.0416910648345947
    4. 'a' → logprob: -3.7916910648345947
    5. 'n' → logprob: -4.291691303253174
    6. 'parts' → logprob: -4.791691303253174
    7. 'root' → logprob: -5.541691303253174
    8. 'try' → logprob: -6.291691303253174
    9. '   ' → logprob: -6.416691303253174
    10. 'trees' → logprob: -6.541691303253174

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04685176908969879
    2. ' =' → logprob: -3.171851873397827
    3. ' ,' → logprob: -5.796851634979248
    4. '=' → logprob: -8.421852111816406
    5. '_type' → logprob: -8.796852111816406
    6. '_,' → logprob: -9.046852111816406
    7. '_name' → logprob: -9.421852111816406
    8. '=line' → logprob: -9.421852111816406
    9. ',line' → logprob: -9.921852111816406
    10. 'type' → logprob: -10.546852111816406

Token 496: ' t' (ID: 260)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.191959023475647
    2. ' s' → logprob: -1.566959023475647
    3. 'rest' → logprob: -1.691959023475647
    4. ' tree' → logprob: -1.941959023475647
    5. 's' → logprob: -2.5669589042663574
    6. 'tree' → logprob: -3.4419589042663574
    7. ' expr' → logprob: -3.8169589042663574
    8. 'expr' → logprob: -4.191958904266357
    9. ' data' → logprob: -5.066958904266357
    10. ' trees' → logprob: -6.191958904266357

Token 497: '1' (ID: 16)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.06487775593996048
    2. ',' → logprob: -3.06487774848938
    3. 'rees' → logprob: -4.439877986907959
    4. '1' → logprob: -6.064877986907959
    5. ' =' → logprob: -6.689877986907959
    6. 'ype' → logprob: -8.0648775100708
    7. 's' → logprob: -8.9398775100708
    8. 'ext' → logprob: -9.4398775100708
    9. '=' → logprob: -9.5648775100708
    10. 'r' → logprob: -10.0648775100708

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3804112672805786
    2. '_str' → logprob: -1.3804112672805786
    3. 'str' → logprob: -3.880411148071289
    4. ' =' → logprob: -4.505411148071289
    5. 's' → logprob: -4.505411148071289
    6. 'ree' → logprob: -4.630411148071289
    7. '=' → logprob: -5.255411148071289
    8. '1' → logprob: -5.880411148071289
    9. '_s' → logprob: -6.130411148071289
    10. 'r' → logprob: -7.255411148071289

Token 499: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4740777611732483
    2. ' t' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.599078178405762
    4. ' =' → logprob: -16.599077224731445
    5. 'rest' → logprob: -16.599077224731445
    6. '	t' → logprob: -17.099077224731445
    7. '=' → logprob: -17.724077224731445
    8. ' 
' → logprob: -17.724077224731445
    9. '   ' → logprob: -17.849077224731445
    10. ',' → logprob: -18.224077224731445

Token 500: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -13.500001907348633
    3. ' =' → logprob: -15.875001907348633
    4. '=' → logprob: -16.000001907348633
    5. 't' → logprob: -16.250001907348633
    6. ' ' → logprob: -16.875001907348633
    7. 'ree' → logprob: -17.625001907348633
    8. 's' → logprob: -17.750001907348633
    9. 'ype' → logprob: -18.750001907348633
    10. '２' → logprob: -18.875001907348633

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270531564950943
    2. ' =' → logprob: -2.1270532608032227
    3. '=line' → logprob: -9.002053260803223
    4. '=s' → logprob: -13.877053260803223
    5. 'line' → logprob: -15.127053260803223
    6. '=parse' → logprob: -16.002052307128906
    7. '=sys' → logprob: -16.127052307128906
    8. '_line' → logprob: -16.752052307128906
    9. 'ine' → logprob: -17.252052307128906
    10. ' ' → logprob: -17.377052307128906

Token 502: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029751529917120934
    2. ' line' → logprob: -3.5297515392303467
    3. '   ' → logprob: -15.029751777648926
    4. '[line' → logprob: -15.154751777648926
    5. '=line' → logprob: -15.529751777648926
    6. '(line' → logprob: -15.529751777648926
    7. '	line' → logprob: -16.02975082397461
    8. '#line' → logprob: -18.77975082397461
    9. ' ' → logprob: -18.77975082397461
    10. '  ' → logprob: -19.02975082397461

Token 503: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.08304435759782791
    2. '=' → logprob: -2.8330442905426025
    3. '.' → logprob: -4.208044528961182
    4. '.split' → logprob: -6.083044528961182
    5. '.rstrip' → logprob: -6.208044528961182
    6. ' =' → logprob: -7.458044528961182
    7. '=line' → logprob: -7.583044528961182
    8. 'strip' → logprob: -7.708044528961182
    9. 'rstrip' → logprob: -9.833044052124023
    10. '.readline' → logprob: -10.333044052124023

Token 504: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.158350151963532e-05
    2. '.split' → logprob: -9.875061988830566
    3. '()' → logprob: -12.125061988830566
    4. '=' → logprob: -12.875061988830566
    5. ' =' → logprob: -14.500061988830566
    6. 'split' → logprob: -14.500061988830566
    7. '   ' → logprob: -15.000061988830566
    8. '.' → logprob: -15.625061988830566
    9. ' ().' → logprob: -15.750061988830566
    10. '('').' → logprob: -16.00006103515625

Token 505: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'spl' → logprob: -16.25
    3. ' split' → logprob: -17.125
    4. 'partition' → logprob: -17.375
    5. '(split' → logprob: -19.0
    6. 'sp' → logprob: -19.875
    7. '.split' → logprob: -20.875
    8. 'strip' → logprob: -21.125
    9. 'replace' → logprob: -21.375
    10. 'rs' → logprob: -22.0

Token 506: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6120039224624634
    2. '('' → logprob: -0.8620039224624634
    3. '(None' → logprob: -3.487003803253174
    4. '(max' → logprob: -5.737003803253174
    5. '(' → logprob: -7.612003803253174
    6. ''' → logprob: -7.612003803253174
    7. 'None' → logprob: -8.112004280090332
    8. 'max' → logprob: -9.362004280090332
    9. '()
' → logprob: -9.612004280090332
    10. '(',' → logprob: -10.237004280090332

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37908726930618286
    2. 'n' → logprob: -1.879087209701538
    3. 'node' → logprob: -2.004087209701538
    4. 'tree' → logprob: -3.754087209701538
    5. 't' → logprob: -6.254087448120117
    6. 'root' → logprob: -7.254087448120117
    7. '    
' → logprob: -7.754087448120117
    8. ' node' → logprob: -7.879087448120117
    9. ' n' → logprob: -8.379087448120117
    10. 'try' → logprob: -8.504087448120117

Token 508: ' tree' (ID: 8165)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12047654390335083
    2. 'node' → logprob: -2.370476484298706
    3. 'tree' (adapté à ' tree') → logprob: -3.995476484298706
    4. 't' → logprob: -6.995476722717285
    5. '   ' → logprob: -7.745476722717285
    6. 'root' → logprob: -8.370476722717285
    7. ' n' → logprob: -10.620476722717285
    8. 'if' → logprob: -10.620476722717285
    9. ' node' → logprob: -11.495476722717285
    10. ' tree' → logprob: -11.745476722717285

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. '_' → logprob: -10.625030517578125
    3. ',' → logprob: -13.000030517578125
    4. ' =' → logprob: -13.500030517578125
    5. '=' → logprob: -14.250030517578125
    6. 's' → logprob: -14.375030517578125
    7. '```' → logprob: -15.000030517578125
    8. '_a' → logprob: -15.875030517578125
    9. '_,' → logprob: -16.125030517578125
    10. 'a' → logprob: -16.500030517578125

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013884450308978558
    2. '=' → logprob: -4.513884544372559
    3. ' =' → logprob: -5.888884544372559
    4. ',node' → logprob: -10.888884544372559
    5. ' ,' → logprob: -11.013884544372559
    6. '1' → logprob: -11.013884544372559
    7. '=parse' → logprob: -12.513884544372559
    8. ',n' → logprob: -12.763884544372559
    9. ',t' → logprob: -14.013884544372559
    10. '=node' → logprob: -14.388884544372559

Token 511: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.025740146636963
    2. '0' → logprob: -1.650740146636963
    3. 'i' → logprob: -1.775740146636963
    4. ' idx' → logprob: -2.400740146636963
    5. ' _' → logprob: -2.650740146636963
    6. 'idx' → logprob: -3.275740146636963
    7. ' i' → logprob: -3.400740146636963
    8. '_i' → logprob: -4.275740146636963
    9. ' ' → logprob: -4.400740146636963
    10. ' =' → logprob: -4.900740146636963

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326824426651
    2. ' =' → logprob: -1.3132681846618652
    3. ',' → logprob: -12.063268661499023
    4. '=parse' → logprob: -14.313268661499023
    5. '=
' → logprob: -16.813268661499023
    6. ' =
' → logprob: -17.438268661499023
    7. ' ' → logprob: -17.563268661499023
    8. '＝' → logprob: -17.688268661499023
    9. ')' → logprob: -18.063268661499023
    10. '=create' → logprob: -18.438268661499023

Token 513: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009114635176956654
    2. ' parse' → logprob: -7.000911235809326
    3. '=parse' → logprob: -17.500911712646484
    4. '(parse' → logprob: -18.750911712646484
    5. '	parse' → logprob: -19.375911712646484
    6. 'parser' → logprob: -20.000911712646484
    7. '_parse' → logprob: -20.875911712646484
    8. 'par' → logprob: -21.000911712646484
    9. '.parse' → logprob: -21.625911712646484
    10. 'parsed' → logprob: -21.750911712646484

Token 514: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -4.008129963040119e-06
    2. 'tree' → logprob: -12.625003814697266
    3. 'parse' → logprob: -14.875003814697266
    4. '_t' → logprob: -15.875003814697266
    5. '(tree' → logprob: -16.750003814697266
    6. ' tree' → logprob: -17.125003814697266
    7. '_TREE' → logprob: -18.250003814697266
    8. 't' → logprob: -18.500003814697266
    9. '_parse' → logprob: -19.375003814697266
    10. 'Tree' → logprob: -19.375003814697266

Token 515: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.011373155459296e-05
    2. 't' → logprob: -10.750030517578125
    3. '(' → logprob: -12.500030517578125
    4. '(s' → logprob: -13.000030517578125
    5. 's' → logprob: -13.500030517578125
    6. ' (' → logprob: -14.125030517578125
    7. 'str' → logprob: -15.375030517578125
    8. '_t' → logprob: -16.000030517578125
    9. '_str' → logprob: -17.250030517578125
    10. 'string' → logprob: -17.250030517578125

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030400342075154185
    2. 'ree' → logprob: -8.375304222106934
    3. 't' → logprob: -10.125304222106934
    4. 'tree' → logprob: -11.250304222106934
    5. 'r' → logprob: -11.625304222106934
    6. '2' → logprob: -13.125304222106934
    7. '(t' → logprob: -13.125304222106934
    8. '```' → logprob: -13.750304222106934
    9. 'rees' → logprob: -13.875304222106934
    10. '(tree' → logprob: -14.375304222106934

Token 517: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20533964037895203
    2. ',' → logprob: -1.7053396701812744
    3. ')
' → logprob: -5.580339431762695
    4. '   ' → logprob: -10.205339431762695
    5. '),' → logprob: -10.205339431762695
    6. ',)' → logprob: -10.580339431762695
    7. ' ,' → logprob: -11.080339431762695
    8. ',
' → logprob: -11.705339431762695
    9. ' )' → logprob: -11.705339431762695
    10. ');' → logprob: -13.080339431762695

Token 518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015288250870071352
    2. '1' → logprob: -8.875152587890625
    3. ' ' → logprob: -11.250152587890625
    4. ')' → logprob: -17.750152587890625
    5. '   ' → logprob: -18.125152587890625
    6. '  ' → logprob: -19.750152587890625
    7. '۰' → logprob: -20.250152587890625
    8. '2' → logprob: -20.375152587890625
    9. '    ' → logprob: -20.625152587890625
    10. ')
' → logprob: -21.250152587890625

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.375004768371582
    4. ')' → logprob: -17.0000057220459
    5. '۰' → logprob: -19.0000057220459
    6. '   ' → logprob: -19.6250057220459
    7. '０' → logprob: -19.7500057220459
    8. '  ' → logprob: -20.9375057220459
    9. '=' → logprob: -21.0625057220459
    10. '[' → logprob: -21.8750057220459

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034387463238090277
    2. ')
' → logprob: -5.753438949584961
    3. '   ' → logprob: -8.253438949584961
    4. ')
' → logprob: -15.253438949584961
    5. ' )' → logprob: -16.12843894958496
    6. '
' → logprob: -16.37843894958496
    7. '),' → logprob: -16.62843894958496
    8. ' ' → logprob: -16.87843894958496
    9. '  ' → logprob: -17.00343894958496
    10. ')

' → logprob: -17.50343894958496

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18971668183803558
    2. 'tree' → logprob: -2.0647165775299072
    3. '
' → logprob: -3.5647165775299072
    4. ' tree' → logprob: -4.189716815948486
    5. '    
' → logprob: -6.939716815948486
    6. '	tree' → logprob: -7.189716815948486
    7. '(tree' → logprob: -8.564716339111328
    8. ' 
' → logprob: -8.939716339111328
    9. '  
' → logprob: -9.564716339111328
    10. '.tree' → logprob: -9.689716339111328

Token 522: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.008628997951745987
    2. ' tree' → logprob: -4.758628845214844
    3. '   ' → logprob: -11.258628845214844
    4. '
' → logprob: -14.383628845214844
    5. '	tree' → logprob: -14.383628845214844
    6. '(tree' → logprob: -16.008628845214844
    7. ' ' → logprob: -16.258628845214844
    8. '.tree' → logprob: -17.133628845214844
    9. '/tree' → logprob: -17.383628845214844
    10. ' 
' → logprob: -17.633628845214844

Token 523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -13.625000953674316
    3. ' ' → logprob: -17.000001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '_,' → logprob: -19.625001907348633
    6. ' ,' → logprob: -19.750001907348633
    7. '_' → logprob: -19.875001907348633
    8. '```' → logprob: -20.625001907348633
    9. '₂' → logprob: -20.875001907348633
    10. '２' → logprob: -21.375001907348633

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.500000953674316
    3. ',
' → logprob: -16.25
    4. '‌,' → logprob: -17.0
    5. '=' → logprob: -17.5
    6. '_,' → logprob: -17.875
    7. '<|end|>' → logprob: -18.5
    8. ',user' → logprob: -18.75
    9. ',_' → logprob: -18.75
    10. ',node' → logprob: -19.0

Token 525: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49883222579956055
    2. ' _' → logprob: -0.9988322257995605
    3. ' parse' → logprob: -3.8738322257995605
    4. ' ' → logprob: -6.6238322257995605
    5. 'parse' → logprob: -6.9988322257995605
    6. '_=' → logprob: -7.3738322257995605
    7. ' =' → logprob: -7.9988322257995605
    8. '0' → logprob: -8.623832702636719
    9. '_parse' → logprob: -8.748832702636719
    10. '=parse' → logprob: -9.373832702636719

Token 526: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=parse' → logprob: -15.038042068481445
    4. ',' → logprob: -16.913042068481445
    5. ' ' → logprob: -18.163042068481445
    6. '=
' → logprob: -18.413042068481445
    7. '   ' → logprob: -18.663042068481445
    8. ')' → logprob: -20.038042068481445
    9. '＝' → logprob: -20.163042068481445
    10. '=}' → logprob: -20.663042068481445

Token 527: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.12692999839782715
    2. ' parse' → logprob: -2.126929998397827
    3. '   ' → logprob: -14.001930236816406
    4. '(parse' → logprob: -14.626930236816406
    5. '	parse' → logprob: -15.001930236816406
    6. '=parse' → logprob: -15.626930236816406
    7. ' ' → logprob: -16.251930236816406
    8. '.parse' → logprob: -17.501930236816406
    9. '_parse' → logprob: -17.751930236816406
    10. '  ' → logprob: -18.126930236816406

Token 528: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -7.994086627149954e-05
    2. 'parse' → logprob: -9.750080108642578
    3. 'tree' → logprob: -10.750080108642578
    4. '_t' → logprob: -17.125080108642578
    5. '_parse' → logprob: -17.500080108642578
    6. '(parse' → logprob: -18.000080108642578
    7. '_TREE' → logprob: -18.000080108642578
    8. 'Tree' → logprob: -18.125080108642578
    9. '(tree' → logprob: -18.875080108642578
    10. '-tree' → logprob: -19.625080108642578

Token 529: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.3856492842023727e-06
    2. 't' → logprob: -14.125000953674316
    3. ' (' → logprob: -15.125000953674316
    4. '(' → logprob: -15.250000953674316
    5. '(tree' → logprob: -16.250001907348633
    6. ' t' → logprob: -19.250001907348633
    7. 's' → logprob: -19.625001907348633
    8. '	t' → logprob: -19.625001907348633
    9. '(
' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.500001907348633

Token 530: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003280975390225649
    2. '1' → logprob: -5.753281116485596
    3. 't' → logprob: -9.503280639648438
    4. '(t' → logprob: -11.503280639648438
    5. '   ' → logprob: -12.378280639648438
    6. 's' → logprob: -12.628280639648438
    7. '  ' → logprob: -13.753280639648438
    8. ')' → logprob: -14.315780639648438
    9. '    ' → logprob: -14.315780639648438
    10. '(' → logprob: -14.315780639648438

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001645644661039114
    2. ' ,' → logprob: -8.750164985656738
    3. ')' → logprob: -12.375164985656738
    4. '0' → logprob: -14.125164985656738
    5. '   ' → logprob: -14.500164985656738
    6. ' ' → logprob: -15.750164985656738
    7. ',
' → logprob: -16.125164031982422
    8. '),' → logprob: -16.125164031982422
    9. '(' → logprob: -16.500164031982422
    10. '<|end|>' → logprob: -16.875164031982422

Token 532: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -16.127805709838867
    4. '  ' → logprob: -17.877805709838867
    5. ')' → logprob: -18.752805709838867
    6. '۰' → logprob: -20.627805709838867
    7. ' ' → logprob: -20.877805709838867
    8. '    ' → logprob: -20.877805709838867
    9. '(' → logprob: -21.065305709838867
    10. '
' → logprob: -21.315305709838867

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '
' → logprob: -19.62500762939453
    5. '  ' → logprob: -20.00000762939453
    6. '۰' → logprob: -20.75000762939453
    7. '(' → logprob: -21.25000762939453
    8. '     ' → logprob: -21.25000762939453
    9. '00' → logprob: -21.56250762939453
    10. '    ' → logprob: -21.68750762939453

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004972710739821196
    2. ')
' → logprob: -7.750497341156006
    3. '   ' → logprob: -9.625496864318848
    4. ' )' → logprob: -15.500496864318848
    5. ')

' → logprob: -16.000497817993164
    6. ')
' → logprob: -16.625497817993164
    7. '
' → logprob: -17.375497817993164
    8. ' ' → logprob: -17.750497817993164
    9. '),' → logprob: -17.875497817993164
    10. ').' → logprob: -18.250497817993164

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005680261179804802
    2. 'result' → logprob: -5.630680084228516
    3. ' result' → logprob: -6.630680084228516
    4. ' if' → logprob: -7.755680084228516
    5. 'if' → logprob: -8.380680084228516
    6. 'res' → logprob: -10.130680084228516
    7. '    
' → logprob: -10.380680084228516
    8. ' res' → logprob: -11.130680084228516
    9. 'n' → logprob: -12.880680084228516
    10. 'r' → logprob: -13.005680084228516

Token 536: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47806036472320557
    2. 'result' → logprob: -1.2280603647232056
    3. 'res' → logprob: -2.478060245513916
    4. ' if' → logprob: -6.353060245513916
    5. 'r' → logprob: -6.603060245513916
    6. ' res' → logprob: -9.603060722351074
    7. ' result' → logprob: -9.728060722351074
    8. '   ' → logprob: -12.103060722351074
    9. '
' → logprob: -12.103060722351074
    10. '    
' → logprob: -12.978060722351074

Token 537: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.014164448715746403
    2. 'op' → logprob: -4.264164447784424
    3. '(op' → logprob: -14.764164924621582
    4. '	op' → logprob: -15.139164924621582
    5. ' o' → logprob: -16.139163970947266
    6. '    ' → logprob: -16.514163970947266
    7. 'o' → logprob: -17.389163970947266
    8. ' ' → logprob: -18.139163970947266
    9. '   ' → logprob: -18.264163970947266
    10. '.op' → logprob: -18.514163970947266

Token 538: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47443386912345886
    2. '==' → logprob: -0.9744338989257812
    3. '=' → logprob: -8.474433898925781
    4. '=='' → logprob: -9.349433898925781
    5. ' =' → logprob: -10.474433898925781
    6. '=="' → logprob: -10.974433898925781
    7. ' =='' → logprob: -12.099433898925781
    8. '===' → logprob: -12.474433898925781
    9. ' =="' → logprob: -13.099433898925781
    10. '[' → logprob: -13.599433898925781

Token 539: ' '' (ID: 461)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.1191900447010994
    2. ''inter' → logprob: -2.869189977645874
    3. ''' → logprob: -3.369189977645874
    4. ''Union' → logprob: -4.244190216064453
    5. '"' → logprob: -5.369190216064453
    6. ''u' → logprob: -7.119190216064453
    7. ''univers' → logprob: -7.494190216064453
    8. ' '' → logprob: -7.744190216064453
    9. ''une' → logprob: -9.494190216064453
    10. ''in' → logprob: -10.119190216064453

Token 540: 'i' (ID: 72)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.21041567623615265
    2. 'inter' → logprob: -1.9604157209396362
    3. 'intersection' → logprob: -3.3354156017303467
    4. ''inter' → logprob: -5.210415840148926
    5. 'INTER' → logprob: -6.210415840148926
    6. ''' → logprob: -6.835415840148926
    7. 'and' → logprob: -6.960415840148926
    8. 'u' → logprob: -7.335415840148926
    9. 'UN' → logprob: -7.460415840148926
    10. ''un' → logprob: -7.710415840148926

Token 541: '':
' (ID: 7669)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.77627644513268e-06
    2. 'nt' → logprob: -12.250008583068848
    3. 'nte' → logprob: -13.250008583068848
    4. ''' → logprob: -13.750008583068848
    5. ''n' → logprob: -15.500008583068848
    6. '\n' → logprob: -16.000009536743164
    7. '')' → logprob: -16.000009536743164
    8. ''):
' → logprob: -16.375009536743164
    9. 'inter' → logprob: -16.375009536743164
    10. '':
' → logprob: -16.500009536743164

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6979331970214844
    2. ' result' → logprob: -1.6979331970214844
    3. '   ' → logprob: -1.8229331970214844
    4. 'result' → logprob: -2.1979331970214844
    5. ' res' → logprob: -3.6979331970214844
    6. 'res' → logprob: -4.947933197021484
    7. ' r' → logprob: -5.572933197021484
    8. '    ' → logprob: -5.947933197021484
    9. ' tree' → logprob: -6.322933197021484
    10. '
' → logprob: -6.947933197021484

Token 543: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6025313138961792
    2. 'result' → logprob: -1.3525313138961792
    3. ' res' → logprob: -1.8525313138961792
    4. ' result' → logprob: -3.7275314331054688
    5. 'r' → logprob: -4.477531433105469
    6. ' r' → logprob: -6.727531433105469
    7. 'out' → logprob: -7.977531433105469
    8. ' out' → logprob: -9.477531433105469
    9. 't' → logprob: -9.602531433105469
    10. 'tree' → logprob: -10.852531433105469

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16033826768398285
    2. '=' → logprob: -1.910338282585144
    3. 'ult' → logprob: -9.160338401794434
    4. ',' → logprob: -12.910338401794434
    5. 's' → logprob: -13.160338401794434
    6. 'tree' → logprob: -13.785338401794434
    7. ' ' → logprob: -14.035338401794434
    8. 'u' → logprob: -14.160338401794434
    9. ')' → logprob: -15.160338401794434
    10. '_' → logprob: -15.535338401794434

Token 545: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.00038348292582668364
    2. ' intersect' → logprob: -8.000383377075195
    3. 'union' → logprob: -10.125383377075195
    4. 'intersection' → logprob: -11.875383377075195
    5. ' union' → logprob: -14.625383377075195
    6. ' intersection' → logprob: -15.125383377075195
    7. '(inter' → logprob: -15.500383377075195
    8. '   ' → logprob: -16.500383377075195
    9. ' inter' → logprob: -17.750383377075195
    10. ' ' → logprob: -18.250383377075195

Token 546: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -10.750022888183594
    3. ' (' → logprob: -14.375022888183594
    4. 'tree' → logprob: -15.375022888183594
    5. '(t' → logprob: -15.875022888183594
    6. '(Tree' → logprob: -16.250022888183594
    7. '(
' → logprob: -16.750022888183594
    8. '(res' → logprob: -18.250022888183594
    9. '(node' → logprob: -18.750022888183594
    10. '(tr' → logprob: -18.875022888183594

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02051643282175064
    2. ',' → logprob: -4.770516395568848
    3. 'tree' → logprob: -4.770516395568848
    4. '(tree' → logprob: -5.770516395568848
    5. '
' → logprob: -9.895516395568848
    6. ' ,' → logprob: -10.020516395568848
    7. ',
' → logprob: -10.145516395568848
    8. '(
' → logprob: -11.145516395568848
    9. '   ' → logprob: -11.145516395568848
    10. '(' → logprob: -11.145516395568848

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014132341311778873
    2. ' ,' → logprob: -8.875141143798828
    3. ',
' → logprob: -13.625141143798828
    4. '(tree' → logprob: -15.500141143798828
    5. ',res' → logprob: -17.625141143798828
    6. '
' → logprob: -18.125141143798828
    7. 'tree' → logprob: -18.250141143798828
    8. ')' → logprob: -19.000141143798828
    9. ' tree' → logprob: -19.125141143798828
    10. '<Tree' → logprob: -19.125141143798828

Token 549: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.029756855219602585
    2. ' tree' → logprob: -3.529756784439087
    3. '	tree' → logprob: -12.779756546020508
    4. '(tree' → logprob: -13.029756546020508
    5. 'tre' → logprob: -14.654756546020508
    6. '   ' → logprob: -15.654756546020508
    7. 't' → logprob: -15.904756546020508
    8. ')' → logprob: -16.279756546020508
    9. 'trees' → logprob: -16.279756546020508
    10. ' ' → logprob: -16.529756546020508

Token 550: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '   ' → logprob: -19.5
    4. '۲' → logprob: -20.125
    5. '```' → logprob: -20.375
    6. ')' → logprob: -20.75
    7. '２' → logprob: -21.75
    8. '২' → logprob: -21.875
    9. '₂' → logprob: -22.4375
    10. '_' → logprob: -22.4375

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011666953563690186
    2. '   ' → logprob: -4.636666774749756
    3. ')
' → logprob: -6.261666774749756
    4. ')
' → logprob: -15.136667251586914
    5. ' )' → logprob: -15.136667251586914
    6. '       ' → logprob: -16.136667251586914
    7. ' ' → logprob: -16.261667251586914
    8. ')

' → logprob: -16.386667251586914
    9. '),' → logprob: -16.886667251586914
    10. ')return' → logprob: -16.886667251586914

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013341709272935987
    2. 'elif' → logprob: -6.626334190368652
    3. 'print' → logprob: -12.126334190368652
    4. 'else' → logprob: -14.376334190368652
    5. '<|end|>' → logprob: -14.501334190368652
    6. '
' → logprob: -14.751334190368652
    7. '    
' → logprob: -15.001334190368652
    8. ' elif' → logprob: -15.001334190368652
    9. '```' → logprob: -15.376334190368652
    10. '       ' → logprob: -15.751334190368652

Token 553: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3258163630962372
    2. '   ' → logprob: -1.3258163928985596
    3. ' elif' → logprob: -4.9508161544799805
    4. 'else' (adapté à ' else') → logprob: -5.3258161544799805
    5. 'e' → logprob: -8.07581615447998
    6. ' else' → logprob: -8.82581615447998
    7. 'el' → logprob: -9.70081615447998
    8. ' ' → logprob: -12.32581615447998
    9. 'els' → logprob: -12.70081615447998
    10. '	elif' → logprob: -12.95081615447998

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006302142050117254
    2. ' :' → logprob: -5.756302356719971
    3. '   ' → logprob: -6.756302356719971
    4. ' if' → logprob: -7.631302356719971
    5. '=' → logprob: -8.006301879882812
    6. 'if' → logprob: -8.256301879882812
    7. ' =' → logprob: -8.506301879882812
    8. '    ' → logprob: -8.631301879882812
    9. ':
' → logprob: -8.756301879882812
    10. '       ' → logprob: -9.006301879882812

Token 555: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5286643505096436
    2. ' res' → logprob: -1.2786643505096436
    3. 'res' → logprob: -2.0286643505096436
    4. '       ' → logprob: -7.403664588928223
    5. ' ' → logprob: -10.403664588928223
    6. '  ' → logprob: -10.903664588928223
    7. '    ' → logprob: -11.028664588928223
    8. '	res' → logprob: -11.778664588928223
    9. 'r' → logprob: -12.903664588928223
    10. '
' → logprob: -13.403664588928223

Token 556: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.001504982472397387
    2. ' res' → logprob: -6.501504898071289
    3. '   ' → logprob: -12.876504898071289
    4. '
' → logprob: -16.12650489807129
    5. '	res' → logprob: -18.00150489807129
    6. '       ' → logprob: -18.25150489807129
    7. ' ' → logprob: -18.25150489807129
    8. '  ' → logprob: -19.50150489807129
    9. '_res' → logprob: -20.50150489807129
    10. 'r' → logprob: -21.12650489807129

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.474077224731445
    4. '＝' → logprob: -17.599077224731445
    5. ' =)' → logprob: -17.599077224731445
    6. ' =
' → logprob: -18.349077224731445
    7. ',' → logprob: -18.474077224731445
    8. '  ' → logprob: -19.099077224731445
    9. '=
' → logprob: -19.099077224731445
    10. ')' → logprob: -19.099077224731445

Token 558: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.12692904472351074
    2. 'union' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.25192928314209
    4. '	union' → logprob: -15.37692928314209
    5. '.union' → logprob: -15.50192928314209
    6. '   ' → logprob: -15.62692928314209
    7. 'un' → logprob: -16.251928329467773
    8. '_union' → logprob: -16.751928329467773
    9. 'Union' → logprob: -18.376928329467773
    10. ' ' → logprob: -18.376928329467773

Token 559: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.000008583068848
    3. '(res' → logprob: -13.375008583068848
    4. ' (' → logprob: -15.875008583068848
    5. 'res' → logprob: -16.00000762939453
    6. 'tree' → logprob: -16.25000762939453
    7. '(t' → logprob: -16.75000762939453
    8. '(
' → logprob: -16.75000762939453
    9. '(tr' → logprob: -18.62500762939453
    10. '(Tree' → logprob: -19.00000762939453

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007343433680944145
    2. '(tree' → logprob: -7.750734329223633
    3. '2' → logprob: -8.375734329223633
    4. 'tree' → logprob: -10.250734329223633
    5. ',' → logprob: -11.125734329223633
    6. '   ' → logprob: -11.875734329223633
    7. '
' → logprob: -12.375734329223633
    8. '```' → logprob: -12.375734329223633
    9. ')' → logprob: -12.500734329223633
    10. '(' → logprob: -14.000734329223633

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -11.125020980834961
    3. '(tree' → logprob: -12.250020980834961
    4. ',
' → logprob: -13.875020980834961
    5. ',res' → logprob: -14.750020980834961
    6. 'tree' → logprob: -15.500020980834961
    7. '(' → logprob: -16.50002098083496
    8. ')' → logprob: -16.75002098083496
    9. 'res' → logprob: -17.25002098083496
    10. ',node' → logprob: -17.50002098083496

Token 562: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.008616461418569088
    2. ' tree' → logprob: -4.7586164474487305
    3. '(tree' → logprob: -14.00861644744873
    4. '   ' → logprob: -14.25861644744873
    5. '	tree' → logprob: -15.25861644744873
    6. ' ' → logprob: -16.008617401123047
    7. '
' → logprob: -17.758617401123047
    8. '  ' → logprob: -18.258617401123047
    9. 't' → logprob: -18.258617401123047
    10. 'trees' → logprob: -19.008617401123047

Token 563: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ')' → logprob: -13.375003814697266
    3. ',' → logprob: -13.500003814697266
    4. '   ' → logprob: -14.500003814697266
    5. ' ' → logprob: -15.125003814697266
    6. 'res' → logprob: -16.125003814697266
    7. '```' → logprob: -17.000003814697266
    8. 'tree' → logprob: -17.500003814697266
    9. '
' → logprob: -17.875003814697266
    10. 't' → logprob: -18.250003814697266

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760118365287781
    2. ')
' → logprob: -0.8260118365287781
    3. '   ' → logprob: -10.201011657714844
    4. ')
' → logprob: -10.326011657714844
    5. ')

' → logprob: -14.076011657714844
    6. '
' → logprob: -14.201011657714844
    7. 'print' → logprob: -14.951011657714844
    8. ' )
' → logprob: -15.201011657714844
    9. ' )' → logprob: -15.701011657714844
    10. ' ' → logprob: -16.201011657714844

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06201081722974777
    2. 'print' → logprob: -2.8120107650756836
    3. ' print' → logprob: -10.312010765075684
    4. '
' → logprob: -11.687010765075684
    5. '```' → logprob: -13.937010765075684
    6. '    
' → logprob: -14.937010765075684
    7. '	print' → logprob: -15.812010765075684
    8. '       ' → logprob: -16.18701171875
    9. '#print' → logprob: -17.93701171875
    10. '
' → logprob: -17.93701171875

Token 566: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005637573776766658
    2. '   ' → logprob: -7.500563621520996
    3. ' print' → logprob: -11.500563621520996
    4. '
' → logprob: -15.000563621520996
    5. '```' → logprob: -15.750563621520996
    6. '    
' → logprob: -16.875564575195312
    7. '	print' → logprob: -17.250564575195312
    8. 'import' → logprob: -17.875564575195312
    9. '``' → logprob: -19.250564575195312
    10. '#print' → logprob: -19.500564575195312

Token 567: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14269499480724335
    2. ' res' → logprob: -2.0176949501037598
    3. ' ' → logprob: -11.892695426940918
    4. 'print' → logprob: -12.642695426940918
    5. ' not' → logprob: -12.892695426940918
    6. 'tree' → logprob: -13.142695426940918
    7. '(res' → logprob: -13.642695426940918
    8. '
' → logprob: -13.642695426940918
    9. 'not' → logprob: -14.017695426940918
    10. ' tree' → logprob: -14.892695426940918

Token 568: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16030099987983704
    2. 'is' → logprob: -1.9103009700775146
    3. ':' → logprob: -10.160301208496094
    4. ')' → logprob: -10.785301208496094
    5. '==' → logprob: -12.160301208496094
    6. '=' → logprob: -12.660301208496094
    7. ':
' → logprob: -12.785301208496094
    8. ' ' → logprob: -13.660301208496094
    9. ')is' → logprob: -13.660301208496094
    10. '	is' → logprob: -13.785301208496094

Token 569: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018340623006224632
    2. ' None' → logprob: -4.018340587615967
    3. 'not' → logprob: -8.768341064453125
    4. ' not' → logprob: -10.268341064453125
    5. 'none' → logprob: -15.268341064453125
    6. '(None' → logprob: -16.393341064453125
    7. '   ' → logprob: -17.018341064453125
    8. '_None' → logprob: -17.393341064453125
    9. '=None' → logprob: -17.643341064453125
    10. 'Not' → logprob: -18.893341064453125

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20149938762187958
    2. ':
' → logprob: -1.701499342918396
    3. '   ' → logprob: -9.951498985290527
    4. '       ' → logprob: -10.826498985290527
    5. ' or' → logprob: -11.576498985290527
    6. '):
' → logprob: -13.326498985290527
    7. 'print' → logprob: -13.326498985290527
    8. ':
' → logprob: -13.451498985290527
    9. ':

' → logprob: -13.576498985290527
    10. ',' → logprob: -14.326498985290527

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00432294886559248
    2. 'print' → logprob: -6.1293230056762695
    3. '   ' → logprob: -6.2543230056762695
    4. ' print' → logprob: -8.62932300567627
    5. '        
' → logprob: -11.50432300567627
    6. '    
' → logprob: -12.25432300567627
    7. '           ' → logprob: -12.37932300567627
    8. '
' → logprob: -12.37932300567627
    9. '```' → logprob: -12.75432300567627
    10. '     ' → logprob: -13.75432300567627

Token 572: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007142199319787323
    2. '   ' → logprob: -7.500714302062988
    3. ' print' → logprob: -8.750714302062988
    4. '       ' → logprob: -13.000714302062988
    5. '	print' → logprob: -15.500714302062988
    6. '    
' → logprob: -15.875714302062988
    7. '
' → logprob: -16.125713348388672
    8. '    ' → logprob: -16.875713348388672
    9. '```' → logprob: -17.000713348388672
    10. '        
' → logprob: -17.250713348388672

Token 573: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.392824874026701e-05
    2. '   ' → logprob: -10.87503433227539
    3. ' print' → logprob: -11.12503433227539
    4. '       ' → logprob: -15.87503433227539
    5. 'pr' → logprob: -17.25003433227539
    6. '#' → logprob: -17.75003433227539
    7. '```' → logprob: -17.75003433227539
    8. '
' → logprob: -18.00003433227539
    9. '#print' → logprob: -18.12503433227539
    10. '    ' → logprob: -18.62503433227539

Token 574: ' node' (ID: 4596)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.231416940689087
    2. ' output' → logprob: -1.231416940689087
    3. 'output' → logprob: -1.606416940689087
    4. '()' → logprob: -1.856416940689087
    5. '   ' → logprob: -3.481416940689087
    6. ' print' → logprob: -4.606416702270508
    7. '()
' → logprob: -4.606416702270508
    8. ' ()' → logprob: -6.606416702270508
    9. '    
' → logprob: -7.356416702270508
    10. '    ' → logprob: -7.356416702270508

Token 575: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14504636824131012
    2. 'print' → logprob: -2.0200464725494385
    3. ',' → logprob: -6.770046234130859
    4. '
' → logprob: -7.895046234130859
    5. '       ' → logprob: -8.14504623413086
    6. ':
' → logprob: -8.64504623413086
    7. ' print' → logprob: -9.14504623413086
    8. ':' → logprob: -9.64504623413086
    9. ',
' → logprob: -10.02004623413086
    10. '    
' → logprob: -10.02004623413086

Token 576: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006318493280559778
    2. ' print' → logprob: -5.50631856918335
    3. '   ' → logprob: -6.13131856918335
    4. '       ' → logprob: -9.756318092346191
    5. '
' → logprob: -13.131318092346191
    6. '    
' → logprob: -13.506318092346191
    7. '        
' → logprob: -14.381318092346191
    8. '    ' → logprob: -14.506318092346191
    9. '	print' → logprob: -15.131318092346191
    10. ' 
' → logprob: -15.256318092346191

Token 577: ' empty' (ID: 8213)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6003816723823547
    2. '''' → logprob: -1.35038161277771
    3. ''' → logprob: -2.47538161277771
    4. '\n' → logprob: -3.47538161277771
    5. '"' → logprob: -3.97538161277771
    6. ''\' → logprob: -4.100381851196289
    7. '()
' → logprob: -4.475381851196289
    8. '""' → logprob: -4.475381851196289
    9. '''
' → logprob: -5.100381851196289
    10. '()\' → logprob: -5.725381851196289

Token 578: ' leaf' (ID: 25882)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6097819209098816
    2. '\n' → logprob: -1.8597819805145264
    3. '''' → logprob: -2.6097819805145264
    4. '()
' → logprob: -3.1097819805145264
    5. ''' → logprob: -3.2347819805145264
    6. ''\' → logprob: -3.7347819805145264
    7. 'line' → logprob: -3.9847819805145264
    8. 'print' → logprob: -3.9847819805145264
    9. 'string' → logprob: -4.484781742095947
    10. '  
' → logprob: -4.734781742095947

Token 579: '?
' (ID: 3901)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7060564756393433
    2. 'print' → logprob: -1.2060564756393433
    3. '   ' → logprob: -2.081056594848633
    4. '()
' → logprob: -2.581056594848633
    5. ''' → logprob: -5.581056594848633
    6. '       ' → logprob: -6.831056594848633
    7. '()\' → logprob: -8.081056594848633
    8. ' ()' → logprob: -8.456056594848633
    9. '()`' → logprob: -8.831056594848633
    10. '"' → logprob: -8.956056594848633

Token 580: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6944878697395325
    2. 'print' → logprob: -0.6944878697395325
    3. '       ' → logprob: -7.319488048553467
    4. '()' → logprob: -7.819488048553467
    5. ' print' → logprob: -9.319487571716309
    6. '    
' → logprob: -9.319487571716309
    7. '()
' → logprob: -10.444487571716309
    8. '```' → logprob: -10.694487571716309
    9. '
' → logprob: -11.194487571716309
    10. '        
' → logprob: -11.819487571716309

Token 581: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013738969573751092
    2. '   ' → logprob: -9.000137329101562
    3. ' print' → logprob: -11.250137329101562
    4. '       ' → logprob: -14.000137329101562
    5. '	print' → logprob: -18.000137329101562
    6. '```' → logprob: -18.125137329101562
    7. 'pr' → logprob: -19.000137329101562
    8. '    
' → logprob: -19.125137329101562
    9. 'printf' → logprob: -19.750137329101562
    10. 'println' → logprob: -20.000137329101562

Token 582: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15070003271102905
    2. ''' → logprob: -2.025700092315674
    3. '"' → logprob: -5.400700092315674
    4. '''' → logprob: -5.775700092315674
    5. '""' → logprob: -9.275699615478516
    6. '`()' → logprob: -9.525699615478516
    7. '<()>' → logprob: -10.150699615478516
    8. '('' → logprob: -10.400699615478516
    9. '()"' → logprob: -11.025699615478516
    10. '[]' → logprob: -11.025699615478516

Token 583: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.572941179503687e-05
    2. '')' → logprob: -10.250045776367188
    3. ''' → logprob: -12.875045776367188
    4. '()
' → logprob: -13.125045776367188
    5. '())' → logprob: -13.375045776367188
    6. '(' → logprob: -14.250045776367188
    7. '()\' → logprob: -14.375045776367188
    8. '()',' → logprob: -14.750045776367188
    9. '<()>' → logprob: -15.125045776367188
    10. '()`' → logprob: -15.125045776367188

Token 584: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.003653883468359709
    2. ')' → logprob: -6.0036540031433105
    3. '()' → logprob: -6.7536540031433105
    4. '')
' → logprob: -11.878653526306152
    5. ')'' → logprob: -13.753653526306152
    6. '())' → logprob: -13.878653526306152
    7. '('' → logprob: -14.503653526306152
    8. ''' → logprob: -14.628653526306152
    9. '")' → logprob: -14.878653526306152
    10. '}')' → logprob: -15.253653526306152

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043650198727846146
    2. 'else' → logprob: -3.1686501502990723
    3. ' else' → logprob: -7.418650150299072
    4. '<|end|>' → logprob: -10.29365062713623
    5. ')' → logprob: -11.54365062713623
    6. '	else' → logprob: -12.54365062713623
    7. '.' → logprob: -14.16865062713623
    8. '       ' → logprob: -14.29365062713623
    9. '```' → logprob: -14.54365062713623
    10. 'elif' → logprob: -15.04365062713623

Token 586: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5779725313186646
    2. '   ' → logprob: -0.8279725313186646
    3. ' else' → logprob: -6.202972412109375
    4. '	else' → logprob: -12.577972412109375
    5. 'elif' → logprob: -13.202972412109375
    6. ')' → logprob: -14.077972412109375
    7. '  ' → logprob: -15.077972412109375
    8. '<|end|>' → logprob: -15.077972412109375
    9. ' ' → logprob: -15.577972412109375
    10. '       ' → logprob: -15.952972412109375

Token 587: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2530013620853424
    2. ':' → logprob: -1.50300133228302
    3. ':
' → logprob: -7.2530012130737305
    4. '   ' → logprob: -8.00300121307373
    5. ' :' → logprob: -12.00300121307373
    6. ',' → logprob: -12.37800121307373
    7. '():' → logprob: -12.87800121307373
    8. '      ' → logprob: -13.12800121307373
    9. '.' → logprob: -13.12800121307373
    10. '           ' → logprob: -13.37800121307373

Token 588: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5788937211036682
    2. 'print' → logprob: -0.8288937211036682
    3. ' print' → logprob: -5.828893661499023
    4. '       ' → logprob: -12.328893661499023
    5. '	print' → logprob: -12.578893661499023
    6. '```' → logprob: -14.828893661499023
    7. ' ' → logprob: -15.578893661499023
    8. '   ' → logprob: -16.828893661499023
    9. '  ' → logprob: -16.953893661499023
    10. '
' → logprob: -17.453893661499023

Token 589: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020425561524461955
    2. ' print' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.250204086303711
    4. '       ' → logprob: -17.37520408630371
    5. '	print' → logprob: -18.25020408630371
    6. '.print' → logprob: -21.87520408630371
    7. ' ' → logprob: -22.25020408630371
    8. '  ' → logprob: -22.37520408630371
    9. '           ' → logprob: -23.00020408630371
    10. 'pr' → logprob: -23.25020408630371

Token 590: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0003398726985324174
    2. 'tree' → logprob: -8.00033950805664
    3. '(' → logprob: -12.37533950805664
    4. ' tree' → logprob: -16.12533950805664
    5. '(res' → logprob: -16.87533950805664
    6. '	tree' → logprob: -18.62533950805664
    7. ' (' → logprob: -19.12533950805664
    8. '('' → logprob: -19.37533950805664
    9. 'res' → logprob: -19.62533950805664
    10. '(Tree' → logprob: -20.25033950805664

Token 591: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.625
    3. 'To' → logprob: -20.125
    4. ')_' → logprob: -20.75
    5. '_TO' → logprob: -21.125
    6. ')' → logprob: -21.25
    7. '._' → logprob: -23.0
    8. '.to' → logprob: -23.125
    9. '_t' → logprob: -23.375
    10. 'o' → logprob: -23.625

Token 592: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.03804539144039154
    2. 'str' → logprob: -3.2880454063415527
    3. 's' → logprob: -13.538044929504395
    4. 'Str' → logprob: -13.913044929504395
    5. '-str' → logprob: -15.413044929504395
    6. 'string' → logprob: -15.788044929504395
    7. '	str' → logprob: -15.913044929504395
    8. ' str' → logprob: -16.03804588317871
    9. 'stra' → logprob: -16.16304588317871
    10. '__' → logprob: -16.28804588317871

Token 593: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.339278580620885e-06
    2. 'res' → logprob: -13.625001907348633
    3. '(' → logprob: -14.000001907348633
    4. ')' → logprob: -15.875001907348633
    5. ')(' → logprob: -16.750001907348633
    6. '=res' → logprob: -17.000001907348633
    7. ',res' → logprob: -17.375001907348633
    8. '	res' → logprob: -18.375001907348633
    9. ' (' → logprob: -18.875001907348633
    10. ' res' → logprob: -19.125001907348633

Token 594: '))' (ID: 915)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.16476158797740936
    2. ')' → logprob: -1.9147615432739258
    3. '))' → logprob: -5.539761543273926
    4. 'res' → logprob: -7.789761543273926
    5. '(' → logprob: -8.664761543273926
    6. '())' → logprob: -12.664761543273926
    7. ')`' → logprob: -12.789761543273926
    8. ')))' → logprob: -13.539761543273926
    9. ',res' → logprob: -13.914761543273926
    10. ')
' → logprob: -14.039761543273926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 592
Tokens correctement prédits (1ère position, stricte): 246
Tokens correctement prédits (1ère position, avec adaptation): 271
Tokens correctement prédits (top 10): 530
Précision stricte (1ère position): 41.55%
Précision adaptée (1ère position): 45.78%
Précision (top 10): 89.53%
================================================================================
