================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

n, k = map(int, input().split())
edges = {}
queries = []

for _ in range(k):
    t, u, v = map(int, input().split())
    if u > v:
        u, v = v, u
    queries.append((t, u, v))
    if t == 1:
        edges[(u, v)] = edges.get((u, v), 0) + 1
    elif t == 2:
        edges[(u, v)] = edges.get((u, v), 0) - 1

# いま建っている全ての通路の状態を管理
# 質問段階での通路の状態を管理するのが難しいため
# 一番簡単な方法は各質問の時点で現在の通路でグラフを作って
# DFSやUnion-Findで繋がりを確認することだが、
# k=40000なので単純なやり方でやってみる。

# 素朴なUnionFind実装
class UnionFind:
    def __init__(self, n):
        self.par = list(range(n))
        self.rank = [0]*n
    def find(self, x):
        while self.par[x] != x:
            self.par[x] = self.par[self.par[x]]
            x = self.par[x]
        return x
    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.rank[x] < self.rank[y]:
            self.par[x] = y
        else:
            self.par[y] = x
            if self.rank[x] == self.rank[y]:
                self.rank[x] += 1
    def same(self, x, y):
        return self.find(x) == self.find(y)

# 現在の通路の状態を管理するためのセット
current_edges = set()
uf = UnionFind(n)

for q in queries:
    t, u, v = q
    if t == 1:
        # 通路建設
        current_edges.add((u, v))
        uf.unite(u, v)
    elif t == 2:
        # 通路破壊
        # 素朴に破壊しようとしてもUnionFindは戻せないので、やり直しする
        # 通路を一旦削除し、UnionFindを初期化して残りの通路で再構築する
        if (u, v) in current_edges:
            current_edges.remove((u, v))
            uf = UnionFind(n)
            for (a, b) in current_edges:
                uf.unite(a, b)
    else:
        # 質問
        if uf.same(u, v):
            print("YES")
        else:
            print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16029387712478638
    2. '100' → logprob: -1.9102938175201416
    3. '300' → logprob: -10.910293579101562
    4. ' ' → logprob: -10.910293579101562
    5. '500' → logprob: -11.160293579101562
    6. '150' → logprob: -12.160293579101562
    7. '999' → logprob: -12.660293579101562
    8. '1' → logprob: -12.785293579101562
    9. '200' → logprob: -12.785293579101562
    10. '   ' → logprob: -13.285293579101562

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0047303494065999985
    2. '9' → logprob: -6.004730224609375
    3. '6' → logprob: -6.129730224609375
    4. '8' → logprob: -9.504730224609375
    5. '```' → logprob: -15.254730224609375
    6. ' ' → logprob: -15.629730224609375
    7. '(' → logprob: -16.754730224609375
    8. '``' → logprob: -17.879730224609375
    9. ')' → logprob: -18.129730224609375
    10. '5' → logprob: -18.254730224609375

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2915230095386505
    2. ')' → logprob: -2.916522979736328
    3. '\n' → logprob: -2.916522979736328
    4. 'def' → logprob: -3.541522979736328
    5. '
' → logprob: -3.791522979736328
    6. '(' → logprob: -4.041522979736328
    7. '
' → logprob: -4.291522979736328
    8. '' → logprob: -4.541522979736328
    9. 'sys' → logprob: -4.541522979736328
    10. '#' → logprob: -4.916522979736328

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054387565702199936
    2. '()' → logprob: -3.0543875694274902
    3. '.' → logprob: -6.05438756942749
    4. ')' → logprob: -6.55438756942749
    5. '().' → logprob: -7.67938756942749
    6. '('' → logprob: -7.92938756942749
    7. '40' → logprob: -8.304387092590332
    8. '```' → logprob: -8.554387092590332
    9. '("("' → logprob: -8.929387092590332
    10. ''' → logprob: -9.429387092590332

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6753400564193726
    2. ' input' → logprob: -0.8003400564193726
    3. ' sys' → logprob: -3.425340175628662
    4. 'sys' → logprob: -4.800340175628662
    5. ' lambda' → logprob: -7.550340175628662
    6. 'lambda' → logprob: -8.425339698791504
    7. '```' → logprob: -9.175339698791504
    8. ' ' → logprob: -9.925339698791504
    9. '=input' → logprob: -10.050339698791504
    10. ' open' → logprob: -10.050339698791504

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005959240952506661
    2. '.readline' → logprob: -8.000596046447754
    3. ' .' → logprob: -8.750596046447754
    4. '.stdin' → logprob: -10.000596046447754
    5. '.)' → logprob: -11.875596046447754
    6. '.
' → logprob: -12.250596046447754
    7. '.​' → logprob: -12.375596046447754
    8. '.

' → logprob: -12.500596046447754
    9. '[' → logprob: -12.625596046447754
    10. '.`' → logprob: -12.625596046447754

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008816298097372055
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.258816719055176
    5. '.readlines' → logprob: -11.508816719055176
    6. '.Read' → logprob: -13.383816719055176
    7. 'read' → logprob: -13.883816719055176
    8. '.stdin' → logprob: -14.883816719055176
    9. ' .' → logprob: -15.383816719055176
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06371898949146271
    2. '()
' → logprob: -3.5637190341949463
    3. '()

' → logprob: -4.063718795776367
    4. '(' → logprob: -4.438718795776367
    5. 'def' → logprob: -6.563718795776367
    6. '()\' → logprob: -6.813718795776367
    7. '(
' → logprob: -7.313718795776367
    8. '
' → logprob: -8.563718795776367
    9. 'for' → logprob: -8.688718795776367
    10. '\n' → logprob: -9.063718795776367

Token 19: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080394476652145
    2. 'n' → logprob: -2.8120803833007812
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.812080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.437080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5320312976837158
    2. '=' → logprob: -1.6570312976837158
    3. ' ' → logprob: -1.6570312976837158
    4. ',' → logprob: -4.157031059265137
    5. ')' → logprob: -4.782031059265137
    6. '.' → logprob: -6.157031059265137
    7. '[' → logprob: -6.782031059265137
    8. '<|end|>' → logprob: -6.782031059265137
    9. 's' → logprob: -6.907031059265137
    10. '>' → logprob: -7.907031059265137

Token 21: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25301459431648254
    2. 'm' → logprob: -1.5030145645141602
    3. ' k' → logprob: -7.12801456451416
    4. 'k' → logprob: -8.75301456451416
    5. ' ' → logprob: -9.37801456451416
    6. ' =' → logprob: -12.00301456451416
    7. ' r' → logprob: -12.00301456451416
    8. '=' → logprob: -12.25301456451416
    9. ' input' → logprob: -12.87801456451416
    10. 'r' → logprob: -13.00301456451416

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10035397112369537
    2. '=' → logprob: -2.350353956222534
    3. ',' → logprob: -8.850354194641113
    4. ' ' → logprob: -13.350354194641113
    5. ')' → logprob: -13.975354194641113
    6. '=input' → logprob: -14.475354194641113
    7. ' ,' → logprob: -14.725354194641113
    8. ' =
' → logprob: -15.850354194641113
    9. '=

' → logprob: -16.600353240966797
    10. '=int' → logprob: -16.912853240966797

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0076278080232441425
    2. 'map' → logprob: -4.882627964019775
    3. ' ' → logprob: -10.882627487182617
    4. ' input' → logprob: -13.632627487182617
    5. ' list' → logprob: -14.257627487182617
    6. '	map' → logprob: -14.382627487182617
    7. ' mapa' → logprob: -15.507627487182617
    8. 'input' → logprob: -16.007627487182617
    9. '(map' → logprob: -17.257627487182617
    10. 'list' → logprob: -17.382627487182617

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027133656665682793
    2. '(lambda' → logprob: -4.402133464813232
    3. '(input' → logprob: -5.152133464813232
    4. '(int' → logprob: -5.152133464813232
    5. '<|end|>' → logprob: -6.652133464813232
    6. '(str' → logprob: -8.15213394165039
    7. '((' → logprob: -8.52713394165039
    8. '(user' → logprob: -9.15213394165039
    9. '(len' → logprob: -9.27713394165039
    10. '(eval' → logprob: -9.40213394165039

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4468570649623871
    2. '(' → logprob: -1.6968570947647095
    3. '(input' → logprob: -1.9468570947647095
    4. ',input' → logprob: -3.57185697555542
    5. '(sys' → logprob: -5.32185697555542
    6. ')' → logprob: -7.07185697555542
    7. ' ,' → logprob: -8.696857452392578
    8. '(),' → logprob: -9.446857452392578
    9. 'input' → logprob: -10.071857452392578
    10. ',(' → logprob: -10.196857452392578

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022899746894836
    2. ' input' → logprob: -1.910228967666626
    3. ')' → logprob: -13.035228729248047
    4. '(input' → logprob: -13.910228729248047
    5. ' ' → logprob: -14.160228729248047
    6. ' sys' → logprob: -15.035228729248047
    7. 'sys' → logprob: -15.160228729248047
    8. ',input' → logprob: -15.535228729248047
    9. '	input' → logprob: -16.660228729248047
    10. '=input' → logprob: -16.785228729248047

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07100874930620193
    2. '())' → logprob: -3.0710086822509766
    3. '()' → logprob: -3.8210086822509766
    4. '(' → logprob: -9.321008682250977
    5. ')' → logprob: -9.571008682250977
    6. '()))' → logprob: -9.946008682250977
    7. '('' → logprob: -11.196008682250977
    8. '()
' → logprob: -11.821008682250977
    9. '()]' → logprob: -11.946008682250977
    10. '());' → logprob: -12.071008682250977

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20849046111106873
    2. 'strip' → logprob: -1.7084904909133911
    3. 'rstrip' → logprob: -4.958490371704102
    4. ')' → logprob: -10.833490371704102
    5. '())' → logprob: -12.958490371704102
    6. 'read' → logprob: -13.333490371704102
    7. ' split' → logprob: -13.583490371704102
    8. '().' → logprob: -13.708490371704102
    9. '(split' → logprob: -13.833490371704102
    10. '()' → logprob: -14.583490371704102

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006336859660223126
    2. '))' → logprob: -7.375633716583252
    3. '`)' → logprob: -13.375633239746094
    4. '()' → logprob: -14.000633239746094
    5. '())' → logprob: -14.000633239746094
    6. ')
' → logprob: -14.125633239746094
    7. ')`' → logprob: -14.125633239746094
    8. '),' → logprob: -14.375633239746094
    9. ')))' → logprob: -14.375633239746094
    10. '(' → logprob: -15.625633239746094

Token 30: 'edges' (ID: 39127)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2399246245622635
    2. ' 
' → logprob: -2.864924669265747
    3. '
' → logprob: -3.864924669265747
    4. 'data' → logprob: -4.114924430847168
    5. ')' → logprob: -4.364924430847168
    6. 'arr' → logprob: -4.489924430847168
    7. 's' → logprob: -4.489924430847168
    8. 'd' → logprob: -4.489924430847168
    9. 'array' → logprob: -4.739924430847168
    10. 'n' → logprob: -5.239924430847168

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011058665812015533
    2. '=' → logprob: -4.511058807373047
    3. '=[]' → logprob: -12.511058807373047
    4. '[' → logprob: -13.011058807373047
    5. '[]' → logprob: -13.511058807373047
    6. ',' → logprob: -13.636058807373047
    7. '_' → logprob: -14.011058807373047
    8. ' ' → logprob: -15.261058807373047
    9. ' []' → logprob: -15.261058807373047
    10. '.' → logprob: -15.636058807373047

Token 32: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.020805558189749718
    2. '[' → logprob: -4.270805358886719
    3. ' []' → logprob: -5.020805358886719
    4. '[]
' → logprob: -12.145805358886719
    5. '[][]' → logprob: -12.520805358886719
    6. ' [' → logprob: -12.895805358886719
    7. '([]' → logprob: -13.520805358886719
    8. '[]}' → logprob: -13.520805358886719
    9. ' [[]' → logprob: -13.895805358886719
    10. '[n' → logprob: -14.020805358886719

Token 33: 'queries' (ID: 63909)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01854180172085762
    2. ' for' → logprob: -4.3935418128967285
    3. '
' → logprob: -5.1435418128967285
    4. '[' → logprob: -9.76854133605957
    5. '' → logprob: -11.14354133605957
    6. '<|end|>' → logprob: -11.26854133605957
    7. ' 
' → logprob: -11.39354133605957
    8. 'f' → logprob: -11.64354133605957
    9. '\n' → logprob: -11.64354133605957
    10. '[]' → logprob: -11.89354133605957

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03370309993624687
    2. '=' → logprob: -3.408703088760376
    3. '[' → logprob: -10.658702850341797
    4. '=[]' → logprob: -11.658702850341797
    5. '[]' → logprob: -12.033702850341797
    6. '.' → logprob: -12.158702850341797
    7. '[:]' → logprob: -12.533702850341797
    8. '_' → logprob: -13.158702850341797
    9. ',' → logprob: -13.408702850341797
    10. ':' → logprob: -13.908702850341797

Token 35: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.030118154361844063
    2. ' []' → logprob: -3.530118227005005
    3. '[' → logprob: -8.155117988586426
    4. '{}' → logprob: -10.155117988586426
    5. '[]
' → logprob: -11.030117988586426
    6. '[]}' → logprob: -11.405117988586426
    7. '[int' → logprob: -12.030117988586426
    8. '[]>' → logprob: -13.405117988586426
    9. ' [' → logprob: -13.530117988586426
    10. '[]

' → logprob: -13.530117988586426

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021859495900571346
    2. ' for' → logprob: -6.127185821533203
    3. '
' → logprob: -15.377185821533203
    4. '	for' → logprob: -15.627185821533203
    5. 'f' → logprob: -16.502185821533203
    6. ')' → logprob: -16.752185821533203
    7. '```' → logprob: -16.752185821533203
    8. 'n' → logprob: -16.877185821533203
    9. '[' → logprob: -16.877185821533203
    10. '\n' → logprob: -17.127185821533203

Token 37: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18971370160579681
    2. ' _' → logprob: -1.814713716506958
    3. '_' → logprob: -5.314713478088379
    4. ' ' → logprob: -5.314713478088379
    5. 'i' → logprob: -9.814713478088379
    6. ' ‌' → logprob: -11.564713478088379
    7. ' node' → logprob: -12.314713478088379
    8. ' range' → logprob: -12.439713478088379
    9. ' I' → logprob: -13.314713478088379
    10. ' v' → logprob: -13.314713478088379

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1437949389219284
    2. 'in' → logprob: -2.0187950134277344
    3. ' ' → logprob: -7.143795013427734
    4. 'i' → logprob: -8.393795013427734
    5. ' i' → logprob: -10.768795013427734
    6. 'n' → logprob: -11.518795013427734
    7. 's' → logprob: -11.643795013427734
    8. '	in' → logprob: -11.768795013427734
    9. '```' → logprob: -11.893795013427734
    10. '  ' → logprob: -12.143795013427734

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.027225754223764e-05
    2. ' range' → logprob: -9.750060081481934
    3. '(range' → logprob: -13.625060081481934
    4. 'ange' → logprob: -15.875060081481934
    5. 'ran' → logprob: -16.12506103515625
    6. 'r' → logprob: -16.25006103515625
    7. 'put' → logprob: -16.50006103515625
    8. '	range' → logprob: -16.75006103515625
    9. 'rang' → logprob: -16.75006103515625
    10. 'input' → logprob: -17.12506103515625

Token 40: '(k' (ID: 12125)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4323963224887848
    2. '(' → logprob: -1.5573962926864624
    3. ' n' → logprob: -2.682396411895752
    4. ' (' → logprob: -2.682396411895752
    5. '(k' → logprob: -6.682396411895752
    6. 'n' → logprob: -6.807396411895752
    7. ' k' → logprob: -6.932396411895752
    8. ' ' → logprob: -9.057395935058594
    9. '(int' → logprob: -10.307395935058594
    10. ' )' → logprob: -10.807395935058594

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028788186609745026
    2. ')' → logprob: -6.627878665924072
    3. ' ):' → logprob: -6.627878665924072
    4. '):
' → logprob: -8.50287914276123
    5. ':' → logprob: -11.12787914276123
    6. ' )' → logprob: -12.00287914276123
    7. '+' → logprob: -13.25287914276123
    8. ',' → logprob: -14.00287914276123
    9. '):
' → logprob: -14.75287914276123
    10. ' ):
' → logprob: -14.87787914276123

Token 42: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.02908283658325672
    2. 'u' → logprob: -4.029082775115967
    3. ' a' → logprob: -5.154082775115967
    4. ' line' → logprob: -6.529082775115967
    5. ' s' → logprob: -7.404082775115967
    6. ' node' → logprob: -7.654082775115967
    7. 'a' → logprob: -7.654082775115967
    8. ' v' → logprob: -7.904082775115967
    9. ' x' → logprob: -8.279083251953125
    10. ' q' → logprob: -8.279083251953125

Token 43: ' t' (ID: 260)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8593227863311768
    2. ' u' → logprob: -0.8593227863311768
    3. 'a' → logprob: -2.3593227863311768
    4. ' a' → logprob: -3.1093227863311768
    5. 'q' → logprob: -5.984322547912598
    6. 'x' → logprob: -6.234322547912598
    7. 't' (adapté à ' t') → logprob: -6.859322547912598
    8. ' ' → logprob: -6.984322547912598
    9. ' t' → logprob: -7.109322547912598
    10. 's' → logprob: -7.234322547912598

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09667029976844788
    2. ' ,' → logprob: -2.596670389175415
    3. 'ype' → logprob: -4.096670150756836
    4. ' y' → logprob: -7.346670150756836
    5. ',y' → logprob: -8.971670150756836
    6. 'y' → logprob: -9.346670150756836
    7. ' ' → logprob: -10.221670150756836
    8. ' =' → logprob: -10.346670150756836
    9. 'ypes' → logprob: -11.096670150756836
    10. 'yp' → logprob: -11.096670150756836

Token 45: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7771160006523132
    2. ' u' → logprob: -0.9021160006523132
    3. 'a' → logprob: -2.152116060256958
    4. ' a' → logprob: -4.402115821838379
    5. 'v' → logprob: -5.777115821838379
    6. ' v' → logprob: -6.777115821838379
    7. 'x' → logprob: -6.902115821838379
    8. ' x' → logprob: -8.652115821838379
    9. '*u' → logprob: -8.652115821838379
    10. '*' → logprob: -9.527115821838379

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010283415205776691
    2. '=' → logprob: -4.885283470153809
    3. ' =' → logprob: -6.260283470153809
    4. ' ,' → logprob: -7.260283470153809
    5. '<|end|>' → logprob: -10.635283470153809
    6. ' ' → logprob: -11.010283470153809
    7. '<|end|>' → logprob: -12.385283470153809
    8. ')' → logprob: -12.885283470153809
    9. ',v' → logprob: -13.135283470153809
    10. 's' → logprob: -13.135283470153809

Token 47: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04864288866519928
    2. ' v' → logprob: -3.048642873764038
    3. ',v' → logprob: -11.173643112182617
    4. ' ' → logprob: -11.423643112182617
    5. '	v' → logprob: -11.548643112182617
    6. '_v' → logprob: -11.923643112182617
    7. 't' → logprob: -13.173643112182617
    8. '_' → logprob: -13.423643112182617
    9. ',' → logprob: -13.548643112182617
    10. '=' → logprob: -13.673643112182617

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519523501396179
    2. '=' → logprob: -1.5019524097442627
    3. ')' → logprob: -11.001952171325684
    4. ',' → logprob: -12.376952171325684
    5. ' ' → logprob: -13.376952171325684
    6. '=line' → logprob: -16.001953125
    7. ' =
' → logprob: -16.251953125
    8. ']' → logprob: -16.251953125
    9. ')=' → logprob: -16.376953125
    10. '  ' → logprob: -17.001953125

Token 49: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0036045825108885765
    2. 'map' → logprob: -5.628604412078857
    3. ' ' → logprob: -12.878604888916016
    4. '	map' → logprob: -14.253604888916016
    5. ' list' → logprob: -15.003604888916016
    6. ' m' → logprob: -15.128604888916016
    7. ' input' → logprob: -15.253604888916016
    8. ' ' → logprob: -15.253604888916016
    9. 'm' → logprob: -16.503604888916016
    10. ' mapa' → logprob: -16.753604888916016

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00026753442944027483
    2. '(' → logprob: -8.37526798248291
    3. '[int' → logprob: -11.00026798248291
    4. '<int' → logprob: -11.50026798248291
    5. 'int' → logprob: -12.75026798248291
    6. '=int' → logprob: -13.12526798248291
    7. ',int' → logprob: -13.50026798248291
    8. '<|end|>' → logprob: -14.12526798248291
    9. ']int' → logprob: -14.12526798248291
    10. '(str' → logprob: -14.62526798248291

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007762196473777294
    2. ',input' → logprob: -4.882762432098389
    3. '(' → logprob: -9.13276195526123
    4. ',int' → logprob: -11.00776195526123
    5. '(input' → logprob: -11.63276195526123
    6. ')' → logprob: -11.75776195526123
    7. '(),' → logprob: -12.00776195526123
    8. ' ,' → logprob: -12.50776195526123
    9. '```' → logprob: -13.75776195526123
    10. ',(' → logprob: -13.75776195526123

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141616463661194
    2. ' input' → logprob: -1.7014161348342896
    3. '(input' → logprob: -14.076416015625
    4. ')' → logprob: -14.326416015625
    5. '	input' → logprob: -14.701416015625
    6. '=input' → logprob: -14.701416015625
    7. ',input' → logprob: -15.076416015625
    8. '_input' → logprob: -16.076416015625
    9. '[input' → logprob: -16.451416015625
    10. '<input' → logprob: -16.951416015625

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.228561349213123e-05
    2. '()' → logprob: -9.875052452087402
    3. '(' → logprob: -15.250052452087402
    4. ' ().' → logprob: -15.875052452087402
    5. '()
' → logprob: -16.250051498413086
    6. ')' → logprob: -16.625051498413086
    7. '().__' → logprob: -17.125051498413086
    8. '.' → logprob: -17.250051498413086
    9. '()-' → logprob: -17.375051498413086
    10. '.readline' → logprob: -18.250051498413086

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'strip' → logprob: -16.125
    3. 'spl' → logprob: -16.25
    4. '(split' → logprob: -16.375
    5. ' split' → logprob: -16.5
    6. 'rstrip' → logprob: -17.25
    7. ')' → logprob: -19.75
    8. '```' → logprob: -20.0
    9. 'plit' → logprob: -20.25
    10. '.split' → logprob: -21.0

Token 55: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -12.62501049041748
    3. '))' → logprob: -12.87501049041748
    4. '()' → logprob: -13.37501049041748
    5. '())' → logprob: -13.37501049041748
    6. ' )' → logprob: -15.12501049041748
    7. '`)' → logprob: -15.37501049041748
    8. '),' → logprob: -15.37501049041748
    9. ')`' → logprob: -15.62501049041748
    10. ')))' → logprob: -16.000009536743164

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07722501456737518
    2. '<|end|>' → logprob: -2.8272249698638916
    3. ' ' → logprob: -5.077225208282471
    4. ' if' → logprob: -5.952225208282471
    5. 'if' → logprob: -6.202225208282471
    6. '  ' → logprob: -7.077225208282471
    7. ')' → logprob: -7.077225208282471
    8. '    
' → logprob: -7.577225208282471
    9. '
' → logprob: -7.952225208282471
    10. '	if' → logprob: -8.327224731445312

Token 57: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4408146142959595
    2. ' if' → logprob: -1.6908146142959595
    3. 'if' (adapté à ' if') → logprob: -1.9408146142959595
    4. '<|end|>' → logprob: -4.06581449508667
    5. ' ' → logprob: -4.81581449508667
    6. '  ' → logprob: -7.06581449508667
    7. ' 
' → logprob: -7.56581449508667
    8. ')' → logprob: -7.94081449508667
    9. '	if' → logprob: -8.190814971923828
    10. '    ' → logprob: -8.315814971923828

Token 58: ' u' (ID: 337)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.05565011501312256
    2. 't' → logprob: -2.930650234222412
    3. ' (' → logprob: -7.430650234222412
    4. '(t' → logprob: -9.305649757385254
    5. '(' → logprob: -10.055649757385254
    6. ' u' → logprob: -10.930649757385254
    7. '(u' → logprob: -11.680649757385254
    8. ' ' → logprob: -11.805649757385254
    9. 'u' → logprob: -12.680649757385254
    10. '	t' → logprob: -13.430649757385254

Token 59: ' >' (ID: 1424)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011808098293840885
    2. 'not' → logprob: -4.636807918548584
    3. ' in' → logprob: -7.011807918548584
    4. ' !=' → logprob: -8.136808395385742
    5. ' ==' → logprob: -8.386808395385742
    6. '!=' → logprob: -8.511808395385742
    7. '==' → logprob: -8.636808395385742
    8. '>' → logprob: -9.011808395385742
    9. 'in' → logprob: -10.261808395385742
    10. ' >' → logprob: -10.386808395385742

Token 60: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10021442919969559
    2. ' v' → logprob: -2.3502144813537598
    3. '	v' → logprob: -12.225214004516602
    4. '=' → logprob: -14.100214004516602
    5. ' ' → logprob: -14.100214004516602
    6. '=v' → logprob: -14.725214004516602
    7. '>' → logprob: -14.850214004516602
    8. '<v' → logprob: -15.475214004516602
    9. ' ' → logprob: -15.975214004516602
    10. ')v' → logprob: -16.2252140045166

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010925926035270095
    2. ',' → logprob: -7.001092433929443
    3. ' :' → logprob: -9.376092910766602
    4. '):' → logprob: -9.751092910766602
    5. ':
' → logprob: -10.751092910766602
    6. '   ' → logprob: -12.751092910766602
    7. ')' → logprob: -13.001092910766602
    8. 'u' → logprob: -13.626092910766602
    9. ':**' → logprob: -13.751092910766602
    10. '[u' → logprob: -14.001092910766602

Token 62: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.26924729347229
    2. '       ' → logprob: -1.51924729347229
    3. 'u' → logprob: -2.01924729347229
    4. ' ' → logprob: -2.14424729347229
    5. '   ' → logprob: -2.64424729347229
    6. ' u' → logprob: -2.89424729347229
    7. '```' → logprob: -4.269247055053711
    8. '(u' → logprob: -4.394247055053711
    9. ',' → logprob: -4.519247055053711
    10. ' 
' → logprob: -4.644247055053711

Token 63: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.01563144661486149
    2. 'u' (adapté à ' u') → logprob: -4.265631675720215
    3. ' (' → logprob: -7.640631675720215
    4. '(u' → logprob: -7.765631675720215
    5. '    ' → logprob: -8.640631675720215
    6. ' v' → logprob: -8.765631675720215
    7. ' ' → logprob: -9.390631675720215
    8. '   ' → logprob: -10.390631675720215
    9. ',' → logprob: -10.390631675720215
    10. '	u' → logprob: -10.890631675720215

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018159556202590466
    2. ' ,' → logprob: -6.7518157958984375
    3. ',v' → logprob: -8.251815795898438
    4. '=' → logprob: -8.501815795898438
    5. '>' → logprob: -9.251815795898438
    6. ' >' → logprob: -10.376815795898438
    7. ',u' → logprob: -10.626815795898438
    8. '<|end|>' → logprob: -11.251815795898438
    9. ' =' → logprob: -12.751815795898438
    10. '>,' → logprob: -13.001815795898438

Token 65: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10021303594112396
    2. ' v' → logprob: -2.350213050842285
    3. '<|end|>' → logprob: -12.850213050842285
    4. '	v' → logprob: -13.225213050842285
    5. 'u' → logprob: -13.350213050842285
    6. ' ' → logprob: -15.975213050842285
    7. ' u' → logprob: -15.975213050842285
    8. 'vq' → logprob: -17.60021209716797
    9. ',v' → logprob: -17.85021209716797
    10. ')v' → logprob: -17.97521209716797

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47411173582077026
    2. ' =' → logprob: -0.9741117358207703
    3. ',' → logprob: -10.349111557006836
    4. ')' → logprob: -14.349111557006836
    5. '<|end|>' → logprob: -14.349111557006836
    6. '=
' → logprob: -15.099111557006836
    7. '   ' → logprob: -15.474111557006836
    8. ' =
' → logprob: -15.974111557006836
    9. '```' → logprob: -15.974111557006836
    10. ')=' → logprob: -16.099111557006836

Token 67: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5759461522102356
    2. 'v' → logprob: -0.8259461522102356
    3. '	v' → logprob: -13.075945854187012
    4. ',v' → logprob: -13.200945854187012
    5. '(v' → logprob: -13.950945854187012
    6. ' u' → logprob: -14.325945854187012
    7. 'u' → logprob: -14.325945854187012
    8. ')v' → logprob: -15.450945854187012
    9. ',' → logprob: -16.075946807861328
    10. '    ' → logprob: -16.325946807861328

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',u' → logprob: -13.625006675720215
    4. 'u' → logprob: -16.2500057220459
    5. '```' → logprob: -16.5000057220459
    6. ',
' → logprob: -17.0000057220459
    7. ',user' → logprob: -17.2500057220459
    8. '<|end|>' → logprob: -17.5000057220459
    9. ' ' → logprob: -17.8750057220459
    10. '‌,' → logprob: -18.1250057220459

Token 69: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002476016292348504
    2. ' u' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.87747573852539
    4. '	u' → logprob: -16.12747573852539
    5. '   ' → logprob: -17.50247573852539
    6. ' ' → logprob: -18.75247573852539
    7. '<|end|>' → logprob: -20.37747573852539
    8. '  ' → logprob: -20.62747573852539
    9. ''u' → logprob: -20.62747573852539
    10. 'у' → logprob: -20.62747573852539

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005077448673546314
    2. '    
' → logprob: -5.630077362060547
    3. '\n' → logprob: -8.505077362060547
    4. '  
' → logprob: -8.630077362060547
    5. '<|end|>' → logprob: -8.630077362060547
    6. '
' → logprob: -8.755077362060547
    7. ' 
' → logprob: -9.005077362060547
    8. ' if' → logprob: -9.130077362060547
    9. '    ' → logprob: -9.880077362060547
    10. ')' → logprob: -9.880077362060547

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021784543059766293
    2. '<|end|>' → logprob: -7.12717866897583
    3. '    
' → logprob: -7.25217866897583
    4. ' ' → logprob: -9.127178192138672
    5. ' 
' → logprob: -9.502178192138672
    6. '[' → logprob: -9.627178192138672
    7. '    ' → logprob: -9.627178192138672
    8. ',' → logprob: -10.127178192138672
    9. '```' → logprob: -10.252178192138672
    10. '  
' → logprob: -10.252178192138672

Token 72: ' queries' (ID: 32122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4874708652496338
    2. 'if' → logprob: -1.8624708652496338
    3. '<|end|>' → logprob: -2.612470865249634
    4. ' if' → logprob: -2.737470865249634
    5. 'edges' → logprob: -3.862470865249634
    6. '\n' → logprob: -3.987470865249634
    7. ' ' → logprob: -4.612470626831055
    8. '    
' → logprob: -4.612470626831055
    9. '
' → logprob: -4.862470626831055
    10. ' edges' → logprob: -5.112470626831055

Token 73: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.020729904994368553
    2. '.' → logprob: -3.8957300186157227
    3. '.app' → logprob: -9.770730018615723
    4. '.ap' → logprob: -10.270730018615723
    5. '.push' → logprob: -10.395730018615723
    6. '.py' → logprob: -11.020730018615723
    7. ' .' → logprob: -11.395730018615723
    8. '.Append' → logprob: -11.645730018615723
    9. '.setdefault' → logprob: -11.895730018615723
    10. '<|end|>' → logprob: -12.520730018615723

Token 74: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00680323364213109
    2. '(' → logprob: -5.006803035736084
    3. '(t' → logprob: -9.381803512573242
    4. '(((' → logprob: -14.506803512573242
    5. '((_' → logprob: -14.506803512573242
    6. '(tuple' → logprob: -14.631803512573242
    7. '(q' → logprob: -14.756803512573242
    8. '([' → logprob: -14.756803512573242
    9. '(('' → logprob: -14.881803512573242
    10. ' ((' → logprob: -15.631803512573242

Token 75: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.9795445849886164e-05
    2. ' t' → logprob: -9.750060081481934
    3. '(t' → logprob: -14.375060081481934
    4. '   ' → logprob: -15.000060081481934
    5. '`t' → logprob: -15.000060081481934
    6. ')t' → logprob: -16.375059127807617
    7. '	t' → logprob: -16.625059127807617
    8. ' ' → logprob: -17.875059127807617
    9. ')' → logprob: -18.625059127807617
    10. '  ' → logprob: -19.125059127807617

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.37504768371582
    3. ',u' → logprob: -11.12504768371582
    4. ',
' → logprob: -14.25004768371582
    5. ',user' → logprob: -15.75004768371582
    6. '`,' → logprob: -16.00004768371582
    7. '',' → logprob: -16.12504768371582
    8. '‌,' → logprob: -16.50004768371582
    9. ',n' → logprob: -16.62504768371582
    10. ',v' → logprob: -17.37504768371582

Token 77: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.20141811668872833
    2. ' u' → logprob: -1.701418161392212
    3. ' ' → logprob: -13.201417922973633
    4. ')' → logprob: -13.951417922973633
    5. '	u' → logprob: -14.076417922973633
    6. '(u' → logprob: -15.326417922973633
    7. ',' → logprob: -15.576417922973633
    8. ' ' → logprob: -15.701417922973633
    9. ',u' → logprob: -15.701417922973633
    10. '    ' → logprob: -16.201417922973633

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013607845176011324
    2. ',v' → logprob: -9.000136375427246
    3. ' ,' → logprob: -11.375136375427246
    4. 'v' → logprob: -14.000136375427246
    5. ',
' → logprob: -15.125136375427246
    6. ')' → logprob: -17.37513542175293
    7. ' v' → logprob: -18.25013542175293
    8. ',

' → logprob: -18.50013542175293
    9. '‌,' → logprob: -18.75013542175293
    10. ',)' → logprob: -19.62513542175293

Token 79: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006265374249778688
    2. ' v' → logprob: -7.375626564025879
    3. ')v' → logprob: -16.750625610351562
    4. ')' → logprob: -18.250625610351562
    5. '	v' → logprob: -18.750625610351562
    6. ' ' → logprob: -19.000625610351562
    7. 'vi' → logprob: -19.375625610351562
    8. ',v' → logprob: -20.750625610351562
    9. 'vj' → logprob: -20.875625610351562
    10. '   ' → logprob: -20.875625610351562

Token 80: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868815004825592
    2. '))' → logprob: -1.1368814706802368
    3. ')
' → logprob: -12.261881828308105
    4. '))
' → logprob: -12.761881828308105
    5. ')))' → logprob: -13.511881828308105
    6. '),' → logprob: -13.886881828308105
    7. ' )' → logprob: -15.636881828308105
    8. ' ))' → logprob: -16.13688087463379
    9. ')}' → logprob: -16.76188087463379
    10. ')**' → logprob: -17.13688087463379

Token 81: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8523820638656616
    2. 'if' (adapté à ' if') → logprob: -0.8523820638656616
    3. ' if' → logprob: -2.602382183074951
    4. 'edges' → logprob: -2.727382183074951
    5. ' edges' → logprob: -5.227382183074951
    6. '```' → logprob: -6.977382183074951
    7. 'for' → logprob: -7.227382183074951
    8. ' for' → logprob: -8.852381706237793
    9. '<|end|>' → logprob: -9.352381706237793
    10. ' ' → logprob: -9.352381706237793

Token 83: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.21043942868709564
    2. 't' → logprob: -1.9604394435882568
    3. ' (' → logprob: -3.585439443588257
    4. '(t' → logprob: -4.460439205169678
    5. '(u' → logprob: -5.210439205169678
    6. '(' → logprob: -6.085439205169678
    7. ' u' → logprob: -6.585439205169678
    8. 'u' → logprob: -8.210439682006836
    9. ' ' → logprob: -8.460439682006836
    10. '	t' → logprob: -11.397939682006836

Token 84: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47495442628860474
    2. ' ==' → logprob: -0.9749544262886047
    3. ' ' → logprob: -8.224954605102539
    4. ' in' → logprob: -8.599954605102539
    5. '[' → logprob: -9.099954605102539
    6. '=' → logprob: -9.474954605102539
    7. '!=' → logprob: -10.099954605102539
    8. ')' → logprob: -10.224954605102539
    9. ':' → logprob: -10.724954605102539
    10. ' !=' → logprob: -10.849954605102539

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016399504384025931
    2. '1' → logprob: -7.0016398429870605
    3. ' ' → logprob: -7.2516398429870605
    4. '=' → logprob: -11.251640319824219
    5. ')' → logprob: -13.376640319824219
    6. '2' → logprob: -13.501640319824219
    7. '   ' → logprob: -13.876640319824219
    8. ''' → logprob: -14.501640319824219
    9. '```' → logprob: -15.001640319824219
    10. ' =' → logprob: -15.376640319824219

Token 86: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001340123824775219
    2. '1' → logprob: -6.626339912414551
    3. ' ' → logprob: -12.37633991241455
    4. '=' → logprob: -12.87633991241455
    5. ')' → logprob: -13.37633991241455
    6. ''' → logprob: -13.37633991241455
    7. '2' → logprob: -13.50133991241455
    8. '')' → logprob: -13.62633991241455
    9. '```' → logprob: -15.00133991241455
    10. '`' → logprob: -15.37633991241455

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015157493180595338
    2. ' :' → logprob: -9.625151634216309
    3. '):' → logprob: -10.125151634216309
    4. ':
' → logprob: -10.625151634216309
    5. ' and' → logprob: -11.000151634216309
    6. ',' → logprob: -13.875151634216309
    7. '   ' → logprob: -14.000151634216309
    8. 'and' → logprob: -14.125151634216309
    9. ':**' → logprob: -15.000151634216309
    10. '():' → logprob: -15.125151634216309

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6279024481773376
    2. 'edges' → logprob: -1.8779025077819824
    3. 'if' → logprob: -1.8779025077819824
    4. ' if' → logprob: -2.3779025077819824
    5. ' edges' → logprob: -2.7529025077819824
    6. '       ' → logprob: -6.877902507781982
    7. '(edges' → logprob: -7.127902507781982
    8. ')' → logprob: -7.252902507781982
    9. '```' → logprob: -8.252902030944824
    10. '{
' → logprob: -8.752902030944824

Token 89: ' edges' (ID: 22569)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11892611533403397
    2. ' if' → logprob: -2.8689260482788086
    3. 'edges' (adapté à ' edges') → logprob: -2.9939260482788086
    4. ' edges' → logprob: -5.368926048278809
    5. '   ' → logprob: -7.618926048278809
    6. '       ' → logprob: -10.368926048278809
    7. '(edges' → logprob: -10.743926048278809
    8. 'ed' → logprob: -11.118926048278809
    9. '```' → logprob: -11.118926048278809
    10. 'key' → logprob: -12.118926048278809

Token 90: '[(' (ID: 20542)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.0002043748099822551
    2. '[(' → logprob: -8.625204086303711
    3. '.' → logprob: -10.625204086303711
    4. '[' → logprob: -15.625204086303711
    5. 'set' → logprob: -16.00020408630371
    6. '.set' → logprob: -16.12520408630371
    7. '.get' → logprob: -18.00020408630371
    8. '[u' → logprob: -18.25020408630371
    9. '
' → logprob: -18.25020408630371
    10. '

' → logprob: -18.75020408630371

Token 91: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003370118502061814
    2. ' u' → logprob: -8.000336647033691
    3. ')' → logprob: -14.375336647033691
    4. '   ' → logprob: -15.125336647033691
    5. '	u' → logprob: -15.375336647033691
    6. ' ' → logprob: -16.000337600708008
    7. '(u' → logprob: -16.250337600708008
    8. ',u' → logprob: -16.250337600708008
    9. ''u' → logprob: -17.375337600708008
    10. ',' → logprob: -17.625337600708008

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008775161695666611
    2. ',v' → logprob: -7.125877380371094
    3. ' ,' → logprob: -9.625877380371094
    4. ',u' → logprob: -12.875877380371094
    5. ',)' → logprob: -13.250877380371094
    6. ',
' → logprob: -14.750877380371094
    7. ',n' → logprob: -14.875877380371094
    8. '‌,' → logprob: -15.000877380371094
    9. ')' → logprob: -15.625877380371094
    10. ',w' → logprob: -15.750877380371094

Token 93: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005533903022296727
    2. ' v' → logprob: -7.500553607940674
    3. ')v' → logprob: -15.000553131103516
    4. '	v' → logprob: -17.125553131103516
    5. ')' → logprob: -17.375553131103516
    6. ' ' → logprob: -17.625553131103516
    7. ',v' → logprob: -18.000553131103516
    8. '   ' → logprob: -19.375553131103516
    9. '       ' → logprob: -20.125553131103516
    10. 'vj' → logprob: -20.375553131103516

Token 94: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002156091621145606
    2. ')' → logprob: -6.8771562576293945
    3. ')].' → logprob: -7.2521562576293945
    4. ' )' → logprob: -8.252156257629395
    5. ']' → logprob: -9.002156257629395
    6. ')][' → logprob: -11.627156257629395
    7. ',' → logprob: -11.752156257629395
    8. ')])' → logprob: -12.752156257629395
    9. ' ]' → logprob: -13.002156257629395
    10. '=' → logprob: -13.877156257629395

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000815466046333313
    2. ' =' → logprob: -7.125815391540527
    3. '=True' → logprob: -12.750815391540527
    4. ']' → logprob: -13.375815391540527
    5. ')' → logprob: -13.500815391540527
    6. '=[]' → logprob: -13.750815391540527
    7. ']=' → logprob: -14.000815391540527
    8. '=

' → logprob: -14.375815391540527
    9. '=set' → logprob: -14.375815391540527
    10. '=None' → logprob: -14.625815391540527

Token 96: ' edges' (ID: 22569)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08994089812040329
    2. 'False' → logprob: -3.0899407863616943
    3. '[]' → logprob: -3.8399407863616943
    4. '0' → logprob: -4.714941024780273
    5. '1' → logprob: -5.214941024780273
    6. ' True' → logprob: -5.589941024780273
    7. '[' → logprob: -8.714941024780273
    8. '-' → logprob: -8.839941024780273
    9. 't' → logprob: -9.339941024780273
    10. ' ' → logprob: -9.464941024780273

Token 97: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004208275116980076
    2. 'get' → logprob: -5.879208087921143
    3. '.' → logprob: -7.129208087921143
    4. '1' → logprob: -9.0042085647583
    5. '(' → logprob: -9.2542085647583
    6. '.setdefault' → logprob: -9.3792085647583
    7. '0' → logprob: -9.6292085647583
    8. ' ' → logprob: -10.0042085647583
    9. '+' → logprob: -10.2542085647583
    10. '(u' → logprob: -10.5042085647583

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0340566523373127
    2. '(u' → logprob: -3.5340566635131836
    3. '(' → logprob: -5.534056663513184
    4. ' (' → logprob: -8.034056663513184
    5. ' ((' → logprob: -12.034056663513184
    6. ' ' → logprob: -12.034056663513184
    7. '(user' → logprob: -12.534056663513184
    8. '(v' → logprob: -13.659056663513184
    9. '(None' → logprob: -14.284056663513184
    10. '(
' → logprob: -14.784056663513184

Token 99: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.09196016937494278
    2. 'u' → logprob: -2.4669601917266846
    3. ' (' → logprob: -5.8419599533081055
    4. '(' → logprob: -9.966959953308105
    5. ' u' → logprob: -9.966959953308105
    6. ',u' → logprob: -12.466959953308105
    7. ',' → logprob: -12.591959953308105
    8. '	u' → logprob: -12.716959953308105
    9. ' ' → logprob: -12.966959953308105
    10. ''u' → logprob: -13.341959953308105

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07902748882770538
    2. ',v' → logprob: -2.5790274143218994
    3. 'v' → logprob: -8.95402717590332
    4. ' ,' → logprob: -12.20402717590332
    5. ',u' → logprob: -13.20402717590332
    6. '(v' → logprob: -13.95402717590332
    7. ' v' → logprob: -15.70402717590332
    8. '-' → logprob: -16.95402717590332
    9. '	v' → logprob: -16.95402717590332
    10. ',
' → logprob: -17.20402717590332

Token 101: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011185461189597845
    2. ' v' → logprob: -6.8761186599731445
    3. '1' → logprob: -9.626118659973145
    4. ' ' → logprob: -12.001118659973145
    5. ')v' → logprob: -12.626118659973145
    6. '   ' → logprob: -12.876118659973145
    7. ')' → logprob: -13.001118659973145
    8. 'u' → logprob: -13.626118659973145
    9. '0' → logprob: -13.876118659973145
    10. '2' → logprob: -14.376118659973145

Token 102: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ')' → logprob: -12.875020980834961
    4. '(),' → logprob: -14.125020980834961
    5. '0' → logprob: -14.625020980834961
    6. ' ' → logprob: -16.12502098083496
    7. '),' → logprob: -16.25002098083496
    8. '1' → logprob: -16.37502098083496
    9. '```' → logprob: -17.50002098083496
    10. '`,' → logprob: -18.37502098083496

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029847135301679373
    2. ' ' → logprob: -6.377984523773193
    3. '[]' → logprob: -7.252984523773193
    4. ')' → logprob: -7.877984523773193
    5. '[])' → logprob: -9.002985000610352
    6. 'False' → logprob: -10.627985000610352
    7. '1' → logprob: -11.252985000610352
    8. ' [])' → logprob: -11.377985000610352
    9. ' []' → logprob: -12.377985000610352
    10. 'True' → logprob: -12.502985000610352

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009841008577495813
    2. ' ' → logprob: -7.875984191894531
    3. '[]' → logprob: -8.250984191894531
    4. '[])' → logprob: -9.000984191894531
    5. 'False' → logprob: -9.500984191894531
    6. ')' → logprob: -9.500984191894531
    7. '1' → logprob: -10.750984191894531
    8. ' [])' → logprob: -11.625984191894531
    9. 'True' → logprob: -11.750984191894531
    10. '   ' → logprob: -12.000984191894531

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022320940624922514
    2. ')+' → logprob: -6.252232074737549
    3. ' )' → logprob: -8.252232551574707
    4. '+' → logprob: -10.127232551574707
    5. '1' → logprob: -13.877232551574707
    6. ' +' → logprob: -14.002232551574707
    7. '0' → logprob: -14.627232551574707
    8. '+)' → logprob: -15.252232551574707
    9. '```' → logprob: -16.25223159790039
    10. ' ' → logprob: -16.75223159790039

Token 106: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12695278227329254
    2. ' +' → logprob: -2.126952886581421
    3. '1' → logprob: -11.751953125
    4. ')+' → logprob: -11.751953125
    5. '()+' → logprob: -12.501953125
    6. ')' → logprob: -13.751953125
    7. ' ' → logprob: -13.751953125
    8. ' plus' → logprob: -14.126953125
    9. '+
' → logprob: -14.626953125
    10. '<|end|>' → logprob: -14.876953125

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '-' → logprob: -17.12502098083496
    5. '  ' → logprob: -18.37502098083496
    6. ' -' → logprob: -19.37502098083496
    7. '```' → logprob: -19.68752098083496
    8. ' ' → logprob: -20.00002098083496
    9. '+' → logprob: -20.31252098083496
    10. '2' → logprob: -20.31252098083496

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -14.87501335144043
    4. '   ' → logprob: -17.12501335144043
    5. ' -' → logprob: -17.87501335144043
    6. '2' → logprob: -18.12501335144043
    7. '  ' → logprob: -18.68751335144043
    8. '+' → logprob: -19.37501335144043
    9. '```' → logprob: -19.81251335144043
    10. '１' → logprob: -19.87501335144043

Token 109: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46753835678100586
    2. '<|end|>' → logprob: -1.7175383567810059
    3. '
' → logprob: -2.592538356781006
    4. '```' → logprob: -3.467538356781006
    5. '\n' → logprob: -3.967538356781006
    6. 'n' → logprob: -4.342538356781006
    7. ' ' → logprob: -4.342538356781006
    8. '#' → logprob: -4.467538356781006
    9. '<|end|>' → logprob: -4.842538356781006
    10. ' 
' → logprob: -4.967538356781006

Token 110: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47709280252456665
    2. '<|end|>' → logprob: -1.4770927429199219
    3. '\n' → logprob: -2.352092742919922
    4. '```' → logprob: -4.727092742919922
    5. '_' → logprob: -4.852092742919922
    6. '\' → logprob: -4.852092742919922
    7. '
' → logprob: -5.227092742919922
    8. ' ' → logprob: -5.352092742919922
    9. '#' → logprob: -5.602092742919922
    10. '<|end|>' → logprob: -5.977092742919922

Token 111: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1511974036693573
    2. '2' → logprob: -2.0261974334716797
    3. ' t' → logprob: -4.90119743347168
    4. '0' → logprob: -7.52619743347168
    5. 't' → logprob: -7.90119743347168
    6. '3' → logprob: -9.52619743347168
    7. '1' → logprob: -9.65119743347168
    8. '4' → logprob: -14.65119743347168
    9. '```' → logprob: -15.33869743347168
    10. '   ' → logprob: -15.83869743347168

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.061981018632650375
    2. '==' → logprob: -2.811980962753296
    3. ' ' → logprob: -11.686981201171875
    4. '=' → logprob: -13.686981201171875
    5. '[' → logprob: -13.686981201171875
    6. ' =' → logprob: -14.061981201171875
    7. ' ' → logprob: -14.436981201171875
    8. '```' → logprob: -14.561981201171875
    9. '===' → logprob: -16.186981201171875
    10. ')==' → logprob: -16.186981201171875

Token 114: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02057272009551525
    2. ' ' → logprob: -3.8955726623535156
    3. '0' → logprob: -10.520572662353516
    4. '=' → logprob: -13.645572662353516
    5. '3' → logprob: -13.895572662353516
    6. '1' → logprob: -14.958072662353516
    7. '  ' → logprob: -15.333072662353516
    8. '```' → logprob: -15.520572662353516
    9. '   ' → logprob: -15.833072662353516
    10. '>' → logprob: -16.145572662353516

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015681622608099133
    2. '0' → logprob: -9.00015640258789
    3. ' ' → logprob: -10.37515640258789
    4. '3' → logprob: -13.87515640258789
    5. '=' → logprob: -14.62515640258789
    6. '1' → logprob: -15.87515640258789
    7. '>' → logprob: -16.12515640258789
    8. '２' → logprob: -16.25015640258789
    9. '```' → logprob: -16.31265640258789
    10. ')' → logprob: -17.25015640258789

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008298786706291139
    2. ':
' → logprob: -7.125829696655273
    3. ' :' → logprob: -10.750829696655273
    4. ',' → logprob: -14.000829696655273
    5. '):' → logprob: -14.000829696655273
    6. ':
' → logprob: -14.750829696655273
    7. ' and' → logprob: -14.750829696655273
    8. '   ' → logprob: -15.000829696655273
    9. '       ' → logprob: -15.250829696655273
    10. ':

' → logprob: -15.625829696655273

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09250359982252121
    2. ' edges' → logprob: -3.342503547668457
    3. ' if' → logprob: -3.717503547668457
    4. 'edges' → logprob: -4.467503547668457
    5. '   ' → logprob: -4.717503547668457
    6. 'if' → logprob: -4.967503547668457
    7. ' for' → logprob: -7.592503547668457
    8. '(edges' → logprob: -8.217503547668457
    9. 'for' → logprob: -8.842503547668457
    10. '           ' → logprob: -9.092503547668457

Token 118: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.08272812515497208
    2. ' edges' → logprob: -2.957728147506714
    3. 'if' → logprob: -3.832728147506714
    4. ' if' → logprob: -5.957727909088135
    5. '   ' → logprob: -6.207727909088135
    6. '       ' → logprob: -7.457727909088135
    7. '           ' → logprob: -8.832728385925293
    8. 'edge' → logprob: -9.082728385925293
    9. 'print' → logprob: -9.332728385925293
    10. 'key' → logprob: -9.957728385925293

Token 119: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0008531087078154087
    2. '.setdefault' → logprob: -7.250853061676025
    3. '.pop' → logprob: -9.000853538513184
    4. '.' → logprob: -11.375853538513184
    5. '[' → logprob: -12.250853538513184
    6. '.get' → logprob: -13.250853538513184
    7. '[((' → logprob: -14.875853538513184
    8. '

' → logprob: -16.000852584838867
    9. ' [(' → logprob: -16.000852584838867
    10. ' .' → logprob: -16.000852584838867

Token 120: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00017076305812224746
    2. ' u' → logprob: -9.000170707702637
    3. '(u' → logprob: -10.125170707702637
    4. ',' → logprob: -13.000170707702637
    5. ')' → logprob: -13.250170707702637
    6. ',u' → logprob: -14.250170707702637
    7. ' ' → logprob: -14.625170707702637
    8. ' (' → logprob: -14.625170707702637
    9. 'v' → logprob: -14.750170707702637
    10. '(' → logprob: -15.125170707702637

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001805377542041242
    2. ',v' → logprob: -8.7501802444458
    3. ' ,' → logprob: -10.7501802444458
    4. 'v' → logprob: -15.7501802444458
    5. ',
' → logprob: -16.375181198120117
    6. '‌,' → logprob: -16.500181198120117
    7. ')' → logprob: -17.250181198120117
    8. ',j' → logprob: -17.687681198120117
    9. '<|end|>' → logprob: -17.812681198120117
    10. ',w' → logprob: -18.000181198120117

Token 122: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011732018319889903
    2. ' v' → logprob: -6.75117301940918
    3. 'u' → logprob: -14.12617301940918
    4. ')v' → logprob: -14.37617301940918
    5. '	v' → logprob: -14.62617301940918
    6. 'edges' → logprob: -14.87617301940918
    7. ' ' → logprob: -15.00117301940918
    8. ')' → logprob: -16.00117301940918
    9. '    ' → logprob: -16.50117301940918
    10. '   ' → logprob: -16.62617301940918

Token 123: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018856844399124384
    2. ')]' → logprob: -6.376885890960693
    3. ')' → logprob: -8.876885414123535
    4. ']=' → logprob: -10.126885414123535
    5. '=' → logprob: -13.126885414123535
    6. ' ]' → logprob: -14.501885414123535
    7. '])' → logprob: -14.876885414123535
    8. '`]' → logprob: -14.876885414123535
    9. '-' → logprob: -15.501885414123535
    10. '']' → logprob: -16.37688636779785

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07942196726799011
    2. ' =' → logprob: -2.5794219970703125
    3. '-=' → logprob: -7.8294219970703125
    4. ' -=' → logprob: -9.204421997070312
    5. '-' → logprob: -10.829421997070312
    6. ')' → logprob: -12.204421997070312
    7. ' ' → logprob: -12.954421997070312
    8. ',' → logprob: -13.829421997070312
    9. '+=' → logprob: -14.079421997070312
    10. ']' → logprob: -14.704421997070312

Token 125: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.003713976824656129
    2. ' edges' → logprob: -5.753714084625244
    3. 'max' → logprob: -7.878714084625244
    4. '0' → logprob: -9.378713607788086
    5. '(edges' → logprob: -10.378713607788086
    6. '-' → logprob: -11.378713607788086
    7. '   ' → logprob: -11.503713607788086
    8. ' max' → logprob: -12.253713607788086
    9. 'edge' → logprob: -12.503713607788086
    10. 'ed' → logprob: -12.503713607788086

Token 126: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.463036435074173e-05
    2. '.' → logprob: -11.625024795532227
    3. 'get' → logprob: -11.875024795532227
    4. '.setdefault' → logprob: -12.500024795532227
    5. ' .' → logprob: -12.625024795532227
    6. ').' → logprob: -14.250024795532227
    7. '   ' → logprob: -16.000024795532227
    8. '(' → logprob: -16.125024795532227
    9. '}.' → logprob: -16.125024795532227
    10. '((' → logprob: -16.500024795532227

Token 127: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.930552313453518e-05
    2. '(' → logprob: -10.375049591064453
    3. '<|end|>' → logprob: -11.125049591064453
    4. '[(' → logprob: -13.375049591064453
    5. '```' → logprob: -14.375049591064453
    6. ')((' → logprob: -15.750049591064453
    7. '>((' → logprob: -15.875049591064453
    8. '(
' → logprob: -16.000049591064453
    9. '(None' → logprob: -16.375049591064453
    10. '(u' → logprob: -16.375049591064453

Token 128: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00021557629224844277
    2. 'u' → logprob: -8.750215530395508
    3. ' (' → logprob: -10.250215530395508
    4. ')' → logprob: -12.125215530395508
    5. '[u' → logprob: -12.250215530395508
    6. '(' → logprob: -12.375215530395508
    7. '0' → logprob: -13.500215530395508
    8. ',' → logprob: -13.875215530395508
    9. ',u' → logprob: -14.125215530395508
    10. '1' → logprob: -14.250215530395508

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002078763209283352
    2. '(u' → logprob: -7.002078533172607
    3. ',v' → logprob: -7.252078533172607
    4. ',u' → logprob: -8.002079010009766
    5. '(v' → logprob: -10.127079010009766
    6. ' ,' → logprob: -10.502079010009766
    7. ',(' → logprob: -10.752079010009766
    8. 'v' → logprob: -12.002079010009766
    9. '(' → logprob: -12.002079010009766
    10. ' (' → logprob: -12.127079010009766

Token 130: ' v' (ID: 323)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.6694095134735107
    2. '0' → logprob: -0.7944095134735107
    3. 'v' → logprob: -4.41940975189209
    4. '(v' → logprob: -4.54440975189209
    5. ' (' → logprob: -5.29440975189209
    6. 'u' → logprob: -5.66940975189209
    7. ')' → logprob: -5.91940975189209
    8. '1' → logprob: -7.29440975189209
    9. ' ' → logprob: -7.54440975189209
    10. ')v' → logprob: -7.79440975189209

Token 131: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031963700894266367
    2. ')' → logprob: -5.7531962394714355
    3. ' ,' → logprob: -11.378196716308594
    4. '),' → logprob: -12.503196716308594
    5. ',)' → logprob: -14.128196716308594
    6. '',' → logprob: -14.378196716308594
    7. '```' → logprob: -14.753196716308594
    8. '1' → logprob: -15.128196716308594
    9. '0' → logprob: -15.378196716308594
    10. '(),' → logprob: -15.503196716308594

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01634577289223671
    2. ' ' → logprob: -4.141345977783203
    3. '1' → logprob: -8.391345977783203
    4. ')' → logprob: -10.141345977783203
    5. '-' → logprob: -10.766345977783203
    6. ' -' → logprob: -11.391345977783203
    7. ',' → logprob: -13.016345977783203
    8. '
' → logprob: -13.203845977783203
    9. '   ' → logprob: -13.703845977783203
    10. '```' → logprob: -13.953845977783203

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018986482173204422
    2. ' ' → logprob: -6.376898765563965
    3. '1' → logprob: -8.751898765563965
    4. ')' → logprob: -10.501898765563965
    5. '-' → logprob: -12.001898765563965
    6. ' -' → logprob: -13.501898765563965
    7. ',' → logprob: -13.876898765563965
    8. '```' → logprob: -14.751898765563965
    9. '   ' → logprob: -15.439398765563965
    10. ' )' → logprob: -15.751898765563965

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. '-' → logprob: -11.000038146972656
    3. ' )' → logprob: -11.750038146972656
    4. ')-' → logprob: -11.750038146972656
    5. ' -' → logprob: -12.625038146972656
    6. ',' → logprob: -13.125038146972656
    7. '-)' → logprob: -15.750038146972656
    8. ']' → logprob: -16.125038146972656
    9. ')+' → logprob: -16.125038146972656
    10. '')' → logprob: -16.625038146972656

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31376075744628906
    2. '-' → logprob: -1.313760757446289
    3. ' ' → logprob: -8.313760757446289
    4. '+' → logprob: -8.813760757446289
    5. ')' → logprob: -9.688760757446289
    6. ' +' → logprob: -10.313760757446289
    7. '0' → logprob: -13.188760757446289
    8. '1' → logprob: -13.188760757446289
    9. '<|end|>' → logprob: -13.438760757446289
    10. ' ' → logprob: -13.813760757446289

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -16.750553131103516
    4. '```' → logprob: -16.875553131103516
    5. '   ' → logprob: -17.250553131103516
    6. '0' → logprob: -18.250553131103516
    7. ')' → logprob: -19.375553131103516
    8. '       ' → logprob: -19.438053131103516
    9. '2' → logprob: -19.625553131103516
    10. '
' → logprob: -19.750553131103516

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -15.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '2' → logprob: -19.500001907348633
    7. '0' → logprob: -19.750001907348633
    8. '...' → logprob: -20.000001907348633
    9. '-' → logprob: -20.625001907348633
    10. '       ' → logprob: -20.750001907348633

Token 138: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1412886530160904
    2. 'class' → logprob: -2.7662887573242188
    3. '#' → logprob: -3.8912887573242188
    4. 'parent' → logprob: -4.016288757324219
    5. 'def' → logprob: -4.891288757324219
    6. 'graph' → logprob: -5.141288757324219
    7. 'visited' → logprob: -5.766288757324219
    8. '(' → logprob: -6.391288757324219
    9. 'from' → logprob: -6.516288757324219
    10. 'parents' → logprob: -6.641288757324219

Token 139: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.49042749404907227
    2. ')' → logprob: -1.6154274940490723
    3. 'parent' → logprob: -2.3654274940490723
    4. '
' → logprob: -3.4904274940490723
    5. '#' → logprob: -4.115427494049072
    6. 'def' → logprob: -4.240427494049072
    7. '```' → logprob: -5.240427494049072
    8. 'visited' → logprob: -5.490427494049072
    9. 'parents' → logprob: -5.865427494049072
    10. '<|end|>' → logprob: -5.990427494049072

Token 140: ' ' (ID: 220)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7973188161849976
    2. 'from' → logprob: -1.6723188161849976
    3. 'parent' → logprob: -1.7973188161849976
    4. ' class' → logprob: -3.422318935394287
    5. '#' → logprob: -3.547318935394287
    6. 'uf' → logprob: -4.047318935394287
    7. 'import' → logprob: -4.047318935394287
    8. ' from' → logprob: -4.297318935394287
    9. ' parent' → logprob: -4.297318935394287
    10. 'def' → logprob: -4.422318935394287

Token 141: 'い' (ID: 3826)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6973285675048828
    2. 'parent' → logprob: -0.6973285675048828
    3. 'from' → logprob: -6.322328567504883
    4. 'parents' → logprob: -6.697328567504883
    5. '#' → logprob: -7.322328567504883
    6. 'par' → logprob: -8.947328567504883
    7. 'import' → logprob: -9.447328567504883
    8. 'def' → logprob: -9.697328567504883
    9. 'visited' → logprob: -10.197328567504883
    10. 'graph' → logprob: -10.197328567504883

Token 142: 'ま' (ID: 5042)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.7062448263168335
    2. 'ま' → logprob: -1.7062448263168335
    3. 'み' → logprob: -1.9562448263168335
    4. 'ん' → logprob: -2.081244945526123
    5. '#' → logprob: -2.206244945526123
    6. 'n' → logprob: -3.456244945526123
    7. 'つ' → logprob: -3.581244945526123
    8. 'た' → logprob: -3.581244945526123
    9. 'け' → logprob: -3.706244945526123
    10. 'import' → logprob: -3.956244945526123

Token 143: '建' (ID: 12340)
  Prédit: 'まで'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'まで' → logprob: -1.2500332593917847
    2. 'の' → logprob: -1.3750332593917847
    3. 'から' → logprob: -1.8750332593917847
    4. 'は' → logprob: -2.500033378601074
    5. '、' → logprob: -2.750033378601074
    6. 'from' → logprob: -3.000033378601074
    7. '回' → logprob: -3.000033378601074
    8. 'す' → logprob: -4.625033378601074
    9. ',' → logprob: -4.750033378601074
    10. '後' → logprob: -5.000033378601074

Token 144: 'って' (ID: 30677)
  Prédit: '設'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '設' → logprob: -0.4238858222961426
    2. 'て' → logprob: -1.1738858222961426
    3. '```' → logprob: -3.7988858222961426
    4. '築' → logprob: -4.798885822296143
    5. 'って' → logprob: -5.923885822296143
    6. '物' → logprob: -6.548885822296143
    7. 'っ' → logprob: -8.423885345458984
    8. '造' → logprob: -8.548885345458984
    9. 'つ' → logprob: -8.673885345458984
    10. '#' → logprob: -9.423885345458984

Token 145: 'いる' (ID: 86169)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.0004599823441822082
    2. 'いる' → logprob: -8.625459671020508
    3. 'る' → logprob: -9.000459671020508
    4. 'た' → logprob: -9.500459671020508
    5. 'いて' → logprob: -10.000459671020508
    6. '```' → logprob: -11.375459671020508
    7. 'ています' → logprob: -11.500459671020508
    8. '#' → logprob: -12.000459671020508
    9. 'つ' → logprob: -13.250459671020508
    10. 'い' → logprob: -13.625459671020508

Token 146: '全' (ID: 5145)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3400617837905884
    2. 'brid' → logprob: -2.590061664581299
    3. '橋' → logprob: -2.840061664581299
    4. 'houses' → logprob: -2.965061664581299
    5. ' bridges' → logprob: -3.965061664581299
    6. 'build' → logprob: -4.090061664581299
    7. '家' → logprob: -4.715061664581299
    8. '#' → logprob: -4.715061664581299
    9. '<|end|>' → logprob: -4.715061664581299
    10. 'もの' → logprob: -4.840061664581299

Token 147: 'て' (ID: 5711)
  Prédit: 'て'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.010378395207226276
    2. 'る' → logprob: -5.385378360748291
    3. 'edges' → logprob: -6.635378360748291
    4. 'た' → logprob: -7.135378360748291
    5. 'つ' → logprob: -7.260378360748291
    6. 'ます' → logprob: -7.510378360748291
    7. '```' → logprob: -7.885378360748291
    8. '辺' → logprob: -8.26037883758545
    9. 'え' → logprob: -8.76037883758545
    10. 'も' → logprob: -8.76037883758545

Token 148: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.014973904937505722
    2. '#' → logprob: -4.764974117279053
    3. 'edges' → logprob: -5.889974117279053
    4. '_edges' → logprob: -6.639974117279053
    5. 'で' → logprob: -8.139973640441895
    6. 'か' → logprob: -8.389973640441895
    7. ',' → logprob: -8.514973640441895
    8. 'for' → logprob: -8.639973640441895
    9. 'of' → logprob: -8.764973640441895
    10. ' edges' → logprob: -9.014973640441895

Token 149: '通' (ID: 9034)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.19912347197532654
    2. 'edge' → logprob: -2.4491233825683594
    3. '橋' → logprob: -2.8241233825683594
    4. '辺' → logprob: -4.074123382568359
    5. '#' → logprob: -5.449123382568359
    6. '_edges' → logprob: -6.449123382568359
    7. 'bridge' → logprob: -6.574123382568359
    8. ' edges' → logprob: -6.824123382568359
    9. '道路' → logprob: -6.824123382568359
    10. 'build' → logprob: -7.199123382568359

Token 150: '路' (ID: 14385)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.23305508494377136
    2. '路' → logprob: -1.6080551147460938
    3. '行' → logprob: -5.733055114746094
    4. '```' → logprob: -6.483055114746094
    5. '#' → logprob: -7.358055114746094
    6. 'る' → logprob: -7.483055114746094
    7. 'し' → logprob: -7.983055114746094
    8. '学' → logprob: -8.483055114746094
    9. 'った' → logprob: -8.858055114746094
    10. '{' → logprob: -9.108055114746094

Token 151: 'の' (ID: 3385)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -1.1817926168441772
    2. 'active' → logprob: -1.4317926168441772
    3. 'current' → logprob: -2.056792736053467
    4. 'built' → logprob: -2.431792736053467
    5. 'open' → logprob: -2.931792736053467
    6. 'edges' → logprob: -3.056792736053467
    7. 'building' → logprob: -3.806792736053467
    8. 'alive' → logprob: -4.306792736053467
    9. 'present' → logprob: -4.431792736053467
    10. 'all' → logprob: -4.681792736053467

Token 152: '状態' (ID: 175682)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.7409772276878357
    2. 'edges' → logprob: -1.7409772872924805
    3. 'count' → logprob: -1.8659772872924805
    4. '#' → logprob: -2.4909772872924805
    5. '状態' → logprob: -3.7409772872924805
    6. 'length' → logprob: -4.2409772872924805
    7. 'number' → logprob: -4.2409772872924805
    8. 'for' → logprob: -4.6159772872924805
    9. 'connected' → logprob: -5.2409772872924805
    10. 'state' → logprob: -5.6159772872924805

Token 153: 'を' (ID: 7277)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5290748476982117
    2. 'current' → logprob: -1.4040749073028564
    3. 'active' → logprob: -3.0290749073028564
    4. 'graph' → logprob: -4.279074668884277
    5. 'open' → logprob: -4.279074668884277
    6. 'existing' → logprob: -4.529074668884277
    7. '#' → logprob: -4.654074668884277
    8. 'building' → logprob: -4.654074668884277
    9. 'connected' → logprob: -5.154074668884277
    10. 'alive' → logprob: -5.279074668884277

Token 154: '管理' (ID: 25105)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6881514191627502
    2. '{' → logprob: -2.0631513595581055
    3. 'default' → logprob: -2.9381513595581055
    4. '[]' → logprob: -3.0631513595581055
    5. '確認' → logprob: -3.0631513595581055
    6. '#' → logprob: -3.3131513595581055
    7. '保存' → logprob: -3.5631513595581055
    8. 'keys' → logprob: -4.1881513595581055
    9. 'checked' → logprob: -4.1881513595581055
    10. '保持' → logprob: -4.4381513595581055

Token 155: '
' (ID: 198)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5527968406677246
    2. 'class' → logprob: -1.9277968406677246
    3. 'graph' → logprob: -2.0527968406677246
    4. 'current' → logprob: -4.052796840667725
    5. 'state' → logprob: -4.177796840667725
    6. 'edges' → logprob: -4.552796840667725
    7. 'par' → logprob: -4.677796840667725
    8. '#' → logprob: -4.677796840667725
    9. 'color' → logprob: -4.677796840667725
    10. 'union' → logprob: -4.802796840667725

Token 156: '#' (ID: 2)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0630029439926147
    2. 'class' → logprob: -1.4380029439926147
    3. 'graph' → logprob: -2.4380030632019043
    4. 'connected' → logprob: -2.6880030632019043
    5. 'union' → logprob: -3.4380030632019043
    6. 'active' → logprob: -3.4380030632019043
    7. 'current' → logprob: -3.4380030632019043
    8. 'visited' → logprob: -3.9380030632019043
    9. '#' → logprob: -4.063003063201904
    10. 'state' → logprob: -4.438003063201904

Token 157: ' �' (ID: 117111)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6920738816261292
    2. 'parent' → logprob: -1.4420738220214844
    3. 'from' → logprob: -2.1920738220214844
    4. '#' → logprob: -3.6920738220214844
    5. 'union' → logprob: -3.9420738220214844
    6. 'graph' → logprob: -4.067073822021484
    7. 'pass' → logprob: -4.192073822021484
    8. 'visited' → logprob: -4.192073822021484
    9. 'parents' → logprob: -4.192073822021484
    10. 'color' → logprob: -5.192073822021484

Token 158: '�' (ID: 103)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.748216986656189
    2. 'from' → logprob: -1.998216986656189
    3. 'class' → logprob: -2.4982171058654785
    4. 'uf' → logprob: -2.9982171058654785
    5. 'union' → logprob: -3.3732171058654785
    6. 'current' → logprob: -3.4982171058654785
    7. 'parent' → logprob: -3.6232171058654785
    8. 'visited' → logprob: -3.7482171058654785
    9. 'u' → logprob: -4.1232171058654785
    10. 'd' → logprob: -4.4982171058654785

Token 159: '問' (ID: 36302)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6858365535736084
    2. 'class' → logprob: -2.0608365535736084
    3. ')' → logprob: -2.1858365535736084
    4. 'd' → logprob: -2.8108365535736084
    5. 'from' → logprob: -3.0608365535736084
    6. 'uf' → logprob: -3.6858365535736084
    7. 'parent' → logprob: -3.9358365535736084
    8. 'dis' → logprob: -3.9358365535736084
    9. 'union' → logprob: -4.4358367919921875
    10. 'u' → logprob: -4.4358367919921875

Token 160: '段' (ID: 27561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.592976450920105
    2. ')' → logprob: -1.967976450920105
    3. ':' → logprob: -2.8429765701293945
    4. '題' → logprob: -2.8429765701293945
    5. '=' → logprob: -3.5929765701293945
    6. 'の' → logprob: -4.0929765701293945
    7. 'は' → logprob: -4.2179765701293945
    8. 'を' → logprob: -4.5929765701293945
    9. ' ' → logprob: -5.0929765701293945
    10. 'from' → logprob: -5.0929765701293945

Token 161: '階' (ID: 98156)
  Prédit: '階'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '階' → logprob: -1.358683466911316
    2. '#' → logprob: -1.733683466911316
    3. 'の' → logprob: -3.2336835861206055
    4. 'd' → logprob: -3.2336835861206055
    5. 'def' → logprob: -3.7336835861206055
    6. 'w' → logprob: -3.7336835861206055
    7. 'a' → logprob: -3.7336835861206055
    8. 's' → logprob: -3.8586835861206055
    9. '線' → logprob: -4.1086835861206055
    10. '落' → logprob: -4.1086835861206055

Token 162: 'で' (ID: 4344)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.147644504904747
    2. ')' → logprob: -3.147644519805908
    3. 's' → logprob: -4.397644519805908
    4. ' ' → logprob: -4.397644519805908
    5. 'visited' → logprob: -4.397644519805908
    6. ' #' → logprob: -4.897644519805908
    7. ',' → logprob: -4.897644519805908
    8. 'union' → logprob: -5.397644519805908
    9. 'def' → logprob: -5.522644519805908
    10. '```' → logprob: -5.772644519805908

Token 163: 'の' (ID: 3385)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.659970760345459
    2. '[]' → logprob: -2.784970760345459
    3. 'class' → logprob: -3.034970760345459
    4. ')' → logprob: -3.284970760345459
    5. 'は' → logprob: -3.409970760345459
    6. 'for' → logprob: -3.534970760345459
    7. 'union' → logprob: -3.659970760345459
    8. 'parent' → logprob: -3.909970760345459
    9. '続' → logprob: -3.909970760345459
    10. 'def' → logprob: -4.034970760345459

Token 164: '通' (ID: 9034)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -2.0161550045013428
    2. 'union' → logprob: -2.0161550045013428
    3. 'edges' → logprob: -2.1411550045013428
    4. 'visited' → logprob: -2.3911550045013428
    5. '通' → logprob: -3.0161550045013428
    6. 'dis' → logprob: -3.1411550045013428
    7. 'for' → logprob: -3.2661550045013428
    8. 'def' → logprob: -3.2661550045013428
    9. 'graph' → logprob: -3.5161550045013428
    10. '```' → logprob: -3.5161550045013428

Token 165: '路' (ID: 14385)
  Prédit: '路'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '路' → logprob: -0.12320967018604279
    2. '```' → logprob: -2.6232097148895264
    3. '続' → logprob: -4.498209476470947
    4. '#' → logprob: -4.873209476470947
    5. '通' → logprob: -5.998209476470947
    6. 'し' → logprob: -6.123209476470947
    7. 'ろ' → logprob: -6.123209476470947
    8. '線' → logprob: -6.623209476470947
    9. 'じ' → logprob: -6.748209476470947
    10. '答' → logprob: -6.998209476470947

Token 166: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.2145502120256424
    2. '#' → logprob: -2.714550256729126
    3. 'を' → logprob: -3.214550256729126
    4. 'が' → logprob: -3.589550256729126
    5. 'は' → logprob: -3.839550256729126
    6. 's' → logprob: -4.339550018310547
    7. '状態' → logprob: -5.214550018310547
    8. 'も' → logprob: -6.464550018310547
    9. ')' → logprob: -6.714550018310547
    10. '_' → logprob: -6.902050018310547

Token 167: '状態' (ID: 175682)
  Prédit: '状態'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '状態' → logprob: -1.1372650861740112
    2. '存在' → logprob: -1.3872650861740112
    3. '有' → logprob: -2.887265205383301
    4. '状' → logprob: -3.512265205383301
    5. '```' → logprob: -3.762265205383301
    6. '利用' → logprob: -4.012265205383301
    7. '削' → logprob: -4.012265205383301
    8. '#' → logprob: -4.012265205383301
    9. '使用' → logprob: -4.137265205383301
    10. '存' → logprob: -4.512265205383301

Token 168: 'を' (ID: 7277)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4832172095775604
    2. 'current' → logprob: -1.7332172393798828
    3. ')' → logprob: -2.358217239379883
    4. 'visited' → logprob: -4.108217239379883
    5. 'state' → logprob: -4.858217239379883
    6. 's' → logprob: -4.858217239379883
    7. 'edges' → logprob: -4.858217239379883
    8. ',' → logprob: -4.983217239379883
    9. '```' → logprob: -5.608217239379883
    10. 'parent' → logprob: -5.733217239379883

Token 169: '管理' (ID: 25105)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3647099733352661
    2. 'for' → logprob: -3.1147098541259766
    3. '考' → logprob: -3.3647098541259766
    4. '確認' → logprob: -3.9897098541259766
    5. 'dict' → logprob: -3.9897098541259766
    6. '```' → logprob: -4.114709854125977
    7. '{}' → logprob: -4.489709854125977
    8. '{' → logprob: -4.489709854125977
    9. 'def' → logprob: -4.489709854125977
    10. '[]' → logprob: -4.614709854125977

Token 170: 'する' (ID: 39065)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1446805000305176
    2. 'class' → logprob: -1.3946805000305176
    3. 'visited' → logprob: -1.6446805000305176
    4. 'parent' → logprob: -1.8946805000305176
    5. 'uf' → logprob: -3.7696805000305176
    6. 'parents' → logprob: -4.269680500030518
    7. 'used' → logprob: -4.894680500030518
    8. 'import' → logprob: -5.144680500030518
    9. 'from' → logprob: -5.269680500030518
    10. 'color' → logprob: -5.519680500030518

Token 171: 'の' (ID: 3385)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6781576871871948
    2. 'visited' → logprob: -1.1781576871871948
    3. ')' → logprob: -2.5531578063964844
    4. 'parent' → logprob: -3.3031578063964844
    5. 'class' → logprob: -4.678157806396484
    6. '```' → logprob: -4.928157806396484
    7. 'edges' → logprob: -5.053157806396484
    8. 'union' → logprob: -5.428157806396484
    9. 'uf' → logprob: -5.553157806396484
    10. 'parents' → logprob: -5.678157806396484

Token 172: 'が' (ID: 6632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45563384890556335
    2. ' ' → logprob: -1.9556338787078857
    3. ')' → logprob: -3.0806338787078857
    4. 'def' → logprob: -3.5806338787078857
    5. 'ため' → logprob: -3.5806338787078857
    6. '.' → logprob: -4.330633640289307
    7. 'for' → logprob: -4.830633640289307
    8. '。' → logprob: -4.955633640289307
    9. 'が' → logprob: -4.955633640289307
    10. 'import' → logprob: -4.955633640289307

Token 173: '難' (ID: 116676)
  Prédit: '難'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '難' → logprob: -0.043964650481939316
    2. '#' → logprob: -3.9189646244049072
    3. 'd' → logprob: -5.543964862823486
    4. '困' → logprob: -5.793964862823486
    5. '続' → logprob: -5.918964862823486
    6. '```' → logprob: -6.168964862823486
    7. 'でき' → logprob: -6.918964862823486
    8. 'む' → logprob: -7.293964862823486
    9. 'import' → logprob: -7.293964862823486
    10. '不' → logprob: -7.543964862823486

Token 174: 'しい' (ID: 63386)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -0.010242823511362076
    2. 'しい' → logprob: -5.135242938995361
    3. '解' → logprob: -6.635242938995361
    4. '）' → logprob: -7.760242938995361
    5. ')' → logprob: -7.885242938995361
    6. '```' → logprob: -8.510242462158203
    7. '�' → logprob: -8.635242462158203
    8. ' )' → logprob: -8.635242462158203
    9. 'か' → logprob: -9.135242462158203
    10. ' ' → logprob: -9.260242462158203

Token 175: 'ため' (ID: 103912)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4273809492588043
    2. ')' → logprob: -1.552380919456482
    3. 'class' → logprob: -2.5523810386657715
    4. '
' → logprob: -4.0523810386657715
    5. '```' → logprob: -4.6773810386657715
    6. 'import' → logprob: -5.1773810386657715
    7. 'n' → logprob: -5.3023810386657715
    8. ',' → logprob: -5.3023810386657715
    9. 'd' → logprob: -6.3023810386657715
    10. 'def' → logprob: -6.4273810386657715

Token 176: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5062152147293091
    2. 'visited' → logprob: -1.881215214729309
    3. 'parent' → logprob: -3.3812150955200195
    4. ')' → logprob: -3.6312150955200195
    5. 'class' → logprob: -3.7562150955200195
    6. 'dist' → logprob: -4.0062150955200195
    7. ' #' → logprob: -4.2562150955200195
    8. 'import' → logprob: -4.3812150955200195
    9. 'parents' → logprob: -4.5062150955200195
    10. ',' → logprob: -4.5062150955200195

Token 177: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4251973032951355
    2. 'class' → logprob: -1.6751973628997803
    3. ')' → logprob: -3.1751973628997803
    4. 'visited' → logprob: -3.5501973628997803
    5. 'import' → logprob: -4.175197124481201
    6. 'parent' → logprob: -4.550197124481201
    7. ' class' → logprob: -4.800197124481201
    8. ' #' → logprob: -5.050197124481201
    9. 'from' → logprob: -5.175197124481201
    10. 'def' → logprob: -5.300197124481201

Token 178: ' 一' (ID: 16304)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17540009319782257
    2. ' #' → logprob: -3.5504000186920166
    3. 'visited' → logprob: -3.5504000186920166
    4. 'continue' → logprob: -4.550400257110596
    5. ' visited' → logprob: -4.675400257110596
    6. 'from' → logprob: -4.800400257110596
    7. 'pass' → logprob: -4.925400257110596
    8. 'diff' → logprob: -5.175400257110596
    9. ' edges' → logprob: -5.425400257110596
    10. ' continue' → logprob: -5.675400257110596

Token 179: '番' (ID: 30357)
  Prédit: '度'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '度' → logprob: -0.5819218754768372
    2. '旦' → logprob: -2.0819218158721924
    3. '段' → logprob: -2.2069218158721924
    4. '連' → logprob: -2.5819218158721924
    5. '番' → logprob: -3.3319218158721924
    6. '時' → logprob: -3.7069218158721924
    7. '回' → logprob: -4.5819220542907715
    8. '次' → logprob: -4.7069220542907715
    9. '括' → logprob: -4.7069220542907715
    10. 'つ' → logprob: -5.2069220542907715

Token 180: '簡' (ID: 84508)
  Prédit: '後'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '後' → logprob: -1.1477882862091064
    2. '初' → logprob: -1.2727882862091064
    3. '最' → logprob: -2.1477882862091064
    4. '最後' → logprob: -2.2727882862091064
    5. '下' → logprob: -2.6477882862091064
    6. '長' → logprob: -3.6477882862091064
    7. '近' → logprob: -3.8977882862091064
    8. '新' → logprob: -4.272788047790527
    9. '終' → logprob: -4.522788047790527
    10. '大' → logprob: -4.772788047790527

Token 181: '単' (ID: 87236)
  Prédit: '単'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '単' → logprob: -0.07090592384338379
    2. 'い' → logprob: -3.945905923843384
    3. 'しい' → logprob: -3.945905923843384
    4. 'し' → logprob: -4.695905685424805
    5. 'な' → logprob: -4.820905685424805
    6. 'ら' → logprob: -6.070905685424805
    7. 'に' → logprob: -6.070905685424805
    8. '便' → logprob: -7.320905685424805
    9. '要' → logprob: -7.445905685424805
    10. 'そう' → logprob: -7.445905685424805

Token 182: 'な' (ID: 5784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: '方法' (ID: 23920)
  Prédit: '方法'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '方法' → logprob: -0.13670112192630768
    2. 'ところ' → logprob: -3.2617011070251465
    3. 'の' → logprob: -3.3867011070251465
    4. '方' → logprob: -4.0117011070251465
    5. '解' → logprob: -4.5117011070251465
    6. 'appro' → logprob: -5.7617011070251465
    7. 'と' → logprob: -6.0117011070251465
    8. '形' → logprob: -6.1367011070251465
    9. '#' → logprob: -6.1367011070251465
    10. 'ア' → logprob: -6.2617011070251465

Token 184: 'は' (ID: 5205)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14617089927196503
    2. '
' → logprob: -3.6461708545684814
    3. 'class' → logprob: -3.6461708545684814
    4. 'def' → logprob: -4.0211710929870605
    5. ')' → logprob: -4.1461710929870605
    6. 'import' → logprob: -4.8961710929870605
    7. '```' → logprob: -4.8961710929870605
    8. 'edges' → logprob: -5.2711710929870605
    9. 'visited' → logprob: -5.6461710929870605
    10. 'parent' → logprob: -5.7711710929870605

Token 185: '各' (ID: 25676)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8430460691452026
    2. '#' → logprob: -2.093046188354492
    3. '[]' → logprob: -2.718046188354492
    4. ' #' → logprob: -2.843046188354492
    5. ' for' → logprob: -3.468046188354492
    6. 'all' → logprob: -3.593046188354492
    7. 'time' → logprob: -3.593046188354492
    8. 'segment' → logprob: -3.718046188354492
    9. 'queries' → logprob: -3.718046188354492
    10. '```' → logprob: -3.843046188354492

Token 186: '質問' (ID: 193023)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.655989944934845
    2. 'for' → logprob: -2.2809898853302
    3. '辺' → logprob: -2.5309898853302
    4. 'edge' → logprob: -2.7809898853302
    5. 'ク' → logprob: -2.9059898853302
    6. '行' → logprob: -3.4059898853302
    7. '時' → logprob: -3.7809898853302
    8. 'edges' → logprob: -4.155990123748779
    9. '通' → logprob: -4.280990123748779
    10. 'line' → logprob: -4.405990123748779

Token 187: 'の' (ID: 3385)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2665077447891235
    2. '<|end|>' → logprob: -2.016507625579834
    3. ')' → logprob: -2.141507625579834
    4. 'の' → logprob: -2.641507625579834
    5. 'を' → logprob: -2.641507625579834
    6. 'for' → logprob: -3.016507625579834
    7. '#' → logprob: -3.141507625579834
    8. 'ご' → logprob: -3.141507625579834
    9. ' ' → logprob: -3.141507625579834
    10. ' for' → logprob: -4.141507625579834

Token 188: '時' (ID: 12131)
  Prédit: '時'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時' → logprob: -1.5630394220352173
    2. '通' → logprob: -1.6880394220352173
    3. '状態' → logprob: -1.6880394220352173
    4. '段' → logprob: -3.1880393028259277
    5. '前' → logprob: -3.4380393028259277
    6. 'edges' → logprob: -3.6880393028259277
    7. '辺' → logprob: -3.8130393028259277
    8. 'た' → logprob: -3.8130393028259277
    9. '```' → logprob: -4.063039302825928
    10. 'タイ' → logprob: -4.313039302825928

Token 189: '点' (ID: 8300)
  Prédit: '間'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '間' → logprob: -0.020500782877206802
    2. '点' → logprob: -4.020500659942627
    3. 'に' → logprob: -6.895500659942627
    4. 'の' → logprob: -7.395500659942627
    5. '间' → logprob: -8.395501136779785
    6. 'まで' → logprob: -9.145501136779785
    7. '#' → logprob: -9.645501136779785
    8. '```' → logprob: -10.020501136779785
    9. '刻' → logprob: -10.145501136779785
    10. 'を' → logprob: -11.020501136779785

Token 190: 'で' (ID: 4344)
  Prédit: 'で'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.17348797619342804
    2. 'まで' → logprob: -2.798487901687622
    3. 'に' → logprob: -3.673487901687622
    4. ',' → logprob: -4.173488140106201
    5. ' ' → logprob: -4.548488140106201
    6. 'の' → logprob: -4.798488140106201
    7. ')' → logprob: -5.048488140106201
    8. 'for' → logprob: -5.423488140106201
    9. '#' → logprob: -5.423488140106201
    10. 'では' → logprob: -5.548488140106201

Token 191: '現在' (ID: 96436)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.221232533454895
    2. 'for' → logprob: -1.721232533454895
    3. '#' → logprob: -2.0962324142456055
    4. ' pass' → logprob: -2.7212324142456055
    5. 'す' → logprob: -2.7212324142456055
    6. ' edges' → logprob: -2.9712324142456055
    7. 'edges' → logprob: -3.0962324142456055
    8. ' for' → logprob: -3.8462324142456055
    9. 'print' → logprob: -4.3462324142456055
    10. '[]' → logprob: -4.3462324142456055

Token 192: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.03467068448662758
    2. 'まで' → logprob: -4.534670829772949
    3. 'ある' → logprob: -4.909670829772949
    4. ')' → logprob: -5.909670829772949
    5. '存在' → logprob: -6.284670829772949
    6. ',' → logprob: -6.409670829772949
    7. ' の' → logprob: -6.659670829772949
    8. 'いる' → logprob: -6.659670829772949
    9. 'import' → logprob: -7.659670829772949
    10. '、' → logprob: -7.659670829772949

Token 193: '通' (ID: 9034)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2845664322376251
    2. '状態' → logprob: -2.4095664024353027
    3. 'state' → logprob: -2.9095664024353027
    4. ' edges' → logprob: -3.1595664024353027
    5. '通' → logprob: -3.2845664024353027
    6. 'graph' → logprob: -5.409566402435303
    7. '```' → logprob: -5.909566402435303
    8. 'edge' → logprob: -6.284566402435303
    9. 'status' → logprob: -6.659566402435303
    10. 'for' → logprob: -6.784566402435303

Token 194: '路' (ID: 14385)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0936508178710938
    2. '路' → logprob: -1.7186508178710938
    3. '答' → logprob: -2.3436508178710938
    4. '通' → logprob: -2.8436508178710938
    5. 'の' → logprob: -3.5936508178710938
    6. '続' → logprob: -3.7186508178710938
    7. 't' → logprob: -4.218650817871094
    8. 'と' → logprob: -4.343650817871094
    9. '時' → logprob: -4.343650817871094
    10. '常' → logprob: -4.718650817871094

Token 195: 'で' (ID: 4344)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.03743261098861694
    2. 's' → logprob: -4.162432670593262
    3. ' の' → logprob: -5.412432670593262
    4. 'が' → logprob: -5.787432670593262
    5. '#' → logprob: -5.912432670593262
    6. 'を' → logprob: -6.037432670593262
    7. '状態' → logprob: -6.412432670593262
    8. '_' → logprob: -6.537432670593262
    9. ')' → logprob: -6.787432670593262
    10. ',' → logprob: -7.287432670593262

Token 196: 'グ' (ID: 13094)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.8934435844421387
    2. 'は' → logprob: -2.0184435844421387
    3. 'き' → logprob: -2.2684435844421387
    4. 'union' → logprob: -2.5184435844421387
    5. '全' → logprob: -3.3934435844421387
    6. 'の' → logprob: -3.3934435844421387
    7. '連' → logprob: -3.5184435844421387
    8. '\xe7\xb9' → logprob: -4.018443584442139
    9. 'も' → logprob: -4.143443584442139
    10. 'ある' → logprob: -4.393443584442139

Token 197: 'ラ' (ID: 8547)
  Prédit: 'ラ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ラ' → logprob: -0.0073572020046412945
    2. 'raph' → logprob: -5.132357120513916
    3. '```' → logprob: -7.757357120513916
    4. 'раф' → logprob: -8.382357597351074
    5. 'ら' → logprob: -8.632357597351074
    6. 'raf' → logprob: -9.382357597351074
    7. '�' → logprob: -9.882357597351074
    8. 'rap' → logprob: -10.257357597351074
    9. 'aph' → logprob: -10.257357597351074
    10. '��' → logprob: -10.257357597351074

Token 198: 'フ' (ID: 13548)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.8841556310653687
    2. 'ラ' → logprob: -1.1341556310653687
    3. '```' → logprob: -1.6341556310653687
    4. 'フ' → logprob: -3.009155750274658
    5. 'raph' → logprob: -5.509155750274658
    6. '��' → logprob: -6.009155750274658
    7. '``' → logprob: -6.009155750274658
    8. 'аф' → logprob: -6.509155750274658
    9. 'раф' → logprob: -6.634155750274658
    10. 'af' → logprob: -7.009155750274658

Token 199: 'を' (ID: 7277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42851710319519043
    2. '<|end|>' → logprob: -1.9285171031951904
    3. '
' → logprob: -2.0535171031951904
    4. 'を' → logprob: -4.0535173416137695
    5. '#' → logprob: -4.8035173416137695
    6. '\n' → logprob: -4.9285173416137695
    7. ',' → logprob: -5.3035173416137695
    8. ' ' → logprob: -5.3035173416137695
    9. '<|end|>' → logprob: -5.4285173416137695
    10. 'の' → logprob: -5.6785173416137695

Token 200: '作' (ID: 6239)
  Prédit: '構'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '構' → logprob: -0.2244420051574707
    2. '表' → logprob: -2.3494420051574707
    3. '作' → logprob: -2.7244420051574707
    4. '描' → logprob: -4.849442005157471
    5. '```' → logprob: -5.224442005157471
    6. '書' → logprob: -5.849442005157471
    7. '更新' → logprob: -6.224442005157471
    8. '組' → logprob: -6.349442005157471
    9. '\xe7\xb9' → logprob: -6.349442005157471
    10. '探索' → logprob: -6.349442005157471

Token 201: 'って' (ID: 30677)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.3828141689300537
    2. '成' → logprob: -1.3828141689300537
    3. 'り' → logprob: -2.8828141689300537
    4. 'ろ' → logprob: -5.007814407348633
    5. 'ら' → logprob: -6.257814407348633
    6. '```' → logprob: -6.757814407348633
    7. 'っ' → logprob: -8.132814407348633
    8. 'れば' → logprob: -8.507814407348633
    9. 'って' → logprob: -8.632814407348633
    10. 'ります' → logprob: -8.882814407348633

Token 202: '
' (ID: 198)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4507441520690918
    2. ' ' → logprob: -1.8257441520690918
    3. '
' → logprob: -2.325744152069092
    4. '```' → logprob: -2.325744152069092
    5. ' continue' → logprob: -2.825744152069092
    6. '続' → logprob: -2.825744152069092
    7. ' 
' → logprob: -3.200744152069092
    8. '[
' → logprob: -3.825744152069092
    9. '#' → logprob: -3.825744152069092
    10. '\n' → logprob: -3.950744152069092

Token 203: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5968615412712097
    2. '#' → logprob: -1.2218616008758545
    3. ')' → logprob: -3.4718616008758545
    4. ' for' → logprob: -3.7218616008758545
    5. '```' → logprob: -4.221861362457275
    6. '
' → logprob: -4.346861362457275
    7. 'visited' → logprob: -4.596861362457275
    8. 'continue' → logprob: -4.721861362457275
    9. 'while' → logprob: -5.221861362457275
    10. 'def' → logprob: -5.346861362457275

Token 204: ' DFS' (ID: 115767)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6772239804267883
    2. 'dfs' → logprob: -2.3022239208221436
    3. '#' → logprob: -2.4272239208221436
    4. 'visited' → logprob: -2.5522239208221436
    5. ' visited' → logprob: -3.3022239208221436
    6. '```' → logprob: -3.4272239208221436
    7. ' for' → logprob: -3.5522239208221436
    8. ' dfs' → logprob: -3.9272239208221436
    9. 'def' → logprob: -4.802224159240723
    10. ' bfs' → logprob: -5.177224159240723

Token 205: 'や' (ID: 19160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7076266407966614
    2. '()' → logprob: -1.4576265811920166
    3. ')' → logprob: -1.5826265811920166
    4. '
' → logprob: -4.207626819610596
    5. 'def' → logprob: -4.457626819610596
    6. '.' → logprob: -4.957626819610596
    7. '(
' → logprob: -5.082626819610596
    8. ',' → logprob: -5.207626819610596
    9. 'を' → logprob: -5.332626819610596
    10. 'for' → logprob: -5.582626819610596

Token 206: 'Union' (ID: 39222)
  Prédit: ' BFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.5244126319885254
    2. 'B' → logprob: -0.8994126319885254
    3. ' bfs' → logprob: -7.024412631988525
    4. 'b' → logprob: -8.274412155151367
    5. 'union' → logprob: -10.024412155151367
    6. '```' → logprob: -10.524412155151367
    7. ' B' → logprob: -10.899412155151367
    8. ' ' → logprob: -11.399412155151367
    9. ' union' → logprob: -11.649412155151367
    10. 'Ｂ' → logprob: -12.649412155151367

Token 207: '-F' (ID: 8074)
  Prédit: '-F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-F' → logprob: -0.387238472700119
    2. 'Find' → logprob: -1.1372385025024414
    3. '-' → logprob: -8.512238502502441
    4. '-find' → logprob: -10.137238502502441
    5. '_Find' → logprob: -10.512238502502441
    6. '−' → logprob: -11.012238502502441
    7. ' Find' → logprob: -11.012238502502441
    8. 'F' → logprob: -11.137238502502441
    9. '–' → logprob: -11.512238502502441
    10. '_FIND' → logprob: -12.137238502502441

Token 208: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0017133781220763922
    2. 'find' → logprob: -7.126713275909424
    3. 'Find' → logprob: -8.126713752746582
    4. '```' → logprob: -8.501713752746582
    5. 'nd' → logprob: -9.251713752746582
    6. 'i' → logprob: -9.626713752746582
    7. 'F' → logprob: -10.001713752746582
    8. 'in' → logprob: -10.126713752746582
    9. 'イン' → logprob: -10.126713752746582
    10. '' → logprob: -11.126713752746582

Token 209: 'で' (ID: 4344)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9715191125869751
    2. '<|end|>' → logprob: -1.596519112586975
    3. ')' → logprob: -1.721519112586975
    4. '#' → logprob: -2.4715189933776855
    5. 'class' → logprob: -3.0965189933776855
    6. ',' → logprob: -3.5965189933776855
    7. 'def' → logprob: -4.4715189933776855
    8. 'import' → logprob: -4.5965189933776855
    9. ' ' → logprob: -4.7215189933776855
    10. '```' → logprob: -4.9715189933776855

Token 210: '�' (ID: 57872)
  Prédit: '連'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '連' → logprob: -1.2410815954208374
    2. '\xe7\xb9' → logprob: -1.4910815954208374
    3. 'つ' → logprob: -1.6160815954208374
    4. 'connected' → logprob: -2.616081714630127
    5. '解' → logprob: -3.241081714630127
    6. 'connect' → logprob: -3.491081714630127
    7. '探索' → logprob: -4.116081714630127
    8. ' connectivity' → logprob: -4.241081714630127
    9. '#' → logprob: -4.616081714630127
    10. 'す' → logprob: -4.741081714630127

Token 211: '�' (ID: 233)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6584870219230652
    2. 'n' → logprob: -2.15848708152771
    3. ' ' → logprob: -2.15848708152771
    4. '#' → logprob: -2.40848708152771
    5. ' )' → logprob: -3.90848708152771
    6. '_' → logprob: -4.158486843109131
    7. '=' → logprob: -4.658486843109131
    8. ''' → logprob: -4.908486843109131
    9. ''s' → logprob: -5.158486843109131
    10. 'を' → logprob: -5.158486843109131

Token 212: 'が' (ID: 6632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3642618656158447
    2. 'n' → logprob: -2.4892618656158447
    3. 'す' → logprob: -2.4892618656158447
    4. 'つ' → logprob: -2.7392618656158447
    5. 'find' → logprob: -3.3642618656158447
    6. '\xe7\xb9' → logprob: -3.4892618656158447
    7. '結' → logprob: -3.6142618656158447
    8. '辺' → logprob: -3.7392618656158447
    9. '連' → logprob: -3.8642618656158447
    10. '#' → logprob: -3.8642618656158447

Token 213: 'り' (ID: 7297)
  Prédit: 'つ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'つ' → logprob: -1.3760557174682617
    2. 'でき' → logprob: -1.6260557174682617
    3. '\xe7\xb9' → logprob: -2.6260557174682617
    4. '解' → logprob: -2.8760557174682617
    5. '連' → logprob: -3.0010557174682617
    6. '使' → logprob: -3.1260557174682617
    7. '存在' → logprob: -3.3760557174682617
    8. '可能' → logprob: -3.7510557174682617
    9. 'き' → logprob: -3.7510557174682617
    10. 'す' → logprob: -3.8760557174682617

Token 214: 'を' (ID: 7277)
  Prédit: '合'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '合' → logprob: -0.6155280470848083
    2. 'あ' → logprob: -1.3655281066894531
    3. 'を' → logprob: -3.365528106689453
    4. '続' → logprob: -3.490528106689453
    5. 'が' → logprob: -3.990528106689453
    6. 'つ' → logprob: -4.490528106689453
    7. 'く' → logprob: -4.740528106689453
    8. 'な' → logprob: -5.115528106689453
    9. 'ます' → logprob: -5.115528106689453
    10. '```' → logprob: -5.115528106689453

Token 215: '確認' (ID: 114862)
  Prédit: '判'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '判' → logprob: -0.7404234409332275
    2. '調' → logprob: -0.8654234409332275
    3. '確認' → logprob: -3.6154234409332275
    4. '探' → logprob: -4.240423202514648
    5. 'わ' → logprob: -4.740423202514648
    6. 'つ' → logprob: -4.740423202514648
    7. 'ある' → logprob: -5.115423202514648
    8. '\xe8\xbe' → logprob: -5.115423202514648
    9. '検' → logprob: -5.240423202514648
    10. 'た' → logprob: -5.615423202514648

Token 216: 'する' (ID: 39065)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2596481442451477
    2. 'import' → logprob: -2.509648084640503
    3. '#' → logprob: -3.009648084640503
    4. 'from' → logprob: -3.634648084640503
    5. 'def' → logprob: -4.134648323059082
    6. ')' → logprob: -4.384648323059082
    7. ' class' → logprob: -4.509648323059082
    8. '
' → logprob: -4.759648323059082
    9. ' ' → logprob: -4.884648323059082
    10. '```' → logprob: -5.259648323059082

Token 217: 'こと' (ID: 53217)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44566625356674194
    2. '#' → logprob: -2.0706663131713867
    3. '
' → logprob: -2.3206663131713867
    4. ' ' → logprob: -3.1956663131713867
    5. '<|end|>' → logprob: -3.4456663131713867
    6. ',' → logprob: -4.945666313171387
    7. 'def' → logprob: -4.945666313171387
    8. '_' → logprob: -5.320666313171387
    9. '(
' → logprob: -5.445666313171387
    10. '' → logprob: -5.695666313171387

Token 218: 'だ' (ID: 11792)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7288440465927124
    2. '
' → logprob: -1.4788440465927124
    3. '#' → logprob: -1.9788440465927124
    4. '<|end|>' → logprob: -3.353844165802002
    5. '(' → logprob: -3.728844165802002
    6. ',' → logprob: -4.103844165802002
    7. '```' → logprob: -4.228844165802002
    8. ' ' → logprob: -4.353844165802002
    9. 'def' → logprob: -4.853844165802002
    10. '(
' → logprob: -4.853844165802002

Token 219: 'が' (ID: 6632)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3393821120262146
    2. '
' → logprob: -2.8393821716308594
    3. 'import' → logprob: -2.8393821716308594
    4. ')' → logprob: -2.9643821716308594
    5. '#' → logprob: -3.4643821716308594
    6. 'from' → logprob: -3.4643821716308594
    7. 'def' → logprob: -4.089382171630859
    8. 'parent' → logprob: -4.214382171630859
    9. ' class' → logprob: -4.339382171630859
    10. ',' → logprob: -6.589382171630859

Token 220: '、
' (ID: 19344)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08272866904735565
    2. ' #' → logprob: -3.707728624343872
    3. ' ' → logprob: -4.082728862762451
    4. 'import' → logprob: -5.457728862762451
    5. '
' → logprob: -5.582728862762451
    6. ')' → logprob: -5.582728862762451
    7. 'n' → logprob: -6.082728862762451
    8. '   ' → logprob: -6.207728862762451
    9. ' for' → logprob: -6.332728862762451
    10. ' n' → logprob: -6.332728862762451

Token 221: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.011784535832703114
    2. ' #' → logprob: -4.886784553527832
    3. 'import' → logprob: -7.511784553527832
    4. ' for' → logprob: -7.761784553527832
    5. 'for' → logprob: -7.886784553527832
    6. ' ' → logprob: -8.136784553527832
    7. ' 
' → logprob: -8.261784553527832
    8. '
' → logprob: -8.511784553527832
    9. '   ' → logprob: -8.636784553527832
    10. 'それ' → logprob: -8.636784553527832

Token 222: ' k' (ID: 372)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.037858996540308
    2. ' #' → logprob: -4.037858963012695
    3. 'n' → logprob: -5.662858963012695
    4. ' ' → logprob: -5.787858963012695
    5. ' time' → logprob: -6.537858963012695
    6. '時間' → logprob: -6.537858963012695
    7. ' n' → logprob: -6.662858963012695
    8. 'import' → logprob: -6.662858963012695
    9. ' for' → logprob: -6.912858963012695
    10. 'for' → logprob: -7.037858963012695

Token 223: '=' (ID: 28)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.278059482574463
    2. ' **' → logprob: -1.278059482574463
    3. ' *' → logprob: -1.403059482574463
    4. ' >' → logprob: -2.653059482574463
    5. ' ' → logprob: -2.903059482574463
    6. '*' → logprob: -4.028059482574463
    7. ' <=' → logprob: -5.153059482574463
    8. ' ==' → logprob: -5.278059482574463
    9. ' が' → logprob: -5.403059482574463
    10. '```' → logprob: -5.653059482574463

Token 224: '400' (ID: 4812)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.21170780062675476
    2. '100' → logprob: -2.336707830429077
    3. ' ' → logprob: -2.461707830429077
    4. '1' → logprob: -4.836707592010498
    5. 'n' → logprob: -7.711707592010498
    6. '2' → logprob: -8.586708068847656
    7. ' n' → logprob: -9.961708068847656
    8. '200' → logprob: -10.211708068847656
    9. '   ' → logprob: -10.836708068847656
    10. '0' → logprob: -10.961708068847656

Token 225: '00' (ID: 504)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.30008766055107117
    2. '000' → logprob: -1.6750876903533936
    3. '0' → logprob: -3.9250876903533936
    4. ')' → logprob: -4.0500874519348145
    5. '00' → logprob: -4.4250874519348145
    6. '*' → logprob: -5.1750874519348145
    7. ' **' → logprob: -5.1750874519348145
    8. ' ' → logprob: -5.5500874519348145
    9. '```' → logprob: -6.6750874519348145
    10. '  
' → logprob: -7.0500874519348145

Token 226: 'なので' (ID: 145461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8999156355857849
    2. '0' → logprob: -1.2749156951904297
    3. 'なので' → logprob: -2.6499156951904297
    4. ' ' → logprob: -2.8999156951904297
    5. ')' → logprob: -3.1499156951904297
    6. '  
' → logprob: -3.5249156951904297
    7. '
' → logprob: -3.6499156951904297
    8. '```' → logprob: -4.39991569519043
    9. ' の' → logprob: -4.52491569519043
    10. 'で' → logprob: -4.64991569519043

Token 227: '単' (ID: 87236)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9081909656524658
    2. 'T' → logprob: -2.033190965652466
    3. 'O' → logprob: -2.283190965652466
    4. 'かな' → logprob: -2.283190965652466
    5. 'import' → logprob: -2.533190965652466
    6. '時間' → logprob: -3.033190965652466
    7. 'それ' → logprob: -3.283190965652466
    8. '効' → logprob: -3.408190965652466
    9. 'その' → logprob: -3.783190965652466
    10. '```' → logprob: -4.033190727233887

Token 228: '純' (ID: 165626)
  Prédit: '純'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '純' → logprob: -0.0022826455533504486
    2. 'に' → logprob: -7.127282619476318
    3. '一' → logprob: -7.502282619476318
    4. '独' → logprob: -8.377283096313477
    5. '調' → logprob: -8.627283096313477
    6. '位' → logprob: -9.002283096313477
    7. '語' → logprob: -9.127283096313477
    8. 'なる' → logprob: -9.252283096313477
    9. 'pure' → logprob: -10.002283096313477
    10. '行' → logprob: -10.127283096313477

Token 229: 'な' (ID: 5784)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -1.5229116678237915
    2. ' ' → logprob: -1.6479116678237915
    3. 'space' → logprob: -2.522911548614502
    4. 'す' → logprob: -2.897911548614502
    5. ' )' → logprob: -3.147911548614502
    6. 'な' → logprob: -3.647911548614502
    7. ' out' → logprob: -3.897911548614502
    8. '#' → logprob: -4.022911548614502
    9. ',' → logprob: -4.022911548614502
    10. ' ' → logprob: -4.147911548614502

Token 230: 'や' (ID: 19160)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.054418683052063
    2. 'DFS' → logprob: -1.929418683052063
    3. 'dfs' → logprob: -1.929418683052063
    4. 'for' → logprob: -2.3044185638427734
    5. 'B' → logprob: -2.4294185638427734
    6. '方法' → logprob: -3.3044185638427734
    7. ' DFS' → logprob: -3.4294185638427734
    8. ' O' → logprob: -3.6794185638427734
    9. ' BFS' → logprob: -4.429418563842773
    10. 'b' → logprob: -4.804418563842773

Token 231: 'り' (ID: 7297)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.15209197998046875
    2. 'め' → logprob: -2.1520919799804688
    3. 'け' → logprob: -4.277091979980469
    4. 'わ' → logprob: -5.902091979980469
    5. 'く' → logprob: -6.527091979980469
    6. 'か' → logprob: -7.027091979980469
    7. '続' → logprob: -7.027091979980469
    8. 'き' → logprob: -7.527091979980469
    9. 'う' → logprob: -7.527091979980469
    10. 'れ' → logprob: -7.777091979980469

Token 232: '方' (ID: 4983)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.36701977252960205
    2. 'つ' → logprob: -1.742019772529602
    3. '続' → logprob: -3.2420196533203125
    4. 'ー' → logprob: -3.8670196533203125
    5. 'ば' → logprob: -4.4920196533203125
    6. 'ま' → logprob: -4.9920196533203125
    7. 'ません' → logprob: -5.1170196533203125
    8. '```' → logprob: -5.1170196533203125
    9. '残' → logprob: -5.7420196533203125
    10. 'く' → logprob: -5.8670196533203125

Token 233: 'で' (ID: 4344)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'は' → logprob: -1.4889917373657227
    2. ' は' → logprob: -1.7389917373657227
    3. ',' → logprob: -2.4889917373657227
    4. '<|end|>' → logprob: -2.7389917373657227
    5. ' ' → logprob: -2.8639917373657227
    6. 'では' → logprob: -2.9889917373657227
    7. ')' → logprob: -3.1139917373657227
    8. 'が' → logprob: -3.1139917373657227
    9. ' が' → logprob: -3.1139917373657227
    10. ' を' → logprob: -3.2389917373657227

Token 234: 'や' (ID: 19160)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'は' → logprob: -1.9106957912445068
    2. '間' → logprob: -2.160695791244507
    3. '時間' → logprob: -2.285695791244507
    4. 'for' → logprob: -2.535695791244507
    5. 'O' → logprob: -3.035695791244507
    6. ' time' → logprob: -3.160695791244507
    7. 'import' → logprob: -3.160695791244507
    8. 'す' → logprob: -3.660695791244507
    9. '続' → logprob: -3.785695791244507
    10. 'T' → logprob: -3.785695791244507

Token 235: 'って' (ID: 30677)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.4164718687534332
    2. 'る' → logprob: -1.2914718389511108
    3. 'って' → logprob: -3.7914719581604004
    4. 'め' → logprob: -4.1664719581604
    5. 'り' → logprob: -4.4164719581604
    6. 'ば' → logprob: -5.2914719581604
    7. 'れる' → logprob: -5.2914719581604
    8. 'れて' → logprob: -6.1664719581604
    9. 'や' → logprob: -7.4164719581604
    10. 'れば' → logprob: -7.5414719581604

Token 236: 'み' (ID: 17897)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.9205639362335205
    2. 'ら' → logprob: -1.9205639362335205
    3. 'ない' → logprob: -2.2955639362335205
    4. 'め' → logprob: -2.4205639362335205
    5. 'も' → logprob: -2.6705639362335205
    6. 'す' → logprob: -2.9205639362335205
    7. 'る' → logprob: -2.9205639362335205
    8. 'み' → logprob: -3.9205639362335205
    9. 'い' → logprob: -4.545563697814941
    10. 'ません' → logprob: -4.920563697814941

Token 237: 'る' (ID: 6996)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.2423611879348755
    2. 'for' → logprob: -1.9923611879348755
    3. 'が' → logprob: -2.117361068725586
    4. 'て' → logprob: -2.242361068725586
    5. 'め' → logprob: -3.117361068725586
    6. 'せ' → logprob: -3.242361068725586
    7. 'み' → logprob: -3.742361068725586
    8. 'しょう' → logprob: -3.867361068725586
    9. 'ます' → logprob: -3.992361068725586
    10. ')' → logprob: -4.117361068725586

Token 238: '。

' (ID: 1497)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6023755073547363
    2. 'parent' → logprob: -1.1023755073547363
    3. '#' → logprob: -4.102375507354736
    4. 'graph' → logprob: -4.227375507354736
    5. 'visited' → logprob: -4.227375507354736
    6. ')' → logprob: -4.352375507354736
    7. 'import' → logprob: -4.477375507354736
    8. 'from' → logprob: -4.477375507354736
    9. 'def' → logprob: -4.602375507354736
    10. 'parents' → logprob: -5.102375507354736

Token 239: '#' (ID: 2)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.34674695134162903
    2. 'parents' → logprob: -3.0967469215393066
    3. 'graph' → logprob: -3.2217469215393066
    4. 'for' → logprob: -3.2217469215393066
    5. 'result' → logprob: -3.2217469215393066
    6. 'visited' → logprob: -3.7217469215393066
    7. 'class' → logprob: -4.096746921539307
    8. 'ans' → logprob: -4.221746921539307
    9. 'answers' → logprob: -4.221746921539307
    10. ')' → logprob: -4.596746921539307

Token 240: ' �' (ID: 48031)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.349508285522461
    2. 'graph' → logprob: -1.974508285522461
    3. 'uf' → logprob: -2.349508285522461
    4. 'parents' → logprob: -2.349508285522461
    5. ')' → logprob: -2.474508285522461
    6. 'answers' → logprob: -2.599508285522461
    7. 'visited' → logprob: -2.849508285522461
    8. 'for' → logprob: -3.349508285522461
    9. 'class' → logprob: -3.474508285522461
    10. 'result' → logprob: -3.474508285522461

Token 241: '�' (ID: 254)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5860645771026611
    2. 'from' → logprob: -1.5860645771026611
    3. 'def' → logprob: -2.086064577102661
    4. 'for' → logprob: -2.586064577102661
    5. 'visited' → logprob: -2.836064577102661
    6. 'f' → logprob: -2.961064577102661
    7. 'u' → logprob: -3.711064577102661
    8. 'n' → logprob: -3.961064577102661
    9. 'graph' → logprob: -3.961064577102661
    10. 'class' → logprob: -4.211064338684082

Token 242: '�' (ID: 985)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1163437366485596
    2. ')' → logprob: -1.9913437366485596
    3. '#' → logprob: -2.2413437366485596
    4. 'def' → logprob: -2.6163437366485596
    5. 'graph' → logprob: -2.7413437366485596
    6. 'from' → logprob: -2.8663437366485596
    7. 'n' → logprob: -3.4913437366485596
    8. ' for' → logprob: -3.8663437366485596
    9. 'visited' → logprob: -4.2413434982299805
    10. 'g' → logprob: -4.3663434982299805

Token 243: '�' (ID: 112)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1655185222625732
    2. ')' → logprob: -1.2905185222625732
    3. 'def' → logprob: -2.6655185222625732
    4. 'n' → logprob: -3.2905185222625732
    5. 'for' → logprob: -3.2905185222625732
    6. ' ' → logprob: -3.7905185222625732
    7. 'from' → logprob: -3.7905185222625732
    8. ',' → logprob: -4.040518760681152
    9. '_' → logprob: -4.040518760681152
    10. 'visited' → logprob: -4.040518760681152

Token 244: 'な' (ID: 5784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5502155423164368
    2. 'for' → logprob: -2.050215482711792
    3. ')' → logprob: -2.300215482711792
    4. 'def' → logprob: -3.425215482711792
    5. ' ' → logprob: -3.550215482711792
    6. ',' → logprob: -4.050215721130371
    7. '
' → logprob: -4.300215721130371
    8. ' for' → logprob: -4.425215721130371
    9. 'n' → logprob: -4.925215721130371
    10. 'visited' → logprob: -4.925215721130371

Token 245: 'Union' (ID: 39222)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2181111574172974
    2. 'f' → logprob: -1.3431111574172974
    3. 'for' → logprob: -1.8431111574172974
    4. 'd' → logprob: -3.343111038208008
    5. '#' → logprob: -3.468111038208008
    6. 'uf' → logprob: -3.718111038208008
    7. 'from' → logprob: -3.968111038208008
    8. 'edges' → logprob: -3.968111038208008
    9. 'ef' → logprob: -4.593111038208008
    10. 'parent' → logprob: -4.593111038208008

Token 246: 'Find' (ID: 11437)
  Prédit: '-F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-F' → logprob: -0.3500905930995941
    2. 'Find' → logprob: -1.2250906229019165
    3. '-' → logprob: -6.725090503692627
    4. 'F' → logprob: -8.475090980529785
    5. '-find' → logprob: -10.350090980529785
    6. 'find' → logprob: -10.475090980529785
    7. '_Find' → logprob: -10.600090980529785
    8. '-Fi' → logprob: -11.100090980529785
    9. '－' → logprob: -11.225090980529785
    10. ' Find' → logprob: -11.225090980529785

Token 247: '実' (ID: 38048)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03406910225749016
    2. '(' → logprob: -4.159069061279297
    3. ' class' → logprob: -4.909069061279297
    4. ':' → logprob: -5.409069061279297
    5. '()' → logprob: -5.784069061279297
    6. '(
' → logprob: -6.409069061279297
    7. 'ク' → logprob: -8.284069061279297
    8. '
' → logprob: -8.784069061279297
    9. '' → logprob: -9.159069061279297
    10. 'import' → logprob: -9.534069061279297

Token 248: '装' (ID: 17137)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0034039514139294624
    2. ' class' → logprob: -6.128404140472412
    3. 'c' → logprob: -8.503403663635254
    4. 's' → logprob: -8.753403663635254
    5. '```' → logprob: -8.753403663635254
    6. 'plement' → logprob: -9.253403663635254
    7. 'clas' → logprob: -9.503403663635254
    8. 'ク' → logprob: -9.753403663635254
    9. ' ' → logprob: -9.878403663635254
    10. 'm' → logprob: -10.503403663635254

Token 249: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008253490086644888
    2. ' class' → logprob: -8.250824928283691
    3. '
' → logprob: -8.375824928283691
    4. '' → logprob: -8.750824928283691
    5. '(
' → logprob: -9.750824928283691
    6. '(' → logprob: -11.000824928283691
    7. ':' → logprob: -11.000824928283691
    8. ':
' → logprob: -11.125824928283691
    9. 'c' → logprob: -11.375824928283691
    10. 'import' → logprob: -11.750824928283691

Token 250: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.297462171758525e-05
    2. '
' → logprob: -10.750033378601074
    3. ' class' → logprob: -11.625033378601074
    4. 'import' → logprob: -13.375033378601074
    5. 'from' → logprob: -15.250033378601074
    6. ' 
' → logprob: -15.375033378601074
    7. '```' → logprob: -15.875033378601074
    8. '<class' → logprob: -16.625032424926758
    9. '"class' → logprob: -16.875032424926758
    10. ',class' → logprob: -17.000032424926758

Token 251: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.00026217024424113333
    2. 'Union' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.750262260437012
    4. ' union' → logprob: -15.125262260437012
    5. '_union' → logprob: -15.750262260437012
    6. ' Uni' → logprob: -18.000261306762695
    7. ' Un' → logprob: -18.500261306762695
    8. ' UNION' → logprob: -18.875261306762695
    9. ' Unión' → logprob: -19.625261306762695
    10. ' UF' → logprob: -20.250261306762695

Token 252: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -9.088346359931165e-07
    2. '-F' → logprob: -15.125000953674316
    3. ' Find' → logprob: -15.250000953674316
    4. '_Find' → logprob: -15.875000953674316
    5. ':' → logprob: -16.75
    6. '[int' → logprob: -17.5
    7. '
' → logprob: -17.5
    8. '   ' → logprob: -17.875
    9. '_find' → logprob: -18.125
    10. 'Finder' → logprob: -18.125

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016581593081355095
    2. ':
' → logprob: -6.501657962799072
    3. '(object' → logprob: -9.25165843963623
    4. '():' → logprob: -10.25165843963623
    5. ' :' → logprob: -11.50165843963623
    6. '):' → logprob: -11.87665843963623
    7. '>:' → logprob: -12.87665843963623
    8. '：' → logprob: -13.12665843963623
    9. ':

' → logprob: -14.00165843963623
    10. ':def' → logprob: -14.62665843963623

Token 254: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4549417793750763
    2. ':' → logprob: -1.079941749572754
    3. '   ' → logprob: -3.954941749572754
    4. '(object' → logprob: -5.704941749572754
    5. ':def' → logprob: -7.079941749572754
    6. 'def' → logprob: -7.579941749572754
    7. '  ' → logprob: -7.704941749572754
    8. ' ' → logprob: -8.079941749572754
    9. ' :
' → logprob: -8.079941749572754
    10. '    ' → logprob: -8.704941749572754

Token 255: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2520425021648407
    2. ' def' → logprob: -1.502042531967163
    3. '   ' → logprob: -9.252042770385742
    4. '__' → logprob: -11.877042770385742
    5. '	def' → logprob: -12.002042770385742
    6. ':def' → logprob: -13.752042770385742
    7. ' __' → logprob: -13.877042770385742
    8. ' ' → logprob: -14.002042770385742
    9. '
' → logprob: -14.377042770385742
    10. ' 
' → logprob: -15.127042770385742

Token 256: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4781380295753479
    2. '__' → logprob: -0.9781380295753479
    3. 'init' → logprob: -6.103137969970703
    4. '_init' → logprob: -6.353137969970703
    5. ' init' → logprob: -9.603137969970703
    6. '___' → logprob: -13.228137969970703
    7. '__(' → logprob: -13.353137969970703
    8. ' _' → logprob: -13.853137969970703
    9. '```' → logprob: -14.228137969970703
    10. ' ' → logprob: -14.603137969970703

Token 257: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. ' init' → logprob: -13.000001907348633
    3. '
' → logprob: -17.625001907348633
    4. ' ' → logprob: -18.500001907348633
    5. 'int' → logprob: -18.625001907348633
    6. '	init' → logprob: -18.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'ini' → logprob: -19.000001907348633
    9. '_init' → logprob: -19.250001907348633
    10. 'in' → logprob: -19.625001907348633

Token 258: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03063899092376232
    2. '__(' → logprob: -3.6556389331817627
    3. '(' → logprob: -5.530639171600342
    4. ' (' → logprob: -8.280638694763184
    5. ')(' → logprob: -10.280638694763184
    6. '__' → logprob: -10.405638694763184
    7. '（' → logprob: -11.155638694763184
    8. 'self' → logprob: -11.905638694763184
    9. '__(
' → logprob: -12.780638694763184
    10. ',' → logprob: -12.905638694763184

Token 259: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002908910100813955
    2. ' self' → logprob: -8.500290870666504
    3. '   ' → logprob: -9.875290870666504
    4. 'n' → logprob: -11.250290870666504
    5. '	self' → logprob: -11.875290870666504
    6. '(self' → logprob: -12.125290870666504
    7. '
' → logprob: -12.250290870666504
    8. ',self' → logprob: -12.375290870666504
    9. '       ' → logprob: -14.375290870666504
    10. ' ' → logprob: -15.250290870666504

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015100972959771752
    2. ',n' → logprob: -6.501510143280029
    3. ' ,' → logprob: -12.501509666442871
    4. ',self' → logprob: -12.751509666442871
    5. 'self' → logprob: -15.001509666442871
    6. ',
' → logprob: -15.626509666442871
    7. '，' → logprob: -15.626509666442871
    8. ',size' → logprob: -15.751509666442871
    9. ',num' → logprob: -15.876509666442871
    10. '(n' → logprob: -16.626510620117188

Token 261: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007468560361303389
    2. 'size' → logprob: -7.375746726989746
    3. ' n' → logprob: -9.250746726989746
    4. 'self' → logprob: -10.750746726989746
    5. ' size' → logprob: -13.500746726989746
    6. '	n' → logprob: -14.375746726989746
    7. '   ' → logprob: -14.750746726989746
    8. '```' → logprob: -15.500746726989746
    9. ')n' → logprob: -16.375747680664062
    10. '(n' → logprob: -16.625747680664062

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03376844897866249
    2. '):
' → logprob: -3.40876841545105
    3. ' ):' → logprob: -9.408768653869629
    4. ')' → logprob: -11.408768653869629
    5. ')：' → logprob: -11.408768653869629
    6. '):
' → logprob: -11.783768653869629
    7. '）：' → logprob: -12.158768653869629
    8. ':' → logprob: -12.908768653869629
    9. ' ):
' → logprob: -14.408768653869629
    10. '   ' → logprob: -14.533768653869629

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004439851269125938
    2. 'self' → logprob: -6.129439830780029
    3. ' self' → logprob: -7.254439830780029
    4. 'n' → logprob: -7.379439830780029
    5. '   ' → logprob: -8.004440307617188
    6. '    ' → logprob: -9.129440307617188
    7. '	self' → logprob: -9.504440307617188
    8. '(n' → logprob: -9.754440307617188
    9. ' n' → logprob: -9.754440307617188
    10. '        
' → logprob: -10.004440307617188

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030601194128394127
    2. ' self' → logprob: -4.0306010246276855
    3. '   ' → logprob: -4.5306010246276855
    4. '       ' → logprob: -6.5306010246276855
    5. '	self' → logprob: -8.905601501464844
    6. 'parent' → logprob: -12.905601501464844
    7. '    ' → logprob: -13.780601501464844
    8. ' ' → logprob: -13.780601501464844
    9. '  ' → logprob: -14.780601501464844
    10. '	' → logprob: -15.280601501464844

Token 265: '.par' (ID: 36294)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0022288828622549772
    2. '.parents' → logprob: -6.627228736877441
    3. 'parent' → logprob: -7.752228736877441
    4. '.par' → logprob: -8.252228736877441
    5. ',parent' → logprob: -9.752228736877441
    6. '	parent' → logprob: -9.877228736877441
    7. '.' → logprob: -10.127228736877441
    8. '.p' → logprob: -10.502228736877441
    9. ' .' → logprob: -11.752228736877441
    10. '.Parent' → logprob: -12.002228736877441

Token 266: ' =' (ID: 314)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08889812976121902
    2. ' =' → logprob: -2.838898181915283
    3. '=' → logprob: -3.963898181915283
    4. 'ents' → logprob: -5.213898181915283
    5. 't' → logprob: -6.463898181915283
    6. 'rent' → logprob: -8.463897705078125
    7. '=[' → logprob: -9.463897705078125
    8. '   ' → logprob: -9.463897705078125
    9. '=[]' → logprob: -9.588897705078125
    10. '[' → logprob: -10.463897705078125

Token 267: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08010034263134003
    2. '[-' → logprob: -2.5801002979278564
    3. '[list' → logprob: -6.8301005363464355
    4. ' list' → logprob: -9.455100059509277
    5. '[' → logprob: -9.955100059509277
    6. ' [-' → logprob: -13.330100059509277
    7. '[n' → logprob: -14.205100059509277
    8. '[i' → logprob: -15.330100059509277
    9. '[parent' → logprob: -15.455100059509277
    10. '[node' → logprob: -15.955100059509277

Token 268: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0019287518225610256
    2. 'range' → logprob: -6.251928806304932
    3. '(' → logprob: -16.251928329467773
    4. '	range' → logprob: -16.501928329467773
    5. ' range' → logprob: -16.876928329467773
    6. '\xe7\xaf' → logprob: -18.751928329467773
    7. 'i' → logprob: -19.001928329467773
    8. '
' → logprob: -19.251928329467773
    9. '(i' → logprob: -19.501928329467773
    10. '   ' → logprob: -19.626928329467773

Token 269: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.29340603761375e-05
    2. 'n' → logprob: -9.375092506408691
    3. '(' → logprob: -11.875092506408691
    4. ' n' → logprob: -14.375092506408691
    5. ')n' → logprob: -15.250092506408691
    6. '	n' → logprob: -15.750092506408691
    7. ' (' → logprob: -16.625093460083008
    8. '   ' → logprob: -17.375093460083008
    9. ')' → logprob: -17.875093460083008
    10. ',n' → logprob: -17.875093460083008

Token 270: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0041463072411715984
    2. '+' → logprob: -6.254146099090576
    3. '))
' → logprob: -6.379146099090576
    4. ' ))' → logprob: -8.254146575927734
    5. 'n' → logprob: -9.129146575927734
    6. ' +' → logprob: -9.629146575927734
    7. ')' → logprob: -10.129146575927734
    8. '(n' → logprob: -11.129146575927734
    9. '+n' → logprob: -11.379146575927734
    10. ' ' → logprob: -12.629146575927734

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6374810934066772
    2. '
' → logprob: -1.6374810934066772
    3. '   ' → logprob: -2.137481212615967
    4. '<|end|>' → logprob: -2.137481212615967
    5. ' ' → logprob: -4.637481212615967
    6. ')' → logprob: -4.637481212615967
    7. '  
' → logprob: -5.387481212615967
    8. 'self' → logprob: -5.762481212615967
    9. '        
' → logprob: -6.012481212615967
    10. ' 
' → logprob: -6.137481212615967

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023196205496788025
    2. ' self' → logprob: -4.148196220397949
    3. '       ' → logprob: -5.148196220397949
    4. 'n' → logprob: -7.148196220397949
    5. '   ' → logprob: -7.898196220397949
    6. '           ' → logprob: -10.02319622039795
    7. '	self' → logprob: -10.02319622039795
    8. ' ' → logprob: -10.39819622039795
    9. '1' → logprob: -11.89819622039795
    10. ' n' → logprob: -12.14819622039795

Token 273: '.rank' (ID: 96793)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.4768276512622833
    2. '.rank' → logprob: -1.476827621459961
    3. '.sz' → logprob: -1.976827621459961
    4. '.s' → logprob: -4.601827621459961
    5. 'siz' → logprob: -6.226827621459961
    6. 'size' → logprob: -8.351827621459961
    7. ' siz' → logprob: -10.351827621459961
    8. 'rank' → logprob: -10.601827621459961
    9. '.r' → logprob: -10.726827621459961
    10. 'sz' → logprob: -10.851827621459961

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2828676998615265
    2. '=' → logprob: -1.407867670059204
    3. '=[' → logprob: -6.657867908477783
    4. '[' → logprob: -8.907867431640625
    5. '(' → logprob: -9.657867431640625
    6. ' =[' → logprob: -9.657867431640625
    7. '(n' → logprob: -10.032867431640625
    8. '   ' → logprob: -10.157867431640625
    9. ' ' → logprob: -10.907867431640625
    10. ')' → logprob: -10.907867431640625

Token 275: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025344020687043667
    2. ' [' → logprob: -6.00253438949585
    3. '[n' → logprob: -9.752534866333008
    4. 'n' → logprob: -14.752534866333008
    5. '0' → logprob: -15.127534866333008
    6. ' n' → logprob: -18.252534866333008
    7. '   ' → logprob: -18.377534866333008
    8. ' ' → logprob: -18.627534866333008
    9. '[N' → logprob: -19.127534866333008
    10. '([' → logprob: -19.627534866333008

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.125
    4. '０' → logprob: -21.625
    5. '(' → logprob: -22.25
    6. '
' → logprob: -22.5
    7. '   ' → logprob: -23.5
    8. '10' → logprob: -24.125
    9. '۰' → logprob: -24.125
    10. '000' → logprob: -24.75

Token 277: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011038392782211304
    2. ']*' → logprob: -4.761038303375244
    3. ']*(' → logprob: -6.761038303375244
    4. ' ]' → logprob: -6.886038303375244
    5. ' for' → logprob: -8.761038780212402
    6. ')' → logprob: -10.011038780212402
    7. ',' → logprob: -11.511038780212402
    8. '])' → logprob: -11.636038780212402
    9. ' ' → logprob: -12.136038780212402
    10. ']+' → logprob: -12.261038780212402

Token 278: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.375001907348633
    3. '(n' → logprob: -15.500001907348633
    4. '	n' → logprob: -20.000001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '(' → logprob: -21.750001907348633
    7. '
' → logprob: -21.750001907348633
    8. ')n' → logprob: -22.375001907348633
    9. '_n' → logprob: -22.500001907348633
    10. '```' → logprob: -23.375001907348633

Token 279: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018345193937420845
    2. '   ' → logprob: -4.768345355987549
    3. '

' → logprob: -5.393345355987549
    4. 'def' → logprob: -5.893345355987549
    5. '    
' → logprob: -6.518345355987549
    6. ' def' → logprob: -7.643345355987549
    7. '<|end|>' → logprob: -8.51834487915039
    8. ' 
' → logprob: -10.01834487915039
    9. '        
' → logprob: -10.14334487915039
    10. '  
' → logprob: -10.26834487915039

Token 280: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014719503931701183
    2. '   ' → logprob: -4.389719486236572
    3. 'def' → logprob: -7.264719486236572
    4. '    
' → logprob: -7.889719486236572
    5. '

' → logprob: -8.26471996307373
    6. ' 
' → logprob: -8.26471996307373
    7. '<|end|>' → logprob: -8.26471996307373
    8. ' def' → logprob: -8.63971996307373
    9. '  
' → logprob: -9.88971996307373
    10. '
' → logprob: -9.88971996307373

Token 281: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26069843769073486
    2. ' def' → logprob: -2.0106983184814453
    3. '
' → logprob: -2.3856983184814453
    4. '   ' → logprob: -6.010698318481445
    5. '	def' → logprob: -7.385698318481445
    6. '    
' → logprob: -8.385698318481445
    7. ' 
' → logprob: -8.760698318481445
    8. '  
' → logprob: -9.885698318481445
    9. ' ' → logprob: -11.135698318481445
    10. '

' → logprob: -11.760698318481445

Token 282: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20155446231365204
    2. ' find' → logprob: -1.7015544176101685
    3. 'root' → logprob: -8.951554298400879
    4. 'fin' → logprob: -12.451554298400879
    5. ' root' → logprob: -12.951554298400879
    6. 'def' → logprob: -13.326554298400879
    7. '	find' → logprob: -13.326554298400879
    8. 'f' → logprob: -14.701554298400879
    9. ' ' → logprob: -14.826554298400879
    10. '_find' → logprob: -15.326554298400879

Token 283: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5537958145141602
    2. '(' → logprob: -1.5537958145141602
    3. '(x' → logprob: -1.5537958145141602
    4. ' (' → logprob: -6.92879581451416
    5. '(u' → logprob: -7.42879581451416
    6. '(a' → logprob: -8.80379581451416
    7. 'self' → logprob: -8.80379581451416
    8. '(node' → logprob: -9.05379581451416
    9. '(
' → logprob: -9.17879581451416
    10. '(n' → logprob: -9.92879581451416

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023345408961176872
    2. 'self' → logprob: -4.773345470428467
    3. '(x' → logprob: -4.773345470428467
    4. ',x' → logprob: -5.648345470428467
    5. '(self' → logprob: -6.648345470428467
    6. '(' → logprob: -7.773345470428467
    7. '):' → logprob: -8.523344993591309
    8. ' ,' → logprob: -8.898344993591309
    9. ')' → logprob: -9.148344993591309
    10. ' ' → logprob: -9.273344993591309

Token 285: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.517272024415433e-05
    2. ' x' → logprob: -9.500075340270996
    3. 'a' → logprob: -15.125075340270996
    4. 'u' → logprob: -19.12507438659668
    5. 'p' → logprob: -20.12507438659668
    6. 'self' → logprob: -20.37507438659668
    7. '(x' → logprob: -20.50007438659668
    8. 'par' → logprob: -20.62507438659668
    9. ')x' → logprob: -20.87507438659668
    10. 'k' → logprob: -21.12507438659668

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026585904881358147
    2. '):
' → logprob: -3.651585817337036
    3. ')' → logprob: -8.401585578918457
    4. ' ):' → logprob: -10.151585578918457
    5. ':' → logprob: -11.276585578918457
    6. '):
' → logprob: -11.901585578918457
    7. ' ):
' → logprob: -14.026585578918457
    8. '   ' → logprob: -14.401585578918457
    9. '):

' → logprob: -15.276585578918457
    10. '():' → logprob: -15.526585578918457

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035481229424476624
    2. '
' → logprob: -4.0354814529418945
    3. ' if' → logprob: -5.2854814529418945
    4. ' 
' → logprob: -5.6604814529418945
    5. '   ' → logprob: -6.0354814529418945
    6. '        
' → logprob: -6.1604814529418945
    7. ' while' → logprob: -6.5354814529418945
    8. '        ' → logprob: -8.160481452941895
    9. ':
' → logprob: -8.160481452941895
    10. '):
' → logprob: -8.285481452941895

Token 288: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06244242191314697
    2. ' if' → logprob: -2.8124423027038574
    3. 'while' (adapté à ' while') → logprob: -8.187442779541016
    4. ' while' → logprob: -8.812442779541016
    5. '       ' → logprob: -10.062442779541016
    6. '	if' → logprob: -13.562442779541016
    7. '   ' → logprob: -13.812442779541016
    8. 'return' → logprob: -13.812442779541016
    9. 'self' → logprob: -14.312442779541016
    10. '    ' → logprob: -15.437442779541016

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10061033815145493
    2. ' self' → logprob: -2.3506102561950684
    3. 'x' → logprob: -7.850610256195068
    4. ' x' → logprob: -11.475610733032227
    5. '(self' → logprob: -12.975610733032227
    6. '	self' → logprob: -13.975610733032227
    7. 'Self' → logprob: -15.475610733032227
    8. ' ' → logprob: -15.725610733032227
    9. '[self' → logprob: -16.600610733032227
    10. '_self' → logprob: -18.475610733032227

Token 290: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.0001855406299000606
    2. 'par' → logprob: -8.6251859664917
    3. '.' → logprob: -13.2501859664917
    4. '	par' → logprob: -13.6251859664917
    5. ' .' → logprob: -13.7501859664917
    6. '!=' → logprob: -14.6251859664917
    7. '.parent' → logprob: -14.7501859664917
    8. ' !=' → logprob: -15.3751859664917
    9. ' par' → logprob: -15.8751859664917
    10. '_par' → logprob: -16.125185012817383

Token 291: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.25
    3. '[' → logprob: -17.125
    4. ' [' → logprob: -17.75
    5. '   ' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. '[
' → logprob: -19.25
    8. '[self' → logprob: -19.25
    9. '[int' → logprob: -19.625
    10. ' ' → logprob: -19.625

Token 292: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7908092141151428
    2. '[x' → logprob: -0.9158092141151428
    3. ']!=' → logprob: -2.415809154510498
    4. ']' → logprob: -3.165809154510498
    5. 'x' → logprob: -4.790809154510498
    6. ' !=' → logprob: -5.165809154510498
    7. '[' → logprob: -8.290809631347656
    8. '[
' → logprob: -8.415809631347656
    9. ')!=' → logprob: -8.915809631347656
    10. '```' → logprob: -9.165809631347656

Token 293: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0002096197713399306
    2. ' !=' → logprob: -8.62520980834961
    3. ']!=' → logprob: -10.87520980834961
    4. '()!=' → logprob: -12.00020980834961
    5. ')!=' → logprob: -12.87520980834961
    6. '!==' → logprob: -13.50020980834961
    7. 'x' → logprob: -14.62520980834961
    8. '[x' → logprob: -15.75020980834961
    9. '!=-' → logprob: -16.25020980834961
    10. '[' → logprob: -16.25020980834961

Token 294: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '	x' → logprob: -19.500045776367188
    4. ')x' → logprob: -20.625045776367188
    5. '
' → logprob: -23.250045776367188
    6. '<x' → logprob: -23.750045776367188
    7. '{x' → logprob: -23.875045776367188
    8. ',x' → logprob: -24.250045776367188
    9. '>x' → logprob: -24.375045776367188
    10. '(x' → logprob: -24.375045776367188

Token 295: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12695592641830444
    2. ':' → logprob: -2.126955986022949
    3. ':x' → logprob: -11.50195598602295
    4. 'x' → logprob: -11.75195598602295
    5. '):
' → logprob: -12.37695598602295
    6. ' :
' → logprob: -13.12695598602295
    7. ':

' → logprob: -13.75195598602295
    8. ' :' → logprob: -14.50195598602295
    9. ',' → logprob: -14.62695598602295
    10. '   ' → logprob: -14.87695598602295

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.054525744169950485
    2. ' x' → logprob: -3.054525852203369
    3. 'x' → logprob: -5.429525852203369
    4. '       ' → logprob: -7.179525852203369
    5. '   ' → logprob: -8.179525375366211
    6. '
' → logprob: -8.804525375366211
    7. ':
' → logprob: -9.429525375366211
    8. ',' → logprob: -9.929525375366211
    9. '):
' → logprob: -10.679525375366211
    10. 'n' → logprob: -10.804525375366211

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004246150609105825
    2. ' self' → logprob: -5.754246234893799
    3. '           ' → logprob: -7.129246234893799
    4. 'x' → logprob: -8.25424575805664
    5. '   ' → logprob: -12.87924575805664
    6. '	self' → logprob: -13.25424575805664
    7. '=self' → logprob: -14.37924575805664
    8. '
' → logprob: -15.00424575805664
    9. '       ' → logprob: -15.12924575805664
    10. '               ' → logprob: -15.25424575805664

Token 298: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.011423858813941479
    2. 'par' → logprob: -4.5114240646362305
    3. 'x' → logprob: -9.01142406463623
    4. '	par' → logprob: -9.26142406463623
    5. '=' → logprob: -9.38642406463623
    6. '_par' → logprob: -11.01142406463623
    7. '.' → logprob: -11.26142406463623
    8. ' =' → logprob: -11.63642406463623
    9. '.parent' → logprob: -12.51142406463623
    10. '   ' → logprob: -12.51142406463623

Token 299: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00976494513452053
    2. 'x' → logprob: -4.634765148162842
    3. '[' → logprob: -12.759764671325684
    4. ' x' → logprob: -13.509764671325684
    5. '```' → logprob: -13.884764671325684
    6. '	x' → logprob: -14.259764671325684
    7. '{x' → logprob: -14.509764671325684
    8. '[
' → logprob: -14.634764671325684
    9. ',x' → logprob: -14.759764671325684
    10. '=x' → logprob: -14.884764671325684

Token 300: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.759979248046875
    2. '[x' → logprob: -0.884979248046875
    3. '=' → logprob: -2.384979248046875
    4. ' =' → logprob: -4.009979248046875
    5. ']=' → logprob: -4.884979248046875
    6. 'x' → logprob: -6.884979248046875
    7. '[' → logprob: -7.384979248046875
    8. '=x' → logprob: -9.384979248046875
    9. '[
' → logprob: -10.884979248046875
    10. ' x' → logprob: -11.509979248046875

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019287518225610256
    2. ' =' → logprob: -6.251928806304932
    3. '=self' → logprob: -16.501928329467773
    4. ']=' → logprob: -17.751928329467773
    5. '＝' → logprob: -17.751928329467773
    6. '.=' → logprob: -17.876928329467773
    7. '=x' → logprob: -18.376928329467773
    8. '=
' → logprob: -18.751928329467773
    9. ')=' → logprob: -19.876928329467773
    10. ']' → logprob: -20.001928329467773

Token 302: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234002135694027
    2. ' self' → logprob: -5.2552337646484375
    3. '           ' → logprob: -15.755233764648438
    4. '	self' → logprob: -17.630233764648438
    5. '(self' → logprob: -18.380233764648438
    6. '[self' → logprob: -18.505233764648438
    7. '       ' → logprob: -18.630233764648438
    8. '
' → logprob: -20.005233764648438
    9. '=self' → logprob: -20.505233764648438
    10. '   ' → logprob: -21.005233764648438

Token 303: '.par' (ID: 36294)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01949797198176384
    2. 'par' → logprob: -4.519497871398926
    3. '[self' → logprob: -5.269497871398926
    4. '.par' → logprob: -5.769497871398926
    5. '[' → logprob: -10.019497871398926
    6. '.self' → logprob: -10.144497871398926
    7. ' self' → logprob: -10.644497871398926
    8. '
' → logprob: -11.394497871398926
    9. '_par' → logprob: -12.144497871398926
    10. '	self' → logprob: -12.394497871398926

Token 304: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0003932576219085604
    2. '[x' → logprob: -8.37539291381836
    3. 'self' → logprob: -8.87539291381836
    4. '[' → logprob: -10.75039291381836
    5. ' self' → logprob: -14.00039291381836
    6. '[
' → logprob: -14.87539291381836
    7. '	self' → logprob: -16.00039291381836
    8. '(self' → logprob: -16.75039291381836
    9. 'par' → logprob: -17.12539291381836
    10. '```' → logprob: -18.50039291381836

Token 305: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -1.5332478142227046e-05
    2. 'par' → logprob: -11.250015258789062
    3. '	par' → logprob: -13.750015258789062
    4. '.' → logprob: -14.625015258789062
    5. '.parent' → logprob: -15.125015258789062
    6. '.p' → logprob: -15.875015258789062
    7. '.pa' → logprob: -17.000015258789062
    8. '_par' → logprob: -17.125015258789062
    9. ' .' → logprob: -17.375015258789062
    10. ' par' → logprob: -17.625015258789062

Token 306: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.64708495605737e-05
    2. 'x' → logprob: -9.625066757202148
    3. '[' → logprob: -15.500066757202148
    4. '[
' → logprob: -16.37506675720215
    5. '[self' → logprob: -16.75006675720215
    6. '{x' → logprob: -16.87506675720215
    7. ']' → logprob: -17.00006675720215
    8. '	x' → logprob: -17.37506675720215
    9. '(x' → logprob: -17.62506675720215
    10. '```' → logprob: -17.62506675720215

Token 307: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.581022322177887
    2. '[x' → logprob: -0.831022322177887
    3. ']' → logprob: -5.831022262573242
    4. 'x' → logprob: -6.206022262573242
    5. ' ]]' → logprob: -9.706022262573242
    6. ']]
' → logprob: -10.956022262573242
    7. ' x' → logprob: -11.206022262573242
    8. '(x' → logprob: -11.706022262573242
    9. '[' → logprob: -12.331022262573242
    10. ']]

' → logprob: -12.956022262573242

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06497350335121155
    2. ' x' → logprob: -3.1899735927581787
    3. '       ' → logprob: -4.1899733543396
    4. 'x' → logprob: -5.0649733543396
    5. '   ' → logprob: -9.064973831176758
    6. 'return' → logprob: -10.064973831176758
    7. ',x' → logprob: -10.314973831176758
    8. '(x' → logprob: -10.564973831176758
    9. ',' → logprob: -11.064973831176758
    10. ' return' → logprob: -11.189973831176758

Token 309: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '	x' → logprob: -17.751502990722656
    4. ')x' → logprob: -21.501502990722656
    5. '           ' → logprob: -21.626502990722656
    6. '=x' → logprob: -22.126502990722656
    7. ',x' → logprob: -22.376502990722656
    8. '   ' → logprob: -22.626502990722656
    9. '       ' → logprob: -23.626502990722656
    10. '=' → logprob: -23.876502990722656

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014271167106926441
    2. ' =' → logprob: -4.264271259307861
    3. '+=' → logprob: -9.264270782470703
    4. ' +=' → logprob: -11.264270782470703
    5. '.=' → logprob: -17.139270782470703
    6. ' ' → logprob: -18.389270782470703
    7. '＝' → logprob: -18.514270782470703
    8. '=x' → logprob: -18.639270782470703
    9. ',' → logprob: -19.389270782470703
    10. '=
' → logprob: -19.639270782470703

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975083328783512
    2. ' self' → logprob: -3.5297508239746094
    3. '	self' → logprob: -15.40475082397461
    4. '   ' → logprob: -16.15475082397461
    5. ' ' → logprob: -17.02975082397461
    6. '(self' → logprob: -17.65475082397461
    7. '[self' → logprob: -18.15475082397461
    8. '=self' → logprob: -19.27975082397461
    9. '```' → logprob: -19.65475082397461
    10. '    ' → logprob: -19.90475082397461

Token 312: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -13.250003814697266
    3. 'par' → logprob: -13.875003814697266
    4. '	par' → logprob: -14.250003814697266
    5. '.parent' → logprob: -15.375003814697266
    6. ' .' → logprob: -16.625003814697266
    7. '_par' → logprob: -16.750003814697266
    8. '.p' → logprob: -17.875003814697266
    9. '```' → logprob: -18.750003814697266
    10. '.parents' → logprob: -19.000003814697266

Token 313: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.054500666621607e-06
    2. 'x' → logprob: -12.75000286102295
    3. '[' → logprob: -16.125003814697266
    4. '```' → logprob: -17.625003814697266
    5. '[
' → logprob: -18.375003814697266
    6. '[self' → logprob: -18.500003814697266
    7. '(x' → logprob: -18.750003814697266
    8. '{x' → logprob: -18.750003814697266
    9. '	x' → logprob: -19.000003814697266
    10. '[parent' → logprob: -19.750003814697266

Token 314: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034358248114585876
    2. ']' → logprob: -3.409358263015747
    3. ')
' → logprob: -8.659358024597168
    4. ' )' → logprob: -8.909358024597168
    5. '       ' → logprob: -9.659358024597168
    6. '）' → logprob: -9.909358024597168
    7. ')]' → logprob: -10.034358024597168
    8. '}' → logprob: -10.159358024597168
    9. '<|end|>' → logprob: -10.284358024597168
    10. ')return' → logprob: -10.909358024597168

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014115668833255768
    2. '
' → logprob: -4.889115810394287
    3. 'return' → logprob: -6.139115810394287
    4. '        
' → logprob: -7.014115810394287
    5. '           ' → logprob: -7.139115810394287
    6. ' 
' → logprob: -7.264115810394287
    7. ' return' → logprob: -7.389115810394287
    8. '   ' → logprob: -7.514115810394287
    9. '  
' → logprob: -8.139115333557129
    10. '    
' → logprob: -8.889115333557129

Token 316: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35907214879989624
    2. 'return' (adapté à ' return') → logprob: -1.359072208404541
    3. ' return' → logprob: -3.109072208404541
    4. '   ' → logprob: -9.234071731567383
    5. '	return' → logprob: -10.359071731567383
    6. ':return' → logprob: -13.609071731567383
    7. '           ' → logprob: -14.109071731567383
    8. 'eturn' → logprob: -14.109071731567383
    9. '	' → logprob: -14.484071731567383
    10. '      ' → logprob: -14.859071731567383

Token 317: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750484973192215
    2. ' x' → logprob: -3.5297505855560303
    3. 'self' → logprob: -17.65475082397461
    4. '	x' → logprob: -20.15475082397461
    5. ' ' → logprob: -21.27975082397461
    6. ' self' → logprob: -21.40475082397461
    7. '(x' → logprob: -22.27975082397461
    8. ' ' → logprob: -22.40475082397461
    9. '   ' → logprob: -23.27975082397461
    10. '{x' → logprob: -24.15475082397461

Token 318: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042292833677493036
    2. 'def' → logprob: -8.375422477722168
    3. ' def' → logprob: -9.250422477722168
    4. '    
' → logprob: -10.375422477722168
    5. '```' → logprob: -10.500422477722168
    6. '  ' → logprob: -11.375422477722168
    7. '
' → logprob: -12.125422477722168
    8. '	def' → logprob: -12.625422477722168
    9. ' ' → logprob: -12.625422477722168
    10. '    ' → logprob: -12.750422477722168

Token 320: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08800382912158966
    2. '   ' → logprob: -2.5880038738250732
    3. ' def' → logprob: -4.713003635406494
    4. '	def' → logprob: -9.338004112243652
    5. '```' → logprob: -12.713004112243652
    6. '  ' → logprob: -12.963004112243652
    7. ' ' → logprob: -13.963004112243652
    8. '    
' → logprob: -15.463004112243652
    9. ':def' → logprob: -16.338003158569336
    10. '    ' → logprob: -16.588003158569336

Token 321: ' unite' (ID: 96146)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.07942858338356018
    2. 'un' → logprob: -2.5794286727905273
    3. ' unite' → logprob: -7.579428672790527
    4. ' union' → logprob: -10.704428672790527
    5. 'unit' → logprob: -12.579428672790527
    6. 'merge' → logprob: -14.204428672790527
    7. '_union' → logprob: -14.579428672790527
    8. '.union' → logprob: -14.704428672790527
    9. '-un' → logprob: -16.45442771911621
    10. 'unity' → logprob: -16.57942771911621

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029784973710775375
    2. '(' → logprob: -3.529784917831421
    3. ' (' → logprob: -10.40478515625
    4. ',' → logprob: -13.65478515625
    5. 'self' → logprob: -13.90478515625
    6. '(s' → logprob: -14.02978515625
    7. '(x' → logprob: -14.40478515625
    8. '(
' → logprob: -14.65478515625
    9. ' self' → logprob: -16.52978515625
    10. '(Self' → logprob: -16.52978515625

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5791632533073425
    2. '(self' → logprob: -0.8291632533073425
    3. 'self' → logprob: -6.329163074493408
    4. ',self' → logprob: -7.329163074493408
    5. '(' → logprob: -7.954163074493408
    6. '(x' → logprob: -8.579163551330566
    7. ' ,' → logprob: -9.704163551330566
    8. ')' → logprob: -9.829163551330566
    9. ' self' → logprob: -9.954163551330566
    10. ' (' → logprob: -10.079163551330566

Token 324: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2016652375459671
    2. ' x' → logprob: -1.7016652822494507
    3. 'self' → logprob: -8.451664924621582
    4. ' self' → logprob: -10.201664924621582
    5. 'a' → logprob: -14.451664924621582
    6. 'u' → logprob: -15.701664924621582
    7. ' ' → logprob: -15.951664924621582
    8. '(x' → logprob: -16.2016658782959
    9. ')x' → logprob: -16.3266658782959
    10. ' a' → logprob: -16.3266658782959

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. ' ,' → logprob: -8.875142097473145
    3. ',x' → logprob: -13.000142097473145
    4. ',y' → logprob: -15.750142097473145
    5. ',
' → logprob: -16.50014305114746
    6. '‌,' → logprob: -17.37514305114746
    7. ',n' → logprob: -18.12514305114746
    8. ',int' → logprob: -18.25014305114746
    9. '，' → logprob: -18.50014305114746
    10. '   ' → logprob: -18.50014305114746

Token 326: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759400725364685
    2. ' y' → logprob: -0.8259400725364685
    3. '	y' → logprob: -14.825940132141113
    4. ' ' → logprob: -15.700940132141113
    5. '   ' → logprob: -15.950940132141113
    6. '    ' → logprob: -17.575939178466797
    7. '  ' → logprob: -17.700939178466797
    8. ',y' → logprob: -17.825939178466797
    9. ' ' → logprob: -18.075939178466797
    10. '
' → logprob: -18.325939178466797

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029791107401251793
    2. '):
' → logprob: -3.5297911167144775
    3. ')' → logprob: -10.904790878295898
    4. ' ):' → logprob: -11.779790878295898
    5. '):
' → logprob: -12.029790878295898
    6. '   ' → logprob: -12.529790878295898
    7. ',' → logprob: -13.154790878295898
    8. ')：' → logprob: -13.529790878295898
    9. '       ' → logprob: -14.279790878295898
    10. ':' → logprob: -14.654790878295898

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07334032654762268
    2. ' x' → logprob: -2.69834041595459
    3. 'x' → logprob: -6.69834041595459
    4. '<|end|>' → logprob: -7.19834041595459
    5. '   ' → logprob: -7.32334041595459
    6. ' ' → logprob: -9.07334041595459
    7. ',' → logprob: -9.07334041595459
    8. '        ' → logprob: -9.32334041595459
    9. '    ' → logprob: -9.44834041595459
    10. 'root' → logprob: -9.57334041595459

Token 329: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.15441757265944e-05
    2. ' x' → logprob: -10.750031471252441
    3. '   ' → logprob: -12.375031471252441
    4. 'rx' → logprob: -12.375031471252441
    5. '	x' → logprob: -14.500031471252441
    6. 'root' → logprob: -14.875031471252441
    7. 'px' → logprob: -14.875031471252441
    8. '```' → logprob: -15.250031471252441
    9. '       ' → logprob: -16.875032424926758
    10. '    
' → logprob: -17.750032424926758

Token 330: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9289750456809998
    2. ' =' → logprob: -1.1789751052856445
    3. '_root' → logprob: -1.9289751052856445
    4. 'root' → logprob: -2.5539751052856445
    5. '=' → logprob: -3.0539751052856445
    6. ' ,' → logprob: -3.8039751052856445
    7. '_parent' → logprob: -6.6789751052856445
    8. '=root' → logprob: -7.4289751052856445
    9. ',y' → logprob: -7.8039751052856445
    10. '_,' → logprob: -7.8039751052856445

Token 331: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '[self' → logprob: -17.500911712646484
    4. '(self' → logprob: -17.625911712646484
    5. '	self' → logprob: -19.750911712646484
    6. '=self' → logprob: -20.125911712646484
    7. '   ' → logprob: -21.375911712646484
    8. '
' → logprob: -21.500911712646484
    9. 'union' → logprob: -21.500911712646484
    10. 'elf' → logprob: -21.875911712646484

Token 332: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.3870376646518707
    2. 'find' → logprob: -1.1370376348495483
    3. ' find' → logprob: -9.51203727722168
    4. '.' → logprob: -10.63703727722168
    5. 'par' → logprob: -10.88703727722168
    6. '.par' → logprob: -11.38703727722168
    7. 'def' → logprob: -11.76203727722168
    8. 'union' → logprob: -11.88703727722168
    9. '.union' → logprob: -11.88703727722168
    10. '=find' → logprob: -12.63703727722168

Token 333: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.7133641196996905e-05
    2. '(y' → logprob: -10.62502670288086
    3. '(' → logprob: -13.12502670288086
    4. 'x' → logprob: -14.12502670288086
    5. '(
' → logprob: -18.12502670288086
    6. ' (' → logprob: -19.12502670288086
    7. '((' → logprob: -19.75002670288086
    8. '(self' → logprob: -21.12502670288086
    9. ' x' → logprob: -21.37502670288086
    10. '[x' → logprob: -21.62502670288086

Token 334: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0015191456768661737
    2. ')' → logprob: -6.501519203186035
    3. ')
' → logprob: -12.001519203186035
    4. ' )
' → logprob: -12.126519203186035
    5. ',' → logprob: -12.876519203186035
    6. ')y' → logprob: -13.376519203186035
    7. ',y' → logprob: -14.376519203186035
    8. ' y' → logprob: -15.501519203186035
    9. 'y' → logprob: -15.501519203186035
    10. ')

' → logprob: -16.37651824951172

Token 335: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.19646480679512024
    2. '       ' → logprob: -2.321464776992798
    3. 'y' → logprob: -2.571464776992798
    4. ',y' → logprob: -6.071465015411377
    5. ' if' → logprob: -7.571465015411377
    6. ',' → logprob: -7.946465015411377
    7. ';y' → logprob: -8.321464538574219
    8. 'if' → logprob: -9.446464538574219
    9. '	y' → logprob: -9.446464538574219
    10. '   ' → logprob: -9.696464538574219

Token 336: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.061967913061380386
    2. ' y' → logprob: -2.8119678497314453
    3. '       ' → logprob: -16.311967849731445
    4. ',y' → logprob: -16.436967849731445
    5. '	y' → logprob: -16.561967849731445
    6. '(y' → logprob: -18.061967849731445
    7. 'x' → logprob: -18.061967849731445
    8. ')y' → logprob: -19.436967849731445
    9. '   ' → logprob: -19.686967849731445
    10. ''y' → logprob: -20.311967849731445

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35457172989845276
    2. '=' → logprob: -1.2295717000961304
    3. '<|end|>' → logprob: -5.85457181930542
    4. ')' → logprob: -6.85457181930542
    5. ' if' → logprob: -7.47957181930542
    6. '(x' → logprob: -7.47957181930542
    7. 'if' → logprob: -8.604571342468262
    8. ' x' → logprob: -8.854571342468262
    9. ' =
' → logprob: -9.229571342468262
    10. 'x' → logprob: -9.354571342468262

Token 338: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25658512115478516
    2. 'self' → logprob: -1.5065851211547852
    3. ' self' → logprob: -6.006585121154785
    4. ' y' → logprob: -6.131585121154785
    5. '(self' → logprob: -12.256585121154785
    6. '(y' → logprob: -13.006585121154785
    7. 'find' → logprob: -14.506585121154785
    8. '[self' → logprob: -14.506585121154785
    9. ')y' → logprob: -15.131585121154785
    10. '	y' → logprob: -15.381585121154785

Token 339: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.362307223957032e-05
    2. 'find' → logprob: -9.625073432922363
    3. '.' → logprob: -12.125073432922363
    4. ' .' → logprob: -13.125073432922363
    5. '=find' → logprob: -17.62507438659668
    6. '	find' → logprob: -18.12507438659668
    7. '.findall' → logprob: -18.12507438659668
    8. '(find' → logprob: -18.25007438659668
    9. '```' → logprob: -18.25007438659668
    10. ' find' → logprob: -18.75007438659668

Token 340: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.6060808522743173e-05
    2. 'y' → logprob: -10.625025749206543
    3. '(x' → logprob: -13.875025749206543
    4. '(' → logprob: -14.625025749206543
    5. ' y' → logprob: -15.250025749206543
    6. '[y' → logprob: -17.00002670288086
    7. '(
' → logprob: -17.50002670288086
    8. ')' → logprob: -18.25002670288086
    9. '	y' → logprob: -18.37502670288086
    10. ' (' → logprob: -18.75002670288086

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1275153011083603
    2. ')
' → logprob: -2.1275153160095215
    3. ')x' → logprob: -8.502514839172363
    4. '       ' → logprob: -8.627514839172363
    5. 'if' → logprob: -9.377514839172363
    6. ')y' → logprob: -10.627514839172363
    7. ' )' → logprob: -10.877514839172363
    8. '):
' → logprob: -11.252514839172363
    9. ')return' → logprob: -11.627514839172363
    10. ' if' → logprob: -11.752514839172363

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14917625486850739
    2. ' if' → logprob: -2.2741763591766357
    3. '
' → logprob: -4.024176120758057
    4. 'if' → logprob: -5.024176120758057
    5. '	' → logprob: -5.774176120758057
    6. '	if' → logprob: -6.274176120758057
    7. '<|end|>' → logprob: -6.524176120758057
    8. '        
' → logprob: -7.024176120758057
    9. ' 
' → logprob: -7.024176120758057
    10. '   ' → logprob: -7.149176120758057

Token 343: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0028393494430929422
    2. ' if' → logprob: -6.2528395652771
    3. '       ' → logprob: -7.0028395652771
    4. '   ' → logprob: -14.377839088439941
    5. '	if' → logprob: -14.502839088439941
    6. 'return' → logprob: -17.502840042114258
    7. 'If' → logprob: -17.627840042114258
    8. '```' → logprob: -17.877840042114258
    9. ' ' → logprob: -19.377840042114258
    10. '        
' → logprob: -19.627840042114258

Token 344: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -17.663042068481445
    4. '(x' → logprob: -19.538042068481445
    5. '   ' → logprob: -20.038042068481445
    6. ')x' → logprob: -21.038042068481445
    7. ' ' → logprob: -22.038042068481445
    8. '```' → logprob: -22.288042068481445
    9. '
' → logprob: -22.413042068481445
    10. '{x' → logprob: -22.538042068481445

Token 345: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.51396644115448
    2. '!=' → logprob: -1.13896644115448
    3. ' ==' → logprob: -3.1389665603637695
    4. ' !=' → logprob: -3.2639665603637695
    5. '=' → logprob: -8.76396656036377
    6. ']==' → logprob: -13.26396656036377
    7. '==
' → logprob: -13.38896656036377
    8. ' ' → logprob: -13.51396656036377
    9. '==-' → logprob: -13.88896656036377
    10. '[' → logprob: -14.13896656036377

Token 346: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004307884373702109
    2. ' y' → logprob: -7.750430583953857
    3. '	y' → logprob: -18.250431060791016
    4. '   ' → logprob: -19.125431060791016
    5. 'x' → logprob: -20.125431060791016
    6. ''y' → logprob: -20.375431060791016
    7. ' ' → logprob: -20.375431060791016
    8. '       ' → logprob: -21.125431060791016
    9. '
' → logprob: -21.375431060791016
    10. '    ' → logprob: -21.375431060791016

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17599369585514069
    2. ':return' → logprob: -1.9259936809539795
    3. ':
' → logprob: -4.175993919372559
    4. '           ' → logprob: -9.425993919372559
    5. 'return' → logprob: -9.675993919372559
    6. '       ' → logprob: -9.675993919372559
    7. ' :' → logprob: -10.550993919372559
    8. ')return' → logprob: -11.175993919372559
    9. ' return' → logprob: -11.425993919372559
    10. '   ' → logprob: -11.925993919372559

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015051016816869378
    2. '       ' → logprob: -7.626504898071289
    3. ' return' → logprob: -8.251504898071289
    4. '
' → logprob: -8.501504898071289
    5. 'False' → logprob: -8.626504898071289
    6. 'return' → logprob: -9.376504898071289
    7. '   ' → logprob: -9.501504898071289
    8. ' False' → logprob: -9.751504898071289
    9. '	       ' → logprob: -10.126504898071289
    10. '		' → logprob: -10.501504898071289

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41693824529647827
    2. '           ' → logprob: -1.166938304901123
    3. ' return' → logprob: -4.041938304901123
    4. '       ' → logprob: -4.791938304901123
    5. 'False' → logprob: -6.041938304901123
    6. '
' → logprob: -7.041938304901123
    7. '   ' → logprob: -8.916937828063965
    8. '	return' → logprob: -9.166937828063965
    9. 'True' → logprob: -9.291937828063965
    10. '0' → logprob: -9.416937828063965

Token 350: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001535216229967773
    2. ' False' → logprob: -6.501535415649414
    3. '
' → logprob: -10.751535415649414
    4. 'True' → logprob: -11.876535415649414
    5. 'None' → logprob: -12.501535415649414
    6. ' 
' → logprob: -15.501535415649414
    7. '(False' → logprob: -15.626535415649414
    8. '0' → logprob: -15.876535415649414
    9. '    
' → logprob: -16.501535415649414
    10. '  
' → logprob: -17.001535415649414

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008059371029958129
    2. ' if' → logprob: -7.250805854797363
    3. 'if' → logprob: -10.000805854797363
    4. '   ' → logprob: -10.125805854797363
    5. '```' → logprob: -13.125805854797363
    6. ' elif' → logprob: -13.500805854797363
    7. '        
' → logprob: -13.625805854797363
    8. '    ' → logprob: -13.875805854797363
    9. '           ' → logprob: -14.000805854797363
    10. '<|end|>' → logprob: -14.125805854797363

Token 352: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0027510228101164103
    2. ' if' → logprob: -6.002750873565674
    3. '       ' → logprob: -8.252751350402832
    4. '   ' → logprob: -11.377751350402832
    5. '```' → logprob: -13.002751350402832
    6. '	if' → logprob: -14.127751350402832
    7. 'elif' → logprob: -15.502751350402832
    8. 'If' → logprob: -16.502750396728516
    9. 'rank' → logprob: -16.877750396728516
    10. ';if' → logprob: -17.752750396728516

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002478273818269372
    2. ' self' → logprob: -6.002478122711182
    3. '(self' → logprob: -13.00247859954834
    4. '[self' → logprob: -15.12747859954834
    5. '	self' → logprob: -16.502477645874023
    6. '
' → logprob: -17.627477645874023
    7. '   ' → logprob: -18.252477645874023
    8. 's' → logprob: -18.252477645874023
    9. '=self' → logprob: -18.252477645874023
    10. ':self' → logprob: -18.377477645874023

Token 354: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.704273118884885e-07
    2. 'rank' → logprob: -15.375000953674316
    3. '.par' → logprob: -15.375000953674316
    4. '.' → logprob: -16.75
    5. '.r' → logprob: -17.875
    6. ' .' → logprob: -18.0
    7. ' rank' → logprob: -19.625
    8. '
' → logprob: -20.0
    9. '.rand' → logprob: -20.125
    10. '.
' → logprob: -20.5

Token 355: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.143808109802194e-05
    2. 'x' → logprob: -10.125041007995605
    3. '[' → logprob: -14.125041007995605
    4. ' x' → logprob: -16.000041961669922
    5. '[u' → logprob: -16.250041961669922
    6. '[int' → logprob: -16.500041961669922
    7. '```' → logprob: -16.500041961669922
    8. '[a' → logprob: -17.000041961669922
    9. '[user' → logprob: -17.375041961669922
    10. ' [' → logprob: -17.375041961669922

Token 356: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4174538254737854
    2. ' <' → logprob: -1.5424537658691406
    3. '[x' → logprob: -2.2924537658691406
    4. '[' → logprob: -4.542453765869141
    5. '<x' → logprob: -4.792453765869141
    6. ']' → logprob: -5.417453765869141
    7. ']<' → logprob: -5.917453765869141
    8. '[y' → logprob: -8.79245376586914
    9. ')<' → logprob: -10.16745376586914
    10. ' ' → logprob: -10.41745376586914

Token 357: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10200362652540207
    2. ' <' → logprob: -2.352003574371338
    3. '<x' → logprob: -6.352003574371338
    4. '[' → logprob: -10.352004051208496
    5. '[x' → logprob: -11.227004051208496
    6. '[y' → logprob: -13.477004051208496
    7. '<int' → logprob: -13.852004051208496
    8. '<size' → logprob: -14.102004051208496
    9. '<n' → logprob: -14.102004051208496
    10. '<class' → logprob: -14.852004051208496

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716674659401178
    2. ' self' → logprob: -5.006716728210449
    3. '[self' → logprob: -14.75671672821045
    4. '
' → logprob: -15.00671672821045
    5. '	self' → logprob: -15.38171672821045
    6. '(self' → logprob: -16.006715774536133
    7. '   ' → logprob: -16.131715774536133
    8. 'y' → logprob: -16.381715774536133
    9. ' ' → logprob: -16.756715774536133
    10. '=self' → logprob: -17.256715774536133

Token 359: '.rank' (ID: 96793)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00086012709653005
    2. '[y' → logprob: -7.125860214233398
    3. ' y' → logprob: -9.875860214233398
    4. 'x' → logprob: -12.500860214233398
    5. '	y' → logprob: -15.750860214233398
    6. '[x' → logprob: -15.875860214233398
    7. 'rank' → logprob: -16.3758602142334
    8. '```' → logprob: -16.8758602142334
    9. ':y' → logprob: -17.2508602142334
    10. '
' → logprob: -17.5008602142334

Token 360: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5759633779525757
    2. '[y' → logprob: -0.8259633779525757
    3. '[' → logprob: -11.325963020324707
    4. 'x' → logprob: -11.700963020324707
    5. 'y' → logprob: -13.200963020324707
    6. '[u' → logprob: -13.950963020324707
    7. '```' → logprob: -14.825963020324707
    8. '[
' → logprob: -15.325963020324707
    9. ' [' → logprob: -15.700963020324707
    10. '[v' → logprob: -16.950963973999023

Token 361: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03927600756287575
    2. ':' → logprob: -3.789276123046875
    3. ']:
' → logprob: -4.164276123046875
    4. ':
' → logprob: -8.914276123046875
    5. ']' → logprob: -9.164276123046875
    6. '>:' → logprob: -10.539276123046875
    7. '}:' → logprob: -10.664276123046875
    8. ']:
' → logprob: -10.664276123046875
    9. '):' → logprob: -11.289276123046875
    10. '[' → logprob: -11.289276123046875

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.560600996017456
    2. ' x' → logprob: -0.935600996017456
    3. ' self' → logprob: -4.060601234436035
    4. 'x' → logprob: -4.560601234436035
    5. ',' → logprob: -5.560601234436035
    6. '       ' → logprob: -6.935601234436035
    7. ',x' → logprob: -7.060601234436035
    8. 'self' → logprob: -7.185601234436035
    9. '[' → logprob: -8.185601234436035
    10. ' par' → logprob: -8.435601234436035

Token 363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20163339376449585
    2. ' self' → logprob: -1.7016334533691406
    3. '           ' → logprob: -8.95163345336914
    4. 'x' → logprob: -9.95163345336914
    5. ' x' → logprob: -10.32663345336914
    6. '	self' → logprob: -12.57663345336914
    7. '       ' → logprob: -13.32663345336914
    8. '[self' → logprob: -13.45163345336914
    9. '   ' → logprob: -13.57663345336914
    10. '(self' → logprob: -13.95163345336914

Token 364: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.00020222914463374764
    2. 'par' → logprob: -8.625202178955078
    3. '	par' → logprob: -11.000202178955078
    4. '_par' → logprob: -12.250202178955078
    5. '.parent' → logprob: -15.125202178955078
    6. 'Par' → logprob: -15.250202178955078
    7. '.' → logprob: -15.250202178955078
    8. '.rank' → logprob: -16.250202178955078
    9. ' par' → logprob: -16.750202178955078
    10. '.p' → logprob: -17.000202178955078

Token 365: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00022272850037552416
    2. '[y' → logprob: -8.625223159790039
    3. 'x' → logprob: -10.125223159790039
    4. '[' → logprob: -12.875223159790039
    5. ' x' → logprob: -15.000223159790039
    6. ' [' → logprob: -17.12522315979004
    7. ',x' → logprob: -17.37522315979004
    8. '[u' → logprob: -17.62522315979004
    9. 'y' → logprob: -18.00022315979004
    10. '```' → logprob: -18.00022315979004

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004142626188695431
    2. ']=' → logprob: -5.504142761230469
    3. ' ]' → logprob: -10.379142761230469
    4. '=' → logprob: -10.754142761230469
    5. ' =' → logprob: -12.379142761230469
    6. '[y' → logprob: -12.879142761230469
    7. '[' → logprob: -13.004142761230469
    8. '[x' → logprob: -13.004142761230469
    9. 'y' → logprob: -16.25414276123047
    10. 's' → logprob: -16.37914276123047

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932578086853027
    2. ' =' → logprob: -0.6932578086853027
    3. '=y' → logprob: -9.443258285522461
    4. '[' → logprob: -11.193258285522461
    5. '=x' → logprob: -11.943258285522461
    6. '[y' → logprob: -12.068258285522461
    7. ']' → logprob: -13.443258285522461
    8. ' y' → logprob: -13.818258285522461
    9. '＝' → logprob: -14.443258285522461
    10. '[x' → logprob: -14.568258285522461

Token 368: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.339278580620885e-06
    2. ' y' → logprob: -13.000001907348633
    3. '	y' → logprob: -18.875001907348633
    4. ')y' → logprob: -21.625001907348633
    5. '[y' → logprob: -22.125001907348633
    6. ''y' → logprob: -22.500001907348633
    7. ',y' → logprob: -23.125001907348633
    8. '   ' → logprob: -23.250001907348633
    9. '(y' → logprob: -23.500001907348633
    10. '
' → logprob: -23.625001907348633

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3376007080078125
    2. 'else' → logprob: -1.7126007080078125
    3. '           ' → logprob: -2.3376007080078125
    4. ' else' → logprob: -5.0876007080078125
    5. '
' → logprob: -5.8376007080078125
    6. '<|end|>' → logprob: -8.212600708007812
    7. 'elif' → logprob: -9.962600708007812
    8. '```' → logprob: -10.837600708007812
    9. '   ' → logprob: -10.962600708007812
    10. ' 
' → logprob: -11.212600708007812

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009039008989930153
    2. 'else' → logprob: -4.884038925170898
    3. ' else' → logprob: -6.634038925170898
    4. '           ' → logprob: -9.384038925170898
    5. 'elif' → logprob: -11.134038925170898
    6. '```' → logprob: -12.134038925170898
    7. '   ' → logprob: -12.384038925170898
    8. '<|end|>' → logprob: -12.384038925170898
    9. ' elif' → logprob: -13.634038925170898
    10. '	else' → logprob: -14.259038925170898

Token 371: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16287842392921448
    2. '       ' → logprob: -1.912878394126892
    3. ' else' → logprob: -6.037878513336182
    4. 'elif' → logprob: -8.412878036499023
    5. '```' → logprob: -10.412878036499023
    6. '   ' → logprob: -11.537878036499023
    7. '           ' → logprob: -14.662878036499023
    8. ' elif' → logprob: -14.662878036499023
    9. '	else' → logprob: -14.787878036499023
    10. '[' → logprob: -15.162878036499023

Token 372: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18089421093463898
    2. ':' → logprob: -2.180894136428833
    3. '           ' → logprob: -3.555894136428833
    4. '{
' → logprob: -4.180894374847412
    5. '{' → logprob: -5.180894374847412
    6. '       ' → logprob: -5.930894374847412
    7. '   ' → logprob: -9.305893898010254
    8. '          ' → logprob: -9.555893898010254
    9. '```' → logprob: -10.305893898010254
    10. '):
' → logprob: -10.680893898010254

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005647066980600357
    2. '       ' → logprob: -5.3806471824646
    3. '{
' → logprob: -7.8806471824646
    4. '{' → logprob: -8.130646705627441
    5. ':
' → logprob: -8.880646705627441
    6. ':' → logprob: -9.630646705627441
    7. '```' → logprob: -10.130646705627441
    8. '   ' → logprob: -10.630646705627441
    9. '               ' → logprob: -11.005646705627441
    10. 'self' → logprob: -11.255646705627441

Token 374: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0681886151432991
    2. 'self' (adapté à ' self') → logprob: -3.3181886672973633
    3. '{' → logprob: -4.318188667297363
    4. '{
' → logprob: -4.693188667297363
    5. '       ' → logprob: -5.443188667297363
    6. '<|end|>' → logprob: -7.318188667297363
    7. '               ' → logprob: -7.568188667297363
    8. '```' → logprob: -8.318188667297363
    9. '[' → logprob: -8.568188667297363
    10. '[self' → logprob: -8.693188667297363

Token 375: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -1.580929347255733e-05
    2. 'par' → logprob: -11.500016212463379
    3. '	par' → logprob: -12.750016212463379
    4. '.rank' → logprob: -13.000016212463379
    5. '.' → logprob: -15.000016212463379
    6. ' .' → logprob: -17.500015258789062
    7. '.p' → logprob: -17.875015258789062
    8. '.pol' → logprob: -18.000015258789062
    9. '_par' → logprob: -18.125015258789062
    10. ' par' → logprob: -18.500015258789062

Token 376: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.47495681833243e-05
    2. 'x' → logprob: -11.125024795532227
    3. '[y' → logprob: -11.750024795532227
    4. '[' → logprob: -13.875024795532227
    5. '```' → logprob: -14.500024795532227
    6. '{x' → logprob: -15.750024795532227
    7. '       ' → logprob: -16.875024795532227
    8. '[
' → logprob: -16.875024795532227
    9. ' x' → logprob: -17.250024795532227
    10. 's' → logprob: -17.250024795532227

Token 377: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047149188816547394
    2. '=' → logprob: -3.547149181365967
    3. ' ]' → logprob: -4.922149181365967
    4. ' =' → logprob: -5.047149181365967
    5. ']=' → logprob: -5.672149181365967
    6. '[' → logprob: -10.422149658203125
    7. '   ' → logprob: -10.797149658203125
    8. ')' → logprob: -11.047149658203125
    9. '       ' → logprob: -12.047149658203125
    10. '           ' → logprob: -12.047149658203125

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048528365790844
    2. ' =' → logprob: -4.511048316955566
    3. '=
' → logprob: -15.261048316955566
    4. ')' → logprob: -15.886048316955566
    5. ']=' → logprob: -16.261049270629883
    6. '=s' → logprob: -16.511049270629883
    7. ']' → logprob: -17.136049270629883
    8. '＝' → logprob: -17.261049270629883
    9. ')=' → logprob: -17.386049270629883
    10. '=x' → logprob: -17.761049270629883

Token 379: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.615255839889869e-05
    2. ' x' → logprob: -9.250096321105957
    3. '	x' → logprob: -18.25009536743164
    4. ')x' → logprob: -19.62509536743164
    5. '{x' → logprob: -21.62509536743164
    6. '(x' → logprob: -22.50009536743164
    7. '"x' → logprob: -23.12509536743164
    8. ',x' → logprob: -23.37509536743164
    9. '[x' → logprob: -23.62509536743164
    10. '$x' → logprob: -23.75009536743164

Token 380: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.252315878868103
    2. '       ' → logprob: -1.502315878868103
    3. 'if' → logprob: -8.752315521240234
    4. '   ' → logprob: -8.877315521240234
    5. ' if' → logprob: -9.627315521240234
    6. '```' → logprob: -11.877315521240234
    7. '     ' → logprob: -12.627315521240234
    8. '	   ' → logprob: -13.377315521240234
    9. '	       ' → logprob: -13.377315521240234
    10. '		' → logprob: -13.502315521240234

Token 381: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016798212891444564
    2. '           ' → logprob: -7.00167989730835
    3. 'if' → logprob: -7.62667989730835
    4. ' if' → logprob: -8.501679420471191
    5. '   ' → logprob: -10.376679420471191
    6. '```' → logprob: -10.751679420471191
    7. '        
' → logprob: -11.876679420471191
    8. '<|end|>' → logprob: -12.251679420471191
    9. ' ' → logprob: -12.626679420471191
    10. '      ' → logprob: -13.251679420471191

Token 382: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08954304456710815
    2. '           ' → logprob: -2.464543104171753
    3. ' if' → logprob: -7.714542865753174
    4. '       ' → logprob: -9.839543342590332
    5. 'If' → logprob: -10.839543342590332
    6. '1' → logprob: -10.839543342590332
    7. '               ' → logprob: -11.339543342590332
    8. '```' → logprob: -11.464543342590332
    9. '            
' → logprob: -11.589543342590332
    10. '0' → logprob: -12.214543342590332

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -15.875075340270996
    4. '[self' → logprob: -17.87507438659668
    5. '	self' → logprob: -18.37507438659668
    6. '           ' → logprob: -18.87507438659668
    7. '   ' → logprob: -19.00007438659668
    8. '
' → logprob: -19.62507438659668
    9. '```' → logprob: -20.62507438659668
    10. ':self' → logprob: -20.62507438659668

Token 384: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0002622894535306841
    2. 'rank' → logprob: -8.250262260437012
    3. '_rank' → logprob: -14.375262260437012
    4. ' rank' → logprob: -15.500262260437012
    5. 'self' → logprob: -15.625262260437012
    6. '.r' → logprob: -17.875263214111328
    7. 'Rank' → logprob: -17.875263214111328
    8. '(rank' → logprob: -18.000263214111328
    9. '.self' → logprob: -18.750263214111328
    10. '
' → logprob: -18.875263214111328

Token 385: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.11996734328568e-05
    2. '[self' → logprob: -10.250041007995605
    3. '[' → logprob: -12.125041007995605
    4. 'x' → logprob: -16.250041961669922
    5. '[u' → logprob: -16.250041961669922
    6. '[
' → logprob: -16.375041961669922
    7. '[s' → logprob: -17.000041961669922
    8. '[a' → logprob: -18.000041961669922
    9. '```' → logprob: -18.000041961669922
    10. '   ' → logprob: -18.625041961669922

Token 386: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005157403065823019
    2. '==' → logprob: -7.750515937805176
    3. '[' → logprob: -9.750515937805176
    4. '[y' → logprob: -11.750515937805176
    5. '[u' → logprob: -12.500515937805176
    6. ']==' → logprob: -12.500515937805176
    7. '[self' → logprob: -12.625515937805176
    8. '[
' → logprob: -12.750515937805176
    9. ' ==' → logprob: -13.750515937805176
    10. '[a' → logprob: -14.250515937805176

Token 387: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4721906781196594
    2. '[x' → logprob: -1.0971906185150146
    3. '[' → logprob: -3.2221906185150146
    4. '[self' → logprob: -7.222190856933594
    5. ' ==' → logprob: -7.722190856933594
    6. '[y' → logprob: -7.847190856933594
    7. ']==' → logprob: -8.097190856933594
    8. '[
' → logprob: -8.597190856933594
    9. '[u' → logprob: -8.597190856933594
    10. '[int' → logprob: -8.722190856933594

Token 388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001864976016804576
    2. 'x' → logprob: -7.126864910125732
    3. 'y' → logprob: -7.126864910125732
    4. '[self' → logprob: -8.62686538696289
    5. ' self' → logprob: -9.50186538696289
    6. '[y' → logprob: -13.87686538696289
    7. '[x' → logprob: -14.37686538696289
    8. 'rank' → logprob: -14.75186538696289
    9. '	self' → logprob: -15.37686538696289
    10. '   ' → logprob: -15.50186538696289

Token 389: '.rank' (ID: 96793)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.03031812608242035
    2. '[y' → logprob: -3.780318021774292
    3. 'rank' → logprob: -5.405318260192871
    4. 'x' → logprob: -6.280318260192871
    5. '_rank' → logprob: -7.780318260192871
    6. 'y' → logprob: -8.780318260192871
    7. '.rank' → logprob: -9.530318260192871
    8. 'Rank' → logprob: -11.530318260192871
    9. '[' → logprob: -11.780318260192871
    10. '   ' → logprob: -12.280318260192871

Token 390: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.876193169271573e-05
    2. '[y' → logprob: -9.875088691711426
    3. 'x' → logprob: -10.250088691711426
    4. '[u' → logprob: -13.625088691711426
    5. '[' → logprob: -14.500088691711426
    6. '```' → logprob: -16.750089645385742
    7. '(x' → logprob: -17.000089645385742
    8. '[
' → logprob: -18.250089645385742
    9. '[self' → logprob: -18.375089645385742
    10. '   ' → logprob: -18.375089645385742

Token 391: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5286444425582886
    2. ':
' → logprob: -1.5286444425582886
    3. ']:
' → logprob: -1.9036444425582886
    4. ']:' → logprob: -3.153644561767578
    5. '):
' → logprob: -7.403644561767578
    6. '():
' → logprob: -8.028644561767578
    7. ']+=' → logprob: -8.403644561767578
    8. ']' → logprob: -9.028644561767578
    9. '<|end|>' → logprob: -9.278644561767578
    10. '       ' → logprob: -9.403644561767578

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021057340200059116
    2. '           ' → logprob: -10.125210762023926
    3. '	           ' → logprob: -10.125210762023926
    4. '   ' → logprob: -10.250210762023926
    5. '                
' → logprob: -10.500210762023926
    6. '              ' → logprob: -11.625210762023926
    7. '	       ' → logprob: -11.750210762023926
    8. '		       ' → logprob: -11.750210762023926
    9. ' self' → logprob: -12.375210762023926
    10. '                   ' → logprob: -12.375210762023926

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015516405692324042
    2. ' self' → logprob: -6.751551628112793
    3. '                   ' → logprob: -8.001551628112793
    4. '               ' → logprob: -10.001551628112793
    5. '   ' → logprob: -14.251551628112793
    6. '	self' → logprob: -15.876551628112793
    7. '[self' → logprob: -16.00155258178711
    8. '           ' → logprob: -16.25155258178711
    9. '                       ' → logprob: -17.12655258178711
    10. ' ' → logprob: -17.62655258178711

Token 394: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.128163257315464e-07
    2. 'rank' → logprob: -15.25
    3. '.' → logprob: -19.625
    4. '_rank' → logprob: -19.625
    5. ' rank' → logprob: -19.75
    6. 'Rank' → logprob: -20.875
    7. ' .' → logprob: -21.0
    8. '(rank' → logprob: -21.25
    9. '.r' → logprob: -22.0
    10. '
' → logprob: -22.625

Token 395: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.128163257315464e-07
    2. '[self' → logprob: -16.375
    3. '[' → logprob: -17.125
    4. '[u' → logprob: -18.125
    5. '[class' → logprob: -19.0
    6. 'x' → logprob: -19.125
    7. '[user' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. ' [' → logprob: -19.375
    10. '[int' → logprob: -19.5

Token 396: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006555621512234211
    2. ']+=' → logprob: -5.256555557250977
    3. ' +=' → logprob: -6.631555557250977
    4. '[' → logprob: -13.006555557250977
    5. ']' → logprob: -15.881555557250977
    6. '=' → logprob: -16.631555557250977
    7. '+' → logprob: -16.631555557250977
    8. '+="' → logprob: -16.881555557250977
    9. '   ' → logprob: -16.881555557250977
    10. '+='' → logprob: -17.006555557250977

Token 397: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00012737659562844783
    2. ']+=' → logprob: -9.250127792358398
    3. ' +=' → logprob: -10.375127792358398
    4. '+='' → logprob: -17.5001277923584
    5. '+' → logprob: -18.1251277923584
    6. '+="' → logprob: -18.5001277923584
    7. '+=(' → logprob: -18.8751277923584
    8. '[' → logprob: -19.6251277923584
    9. '=' → logprob: -20.0001277923584
    10. '```' → logprob: -21.8751277923584

Token 398: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.375003814697266
    4. '```' → logprob: -19.750003814697266
    5. '
' → logprob: -20.000003814697266
    6. '１' → logprob: -20.875003814697266
    7. '  ' → logprob: -21.625003814697266
    8. '[' → logprob: -22.750003814697266
    9. '       ' → logprob: -23.500003814697266
    10. '3' → logprob: -23.562503814697266

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -22.125
    4. '１' → logprob: -22.125
    5. '
' → logprob: -23.75
    6. '```' → logprob: -23.875
    7. '  ' → logprob: -25.75
    8. '[' → logprob: -26.625
    9. '۱' → logprob: -26.75
    10. '' → logprob: -26.875

Token 400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0826610326766968
    2. '
' → logprob: -1.9576610326766968
    3. 'def' → logprob: -1.9576610326766968
    4. ' for' → logprob: -2.3326611518859863
    5. ' 
' → logprob: -2.5826611518859863
    6. 'n' → logprob: -2.8326611518859863
    7. 'for' → logprob: -3.2076611518859863
    8. '    
' → logprob: -3.4576611518859863
    9. '  
' → logprob: -4.332661151885986
    10. '```' → logprob: -4.332661151885986

Token 402: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22665642201900482
    2. 'uf' → logprob: -1.851656436920166
    3. ' def' → logprob: -4.226656436920166
    4. '   ' → logprob: -4.476656436920166
    5. ')' → logprob: -4.976656436920166
    6. '    
' → logprob: -6.101656436920166
    7. 'result' → logprob: -6.226656436920166
    8. 'for' → logprob: -6.476656436920166
    9. ' uf' → logprob: -6.476656436920166
    10. '```' → logprob: -6.476656436920166

Token 403: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.006402000784873962
    2. 'iss' → logprob: -5.506402015686035
    3. ' same' → logprob: -6.881402015686035
    4. 'is' → logprob: -7.256402015686035
    5. 'connected' → logprob: -7.881402015686035
    6. ' iss' → logprob: -8.756402015686035
    7. '.same' → logprob: -11.756402015686035
    8. 'ism' → logprob: -11.756402015686035
    9. '_same' → logprob: -11.881402015686035
    10. ' is' → logprob: -12.256402015686035

Token 404: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31747499108314514
    2. '(' → logprob: -1.3174749612808228
    3. '(x' → logprob: -5.567474842071533
    4. ' (' → logprob: -8.442475318908691
    5. '(a' → logprob: -9.942475318908691
    6. '(int' → logprob: -10.567475318908691
    7. '(u' → logprob: -10.567475318908691
    8. '()' → logprob: -12.067475318908691
    9. ')' → logprob: -12.067475318908691
    10. '(
' → logprob: -12.567475318908691

Token 405: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017243190086446702
    2. '(' → logprob: -8.75017261505127
    3. ')' → logprob: -12.12517261505127
    4. ' (' → logprob: -12.75017261505127
    5. ')(' → logprob: -13.37517261505127
    6. 'self' → logprob: -13.50017261505127
    7. '(s' → logprob: -13.75017261505127
    8. '(x' → logprob: -14.37517261505127
    9. ' ' → logprob: -15.25017261505127
    10. '(sel' → logprob: -15.37517261505127

Token 406: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. 'a' → logprob: -16.788042068481445
    4. '	x' → logprob: -17.413042068481445
    5. ')x' → logprob: -19.413042068481445
    6. ' ' → logprob: -19.913042068481445
    7. '   ' → logprob: -20.288042068481445
    8. ',x' → logprob: -20.538042068481445
    9. 'u' → logprob: -20.913042068481445
    10. 'self' → logprob: -21.038042068481445

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023452966706827283
    2. ' ,' → logprob: -8.375234603881836
    3. ',x' → logprob: -12.500234603881836
    4. ',y' → logprob: -16.125234603881836
    5. ',
' → logprob: -17.250234603881836
    6. '‌,' → logprob: -18.500234603881836
    7. ' ' → logprob: -18.500234603881836
    8. '   ' → logprob: -18.500234603881836
    9. ',int' → logprob: -18.625234603881836
    10. '，' → logprob: -19.125234603881836

Token 408: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023245595395565033
    2. ' y' → logprob: -3.7732455730438232
    3. '	y' → logprob: -16.898244857788086
    4. '   ' → logprob: -18.523244857788086
    5. 'x' → logprob: -18.898244857788086
    6. ' ' → logprob: -19.773244857788086
    7. ')y' → logprob: -20.148244857788086
    8. ',y' → logprob: -20.773244857788086
    9. '<|end|>' → logprob: -21.148244857788086
    10. '    ' → logprob: -21.273244857788086

Token 409: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05785083398222923
    2. ',' → logprob: -2.9328508377075195
    3. '):
' → logprob: -6.1828508377075195
    4. ')' → logprob: -7.1828508377075195
    5. ' ):' → logprob: -9.05785083770752
    6. '   ' → logprob: -11.68285083770752
    7. '):
' → logprob: -12.18285083770752
    8. 'self' → logprob: -12.30785083770752
    9. ' ,' → logprob: -13.68285083770752
    10. ' )' → logprob: -13.80785083770752

Token 410: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7414553165435791
    2. '       ' → logprob: -0.8664553165435791
    3. '    ' → logprob: -3.116455316543579
    4. '   ' → logprob: -3.741455316543579
    5. '<|end|>' → logprob: -4.616455078125
    6. ' x' → logprob: -4.991455078125
    7. ' ' → logprob: -5.366455078125
    8. 'return' → logprob: -5.866455078125
    9. ' (' → logprob: -6.366455078125
    10. '(' → logprob: -6.991455078125

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5759799480438232
    2. ' return' → logprob: -0.8259799480438232
    3. '
' → logprob: -11.200980186462402
    4. '       ' → logprob: -11.200980186462402
    5. '	return' → logprob: -12.075980186462402
    6. '{return' → logprob: -12.450980186462402
    7. ':return' → logprob: -13.450980186462402
    8. 'self' → logprob: -13.700980186462402
    9. '   ' → logprob: -14.950980186462402
    10. 'Return' → logprob: -15.450980186462402

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170225441455841
    2. ' self' → logprob: -6.7511701583862305
    3. '(self' → logprob: -18.126171112060547
    4. '[self' → logprob: -19.001171112060547
    5. '	self' → logprob: -20.501171112060547
    6. '   ' → logprob: -21.001171112060547
    7. '
' → logprob: -23.251171112060547
    8. ' ' → logprob: -23.626171112060547
    9. '=self' → logprob: -23.876171112060547
    10. '自' → logprob: -24.501171112060547

Token 413: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -1.3306015716807451e-05
    2. '.' → logprob: -11.50001335144043
    3. ' .' → logprob: -13.00001335144043
    4. '.par' → logprob: -14.37501335144043
    5. 'find' → logprob: -15.87501335144043
    6. ').' → logprob: -17.12501335144043
    7. '.same' → logprob: -17.37501335144043
    8. '.findall' → logprob: -17.62501335144043
    9. '=find' → logprob: -18.37501335144043
    10. '.Find' → logprob: -18.75001335144043

Token 414: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.623244553338736e-05
    2. '(' → logprob: -9.625065803527832
    3. 'x' → logprob: -16.62506675720215
    4. '(
' → logprob: -16.87506675720215
    5. ' (' → logprob: -18.75006675720215
    6. '(s' → logprob: -21.50006675720215
    7. '()' → logprob: -22.25006675720215
    8. '(

' → logprob: -22.25006675720215
    9. ',x' → logprob: -22.37506675720215
    10. '(a' → logprob: -22.37506675720215

Token 415: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06156535446643829
    2. '(x' → logprob: -3.061565399169922
    3. ',' → logprob: -5.061565399169922
    4. '==' → logprob: -6.061565399169922
    5. ')==' → logprob: -6.186565399169922
    6. ' ==' → logprob: -6.561565399169922
    7. ',x' → logprob: -8.311565399169922
    8. '[x' → logprob: -9.061565399169922
    9. '(' → logprob: -9.186565399169922
    10. ' )' → logprob: -9.311565399169922

Token 416: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20143447816371918
    2. ' ==' → logprob: -1.7014344930648804
    3. '=' → logprob: -11.576434135437012
    4. ')==' → logprob: -12.451434135437012
    5. '==
' → logprob: -13.076434135437012
    6. ')' → logprob: -13.576434135437012
    7. '()==' → logprob: -13.701434135437012
    8. ']==' → logprob: -13.951434135437012
    9. 'x' → logprob: -14.326434135437012
    10. '===' → logprob: -14.576434135437012

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024802929256111383
    2. ' self' → logprob: -6.002480506896973
    3. '       ' → logprob: -12.752480506896973
    4. '   ' → logprob: -14.127480506896973
    5. '(self' → logprob: -14.752480506896973
    6. '	self' → logprob: -15.127480506896973
    7. '=self' → logprob: -15.752480506896973
    8. '           ' → logprob: -16.502479553222656
    9. 'y' → logprob: -16.627479553222656
    10. '[self' → logprob: -17.502479553222656

Token 418: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.14396928250789642
    2. '.find' → logprob: -2.0189692974090576
    3. 'y' → logprob: -7.3939690589904785
    4. '.' → logprob: -7.5189690589904785
    5. ' y' → logprob: -9.643969535827637
    6. ' find' → logprob: -10.893969535827637
    7. '.y' → logprob: -11.143969535827637
    8. ' .' → logprob: -11.393969535827637
    9. '(y' → logprob: -11.643969535827637
    10. ').' → logprob: -12.268969535827637

Token 419: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0028559938073158264
    2. '(y' → logprob: -6.0028557777404785
    3. ' y' → logprob: -7.8778557777404785
    4. 'find' → logprob: -14.002856254577637
    5. '(' → logprob: -16.37785530090332
    6. '	y' → logprob: -16.37785530090332
    7. ')y' → logprob: -17.00285530090332
    8. 'self' → logprob: -17.12785530090332
    9. '   ' → logprob: -17.25285530090332
    10. '(x' → logprob: -17.62785530090332

Token 420: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.750035285949707
    3. '<|end|>' → logprob: -11.500035285949707
    4. ' )' → logprob: -13.125035285949707
    5. '))' → logprob: -14.875035285949707
    6. '   ' → logprob: -15.000035285949707
    7. ')return' → logprob: -15.125035285949707
    8. '<|end|>' → logprob: -15.875035285949707
    9. '(x' → logprob: -16.000036239624023
    10. ')

' → logprob: -16.000036239624023

Token 421: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008542861323803663
    2. 'results' → logprob: -7.7508544921875
    3. 'answers' → logprob: -8.7508544921875
    4. 'result' → logprob: -9.0008544921875
    5. 'ans' → logprob: -9.2508544921875
    6. 'output' → logprob: -10.6258544921875
    7. 'answer' → logprob: -12.0008544921875
    8. 'res' → logprob: -12.0008544921875
    9. 'uf' → logprob: -12.7508544921875
    10. ' for' → logprob: -12.7508544921875

Token 422: ' �' (ID: 106563)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.5877683758735657
    2. 'for' → logprob: -0.9627683758735657
    3. 'results' → logprob: -3.462768316268921
    4. 'answers' → logprob: -4.2127685546875
    5. 'ans' → logprob: -4.7127685546875
    6. 'res' → logprob: -5.4627685546875
    7. 'result' → logprob: -5.9627685546875
    8. 'answer' → logprob: -8.3377685546875
    9. 'output' → logprob: -8.4627685546875
    10. 'outputs' → logprob: -9.9627685546875

Token 423: '�' (ID: 122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029780574142932892
    2. 'result' → logprob: -4.904780387878418
    3. 'results' → logprob: -5.029780387878418
    4. 'answers' → logprob: -5.654780387878418
    5. 'or' → logprob: -5.904780387878418
    6. 'ans' → logprob: -6.279780387878418
    7. 'res' → logprob: -6.654780387878418
    8. 's' → logprob: -7.029780387878418
    9. 'r' → logprob: -7.029780387878418
    10. ' for' → logprob: -7.154780387878418

Token 424: '在' (ID: 2178)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0671866163611412
    2. ' for' → logprob: -2.9421865940093994
    3. 'or' → logprob: -5.6921868324279785
    4. 'r' → logprob: -5.9421868324279785
    5. 'range' → logprob: -6.9421868324279785
    6. 'result' → logprob: -7.1921868324279785
    7. 'f' → logprob: -7.9421868324279785
    8. 's' → logprob: -7.9421868324279785
    9. 'def' → logprob: -7.9421868324279785
    10. '#' → logprob: -8.06718635559082

Token 425: 'の' (ID: 3385)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9285514950752258
    2. 'range' → logprob: -2.303551435470581
    3. 'in' → logprob: -2.428551435470581
    4. ':' → logprob: -2.553551435470581
    5. ')' → logprob: -2.553551435470581
    6. ' for' → logprob: -3.678551435470581
    7. ' edges' → logprob: -3.803551435470581
    8. ' in' → logprob: -3.928551435470581
    9. 'edges' → logprob: -3.928551435470581
    10. '_edges' → logprob: -3.928551435470581

Token 426: '通' (ID: 9034)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4300912916660309
    2. 'for' → logprob: -1.5550912618637085
    3. 'graph' → logprob: -3.180091381072998
    4. ' edges' → logprob: -3.430091381072998
    5. '_edges' → logprob: -4.430091381072998
    6. 'def' → logprob: -5.055091381072998
    7. 'queries' → logprob: -5.180091381072998
    8. 'range' → logprob: -5.555091381072998
    9. ' for' → logprob: -5.805091381072998
    10. '通' → logprob: -6.305091381072998

Token 427: '路' (ID: 14385)
  Prédit: '路'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '路' → logprob: -0.004970574285835028
    2. '```' → logprob: -5.879970550537109
    3. 'り' → logprob: -6.629970550537109
    4. '#' → logprob: -8.50497055053711
    5. 'ろ' → logprob: -8.62997055053711
    6. 'る' → logprob: -10.00497055053711
    7. 'paths' → logprob: -10.00497055053711
    8. 'path' → logprob: -10.12997055053711
    9. '���' → logprob: -10.25497055053711
    10. '\' → logprob: -10.50497055053711

Token 428: 'の' (ID: 3385)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4385443925857544
    2. ' =' → logprob: -1.0635443925857544
    3. 'の' → logprob: -6.563544273376465
    4. 'edges' → logprob: -6.563544273376465
    5. ')' → logprob: -6.938544273376465
    6. '_edges' → logprob: -7.063544273376465
    7. ',' → logprob: -7.438544273376465
    8. '.' → logprob: -7.563544273376465
    9. '=[]' → logprob: -7.563544273376465
    10. '＝' → logprob: -7.813544273376465

Token 429: '状態' (ID: 175682)
  Prédit: '状態'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '状態' → logprob: -0.24685299396514893
    2. 'state' → logprob: -1.871852993965149
    3. 'for' → logprob: -3.9968528747558594
    4. 'status' → logprob: -4.871852874755859
    5. 'union' → logprob: -4.996852874755859
    6. 'edges' → logprob: -5.121852874755859
    7. 'graph' → logprob: -5.496852874755859
    8. '状' → logprob: -5.871852874755859
    9. 'set' → logprob: -6.121852874755859
    10. 'list' → logprob: -6.246852874755859

Token 430: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8500680923461914
    2. 'for' → logprob: -1.3500680923461914
    3. '=' → logprob: -2.2250680923461914
    4. ')' → logprob: -2.9750680923461914
    5. 'current' → logprob: -2.9750680923461914
    6. 'edges' → logprob: -3.6000680923461914
    7. ',' → logprob: -4.100068092346191
    8. ':' → logprob: -4.850068092346191
    9. '#' → logprob: -4.975068092346191
    10. 'uf' → logprob: -5.225068092346191

Token 431: '管理' (ID: 25105)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0602867491543293
    2. 'union' → logprob: -4.685286521911621
    3. 'build' → logprob: -4.810286521911621
    4. 'def' → logprob: -5.185286521911621
    5. '確認' → logprob: -5.435286521911621
    6. 'all' → logprob: -5.560286521911621
    7. '[]' → logprob: -5.810286521911621
    8. 'checked' → logprob: -6.060286521911621
    9. '```' → logprob: -6.185286521911621
    10. 'graph' → logprob: -6.185286521911621

Token 432: 'する' (ID: 39065)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.4196508526802063
    2. ' uf' → logprob: -1.9196507930755615
    3. ' =' → logprob: -2.0446507930755615
    4. 'current' → logprob: -3.7946507930755615
    5. 'edges' → logprob: -4.044651031494141
    6. 'for' → logprob: -5.169651031494141
    7. ' edges' → logprob: -5.919651031494141
    8. 'u' → logprob: -6.169651031494141
    9. ')' → logprob: -6.169651031494141
    10. 'の' → logprob: -6.919651031494141

Token 433: 'ため' (ID: 103912)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.15562887489795685
    2. ' uf' → logprob: -2.5306289196014404
    3. 'current' → logprob: -3.5306289196014404
    4. 'u' → logprob: -4.530628681182861
    5. 'graph' → logprob: -4.530628681182861
    6. 'edges' → logprob: -5.905628681182861
    7. 'cur' → logprob: -6.405628681182861
    8. '
' → logprob: -7.030628681182861
    9. ' =' → logprob: -7.280628681182861
    10. ' current' → logprob: -7.280628681182861

Token 434: 'の' (ID: 3385)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.02290462888777256
    2. ' uf' → logprob: -4.272904396057129
    3. 'answers' → logprob: -6.522904396057129
    4. 'current' → logprob: -6.647904396057129
    5. 'def' → logprob: -6.772904396057129
    6. 'for' → logprob: -6.897904396057129
    7. 'edges' → logprob: -7.147904396057129
    8. 'ans' → logprob: -7.647904396057129
    9. 'results' → logprob: -8.272904396057129
    10. 'union' → logprob: -8.522904396057129

Token 435: 'セット' (ID: 63738)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.010263236239552498
    2. 'edges' → logprob: -4.885263442993164
    3. 'graph' → logprob: -8.010263442993164
    4. 'for' → logprob: -8.010263442993164
    5. 'union' → logprob: -8.135263442993164
    6. 'current' → logprob: -8.385263442993164
    7. '```' → logprob: -8.510263442993164
    8. 'visited' → logprob: -9.010263442993164
    9. 'ufs' → logprob: -9.135263442993164
    10. 'def' → logprob: -9.135263442993164

Token 436: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4019162356853485
    2. 'active' → logprob: -1.526916265487671
    3. 'edges' → logprob: -2.401916265487671
    4. 'cur' → logprob: -5.276916027069092
    5. 'existing' → logprob: -5.526916027069092
    6. 'now' → logprob: -6.026916027069092
    7. 'currently' → logprob: -6.401916027069092
    8. 'alive' → logprob: -6.401916027069092
    9. 'connected' → logprob: -6.526916027069092
    10. 'present' → logprob: -6.526916027069092

Token 437: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.17311327159404755
    2. 'active' → logprob: -2.7981133460998535
    3. ' current' → logprob: -3.2981133460998535
    4. 'edges' → logprob: -3.4231133460998535
    5. 'cur' → logprob: -5.1731133460998535
    6. 'paths' → logprob: -5.5481133460998535
    7. 'existing' → logprob: -5.9231133460998535
    8. 'roads' → logprob: -6.0481133460998535
    9. 'connected' → logprob: -6.1731133460998535
    10. 'present' → logprob: -6.2981133460998535

Token 438: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.010056142695248127
    2. ' =' → logprob: -5.135056018829346
    3. '_' → logprob: -6.010056018829346
    4. '=' → logprob: -7.510056018829346
    5. 'edges' → logprob: -8.010056495666504
    6. '_paths' → logprob: -8.135056495666504
    7. '_set' → logprob: -8.885056495666504
    8. '_connections' → logprob: -9.135056495666504
    9. '_ro' → logprob: -9.260056495666504
    10. '=set' → logprob: -10.385056495666504

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341254711151123
    2. '=' → logprob: -1.3134125471115112
    3. '=set' → logprob: -8.8134126663208
    4. '＝' → logprob: -14.0634126663208
    5. 's' → logprob: -14.3134126663208
    6. '={}' → logprob: -15.3134126663208
    7. 'set' → logprob: -15.5634126663208
    8. '=[]' → logprob: -16.438411712646484
    9. ' ' → logprob: -16.438411712646484
    10. ')' → logprob: -17.313411712646484

Token 440: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0011899876408278942
    2. '{' → logprob: -7.001190185546875
    3. ' set' → logprob: -8.501190185546875
    4. '{}' → logprob: -9.501190185546875
    5. '(set' → logprob: -15.876190185546875
    6. '	set' → logprob: -16.126190185546875
    7. '=set' → logprob: -16.626190185546875
    8. '{s' → logprob: -16.876190185546875
    9. ' {' → logprob: -17.251190185546875
    10. ')set' → logprob: -17.501190185546875

Token 441: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001434690784662962
    2. '()
' → logprob: -9.375143051147461
    3. '(' → logprob: -10.000143051147461
    4. '(edges' → logprob: -11.750143051147461
    5. '((' → logprob: -13.125143051147461
    6. '([(' → logprob: -14.125143051147461
    7. '()\' → logprob: -14.125143051147461
    8. '()

' → logprob: -14.250143051147461
    9. '();' → logprob: -14.750143051147461
    10. '()
' → logprob: -16.00014305114746

Token 442: 'uf' (ID: 1427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3227364122867584
    2. 'result' → logprob: -2.4477365016937256
    3. 'answers' → logprob: -2.4477365016937256
    4. 'results' → logprob: -3.1977365016937256
    5. 'output' → logprob: -3.5727365016937256
    6. 'answer' → logprob: -3.9477365016937256
    7. 'ans' → logprob: -4.9477362632751465
    8. 'res' → logprob: -5.5727362632751465
    9. ' for' → logprob: -6.3227362632751465
    10. 'outputs' → logprob: -7.0727362632751465

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31394141912460327
    2. ' =' → logprob: -1.313941478729248
    3. '(' → logprob: -7.688941478729248
    4. '(n' → logprob: -9.06394100189209
    5. '=n' → logprob: -9.56394100189209
    6. '.' → logprob: -11.18894100189209
    7. 'n' → logprob: -12.06394100189209
    8. ')' → logprob: -12.31394100189209
    9. '＝' → logprob: -12.93894100189209
    10. ',' → logprob: -13.31394100189209

Token 444: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.0004306692280806601
    2. ' Union' → logprob: -7.750430583953857
    3. '_union' → logprob: -18.625431060791016
    4. '   ' → logprob: -19.250431060791016
    5. 'Unity' → logprob: -19.250431060791016
    6. ' union' → logprob: -19.750431060791016
    7. 'union' → logprob: -19.875431060791016
    8. ' ' → logprob: -20.125431060791016
    9. ''Union' → logprob: -20.875431060791016
    10. 'Uni' → logprob: -21.375431060791016

Token 445: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -7.896309739408025e-07
    2. '-F' → logprob: -15.250000953674316
    3. '(n' → logprob: -15.625000953674316
    4. 'Fold' → logprob: -16.375
    5. 'F' → logprob: -16.625
    6. ' Find' → logprob: -17.0
    7. 'Fit' → logprob: -17.25
    8. 'Fin' → logprob: -17.625
    9. '```' → logprob: -17.875
    10. 'find' → logprob: -17.875

Token 446: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.7697225252486533e-06
    2. 'n' → logprob: -13.125003814697266
    3. '(' → logprob: -13.500003814697266
    4. '(
' → logprob: -15.125003814697266
    5. ' (' → logprob: -16.750003814697266
    6. '((' → logprob: -18.000003814697266
    7. '[n' → logprob: -19.250003814697266
    8. ' n' → logprob: -20.250003814697266
    9. '```' → logprob: -20.250003814697266
    10. ')n' → logprob: -21.000003814697266

Token 447: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')n' → logprob: -14.62500286102295
    4. '))' → logprob: -15.00000286102295
    5. ')
' → logprob: -15.25000286102295
    6. ')`' → logprob: -16.500003814697266
    7. '+' → logprob: -16.625003814697266
    8. 'n' → logprob: -17.875003814697266
    9. '）' → logprob: -18.750003814697266
    10. ')

' → logprob: -18.875003814697266

Token 448: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1292804479598999
    2. '
' → logprob: -2.5042805671691895
    3. ' for' → logprob: -3.2542805671691895
    4. ' 
' → logprob: -7.7542805671691895
    5. '  
' → logprob: -8.879280090332031
    6. '\n' → logprob: -9.004280090332031
    7. '```' → logprob: -9.254280090332031
    8. '<|end|>' → logprob: -10.129280090332031
    9. '' → logprob: -10.629280090332031
    10. '    
' → logprob: -11.379280090332031

Token 449: ' q' (ID: 2335)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05931873619556427
    2. ' t' → logprob: -3.184318780899048
    3. '(t' → logprob: -4.809318542480469
    4. 'i' → logprob: -5.059318542480469
    5. ' i' → logprob: -7.809318542480469
    6. '_,' → logprob: -8.059318542480469
    7. ' (' → logprob: -8.434318542480469
    8. 'query' → logprob: -8.559318542480469
    9. 'q' → logprob: -9.184318542480469
    10. '_i' → logprob: -9.309318542480469

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01607249490916729
    2. 'in' → logprob: -4.2660722732543945
    3. ' ' → logprob: -7.1410722732543945
    4. ',' → logprob: -7.3910722732543945
    5. 'i' → logprob: -9.016072273254395
    6. ' i' → logprob: -9.141072273254395
    7. '_' → logprob: -9.641072273254395
    8. 'u' → logprob: -10.141072273254395
    9. ' ,' → logprob: -10.141072273254395
    10. ')' → logprob: -10.641072273254395

Token 451: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0019032935379073024
    2. 'range' → logprob: -6.501903057098389
    3. ' queries' → logprob: -7.876903057098389
    4. 'query' → logprob: -11.751903533935547
    5. ' range' → logprob: -11.751903533935547
    6. 'requests' → logprob: -13.251903533935547
    7. 'questions' → logprob: -13.501903533935547
    8. '(' → logprob: -13.626903533935547
    9. 'enumer' → logprob: -14.876903533935547
    10. '(range' → logprob: -15.251903533935547

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002912486088462174
    2. ':
' → logprob: -8.250290870666504
    3. ',' → logprob: -11.000290870666504
    4. '):' → logprob: -12.000290870666504
    5. ' :' → logprob: -12.750290870666504
    6. '[' → logprob: -13.375290870666504
    7. ',:' → logprob: -14.000290870666504
    8. '   ' → logprob: -15.125290870666504
    9. '[:' → logprob: -15.375290870666504
    10. '：' → logprob: -15.625290870666504

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030233705416321754
    2. ' t' → logprob: -3.78023362159729
    3. '    
' → logprob: -5.530233860015869
    4. ' if' → logprob: -7.280233860015869
    5. '    ' → logprob: -7.530233860015869
    6. ',' → logprob: -7.655233860015869
    7. '(t' → logprob: -8.155233383178711
    8. ' 
' → logprob: -8.280233383178711
    9. '	t' → logprob: -8.280233383178711
    10. ',t' → logprob: -9.155233383178711

Token 454: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.017463238909840584
    2. 't' (adapté à ' t') → logprob: -4.767463207244873
    3. '   ' → logprob: -4.892463207244873
    4. '(t' → logprob: -7.267463207244873
    5. '	t' → logprob: -8.767463684082031
    6. ' (' → logprob: -9.017463684082031
    7. ' ' → logprob: -9.142463684082031
    8. '    ' → logprob: -9.392463684082031
    9. ' if' → logprob: -9.517463684082031
    10. ' 
' → logprob: -11.142463684082031

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032392668072134256
    2. ' =' → logprob: -6.003239154815674
    3. ' ,' → logprob: -7.753239154815674
    4. '=' → logprob: -8.253239631652832
    5. '   ' → logprob: -10.128239631652832
    6. ' ' → logprob: -11.253239631652832
    7. '[' → logprob: -12.128239631652832
    8. ')' → logprob: -12.878239631652832
    9. ',t' → logprob: -13.003239631652832
    10. '    ' → logprob: -13.128239631652832

Token 456: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3132653534412384
    2. ' u' → logprob: -1.313265323638916
    3. '   ' → logprob: -13.563265800476074
    4. 'q' → logprob: -14.063265800476074
    5. '	u' → logprob: -14.438265800476074
    6. '    ' → logprob: -15.063265800476074
    7. '_u' → logprob: -15.313265800476074
    8. '*u' → logprob: -15.563265800476074
    9. ' q' → logprob: -16.063264846801758
    10. ' ' → logprob: -16.188264846801758

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012844942102674395
    2. ' ,' → logprob: -9.000128746032715
    3. '-' → logprob: -12.875128746032715
    4. ',v' → logprob: -13.625128746032715
    5. '=' → logprob: -15.250128746032715
    6. '   ' → logprob: -15.375128746032715
    7. '_,' → logprob: -15.375128746032715
    8. ',u' → logprob: -15.375128746032715
    9. ' =' → logprob: -15.625128746032715
    10. ',
' → logprob: -16.8751277923584

Token 458: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007607816252857447
    2. ' v' → logprob: -4.882607936859131
    3. 'u' → logprob: -14.382607460021973
    4. '	v' → logprob: -15.257607460021973
    5. '   ' → logprob: -15.507607460021973
    6. ',v' → logprob: -15.757607460021973
    7. 'q' → logprob: -16.25760841369629
    8. ' ' → logprob: -16.38260841369629
    9. 'w' → logprob: -16.88260841369629
    10. '_v' → logprob: -17.00760841369629

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019806798547506332
    2. '=' → logprob: -4.144806861877441
    3. '   ' → logprob: -5.644806861877441
    4. ':' → logprob: -9.394806861877441
    5. ',' → logprob: -9.769806861877441
    6. ')' → logprob: -10.394806861877441
    7. ' ' → logprob: -11.019806861877441
    8. ' in' → logprob: -11.144806861877441
    9. '    ' → logprob: -11.394806861877441
    10. ' =
' → logprob: -12.519806861877441

Token 460: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023267026990652084
    2. ' q' → logprob: -3.7732670307159424
    3. '(q' → logprob: -11.273266792297363
    4. '   ' → logprob: -12.648266792297363
    5. ' (' → logprob: -12.773266792297363
    6. 't' → logprob: -14.398266792297363
    7. '	q' → logprob: -14.398266792297363
    8. ' ' → logprob: -14.773266792297363
    9. 'u' → logprob: -15.023266792297363
    10. '(' → logprob: -15.398266792297363

Token 461: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2034607082605362
    2. '
' → logprob: -1.953460693359375
    3. ':' → logprob: -3.953460693359375
    4. '    
' → logprob: -4.578460693359375
    5. ':
' → logprob: -4.953460693359375
    6. '  
' → logprob: -5.953460693359375
    7. ' 
' → logprob: -6.953460693359375
    8. ',' → logprob: -7.703460693359375
    9. '<|end|>' → logprob: -7.703460693359375
    10. '   
' → logprob: -7.828460693359375

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5826616287231445
    2. ' 
' → logprob: -1.3326616287231445
    3. '    
' → logprob: -2.4576616287231445
    4. ' ' → logprob: -2.9576616287231445
    5. ' if' → logprob: -4.2076616287231445
    6. '     
' → logprob: -4.7076616287231445
    7. '    ' → logprob: -4.9576616287231445
    8. '   
' → logprob: -5.8326616287231445
    9. '  
' → logprob: -5.9576616287231445
    10. ',' → logprob: -7.0826616287231445

Token 463: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8889065980911255
    2. '   ' → logprob: -1.0139065980911255
    3. 'u' → logprob: -2.013906478881836
    4. 'if' (adapté à ' if') → logprob: -2.888906478881836
    5. ' u' → logprob: -3.513906478881836
    6. '    ' → logprob: -5.513906478881836
    7. ' 
' → logprob: -6.763906478881836
    8. ' ' → logprob: -7.638906478881836
    9. '    
' → logprob: -7.888906478881836
    10. '	if' → logprob: -8.388906478881836

Token 464: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04864992946386337
    2. 't' → logprob: -3.048650026321411
    3. ' u' → logprob: -11.048649787902832
    4. ' ' → logprob: -11.173649787902832
    5. '1' → logprob: -11.673649787902832
    6. '	t' → logprob: -11.798649787902832
    7. 'u' → logprob: -12.173649787902832
    8. '   ' → logprob: -13.048649787902832
    9. '    ' → logprob: -13.173649787902832
    10. ' (' → logprob: -13.298649787902832

Token 465: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0021918986458331347
    2. '==' → logprob: -6.12719202041626
    3. ' ' → logprob: -12.502191543579102
    4. '1' → logprob: -13.752191543579102
    5. '[' → logprob: -14.252191543579102
    6. ' =' → logprob: -15.502191543579102
    7. '```' → logprob: -15.502191543579102
    8. '=' → logprob: -15.627191543579102
    9. ' ==
' → logprob: -15.752191543579102
    10. ')==' → logprob: -15.877191543579102

Token 466: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002204855205491185
    2. ' ' → logprob: -6.127204895019531
    3. '2' → logprob: -11.127204895019531
    4. '0' → logprob: -12.752204895019531
    5. '3' → logprob: -14.002204895019531
    6. '   ' → logprob: -15.064704895019531
    7. '  ' → logprob: -15.439704895019531
    8. '=' → logprob: -15.564704895019531
    9. ')' → logprob: -16.75220489501953
    10. '```' → logprob: -16.75220489501953

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. '2' → logprob: -10.375040054321289
    3. ' ' → logprob: -12.125040054321289
    4. '0' → logprob: -13.250040054321289
    5. '3' → logprob: -13.500040054321289
    6. '' → logprob: -16.12504005432129
    7. '```' → logprob: -16.62504005432129
    8. '=' → logprob: -16.68754005432129
    9. '   ' → logprob: -17.06254005432129
    10. '
' → logprob: -17.56254005432129

Token 468: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38732242584228516
    2. ':
' → logprob: -1.1373224258422852
    3. '       ' → logprob: -8.887322425842285
    4. ' and' → logprob: -9.137322425842285
    5. '   ' → logprob: -9.387322425842285
    6. '):
' → logprob: -9.637322425842285
    7. '):' → logprob: -11.262322425842285
    8. ':
' → logprob: -11.262322425842285
    9. ' :
' → logprob: -11.637322425842285
    10. ':

' → logprob: -11.887322425842285

Token 469: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3935225307941437
    2. '       ' → logprob: -1.2685225009918213
    3. ' if' → logprob: -4.1435227394104
    4. ' current' → logprob: -4.2685227394104
    5. ' uf' → logprob: -5.8935227394104
    6. '    
' → logprob: -6.1435227394104
    7. '        
' → logprob: -6.2685227394104
    8. 'uf' → logprob: -6.3935227394104
    9. '
' → logprob: -6.5185227394104
    10. '    ' → logprob: -7.1435227394104

Token 470: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1317315101623535
    2. 'uf' → logprob: -1.7567315101623535
    3. 'current' → logprob: -1.8817315101623535
    4. 'u' → logprob: -1.8817315101623535
    5. ' current' → logprob: -2.2567315101623535
    6. ' uf' → logprob: -3.5067315101623535
    7. 'if' → logprob: -3.7567315101623535
    8. ' u' → logprob: -3.8817315101623535
    9. ' if' → logprob: -4.3817315101623535
    10. '       ' → logprob: -5.0067315101623535

Token 471: ' 通' (ID: 52461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4081166982650757
    2. 'if' → logprob: -1.9081166982650757
    3. ' current' → logprob: -1.9081166982650757
    4. 'uf' → logprob: -1.9081166982650757
    5. 'u' → logprob: -2.2831168174743652
    6. ' uf' → logprob: -2.6581168174743652
    7. 'current' → logprob: -2.7831168174743652
    8. ' u' → logprob: -2.9081168174743652
    9. '   ' → logprob: -3.9081168174743652
    10. '       ' → logprob: -7.658116817474365

Token 472: '路' (ID: 14385)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.8599176406860352
    2. '   ' → logprob: -1.1099176406860352
    3. '       ' → logprob: -2.234917640686035
    4. 'current' → logprob: -3.359917640686035
    5. ' ' → logprob: -4.484917640686035
    6. '    ' → logprob: -4.734917640686035
    7. ' current' → logprob: -4.859917640686035
    8. ')' → logprob: -4.984917640686035
    9. '_edge' → logprob: -5.109917640686035
    10. '```' → logprob: -5.234917640686035

Token 473: '建' (ID: 12340)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.11622336506843567
    2. '_key' → logprob: -3.1162233352661133
    3. ' =' → logprob: -3.7412233352661133
    4. '.' → logprob: -4.991223335266113
    5. '   ' → logprob: -5.241223335266113
    6. '.remove' → logprob: -5.366223335266113
    7. '.union' → logprob: -5.616223335266113
    8. 'add' → logprob: -5.866223335266113
    9. ')' → logprob: -6.491223335266113
    10. 'key' → logprob: -6.491223335266113

Token 474: '設' (ID: 41701)
  Prédit: '設'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '設' → logprob: -0.4254762828350067
    2. '立' → logprob: -1.800476312637329
    3. 'て' → logprob: -2.300476312637329
    4. '   ' → logprob: -3.300476312637329
    5. '築' → logprob: -3.925476312637329
    6. '       ' → logprob: -4.80047607421875
    7. 'って' → logprob: -5.42547607421875
    8. '```' → logprob: -6.17547607421875
    9. 'った' → logprob: -6.42547607421875
    10. 'く' → logprob: -6.80047607421875

Token 475: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9726478457450867
    2. '   ' → logprob: -1.0976479053497314
    3. '       ' → logprob: -2.0976479053497314
    4. '    
' → logprob: -2.7226479053497314
    5. '        
' → logprob: -3.9726479053497314
    6. ' current' → logprob: -4.097647666931152
    7. 'current' → logprob: -4.222647666931152
    8. ':
' → logprob: -4.972647666931152
    9. ' =' → logprob: -5.222647666931152
    10. ':' → logprob: -5.347647666931152

Token 476: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8725751638412476
    2. '       ' → logprob: -0.9975751638412476
    3. '   ' → logprob: -1.8725751638412476
    4. ')' → logprob: -4.247575283050537
    5. '        
' → logprob: -4.372575283050537
    6. ')
' → logprob: -4.997575283050537
    7. '    
' → logprob: -5.122575283050537
    8. ' if' → logprob: -5.247575283050537
    9. '  
' → logprob: -6.247575283050537
    10. ' current' → logprob: -6.247575283050537

Token 477: ' current' (ID: 2208)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.591267466545105
    2. 'if' → logprob: -1.716267466545105
    3. 'current' (adapté à ' current') → logprob: -1.966267466545105
    4. '   ' → logprob: -2.8412675857543945
    5. 'uf' → logprob: -3.0912675857543945
    6. ' if' → logprob: -4.8412675857543945
    7. ' current' → logprob: -4.9662675857543945
    8. ' u' → logprob: -5.4662675857543945
    9. '       ' → logprob: -6.4662675857543945
    10. ' uf' → logprob: -6.4662675857543945

Token 478: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.125004768371582
    3. '_edge' → logprob: -13.125004768371582
    4. '_ed' → logprob: -15.500004768371582
    5. 'edges' → logprob: -15.750004768371582
    6. ')_' → logprob: -15.750004768371582
    7. '```' → logprob: -16.0000057220459
    8. '_vertices' → logprob: -16.3750057220459
    9. '_nodes' → logprob: -16.7500057220459
    10. '_connections' → logprob: -17.1250057220459

Token 479: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002631238894537091
    2. '.' → logprob: -8.250263214111328
    3. ' .' → logprob: -13.375263214111328
    4. ').' → logprob: -16.375263214111328
    5. '.union' → logprob: -17.000263214111328
    6. 'add' → logprob: -17.250263214111328
    7. '.Add' → logprob: -17.500263214111328
    8. '.remove' → logprob: -17.625263214111328
    9. '.ad' → logprob: -17.625263214111328
    10. '.append' → logprob: -17.750263214111328

Token 480: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015040287980809808
    2. '(' → logprob: -6.501503944396973
    3. '(u' → logprob: -13.876503944396973
    4. ' ((' → logprob: -14.251503944396973
    5. ' (' → logprob: -17.00150489807129
    6. '(((' → logprob: -17.37650489807129
    7. '(
' → logprob: -17.50150489807129
    8. ' ' → logprob: -18.00150489807129
    9. '(('' → logprob: -19.75150489807129
    10. '((_' → logprob: -19.75150489807129

Token 481: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00010044389637187123
    2. ' u' → logprob: -9.500100135803223
    3. '(u' → logprob: -10.625100135803223
    4. '   ' → logprob: -13.750100135803223
    5. '	u' → logprob: -16.12510108947754
    6. '[u' → logprob: -16.87510108947754
    7. ',u' → logprob: -17.50010108947754
    8. ' ' → logprob: -18.62510108947754
    9. ' (' → logprob: -18.62510108947754
    10. '_u' → logprob: -19.37510108947754

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009432652732357383
    2. '-' → logprob: -7.500943183898926
    3. ' ,' → logprob: -8.500943183898926
    4. ',v' → logprob: -8.625943183898926
    5. ' -' → logprob: -12.750943183898926
    6. ',u' → logprob: -13.500943183898926
    7. ',
' → logprob: -13.625943183898926
    8. ' ' → logprob: -14.625943183898926
    9. '   ' → logprob: -15.000943183898926
    10. '```' → logprob: -15.125943183898926

Token 483: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005233882926404476
    2. ' v' → logprob: -5.2552337646484375
    3. '	v' → logprob: -18.255233764648438
    4. ',v' → logprob: -19.755233764648438
    5. ' ' → logprob: -19.880233764648438
    6. ')v' → logprob: -20.880233764648438
    7. '   ' → logprob: -21.130233764648438
    8. '
' → logprob: -21.505233764648438
    9. ' ' → logprob: -21.630233764648438
    10. '    ' → logprob: -21.880233764648438

Token 484: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00997352134436369
    2. '))
' → logprob: -4.634973526000977
    3. ')' → logprob: -8.509973526000977
    4. ')
' → logprob: -12.509973526000977
    5. '       ' → logprob: -12.509973526000977
    6. ' ))' → logprob: -12.634973526000977
    7. '   ' → logprob: -13.134973526000977
    8. '))

' → logprob: -13.759973526000977
    9. ')))' → logprob: -14.384973526000977
    10. '));' → logprob: -14.384973526000977

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038575783371925354
    2. 'uf' → logprob: -4.163575649261475
    3. '        
' → logprob: -4.538575649261475
    4. ' uf' → logprob: -5.413575649261475
    5. '   ' → logprob: -5.538575649261475
    6. '
' → logprob: -7.163575649261475
    7. '  
' → logprob: -7.663575649261475
    8. '    
' → logprob: -7.788575649261475
    9. '           ' → logprob: -8.538576126098633
    10. ',' → logprob: -8.538576126098633

Token 486: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0061704013496637344
    2. ' uf' → logprob: -5.256170272827148
    3. '   ' → logprob: -7.631170272827148
    4. '       ' → logprob: -7.881170272827148
    5. '           ' → logprob: -10.506170272827148
    6. 'ufs' → logprob: -11.756170272827148
    7. ' ' → logprob: -12.256170272827148
    8. '    ' → logprob: -12.506170272827148
    9. '               ' → logprob: -12.506170272827148
    10. 'if' → logprob: -12.756170272827148

Token 487: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -0.00011129142512800172
    2. '.' → logprob: -9.25011157989502
    3. '.union' → logprob: -11.75011157989502
    4. ' .' → logprob: -13.00011157989502
    5. '.u' → logprob: -13.37511157989502
    6. '.uni' → logprob: -14.12511157989502
    7. 'un' → logprob: -14.25011157989502
    8. '.ut' → logprob: -14.87511157989502
    9. '.um' → logprob: -15.25011157989502
    10. '.unshift' → logprob: -15.37511157989502

Token 488: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -6.802049756515771e-05
    2. 'ion' → logprob: -10.250067710876465
    3. 'it' → logprob: -11.125067710876465
    4. 'ate' → logprob: -12.125067710876465
    5. '```' → logprob: -12.750067710876465
    6. ' ite' → logprob: -12.875067710876465
    7. '   ' → logprob: -14.125067710876465
    8. 'te' → logprob: -14.125067710876465
    9. 'ute' → logprob: -14.500067710876465
    10. ' unite' → logprob: -14.500067710876465

Token 489: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.8889261304575484e-06
    2. 'u' → logprob: -12.625003814697266
    3. '(' → logprob: -14.750003814697266
    4. ' u' → logprob: -16.750003814697266
    5. '((' → logprob: -16.750003814697266
    6. ' (' → logprob: -17.500003814697266
    7. '(
' → logprob: -18.125003814697266
    8. '	u' → logprob: -20.000003814697266
    9. ',u' → logprob: -20.250003814697266
    10. '[u' → logprob: -21.000003814697266

Token 490: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3469783663749695
    2. ',' → logprob: -1.9719784259796143
    3. ' -' → logprob: -1.9719784259796143
    4. ' ,' → logprob: -4.221978187561035
    5. ' ' → logprob: -9.596978187561035
    6. ',v' → logprob: -10.596978187561035
    7. '-,' → logprob: -10.846978187561035
    8. 'u' → logprob: -12.346978187561035
    9. ' -,' → logprob: -12.346978187561035
    10. ',u' → logprob: -12.471978187561035

Token 491: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013263145228847861
    2. ' v' → logprob: -6.626326084136963
    3. '	v' → logprob: -15.501326560974121
    4. ')v' → logprob: -16.626325607299805
    5. '(v' → logprob: -17.251325607299805
    6. '   ' → logprob: -17.251325607299805
    7. '
' → logprob: -18.126325607299805
    8. ',v' → logprob: -18.751325607299805
    9. 'u' → logprob: -19.251325607299805
    10. ')' → logprob: -19.251325607299805

Token 492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6537622034084052e-05
    2. ')
' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.25002670288086
    4. '))' → logprob: -16.00002670288086
    5. '）' → logprob: -16.00002670288086
    6. ')
' → logprob: -17.25002670288086
    7. ')`' → logprob: -17.75002670288086
    8. '   ' → logprob: -17.87502670288086
    9. '`)' → logprob: -18.00002670288086
    10. ')#' → logprob: -18.12502670288086

Token 493: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.803236722946167
    2. '<|end|>' → logprob: -1.178236722946167
    3. 'elif' → logprob: -2.553236722946167
    4. ')' → logprob: -3.178236722946167
    5. '   ' → logprob: -3.553236722946167
    6. '  
' → logprob: -3.678236722946167
    7. '\n' → logprob: -3.803236722946167
    8. '    
' → logprob: -4.053236961364746
    9. ' 
' → logprob: -4.428236961364746
    10. ' elif' → logprob: -4.553236961364746

Token 494: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5064437389373779
    2. 'elif' (adapté à ' elif') → logprob: -1.006443738937378
    3. '   ' → logprob: -3.631443738937378
    4. ' ' → logprob: -5.881443977355957
    5. '	elif' → logprob: -6.881443977355957
    6. '
' → logprob: -7.506443977355957
    7. '    
' → logprob: -8.131443977355957
    8. ' else' → logprob: -8.881443977355957
    9. '  
' → logprob: -9.131443977355957
    10. ')' → logprob: -9.256443977355957

Token 495: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.22542385756969452
    2. 't' → logprob: -1.600423812866211
    3. ' ' → logprob: -12.725423812866211
    4. '1' → logprob: -13.100423812866211
    5. '   ' → logprob: -13.475423812866211
    6. '2' → logprob: -13.850423812866211
    7. '	t' → logprob: -13.975423812866211
    8. '    ' → logprob: -14.850423812866211
    9. 'elif' → logprob: -14.975423812866211
    10. ' (' → logprob: -14.975423812866211

Token 496: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005234952084720135
    2. '==' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.130234718322754
    4. ' =' → logprob: -15.880234718322754
    5. '=' → logprob: -16.75523567199707
    6. ' ' → logprob: -17.00523567199707
    7. ')==' → logprob: -17.13023567199707
    8. ' ===' → logprob: -17.50523567199707
    9. ']==' → logprob: -17.88023567199707
    10. '	' → logprob: -17.88023567199707

Token 497: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04377640783786774
    2. '3' → logprob: -3.668776512145996
    3. ' ' → logprob: -4.168776512145996
    4. '1' → logprob: -6.293776512145996
    5. '0' → logprob: -12.793776512145996
    6. '   ' → logprob: -13.918776512145996
    7. '```' → logprob: -14.106276512145996
    8. '  ' → logprob: -15.481276512145996
    9. '4' → logprob: -15.856276512145996
    10. '	' → logprob: -16.29377555847168

Token 498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008420264348387718
    2. '1' → logprob: -7.250842094421387
    3. ' ' → logprob: -9.000842094421387
    4. '3' → logprob: -11.750842094421387
    5. '   ' → logprob: -15.438342094421387
    6. '0' → logprob: -15.438342094421387
    7. '```' → logprob: -15.563342094421387
    8. '２' → logprob: -16.93834114074707
    9. '  ' → logprob: -17.12584114074707
    10. '(' → logprob: -17.50084114074707

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03858598694205284
    2. ':
' → logprob: -3.288585901260376
    3. '   ' → logprob: -7.913586139678955
    4. '       ' → logprob: -9.038585662841797
    5. ',' → logprob: -10.038585662841797
    6. ' :' → logprob: -12.288585662841797
    7. ' ==' → logprob: -12.913585662841797
    8. ' :
' → logprob: -13.663585662841797
    9. ':
' → logprob: -13.663585662841797
    10. '=' → logprob: -13.913585662841797

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15995648503303528
    2. '   ' → logprob: -2.034956455230713
    3. '#' → logprob: -4.784956455230713
    4. ' if' → logprob: -5.909956455230713
    5. 'if' → logprob: -5.909956455230713
    6. 'current' → logprob: -6.409956455230713
    7. ' current' → logprob: -6.784956455230713
    8. ' #' → logprob: -8.784956932067871
    9. ':
' → logprob: -9.534956932067871
    10. '
' → logprob: -9.659956932067871

Token 501: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7357073426246643
    2. 'current' → logprob: -1.3607072830200195
    3. ' current' → logprob: -2.2357072830200195
    4. 'if' → logprob: -2.4857072830200195
    5. '   ' → logprob: -3.2357072830200195
    6. ' if' → logprob: -3.9857072830200195
    7. ' #' → logprob: -4.7357072830200195
    8. '       ' → logprob: -4.9857072830200195
    9. '(current' → logprob: -8.73570728302002
    10. 'pass' → logprob: -9.11070728302002

Token 502: ' 通' (ID: 52461)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1533881425857544
    2. 'current' → logprob: -2.028388023376465
    3. ' if' → logprob: -5.153388023376465
    4. '#' → logprob: -6.278388023376465
    5. ' #' → logprob: -6.403388023376465
    6. 'if' → logprob: -7.153388023376465
    7. '   ' → logprob: -8.278388023376465
    8. ' ' → logprob: -9.903388023376465
    9. '(current' → logprob: -9.903388023376465
    10. '
' → logprob: -10.153388023376465

Token 503: '路' (ID: 14385)
  Prédit: '路'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '路' → logprob: -0.03287728503346443
    2. 'path' → logprob: -5.157877445220947
    3. 'current' → logprob: -5.657877445220947
    4. 'pass' → logprob: -5.907877445220947
    5. 'route' → logprob: -6.032877445220947
    6. 'road' → logprob: -6.032877445220947
    7. 'ru' → logprob: -6.157877445220947
    8. 'ways' → logprob: -7.032877445220947
    9. '途' → logprob: -7.220377445220947
    10. 'り' → logprob: -7.470377445220947

Token 504: '破' (ID: 18311)
  Prédit: '取り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '取り' → logprob: -0.5179479718208313
    2. '削' → logprob: -2.0179479122161865
    3. '破' → logprob: -2.5179479122161865
    4. '撤' → logprob: -2.7679479122161865
    5. '\xe5\xa3' → logprob: -3.0179479122161865
    6. '切' → logprob: -3.8929479122161865
    7. '\xe5\xbb' → logprob: -4.142948150634766
    8. 'の' → logprob: -4.267948150634766
    9. 'を' → logprob: -4.767948150634766
    10. '   ' → logprob: -5.267948150634766

Token 505: '�' (ID: 10392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe5\xa3' → logprob: -0.030663389712572098
    2. '\xe6\xa3' → logprob: -4.53066349029541
    3. '除' → logprob: -4.65566349029541
    4. '```' → logprob: -6.28066349029541
    5. 'st' → logprob: -6.40566349029541
    6. 'ru' → logprob: -6.53066349029541
    7. 'truction' → logprob: -7.40566349029541
    8. '\xe5\xbb' → logprob: -7.65566349029541
    9. 'r' → logprob: -7.78066349029541
    10. 'rupt' → logprob: -7.90566349029541

Token 506: '�' (ID: 232)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe5\xa3' → logprob: -0.14303529262542725
    2. '\xe6\xa3' → logprob: -2.143035411834717
    3. '除' → logprob: -4.643035411834717
    4. '裂' → logprob: -5.768035411834717
    5. '�' → logprob: -7.268035411834717
    6. '築' → logprob: -8.268034934997559
    7. '断' → logprob: -8.393034934997559
    8. 's' → logprob: -8.393034934997559
    9. 'struction' → logprob: -8.393034934997559
    10. 'ru' → logprob: -8.768034934997559

Token 507: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe5\xa3' → logprob: -0.03172321245074272
    2. '除' → logprob: -3.9067232608795166
    3. '\xe6\xa3' → logprob: -4.7817230224609375
    4. 'truction' → logprob: -7.5317230224609375
    5. '築' → logprob: -7.6567230224609375
    6. '��' → logprob: -8.406723022460938
    7. '裂' → logprob: -8.531723022460938
    8. '�' → logprob: -9.031723022460938
    9. '却' → logprob: -9.156723022460938
    10. 'struction' → logprob: -9.406723022460938

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42347583174705505
    2. 'current' → logprob: -1.1734758615493774
    3. ' current' → logprob: -4.048475742340088
    4. '(current' → logprob: -4.673475742340088
    5. 'remove' → logprob: -5.048475742340088
    6. '   ' → logprob: -7.423475742340088
    7. ' ' → logprob: -7.423475742340088
    8. '      ' → logprob: -7.798475742340088
    9. '.remove' → logprob: -8.298476219177246
    10. '((' → logprob: -9.048476219177246

Token 509: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.034461334347724915
    2. 'if' → logprob: -4.159461498260498
    3. ' current' → logprob: -4.159461498260498
    4. '   ' → logprob: -6.659461498260498
    5. '#' (adapté à ' #') → logprob: -7.534461498260498
    6. ' if' → logprob: -8.03446102142334
    7. '       ' → logprob: -8.90946102142334
    8. 'for' → logprob: -9.40946102142334
    9. '	current' → logprob: -10.28446102142334
    10. '(current' → logprob: -10.53446102142334

Token 510: ' �' (ID: 48031)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3561125695705414
    2. ' current' → logprob: -1.4811125993728638
    3. 'if' → logprob: -2.981112480163574
    4. ' if' → logprob: -4.231112480163574
    5. '   ' → logprob: -5.606112480163574
    6. '#' → logprob: -6.231112480163574
    7. ' u' → logprob: -8.356112480163574
    8. '       ' → logprob: -8.731112480163574
    9. ' #' → logprob: -8.731112480163574
    10. 'u' → logprob: -8.856112480163574

Token 511: '�' (ID: 254)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5597572922706604
    2. '(' → logprob: -1.9347572326660156
    3. ' current' → logprob: -1.9347572326660156
    4. '(
' → logprob: -3.0597572326660156
    5. '(u' → logprob: -3.8097572326660156
    6. 'c' → logprob: -4.059757232666016
    7. 'if' → logprob: -4.434757232666016
    8. ' (' → logprob: -4.809757232666016
    9. 'u' → logprob: -5.184757232666016
    10. '(current' → logprob: -5.434757232666016

Token 512: '�' (ID: 985)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8052237033843994
    2. 'current' → logprob: -0.8052237033843994
    3. ' if' → logprob: -3.5552237033843994
    4. 'if' → logprob: -3.8052237033843994
    5. '(
' → logprob: -4.55522346496582
    6. '   ' → logprob: -4.68022346496582
    7. ' (' → logprob: -5.05522346496582
    8. '(' → logprob: -5.05522346496582
    9. ' u' → logprob: -5.30522346496582
    10. '(u' → logprob: -5.55522346496582

Token 513: '�' (ID: 112)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.783604621887207
    2. ' current' → logprob: -1.408604621887207
    3. '   ' → logprob: -2.658604621887207
    4. 'if' → logprob: -2.783604621887207
    5. '(
' → logprob: -3.283604621887207
    6. ' if' → logprob: -3.533604621887207
    7. ' (' → logprob: -3.783604621887207
    8. '(u' → logprob: -3.908604621887207
    9. '(' → logprob: -4.158604621887207
    10. ' u' → logprob: -4.658604621887207

Token 514: 'に' (ID: 5280)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10516110062599182
    2. '(current' → logprob: -3.105161190032959
    3. '(
' → logprob: -4.355161190032959
    4. 'remove' → logprob: -4.605161190032959
    5. ' current' → logprob: -4.730161190032959
    6. '   ' → logprob: -5.230161190032959
    7. '.remove' → logprob: -5.355161190032959
    8. '(u' → logprob: -5.730161190032959
    9. '(' → logprob: -5.980161190032959
    10. ' (' → logprob: -6.355161190032959

Token 515: '破' (ID: 18311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8018568158149719
    2. 'current' → logprob: -1.0518567562103271
    3. ' current' → logprob: -2.551856756210327
    4. ' if' → logprob: -2.801856756210327
    5. '(current' → logprob: -4.426856994628906
    6. '(u' → logprob: -4.801856994628906
    7. 'pass' → logprob: -4.926856994628906
    8. 'for' → logprob: -5.176856994628906
    9. '#' → logprob: -5.301856994628906
    10. 'remove' → logprob: -5.801856994628906

Token 516: '�' (ID: 10392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe5\xa3' → logprob: -0.4929029047489166
    2. '��' → logprob: -1.8679028749465942
    3. '\xe6\xa3' → logprob: -2.367902994155884
    4. '```' → logprob: -2.617902994155884
    5. '���' → logprob: -4.117902755737305
    6. '除' → logprob: -4.242902755737305
    7. '((' → logprob: -4.492902755737305
    8. '�' → logprob: -4.992902755737305
    9. '(' → logprob: -5.367902755737305
    10. 'く' → logprob: -5.992902755737305

Token 517: '�' (ID: 232)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.8541433215141296
    2. '除' → logprob: -1.4791433811187744
    3. 'く' → logprob: -2.1041433811187744
    4. '��' → logprob: -3.1041433811187744
    5. '\xe5\xa3' → logprob: -3.4791433811187744
    6. 'か' → logprob: -3.7291433811187744
    7. '�' → logprob: -4.229143142700195
    8. '���' → logprob: -4.354143142700195
    9. '\xe6\xa3' → logprob: -4.604143142700195
    10. '(' → logprob: -4.604143142700195

Token 518: 'し' (ID: 3829)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.3291414976119995
    2. 'current' → logprob: -1.4541414976119995
    3. '((' → logprob: -1.5791414976119995
    4. '(u' → logprob: -2.079141616821289
    5. 'く' → logprob: -3.204141616821289
    6. '除' → logprob: -3.454141616821289
    7. '   ' → logprob: -4.454141616821289
    8. 'す' → logprob: -5.079141616821289
    9. '       ' → logprob: -5.079141616821289
    10. 'き' → logprob: -5.079141616821289

Token 519: 'よう' (ID: 72683)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.8838061690330505
    2. ' (' → logprob: -1.5088062286376953
    3. '       ' → logprob: -2.2588062286376953
    4. '(' → logprob: -2.5088062286376953
    5. '   ' → logprob: -3.2588062286376953
    6. ' current' → logprob: -3.3838062286376953
    7. 'current' → logprob: -3.7588062286376953
    8. '((' → logprob: -4.508806228637695
    9. '(current' → logprob: -4.883806228637695
    10. ' ' → logprob: -5.258806228637695

Token 520: 'として' (ID: 176315)
  Prédit: 'と'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'と' → logprob: -0.7067820429801941
    2. 'として' → logprob: -1.3317821025848389
    3. '((' → logprob: -2.956782102584839
    4. '       ' → logprob: -3.081782102584839
    5. '(u' → logprob: -3.206782102584839
    6. '   ' → logprob: -3.331782102584839
    7. '           ' → logprob: -4.20678186416626
    8. '(' → logprob: -4.33178186416626
    9. '#' → logprob: -4.83178186416626
    10. 'う' → logprob: -5.20678186416626

Token 521: 'も' (ID: 8446)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.26532429456710815
    2. '(' → logprob: -1.890324354171753
    3. ' (' → logprob: -3.265324354171753
    4. '   ' → logprob: -4.515324115753174
    5. '(v' → logprob: -4.765324115753174
    6. 'current' → logprob: -5.265324115753174
    7. '(current' → logprob: -5.890324115753174
    8. '       ' → logprob: -6.265324115753174
    9. ' current' → logprob: -6.265324115753174
    10. 'if' → logprob: -6.265324115753174

Token 522: 'Union' (ID: 39222)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.688913106918335
    2. ' (' → logprob: -0.813913106918335
    3. '(' → logprob: -3.688913106918335
    4. ' if' → logprob: -4.563913345336914
    5. ' not' → logprob: -4.938913345336914
    6. '(v' → logprob: -5.938913345336914
    7. ' ' → logprob: -6.438913345336914
    8. '   ' → logprob: -6.688913345336914
    9. 'if' → logprob: -6.938913345336914
    10. 'not' → logprob: -7.063913345336914

Token 523: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00048310417332686484
    2. '-F' → logprob: -8.375483512878418
    3. 'F' → logprob: -9.750483512878418
    4. '```' → logprob: -10.375483512878418
    5. '   ' → logprob: -10.500483512878418
    6. ' Find' → logprob: -10.625483512878418
    7. '
' → logprob: -10.750483512878418
    8. 'find' → logprob: -11.125483512878418
    9. ' ' → logprob: -11.625483512878418
    10. '
' → logprob: -12.125483512878418

Token 524: 'は' (ID: 5205)
  Prédit: ' does'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -1.3069854974746704
    2. 'では' → logprob: -1.4319854974746704
    3. '<|end|>' → logprob: -1.6819854974746704
    4. 'does' → logprob: -2.181985378265381
    5. ' doesn't' → logprob: -2.431985378265381
    6. 'cannot' → logprob: -3.431985378265381
    7. 'は' → logprob: -4.306985378265381
    8. ' cannot' → logprob: -4.681985378265381
    9. ')' → logprob: -4.806985378265381
    10. 'には' → logprob: -5.056985378265381

Token 525: '戻' (ID: 175677)
  Prédit: 'でき'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'でき' → logprob: -0.21634025871753693
    2. '作' → logprob: -3.3413403034210205
    3. '```' → logprob: -3.9663403034210205
    4. '対応' → logprob: -4.466340065002441
    5. 'not' → logprob: -4.466340065002441
    6. '削' → logprob: -4.716340065002441
    7. '\xe7\xb9' → logprob: -4.841340065002441
    8. 'no' → logprob: -5.091340065002441
    9. '構' → logprob: -5.216340065002441
    10. '\xe5\xa3' → logprob: -5.216340065002441

Token 526: 'せ' (ID: 19280)
  Prédit: 'せ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'せ' → logprob: -0.04242875799536705
    2. 'ら' → logprob: -3.792428731918335
    3. 'れ' → logprob: -4.667428970336914
    4. 'す' → logprob: -4.792428970336914
    5. '```' → logprob: -7.542428970336914
    6. '``' → logprob: -8.542428970336914
    7. '復' → logprob: -8.667428970336914
    8. 'る' → logprob: -9.417428970336914
    9. '   ' → logprob: -9.917428970336914
    10. '
' → logprob: -10.042428970336914

Token 527: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.007513164542615414
    2. 'ません' → logprob: -5.007513046264648
    3. 'な' → logprob: -7.257513046264648
    4. 'る' → logprob: -10.257513046264648
    5. '```' → logprob: -11.132513046264648
    6. 'ず' → logprob: -11.757513046264648
    7. 'なく' → logprob: -12.007513046264648
    8. 'れ' → logprob: -12.632513046264648
    9. 'ら' → logprob: -12.757513046264648
    10. 'ん' → logprob: -12.882513046264648

Token 528: 'ので' (ID: 69719)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '、' (ID: 1395)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6044646501541138
    2. 'pass' → logprob: -1.6044646501541138
    3. ' continue' → logprob: -2.604464530944824
    4. '#' → logprob: -2.854464530944824
    5. 'continue' → logprob: -3.729464530944824
    6. 'uf' → logprob: -3.854464530944824
    7. ' current' → logprob: -3.979464530944824
    8. ' uf' → logprob: -4.104464530944824
    9. ' #' → logprob: -4.354464530944824
    10. '```' → logprob: -4.854464530944824

Token 530: 'や' (ID: 19160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0616153478622437
    2. 'uf' → logprob: -1.1866153478622437
    3. 'pass' → logprob: -1.3116153478622437
    4. 'current' → logprob: -2.686615467071533
    5. ' pass' → logprob: -5.811615467071533
    6. 'continue' → logprob: -6.061615467071533
    7. '```' → logprob: -7.061615467071533
    8. ' uf' → logprob: -7.186615467071533
    9. '   ' → logprob: -7.311615467071533
    10. 'ufs' → logprob: -7.436615467071533

Token 531: 'り' (ID: 7297)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.661138892173767
    2. 'り' → logprob: -1.661138892173767
    3. '   ' → logprob: -2.2861390113830566
    4. '```' → logprob: -2.9111390113830566
    5. '続きを' → logprob: -2.9111390113830566
    6. 'pass' → logprob: -3.2861390113830566
    7. 'n' → logprob: -3.5361390113830566
    8. 'f' → logprob: -3.6611390113830566
    9. 'す' → logprob: -3.6611390113830566
    10. '続' → logprob: -3.6611390113830566

Token 532: '直' (ID: 9455)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -1.9994179010391235
    2. '出' → logprob: -2.124417781829834
    3. 'ません' → logprob: -2.124417781829834
    4. '続' → logprob: -2.374417781829834
    5. '直' → logprob: -2.499417781829834
    6. 'す' → logprob: -2.624417781829834
    7. 'か' → logprob: -2.749417781829834
    8. 'に' → logprob: -2.749417781829834
    9. 'く' → logprob: -3.374417781829834
    10. 'づ' → logprob: -3.499417781829834

Token 533: 'し' (ID: 3829)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.515566885471344
    2. 'し' → logprob: -1.0155668258666992
    3. 'して' → logprob: -3.390566825866699
    4. '```' → logprob: -6.140566825866699
    5. 'import' → logprob: -7.390566825866699
    6. 'します' → logprob: -7.515566825866699
    7. '()' → logprob: -7.515566825866699
    8. 's' → logprob: -7.640566825866699
    9. 'を' → logprob: -8.1405668258667
    10. 'そう' → logprob: -8.5155668258667

Token 534: 'する' (ID: 39065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.472945898771286
    2. 'for' → logprob: -1.8479459285736084
    3. '           ' → logprob: -3.0979459285736084
    4. '   ' → logprob: -3.5979459285736084
    5. '               ' → logprob: -4.097945690155029
    6. '```' → logprob: -4.097945690155029
    7. 'if' → logprob: -4.347945690155029
    8. '
' → logprob: -4.347945690155029
    9. '#' → logprob: -4.472945690155029
    10. 'n' → logprob: -4.972945690155029

Token 535: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3965236246585846
    2. '       ' → logprob: -1.7715235948562622
    3. '   ' → logprob: -2.2715237140655518
    4. ':
' → logprob: -4.021523475646973
    5. '```' → logprob: -4.646523475646973
    6. '           ' → logprob: -5.021523475646973
    7. 'n' → logprob: -5.771523475646973
    8. 'if' → logprob: -6.396523475646973
    9. '    
' → logprob: -6.646523475646973
    10. 'current' → logprob: -6.646523475646973

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5885801315307617
    2. 'uf' → logprob: -1.9635801315307617
    3. '
' → logprob: -2.0885801315307617
    4. '   ' → logprob: -2.4635801315307617
    5. ' uf' → logprob: -3.5885801315307617
    6. 'current' → logprob: -3.8385801315307617
    7. ' current' → logprob: -4.213580131530762
    8. '        
' → logprob: -4.713580131530762
    9. '           ' → logprob: -5.963580131530762
    10. 'if' → logprob: -6.088580131530762

Token 537: ' #' (ID: 1069)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0542394258081913
    2. 'current' → logprob: -3.429239511489868
    3. ' uf' → logprob: -4.429239273071289
    4. '   ' → logprob: -6.054239273071289
    5. '#' (adapté à ' #') → logprob: -6.429239273071289
    6. 'edges' → logprob: -6.929239273071289
    7. 'if' → logprob: -7.304239273071289
    8. ' current' → logprob: -7.429239273071289
    9. 'n' → logprob: -7.929239273071289
    10. 'ufs' → logprob: -8.179239273071289

Token 538: ' 通' (ID: 52461)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.12981265783309937
    2. 'current' → logprob: -2.504812717437744
    3. ' uf' → logprob: -4.129812717437744
    4. '#' → logprob: -5.004812717437744
    5. 'edges' → logprob: -5.504812717437744
    6. '   ' → logprob: -5.754812717437744
    7. ' current' → logprob: -5.879812717437744
    8. '
' → logprob: -6.254812717437744
    9. 'if' → logprob: -6.629812717437744
    10. 'ufs' → logprob: -7.504812717437744

Token 539: '路' (ID: 14385)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.1924505233764648
    2. '```' → logprob: -2.192450523376465
    3. 'sys' → logprob: -2.442450523376465
    4. 'if' → logprob: -2.567450523376465
    5. 'py' → logprob: -3.317450523376465
    6. 'lines' → logprob: -3.692450523376465
    7. '路' → logprob: -3.817450523376465
    8. 'curr' → logprob: -3.942450523376465
    9. 'path' → logprob: -4.192450523376465
    10. 're' → logprob: -4.317450523376465

Token 540: 'を' (ID: 7277)
  Prédit: '破'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '破' → logprob: -0.732532262802124
    2. 'を' → logprob: -1.232532262802124
    3. 'current' → logprob: -2.107532262802124
    4. 'が' → logprob: -3.732532262802124
    5. 'destroy' → logprob: -3.857532262802124
    6. '_edges' → logprob: -4.482532501220703
    7. 'の' → logprob: -4.732532501220703
    8. 'break' → logprob: -4.857532501220703
    9. '(current' → logprob: -5.607532501220703
    10. '_current' → logprob: -5.607532501220703

Token 541: '一' (ID: 2432)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.008065433241426945
    2. 'remove' → logprob: -5.383065223693848
    3. 'removed' → logprob: -7.008065223693848
    4. ' current' → logprob: -7.758065223693848
    5. 'for' → logprob: -8.133065223693848
    6. 'edges' → logprob: -8.258065223693848
    7. 'break' → logprob: -8.383065223693848
    8. '
' → logprob: -8.758065223693848
    9. '.remove' → logprob: -8.883065223693848
    10. '#' → logprob: -8.883065223693848

Token 542: '旦' (ID: 128846)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.48794037103652954
    2. 'current' → logprob: -1.2379403114318848
    3. '=' → logprob: -3.4879403114318848
    4. '#' → logprob: -3.8629403114318848
    5. 'f' → logprob: -4.737940311431885
    6. ' =' → logprob: -5.112940311431885
    7. '
' → logprob: -5.362940311431885
    8. '=current' → logprob: -5.487940311431885
    9. 'new' → logprob: -5.612940311431885
    10. 'if' → logprob: -5.862940311431885

Token 543: '削' (ID: 156018)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002449615392833948
    2. 'removed' → logprob: -6.8774495124816895
    3. 'clear' → logprob: -7.3774495124816895
    4. ' current' → logprob: -8.252449989318848
    5. '
' → logprob: -9.502449989318848
    6. 'uf' → logprob: -9.627449989318848
    7. 're' → logprob: -10.002449989318848
    8. 'break' → logprob: -10.127449989318848
    9. 'remove' → logprob: -10.252449989318848
    10. '	current' → logprob: -10.377449989318848

Token 544: '除' (ID: 18593)
  Prédit: '除'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '除' → logprob: -0.1033167764544487
    2. 'current' → logprob: -2.3533167839050293
    3. '   ' → logprob: -7.228316783905029
    4. '       ' → logprob: -8.103316307067871
    5. 'remove' → logprob: -8.228316307067871
    6. 'try' → logprob: -8.228316307067871
    7. 'clear' → logprob: -8.478316307067871
    8. 'く' → logprob: -9.228316307067871
    9. '(current' → logprob: -9.228316307067871
    10. 've' → logprob: -9.353316307067871

Token 545: 'し' (ID: 3829)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.27673691511154175
    2. '(current' → logprob: -1.5267369747161865
    3. '   ' → logprob: -4.401736736297607
    4. '       ' → logprob: -5.776736736297607
    5. ' current' → logprob: -6.276736736297607
    6. '.remove' → logprob: -6.651736736297607
    7. 'from' → logprob: -6.901736736297607
    8. '(' → logprob: -7.276736736297607
    9. '((' → logprob: -7.526736736297607
    10. '.current' → logprob: -7.776736736297607

Token 546: '、' (ID: 1395)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11303025484085083
    2. ' current' → logprob: -2.613030195236206
    3. '       ' → logprob: -3.613030195236206
    4. '(current' → logprob: -5.363030433654785
    5. '           ' → logprob: -7.613030433654785
    6. '   ' → logprob: -7.863030433654785
    7. '
' → logprob: -8.863030433654785
    8. 'urrent' → logprob: -9.238030433654785
    9. '(
' → logprob: -9.238030433654785
    10. '(' → logprob: -9.488030433654785

Token 547: 'Union' (ID: 39222)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.05502908676862717
    2. 'current' → logprob: -3.0550291538238525
    3. '#' → logprob: -5.555028915405273
    4. ' uf' → logprob: -7.180028915405273
    5. 'ufs' → logprob: -7.805028915405273
    6. 'new' → logprob: -7.930028915405273
    7. 'for' → logprob: -8.680028915405273
    8. '   ' → logprob: -8.680028915405273
    9. ' current' → logprob: -8.805028915405273
    10. '
' → logprob: -9.305028915405273

Token 548: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00011117222311440855
    2. ' Find' → logprob: -10.25011157989502
    3. '_find' → logprob: -10.25011157989502
    4. 'find' → logprob: -10.37511157989502
    5. '
' → logprob: -13.25011157989502
    6. 'F' → logprob: -13.25011157989502
    7. '_Find' → logprob: -13.37511157989502
    8. '-find' → logprob: -13.50011157989502
    9. 'f' → logprob: -14.62511157989502
    10. '-F' → logprob: -14.87511157989502

Token 549: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288632273674011
    2. '=' → logprob: -1.053863286972046
    3. '=n' → logprob: -9.928863525390625
    4. '＝' → logprob: -10.053863525390625
    5. '=
' → logprob: -10.803863525390625
    6. '
' → logprob: -11.803863525390625
    7. '=current' → logprob: -12.053863525390625
    8. 'n' → logprob: -12.303863525390625
    9. '(n' → logprob: -12.553863525390625
    10. ' =
' → logprob: -12.553863525390625

Token 550: '初' (ID: 26719)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.005379256326705217
    2. 'uf' → logprob: -5.8803791999816895
    3. ' Union' → logprob: -6.2553791999816895
    4. '__' → logprob: -8.380379676818848
    5. 'Uf' → logprob: -9.255379676818848
    6. 'UF' → logprob: -9.505379676818848
    7. '_union' → logprob: -9.505379676818848
    8. 'None' → logprob: -10.255379676818848
    9. 'n' → logprob: -10.380379676818848
    10. 'union' → logprob: -10.630379676818848

Token 551: '期' (ID: 5055)
  Prédit: '期'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '期' → logprob: -0.0062269167974591255
    2. '化' → logprob: -5.256227016448975
    3. '始化' → logprob: -7.506227016448975
    4. 'め' → logprob: -9.506226539611816
    5. '初' → logprob: -9.756226539611816
    6. '緒' → logprob: -10.006226539611816
    7. '始' → logprob: -10.131226539611816
    8. '動' → logprob: -10.256226539611816
    9. '発' → logprob: -11.131226539611816
    10. '築' → logprob: -11.256226539611816

Token 552: '化' (ID: 11415)
  Prédit: '化'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '化' → logprob: -0.0003943304473068565
    2. '```' → logprob: -8.125393867492676
    3. '始化' → logprob: -10.625393867492676
    4. '
' → logprob: -11.250393867492676
    5. ' 化' → logprob: -11.250393867492676
    6. '``' → logprob: -11.500393867492676
    7. 'ization' → logprob: -12.125393867492676
    8. '화' → logprob: -12.250393867492676
    9. 'ialize' → logprob: -12.625393867492676
    10. '' → logprob: -13.125393867492676

Token 553: 'して' (ID: 22440)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.28632694482803345
    2. '
' → logprob: -1.5363268852233887
    3. 'n' → logprob: -3.6613268852233887
    4. '   ' → logprob: -6.411326885223389
    5. '       ' → logprob: -6.536326885223389
    6. '()
' → logprob: -6.786326885223389
    7. '(n' → logprob: -7.286326885223389
    8. '```' → logprob: -7.286326885223389
    9. ' uf' → logprob: -7.786326885223389
    10. '(
' → logprob: -8.161327362060547

Token 554: '残' (ID: 65394)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.096750907599926
    2. 'current' → logprob: -2.5967509746551514
    3. 'for' → logprob: -4.471750736236572
    4. '
' → logprob: -6.596750736236572
    5. ' uf' → logprob: -6.596750736236572
    6. '   ' → logprob: -6.846750736236572
    7. '       ' → logprob: -7.721750736236572
    8. ' current' → logprob: -7.846750736236572
    9. 'ufs' → logprob: -8.34675121307373
    10. 'all' → logprob: -8.59675121307373

Token 555: 'り' (ID: 7297)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.1613240242004395
    2. '_edges' → logprob: -1.7863240242004395
    3. 'えて' → logprob: -2.5363240242004395
    4. 'edges' → logprob: -2.5363240242004395
    5. '           ' → logprob: -2.7863240242004395
    6. '       ' → logprob: -2.9113240242004395
    7. '   ' → logprob: -3.1613240242004395
    8. 'え' → logprob: -3.2863240242004395
    9. 'り' → logprob: -3.5363240242004395
    10. '```' → logprob: -3.9113240242004395

Token 556: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.001973480684682727
    2. 'current' → logprob: -6.626973628997803
    3. '_edges' → logprob: -9.251973152160645
    4. 'る' → logprob: -9.376973152160645
    5. ' の' → logprob: -9.501973152160645
    6. 'edges' → logprob: -9.751973152160645
    7. 'を' → logprob: -9.876973152160645
    8. '```' → logprob: -10.001973152160645
    9. ' edges' → logprob: -10.626973152160645
    10. 'す' → logprob: -10.876973152160645

Token 557: '通' (ID: 9034)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06320434808731079
    2. 'edges' → logprob: -3.063204288482666
    3. ' current' → logprob: -4.563204288482666
    4. ' edges' → logprob: -5.563204288482666
    5. 'all' → logprob: -9.813204765319824
    6. '
' → logprob: -10.063204765319824
    7. 'uf' → logprob: -10.688204765319824
    8. '```' → logprob: -10.938204765319824
    9. '_edges' → logprob: -11.313204765319824
    10. '(current' → logprob: -11.688204765319824

Token 558: '路' (ID: 14385)
  Prédit: '路'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '路' → logprob: -0.08010760694742203
    2. '通' → logprob: -3.9551076889038086
    3. 'り' → logprob: -4.580107688903809
    4. '```' → logprob: -4.705107688903809
    5. 'る' → logprob: -5.330107688903809
    6. 'routes' → logprob: -5.330107688903809
    7. '   ' → logprob: -5.330107688903809
    8. 'う' → logprob: -5.455107688903809
    9. '       ' → logprob: -5.580107688903809
    10. 'って' → logprob: -6.330107688903809

Token 559: 'で' (ID: 4344)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.010370723903179169
    2. 'の' → logprob: -5.13537073135376
    3. 'current' → logprob: -6.13537073135376
    4. ' を' → logprob: -7.76037073135376
    5. 'に' → logprob: -8.510370254516602
    6. 'で' → logprob: -8.635370254516602
    7. '=' → logprob: -8.885370254516602
    8. '(current' → logprob: -9.135370254516602
    9. 'for' → logprob: -9.135370254516602
    10. '```' → logprob: -9.260370254516602

Token 560: '再' (ID: 29020)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.003570372937247157
    2. ' uf' → logprob: -6.003570556640625
    3. '再' → logprob: -8.128570556640625
    4. 'union' → logprob: -8.878570556640625
    5. 'ufs' → logprob: -9.503570556640625
    6. 'ufa' → logprob: -9.878570556640625
    7. '```' → logprob: -10.003570556640625
    8. 'u' → logprob: -10.128570556640625
    9. '.uf' → logprob: -10.253570556640625
    10. 'ug' → logprob: -10.378570556640625

Token 561: '構' (ID: 115981)
  Prédit: '構'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '構' → logprob: -0.5309617519378662
    2. 'init' → logprob: -2.030961751937866
    3. 'initial' → logprob: -2.530961751937866
    4. 'initialize' → logprob: -2.655961751937866
    5. '初' → logprob: -2.655961751937866
    6. 'uf' → logprob: -3.655961751937866
    7. 'build' → logprob: -3.780961751937866
    8. 'construct' → logprob: -5.530961990356445
    9. 'union' → logprob: -6.655961990356445
    10. '作' → logprob: -6.780961990356445

Token 562: '築' (ID: 147796)
  Prédit: '築'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '築' → logprob: -0.023305457085371017
    2. '成' → logprob: -3.7733054161071777
    3. '筑' → logprob: -10.273305892944336
    4. '```' → logprob: -11.148305892944336
    5. '造' → logprob: -12.398305892944336
    6. '
' → logprob: -14.023305892944336
    7. '��' → logprob: -14.773305892944336
    8. '理' → logprob: -14.773305892944336
    9. '``' → logprob: -14.898305892944336
    10. '建' → logprob: -14.898305892944336

Token 563: 'する' (ID: 39065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8331314325332642
    2. '
' → logprob: -1.3331314325332642
    3. 'uf' → logprob: -1.4581314325332642
    4. '       ' → logprob: -2.9581313133239746
    5. 'n' → logprob: -4.708131313323975
    6. 'current' → logprob: -6.333131313323975
    7. ' uf' → logprob: -6.458131313323975
    8. '    
' → logprob: -7.083131313323975
    9. '
' → logprob: -7.208131313323975
    10. '           ' → logprob: -7.458131313323975

Token 564: '
' (ID: 198)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.7846170663833618
    2. '   ' → logprob: -1.1596170663833618
    3. '
' → logprob: -1.6596170663833618
    4. '       ' → logprob: -4.159616947174072
    5. 'current' → logprob: -5.159616947174072
    6. ' uf' → logprob: -5.159616947174072
    7. 'n' → logprob: -5.534616947174072
    8. '```' → logprob: -6.159616947174072
    9. '    
' → logprob: -6.284616947174072
    10. '           ' → logprob: -7.159616947174072

Token 565: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.050665020942688
    2. '       ' → logprob: -1.300665020942688
    3. 'uf' → logprob: -1.550665020942688
    4. '
' → logprob: -2.0506649017333984
    5. ' uf' → logprob: -3.8006649017333984
    6. 'n' → logprob: -5.550664901733398
    7. 'current' → logprob: -5.925664901733398
    8. '    
' → logprob: -6.425664901733398
    9. ' current' → logprob: -6.925664901733398
    10. '```' → logprob: -7.050664901733398

Token 566: ' if' (ID: 538)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.295533686876297
    2. ' uf' → logprob: -1.4205336570739746
    3. '
' → logprob: -4.920533657073975
    4. '   ' → logprob: -5.795533657073975
    5. 'n' → logprob: -6.920533657073975
    6. ' current' → logprob: -7.045533657073975
    7. 'current' → logprob: -7.295533657073975
    8. ' n' → logprob: -7.795533657073975
    9. '```' → logprob: -8.545534133911133
    10. '       ' → logprob: -8.920534133911133

Token 567: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3621063828468323
    2. ' (' → logprob: -1.2371063232421875
    3. '(t' → logprob: -4.6121063232421875
    4. '(v' → logprob: -6.1121063232421875
    5. '(' → logprob: -7.7371063232421875
    6. '(q' → logprob: -8.237106323242188
    7. '(len' → logprob: -8.987106323242188
    8. ' t' → logprob: -9.112106323242188
    9. '(current' → logprob: -9.237106323242188
    10. ' ' → logprob: -9.612106323242188

Token 568: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002993544621858746
    2. ' u' → logprob: -8.750299453735352
    3. '(u' → logprob: -8.875299453735352
    4. '	u' → logprob: -14.375299453735352
    5. ' (' → logprob: -15.750299453735352
    6. '   ' → logprob: -16.62529945373535
    7. ',u' → logprob: -16.87529945373535
    8. ')' → logprob: -17.00029945373535
    9. '[u' → logprob: -17.12529945373535
    10. '(' → logprob: -17.12529945373535

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004599823441822082
    2. ',u' → logprob: -8.250459671020508
    3. ',v' → logprob: -8.625459671020508
    4. ' ,' → logprob: -11.000459671020508
    5. 'u' → logprob: -14.000459671020508
    6. ',
' → logprob: -14.500459671020508
    7. ',n' → logprob: -15.625459671020508
    8. ',w' → logprob: -16.000459671020508
    9. ',user' → logprob: -16.125459671020508
    10. ',k' → logprob: -16.500459671020508

Token 570: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03804183006286621
    2. ' v' → logprob: -3.288041830062866
    3. ',v' → logprob: -15.413042068481445
    4. 'u' → logprob: -15.788042068481445
    5. '	v' → logprob: -16.413042068481445
    6. ',' → logprob: -16.913042068481445
    7. ' u' → logprob: -18.288042068481445
    8. ')v' → logprob: -20.788042068481445
    9. '
' → logprob: -20.913042068481445
    10. ' ' → logprob: -20.913042068481445

Token 571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035192950163036585
    2. 'in' → logprob: -5.753519058227539
    3. '）' → logprob: -8.878519058227539
    4. ' in' → logprob: -9.128519058227539
    5. ' )' → logprob: -10.003519058227539
    6. 'not' → logprob: -10.253519058227539
    7. '   ' → logprob: -12.503519058227539
    8. ' not' → logprob: -13.378519058227539
    9. ')
' → logprob: -13.628519058227539
    10. '))' → logprob: -14.503519058227539

Token 572: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6528885960578918
    2. 'in' → logprob: -0.7778885960578918
    3. ' not' → logprob: -4.152888774871826
    4. 'not' → logprob: -5.652888774871826
    5. ')' → logprob: -7.152888774871826
    6. '	in' → logprob: -10.777888298034668
    7. ' ' → logprob: -11.027888298034668
    8. '   ' → logprob: -11.402888298034668
    9. '）' → logprob: -12.652888298034668
    10. ' )' → logprob: -12.652888298034668

Token 573: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00317783304490149
    2. ' current' → logprob: -5.753177642822266
    3. '	current' → logprob: -17.878177642822266
    4. '[current' → logprob: -18.003177642822266
    5. '$current' → logprob: -18.003177642822266
    6. '.current' → logprob: -18.753177642822266
    7. '   ' → logprob: -19.378177642822266
    8. 'urrent' → logprob: -19.628177642822266
    9. '=current' → logprob: -19.628177642822266
    10. 'Current' → logprob: -19.753177642822266

Token 574: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.2664456789934775e-06
    2. 'edges' → logprob: -14.250000953674316
    3. '_current' → logprob: -15.375000953674316
    4. '_' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '_ed' → logprob: -17.250001907348633
    8. ')_' → logprob: -17.250001907348633
    9. '_edge' → logprob: -17.625001907348633
    10. ' edges' → logprob: -18.000001907348633

Token 575: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.644475519657135
    2. ':' → logprob: -0.769475519657135
    3. '           ' → logprob: -4.89447546005249
    4. '):
' → logprob: -6.01947546005249
    5. '.remove' → logprob: -6.89447546005249
    6. '):' → logprob: -7.76947546005249
    7. 'current' → logprob: -8.144475936889648
    8. ' current' → logprob: -10.019475936889648
    9. '       ' → logprob: -11.019475936889648
    10. 'remove' → logprob: -11.144475936889648

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011638096533715725
    2. ' current' → logprob: -4.511638164520264
    3. 'current' → logprob: -7.636638164520264
    4. '               ' → logprob: -11.136637687683105
    5. '	       ' → logprob: -11.136637687683105
    6. ',current' → logprob: -11.136637687683105
    7. '```' → logprob: -11.511637687683105
    8. '
' → logprob: -11.511637687683105
    9. '            
' → logprob: -12.136637687683105
    10. '   ' → logprob: -12.511637687683105

Token 577: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3133606016635895
    2. ' current' → logprob: -1.313360571861267
    3. '           ' → logprob: -9.938360214233398
    4. '   ' → logprob: -10.563360214233398
    5. '               ' → logprob: -10.938360214233398
    6. '	current' → logprob: -12.563360214233398
    7. 'urrent' → logprob: -14.313360214233398
    8. '       ' → logprob: -14.313360214233398
    9. '.current' → logprob: -14.563360214233398
    10. '_current' → logprob: -15.063360214233398

Token 578: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.375001907348633
    3. ' _' → logprob: -15.000001907348633
    4. '_ed' → logprob: -16.125001907348633
    5. 'edges' → logprob: -16.500001907348633
    6. '_
' → logprob: -17.250001907348633
    7. '_edge' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. 'remove' → logprob: -17.750001907348633
    10. 's' → logprob: -18.250001907348633

Token 579: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0003513125702738762
    2. '.' → logprob: -8.250350952148438
    3. '.dis' → logprob: -9.375350952148438
    4. 'remove' → logprob: -12.375350952148438
    5. ' .' → logprob: -14.125350952148438
    6. ' remove' → logprob: -16.125350952148438
    7. '   ' → logprob: -16.750350952148438
    8. '	remove' → logprob: -16.875350952148438
    9. '.Remove' → logprob: -17.250350952148438
    10. '.delete' → logprob: -18.875350952148438

Token 580: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001394161517964676
    2. '(u' → logprob: -9.375139236450195
    3. '(' → logprob: -10.000139236450195
    4. ' ((' → logprob: -12.000139236450195
    5. ' (' → logprob: -12.750139236450195
    6. '   ' → logprob: -17.375139236450195
    7. ' ' → logprob: -17.750139236450195
    8. '(
' → logprob: -17.875139236450195
    9. ')((' → logprob: -19.625139236450195
    10. ',' → logprob: -19.625139236450195

Token 581: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0325924449716695e-05
    2. ' u' → logprob: -11.50001049041748
    3. '(u' → logprob: -16.625009536743164
    4. '	u' → logprob: -16.875009536743164
    5. ''u' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.250009536743164
    7. ' ' → logprob: -19.750009536743164
    8. '_u' → logprob: -20.000009536743164
    9. ')' → logprob: -20.750009536743164
    10. ',u' → logprob: -20.875009536743164

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028040475444868207
    2. ',v' → logprob: -8.375280380249023
    3. ' ,' → logprob: -10.500280380249023
    4. ',u' → logprob: -10.750280380249023
    5. 'u' → logprob: -14.875280380249023
    6. ',
' → logprob: -15.250280380249023
    7. 'v' → logprob: -16.125280380249023
    8. '‌,' → logprob: -17.375280380249023
    9. ',n' → logprob: -17.500280380249023
    10. '，' → logprob: -17.625280380249023

Token 583: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.030979687348008156
    2. ' v' → logprob: -3.530979633331299
    3. 'u' → logprob: -6.780979633331299
    4. ' u' → logprob: -9.280980110168457
    5. '	v' → logprob: -16.03097915649414
    6. ')v' → logprob: -17.28097915649414
    7. ' ' → logprob: -18.28097915649414
    8. '   ' → logprob: -19.15597915649414
    9. ',v' → logprob: -19.40597915649414
    10. '(v' → logprob: -20.15597915649414

Token 584: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011639113072305918
    2. ')
' → logprob: -6.876163959503174
    3. '))' → logprob: -9.001163482666016
    4. '           ' → logprob: -12.751163482666016
    5. '）' → logprob: -13.251163482666016
    6. '       ' → logprob: -14.001163482666016
    7. ' )' → logprob: -14.626163482666016
    8. '))
' → logprob: -14.626163482666016
    9. ')`' → logprob: -14.626163482666016
    10. '`)' → logprob: -15.376163482666016

Token 585: '           ' (ID: 352)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.13160328567028046
    2. '
' → logprob: -2.256603240966797
    3. '           ' → logprob: -5.006603240966797
    4. ' uf' → logprob: -5.381603240966797
    5. '       ' → logprob: -5.506603240966797
    6. '   ' → logprob: -6.256603240966797
    7. '```' → logprob: -7.756603240966797
    8. 'n' → logprob: -8.756603240966797
    9. '        
' → logprob: -8.756603240966797
    10. '            
' → logprob: -9.006603240966797

Token 586: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.07003013044595718
    2. ' uf' → logprob: -2.6950302124023438
    3. '           ' → logprob: -9.945030212402344
    4. '
' → logprob: -11.070030212402344
    5. 'ug' → logprob: -12.445030212402344
    6. '```' → logprob: -12.445030212402344
    7. 'ufs' → logprob: -12.570030212402344
    8. 'n' → logprob: -12.820030212402344
    9. '               ' → logprob: -12.945030212402344
    10. '   ' → logprob: -12.945030212402344

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751643538475037
    2. ' =' → logprob: -3.5297515392303467
    3. '＝' → logprob: -13.779751777648926
    4. '=
' → logprob: -17.27975082397461
    5. '.=' → logprob: -17.90475082397461
    6. '=sys' → logprob: -18.27975082397461
    7. '.__' → logprob: -18.52975082397461
    8. ')' → logprob: -19.02975082397461
    9. '```' → logprob: -19.15475082397461
    10. 'import' → logprob: -19.52975082397461

Token 588: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.03804171830415726
    2. ' Union' → logprob: -3.288041830062866
    3. ' union' → logprob: -16.663042068481445
    4. '_union' → logprob: -16.663042068481445
    5. 'union' → logprob: -17.538042068481445
    6. 'Unity' → logprob: -17.538042068481445
    7. ''Union' → logprob: -18.038042068481445
    8. 'Uni' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.038042068481445
    10. 'Un' → logprob: -20.538042068481445

Token 589: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -4.723352049040841e-06
    2. 'F' → logprob: -12.875004768371582
    3. 'Fold' → logprob: -14.125004768371582
    4. 'Union' → logprob: -14.375004768371582
    5. 'Fit' → logprob: -16.125003814697266
    6. 'For' → logprob: -16.375003814697266
    7. '(F' → logprob: -16.625003814697266
    8. 'Fin' → logprob: -16.750003814697266
    9. 'Fill' → logprob: -16.875003814697266
    10. '-F' → logprob: -16.875003814697266

Token 590: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006716555915772915
    2. 'n' → logprob: -5.006716728210449
    3. '(' → logprob: -14.38171672821045
    4. ' n' → logprob: -14.88171672821045
    5. '(
' → logprob: -15.50671672821045
    6. '```' → logprob: -17.631715774536133
    7. ' (' → logprob: -18.506715774536133
    8. '[n' → logprob: -18.631715774536133
    9. ')n' → logprob: -19.006715774536133
    10. '	n' → logprob: -19.381715774536133

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020413640595506877
    2. ')
' → logprob: -8.500204086303711
    3. ')n' → logprob: -15.000204086303711
    4. ')
' → logprob: -15.875204086303711
    5. '）' → logprob: -17.37520408630371
    6. ' )' → logprob: -17.50020408630371
    7. '),' → logprob: -18.37520408630371
    8. '))' → logprob: -18.50020408630371
    9. ')#' → logprob: -18.87520408630371
    10. ')

' → logprob: -19.00020408630371

Token 592: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16122642159461975
    2. '           ' → logprob: -2.911226511001587
    3. ' for' → logprob: -2.911226511001587
    4. '   ' → logprob: -3.786226511001587
    5. '       ' → logprob: -4.286226272583008
    6. '```' → logprob: -5.661226272583008
    7. '	for' → logprob: -9.911226272583008
    8. ' ' → logprob: -10.286226272583008
    9. '<|end|>' → logprob: -10.411226272583008
    10. '               ' → logprob: -11.161226272583008

Token 593: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.625
    3. '           ' → logprob: -18.375
    4. '```' → logprob: -20.0
    5. '	for' → logprob: -20.125
    6. '   ' → logprob: -22.5
    7. '       ' → logprob: -23.25
    8. '
' → logprob: -23.625
    9. '            
' → logprob: -24.25
    10. '               ' → logprob: -24.25

Token 594: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7659525275230408
    2. '(x' → logprob: -1.7659525871276855
    3. 'x' → logprob: -2.0159525871276855
    4. '(a' → logprob: -2.5159525871276855
    5. '(u' → logprob: -2.6409525871276855
    6. 'edge' → logprob: -3.2659525871276855
    7. 'e' → logprob: -4.0159525871276855
    8. '(e' → logprob: -4.0159525871276855
    9. 'eu' → logprob: -6.0159525871276855
    10. ' (' → logprob: -7.2659525871276855

Token 595: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.252206027507782
    2. 'x' → logprob: -1.5022060871124268
    3. 'uu' → logprob: -9.002205848693848
    4. 'u' → logprob: -9.252205848693848
    5. 'xu' → logprob: -11.252205848693848
    6. '(a' → logprob: -11.752205848693848
    7. '(x' → logprob: -11.752205848693848
    8. 'ux' → logprob: -11.877205848693848
    9. 'aa' → logprob: -12.627205848693848
    10. 'ui' → logprob: -12.627205848693848

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002532379236072302
    2. ',b' → logprob: -6.002532482147217
    3. ' ,' → logprob: -9.877532005310059
    4. 'b' → logprob: -12.252532005310059
    5. ',a' → logprob: -15.252532005310059
    6. ' b' → logprob: -16.627532958984375
    7. 'a' → logprob: -16.752532958984375
    8. '，' → logprob: -16.877532958984375
    9. ',
' → logprob: -17.002532958984375
    10. '_,' → logprob: -17.627532958984375

Token 597: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. 'a' → logprob: -18.750335693359375
    4. ',b' → logprob: -18.750335693359375
    5. '	b' → logprob: -19.750335693359375
    6. '   ' → logprob: -20.000335693359375
    7. 'c' → logprob: -20.125335693359375
    8. ',' → logprob: -21.625335693359375
    9. '
' → logprob: -21.875335693359375
    10. ')b' → logprob: -23.250335693359375

Token 598: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011129508493468165
    2. 'in' → logprob: -6.876112937927246
    3. ' )' → logprob: -10.126112937927246
    4. '),' → logprob: -10.876112937927246
    5. ' in' → logprob: -11.251112937927246
    6. '）' → logprob: -12.376112937927246
    7. ',' → logprob: -13.626112937927246
    8. ',)' → logprob: -14.126112937927246
    9. '   ' → logprob: -14.501112937927246
    10. ')
' → logprob: -14.751112937927246

Token 599: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231547951698303
    2. ' in' → logprob: -0.8981547951698303
    3. '	in' → logprob: -11.773155212402344
    4. ',' → logprob: -11.898155212402344
    5. 'current' → logprob: -12.023155212402344
    6. '   ' → logprob: -12.648155212402344
    7. ' ' → logprob: -13.648155212402344
    8. '```' → logprob: -14.148155212402344
    9. ',current' → logprob: -14.273155212402344
    10. ' ,' → logprob: -14.523155212402344

Token 600: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001584850688232109
    2. ' current' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.125158309936523
    4. '[current' → logprob: -19.875158309936523
    5. '	current' → logprob: -20.375158309936523
    6. '$current' → logprob: -21.000158309936523
    7. 'urrent' → logprob: -21.250158309936523
    8. ' ' → logprob: -21.625158309936523
    9. '.current' → logprob: -21.750158309936523
    10. '(current' → logprob: -22.125158309936523

Token 601: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5768697261810303
    2. 'current' → logprob: -0.8268697261810303
    3. 'edges' → logprob: -7.701869964599609
    4. '_current' → logprob: -7.826869964599609
    5. 'd' → logprob: -10.57686996459961
    6. 'urrent' → logprob: -10.95186996459961
    7. ' current' → logprob: -11.57686996459961
    8. 'Edges' → logprob: -12.20186996459961
    9. '_' → logprob: -13.07686996459961
    10. 'ges' → logprob: -13.45186996459961

Token 602: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13058866560459137
    2. ':
' → logprob: -2.6305887699127197
    3. '               ' → logprob: -3.0055887699127197
    4. '       ' → logprob: -7.755588531494141
    5. '           ' → logprob: -8.63058853149414
    6. '   ' → logprob: -10.13058853149414
    7. '):
' → logprob: -10.25558853149414
    8. '              ' → logprob: -10.38058853149414
    9. ':
' → logprob: -10.63058853149414
    10. '):' → logprob: -10.63058853149414

Token 603: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1779380738735199
    2. 'uf' → logprob: -1.9279381036758423
    3. ' uf' → logprob: -4.052937984466553
    4. 'ufi' → logprob: -10.552938461303711
    5. '                
' → logprob: -10.552938461303711
    6. '```' → logprob: -10.552938461303711
    7. '           ' → logprob: -10.802938461303711
    8. '.uf' → logprob: -11.052938461303711
    9. 'un' → logprob: -11.302938461303711
    10. '              ' → logprob: -12.302938461303711

Token 604: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -9.925185440806672e-05
    2. ' uf' → logprob: -9.250099182128906
    3. '               ' → logprob: -13.000099182128906
    4. '           ' → logprob: -14.500099182128906
    5. 'ug' → logprob: -16.875099182128906
    6. '   ' → logprob: -17.250099182128906
    7. '.uf' → logprob: -18.000099182128906
    8. 'ufe' → logprob: -18.125099182128906
    9. 'ufi' → logprob: -18.125099182128906
    10. 'ufs' → logprob: -18.375099182128906

Token 605: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -3.6789137084269896e-05
    2. '.' → logprob: -10.75003719329834
    3. ' .' → logprob: -11.50003719329834
    4. 'un' → logprob: -12.62503719329834
    5. '.u' → logprob: -14.37503719329834
    6. '   ' → logprob: -15.00003719329834
    7. '.union' → logprob: -15.00003719329834
    8. '```' → logprob: -16.000036239624023
    9. '	un' → logprob: -16.250036239624023
    10. '.ut' → logprob: -16.375036239624023

Token 606: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0004896456957794726
    2. 'ate' → logprob: -7.875489711761475
    3. 'te' → logprob: -9.250489234924316
    4. 'a' → logprob: -12.625489234924316
    5. 'ute' → logprob: -12.750489234924316
    6. 'it' → logprob: -12.875489234924316
    7. 't' → logprob: -13.125489234924316
    8. 'itte' → logprob: -15.000489234924316
    9. '```' → logprob: -15.000489234924316
    10. 'itate' → logprob: -15.125489234924316

Token 607: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00469581875950098
    2. 'a' → logprob: -5.379695892333984
    3. '(' → logprob: -9.629695892333984
    4. ' a' → logprob: -11.879695892333984
    5. ' (' → logprob: -13.129695892333984
    6. '(
' → logprob: -14.004695892333984
    7. '((' → logprob: -17.504695892333984
    8. '	a' → logprob: -17.754695892333984
    9. '   ' → logprob: -18.754695892333984
    10. '(A' → logprob: -18.754695892333984

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028871409595012665
    2. ',b' → logprob: -6.50288724899292
    3. ' ,' → logprob: -6.62788724899292
    4. 'b' → logprob: -10.127886772155762
    5. ' b' → logprob: -11.502886772155762
    6. 'a' → logprob: -12.002886772155762
    7. ',a' → logprob: -12.627886772155762
    8. ' a' → logprob: -14.377886772155762
    9. ',
' → logprob: -15.002886772155762
    10. '，' → logprob: -16.377887725830078

Token 609: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.547789674485102e-05
    2. ' b' → logprob: -10.250035285949707
    3. '	b' → logprob: -21.375036239624023
    4. '   ' → logprob: -21.375036239624023
    5. ' ' → logprob: -22.750036239624023
    6. ')b' → logprob: -24.000036239624023
    7. ',b' → logprob: -24.875036239624023
    8. '  ' → logprob: -25.000036239624023
    9. '    ' → logprob: -25.375036239624023
    10. '           ' → logprob: -25.750036239624023

Token 610: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011157942935824394
    2. ')' → logprob: -4.886157989501953
    3. ' ,' → logprob: -5.761157989501953
    4. ',a' → logprob: -8.511157989501953
    5. ',b' → logprob: -9.136157989501953
    6. 'a' → logprob: -9.886157989501953
    7. ' a' → logprob: -11.261157989501953
    8. 'b' → logprob: -11.761157989501953
    9. ' )' → logprob: -12.511157989501953
    10. ')
' → logprob: -12.636157989501953

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006603728979825974
    2. 'elif' → logprob: -8.000659942626953
    3. ' elif' → logprob: -8.625659942626953
    4. '```' → logprob: -9.625659942626953
    5. '<|end|>' → logprob: -10.500659942626953
    6. '       ' → logprob: -10.625659942626953
    7. ' else' → logprob: -11.500659942626953
    8. 'else' → logprob: -11.500659942626953
    9. ',' → logprob: -13.625659942626953
    10. '   ' → logprob: -13.750659942626953

Token 612: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005170550663024187
    2. 'elif' → logprob: -5.6301703453063965
    3. ' elif' → logprob: -6.6301703453063965
    4. '```' → logprob: -9.380170822143555
    5. '       ' → logprob: -9.505170822143555
    6. 'else' (adapté à ' else') → logprob: -10.005170822143555
    7. ' else' → logprob: -10.755170822143555
    8. ' ' → logprob: -11.755170822143555
    9. '	elif' → logprob: -12.255170822143555
    10. '   ' → logprob: -12.630170822143555

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04159332066774368
    2. '   ' → logprob: -3.541593313217163
    3. ' if' → logprob: -5.166593551635742
    4. ' :' → logprob: -5.791593551635742
    5. '{' → logprob: -7.791593551635742
    6. ' {' → logprob: -8.041593551635742
    7. ':
' → logprob: -8.041593551635742
    8. ' ==' → logprob: -8.041593551635742
    9. ',' → logprob: -8.416593551635742
    10. '    ' → logprob: -8.416593551635742

Token 614: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02372336946427822
    2. '       ' → logprob: -4.023723602294922
    3. ' (' → logprob: -6.398723602294922
    4. ' if' → logprob: -6.648723602294922
    5. '(' → logprob: -7.398723602294922
    6. '    ' → logprob: -7.523723602294922
    7. ' #' → logprob: -7.773723602294922
    8. ' ' → logprob: -8.523723602294922
    9. '<|end|>' → logprob: -8.898723602294922
    10. '0' → logprob: -9.398723602294922

Token 615: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31588953733444214
    2. 'if' → logprob: -2.065889596939087
    3. ' print' → logprob: -2.565889596939087
    4. ' if' → logprob: -2.815889596939087
    5. 'result' → logprob: -6.065889358520508
    6. '   ' → logprob: -6.190889358520508
    7. ' result' → logprob: -7.190889358520508
    8. ' res' → logprob: -7.315889358520508
    9. 'u' → logprob: -7.940889358520508
    10. ' ans' → logprob: -8.190889358520508

Token 616: ' �' (ID: 117111)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48965975642204285
    2. ' if' → logprob: -2.1146597862243652
    3. ' print' → logprob: -2.3646597862243652
    4. 'if' → logprob: -2.4896597862243652
    5. 'result' → logprob: -2.9896597862243652
    6. ' result' → logprob: -3.9896597862243652
    7. ' res' → logprob: -4.739659786224365
    8. ' ans' → logprob: -5.614659786224365
    9. '   ' → logprob: -5.989659786224365
    10. ' u' → logprob: -6.239659786224365

Token 617: '�' (ID: 103)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.726749837398529
    2. 'if' → logprob: -1.3517498970031738
    3. ' u' → logprob: -1.8517498970031738
    4. '   ' → logprob: -2.851749897003174
    5. '       ' → logprob: -3.726749897003174
    6. 'u' → logprob: -4.226749897003174
    7. 'print' → logprob: -7.101749897003174
    8. ' #' → logprob: -7.351749897003174
    9. ' print' → logprob: -7.851749897003174
    10. ' ' → logprob: -7.976749897003174

Token 618: '問' (ID: 36302)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6654902696609497
    2. 'if' → logprob: -1.1654902696609497
    3. '   ' → logprob: -3.04049015045166
    4. 'print' → logprob: -3.16549015045166
    5. ' u' → logprob: -3.41549015045166
    6. '       ' → logprob: -3.79049015045166
    7. ' print' → logprob: -4.66549015045166
    8. 'u' → logprob: -5.29049015045166
    9. 'result' → logprob: -6.16549015045166
    10. ' x' → logprob: -6.41549015045166

Token 619: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038620974868535995
    2. '   ' → logprob: -3.413620948791504
    3. '<|end|>' → logprob: -6.163620948791504
    4. ',' → logprob: -7.663620948791504
    5. ' ' → logprob: -7.913620948791504
    6. ' if' → logprob: -8.038620948791504
    7. '(' → logprob: -8.163620948791504
    8. ' (' → logprob: -8.288620948791504
    9. '        
' → logprob: -8.288620948791504
    10. '    ' → logprob: -8.663620948791504

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006070406176149845
    2. '   ' → logprob: -5.256070613861084
    3. ' if' → logprob: -8.506070137023926
    4. '(' → logprob: -8.506070137023926
    5. ',' → logprob: -9.506070137023926
    6. '        
' → logprob: -10.131070137023926
    7. 'if' → logprob: -10.256070137023926
    8. ' (' → logprob: -10.256070137023926
    9. '    ' → logprob: -10.381070137023926
    10. '      ' → logprob: -10.506070137023926

Token 621: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011927316896617413
    2. 'if' (adapté à ' if') → logprob: -5.136927127838135
    3. ' print' → logprob: -5.386927127838135
    4. '   ' → logprob: -7.886927127838135
    5. 'res' → logprob: -8.136927604675293
    6. 'result' → logprob: -8.636927604675293
    7. '       ' → logprob: -8.636927604675293
    8. ' if' → logprob: -9.136927604675293
    9. 'answer' → logprob: -9.761927604675293
    10. 'pr' → logprob: -9.886927604675293

Token 622: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.20154742896556854
    2. ' uf' → logprob: -1.701547384262085
    3. 'ufs' → logprob: -9.076547622680664
    4. ' u' → logprob: -11.826547622680664
    5. 'u' → logprob: -12.701547622680664
    6. 'ufi' → logprob: -12.701547622680664
    7. '.uf' → logprob: -12.951547622680664
    8. 'uff' → logprob: -13.826547622680664
    9. '   ' → logprob: -14.576547622680664
    10. ' ' → logprob: -14.576547622680664

Token 623: '.same' (ID: 193105)
  Prédit: '.same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.same' → logprob: -3.03521392197581e-05
    2. '.' → logprob: -11.250030517578125
    3. ' .' → logprob: -11.375030517578125
    4. '.sam' → logprob: -12.625030517578125
    5. 'same' → logprob: -13.000030517578125
    6. '_same' → logprob: -16.125030517578125
    7. '同' → logprob: -16.875030517578125
    8. ').' → logprob: -17.125030517578125
    9. ' same' → logprob: -17.250030517578125
    10. '​.' → logprob: -17.875030517578125

Token 624: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. 'u' → logprob: -15.125000953674316
    4. ' (' → logprob: -17.625001907348633
    5. '[u' → logprob: -18.625001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '((' → logprob: -19.125001907348633
    8. ' u' → logprob: -19.125001907348633
    9. ',u' → logprob: -19.750001907348633
    10. '(ui' → logprob: -19.875001907348633

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019262558780610561
    2. '-' → logprob: -6.751926422119141
    3. ' ,' → logprob: -7.876926422119141
    4. ',v' → logprob: -8.12692642211914
    5. ' -' → logprob: -9.62692642211914
    6. ',u' → logprob: -11.37692642211914
    7. '   ' → logprob: -14.00192642211914
    8. '，' → logprob: -14.37692642211914
    9. ' ' → logprob: -14.50192642211914
    10. ',
' → logprob: -15.25192642211914

Token 626: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015035520773380995
    2. ' v' → logprob: -6.5015034675598145
    3. '   ' → logprob: -15.126503944396973
    4. ')v' → logprob: -15.126503944396973
    5. '(v' → logprob: -15.251503944396973
    6. 'u' → logprob: -15.251503944396973
    7. '	v' → logprob: -15.751503944396973
    8. '    ' → logprob: -17.626502990722656
    9. '       ' → logprob: -17.876502990722656
    10. ',v' → logprob: -17.876502990722656

Token 627: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015196762047708035
    2. ')' → logprob: -4.265196800231934
    3. '):
' → logprob: -6.890196800231934
    4. ' ):' → logprob: -11.765196800231934
    5. ')：' → logprob: -12.765196800231934
    6. '):

' → logprob: -14.015196800231934
    7. '):
' → logprob: -14.140196800231934
    8. ')==' → logprob: -14.390196800231934
    9. ')):' → logprob: -14.890196800231934
    10. '():' → logprob: -15.140196800231934

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22113409638404846
    2. 'print' → logprob: -1.721134066581726
    3. ' print' → logprob: -3.9711341857910156
    4. '
' → logprob: -8.346134185791016
    5. '       ' → logprob: -8.596134185791016
    6. '\n' → logprob: -9.471134185791016
    7. '(print' → logprob: -10.221134185791016
    8. '.print' → logprob: -10.596134185791016
    9. ':
' → logprob: -10.846134185791016
    10. '```' → logprob: -11.471134185791016

Token 629: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010747690976131707
    2. ' print' → logprob: -9.250107765197754
    3. '           ' → logprob: -12.125107765197754
    4. '   ' → logprob: -12.625107765197754
    5. '       ' → logprob: -13.125107765197754
    6. '```' → logprob: -15.125107765197754
    7. 'pr' → logprob: -16.375106811523438
    8. '	print' → logprob: -16.750106811523438
    9. '
' → logprob: -16.750106811523438
    10. 'prit' → logprob: -18.000106811523438

Token 630: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007245833403430879
    2. '(' → logprob: -7.875724792480469
    3. '('' → logprob: -8.000724792480469
    4. '"' → logprob: -11.750724792480469
    5. 'Yes' → logprob: -14.250724792480469
    6. ' ("' → logprob: -14.625724792480469
    7. '(True' → logprob: -16.37572479248047
    8. '(
' → logprob: -16.37572479248047
    9. ''' → logprob: -17.25072479248047
    10. '()' → logprob: -17.25072479248047

Token 631: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.019453082233667374
    2. ' Yes' → logprob: -4.144453048706055
    3. 'YES' → logprob: -6.144453048706055
    4. ' yes' → logprob: -7.394453048706055
    5. 'Connected' → logprob: -8.769453048706055
    6. ' ' → logprob: -9.269453048706055
    7. ' connected' → logprob: -9.519453048706055
    8. ' YES' → logprob: -9.644453048706055
    9. 'OK' → logprob: -9.769453048706055
    10. 'Y' → logprob: -10.144453048706055

Token 632: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.47418808937072754
    2. '")
' → logprob: -0.9741880893707275
    3. '")
' → logprob: -9.224187850952148
    4. ')' → logprob: -11.849187850952148
    5. ')
' → logprob: -13.474187850952148
    6. '"' → logprob: -13.474187850952148
    7. '");' → logprob: -13.474187850952148
    8. '\n' → logprob: -14.974187850952148
    9. '```' → logprob: -15.474187850952148
    10. '")

' → logprob: -15.724187850952148

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.116136334836483
    2. 'else' → logprob: -2.241136312484741
    3. ' else' → logprob: -5.74113655090332
    4. '           ' → logprob: -9.86613655090332
    5. '```' → logprob: -10.61613655090332
    6. '#else' → logprob: -12.11613655090332
    7. '   ' → logprob: -12.11613655090332
    8. '	else' → logprob: -12.61613655090332
    9. '}else' → logprob: -13.74113655090332
    10. '     ' → logprob: -14.11613655090332

Token 634: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5280043482780457
    2. '       ' → logprob: -1.2780044078826904
    3. ' else' → logprob: -2.0280044078826904
    4. '	else' → logprob: -11.27800464630127
    5. '           ' → logprob: -12.02800464630127
    6. '```' → logprob: -12.40300464630127
    7. '
' → logprob: -12.77800464630127
    8. '   ' → logprob: -13.90300464630127
    9. 'elif' → logprob: -14.52800464630127
    10. '#else' → logprob: -15.40300464630127

Token 635: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09883461892604828
    2. ':' → logprob: -2.59883451461792
    3. ':
' → logprob: -3.97383451461792
    4. '       ' → logprob: -8.473834991455078
    5. ' print' → logprob: -8.473834991455078
    6. 'print' → logprob: -8.848834991455078
    7. '   ' → logprob: -9.598834991455078
    8. '	       ' → logprob: -9.723834991455078
    9. '               ' → logprob: -9.848834991455078
    10. '		' → logprob: -9.973834991455078

Token 636: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7445074915885925
    2. ' print' → logprob: -0.7445074915885925
    3. '           ' → logprob: -2.9945075511932373
    4. '	print' → logprob: -14.369507789611816
    5. '               ' → logprob: -14.494507789611816
    6. '       ' → logprob: -14.869507789611816
    7. '```' → logprob: -15.119507789611816
    8. '   ' → logprob: -15.619507789611816
    9. '.print' → logprob: -15.994507789611816
    10. '"' → logprob: -16.2445068359375

Token 637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015102163888514042
    2. ' print' → logprob: -6.501510143280029
    3. '           ' → logprob: -11.751510620117188
    4. '       ' → logprob: -17.626510620117188
    5. '               ' → logprob: -19.001510620117188
    6. '	print' → logprob: -19.376510620117188
    7. '   ' → logprob: -19.626510620117188
    8. '"' → logprob: -20.376510620117188
    9. '.print' → logprob: -21.626510620117188
    10. '         ' → logprob: -21.876510620117188

Token 638: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001552665780764073
    2. '(' → logprob: -9.125155448913574
    3. '"' → logprob: -10.000155448913574
    4. '(
' → logprob: -14.750155448913574
    5. '("""' → logprob: -15.875155448913574
    6. ' ("' → logprob: -16.125154495239258
    7. '("\' → logprob: -16.125154495239258
    8. '(""' → logprob: -16.375154495239258
    9. '('' → logprob: -16.750154495239258
    10. '()' → logprob: -17.375154495239258

Token 639: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -2.1008713702030946e-06
    2. ' NO' → logprob: -14.000001907348633
    3. '"' → logprob: -14.250001907348633
    4. '"No' → logprob: -14.875001907348633
    5. 'No' → logprob: -15.375001907348633
    6. '_NO' → logprob: -18.625001907348633
    7. '"N' → logprob: -19.000001907348633
    8. 'N' → logprob: -19.500001907348633
    9. '.NO' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.375001907348633

Token 640: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10048669576644897
    2. '")' → logprob: -2.3504867553710938
    3. ')")' → logprob: -8.225486755371094
    4. ')
' → logprob: -11.725486755371094
    5. '")
' → logprob: -13.100486755371094
    6. '')' → logprob: -14.600486755371094
    7. ')")
' → logprob: -14.850486755371094
    8. '`)' → logprob: -15.225486755371094
    9. ')"' → logprob: -15.350486755371094
    10. '}")' → logprob: -15.475486755371094


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 638
Tokens correctement prédits (1ère position, stricte): 226
Tokens correctement prédits (1ère position, avec adaptation): 254
Tokens correctement prédits (top 10): 493
Précision stricte (1ère position): 35.42%
Précision adaptée (1ère position): 39.81%
Précision (top 10): 77.27%
================================================================================
