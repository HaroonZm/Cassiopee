================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B = map(int, input().split())
anna = list(map(int, input().split()))
bruno = list(map(int, input().split()))

# We want the longest common subarray between some subsequence of Anna's cards (any subset - but since order must be preserved, just any subsequence after removing 0 or more cards)
# and some contiguous subarray of Bruno's cards (since Bruno can only cut from the top or bottom, meaning a contiguous subarray).
# Because Anna can remove any cards from anywhere (not necessarily contiguous), her "subsequence" can skip cards arbitrarily.
# Bruno can only remove cards from the top and bottom, so the subarray he keeps is continuous.
# The score is the length of the matching sequence.

# The problem is to find the maximum length n of a sequence which appears as a subsequence in Anna's cards and a contiguous subarray in Bruno's cards.

# Approach:
# Since A and B can be up to 5000, it's feasible to use DP with O(A*B) complexity.
# We can use DP to find the longest common subarray ending at anna[i], bruno[j].
# For each pair (i,j), if anna[i]==bruno[j], dp[i][j] = dp[i-1][j-1] +1 else 0.
# This gives the length of longest common subarray ending at i,j.
# However, Anna's cards subsequence isn't necessarily contiguous but the DP above finds longest common contiguous suffix.
# But Anna can discard cards arbitrarily to make the resulting subsequence contiguous.

# Wait: The question states Anna can discard any cards she likes from anywhere to make her new pile. So the resulting pile in Anna's case must also be contiguous or any subsequence?
# Re-reading: "アンナはA枚のカードの中から任意の何枚か（0枚でもよい）を捨てて新しい山を作る." (Anna discards any cards at any positions and form a new pile)
# So Anna's new pile cards remain in the same relative order as original cards, but keep only a subsequence.
# Bruno only discards cards from top and bottom to form a contiguous subarray (the cards in the middle).
# The two piles must be exactly equal sequences.

# So the matching sequence must:
# - Appear as a subsequence in Anna's cards.
# - Appear as a contiguous subarray in Bruno's cards.

# To find the longest such sequence, we can consider all contiguous subarrays of Bruno's cards, and for each, check the length of its LCS with Anna's cards subsequence.

# But enumerating all B*(B+1)/2 subarrays will be O(B^2), which can be up to 25 million, borderline but might be too slow.

# Optimize:
# We'll reverse the roles.

# For each ending position j in Bruno's cards, we can create a DP to find the longest prefix suffix matching.

# Here's a better idea:
# For each position in Bruno, and length l, we consider the subarray bruno[j-l+1..j]

# Then, for all positions in Anna, we check if the subarray is subsequence of Anna's cards.

# Since Anna can remove cards arbitrarily but must keep order, subsequence matching is straightforward.

# So for speed, we fix the contiguous subarray in Bruno and check if it's subsequence of Anna.

# To check if a sequence is a subsequence of Anna efficiently:

# For Anna's cards, precompute positions of each number to speed up subsequence matching.

# But subsequence matching per query is O(A), so naive will be O(B^2 * A) = ~10^11 too big.

# Alternative approach:
# Let's switch the approach to find the longest common substring between Anna and Bruno with a twist:

# We want the longest common substring between Anna and Bruno.

# But Anna's subsequence must be contiguous because after discarding, their pile must be linear and contiguous.

# No, Anna can discard cards arbitrarily, so her pile is a subsequence, can be non-contiguous.

# So longest common substring won't work exactly.

# However, the matching sequence must be substring in Bruno and subsequence in Anna.

# So if we fix a substring of Bruno, we can check if it is a subsequence of Anna.

# Another way:

# Enumerate all substrings of Bruno from length L down to 1, check if substring is subsequence of Anna, and return max L for which yes.

# So binary search length L:

# For each length from max down to 1 (using binary search to reduce), we check all substrings of Bruno of length L.

# For each substring, check if it is subsequence of Anna.

# Since checking subsequence for length L substrings is O(A) per substring.

# For B=5000 and L ~2500, still expensive.

# Optimize subsequence checking:

# Preprocessing Anna:

# For Anna's cards, we can build next occurrence arrays for each card value:

# For each position i in Anna (0-based), next[i][v] = next occurrence of card v from position i.

# So to check subsequence of length L quickly:

# For substring s of Bruno, we can simulate traversing Anna's cards with next arrays:

# Start at pos = 0

# For each card c in substring s:

# pos = next[pos][c]

# If pos == -1 (no occurrence), fail

# else pos +=1 to move to next position

# If we reach the end successfully, substring s is subsequence.

# next arrays build:

# next[i][v] (i in 0..A) (A+1 size to handle end)

# For positions from A-1 downto 0:

# For each card value 1..1000, set next[i][v]:

# But storing next array for each position and each of 1000 cards is big:

# 5000*1000 = 5 million ints -- acceptable in memory.

# Build it.

# Then binary search length L from 0 to min(A, B)

# For each L, check all substrings of Bruno of length L if any is subsequence of Anna.

# If yes, set low=L+1

# else high=L

# Loop to find maximum.

# Implement.

INF = -1

max_card = 1000

# Build next array for Anna

next_pos = [[INF]*(max_card+1) for _ in range(A+1)]

for c in range(1,max_card+1):
    next_pos[A][c] = INF

for i in range(A-1,-1,-1):
    for c in range(1,max_card+1):
        next_pos[i][c] = next_pos[i+1][c]
    next_pos[i][anna[i]] = i

def is_subsequence(sub):
    pos =0
    for c in sub:
        pos = next_pos[pos][c]
        if pos == INF:
            return False
        pos +=1
    return True

low =0
high = min(A,B)+1

while low < high:
    mid = (low + high)//2
    found = False
    for start in range(B - mid + 1):
        sub = bruno[start:start+mid]
        if is_subsequence(sub):
            found = True
            break
    if found:
        low = mid +1
    else:
        high = mid

print(low-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.587083101272583
    2. ' input' → logprob: -2.337083101272583
    3. '0' → logprob: -2.587083101272583
    4. 'input' → logprob: -2.962083101272583
    5. ' []' → logprob: -3.212083101272583
    6. ' [' → logprob: -3.462083101272583
    7. '10' → logprob: -3.462083101272583
    8. ' map' → logprob: -3.837083101272583
    9. '1' → logprob: -3.962083101272583
    10. '[]' → logprob: -4.087082862854004

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01426058541983366
    2. '(lambda' → logprob: -5.014260768890381
    3. '<|end|>' → logprob: -5.139260768890381
    4. '(int' → logprob: -8.014260292053223
    5. '```' → logprob: -8.514260292053223
    6. '<|end|>' → logprob: -8.889260292053223
    7. '(user' → logprob: -9.139260292053223
    8. '(token' → logprob: -9.264260292053223
    9. ')' → logprob: -9.639260292053223
    10. '(str' → logprob: -9.889260292053223

Token 5: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15151238441467285
    2. ')' → logprob: -2.651512384414673
    3. ',input' → logprob: -3.401512384414673
    4. 'input' → logprob: -3.776512384414673
    5. ',' → logprob: -4.526512145996094
    6. '(' → logprob: -7.151512145996094
    7. '`)' → logprob: -7.276512145996094
    8. '```' → logprob: -8.276512145996094
    9. '<input' → logprob: -8.401512145996094
    10. '[input' → logprob: -8.526512145996094

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06203535199165344
    2. ' input' → logprob: -2.812035322189331
    3. '(input' → logprob: -9.68703556060791
    4. ')' → logprob: -12.43703556060791
    5. ',input' → logprob: -13.81203556060791
    6. '=input' → logprob: -14.68703556060791
    7. '<input' → logprob: -16.187034606933594
    8. '	input' → logprob: -16.437034606933594
    9. '[input' → logprob: -17.187034606933594
    10. '```' → logprob: -18.437034606933594

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24104617536067963
    2. ')' → logprob: -2.491046190261841
    3. '())' → logprob: -2.491046190261841
    4. '()' → logprob: -3.491046190261841
    5. '(""))' → logprob: -5.741045951843262
    6. '('' → logprob: -5.866045951843262
    7. '`()' → logprob: -6.491045951843262
    8. '(
' → logprob: -6.741045951843262
    9. '(token' → logprob: -6.991045951843262
    10. '(()' → logprob: -7.116045951843262

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000799384550191462
    2. 'strip' → logprob: -7.250799179077148
    3. ')' → logprob: -9.750799179077148
    4. ' split' → logprob: -10.625799179077148
    5. 'rstrip' → logprob: -12.125799179077148
    6. '(split' → logprob: -14.500799179077148
    7. 'read' → logprob: -14.875799179077148
    8. 'replace' → logprob: -15.375799179077148
    9. 'spl' → logprob: -15.875799179077148
    10. 'startswith' → logprob: -16.37579917907715

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4907299876213074
    2. '())' → logprob: -0.9907299876213074
    3. '))' → logprob: -4.240729808807373
    4. '()' → logprob: -6.740729808807373
    5. '()))' → logprob: -7.365729808807373
    6. '`)' → logprob: -8.490730285644531
    7. '(' → logprob: -10.490730285644531
    8. ')`' → logprob: -11.365730285644531
    9. '`()' → logprob: -11.865730285644531
    10. ' ())' → logprob: -11.990730285644531

Token 10: 'anna' (ID: 9332)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42701634764671326
    2. '*' → logprob: -1.4270163774490356
    3. '#' → logprob: -2.677016258239746
    4. '+
' → logprob: -4.927016258239746
    5. '
' → logprob: -5.427016258239746
    6. '[' → logprob: -5.802016258239746
    7. 'if' → logprob: -6.052016258239746
    8. '\n' → logprob: -6.177016258239746
    9. '```' → logprob: -6.177016258239746
    10. ''' → logprob: -6.302016258239746

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6632791757583618
    2. '_' → logprob: -1.6632791757583618
    3. ''s' → logprob: -2.7882790565490723
    4. '[' → logprob: -3.4132790565490723
    5. 's' → logprob: -3.4132790565490723
    6. '_count' → logprob: -4.038279056549072
    7. '_s' → logprob: -4.163279056549072
    8. '()' → logprob: -4.413279056549072
    9. '=' → logprob: -4.538279056549072
    10. ' =' → logprob: -4.913279056549072

Token 12: ' list' (ID: 1562)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5825958847999573
    2. '0' → logprob: -1.7075958251953125
    3. '[]' → logprob: -2.5825958251953125
    4. '[' → logprob: -3.5825958251953125
    5. ' ' → logprob: -3.5825958251953125
    6. '[A' → logprob: -3.5825958251953125
    7. 'min' → logprob: -4.2075958251953125
    8. ' A' → logprob: -4.3325958251953125
    9. '[min' → logprob: -4.7075958251953125
    10. 'B' → logprob: -4.7075958251953125

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.825890159234405e-05
    2. '(range' → logprob: -11.125068664550781
    3. '()' → logprob: -11.375068664550781
    4. '(int' → logprob: -11.500068664550781
    5. '(
' → logprob: -12.750068664550781
    6. '((' → logprob: -12.875068664550781
    7. '("("' → logprob: -13.125068664550781
    8. 's' → logprob: -13.375068664550781
    9. '(user' → logprob: -13.500068664550781
    10. '(s' → logprob: -13.625068664550781

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001645644661039114
    2. 'int' → logprob: -9.625164985656738
    3. '(' → logprob: -9.750164985656738
    4. '<int' → logprob: -10.375164985656738
    5. '=int' → logprob: -12.875164985656738
    6. ',int' → logprob: -12.875164985656738
    7. '[int' → logprob: -13.375164985656738
    8. '```' → logprob: -14.000164985656738
    9. ')' → logprob: -14.625164985656738
    10. ' (' → logprob: -15.000164985656738

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1333213448524475
    2. ',input' → logprob: -2.3833212852478027
    3. ',' → logprob: -3.6333212852478027
    4. '(' → logprob: -5.133321285247803
    5. ')' → logprob: -9.633321762084961
    6. '=input' → logprob: -9.883321762084961
    7. 'input' → logprob: -9.883321762084961
    8. '),' → logprob: -10.883321762084961
    9. '(),' → logprob: -11.258321762084961
    10. ' ,' → logprob: -11.383321762084961

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47410017251968384
    2. ' input' → logprob: -0.9741001725196838
    3. '(input' → logprob: -11.599100112915039
    4. ',input' → logprob: -12.474100112915039
    5. '=input' → logprob: -12.974100112915039
    6. ' ' → logprob: -13.349100112915039
    7. 'list' → logprob: -13.349100112915039
    8. '	input' → logprob: -13.849100112915039
    9. '[input' → logprob: -13.974100112915039
    10. 'range' → logprob: -14.474100112915039

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.957014556974173e-05
    2. '()' → logprob: -9.625069618225098
    3. ' ().' → logprob: -13.375069618225098
    4. '())' → logprob: -15.000069618225098
    5. ')' → logprob: -15.000069618225098
    6. '()))' → logprob: -15.250069618225098
    7. '.' → logprob: -15.375069618225098
    8. '(' → logprob: -15.625069618225098
    9. '()
' → logprob: -16.75006866455078
    10. '().__' → logprob: -16.87506866455078

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ' split' → logprob: -14.000001907348633
    4. 'rstrip' → logprob: -16.375001907348633
    5. '(split' → logprob: -17.000001907348633
    6. 'spl' → logprob: -19.125001907348633
    7. 'plit' → logprob: -20.375001907348633
    8. '.split' → logprob: -20.875001907348633
    9. 'read' → logprob: -21.125001907348633
    10. 'startswith' → logprob: -21.625001907348633

Token 19: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07679048180580139
    2. '())' → logprob: -2.8267905712127686
    3. '()' → logprob: -4.5767903327941895
    4. '))' → logprob: -5.5767903327941895
    5. ')' → logprob: -8.076790809631348
    6. '(' → logprob: -8.451790809631348
    7. '())))' → logprob: -10.201790809631348
    8. '()));' → logprob: -10.201790809631348
    9. '()))
' → logprob: -11.201790809631348
    10. '()),' → logprob: -11.826790809631348

Token 20: 'br' (ID: 1697)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3460696041584015
    2. 'bob' → logprob: -1.721069574356079
    3. 'bill' → logprob: -4.596069812774658
    4. 'm' → logprob: -4.596069812774658
    5. 'sum' → logprob: -4.971069812774658
    6. 'br' → logprob: -4.971069812774658
    7. 'ben' → logprob: -5.096069812774658
    8. 'diff' → logprob: -5.346069812774658
    9. 'beth' → logprob: -5.471069812774658
    10. 'count' → logprob: -5.471069812774658

Token 21: 'uno' (ID: 12811)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7051377296447754
    2. 'oke' → logprob: -1.3301377296447754
    3. 'ian' → logprob: -1.9551377296447754
    4. 'eam' → logprob: -3.8301377296447754
    5. 'own' → logprob: -3.9551377296447754
    6. 'ead' → logprob: -4.205137729644775
    7. 'a' → logprob: -5.080137729644775
    8. 'and' → logprob: -5.205137729644775
    9. 'ean' → logprob: -5.205137729644775
    10. '```' → logprob: -5.455137729644775

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811678946018219
    2. '=' → logprob: -1.4061678647994995
    3. '_' → logprob: -12.281167984008789
    4. 's' → logprob: -12.906167984008789
    5. '[' → logprob: -12.906167984008789
    6. ')' → logprob: -13.031167984008789
    7. ' ' → logprob: -13.531167984008789
    8. '.' → logprob: -13.781167984008789
    9. 'a' → logprob: -14.906167984008789
    10. '.=' → logprob: -15.281167984008789

Token 23: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.016063109040260315
    2. ' list' → logprob: -4.141063213348389
    3. '(list' → logprob: -10.51606273651123
    4. '[list' → logprob: -14.39106273651123
    5. '=list' → logprob: -14.89106273651123
    6. '	list' → logprob: -15.01606273651123
    7. '[' → logprob: -15.76606273651123
    8. '(' → logprob: -15.89106273651123
    9. '[]' → logprob: -17.266063690185547
    10. ':list' → logprob: -17.391063690185547

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16714869439601898
    2. '(map' → logprob: -1.9171487092971802
    3. '(int' → logprob: -5.167148590087891
    4. '(list' → logprob: -7.667148590087891
    5. '(br' → logprob: -8.16714859008789
    6. '((' → logprob: -8.66714859008789
    7. '(
' → logprob: -9.66714859008789
    8. '(range' → logprob: -10.29214859008789
    9. '(

' → logprob: -10.54214859008789
    10. ' (' → logprob: -10.91714859008789

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -11.250031471252441
    3. 'int' → logprob: -11.750031471252441
    4. '<int' → logprob: -11.750031471252441
    5. '=int' → logprob: -13.625031471252441
    6. ',int' → logprob: -14.250031471252441
    7. '[int' → logprob: -15.125031471252441
    8. ' (' → logprob: -15.250031471252441
    9. '```' → logprob: -16.875030517578125
    10. ' int' → logprob: -17.250030517578125

Token 26: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06333918869495392
    2. ',' → logprob: -3.3133392333984375
    3. ',int' → logprob: -3.8133392333984375
    4. 'int' → logprob: -6.5633392333984375
    5. '(' → logprob: -7.5633392333984375
    6. '=int' → logprob: -7.6883392333984375
    7. '<int' → logprob: -8.313339233398438
    8. '[int' → logprob: -9.188339233398438
    9. '(input' → logprob: -9.813339233398438
    10. '```' → logprob: -10.063339233398438

Token 27: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022671928629279137
    2. 'input' → logprob: -4.147671699523926
    3. ' int' → logprob: -5.272671699523926
    4. ' input' → logprob: -6.647671699523926
    5. '(int' → logprob: -8.772671699523926
    6. '[int' → logprob: -11.022671699523926
    7. '<int' → logprob: -11.772671699523926
    8. '(input' → logprob: -13.022671699523926
    9. ',int' → logprob: -13.397671699523926
    10. '=int' → logprob: -13.522671699523926

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -15.000000953674316
    3. '.' → logprob: -15.375000953674316
    4. ' ().' → logprob: -15.375000953674316
    5. '(.' → logprob: -16.875
    6. '(' → logprob: -17.0
    7. '()).' → logprob: -17.5
    8. ' .' → logprob: -19.125
    9. ').' → logprob: -19.25
    10. '().
' → logprob: -20.125

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'spl' → logprob: -15.625000953674316
    3. '(split' → logprob: -15.750000953674316
    4. ' split' → logprob: -16.375
    5. 'strip' → logprob: -18.375
    6. '.split' → logprob: -19.25
    7. 'plit' → logprob: -19.75
    8. ')' → logprob: -19.75
    9. '```' → logprob: -20.375
    10. '_split' → logprob: -20.5

Token 30: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09764459729194641
    2. '))' → logprob: -3.097644567489624
    3. '())' → logprob: -3.347644567489624
    4. '()' → logprob: -4.597644805908203
    5. ')' → logprob: -5.972644805908203
    6. '()))
' → logprob: -10.597644805908203
    7. '(' → logprob: -10.847644805908203
    8. '()));' → logprob: -10.847644805908203
    9. '()),' → logprob: -12.472644805908203
    10. '())).' → logprob: -12.847644805908203

Token 31: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0806899443268776
    2. 'r' → logprob: -4.080689907073975
    3. 'c' → logprob: -4.205689907073975
    4. 'anna' → logprob: -4.205689907073975
    5. '.' → logprob: -5.330689907073975
    6. '#' → logprob: -5.330689907073975
    7. 's' → logprob: -5.705689907073975
    8. '_' → logprob: -6.205689907073975
    9. 'n' → logprob: -6.330689907073975
    10. 'b' → logprob: -6.455689907073975

Token 32: ' We' (ID: 1416)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.2767542600631714
    2. 'result' → logprob: -1.6517542600631714
    3. 'count' → logprob: -2.026754379272461
    4. 'a' → logprob: -2.151754379272461
    5. 'anna' → logprob: -2.276754379272461
    6. 'for' → logprob: -3.651754379272461
    7. 'ans' → logprob: -4.026754379272461
    8. 'sum' → logprob: -4.276754379272461
    9. 'if' → logprob: -4.276754379272461
    10. 'total' → logprob: -4.401754379272461

Token 33: ' want' (ID: 1682)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0531646013259888
    2. 'a' → logprob: -1.9281646013259888
    3. ' =' → logprob: -1.9281646013259888
    4. '#' → logprob: -2.303164482116699
    5. '=' → logprob: -2.428164482116699
    6. 'count' → logprob: -2.928164482116699
    7. 'anna' → logprob: -2.928164482116699
    8. 'i' → logprob: -4.303164482116699
    9. 'score' → logprob: -4.803164482116699
    10. '.' → logprob: -5.178164482116699

Token 34: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47489655017852783
    2. 'to' → logprob: -1.0998965501785278
    3. 'a' → logprob: -4.349896430969238
    4. 't' → logprob: -4.724896430969238
    5. '=' → logprob: -5.474896430969238
    6. ' =' → logprob: -5.849896430969238
    7. '#' → logprob: -5.974896430969238
    8. ' ' → logprob: -6.224896430969238
    9. 'max' → logprob: -6.349896430969238
    10. 's' → logprob: -6.474896430969238

Token 35: ' longest' (ID: 37511)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.019792079925537
    2. 'result' → logprob: -1.269792079925537
    3. '#' → logprob: -1.894792079925537
    4. 'answer' → logprob: -3.144792079925537
    5. 's' → logprob: -4.019792079925537
    6. 'count' → logprob: -4.269792079925537
    7. 'print' → logprob: -4.269792079925537
    8. 'ans' → logprob: -4.394792079925537
    9. 'common' → logprob: -4.394792079925537
    10. 'for' → logprob: -4.519792079925537

Token 36: ' common' (ID: 5355)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.128378763794899
    2. '_common' → logprob: -2.6283788681030273
    3. 'common' → logprob: -3.8783788681030273
    4. ' common' → logprob: -4.253378868103027
    5. '_sub' → logprob: -5.378378868103027
    6. 'sub' → logprob: -6.003378868103027
    7. '_prefix' → logprob: -6.253378868103027
    8. ' subse' → logprob: -6.878378868103027
    9. ' _' → logprob: -7.253378868103027
    10. '_con' → logprob: -8.128378868103027

Token 37: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.29244568943977356
    2. ' subse' → logprob: -1.5424456596374512
    3. 'prefix' → logprob: -4.167445659637451
    4. 'substring' → logprob: -4.417445659637451
    5. '_sub' → logprob: -5.292445659637451
    6. 'sequence' → logprob: -5.542445659637451
    7. 'common' → logprob: -7.292445659637451
    8. ' contiguous' → logprob: -7.292445659637451
    9. 'div' → logprob: -7.917445659637451
    10. ' sub' → logprob: -8.16744613647461

Token 38: 'array' (ID: 3361)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0007643607095815241
    2. 'string' → logprob: -7.2507643699646
    3. 's' → logprob: -10.375763893127441
    4. 'array' → logprob: -11.625763893127441
    5. 'seq' → logprob: -12.375763893127441
    6. 'se' → logprob: -12.625763893127441
    7. 'sequ' → logprob: -13.250763893127441
    8. '```' → logprob: -13.625763893127441
    9. 'quence' → logprob: -14.000763893127441
    10. '
' → logprob: -14.375763893127441

Token 39: ' between' (ID: 2870)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06308045983314514
    2. ' ' → logprob: -3.6880805492401123
    3. ' =' → logprob: -4.938080310821533
    4. '.' → logprob: -4.938080310821533
    5. '[' → logprob: -5.438080310821533
    6. ',' → logprob: -5.938080310821533
    7. '=' → logprob: -5.938080310821533
    8. 'm' → logprob: -6.438080310821533
    9. '_length' → logprob: -6.438080310821533
    10. 's' → logprob: -6.563080310821533

Token 40: ' some' (ID: 1236)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.009953462518751621
    2. ' anna' → logprob: -4.759953498840332
    3. 'br' → logprob: -6.759953498840332
    4. ' br' → logprob: -9.134953498840332
    5. 'ana' → logprob: -10.884953498840332
    6. ' ' → logprob: -11.259953498840332
    7. '```' → logprob: -11.384953498840332
    8. 'anne' → logprob: -12.759953498840332
    9. 'the' → logprob: -13.009953498840332
    10. '   ' → logprob: -13.009953498840332

Token 41: ' subse' (ID: 19874)
  Prédit: ' anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' anna' → logprob: -0.9423947930335999
    2. ' contiguous' → logprob: -1.817394733428955
    3. 'anna' → logprob: -2.317394733428955
    4. 'prefix' → logprob: -2.692394733428955
    5. ' prefix' → logprob: -2.942394733428955
    6. 'A' → logprob: -3.692394733428955
    7. ' consecutive' → logprob: -3.942394733428955
    8. 's' → logprob: -4.067394733428955
    9. 'sub' → logprob: -4.067394733428955
    10. ' prefixes' → logprob: -4.067394733428955

Token 42: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.018258577212691307
    2. 'quences' → logprob: -4.018258571624756
    3. 'q' → logprob: -9.643259048461914
    4. 'sequence' → logprob: -11.143259048461914
    5. '```' → logprob: -11.768259048461914
    6. 'quent' → logprob: -12.393259048461914
    7. 'QUENCE' → logprob: -12.768259048461914
    8. 'quential' → logprob: -12.893259048461914
    9. '[]' → logprob: -13.018259048461914
    10. 'qu' → logprob: -13.143259048461914

Token 43: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05860568955540657
    2. 's' → logprob: -4.058605670928955
    3. '```' → logprob: -4.808605670928955
    4. 'a' → logprob: -5.308605670928955
    5. '[]' → logprob: -5.683605670928955
    6. '(' → logprob: -5.933605670928955
    7. '_length' → logprob: -5.933605670928955
    8. '[' → logprob: -5.933605670928955
    9. '_a' → logprob: -6.683605670928955
    10. ' _' → logprob: -6.683605670928955

Token 44: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.053144555538892746
    2. ' anna' → logprob: -3.0531444549560547
    3. 'br' → logprob: -6.178144454956055
    4. ' br' → logprob: -6.678144454956055
    5. 'a' → logprob: -7.678144454956055
    6. 'ana' → logprob: -9.053144454956055
    7. 'A' → logprob: -9.178144454956055
    8. 'anne' → logprob: -9.490644454956055
    9. '```' → logprob: -9.990644454956055
    10. ' a' → logprob: -10.115644454956055

Token 45: ''s' (ID: 885)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6256121397018433
    2. 'and' → logprob: -0.8756121397018433
    3. 's' → logprob: -3.750612258911133
    4. '_' → logprob: -5.125612258911133
    5. '[]' → logprob: -5.375612258911133
    6. ''s' → logprob: -5.500612258911133
    7. ')' → logprob: -6.000612258911133
    8. ',' → logprob: -6.250612258911133
    9. '[' → logprob: -6.750612258911133
    10. '<|end|>' → logprob: -7.125612258911133

Token 46: ' cards' (ID: 10541)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3229823410511017
    2. ' and' → logprob: -1.3229823112487793
    3. '<|end|>' → logprob: -5.322982311248779
    4. 's' → logprob: -6.072982311248779
    5. ''s' → logprob: -7.072982311248779
    6. 'br' → logprob: -8.072982788085938
    7. '```' → logprob: -8.322982788085938
    8. 'anna' → logprob: -8.572982788085938
    9. '[]' → logprob: -8.572982788085938
    10. '<|end|>' → logprob: -8.947982788085938

Token 47: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'any' (ID: 1252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5489511489868164
    2. ' and' → logprob: -1.4239511489868164
    3. ' )' → logprob: -2.4239511489868164
    4. 'and' → logprob: -2.7989511489868164
    5. ' ' → logprob: -3.7989511489868164
    6. ',' → logprob: -5.173951148986816
    7. ' ,' → logprob: -6.673951148986816
    8. 'a' → logprob: -7.923951148986816
    9. ' that' → logprob: -8.298951148986816
    10. ' of' → logprob: -8.673951148986816

Token 49: ' subset' (ID: 58845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24971574544906616
    2. '<|end|>' → logprob: -2.249715805053711
    3. ' )' → logprob: -2.874715805053711
    4. '```' → logprob: -4.624715805053711
    5. '<|end|>' → logprob: -4.999715805053711
    6. ' ' → logprob: -5.124715805053711
    7. 'subset' → logprob: -5.249715805053711
    8. '[' → logprob: -5.874715805053711
    9. ' subset' → logprob: -6.124715805053711
    10. '_' → logprob: -6.124715805053711

Token 50: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21505999565124512
    2. '(' → logprob: -2.340059995651245
    3. ' ' → logprob: -4.090060234069824
    4. ' )' → logprob: -4.090060234069824
    5. ',' → logprob: -4.215060234069824
    6. ' and' → logprob: -4.340060234069824
    7. '<|end|>' → logprob: -4.715060234069824
    8. '[' → logprob: -4.840060234069824
    9. '()' → logprob: -5.715060234069824
    10. 'and' → logprob: -5.840060234069824

Token 51: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6259598135948181
    2. ' )' → logprob: -1.000959873199463
    3. ' of' → logprob: -3.500959873199463
    4. ',' → logprob: -4.375959873199463
    5. ' but' → logprob: -4.625959873199463
    6. ' and' → logprob: -4.625959873199463
    7. ' that' → logprob: -4.875959873199463
    8. ' with' → logprob: -5.125959873199463
    9. '<|end|>' → logprob: -5.125959873199463
    10. ' not' → logprob: -6.125959873199463

Token 52: ' since' (ID: 3630)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5575632452964783
    2. ' the' → logprob: -2.057563304901123
    3. ' contiguous' → logprob: -2.057563304901123
    4. ' )' → logprob: -3.807563304901123
    5. ' a' → logprob: -4.182563304901123
    6. ' ' → logprob: -4.307563304901123
    7. ' that' → logprob: -4.432563304901123
    8. ' subset' → logprob: -4.557563304901123
    9. ' all' → logprob: -4.682563304901123
    10. ' subse' → logprob: -4.807563304901123

Token 53: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.8951289057731628
    2. ' the' → logprob: -1.7701289653778076
    3. 'the' → logprob: -2.3951289653778076
    4. ' cont' → logprob: -2.7701289653778076
    5. 'cont' → logprob: -2.8951289653778076
    6. ' contiguous' → logprob: -2.8951289653778076
    7. ' we' → logprob: -3.6451289653778076
    8. 'order' → logprob: -3.7701289653778076
    9. ' they' → logprob: -3.8951289653778076
    10. ' subse' → logprob: -4.2701287269592285

Token 54: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6563101410865784
    2. ')' → logprob: -1.6563100814819336
    3. ' must' → logprob: -2.5313100814819336
    4. 'mat' → logprob: -3.2813100814819336
    5. 'is' → logprob: -3.9063100814819336
    6. ' mat' → logprob: -4.031310081481934
    7. ' matters' → logprob: -4.031310081481934
    8. 'must' → logprob: -4.156310081481934
    9. ' )' → logprob: -4.281310081481934
    10. ' does' → logprob: -4.906310081481934

Token 55: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.36055922508239746
    2. ' be' → logprob: -1.2355592250823975
    3. 'remain' → logprob: -4.735559463500977
    4. ' remain' → logprob: -5.985559463500977
    5. 'not' → logprob: -8.860559463500977
    6. 'pres' → logprob: -9.110559463500977
    7. '	be' → logprob: -9.110559463500977
    8. 'match' → logprob: -9.985559463500977
    9. 'stay' → logprob: -10.110559463500977
    10. 'b' → logprob: -10.235559463500977

Token 56: ' preserved' (ID: 59936)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.2021903097629547
    2. 'maint' → logprob: -1.9521902799606323
    3. 'continuous' → logprob: -3.952190399169922
    4. 'cont' → logprob: -4.827190399169922
    5. 'con' → logprob: -5.327190399169922
    6. 'ke' → logprob: -5.952190399169922
    7. ' preserved' → logprob: -5.952190399169922
    8. 'the' → logprob: -6.952190399169922
    9. 'strict' → logprob: -7.827190399169922
    10. '```' → logprob: -7.952190399169922

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06770122051239014
    2. ')' → logprob: -2.9427013397216797
    3. ' ,' → logprob: -4.56770133972168
    4. ' )' → logprob: -6.94270133972168
    5. ' ' → logprob: -7.19270133972168
    6. '[' → logprob: -8.06770133972168
    7. ',
' → logprob: -8.94270133972168
    8. ',)' → logprob: -10.06770133972168
    9. '),' → logprob: -10.19270133972168
    10. 's' → logprob: -11.44270133972168

Token 58: ' just' (ID: 1327)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40276992321014404
    2. ')' → logprob: -1.652769923210144
    3. ' )' → logprob: -2.2777700424194336
    4. ' and' → logprob: -4.027770042419434
    5. ',' → logprob: -6.152770042419434
    6. ' 
' → logprob: -6.527770042419434
    7. ' a' → logprob: -6.652770042419434
    8. ' max' → logprob: -6.777770042419434
    9. '```' → logprob: -6.902770042419434
    10. 'a' → logprob: -6.902770042419434

Token 59: ' any' (ID: 1062)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.30827656388282776
    2. 'con' → logprob: -1.9332765340805054
    3. ' contiguous' → logprob: -3.183276653289795
    4. 'continuous' → logprob: -3.308276653289795
    5. 'consider' → logprob: -4.683276653289795
    6. 'a' → logprob: -4.933276653289795
    7. ' cont' → logprob: -5.308276653289795
    8. 'taking' → logprob: -5.558276653289795
    9. 'finding' → logprob: -6.058276653289795
    10. 'the' → logprob: -6.183276653289795

Token 60: ' subse' (ID: 19874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.10482195019721985
    2. 't' → logprob: -2.3548219203948975
    3. 'quences' → logprob: -5.979822158813477
    4. 'q' → logprob: -6.354822158813477
    5. 'QUENCE' → logprob: -8.604822158813477
    6. '#' → logprob: -9.979822158813477
    7. ')' → logprob: -10.729822158813477
    8. 'quent' → logprob: -11.229822158813477
    9. '[' → logprob: -11.354822158813477
    10. 'quential' → logprob: -12.104822158813477

Token 62: ' after' (ID: 1934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06835964322090149
    2. '<|end|>' → logprob: -3.568359613418579
    3. '[' → logprob: -4.318359851837158
    4. '[]' → logprob: -5.568359851837158
    5. ' ' → logprob: -5.693359851837158
    6. '
' → logprob: -5.943359851837158
    7. '<|end|>' → logprob: -6.443359851837158
    8. '.' → logprob: -6.568359851837158
    9. ',' → logprob: -6.568359851837158
    10. ' )' → logprob: -6.693359851837158

Token 63: ' removing' (ID: 28559)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -1.1932145357131958
    2. 'cho' → logprob: -2.1932144165039062
    3. 'all' → logprob: -2.9432144165039062
    4. ' filtering' → logprob: -2.9432144165039062
    5. 'sorting' → logprob: -3.0682144165039062
    6. 'select' → logprob: -3.1932144165039062
    7. ' removing' → logprob: -3.3182144165039062
    8. 'filter' → logprob: -3.3182144165039062
    9. 'taking' → logprob: -3.3182144165039062
    10. 'the' → logprob: -3.4432144165039062

Token 64: ' ' (ID: 220)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.48286402225494385
    2. ' some' → logprob: -2.1078639030456543
    3. 'some' → logprob: -2.3578639030456543
    4. 'elements' → logprob: -2.9828639030456543
    5. ' duplicates' → logprob: -3.6078639030456543
    6. ' tokens' → logprob: -3.8578639030456543
    7. 'duplicates' → logprob: -4.232863903045654
    8. ' cards' → logprob: -4.857863903045654
    9. 'tokens' → logprob: -5.107863903045654
    10. ' the' → logprob: -5.107863903045654

Token 65: '0' (ID: 15)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.1740691661834717
    2. 'elements' → logprob: -1.2990691661834717
    3. 'some' → logprob: -1.4240691661834717
    4. 'duplicates' → logprob: -3.1740691661834717
    5. '```' → logprob: -3.6740691661834717
    6. ' some' → logprob: -4.049069404602051
    7. 'cards' → logprob: -4.174069404602051
    8. ' duplicates' → logprob: -4.299069404602051
    9. 'certain' → logprob: -4.549069404602051
    10. 'tokens' → logprob: -4.674069404602051

Token 66: ' or' (ID: 503)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6365979909896851
    2. ')' → logprob: -2.0115981101989746
    3. ' ' → logprob: -2.1365981101989746
    4. ' )' → logprob: -2.6365981101989746
    5. '-' → logprob: -3.0115981101989746
    6. '0' → logprob: -3.3865981101989746
    7. '1' → logprob: -4.011598110198975
    8. ''s' → logprob: -4.261598110198975
    9. ',' → logprob: -4.386598110198975
    10. ' ,' → logprob: -5.511598110198975

Token 67: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.8159695863723755
    2. 'more' → logprob: -0.9409695863723755
    3. ' or' → logprob: -2.190969467163086
    4. 'or' → logprob: -3.440969467163086
    5. 'some' → logprob: -4.565969467163086
    6. ' elements' → logprob: -5.565969467163086
    7. '1' → logprob: -5.690969467163086
    8. ' ' → logprob: -6.690969467163086
    9. 's' → logprob: -6.815969467163086
    10. 'elements' → logprob: -7.065969467163086

Token 68: ' cards' (ID: 10541)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35179370641708374
    2. '#' → logprob: -2.4767937660217285
    3. ' )' → logprob: -2.9767937660217285
    4. '<|end|>' → logprob: -3.1017937660217285
    5. ' ' → logprob: -3.6017937660217285
    6. 'tokens' → logprob: -3.9767937660217285
    7. 'elements' → logprob: -4.7267937660217285
    8. 'characters' → logprob: -4.9767937660217285
    9. 'anna' → logprob: -4.9767937660217285
    10. 'spaces' → logprob: -5.1017937660217285

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2688773274421692
    2. 'def' → logprob: -2.1438772678375244
    3. 'n' → logprob: -3.2688772678375244
    4. 'import' → logprob: -4.3938775062561035
    5. 'dp' → logprob: -4.3938775062561035
    6. '#' → logprob: -4.5188775062561035
    7. 'max' → logprob: -4.7688775062561035
    8. '<|end|>' → logprob: -5.0188775062561035
    9. ',' → logprob: -5.1438775062561035
    10. 's' → logprob: -5.7688775062561035

Token 70: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1428728550672531
    2. 'n' → logprob: -3.0178728103637695
    3. '#' → logprob: -3.3928728103637695
    4. 'def' → logprob: -3.8928728103637695
    5. 'from' → logprob: -4.0178728103637695
    6. 'max' → logprob: -5.3928728103637695
    7. 'import' → logprob: -5.5178728103637695
    8. 'm' → logprob: -6.1428728103637695
    9. 'i' → logprob: -7.5178728103637695
    10. '```' → logprob: -8.26787281036377

Token 71: ' and' (ID: 326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38249945640563965
    2. 'n' → logprob: -1.6324994564056396
    3. '#' → logprob: -3.1324994564056396
    4. 'def' → logprob: -3.6324994564056396
    5. 'from' → logprob: -3.7574994564056396
    6. 'max' → logprob: -4.507499694824219
    7. 'm' → logprob: -5.132499694824219
    8. 'import' → logprob: -5.257499694824219
    9. 'i' → logprob: -6.007499694824219
    10. '
' → logprob: -6.257499694824219

Token 72: ' some' (ID: 1236)
  Prédit: ' some'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' some' → logprob: -0.6479827761650085
    2. ' any' → logprob: -1.8979828357696533
    3. ' a' → logprob: -2.3979828357696533
    4. 'some' → logprob: -2.3979828357696533
    5. 'Br' → logprob: -2.8979828357696533
    6. 'a' → logprob: -3.7729828357696533
    7. ' Bruno' → logprob: -4.022982597351074
    8. 'any' → logprob: -4.272982597351074
    9. ' the' → logprob: -4.397982597351074
    10. 'br' → logprob: -5.147982597351074

Token 73: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.6426249146461487
    2. 'sub' → logprob: -1.892624855041504
    3. ' subse' → logprob: -2.392624855041504
    4. ' substring' → logprob: -2.767624855041504
    5. ' sub' → logprob: -2.892624855041504
    6. ' common' → logprob: -3.267624855041504
    7. ' continuous' → logprob: -3.642624855041504
    8. 'substring' → logprob: -4.142624855041504
    9. 'cont' → logprob: -4.517624855041504
    10. ' subset' → logprob: -4.767624855041504

Token 74: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8580025434494019
    2. ' sub' → logprob: -1.3580025434494019
    3. ' subse' → logprob: -1.4830025434494019
    4. '<|end|>' → logprob: -2.8580026626586914
    5. 'substring' → logprob: -4.233002662658691
    6. 'segment' → logprob: -5.358002662658691
    7. 'sequence' → logprob: -5.733002662658691
    8. ' segment' → logprob: -5.858002662658691
    9. ' block' → logprob: -6.358002662658691
    10. 'subset' → logprob: -6.608002662658691

Token 75: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.07556964457035065
    2. 'string' → logprob: -2.8255696296691895
    3. 'sequence' → logprob: -4.3255696296691895
    4. 'rray' → logprob: -8.825570106506348
    5. 'substring' → logprob: -10.200570106506348
    6. 'arry' → logprob: -10.575570106506348
    7. 'tring' → logprob: -11.200570106506348
    8. 'quence' → logprob: -11.325570106506348
    9. 'arr' → logprob: -11.325570106506348
    10. 'arra' → logprob: -11.450570106506348

Token 76: ' of' (ID: 328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18142680823802948
    2. 'n' → logprob: -3.181426763534546
    3. ' dp' → logprob: -3.181426763534546
    4. 'd' → logprob: -3.681426763534546
    5. 'def' → logprob: -4.056427001953125
    6. 'import' → logprob: -4.931427001953125
    7. 'max' → logprob: -5.056427001953125
    8. '#' → logprob: -5.431427001953125
    9. '
' → logprob: -5.681427001953125
    10. '\' → logprob: -5.806427001953125

Token 77: ' Bruno' (ID: 63193)
  Prédit: ' br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.578330934047699
    2. 'br' → logprob: -0.828330934047699
    3. ' Bruno' → logprob: -7.078330993652344
    4. ' ' → logprob: -7.328330993652344
    5. 'Br' → logprob: -8.203330993652344
    6. 'b' → logprob: -8.828330993652344
    7. '	br' → logprob: -8.953330993652344
    8. '```' → logprob: -10.140830993652344
    9. '(br' → logprob: -10.453330993652344
    10. ' the' → logprob: -10.453330993652344

Token 78: ''s' (ID: 885)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6987231969833374
    2. 'dp' → logprob: -2.073723316192627
    3. 'n' → logprob: -2.198723316192627
    4. '#' → logprob: -2.198723316192627
    5. '_' → logprob: -2.948723316192627
    6. 'def' → logprob: -4.073723316192627
    7. '.' → logprob: -4.198723316192627
    8. 'm' → logprob: -4.323723316192627
    9. 'max' → logprob: -4.698723316192627
    10. 'a' → logprob: -4.698723316192627

Token 79: ' cards' (ID: 10541)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10313067585229874
    2. '#' → logprob: -2.978130578994751
    3. 'from' → logprob: -4.10313081741333
    4. 'import' → logprob: -4.47813081741333
    5. 'def' → logprob: -4.72813081741333
    6. 'n' → logprob: -4.97813081741333
    7. 'd' → logprob: -6.72813081741333
    8. 'max' → logprob: -6.85313081741333
    9. '```' → logprob: -8.728130340576172
    10. 'l' → logprob: -8.853130340576172

Token 80: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12572629749774933
    2. 'n' → logprob: -3.2507262229919434
    3. '
' → logprob: -4.000726222991943
    4. '#' → logprob: -4.375726222991943
    5. 'def' → logprob: -4.375726222991943
    6. 'import' → logprob: -4.500726222991943
    7. 'd' → logprob: -4.500726222991943
    8. 'from' → logprob: -4.875726222991943
    9. '```' → logprob: -6.375726222991943
    10. '\' → logprob: -6.500726222991943

Token 81: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007818367332220078
    2. ' )' → logprob: -4.882818222045898
    3. ').' → logprob: -10.007818222045898
    4. '')' → logprob: -10.632818222045898
    5. '")' → logprob: -10.757818222045898
    6. '):' → logprob: -10.882818222045898
    7. ')
' → logprob: -11.132818222045898
    8. '`)' → logprob: -11.132818222045898
    9. ' ' → logprob: -11.507818222045898
    10. ' ' → logprob: -11.632818222045898

Token 82: ' Bruno' (ID: 63193)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.965067982673645
    2. ' the' → logprob: -1.965067982673645
    3. 'we' → logprob: -2.2150678634643555
    4. ' we' → logprob: -3.0900678634643555
    5. 'they' → logprob: -3.3400678634643555
    6. 'Anna' → logprob: -3.5900678634643555
    7. 'anna' → logprob: -3.7150678634643555
    8. ' they' → logprob: -3.7150678634643555
    9. 'order' → logprob: -3.8400678634643555
    10. 'br' → logprob: -3.9650678634643555

Token 83: ' can' (ID: 665)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.26149171590805054
    2. '=' → logprob: -3.1364917755126953
    3. ' can' → logprob: -3.1364917755126953
    4. 's' → logprob: -3.2614917755126953
    5. ' =' → logprob: -4.011491775512695
    6. ' is' → logprob: -4.136491775512695
    7. ')' → logprob: -4.386491775512695
    8. ''' → logprob: -4.386491775512695
    9. ' wants' → logprob: -5.011491775512695
    10. ' has' → logprob: -5.136491775512695

Token 84: ' only' (ID: 1606)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.09895026683807373
    2. 'choose' → logprob: -3.5989503860473633
    3. ' remove' → logprob: -3.7239503860473633
    4. 'take' → logprob: -4.723950386047363
    5. 'only' → logprob: -5.098950386047363
    6. 'also' → logprob: -5.723950386047363
    7. 'pick' → logprob: -5.723950386047363
    8. 'discard' → logprob: -5.723950386047363
    9. 'delete' → logprob: -5.848950386047363
    10. 'skip' → logprob: -5.973950386047363

Token 85: ' cut' (ID: 6092)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.17834828794002533
    2. 'choose' → logprob: -2.4283483028411865
    3. 'take' → logprob: -3.5533483028411865
    4. ' remove' → logprob: -3.9283483028411865
    5. 'select' → logprob: -4.928348064422607
    6. 'keep' → logprob: -5.303348064422607
    7. ' take' → logprob: -5.553348064422607
    8. 'pick' → logprob: -6.053348064422607
    9. ' choose' → logprob: -6.178348064422607
    10. 'delete' → logprob: -6.803348064422607

Token 86: ' from' (ID: 591)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.6698683500289917
    2. ' a' → logprob: -1.9198683500289917
    3. 'the' → logprob: -2.2948684692382812
    4. 'a' → logprob: -2.2948684692382812
    5. ' out' → logprob: -2.6698684692382812
    6. 'out' → logprob: -2.7948684692382812
    7. ' the' → logprob: -2.7948684692382812
    8. ')' → logprob: -2.9198684692382812
    9. '<|end|>' → logprob: -3.0448684692382812
    10. '<|end|>' → logprob: -3.4198684692382812

Token 87: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.21672944724559784
    2. ' the' → logprob: -2.7167294025421143
    3. 'either' → logprob: -3.0917294025421143
    4. 'one' → logprob: -3.7167294025421143
    5. 'both' → logprob: -4.216729640960693
    6. ' either' → logprob: -4.216729640960693
    7. ' one' → logprob: -5.466729640960693
    8. 'start' → logprob: -5.716729640960693
    9. 'ends' → logprob: -5.716729640960693
    10. ' contiguous' → logprob: -6.091729640960693

Token 88: ' top' (ID: 2344)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.5112066864967346
    2. 'start' → logprob: -2.51120662689209
    3. 'left' → logprob: -2.51120662689209
    4. ' ends' → logprob: -2.51120662689209
    5. 'front' → logprob: -3.38620662689209
    6. 'edges' → logprob: -3.63620662689209
    7. 'begin' → logprob: -3.88620662689209
    8. 'right' → logprob: -4.01120662689209
    9. ' edges' → logprob: -4.13620662689209
    10. ' beginning' → logprob: -4.76120662689209

Token 89: ' or' (ID: 503)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21540623903274536
    2. 'max' → logprob: -2.4654061794281006
    3. 'i' → logprob: -3.4654061794281006
    4. 'n' → logprob: -3.8404061794281006
    5. ')' → logprob: -4.46540641784668
    6. '#' → logprob: -4.59040641784668
    7. '
' → logprob: -4.84040641784668
    8. 'from' → logprob: -5.71540641784668
    9. 'm' → logprob: -5.71540641784668
    10. 'def' → logprob: -5.71540641784668

Token 90: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.18473148345947266
    2. ' bottom' → logprob: -1.9347314834594727
    3. 'the' → logprob: -4.184731483459473
    4. ' the' → logprob: -4.809731483459473
    5. 'end' → logprob: -8.559731483459473
    6. 'from' → logprob: -9.184731483459473
    7. 'tail' → logprob: -9.434731483459473
    8. '```' → logprob: -9.559731483459473
    9. 'both' → logprob: -9.559731483459473
    10. 'either' → logprob: -10.434731483459473

Token 91: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33011654019355774
    2. 'n' → logprob: -2.0801165103912354
    3. 'd' → logprob: -3.2051165103912354
    4. '
' → logprob: -3.3301165103912354
    5. '#' → logprob: -3.5801165103912354
    6. 'import' → logprob: -4.3301167488098145
    7. 'def' → logprob: -4.7051167488098145
    8. 'max' → logprob: -4.9551167488098145
    9. 'from' → logprob: -5.4551167488098145
    10. '\' → logprob: -5.4551167488098145

Token 92: ' meaning' (ID: 10915)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4746984839439392
    2. ')' → logprob: -1.349698543548584
    3. ' )' → logprob: -2.224698543548584
    4. '<|end|>' → logprob: -5.349698543548584
    5. ' 
' → logprob: -6.724698543548584
    6. ' ,' → logprob: -7.224698543548584
    7. ' ),' → logprob: -7.849698543548584
    8. 'n' → logprob: -7.849698543548584
    9. ''' → logprob: -7.974698543548584
    10. ',' → logprob: -8.224698066711426

Token 93: ' a' (ID: 261)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.9026499390602112
    2. ' that' → logprob: -1.4026498794555664
    3. ' the' → logprob: -1.9026498794555664
    4. ' we' → logprob: -3.0276498794555664
    5. 'the' → logprob: -3.6526498794555664
    6. ' a' → logprob: -3.6526498794555664
    7. ' they' → logprob: -3.9026498794555664
    8. 'br' → logprob: -4.027649879455566
    9. 'that' → logprob: -4.152649879455566
    10. ' br' → logprob: -5.027649879455566

Token 94: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.0623759999871254
    2. 'cont' → logprob: -3.687376022338867
    3. ' sub' → logprob: -3.937376022338867
    4. 'sub' → logprob: -5.062376022338867
    5. ' continuous' → logprob: -5.812376022338867
    6. ' cont' → logprob: -6.062376022338867
    7. ' subse' → logprob: -6.312376022338867
    8. 'continuous' → logprob: -7.062376022338867
    9. ' substring' → logprob: -7.687376022338867
    10. 'substring' → logprob: -8.062376022338867

Token 95: ' sub' (ID: 1543)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41188493371009827
    2. ' ' → logprob: -1.6618849039077759
    3. ' )' → logprob: -2.5368850231170654
    4. ' sub' → logprob: -3.4118850231170654
    5. ' portion' → logprob: -4.536884784698486
    6. ' segment' → logprob: -4.661884784698486
    7. ' space' → logprob: -5.536884784698486
    8. ' subse' → logprob: -6.161884784698486
    9. ' slice' → logprob: -6.161884784698486
    10. 'sub' → logprob: -6.411884784698486

Token 96: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.2813783586025238
    2. ')' → logprob: -2.0313782691955566
    3. 'sequence' → logprob: -3.5313782691955566
    4. 'arra' → logprob: -3.7813782691955566
    5. 'a' → logprob: -3.9063782691955566
    6. 'arr' → logprob: -4.781378269195557
    7. '_' → logprob: -4.906378269195557
    8. 'string' → logprob: -4.906378269195557
    9. 'quence' → logprob: -5.906378269195557
    10. '<|end|>' → logprob: -6.156378269195557

Token 97: ').
' (ID: 6294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3047465682029724
    2. 'n' → logprob: -1.5547466278076172
    3. '
' → logprob: -3.554746627807617
    4. 'max' → logprob: -4.554746627807617
    5. '#' → logprob: -5.554746627807617
    6. 'def' → logprob: -6.054746627807617
    7. 'import' → logprob: -6.804746627807617
    8. 'from' → logprob: -6.929746627807617
    9. 'd' → logprob: -7.054746627807617
    10. 'm' → logprob: -7.179746627807617

Token 98: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23554502427577972
    2. 'n' → logprob: -1.735545039176941
    3. 'max' → logprob: -4.8605451583862305
    4. 'd' → logprob: -5.3605451583862305
    5. 'def' → logprob: -5.4855451583862305
    6. '#' → logprob: -5.6105451583862305
    7. '
' → logprob: -5.8605451583862305
    8. 'from' → logprob: -5.8605451583862305
    9. 'm' → logprob: -6.1105451583862305
    10. 'import' → logprob: -6.2355451583862305

Token 99: ' Because' (ID: 13602)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9799804091453552
    2. 'd' → logprob: -1.35498046875
    3. 'n' → logprob: -1.47998046875
    4. '#' → logprob: -2.47998046875
    5. '_' → logprob: -3.97998046875
    6. 'max' → logprob: -4.85498046875
    7. 'm' → logprob: -5.35498046875
    8. '.' → logprob: -5.85498046875
    9. 'from' → logprob: -5.97998046875
    10. 'a' → logprob: -5.97998046875

Token 100: ' Anna' (ID: 34101)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3895223140716553
    2. ' the' → logprob: -1.6395223140716553
    3. ' we' → logprob: -1.8895223140716553
    4. 'A' → logprob: -2.5145223140716553
    5. 'we' → logprob: -2.6395223140716553
    6. '#' → logprob: -2.7645223140716553
    7. 'anna' → logprob: -4.014522552490234
    8. ' for' → logprob: -4.139522552490234
    9. ' A' → logprob: -4.389522552490234
    10. 'dp' → logprob: -4.389522552490234

Token 101: ' can' (ID: 665)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.16338101029396057
    2. ' can' → logprob: -3.1633810997009277
    3. 'can' → logprob: -3.2883810997009277
    4. 's' → logprob: -3.9133810997009277
    5. ' wants' → logprob: -4.288381099700928
    6. '=' → logprob: -4.538381099700928
    7. ' =' → logprob: -5.413381099700928
    8. ' and' → logprob: -5.538381099700928
    9. 'and' → logprob: -5.788381099700928
    10. ''' → logprob: -6.163381099700928

Token 102: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.2670755684375763
    2. ' remove' → logprob: -1.767075538635254
    3. ' only' → logprob: -3.517075538635254
    4. 'only' → logprob: -4.392075538635254
    5. 'choose' → logprob: -5.642075538635254
    6. ' take' → logprob: -6.017075538635254
    7. 'keep' → logprob: -6.267075538635254
    8. 'take' → logprob: -6.517075538635254
    9. ' pick' → logprob: -6.642075538635254
    10. 'pick' → logprob: -6.642075538635254

Token 103: ' any' (ID: 1062)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.8848365545272827
    2. 'cards' → logprob: -1.3848365545272827
    3. 'any' → logprob: -2.5098366737365723
    4. 'some' → logprob: -3.0098366737365723
    5. ' elements' → logprob: -3.1348366737365723
    6. ' any' → logprob: -3.1348366737365723
    7. ' at' → logprob: -3.2598366737365723
    8. ' some' → logprob: -3.8848366737365723
    9. 'elements' → logprob: -4.134836673736572
    10. 'at' → logprob: -4.509836673736572

Token 104: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -1.4800255298614502
    2. ' card' → logprob: -1.6050255298614502
    3. ' cards' → logprob: -1.7300255298614502
    4. ' subset' → logprob: -2.35502552986145
    5. 'card' → logprob: -2.48002552986145
    6. ' element' → logprob: -2.85502552986145
    7. 'subset' → logprob: -2.85502552986145
    8. 'element' → logprob: -3.48002552986145
    9. ' elements' → logprob: -3.73002552986145
    10. ' number' → logprob: -4.355025291442871

Token 105: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2733759582042694
    2. '
' → logprob: -1.8983759880065918
    3. 'n' → logprob: -4.023375988006592
    4. '#' → logprob: -4.273375988006592
    5. 'max' → logprob: -4.648375988006592
    6. 'from' → logprob: -4.898375988006592
    7. 'import' → logprob: -4.898375988006592
    8. '' → logprob: -5.273375988006592
    9. '.
' → logprob: -5.398375988006592
    10. ' dp' → logprob: -5.398375988006592

Token 106: ' anywhere' (ID: 15907)
  Prédit: 'her'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'her' → logprob: -0.03559604659676552
    2. 'the' → logprob: -4.160595893859863
    3. 'br' → logprob: -4.910595893859863
    4. 'any' → logprob: -5.285595893859863
    5. ' her' → logprob: -5.660595893859863
    6. 'Br' → logprob: -6.160595893859863
    7. 'either' → logprob: -8.035595893859863
    8. 'A' → logprob: -8.410595893859863
    9. 'both' → logprob: -8.785595893859863
    10. 'a' → logprob: -9.035595893859863

Token 107: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41647422313690186
    2. 'n' → logprob: -2.1664743423461914
    3. '#' → logprob: -2.2914743423461914
    4. '
' → logprob: -2.6664743423461914
    5. 'd' → logprob: -4.166474342346191
    6. 'max' → logprob: -4.916474342346191
    7. 'a' → logprob: -5.291474342346191
    8. '\' → logprob: -5.541474342346191
    9. '.' → logprob: -5.791474342346191
    10. 'from' → logprob: -5.916474342346191

Token 108: 'not' (ID: 2878)
  Prédit: ' ),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ),' → logprob: -0.8410614132881165
    2. ')' → logprob: -1.5910613536834717
    3. '),' → logprob: -1.5910613536834717
    4. ' )' → logprob: -2.0910613536834717
    5. ',' → logprob: -3.7160613536834717
    6. ' ' → logprob: -5.341061592102051
    7. ' but' → logprob: -5.466061592102051
    8. ' ,' → logprob: -6.216061592102051
    9. ' in' → logprob: -7.341061592102051
    10. ' while' → logprob: -8.34106159210205

Token 109: ' necessarily' (ID: 23517)
  Prédit: 'necessarily'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'necessarily' → logprob: -0.0469474270939827
    2. ' necessarily' → logprob: -3.171947479248047
    3. 'just' → logprob: -6.171947479248047
    4. 'only' → logprob: -6.921947479248047
    5. ' just' → logprob: -7.296947479248047
    6. ' only' → logprob: -9.546947479248047
    7. 'cont' → logprob: -10.671947479248047
    8. 'in' → logprob: -10.671947479248047
    9. '```' → logprob: -10.671947479248047
    10. ')' → logprob: -11.296947479248047

Token 110: ' contiguous' (ID: 130997)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.6419827938079834
    2. ' contiguous' → logprob: -1.3919827938079834
    3. 'from' → logprob: -3.5169827938079834
    4. 'in' → logprob: -3.5169827938079834
    5. 'at' → logprob: -3.5169827938079834
    6. 'the' → logprob: -3.8919827938079834
    7. 'only' → logprob: -4.0169830322265625
    8. ' at' → logprob: -4.1419830322265625
    9. 'con' → logprob: -4.1419830322265625
    10. 'just' → logprob: -4.6419830322265625

Token 111: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.173820361495018
    2. ')
' → logprob: -2.4238202571868896
    3. '
' → logprob: -4.298820495605469
    4. ' ' → logprob: -4.673820495605469
    5. '_' → logprob: -4.798820495605469
    6. '_
' → logprob: -4.923820495605469
    7. '#' → logprob: -5.298820495605469
    8. 'a' → logprob: -5.923820495605469
    9. ' )' → logprob: -6.048820495605469
    10. ',
' → logprob: -6.298820495605469

Token 112: ' her' (ID: 1335)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22164969146251678
    2. 'n' → logprob: -1.9716496467590332
    3. 'max' → logprob: -3.596649646759033
    4. '#' → logprob: -4.471649646759033
    5. ' dp' → logprob: -5.221649646759033
    6. ' n' → logprob: -5.846649646759033
    7. 'def' → logprob: -6.096649646759033
    8. 'import' → logprob: -6.221649646759033
    9. ' max' → logprob: -6.221649646759033
    10. 'from' → logprob: -6.221649646759033

Token 113: ' "' (ID: 392)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.7682037353515625
    2. ' subse' → logprob: -0.8932037353515625
    3. 'long' → logprob: -2.6432037353515625
    4. 'sequence' → logprob: -4.3932037353515625
    5. 'next' → logprob: -4.8932037353515625
    6. 'cards' → logprob: -5.0182037353515625
    7. ' next' → logprob: -5.1432037353515625
    8. ' longest' → logprob: -5.8932037353515625
    9. ' cards' → logprob: -6.0182037353515625
    10. 'dp' → logprob: -6.1432037353515625

Token 114: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.49590829014778137
    2. 'long' → logprob: -1.745908260345459
    3. ' subse' → logprob: -2.120908260345459
    4. 'sequence' → logprob: -3.745908260345459
    5. 'anna' → logprob: -4.120908260345459
    6. 'dp' → logprob: -4.495908260345459
    7. 'cards' → logprob: -4.620908260345459
    8. 'best' → logprob: -5.495908260345459
    9. '"' → logprob: -6.120908260345459
    10. 'common' → logprob: -6.370908260345459

Token 115: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.002891417359933257
    2. 'array' → logprob: -6.877891540527344
    3. 'se' → logprob: -7.127891540527344
    4. 'string' → logprob: -7.627891540527344
    5. 'set' → logprob: -8.002891540527344
    6. 'seq' → logprob: -9.877891540527344
    7. 'quence' → logprob: -10.502891540527344
    8. ' sequence' → logprob: -10.627891540527344
    9. 'problem' → logprob: -10.752891540527344
    10. 's' → logprob: -11.002891540527344

Token 116: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2768389880657196
    2. ')' → logprob: -2.901839017868042
    3. 's' → logprob: -2.901839017868042
    4. ' "' → logprob: -3.401839017868042
    5. ' is' → logprob: -3.776839017868042
    6. ')"' → logprob: -4.026838779449463
    7. ' length' → logprob: -4.276838779449463
    8. ' of' → logprob: -4.651838779449463
    9. ' =' → logprob: -5.026838779449463
    10. 'length' → logprob: -5.151838779449463

Token 117: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4130139350891113
    2. '_length' → logprob: -2.0380139350891113
    3. ' is' → logprob: -2.4130139350891113
    4. '_len' → logprob: -2.5380139350891113
    5. 's' → logprob: -2.6630139350891113
    6. 'length' → logprob: -2.7880139350891113
    7. '#' → logprob: -2.9130139350891113
    8. 'from' → logprob: -3.4130139350891113
    9. ' can' → logprob: -3.5380139350891113
    10. '
' → logprob: -4.038013935089111

Token 118: ' skip' (ID: 16677)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7348448634147644
    2. 'be' → logprob: -1.1098449230194092
    3. ' also' → logprob: -3.359844923019409
    4. 'also' → logprob: -3.484844923019409
    5. ' always' → logprob: -3.734844923019409
    6. ' only' → logprob: -3.734844923019409
    7. 'always' → logprob: -3.984844923019409
    8. 'skip' → logprob: -4.48484468460083
    9. 'only' → logprob: -4.48484468460083
    10. 'match' → logprob: -4.73484468460083

Token 119: ' cards' (ID: 10541)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.2849454879760742
    2. 'some' → logprob: -1.4099454879760742
    3. ' cards' → logprob: -1.9099454879760742
    4. 'cards' → logprob: -2.284945487976074
    5. ' any' → logprob: -2.659945487976074
    6. ' elements' → logprob: -3.284945487976074
    7. ' some' → logprob: -3.284945487976074
    8. 'elements' → logprob: -3.534945487976074
    9. 'tokens' → logprob: -3.909945487976074
    10. ' tokens' → logprob: -4.659945487976074

Token 120: ' arbitr' (ID: 31157)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33040115237236023
    2. 'n' → logprob: -1.4554011821746826
    3. '#' → logprob: -3.9554011821746826
    4. 'm' → logprob: -5.0804009437561035
    5. 'def' → logprob: -5.2054009437561035
    6. 'max' → logprob: -5.3304009437561035
    7. '
' → logprob: -5.4554009437561035
    8. 'from' → logprob: -6.0804009437561035
    9. 'import' → logprob: -6.4554009437561035
    10. 'i' → logprob: -6.4554009437561035

Token 121: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.09124041348695755
    2. 'ary' → logprob: -2.466240406036377
    3. 'arly' → logprob: -6.341240406036377
    4. 'ar' → logprob: -8.716240882873535
    5. 'aly' → logprob: -9.341240882873535
    6. 'ari' → logprob: -9.966240882873535
    7. 'a' → logprob: -10.341240882873535
    8. 'r' → logprob: -11.216240882873535
    9. '...' → logprob: -11.216240882873535
    10. '```' → logprob: -11.216240882873535

Token 122: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03357262536883354
    2. '#' → logprob: -4.408572673797607
    3. 'n' → logprob: -4.783572673797607
    4. 'max' → logprob: -5.283572673797607
    5. 'from' → logprob: -5.783572673797607
    6. 'import' → logprob: -6.408572673797607
    7. 'def' → logprob: -7.033572673797607
    8. '
' → logprob: -7.283572673797607
    9. 'd' → logprob: -8.53357219696045
    10. 'ans' → logprob: -9.15857219696045

Token 123: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019573964178562164
    2. '#' → logprob: -5.019574165344238
    3. 'i' → logprob: -5.394574165344238
    4. 'n' → logprob: -6.269574165344238
    5. 'def' → logprob: -6.644574165344238
    6. 'from' → logprob: -6.644574165344238
    7. 'max' → logprob: -6.769574165344238
    8. '
' → logprob: -7.394574165344238
    9. 'm' → logprob: -7.519574165344238
    10. 'j' → logprob: -8.144574165344238

Token 124: ' Bruno' (ID: 63193)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009028025902807713
    2. '#' → logprob: -5.38402795791626
    3. 'i' → logprob: -6.75902795791626
    4. 'n' → logprob: -7.00902795791626
    5. 'from' → logprob: -7.00902795791626
    6. 'def' → logprob: -7.13402795791626
    7. 'import' → logprob: -8.759028434753418
    8. 'max' → logprob: -9.134028434753418
    9. 'm' → logprob: -9.509028434753418
    10. 'j' → logprob: -9.759028434753418

Token 125: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7952888607978821
    2. '_' → logprob: -1.5452888011932373
    3. '=' → logprob: -2.1702888011932373
    4. ' can' → logprob: -2.7952888011932373
    5. ''s' → logprob: -3.4202888011932373
    6. 'can' → logprob: -3.4202888011932373
    7. 's' → logprob: -4.295289039611816
    8. '_length' → logprob: -4.670289039611816
    9. '#' → logprob: -4.920289039611816
    10. ')' → logprob: -5.295289039611816

Token 126: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.5551467537879944
    2. ' only' → logprob: -1.6801466941833496
    3. 'choose' → logprob: -2.6801466941833496
    4. 'take' → logprob: -2.9301466941833496
    5. 'remove' → logprob: -3.0551466941833496
    6. 'cut' → logprob: -4.18014669418335
    7. ' take' → logprob: -4.30514669418335
    8. 'select' → logprob: -4.68014669418335
    9. ' cut' → logprob: -5.30514669418335
    10. 'keep' → logprob: -5.30514669418335

Token 127: ' remove' (ID: 6234)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.8244434595108032
    2. 'choose' → logprob: -1.1994434595108032
    3. 'remove' → logprob: -2.3244433403015137
    4. 'cut' → logprob: -2.9494433403015137
    5. ' take' → logprob: -3.3244433403015137
    6. 'select' → logprob: -3.5744433403015137
    7. 'keep' → logprob: -4.574443340301514
    8. ' choose' → logprob: -4.699443340301514
    9. ' cut' → logprob: -4.949443340301514
    10. ' select' → logprob: -5.324443340301514

Token 128: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.017443060874939
    2. 'cards' → logprob: -1.142443060874939
    3. 'from' → logprob: -1.392443060874939
    4. ' from' → logprob: -3.0174431800842285
    5. ' contiguous' → logprob: -4.0174431800842285
    6. 'the' → logprob: -7.2674431800842285
    7. ' the' → logprob: -7.8924431800842285
    8. '<|end|>' → logprob: -8.01744270324707
    9. 'either' → logprob: -8.14244270324707
    10. ' ' → logprob: -8.26744270324707

Token 129: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5239331722259521
    2. '=' → logprob: -2.523933172225952
    3. '<|end|>' → logprob: -2.773933172225952
    4. ' from' → logprob: -3.148933172225952
    5. '[]' → logprob: -3.398933172225952
    6. 's' → logprob: -3.398933172225952
    7. ' =' → logprob: -3.523933172225952
    8. ')' → logprob: -3.648933172225952
    9. 'br' → logprob: -4.398933410644531
    10. '[:' → logprob: -4.648933410644531

Token 130: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.31573107838630676
    2. 'either' → logprob: -2.4407310485839844
    3. 'top' → logprob: -2.6907310485839844
    4. ' the' → logprob: -2.6907310485839844
    5. ' either' → logprob: -3.5657310485839844
    6. 'one' → logprob: -4.940731048583984
    7. 'ends' → logprob: -5.565731048583984
    8. 'start' → logprob: -5.940731048583984
    9. ' top' → logprob: -6.565731048583984
    10. ' one' → logprob: -7.065731048583984

Token 131: ' top' (ID: 2344)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.36194294691085815
    2. 'start' → logprob: -2.361943006515503
    3. 'top' → logprob: -2.611943006515503
    4. 'begin' → logprob: -2.986943006515503
    5. ' ends' → logprob: -3.361943006515503
    6. 'edges' → logprob: -3.611943006515503
    7. ' edges' → logprob: -4.861942768096924
    8. ' beginning' → logprob: -4.986942768096924
    9. 'left' → logprob: -5.986942768096924
    10. 'front' → logprob: -6.111942768096924

Token 132: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2460486888885498
    2. '=' → logprob: -2.12104868888855
    3. '<|end|>' → logprob: -2.12104868888855
    4. ' =' → logprob: -2.74604868888855
    5. 'br' → logprob: -2.99604868888855
    6. '[' → logprob: -3.12104868888855
    7. ')' → logprob: -3.37104868888855
    8. 'from' → logprob: -3.62104868888855
    9. 'for' → logprob: -3.62104868888855
    10. ',' → logprob: -3.74604868888855

Token 133: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.48009270429611206
    2. ' bottom' → logprob: -0.9800927042961121
    3. 'the' → logprob: -5.730092525482178
    4. ' the' → logprob: -5.980092525482178
    5. 'or' → logprob: -9.355093002319336
    6. 'from' → logprob: -9.730093002319336
    7. ' or' → logprob: -10.355093002319336
    8. '/or' → logprob: -10.730093002319336
    9. ' from' → logprob: -11.980093002319336
    10. '/' → logprob: -12.230093002319336

Token 134: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024410922080278397
    2. '#' → logprob: -4.024410724639893
    3. 'def' → logprob: -6.274410724639893
    4. 'from' → logprob: -6.399410724639893
    5. 'n' → logprob: -6.524410724639893
    6. 'import' → logprob: -7.649410724639893
    7. 'i' → logprob: -8.52441120147705
    8. 'max' → logprob: -8.52441120147705
    9. 'prev' → logprob: -9.89941120147705
    10. 'l' → logprob: -10.02441120147705

Token 135: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8111675381660461
    2. 'dp' → logprob: -1.5611674785614014
    3. 'so' → logprob: -1.8111674785614014
    4. ' so' → logprob: -2.9361674785614014
    5. 'which' → logprob: -3.6861674785614014
    6. ' #' → logprob: -3.8111674785614014
    7. ' which' → logprob: -4.0611677169799805
    8. 'i' → logprob: -4.5611677169799805
    9. 'n' → logprob: -4.8111677169799805
    10. ' and' → logprob: -5.0611677169799805

Token 136: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2484220266342163
    2. ' the' → logprob: -1.4984220266342163
    3. 'we' → logprob: -1.8734220266342163
    4. ' we' → logprob: -1.9984220266342163
    5. '#' → logprob: -2.123422145843506
    6. 'br' → logprob: -3.123422145843506
    7. 'he' → logprob: -5.498422145843506
    8. 'for' → logprob: -5.623422145843506
    9. 'a' → logprob: -5.748422145843506
    10. ' contiguous' → logprob: -5.873422145843506

Token 137: ' sub' (ID: 1543)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -1.3113404512405396
    2. ' longest' → logprob: -1.8113404512405396
    3. ' problem' → logprob: -2.06134033203125
    4. 'next' → logprob: -2.31134033203125
    5. ' next' → logprob: -2.43634033203125
    6. 'problem' → logprob: -2.56134033203125
    7. 'common' → logprob: -3.31134033203125
    8. 'sub' → logprob: -3.68634033203125
    9. ' contiguous' → logprob: -3.93634033203125
    10. 'cont' → logprob: -4.31134033203125

Token 138: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.02017032727599144
    2. 'arra' → logprob: -5.145170211791992
    3. 'ar' → logprob: -5.520170211791992
    4. 'arrays' → logprob: -5.770170211791992
    5. 'sequence' → logprob: -5.770170211791992
    6. 'arr' → logprob: -6.395170211791992
    7. '#' → logprob: -7.020170211791992
    8. 'set' → logprob: -7.895170211791992
    9. 'arry' → logprob: -9.020170211791992
    10. 'quence' → logprob: -9.270170211791992

Token 139: ' he' (ID: 501)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8804762959480286
    2. ' of' → logprob: -2.380476236343384
    3. '=' → logprob: -2.630476236343384
    4. 's' → logprob: -2.630476236343384
    5. ' is' → logprob: -2.880476236343384
    6. 'length' → logprob: -3.005476236343384
    7. ' that' → logprob: -3.255476236343384
    8. ' length' → logprob: -3.380476236343384
    9. ' can' → logprob: -3.505476236343384
    10. ' between' → logprob: -3.755476236343384

Token 140: ' keeps' (ID: 18295)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.09980326145887375
    2. 'can' → logprob: -3.0998032093048096
    3. ' is' → logprob: -3.3498032093048096
    4. 's' → logprob: -5.349803447723389
    5. ' =' → logprob: -5.849803447723389
    6. ' must' → logprob: -6.599803447723389
    7. '=' → logprob: -6.724803447723389
    8. 'is' → logprob: -6.849803447723389
    9. ''s' → logprob: -6.974803447723389
    10. 'must' → logprob: -7.349803447723389

Token 141: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45811915397644043
    2. ' =' → logprob: -1.9581191539764404
    3. 'length' → logprob: -3.2081191539764404
    4. 'len' → logprob: -3.4581191539764404
    5. '#' → logprob: -3.5831191539764404
    6. 'max' → logprob: -3.7081191539764404
    7. 's' → logprob: -3.8331191539764404
    8. 'n' → logprob: -4.2081193923950195
    9. ')' → logprob: -4.4581193923950195
    10. 'is' → logprob: -4.5831193923950195

Token 142: ' continuous' (ID: 27979)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.15300653874874115
    2. 'cont' → logprob: -2.2780065536499023
    3. 'a' → logprob: -3.5280065536499023
    4. ' a' → logprob: -5.028006553649902
    5. 'necessarily' → logprob: -6.903006553649902
    6. 'always' → logprob: -7.278006553649902
    7. ' always' → logprob: -7.278006553649902
    8. 'continuous' → logprob: -7.528006553649902
    9. ' cont' → logprob: -9.028006553649902
    10. ' necessarily' → logprob: -9.403006553649902

Token 143: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22165322303771973
    2. '#' → logprob: -1.8466532230377197
    3. 'n' → logprob: -3.7216532230377197
    4. 'max' → logprob: -5.096652984619141
    5. 'def' → logprob: -5.971652984619141
    6. 'i' → logprob: -6.221652984619141
    7. 'from' → logprob: -6.471652984619141
    8. '
' → logprob: -6.596652984619141
    9. 'import' → logprob: -7.346652984619141
    10. 'm' → logprob: -7.346652984619141

Token 144: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05756580829620361
    2. '#' → logprob: -3.682565689086914
    3. 'n' → logprob: -4.307565689086914
    4. 'max' → logprob: -4.932565689086914
    5. 'def' → logprob: -5.682565689086914
    6. 'from' → logprob: -6.682565689086914
    7. 'i' → logprob: -6.807565689086914
    8. 'import' → logprob: -7.307565689086914
    9. 'l' → logprob: -7.682565689086914
    10. 'm' → logprob: -7.682565689086914

Token 145: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22066229581832886
    2. '#' → logprob: -1.9706623554229736
    3. 'max' → logprob: -3.7206623554229736
    4. 'n' → logprob: -4.0956621170043945
    5. 'i' → logprob: -4.7206621170043945
    6. 'from' → logprob: -6.5956621170043945
    7. 'def' → logprob: -6.5956621170043945
    8. 'm' → logprob: -6.7206621170043945
    9. 'l' → logprob: -6.7206621170043945
    10. 'd' → logprob: -7.2206621170043945

Token 146: ' score' (ID: 8429)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7897171378135681
    2. 'dp' → logprob: -1.164717197418213
    3. ' dp' → logprob: -2.289717197418213
    4. ' #' → logprob: -3.539717197418213
    5. ' next' → logprob: -3.789717197418213
    6. 'def' → logprob: -4.414717197418213
    7. ' best' → logprob: -4.664717197418213
    8. ' problem' → logprob: -5.039717197418213
    9. 'best' → logprob: -5.164717197418213
    10. 'max' → logprob: -5.289717197418213

Token 147: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23234963417053223
    2. ' ' → logprob: -1.8573496341705322
    3. '=' → logprob: -3.1073496341705322
    4. '_' → logprob: -5.357349395751953
    5. ')' → logprob: -7.482349395751953
    6. ',' → logprob: -7.732349395751953
    7. '.' → logprob: -8.732349395751953
    8. 's' → logprob: -8.732349395751953
    9. ' is' → logprob: -8.857349395751953
    10. ' +=' → logprob: -9.982349395751953

Token 148: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7306618690490723
    2. ' max' → logprob: -1.1056618690490723
    3. ' =' → logprob: -2.3556618690490723
    4. ' ' → logprob: -2.9806618690490723
    5. '=' → logprob: -4.105661869049072
    6. ' the' → logprob: -5.355661869049072
    7. '=max' → logprob: -6.230661869049072
    8. ' +=' → logprob: -6.355661869049072
    9. 'the' → logprob: -6.355661869049072
    10. '   ' → logprob: -6.480661869049072

Token 149: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.14712613821029663
    2. ' length' → logprob: -2.1471261978149414
    3. 'maximum' → logprob: -4.397126197814941
    4. 'number' → logprob: -6.022126197814941
    5. 'sum' → logprob: -6.022126197814941
    6. ' maximum' → logprob: -6.772126197814941
    7. 'max' → logprob: -7.522126197814941
    8. ' sum' → logprob: -8.022126197814941
    9. 'long' → logprob: -8.647126197814941
    10. ' number' → logprob: -8.647126197814941

Token 150: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8190099000930786
    2. ' ' → logprob: -0.8190099000930786
    3. '=' → logprob: -3.069009780883789
    4. ' =' → logprob: -3.444009780883789
    5. '(' → logprob: -4.694009780883789
    6. ' of' → logprob: -4.819009780883789
    7. ')' → logprob: -4.819009780883789
    8. ',' → logprob: -5.694009780883789
    9. '#' → logprob: -6.569009780883789
    10. '\' → logprob: -6.944009780883789

Token 151: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6349697113037109
    2. ' the' → logprob: -0.7599697113037109
    3. 'a' → logprob: -7.009969711303711
    4. ' a' → logprob: -7.259969711303711
    5. ' longest' → logprob: -8.509969711303711
    6. ' their' → logprob: -9.259969711303711
    7. 'their' → logprob: -9.259969711303711
    8. ' common' → logprob: -9.259969711303711
    9. 'common' → logprob: -9.384969711303711
    10. ' this' → logprob: -10.759969711303711

Token 152: ' matching' (ID: 20238)
  Prédit: ' longest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.09305573999881744
    2. 'long' → logprob: -3.2180557250976562
    3. 'common' → logprob: -3.3430557250976562
    4. ' common' → logprob: -4.343055725097656
    5. 'matching' → logprob: -9.468055725097656
    6. 'Longest' → logprob: -9.718055725097656
    7. 'matched' → logprob: -9.843055725097656
    8. ' matching' → logprob: -9.968055725097656
    9. 'sub' → logprob: -10.218055725097656
    10. 'largest' → logprob: -10.468055725097656

Token 153: ' sequence' (ID: 16281)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09353353828191757
    2. '_dp' → logprob: -2.968533515930176
    3. ' dp' → logprob: -4.093533515930176
    4. 'def' → logprob: -5.093533515930176
    5. 'max' → logprob: -5.843533515930176
    6. 's' → logprob: -6.093533515930176
    7. ' =' → logprob: -6.593533515930176
    8. 'for' → logprob: -6.843533515930176
    9. 'from' → logprob: -7.218533515930176
    10. 'import' → logprob: -7.218533515930176

Token 154: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2878689467906952
    2. '
' → logprob: -1.7878689765930176
    3. '#' → logprob: -3.5378689765930176
    4. 'max' → logprob: -4.037868976593018
    5. 'n' → logprob: -4.787868976593018
    6. 'def' → logprob: -5.662868976593018
    7. '\' → logprob: -5.787868976593018
    8. 'i' → logprob: -5.912868976593018
    9. '' → logprob: -6.037868976593018
    10. '\n' → logprob: -6.037868976593018

Token 155: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005847377236932516
    2. 'n' → logprob: -6.130847454071045
    3. '#' → logprob: -6.630847454071045
    4. 'from' → logprob: -6.755847454071045
    5. 'def' → logprob: -7.505847454071045
    6. 'max' → logprob: -7.880847454071045
    7. 'import' → logprob: -9.130846977233887
    8. 'd' → logprob: -10.255846977233887
    9. 'l' → logprob: -10.505846977233887
    10. 'm' → logprob: -11.005846977233887

Token 156: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010783808305859566
    2. '#' → logprob: -5.385783672332764
    3. 'from' → logprob: -5.385783672332764
    4. 'import' → logprob: -7.010783672332764
    5. 'def' → logprob: -7.760783672332764
    6. 'max' → logprob: -8.635784149169922
    7. 'n' → logprob: -10.760784149169922
    8. 'DP' → logprob: -11.135784149169922
    9. 'prefix' → logprob: -12.010784149169922
    10. 'for' → logprob: -13.010784149169922

Token 157: ' problem' (ID: 4792)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7287067174911499
    2. '#' → logprob: -1.60370671749115
    3. ' dp' → logprob: -2.3537068367004395
    4. 'from' → logprob: -2.4787068367004395
    5. 'def' → logprob: -2.7287068367004395
    6. 'import' → logprob: -2.9787068367004395
    7. 'max' → logprob: -5.4787068367004395
    8. 'n' → logprob: -5.4787068367004395
    9. ' #' → logprob: -6.3537068367004395
    10. 'for' → logprob: -6.3537068367004395

Token 158: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2295544594526291
    2. '#' → logprob: -2.6045544147491455
    3. 'is' → logprob: -2.7295544147491455
    4. '=' → logprob: -4.479554653167725
    5. '<|end|>' → logprob: -4.604554653167725
    6. 'def' → logprob: -4.854554653167725
    7. ':' → logprob: -4.979554653167725
    8. ',' → logprob: -5.479554653167725
    9. '.' → logprob: -5.479554653167725
    10. '_' → logprob: -5.979554653167725

Token 159: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4011000990867615
    2. 'def' → logprob: -2.5261001586914062
    3. 'likely' → logprob: -3.0261001586914062
    4. 'a' → logprob: -3.6511001586914062
    5. 'sol' → logprob: -4.151100158691406
    6. ' to' → logprob: -4.151100158691406
    7. 'essential' → logprob: -4.151100158691406
    8. 'dp' → logprob: -4.401100158691406
    9. ' essentially' → logprob: -4.526100158691406
    10. 'the' → logprob: -4.651100158691406

Token 160: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.22550377249717712
    2. 'find' → logprob: -1.6005038022994995
    3. 'maximize' → logprob: -9.975503921508789
    4. ' maximize' → logprob: -11.475503921508789
    5. ' determine' → logprob: -11.850503921508789
    6. 'det' → logprob: -11.850503921508789
    7. 'solve' → logprob: -12.100503921508789
    8. '_find' → logprob: -13.225503921508789
    9. ' compute' → logprob: -13.350503921508789
    10. 'compute' → logprob: -13.600503921508789

Token 161: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.062036700546741486
    2. 'the' → logprob: -2.8120367527008057
    3. 'max' → logprob: -10.437036514282227
    4. ' a' → logprob: -11.187036514282227
    5. ' max' → logprob: -11.437036514282227
    6. ' an' → logprob: -12.937036514282227
    7. 'def' → logprob: -13.187036514282227
    8. '#' → logprob: -13.187036514282227
    9. ' longest' → logprob: -13.187036514282227
    10. ' ' → logprob: -13.187036514282227

Token 162: ' maximum' (ID: 10562)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.47224631905555725
    2. ' longest' → logprob: -1.7222462892532349
    3. ' maximum' → logprob: -2.3472464084625244
    4. 'length' → logprob: -2.7222464084625244
    5. 'maximum' → logprob: -3.3472464084625244
    6. 'long' → logprob: -7.347246170043945
    7. 'max' → logprob: -8.097246170043945
    8. ' maximal' → logprob: -8.972246170043945
    9. ' max' → logprob: -10.347246170043945
    10. '最长' → logprob: -10.347246170043945

Token 163: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9864488244056702
    2. '_' → logprob: -1.6114487648010254
    3. '_length' → logprob: -1.6114487648010254
    4. 'score' → logprob: -2.1114487648010254
    5. ' length' → logprob: -3.1114487648010254
    6. '_score' → logprob: -3.8614487648010254
    7. 'dp' → logprob: -4.486448764801025
    8. 'common' → logprob: -5.486448764801025
    9. ' score' → logprob: -5.611448764801025
    10. 'matching' → logprob: -5.861448764801025

Token 164: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02735024318099022
    2. 'def' → logprob: -4.402350425720215
    3. '#' → logprob: -5.527350425720215
    4. 'from' → logprob: -5.527350425720215
    5. '_dp' → logprob: -6.527350425720215
    6. '```' → logprob: -6.777350425720215
    7. '
' → logprob: -7.027350425720215
    8. 'max' → logprob: -7.152350425720215
    9. 'import' → logprob: -7.152350425720215
    10. 'n' → logprob: -7.902350425720215

Token 165: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025672852993011
    2. 'max' → logprob: -2.5352566242218018
    3. ' =' → logprob: -3.2852566242218018
    4. 'for' → logprob: -4.285256862640381
    5. '=max' → logprob: -5.410256862640381
    6. ',' → logprob: -6.160256862640381
    7. '=
' → logprob: -6.160256862640381
    8. 'dp' → logprob: -6.535256862640381
    9. '_' → logprob: -6.785256862640381
    10. ':' → logprob: -7.035256862640381

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10797219723463058
    2. ' a' → logprob: -2.3579721450805664
    3. 'the' → logprob: -5.732972145080566
    4. 'common' → logprob: -7.107972145080566
    5. 'an' → logprob: -7.232972145080566
    6. 'anna' → logprob: -7.357972145080566
    7. ' the' → logprob: -7.482972145080566
    8. 'sub' → logprob: -7.607972145080566
    9. ' subse' → logprob: -7.732972145080566
    10. ' an' → logprob: -8.357972145080566

Token 167: ' sequence' (ID: 16281)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.8809838891029358
    2. 'sub' → logprob: -1.130983829498291
    3. ' subse' → logprob: -2.005983829498291
    4. ' common' → logprob: -2.130983829498291
    5. 'sequence' → logprob: -5.130983829498291
    6. ' sub' → logprob: -6.755983829498291
    7. ' sequence' → logprob: -6.755983829498291
    8. 'substring' → logprob: -7.255983829498291
    9. ' contiguous' → logprob: -8.75598430633545
    10. 'continuous' → logprob: -8.88098430633545

Token 168: ' which' (ID: 1118)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7814570665359497
    2. '=' → logprob: -2.28145694732666
    3. ' =' → logprob: -2.53145694732666
    4. '
' → logprob: -2.78145694732666
    5. ' 
' → logprob: -2.90645694732666
    6. ',' → logprob: -3.03145694732666
    7. ' such' → logprob: -3.28145694732666
    8. '<|end|>' → logprob: -3.40645694732666
    9. ' for' → logprob: -3.53145694732666
    10. ' ' → logprob: -4.15645694732666

Token 169: ' appears' (ID: 14518)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.42839840054512024
    2. ' is' → logprob: -2.053398370742798
    3. 'appe' → logprob: -2.303398370742798
    4. 'can' → logprob: -2.553398370742798
    5. ' can' → logprob: -3.928398370742798
    6. ' appears' → logprob: -4.178398609161377
    7. '```' → logprob: -6.053398609161377
    8. 'exists' → logprob: -6.553398609161377
    9. 'both' → logprob: -7.553398609161377
    10. 'A' → logprob: -7.928398609161377

Token 170: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.9492153525352478
    2. 'in' → logprob: -1.1992154121398926
    3. 'as' → logprob: -1.4492154121398926
    4. ' in' → logprob: -2.5742154121398926
    5. ' ' → logprob: -8.199214935302734
    6. '```' → logprob: -8.949214935302734
    7. '  ' → logprob: -11.449214935302734
    8. '
' → logprob: -11.449214935302734
    9. 'int' → logprob: -11.574214935302734
    10. ' 
' → logprob: -11.574214935302734

Token 171: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4300812780857086
    2. ' a' → logprob: -1.0550812482833862
    3. ' subse' → logprob: -7.055081367492676
    4. 'sub' → logprob: -7.805081367492676
    5. 'an' → logprob: -9.805081367492676
    6. ' an' → logprob: -10.805081367492676
    7. ' ' → logprob: -12.305081367492676
    8. 'anna' → logprob: -12.555081367492676
    9. ' sub' → logprob: -12.930081367492676
    10. '	a' → logprob: -13.055081367492676

Token 172: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.009821613319218159
    2. ' subse' → logprob: -4.75982141494751
    3. 'common' → logprob: -6.75982141494751
    4. 'subset' → logprob: -11.259821891784668
    5. 'substring' → logprob: -11.884821891784668
    6. 'cont' → logprob: -12.134821891784668
    7. 'sequence' → logprob: -12.134821891784668
    8. 'continuous' → logprob: -12.634821891784668
    9. '```' → logprob: -12.884821891784668
    10. 's' → logprob: -13.759821891784668

Token 173: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -5.2524021157296374e-05
    2. 'sequence' → logprob: -10.000052452087402
    3. 'q' → logprob: -12.250052452087402
    4. 'quences' → logprob: -14.000052452087402
    5. 'QUENCE' → logprob: -14.250052452087402
    6. ' sequence' → logprob: -15.250052452087402
    7. 'qu' → logprob: -15.875052452087402
    8. 'quent' → logprob: -16.12505340576172
    9. 'quential' → logprob: -16.75005340576172
    10. 'space' → logprob: -16.75005340576172

Token 174: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9075288772583008
    2. '_' → logprob: -1.2825288772583008
    3. ' of' → logprob: -1.9075288772583008
    4. ' in' → logprob: -2.532528877258301
    5. 'of' → logprob: -2.782528877258301
    6. ')' → logprob: -4.782528877258301
    7. ',' → logprob: -4.907528877258301
    8. '_of' → logprob: -5.407528877258301
    9. '_in' → logprob: -6.032528877258301
    10. 'from' → logprob: -6.907528877258301

Token 175: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.03927474468946457
    2. ' anna' → logprob: -3.2892746925354004
    3. 'br' → logprob: -6.7892746925354
    4. ' br' → logprob: -9.789275169372559
    5. 'Anna' → logprob: -11.539275169372559
    6. 'ann' → logprob: -11.914275169372559
    7. ' Anna' → logprob: -11.914275169372559
    8. 'ana' → logprob: -12.039275169372559
    9. ' ' → logprob: -12.289275169372559
    10. 'annah' → logprob: -12.289275169372559

Token 176: ''s' (ID: 885)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09154526144266129
    2. 'and' → logprob: -2.716545343399048
    3. ''s' → logprob: -4.341545104980469
    4. ',' → logprob: -5.966545104980469
    5. ''' → logprob: -6.216545104980469
    6. ' ' → logprob: -6.466545104980469
    7. '_' → logprob: -7.841545104980469
    8. ' '' → logprob: -7.966545104980469
    9. ' ,' → logprob: -8.216545104980469
    10. ' of' → logprob: -8.216545104980469

Token 177: ' cards' (ID: 10541)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2179820537567139
    2. 'and' → logprob: -1.3429820537567139
    3. 'sequence' → logprob: -1.3429820537567139
    4. ' sequence' → logprob: -2.967982053756714
    5. '<|end|>' → logprob: -3.092982053756714
    6. '[]' → logprob: -3.842982053756714
    7. ' cards' → logprob: -3.967982053756714
    8. 'cards' → logprob: -4.217982292175293
    9. 'br' → logprob: -5.842982292175293
    10. ' list' → logprob: -5.967982292175293

Token 178: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35345160961151123
    2. 'and' → logprob: -2.228451728820801
    3. ' and' → logprob: -2.478451728820801
    4. '<|end|>' → logprob: -3.478451728820801
    5. '=' → logprob: -4.103451728820801
    6. ' =' → logprob: -4.228451728820801
    7. 'br' → logprob: -4.353451728820801
    8. ')' → logprob: -4.728451728820801
    9. '[]' → logprob: -5.603451728820801
    10. '[' → logprob: -5.853451728820801

Token 179: ' a' (ID: 261)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.44071826338768005
    2. ' also' → logprob: -2.190718173980713
    3. 'also' → logprob: -2.565718173980713
    4. ' is' → logprob: -3.065718173980713
    5. 'as' → logprob: -3.315718173980713
    6. ' a' → logprob: -3.690718173980713
    7. ' contiguous' → logprob: -3.690718173980713
    8. 'is' → logprob: -4.440718173980713
    9. 'cont' → logprob: -4.940718173980713
    10. 'a' → logprob: -4.940718173980713

Token 180: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.020267529413104057
    2. 'cont' → logprob: -4.520267486572266
    3. 'sub' → logprob: -5.395267486572266
    4. ' sub' → logprob: -5.520267486572266
    5. ' subse' → logprob: -8.270267486572266
    6. 'continuous' → logprob: -8.520267486572266
    7. ' continuous' → logprob: -9.395267486572266
    8. 'substring' → logprob: -10.145267486572266
    9. ' cont' → logprob: -10.645267486572266
    10. ' substring' → logprob: -11.145267486572266

Token 181: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.1150759905576706
    2. ' sub' → logprob: -2.2400760650634766
    3. 'substring' → logprob: -6.740076065063477
    4. ' subse' → logprob: -7.615076065063477
    5. 'subset' → logprob: -8.615076065063477
    6. 'sequence' → logprob: -9.240076065063477
    7. ' substring' → logprob: -9.740076065063477
    8. '<|end|>' → logprob: -9.990076065063477
    9. ' sequence' → logprob: -10.490076065063477
    10. ' of' → logprob: -10.865076065063477

Token 182: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.007045690901577473
    2. 'sequence' → logprob: -5.507045745849609
    3. 'string' → logprob: -6.882045745849609
    4. 'arr' → logprob: -6.882045745849609
    5. 'arra' → logprob: -7.757045745849609
    6. 'ar' → logprob: -8.38204574584961
    7. 'quence' → logprob: -9.13204574584961
    8. '[' → logprob: -10.63204574584961
    9. '_array' → logprob: -10.75704574584961
    10. 'arrays' → logprob: -11.13204574584961

Token 183: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8296287655830383
    2. 'of' → logprob: -2.5796287059783936
    3. '_length' → logprob: -2.8296287059783936
    4. '```' → logprob: -2.8296287059783936
    5. 'max' → logprob: -2.9546287059783936
    6. 'length' → logprob: -3.3296287059783936
    7. '=' → logprob: -3.4546287059783936
    8. 'from' → logprob: -3.4546287059783936
    9. '_max' → logprob: -3.5796287059783936
    10. '_len' → logprob: -3.7046287059783936

Token 184: ' Bruno' (ID: 63193)
  Prédit: 'Br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Br' → logprob: -0.7086541652679443
    2. 'br' → logprob: -1.2086541652679443
    3. ' br' → logprob: -1.9586541652679443
    4. ' Bruno' → logprob: -2.7086541652679443
    5. ' Br' → logprob: -6.958654403686523
    6. 'b' → logprob: -9.333654403686523
    7. ' ' → logprob: -9.333654403686523
    8. '	br' → logprob: -9.833654403686523
    9. '_br' → logprob: -10.333654403686523
    10. 'Bru' → logprob: -10.583654403686523

Token 185: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3381656408309937
    2. '.' → logprob: -1.7131656408309937
    3. '_' → logprob: -1.9631656408309937
    4. ')' → logprob: -2.588165760040283
    5. '```' → logprob: -2.838165760040283
    6. ''s' → logprob: -3.088165760040283
    7. 'br' → logprob: -3.213165760040283
    8. 's' → logprob: -3.213165760040283
    9. '=' → logprob: -3.338165760040283
    10. ' =' → logprob: -3.588165760040283

Token 186: ' cards' (ID: 10541)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36419451236724854
    2. '_dp' → logprob: -2.364194393157959
    3. 'def' → logprob: -2.989194393157959
    4. '```' → logprob: -2.989194393157959
    5. 'max' → logprob: -3.364194393157959
    6. '_' → logprob: -3.489194393157959
    7. '#' → logprob: -3.989194393157959
    8. 'n' → logprob: -5.489194393157959
    9. 'for' → logprob: -5.739194393157959
    10. 'length' → logprob: -6.114194393157959

Token 187: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0539197139441967
    2. 'max' → logprob: -3.178919792175293
    3. '#' → logprob: -4.928919792175293
    4. 'def' → logprob: -6.053919792175293
    5. 'from' → logprob: -7.303919792175293
    6. 'n' → logprob: -9.428919792175293
    7. 'd' → logprob: -9.553919792175293
    8. 'import' → logprob: -9.553919792175293
    9. 'for' → logprob: -9.803919792175293
    10. 'l' → logprob: -9.928919792175293

Token 188: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14559292793273926
    2. 'max' → logprob: -2.0205929279327393
    3. '#' → logprob: -6.89559268951416
    4. 'def' → logprob: -7.52059268951416
    5. 'n' → logprob: -8.02059268951416
    6. '
' → logprob: -8.27059268951416
    7. 'from' → logprob: -8.89559268951416
    8. 'ans' → logprob: -9.02059268951416
    9. 'res' → logprob: -9.39559268951416
    10. 'answer' → logprob: -9.64559268951416

Token 189: ' Approach' (ID: 86383)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0035745303612202406
    2. 'max' → logprob: -6.003574371337891
    3. 'from' → logprob: -7.628574371337891
    4. '#' → logprob: -7.878574371337891
    5. 'def' → logprob: -9.75357437133789
    6. 'prefix' → logprob: -10.12857437133789
    7. 'n' → logprob: -10.37857437133789
    8. 'import' → logprob: -10.50357437133789
    9. 'l' → logprob: -10.50357437133789
    10. 'length' → logprob: -11.50357437133789

Token 190: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034263331443071365
    2. '#' → logprob: -3.6592633724212646
    3. 'from' → logprob: -5.2842631340026855
    4. 'max' → logprob: -6.2842631340026855
    5. 'n' → logprob: -8.034263610839844
    6. 'br' → logprob: -8.284263610839844
    7. 'import' → logprob: -9.409263610839844
    8. 'def' → logprob: -9.409263610839844
    9. 'for' → logprob: -10.284263610839844
    10. 'prefix' → logprob: -10.284263610839844

Token 191: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1461162120103836
    2. 'dp' → logprob: -2.271116256713867
    3. 'from' → logprob: -3.646116256713867
    4. 'for' → logprob: -5.271116256713867
    5. 'prefix' → logprob: -8.271116256713867
    6. 'def' → logprob: -8.271116256713867
    7. 'import' → logprob: -8.646116256713867
    8. 'l' → logprob: -8.646116256713867
    9. 'We' → logprob: -9.021116256713867
    10. 'max' → logprob: -9.521116256713867

Token 192: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17319558560848236
    2. '#' → logprob: -2.0481956005096436
    3. 'from' → logprob: -3.7981956005096436
    4. 'We' → logprob: -5.9231953620910645
    5. 'import' → logprob: -6.5481953620910645
    6. 'for' → logprob: -7.1731953620910645
    7. 'Initialize' → logprob: -7.5481953620910645
    8. 'prefix' → logprob: -7.6731953620910645
    9. 'prev' → logprob: -8.298195838928223
    10. 'def' → logprob: -8.423195838928223

Token 193: ' A' (ID: 355)
  Prédit: 'Anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Anna' → logprob: -0.3502119481563568
    2. 'A' → logprob: -2.1002118587493896
    3. 'anna' → logprob: -2.9752118587493896
    4. 'Br' → logprob: -3.6002118587493896
    5. 'B' → logprob: -3.6002118587493896
    6. 'br' → logprob: -3.7252118587493896
    7. 'the' → logprob: -4.475212097167969
    8. 'both' → logprob: -4.850212097167969
    9. 'we' → logprob: -5.225212097167969
    10. 'a' → logprob: -5.725212097167969

Token 194: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16641142964363098
    2. '=' → logprob: -2.0414113998413086
    3. ' <=' → logprob: -4.291411399841309
    4. ' is' → logprob: -5.916411399841309
    5. ' ' → logprob: -6.041411399841309
    6. ' <' → logprob: -6.791411399841309
    7. '<=' → logprob: -6.791411399841309
    8. ',' → logprob: -8.416411399841309
    9. ' ==' → logprob: -8.541411399841309
    10. ' ≤' → logprob: -8.541411399841309

Token 195: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014173848554491997
    2. ' B' → logprob: -4.264173984527588
    3. 'Br' → logprob: -12.38917350769043
    4. 'br' → logprob: -13.38917350769043
    5. 'A' → logprob: -13.63917350769043
    6. 'b' → logprob: -13.88917350769043
    7. 'len' → logprob: -14.26417350769043
    8. ' ' → logprob: -14.38917350769043
    9. '	B' → logprob: -15.63917350769043
    10. 'BR' → logprob: -15.76417350769043

Token 196: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7023118734359741
    2. ' =' → logprob: -1.3273118734359741
    3. ' <=' → logprob: -2.0773119926452637
    4. ' >' → logprob: -3.3273119926452637
    5. '>' → logprob: -3.7023119926452637
    6. '<=' → logprob: -4.452311992645264
    7. ')' → logprob: -4.577311992645264
    8. ' are' → logprob: -4.702311992645264
    9. ':' → logprob: -5.452311992645264
    10. ' ==' → logprob: -5.827311992645264

Token 197: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0549326129257679
    2. 'be' → logprob: -2.9299325942993164
    3. 'Be' → logprob: -11.304932594299316
    4. ' up' → logprob: -11.429932594299316
    5. '	be' → logprob: -11.429932594299316
    6. '_be' → logprob: -12.179932594299316
    7. 'e' → logprob: -12.929932594299316
    8. ' go' → logprob: -13.554932594299316
    9. 't' → logprob: -13.804932594299316
    10. '#' → logprob: -14.179932594299316

Token 198: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.2564806044101715
    2. 'large' → logprob: -1.6314805746078491
    3. ' up' → logprob: -4.131480693817139
    4. '10' → logprob: -4.631480693817139
    5. ' large' → logprob: -5.756480693817139
    6. '100' → logprob: -7.006480693817139
    7. '1' → logprob: -7.756480693817139
    8. '2' → logprob: -9.50648021697998
    9. 'as' → logprob: -10.13148021697998
    10. 'very' → logprob: -10.63148021697998

Token 199: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.007587813772261143
    2. 'o' → logprob: -5.882587909698486
    3. '100' → logprob: -6.382587909698486
    4. 't' → logprob: -6.882587909698486
    5. 'p' → logprob: -7.007587909698486
    6. 'pto' → logprob: -7.882587909698486
    7. ' to' → logprob: -8.132587432861328
    8. '20' → logprob: -9.632587432861328
    9. '1' → logprob: -9.632587432861328
    10. 'nt' → logprob: -10.132587432861328

Token 200: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4817469120025635
    2. '100' → logprob: -1.3567469120025635
    3. '200' → logprob: -2.2317469120025635
    4. '300' → logprob: -5.106746673583984
    5. '2' → logprob: -5.231746673583984
    6. '500' → logprob: -5.481746673583984
    7. '400' → logprob: -7.606746673583984
    8. '50' → logprob: -7.856746673583984
    9. '20' → logprob: -8.231746673583984
    10. '5' → logprob: -8.731746673583984

Token 201: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9423678517341614
    2. '100' → logprob: -1.0673677921295166
    3. '200' → logprob: -1.5673677921295166
    4. '300' → logprob: -3.5673677921295166
    5. '500' → logprob: -4.192368030548096
    6. '2' → logprob: -4.692368030548096
    7. '400' → logprob: -6.317368030548096
    8. '50' → logprob: -6.942368030548096
    9. '150' → logprob: -7.317368030548096
    10. '5' → logprob: -7.692368030548096

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2863372564315796
    2. '+' → logprob: -2.786337375640869
    3. '000' → logprob: -3.036337375640869
    4. '00' → logprob: -3.286337375640869
    5. '*' → logprob: -3.536337375640869
    6. ' *' → logprob: -3.786337375640869
    7. ' ' → logprob: -4.661337375640869
    8. ' +' → logprob: -5.286337375640869
    9. '**' → logprob: -5.411337375640869
    10. 'A' → logprob: -5.411337375640869

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19455303251743317
    2. ':' → logprob: -1.819553017616272
    3. ':
' → logprob: -5.569552898406982
    4. '```' → logprob: -5.819552898406982
    5. '+' → logprob: -6.569552898406982
    6. 'A' → logprob: -6.819552898406982
    7. '
' → logprob: -7.194552898406982
    8. ' and' → logprob: -7.444552898406982
    9. '\n' → logprob: -7.444552898406982
    10. 'import' → logprob: -7.944552898406982

Token 204: ' it's' (ID: 4275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.607086181640625
    2. ' dp' → logprob: -0.982086181640625
    3. ' we' → logprob: -2.607086181640625
    4. 'we' → logprob: -6.357086181640625
    5. ' a' → logprob: -6.732086181640625
    6. '#' → logprob: -6.857086181640625
    7. 'import' → logprob: -7.357086181640625
    8. ' import' → logprob: -7.482086181640625
    9. ' #' → logprob: -8.357086181640625
    10. ' the' → logprob: -8.482086181640625

Token 205: ' feasible' (ID: 58866)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.7713813781738281
    2. ' feasible' → logprob: -0.8963813781738281
    3. 'possible' → logprob: -2.896381378173828
    4. 'reasonable' → logprob: -4.146381378173828
    5. 'likely' → logprob: -5.146381378173828
    6. 'a' → logprob: -5.146381378173828
    7. ' challenging' → logprob: -5.271381378173828
    8. ' reasonable' → logprob: -5.271381378173828
    9. '```' → logprob: -5.396381378173828
    10. 'dp' → logprob: -5.771381378173828

Token 206: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2291303873062134
    2. 'for' → logprob: -1.2291303873062134
    3. '=' → logprob: -2.354130268096924
    4. '_' → logprob: -2.854130268096924
    5. 'import' → logprob: -2.979130268096924
    6. '```' → logprob: -3.104130268096924
    7. '#' → logprob: -3.229130268096924
    8. ' to' → logprob: -3.479130268096924
    9. 'to' → logprob: -3.604130268096924
    10. '.' → logprob: -4.854130268096924

Token 207: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.04635125398635864
    2. 'dp' → logprob: -3.171351194381714
    3. 'do' → logprob: -6.796351432800293
    4. ' use' → logprob: -6.921351432800293
    5. 'compute' → logprob: -7.796351432800293
    6. 'implement' → logprob: -7.921351432800293
    7. 'apply' → logprob: -9.671351432800293
    8. 'O' → logprob: -9.796351432800293
    9. 'build' → logprob: -9.921351432800293
    10. 'try' → logprob: -10.046351432800293

Token 208: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1627410650253296
    2. 'dynamic' → logprob: -2.162741184234619
    3. 'a' → logprob: -3.412741184234619
    4. 'DP' → logprob: -6.537741184234619
    5. 'two' → logprob: -7.787741184234619
    6. 'O' → logprob: -8.662740707397461
    7. 'Dynamic' → logprob: -9.787740707397461
    8. '_dp' → logprob: -9.787740707397461
    9. ' dynamic' → logprob: -10.162740707397461
    10. '2' → logprob: -11.787740707397461

Token 209: ' with' (ID: 483)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014844478107988834
    2. 'n' → logprob: -5.2648444175720215
    3. '
' → logprob: -5.6398444175720215
    4. '_dp' → logprob: -6.6398444175720215
    5. '```' → logprob: -7.3898444175720215
    6. '#' → logprob: -7.3898444175720215
    7. '_' → logprob: -7.5148444175720215
    8. ':' → logprob: -7.6398444175720215
    9. 'd' → logprob: -8.01484489440918
    10. ',' → logprob: -8.13984489440918

Token 210: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.15636903047561646
    2. 'two' → logprob: -2.7813689708709717
    3. ' O' → logprob: -3.2813689708709717
    4. ' two' → logprob: -3.9063689708709717
    5. 'dp' → logprob: -4.906369209289551
    6. 'a' → logprob: -5.406369209289551
    7. '2' → logprob: -5.656369209289551
    8. 'nested' → logprob: -6.031369209289551
    9. 'python' → logprob: -6.156369209289551
    10. ' nested' → logprob: -6.906369209289551

Token 211: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004952543415129185
    2. '(B' → logprob: -5.754952430725098
    3. '(N' → logprob: -6.379952430725098
    4. '(' → logprob: -10.004952430725098
    5. 'A' → logprob: -11.254952430725098
    6. '(n' → logprob: -11.379952430725098
    7. '(min' → logprob: -12.254952430725098
    8. 'AB' → logprob: -13.629952430725098
    9. '(len' → logprob: -13.754952430725098
    10. '((' → logprob: -14.754952430725098

Token 212: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12504179775714874
    2. ')' → logprob: -2.6250417232513428
    3. '2' → logprob: -4.250041961669922
    4. '^' → logprob: -4.250041961669922
    5. '*)' → logprob: -4.875041961669922
    6. '**' → logprob: -5.750041961669922
    7. '[' → logprob: -6.500041961669922
    8. '*A' → logprob: -6.875041961669922
    9. '```' → logprob: -7.125041961669922
    10. '²' → logprob: -7.750041961669922

Token 213: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.953082341467962e-05
    2. 'A' → logprob: -10.500039100646973
    3. ' B' → logprob: -12.125039100646973
    4. '500' → logprob: -12.625039100646973
    5. '(B' → logprob: -13.875039100646973
    6. '```' → logprob: -14.250039100646973
    7. '	B' → logprob: -15.250039100646973
    8. 'BA' → logprob: -15.750039100646973
    9. ' ' → logprob: -15.812539100646973
    10. '
' → logprob: -16.06254005432129

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018693212419748306
    2. '*' → logprob: -4.018693447113037
    3. '^' → logprob: -8.268692970275879
    4. '**' → logprob: -8.643692970275879
    5. 'log' → logprob: -10.018692970275879
    6. ' *' → logprob: -10.643692970275879
    7. '2' → logprob: -10.643692970275879
    8. ' )' → logprob: -12.143692970275879
    9. '²' → logprob: -12.893692970275879
    10. ' ' → logprob: -13.518692970275879

Token 215: ' complexity' (ID: 37588)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016347164055332541
    2. 'n' → logprob: -8.25163459777832
    3. 'd' → logprob: -8.37663459777832
    4. '
' → logprob: -8.62663459777832
    5. '```' → logprob: -8.62663459777832
    6. '=' → logprob: -8.87663459777832
    7. '_dp' → logprob: -9.00163459777832
    8. ':' → logprob: -9.00163459777832
    9. '#' → logprob: -9.12663459777832
    10. 'DP' → logprob: -9.37663459777832

Token 216: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033034008811227977
    2. '
' → logprob: -8.750329971313477
    3. '#' → logprob: -9.500329971313477
    4. '_dp' → logprob: -10.625329971313477
    5. '```' → logprob: -10.750329971313477
    6. 'n' → logprob: -10.875329971313477
    7. 'DP' → logprob: -11.500329971313477
    8. 'max' → logprob: -12.625329971313477
    9. ' dp' → logprob: -12.875329971313477
    10. ':' → logprob: -12.875329971313477

Token 217: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7252845029579476e-05
    2. '#' → logprob: -11.375027656555176
    3. '```' → logprob: -12.500027656555176
    4. 'd' → logprob: -13.000027656555176
    5. 'DP' → logprob: -13.375027656555176
    6. 'import' → logprob: -13.375027656555176
    7. '_dp' → logprob: -13.500027656555176
    8. 'n' → logprob: -13.500027656555176
    9. 'max' → logprob: -13.875027656555176
    10. '
' → logprob: -14.000027656555176

Token 218: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.723973582556937e-05
    2. '#' → logprob: -11.375017166137695
    3. 'import' → logprob: -12.625017166137695
    4. 'DP' → logprob: -13.875017166137695
    5. '```' → logprob: -14.750017166137695
    6. 'n' → logprob: -15.125017166137695
    7. 'd' → logprob: -15.500017166137695
    8. 'from' → logprob: -16.125017166137695
    9. ' dp' → logprob: -16.125017166137695
    10. 'prev' → logprob: -16.500017166137695

Token 219: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7013420462608337
    2. ' =' → logprob: -1.3263421058654785
    3. 'for' → logprob: -1.5763421058654785
    4. ' can' → logprob: -4.2013421058654785
    5. ' for' → logprob: -5.3263421058654785
    6. 'can' → logprob: -5.3263421058654785
    7. '#' → logprob: -5.7013421058654785
    8. ''ll' → logprob: -7.7013421058654785
    9. 'dp' → logprob: -7.8263421058654785
    10. 'import' → logprob: -8.07634162902832

Token 220: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.6903315782546997
    2. 'initialize' → logprob: -1.4403315782546997
    3. 'dp' → logprob: -2.06533145904541
    4. 'define' → logprob: -2.69033145904541
    5. 'create' → logprob: -3.31533145904541
    6. 'consider' → logprob: -4.31533145904541
    7. 'for' → logprob: -4.56533145904541
    8. '#' → logprob: -6.31533145904541
    9. 'compute' → logprob: -6.44033145904541
    10. 'build' → logprob: -7.56533145904541

Token 221: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7176372408866882
    2. '[[' → logprob: -0.9676372408866882
    3. 'a' → logprob: -2.092637300491333
    4. '[' → logprob: -5.092637062072754
    5. 'for' → logprob: -7.717637062072754
    6. 'two' → logprob: -7.842637062072754
    7. '[i' → logprob: -7.842637062072754
    8. '[a' → logprob: -8.467637062072754
    9. '0' → logprob: -8.717637062072754
    10. ' [[' → logprob: -8.717637062072754

Token 222: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14762353897094727
    2. '=' → logprob: -2.0226235389709473
    3. '=[' → logprob: -6.522623538970947
    4. '[i' → logprob: -6.772623538970947
    5. '[' → logprob: -7.647623538970947
    6. '=[[' → logprob: -7.647623538970947
    7. 'dp' → logprob: -7.772623538970947
    8. 'for' → logprob: -9.022623062133789
    9. '   ' → logprob: -9.397623062133789
    10. '=[]' → logprob: -9.522623062133789

Token 223: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2996314465999603
    2. 'compute' → logprob: -2.049631357192993
    3. 'calculate' → logprob: -3.174631357192993
    4. 'for' → logprob: -3.299631357192993
    5. 'dp' → logprob: -3.799631357192993
    6. ' find' → logprob: -4.174631595611572
    7. 'track' → logprob: -6.049631595611572
    8. 'keep' → logprob: -6.299631595611572
    9. 'det' → logprob: -6.549631595611572
    10. 'store' → logprob: -6.799631595611572

Token 224: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.264200359582901
    2. ' the' → logprob: -1.8892003297805786
    3. 'for' → logprob: -2.764200448989868
    4. ' for' → logprob: -5.514200210571289
    5. 'a' → logprob: -5.639200210571289
    6. '[' → logprob: -6.139200210571289
    7. ' longest' → logprob: -6.139200210571289
    8. 'br' → logprob: -6.264200210571289
    9. ' a' → logprob: -7.264200210571289
    10. 'long' → logprob: -7.764200210571289

Token 225: ' longest' (ID: 37511)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7066677808761597
    2. 'long' → logprob: -0.7066677808761597
    3. 'maximum' → logprob: -4.706667900085449
    4. ' longest' → logprob: -5.956667900085449
    5. 'max' → logprob: -7.831667900085449
    6. 'largest' → logprob: -8.45666790008545
    7. 'Longest' → logprob: -8.58166790008545
    8. ' length' → logprob: -8.83166790008545
    9. 'for' → logprob: -8.83166790008545
    10. 'l' → logprob: -8.95666790008545

Token 226: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.05814499035477638
    2. ' common' → logprob: -3.558145046234131
    3. '_common' → logprob: -3.808145046234131
    4. '_' → logprob: -6.433145046234131
    5. '```' → logprob: -6.683145046234131
    6. 'length' → logprob: -7.308145046234131
    7. '[' → logprob: -7.933145046234131
    8. 'sub' → logprob: -8.308144569396973
    9. 'for' → logprob: -8.558144569396973
    10. '=' → logprob: -8.808144569396973

Token 227: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5084378719329834
    2. 'length' → logprob: -1.3834378719329834
    3. 'substring' → logprob: -2.0084378719329834
    4. ' subse' → logprob: -5.5084381103515625
    5. 'prefix' → logprob: -6.0084381103515625
    6. '
' → logprob: -6.5084381103515625
    7. ' length' → logprob: -6.6334381103515625
    8. ' contiguous' → logprob: -7.2584381103515625
    9. 'continuous' → logprob: -7.6334381103515625
    10. '```' → logprob: -7.7584381103515625

Token 228: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.02004156820476055
    2. 'sequence' → logprob: -4.020041465759277
    3. 'string' → logprob: -6.395041465759277
    4. 'arr' → logprob: -9.145041465759277
    5. 'seq' → logprob: -10.895041465759277
    6. '[i' → logprob: -11.145041465759277
    7. 'arrays' → logprob: -11.145041465759277
    8. '[' → logprob: -11.270041465759277
    9. 'arra' → logprob: -11.395041465759277
    10. '[]' → logprob: -11.895041465759277

Token 229: ' ending' (ID: 22013)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025780310854315758
    2. '_dp' → logprob: -4.525780200958252
    3. ' =' → logprob: -5.775780200958252
    4. '=' → logprob: -5.900780200958252
    5. ',' → logprob: -6.525780200958252
    6. '
' → logprob: -6.775780200958252
    7. 'length' → logprob: -7.275780200958252
    8. 's' → logprob: -7.400780200958252
    9. '[i' → logprob: -7.525780200958252
    10. 'for' → logprob: -7.525780200958252

Token 230: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.15940329432487488
    2. ' at' → logprob: -2.5344033241271973
    3. 'with' → logprob: -3.2844033241271973
    4. '_at' → logprob: -3.5344033241271973
    5. 'in' → logprob: -7.659403324127197
    6. 'for' → logprob: -8.909402847290039
    7. '_' → logprob: -9.034402847290039
    8. ',' → logprob: -9.159402847290039
    9. ' with' → logprob: -9.159402847290039
    10. ' ' → logprob: -9.284402847290039

Token 231: ' anna' (ID: 101276)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006849165540188551
    2. '[i' → logprob: -6.00684928894043
    3. 'each' → logprob: -6.25684928894043
    4. ' i' → logprob: -7.25684928894043
    5. 'anna' → logprob: -7.38184928894043
    6. 'a' → logprob: -8.00684928894043
    7. '(i' → logprob: -8.38184928894043
    8. 'positions' → logprob: -9.25684928894043
    9. ' each' → logprob: -9.88184928894043
    10. 'br' → logprob: -10.00684928894043

Token 232: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16964973509311676
    2. '_i' → logprob: -2.669649839401245
    3. '[' → logprob: -3.044649839401245
    4. '_' → logprob: -4.169649600982666
    5. '_idx' → logprob: -4.669649600982666
    6. '[_' → logprob: -5.919649600982666
    7. '[j' → logprob: -6.419649600982666
    8. '   ' → logprob: -6.669649600982666
    9. '_index' → logprob: -6.669649600982666
    10. 's' → logprob: -6.794649600982666

Token 233: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08197323232889175
    2. ']' → logprob: -3.0819733142852783
    3. '-' → logprob: -3.4569733142852783
    4. ' ][' → logprob: -7.956973075866699
    5. 's' → logprob: -8.4569730758667
    6. '+' → logprob: -8.8319730758667
    7. ' -' → logprob: -9.0819730758667
    8. '_' → logprob: -9.2069730758667
    9. '][-' → logprob: -9.7069730758667
    10. '[i' → logprob: -10.5819730758667

Token 234: ' br' (ID: 1294)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12836408615112305
    2. ' j' → logprob: -2.253364086151123
    3. 'br' → logprob: -4.253364086151123
    4. ' br' → logprob: -7.128364086151123
    5. 'b' → logprob: -8.003364562988281
    6. ' and' → logprob: -10.628364562988281
    7. ' ' → logprob: -11.753364562988281
    8. ' b' → logprob: -12.003364562988281
    9. '    ' → logprob: -12.128364562988281
    10. 'B' → logprob: -12.253364562988281

Token 235: 'uno' (ID: 12811)
  Prédit: 'uno'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uno' → logprob: -0.061877597123384476
    2. 'no' → logprob: -3.061877489089966
    3. 'u' → logprob: -5.561877727508545
    4. '   ' → logprob: -5.811877727508545
    5. '[j' → logprob: -6.061877727508545
    6. 'j' → logprob: -7.186877727508545
    7. 'r' → logprob: -7.436877727508545
    8. ' ' → logprob: -7.561877727508545
    9. '```' → logprob: -8.311877250671387
    10. 'un' → logprob: -8.436877250671387

Token 236: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6873602867126465
    2. '[' → logprob: -1.1873602867126465
    3. '[j' → logprob: -3.0623602867126465
    4. '[_' → logprob: -3.1873602867126465
    5. '_' → logprob: -3.4373602867126465
    6. '][' → logprob: -4.4373602867126465
    7. 's' → logprob: -4.9373602867126465
    8. ']' → logprob: -4.9373602867126465
    9. '```' → logprob: -4.9373602867126465
    10. '[
' → logprob: -5.1873602867126465

Token 237: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23469223082065582
    2. ']+' → logprob: -2.109692335128784
    3. ']:' → logprob: -3.609692335128784
    4. '])' → logprob: -3.734692335128784
    5. '+' → logprob: -4.484692096710205
    6. ')' → logprob: -4.859692096710205
    7. ']:
' → logprob: -6.109692096710205
    8. '[i' → logprob: -6.234692096710205
    9. ' ]' → logprob: -6.484692096710205
    10. '):' → logprob: -6.484692096710205

Token 238: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6280166506767273
    2. '[' → logprob: -1.753016710281372
    3. '[
' → logprob: -2.378016710281372
    4. '\n' → logprob: -2.753016710281372
    5. '
' → logprob: -3.753016710281372
    6. 'd' → logprob: -4.128016471862793
    7. '\' → logprob: -4.253016471862793
    8. '=' → logprob: -4.253016471862793
    9. ' =' → logprob: -4.503016471862793
    10. '```' → logprob: -4.878016471862793

Token 239: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013663990423083305
    2. 'd' → logprob: -5.1386637687683105
    3. 'for' → logprob: -5.8886637687683105
    4. '\n' → logprob: -6.5136637687683105
    5. '\' → logprob: -6.8886637687683105
    6. '
' → logprob: -7.2636637687683105
    7. 'i' → logprob: -8.138664245605469
    8. 'n' → logprob: -8.263664245605469
    9. '#' → logprob: -8.763664245605469
    10. '=' → logprob: -8.888664245605469

Token 240: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16169919073581696
    2. ' i' → logprob: -1.9116991758346558
    3. ' anna' → logprob: -6.786699295043945
    4. 'anna' → logprob: -9.661699295043945
    5. ' ' → logprob: -10.036699295043945
    6. ' Anna' → logprob: -10.161699295043945
    7. '_' → logprob: -10.411699295043945
    8. 'Anna' → logprob: -10.536699295043945
    9. ' _' → logprob: -10.661699295043945
    10. '```' → logprob: -10.911699295043945

Token 241: ' pair' (ID: 10610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6338424682617188
    2. ' i' → logprob: -0.7588424682617188
    3. ' j' → logprob: -7.508842468261719
    4. 'j' → logprob: -7.508842468261719
    5. ' anna' → logprob: -10.133842468261719
    6. ' for' → logprob: -10.508842468261719
    7. '   ' → logprob: -11.133842468261719
    8. 'for' → logprob: -11.258842468261719
    9. '```' → logprob: -11.758842468261719
    10. ' in' → logprob: -11.758842468261719

Token 242: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.521360993385315
    2. 'of' → logprob: -1.646360993385315
    3. '   ' → logprob: -2.0213608741760254
    4. ',' → logprob: -2.3963608741760254
    5. 'i' → logprob: -2.5213608741760254
    6. ' i' → logprob: -2.7713608741760254
    7. '(' → logprob: -3.1463608741760254
    8. '[i' → logprob: -3.5213608741760254
    9. ' (' → logprob: -3.5213608741760254
    10. '[' → logprob: -3.7713608741760254

Token 243: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005707527510821819
    2. ')' → logprob: -6.255707740783691
    3. ' i' → logprob: -6.380707740783691
    4. '   ' → logprob: -7.005707740783691
    5. 'anna' → logprob: -7.880707740783691
    6. 'a' → logprob: -8.505707740783691
    7. ')i' → logprob: -9.630707740783691
    8. '),' → logprob: -9.880707740783691
    9. '
' → logprob: -10.380707740783691
    10. ' ' → logprob: -10.380707740783691

Token 244: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09996119141578674
    2. ')' → logprob: -3.724961280822754
    3. ' ,' → logprob: -3.724961280822754
    4. '][' → logprob: -3.724961280822754
    5. ',j' → logprob: -4.474961280822754
    6. '+' → logprob: -5.974961280822754
    7. ',
' → logprob: -5.974961280822754
    8. ',i' → logprob: -6.724961280822754
    9. '[' → logprob: -6.849961280822754
    10. '),' → logprob: -7.224961280822754

Token 245: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1733350157737732
    2. '):
' → logprob: -2.048335075378418
    3. ')' → logprob: -4.298335075378418
    4. ',' → logprob: -5.548335075378418
    5. ':' → logprob: -5.673335075378418
    6. '),' → logprob: -5.673335075378418
    7. ' ):' → logprob: -6.548335075378418
    8. '+' → logprob: -6.673335075378418
    9. ']:' → logprob: -6.923335075378418
    10. ':
' → logprob: -8.173335075378418

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08001109212636948
    2. ' if' → logprob: -2.5800111293792725
    3. '   ' → logprob: -6.955010890960693
    4. '       ' → logprob: -9.455011367797852
    5. '	if' → logprob: -10.080011367797852
    6. '    ' → logprob: -10.830011367797852
    7. ' ' → logprob: -11.830011367797852
    8. ' ' → logprob: -11.830011367797852
    9. '           ' → logprob: -12.955011367797852
    10. 'dp' → logprob: -13.580011367797852

Token 247: ' anna' (ID: 101276)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.1799018681049347
    2. ' anna' → logprob: -1.8049018383026123
    3. ' ' → logprob: -9.804902076721191
    4. 'ana' → logprob: -10.054902076721191
    5. '   ' → logprob: -11.179902076721191
    6. 'anne' → logprob: -11.304902076721191
    7. ' ' → logprob: -11.679902076721191
    8. '  ' → logprob: -12.429902076721191
    9. 'a' → logprob: -12.554902076721191
    10. 'i' → logprob: -12.679902076721191

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.000009536743164
    3. '```' → logprob: -13.875009536743164
    4. '[j' → logprob: -14.250009536743164
    5. '[I' → logprob: -14.375009536743164
    6. ' [' → logprob: -14.500009536743164
    7. '[
' → logprob: -14.875009536743164
    8. '\[' → logprob: -15.625009536743164
    9. 'i' → logprob: -16.125009536743164
    10. '
' → logprob: -17.000009536743164

Token 249: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2500205636024475
    2. ']==' → logprob: -2.1250205039978027
    3. '==' → logprob: -2.5000205039978027
    4. ' ==' → logprob: -4.250020503997803
    5. '[' → logprob: -5.500020503997803
    6. '-' → logprob: -7.625020503997803
    7. ' ]' → logprob: -8.500020980834961
    8. '][' → logprob: -9.000020980834961
    9. '[i' → logprob: -9.000020980834961
    10. '```' → logprob: -9.250020980834961

Token 250: 'br' (ID: 1697)
  Prédit: 'br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0036076747346669436
    2. ' br' → logprob: -5.628607749938965
    3. '	br' → logprob: -12.378607749938965
    4. '```' → logprob: -13.753607749938965
    5. ' ' → logprob: -14.003607749938965
    6. '   ' → logprob: -14.628607749938965
    7. 'b' → logprob: -15.378607749938965
    8. 'brane' → logprob: -15.753607749938965
    9. ' ' → logprob: -15.878607749938965
    10. 'Br' → logprob: -16.25360679626465

Token 251: 'uno' (ID: 12811)
  Prédit: 'uno'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uno' → logprob: -0.1008753851056099
    2. 'u' → logprob: -2.3508753776550293
    3. '   ' → logprob: -8.600875854492188
    4. '[' → logprob: -8.725875854492188
    5. 'no' → logprob: -10.225875854492188
    6. 'o' → logprob: -10.475875854492188
    7. ' ' → logprob: -10.475875854492188
    8. '[i' → logprob: -10.475875854492188
    9. 'un' → logprob: -10.725875854492188
    10. ' u' → logprob: -10.850875854492188

Token 252: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.602024900028482e-05
    2. '[' → logprob: -9.750085830688477
    3. '[
' → logprob: -11.125085830688477
    4. '[i' → logprob: -12.000085830688477
    5. ' [' → logprob: -12.625085830688477
    6. ']' → logprob: -13.875085830688477
    7. 'j' → logprob: -14.125085830688477
    8. '][' → logprob: -14.500085830688477
    9. '   ' → logprob: -15.125085830688477
    10. '```' → logprob: -15.250085830688477

Token 253: '],' (ID: 2155)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3158236742019653
    2. '],' → logprob: -1.8158236742019653
    3. ']:' → logprob: -2.190823554992676
    4. ':' → logprob: -2.315823554992676
    5. '):' → logprob: -2.315823554992676
    6. ']' → logprob: -2.565823554992676
    7. '):
' → logprob: -3.065823554992676
    8. '),' → logprob: -3.315823554992676
    9. 'and' → logprob: -3.565823554992676
    10. ')' → logprob: -3.690823554992676

Token 254: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4352450370788574
    2. 'dp' → logprob: -1.0602450370788574
    3. ' if' → logprob: -5.435245037078857
    4. '   ' → logprob: -7.310245037078857
    5. '           ' → logprob: -7.560245037078857
    6. 'if' → logprob: -7.935245037078857
    7. '	dp' → logprob: -8.185245513916016
    8. ' length' → logprob: -9.060245513916016
    9. '       ' → logprob: -10.185245513916016
    10. 'length' → logprob: -10.310245513916016

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014287306112237275
    2. ' =' → logprob: -9.750143051147461
    3. '[' → logprob: -10.500143051147461
    4. ' [' → logprob: -11.125143051147461
    5. '[
' → logprob: -11.250143051147461
    6. '=[' → logprob: -11.625143051147461
    7. '=' → logprob: -11.875143051147461
    8. '\[' → logprob: -12.250143051147461
    9. '```' → logprob: -13.000143051147461
    10. '[I' → logprob: -13.500143051147461

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03407624736428261
    2. '-' → logprob: -3.65907621383667
    3. '[i' → logprob: -5.15907621383667
    4. ']' → logprob: -7.40907621383667
    5. ' ][' → logprob: -7.40907621383667
    6. '[' → logprob: -7.65907621383667
    7. '[j' → logprob: -9.284076690673828
    8. '[-' → logprob: -10.034076690673828
    9. '][-' → logprob: -10.159076690673828
    10. ' -' → logprob: -10.784076690673828

Token 257: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.008129963040119e-06
    2. ' j' → logprob: -13.250003814697266
    3. ']' → logprob: -14.625003814697266
    4. ' ' → logprob: -14.875003814697266
    5. '   ' → logprob: -14.875003814697266
    6. '][' → logprob: -15.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. '1' → logprob: -16.250003814697266
    9. '[j' → logprob: -16.250003814697266
    10. ')' → logprob: -16.375003814697266

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010096615180373192
    2. ']=' → logprob: -5.010096549987793
    3. '=' → logprob: -6.010096549987793
    4. ']+=' → logprob: -7.135096549987793
    5. ' =' → logprob: -10.135096549987793
    6. ']+' → logprob: -10.135096549987793
    7. ' ]' → logprob: -10.510096549987793
    8. '+' → logprob: -11.385096549987793
    9. ')' → logprob: -13.010096549987793
    10. '   ' → logprob: -13.385096549987793

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03809255361557007
    2. ' =' → logprob: -3.288092613220215
    3. '+=' → logprob: -10.163092613220215
    4. ' +=' → logprob: -11.288092613220215
    5. ' ' → logprob: -17.7880916595459
    6. '>' → logprob: -18.0380916595459
    7. '=
' → logprob: -18.0380916595459
    8. ' ' → logprob: -18.1630916595459
    9. '+' → logprob: -18.5380916595459
    10. '=

' → logprob: -18.5380916595459

Token 260: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.027413807809352875
    2. '(dp' → logprob: -3.652413845062256
    3. ' dp' → logprob: -7.402413845062256
    4. ' (' → logprob: -8.277413368225098
    5. '1' → logprob: -8.527413368225098
    6. '(' → logprob: -10.152413368225098
    7. '	dp' → logprob: -12.152413368225098
    8. '   ' → logprob: -13.027413368225098
    9. ' ' → logprob: -13.902413368225098
    10. '(d' → logprob: -14.152413368225098

Token 261: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3319124011322856e-05
    2. 'i' → logprob: -11.000022888183594
    3. '[' → logprob: -12.875022888183594
    4. '[
' → logprob: -13.250022888183594
    5. '[I' → logprob: -14.500022888183594
    6. '```' → logprob: -15.000022888183594
    7. ' [' → logprob: -15.125022888183594
    8. ' i' → logprob: -15.250022888183594
    9. '(i' → logprob: -15.500022888183594
    10. '\[' → logprob: -16.250022888183594

Token 262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018317103385925293
    2. '[i' → logprob: -4.143317222595215
    3. '][' → logprob: -6.893317222595215
    4. ' -' → logprob: -6.893317222595215
    5. 'i' → logprob: -8.893317222595215
    6. '[' → logprob: -9.643317222595215
    7. '−' → logprob: -10.893317222595215
    8. '1' → logprob: -12.018317222595215
    9. '-i' → logprob: -12.393317222595215
    10. ' [' → logprob: -12.393317222595215

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033263610675930977
    2. '-' → logprob: -5.753326416015625
    3. '][' → logprob: -9.253326416015625
    4. ' ' → logprob: -10.628326416015625
    5. '[' → logprob: -10.878326416015625
    6. ' -' → logprob: -12.378326416015625
    7. ']' → logprob: -13.378326416015625
    8. '```' → logprob: -13.753326416015625
    9. '[j' → logprob: -13.753326416015625
    10. '
' → logprob: -14.628326416015625

Token 264: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023512568441219628
    2. '[j' → logprob: -9.500235557556152
    3. '[i' → logprob: -9.625235557556152
    4. '[' → logprob: -10.125235557556152
    5. ']' → logprob: -10.625235557556152
    6. ' ][' → logprob: -10.750235557556152
    7. '-' → logprob: -13.500235557556152
    8. '[
' → logprob: -13.875235557556152
    9. '	' → logprob: -14.125235557556152
    10. '   ' → logprob: -14.250235557556152

Token 265: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.779520092299208e-05
    2. '[j' → logprob: -10.250078201293945
    3. '][' → logprob: -10.375078201293945
    4. ' j' → logprob: -12.375078201293945
    5. ']' → logprob: -13.250078201293945
    6. '{' → logprob: -13.500078201293945
    7. '[' → logprob: -13.625078201293945
    8. ' ' → logprob: -14.000078201293945
    9. '```' → logprob: -14.625078201293945
    10. '
' → logprob: -15.000078201293945

Token 266: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.225939872208983e-05
    2. '1' → logprob: -10.750032424926758
    3. ' -' → logprob: -11.500032424926758
    4. '−' → logprob: -15.125032424926758
    5. '[' → logprob: -15.500032424926758
    6. ']' → logprob: -16.500032424926758
    7. ' ' → logprob: -17.375032424926758
    8. '```' → logprob: -17.500032424926758
    9. '–' → logprob: -18.125032424926758
    10. '   ' → logprob: -18.125032424926758

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -19.0625
    5. '-' → logprob: -19.25
    6. '	' → logprob: -19.4375
    7. '
' → logprob: -19.6875
    8. '' → logprob: -20.125
    9. '۱' → logprob: -20.375
    10. '१' → logprob: -20.4375

Token 268: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9135828018188477
    2. ']' → logprob: -0.9135828018188477
    3. ']+' → logprob: -1.6635828018188477
    4. ' +' → logprob: -4.788582801818848
    5. ' ]' → logprob: -10.913582801818848
    6. '+]' → logprob: -11.538582801818848
    7. '
' → logprob: -12.663582801818848
    8. ' ' → logprob: -12.788582801818848
    9. 'if' → logprob: -12.913582801818848
    10. '[' → logprob: -13.413582801818848

Token 269: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4632176458835602
    2. ' +' → logprob: -1.0882176160812378
    3. 'if' → logprob: -4.838217735290527
    4. ']' → logprob: -5.463217735290527
    5. ' if' → logprob: -5.588217735290527
    6. ']+' → logprob: -5.713217735290527
    7. 'import' → logprob: -5.838217735290527
    8. '[i' → logprob: -6.088217735290527
    9. ')' → logprob: -6.338217735290527
    10. '```' → logprob: -6.463217735290527

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.5
    5. ' ' → logprob: -21.25
    6. '
' → logprob: -21.375
    7. '`' → logprob: -21.625
    8. '۱' → logprob: -22.25
    9. '１' → logprob: -23.125
    10. '+' → logprob: -23.25

Token 271: ' else' (ID: 1203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5570961833000183
    2. '[' → logprob: -2.557096242904663
    3. ' ' → logprob: -2.807096242904663
    4. '=' → logprob: -2.807096242904663
    5. ' =' → logprob: -2.932096242904663
    6. ']' → logprob: -3.057096242904663
    7. '
' → logprob: -3.932096242904663
    8. ')' → logprob: -4.557096004486084
    9. 'd' → logprob: -4.557096004486084
    10. ',' → logprob: -4.682096004486084

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. ' ' → logprob: -17.002185821533203
    4. '   ' → logprob: -17.127185821533203
    5. '=' → logprob: -18.627185821533203
    6. ' =' → logprob: -20.127185821533203
    7. '  ' → logprob: -20.252185821533203
    8. '00' → logprob: -20.627185821533203
    9. '    ' → logprob: -20.627185821533203
    10. ',' → logprob: -21.127185821533203

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -20.25000762939453
    4. 'dp' → logprob: -21.00000762939453
    5. '=' → logprob: -21.37500762939453
    6. ' ' → logprob: -22.75000762939453
    7. '  ' → logprob: -23.25000762939453
    8. '00' → logprob: -23.75000762939453
    9. 'max' → logprob: -23.87500762939453
    10. '    ' → logprob: -23.87500762939453

Token 274: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.048583511263132095
    2. '
' → logprob: -4.423583507537842
    3. '_dp' → logprob: -4.673583507537842
    4. '```' → logprob: -5.298583507537842
    5. 'n' → logprob: -5.548583507537842
    6. '\n' → logprob: -6.048583507537842
    7. '=' → logprob: -6.423583507537842
    8. '[' → logprob: -6.423583507537842
    9. ',' → logprob: -6.548583507537842
    10. ']' → logprob: -6.673583507537842

Token 275: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010694891680032015
    2. 'n' → logprob: -7.87606954574585
    3. '
' → logprob: -8.376069068908691
    4. '```' → logprob: -9.251069068908691
    5. 'd' → logprob: -9.376069068908691
    6. '`
' → logprob: -9.501069068908691
    7. '\n' → logprob: -9.501069068908691
    8. '\' → logprob: -10.751069068908691
    9. '_dp' → logprob: -10.751069068908691
    10. ' dp' → logprob: -11.001069068908691

Token 276: ' This' (ID: 1328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00011987409379798919
    2. 'max' → logprob: -9.500120162963867
    3. '
' → logprob: -10.375120162963867
    4. 'import' → logprob: -12.125120162963867
    5. 'n' → logprob: -12.500120162963867
    6. '```' → logprob: -13.000120162963867
    7. ' dp' → logprob: -14.250120162963867
    8. '`
' → logprob: -14.750120162963867
    9. 'from' → logprob: -14.875120162963867
    10. 'for' → logprob: -15.500120162963867

Token 277: ' gives' (ID: 8967)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0851057767868042
    2. '_' → logprob: -1.8351057767868042
    3. '[' → logprob: -1.9601057767868042
    4. ' =' → logprob: -2.2101058959960938
    5. '#' → logprob: -2.9601058959960938
    6. '=' → logprob: -3.2101058959960938
    7. ' is' → logprob: -3.9601058959960938
    8. '.' → logprob: -3.9601058959960938
    9. ' can' → logprob: -4.085105895996094
    10. 'for' → logprob: -4.210105895996094

Token 278: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4625457525253296
    2. ' the' → logprob: -1.2125457525253296
    3. ' us' → logprob: -3.087545871734619
    4. 'us' → logprob: -3.837545871734619
    5. 'a' → logprob: -5.962545871734619
    6. ' a' → logprob: -6.837545871734619
    7. 'max' → logprob: -6.962545871734619
    8. 'dp' → logprob: -8.337545394897461
    9. 'maximum' → logprob: -8.837545394897461
    10. '#' → logprob: -8.837545394897461

Token 279: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3588882088661194
    2. 'maximum' → logprob: -1.4838881492614746
    3. 'max' → logprob: -2.9838881492614746
    4. ' length' → logprob: -4.608888149261475
    5. 'long' → logprob: -4.983888149261475
    6. ' maximum' → logprob: -5.733888149261475
    7. ' longest' → logprob: -5.983888149261475
    8. 'dp' → logprob: -7.983888149261475
    9. 'answer' → logprob: -8.858888626098633
    10. 'best' → logprob: -8.858888626098633

Token 280: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.0386906862258911
    2. ')' → logprob: -1.9136906862258911
    3. ' of' → logprob: -2.0386905670166016
    4. '[' → logprob: -2.0386905670166016
    5. '[i' → logprob: -2.5386905670166016
    6. '_' → logprob: -2.7886905670166016
    7. '=' → logprob: -3.4136905670166016
    8. '```' → logprob: -4.538690567016602
    9. ']' → logprob: -4.913690567016602
    10. '[max' → logprob: -5.163690567016602

Token 281: ' longest' (ID: 37511)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2616010010242462
    2. 'the' → logprob: -1.5116009712219238
    3. ' a' → logprob: -5.136600971221924
    4. 'a' → logprob: -6.386600971221924
    5. ' longest' → logprob: -6.511600971221924
    6. ' common' → logprob: -8.886601448059082
    7. ' matching' → logprob: -9.136601448059082
    8. ' ' → logprob: -9.761601448059082
    9. ' that' → logprob: -10.011601448059082
    10. ' current' → logprob: -10.136601448059082

Token 282: ' common' (ID: 5355)
  Prédit: ' common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' common' → logprob: -0.9560337662696838
    2. '_' → logprob: -1.206033706665039
    3. '_common' → logprob: -1.581033706665039
    4. 'common' → logprob: -2.331033706665039
    5. ' ' → logprob: -5.456033706665039
    6. '[' → logprob: -5.581033706665039
    7. ' _' → logprob: -6.831033706665039
    8. '```' → logprob: -7.081033706665039
    9. '_sub' → logprob: -7.331033706665039
    10. '	common' → logprob: -7.831033706665039

Token 283: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.06576376408338547
    2. 'substring' → logprob: -3.3157637119293213
    3. '_sub' → logprob: -3.9407637119293213
    4. 'substr' → logprob: -6.0657639503479
    5. ' sub' → logprob: -6.4407639503479
    6. 'con' → logprob: -6.8157639503479
    7. '```' → logprob: -7.6907639503479
    8. 'common' → logprob: -7.9407639503479
    9. '
' → logprob: -7.9407639503479
    10. ' substring' → logprob: -8.565763473510742

Token 284: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.005393484141677618
    2. '_array' → logprob: -5.8803935050964355
    3. 'sequence' → logprob: -7.1303935050964355
    4. 'arr' → logprob: -7.5053935050964355
    5. ' array' → logprob: -8.005393028259277
    6. '_arr' → logprob: -8.380393028259277
    7. '[' → logprob: -9.130393028259277
    8. '   ' → logprob: -9.630393028259277
    9. 'arry' → logprob: -9.630393028259277
    10. '_' → logprob: -9.880393028259277

Token 285: ' ending' (ID: 22013)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.269676685333252
    2. '[i' → logprob: -1.394676685333252
    3. '_dp' → logprob: -1.769676685333252
    4. '_' → logprob: -2.644676685333252
    5. ' ending' → logprob: -3.269676685333252
    6. ']' → logprob: -3.644676685333252
    7. '
' → logprob: -3.894676685333252
    8. 'dp' → logprob: -4.269676685333252
    9. '_length' → logprob: -4.394676685333252
    10. ')' → logprob: -4.394676685333252

Token 286: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.42139554023742676
    2. '_at' → logprob: -2.1713955402374268
    3. ' at' → logprob: -2.1713955402374268
    4. '[i' → logprob: -2.7963955402374268
    5. '_' → logprob: -3.4213955402374268
    6. '```' → logprob: -4.421395301818848
    7. ' _' → logprob: -6.296395301818848
    8. ' ' → logprob: -6.671395301818848
    9. ',' → logprob: -6.796395301818848
    10. '`' → logprob: -6.921395301818848

Token 287: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3994581699371338
    2. ' i' → logprob: -1.2744581699371338
    3. 'anna' → logprob: -3.774458169937134
    4. '[i' → logprob: -4.399457931518555
    5. ' anna' → logprob: -4.774457931518555
    6. ' [' → logprob: -5.774457931518555
    7. ' (' → logprob: -7.024457931518555
    8. ' ' → logprob: -7.149457931518555
    9. '[' → logprob: -8.524457931518555
    10. '(i' → logprob: -8.649457931518555

Token 288: ',j' (ID: 22712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2597109079360962
    2. '[i' → logprob: -1.6347109079360962
    3. ']' → logprob: -1.7597109079360962
    4. '_' → logprob: -1.8847109079360962
    5. '][' → logprob: -3.1347107887268066
    6. ',' → logprob: -3.5097107887268066
    7. '```' → logprob: -4.134710788726807
    8. '+' → logprob: -4.384710788726807
    9. 'dp' → logprob: -4.384710788726807
    10. '_dp' → logprob: -4.509710788726807

Token 289: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013168703764677048
    2. '
' → logprob: -5.138168811798096
    3. '```' → logprob: -6.388168811798096
    4. '_dp' → logprob: -6.638168811798096
    5. '`
' → logprob: -6.888168811798096
    6. '\n' → logprob: -7.513168811798096
    7. 'n' → logprob: -7.888168811798096
    8. ':
' → logprob: -8.263168334960938
    9. 'import' → logprob: -8.513168334960938
    10. ',
' → logprob: -8.638168334960938

Token 290: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002375415526330471
    2. 'max' → logprob: -6.877375602722168
    3. '
' → logprob: -7.252375602722168
    4. 'n' → logprob: -8.502375602722168
    5. '```' → logprob: -8.502375602722168
    6. '`
' → logprob: -9.252375602722168
    7. '\' → logprob: -10.627375602722168
    8. '\n' → logprob: -11.377375602722168
    9. '`' → logprob: -11.377375602722168
    10. '#' → logprob: -11.627375602722168

Token 291: ' However' (ID: 5551)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00038348292582668364
    2. 'max' → logprob: -9.000383377075195
    3. '```' → logprob: -9.125383377075195
    4. 'n' → logprob: -9.250383377075195
    5. '
' → logprob: -11.125383377075195
    6. 'import' → logprob: -11.625383377075195
    7. '`
' → logprob: -12.500383377075195
    8. 'ans' → logprob: -12.625383377075195
    9. ' dp' → logprob: -12.625383377075195
    10. '#' → logprob: -12.875383377075195

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29399916529655457
    2. '#' → logprob: -1.543999195098877
    3. 'we' → logprob: -5.043999195098877
    4. 'since' → logprob: -5.043999195098877
    5. 'the' → logprob: -5.168999195098877
    6. ' we' → logprob: -5.418999195098877
    7. ' the' → logprob: -5.793999195098877
    8. ' since' → logprob: -6.168999195098877
    9. ' #' → logprob: -6.168999195098877
    10. 'for' → logprob: -6.543999195098877

Token 293: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -1.0916202068328857
    2. 'since' → logprob: -1.5916202068328857
    3. 'we' → logprob: -2.4666202068328857
    4. ' since' → logprob: -2.7166202068328857
    5. 'for' → logprob: -2.8416202068328857
    6. ' we' → logprob: -3.0916202068328857
    7. '#' → logprob: -3.0916202068328857
    8. 'to' → logprob: -3.3416202068328857
    9. ' to' → logprob: -3.3416202068328857
    10. 'dp' → logprob: -3.9666202068328857

Token 294: ''s' (ID: 885)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0752667486667633
    2. 'can' → logprob: -3.5752668380737305
    3. ''s' → logprob: -4.0752668380737305
    4. '[i' → logprob: -4.9502668380737305
    5. ' cannot' → logprob: -5.2002668380737305
    6. ' can't' → logprob: -5.3252668380737305
    7. '_can' → logprob: -5.7002668380737305
    8. ' is' → logprob: -6.2002668380737305
    9. ',' → logprob: -7.3252668380737305
    10. 'cannot' → logprob: -7.4502668380737305

Token 295: ' cards' (ID: 10541)
  Prédit: ' subse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subse' → logprob: -0.0807679072022438
    2. 'sub' → logprob: -3.080767869949341
    3. ''s' → logprob: -4.58076810836792
    4. ' cards' → logprob: -4.83076810836792
    5. '_sub' → logprob: -5.83076810836792
    6. '[i' → logprob: -6.33076810836792
    7. ' sub' → logprob: -6.58076810836792
    8. ' can' → logprob: -6.58076810836792
    9. 'cards' → logprob: -6.83076810836792
    10. ' anna' → logprob: -7.33076810836792

Token 296: ' subse' (ID: 19874)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1295718252658844
    2. 'can' → logprob: -2.5045719146728516
    3. '[i' → logprob: -4.129571914672852
    4. ' are' → logprob: -4.504571914672852
    5. ' is' → logprob: -5.879571914672852
    6. 's' → logprob: -6.629571914672852
    7. ''s' → logprob: -6.629571914672852
    8. '<|end|>' → logprob: -6.879571914672852
    9. ' could' → logprob: -7.129571914672852
    10. '[' → logprob: -7.129571914672852

Token 297: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.006188179831951857
    2. 'sequence' → logprob: -5.38118839263916
    3. 'quences' → logprob: -6.50618839263916
    4. 'q' → logprob: -10.13118839263916
    5. '#' → logprob: -11.25618839263916
    6. '[]' → logprob: -12.00618839263916
    7. 'QUENCE' → logprob: -12.25618839263916
    8. '
' → logprob: -13.13118839263916
    9. '[' → logprob: -13.38118839263916
    10. 'e' → logprob: -14.00618839263916

Token 298: ' isn't' (ID: 12471)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1100938692688942
    2. 's' → logprob: -3.110093832015991
    3. ' is' → logprob: -4.48509407043457
    4. '[i' → logprob: -5.11009407043457
    5. ',' → logprob: -5.36009407043457
    6. ' dp' → logprob: -5.48509407043457
    7. '<|end|>' → logprob: -5.73509407043457
    8. 'can' → logprob: -5.73509407043457
    9. ' matching' → logprob: -5.98509407043457
    10. ''s' → logprob: -6.36009407043457

Token 299: ' necessarily' (ID: 23517)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.8504359126091003
    2. 'necessarily' → logprob: -1.6004359722137451
    3. ' limited' → logprob: -1.8504359722137451
    4. ' necessarily' → logprob: -2.600435972213745
    5. ' constrained' → logprob: -2.975435972213745
    6. ' restricted' → logprob: -3.350435972213745
    7. ' guaranteed' → logprob: -4.850435733795166
    8. ' a' → logprob: -4.850435733795166
    9. 'restricted' → logprob: -4.975435733795166
    10. 'limited' → logprob: -4.975435733795166

Token 300: ' contiguous' (ID: 130997)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.2541353404521942
    2. ' contiguous' → logprob: -1.5041353702545166
    3. 'adj' → logprob: -7.2541351318359375
    4. 'con' → logprob: -7.2541351318359375
    5. 'continuous' → logprob: -7.8791351318359375
    6. ' cont' → logprob: -8.379135131835938
    7. ' consecutive' → logprob: -10.629135131835938
    8. 'br' → logprob: -11.129135131835938
    9. 'a' → logprob: -11.129135131835938
    10. '_cont' → logprob: -11.254135131835938

Token 301: ' but' (ID: 889)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8993388414382935
    2. '\n' → logprob: -1.8993388414382935
    3. '```' → logprob: -2.649338722229004
    4. '[' → logprob: -2.774338722229004
    5. 'for' → logprob: -3.024338722229004
    6. 'dp' → logprob: -3.024338722229004
    7. '[i' → logprob: -3.149338722229004
    8. ' for' → logprob: -3.399338722229004
    9. '[
' → logprob: -4.149338722229004
    10. ',' → logprob: -4.274338722229004

Token 302: ' the' (ID: 290)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.557357132434845
    2. ' the' → logprob: -1.6823570728302002
    3. 'we' → logprob: -3.0573570728302
    4. ' contiguous' → logprob: -3.0573570728302
    5. ' dp' → logprob: -3.6823570728302
    6. ' since' → logprob: -3.8073570728302
    7. 'the' → logprob: -4.057357311248779
    8. ' still' → logprob: -4.682357311248779
    9. ' for' → logprob: -4.682357311248779
    10. ' ' → logprob: -4.932357311248779

Token 303: ' DP' (ID: 51992)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.162152647972107
    2. ' previous' → logprob: -1.787152647972107
    3. ' same' → logprob: -1.912152647972107
    4. 'dp' → logprob: -2.2871527671813965
    5. '[' → logprob: -3.1621527671813965
    6. 'same' → logprob: -3.2871527671813965
    7. ' next' → logprob: -3.5371527671813965
    8. 'previous' → logprob: -3.7871527671813965
    9. ' ' → logprob: -4.4121527671813965
    10. 'br' → logprob: -4.6621527671813965

Token 304: ' above' (ID: 5151)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2539348602294922
    2. '[' → logprob: -1.6289348602294922
    3. '_' → logprob: -4.878934860229492
    4. '[
' → logprob: -5.503934860229492
    5. ' ' → logprob: -5.503934860229492
    6. ']' → logprob: -6.628934860229492
    7. '=' → logprob: -6.753934860229492
    8. '
' → logprob: -7.253934860229492
    9. ' =' → logprob: -7.503934860229492
    10. '   ' → logprob: -7.503934860229492

Token 305: ' finds' (ID: 22016)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' longest' (ID: 37511)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2781670093536377
    2. ' the' → logprob: -1.7781670093536377
    3. ' only' → logprob: -2.0281670093536377
    4. ' contiguous' → logprob: -2.4031670093536377
    5. 'sub' → logprob: -2.5281670093536377
    6. 'only' → logprob: -3.2781670093536377
    7. ' longest' → logprob: -3.2781670093536377
    8. '```' → logprob: -3.7781670093536377
    9. 'common' → logprob: -3.9031670093536377
    10. ' common' → logprob: -4.153166770935059

Token 307: ' common' (ID: 5355)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.4570585489273071
    2. '_common' → logprob: -1.4570585489273071
    3. ' common' → logprob: -2.2070584297180176
    4. 'common' → logprob: -2.2070584297180176
    5. '[i' → logprob: -2.8320584297180176
    6. 'sub' → logprob: -3.2070584297180176
    7. '```' → logprob: -3.2070584297180176
    8. '<|end|>' → logprob: -3.3320584297180176
    9. '_' → logprob: -3.7070584297180176
    10. ' ' → logprob: -4.082058429718018

Token 308: ' contiguous' (ID: 130997)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.3319542109966278
    2. 'sub' → logprob: -1.9569542407989502
    3. 'substring' → logprob: -3.33195424079895
    4. '_' → logprob: -3.83195424079895
    5. 'array' → logprob: -3.83195424079895
    6. '```' → logprob: -3.95695424079895
    7. ' sub' → logprob: -4.456954002380371
    8. '_token' → logprob: -4.956954002380371
    9. ' array' → logprob: -5.956954002380371
    10. '_array' → logprob: -6.081954002380371

Token 309: ' suffix' (ID: 43412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7786380052566528
    2. '_sub' → logprob: -1.0286380052566528
    3. '[i' → logprob: -2.7786378860473633
    4. ' sub' → logprob: -4.153637886047363
    5. '[' → logprob: -4.153637886047363
    6. ' array' → logprob: -4.278637886047363
    7. 'sub' → logprob: -5.028637886047363
    8. '<|end|>' → logprob: -5.028637886047363
    9. ' sequence' → logprob: -5.153637886047363
    10. '_sequence' → logprob: -5.153637886047363

Token 310: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5859726667404175
    2. '
' → logprob: -2.085972785949707
    3. '```' → logprob: -2.210972785949707
    4. '#' → logprob: -2.335972785949707
    5. ']' → logprob: -2.585972785949707
    6. 'dp' → logprob: -2.835972785949707
    7. ')' → logprob: -2.960972785949707
    8. '[' → logprob: -3.085972785949707
    9. ' ' → logprob: -3.710972785949707
    10. ' for' → logprob: -3.710972785949707

Token 311: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7977092266082764
    2. '
' → logprob: -1.4227092266082764
    3. '#' → logprob: -3.0477092266082764
    4. '[i' → logprob: -3.4227092266082764
    5. '_dp' → logprob: -3.5477092266082764
    6. '```' → logprob: -3.5477092266082764
    7. 'for' → logprob: -3.6727092266082764
    8. ']' → logprob: -3.6727092266082764
    9. '[' → logprob: -4.0477094650268555
    10. '[
' → logprob: -4.2977094650268555

Token 312: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10681380331516266
    2. '#' → logprob: -2.356813907623291
    3. 'for' → logprob: -6.231813907623291
    4. '```' → logprob: -6.981813907623291
    5. '
' → logprob: -7.106813907623291
    6. 'from' → logprob: -7.356813907623291
    7. 'max' → logprob: -8.106813430786133
    8. 'n' → logprob: -8.356813430786133
    9. 'We' → logprob: -8.356813430786133
    10. 'Since' → logprob: -8.856813430786133

Token 313: ' Anna' (ID: 34101)
  Prédit: 'since'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'since' → logprob: -1.0573816299438477
    2. 'the' → logprob: -1.6823816299438477
    3. 'we' → logprob: -1.9323816299438477
    4. ' since' → logprob: -2.8073816299438477
    5. 'anna' → logprob: -3.0573816299438477
    6. 'for' → logprob: -3.4323816299438477
    7. 'if' → logprob: -3.6823816299438477
    8. 'actually' → logprob: -3.6823816299438477
    9. ' we' → logprob: -3.8073816299438477
    10. 'Anna' → logprob: -3.9323816299438477

Token 314: ' can' (ID: 665)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3559441864490509
    2. ''s' → logprob: -1.9809441566467285
    3. '[' → logprob: -2.2309441566467285
    4. ' can' → logprob: -3.6059441566467285
    5. ''' → logprob: -5.4809441566467285
    6. 's' → logprob: -5.8559441566467285
    7. ' is' → logprob: -6.1059441566467285
    8. '[j' → logprob: -6.3559441566467285
    9. 'can' → logprob: -6.4809441566467285
    10. ',' → logprob: -6.6059441566467285

Token 315: ' discard' (ID: 79636)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.19722174108028412
    2. ' skip' → logprob: -2.4472217559814453
    3. 'remove' → logprob: -3.1972217559814453
    4. 'choose' → logprob: -4.822221755981445
    5. 'match' → logprob: -5.197221755981445
    6. 'only' → logprob: -5.322221755981445
    7. 'pick' → logprob: -5.322221755981445
    8. 'keep' → logprob: -5.447221755981445
    9. ' only' → logprob: -5.572221755981445
    10. ' pick' → logprob: -5.822221755981445

Token 316: ' cards' (ID: 10541)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.1749448776245117
    2. ' the' → logprob: -2.1749448776245117
    3. 'the' → logprob: -2.4249448776245117
    4. ' previous' → logprob: -2.4249448776245117
    5. ' tokens' → logprob: -2.4249448776245117
    6. ' cards' → logprob: -2.6749448776245117
    7. 'tokens' → logprob: -2.9249448776245117
    8. 'any' → logprob: -3.2999448776245117
    9. 'anna' → logprob: -3.2999448776245117
    10. ' anna' → logprob: -3.4249448776245117

Token 317: ' arbitr' (ID: 31157)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6135365962982178
    2. '
' → logprob: -2.1135365962982178
    3. '_' → logprob: -2.6135365962982178
    4. '[i' → logprob: -2.7385365962982178
    5. '[
' → logprob: -2.9885365962982178
    6. ' ' → logprob: -3.7385365962982178
    7. '=' → logprob: -4.113536834716797
    8. 's' → logprob: -4.238536834716797
    9. '\n' → logprob: -4.488536834716797
    10. '```' → logprob: -4.488536834716797

Token 318: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.054858364164829254
    2. 'ary' → logprob: -3.554858446121216
    3. 'itr' → logprob: -4.679858207702637
    4. 'it' → logprob: -5.804858207702637
    5. 'arly' → logprob: -5.804858207702637
    6. '```' → logprob: -5.804858207702637
    7. 'itar' → logprob: -6.804858207702637
    8. '#' → logprob: -7.179858207702637
    9. '[' → logprob: -7.804858207702637
    10. '...' → logprob: -7.929858207702637

Token 319: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1237952709197998
    2. 'for' → logprob: -1.7487952709197998
    3. '#' → logprob: -2.1237952709198
    4. '=' → logprob: -2.1237952709198
    5. '[' → logprob: -3.3737952709198
    6. ')' → logprob: -3.4987952709198
    7. ',' → logprob: -3.6237952709198
    8. '
' → logprob: -3.7487952709198
    9. ']' → logprob: -3.8737952709198
    10. '```' → logprob: -4.248795509338379

Token 320: ' make' (ID: 1520)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.49516284465789795
    2. 'skip' → logprob: -1.120162844657898
    3. ' match' → logprob: -3.8701629638671875
    4. 'ach' → logprob: -4.1201629638671875
    5. 'get' → logprob: -5.3701629638671875
    6. 'continue' → logprob: -5.8701629638671875
    7. 'br' → logprob: -5.8701629638671875
    8. 'make' → logprob: -6.3701629638671875
    9. 'keep' → logprob: -6.4951629638671875
    10. ' skip' → logprob: -6.4951629638671875

Token 321: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0488563776016235
    2. 'the' → logprob: -1.2988563776016235
    3. ' dp' → logprob: -1.4238563776016235
    4. ' the' → logprob: -3.173856258392334
    5. 'br' → logprob: -3.423856258392334
    6. 'anna' → logprob: -3.548856258392334
    7. 'a' → logprob: -4.173856258392334
    8. '```' → logprob: -5.423856258392334
    9. ' a' → logprob: -5.548856258392334
    10. ' anna' → logprob: -6.423856258392334

Token 322: ' resulting' (ID: 20547)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.256496548652649
    2. 'dp' → logprob: -1.631496548652649
    3. 'same' → logprob: -2.0064964294433594
    4. 'matching' → logprob: -2.2564964294433594
    5. 'next' → logprob: -2.3814964294433594
    6. 'sequence' → logprob: -3.1314964294433594
    7. 'current' → logprob: -3.2564964294433594
    8. 'match' → logprob: -3.2564964294433594
    9. 'common' → logprob: -3.6314964294433594
    10. 'length' → logprob: -5.006496429443359

Token 323: ' subse' (ID: 19874)
  Prédit: ' subse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subse' → logprob: -0.2919144034385681
    2. 'sub' → logprob: -1.916914463043213
    3. ' sequence' → logprob: -3.166914463043213
    4. ' sub' → logprob: -3.291914463043213
    5. 'sequence' → logprob: -4.041914463043213
    6. ' match' → logprob: -6.041914463043213
    7. ' matching' → logprob: -6.666914463043213
    8. 'match' → logprob: -6.791914463043213
    9. ' ' → logprob: -7.291914463043213
    10. ' dp' → logprob: -7.416914463043213

Token 324: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0001398929744027555
    2. 'quences' → logprob: -9.375140190124512
    3. 'q' → logprob: -10.625140190124512
    4. 'sequence' → logprob: -10.875140190124512
    5. 'QUENCE' → logprob: -12.625140190124512
    6. '```' → logprob: -12.625140190124512
    7. 'qu' → logprob: -12.875140190124512
    8. ' sequence' → logprob: -14.625140190124512
    9. '#' → logprob: -14.625140190124512
    10. '`' → logprob: -15.125140190124512

Token 325: ' contiguous' (ID: 130997)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5301749110221863
    2. '```' → logprob: -2.530174970626831
    3. ',' → logprob: -2.655174970626831
    4. '[' → logprob: -2.780174970626831
    5. '[
' → logprob: -3.405174970626831
    6. '
' → logprob: -3.905174970626831
    7. 's' → logprob: -4.030174732208252
    8. ':' → logprob: -4.155174732208252
    9. '\n' → logprob: -4.280174732208252
    10. 'dp' → logprob: -4.530174732208252

Token 326: '.

' (ID: 364)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45570769906044006
    2. '[' → logprob: -1.9557076692581177
    3. '[
' → logprob: -3.2057077884674072
    4. ',' → logprob: -3.3307077884674072
    5. ':' → logprob: -3.7057077884674072
    6. '```' → logprob: -3.9557077884674072
    7. '.' → logprob: -4.080707550048828
    8. '_' → logprob: -4.205707550048828
    9. '_dp' → logprob: -4.580707550048828
    10. 'dp' → logprob: -4.830707550048828

Token 327: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22028832137584686
    2. '
' → logprob: -3.0952882766723633
    3. '[i' → logprob: -3.8452882766723633
    4. 'for' → logprob: -3.8452882766723633
    5. '_dp' → logprob: -4.470288276672363
    6. '```' → logprob: -4.470288276672363
    7. '[
' → logprob: -4.595288276672363
    8. ',
' → logprob: -4.595288276672363
    9. '`
' → logprob: -4.720288276672363
    10. '#' → logprob: -4.845288276672363

Token 328: ' Wait' (ID: 24305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012469036504626274
    2. 'for' → logprob: -4.7624688148498535
    3. 'n' → logprob: -6.1374688148498535
    4. '#' → logprob: -8.137469291687012
    5. ' for' → logprob: -8.262469291687012
    6. '
' → logprob: -8.387469291687012
    7. '```' → logprob: -8.512469291687012
    8. 'import' → logprob: -8.637469291687012
    9. 'd' → logprob: -9.137469291687012
    10. 'from' → logprob: -9.262469291687012

Token 329: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3832993805408478
    2. '[' → logprob: -2.1332993507385254
    3. '_' → logprob: -2.6332993507385254
    4. '[i' → logprob: -3.0082993507385254
    5. '[
' → logprob: -4.008299350738525
    6. ',
' → logprob: -4.258299350738525
    7. '#' → logprob: -4.383299350738525
    8. ':' → logprob: -4.758299350738525
    9. 'for' → logprob: -5.383299350738525
    10. '.' → logprob: -6.008299350738525

Token 330: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8125789165496826
    2. 'n' → logprob: -1.9375789165496826
    3. 'dp' → logprob: -2.0625789165496826
    4. '
' → logprob: -2.5625789165496826
    5. ' 
' → logprob: -3.6875789165496826
    6. ' for' → logprob: -3.6875789165496826
    7. '```' → logprob: -3.6875789165496826
    8. ' dp' → logprob: -3.9375789165496826
    9. '[' → logprob: -4.062579154968262
    10. '[
' → logprob: -4.437579154968262

Token 331: ' question' (ID: 4928)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4885748624801636
    2. '#' → logprob: -2.113574981689453
    3. ' dp' → logprob: -2.113574981689453
    4. ' problem' → logprob: -2.613574981689453
    5. ' longest' → logprob: -2.613574981689453
    6. ' best' → logprob: -2.738574981689453
    7. ' next' → logprob: -2.738574981689453
    8. ' following' → logprob: -3.238574981689453
    9. 'best' → logprob: -3.738574981689453
    10. ' code' → logprob: -3.738574981689453

Token 332: ' states' (ID: 9407)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7066816687583923
    2. '[i' → logprob: -1.081681728363037
    3. '_' → logprob: -2.581681728363037
    4. ',' → logprob: -4.331681728363037
    5. '[
' → logprob: -4.331681728363037
    6. '#' → logprob: -4.831681728363037
    7. 's' → logprob: -4.956681728363037
    8. '=' → logprob: -5.081681728363037
    9. ':' → logprob: -5.331681728363037
    10. '```' → logprob: -5.456681728363037

Token 333: ' Anna' (ID: 34101)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6082948446273804
    2. ',' → logprob: -1.7332948446273804
    3. '#' → logprob: -2.60829496383667
    4. '=' → logprob: -3.23329496383667
    5. '```' → logprob: -3.60829496383667
    6. ' for' → logprob: -4.48329496383667
    7. 'dp' → logprob: -4.60829496383667
    8. ' is' → logprob: -4.60829496383667
    9. '[' → logprob: -4.73329496383667
    10. 'the' → logprob: -4.73329496383667

Token 334: ' can' (ID: 665)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5432619452476501
    2. '[' → logprob: -1.293262004852295
    3. ''s' → logprob: -2.918262004852295
    4. ''' → logprob: -4.168262004852295
    5. ' can' → logprob: -4.168262004852295
    6. '_' → logprob: -4.293262004852295
    7. 's' → logprob: -4.418262004852295
    8. '#' → logprob: -4.918262004852295
    9. '```' → logprob: -5.543262004852295
    10. 'can' → logprob: -5.668262004852295

Token 335: ' discard' (ID: 79636)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.8675265312194824
    2. 'discard' → logprob: -0.8675265312194824
    3. 'skip' → logprob: -3.1175265312194824
    4. ' discard' → logprob: -3.2425265312194824
    5. ' remove' → logprob: -3.7425265312194824
    6. 'choose' → logprob: -4.117526531219482
    7. 'pick' → logprob: -4.992526531219482
    8. 'delete' → logprob: -5.117526531219482
    9. 'keep' → logprob: -5.367526531219482
    10. ' skip' → logprob: -5.492526531219482

Token 336: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4692300260066986
    2. 'cards' → logprob: -1.844230055809021
    3. ' any' → logprob: -2.0942299365997314
    4. ' cards' → logprob: -3.4692299365997314
    5. 'ar' → logprob: -3.7192299365997314
    6. 'tokens' → logprob: -4.4692301750183105
    7. 'the' → logprob: -5.2192301750183105
    8. ' tokens' → logprob: -5.5942301750183105
    9. ' arbitrary' → logprob: -5.8442301750183105
    10. 'some' → logprob: -6.0942301750183105

Token 337: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.8468851447105408
    2. ' token' → logprob: -1.2218852043151855
    3. ' tokens' → logprob: -2.5968852043151855
    4. ' card' → logprob: -2.8468852043151855
    5. 'token' → logprob: -3.0968852043151855
    6. 'cards' → logprob: -4.0968852043151855
    7. ' ' → logprob: -4.3468852043151855
    8. '_' → logprob: -4.4718852043151855
    9. ' more' → logprob: -4.7218852043151855
    10. ' element' → logprob: -4.8468852043151855

Token 338: ' she' (ID: 1770)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27175644040107727
    2. '.' → logprob: -2.771756410598755
    3. '#' → logprob: -3.021756410598755
    4. '[i' → logprob: -3.021756410598755
    5. '=' → logprob: -4.021756649017334
    6. 'from' → logprob: -4.396756649017334
    7. '[' → logprob: -4.771756649017334
    8. '```' → logprob: -5.146756649017334
    9. '_' → logprob: -5.396756649017334
    10. ',
' → logprob: -5.896756649017334

Token 339: ' likes' (ID: 18861)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.820445716381073
    2. ' wants' → logprob: -1.5704457759857178
    3. 'can' → logprob: -1.6954457759857178
    4. ' can' → logprob: -2.0704457759857178
    5. ' ' → logprob: -4.070445537567139
    6. ' chooses' → logprob: -4.695445537567139
    7. '#' → logprob: -5.320445537567139
    8. ' ' → logprob: -6.570445537567139
    9. '_w' → logprob: -6.820445537567139
    10. ' w' → logprob: -6.820445537567139

Token 340: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27591997385025024
    2. '.' → logprob: -2.1509199142456055
    3. ',
' → logprob: -3.6509199142456055
    4. '#' → logprob: -4.0259199142456055
    5. '[i' → logprob: -4.0259199142456055
    6. '[' → logprob: -4.0259199142456055
    7. '=' → logprob: -5.0259199142456055
    8. '
' → logprob: -5.0259199142456055
    9. 'for' → logprob: -5.2759199142456055
    10. ':' → logprob: -5.7759199142456055

Token 341: ' anywhere' (ID: 15907)
  Prédit: ' anywhere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' anywhere' → logprob: -0.3990950584411621
    2. 'any' → logprob: -1.149095058441162
    3. ' any' → logprob: -5.649095058441162
    4. 'either' → logprob: -6.024095058441162
    5. 'her' → logprob: -6.399095058441162
    6. 'both' → logprob: -6.399095058441162
    7. 'the' → logprob: -6.774095058441162
    8. 'br' → logprob: -7.899095058441162
    9. ' either' → logprob: -8.02409553527832
    10. ' her' → logprob: -8.14909553527832

Token 342: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3134315609931946
    2. '.' → logprob: -2.18843150138855
    3. 'dp' → logprob: -3.18843150138855
    4. '#' → logprob: -3.31343150138855
    5. '[i' → logprob: -3.93843150138855
    6. '
' → logprob: -4.188431739807129
    7. ',
' → logprob: -4.438431739807129
    8. 'for' → logprob: -5.563431739807129
    9. '[' → logprob: -5.688431739807129
    10. '```' → logprob: -5.688431739807129

Token 343: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.12523512542247772
    2. ' make' → logprob: -2.500235080718994
    3. 'match' → logprob: -4.625235080718994
    4. 'ach' → logprob: -5.875235080718994
    5. ' match' → logprob: -5.875235080718994
    6. ' form' → logprob: -6.000235080718994
    7. 'form' → logprob: -6.250235080718994
    8. ' get' → logprob: -6.375235080718994
    9. ' achieve' → logprob: -6.500235080718994
    10. ' create' → logprob: -6.500235080718994

Token 344: ' her' (ID: 1335)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4011083245277405
    2. 'her' → logprob: -2.0261082649230957
    3. 'anna' → logprob: -2.6511082649230957
    4. 'a' → logprob: -2.6511082649230957
    5. ' the' → logprob: -4.026108264923096
    6. 'br' → logprob: -4.651108264923096
    7. ' her' → logprob: -4.901108264923096
    8. ' a' → logprob: -4.901108264923096
    9. 'it' → logprob: -6.026108264923096
    10. 'sure' → logprob: -6.151108264923096

Token 345: ' new' (ID: 620)
  Prédit: ' subse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subse' → logprob: -0.47966164350509644
    2. 'sub' → logprob: -1.1046617031097412
    3. ' sequence' → logprob: -4.104661464691162
    4. 'sequence' → logprob: -4.104661464691162
    5. 'chosen' → logprob: -5.979661464691162
    6. ' next' → logprob: -6.354661464691162
    7. 'cards' → logprob: -6.479661464691162
    8. ' chosen' → logprob: -6.604661464691162
    9. 'anna' → logprob: -6.729661464691162
    10. ' cards' → logprob: -6.979661464691162

Token 346: ' pile' (ID: 39732)
  Prédit: ' subse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subse' → logprob: -0.6454789042472839
    2. 'sub' → logprob: -1.1454789638519287
    3. 'sequence' → logprob: -2.2704789638519287
    4. ' sequence' → logprob: -3.5204789638519287
    5. 'cards' → logprob: -4.39547872543335
    6. ' cards' → logprob: -5.77047872543335
    7. '```' → logprob: -6.64547872543335
    8. 'array' → logprob: -6.89547872543335
    9. 'chosen' → logprob: -6.89547872543335
    10. ' sub' → logprob: -7.14547872543335

Token 347: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3829642534255981
    2. '[i' → logprob: -1.5079642534255981
    3. '.' → logprob: -2.0079641342163086
    4. '```' → logprob: -2.2579641342163086
    5. 'from' → logprob: -3.2579641342163086
    6. '#' → logprob: -3.6329641342163086
    7. '[' → logprob: -3.8829641342163086
    8. '_' → logprob: -3.8829641342163086
    9. ' of' → logprob: -4.132964134216309
    10. '[]' → logprob: -4.257964134216309

Token 348: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49445340037345886
    2. '
' → logprob: -1.4944534301757812
    3. '#' → logprob: -3.1194534301757812
    4. 'for' → logprob: -3.3694534301757812
    5. '\n' → logprob: -4.119453430175781
    6. '```' → logprob: -4.744453430175781
    7. '[i' → logprob: -4.869453430175781
    8. '[' → logprob: -5.119453430175781
    9. '_dp' → logprob: -5.369453430175781
    10. ',' → logprob: -5.369453430175781

Token 349: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9311830401420593
    2. 'dp' → logprob: -1.556183099746704
    3. 'we' → logprob: -1.806183099746704
    4. 'anna' → logprob: -2.556183099746704
    5. 'br' → logprob: -2.806183099746704
    6. 'for' → logprob: -3.056183099746704
    7. ' dp' → logprob: -5.056182861328125
    8. 'Anna' → logprob: -5.556182861328125
    9. '```' → logprob: -5.556182861328125
    10. ' we' → logprob: -5.681182861328125

Token 350: ' resulting' (ID: 20547)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8901521563529968
    2. 'long' → logprob: -2.0151522159576416
    3. 'br' → logprob: -2.2651522159576416
    4. 'best' → logprob: -3.0151522159576416
    5. ' longest' → logprob: -3.3901522159576416
    6. 'result' → logprob: -3.5151522159576416
    7. 'problem' → logprob: -3.6401522159576416
    8. 'max' → logprob: -3.6401522159576416
    9. 'next' → logprob: -3.7651522159576416
    10. 'sub' → logprob: -3.8901522159576416

Token 351: ' pile' (ID: 39732)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9710187911987305
    2. 'dp' → logprob: -1.5960187911987305
    3. '_dp' → logprob: -2.0960187911987305
    4. ' dp' → logprob: -2.4710187911987305
    5. '_sub' → logprob: -3.0960187911987305
    6. '[' → logprob: -3.2210187911987305
    7. 'sub' → logprob: -4.3460187911987305
    8. 'sequence' → logprob: -4.3460187911987305
    9. ' sequence' → logprob: -4.3460187911987305
    10. ' anna' → logprob: -4.5960187911987305

Token 352: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4472369849681854
    2. 'is' → logprob: -2.197237014770508
    3. ' can' → logprob: -2.572237014770508
    4. 'can' → logprob: -2.822237014770508
    5. 'must' → logprob: -2.947237014770508
    6. ' must' → logprob: -3.822237014770508
    7. ' of' → logprob: -4.822237014770508
    8. '#' → logprob: -5.197237014770508
    9. '```' → logprob: -5.572237014770508
    10. ''s' → logprob: -5.697237014770508

Token 353: ' Anna' (ID: 34101)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.7203645706176758
    2. 'anna' → logprob: -0.9703645706176758
    3. 'Br' → logprob: -3.095364570617676
    4. ' br' → logprob: -4.095364570617676
    5. 'the' → logprob: -4.095364570617676
    6. 'B' → logprob: -4.720364570617676
    7. 'Anna' → logprob: -5.095364570617676
    8. 'this' → logprob: -5.220364570617676
    9. 'a' → logprob: -5.220364570617676
    10. ' anna' → logprob: -5.470364570617676

Token 354: ''s' (ID: 885)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.24637454748153687
    2. ' can' → logprob: -2.2463746070861816
    3. 'can' → logprob: -3.3713746070861816
    4. ' is' → logprob: -3.8713746070861816
    5. '#' → logprob: -4.496374607086182
    6. '_' → logprob: -4.746374607086182
    7. '_can' → logprob: -5.121374607086182
    8. ''s' → logprob: -5.371374607086182
    9. '```' → logprob: -5.621374607086182
    10. '[j' → logprob: -5.621374607086182

Token 355: ' case' (ID: 1890)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.37076789140701294
    2. 'hand' → logprob: -1.6207678318023682
    3. ' hand' → logprob: -3.245767831802368
    4. 'sub' → logprob: -4.245768070220947
    5. ' cards' → logprob: -4.370768070220947
    6. 'pile' → logprob: -4.370768070220947
    7. 'sequence' → logprob: -4.870768070220947
    8. 'code' → logprob: -5.495768070220947
    9. ' pile' → logprob: -5.495768070220947
    10. 'list' → logprob: -5.495768070220947

Token 356: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.121617317199707
    2. ' is' → logprob: -1.246617317199707
    3. 'can' → logprob: -1.621617317199707
    4. 'is' → logprob: -2.746617317199707
    5. 'must' → logprob: -2.871617317199707
    6. ' must' → logprob: -3.371617317199707
    7. '```' → logprob: -4.996617317199707
    8. '#' → logprob: -5.246617317199707
    9. 'should' → logprob: -5.621617317199707
    10. ' should' → logprob: -6.121617317199707

Token 357: ' also' (ID: 1217)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6368853449821472
    2. ' be' → logprob: -0.7618853449821472
    3. 'not' → logprob: -7.136885166168213
    4. 'also' → logprob: -7.136885166168213
    5. ' also' → logprob: -7.636885166168213
    6. ' not' → logprob: -7.761885166168213
    7. 'match' → logprob: -8.261885643005371
    8. '```' → logprob: -8.511885643005371
    9. ' match' → logprob: -8.761885643005371
    10. ' still' → logprob: -8.761885643005371

Token 358: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6327977776527405
    2. ' be' → logprob: -0.7577977776527405
    3. 'match' → logprob: -10.382798194885254
    4. '```' → logprob: -10.382798194885254
    5. 'appear' → logprob: -10.507798194885254
    6. '	be' → logprob: -11.007798194885254
    7. 'cont' → logprob: -11.132798194885254
    8. 'have' → logprob: -11.382798194885254
    9. 'not' → logprob: -11.757798194885254
    10. ' match' → logprob: -11.757798194885254

Token 359: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.8347911238670349
    2. 'cont' → logprob: -0.9597911238670349
    3. 'a' → logprob: -2.2097911834716797
    4. ' a' → logprob: -2.7097911834716797
    5. 'sub' → logprob: -6.20979118347168
    6. ' subse' → logprob: -6.58479118347168
    7. 'continuous' → logprob: -6.83479118347168
    8. ' cont' → logprob: -7.20979118347168
    9. 'strict' → logprob: -8.58479118347168
    10. 'any' → logprob: -8.95979118347168

Token 360: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4643811583518982
    2. ':
' → logprob: -2.339381217956543
    3. '[i' → logprob: -2.464381217956543
    4. ',' → logprob: -2.839381217956543
    5. '[' → logprob: -3.339381217956543
    6. '.' → logprob: -3.589381217956543
    7. '#' → logprob: -3.839381217956543
    8. ']' → logprob: -4.964381217956543
    9. '```' → logprob: -4.964381217956543
    10. '=' → logprob: -5.339381217956543

Token 361: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2208855152130127
    2. 'not' → logprob: -1.3458855152130127
    3. 'sub' → logprob: -1.5958855152130127
    4. ' subse' → logprob: -1.9708855152130127
    5. 'can' → logprob: -3.2208855152130127
    6. ' can' → logprob: -4.095885276794434
    7. ' at' → logprob: -4.470885276794434
    8. 'any' → logprob: -5.220885276794434
    9. ' no' → logprob: -5.595885276794434
    10. 'no' → logprob: -5.720885276794434

Token 362: ' subse' (ID: 19874)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2167671918869019
    2. ' subse' → logprob: -2.8417673110961914
    3. ' contiguous' → logprob: -3.0917673110961914
    4. '[]' → logprob: -3.3417673110961914
    5. ' sequence' → logprob: -3.3417673110961914
    6. 'sequence' → logprob: -3.4667673110961914
    7. 'subset' → logprob: -3.4667673110961914
    8. ' subset' → logprob: -3.4667673110961914
    9. '_' → logprob: -3.5917673110961914
    10. 'sub' → logprob: -3.7167673110961914

Token 363: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0006205809186212718
    2. 'q' → logprob: -8.25062084197998
    3. 'quences' → logprob: -8.75062084197998
    4. 'sequence' → logprob: -9.25062084197998
    5. 'quent' → logprob: -10.50062084197998
    6. 'QUENCE' → logprob: -10.75062084197998
    7. '[]' → logprob: -11.12562084197998
    8. 'qu' → logprob: -11.50062084197998
    9. '```' → logprob: -11.87562084197998
    10. '[' → logprob: -11.87562084197998

Token 364: '?
' (ID: 3901)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3884837627410889
    2. '[' → logprob: -1.7634837627410889
    3. '=' → logprob: -2.138483762741089
    4. '[i' → logprob: -2.138483762741089
    5. '_' → logprob: -2.513483762741089
    6. ':' → logprob: -2.513483762741089
    7. ',' → logprob: -3.638483762741089
    8. '[
' → logprob: -3.763483762741089
    9. '```' → logprob: -3.888483762741089
    10. '+' → logprob: -4.513484001159668

Token 365: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9861426949501038
    2. ':' → logprob: -1.611142635345459
    3. '[' → logprob: -2.111142635345459
    4. ',' → logprob: -2.611142635345459
    5. '.' → logprob: -2.861142635345459
    6. '[i' → logprob: -3.611142635345459
    7. '[
' → logprob: -4.111142635345459
    8. ']' → logprob: -4.236142635345459
    9. '[]' → logprob: -4.236142635345459
    10. '=' → logprob: -4.486142635345459

Token 366: ' Re' (ID: 907)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0541621446609497
    2. 'If' → logprob: -1.6791621446609497
    3. 'Since' → logprob: -1.8041621446609497
    4. 'The' → logprob: -2.17916202545166
    5. '```' → logprob: -2.67916202545166
    6. 'It' → logprob: -4.42916202545166
    7. 'Given' → logprob: -4.55416202545166
    8. 'Yes' → logprob: -4.92916202545166
    9. 'Considering' → logprob: -4.92916202545166
    10. 'That' → logprob: -5.05416202545166

Token 367: '-reading' (ID: 197714)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.0142496824264526
    2. 'm' → logprob: -1.2642496824264526
    3. 'quired' → logprob: -1.8892496824264526
    4. 's' → logprob: -2.639249801635742
    5. 'quires' → logprob: -3.139249801635742
    6. 'main' → logprob: -3.764249801635742
    7. 'f' → logprob: -4.264249801635742
    8. '#' → logprob: -4.514249801635742
    9. 'mainder' → logprob: -5.264249801635742
    10. 'ason' → logprob: -5.389249801635742

Token 368: ':' (ID: 25)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.114869475364685
    2. '_' → logprob: -1.489869475364685
    3. '[' → logprob: -1.864869475364685
    4. ':' → logprob: -2.7398695945739746
    5. '```' → logprob: -2.7398695945739746
    6. ',' → logprob: -2.8648695945739746
    7. '#' → logprob: -3.6148695945739746
    8. '=' → logprob: -4.364869594573975
    9. 'for' → logprob: -5.239869594573975
    10. 'if' → logprob: -5.239869594573975

Token 369: ' "' (ID: 392)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.019730713218450546
    2. 'The' → logprob: -5.769730567932129
    3. 'Since' → logprob: -5.769730567932129
    4. 'anna' → logprob: -6.019730567932129
    5. ' #' → logprob: -6.644730567932129
    6. ':' → logprob: -6.894730567932129
    7. '
' → logprob: -7.019730567932129
    8. ' 
' → logprob: -7.144730567932129
    9. '```' → logprob: -7.144730567932129
    10. ' ' → logprob: -7.644730567932129

Token 370: 'アン' (ID: 151852)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.0462429523468018
    2. 'Since' → logprob: -1.9212429523468018
    3. 'Anna' → logprob: -2.0462429523468018
    4. '"' → logprob: -2.4212429523468018
    5. 'So' → logprob: -2.7962429523468018
    6. ' The' → logprob: -3.5462429523468018
    7. ' Anna' → logprob: -3.7962429523468018
    8. 'It' → logprob: -3.9212429523468018
    9. 'Yes' → logprob: -3.9212429523468018
    10. ' Since' → logprob: -4.171242713928223

Token 371: 'ナ' (ID: 27354)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04231792688369751
    2. 'a' → logprob: -4.417317867279053
    3. 'na' → logprob: -4.542317867279053
    4. 'ナ' → logprob: -5.542317867279053
    5. 'な' → logprob: -6.042317867279053
    6. 'の' → logprob: -6.167317867279053
    7. 'ス' → logprob: -6.917317867279053
    8. '=' → logprob: -7.042317867279053
    9. 'ン' → logprob: -7.167317867279053
    10. 'サ' → logprob: -7.417317867279053

Token 372: 'は' (ID: 5205)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.2777096927165985
    2. 'さん' → logprob: -2.777709722518921
    3. 'は' → logprob: -2.777709722518921
    4. ''s' → logprob: -3.152709722518921
    5. 'ちゃん' → logprob: -3.777709722518921
    6. '"' → logprob: -3.902709722518921
    7. ''' → logprob: -5.152709484100342
    8. 'が' → logprob: -5.777709484100342
    9. 'と' → logprob: -5.902709484100342
    10. 'can' → logprob: -6.152709484100342

Token 373: 'A' (ID: 32)
  Prédit: '任'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '任' → logprob: -0.6585628986358643
    2. '好き' → logprob: -1.0335628986358643
    3. '連' → logprob: -3.6585628986358643
    4. 'any' → logprob: -4.158562660217285
    5. 'の' → logprob: -4.283562660217285
    6. 'ど' → logprob: -4.783562660217285
    7. 'cards' → logprob: -4.908562660217285
    8. '自' → logprob: -5.033562660217285
    9. 'は' → logprob: -5.533562660217285
    10. 'the' → logprob: -5.533562660217285

Token 374: '枚' (ID: 59971)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.2744803726673126
    2. ''s' → logprob: -2.6494803428649902
    3. '[i' → logprob: -3.0244803428649902
    4. 'さん' → logprob: -4.14948034286499
    5. 'が' → logprob: -4.39948034286499
    6. 'は' → logprob: -4.39948034286499
    7. '[' → logprob: -4.39948034286499
    8. '=' → logprob: -4.77448034286499
    9. 'n' → logprob: -4.89948034286499
    10. 'ちゃん' → logprob: -5.14948034286499

Token 375: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.04938625544309616
    2. 'は' → logprob: -4.799386024475098
    3. 'が' → logprob: -4.799386024475098
    4. ''s' → logprob: -5.174386024475098
    5. 'を' → logprob: -5.674386024475098
    6. 'ちゃん' → logprob: -6.174386024475098
    7. '=' → logprob: -6.424386024475098
    8. 'さん' → logprob: -6.424386024475098
    9. 'から' → logprob: -6.674386024475098
    10. 'まで' → logprob: -6.799386024475098

Token 376: 'カード' (ID: 144583)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.07584615051746368
    2. 'の' → logprob: -3.2008461952209473
    3. 'カード' → logprob: -3.5758461952209473
    4. ' cards' → logprob: -6.325846195220947
    5. '_cards' → logprob: -7.325846195220947
    6. 'card' → logprob: -7.825846195220947
    7. '(cards' → logprob: -8.450845718383789
    8. '.cards' → logprob: -9.075845718383789
    9. '手' → logprob: -9.075845718383789
    10. 'input' → logprob: -9.200845718383789

Token 377: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.5922979712486267
    2. 'は' → logprob: -0.9672979712486267
    3. 'が' → logprob: -3.3422980308532715
    4. 'を' → logprob: -3.8422980308532715
    5. 'から' → logprob: -5.8422980308532715
    6. 'に' → logprob: -7.0922980308532715
    7. ''s' → logprob: -7.2172980308532715
    8. '=' → logprob: -7.4672980308532715
    9. 'も' → logprob: -7.4672980308532715
    10. 'た' → logprob: -7.9672980308532715

Token 378: '中' (ID: 1404)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.2316433191299438
    2. '順' → logprob: -1.6066433191299438
    3. 'から' → logprob: -1.9816433191299438
    4. 'を' → logprob: -2.8566431999206543
    5. '数' → logprob: -3.4816431999206543
    6. '全' → logprob: -3.4816431999206543
    7. 'は' → logprob: -3.6066431999206543
    8. 'が' → logprob: -3.6066431999206543
    9. 'た' → logprob: -4.106643199920654
    10. 'す' → logprob: -4.481643199920654

Token 379: 'から' (ID: 27500)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'で' → logprob: -1.037883996963501
    2. 'に' → logprob: -1.412883996963501
    3. 'の' → logprob: -2.287883996963501
    4. 'は' → logprob: -2.412883996963501
    5. '=' → logprob: -2.912883996963501
    6. '[' → logprob: -3.662883996963501
    7. 'が' → logprob: -3.662883996963501
    8. 'を' → logprob: -3.912883996963501
    9. 'では' → logprob: -4.412883758544922
    10. 'には' → logprob: -4.662883758544922

Token 380: '任' (ID: 13366)
  Prédit: '任'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '任' → logprob: -0.4559999108314514
    2. '連' → logprob: -1.8309998512268066
    3. '好き' → logprob: -1.9559998512268066
    4. 'any' → logprob: -3.9559998512268066
    5. '何' → logprob: -4.455999851226807
    6. '1' → logprob: -5.080999851226807
    7. 'ど' → logprob: -5.455999851226807
    8. '一' → logprob: -5.705999851226807
    9. 'す' → logprob: -6.080999851226807
    10. 'い' → logprob: -6.205999851226807

Token 381: '意' (ID: 11987)
  Prédit: '意'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '意' → logprob: -0.0341847687959671
    2. 'せ' → logprob: -3.909184694290161
    3. 'された' → logprob: -5.15918493270874
    4. 'され' → logprob: -6.15918493270874
    5. 'さ' → logprob: -7.53418493270874
    6. '気' → logprob: -7.90918493270874
    7. 'き' → logprob: -8.159184455871582
    8. 'ず' → logprob: -8.284184455871582
    9. '```' → logprob: -8.471684455871582
    10. 'ぜ' → logprob: -8.721684455871582

Token 382: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.22314758598804474
    2. 'を' → logprob: -2.9731476306915283
    3. '意' → logprob: -2.9731476306915283
    4. 'な' → logprob: -3.8481476306915283
    5. '```' → logprob: -4.098147392272949
    6. 'から' → logprob: -4.223147392272949
    7. 'った' → logprob: -4.348147392272949
    8. 'に' → logprob: -4.723147392272949
    9. 'する' → logprob: -5.848147392272949
    10. '``' → logprob: -6.473147392272949

Token 383: '何' (ID: 13811)
  Prédit: '連'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '連' → logprob: -0.7717081904411316
    2. 'subset' → logprob: -1.8967082500457764
    3. '個' → logprob: -2.0217082500457764
    4. '部分' → logprob: -2.3967082500457764
    5. '枚' → logprob: -2.3967082500457764
    6. '数' → logprob: -4.271708011627197
    7. '場所' → logprob: -4.771708011627197
    8. '位置' → logprob: -4.896708011627197
    9. '```' → logprob: -5.146708011627197
    10. '0' → logprob: -5.521708011627197

Token 384: '枚' (ID: 59971)
  Prédit: '意'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '意' → logprob: -0.8905607461929321
    2. 'の' → logprob: -2.1405606269836426
    3. 'まで' → logprob: -2.5155606269836426
    4. '```' → logprob: -3.0155606269836426
    5. 'ぶ' → logprob: -3.1405606269836426
    6. '倍' → logprob: -3.7655606269836426
    7. '0' → logprob: -3.8905606269836426
    8. '
' → logprob: -4.140560626983643
    9. 'ま' → logprob: -4.265560626983643
    10. '次' → logprob: -4.390560626983643

Token 385: 'か' (ID: 7128)
  Prédit: 'か'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.45010003447532654
    2. 'を' → logprob: -1.450100064277649
    3. 'でも' → logprob: -2.4500999450683594
    4. 'の' → logprob: -4.200099945068359
    5. 'も' → logprob: -4.200099945068359
    6. '```' → logprob: -4.950099945068359
    7. 'だけ' → logprob: -6.700099945068359
    8. '数' → logprob: -6.950099945068359
    9. ' を' → logprob: -8.07509994506836
    10. '選' → logprob: -8.32509994506836

Token 386: '（' (ID: 3603)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.14868414402008057
    2. 'の' → logprob: -2.898684024810791
    3. 'まで' → logprob: -4.023684024810791
    4. 'でも' → logprob: -4.273684024810791
    5. '```' → logprob: -4.523684024810791
    6. '枚' → logprob: -4.898684024810791
    7. '以上' → logprob: -4.898684024810791
    8. 'だけ' → logprob: -5.648684024810791
    9. '以内' → logprob: -5.773684024810791
    10. 'か' → logprob: -6.023684024810791

Token 387: '0' (ID: 15)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '）' → logprob: -0.8611636757850647
    2. ')' → logprob: -2.11116361618042
    3. 'を' → logprob: -2.36116361618042
    4. '```' → logprob: -2.48616361618042
    5. 'の' → logprob: -2.98616361618042
    6. '
' → logprob: -3.36116361618042
    7. 'す' → logprob: -3.61116361618042
    8. 'つ' → logprob: -3.86116361618042
    9. '1' → logprob: -4.23616361618042
    10. ' を' → logprob: -4.61116361618042

Token 388: '枚' (ID: 59971)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38707447052001953
    2. '）' → logprob: -2.5120744705200195
    3. '-' → logprob: -2.6370744705200195
    4. 'つ' → logprob: -3.5120744705200195
    5. '+' → logprob: -3.6370744705200195
    6. ')' → logprob: -3.6370744705200195
    7. '])' → logprob: -4.0120744705200195
    8. ':' → logprob: -4.7620744705200195
    9. 'か' → logprob: -5.0120744705200195
    10. ' ]' → logprob: -5.2620744705200195

Token 389: 'でも' (ID: 45996)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.4682607054710388
    2. '以上' → logprob: -2.2182607650756836
    3. 'でも' → logprob: -2.5932607650756836
    4. 'また' → logprob: -2.5932607650756836
    5. 'を' → logprob: -3.3432607650756836
    6. 'も' → logprob: -3.7182607650756836
    7. '```' → logprob: -4.468260765075684
    8. 'or' → logprob: -4.593260765075684
    9. ' or' → logprob: -4.843260765075684
    10. 'まで' → logprob: -5.093260765075684

Token 390: 'よ' (ID: 15161)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.5188930630683899
    2. '0' → logprob: -1.7688930034637451
    3. '選' → logprob: -2.768893003463745
    4. '```' → logprob: -3.643893003463745
    5. 'か' → logprob: -4.018893241882324
    6. 'よ' → logprob: -4.393893241882324
    7. 'ど' → logprob: -4.643893241882324
    8. 'ず' → logprob: -4.893893241882324
    9. '良' → logprob: -5.018893241882324
    10. '1' → logprob: -5.143893241882324

Token 391: 'い' (ID: 3826)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.18894465267658234
    2. 'ら' → logprob: -1.938944697380066
    3. 'く' → logprob: -4.0639448165893555
    4. 'か' → logprob: -5.5639448165893555
    5. '#' → logprob: -5.6889448165893555
    6. '```' → logprob: -6.3139448165893555
    7. 'ります' → logprob: -8.063944816589355
    8. 'A' → logprob: -8.438944816589355
    9. 'き' → logprob: -8.563944816589355
    10. '|' → logprob: -8.813944816589355

Token 392: '）' (ID: 3495)
  Prédit: '）'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.017535757273435593
    2. 'まで' → logprob: -4.51753568649292
    3. ')' → logprob: -5.64253568649292
    4. '）の' → logprob: -7.51753568649292
    5. ' ）' → logprob: -7.64253568649292
    6. 'を' → logprob: -8.017536163330078
    7. ',' → logprob: -8.642536163330078
    8. '）が' → logprob: -8.892536163330078
    9. 'で' → logprob: -9.017536163330078
    10. 'でも' → logprob: -9.142536163330078

Token 393: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.13260383903980255
    2. 'の' → logprob: -3.007603883743286
    3. 'まで' → logprob: -3.757603883743286
    4. ' を' → logprob: -4.507603645324707
    5. ',' → logprob: -4.757603645324707
    6. ')' → logprob: -5.132603645324707
    7. '）' → logprob: -5.507603645324707
    8. '
' → logprob: -5.632603645324707
    9. 'だけ' → logprob: -6.132603645324707
    10. '以上' → logprob: -6.132603645324707

Token 394: '�' (ID: 7804)
  Prédit: '選'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '選' → logprob: -0.08618950098752975
    2. '抜' → logprob: -3.3361895084381104
    3. '残' → logprob: -3.9611895084381104
    4. 'chosen' → logprob: -5.086189270019531
    5. '```' → logprob: -5.711189270019531
    6. '切' → logprob: -6.086189270019531
    7. 'selected' → logprob: -6.336189270019531
    8. '取り' → logprob: -6.461189270019531
    9. '取' → logprob: -6.586189270019531
    10. '\xe6\x8d' → logprob: -6.836189270019531

Token 395: '�' (ID: 101)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5181018114089966
    2. 'う' → logprob: -2.393101692199707
    3. 'ぶ' → logprob: -2.768101692199707
    4. '[' → logprob: -3.143101692199707
    5. 'ば' → logprob: -3.393101692199707
    6. 'か' → logprob: -3.393101692199707
    7. 'を' → logprob: -3.643101692199707
    8. 'し' → logprob: -3.893101692199707
    9. 'ず' → logprob: -3.893101692199707
    10. 'ー' → logprob: -3.893101692199707

Token 396: 'て' (ID: 5711)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4889277219772339
    2. ']' → logprob: -1.7389277219772339
    3. '_' → logprob: -2.6139278411865234
    4. '[' → logprob: -2.8639278411865234
    5. 'n' → logprob: -3.2389278411865234
    6. ')' → logprob: -3.6139278411865234
    7. '[
' → logprob: -3.6139278411865234
    8. '-' → logprob: -3.7389278411865234
    9. 'う' → logprob: -3.8639278411865234
    10. 'ー' → logprob: -3.8639278411865234

Token 397: 'て' (ID: 5711)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -1.678346037864685
    2. 'ぶ' → logprob: -1.803346037864685
    3. 'て' → logprob: -2.0533461570739746
    4. 'つ' → logprob: -2.1783461570739746
    5. 'ん' → logprob: -2.3033461570739746
    6. 'き' → logprob: -3.4283461570739746
    7. '```' → logprob: -3.4283461570739746
    8. 'す' → logprob: -3.5533461570739746
    9. 'く' → logprob: -3.8033461570739746
    10. 'う' → logprob: -3.9283461570739746

Token 398: '新' (ID: 3711)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.9789104461669922
    2. 'も' → logprob: -0.9789104461669922
    3. 'よ' → logprob: -1.6039104461669922
    4. 'いい' → logprob: -4.478910446166992
    5. '#' → logprob: -5.228910446166992
    6. '良' → logprob: -5.478910446166992
    7. '、' → logprob: -5.853910446166992
    8. '\xe6\x8d' → logprob: -6.228910446166992
    9. '```' → logprob: -6.228910446166992
    10. 'き' → logprob: -6.478910446166992

Token 399: 'しい' (ID: 63386)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -1.4657461643218994
    2. 'た' → logprob: -1.7157461643218994
    3. 'しい' → logprob: -1.7157461643218994
    4. 'ん' → logprob: -2.7157461643218994
    5. 'しく' → logprob: -2.8407461643218994
    6. 'す' → logprob: -3.0907461643218994
    7. '```' → logprob: -3.4657461643218994
    8. 'き' → logprob: -3.5907461643218994
    9. 'ば' → logprob: -3.7157461643218994
    10. 'な' → logprob: -4.09074592590332

Token 400: '山' (ID: 11767)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7537871599197388
    2. 'す' → logprob: -1.3787871599197388
    3. 'く' → logprob: -3.253787040710449
    4. '#' → logprob: -3.378787040710449
    5. 'た' → logprob: -3.878787040710449
    6. 'subset' → logprob: -4.003787040710449
    7. 'の' → logprob: -4.128787040710449
    8. 'し' → logprob: -4.378787040710449
    9. 'つ' → logprob: -4.503787040710449
    10. 'る' → logprob: -4.503787040710449

Token 401: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.1721165031194687
    2. 'づ' → logprob: -2.92211651802063
    3. 'に' → logprob: -3.79711651802063
    4. 'か' → logprob: -4.422116279602051
    5. 'く' → logprob: -4.547116279602051
    6. 'の' → logprob: -4.547116279602051
    7. 'ず' → logprob: -4.672116279602051
    8. 'し' → logprob: -4.797116279602051
    9. 'す' → logprob: -4.922116279602051
    10. 'が' → logprob: -5.672116279602051

Token 402: '作' (ID: 6239)
  Prédit: 'つ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.26305392384529114
    2. '作' → logprob: -1.6380538940429688
    3. 'く' → logprob: -4.388053894042969
    4. '```' → logprob: -5.013053894042969
    5. 'す' → logprob: -5.388053894042969
    6. 'づ' → logprob: -5.513053894042969
    7. 'き' → logprob: -5.763053894042969
    8. 'も' → logprob: -6.513053894042969
    9. '#' → logprob: -7.013053894042969
    10. 'でき' → logprob: -7.013053894042969

Token 403: 'る' (ID: 6996)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -1.0130776166915894
    2. 'く' → logprob: -1.2630776166915894
    3. 'ば' → logprob: -2.513077735900879
    4. 'す' → logprob: -3.013077735900879
    5. 'つ' → logprob: -3.388077735900879
    6. 'け' → logprob: -3.388077735900879
    7. 'か' → logprob: -3.513077735900879
    8. 'っ' → logprob: -4.513077735900879
    9. '```' → logprob: -4.513077735900879
    10. 'る' → logprob: -4.638077735900879

Token 404: '."' (ID: 3692)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.8252179622650146
    2. 'し' → logprob: -2.4502179622650146
    3. 'ん' → logprob: -2.5752179622650146
    4. '[' → logprob: -2.7002179622650146
    5. '#' → logprob: -2.8252179622650146
    6. 'が' → logprob: -3.4502179622650146
    7. 'す' → logprob: -3.4502179622650146
    8. ')' → logprob: -3.7002179622650146
    9. 'を' → logprob: -3.9502179622650146
    10. '_' → logprob: -3.9502179622650146

Token 405: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8940984606742859
    2. '[' → logprob: -1.6440985202789307
    3. '#' → logprob: -2.0190985202789307
    4. '_' → logprob: -2.5190985202789307
    5. '```' → logprob: -3.6440985202789307
    6. ')' → logprob: -3.7690985202789307
    7. ']' → logprob: -3.8940985202789307
    8. ' ' → logprob: -4.394098281860352
    9. ',' → logprob: -4.519098281860352
    10. 'A' → logprob: -4.644098281860352

Token 406: 'Anna' (ID: 85340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5349467992782593
    2. '[' → logprob: -2.534946918487549
    3. '#' → logprob: -2.909946918487549
    4. ' ' → logprob: -3.034946918487549
    5. ']' → logprob: -3.159946918487549
    6. 'A' → logprob: -3.534946918487549
    7. '=' → logprob: -3.784946918487549
    8. '_' → logprob: -3.909946918487549
    9. '\n' → logprob: -3.909946918487549
    10. '
' → logprob: -4.034946918487549

Token 407: ' disc' (ID: 2960)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.548715353012085
    2. ' can' → logprob: -1.173715353012085
    3. 'can' → logprob: -3.173715353012085
    4. '）' → logprob: -4.298715591430664
    5. 'の' → logprob: -4.423715591430664
    6. '=' → logprob: -4.923715591430664
    7. 'は' → logprob: -5.048715591430664
    8. ' is' → logprob: -5.048715591430664
    9. 'が' → logprob: -5.048715591430664
    10. '<|end|>' → logprob: -5.423715591430664

Token 408: 'ards' (ID: 3098)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7854017019271851
    2. 'card' → logprob: -0.9104017019271851
    3. 'arding' → logprob: -3.0354018211364746
    4. 'ards' → logprob: -3.4104018211364746
    5. 'ard' → logprob: -3.6604018211364746
    6. '[' → logprob: -5.160401821136475
    7. 'cards' → logprob: -5.285401821136475
    8. ')' → logprob: -5.285401821136475
    9. 'car' → logprob: -5.660401821136475
    10. 'def' → logprob: -6.035401821136475

Token 409: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.3434659242630005
    2. ' any' → logprob: -1.5934659242630005
    3. ' tokens' → logprob: -1.8434659242630005
    4. 'tokens' → logprob: -1.8434659242630005
    5. 'spaces' → logprob: -3.218465805053711
    6. 'some' → logprob: -3.718465805053711
    7. ' spaces' → logprob: -3.843465805053711
    8. ' arbitrary' → logprob: -3.843465805053711
    9. ')' → logprob: -3.968465805053711
    10. ' ' → logprob: -4.343465805053711

Token 410: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.9252790212631226
    2. ' ' → logprob: -1.9252790212631226
    3. ' subset' → logprob: -2.050279140472412
    4. ' tokens' → logprob: -2.175279140472412
    5. ')' → logprob: -3.050279140472412
    6. '[]' → logprob: -4.050279140472412
    7. ' )' → logprob: -4.050279140472412
    8. 'tokens' → logprob: -4.175279140472412
    9. 's' → logprob: -4.425279140472412
    10. 'cards' → logprob: -4.550279140472412

Token 411: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3430199921131134
    2. ' from' → logprob: -2.218019962310791
    3. ')' → logprob: -2.968019962310791
    4. 'して' → logprob: -3.218019962310791
    5. 'から' → logprob: -3.843019962310791
    6. ' anywhere' → logprob: -3.968019962310791
    7. '```' → logprob: -4.843019962310791
    8. '）' → logprob: -4.968019962310791
    9. 'を' → logprob: -5.218019962310791
    10. 'でも' → logprob: -5.343019962310791

Token 412: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.37737104296684265
    2. '任' → logprob: -2.752371072769165
    3. 'す' → logprob: -2.877371072769165
    4. '```' → logprob: -3.377371072769165
    5. ' any' → logprob: -3.627371072769165
    6. 'from' → logprob: -4.002370834350586
    7. 'spaces' → logprob: -4.002370834350586
    8. 'ど' → logprob: -4.002370834350586
    9. 'the' → logprob: -4.377370834350586
    10. ' anywhere' → logprob: -4.502370834350586

Token 413: ' positions' (ID: 15897)
  Prédit: '場所'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '場所' → logprob: -0.03527491167187691
    2. '位置' → logprob: -5.035274982452393
    3. 'position' → logprob: -5.160274982452393
    4. 'place' → logprob: -5.160274982452393
    5. ' position' → logprob: -5.285274982452393
    6. ' place' → logprob: -5.785274982452393
    7. ' positions' → logprob: -5.910274982452393
    8. 'positions' → logprob: -6.285274982452393
    9. '```' → logprob: -7.285274982452393
    10. 'places' → logprob: -7.535274982452393

Token 414: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07046273350715637
    2. ',' → logprob: -4.195462703704834
    3. '=' → logprob: -4.320462703704834
    4. '
' → logprob: -4.945462703704834
    5. '）' → logprob: -5.445462703704834
    6. 'を' → logprob: -5.570462703704834
    7. '[' → logprob: -5.695462703704834
    8. '```' → logprob: -5.820462703704834
    9. 'from' → logprob: -6.445462703704834
    10. '[i' → logprob: -7.070462703704834

Token 415: ' form' (ID: 1625)
  Prédit: '作'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '作' → logprob: -0.8113496899604797
    2. '新' → logprob: -1.686349630355835
    3. 'つ' → logprob: -2.561349630355835
    4. 'new' → logprob: -3.061349630355835
    5. 'creates' → logprob: -3.686349630355835
    6. 'でき' → logprob: -4.061349868774414
    7. '残' → logprob: -4.061349868774414
    8. '続' → logprob: -4.311349868774414
    9. '得' → logprob: -4.311349868774414
    10. '連' → logprob: -4.436349868774414

Token 416: ' a' (ID: 261)
  Prédit: 'た'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'た' → logprob: -1.5714757442474365
    2. 'った' → logprob: -1.6964757442474365
    3. 'した' → logprob: -1.8214757442474365
    4. 'す' → logprob: -2.5714757442474365
    5. 'る' → logprob: -3.0714757442474365
    6. 'れ' → logprob: -3.0714757442474365
    7. 'て' → logprob: -3.0714757442474365
    8. 'new' → logprob: -3.0714757442474365
    9. 'せ' → logprob: -3.4464757442474365
    10. '新' → logprob: -3.9464757442474365

Token 417: ' new' (ID: 620)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.6104243397712708
    2. 'cont' → logprob: -1.110424280166626
    3. 'new' → logprob: -2.485424280166626
    4. 'sub' → logprob: -3.985424280166626
    5. 'continuous' → logprob: -4.735424518585205
    6. ' new' → logprob: -4.735424518585205
    7. 'subset' → logprob: -5.985424518585205
    8. ' subse' → logprob: -6.485424518585205
    9. ' subset' → logprob: -7.235424518585205
    10. '```' → logprob: -7.735424518585205

Token 418: ' pile' (ID: 39732)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.9611362218856812
    2. ' ' → logprob: -1.7111362218856812
    3. ' subset' → logprob: -2.0861363410949707
    4. ' ' → logprob: -2.9611363410949707
    5. ' pile' → logprob: -3.2111363410949707
    6. '```' → logprob: -3.3361363410949707
    7. 'subset' → logprob: -3.3361363410949707
    8. ' subse' → logprob: -3.7111363410949707
    9. 'sequence' → logprob: -3.7111363410949707
    10. 'pile' → logprob: -3.8361363410949707

Token 419: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10981310158967972
    2. '```' → logprob: -3.6098132133483887
    3. '）' → logprob: -4.609813213348389
    4. '#' → logprob: -4.984813213348389
    5. 'の' → logprob: -5.109813213348389
    6. ',' → logprob: -5.234813213348389
    7. '=' → logprob: -5.359813213348389
    8. '[' → logprob: -5.484813213348389
    9. ')
' → logprob: -5.484813213348389
    10. 'を' → logprob: -5.609813213348389

Token 420: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3163200616836548
    2. 'を' → logprob: -1.6913200616836548
    3. 'が' → logprob: -1.9413200616836548
    4. '```' → logprob: -2.6913199424743652
    5. 'た' → logprob: -3.4413199424743652
    6. 'ん' → logprob: -3.8163199424743652
    7. '。' → logprob: -4.066319942474365
    8. 'A' → logprob: -4.316319942474365
    9. 'す' → logprob: -4.316319942474365
    10. '�' → logprob: -4.316319942474365

Token 421: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.028646433725953102
    2. 'dp' → logprob: -5.028646469116211
    3. '```' → logprob: -5.278646469116211
    4. 'Since' → logprob: -5.778646469116211
    5. '
' → logprob: -6.028646469116211
    6. 'for' → logprob: -7.278646469116211
    7. '[' → logprob: -7.278646469116211
    8. '_' → logprob: -7.528646469116211
    9. 'The' → logprob: -7.778646469116211
    10. 'n' → logprob: -7.778646469116211

Token 422: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.7768802642822266
    2. 'the' → logprob: -0.9018802642822266
    3. 'Anna' → logprob: -3.7768802642822266
    4. 'we' → logprob: -4.151880264282227
    5. 'actually' → logprob: -4.151880264282227
    6. 'this' → logprob: -4.276880264282227
    7. 'if' → logprob: -4.651880264282227
    8. 'since' → logprob: -4.776880264282227
    9. 'it' → logprob: -4.901880264282227
    10. 'that' → logprob: -5.026880264282227

Token 423: ''s' (ID: 885)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.665800154209137
    2. ' can' → logprob: -0.790800154209137
    3. ''s' → logprob: -4.165800094604492
    4. ' is' → logprob: -5.665800094604492
    5. '=' → logprob: -5.915800094604492
    6. 'must' → logprob: -6.040800094604492
    7. 'は' → logprob: -6.415800094604492
    8. 'の' → logprob: -6.540800094604492
    9. ' =' → logprob: -7.290800094604492
    10. ' must' → logprob: -7.415800094604492

Token 424: ' new' (ID: 620)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.2206868827342987
    2. 'sub' → logprob: -2.220686912536621
    3. 'can' → logprob: -3.470686912536621
    4. 'sequence' → logprob: -3.845686912536621
    5. ' subse' → logprob: -4.345686912536621
    6. ' cards' → logprob: -4.970686912536621
    7. ''s' → logprob: -5.220686912536621
    8. 'new' → logprob: -6.345686912536621
    9. ' can' → logprob: -6.845686912536621
    10. 'pile' → logprob: -6.845686912536621

Token 425: ' pile' (ID: 39732)
  Prédit: ' pile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pile' → logprob: -0.138174369931221
    2. 'pile' → logprob: -2.388174295425415
    3. '_' → logprob: -4.138174533843994
    4. ' subse' → logprob: -5.388174533843994
    5. 'sub' → logprob: -5.638174533843994
    6. '_cards' → logprob: -5.763174533843994
    7. '_sub' → logprob: -5.888174533843994
    8. ' piles' → logprob: -7.013174533843994
    9. ' cards' → logprob: -7.013174533843994
    10. 'cards' → logprob: -7.138174533843994

Token 426: ' cards' (ID: 10541)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.5445008873939514
    2. ' must' → logprob: -0.9195008873939514
    3. ' can' → logprob: -4.919500827789307
    4. ' is' → logprob: -4.919500827789307
    5. 'can' → logprob: -5.794500827789307
    6. 'は' → logprob: -6.169500827789307
    7. 'is' → logprob: -7.044500827789307
    8. ' は' → logprob: -9.419501304626465
    9. '```' → logprob: -9.419501304626465
    10. 'を' → logprob: -9.544501304626465

Token 427: ' remain' (ID: 12760)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5981064438819885
    2. 'must' → logprob: -0.9731064438819885
    3. ' are' → logprob: -3.4731063842773438
    4. ' can' → logprob: -3.8481063842773438
    5. 'は' → logprob: -4.973106384277344
    6. ' is' → logprob: -5.098106384277344
    7. 'can' → logprob: -5.723106384277344
    8. 'are' → logprob: -6.348106384277344
    9. 'is' → logprob: -7.723106384277344
    10. '<|end|>' → logprob: -7.973106384277344

Token 428: ' in' (ID: 306)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.36714476346969604
    2. 'cont' → logprob: -1.2421448230743408
    3. ' a' → logprob: -4.617144584655762
    4. 'a' → logprob: -5.242144584655762
    5. ' cont' → logprob: -6.867144584655762
    6. 'continuous' → logprob: -7.367144584655762
    7. ' always' → logprob: -8.867144584655762
    8. '_cont' → logprob: -9.117144584655762
    9. 'also' → logprob: -9.242144584655762
    10. '```' → logprob: -9.242144584655762

Token 429: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.48859402537345886
    2. 'order' → logprob: -1.1135940551757812
    3. 'cont' → logprob: -3.4885940551757812
    4. '連' → logprob: -4.363594055175781
    5. ' contiguous' → logprob: -5.613594055175781
    6. ' the' → logprob: -5.988594055175781
    7. ' order' → logprob: -6.113594055175781
    8. '```' → logprob: -6.863594055175781
    9. '同' → logprob: -6.988594055175781
    10. '順' → logprob: -7.113594055175781

Token 430: ' same' (ID: 2684)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.8736715316772461
    2. 'order' → logprob: -1.248671531677246
    3. 'same' → logprob: -1.373671531677246
    4. ' original' → logprob: -4.248671531677246
    5. 'cont' → logprob: -4.873671531677246
    6. 'input' → logprob: -5.248671531677246
    7. ' same' → logprob: -5.373671531677246
    8. ' order' → logprob: -5.873671531677246
    9. '原' → logprob: -5.998671531677246
    10. ' contiguous' → logprob: -6.123671531677246

Token 431: ' relative' (ID: 15001)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07754607498645782
    2. ' order' → logprob: -2.8275461196899414
    3. 'positions' → logprob: -5.202546119689941
    4. '順' → logprob: -5.202546119689941
    5. 'position' → logprob: -6.202546119689941
    6. 'sequence' → logprob: -7.077546119689941
    7. '```' → logprob: -7.327546119689941
    8. '位置' → logprob: -8.452546119689941
    9. ' positions' → logprob: -8.577546119689941
    10. '#' → logprob: -9.952546119689941

Token 432: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.9712197184562683
    2. '_positions' → logprob: -0.9712197184562683
    3. '_position' → logprob: -2.971219778060913
    4. ' positions' → logprob: -3.346219778060913
    5. '_order' → logprob: -3.596219778060913
    6. 'positions' → logprob: -3.846219778060913
    7. 'position' → logprob: -3.846219778060913
    8. '_' → logprob: -3.846219778060913
    9. ' position' → logprob: -4.096219539642334
    10. 'order' → logprob: -4.221219539642334

Token 433: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8080201745033264
    2. ' for' → logprob: -2.4330201148986816
    3. '[i' → logprob: -2.5580201148986816
    4. '[' → logprob: -2.8080201148986816
    5. '
' → logprob: -3.0580201148986816
    6. ')' → logprob: -3.1830201148986816
    7. ']' → logprob: -3.4330201148986816
    8. 'dp' → logprob: -3.4330201148986816
    9. '```' → logprob: -3.5580201148986816
    10. '#' → logprob: -3.5580201148986816

Token 434: ' original' (ID: 4756)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -1.450518250465393
    2. 'original' → logprob: -1.700518250465393
    3. 'the' → logprob: -1.825518250465393
    4. 'they' → logprob: -2.0755181312561035
    5. 'input' → logprob: -2.2005181312561035
    6. 'in' → logprob: -2.4505181312561035
    7. 'given' → logprob: -4.2005181312561035
    8. ' anna' → logprob: -4.3255181312561035
    9. 'before' → logprob: -4.5755181312561035
    10. ' they' → logprob: -4.5755181312561035

Token 435: ' cards' (ID: 10541)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3693046569824219
    2. '[' → logprob: -2.619304656982422
    3. ')' → logprob: -3.494304656982422
    4. '```' → logprob: -3.494304656982422
    5. 'for' → logprob: -3.869304656982422
    6. '[i' → logprob: -3.994304656982422
    7. ']' → logprob: -4.119304656982422
    8. ' =' → logprob: -4.244304656982422
    9. ',' → logprob: -4.244304656982422
    10. '[
' → logprob: -4.494304656982422

Token 436: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1329134702682495
    2. 'dp' → logprob: -1.8829134702682495
    3. ' ' → logprob: -2.382913589477539
    4. ' for' → logprob: -2.757913589477539
    5. '[' → logprob: -2.882913589477539
    6. '=' → logprob: -2.882913589477539
    7. '[
' → logprob: -3.507913589477539
    8. 'max' → logprob: -3.507913589477539
    9. '```' → logprob: -3.632913589477539
    10. ']' → logprob: -3.757913589477539

Token 437: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.3086143136024475
    2. ' so' → logprob: -2.4336142539978027
    3. ' and' → logprob: -2.8086142539978027
    4. 'but' → logprob: -3.4336142539978027
    5. 'and' → logprob: -4.308614253997803
    6. '[' → logprob: -4.558614253997803
    7. '```' → logprob: -4.808614253997803
    8. '
' → logprob: -5.433614253997803
    9. ' not' → logprob: -5.433614253997803
    10. ')' → logprob: -5.558614253997803

Token 438: ' keep' (ID: 3357)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.1814807653427124
    2. 'the' → logprob: -1.5564807653427124
    3. 'they' → logprob: -2.181480884552002
    4. 'can' → logprob: -2.306480884552002
    5. 'must' → logprob: -2.306480884552002
    6. ' contiguous' → logprob: -2.431480884552002
    7. 'only' → logprob: -3.681480884552002
    8. 'are' → logprob: -4.931480884552002
    9. ' the' → logprob: -5.056480884552002
    10. ' must' → logprob: -5.181480884552002

Token 439: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.4173937439918518
    2. 'cont' → logprob: -1.542393684387207
    3. 'the' → logprob: -2.667393684387207
    4. ' only' → logprob: -3.167393684387207
    5. ' contiguous' → logprob: -4.792393684387207
    6. 'a' → logprob: -5.917393684387207
    7. 'any' → logprob: -7.292393684387207
    8. ' the' → logprob: -7.417393684387207
    9. ' cont' → logprob: -7.542393684387207
    10. '```' → logprob: -7.667393684387207

Token 440: ' a' (ID: 261)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.7351959943771362
    2. 'the' → logprob: -1.8601959943771362
    3. 'a' → logprob: -1.9851959943771362
    4. 'some' → logprob: -2.235196113586426
    5. ' contiguous' → logprob: -2.610196113586426
    6. 'selected' → logprob: -3.985196113586426
    7. 'those' → logprob: -4.235196113586426
    8. 'cards' → logprob: -5.485196113586426
    9. '部分' → logprob: -6.360196113586426
    10. 'continuous' → logprob: -6.735196113586426

Token 441: ' subse' (ID: 19874)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.4485392570495605
    2. ' contiguous' → logprob: -1.4485392570495605
    3. ' subse' → logprob: -1.5735392570495605
    4. 'subset' → logprob: -1.6985392570495605
    5. ' subset' → logprob: -2.3235392570495605
    6. 'sub' → logprob: -3.3235392570495605
    7. 'continuous' → logprob: -5.8235392570495605
    8. '_cont' → logprob: -7.6985392570495605
    9. 's' → logprob: -7.8235392570495605
    10. ' ' → logprob: -8.073539733886719

Token 442: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.02982235886156559
    2. 'sequence' → logprob: -3.52982234954834
    3. ' sequence' → logprob: -9.90482234954834
    4. 'quences' → logprob: -11.77982234954834
    5. 'QUENCE' → logprob: -11.77982234954834
    6. 'q' → logprob: -12.52982234954834
    7. '_sequence' → logprob: -13.90482234954834
    8. '	' → logprob: -15.27982234954834
    9. ' ' → logprob: -15.27982234954834
    10. '
' → logprob: -15.52982234954834

Token 443: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9982823729515076
    2. 'max' → logprob: -1.1232824325561523
    3. 'dp' → logprob: -1.4982824325561523
    4. '
' → logprob: -4.123282432556152
    5. ' for' → logprob: -4.248282432556152
    6. ' ' → logprob: -4.873282432556152
    7. 'n' → logprob: -4.873282432556152
    8. '=' → logprob: -5.248282432556152
    9. ' max' → logprob: -5.748282432556152
    10. '```' → logprob: -5.998282432556152

Token 444: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3793333172798157
    2. 'max' → logprob: -1.254333257675171
    3. 'for' → logprob: -3.754333257675171
    4. '#' → logprob: -6.12933349609375
    5. 'n' → logprob: -6.50433349609375
    6. 'ans' → logprob: -7.25433349609375
    7. 'from' → logprob: -7.87933349609375
    8. '```' → logprob: -8.00433349609375
    9. 'length' → logprob: -8.50433349609375
    10. 'import' → logprob: -8.62933349609375

Token 445: ' Bruno' (ID: 63193)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3252953588962555
    2. 'max' → logprob: -1.450295329093933
    3. 'for' → logprob: -3.5752954483032227
    4. 'n' → logprob: -5.450295448303223
    5. 'ans' → logprob: -5.450295448303223
    6. 'from' → logprob: -6.450295448303223
    7. '```' → logprob: -6.575295448303223
    8. '#' → logprob: -6.575295448303223
    9. 'res' → logprob: -7.450295448303223
    10. 'result' → logprob: -8.325295448303223

Token 446: ' only' (ID: 1606)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.48762014508247375
    2. '[' → logprob: -1.9876201152801514
    3. ' can' → logprob: -2.3626201152801514
    4. ''s' → logprob: -2.7376201152801514
    5. '[i' → logprob: -3.3626201152801514
    6. 'can' → logprob: -4.1126203536987305
    7. ',' → logprob: -4.9876203536987305
    8. ')' → logprob: -5.4876203536987305
    9. ''' → logprob: -5.6126203536987305
    10. '_can' → logprob: -5.7376203536987305

Token 447: ' disc' (ID: 2960)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.007671456318348646
    2. ' can' → logprob: -5.382671356201172
    3. '=' → logprob: -6.507671356201172
    4. 'rem' → logprob: -7.507671356201172
    5. '```' → logprob: -8.507671356201172
    6. 'cuts' → logprob: -8.507671356201172
    7. 'ke' → logprob: -9.007671356201172
    8. 'must' → logprob: -9.132671356201172
    9. 'is' → logprob: -9.632671356201172
    10. ''s' → logprob: -10.132671356201172

Token 448: 'ards' (ID: 3098)
  Prédit: 'arding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arding' → logprob: -0.8559788465499878
    2. 'ard' → logprob: -0.9809788465499878
    3. 'ont' → logprob: -2.4809789657592773
    4. 'ards' → logprob: -3.3559789657592773
    5. 'arded' → logprob: -3.6059789657592773
    6. 'ar' → logprob: -3.8559789657592773
    7. 'u' → logprob: -4.605978965759277
    8. 'ussed' → logprob: -4.730978965759277
    9. 'd' → logprob: -6.105978965759277
    10. 'ut' → logprob: -6.355978965759277

Token 449: ' cards' (ID: 10541)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07925184071063995
    2. '```' → logprob: -3.829251766204834
    3. ' from' → logprob: -4.454251766204834
    4. 's' → logprob: -4.579251766204834
    5. 'the' → logprob: -4.579251766204834
    6. 'any' → logprob: -5.329251766204834
    7. 'cards' → logprob: -5.954251766204834
    8. 'tokens' → logprob: -5.954251766204834
    9. 'br' → logprob: -6.329251766204834
    10. ' any' → logprob: -6.579251766204834

Token 450: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.02121102809906
    2. 'from' → logprob: -1.39621102809906
    3. ' from' → logprob: -2.2712111473083496
    4. ')' → logprob: -2.6462111473083496
    5. ' =' → logprob: -2.6462111473083496
    6. '```' → logprob: -3.1462111473083496
    7. '<|end|>' → logprob: -4.02121114730835
    8. '[]' → logprob: -4.14621114730835
    9. '[' → logprob: -4.77121114730835
    10. ',' → logprob: -4.89621114730835

Token 451: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6476367115974426
    2. 'the' → logprob: -0.7726367115974426
    3. 'both' → logprob: -5.022636890411377
    4. 'ends' → logprob: -6.397636890411377
    5. 'either' → logprob: -6.522636890411377
    6. ' the' → logprob: -6.647636890411377
    7. 'トップ' → logprob: -7.272636890411377
    8. ' top' → logprob: -7.272636890411377
    9. 'tops' → logprob: -7.522636890411377
    10. 'edges' → logprob: -7.647636890411377

Token 452: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0888187885284424
    2. ')' → logprob: -1.3388187885284424
    3. '```' → logprob: -2.7138187885284424
    4. '[' → logprob: -3.0888187885284424
    5. '<|end|>' → logprob: -3.0888187885284424
    6. '=' → logprob: -3.2138187885284424
    7. ' and' → logprob: -3.2138187885284424
    8. '[]' → logprob: -3.8388187885284424
    9. 'br' → logprob: -3.9638187885284424
    10. '<|end|>' → logprob: -4.338818550109863

Token 453: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.011134597472846508
    2. ' bottom' → logprob: -4.511134624481201
    3. '```' → logprob: -9.511134147644043
    4. '0' → logprob: -12.261134147644043
    5. 'the' → logprob: -13.011134147644043
    6. '下' → logprob: -13.636134147644043
    7. '_bottom' → logprob: -14.136134147644043
    8. '-bottom' → logprob: -14.386134147644043
    9. '.bottom' → logprob: -14.511134147644043
    10. '``' → logprob: -14.636134147644043

Token 454: ' to' (ID: 316)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5534718036651611
    2. 'dp' → logprob: -1.3034718036651611
    3. 'for' → logprob: -2.803471803665161
    4. 'n' → logprob: -4.053471565246582
    5. '```' → logprob: -4.178471565246582
    6. '
' → logprob: -4.428471565246582
    7. ' for' → logprob: -4.928471565246582
    8. ',' → logprob: -5.053471565246582
    9. '=' → logprob: -5.178471565246582
    10. 'ans' → logprob: -5.428471565246582

Token 455: ' form' (ID: 1625)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.0979478508234024
    2. ' keep' → logprob: -2.472947835922241
    3. 'make' → logprob: -5.22294807434082
    4. 'get' → logprob: -6.47294807434082
    5. ' get' → logprob: -7.09794807434082
    6. 'ob' → logprob: -8.47294807434082
    7. ' make' → logprob: -8.59794807434082
    8. 'take' → logprob: -9.09794807434082
    9. 'create' → logprob: -9.09794807434082
    10. 'form' → logprob: -9.34794807434082

Token 456: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8789871335029602
    2. 'a' → logprob: -1.2539870738983154
    3. 'the' → logprob: -1.8789870738983154
    4. ' the' → logprob: -2.5039870738983154
    5. ' contiguous' → logprob: -3.6289870738983154
    6. 'br' → logprob: -3.7539870738983154
    7. '```' → logprob: -4.5039873123168945
    8. '[]' → logprob: -7.1289873123168945
    9. 'an' → logprob: -7.8789873123168945
    10. ',' → logprob: -8.253987312316895

Token 457: ' contiguous' (ID: 130997)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.4481249749660492
    2. ' contiguous' → logprob: -1.0731250047683716
    3. 'sub' → logprob: -4.573124885559082
    4. 'continuous' → logprob: -5.073124885559082
    5. '```' → logprob: -6.198124885559082
    6. 'br' → logprob: -8.448124885559082
    7. 'middle' → logprob: -8.948124885559082
    8. ' sub' → logprob: -9.198124885559082
    9. '[' → logprob: -10.323124885559082
    10. ' continuous' → logprob: -10.698124885559082

Token 458: ' sub' (ID: 1543)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5669494867324829
    2. 'sub' → logprob: -1.191949486732483
    3. ']' → logprob: -3.4419493675231934
    4. ')' → logprob: -3.5669493675231934
    5. 'br' → logprob: -3.8169493675231934
    6. ' sub' → logprob: -4.066949367523193
    7. '``' → logprob: -4.691949367523193
    8. 'array' → logprob: -5.941949367523193
    9. '_sub' → logprob: -6.191949367523193
    10. '#' → logprob: -6.691949367523193

Token 459: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.013925950042903423
    2. ']' → logprob: -5.013926029205322
    3. '[]' → logprob: -6.388926029205322
    4. '
' → logprob: -6.513926029205322
    5. 'sequence' → logprob: -7.138926029205322
    6. 'set' → logprob: -7.388926029205322
    7. '_array' → logprob: -7.638926029205322
    8. 'arra' → logprob: -8.388925552368164
    9. '```' → logprob: -8.388925552368164
    10. '[' → logprob: -8.388925552368164

Token 460: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17451782524585724
    2. 'dp' → logprob: -2.299517869949341
    3. 'for' → logprob: -3.924517869949341
    4. 'n' → logprob: -4.674517631530762
    5. '```' → logprob: -5.174517631530762
    6. 'ans' → logprob: -5.174517631530762
    7. '
' → logprob: -6.299517631530762
    8. '_' → logprob: -6.299517631530762
    9. '_max' → logprob: -6.424517631530762
    10. ' max' → logprob: -6.674517631530762

Token 461: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14716863632202148
    2. '[j' → logprob: -3.1471686363220215
    3. '[i' → logprob: -3.5221686363220215
    4. ']' → logprob: -3.8971686363220215
    5. '])' → logprob: -3.8971686363220215
    6. '```' → logprob: -5.5221686363220215
    7. ' ' → logprob: -5.6471686363220215
    8. ')
' → logprob: -5.7721686363220215
    9. '[' → logprob: -6.0221686363220215
    10. ',' → logprob: -6.5221686363220215

Token 462: ' cards' (ID: 10541)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9866930842399597
    2. ' next' → logprob: -1.3616931438446045
    3. '```' → logprob: -2.2366931438446045
    4. ']' → logprob: -2.3616931438446045
    5. '[' → logprob: -3.3616931438446045
    6. ' same' → logprob: -3.8616931438446045
    7. '[]' → logprob: -4.486692905426025
    8. 'next' → logprob: -4.611692905426025
    9. ' ' → logprob: -4.736692905426025
    10. ' ]' → logprob: -4.986692905426025

Token 463: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9583464860916138
    2. '[j' → logprob: -1.2083464860916138
    3. '[i' → logprob: -2.083346366882324
    4. '```' → logprob: -3.083346366882324
    5. 's' → logprob: -3.583346366882324
    6. '[' → logprob: -3.958346366882324
    7. '])' → logprob: -3.958346366882324
    8. ' ' → logprob: -4.208346366882324
    9. ']' → logprob: -4.458346366882324
    10. ')]' → logprob: -5.083346366882324

Token 464: ' the' (ID: 290)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.21475054323673248
    2. 'the' → logprob: -2.0897505283355713
    3. 'anna' → logprob: -3.3397505283355713
    4. '```' → logprob: -4.46475076675415
    5. 'top' → logprob: -5.46475076675415
    6. '[]' → logprob: -5.83975076675415
    7. ')' → logprob: -6.33975076675415
    8. 'python' → logprob: -6.58975076675415
    9. '0' → logprob: -6.83975076675415
    10. 'a' → logprob: -6.96475076675415

Token 465: ' middle' (ID: 10006)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.20792029798030853
    2. 'same' → logprob: -2.5829203128814697
    3. 'middle' → logprob: -3.3329203128814697
    4. ' same' → logprob: -4.207920074462891
    5. ' br' → logprob: -4.332920074462891
    6. '```' → logprob: -4.832920074462891
    7. ')' → logprob: -4.832920074462891
    8. ' middle' → logprob: -5.207920074462891
    9. '[]' → logprob: -5.332920074462891
    10. 'next' → logprob: -5.832920074462891

Token 466: ').
' (ID: 6294)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8554209470748901
    2. ']' → logprob: -1.6054209470748901
    3. ')' → logprob: -1.7304209470748901
    4. '[' → logprob: -2.7304210662841797
    5. '[i' → logprob: -2.7304210662841797
    6. '```' → logprob: -3.3554210662841797
    7. ':' → logprob: -4.98042106628418
    8. ',' → logprob: -5.73042106628418
    9. ' ' → logprob: -5.85542106628418
    10. '=' → logprob: -5.98042106628418

Token 467: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1965099573135376
    2. 'dp' → logprob: -1.8215099573135376
    3. 'ans' → logprob: -4.946509838104248
    4. 'res' → logprob: -5.946509838104248
    5. '```' → logprob: -6.196509838104248
    6. 'for' → logprob: -6.196509838104248
    7. 'n' → logprob: -6.696509838104248
    8. ' max' → logprob: -8.321510314941406
    9. 'import' → logprob: -8.571510314941406
    10. 'from' → logprob: -8.696510314941406

Token 468: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.91855388879776
    2. 'for' → logprob: -1.4185538291931152
    3. 'max' → logprob: -1.6685538291931152
    4. 'n' → logprob: -3.2935538291931152
    5. ' ' → logprob: -3.5435538291931152
    6. ' for' → logprob: -3.6685538291931152
    7. '```' → logprob: -4.293553829193115
    8. 'import' → logprob: -4.543553829193115
    9. '\' → logprob: -4.918553829193115
    10. ']' → logprob: -5.293553829193115

Token 469: ' two' (ID: 1920)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7234806418418884
    2. 'for' → logprob: -1.5984807014465332
    3. 'max' → logprob: -1.9734807014465332
    4. 'n' → logprob: -2.098480701446533
    5. '```' → logprob: -4.348480701446533
    6. 'import' → logprob: -4.473480701446533
    7. 'ans' → logprob: -5.473480701446533
    8. 'prev' → logprob: -5.848480701446533
    9. ']' → logprob: -5.848480701446533
    10. 'best' → logprob: -6.723480701446533

Token 470: ' piles' (ID: 90498)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8295695781707764
    2. ' =' → logprob: -1.8295695781707764
    3. '#' → logprob: -2.4545695781707764
    4. 'for' → logprob: -2.4545695781707764
    5. '```' → logprob: -2.9545695781707764
    6. 'length' → logprob: -3.0795695781707764
    7. '[' → logprob: -3.2045695781707764
    8. '
' → logprob: -3.2045695781707764
    9. '[i' → logprob: -3.3295695781707764
    10. 'n' → logprob: -3.7045695781707764

Token 471: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6557189226150513
    2. ' =' → logprob: -1.2807189226150513
    3. '[i' → logprob: -3.2807188034057617
    4. '[' → logprob: -3.7807188034057617
    5. 's' → logprob: -4.280718803405762
    6. 'の' → logprob: -4.280718803405762
    7. '[j' → logprob: -4.405718803405762
    8. '#' → logprob: -4.530718803405762
    9. '=[]' → logprob: -4.655718803405762
    10. '_' → logprob: -5.030718803405762

Token 472: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5837337374687195
    2. ' be' → logprob: -1.8337337970733643
    3. 'match' → logprob: -1.8337337970733643
    4. 'appear' → logprob: -2.7087337970733643
    5. 'have' → logprob: -3.8337337970733643
    6. ' match' → logprob: -4.208733558654785
    7. 'both' → logprob: -4.833733558654785
    8. ' both' → logprob: -5.708733558654785
    9. ' appear' → logprob: -6.458733558654785
    10. ' have' → logprob: -6.833733558654785

Token 473: ' exactly' (ID: 9707)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.7745620012283325
    2. 'matched' → logprob: -2.024561882019043
    3. ' contiguous' → logprob: -2.024561882019043
    4. ' equal' → logprob: -2.274561882019043
    5. ' subse' → logprob: -2.774561882019043
    6. 'sub' → logprob: -2.774561882019043
    7. 'the' → logprob: -2.774561882019043
    8. 'found' → logprob: -2.899561882019043
    9. ' matched' → logprob: -3.274561882019043
    10. ' identical' → logprob: -3.399561882019043

Token 474: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.3632807433605194
    2. 'the' → logprob: -2.363280773162842
    3. ' equal' → logprob: -2.613280773162842
    4. 'matching' → logprob: -2.738280773162842
    5. 'matched' → logprob: -2.988280773162842
    6. ' matching' → logprob: -5.363280773162842
    7. '```' → logprob: -5.363280773162842
    8. ' matched' → logprob: -5.613280773162842
    9. ' the' → logprob: -5.863280773162842
    10. 'cont' → logprob: -6.613280773162842

Token 475: ' sequences' (ID: 45665)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.661872148513794
    2. 'dp' → logprob: -1.036872148513794
    3. 'for' → logprob: -2.786872148513794
    4. 'n' → logprob: -3.661872148513794
    5. '```' → logprob: -4.286871910095215
    6. '
' → logprob: -5.786871910095215
    7. 'import' → logprob: -5.911871910095215
    8. 'ans' → logprob: -5.911871910095215
    9. ',' → logprob: -6.161871910095215
    10. ' ' → logprob: -6.161871910095215

Token 476: '.

' (ID: 364)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6023799777030945
    2. 'dp' → logprob: -0.8523799777030945
    3. 'for' → logprob: -4.47737979888916
    4. 'n' → logprob: -4.72737979888916
    5. '```' → logprob: -6.47737979888916
    6. 'ans' → logprob: -6.97737979888916
    7. '
' → logprob: -7.10237979888916
    8. 'import' → logprob: -7.85237979888916
    9. '=' → logprob: -8.10237979888916
    10. ' =' → logprob: -8.10237979888916

Token 477: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28961101174354553
    2. 'max' → logprob: -1.5396109819412231
    3. 'n' → logprob: -4.289610862731934
    4. '```' → logprob: -4.789610862731934
    5. 'ans' → logprob: -5.664610862731934
    6. 'for' → logprob: -5.664610862731934
    7. '
' → logprob: -6.289610862731934
    8. 'from' → logprob: -7.289610862731934
    9. 'import' → logprob: -7.289610862731934
    10. '#' → logprob: -7.414610862731934

Token 478: ' So' (ID: 2632)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25970056653022766
    2. 'dp' → logprob: -1.5097005367279053
    3. 'ans' → logprob: -5.634700775146484
    4. 'n' → logprob: -6.384700775146484
    5. 'res' → logprob: -7.384700775146484
    6. '```' → logprob: -7.509700775146484
    7. 'import' → logprob: -8.134700775146484
    8. 'for' → logprob: -8.384700775146484
    9. ' max' → logprob: -9.259700775146484
    10. 'answer' → logprob: -9.259700775146484

Token 479: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05742951110005379
    2. 'max' → logprob: -3.182429552078247
    3. '#' → logprob: -5.182429313659668
    4. 'for' → logprob: -5.932429313659668
    5. ' dp' → logprob: -6.557429313659668
    6. 'j' → logprob: -7.057429313659668
    7. 'n' → logprob: -7.432429313659668
    8. 'from' → logprob: -7.557429313659668
    9. 'i' → logprob: -7.557429313659668
    10. 'prev' → logprob: -7.807429313659668

Token 480: ' matching' (ID: 20238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4551607072353363
    2. 'max' → logprob: -1.5801607370376587
    3. 'for' → logprob: -2.080160617828369
    4. '#' → logprob: -4.205160617828369
    5. 'import' → logprob: -4.830160617828369
    6. 'n' → logprob: -6.080160617828369
    7. 'from' → logprob: -6.080160617828369
    8. 'ans' → logprob: -6.330160617828369
    9. 'prev' → logprob: -6.580160617828369
    10. ' for' → logprob: -7.080160617828369

Token 481: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34859520196914673
    2. '[' → logprob: -2.098595142364502
    3. '_length' → logprob: -2.473595142364502
    4. '_lengths' → logprob: -3.723595142364502
    5. ' ' → logprob: -4.223595142364502
    6. '[
' → logprob: -4.723595142364502
    7. '[i' → logprob: -4.848595142364502
    8. 's' → logprob: -5.098595142364502
    9. 'length' → logprob: -5.598595142364502
    10. '
' → logprob: -5.848595142364502

Token 482: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49990352988243103
    2. '=' → logprob: -2.249903440475464
    3. '[i' → logprob: -2.749903440475464
    4. '[' → logprob: -2.874903440475464
    5. '_length' → logprob: -3.374903440475464
    6. 's' → logprob: -3.374903440475464
    7. '_' → logprob: -3.999903440475464
    8. ' is' → logprob: -4.249903678894043
    9. '_lengths' → logprob: -4.749903678894043
    10. ',' → logprob: -5.124903678894043

Token 483: ':
' (ID: 734)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.05645532160997391
    2. ' be' → logprob: -3.181455373764038
    3. 'appear' → logprob: -4.556455135345459
    4. 'also' → logprob: -5.931455135345459
    5. ' also' → logprob: -9.431455612182617
    6. ' appear' → logprob: -9.431455612182617
    7. 'have' → logprob: -11.306455612182617
    8. 'occur' → logprob: -11.931455612182617
    9. 'exist' → logprob: -12.181455612182617
    10. 'not' → logprob: -12.181455612182617

Token 484: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13521291315555573
    2. ' be' → logprob: -2.2602128982543945
    3. 'be' → logprob: -4.1352128982543945
    4. '=' → logprob: -5.7602128982543945
    5. ' =' → logprob: -6.8852128982543945
    6. ' #' → logprob: -7.2602128982543945
    7. 'must' → logprob: -8.135212898254395
    8. '```' → logprob: -8.510212898254395
    9. 'appear' → logprob: -8.510212898254395
    10. ' appear' → logprob: -9.010212898254395

Token 485: ' -' (ID: 533)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08978301286697388
    2. 'be' → logprob: -2.589782953262329
    3. '#' → logprob: -4.714783191680908
    4. ' appear' → logprob: -7.714783191680908
    5. 'appear' → logprob: -8.08978271484375
    6. ' also' → logprob: -8.46478271484375
    7. ' contiguous' → logprob: -8.83978271484375
    8. '```' → logprob: -9.33978271484375
    9. ' continue' → logprob: -9.46478271484375
    10. ' consist' → logprob: -9.58978271484375

Token 486: ' Ap' (ID: 6537)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.13623861968517303
    2. 'appear' → logprob: -2.2612385749816895
    3. ' be' → logprob: -4.0112385749816895
    4. 'Be' → logprob: -6.3862385749816895
    5. ' appear' → logprob: -6.3862385749816895
    6. 'exist' → logprob: -7.1362385749816895
    7. 'Appear' → logprob: -8.761239051818848
    8. 'occur' → logprob: -9.511239051818848
    9. 'contain' → logprob: -9.636239051818848
    10. 'cons' → logprob: -10.011239051818848

Token 487: 'pear' (ID: 22916)
  Prédit: 'pear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pear' → logprob: -0.40791264176368713
    2. 'pe' → logprob: -1.6579126119613647
    3. 'p' → logprob: -2.1579127311706543
    4. 'pend' → logprob: -4.032912731170654
    5. 'prox' → logprob: -6.032912731170654
    6. 'ply' → logprob: -6.282912731170654
    7. 'pen' → logprob: -6.532912731170654
    8. 'pea' → logprob: -6.657912731170654
    9. 'pro' → logprob: -6.907912731170654
    10. 'ppe' → logprob: -7.907912731170654

Token 488: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.12739157676696777
    2. 'as' → logprob: -2.8773915767669678
    3. ' in' → logprob: -2.8773915767669678
    4. 'in' → logprob: -5.627391815185547
    5. ' ' → logprob: -6.752391815185547
    6. '_' → logprob: -7.377391815185547
    7. ')' → logprob: -8.252391815185547
    8. ' anywhere' → logprob: -8.377391815185547
    9. '_as' → logprob: -8.877391815185547
    10. '```' → logprob: -8.877391815185547

Token 489: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0025516748428345
    2. ' contiguous' → logprob: -1.2525516748428345
    3. 'a' → logprob: -1.3775516748428345
    4. ' subse' → logprob: -3.377551555633545
    5. 'anna' → logprob: -3.502551555633545
    6. ' anna' → logprob: -3.877551555633545
    7. 'sub' → logprob: -5.752551555633545
    8. 'cont' → logprob: -6.377551555633545
    9. ' sub' → logprob: -7.252551555633545
    10. ' ' → logprob: -7.502551555633545

Token 490: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12294669449329376
    2. ' subse' → logprob: -2.7479467391967773
    3. 'cont' → logprob: -2.9979467391967773
    4. ' contiguous' → logprob: -6.622946739196777
    5. 'common' → logprob: -8.872946739196777
    6. '```' → logprob: -9.497946739196777
    7. 'continuous' → logprob: -9.622946739196777
    8. 'substring' → logprob: -10.247946739196777
    9. 'subset' → logprob: -10.747946739196777
    10. 'prefix' → logprob: -11.622946739196777

Token 491: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.11333800852298737
    2. '[
' → logprob: -2.988337993621826
    3. '[' → logprob: -3.363337993621826
    4. 'q' → logprob: -4.988337993621826
    5. '#' → logprob: -5.238337993621826
    6. 'quences' → logprob: -6.113337993621826
    7. '[]
' → logprob: -6.363337993621826
    8. '```' → logprob: -6.488337993621826
    9. 'qu' → logprob: -6.613337993621826
    10. '[]' → logprob: -6.738337993621826

Token 492: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09482453018426895
    2. '[' → logprob: -3.9698245525360107
    3. ' ' → logprob: -3.9698245525360107
    4. ',' → logprob: -4.344824314117432
    5. '```' → logprob: -4.344824314117432
    6. '[i' → logprob: -4.594824314117432
    7. ')' → logprob: -5.969824314117432
    8. ' of' → logprob: -6.344824314117432
    9. ' _' → logprob: -6.719824314117432
    10. '\' → logprob: -6.844824314117432

Token 493: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.008231215178966522
    2. 'br' → logprob: -5.008231163024902
    3. ' anna' → logprob: -6.758231163024902
    4. '```' → logprob: -8.758231163024902
    5. 'Anna' → logprob: -9.133231163024902
    6. ' br' → logprob: -10.008231163024902
    7. 'ana' → logprob: -12.133231163024902
    8. 'ann' → logprob: -12.258231163024902
    9. ' ' → logprob: -12.383231163024902
    10. 'Br' → logprob: -12.383231163024902

Token 494: ''s' (ID: 885)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05994562432169914
    2. '[' → logprob: -3.184945583343506
    3. ''s' → logprob: -4.559945583343506
    4. '[j' → logprob: -6.059945583343506
    5. '```' → logprob: -6.809945583343506
    6. ''' → logprob: -6.934945583343506
    7. '_' → logprob: -8.309946060180664
    8. '[]' → logprob: -8.309946060180664
    9. '[
' → logprob: -8.684946060180664
    10. '#' → logprob: -8.684946060180664

Token 495: ' cards' (ID: 10541)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.7755100131034851
    2. 'cards' → logprob: -1.4005100727081299
    3. 'br' → logprob: -2.02551007270813
    4. '```' → logprob: -2.65051007270813
    5. ' ' → logprob: -3.77551007270813
    6. '   ' → logprob: -4.400509834289551
    7. ''s' → logprob: -4.525509834289551
    8. '_cards' → logprob: -4.775509834289551
    9. '`' → logprob: -5.150509834289551
    10. '``' → logprob: -5.400509834289551

Token 496: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3054111003875732
    2. '```' → logprob: -1.3054111003875732
    3. '[' → logprob: -1.8054111003875732
    4. '[
' → logprob: -2.4304111003875732
    5. '[j' → logprob: -3.3054111003875732
    6. '_' → logprob: -3.4304111003875732
    7. ',' → logprob: -3.9304111003875732
    8. '``' → logprob: -4.430411338806152
    9. '
' → logprob: -4.430411338806152
    10. 'for' → logprob: -4.555411338806152

Token 497: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.097831130027771
    2. '[j' → logprob: -1.597831130027771
    3. 'for' → logprob: -2.5978312492370605
    4. '#' → logprob: -2.5978312492370605
    5. '[
' → logprob: -2.7228312492370605
    6. '```' → logprob: -2.7228312492370605
    7. '[i' → logprob: -2.8478312492370605
    8. ',' → logprob: -3.8478312492370605
    9. '\n' → logprob: -4.2228312492370605
    10. 'br' → logprob: -4.4728312492370605

Token 498: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32441624999046326
    2. '-' → logprob: -2.074416160583496
    3. '```' → logprob: -2.574416160583496
    4. '[' → logprob: -3.449416160583496
    5. 'br' → logprob: -4.074416160583496
    6. '[j' → logprob: -4.824416160583496
    7. 'j' → logprob: -5.449416160583496
    8. ' #' → logprob: -6.324416160583496
    9. 'for' → logprob: -6.574416160583496
    10. ' ' → logprob: -6.824416160583496

Token 499: ' Ap' (ID: 6537)
  Prédit: 'Appear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Appear' → logprob: -0.017126280814409256
    2. '#' → logprob: -4.767126083374023
    3. 'Ap' → logprob: -5.517126083374023
    4. '-' → logprob: -5.892126083374023
    5. 'appear' → logprob: -7.392126083374023
    6. 'Also' → logprob: -7.642126083374023
    7. 'Be' → logprob: -7.767126083374023
    8. 'Appe' → logprob: -9.517126083374023
    9. ' Ap' → logprob: -9.767126083374023
    10. ' appear' → logprob: -11.142126083374023

Token 500: 'pear' (ID: 22916)
  Prédit: 'pear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pear' → logprob: -0.005768326576799154
    2. 'pe' → logprob: -5.255768299102783
    3. 'p' → logprob: -8.880768775939941
    4. 'pea' → logprob: -9.755768775939941
    5. '
' → logprob: -10.005768775939941
    6. '==' → logprob: -10.005768775939941
    7. '=' → logprob: -10.255768775939941
    8. 'prox' → logprob: -10.630768775939941
    9. ')' → logprob: -10.755768775939941
    10. '```' → logprob: -10.755768775939941

Token 501: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6985402703285217
    2. 'as' → logprob: -0.8235402703285217
    3. ' in' → logprob: -3.448540210723877
    4. 'in' → logprob: -3.573540210723877
    5. '   ' → logprob: -6.823540210723877
    6. 'also' → logprob: -7.323540210723877
    7. ' exactly' → logprob: -7.573540210723877
    8. '```' → logprob: -7.948540210723877
    9. 'exact' → logprob: -8.323540687561035
    10. ' contiguous' → logprob: -8.698540687561035

Token 502: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1758742332458496
    2. ' a' → logprob: -2.0508742332458496
    3. ' contiguous' → logprob: -4.30087423324585
    4. 'br' → logprob: -4.67587423324585
    5. 'cont' → logprob: -5.42587423324585
    6. 'some' → logprob: -6.67587423324585
    7. ' br' → logprob: -6.80087423324585
    8. 'any' → logprob: -7.17587423324585
    9. 'also' → logprob: -7.30087423324585
    10. 'sub' → logprob: -7.80087423324585

Token 503: ' contiguous' (ID: 130997)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.5635575652122498
    2. 'sub' → logprob: -1.5635576248168945
    3. ' contiguous' → logprob: -1.6885576248168945
    4. 'br' → logprob: -3.5635576248168945
    5. 'substring' → logprob: -5.8135576248168945
    6. '```' → logprob: -6.3135576248168945
    7. ' sub' → logprob: -6.5635576248168945
    8. 'continuous' → logprob: -7.1885576248168945
    9. '``' → logprob: -7.9385576248168945
    10. 'con' → logprob: -8.438557624816895

Token 504: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.25438088178634644
    2. 'sub' → logprob: -1.5043809413909912
    3. 'sequence' → logprob: -7.004380702972412
    4. ' sequence' → logprob: -7.129380702972412
    5. ' subse' → logprob: -8.25438117980957
    6. 'substring' → logprob: -9.37938117980957
    7. 'array' → logprob: -9.37938117980957
    8. ' array' → logprob: -9.62938117980957
    9. '_sub' → logprob: -10.00438117980957
    10. '```' → logprob: -10.25438117980957

Token 505: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.48651960492134094
    2. 'sequence' → logprob: -0.9865195751190186
    3. 'quence' → logprob: -4.861519813537598
    4. '[]' → logprob: -6.861519813537598
    5. '[' → logprob: -7.111519813537598
    6. ']' → logprob: -7.486519813537598
    7. '
' → logprob: -7.861519813537598
    8. 'string' → logprob: -8.236519813537598
    9. 'arra' → logprob: -8.486519813537598
    10. '_array' → logprob: -8.736519813537598

Token 506: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6888996958732605
    2. '[
' → logprob: -1.9388997554779053
    3. '[i' → logprob: -2.0638997554779053
    4. '```' → logprob: -2.3138997554779053
    5. '[j' → logprob: -2.9388997554779053
    6. '_' → logprob: -3.9388997554779053
    7. '`' → logprob: -4.563899517059326
    8. 'for' → logprob: -4.688899517059326
    9. '``' → logprob: -5.063899517059326
    10. '\[' → logprob: -5.438899517059326

Token 507: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.004666507244110107
    2. ' br' → logprob: -5.379666328430176
    3. 'Br' → logprob: -11.254666328430176
    4. '```' → logprob: -11.504666328430176
    5. ' ' → logprob: -11.754666328430176
    6. ' Bruno' → logprob: -12.129666328430176
    7. '	br' → logprob: -12.129666328430176
    8. '<br' → logprob: -14.129666328430176
    9. '   ' → logprob: -14.754666328430176
    10. 'brane' → logprob: -14.754666328430176

Token 508: ''s' (ID: 885)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5500229597091675
    2. 'max' → logprob: -1.1750229597091675
    3. 'for' → logprob: -2.425023078918457
    4. 'ans' → logprob: -5.050023078918457
    5. '```' → logprob: -5.925023078918457
    6. ',' → logprob: -6.050023078918457
    7. 'n' → logprob: -6.050023078918457
    8. ' for' → logprob: -6.425023078918457
    9. '#' → logprob: -6.550023078918457
    10. '
' → logprob: -6.800023078918457

Token 509: ' cards' (ID: 10541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41103512048721313
    2. ' for' → logprob: -2.2860350608825684
    3. ' =' → logprob: -3.4110350608825684
    4. '#' → logprob: -4.286035060882568
    5. 'n' → logprob: -4.286035060882568
    6. '=' → logprob: -4.286035060882568
    7. 'cards' → logprob: -4.286035060882568
    8. 's' → logprob: -4.411035060882568
    9. '```' → logprob: -4.411035060882568
    10. '[j' → logprob: -4.536035060882568

Token 510: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10913611203432083
    2. 'for' → logprob: -2.9841361045837402
    3. 'max' → logprob: -3.1091361045837402
    4. 'ans' → logprob: -5.73413610458374
    5. 'res' → logprob: -6.73413610458374
    6. '#' → logprob: -7.23413610458374
    7. '```' → logprob: -7.23413610458374
    8. 'n' → logprob: -7.23413610458374
    9. 'from' → logprob: -8.234136581420898
    10. 'length' → logprob: -8.609136581420898

Token 511: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03357839211821556
    2. 'max' → logprob: -3.908578395843506
    3. 'for' → logprob: -4.908578395843506
    4. 'ans' → logprob: -5.783578395843506
    5. '```' → logprob: -7.033578395843506
    6. 'res' → logprob: -7.783578395843506
    7. '#' → logprob: -7.908578395843506
    8. 'n' → logprob: -8.033577919006348
    9. ' for' → logprob: -9.783577919006348
    10. 'prev' → logprob: -9.908577919006348

Token 512: ' To' (ID: 2514)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08540461212396622
    2. 'max' → logprob: -2.585404634475708
    3. 'for' → logprob: -5.835404396057129
    4. 'ans' → logprob: -6.335404396057129
    5. 'res' → logprob: -6.835404396057129
    6. 'answer' → logprob: -8.460404396057129
    7. '```' → logprob: -8.960404396057129
    8. 'result' → logprob: -9.710404396057129
    9. 'n' → logprob: -9.835404396057129
    10. '#' → logprob: -9.960404396057129

Token 513: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.8433794379234314
    2. 'solve' → logprob: -0.8433794379234314
    3. 'maximize' → logprob: -3.218379497528076
    4. 'ach' → logprob: -3.468379497528076
    5. 'for' → logprob: -3.843379497528076
    6. 'continue' → logprob: -4.218379497528076
    7. 'A' → logprob: -5.218379497528076
    8. 'max' → logprob: -5.468379497528076
    9. 'opt' → logprob: -5.593379497528076
    10. '```' → logprob: -5.968379497528076

Token 514: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4887862801551819
    2. 'for' → logprob: -1.238786220550537
    3. 'max' → logprob: -3.363786220550537
    4. 'br' → logprob: -3.488786220550537
    5. 'dp' → logprob: -4.738786220550537
    6. '```' → logprob: -4.863786220550537
    7. ' for' → logprob: -5.238786220550537
    8. ' the' → logprob: -5.738786220550537
    9. 'a' → logprob: -5.988786220550537
    10. 'i' → logprob: -6.863786220550537

Token 515: ' longest' (ID: 37511)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7345086336135864
    2. 'for' → logprob: -1.7345086336135864
    3. 'max' → logprob: -2.484508514404297
    4. 'B' → logprob: -2.484508514404297
    5. 'next' → logprob: -2.609508514404297
    6. 'br' → logprob: -3.359508514404297
    7. 'length' → logprob: -3.734508514404297
    8. 'answer' → logprob: -4.984508514404297
    9. '```' → logprob: -5.609508514404297
    10. '#' → logprob: -5.609508514404297

Token 516: ' such' (ID: 2238)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.2701631784439087
    2. 'for' → logprob: -1.5201631784439087
    3. 'dp' → logprob: -1.6451631784439087
    4. 'common' → logprob: -2.270163059234619
    5. '```' → logprob: -2.895163059234619
    6. 'sub' → logprob: -3.270163059234619
    7. 'i' → logprob: -4.020163059234619
    8. 'br' → logprob: -4.145163059234619
    9. 'n' → logprob: -4.270163059234619
    10. 'j' → logprob: -4.395163059234619

Token 517: ' sequence' (ID: 16281)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5054065585136414
    2. 'sub' → logprob: -1.7554066181182861
    3. '```' → logprob: -2.880406618118286
    4. 'common' → logprob: -3.130406618118286
    5. 'sequence' → logprob: -3.630406618118286
    6. 'for' → logprob: -3.755406618118286
    7. 'n' → logprob: -4.380406379699707
    8. ' length' → logprob: -4.755406379699707
    9. 'substring' → logprob: -5.130406379699707
    10. 'k' → logprob: -5.380406379699707

Token 518: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45436784625053406
    2. '=' → logprob: -1.9543678760528564
    3. ' =' → logprob: -1.9543678760528564
    4. '_dp' → logprob: -4.204367637634277
    5. '=
' → logprob: -4.204367637634277
    6. ',' → logprob: -4.829367637634277
    7. '
' → logprob: -4.954367637634277
    8. 'for' → logprob: -5.204367637634277
    9. '```' → logprob: -5.204367637634277
    10. 'n' → logprob: -5.454367637634277

Token 519: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017280252650380135
    2. 'for' → logprob: -4.642280101776123
    3. 'max' → logprob: -5.642280101776123
    4. '#' → logprob: -6.267280101776123
    5. ' dp' → logprob: -6.642280101776123
    6. ' for' → logprob: -8.267280578613281
    7. ' max' → logprob: -9.642280578613281
    8. 'prev' → logprob: -9.892280578613281
    9. '```' → logprob: -9.892280578613281
    10. 'import' → logprob: -10.017280578613281

Token 520: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.8320445418357849
    2. '#' → logprob: -1.0820446014404297
    3. ' can' → logprob: -1.9570446014404297
    4. 'need' → logprob: -3.7070446014404297
    5. '=' → logprob: -4.58204460144043
    6. 'dp' → logprob: -4.58204460144043
    7. 'for' → logprob: -4.95704460144043
    8. 'want' → logprob: -5.08204460144043
    9. 'def' → logprob: -5.45704460144043
    10. ' =' → logprob: -5.45704460144043

Token 521: ' consider' (ID: 3331)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5717077255249023
    2. 'for' → logprob: -1.3217077255249023
    3. 'initialize' → logprob: -2.3217077255249023
    4. '#' → logprob: -3.5717077255249023
    5. 'use' → logprob: -3.9467077255249023
    6. 'create' → logprob: -4.946707725524902
    7. 'iterate' → logprob: -6.071707725524902
    8. 'from' → logprob: -6.321707725524902
    9. 'find' → logprob: -6.321707725524902
    10. 'compute' → logprob: -6.446707725524902

Token 522: ' all' (ID: 722)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.2936972379684448
    2. 'B' → logprob: -1.6686972379684448
    3. 'for' → logprob: -1.7936972379684448
    4. 'dp' → logprob: -1.9186972379684448
    5. '```' → logprob: -2.2936973571777344
    6. 'j' → logprob: -3.4186973571777344
    7. '0' → logprob: -3.6686973571777344
    8. 'b' → logprob: -4.293697357177734
    9. 'the' → logprob: -4.793697357177734
    10. '``' → logprob: -5.168697357177734

Token 523: ' contiguous' (ID: 130997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5412445068359375
    2. '```' → logprob: -1.4162445068359375
    3. 'i' → logprob: -2.6662445068359375
    4. 'for' → logprob: -2.7912445068359375
    5. 'br' → logprob: -3.5412445068359375
    6. 'sub' → logprob: -6.0412445068359375
    7. ' for' → logprob: -6.0412445068359375
    8. '``' → logprob: -6.0412445068359375
    9. '   ' → logprob: -6.2912445068359375
    10. 'start' → logprob: -6.9162445068359375

Token 524: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.03794749826192856
    2. ' sub' → logprob: -3.662947416305542
    3. 'length' → logprob: -5.412947654724121
    4. '_sub' → logprob: -5.662947654724121
    5. 'for' → logprob: -6.287947654724121
    6. 'segments' → logprob: -7.412947654724121
    7. ' lengths' → logprob: -8.287947654724121
    8. '```' → logprob: -8.412947654724121
    9. 's' → logprob: -8.537947654724121
    10. 'br' → logprob: -9.037947654724121

Token 525: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.10313906520605087
    2. 'array' → logprob: -2.3531391620635986
    3. 'arra' → logprob: -7.4781389236450195
    4. 'a' → logprob: -7.4781389236450195
    5. 'arr' → logprob: -7.6031389236450195
    6. 'ar' → logprob: -7.7281389236450195
    7. 'br' → logprob: -7.9781389236450195
    8. 'b' → logprob: -9.22813892364502
    9. 'strings' → logprob: -9.47813892364502
    10. '_' → logprob: -9.85313892364502

Token 526: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09368139505386353
    2. ' for' → logprob: -3.3436813354492188
    3. 'of' → logprob: -4.218681335449219
    4. 'br' → logprob: -4.343681335449219
    5. 'from' → logprob: -4.843681335449219
    6. '```' → logprob: -5.593681335449219
    7. ' of' → logprob: -5.593681335449219
    8. 'in' → logprob: -6.218681335449219
    9. ',' → logprob: -6.343681335449219
    10. ' =' → logprob: -6.843681335449219

Token 527: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0021106475032866
    2. ' br' → logprob: -6.252110481262207
    3. '```' → logprob: -9.377110481262207
    4. 'Br' → logprob: -9.627110481262207
    5. 'range' → logprob: -11.752110481262207
    6. 'b' → logprob: -11.877110481262207
    7. '	br' → logprob: -12.252110481262207
    8. ' ' → logprob: -13.002110481262207
    9. 'for' → logprob: -13.377110481262207
    10. '`' → logprob: -13.627110481262207

Token 528: ''s' (ID: 885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07365178316831589
    2. '[' → logprob: -3.3236517906188965
    3. ' for' → logprob: -4.1986517906188965
    4. '```' → logprob: -4.9486517906188965
    5. ':' → logprob: -5.5736517906188965
    6. ',' → logprob: -6.1986517906188965
    7. ''' → logprob: -6.4486517906188965
    8. '.' → logprob: -7.1986517906188965
    9. '[j' → logprob: -7.3236517906188965
    10. ''s' → logprob: -7.4486517906188965

Token 529: ' cards' (ID: 10541)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2721629738807678
    2. 'for' → logprob: -2.147162914276123
    3. '```' → logprob: -3.772162914276123
    4. '[i' → logprob: -4.022162914276123
    5. 'br' → logprob: -4.147162914276123
    6. '[j' → logprob: -4.147162914276123
    7. ''' → logprob: -4.397162914276123
    8. 's' → logprob: -4.772162914276123
    9. '[
' → logprob: -5.522162914276123
    10. ''s' → logprob: -5.522162914276123

Token 530: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6054346561431885
    2. ' for' → logprob: -0.9804346561431885
    3. ',' → logprob: -3.9804346561431885
    4. '.' → logprob: -4.105434417724609
    5. '[' → logprob: -4.355434417724609
    6. ':' → logprob: -4.855434417724609
    7. '```' → logprob: -5.105434417724609
    8. ' ' → logprob: -6.230434417724609
    9. '   ' → logprob: -6.355434417724609
    10. ' and' → logprob: -6.855434417724609

Token 531: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5491736531257629
    2. ' for' → logprob: -1.5491735935211182
    3. ' and' → logprob: -2.674173593521118
    4. '```' → logprob: -2.924173593521118
    5. ' then' → logprob: -4.424173831939697
    6. ''' → logprob: -4.549173831939697
    7. 'and' → logprob: -5.049173831939697
    8. '[' → logprob: -5.174173831939697
    9. ' ' → logprob: -5.549173831939697
    10. ' i' → logprob: -5.549173831939697

Token 532: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024491658434271812
    2. 'check' → logprob: -4.024491786956787
    3. '#' → logprob: -6.149491786956787
    4. 'try' → logprob: -6.524491786956787
    5. 'length' → logprob: -7.024491786956787
    6. ' for' → logprob: -7.649491786956787
    7. 'use' → logprob: -8.399491310119629
    8. 'extend' → logprob: -8.899491310119629
    9. 'find' → logprob: -8.899491310119629
    10. 'len' → logprob: -8.899491310119629

Token 533: ' each' (ID: 2454)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.45906850695610046
    2. 'i' → logprob: -2.084068536758423
    3. 'l' → logprob: -2.209068536758423
    4. 'each' → logprob: -2.584068536758423
    5. 'sub' → logprob: -3.959068536758423
    6. 'br' → logprob: -4.834068298339844
    7. 'b' → logprob: -4.959068298339844
    8. ' length' → logprob: -4.959068298339844
    9. 'len' → logprob: -4.959068298339844
    10. 'k' → logprob: -6.459068298339844

Token 534: ',' (ID: 11)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.5730934143066406
    2. 'for' → logprob: -1.6980934143066406
    3. 'sub' → logprob: -1.9480934143066406
    4. '```' → logprob: -2.3230934143066406
    5. 'j' → logprob: -2.4480934143066406
    6. 'br' → logprob: -2.4480934143066406
    7. ' for' → logprob: -3.1980934143066406
    8. 'B' → logprob: -3.3230934143066406
    9. 'b' → logprob: -3.9480934143066406
    10. ' length' → logprob: -4.323093414306641

Token 535: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3898469805717468
    2. 'check' → logprob: -1.6398470401763916
    3. ' for' → logprob: -3.3898470401763916
    4. ' check' → logprob: -3.5148470401763916
    5. 'length' → logprob: -4.1398468017578125
    6. '```' → logprob: -4.1398468017578125
    7. 'extend' → logprob: -5.2648468017578125
    8. '#' → logprob: -5.3898468017578125
    9. 'continue' → logprob: -5.5148468017578125
    10. 'try' → logprob: -5.6398468017578125

Token 536: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46838703751564026
    2. 'whether' → logprob: -1.3433870077133179
    3. '```' → logprob: -2.8433871269226074
    4. ' if' → logprob: -4.093387126922607
    5. 'length' → logprob: -4.593387126922607
    6. ' whether' → logprob: -4.968387126922607
    7. 'their' → logprob: -5.218387126922607
    8. 'len' → logprob: -5.468387126922607
    9. 'its' → logprob: -6.218387126922607
    10. 'the' → logprob: -6.343387126922607

Token 537: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1102338582277298
    2. ' length' → logprob: -3.485233783721924
    3. '```' → logprob: -3.735233783721924
    4. 'possible' → logprob: -4.110233783721924
    5. 'start' → logprob: -4.985233783721924
    6. 'len' → logprob: -5.235233783721924
    7. 'presence' → logprob: -5.735233783721924
    8. 'long' → logprob: -5.735233783721924
    9. 'poss' → logprob: -5.985233783721924
    10. ' possible' → logprob: -6.485233783721924

Token 538: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7618469595909119
    2. '=' → logprob: -1.5118470191955566
    3. 'from' → logprob: -2.6368470191955566
    4. '```' → logprob: -3.1368470191955566
    5. 'br' → logprob: -3.5118470191955566
    6. ' for' → logprob: -3.5118470191955566
    7. ' =' → logprob: -4.011847019195557
    8. '#' → logprob: -4.261847019195557
    9. ',' → logprob: -4.261847019195557
    10. 'of' → logprob: -4.261847019195557

Token 539: ' its' (ID: 1617)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9700538516044617
    2. 'the' → logprob: -1.0950539112091064
    3. '```' → logprob: -2.4700539112091064
    4. 'that' → logprob: -2.7200539112091064
    5. 'br' → logprob: -3.2200539112091064
    6. ' the' → logprob: -3.8450539112091064
    7. 'anna' → logprob: -3.9700539112091064
    8. ' ' → logprob: -3.9700539112091064
    9. 'matching' → logprob: -4.470053672790527
    10. ' matching' → logprob: -5.220053672790527

Token 540: ' L' (ID: 451)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6676439046859741
    2. '```' → logprob: -1.6676439046859741
    3. 'sub' → logprob: -2.4176440238952637
    4. 'possible' → logprob: -3.0426440238952637
    5. 'max' → logprob: -3.4176440238952637
    6. 'prefix' → logprob: -3.9176440238952637
    7. 'cont' → logprob: -4.042644023895264
    8. 'continu' → logprob: -4.417644023895264
    9. 'long' → logprob: -4.417644023895264
    10. 'substring' → logprob: -4.542644023895264

Token 541: 'CS' (ID: 9310)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6116377711296082
    2. 'en' → logprob: -1.361637830734253
    3. 'ength' → logprob: -1.861637830734253
    4. 'a' → logprob: -4.611637592315674
    5. 'i' → logprob: -5.236637592315674
    6. '=' → logprob: -5.736637592315674
    7. '
' → logprob: -5.736637592315674
    8. 'o' → logprob: -5.861637592315674
    9. '[]
' → logprob: -5.861637592315674
    10. 'ena' → logprob: -5.986637592315674

Token 542: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5336629152297974
    2. 'for' → logprob: -2.283662796020508
    3. '=' → logprob: -2.533662796020508
    4. '[' → logprob: -2.658662796020508
    5. ' =' → logprob: -3.283662796020508
    6. 'max' → logprob: -4.158662796020508
    7. ' ' → logprob: -4.158662796020508
    8. ',' → logprob: -4.283662796020508
    9. '[
' → logprob: -4.283662796020508
    10. '_max' → logprob: -4.658662796020508

Token 543: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.011143083684146404
    2. ' anna' → logprob: -4.511143207550049
    3. 'Anna' → logprob: -10.01114273071289
    4. '```' → logprob: -11.38614273071289
    5. 'a' → logprob: -12.01114273071289
    6. 'the' → logprob: -12.38614273071289
    7. 'br' → logprob: -12.51114273071289
    8. ' Anna' → logprob: -12.63614273071289
    9. ' ' → logprob: -12.76114273071289
    10. '
' → logprob: -12.88614273071289

Token 544: ''s' (ID: 885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8065873384475708
    2. 'max' → logprob: -1.4315873384475708
    3. 'dp' → logprob: -2.1815872192382812
    4. ']' → logprob: -3.4315872192382812
    5. ' =' → logprob: -3.5565872192382812
    6. '=' → logprob: -3.6815872192382812
    7. '#' → logprob: -4.181587219238281
    8. ' for' → logprob: -4.306587219238281
    9. 'import' → logprob: -4.306587219238281
    10. ',' → logprob: -4.556587219238281

Token 545: ' cards' (ID: 10541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8230818510055542
    2. 'max' → logprob: -2.1980819702148438
    3. 'dp' → logprob: -2.4480819702148438
    4. '=' → logprob: -2.5730819702148438
    5. ']' → logprob: -2.8230819702148438
    6. ' =' → logprob: -3.0730819702148438
    7. ',' → logprob: -3.4480819702148438
    8. '[' → logprob: -3.5730819702148438
    9. ' for' → logprob: -4.198081970214844
    10. '#' → logprob: -4.573081970214844

Token 546: ' subse' (ID: 19874)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08168072253465652
    2. 'max' → logprob: -2.8316807746887207
    3. 'for' → logprob: -4.456680774688721
    4. 'ans' → logprob: -6.081680774688721
    5. 'from' → logprob: -6.706680774688721
    6. 'import' → logprob: -6.831680774688721
    7. 'res' → logprob: -6.956680774688721
    8. '#' → logprob: -7.581680774688721
    9. 'n' → logprob: -7.581680774688721
    10. '```' → logprob: -8.081680297851562

Token 547: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.013505828566849232
    2. 'quences' → logprob: -4.388505935668945
    3. 'q' → logprob: -7.763505935668945
    4. 'sequence' → logprob: -8.013505935668945
    5. 'QUENCE' → logprob: -9.513505935668945
    6. 't' → logprob: -9.888505935668945
    7. '#' → logprob: -10.388505935668945
    8. '
' → logprob: -11.388505935668945
    9. '```' → logprob: -11.388505935668945
    10. '[]' → logprob: -11.638505935668945

Token 548: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.547278881072998
    2. '=' → logprob: -1.672278881072998
    3. 'dp' → logprob: -2.047278881072998
    4. '_' → logprob: -2.422278881072998
    5. 'for' → logprob: -2.422278881072998
    6. ' =' → logprob: -3.172278881072998
    7. 'max' → logprob: -3.297278881072998
    8. '[
' → logprob: -3.547278881072998
    9. ']' → logprob: -3.672278881072998
    10. ',' → logprob: -3.922278881072998

Token 549: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19814331829547882
    2. 'max' → logprob: -2.073143243789673
    3. 'for' → logprob: -3.323143243789673
    4. 'n' → logprob: -5.323143482208252
    5. 'ans' → logprob: -5.573143482208252
    6. 'res' → logprob: -5.698143482208252
    7. '#' → logprob: -6.948143482208252
    8. 'from' → logprob: -6.948143482208252
    9. 'import' → logprob: -7.073143482208252
    10. 'l' → logprob: -7.198143482208252

Token 550: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23195210099220276
    2. 'for' → logprob: -1.7319520711898804
    3. 'max' → logprob: -3.85695219039917
    4. 'ans' → logprob: -5.98195219039917
    5. 'res' → logprob: -6.23195219039917
    6. '```' → logprob: -7.10695219039917
    7. 'from' → logprob: -7.23195219039917
    8. 'i' → logprob: -7.60695219039917
    9. 'n' → logprob: -7.85695219039917
    10. '#' → logprob: -8.231951713562012

Token 551: ' enumer' (ID: 21093)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3155345618724823
    2. ' for' → logprob: -2.5655345916748047
    3. ' ' → logprob: -3.0655345916748047
    4. '_' → logprob: -3.6905345916748047
    5. '```' → logprob: -3.6905345916748047
    6. 'n' → logprob: -4.190534591674805
    7. 'dp' → logprob: -4.190534591674805
    8. '   ' → logprob: -4.690534591674805
    9. ']' → logprob: -5.065534591674805
    10. '[' → logprob: -5.190534591674805

Token 552: 'ating' (ID: 1365)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.010162470862269402
    2. 'ating' → logprob: -4.760162353515625
    3. 'r' → logprob: -7.010162353515625
    4. 'rate' → logprob: -7.385162353515625
    5. 'ar' → logprob: -11.635162353515625
    6. '```' → logprob: -12.885162353515625
    7. 'rating' → logprob: -12.885162353515625
    8. 'aring' → logprob: -13.635162353515625
    9. 'brate' → logprob: -13.760162353515625
    10. 'range' → logprob: -13.885162353515625

Token 553: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5150949358940125
    2. ' all' → logprob: -1.1400949954986572
    3. '_' → logprob: -2.6400949954986572
    4. ' _' → logprob: -6.265094757080078
    5. '_all' → logprob: -6.390094757080078
    6. 'br' → logprob: -6.640094757080078
    7. 'the' → logprob: -6.890094757080078
    8. ' over' → logprob: -7.140094757080078
    9. ' the' → logprob: -7.390094757080078
    10. ' ' → logprob: -7.390094757080078

Token 554: ' B' (ID: 418)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.3292416334152222
    2. 'sub' → logprob: -1.4542416334152222
    3. '_sub' → logprob: -1.8292416334152222
    4. ' sub' → logprob: -2.4542417526245117
    5. '_' → logprob: -2.9542417526245117
    6. '_br' → logprob: -2.9542417526245117
    7. ' _' → logprob: -3.4542417526245117
    8. '[' → logprob: -3.7042417526245117
    9. '```' → logprob: -3.8292417526245117
    10. '_b' → logprob: -4.204241752624512

Token 555: '*(' (ID: 14793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8893693089485168
    2. '[j' → logprob: -0.8893693089485168
    3. '[i' → logprob: -2.764369249343872
    4. '**' → logprob: -3.264369249343872
    5. '+' → logprob: -3.764369249343872
    6. '[B' → logprob: -4.639369487762451
    7. '```' → logprob: -4.764369487762451
    8. '[:' → logprob: -5.264369487762451
    9. ':' → logprob: -5.889369487762451
    10. '[
' → logprob: -5.889369487762451

Token 556: 'B' (ID: 33)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8602412939071655
    2. 'B' → logprob: -1.3602412939071655
    3. '1' → logprob: -1.7352412939071655
    4. '+' → logprob: -2.360241413116455
    5. '2' → logprob: -3.735241413116455
    6. 'j' → logprob: -4.360241413116455
    7. '```' → logprob: -5.485241413116455
    8. ' ' → logprob: -5.610241413116455
    9. ' B' → logprob: -7.110241413116455
    10. 'br' → logprob: -7.360241413116455

Token 557: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08734524250030518
    2. ')' → logprob: -3.2123451232910156
    3. '**' → logprob: -3.5873451232910156
    4. '[' → logprob: -5.337345123291016
    5. ']' → logprob: -5.837345123291016
    6. '//' → logprob: -6.337345123291016
    7. '```' → logprob: -6.462345123291016
    8. '#' → logprob: -6.962345123291016
    9. '):' → logprob: -7.337345123291016
    10. ' +' → logprob: -7.962345123291016

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. ')' → logprob: -18.0
    4. '```' → logprob: -18.75
    5. 'B' → logprob: -20.25
    6. '2' → logprob: -20.75
    7. '=' → logprob: -21.25
    8. '​' → logprob: -21.5
    9. '１' → logprob: -21.5
    10. '

' → logprob: -21.875

Token 559: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11859382688999176
    2. '//' → logprob: -2.74359393119812
    3. '):' → logprob: -3.11859393119812
    4. '
' → logprob: -6.743593692779541
    5. '```' → logprob: -6.993593692779541
    6. '):
' → logprob: -8.3685941696167
    7. ':' → logprob: -9.1185941696167
    8. ' //' → logprob: -9.1185941696167
    9. ')//' → logprob: -9.1185941696167
    10. '+' → logprob: -9.1185941696167

Token 560: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23073738813400269
    2. '//' → logprob: -1.7307374477386475
    3. '_' → logprob: -4.230737209320068
    4. '+' → logprob: -5.980737209320068
    5. '**' → logprob: -6.230737209320068
    6. ' //' → logprob: -6.230737209320068
    7. '```' → logprob: -6.855737209320068
    8. '()' → logprob: -7.230737209320068
    9. '/' → logprob: -7.230737209320068
    10. '#' → logprob: -7.480737209320068

Token 561: ' sub' (ID: 1543)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06848655641078949
    2. ':' → logprob: -3.943486452102661
    3. '```' → logprob: -4.81848669052124
    4. '+' → logprob: -5.44348669052124
    5. '**' → logprob: -5.44348669052124
    6. 'tokens' → logprob: -5.44348669052124
    7. '<|end|>' → logprob: -5.94348669052124
    8. '
' → logprob: -5.94348669052124
    9. ']' → logprob: -6.31848669052124
    10. ',' → logprob: -6.56848669052124

Token 562: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.09454669803380966
    2. 'array' → logprob: -3.9695467948913574
    3. ')' → logprob: -4.469546794891357
    4. 'sets' → logprob: -4.594546794891357
    5. '
' → logprob: -4.844546794891357
    6. '[' → logprob: -4.844546794891357
    7. 'strings' → logprob: -4.969546794891357
    8. ']' → logprob: -4.969546794891357
    9. '
' → logprob: -5.469546794891357
    10. '[
' → logprob: -5.844546794891357

Token 563: ' will' (ID: 738)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6282942891120911
    2. '[' → logprob: -2.2532942295074463
    3. ':' → logprob: -3.0032942295074463
    4. '
' → logprob: -3.1282942295074463
    5. ' for' → logprob: -3.3782942295074463
    6. '[
' → logprob: -3.3782942295074463
    7. '[j' → logprob: -3.6282942295074463
    8. ',' → logprob: -3.7532942295074463
    9. ':
' → logprob: -3.8782942295074463
    10. '[i' → logprob: -3.8782942295074463

Token 564: ' be' (ID: 413)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0239986181259155
    2. ' be' → logprob: -2.023998737335205
    3. '```' → logprob: -2.523998737335205
    4. ' continue' → logprob: -2.648998737335205
    5. 'continue' → logprob: -2.773998737335205
    6. ')' → logprob: -3.023998737335205
    7. '*' → logprob: -3.273998737335205
    8. '``' → logprob: -3.523998737335205
    9. ' _' → logprob: -4.023998737335205
    10. '
' → logprob: -4.023998737335205

Token 565: ' O' (ID: 532)
  Prédit: ' too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.7609217762947083
    2. '
' → logprob: -1.6359217166900635
    3. 'too' → logprob: -3.1359217166900635
    4. '

' → logprob: -3.2609217166900635
    5. '*' → logprob: -3.5109217166900635
    6. ' feasible' → logprob: -3.6359217166900635
    7. '```' → logprob: -3.8859217166900635
    8. ')' → logprob: -4.385921955108643
    9. ':' → logprob: -4.385921955108643
    10. '+' → logprob: -4.635921955108643

Token 566: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.033474523574113846
    2. '(n' → logprob: -4.158474445343018
    3. '(' → logprob: -4.408474445343018
    4. '(
' → logprob: -6.533474445343018
    5. '(A' → logprob: -6.658474445343018
    6. '(N' → logprob: -7.033474445343018
    7. '((' → logprob: -7.408474445343018
    8. '(\' → logprob: -8.658474922180176
    9. '*' → logprob: -8.783474922180176
    10. 'n' → logprob: -9.283474922180176

Token 567: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.066028118133545
    2. '**' → logprob: -1.191028118133545
    3. '//' → logprob: -1.816028118133545
    4. '*' → logprob: -2.316028118133545
    5. '^' → logprob: -3.941028118133545
    6. ' //' → logprob: -4.441028118133545
    7. '
' → logprob: -4.566028118133545
    8. '[' → logprob: -4.691028118133545
    9. '```' → logprob: -4.941028118133545
    10. '+' → logprob: -5.066028118133545

Token 568: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4525669813156128
    2. '**' → logprob: -1.5775669813156128
    3. '*' → logprob: -1.9525669813156128
    4. '
' → logprob: -5.827567100524902
    5. ')' → logprob: -6.077567100524902
    6. '^' → logprob: -6.077567100524902
    7. ' *' → logprob: -6.452567100524902
    8. '```' → logprob: -6.702567100524902
    9. '*
' → logprob: -6.952567100524902
    10. '²' → logprob: -7.452567100524902

Token 569: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.903601348400116
    2. '[' → logprob: -1.4036014080047607
    3. '+' → logprob: -2.0286014080047607
    4. '[j' → logprob: -2.5286014080047607
    5. '```' → logprob: -2.7786014080047607
    6. '[
' → logprob: -4.653601169586182
    7. ' ' → logprob: -4.778601169586182
    8. ']' → logprob: -5.028601169586182
    9. '**' → logprob: -5.153601169586182
    10. '[i' → logprob: -5.153601169586182

Token 570: ' which' (ID: 1118)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3898923695087433
    2. ' for' → logprob: -1.514892339706421
    3. '#' → logprob: -2.889892339706421
    4. ')' → logprob: -4.764892578125
    5. '
' → logprob: -4.764892578125
    6. '```' → logprob: -4.764892578125
    7. 'dp' → logprob: -5.514892578125
    8. '.' → logprob: -6.014892578125
    9. '+
' → logprob: -6.139892578125
    10. '+' → logprob: -6.139892578125

Token 571: ' can' (ID: 665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10214924067258835
    2. '\n' → logprob: -2.977149248123169
    3. ' is' → logprob: -4.60214900970459
    4. ' would' → logprob: -4.97714900970459
    5. '```' → logprob: -5.35214900970459
    6. ' 
' → logprob: -5.60214900970459
    7. '+' → logprob: -6.10214900970459
    8. ' too' → logprob: -6.22714900970459
    9. ' will' → logprob: -6.35214900970459
    10. ' be' → logprob: -6.35214900970459

Token 572: ' be' (ID: 413)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.133424162864685
    2. ' be' → logprob: -1.633424162864685
    3. '``' → logprob: -1.758424162864685
    4. 'be' → logprob: -2.6334242820739746
    5. '```' → logprob: -3.1334242820739746
    6. ''' → logprob: -3.1334242820739746
    7. ' 
' → logprob: -3.5084242820739746
    8. '_' → logprob: -3.6334242820739746
    9. 'n' → logprob: -4.508424282073975
    10. '`' → logprob: -4.508424282073975

Token 573: ' up' (ID: 869)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3900381922721863
    2. 'done' → logprob: -2.640038251876831
    3. 'optimized' → logprob: -3.140038251876831
    4. ' done' → logprob: -3.265038251876831
    5. '``' → logprob: -3.390038251876831
    6. '
' → logprob: -3.640038251876831
    7. ')' → logprob: -4.640038013458252
    8. '`' → logprob: -4.765038013458252
    9. ' optimized' → logprob: -4.765038013458252
    10. ' avoided' → logprob: -4.765038013458252

Token 574: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.2481633424758911
    2. 'dates' → logprob: -1.3731633424758911
    3. '```' → logprob: -1.4981633424758911
    4. 'dated' → logprob: -2.8731632232666016
    5. '``' → logprob: -3.8731632232666016
    6. 'on' → logprob: -3.8731632232666016
    7. 'date' → logprob: -3.9981632232666016
    8. 'n' → logprob: -4.123163223266602
    9. 'grade' → logprob: -4.373163223266602
    10. 'bound' → logprob: -4.873163223266602

Token 575: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.963681161403656
    2. ' ' → logprob: -1.4636812210083008
    3. '10' → logprob: -1.8386812210083008
    4. '```' → logprob: -2.713681221008301
    5. 'B' → logprob: -3.088681221008301
    6. '5' → logprob: -3.838681221008301
    7. ' B' → logprob: -3.838681221008301
    8. '`' → logprob: -4.338681221008301
    9. 'O' → logprob: -4.713681221008301
    10. '1' → logprob: -4.713681221008301

Token 576: '25' (ID: 1161)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.02560289017856121
    2. '250' → logprob: -4.0256028175354
    3. '5' → logprob: -5.4006028175354
    4. '```' → logprob: -7.4006028175354
    5. '100' → logprob: -7.5256028175354
    6. '10' → logprob: -7.7756028175354
    7. '0' → logprob: -8.025603294372559
    8. '50' → logprob: -8.650603294372559
    9. '``' → logprob: -9.025603294372559
    10. '499' → logprob: -9.150603294372559

Token 577: ' million' (ID: 5749)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1226489394903183
    2. '0' → logprob: -2.8726489543914795
    3. '^' → logprob: -3.8726489543914795
    4. '*' → logprob: -4.1226487159729
    5. ' **' → logprob: -4.6226487159729
    6. '5' → logprob: -5.7476487159729
    7. ')' → logprob: -6.1226487159729
    8. '00' → logprob: -6.2476487159729
    9. ' *' → logprob: -6.8726487159729
    10. '000' → logprob: -6.9976487159729

Token 578: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11468033492565155
    2. 'for' → logprob: -2.614680290222168
    3. '```' → logprob: -4.989680290222168
    4. '#' → logprob: -5.114680290222168
    5. 'import' → logprob: -5.114680290222168
    6. 'max' → logprob: -5.489680290222168
    7. 'from' → logprob: -5.739680290222168
    8. '=' → logprob: -6.364680290222168
    9. ']' → logprob: -6.739680290222168
    10. ' =' → logprob: -7.114680290222168

Token 579: ' borderline' (ID: 185028)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23083552718162537
    2. ' for' → logprob: -2.105835437774658
    3. 'dp' → logprob: -3.105835437774658
    4. '```' → logprob: -4.480835437774658
    5. '#' → logprob: -4.730835437774658
    6. '
' → logprob: -5.605835437774658
    7. '\n' → logprob: -5.730835437774658
    8. 'import' → logprob: -6.730835437774658
    9. '\' → logprob: -6.855835437774658
    10. '[' → logprob: -6.980835437774658

Token 580: ' but' (ID: 889)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052828218787908554
    2. 'import' → logprob: -3.302828311920166
    3. 'for' → logprob: -5.302828311920166
    4. 'from' → logprob: -5.302828311920166
    5. 'max' → logprob: -6.427828311920166
    6. '#' → logprob: -6.677828311920166
    7. '```' → logprob: -7.802828311920166
    8. 'ans' → logprob: -7.927828311920166
    9. 'def' → logprob: -8.427827835083008
    10. 'n' → logprob: -8.677827835083008

Token 581: ' might' (ID: 3572)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8049759864807129
    2. ')' → logprob: -2.429975986480713
    3. 'for' → logprob: -2.554975986480713
    4. '[' → logprob: -2.804975986480713
    5. '\n' → logprob: -2.929975986480713
    6. 'br' → logprob: -3.054975986480713
    7. '
' → logprob: -3.804975986480713
    8. 'continue' → logprob: -3.929975986480713
    9. '+' → logprob: -4.054975986480713
    10. '0' → logprob: -4.554975986480713

Token 582: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7654886245727539
    2. '```' → logprob: -1.265488624572754
    3. ' continue' → logprob: -2.015488624572754
    4. 'continue' → logprob: -3.390488624572754
    5. 'be' → logprob: -3.640488624572754
    6. '``' → logprob: -3.765488624572754
    7. '+' → logprob: -4.140488624572754
    8. ')' → logprob: -4.515488624572754
    9. '[' → logprob: -5.765488624572754
    10. '_' → logprob: -7.515488624572754

Token 583: ' too' (ID: 3101)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07448398321866989
    2. '``' → logprob: -3.824483871459961
    3. '\n' → logprob: -4.824483871459961
    4. '\' → logprob: -5.074483871459961
    5. '`' → logprob: -5.449483871459961
    6. 'possible' → logprob: -5.574483871459961
    7. ')' → logprob: -5.824483871459961
    8. ' feasible' → logprob: -5.824483871459961
    9. 'fe' → logprob: -5.949483871459961
    10. 'acceptable' → logprob: -6.574483871459961

Token 584: ' slow' (ID: 9800)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45233920216560364
    2. '```' → logprob: -2.7023391723632812
    3. ' _' → logprob: -3.2023391723632812
    4. '``' → logprob: -3.3273391723632812
    5. '+' → logprob: -3.7023391723632812
    6. '[' → logprob: -3.8273391723632812
    7. '*' → logprob: -3.8273391723632812
    8. ' long' → logprob: -3.9523391723632812
    9. '[]' → logprob: -4.077339172363281
    10. ' slow' → logprob: -4.202339172363281

Token 585: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029329899698495865
    2. 'from' → logprob: -4.404329776763916
    3. 'import' → logprob: -4.529329776763916
    4. 'for' → logprob: -6.279329776763916
    5. '#' → logprob: -6.279329776763916
    6. 'max' → logprob: -7.029329776763916
    7. '```' → logprob: -8.029330253601074
    8. 'def' → logprob: -8.154330253601074
    9. 'n' → logprob: -8.904330253601074
    10. 'prev' → logprob: -9.279330253601074

Token 586: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25376302003860474
    2. '#' → logprob: -1.75376296043396
    3. 'for' → logprob: -3.37876296043396
    4. 'n' → logprob: -5.128763198852539
    5. 'from' → logprob: -5.878763198852539
    6. 'import' → logprob: -6.503763198852539
    7. '```' → logprob: -6.503763198852539
    8. 'max' → logprob: -6.878763198852539
    9. 'ans' → logprob: -7.003763198852539
    10. '\' → logprob: -7.878763198852539

Token 587: ' Optimize' (ID: 167174)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06339523941278458
    2. '#' → logprob: -3.1883952617645264
    3. 'from' → logprob: -4.438395023345947
    4. 'import' → logprob: -4.938395023345947
    5. 'max' → logprob: -8.313395500183105
    6. 'n' → logprob: -8.438395500183105
    7. 'def' → logprob: -8.563395500183105
    8. 'l' → logprob: -9.438395500183105
    9. 'mod' → logprob: -9.563395500183105
    10. 'br' → logprob: -9.563395500183105

Token 588: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1342303603887558
    2. 'from' → logprob: -2.759230375289917
    3. '#' → logprob: -3.009230375289917
    4. 'max' → logprob: -5.134230136871338
    5. 'import' → logprob: -5.634230136871338
    6. 'n' → logprob: -7.259230136871338
    7. 'def' → logprob: -7.259230136871338
    8. 'next' → logprob: -7.384230136871338
    9. 'prev' → logprob: -7.509230136871338
    10. 'mod' → logprob: -8.884230613708496

Token 589: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5151650309562683
    2. 'from' → logprob: -1.390165090560913
    3. 'dp' → logprob: -2.765165090560913
    4. 'import' → logprob: -2.890165090560913
    5. 'Use' → logprob: -4.015164852142334
    6. 'We' → logprob: -4.515164852142334
    7. 'To' → logprob: -6.890164852142334
    8. 'Let's' → logprob: -7.015164852142334
    9. 'One' → logprob: -7.265164852142334
    10. 'Since' → logprob: -7.640164852142334

Token 590: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06008875370025635
    2. 'from' → logprob: -3.185088634490967
    3. '#' → logprob: -4.685088634490967
    4. 'max' → logprob: -5.310088634490967
    5. 'prefix' → logprob: -7.185088634490967
    6. 'import' → logprob: -7.310088634490967
    7. 'prev' → logprob: -7.560088634490967
    8. 'l' → logprob: -8.435089111328125
    9. 'length' → logprob: -9.310089111328125
    10. 'br' → logprob: -9.560089111328125

Token 591: ' reverse' (ID: 18199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.03406196087598801
    2. 'build' → logprob: -4.659061908721924
    3. 'compute' → logprob: -4.659061908721924
    4. 'create' → logprob: -5.784061908721924
    5. 'dp' → logprob: -5.909061908721924
    6. 'pre' → logprob: -6.034061908721924
    7. 'define' → logprob: -6.659061908721924
    8. 'try' → logprob: -6.784061908721924
    9. 'initialize' → logprob: -7.284061908721924
    10. 'consider' → logprob: -7.409061908721924

Token 592: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7745026350021362
    2. 'br' → logprob: -1.2745026350021362
    3. 'anna' → logprob: -1.8995026350021362
    4. '#' → logprob: -2.774502754211426
    5. 'B' → logprob: -3.649502754211426
    6. 'A' → logprob: -4.774502754211426
    7. 'the' → logprob: -6.024502754211426
    8. '```' → logprob: -6.274502754211426
    9. 'range' → logprob: -6.899502754211426
    10. 'b' → logprob: -7.274502754211426

Token 593: ' roles' (ID: 18834)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.18874172866344452
    2. 'anna' → logprob: -2.063741683959961
    3. 'B' → logprob: -3.688741683959961
    4. 'for' → logprob: -4.438741683959961
    5. 'range' → logprob: -5.938741683959961
    6. '```' → logprob: -7.188741683959961
    7. 'Br' → logprob: -7.313741683959961
    8. 'b' → logprob: -7.438741683959961
    9. 'A' → logprob: -7.563741683959961
    10. 'ann' → logprob: -7.688741683959961

Token 594: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036366537678986788
    2. '#' → logprob: -6.128636837005615
    3. 'import' → logprob: -7.503636837005615
    4. 'from' → logprob: -7.628636837005615
    5. 'for' → logprob: -8.378636360168457
    6. 'max' → logprob: -9.128636360168457
    7. 'n' → logprob: -10.378636360168457
    8. 'prev' → logprob: -11.128636360168457
    9. '```' → logprob: -12.003636360168457
    10. 'br' → logprob: -12.628636360168457

Token 595: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04471603035926819
    2. 'from' → logprob: -4.169715881347656
    3. '#' → logprob: -4.294715881347656
    4. 'for' → logprob: -5.044715881347656
    5. 'import' → logprob: -5.544715881347656
    6. 'i' → logprob: -6.669715881347656
    7. 'max' → logprob: -7.044715881347656
    8. 'prev' → logprob: -7.419715881347656
    9. 'br' → logprob: -8.294715881347656
    10. '```' → logprob: -8.294715881347656

Token 596: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05395912751555443
    2. '#' → logprob: -3.1789591312408447
    3. 'from' → logprob: -4.803958892822266
    4. 'import' → logprob: -6.553958892822266
    5. 'for' → logprob: -6.803958892822266
    6. 'prev' → logprob: -10.053958892822266
    7. 'max' → logprob: -10.553958892822266
    8. 'Initialize' → logprob: -11.178958892822266
    9. 'We' → logprob: -11.303958892822266
    10. 'For' → logprob: -11.678958892822266

Token 597: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3117617964744568
    2. 'j' → logprob: -1.8117618560791016
    3. 'length' → logprob: -3.3117618560791016
    4. 'each' → logprob: -3.4367618560791016
    5. 'br' → logprob: -3.6867618560791016
    6. 'anna' → logprob: -5.311761856079102
    7. 'b' → logprob: -6.686761856079102
    8. 'l' → logprob: -6.936761856079102
    9. '```' → logprob: -7.436761856079102
    10. 'len' → logprob: -7.686761856079102

Token 598: ' ending' (ID: 22013)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7140647768974304
    2. 'j' → logprob: -0.7140647768974304
    3. 'br' → logprob: -4.714064598083496
    4. 'b' → logprob: -5.089064598083496
    5. 'length' → logprob: -5.839064598083496
    6. '```' → logprob: -6.339064598083496
    7. 'index' → logprob: -8.839064598083496
    8. 'a' → logprob: -8.964064598083496
    9. 'value' → logprob: -9.089064598083496
    10. 'for' → logprob: -9.214064598083496

Token 599: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6296023726463318
    2. '_' → logprob: -2.1296024322509766
    3. 'for' → logprob: -2.1296024322509766
    4. '```' → logprob: -3.0046024322509766
    5. ' for' → logprob: -3.2546024322509766
    6. '_j' → logprob: -3.6296024322509766
    7. '_i' → logprob: -3.7546024322509766
    8. ' in' → logprob: -4.254602432250977
    9. ' =' → logprob: -4.379602432250977
    10. '=' → logprob: -4.629602432250977

Token 600: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9574791193008423
    2. ' in' → logprob: -1.4574791193008423
    3. 'j' → logprob: -1.5824791193008423
    4. 'in' → logprob: -1.8324791193008423
    5. ' of' → logprob: -5.082479000091553
    6. 'br' → logprob: -5.957479000091553
    7. '_j' → logprob: -5.957479000091553
    8. 'of' → logprob: -6.582479000091553
    9. ',' → logprob: -6.957479000091553
    10. ' i' → logprob: -7.207479000091553

Token 601: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48210272192955017
    2. ' in' → logprob: -0.9821027517318726
    3. 's' → logprob: -5.607102870941162
    4. 'i' → logprob: -6.232102870941162
    5. ',' → logprob: -6.857102870941162
    6. '=' → logprob: -8.107102394104004
    7. 'for' → logprob: -8.607102394104004
    8. ' =' → logprob: -8.982102394104004
    9. 'of' → logprob: -9.357102394104004
    10. ' ' → logprob: -9.607102394104004

Token 602: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.12029264122247696
    2. 'anna' → logprob: -2.6202926635742188
    3. 'range' → logprob: -3.3702926635742188
    4. 'Br' → logprob: -6.620292663574219
    5. ' br' → logprob: -7.245292663574219
    6. ' anna' → logprob: -7.245292663574219
    7. 'ann' → logprob: -7.370292663574219
    8. 'Anna' → logprob: -7.495292663574219
    9. '```' → logprob: -7.620292663574219
    10. ' range' → logprob: -7.995292663574219

Token 603: ''s' (ID: 885)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2770470976829529
    2. 'for' → logprob: -2.2770471572875977
    3. ''s' → logprob: -2.9020471572875977
    4. ' for' → logprob: -3.2770471572875977
    5. 's' → logprob: -4.277047157287598
    6. ',' → logprob: -4.402047157287598
    7. '```' → logprob: -5.652047157287598
    8. ':
' → logprob: -6.152047157287598
    9. '[' → logprob: -6.527047157287598
    10. 'br' → logprob: -6.652047157287598

Token 604: ' cards' (ID: 10541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5451258420944214
    2. 'cards' → logprob: -1.0451258420944214
    3. 'br' → logprob: -3.795125961303711
    4. ' for' → logprob: -3.795125961303711
    5. 's' → logprob: -4.545125961303711
    6. ' cards' → logprob: -5.545125961303711
    7. ''s' → logprob: -5.795125961303711
    8. 'array' → logprob: -6.545125961303711
    9. '_cards' → logprob: -7.045125961303711
    10. '```' → logprob: -7.170125961303711

Token 605: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.697151243686676
    2. ' in' → logprob: -1.6971511840820312
    3. ',' → logprob: -2.0721511840820312
    4. 'for' → logprob: -2.3221511840820312
    5. ':' → logprob: -2.9471511840820312
    6. 'i' → logprob: -3.8221511840820312
    7. ' for' → logprob: -4.072151184082031
    8. ':
' → logprob: -7.822151184082031
    9. ' and' → logprob: -7.822151184082031
    10. '```' → logprob: -8.322151184082031

Token 606: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10522560030221939
    2. ' for' → logprob: -2.3552255630493164
    3. 'i' → logprob: -5.730225563049316
    4. 'dp' → logprob: -6.605225563049316
    5. ' i' → logprob: -8.855225563049316
    6. '   ' → logprob: -9.230225563049316
    7. ' dp' → logprob: -10.105225563049316
    8. '```' → logprob: -10.480225563049316
    9. '#' → logprob: -10.980225563049316
    10. 'import' → logprob: -11.105225563049316

Token 607: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6265591979026794
    2. ' can' → logprob: -1.2515592575073242
    3. ' for' → logprob: -2.126559257507324
    4. 'can' → logprob: -3.126559257507324
    5. ' will' → logprob: -5.251559257507324
    6. ':' → logprob: -5.376559257507324
    7. ''ll' → logprob: -6.376559257507324
    8. 'consider' → logprob: -6.376559257507324
    9. '#' → logprob: -6.501559257507324
    10. ' consider' → logprob: -8.376559257507324

Token 608: ' create' (ID: 2501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08138130605220795
    2. 'initialize' → logprob: -3.081381320953369
    3. ' for' → logprob: -5.331381320953369
    4. 'compute' → logprob: -5.456381320953369
    5. 'dp' → logprob: -5.456381320953369
    6. 'consider' → logprob: -5.456381320953369
    7. 'calculate' → logprob: -5.581381320953369
    8. 'use' → logprob: -6.081381320953369
    9. 'keep' → logprob: -6.456381320953369
    10. 'run' → logprob: -6.956381320953369

Token 609: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5793874263763428
    2. 'dp' → logprob: -0.8293874263763428
    3. ' a' → logprob: -5.954387664794922
    4. 'prev' → logprob: -7.954387664794922
    5. 'an' → logprob: -8.329387664794922
    6. ' dp' → logprob: -9.329387664794922
    7. '```' → logprob: -10.079387664794922
    8. ' an' → logprob: -10.579387664794922
    9. 'for' → logprob: -10.704387664794922
    10. '#' → logprob: -11.079387664794922

Token 610: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00013464801304508
    2. 'prev' → logprob: -9.500134468078613
    3. ' dp' → logprob: -10.875134468078613
    4. '2' → logprob: -11.500134468078613
    5. 'new' → logprob: -11.500134468078613
    6. 'for' → logprob: -12.125134468078613
    7. 'DP' → logprob: -12.375134468078613
    8. '#' → logprob: -12.750134468078613
    9. '```' → logprob: -13.125134468078613
    10. '1' → logprob: -13.500134468078613

Token 611: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.209028959274292
    2. 'dp' → logprob: -2.584028959274292
    3. ' =' → logprob: -2.834028959274292
    4. 'for' → logprob: -3.334028959274292
    5. '[' → logprob: -5.709029197692871
    6. '[i' → logprob: -6.084029197692871
    7. '=[' → logprob: -6.084029197692871
    8. '```' → logprob: -6.334029197692871
    9. ' for' → logprob: -6.709029197692871
    10. '_dp' → logprob: -6.834029197692871

Token 612: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20290875434875488
    2. 'for' → logprob: -2.327908754348755
    3. 'keep' → logprob: -3.827908754348755
    4. 'compute' → logprob: -4.077908515930176
    5. 'track' → logprob: -4.202908515930176
    6. ' find' → logprob: -4.702908515930176
    7. 'calculate' → logprob: -5.077908515930176
    8. 'match' → logprob: -5.452908515930176
    9. 'check' → logprob: -5.577908515930176
    10. 'extend' → logprob: -5.827908515930176

Token 613: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1184985414147377
    2. 'dp' → logprob: -3.3684985637664795
    3. ' the' → logprob: -3.4934985637664795
    4. 'for' → logprob: -3.8684985637664795
    5. 'length' → logprob: -4.9934983253479
    6. 'long' → logprob: -4.9934983253479
    7. 'max' → logprob: -6.1184983253479
    8. ',' → logprob: -6.6184983253479
    9. ' longest' → logprob: -6.6184983253479
    10. 'a' → logprob: -6.7434983253479

Token 614: ' longest' (ID: 37511)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.18251654505729675
    2. 'long' → logprob: -3.557516574859619
    3. 'l' → logprob: -3.682516574859619
    4. 'max' → logprob: -3.682516574859619
    5. 'dp' → logprob: -3.682516574859619
    6. 'k' → logprob: -4.182516574859619
    7. 'next' → logprob: -4.557516574859619
    8. 'maximum' → logprob: -5.057516574859619
    9. 'i' → logprob: -5.432516574859619
    10. 'current' → logprob: -5.557516574859619

Token 615: ' prefix' (ID: 18633)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6084771752357483
    2. 'common' → logprob: -1.4834771156311035
    3. 'for' → logprob: -3.2334771156311035
    4. 'match' → logprob: -3.3584771156311035
    5. 'token' → logprob: -3.3584771156311035
    6. '```' → logprob: -3.6084771156311035
    7. 'i' → logprob: -3.8584771156311035
    8. 'con' → logprob: -4.4834771156311035
    9. '_length' → logprob: -4.6084771156311035
    10. '[i' → logprob: -5.2334771156311035

Token 616: ' suffix' (ID: 43412)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9667445421218872
    2. ' of' → logprob: -1.5917445421218872
    3. 'length' → logprob: -1.5917445421218872
    4. 's' → logprob: -3.0917444229125977
    5. '_length' → logprob: -3.0917444229125977
    6. 'of' → logprob: -3.5917444229125977
    7. ' anna' → logprob: -4.216744422912598
    8. ' matching' → logprob: -4.466744422912598
    9. ' lengths' → logprob: -4.466744422912598
    10. '_lengths' → logprob: -4.716744422912598

Token 617: ' matching' (ID: 20238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5105552673339844
    2. 'dp' → logprob: -1.5105552673339844
    3. '=' → logprob: -2.0105552673339844
    4. ']' → logprob: -2.5105552673339844
    5. '[' → logprob: -2.8855552673339844
    6. 'anna' → logprob: -3.0105552673339844
    7. ' =' → logprob: -3.3855552673339844
    8. '```' → logprob: -3.6355552673339844
    9. '_dp' → logprob: -3.8855552673339844
    10. 's' → logprob: -4.135555267333984

Token 618: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7734130024909973
    2. '=' → logprob: -2.5234129428863525
    3. ' for' → logprob: -2.5234129428863525
    4. '[' → logprob: -2.5234129428863525
    5. ' =' → logprob: -2.6484129428863525
    6. '_' → logprob: -3.3984129428863525
    7. ' ' → logprob: -3.5234129428863525
    8. 's' → logprob: -3.7734129428863525
    9. '```' → logprob: -4.023413181304932
    10. ']' → logprob: -4.523413181304932

Token 619: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27940621972084045
    2. 'dp' → logprob: -2.0294063091278076
    3. ' for' → logprob: -4.0294060707092285
    4. '[' → logprob: -4.2794060707092285
    5. '```' → logprob: -4.2794060707092285
    6. ']' → logprob: -4.6544060707092285
    7. '=' → logprob: -4.6544060707092285
    8. ' ' → logprob: -5.0294060707092285
    9. 'd' → logprob: -5.0294060707092285
    10. '   ' → logprob: -5.1544060707092285

Token 620: ' Here's' (ID: 44257)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01156019326299429
    2. 'for' → logprob: -4.886559963226318
    3. 'n' → logprob: -6.886559963226318
    4. 'd' → logprob: -7.261559963226318
    5. 'i' → logprob: -7.886559963226318
    6. '```' → logprob: -8.011560440063477
    7. '   ' → logprob: -8.386560440063477
    8. ' for' → logprob: -9.136560440063477
    9. '=' → logprob: -9.136560440063477
    10. '#' → logprob: -9.386560440063477

Token 621: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9216296076774597
    2. 'the' → logprob: -1.2966296672821045
    3. 'dp' → logprob: -1.6716296672821045
    4. '```' → logprob: -2.6716296672821045
    5. 'an' → logprob: -3.6716296672821045
    6. 'br' → logprob: -4.046629428863525
    7. 'code' → logprob: -4.921629428863525
    8. ' code' → logprob: -5.046629428863525
    9. ' the' → logprob: -5.421629428863525
    10. ' a' → logprob: -5.671629428863525

Token 622: ' better' (ID: 3432)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03358195722103119
    2. 'def' → logprob: -4.033581733703613
    3. 'for' → logprob: -5.158581733703613
    4. '```' → logprob: -5.908581733703613
    5. '#' → logprob: -6.408581733703613
    6. 'import' → logprob: -6.533581733703613
    7. '
' → logprob: -6.658581733703613
    8. 'possible' → logprob: -7.033581733703613
    9. 'from' → logprob: -7.408581733703613
    10. 'python' → logprob: -8.408581733703613

Token 623: ' idea' (ID: 6056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9085333943367004
    2. 'appro' → logprob: -1.4085333347320557
    3. '```' → logprob: -1.9085333347320557
    4. ' approach' → logprob: -2.2835333347320557
    5. 'dp' → logprob: -4.408533573150635
    6. 'answer' → logprob: -4.658533573150635
    7. 'solution' → logprob: -4.908533573150635
    8. 'idea' → logprob: -5.033533573150635
    9. 'way' → logprob: -5.158533573150635
    10. 'length' → logprob: -5.408533573150635

Token 624: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004903312306851149
    2. 'from' → logprob: -5.629903316497803
    3. 'for' → logprob: -7.129903316497803
    4. '#' → logprob: -8.254902839660645
    5. 'max' → logprob: -9.504902839660645
    6. 'l' → logprob: -10.129902839660645
    7. 'prev' → logprob: -10.379902839660645
    8. 'prefix' → logprob: -10.754902839660645
    9. 'import' → logprob: -10.879902839660645
    10. 'length' → logprob: -11.504902839660645

Token 625: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028793200850486755
    2. 'from' → logprob: -3.7787930965423584
    3. '#' → logprob: -5.7787933349609375
    4. 'import' → logprob: -6.4037933349609375
    5. 'l' → logprob: -7.7787933349609375
    6. 'prev' → logprob: -9.153793334960938
    7. 'max' → logprob: -9.403793334960938
    8. 'next' → logprob: -9.653793334960938
    9. 'pos' → logprob: -10.653793334960938
    10. 'length' → logprob: -10.778793334960938

Token 626: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003570372937247157
    2. 'from' → logprob: -6.128570556640625
    3. '#' → logprob: -6.753570556640625
    4. 'prev' → logprob: -9.253570556640625
    5. 'import' → logprob: -9.628570556640625
    6. 'l' → logprob: -10.503570556640625
    7. 'prefix' → logprob: -12.003570556640625
    8. 'for' → logprob: -12.128570556640625
    9. 'next' → logprob: -12.128570556640625
    10. 'n' → logprob: -12.628570556640625

Token 627: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.708561897277832
    2. 'length' → logprob: -1.708561897277832
    3. 'j' → logprob: -1.958561897277832
    4. 'l' → logprob: -2.958561897277832
    5. 'br' → logprob: -3.208561897277832
    6. 'dp' → logprob: -3.333561897277832
    7. 'b' → logprob: -3.708561897277832
    8. 'len' → logprob: -4.833561897277832
    9. 'each' → logprob: -5.458561897277832
    10. 'val' → logprob: -5.583561897277832

Token 628: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04587565362453461
    2. 'i' → logprob: -3.4208755493164062
    3. 'br' → logprob: -5.170875549316406
    4. 'b' → logprob: -5.670875549316406
    5. '```' → logprob: -6.045875549316406
    6. 'length' → logprob: -8.045875549316406
    7. 'for' → logprob: -9.295875549316406
    8. ' j' → logprob: -9.920875549316406
    9. '`' → logprob: -9.920875549316406
    10. '   ' → logprob: -10.420875549316406

Token 629: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1310513019561768
    2. ' in' → logprob: -1.6310513019561768
    3. 'in' → logprob: -1.6310513019561768
    4. 'j' → logprob: -1.8810513019561768
    5. ' i' → logprob: -3.2560513019561768
    6. '=' → logprob: -3.7560513019561768
    7. '```' → logprob: -4.006051063537598
    8. '[' → logprob: -4.506051063537598
    9. ',' → logprob: -4.756051063537598
    10. 'br' → logprob: -5.381051063537598

Token 630: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.30843156576156616
    2. 'anna' → logprob: -1.433431625366211
    3. 'range' → logprob: -4.183431625366211
    4. ' anna' → logprob: -5.433431625366211
    5. ' br' → logprob: -6.183431625366211
    6. 'ann' → logprob: -6.558431625366211
    7. ' range' → logprob: -6.933431625366211
    8. 'Br' → logprob: -7.183431625366211
    9. 'Anna' → logprob: -7.558431625366211
    10. '```' → logprob: -7.933431625366211

Token 631: ',' (ID: 11)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1600523740053177
    2. '[i' → logprob: -3.0350522994995117
    3. '[' → logprob: -3.4100522994995117
    4. 'for' → logprob: -3.4100522994995117
    5. ''s' → logprob: -3.9100522994995117
    6. ' for' → logprob: -5.910052299499512
    7. 'j' → logprob: -6.535052299499512
    8. ' [' → logprob: -6.660052299499512
    9. 'br' → logprob: -6.660052299499512
    10. ' =' → logprob: -6.785052299499512

Token 632: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25330638885498047
    2. ' for' → logprob: -1.5033063888549805
    3. '```' → logprob: -7.3783063888549805
    4. ' we' → logprob: -8.62830638885498
    5. 'br' → logprob: -8.75330638885498
    6. 'from' → logprob: -8.87830638885498
    7. ' ' → logprob: -10.37830638885498
    8. '
' → logprob: -10.37830638885498
    9. '   ' → logprob: -10.37830638885498
    10. '#' → logprob: -10.62830638885498

Token 633: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08069346100091934
    2. 'each' → logprob: -3.080693483352661
    3. ' for' → logprob: -3.705693483352661
    4. ' each' → logprob: -5.830693244934082
    5. 'br' → logprob: -6.205693244934082
    6. 'anna' → logprob: -7.580693244934082
    7. 'length' → logprob: -8.330693244934082
    8. 'range' → logprob: -8.580693244934082
    9. 'j' → logprob: -8.705693244934082
    10. ' anna' → logprob: -8.705693244934082

Token 634: ' l' (ID: 305)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40207576751708984
    2. ' =' → logprob: -1.1520757675170898
    3. ' in' → logprob: -5.65207576751709
    4. 's' → logprob: -6.15207576751709
    5. 'for' → logprob: -6.15207576751709
    6. ' ' → logprob: -6.52707576751709
    7. '```' → logprob: -6.77707576751709
    8. 'from' → logprob: -6.90207576751709
    9. ' for' → logprob: -7.40207576751709
    10. '   ' → logprob: -8.15207576751709

Token 635: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40344658493995667
    2. '=' → logprob: -1.2784465551376343
    3. ' ' → logprob: -3.153446674346924
    4. ':' → logprob: -6.028446674346924
    5. ',' → logprob: -6.153446674346924
    6. 's' → logprob: -6.528446674346924
    7. '```' → logprob: -6.653446674346924
    8. ' in' → logprob: -6.903446674346924
    9. 'for' → logprob: -7.028446674346924
    10. '   ' → logprob: -8.278446197509766

Token 636: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06302214413881302
    2. 'for' → logprob: -2.9380221366882324
    3. ' we' → logprob: -5.938022136688232
    4. '   ' → logprob: -6.063022136688232
    5. ' j' → logprob: -7.188022136688232
    6. ' if' → logprob: -7.438022136688232
    7. ' br' → logprob: -7.563022136688232
    8. ' ' → logprob: -8.31302261352539
    9. ' ' → logprob: -8.43802261352539
    10. 'br' → logprob: -8.81302261352539

Token 637: ' consider' (ID: 3331)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.3317821025848389
    2. 'can' → logprob: -1.4567821025848389
    3. 'for' → logprob: -1.7067821025848389
    4. '=' → logprob: -1.8317821025848389
    5. ' =' → logprob: -2.081782102584839
    6. '#' → logprob: -4.331782341003418
    7. ' for' → logprob: -4.706782341003418
    8. 'consider' → logprob: -6.331782341003418
    9. 'could' → logprob: -6.706782341003418
    10. ':' → logprob: -6.706782341003418

Token 638: ' the' (ID: 290)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.574713110923767
    2. '```' → logprob: -1.824713110923767
    3. 'B' → logprob: -2.1997132301330566
    4. '1' → logprob: -2.3247132301330566
    5. 'for' → logprob: -2.4497132301330566
    6. 'l' → logprob: -2.6997132301330566
    7. ' ' → logprob: -2.6997132301330566
    8. ' for' → logprob: -2.8247132301330566
    9. '   ' → logprob: -3.6997132301330566
    10. ' B' → logprob: -3.9497132301330566

Token 639: ' sub' (ID: 1543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42152640223503113
    2. 'if' → logprob: -2.2965264320373535
    3. 'br' → logprob: -2.2965264320373535
    4. ' for' → logprob: -2.6715264320373535
    5. ' if' → logprob: -3.9215264320373535
    6. 'l' → logprob: -4.4215264320373535
    7. '```' → logprob: -4.6715264320373535
    8. ' br' → logprob: -5.4215264320373535
    9. 'length' → logprob: -5.6715264320373535
    10. 'range' → logprob: -5.6715264320373535

Token 640: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.15913380682468414
    2. 'arr' → logprob: -2.6591339111328125
    3. '_' → logprob: -3.5341339111328125
    4. 'br' → logprob: -4.2841339111328125
    5. 'arra' → logprob: -4.4091339111328125
    6. ' =' → logprob: -5.6591339111328125
    7. 'sequence' → logprob: -5.9091339111328125
    8. 'arry' → logprob: -5.9091339111328125
    9. 'ar' → logprob: -6.1591339111328125
    10. '_array' → logprob: -6.5341339111328125

Token 641: ' br' (ID: 1294)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5507523417472839
    2. '=' → logprob: -1.1757524013519287
    3. '[' → logprob: -2.8007524013519287
    4. '[j' → logprob: -3.6757524013519287
    5. '```' → logprob: -4.67575216293335
    6. 's' → logprob: -5.42575216293335
    7. '[i' → logprob: -6.17575216293335
    8. ',' → logprob: -6.30075216293335
    9. 'br' → logprob: -6.42575216293335
    10. '[
' → logprob: -6.55075216293335

Token 642: 'uno' (ID: 12811)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016865283250808716
    2. '[j' → logprob: -5.016865253448486
    3. 'ru' → logprob: -5.641865253448486
    4. '[' → logprob: -5.891865253448486
    5. '[]' → logprob: -6.766865253448486
    6. 'rono' → logprob: -7.141865253448486
    7. 'run' → logprob: -7.516865253448486
    8. '[r' → logprob: -8.391865730285645
    9. 'ruk' → logprob: -8.766865730285645
    10. '[i' → logprob: -9.141865730285645

Token 643: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11150263249874115
    2. '[j' → logprob: -2.6115026473999023
    3. '[
' → logprob: -4.236502647399902
    4. '[l' → logprob: -4.486502647399902
    5. '```' → logprob: -6.236502647399902
    6. '[i' → logprob: -6.361502647399902
    7. '_' → logprob: -7.236502647399902
    8. 's' → logprob: -7.736502647399902
    9. '[_' → logprob: -8.111502647399902
    10. '\[' → logprob: -8.736502647399902

Token 644: '-l' (ID: 2887)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.17812861502170563
    2. '][' → logprob: -2.803128719329834
    3. '[' → logprob: -3.053128719329834
    4. ']' → logprob: -3.678128719329834
    5. ':j' → logprob: -4.428128719329834
    6. ':' → logprob: -4.803128719329834
    7. '+' → logprob: -6.053128719329834
    8. '[
' → logprob: -6.428128719329834
    9. '-' → logprob: -6.553128719329834
    10. '+j' → logprob: -6.553128719329834

Token 645: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6096403002738953
    2. ']' → logprob: -1.73464035987854
    3. ':j' → logprob: -1.98464035987854
    4. ':' → logprob: -3.23464035987854
    5. '[j' → logprob: -3.60964035987854
    6. ':]' → logprob: -3.98464035987854
    7. '1' → logprob: -4.234640121459961
    8. 'en' → logprob: -4.734640121459961
    9. ']+' → logprob: -4.734640121459961
    10. 'j' → logprob: -5.109640121459961

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008773515932261944
    2. 'l' → logprob: -4.758773326873779
    3. ']' → logprob: -9.258773803710938
    4. ' l' → logprob: -10.633773803710938
    5. ' ' → logprob: -10.758773803710938
    6. 'length' → logprob: -12.133773803710938
    7. '```' → logprob: -12.508773803710938
    8. '`' → logprob: -13.383773803710938
    9. 'j' → logprob: -14.133773803710938
    10. '+' → logprob: -14.258773803710938

Token 647: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2873079478740692
    2. ':j' → logprob: -1.9123079776763916
    3. ':' → logprob: -2.9123079776763916
    4. '[j' → logprob: -4.0373077392578125
    5. '+' → logprob: -4.5373077392578125
    6. ':]' → logprob: -5.0373077392578125
    7. '][' → logprob: -5.4123077392578125
    8. '+j' → logprob: -6.0373077392578125
    9. '],' → logprob: -6.1623077392578125
    10. '```' → logprob: -6.9123077392578125

Token 648: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16640658676624298
    2. 'l' → logprob: -1.9164066314697266
    3. ']' → logprob: -5.541406631469727
    4. ':j' → logprob: -7.166406631469727
    5. '```' → logprob: -7.666406631469727
    6. '[j' → logprob: -8.416406631469727
    7. '...' → logprob: -8.666406631469727
    8. ' j' → logprob: -9.291406631469727
    9. '+' → logprob: -9.541406631469727
    10. ':l' → logprob: -9.791406631469727

Token 649: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38365548849105835
    2. ']:' → logprob: -1.2586555480957031
    3. ']:
' → logprob: -4.133655548095703
    4. '],' → logprob: -4.633655548095703
    5. '+' → logprob: -5.508655548095703
    6. ']+' → logprob: -6.508655548095703
    7. '])' → logprob: -7.508655548095703
    8. ']):' → logprob: -7.633655548095703
    9. ']
' → logprob: -7.758655548095703
    10. ']==' → logprob: -7.883655548095703

Token 650: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6224329471588135
    2. ':' → logprob: -1.7474329471588135
    3. ' for' → logprob: -1.9974329471588135
    4. '[' → logprob: -2.9974329471588135
    5. ' ' → logprob: -3.2474329471588135
    6. '   ' → logprob: -4.122432708740234
    7. ',' → logprob: -4.872432708740234
    8. ':
' → logprob: -4.872432708740234
    9. '=' → logprob: -4.872432708740234
    10. ' =' → logprob: -5.872432708740234

Token 651: ' Then' (ID: 7801)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6154155731201172
    2. 'max' → logprob: -1.3654155731201172
    3. 'for' → logprob: -1.7404155731201172
    4. 'res' → logprob: -3.865415573120117
    5. 'ans' → logprob: -5.115415573120117
    6. 'from' → logprob: -7.615415573120117
    7. 'l' → logprob: -8.115415573120117
    8. 'result' → logprob: -8.240415573120117
    9. 'answer' → logprob: -8.365415573120117
    10. '#' → logprob: -8.490415573120117

Token 652: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40821146965026855
    2. 'dp' → logprob: -1.1582114696502686
    3. '#' → logprob: -4.408211708068848
    4. '```' → logprob: -5.533211708068848
    5. 'l' → logprob: -6.658211708068848
    6. 'max' → logprob: -6.783211708068848
    7. '   ' → logprob: -7.658211708068848
    8. 'length' → logprob: -7.783211708068848
    9. '``' → logprob: -8.033211708068848
    10. 'prev' → logprob: -8.283211708068848

Token 653: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2504669427871704
    2. 'dp' → logprob: -1.6254669427871704
    3. '#' → logprob: -4.500466823577881
    4. 'max' → logprob: -5.250466823577881
    5. 'l' → logprob: -6.250466823577881
    6. 'prefix' → logprob: -6.500466823577881
    7. ' for' → logprob: -6.875466823577881
    8. 'res' → logprob: -7.125466823577881
    9. 'prev' → logprob: -7.375466823577881
    10. 'pos' → logprob: -7.875466823577881

Token 654: ' all' (ID: 722)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006963062100112438
    2. 'length' → logprob: -5.00696325302124
    3. 'len' → logprob: -9.131962776184082
    4. ' l' → logprob: -9.506962776184082
    5. ' length' → logprob: -11.381962776184082
    6. '```' → logprob: -11.381962776184082
    7. 'la' → logprob: -11.881962776184082
    8. 'each' → logprob: -12.006962776184082
    9. ' anna' → logprob: -12.006962776184082
    10. 'leng' → logprob: -12.131962776184082

Token 655: ' positions' (ID: 15897)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08205197006464005
    2. 'length' → logprob: -2.582051992416382
    3. 'j' → logprob: -6.457051753997803
    4. '```' → logprob: -7.582051753997803
    5. 'br' → logprob: -7.832051753997803
    6. 'len' → logprob: -8.707052230834961
    7. 'i' → logprob: -8.707052230834961
    8. 'leng' → logprob: -9.582052230834961
    9. ' length' → logprob: -9.957052230834961
    10. ' l' → logprob: -9.957052230834961

Token 656: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0152586698532104
    2. 'i' → logprob: -1.5152586698532104
    3. 'in' → logprob: -1.5152586698532104
    4. 'j' → logprob: -3.0152587890625
    5. 'for' → logprob: -3.1402587890625
    6. ',' → logprob: -3.5152587890625
    7. ' i' → logprob: -3.7652587890625
    8. '```' → logprob: -4.3902587890625
    9. ' for' → logprob: -4.5152587890625
    10. 'br' → logprob: -4.7652587890625

Token 657: ' Anna' (ID: 34101)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.39093947410583496
    2. 'anna' → logprob: -1.265939474105835
    3. 'range' → logprob: -3.265939474105835
    4. '```' → logprob: -6.515939712524414
    5. 'Anna' → logprob: -7.765939712524414
    6. 'ann' → logprob: -7.890939712524414
    7. ' anna' → logprob: -8.140939712524414
    8. 'ana' → logprob: -8.390939712524414
    9. 'Br' → logprob: -9.265939712524414
    10. '``' → logprob: -9.890939712524414

Token 658: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.142114281654358
    2. 'for' → logprob: -1.142114281654358
    3. '[i' → logprob: -1.642114281654358
    4. '[' → logprob: -2.5171141624450684
    5. ' for' → logprob: -3.6421141624450684
    6. '```' → logprob: -4.517114162445068
    7. ',' → logprob: -5.017114162445068
    8. '=' → logprob: -5.017114162445068
    9. ' =' → logprob: -5.142114162445068
    10. '[j' → logprob: -5.642114162445068

Token 659: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7210476398468018
    2. 'dp' → logprob: -1.2210476398468018
    3. ' for' → logprob: -1.9710476398468018
    4. '   ' → logprob: -4.096047401428223
    5. '```' → logprob: -4.096047401428223
    6. 'if' → logprob: -4.596047401428223
    7. '#' → logprob: -4.971047401428223
    8. ' dp' → logprob: -5.096047401428223
    9. ' if' → logprob: -5.471047401428223
    10. '       ' → logprob: -5.596047401428223

Token 660: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.132780909538269
    2. 'can' → logprob: -1.382780909538269
    3. ' can' → logprob: -1.507780909538269
    4. '=' → logprob: -2.3827810287475586
    5. 'continue' → logprob: -3.1327810287475586
    6. '#' → logprob: -4.382781028747559
    7. ' =' → logprob: -4.632781028747559
    8. ' for' → logprob: -4.757781028747559
    9. 'match' → logprob: -5.257781028747559
    10. 'consider' → logprob: -5.257781028747559

Token 661: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8667163252830505
    2. '```' → logprob: -0.9917163252830505
    3. 'br' → logprob: -2.8667163848876953
    4. ' if' → logprob: -2.9917163848876953
    5. 'for' → logprob: -3.6167163848876953
    6. '   ' → logprob: -3.7417163848876953
    7. 'anna' → logprob: -4.366716384887695
    8. '[' → logprob: -5.116716384887695
    9. ' ' → logprob: -5.491716384887695
    10. '`' → logprob: -5.991716384887695

Token 662: ' the' (ID: 290)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.4149159789085388
    2. 'anna' → logprob: -1.1649160385131836
    3. ' anna' → logprob: -4.914916038513184
    4. ' br' → logprob: -5.289916038513184
    5. '```' → logprob: -5.539916038513184
    6. 'l' → logprob: -6.039916038513184
    7. '   ' → logprob: -6.164916038513184
    8. ' ' → logprob: -6.539916038513184
    9. ' ' → logprob: -7.164916038513184
    10. 'dp' → logprob: -7.289916038513184

Token 663: ' sub' (ID: 1543)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45299145579338074
    2. 'br' → logprob: -2.077991485595703
    3. 'dp' → logprob: -2.077991485595703
    4. 'for' → logprob: -3.577991485595703
    5. 'anna' → logprob: -4.202991485595703
    6. '```' → logprob: -4.202991485595703
    7. 'l' → logprob: -4.452991485595703
    8. 'current' → logprob: -4.702991485595703
    9. 'next' → logprob: -4.702991485595703
    10. 'length' → logprob: -4.827991485595703

Token 664: 'array' (ID: 3361)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8233600854873657
    2. '[' → logprob: -1.3233600854873657
    3. '[i' → logprob: -1.9483600854873657
    4. '   ' → logprob: -3.948359966278076
    5. 'br' → logprob: -3.948359966278076
    6. ' [' → logprob: -4.198359966278076
    7. ']' → logprob: -4.323359966278076
    8. '[]' → logprob: -4.448359966278076
    9. '[
' → logprob: -4.698359966278076
    10. '	' → logprob: -4.948359966278076

Token 665: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6668679118156433
    2. '[j' → logprob: -1.041867971420288
    3. '```' → logprob: -2.791867971420288
    4. 'br' → logprob: -3.916867971420288
    5. '[i' → logprob: -4.541867733001709
    6. '[
' → logprob: -5.291867733001709
    7. ' [' → logprob: -5.666867733001709
    8. '`' → logprob: -5.791867733001709
    9. ' is' → logprob: -5.916867733001709
    10. '   ' → logprob: -5.916867733001709

Token 666: ' subse' (ID: 19874)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.5285998582839966
    2. 'found' → logprob: -1.7785998582839966
    3. ' anna' → logprob: -1.7785998582839966
    4. 'in' → logprob: -2.028599739074707
    5. 'anna' → logprob: -2.403599739074707
    6. 'a' → logprob: -2.903599739074707
    7. ' a' → logprob: -3.528599739074707
    8. ' found' → logprob: -3.903599739074707
    9. '```' → logprob: -4.028599739074707
    10. 'present' → logprob: -4.278599739074707

Token 667: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.010040796361863613
    2. 'q' → logprob: -5.260040760040283
    3. 'sequence' → logprob: -5.510040760040283
    4. 'quences' → logprob: -7.885040760040283
    5. '```' → logprob: -9.385041236877441
    6. '_sequence' → logprob: -9.885041236877441
    7. '[]' → logprob: -9.885041236877441
    8. '_' → logprob: -10.010041236877441
    9. 'qu' → logprob: -10.385041236877441
    10. 'QUENCE' → logprob: -10.885041236877441

Token 668: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5288414359092712
    2. '=' → logprob: -2.653841495513916
    3. ' for' → logprob: -2.903841495513916
    4. ']' → logprob: -2.903841495513916
    5. 'dp' → logprob: -3.278841495513916
    6. '[
' → logprob: -3.278841495513916
    7. ' =' → logprob: -3.528841495513916
    8. ')' → logprob: -3.903841495513916
    9. '
' → logprob: -4.028841495513916
    10. '```' → logprob: -4.403841495513916

Token 669: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.03823702409863472
    2. ' anna' → logprob: -3.2882370948791504
    3. 'br' → logprob: -8.913236618041992
    4. 'Anna' → logprob: -11.038236618041992
    5. ' ' → logprob: -11.163236618041992
    6. ' Anna' → logprob: -11.663236618041992
    7. '```' → logprob: -12.038236618041992
    8. 'ana' → logprob: -12.663236618041992
    9. ' ' → logprob: -12.788236618041992
    10. 'anne' → logprob: -13.163236618041992

Token 670: ''s' (ID: 885)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5669382810592651
    2. 'for' → logprob: -0.9419382810592651
    3. 'max' → logprob: -4.316938400268555
    4. '
' → logprob: -5.066938400268555
    5. ' for' → logprob: -5.191938400268555
    6. 'from' → logprob: -6.566938400268555
    7. '#' → logprob: -6.816938400268555
    8. ' =' → logprob: -6.941938400268555
    9. '][' → logprob: -6.941938400268555
    10. '=' → logprob: -6.941938400268555

Token 671: ' cards' (ID: 10541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6172923445701599
    2. '[
' → logprob: -2.4922924041748047
    3. '[' → logprob: -2.7422924041748047
    4. ']' → logprob: -2.9922924041748047
    5. '```' → logprob: -3.1172924041748047
    6. '_' → logprob: -3.1172924041748047
    7. '[j' → logprob: -3.3672924041748047
    8. '[i' → logprob: -3.7422924041748047
    9. ' for' → logprob: -3.8672924041748047
    10. '=' → logprob: -4.242292404174805

Token 672: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10712839663028717
    2. 'dp' → logprob: -2.482128381729126
    3. 'max' → logprob: -5.357128620147705
    4. ' for' → logprob: -5.732128620147705
    5. '#' → logprob: -6.357128620147705
    6. 'n' → logprob: -6.982128620147705
    7. 'from' → logprob: -7.107128620147705
    8. 'ans' → logprob: -7.232128620147705
    9. 'l' → logprob: -7.232128620147705
    10. 'i' → logprob: -7.482128620147705

Token 673: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2272725105285645
    2. 'pos' → logprob: -1.8522725105285645
    3. 'import' → logprob: -1.9772725105285645
    4. 'next' → logprob: -2.1022725105285645
    5. 'from' → logprob: -2.2272725105285645
    6. '#' → logprob: -2.6022725105285645
    7. 'n' → logprob: -3.2272725105285645
    8. 'p' → logprob: -3.8522725105285645
    9. 'for' → logprob: -4.2272725105285645
    10. 'def' → logprob: -4.7272725105285645

Token 674: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3295462429523468
    2. 'for' → logprob: -1.8295462131500244
    3. 'from' → logprob: -2.7045462131500244
    4. '#' → logprob: -4.0795464515686035
    5. 'next' → logprob: -4.3295464515686035
    6. 'pos' → logprob: -5.2045464515686035
    7. 'import' → logprob: -5.3295464515686035
    8. 'n' → logprob: -5.4545464515686035
    9. 'def' → logprob: -5.9545464515686035
    10. 'prefix' → logprob: -6.3295464515686035

Token 675: ' Anna' (ID: 34101)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.8153319358825684
    2. '```' → logprob: -1.1903319358825684
    3. 'l' → logprob: -3.0653319358825684
    4. 'len' → logprob: -3.4403319358825684
    5. 'sub' → logprob: -3.5653319358825684
    6. '   ' → logprob: -3.5653319358825684
    7. 'for' → logprob: -3.6903319358825684
    8. 'j' → logprob: -4.065331935882568
    9. 'b' → logprob: -4.565331935882568
    10. 'anna' → logprob: -5.065331935882568

Token 676: ' can' (ID: 665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2675238847732544
    2. 'can' → logprob: -1.6425238847732544
    3. ''s' → logprob: -2.142523765563965
    4. '[i' → logprob: -2.267523765563965
    5. '_can' → logprob: -2.267523765563965
    6. ''' → logprob: -3.142523765563965
    7. '_' → logprob: -3.267523765563965
    8. ' can' → logprob: -3.892523765563965
    9. '[j' → logprob: -4.392523765563965
    10. '_length' → logprob: -4.767523765563965

Token 677: ' remove' (ID: 6234)
  Prédit: 'discard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'discard' → logprob: -0.12418479472398758
    2. 'skip' → logprob: -3.3741848468780518
    3. 'keep' → logprob: -3.9991848468780518
    4. 'remove' → logprob: -4.624184608459473
    5. 'use' → logprob: -4.749184608459473
    6. 'only' → logprob: -4.874184608459473
    7. 'find' → logprob: -4.999184608459473
    8. ' discard' → logprob: -4.999184608459473
    9. '[]' → logprob: -5.874184608459473
    10. 'be' → logprob: -5.874184608459473

Token 678: ' cards' (ID: 10541)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.41724464297294617
    2. 'any' → logprob: -1.9172446727752686
    3. ' cards' → logprob: -2.9172446727752686
    4. 'br' → logprob: -3.6672446727752686
    5. ' tokens' → logprob: -3.9172446727752686
    6. ' the' → logprob: -4.4172444343566895
    7. ' only' → logprob: -4.4172444343566895
    8. 'the' → logprob: -5.0422444343566895
    9. 'cards' → logprob: -5.0422444343566895
    10. ' spaces' → logprob: -5.2922444343566895

Token 679: ' arbitr' (ID: 31157)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3686307370662689
    2. '[' → logprob: -3.2436306476593018
    3. ' from' → logprob: -3.2436306476593018
    4. 'for' → logprob: -3.6186306476593018
    5. '[i' → logprob: -3.8686306476593018
    6. ' is' → logprob: -4.118630886077881
    7. '=' → logprob: -4.243630886077881
    8. ' ' → logprob: -4.368630886077881
    9. ''' → logprob: -4.368630886077881
    10. ' can' → logprob: -4.493630886077881

Token 680: 'arily' (ID: 10581)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.5665381550788879
    2. 't' → logprob: -1.0665380954742432
    3. 'ite' → logprob: -4.066538333892822
    4. 'e' → logprob: -4.191538333892822
    5. 'n' → logprob: -4.316538333892822
    6. 'ary' → logprob: -4.566538333892822
    7. 'it' → logprob: -5.816538333892822
    8. 's' → logprob: -5.816538333892822
    9. 'd' → logprob: -6.191538333892822
    10. 'i' → logprob: -6.191538333892822

Token 681: ' but' (ID: 889)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4105280339717865
    2. 'for' → logprob: -2.1605279445648193
    3. '[i' → logprob: -2.6605279445648193
    4. ',' → logprob: -3.4105279445648193
    5. '[j' → logprob: -3.5355279445648193
    6. '#' → logprob: -3.9105279445648193
    7. ' for' → logprob: -4.535528182983398
    8. '[
' → logprob: -4.660528182983398
    9. '.' → logprob: -5.160528182983398
    10. '```' → logprob: -5.410528182983398

Token 682: ' must' (ID: 2804)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.098391056060791
    2. 'must' → logprob: -1.598391056060791
    3. 'the' → logprob: -1.723391056060791
    4. ' must' → logprob: -3.348391056060791
    5. 'cannot' → logprob: -3.348391056060791
    6. '```' → logprob: -3.348391056060791
    7. 'only' → logprob: -3.598391056060791
    8. ' the' → logprob: -4.098391056060791
    9. 'we' → logprob: -4.223391056060791
    10. ' contiguous' → logprob: -4.348391056060791

Token 683: ' keep' (ID: 3357)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6014446020126343
    2. ' be' → logprob: -0.9764446020126343
    3. 'match' → logprob: -3.226444721221924
    4. ' match' → logprob: -3.976444721221924
    5. 'keep' → logprob: -5.601444721221924
    6. ' only' → logprob: -5.726444721221924
    7. 'only' → logprob: -6.101444721221924
    8. 'always' → logprob: -6.851444721221924
    9. 'find' → logprob: -7.101444721221924
    10. 'appear' → logprob: -7.101444721221924

Token 684: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5507073998451233
    2. ' the' → logprob: -1.5507073402404785
    3. 'br' → logprob: -2.4257073402404785
    4. '```' → logprob: -3.0507073402404785
    5. ' contiguous' → logprob: -3.5507073402404785
    6. ' br' → logprob: -4.6757073402404785
    7. 'cont' → logprob: -4.9257073402404785
    8. ' a' → logprob: -5.0507073402404785
    9. 'a' → logprob: -5.1757073402404785
    10. ' subse' → logprob: -5.8007073402404785

Token 685: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5112529993057251
    2. ' for' → logprob: -2.1362528800964355
    3. ',' → logprob: -2.6362528800964355
    4. '[' → logprob: -3.1362528800964355
    5. '[
' → logprob: -3.6362528800964355
    6. '#' → logprob: -3.7612528800964355
    7. '=' → logprob: -4.2612528800964355
    8. '```' → logprob: -4.5112528800964355
    9. ']' → logprob: -4.6362528800964355
    10. ' of' → logprob: -4.7612528800964355

Token 686: ' subse' (ID: 19874)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45807966589927673
    2. '#' → logprob: -1.7080796957015991
    3. 'we' → logprob: -2.5830795764923096
    4. ' for' → logprob: -3.2080795764923096
    5. '```' → logprob: -4.083079814910889
    6. 'the' → logprob: -4.458079814910889
    7. ' we' → logprob: -4.458079814910889
    8. 'dp' → logprob: -4.958079814910889
    9. '
' → logprob: -6.083079814910889
    10. 'continue' → logprob: -6.083079814910889

Token 687: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.5775703191757202
    2. 'sequence' → logprob: -0.8275703191757202
    3. 'q' → logprob: -6.57757043838501
    4. 'quences' → logprob: -9.077569961547852
    5. '_sequence' → logprob: -9.577569961547852
    6. 'sequ' → logprob: -11.452569961547852
    7. '_' → logprob: -11.827569961547852
    8. 's' → logprob: -11.952569961547852
    9. ' sequence' → logprob: -12.202569961547852
    10. 'set' → logprob: -12.327569961547852

Token 688: ' matching' (ID: 20238)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4996023178100586
    2. '[' → logprob: -1.4996023178100586
    3. ')' → logprob: -2.3746023178100586
    4. '_' → logprob: -2.3746023178100586
    5. '[j' → logprob: -2.6246023178100586
    6. '[i' → logprob: -2.7496023178100586
    7. ' =' → logprob: -3.3746023178100586
    8. '.' → logprob: -3.6246023178100586
    9. '_length' → logprob: -3.9996023178100586
    10. '```' → logprob: -4.124602317810059

Token 689: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8665261268615723
    2. 'dp' → logprob: -0.8665261268615723
    3. '```' → logprob: -3.8665261268615723
    4. ' for' → logprob: -4.241526126861572
    5. 'from' → logprob: -4.366526126861572
    6. ',' → logprob: -4.616526126861572
    7. 'max' → logprob: -4.616526126861572
    8. '#' → logprob: -4.866526126861572
    9. '
' → logprob: -4.866526126861572
    10. 'length' → logprob: -4.866526126861572

Token 690: ' straightforward' (ID: 35737)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9705002903938293
    2. 'possible' → logprob: -1.5955002307891846
    3. ' possible' → logprob: -1.9705002307891846
    4. ' True' → logprob: -2.0955002307891846
    5. 'True' → logprob: -2.2205002307891846
    6. '``' → logprob: -4.470500469207764
    7. 'dp' → logprob: -4.470500469207764
    8. ' dp' → logprob: -5.720500469207764
    9. 'always' → logprob: -5.720500469207764
    10. 'checked' → logprob: -5.845500469207764

Token 691: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29081782698631287
    2. 'dp' → logprob: -2.1658177375793457
    3. '=' → logprob: -4.290817737579346
    4. ',
' → logprob: -4.415817737579346
    5. ']' → logprob: -4.540817737579346
    6. '#' → logprob: -4.790817737579346
    7. ' for' → logprob: -4.790817737579346
    8. 'import' → logprob: -4.915817737579346
    9. '=
' → logprob: -4.915817737579346
    10. ',' → logprob: -4.915817737579346

Token 692: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7617367506027222
    2. 'dp' → logprob: -1.0117367506027222
    3. 'import' → logprob: -2.7617368698120117
    4. 'pos' → logprob: -3.3867368698120117
    5. '#' → logprob: -3.5117368698120117
    6. 'next' → logprob: -3.6367368698120117
    7. 'prev' → logprob: -5.011736869812012
    8. 'anna' → logprob: -5.761736869812012
    9. 'def' → logprob: -6.511736869812012
    10. 'n' → logprob: -6.761736869812012

Token 693: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17954371869564056
    2. 'from' → logprob: -2.3045437335968018
    3. 'next' → logprob: -3.8045437335968018
    4. '#' → logprob: -4.054543495178223
    5. 'pos' → logprob: -4.179543495178223
    6. 'import' → logprob: -5.554543495178223
    7. 'n' → logprob: -6.179543495178223
    8. 'def' → logprob: -6.554543495178223
    9. 'prev' → logprob: -7.054543495178223
    10. 'max' → logprob: -7.679543495178223

Token 694: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39317646622657776
    2. 'for' → logprob: -1.6431764364242554
    3. 'max' → logprob: -3.268176555633545
    4. 'pos' → logprob: -3.268176555633545
    5. '#' → logprob: -4.268176555633545
    6. 'from' → logprob: -4.518176555633545
    7. 'br' → logprob: -4.518176555633545
    8. 'def' → logprob: -4.768176555633545
    9. 'ans' → logprob: -5.393176555633545
    10. 'next' → logprob: -6.518176555633545

Token 695: ' speed' (ID: 7733)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.8954663872718811
    2. 'l' → logprob: -1.2704663276672363
    3. 'j' → logprob: -2.3954663276672363
    4. 'length' → logprob: -2.3954663276672363
    5. 'for' → logprob: -3.2704663276672363
    6. 'dp' → logprob: -3.8954663276672363
    7. 'sub' → logprob: -4.020466327667236
    8. '```' → logprob: -4.270466327667236
    9. 'b' → logprob: -4.770466327667236
    10. 'each' → logprob: -4.895466327667236

Token 696: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4290318489074707
    2. '=' → logprob: -3.0540318489074707
    3. 'br' → logprob: -3.4290318489074707
    4. '_' → logprob: -3.4290318489074707
    5. ' for' → logprob: -3.4290318489074707
    6. 'i' → logprob: -3.5540318489074707
    7. '```' → logprob: -3.5540318489074707
    8. '   ' → logprob: -3.9290318489074707
    9. ' =' → logprob: -3.9290318489074707
    10. ' ' → logprob: -4.179031848907471

Token 697: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3232068717479706
    2. 'for' → logprob: -1.573206901550293
    3. 'import' → logprob: -4.073206901550293
    4. 'i' → logprob: -4.323206901550293
    5. 'from' → logprob: -4.323206901550293
    6. ' for' → logprob: -4.948206901550293
    7. 'pos' → logprob: -5.573206901550293
    8. 'idx' → logprob: -5.948206901550293
    9. 'j' → logprob: -6.323206901550293
    10. 'n' → logprob: -6.573206901550293

Token 698: ' fix' (ID: 9295)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.2109431028366089
    2. '_' → logprob: -1.8359431028366089
    3. '#' → logprob: -2.2109432220458984
    4. '=' → logprob: -2.4609432220458984
    5. 'n' → logprob: -3.0859432220458984
    6. 'import' → logprob: -3.0859432220458984
    7. '[' → logprob: -3.0859432220458984
    8. 'need' → logprob: -3.4609432220458984
    9. ' can' → logprob: -3.8359432220458984
    10. 'for' → logprob: -3.9609432220458984

Token 699: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.121696949005127
    2. ' the' → logprob: -1.996696949005127
    3. '[j' → logprob: -2.121696949005127
    4. '_' → logprob: -2.371696949005127
    5. '```' → logprob: -2.871696949005127
    6. ' ' → logprob: -2.996696949005127
    7. 'for' → logprob: -3.871696949005127
    8. ' a' → logprob: -3.871696949005127
    9. 'the' → logprob: -3.871696949005127
    10. 'br' → logprob: -4.121696949005127

Token 700: ' contiguous' (ID: 130997)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6158238649368286
    2. 'b' → logprob: -1.7408238649368286
    3. '[' → logprob: -2.240823745727539
    4. 'l' → logprob: -2.865823745727539
    5. 'j' → logprob: -4.115823745727539
    6. 'a' → logprob: -4.115823745727539
    7. 'br' → logprob: -4.365823745727539
    8. ' ' → logprob: -4.740823745727539
    9. ']' → logprob: -4.990823745727539
    10. 'i' → logprob: -4.990823745727539

Token 701: ' sub' (ID: 1543)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12945233285427094
    2. '_sub' → logprob: -3.6294522285461426
    3. 'sub' → logprob: -3.8794522285461426
    4. ' sub' → logprob: -4.254452228546143
    5. ' ' → logprob: -4.504452228546143
    6. 'br' → logprob: -4.629452228546143
    7. '`' → logprob: -5.004452228546143
    8. ''' → logprob: -5.254452228546143
    9. '[' → logprob: -5.254452228546143
    10. '```' → logprob: -5.379452228546143

Token 702: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.006600032560527325
    2. 'sequence' → logprob: -6.0065999031066895
    3. 'arrays' → logprob: -6.5065999031066895
    4. 'ar' → logprob: -7.7565999031066895
    5. 'arr' → logprob: -7.8815999031066895
    6. '_br' → logprob: -8.131600379943848
    7. 'br' → logprob: -8.256600379943848
    8. '_array' → logprob: -8.506600379943848
    9. 'arra' → logprob: -8.631600379943848
    10. 'quence' → logprob: -8.881600379943848

Token 703: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9895530343055725
    2. 'for' → logprob: -1.7395529747009277
    3. '[' → logprob: -2.1145529747009277
    4. '=' → logprob: -2.4895529747009277
    5. ',' → logprob: -2.9895529747009277
    6. '```' → logprob: -2.9895529747009277
    7. '[
' → logprob: -3.1145529747009277
    8. '.' → logprob: -4.114552974700928
    9. '`' → logprob: -4.489552974700928
    10. ']' → logprob: -4.864552974700928

Token 704: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0026221470907330513
    2. '```' → logprob: -6.127622127532959
    3. ' br' → logprob: -8.377622604370117
    4. '`' → logprob: -9.627622604370117
    5. 'Br' → logprob: -9.752622604370117
    6. 'anna' → logprob: -10.002622604370117
    7. '   ' → logprob: -11.877622604370117
    8. '	br' → logprob: -12.002622604370117
    9. 'B' → logprob: -12.377622604370117
    10. '``' → logprob: -12.377622604370117

Token 705: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7698553800582886
    2. '_' → logprob: -2.144855499267578
    3. '[j' → logprob: -2.644855499267578
    4. '_length' → logprob: -3.144855499267578
    5. ' =' → logprob: -3.144855499267578
    6. 'for' → logprob: -3.269855499267578
    7. '=' → logprob: -3.269855499267578
    8. '```' → logprob: -3.269855499267578
    9. '[
' → logprob: -3.519855499267578
    10. ',' → logprob: -3.894855499267578

Token 706: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5919636487960815
    2. 'l' → logprob: -2.216963768005371
    3. 'length' → logprob: -2.966963768005371
    4. 'find' → logprob: -3.091963768005371
    5. 'len' → logprob: -3.216963768005371
    6. ' for' → logprob: -3.216963768005371
    7. 'continue' → logprob: -3.591963768005371
    8. '
' → logprob: -3.716963768005371
    9. 'check' → logprob: -4.216963768005371
    10. 'start' → logprob: -4.341963768005371

Token 707: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0830525159835815
    2. 'l' → logprob: -1.5830525159835815
    3. ' for' → logprob: -2.833052635192871
    4. '```' → logprob: -2.833052635192871
    5. '_' → logprob: -2.958052635192871
    6. ',' → logprob: -3.083052635192871
    7. ' ' → logprob: -3.333052635192871
    8. 'i' → logprob: -3.458052635192871
    9. '`' → logprob: -3.708052635192871
    10. '   ' → logprob: -4.208052635192871

Token 708: ' it's' (ID: 4275)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -1.0636653900146484
    2. 'it' → logprob: -1.9386653900146484
    3. ' it' → logprob: -2.0636653900146484
    4. ' anna' → logprob: -2.1886653900146484
    5. '```' → logprob: -2.4386653900146484
    6. 'br' → logprob: -3.1886653900146484
    7. 'the' → logprob: -3.6886653900146484
    8. 'len' → logprob: -3.6886653900146484
    9. 'it's' → logprob: -4.188665390014648
    10. 'Anna' → logprob: -4.188665390014648

Token 709: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.2303962707519531
    2. ' subse' → logprob: -1.6053962707519531
    3. 'in' → logprob: -1.7303962707519531
    4. ' in' → logprob: -2.355396270751953
    5. '```' → logprob: -2.730396270751953
    6. 'a' → logprob: -2.855396270751953
    7. ' a' → logprob: -2.980396270751953
    8. 'possible' → logprob: -3.855396270751953
    9. 'found' → logprob: -3.855396270751953
    10. 'contained' → logprob: -6.105396270751953

Token 710: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0004207826859783381
    2. 'sequence' → logprob: -8.875420570373535
    3. 'quences' → logprob: -8.875420570373535
    4. 'q' → logprob: -9.125420570373535
    5. 'QUENCE' → logprob: -11.625420570373535
    6. '```' → logprob: -11.625420570373535
    7. 'qu' → logprob: -12.250420570373535
    8. '_sequence' → logprob: -12.875420570373535
    9. '#' → logprob: -13.250420570373535
    10. 'b' → logprob: -13.375420570373535

Token 711: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10688482224941254
    2. ' of' → logprob: -3.981884717941284
    3. '_length' → logprob: -4.481884956359863
    4. 'of' → logprob: -4.481884956359863
    5. '```' → logprob: -4.731884956359863
    6. '[' → logprob: -5.106884956359863
    7. '_
' → logprob: -5.481884956359863
    8. ',' → logprob: -5.731884956359863
    9. '=' → logprob: -5.731884956359863
    10. '[
' → logprob: -5.856884956359863

Token 712: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.02349633164703846
    2. ' anna' → logprob: -3.773496389389038
    3. 'Anna' → logprob: -8.898496627807617
    4. 'br' → logprob: -10.273496627807617
    5. ' ' → logprob: -10.773496627807617
    6. ' Anna' → logprob: -11.023496627807617
    7. '```' → logprob: -11.148496627807617
    8. 'ana' → logprob: -11.648496627807617
    9. ' ' → logprob: -12.148496627807617
    10. 'anne' → logprob: -12.523496627807617

Token 713: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6912010312080383
    2. '=' → logprob: -2.4412009716033936
    3. ':' → logprob: -2.6912009716033936
    4. ',' → logprob: -2.9412009716033936
    5. '_' → logprob: -3.0662009716033936
    6. ':
' → logprob: -3.1912009716033936
    7. '[' → logprob: -3.8162009716033936
    8. ' for' → logprob: -3.8162009716033936
    9. '```' → logprob: -4.066201210021973
    10. '.' → logprob: -4.316201210021973

Token 714: '#' (ID: 2)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.33863365650177
    2. 'for' → logprob: -1.46363365650177
    3. 'l' → logprob: -1.96363365650177
    4. 'left' → logprob: -1.96363365650177
    5. 'dp' → logprob: -3.0886335372924805
    6. 'br' → logprob: -3.0886335372924805
    7. 'def' → logprob: -3.3386335372924805
    8. 'from' → logprob: -3.4636335372924805
    9. 'lo' → logprob: -3.8386335372924805
    10. '```' → logprob: -4.3386335372924805

Token 715: ' To' (ID: 2514)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9712501168251038
    2. 'from' → logprob: -1.846250057220459
    3. 'br' → logprob: -2.096250057220459
    4. 'for' → logprob: -2.221250057220459
    5. 'max' → logprob: -2.471250057220459
    6. 'left' → logprob: -2.971250057220459
    7. 'low' → logprob: -3.721250057220459
    8. 'l' → logprob: -3.971250057220459
    9. 'length' → logprob: -4.346250057220459
    10. 'import' → logprob: -4.721250057220459

Token 716: ' check' (ID: 2371)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8477916121482849
    2. 'l' → logprob: -1.9727916717529297
    3. 'def' → logprob: -2.7227916717529297
    4. 'for' → logprob: -2.8477916717529297
    5. 'br' → logprob: -2.8477916717529297
    6. 'B' → logprob: -3.3477916717529297
    7. ':
' → logprob: -3.3477916717529297
    8. '```' → logprob: -3.8477916717529297
    9. 'b' → logprob: -4.22279167175293
    10. 'length' → logprob: -4.34779167175293

Token 717: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5688837766647339
    2. '_' → logprob: -1.3188837766647339
    3. ' if' → logprob: -2.9438838958740234
    4. 'br' → logprob: -3.3188838958740234
    5. 'b' → logprob: -3.8188838958740234
    6. 'for' → logprob: -4.693883895874023
    7. 'l' → logprob: -5.193883895874023
    8. 'sub' → logprob: -5.193883895874023
    9. '`' → logprob: -5.318883895874023
    10. 'i' → logprob: -5.818883895874023

Token 718: ' a' (ID: 261)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.7660087943077087
    2. 'the' → logprob: -1.0160088539123535
    3. 'that' → logprob: -3.7660088539123535
    4. ' the' → logprob: -3.8910088539123535
    5. 'anna' → logprob: -4.0160088539123535
    6. 'len' → logprob: -4.1410088539123535
    7. ' anna' → logprob: -4.1410088539123535
    8. ' br' → logprob: -4.2660088539123535
    9. 'it' → logprob: -4.3910088539123535
    10. 'sub' → logprob: -5.0160088539123535

Token 719: ' sequence' (ID: 16281)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06188454478979111
    2. 'b' → logprob: -3.561884641647339
    3. '_' → logprob: -4.06188440322876
    4. ' 
' → logprob: -5.56188440322876
    5. 's' → logprob: -6.31188440322876
    6. '_
' → logprob: -6.43688440322876
    7. ' ' → logprob: -6.93688440322876
    8. '
' → logprob: -7.06188440322876
    9. '_sub' → logprob: -7.31188440322876
    10. ' is' → logprob: -7.68688440322876

Token 720: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3917752504348755
    2. ' is' → logprob: -1.3917752504348755
    3. ' _' → logprob: -3.141775131225586
    4. ' ' → logprob: -4.766775131225586
    5. ' 
' → logprob: -5.766775131225586
    6. ' can' → logprob: -6.016775131225586
    7. 's' → logprob: -6.016775131225586
    8. ''' → logprob: -6.016775131225586
    9. '[' → logprob: -6.141775131225586
    10. 'is' → logprob: -6.766775131225586

Token 721: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.763246476650238
    2. 'sub' → logprob: -1.2632465362548828
    3. ' subse' → logprob: -2.638246536254883
    4. ' a' → logprob: -2.763246536254883
    5. 'found' → logprob: -3.263246536254883
    6. '_' → logprob: -3.638246536254883
    7. 'br' → logprob: -3.763246536254883
    8. '```' → logprob: -4.888246536254883
    9. '[]' → logprob: -5.513246536254883
    10. '_sub' → logprob: -6.013246536254883

Token 722: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6935245394706726
    2. ' subse' → logprob: -0.6935245394706726
    3. ' sub' → logprob: -9.068524360656738
    4. 'subset' → logprob: -9.318524360656738
    5. '_sub' → logprob: -9.693524360656738
    6. ' 
' → logprob: -10.693524360656738
    7. 's' → logprob: -10.818524360656738
    8. 'substring' → logprob: -11.068524360656738
    9. '
' → logprob: -11.443524360656738
    10. 'n' → logprob: -11.693524360656738

Token 723: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0002149802603526041
    2. 'q' → logprob: -9.250214576721191
    3. 'sequence' → logprob: -9.750214576721191
    4. 'quences' → logprob: -10.000214576721191
    5. 'QUENCE' → logprob: -12.500214576721191
    6. 'qu' → logprob: -12.625214576721191
    7. 'b' → logprob: -12.625214576721191
    8. '#' → logprob: -13.750214576721191
    9. '```' → logprob: -13.750214576721191
    10. 'u' → logprob: -14.250214576721191

Token 724: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7513297200202942
    2. ':' → logprob: -1.6263296604156494
    3. ' of' → logprob: -2.0013296604156494
    4. ',' → logprob: -2.1263296604156494
    5. ' ' → logprob: -4.1263298988342285
    6. 'of' → logprob: -4.3763298988342285
    7. '(' → logprob: -4.5013298988342285
    8. '_of' → logprob: -4.8763298988342285
    9. '```' → logprob: -5.3763298988342285
    10. ' is' → logprob: -5.5013298988342285

Token 725: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.11505623161792755
    2. 'Anna' → logprob: -2.240056276321411
    3. ' anna' → logprob: -6.990056037902832
    4. 'br' → logprob: -7.240056037902832
    5. '```' → logprob: -8.240056037902832
    6. 'Br' → logprob: -9.490056037902832
    7. ' Anna' → logprob: -9.865056037902832
    8. 'ana' → logprob: -10.365056037902832
    9. 'A' → logprob: -10.365056037902832
    10. '`' → logprob: -10.740056037902832

Token 726: ' efficiently' (ID: 34229)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.166067123413086
    2. '_positions' → logprob: -1.416067123413086
    3. ':' → logprob: -2.166067123413086
    4. '[' → logprob: -2.291067123413086
    5. '```' → logprob: -3.416067123413086
    6. '[i' → logprob: -3.416067123413086
    7. ':
' → logprob: -3.916067123413086
    8. ',' → logprob: -4.291067123413086
    9. 's' → logprob: -4.416067123413086
    10. '_pos' → logprob: -4.541067123413086

Token 727: ':

' (ID: 1402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2085048109292984
    2. '_positions' → logprob: -2.2085049152374268
    3. ':' → logprob: -3.4585049152374268
    4. '_,' → logprob: -4.333504676818848
    5. 'positions' → logprob: -4.708504676818848
    6. ',
' → logprob: -5.208504676818848
    7. '_pos' → logprob: -5.458504676818848
    8. '_next' → logprob: -6.083504676818848
    9. '_' → logprob: -6.083504676818848
    10. '_indices' → logprob: -6.208504676818848

Token 728: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8954770565032959
    2. '#' → logprob: -1.520477056503296
    3. 'pos' → logprob: -1.770477056503296
    4. 'from' → logprob: -2.895477056503296
    5. ' next' → logprob: -3.520477056503296
    6. ' anna' → logprob: -4.020477294921875
    7. 'positions' → logprob: -4.145477294921875
    8. '
' → logprob: -4.270477294921875
    9. '```' → logprob: -4.645477294921875
    10. '``' → logprob: -4.770477294921875

Token 729: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9634052515029907
    2. 'next' → logprob: -1.2134052515029907
    3. '#' → logprob: -1.4634052515029907
    4. 'pos' → logprob: -2.838405132293701
    5. 'n' → logprob: -4.213405132293701
    6. 'import' → logprob: -5.463405132293701
    7. 'positions' → logprob: -5.463405132293701
    8. 'Next' → logprob: -5.963405132293701
    9. '```' → logprob: -6.588405132293701
    10. 'max' → logprob: -7.463405132293701

Token 730: ' Anna' (ID: 34101)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8101218342781067
    2. ' anna' → logprob: -1.685121774673462
    3. 'pos' → logprob: -2.310121774673462
    4. 'anna' → logprob: -3.185121774673462
    5. 'Anna' → logprob: -3.310121774673462
    6. ' each' → logprob: -3.310121774673462
    7. '_' → logprob: -3.435121774673462
    8. ' Anna' → logprob: -3.560121774673462
    9. 'i' → logprob: -3.810121774673462
    10. 'next' → logprob: -4.310122013092041

Token 731: ''s' (ID: 885)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.4718615710735321
    2. '_positions' → logprob: -1.2218616008758545
    3. ''s' → logprob: -4.346861362457275
    4. '_' → logprob: -4.721861362457275
    5. '_cards' → logprob: -4.721861362457275
    6. ''_' → logprob: -4.846861362457275
    7. '_pos' → logprob: -5.096861362457275
    8. '_indices' → logprob: -5.221861362457275
    9. '`' → logprob: -5.346861362457275
    10. '_s' → logprob: -5.346861362457275

Token 732: ' cards' (ID: 10541)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7866637110710144
    2. '_next' → logprob: -1.5366637706756592
    3. 'positions' → logprob: -2.286663770675659
    4. 'cards' → logprob: -2.786663770675659
    5. 'pos' → logprob: -3.411663770675659
    6. 'A' → logprob: -3.911663770675659
    7. 'anna' → logprob: -4.16166353225708
    8. ' next' → logprob: -4.41166353225708
    9. '```' → logprob: -4.66166353225708
    10. '_cards' → logprob: -4.78666353225708

Token 733: ',' (ID: 11)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7530202269554138
    2. 'positions' → logprob: -1.0030202865600586
    3. '_next' → logprob: -3.1280202865600586
    4. 'n' → logprob: -3.1280202865600586
    5. 'pos' → logprob: -3.8780202865600586
    6. '#' → logprob: -4.753020286560059
    7. 'from' → logprob: -4.753020286560059
    8. ' next' → logprob: -5.253020286560059
    9. '```' → logprob: -5.253020286560059
    10. '_positions' → logprob: -5.628020286560059

Token 734: ' pre' (ID: 876)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08101309090852737
    2. 'pos' → logprob: -3.5810132026672363
    3. 'import' → logprob: -3.7060132026672363
    4. 'next' → logprob: -3.9560132026672363
    5. 'positions' → logprob: -5.456013202667236
    6. ' from' → logprob: -7.456013202667236
    7. '#' → logprob: -7.706013202667236
    8. 'n' → logprob: -8.206012725830078
    9. ' next' → logprob: -8.206012725830078
    10. '
' → logprob: -9.331012725830078

Token 735: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.24759086966514587
    2. 'pare' → logprob: -2.1225907802581787
    3. 'process' → logprob: -2.3725907802581787
    4. 'fix' → logprob: -5.872591018676758
    5. 'p' → logprob: -6.497591018676758
    6. 'processed' → logprob: -6.997591018676758
    7. 'computed' → logprob: -7.997591018676758
    8. 'c' → logprob: -8.747591018676758
    9. 'processing' → logprob: -8.872591018676758
    10. 'calculate' → logprob: -9.622591018676758

Token 736: ' positions' (ID: 15897)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.032693278044462204
    2. ' next' → logprob: -4.157693386077881
    3. 'pos' → logprob: -4.407693386077881
    4. 'positions' → logprob: -5.907693386077881
    5. ' nxt' → logprob: -7.032693386077881
    6. '[next' → logprob: -8.282692909240723
    7. '_next' → logprob: -8.907692909240723
    8. '```' → logprob: -9.282692909240723
    9. '`' → logprob: -10.032692909240723
    10. ' positions' → logprob: -10.157692909240723

Token 737: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15604984760284424
    2. '_next' → logprob: -2.0310497283935547
    3. 'next' → logprob: -6.281049728393555
    4. '_positions' → logprob: -6.281049728393555
    5. '`' → logprob: -6.656049728393555
    6. '_of' → logprob: -6.906049728393555
    7. 'of' → logprob: -7.281049728393555
    8. '_in' → logprob: -7.406049728393555
    9. 'n' → logprob: -7.406049728393555
    10. '_n' → logprob: -7.531049728393555

Token 738: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.31304579973220825
    2. ' each' → logprob: -2.1880457401275635
    3. 'next' → logprob: -3.0630457401275635
    4. ' next' → logprob: -3.3130457401275635
    5. 'the' → logprob: -4.063045978546143
    6. 'elements' → logprob: -4.563045978546143
    7. ' elements' → logprob: -4.938045978546143
    8. 'all' → logprob: -5.063045978546143
    9. 'values' → logprob: -5.438045978546143
    10. ' the' → logprob: -5.438045978546143

Token 739: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.22291463613510132
    2. 'value' → logprob: -2.472914695739746
    3. 'num' → logprob: -3.347914695739746
    4. 'anna' → logprob: -3.597914695739746
    5. 'card' → logprob: -3.847914695739746
    6. 'element' → logprob: -4.097914695739746
    7. ' number' → logprob: -5.347914695739746
    8. 'val' → logprob: -6.597914695739746
    9. '_' → logprob: -6.722914695739746
    10. '```' → logprob: -6.722914695739746

Token 740: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.125139519572258
    2. 'pos' → logprob: -2.5001394748687744
    3. 'positions' → logprob: -3.7501394748687744
    4. 'max' → logprob: -5.5001397132873535
    5. 'next' → logprob: -5.6251397132873535
    6. 'anna' → logprob: -6.8751397132873535
    7. ' from' → logprob: -7.0001397132873535
    8. '#' → logprob: -7.1251397132873535
    9. '```' → logprob: -8.375139236450195
    10. 'n' → logprob: -8.375139236450195

Token 741: ' speed' (ID: 7733)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1667487621307373
    2. 'search' → logprob: -1.5417487621307373
    3. 'appear' → logprob: -2.1667487621307373
    4. 'append' → logprob: -2.2917487621307373
    5. 'check' → logprob: -3.5417487621307373
    6. 'answer' → logprob: -3.5417487621307373
    7. ']' → logprob: -3.9167487621307373
    8. 'skip' → logprob: -4.041749000549316
    9. 'match' → logprob: -4.041749000549316
    10. ')' → logprob: -4.166749000549316

Token 742: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.45322829484939575
    2. '_' → logprob: -1.328228235244751
    3. '_up' → logprob: -3.828228235244751
    4. ' up' → logprob: -4.70322847366333
    5. '[
' → logprob: -4.82822847366333
    6. '_
' → logprob: -4.95322847366333
    7. 'from' → logprob: -5.20322847366333
    8. ' Anna' → logprob: -5.32822847366333
    9. 'for' → logprob: -5.45322847366333
    10. '{
' → logprob: -5.57822847366333

Token 743: ' subse' (ID: 19874)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9359225034713745
    2. 'positions' → logprob: -1.0609225034713745
    3. '_' → logprob: -2.560922622680664
    4. '_positions' → logprob: -3.435922622680664
    5. 'pos' → logprob: -3.685922622680664
    6. '_
' → logprob: -4.185922622680664
    7. 'import' → logprob: -4.560922622680664
    8. '`' → logprob: -4.810922622680664
    9. 'max' → logprob: -4.810922622680664
    10. '```' → logprob: -4.935922622680664

Token 744: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.546093761920929
    2. 'q' → logprob: -1.4210937023162842
    3. 'quences' → logprob: -1.7960937023162842
    4. 'quent' → logprob: -6.171093940734863
    5. 'n' → logprob: -6.421093940734863
    6. 'qu' → logprob: -6.796093940734863
    7. '#' → logprob: -6.921093940734863
    8. 'quency' → logprob: -7.046093940734863
    9. 'quential' → logprob: -7.421093940734863
    10. 'x' → logprob: -7.796093940734863

Token 745: ' matching' (ID: 20238)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2584502100944519
    2. '_' → logprob: -2.0084502696990967
    3. '_pos' → logprob: -3.5084502696990967
    4. 'positions' → logprob: -3.7584502696990967
    5. '_next' → logprob: -3.8834502696990967
    6. '_indices' → logprob: -6.008450031280518
    7. 'pos' → logprob: -6.133450031280518
    8. 'from' → logprob: -6.133450031280518
    9. '_
' → logprob: -6.133450031280518
    10. 's' → logprob: -6.633450031280518

Token 746: '.

' (ID: 364)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9737865924835205
    2. 'next' → logprob: -1.0987865924835205
    3. 'positions' → logprob: -1.7237865924835205
    4. 'for' → logprob: -3.3487865924835205
    5. 'from' → logprob: -3.4737865924835205
    6. 'import' → logprob: -4.473786354064941
    7. '#' → logprob: -4.598786354064941
    8. 'n' → logprob: -5.723786354064941
    9. '```' → logprob: -6.223786354064941
    10. 'dp' → logprob: -6.348786354064941

Token 747: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1851532757282257
    2. 'pos' → logprob: -2.1851532459259033
    3. 'next' → logprob: -3.5601532459259033
    4. 'max' → logprob: -3.8101532459259033
    5. 'positions' → logprob: -6.060153484344482
    6. '#' → logprob: -6.185153484344482
    7. 'import' → logprob: -6.810153484344482
    8. 'n' → logprob: -8.935153007507324
    9. 'position' → logprob: -9.435153007507324
    10. 'num' → logprob: -9.435153007507324

Token 748: ' But' (ID: 3072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05713389813899994
    2. 'pos' → logprob: -3.307133913040161
    3. 'max' → logprob: -4.307133674621582
    4. 'import' → logprob: -6.057133674621582
    5. 'next' → logprob: -6.682133674621582
    6. 'positions' → logprob: -6.682133674621582
    7. '#' → logprob: -8.057133674621582
    8. '```' → logprob: -9.557133674621582
    9. 'MAX' → logprob: -9.807133674621582
    10. 'position' → logprob: -10.057133674621582

Token 749: ' subse' (ID: 19874)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.448540210723877
    2. 'from' → logprob: -1.573540210723877
    3. '#' → logprob: -1.948540210723877
    4. 'a' → logprob: -2.323540210723877
    5. 'import' → logprob: -2.448540210723877
    6. '_' → logprob: -3.198540210723877
    7. 'n' → logprob: -3.573540210723877
    8. 'for' → logprob: -3.573540210723877
    9. 'pos' → logprob: -4.448540210723877
    10. ',' → logprob: -4.698540210723877

Token 750: 'quence' (ID: 6975)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.6726670861244202
    2. 'quence' → logprob: -1.6726670265197754
    3. '_positions' → logprob: -1.7976670265197754
    4. '_' → logprob: -3.0476670265197754
    5. 'sequence' → logprob: -3.0476670265197754
    6. '_sequences' → logprob: -3.6726670265197754
    7. '_sequence' → logprob: -5.422667026519775
    8. 'positions' → logprob: -5.922667026519775
    9. 'q' → logprob: -6.297667026519775
    10. '_map' → logprob: -6.547667026519775

Token 751: ' matching' (ID: 20238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32679715752601624
    2. '_positions' → logprob: -1.3267971277236938
    3. 's' → logprob: -5.076797008514404
    4. '_indices' → logprob: -6.951797008514404
    5. '_pos' → logprob: -7.076797008514404
    6. '_map' → logprob: -7.326797008514404
    7. ''_' → logprob: -7.701797008514404
    8. '[' → logprob: -8.076797485351562
    9. '_lookup' → logprob: -8.326797485351562
    10. ')_' → logprob: -8.326797485351562

Token 752: ' per' (ID: 777)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14374464750289917
    2. '_positions' → logprob: -2.893744707107544
    3. ':' → logprob: -4.143744468688965
    4. ')' → logprob: -4.643744468688965
    5. '[' → logprob: -4.893744468688965
    6. 's' → logprob: -5.018744468688965
    7. '```' → logprob: -5.143744468688965
    8. '.' → logprob: -5.518744468688965
    9. ',' → logprob: -5.768744468688965
    10. 'def' → logprob: -6.018744468688965

Token 753: ' query' (ID: 5703)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14099031686782837
    2. ')' → logprob: -3.2659902572631836
    3. ' _' → logprob: -4.015990257263184
    4. ' ' → logprob: -4.390990257263184
    5. 'br' → logprob: -4.390990257263184
    6. '_
' → logprob: -5.140990257263184
    7. 'query' → logprob: -5.390990257263184
    8. ' ' → logprob: -5.765990257263184
    9. ']' → logprob: -5.765990257263184
    10. 'B' → logprob: -6.265990257263184

Token 754: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.495788335800171
    2. '[' → logprob: -2.245788335800171
    3. 'for' → logprob: -2.245788335800171
    4. '[j' → logprob: -2.370788335800171
    5. '[i' → logprob: -2.620788335800171
    6. '=' → logprob: -2.620788335800171
    7. ':' → logprob: -2.745788335800171
    8. '```' → logprob: -2.995788335800171
    9. ']' → logprob: -3.120788335800171
    10. '[
' → logprob: -3.995788335800171

Token 755: ' O' (ID: 532)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5321810245513916
    2. ' too' → logprob: -2.2821810245513916
    3. ' ' → logprob: -2.6571810245513916
    4. ' not' → logprob: -2.7821810245513916
    5. 'def' → logprob: -2.9071810245513916
    6. ',' → logprob: -2.9071810245513916
    7. 'not' → logprob: -3.0321810245513916
    8. '_' → logprob: -3.4071810245513916
    9. ' very' → logprob: -3.7821810245513916
    10. '[' → logprob: -3.7821810245513916

Token 756: '(A' (ID: 10706)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8277067542076111
    2. '(len' → logprob: -1.5777068138122559
    3. '(' → logprob: -1.8277068138122559
    4. '(B' → logprob: -2.452706813812256
    5. '(A' → logprob: -3.077706813812256
    6. '(
' → logprob: -3.702706813812256
    7. '(N' → logprob: -3.952706813812256
    8. '(log' → logprob: -4.827706813812256
    9. 'n' → logprob: -5.952706813812256
    10. '(l' → logprob: -6.327706813812256

Token 757: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07973220944404602
    2. '[' → logprob: -3.5797321796417236
    3. '.' → logprob: -4.704732418060303
    4. '[i' → logprob: -5.204732418060303
    5. ':' → logprob: -5.329732418060303
    6. '#' → logprob: -5.454732418060303
    7. '
' → logprob: -5.704732418060303
    8. '[j' → logprob: -5.954732418060303
    9. '```' → logprob: -5.954732418060303
    10. '+' → logprob: -6.204732418060303

Token 758: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9111933708190918
    2. '```' → logprob: -2.661193370819092
    3. '[' → logprob: -3.161193370819092
    4. '=' → logprob: -3.161193370819092
    5. 'import' → logprob: -3.286193370819092
    6. ''' → logprob: -3.411193370819092
    7. ')' → logprob: -3.411193370819092
    8. '
' → logprob: -3.411193370819092
    9. ' for' → logprob: -3.536193370819092
    10. '"' → logprob: -3.536193370819092

Token 759: ' naive' (ID: 105687)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5272612571716309
    2. 'for' → logprob: -1.9022612571716309
    3. ' for' → logprob: -2.152261257171631
    4. '```' → logprob: -2.652261257171631
    5. '[
' → logprob: -2.902261257171631
    6. 'import' → logprob: -3.027261257171631
    7. ')' → logprob: -3.277261257171631
    8. 'n' → logprob: -3.652261257171631
    9. '
' → logprob: -3.902261257171631
    10. ',' → logprob: -4.027261257171631

Token 760: ' will' (ID: 738)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.480286717414856
    2. '```' → logprob: -2.3552865982055664
    3. ']' → logprob: -2.4802865982055664
    4. ')' → logprob: -2.6052865982055664
    5. 'import' → logprob: -2.8552865982055664
    6. ',' → logprob: -3.2302865982055664
    7. '_' → logprob: -3.2302865982055664
    8. '[i' → logprob: -3.3552865982055664
    9. '.' → logprob: -3.3552865982055664
    10. '=' → logprob: -3.4802865982055664

Token 761: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.01872316561639309
    2. 'be' → logprob: -4.893723011016846
    3. ' continue' → logprob: -5.393723011016846
    4. ' 
' → logprob: -6.768723011016846
    5. ' become' → logprob: -7.018723011016846
    6. '
' → logprob: -7.018723011016846
    7. '```' → logprob: -7.268723011016846
    8. ' not' → logprob: -7.518723011016846
    9. '_' → logprob: -7.643723011016846
    10. 'continue' → logprob: -7.768723011016846

Token 762: ' O' (ID: 532)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3673946857452393
    2. ' too' → logprob: -1.4923946857452393
    3. 'n' → logprob: -1.8673946857452393
    4. ''' → logprob: -3.2423946857452393
    5. 'too' → logprob: -3.3673946857452393
    6. ')' → logprob: -3.3673946857452393
    7. '`' → logprob: -3.6173946857452393
    8. 'a' → logprob: -3.8673946857452393
    9. '``' → logprob: -3.8673946857452393
    10. 'b' → logprob: -3.9923946857452393

Token 763: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7679681777954102
    2. '(B' → logprob: -1.1429681777954102
    3. '(n' → logprob: -2.39296817779541
    4. '(
' → logprob: -2.76796817779541
    5. '(A' → logprob: -3.14296817779541
    6. 'n' → logprob: -4.64296817779541
    7. '(len' → logprob: -6.14296817779541
    8. 'B' → logprob: -6.39296817779541
    9. '(N' → logprob: -6.64296817779541
    10. 'A' → logprob: -7.39296817779541

Token 764: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.9471672177314758
    2. '*' → logprob: -1.322167158126831
    3. ')' → logprob: -1.697167158126831
    4. '2' → logprob: -3.322167158126831
    5. '**' → logprob: -3.447167158126831
    6. '[' → logprob: -3.572167158126831
    7. '
' → logprob: -4.57216739654541
    8. 'B' → logprob: -4.57216739654541
    9. '[
' → logprob: -4.94716739654541
    10. '_' → logprob: -5.19716739654541

Token 765: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20640666782855988
    2. '**' → logprob: -2.581406593322754
    3. '^' → logprob: -2.706406593322754
    4. '*' → logprob: -3.581406593322754
    5. ')' → logprob: -5.081406593322754
    6. '²' → logprob: -5.331406593322754
    7. '```' → logprob: -6.081406593322754
    8. '`' → logprob: -7.581406593322754
    9. '/' → logprob: -8.081406593322754
    10. '``' → logprob: -8.081406593322754

Token 766: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008133663795888424
    2. '+' → logprob: -6.133133888244629
    3. '*' → logprob: -6.758133888244629
    4. '[' → logprob: -7.008133888244629
    5. ')
' → logprob: -7.383133888244629
    6. '#' → logprob: -7.508133888244629
    7. '```' → logprob: -7.758133888244629
    8. '):' → logprob: -7.883133888244629
    9. '**' → logprob: -8.133133888244629
    10. '))' → logprob: -8.758133888244629

Token 767: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0053644259460270405
    2. '1' → logprob: -5.380364418029785
    3. ' A' → logprob: -7.380364418029785
    4. 'B' → logprob: -10.130364418029785
    5. ')' → logprob: -10.630364418029785
    6. 'log' → logprob: -11.005364418029785
    7. '
' → logprob: -11.255364418029785
    8. '```' → logprob: -11.255364418029785
    9. '100' → logprob: -12.380364418029785
    10. ' ' → logprob: -12.755364418029785

Token 768: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13288933038711548
    2. '```' → logprob: -3.5078892707824707
    3. ':' → logprob: -4.132889270782471
    4. '+' → logprob: -4.382889270782471
    5. '))' → logprob: -4.632889270782471
    6. '):' → logprob: -4.632889270782471
    7. '
' → logprob: -5.007889270782471
    8. 'for' → logprob: -5.382889270782471
    9. '[i' → logprob: -5.382889270782471
    10. '[' → logprob: -5.507889270782471

Token 769: ' =' (ID: 314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7510268688201904
    2. 'from' → logprob: -2.3760268688201904
    3. '```' → logprob: -2.3760268688201904
    4. 'for' → logprob: -2.8760268688201904
    5. 'dp' → logprob: -2.8760268688201904
    6. '#' → logprob: -3.2510268688201904
    7. ']' → logprob: -3.2510268688201904
    8. 'pos' → logprob: -3.3760268688201904
    9. 'positions' → logprob: -4.1260271072387695
    10. ')' → logprob: -4.7510271072387695

Token 770: ' ~' (ID: 6574)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0403484106063843
    2. '```' → logprob: -1.6653484106063843
    3. ' ' → logprob: -2.290348529815674
    4. ' A' → logprob: -2.540348529815674
    5. ')' → logprob: -3.040348529815674
    6. 'A' → logprob: -3.415348529815674
    7. '``' → logprob: -3.915348529815674
    8. ' B' → logprob: -3.915348529815674
    9. '"' → logprob: -4.040348529815674
    10. 'B' → logprob: -4.165348529815674

Token 771: '10' (ID: 702)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21984168887138367
    2. ' ' → logprob: -3.344841718673706
    3. '0' → logprob: -3.719841718673706
    4. '```' → logprob: -3.844841718673706
    5. '"' → logprob: -4.094841480255127
    6. '1' → logprob: -4.094841480255127
    7. '+' → logprob: -4.344841480255127
    8. '\n' → logprob: -4.594841480255127
    9. '2' → logprob: -4.969841480255127
    10. ''' → logprob: -5.094841480255127

Token 772: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09389130026102066
    2. ')' → logprob: -2.9688913822174072
    3. '00' → logprob: -3.5938913822174072
    4. '000' → logprob: -5.843891143798828
    5. '**' → logprob: -6.718891143798828
    6. ' **' → logprob: -6.718891143798828
    7. ' )' → logprob: -7.093891143798828
    8. ' ' → logprob: -7.468891143798828
    9. '1' → logprob: -7.468891143798828
    10. '^' → logprob: -7.718891143798828

Token 773: '11' (ID: 994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17716479301452637
    2. '^' → logprob: -2.9271647930145264
    3. '0' → logprob: -3.3021647930145264
    4. '_' → logprob: -3.5521647930145264
    5. '+' → logprob: -4.9271650314331055
    6. '```' → logprob: -5.3021650314331055
    7. '**' → logprob: -5.5521650314331055
    8. '[' → logprob: -5.8021650314331055
    9. '6' → logprob: -6.1771650314331055
    10. '#' → logprob: -6.4271650314331055

Token 774: ' too' (ID: 3101)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1542342901229858
    2. 'import' → logprob: -1.2792342901229858
    3. 'dp' → logprob: -1.5292342901229858
    4. 'from' → logprob: -2.0292344093322754
    5. 'pos' → logprob: -4.404234409332275
    6. 'next' → logprob: -5.029234409332275
    7. 'right' → logprob: -5.029234409332275
    8. '#' → logprob: -5.029234409332275
    9. 'def' → logprob: -5.529234409332275
    10. 'l' → logprob: -5.654234409332275

Token 775: ' big' (ID: 3464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4228174686431885
    2. '```' → logprob: -1.6728174686431885
    3. 'def' → logprob: -3.5478174686431885
    4. '[' → logprob: -3.6728174686431885
    5. '``' → logprob: -4.047817230224609
    6. ''' → logprob: -4.297817230224609
    7. 'for' → logprob: -4.547817230224609
    8. '`' → logprob: -5.297817230224609
    9. ']' → logprob: -5.422817230224609
    10. '"' → logprob: -5.422817230224609

Token 776: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3344722986221313
    2. 'next' → logprob: -1.7094722986221313
    3. 'import' → logprob: -1.8344722986221313
    4. 'dp' → logprob: -2.084472179412842
    5. 'for' → logprob: -2.459472179412842
    6. '#' → logprob: -3.459472179412842
    7. 'pos' → logprob: -3.459472179412842
    8. '```' → logprob: -3.584472179412842
    9. 'def' → logprob: -4.084472179412842
    10. 'positions' → logprob: -4.334472179412842

Token 777: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.42282620072364807
    2. 'import' → logprob: -2.2978262901306152
    3. 'for' → logprob: -2.9228262901306152
    4. 'from' → logprob: -2.9228262901306152
    5. '#' → logprob: -3.0478262901306152
    6. 'dp' → logprob: -3.5478262901306152
    7. 'pos' → logprob: -3.9228262901306152
    8. '```' → logprob: -5.047826290130615
    9. 'positions' → logprob: -5.047826290130615
    10. 'n' → logprob: -5.172826290130615

Token 778: ' Alternative' (ID: 52728)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6900639533996582
    2. 'from' → logprob: -0.8150639533996582
    3. 'next' → logprob: -3.190063953399658
    4. '#' → logprob: -4.815063953399658
    5. 'pos' → logprob: -5.315063953399658
    6. 'dp' → logprob: -7.315063953399658
    7. 'anna' → logprob: -7.940063953399658
    8. 'def' → logprob: -8.6900634765625
    9. '```' → logprob: -9.3150634765625
    10. 'positions' → logprob: -9.5650634765625

Token 779: ' approach' (ID: 7139)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5191015005111694
    2. 'import' → logprob: -1.6441015005111694
    3. '#' → logprob: -2.394101619720459
    4. 'next' → logprob: -3.019101619720459
    5. 'dp' → logprob: -3.394101619720459
    6. 'positions' → logprob: -4.894101619720459
    7. '```' → logprob: -5.019101619720459
    8. 'for' → logprob: -5.519101619720459
    9. 'pos' → logprob: -5.519101619720459
    10. 'n' → logprob: -5.769101619720459

Token 780: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43032652139663696
    2. 'next' → logprob: -1.6803264617919922
    3. 'import' → logprob: -2.680326461791992
    4. 'dp' → logprob: -2.930326461791992
    5. '#' → logprob: -3.680326461791992
    6. 'pos' → logprob: -4.805326461791992
    7. 'for' → logprob: -5.805326461791992
    8. 'positions' → logprob: -6.305326461791992
    9. 'anna' → logprob: -7.055326461791992
    10. 'prev' → logprob: -7.930326461791992

Token 781: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17008627951145172
    2. '#' → logprob: -2.54508638381958
    3. 'import' → logprob: -2.92008638381958
    4. 'dp' → logprob: -4.79508638381958
    5. 'next' → logprob: -4.92008638381958
    6. 'anna' → logprob: -5.29508638381958
    7. '```' → logprob: -6.29508638381958
    8. 'pos' → logprob: -7.29508638381958
    9. 'positions' → logprob: -8.420085906982422
    10. 'Next' → logprob: -8.795085906982422

Token 782: ' Let's' (ID: 41021)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19965025782585144
    2. 'next' → logprob: -2.449650287628174
    3. '#' → logprob: -2.949650287628174
    4. 'import' → logprob: -3.324650287628174
    5. 'pos' → logprob: -5.199650287628174
    6. 'dp' → logprob: -7.949650287628174
    7. 'Next' → logprob: -9.199649810791016
    8. 'max' → logprob: -9.324649810791016
    9. 'anna' → logprob: -9.324649810791016
    10. 'n' → logprob: -9.949649810791016

Token 783: ' switch' (ID: 6160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3620440363883972
    2. 'import' → logprob: -1.612044095993042
    3. 'dp' → logprob: -2.612044095993042
    4. '#' → logprob: -4.987043857574463
    5. 'next' → logprob: -5.612043857574463
    6. 'continue' → logprob: -5.737043857574463
    7. 'pre' → logprob: -5.987043857574463
    8. 'pos' → logprob: -6.237043857574463
    9. 'build' → logprob: -6.237043857574463
    10. '```' → logprob: -6.362043857574463

Token 784: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5831918716430664
    2. 'for' → logprob: -1.9581918716430664
    3. 'from' → logprob: -2.3331918716430664
    4. 'i' → logprob: -2.7081918716430664
    5. 'import' → logprob: -3.4581918716430664
    6. 'n' → logprob: -3.5831918716430664
    7. '#' → logprob: -4.208191871643066
    8. 'max' → logprob: -4.958191871643066
    9. 'j' → logprob: -5.208191871643066
    10. 'd' → logprob: -5.583191871643066

Token 785: ' approach' (ID: 7139)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5185101628303528
    2. '```' → logprob: -2.018510103225708
    3. 'length' → logprob: -2.518510103225708
    4. 'br' → logprob: -2.893510103225708
    5. 'code' → logprob: -4.018510341644287
    6. '#' → logprob: -4.393510341644287
    7. 'for' → logprob: -4.518510341644287
    8. 'pointer' → logprob: -4.643510341644287
    9. 'j' → logprob: -4.768510341644287
    10. 'following' → logprob: -4.768510341644287

Token 786: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05028879642486572
    2. 'next' → logprob: -3.800288677215576
    3. 'from' → logprob: -4.300288677215576
    4. '#' → logprob: -5.675288677215576
    5. 'import' → logprob: -5.675288677215576
    6. 'pos' → logprob: -6.050288677215576
    7. 'for' → logprob: -6.550288677215576
    8. 'prev' → logprob: -7.425288677215576
    9. 'n' → logprob: -7.550288677215576
    10. 'max' → logprob: -7.675288677215576

Token 787: ' find' (ID: 1646)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3782108426094055
    2. 'a' → logprob: -1.6282107830047607
    3. 'd' → logprob: -3.8782107830047607
    4. '```' → logprob: -4.12821102142334
    5. 'i' → logprob: -4.50321102142334
    6. 'n' → logprob: -5.00321102142334
    7. '`' → logprob: -5.25321102142334
    8. 'b' → logprob: -5.25321102142334
    9. 'for' → logprob: -5.50321102142334
    10. '#' → logprob: -5.50321102142334

Token 788: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28026083111763
    2. 'the' → logprob: -2.1552608013153076
    3. 'for' → logprob: -3.1552608013153076
    4. '```' → logprob: -3.5302608013153076
    5. 'a' → logprob: -3.6552608013153076
    6. '#' → logprob: -5.030261039733887
    7. 'max' → logprob: -5.530261039733887
    8. ' for' → logprob: -5.780261039733887
    9. 'from' → logprob: -5.905261039733887
    10. 'length' → logprob: -6.030261039733887

Token 789: ' longest' (ID: 37511)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.890934944152832
    2. 'dp' → logprob: -1.390934944152832
    3. 'long' → logprob: -1.765934944152832
    4. 'maximum' → logprob: -2.015934944152832
    5. 'max' → logprob: -4.015934944152832
    6. 'same' → logprob: -5.015934944152832
    7. '```' → logprob: -5.640934944152832
    8. 'common' → logprob: -6.390934944152832
    9. '#' → logprob: -6.390934944152832
    10. 'br' → logprob: -6.765934944152832

Token 790: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.19490006566047668
    2. '```' → logprob: -2.3199000358581543
    3. 'length' → logprob: -4.569900035858154
    4. '_common' → logprob: -4.694900035858154
    5. 'br' → logprob: -4.819900035858154
    6. '_' → logprob: -4.819900035858154
    7. 'matching' → logprob: -5.319900035858154
    8. 'substring' → logprob: -5.444900035858154
    9. 'dp' → logprob: -5.569900035858154
    10. 'for' → logprob: -5.694900035858154

Token 791: ' substring' (ID: 89494)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.8431750535964966
    2. 'length' → logprob: -1.0931750535964966
    3. '```' → logprob: -2.968174934387207
    4. 'substring' → logprob: -3.593174934387207
    5. '_length' → logprob: -3.718174934387207
    6. 'matching' → logprob: -4.093174934387207
    7. 'sub' → logprob: -4.093174934387207
    8. '_common' → logprob: -4.468174934387207
    9. '_' → logprob: -4.468174934387207
    10. '
' → logprob: -4.593174934387207

Token 792: ' between' (ID: 2870)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17709308862686157
    2. 'for' → logprob: -2.552093029022217
    3. 'import' → logprob: -4.302093029022217
    4. ']' → logprob: -4.802093029022217
    5. 'i' → logprob: -4.802093029022217
    6. 'max' → logprob: -4.927093029022217
    7. '\' → logprob: -5.427093029022217
    8. '_' → logprob: -5.552093029022217
    9. 'n' → logprob: -5.552093029022217
    10. ',' → logprob: -5.802093029022217

Token 793: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.020047763362526894
    2. '```' → logprob: -4.770047664642334
    3. 'br' → logprob: -5.395047664642334
    4. ' anna' → logprob: -5.645047664642334
    5. '`' → logprob: -7.895047664642334
    6. 'Anna' → logprob: -7.895047664642334
    7. 'A' → logprob: -8.020048141479492
    8. ' ' → logprob: -8.270048141479492
    9. ')' → logprob: -8.395048141479492
    10. 'a' → logprob: -8.770048141479492

Token 794: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0496031679213047
    2. ''' → logprob: -3.674603223800659
    3. '```' → logprob: -5.29960298538208
    4. '[' → logprob: -5.42460298538208
    5. '_
' → logprob: -5.54960298538208
    6. '`' → logprob: -6.29960298538208
    7. '[]' → logprob: -7.04960298538208
    8. 'A' → logprob: -7.17460298538208
    9. '"' → logprob: -7.29960298538208
    10. '[i' → logprob: -7.67460298538208

Token 795: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0061291721649467945
    2. 'Br' → logprob: -6.006129264831543
    3. '```' → logprob: -6.131129264831543
    4. ' br' → logprob: -7.006129264831543
    5. 'anna' → logprob: -7.756129264831543
    6. '`' → logprob: -11.006129264831543
    7. '	br' → logprob: -11.006129264831543
    8. ' ' → logprob: -11.006129264831543
    9. 'B' → logprob: -11.256129264831543
    10. 'Anna' → logprob: -11.506129264831543

Token 796: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8917869925498962
    2. '[' → logprob: -1.016787052154541
    3. '[
' → logprob: -2.641787052154541
    4. '[i' → logprob: -3.391787052154541
    5. 'dp' → logprob: -4.016787052154541
    6. '_dp' → logprob: -4.141787052154541
    7. '=' → logprob: -4.516787052154541
    8. ']' → logprob: -4.516787052154541
    9. '```' → logprob: -4.516787052154541
    10. '_
' → logprob: -4.891787052154541

Token 797: ' a' (ID: 261)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.3733049631118774
    2. '```' → logprob: -1.6233049631118774
    3. 'anna' → logprob: -1.8733049631118774
    4. 'out' → logprob: -2.123304843902588
    5. 'a' → logprob: -2.498304843902588
    6. 'the' → logprob: -3.498304843902588
    7. 'A' → logprob: -3.998304843902588
    8. 'two' → logprob: -4.373304843902588
    9. '``' → logprob: -4.623304843902588
    10. 'each' → logprob: -4.748304843902588

Token 798: ' twist' (ID: 38337)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8004720211029053
    2. 'DP' → logprob: -2.1754720211029053
    3. '```' → logprob: -3.1754720211029053
    4. '
' → logprob: -3.4254720211029053
    5. '_dp' → logprob: -3.6754720211029053
    6. ' dp' → logprob: -3.6754720211029053
    7. '[' → logprob: -3.8004720211029053
    8. '#' → logprob: -3.8004720211029053
    9. '[
' → logprob: -3.9254720211029053
    10. 'suffix' → logprob: -4.050472259521484

Token 799: ':

' (ID: 1402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.014434814453125
    2. 'dp' → logprob: -1.514434814453125
    3. '_
' → logprob: -2.264434814453125
    4. '_dp' → logprob: -2.639434814453125
    5. '[
' → logprob: -3.014434814453125
    6. '[' → logprob: -3.514434814453125
    7. '```' → logprob: -3.764434814453125
    8. 'for' → logprob: -3.889434814453125
    9. '\' → logprob: -4.514434814453125
    10. ' =' → logprob: -4.514434814453125

Token 800: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40626272559165955
    2. 'import' → logprob: -1.781262755393982
    3. 'from' → logprob: -2.7812626361846924
    4. 'l' → logprob: -3.6562626361846924
    5. 'for' → logprob: -4.0312628746032715
    6. '```' → logprob: -4.1562628746032715
    7. 'i' → logprob: -4.6562628746032715
    8. '#' → logprob: -5.1562628746032715
    9. '
' → logprob: -5.5312628746032715
    10. '"""
' → logprob: -5.5312628746032715

Token 801: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.071010522544384
    2. 'import' → logprob: -3.8210105895996094
    3. 'from' → logprob: -3.8210105895996094
    4. 'l' → logprob: -4.696010589599609
    5. '#' → logprob: -5.446010589599609
    6. '"""
' → logprob: -5.696010589599609
    7. 'i' → logprob: -6.196010589599609
    8. 'for' → logprob: -6.321010589599609
    9. '```' → logprob: -6.571010589599609
    10. 'n' → logprob: -7.696010589599609

Token 802: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8443238139152527
    2. 'can' → logprob: -1.2193238735198975
    3. '#' → logprob: -1.8443238735198975
    4. '[' → logprob: -3.0943238735198975
    5. ''' → logprob: -4.344323635101318
    6. '_' → logprob: -4.469323635101318
    7. '.' → logprob: -4.719323635101318
    8. 's' → logprob: -4.969323635101318
    9. '[]' → logprob: -4.969323635101318
    10. '=' → logprob: -5.469323635101318

Token 803: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4754679203033447
    2. ' to' → logprob: -1.7254679203033447
    3. 'dp' → logprob: -1.7254679203033447
    4. 'to' → logprob: -2.2254679203033447
    5. '[
' → logprob: -2.6004679203033447
    6. '```' → logprob: -2.9754679203033447
    7. 'a' → logprob: -3.2254679203033447
    8. '[]' → logprob: -3.6004679203033447
    9. 'for' → logprob: -3.7254679203033447
    10. '[]
' → logprob: -3.9754679203033447

Token 804: ' longest' (ID: 37511)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20975585281848907
    2. 'length' → logprob: -2.9597558975219727
    3. 'long' → logprob: -3.3347558975219727
    4. '#' → logprob: -3.7097558975219727
    5. 'same' → logprob: -4.084755897521973
    6. 'import' → logprob: -4.334755897521973
    7. 'l' → logprob: -4.834755897521973
    8. 'for' → logprob: -5.209755897521973
    9. 'L' → logprob: -5.334755897521973
    10. 'max' → logprob: -5.709755897521973

Token 805: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.002207474084571004
    2. ' common' → logprob: -6.377207279205322
    3. '
' → logprob: -9.25220775604248
    4. 'substring' → logprob: -9.25220775604248
    5. '```' → logprob: -9.25220775604248
    6. '_common' → logprob: -10.12720775604248
    7. 'length' → logprob: -10.12720775604248
    8. 'matching' → logprob: -10.50220775604248
    9. 'prefix' → logprob: -10.87720775604248
    10. 'commons' → logprob: -11.00220775604248

Token 806: ' substring' (ID: 89494)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10400161892175674
    2. '_sub' → logprob: -2.729001522064209
    3. 'substring' → logprob: -4.479001522064209
    4. ' _' → logprob: -5.854001522064209
    5. '_common' → logprob: -6.104001522064209
    6. '_sequence' → logprob: -6.354001522064209
    7. 'sub' → logprob: -6.354001522064209
    8. 'string' → logprob: -6.479001522064209
    9. 'sequence' → logprob: -6.479001522064209
    10. '_character' → logprob: -6.604001522064209

Token 807: ' between' (ID: 2870)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08623893558979034
    2. '_
' → logprob: -3.7112388610839844
    3. '[' → logprob: -4.461238861083984
    4. '```' → logprob: -4.586238861083984
    5. '[
' → logprob: -4.961238861083984
    6. '_length' → logprob: -5.711238861083984
    7. '[i' → logprob: -5.836238861083984
    8. '`' → logprob: -6.086238861083984
    9. '_dp' → logprob: -6.211238861083984
    10. ''' → logprob: -6.211238861083984

Token 808: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.005302300211042166
    2. ' anna' → logprob: -6.255302429199219
    3. '```' → logprob: -7.005302429199219
    4. '`' → logprob: -7.130302429199219
    5. 'Anna' → logprob: -7.130302429199219
    6. 'br' → logprob: -7.630302429199219
    7. '``' → logprob: -9.755302429199219
    8. ' ' → logprob: -9.880302429199219
    9. 'A' → logprob: -10.380302429199219
    10. '   ' → logprob: -10.505302429199219

Token 809: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3497706651687622
    2. '```' → logprob: -2.5997705459594727
    3. ''' → logprob: -3.0997705459594727
    4. '[i' → logprob: -3.3497705459594727
    5. '[
' → logprob: -3.3497705459594727
    6. '_' → logprob: -3.4747705459594727
    7. '`' → logprob: -3.9747705459594727
    8. ''s' → logprob: -4.474770545959473
    9. '[]' → logprob: -5.099770545959473
    10. '[A' → logprob: -5.349770545959473

Token 810: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.02817589044570923
    2. 'Br' → logprob: -3.7781758308410645
    3. 'anna' → logprob: -6.0281758308410645
    4. ' br' → logprob: -6.4031758308410645
    5. '```' → logprob: -8.153176307678223
    6. 'B' → logprob: -8.528176307678223
    7. 'Anna' → logprob: -9.028176307678223
    8. '`' → logprob: -9.778176307678223
    9. ' ' → logprob: -10.653176307678223
    10. '	br' → logprob: -10.778176307678223

Token 811: '.

' (ID: 364)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5509229302406311
    2. '[' → logprob: -1.4259228706359863
    3. '_dp' → logprob: -3.0509228706359863
    4. '[i' → logprob: -3.4259228706359863
    5. 'dp' → logprob: -4.050922870635986
    6. '[
' → logprob: -4.175922870635986
    7. '```' → logprob: -4.300922870635986
    8. '=' → logprob: -4.425922870635986
    9. ',' → logprob: -5.425922870635986
    10. ' =' → logprob: -5.675922870635986

Token 812: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16166065633296967
    2. '[' → logprob: -2.536660671234131
    3. '```' → logprob: -4.161660671234131
    4. ''' → logprob: -4.286660671234131
    5. '[i' → logprob: -4.411660671234131
    6. '#' → logprob: -5.536660671234131
    7. '[]' → logprob: -5.911660671234131
    8. '[
' → logprob: -6.036660671234131
    9. '_
' → logprob: -6.286660671234131
    10. '`' → logprob: -6.286660671234131

Token 813: ' But' (ID: 3072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1495286226272583
    2. '[' → logprob: -2.0245285034179688
    3. 'dp' → logprob: -2.1495285034179688
    4. '#' → logprob: -2.3995285034179688
    5. '```' → logprob: -2.8995285034179688
    6. ''' → logprob: -3.5245285034179688
    7. 'for' → logprob: -3.6495285034179688
    8. '`' → logprob: -3.6495285034179688
    9. '"' → logprob: -3.6495285034179688
    10. '=' → logprob: -4.149528503417969

Token 814: ' Anna' (ID: 34101)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9590955376625061
    2. '_' → logprob: -1.8340954780578613
    3. '```' → logprob: -2.0840954780578613
    4. '#' → logprob: -2.9590954780578613
    5. '`' → logprob: -3.2090954780578613
    6. '"' → logprob: -3.2090954780578613
    7. 'anna' → logprob: -3.4590954780578613
    8. '[]' → logprob: -3.7090954780578613
    9. 'br' → logprob: -4.209095478057861
    10. '\n' → logprob: -4.834095478057861

Token 815: ''s' (ID: 885)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7148114442825317
    2. ''' → logprob: -1.7148114442825317
    3. '[' → logprob: -1.8398114442825317
    4. ''s' → logprob: -2.214811325073242
    5. ''[' → logprob: -4.339811325073242
    6. '_' → logprob: -4.464811325073242
    7. '#' → logprob: -4.839811325073242
    8. '[
' → logprob: -5.464811325073242
    9. '```' → logprob: -5.464811325073242
    10. ''_' → logprob: -5.964811325073242

Token 816: ' subse' (ID: 19874)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -1.305759072303772
    2. '_cards' → logprob: -1.305759072303772
    3. ''s' → logprob: -1.430759072303772
    4. '_sub' → logprob: -2.6807589530944824
    5. 'can' → logprob: -2.8057589530944824
    6. '_can' → logprob: -4.305758953094482
    7. ' cards' → logprob: -4.305758953094482
    8. '#' → logprob: -4.680758953094482
    9. ''' → logprob: -4.805758953094482
    10. ' can' → logprob: -4.930758953094482

Token 817: 'quence' (ID: 6975)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.14261499047279358
    2. 'quence' → logprob: -2.1426150798797607
    3. 'string' → logprob: -4.392614841461182
    4. 'quences' → logprob: -7.142614841461182
    5. '[]' → logprob: -7.267614841461182
    6. 'seq' → logprob: -7.517614841461182
    7. '_sequence' → logprob: -7.892614841461182
    8. 'q' → logprob: -8.51761531829834
    9. '```' → logprob: -9.14261531829834
    10. '[' → logprob: -9.26761531829834

Token 818: ' must' (ID: 2804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7032647728919983
    2. '[i' → logprob: -1.9532647132873535
    3. '_' → logprob: -2.4532647132873535
    4. ''s' → logprob: -3.0782647132873535
    5. 'A' → logprob: -3.5782647132873535
    6. 'can' → logprob: -3.9532647132873535
    7. ''' → logprob: -3.9532647132873535
    8. '#' → logprob: -4.0782647132873535
    9. '```' → logprob: -4.0782647132873535
    10. '[]' → logprob: -4.3282647132873535

Token 819: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.291909396648407
    2. 'be' → logprob: -1.4169094562530518
    3. ' also' → logprob: -4.916909217834473
    4. 'also' → logprob: -6.291909217834473
    5. ' not' → logprob: -7.291909217834473
    6. ' only' → logprob: -8.791909217834473
    7. 'not' → logprob: -8.791909217834473
    8. 'must' → logprob: -9.291909217834473
    9. '```' → logprob: -9.791909217834473
    10. ' must' → logprob: -9.791909217834473

Token 820: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.43018749356269836
    2. 'cont' → logprob: -1.055187463760376
    3. ' cont' → logprob: -7.555187702178955
    4. '_cont' → logprob: -8.180187225341797
    5. 'continuous' → logprob: -8.180187225341797
    6. 'a' → logprob: -9.180187225341797
    7. ' a' → logprob: -9.180187225341797
    8. '```' → logprob: -10.055187225341797
    9. 'contained' → logprob: -10.305187225341797
    10. 'con' → logprob: -10.555187225341797

Token 821: ' because' (ID: 2236)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9185329079627991
    2. '```' → logprob: -1.1685328483581543
    3. '[' → logprob: -2.1685328483581543
    4. '_' → logprob: -2.9185328483581543
    5. '``' → logprob: -3.6685328483581543
    6. '[
' → logprob: -3.9185328483581543
    7. '`' → logprob: -4.543532848358154
    8. '[]' → logprob: -4.793532848358154
    9. '_
' → logprob: -4.918532848358154
    10. ']' → logprob: -5.168532848358154

Token 822: ' after' (ID: 1934)
  Prédit: 'Anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Anna' → logprob: -1.175072193145752
    2. 'anna' → logprob: -1.300072193145752
    3. 'the' → logprob: -2.300072193145752
    4. 'br' → logprob: -2.425072193145752
    5. ' anna' → logprob: -2.675072193145752
    6. ' the' → logprob: -3.425072193145752
    7. ' Anna' → logprob: -3.550072193145752
    8. 'A' → logprob: -4.175072193145752
    9. 'Br' → logprob: -4.675072193145752
    10. ' both' → logprob: -5.050072193145752

Token 823: ' disc' (ID: 2960)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7121922969818115
    2. 'Anna' → logprob: -2.0871922969818115
    3. 'discard' → logprob: -2.0871922969818115
    4. 'the' → logprob: -2.7121922969818115
    5. '```' → logprob: -2.9621922969818115
    6. 'all' → logprob: -3.3371922969818115
    7. 'A' → logprob: -3.7121922969818115
    8. 'taking' → logprob: -4.212192535400391
    9. '#' → logprob: -4.337192535400391
    10. '``' → logprob: -4.962192535400391

Token 824: 'arding' (ID: 36207)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.41521990299224854
    2. 'ont' → logprob: -1.4152199029922485
    3. 'a' → logprob: -3.915219783782959
    4. '#' → logprob: -4.665219783782959
    5. 't' → logprob: -4.790219783782959
    6. ']' → logprob: -4.790219783782959
    7. '``' → logprob: -4.790219783782959
    8. 'u' → logprob: -5.165219783782959
    9. 'ards' → logprob: -5.290219783782959
    10. '[' → logprob: -5.290219783782959

Token 825: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35965919494628906
    2. '[' → logprob: -2.109659194946289
    3. '```' → logprob: -2.359659194946289
    4. '[i' → logprob: -3.359659194946289
    5. '`' → logprob: -4.484659194946289
    6. '[]' → logprob: -5.484659194946289
    7. 's' → logprob: -5.484659194946289
    8. '#' → logprob: -5.609659194946289
    9. '[
' → logprob: -5.609659194946289
    10. ']' → logprob: -5.609659194946289

Token 826: ' their' (ID: 1043)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.43031564354896545
    2. 'the' → logprob: -2.3053157329559326
    3. 'Anna' → logprob: -2.9303157329559326
    4. '#' → logprob: -3.3053157329559326
    5. ' anna' → logprob: -3.3053157329559326
    6. ' the' → logprob: -3.6803157329559326
    7. 'br' → logprob: -3.6803157329559326
    8. 'they' → logprob: -4.1803154945373535
    9. '```' → logprob: -4.5553154945373535
    10. 'since' → logprob: -4.6803154945373535

Token 827: ' pile' (ID: 39732)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.780270516872406
    2. ' cards' → logprob: -1.9052705764770508
    3. ' subse' → logprob: -2.655270576477051
    4. '```' → logprob: -2.780270576477051
    5. 'sub' → logprob: -3.280270576477051
    6. 'sequence' → logprob: -3.405270576477051
    7. '_cards' → logprob: -3.530270576477051
    8. 's' → logprob: -3.655270576477051
    9. '_sub' → logprob: -4.155270576477051
    10. '`' → logprob: -4.280270576477051

Token 828: ' must' (ID: 2804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4378552734851837
    2. '[' → logprob: -2.1878552436828613
    3. 's' → logprob: -2.8128552436828613
    4. '[i' → logprob: -2.8128552436828613
    5. '```' → logprob: -3.0628552436828613
    6. '=' → logprob: -4.187855243682861
    7. ''' → logprob: -4.187855243682861
    8. '[
' → logprob: -5.062855243682861
    9. '`' → logprob: -5.312855243682861
    10. '[]' → logprob: -5.562855243682861

Token 829: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.20588740706443787
    2. ' be' → logprob: -1.7058874368667603
    3. '#' → logprob: -6.455887317657471
    4. '```' → logprob: -6.580887317657471
    5. 'must' → logprob: -8.205887794494629
    6. 'remain' → logprob: -8.455887794494629
    7. '_be' → logprob: -8.455887794494629
    8. 'is' → logprob: -8.705887794494629
    9. ' is' → logprob: -8.705887794494629
    10. ' #' → logprob: -9.580887794494629

Token 830: ' linear' (ID: 23876)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.1027667447924614
    2. 'cont' → logprob: -2.352766752243042
    3. '```' → logprob: -6.477766513824463
    4. 'also' → logprob: -8.352766990661621
    5. 'a' → logprob: -8.602766990661621
    6. 'continuous' → logprob: -9.102766990661621
    7. 'con' → logprob: -9.602766990661621
    8. ' cont' → logprob: -9.602766990661621
    9. '``' → logprob: -9.852766990661621
    10. '
' → logprob: -10.102766990661621

Token 831: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.140956163406372
    2. '[i' → logprob: -1.390956163406372
    3. '_' → logprob: -1.640956163406372
    4. '[' → logprob: -2.640956163406372
    5. '``' → logprob: -3.390956163406372
    6. '[
' → logprob: -3.515956163406372
    7. '`' → logprob: -3.890956163406372
    8. '[]' → logprob: -4.015955924987793
    9. ''' → logprob: -4.390955924987793
    10. 's' → logprob: -4.765955924987793

Token 832: ' contiguous' (ID: 130997)
  Prédit: ' contiguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.3261173665523529
    2. '```' → logprob: -2.0761172771453857
    3. 'cont' → logprob: -3.0761172771453857
    4. '``' → logprob: -3.9511172771453857
    5. 'appear' → logprob: -4.701117515563965
    6. 'continuous' → logprob: -4.826117515563965
    7. 'consistent' → logprob: -4.951117515563965
    8. 'A' → logprob: -5.201117515563965
    9. 'Anna' → logprob: -5.326117515563965
    10. 'must' → logprob: -5.326117515563965

Token 833: '.

' (ID: 364)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7534439563751221
    2. '[i' → logprob: -1.503443956375122
    3. '[' → logprob: -1.878443956375122
    4. '```' → logprob: -3.003443956375122
    5. '[
' → logprob: -3.753443956375122
    6. ']' → logprob: -4.628443717956543
    7. '[]' → logprob: -4.628443717956543
    8. '=' → logprob: -5.003443717956543
    9. 's' → logprob: -5.128443717956543
    10. ''' → logprob: -5.128443717956543

Token 834: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9153658747673035
    2. '```' → logprob: -1.5403659343719482
    3. '[' → logprob: -2.0403659343719482
    4. '[i' → logprob: -2.5403659343719482
    5. '[]' → logprob: -2.9153659343719482
    6. 's' → logprob: -3.7903659343719482
    7. ''' → logprob: -4.415365695953369
    8. '#' → logprob: -4.915365695953369
    9. '`' → logprob: -5.040365695953369
    10. '[
' → logprob: -5.040365695953369

Token 835: ' No' (ID: 3004)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2832624912261963
    2. 'dp' → logprob: -1.4082624912261963
    3. '```' → logprob: -2.1582624912261963
    4. 'a' → logprob: -3.2832624912261963
    5. ']' → logprob: -3.4082624912261963
    6. '#' → logprob: -3.6582624912261963
    7. '[' → logprob: -3.6582624912261963
    8. 'i' → logprob: -3.7832624912261963
    9. 'for' → logprob: -3.9082624912261963
    10. '=' → logprob: -4.158262252807617

Token 836: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5578445792198181
    2. '_' → logprob: -2.307844638824463
    3. '[i' → logprob: -2.432844638824463
    4. '#' → logprob: -2.682844638824463
    5. '[
' → logprob: -3.557844638824463
    6. 'a' → logprob: -3.682844638824463
    7. '```' → logprob: -3.682844638824463
    8. '=' → logprob: -3.807844638824463
    9. ']' → logprob: -4.557844638824463
    10. '[]' → logprob: -4.807844638824463

Token 837: ' Anna' (ID: 34101)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.875590980052948
    2. '[' → logprob: -1.5005910396575928
    3. '#' → logprob: -2.6255910396575928
    4. '\' → logprob: -3.1255910396575928
    5. ''' → logprob: -3.2505910396575928
    6. 'a' → logprob: -3.7505910396575928
    7. '\n' → logprob: -3.8755910396575928
    8. '[]' → logprob: -4.000590801239014
    9. '[
' → logprob: -4.375590801239014
    10. '_' → logprob: -4.375590801239014

Token 838: ' can' (ID: 665)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13110238313674927
    2. '[' → logprob: -3.1311023235321045
    3. ''[' → logprob: -3.3811023235321045
    4. '[i' → logprob: -3.8811023235321045
    5. ''s' → logprob: -4.131102561950684
    6. '#' → logprob: -6.381102561950684
    7. '```' → logprob: -6.381102561950684
    8. '[
' → logprob: -7.131102561950684
    9. ''''' → logprob: -7.256102561950684
    10. '[n' → logprob: -7.381102561950684

Token 839: ' discard' (ID: 79636)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.0429563522338867
    2. '[' → logprob: -1.2929563522338867
    3. ' only' → logprob: -1.7929563522338867
    4. ''' → logprob: -2.5429563522338867
    5. ' can' → logprob: -3.0429563522338867
    6. 'can' → logprob: -3.6679563522338867
    7. '[]' → logprob: -3.9179563522338867
    8. 'only' → logprob: -4.542956352233887
    9. '[
' → logprob: -5.542956352233887
    10. ' be' → logprob: -5.792956352233887

Token 840: ' cards' (ID: 10541)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31610819697380066
    2. '[' → logprob: -1.941108226776123
    3. '[i' → logprob: -2.691108226776123
    4. ''s' → logprob: -4.191108226776123
    5. '_' → logprob: -4.441108226776123
    6. '```' → logprob: -4.691108226776123
    7. ''[' → logprob: -5.441108226776123
    8. '[
' → logprob: -5.691108226776123
    9. '[n' → logprob: -5.816108226776123
    10. '[]' → logprob: -5.941108226776123

Token 841: ' arbitr' (ID: 31157)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6036487817764282
    2. 'dp' → logprob: -1.8536487817764282
    3. 'for' → logprob: -2.2286486625671387
    4. ']' → logprob: -2.2286486625671387
    5. '[' → logprob: -2.6036486625671387
    6. '[i' → logprob: -2.8536486625671387
    7. '```' → logprob: -3.4786486625671387
    8. '[
' → logprob: -3.6036486625671387
    9. '][' → logprob: -3.6036486625671387
    10. ']+' → logprob: -4.353648662567139

Token 842: 'arily' (ID: 10581)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44682687520980835
    2. '[
' → logprob: -2.446826934814453
    3. ''s' → logprob: -2.946826934814453
    4. ''t' → logprob: -2.946826934814453
    5. '```' → logprob: -3.696826934814453
    6. '`' → logprob: -3.821826934814453
    7. '']' → logprob: -4.321826934814453
    8. 'ary' → logprob: -4.696826934814453
    9. '[' → logprob: -4.821826934814453
    10. ''
' → logprob: -4.821826934814453

Token 843: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8767398595809937
    2. 'for' → logprob: -1.8767398595809937
    3. '[
' → logprob: -2.251739978790283
    4. '[' → logprob: -3.501739978790283
    5. ']' → logprob: -3.501739978790283
    6. '```' → logprob: -3.501739978790283
    7. '[i' → logprob: -4.001739978790283
    8. '][' → logprob: -4.001739978790283
    9. '=' → logprob: -4.126739978790283
    10. 'import' → logprob: -4.126739978790283

Token 844: ' so' (ID: 813)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.1855899095535278
    2. '[' → logprob: -1.6855899095535278
    3. 'but' → logprob: -2.3105897903442383
    4. '```' → logprob: -2.3105897903442383
    5. '[
' → logprob: -2.4355897903442383
    6. ''' → logprob: -3.0605897903442383
    7. ' so' → logprob: -3.8105897903442383
    8. '#' → logprob: -4.060589790344238
    9. ' not' → logprob: -4.310589790344238
    10. '"' → logprob: -4.435589790344238

Token 845: ' her' (ID: 1335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8019143342971802
    2. 'dp' → logprob: -2.0519142150878906
    3. '[' → logprob: -2.4269142150878906
    4. 'i' → logprob: -2.6769142150878906
    5. 'for' → logprob: -2.8019142150878906
    6. '_' → logprob: -2.9269142150878906
    7. '```' → logprob: -2.9269142150878906
    8. 'b' → logprob: -3.3019142150878906
    9. 'j' → logprob: -3.4269142150878906
    10. 'n' → logprob: -3.5519142150878906

Token 846: ' pile' (ID: 39732)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.4304578900337219
    2. 'dp' → logprob: -2.055457830429077
    3. '_sub' → logprob: -3.555457830429077
    4. 'next' → logprob: -3.805457830429077
    5. 'long' → logprob: -3.930457830429077
    6. '[i' → logprob: -4.180458068847656
    7. ''s' → logprob: -4.180458068847656
    8. 'answer' → logprob: -4.305458068847656
    9. '
' → logprob: -4.430458068847656
    10. '[' → logprob: -4.430458068847656

Token 847: ' is' (ID: 382)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.2052687555551529
    2. '=' → logprob: -2.4552688598632812
    3. 'can' → logprob: -3.2052688598632812
    4. ' =' → logprob: -4.830268859863281
    5. '[i' → logprob: -4.830268859863281
    6. '```' → logprob: -4.830268859863281
    7. '[' → logprob: -4.955268859863281
    8. ' must' → logprob: -4.955268859863281
    9. 'is' → logprob: -5.455268859863281
    10. '_' → logprob: -5.830268859863281

Token 848: ' a' (ID: 261)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -0.2501290738582611
    2. 'cont' → logprob: -2.000128984451294
    3. 'always' → logprob: -4.000129222869873
    4. 'a' → logprob: -4.000129222869873
    5. 'any' → logprob: -4.125129222869873
    6. 'also' → logprob: -5.125129222869873
    7. ' always' → logprob: -5.250129222869873
    8. 'only' → logprob: -5.500129222869873
    9. ' a' → logprob: -5.875129222869873
    10. 'necessarily' → logprob: -6.000129222869873

Token 849: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.35198232531547546
    2. ' subse' → logprob: -1.2269823551177979
    3. ' contiguous' → logprob: -6.101982116699219
    4. 'subset' → logprob: -6.976982116699219
    5. 'cont' → logprob: -8.726982116699219
    6. 'substring' → logprob: -9.601982116699219
    7. ' sub' → logprob: -10.476982116699219
    8. ' subset' → logprob: -10.476982116699219
    9. 's' → logprob: -10.476982116699219
    10. '[sub' → logprob: -11.601982116699219

Token 850: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.6933231949806213
    2. 'sequence' → logprob: -0.6933231949806213
    3. 'q' → logprob: -9.568323135375977
    4. 'quences' → logprob: -9.818323135375977
    5. ' sequence' → logprob: -11.193323135375977
    6. 'QUENCE' → logprob: -11.693323135375977
    7. ']' → logprob: -12.068323135375977
    8. '[]' → logprob: -12.318323135375977
    9. '_sequence' → logprob: -12.318323135375977
    10. 'qu' → logprob: -12.693323135375977

Token 851: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5458374619483948
    2. '[
' → logprob: -2.42083740234375
    3. '_dp' → logprob: -3.17083740234375
    4. '[' → logprob: -3.29583740234375
    5. '_
' → logprob: -3.29583740234375
    6. '[i' → logprob: -3.29583740234375
    7. '```' → logprob: -3.42083740234375
    8. 'import' → logprob: -3.79583740234375
    9. '_' → logprob: -4.29583740234375
    10. 'for' → logprob: -4.42083740234375

Token 852: ' can' (ID: 665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4418140649795532
    2. '```' → logprob: -1.5668140649795532
    3. '=' → logprob: -1.9418140649795532
    4. 'br' → logprob: -3.0668139457702637
    5. ')' → logprob: -3.4418139457702637
    6. '[]' → logprob: -3.5668139457702637
    7. ':' → logprob: -3.6918139457702637
    8. '_' → logprob: -3.8168139457702637
    9. '[
' → logprob: -3.8168139457702637
    10. '.' → logprob: -3.9418139457702637

Token 853: ' be' (ID: 413)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45486924052238464
    2. ' be' → logprob: -1.454869270324707
    3. ''' → logprob: -2.954869270324707
    4. ' only' → logprob: -3.829869270324707
    5. ' _' → logprob: -4.204869270324707
    6. 'be' → logprob: -4.329869270324707
    7. ' ' → logprob: -5.454869270324707
    8. 'only' → logprob: -5.579869270324707
    9. '[' → logprob: -5.704869270324707
    10. ' not' → logprob: -5.829869270324707

Token 854: ' non' (ID: 2893)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.2905457615852356
    2. 'cont' → logprob: -3.165545701980591
    3. ' contiguous' → logprob: -3.165545701980591
    4. '```' → logprob: -3.165545701980591
    5. ' any' → logprob: -3.540545701980591
    6. 'matched' → logprob: -3.915545701980591
    7. 'found' → logprob: -4.29054594039917
    8. ' found' → logprob: -5.16554594039917
    9. ' skipped' → logprob: -5.29054594039917
    10. '任' → logprob: -5.41554594039917

Token 855: '-cont' (ID: 58611)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.4824783504009247
    2. ' contiguous' → logprob: -1.232478380203247
    3. '```' → logprob: -2.482478380203247
    4. '_cont' → logprob: -5.232478141784668
    5. '#' → logprob: -7.607478141784668
    6. '``' → logprob: -7.982478141784668
    7. '
' → logprob: -8.482478141784668
    8. 'etheless' → logprob: -8.732478141784668
    9. ' cont' → logprob: -8.982478141784668
    10. '-cont' → logprob: -9.357478141784668

Token 856: 'iguous' (ID: 51394)
  Prédit: 'iguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iguous' → logprob: -0.2361011654138565
    2. 't' → logprob: -2.1111011505126953
    3. '```' → logprob: -2.6111011505126953
    4. 'inu' → logprob: -4.861101150512695
    5. 'n' → logprob: -5.861101150512695
    6. 'u' → logprob: -7.361101150512695
    7. 'in' → logprob: -7.486101150512695
    8. '``' → logprob: -7.486101150512695
    9. 'igu' → logprob: -7.861101150512695
    10. '
' → logprob: -7.861101150512695

Token 857: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09418493509292603
    2. 'from' → logprob: -3.3441848754882812
    3. 'import' → logprob: -3.8441848754882812
    4. 'for' → logprob: -3.9691848754882812
    5. '#' → logprob: -5.469184875488281
    6. 'i' → logprob: -6.219184875488281
    7. 'max' → logprob: -6.469184875488281
    8. 'n' → logprob: -7.094184875488281
    9. 'next' → logprob: -7.219184875488281
    10. '
' → logprob: -7.344184875488281

Token 858: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2969139814376831
    2. 'i' → logprob: -2.2969141006469727
    3. 'for' → logprob: -2.4219141006469727
    4. 'd' → logprob: -4.296914100646973
    5. 'n' → logprob: -4.421914100646973
    6. '[
' → logprob: -5.171914100646973
    7. 'l' → logprob: -5.421914100646973
    8. '#' → logprob: -5.421914100646973
    9. 'a' → logprob: -5.671914100646973
    10. 'from' → logprob: -5.671914100646973

Token 859: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052134137600660324
    2. 'from' → logprob: -3.5521340370178223
    3. 'import' → logprob: -4.302134037017822
    4. 'for' → logprob: -5.677134037017822
    5. '#' → logprob: -5.927134037017822
    6. 'n' → logprob: -6.677134037017822
    7. 'max' → logprob: -7.927134037017822
    8. 'i' → logprob: -8.92713451385498
    9. 'length' → logprob: -9.55213451385498
    10. 'l' → logprob: -9.55213451385498

Token 860: ' longest' (ID: 37511)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12389257550239563
    2. 'from' → logprob: -3.1238925457000732
    3. 'for' → logprob: -3.3738925457000732
    4. 'import' → logprob: -4.248892784118652
    5. 'n' → logprob: -4.998892784118652
    6. 'i' → logprob: -4.998892784118652
    7. '#' → logprob: -5.873892784118652
    8. '
' → logprob: -6.498892784118652
    9. 'max' → logprob: -6.498892784118652
    10. 'j' → logprob: -7.498892784118652

Token 861: ' common' (ID: 5355)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3803286552429199
    2. 'common' → logprob: -1.38032865524292
    3. '_common' → logprob: -2.88032865524292
    4. '_sub' → logprob: -6.50532865524292
    5. ' common' → logprob: -7.00532865524292
    6. '`' → logprob: -7.00532865524292
    7. '```' → logprob: -7.25532865524292
    8. ' =' → logprob: -7.50532865524292
    9. '[i' → logprob: -7.88032865524292
    10. '=' → logprob: -7.88032865524292

Token 862: ' substring' (ID: 89494)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6544373035430908
    2. '_' → logprob: -0.9044373035430908
    3. 'substring' → logprob: -3.154437303543091
    4. 'sub' → logprob: -4.404437065124512
    5. '_common' → logprob: -5.654437065124512
    6. '_
' → logprob: -5.779437065124512
    7. '_prefix' → logprob: -6.154437065124512
    8. '_length' → logprob: -6.154437065124512
    9. 'common' → logprob: -6.279437065124512
    10. '```' → logprob: -6.529437065124512

Token 863: ' won't' (ID: 14219)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2286038398742676
    2. '[' → logprob: -2.1036038398742676
    3. '[
' → logprob: -2.1036038398742676
    4. ']' → logprob: -2.1036038398742676
    5. '=' → logprob: -2.4786038398742676
    6. '[i' → logprob: -2.8536038398742676
    7. 'for' → logprob: -3.4786038398742676
    8. 'import' → logprob: -3.9786038398742676
    9. '```' → logprob: -3.9786038398742676
    10. '_' → logprob: -4.228603839874268

Token 864: ' work' (ID: 1101)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7672851085662842
    2. 'be' → logprob: -1.3922851085662842
    3. '```' → logprob: -2.142285108566284
    4. 'match' → logprob: -2.517285108566284
    5. 'appear' → logprob: -3.767285108566284
    6. '=
' → logprob: -4.642285346984863
    7. 'continue' → logprob: -4.642285346984863
    8. 'allow' → logprob: -4.767285346984863
    9. '``' → logprob: -4.892285346984863
    10. 'have' → logprob: -5.517285346984863

Token 865: ' exactly' (ID: 9707)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12350872904062271
    2. 'for' → logprob: -2.9985086917877197
    3. 'from' → logprob: -3.9985086917877197
    4. 'import' → logprob: -4.123508930206299
    5. 'n' → logprob: -4.998508930206299
    6. '```' → logprob: -5.123508930206299
    7. 'i' → logprob: -5.498508930206299
    8. '#' → logprob: -5.748508930206299
    9. '
' → logprob: -6.373508930206299
    10. 'max' → logprob: -6.873508930206299

Token 866: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07965283840894699
    2. 'for' → logprob: -3.079652786254883
    3. '#' → logprob: -5.204652786254883
    4. 'import' → logprob: -5.204652786254883
    5. 'from' → logprob: -5.454652786254883
    6. 'n' → logprob: -6.079652786254883
    7. '
' → logprob: -6.454652786254883
    8. ']' → logprob: -6.704652786254883
    9. 'i' → logprob: -6.704652786254883
    10. ' for' → logprob: -6.829652786254883

Token 867: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04302670806646347
    2. 'from' → logprob: -3.6680266857147217
    3. 'import' → logprob: -4.418026924133301
    4. '#' → logprob: -6.293026924133301
    5. 'n' → logprob: -6.543026924133301
    6. 'max' → logprob: -8.2930269241333
    7. 'def' → logprob: -8.6680269241333
    8. 'for' → logprob: -8.9180269241333
    9. 'l' → logprob: -9.0430269241333
    10. '
' → logprob: -9.5430269241333

Token 868: ' However' (ID: 5551)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18975266814231873
    2. 'from' → logprob: -2.0647525787353516
    3. 'import' → logprob: -3.5647525787353516
    4. '#' → logprob: -4.314752578735352
    5. 'n' → logprob: -6.189752578735352
    6. 'max' → logprob: -6.939752578735352
    7. 'for' → logprob: -7.939752578735352
    8. 'mod' → logprob: -8.939752578735352
    9. 'def' → logprob: -8.939752578735352
    10. 'length' → logprob: -9.189752578735352

Token 869: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.260800838470459
    2. 'a' → logprob: -2.385800838470459
    3. 'for' → logprob: -2.510800838470459
    4. '_' → logprob: -2.510800838470459
    5. '```' → logprob: -2.885800838470459
    6. '[' → logprob: -3.260800838470459
    7. 'n' → logprob: -3.385800838470459
    8. '#' → logprob: -3.510800838470459
    9. 'i' → logprob: -3.510800838470459
    10. '=' → logprob: -3.635800838470459

Token 870: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06454075127840042
    2. 'from' → logprob: -3.1895408630371094
    3. '#' → logprob: -4.814540863037109
    4. 'for' → logprob: -5.314540863037109
    5. 'import' → logprob: -5.314540863037109
    6. 'i' → logprob: -7.064540863037109
    7. 'l' → logprob: -7.814540863037109
    8. 'prev' → logprob: -7.939540863037109
    9. 'j' → logprob: -8.06454086303711
    10. 'n' → logprob: -8.31454086303711

Token 871: ' matching' (ID: 20238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08911580592393875
    2. 'for' → logprob: -2.964115858078003
    3. '#' → logprob: -5.214115619659424
    4. 'max' → logprob: -5.339115619659424
    5. 'from' → logprob: -5.714115619659424
    6. 'import' → logprob: -5.964115619659424
    7. 'i' → logprob: -5.964115619659424
    8. 'prev' → logprob: -6.089115619659424
    9. ' for' → logprob: -6.589115619659424
    10. ']' → logprob: -7.089115619659424

Token 872: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3185817301273346
    2. '[' → logprob: -1.6935817003250122
    3. '[i' → logprob: -4.318581581115723
    4. '[
' → logprob: -4.443581581115723
    5. 'dp' → logprob: -4.943581581115723
    6. '_dp' → logprob: -4.943581581115723
    7. '```' → logprob: -5.068581581115723
    8. '_length' → logprob: -5.318581581115723
    9. '=' → logprob: -5.443581581115723
    10. ']' → logprob: -5.568581581115723

Token 873: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7970415353775024
    2. '_length' → logprob: -1.7970415353775024
    3. '[i' → logprob: -1.7970415353775024
    4. 's' → logprob: -2.547041416168213
    5. ' can' → logprob: -2.797041416168213
    6. ' is' → logprob: -3.172041416168213
    7. '[' → logprob: -3.422041416168213
    8. '_' → logprob: -3.422041416168213
    9. 'length' → logprob: -3.422041416168213
    10. ',' → logprob: -3.922041416168213

Token 874: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8577612638473511
    2. ' be' → logprob: -1.232761263847351
    3. 'appear' → logprob: -1.357761263847351
    4. ' appear' → logprob: -4.107761383056641
    5. 'also' → logprob: -5.482761383056641
    6. '=' → logprob: -6.232761383056641
    7. ' also' → logprob: -6.857761383056641
    8. 'continue' → logprob: -7.607761383056641
    9. ' consist' → logprob: -7.607761383056641
    10. 'can' → logprob: -7.982761383056641

Token 875: ' substring' (ID: 89494)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24704845249652863
    2. 'found' → logprob: -2.1220483779907227
    3. 'sub' → logprob: -2.9970483779907227
    4. ' a' → logprob: -4.372048377990723
    5. 'cont' → logprob: -4.372048377990723
    6. 'contained' → logprob: -4.747048377990723
    7. '```' → logprob: -5.622048377990723
    8. 'an' → logprob: -6.497048377990723
    9. 'common' → logprob: -6.747048377990723
    10. 'checked' → logprob: -6.747048377990723

Token 876: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4758548140525818
    2. '[' → logprob: -1.7258548736572266
    3. 's' → logprob: -2.6008548736572266
    4. '[i' → logprob: -3.4758548736572266
    5. '```' → logprob: -3.6008548736572266
    6. '=' → logprob: -4.850854873657227
    7. '[
' → logprob: -4.975854873657227
    8. '[j' → logprob: -5.100854873657227
    9. ' =' → logprob: -5.225854873657227
    10. ''' → logprob: -5.475854873657227

Token 877: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.011561851017177105
    2. 'Br' → logprob: -4.761561870574951
    3. 'anna' → logprob: -6.636561870574951
    4. '```' → logprob: -6.761561870574951
    5. 'Anna' → logprob: -8.261561393737793
    6. ' br' → logprob: -9.261561393737793
    7. '`' → logprob: -10.136561393737793
    8. '``' → logprob: -10.761561393737793
    9. ' ' → logprob: -12.136561393737793
    10. ' ' → logprob: -12.136561393737793

Token 878: ' and' (ID: 326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27784252166748047
    2. 'for' → logprob: -2.1528425216674805
    3. 'from' → logprob: -2.6528425216674805
    4. 'import' → logprob: -4.2778425216674805
    5. '#' → logprob: -4.5278425216674805
    6. 'max' → logprob: -5.6528425216674805
    7. '```' → logprob: -5.9028425216674805
    8. 'n' → logprob: -6.0278425216674805
    9. 'length' → logprob: -6.0278425216674805
    10. '
' → logprob: -6.1528425216674805

Token 879: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.27472686767578125
    2. ' subse' → logprob: -2.0247268676757812
    3. 'also' → logprob: -2.3997268676757812
    4. 'a' → logprob: -4.274726867675781
    5. ' also' → logprob: -6.399726867675781
    6. 'anna' → logprob: -6.899726867675781
    7. 'be' → logprob: -9.024726867675781
    8. '#' → logprob: -9.149726867675781
    9. 'must' → logprob: -9.149726867675781
    10. 'substring' → logprob: -9.274726867675781

Token 880: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.5840691924095154
    2. 'sequence' → logprob: -0.8340691924095154
    3. 'q' → logprob: -4.95906925201416
    4. 'quences' → logprob: -7.33406925201416
    5. 'b' → logprob: -9.58406925201416
    6. '
' → logprob: -9.58406925201416
    7. 'string' → logprob: -9.70906925201416
    8. '```' → logprob: -9.95906925201416
    9. '#' → logprob: -10.33406925201416
    10. '[' → logprob: -10.83406925201416

Token 881: ' in' (ID: 306)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.808005690574646
    2. '[' → logprob: -1.933005690574646
    3. '[i' → logprob: -1.933005690574646
    4. '=' → logprob: -2.4330058097839355
    5. '```' → logprob: -2.6830058097839355
    6. '_' → logprob: -2.8080058097839355
    7. ']' → logprob: -3.1830058097839355
    8. '[j' → logprob: -3.3080058097839355
    9. '[
' → logprob: -3.3080058097839355
    10. ',' → logprob: -3.8080058097839355

Token 882: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.089884452521801
    2. 'Anna' → logprob: -2.4648845195770264
    3. ' anna' → logprob: -8.089884757995605
    4. 'br' → logprob: -8.339884757995605
    5. '```' → logprob: -8.589884757995605
    6. 'A' → logprob: -9.714884757995605
    7. 'Br' → logprob: -9.714884757995605
    8. ' Anna' → logprob: -10.089884757995605
    9. 'ann' → logprob: -11.214884757995605
    10. 'ana' → logprob: -11.339884757995605

Token 883: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05374642089009285
    2. 'from' → logprob: -3.553746461868286
    3. 'for' → logprob: -5.053746223449707
    4. 'import' → logprob: -5.428746223449707
    5. 'n' → logprob: -5.678746223449707
    6. '#' → logprob: -6.303746223449707
    7. 'max' → logprob: -6.428746223449707
    8. 'i' → logprob: -6.553746223449707
    9. 'l' → logprob: -7.303746223449707
    10. '
' → logprob: -7.428746223449707

Token 884: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03440432623028755
    2. 'from' → logprob: -3.9094042778015137
    3. 'import' → logprob: -4.534404277801514
    4. '#' → logprob: -6.659404277801514
    5. 'max' → logprob: -7.159404277801514
    6. 'n' → logprob: -7.659404277801514
    7. 'INF' → logprob: -9.159404754638672
    8. 'next' → logprob: -9.409404754638672
    9. 'length' → logprob: -9.659404754638672
    10. '```' → logprob: -10.034404754638672

Token 885: ' So' (ID: 2632)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8351737260818481
    2. 'dp' → logprob: -0.8351737260818481
    3. 'import' → logprob: -2.3351736068725586
    4. 'next' → logprob: -4.210173606872559
    5. '#' → logprob: -4.835173606872559
    6. 'pos' → logprob: -5.085173606872559
    7. 'max' → logprob: -5.460173606872559
    8. 'length' → logprob: -6.835173606872559
    9. 'n' → logprob: -7.835173606872559
    10. 'def' → logprob: -8.960173606872559

Token 886: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31905707716941833
    2. 'from' → logprob: -1.6940571069717407
    3. '#' → logprob: -3.069056987762451
    4. 'import' → logprob: -3.819056987762451
    5. 'next' → logprob: -4.694056987762451
    6. 'pos' → logprob: -4.944056987762451
    7. 'max' → logprob: -5.819056987762451
    8. 'n' → logprob: -7.569056987762451
    9. 'length' → logprob: -8.06905746459961
    10. 'mod' → logprob: -9.44405746459961

Token 887: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9286903142929077
    2. 'br' → logprob: -1.6786903142929077
    3. 'length' → logprob: -2.0536904335021973
    4. 'from' → logprob: -2.4286904335021973
    5. 'l' → logprob: -3.4286904335021973
    6. 'max' → logprob: -3.5536904335021973
    7. 'sub' → logprob: -3.5536904335021973
    8. 'for' → logprob: -3.6786904335021973
    9. 'substring' → logprob: -4.178690433502197
    10. 'substr' → logprob: -4.178690433502197

Token 888: ' fix' (ID: 9295)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46175089478492737
    2. 'continue' → logprob: -2.0867509841918945
    3. 'consider' → logprob: -3.2117509841918945
    4. 'find' → logprob: -3.3367509841918945
    5. '#' → logprob: -3.5867509841918945
    6. 'dp' → logprob: -4.0867509841918945
    7. 'can' → logprob: -4.4617509841918945
    8. 'br' → logprob: -4.5867509841918945
    9. 'extend' → logprob: -4.5867509841918945
    10. ' for' → logprob: -4.8367509841918945

Token 889: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.677230179309845
    2. 'br' → logprob: -0.927230179309845
    3. 'b' → logprob: -3.4272301197052
    4. '```' → logprob: -3.9272301197052
    5. '[' → logprob: -4.802230358123779
    6. ']' → logprob: -5.052230358123779
    7. ')' → logprob: -5.552230358123779
    8. 'for' → logprob: -5.552230358123779
    9. '`' → logprob: -5.552230358123779
    10. 'B' → logprob: -5.677230358123779

Token 890: ' substring' (ID: 89494)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9196925163269043
    2. 'br' → logprob: -1.9196925163269043
    3. 'length' → logprob: -1.9196925163269043
    4. 'dp' → logprob: -2.6696925163269043
    5. 'max' → logprob: -3.0446925163269043
    6. 'l' → logprob: -3.4196925163269043
    7. 'j' → logprob: -3.4196925163269043
    8. 'substring' → logprob: -4.169692516326904
    9. 'left' → logprob: -4.419692516326904
    10. 'b' → logprob: -4.419692516326904

Token 891: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14091473817825317
    2. '[' → logprob: -2.6409146785736084
    3. ''' → logprob: -3.8909146785736084
    4. ' of' → logprob: -5.1409149169921875
    5. '"' → logprob: -5.2659149169921875
    6. '```' → logprob: -5.7659149169921875
    7. 'of' → logprob: -5.8909149169921875
    8. '(' → logprob: -5.8909149169921875
    9. '`' → logprob: -5.8909149169921875
    10. '[j' → logprob: -6.3909149169921875

Token 892: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0006236801855266094
    2. '```' → logprob: -7.75062370300293
    3. ' br' → logprob: -9.37562370300293
    4. 'Br' → logprob: -9.50062370300293
    5. '`' → logprob: -11.62562370300293
    6. 'b' → logprob: -12.12562370300293
    7. 'B' → logprob: -12.50062370300293
    8. '``' → logprob: -12.50062370300293
    9. '	br' → logprob: -12.87562370300293
    10. '   ' → logprob: -13.75062370300293

Token 893: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18379953503608704
    2. '[j' → logprob: -2.0587995052337646
    3. '[i' → logprob: -4.058799743652344
    4. ''' → logprob: -5.058799743652344
    5. '_' → logprob: -5.058799743652344
    6. '[
' → logprob: -5.808799743652344
    7. '```' → logprob: -5.933799743652344
    8. '`' → logprob: -6.933799743652344
    9. '.' → logprob: -8.058799743652344
    10. ',' → logprob: -8.183799743652344

Token 894: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31029263138771057
    2. ' for' → logprob: -1.9352926015853882
    3. 'length' → logprob: -2.8102927207946777
    4. '#' → logprob: -3.9352927207946777
    5. 'l' → logprob: -4.435292720794678
    6. 'from' → logprob: -5.060292720794678
    7. '```' → logprob: -5.935292720794678
    8. ' length' → logprob: -5.935292720794678
    9. ' #' → logprob: -6.060292720794678
    10. 'len' → logprob: -6.060292720794678

Token 895: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6746381521224976
    2. 'find' → logprob: -1.4246381521224976
    3. ' can' → logprob: -2.674638271331787
    4. '#' → logprob: -2.924638271331787
    5. '[' → logprob: -3.174638271331787
    6. '[]' → logprob: -4.674638271331787
    7. '=' → logprob: -4.674638271331787
    8. 'for' → logprob: -4.799638271331787
    9. ' find' → logprob: -4.924638271331787
    10. '_' → logprob: -5.299638271331787

Token 896: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.23139488697052002
    2. 'try' → logprob: -2.6063947677612305
    3. 'binary' → logprob: -2.6063947677612305
    4. '```' → logprob: -4.1063947677612305
    5. 'find' → logprob: -4.3563947677612305
    6. 'search' → logprob: -4.8563947677612305
    7. 'length' → logprob: -4.9813947677612305
    8. 'start' → logprob: -5.7313947677612305
    9. 'for' → logprob: -6.1063947677612305
    10. 'match' → logprob: -6.3563947677612305

Token 897: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47231367230415344
    2. 'length' → logprob: -2.472313642501831
    3. 'its' → logprob: -2.722313642501831
    4. 'len' → logprob: -2.972313642501831
    5. 'for' → logprob: -3.097313642501831
    6. 'the' → logprob: -3.847313642501831
    7. 'br' → logprob: -3.847313642501831
    8. '_' → logprob: -3.847313642501831
    9. '```' → logprob: -4.59731388092041
    10. ' its' → logprob: -4.84731388092041

Token 898: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.557166337966919
    2. ' it' → logprob: -1.557166337966919
    3. 'that' → logprob: -3.182166337966919
    4. 'it's' → logprob: -3.182166337966919
    5. 'anna' → logprob: -3.182166337966919
    6. 'substring' → logprob: -3.807166337966919
    7. ' that' → logprob: -4.30716609954834
    8. ' it's' → logprob: -4.43216609954834
    9. '```' → logprob: -4.55716609954834
    10. 'br' → logprob: -4.80716609954834

Token 899: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.589155375957489
    2. ' is' → logprob: -0.839155375957489
    3. 'can' → logprob: -5.339155197143555
    4. ' can' → logprob: -5.464155197143555
    5. '```' → logprob: -6.214155197143555
    6. ''s' → logprob: -8.214155197143555
    7. '`' → logprob: -8.464155197143555
    8. ''' → logprob: -8.464155197143555
    9. ' ' → logprob: -8.714155197143555
    10. ' appears' → logprob: -8.839155197143555

Token 900: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8251851797103882
    2. 'sub' → logprob: -0.8251851797103882
    3. 'found' → logprob: -2.3251852989196777
    4. 'in' → logprob: -4.825185298919678
    5. '```' → logprob: -4.950185298919678
    6. 'present' → logprob: -5.575185298919678
    7. ' subse' → logprob: -5.575185298919678
    8. ' a' → logprob: -6.325185298919678
    9. 'contained' → logprob: -7.950185298919678
    10. ' found' → logprob: -8.32518482208252

Token 901: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.04877982288599014
    2. ' subse' → logprob: -3.0487797260284424
    3. 'substring' → logprob: -8.923779487609863
    4. ' sub' → logprob: -10.548779487609863
    5. 'subset' → logprob: -10.673779487609863
    6. '_sub' → logprob: -12.923779487609863
    7. 'substr' → logprob: -13.298779487609863
    8. ' substring' → logprob: -13.298779487609863
    9. '```' → logprob: -14.048779487609863
    10. 'subs' → logprob: -14.173779487609863

Token 902: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0004285235481802374
    2. 'q' → logprob: -8.125428199768066
    3. 'quences' → logprob: -9.625428199768066
    4. 'sequence' → logprob: -10.125428199768066
    5. 'qu' → logprob: -11.125428199768066
    6. '#' → logprob: -12.125428199768066
    7. 'QUENCE' → logprob: -13.000428199768066
    8. 'quent' → logprob: -14.250428199768066
    9. '```' → logprob: -14.625428199768066
    10. '[]' → logprob: -14.750428199768066

Token 903: ' of' (ID: 328)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9886540174484253
    2. '_' → logprob: -1.1136540174484253
    3. '[' → logprob: -2.613654136657715
    4. '```' → logprob: -2.863654136657715
    5. 'of' → logprob: -3.238654136657715
    6. ' of' → logprob: -3.613654136657715
    7. '.' → logprob: -3.863654136657715
    8. '=' → logprob: -4.238654136657715
    9. '`' → logprob: -4.613654136657715
    10. '"' → logprob: -4.613654136657715

Token 904: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.20182357728481293
    2. 'Anna' → logprob: -1.7018235921859741
    3. ' anna' → logprob: -8.076823234558105
    4. '```' → logprob: -9.826823234558105
    5. ' Anna' → logprob: -10.451823234558105
    6. '
' → logprob: -12.826823234558105
    7. 'ana' → logprob: -12.951823234558105
    8. 'annah' → logprob: -13.076823234558105
    9. '`' → logprob: -13.576823234558105
    10. 'A' → logprob: -13.576823234558105

Token 905: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7168207764625549
    2. 'dp' → logprob: -1.8418207168579102
    3. 'from' → logprob: -3.09182071685791
    4. 'l' → logprob: -3.34182071685791
    5. 'i' → logprob: -3.59182071685791
    6. 'max' → logprob: -3.84182071685791
    7. ',' → logprob: -4.09182071685791
    8. 'import' → logprob: -4.09182071685791
    9. '[
' → logprob: -4.21682071685791
    10. ':
' → logprob: -4.21682071685791

Token 906: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7484681606292725
    2. 'dp' → logprob: -1.7484681606292725
    3. 'import' → logprob: -2.3734681606292725
    4. '#' → logprob: -2.7484681606292725
    5. 'for' → logprob: -2.9984681606292725
    6. 'length' → logprob: -3.1234681606292725
    7. 'def' → logprob: -3.8734681606292725
    8. 'l' → logprob: -4.123468399047852
    9. 'low' → logprob: -4.123468399047852
    10. 'pos' → logprob: -4.873468399047852

Token 907: ' Another' (ID: 20064)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29957130551338196
    2. 'import' → logprob: -2.1745712757110596
    3. 'dp' → logprob: -2.5495712757110596
    4. 'pos' → logprob: -3.9245712757110596
    5. 'next' → logprob: -4.299571514129639
    6. '#' → logprob: -4.549571514129639
    7. 'def' → logprob: -5.049571514129639
    8. 'length' → logprob: -5.799571514129639
    9. 'max' → logprob: -5.924571514129639
    10. 'br' → logprob: -5.924571514129639

Token 908: ' way' (ID: 2006)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appro' → logprob: -1.0563551187515259
    2. 'possible' → logprob: -2.1813549995422363
    3. 'def' → logprob: -2.5563549995422363
    4. '
' → logprob: -2.9313549995422363
    5. '```' → logprob: -3.0563549995422363
    6. '#' → logprob: -3.1813549995422363
    7. 'import' → logprob: -3.4313549995422363
    8. 'from' → logprob: -3.4313549995422363
    9. 'idea' → logprob: -3.5563549995422363
    10. ':
' → logprob: -3.6813549995422363

Token 909: ':

' (ID: 1402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.601758599281311
    2. '```' → logprob: -2.3517584800720215
    3. 'def' → logprob: -2.8517584800720215
    4. ':' → logprob: -3.1017584800720215
    5. '#' → logprob: -3.4767584800720215
    6. ':
' → logprob: -3.6017584800720215
    7. 'import' → logprob: -3.7267584800720215
    8. 'dp' → logprob: -3.8517584800720215
    9. 'from' → logprob: -3.9767584800720215
    10. 'i' → logprob: -3.9767584800720215

Token 910: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8482435941696167
    2. 'dp' → logprob: -1.0982435941696167
    3. 'for' → logprob: -2.2232437133789062
    4. 'import' → logprob: -3.4732437133789062
    5. 'i' → logprob: -3.7232437133789062
    6. '#' → logprob: -3.7232437133789062
    7. 'length' → logprob: -3.9732437133789062
    8. 'pos' → logprob: -4.973243713378906
    9. 'l' → logprob: -4.973243713378906
    10. 'max' → logprob: -6.348243713378906

Token 911: ' Enumer' (ID: 56157)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1954531967639923
    2. '#' → logprob: -2.69545316696167
    3. 'import' → logprob: -3.19545316696167
    4. 'dp' → logprob: -3.32045316696167
    5. 'pos' → logprob: -3.82045316696167
    6. 'br' → logprob: -5.69545316696167
    7. 'next' → logprob: -5.69545316696167
    8. 'length' → logprob: -7.32045316696167
    9. 'positions' → logprob: -7.69545316696167
    10. 'anna' → logprob: -7.82045316696167

Token 912: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.034475844353437424
    2. 'ator' → logprob: -3.909475803375244
    3. 'ation' → logprob: -4.909475803375244
    4. 'a' → logprob: -6.409475803375244
    5. '```' → logprob: -6.409475803375244
    6. '``' → logprob: -7.159475803375244
    7. 'r' → logprob: -8.034476280212402
    8. 'n' → logprob: -8.159476280212402
    9. 'ating' → logprob: -8.159476280212402
    10. 'ar' → logprob: -8.659476280212402

Token 913: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0704941749572754
    2. 'B' → logprob: -1.8204941749572754
    3. 'l' → logprob: -1.8204941749572754
    4. '```' → logprob: -2.9454941749572754
    5. 'br' → logprob: -3.0704941749572754
    6. 'length' → logprob: -3.1954941749572754
    7. 'j' → logprob: -3.4454941749572754
    8. 'i' → logprob: -3.6954941749572754
    9. '[' → logprob: -3.6954941749572754
    10. '.' → logprob: -4.070494174957275

Token 914: ' substr' (ID: 29234)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.2139370441436768
    2. '```' → logprob: -1.4639370441436768
    3. 'b' → logprob: -1.9639370441436768
    4. 'length' → logprob: -2.4639370441436768
    5. 'for' → logprob: -2.8389370441436768
    6. 'j' → logprob: -3.0889370441436768
    7. 'sub' → logprob: -3.4639370441436768
    8. 'i' → logprob: -3.5889370441436768
    9. 'substring' → logprob: -3.9639370441436768
    10. 'B' → logprob: -3.9639370441436768

Token 915: 'ings' (ID: 963)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6890977621078491
    2. 'quences' → logprob: -2.0640978813171387
    3. 'ings' → logprob: -2.1890978813171387
    4. 'ations' → logprob: -2.3140978813171387
    5. '[]' → logprob: -2.3140978813171387
    6. '[' → logprob: -2.8140978813171387
    7. 'strings' → logprob: -2.8140978813171387
    8. 'arrays' → logprob: -2.8140978813171387
    9. 'array' → logprob: -3.3140978813171387
    10. '[
' → logprob: -3.6890978813171387

Token 916: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4339460134506226
    2. '```' → logprob: -1.5589460134506226
    3. '[' → logprob: -1.6839460134506226
    4. '_' → logprob: -3.058946132659912
    5. '[j' → logprob: -3.308946132659912
    6. '(' → logprob: -3.308946132659912
    7. '=' → logprob: -3.558946132659912
    8. ''' → logprob: -3.558946132659912
    9. '[
' → logprob: -3.808946132659912
    10. '(
' → logprob: -3.808946132659912

Token 917: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.001063655479811132
    2. '```' → logprob: -7.126063823699951
    3. '`' → logprob: -9.376063346862793
    4. 'B' → logprob: -9.626063346862793
    5. 'b' → logprob: -9.751063346862793
    6. 'Br' → logprob: -10.251063346862793
    7. '``' → logprob: -12.251063346862793
    8. ' br' → logprob: -12.251063346862793
    9. 'for' → logprob: -13.251063346862793
    10. '	br' → logprob: -14.001063346862793

Token 918: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1462840884923935
    2. '[' → logprob: -3.2712841033935547
    3. '```' → logprob: -3.3962841033935547
    4. ' for' → logprob: -3.7712841033935547
    5. ',' → logprob: -5.021284103393555
    6. '[j' → logprob: -5.271284103393555
    7. '[
' → logprob: -5.271284103393555
    8. '`' → logprob: -5.896284103393555
    9. '#' → logprob: -6.021284103393555
    10. 'br' → logprob: -6.021284103393555

Token 919: ' length' (ID: 5517)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07414048165082932
    2. 'j' → logprob: -3.5741405487060547
    3. 'length' → logprob: -3.9491405487060547
    4. 'i' → logprob: -4.699140548706055
    5. 'each' → logprob: -5.324140548706055
    6. 'br' → logprob: -5.574140548706055
    7. '1' → logprob: -6.199140548706055
    8. '```' → logprob: -6.449140548706055
    9. 'start' → logprob: -7.199140548706055
    10. '`' → logprob: -7.574140548706055

Token 920: ' L' (ID: 451)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07876408100128174
    2. '```' → logprob: -3.453763961791992
    3. '`' → logprob: -3.828763961791992
    4. 'B' → logprob: -4.828763961791992
    5. '``' → logprob: -5.578763961791992
    6. 'l' → logprob: -5.953763961791992
    7. 'br' → logprob: -6.328763961791992
    8. 'len' → logprob: -6.703763961791992
    9. '=' → logprob: -6.828763961791992
    10. ' =' → logprob: -7.203763961791992

Token 921: ' down' (ID: 1917)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8158307075500488
    2. '+' → logprob: -1.4408307075500488
    3. '```' → logprob: -2.065830707550049
    4. '[' → logprob: -2.815830707550049
    5. 'for' → logprob: -3.315830707550049
    6. '`' → logprob: -4.065830707550049
    7. ',' → logprob: -4.190830707550049
    8. '=' → logprob: -4.440830707550049
    9. ' ' → logprob: -4.690830707550049
    10. ''' → logprob: -5.065830707550049

Token 922: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45366090536117554
    2. '[' → logprob: -1.8286609649658203
    3. '+' → logprob: -2.8286609649658203
    4. '``' → logprob: -3.3286609649658203
    5. 'for' → logprob: -4.32866096496582
    6. '=' → logprob: -4.45366096496582
    7. '   ' → logprob: -4.57866096496582
    8. '#' → logprob: -4.57866096496582
    9. 'to' → logprob: -4.82866096496582
    10. 'To' → logprob: -5.20366096496582

Token 923: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5686869025230408
    2. 'L' → logprob: -1.1936869621276855
    3. 'B' → logprob: -2.6936869621276855
    4. 'len' → logprob: -3.5686869621276855
    5. 'A' → logprob: -4.0686869621276855
    6. '```' → logprob: -4.8186869621276855
    7. 'length' → logprob: -5.8186869621276855
    8. 'br' → logprob: -6.0686869621276855
    9. '`' → logprob: -6.5686869621276855
    10. '``' → logprob: -7.3186869621276855

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006950868293642998
    2. 'L' → logprob: -5.006950855255127
    3. '0' → logprob: -9.131951332092285
    4. '```' → logprob: -9.381951332092285
    5. 'length' → logprob: -10.881951332092285
    6. 'A' → logprob: -11.756951332092285
    7. '2' → logprob: -12.381951332092285
    8. 'l' → logprob: -12.631951332092285
    9. '``' → logprob: -12.631951332092285
    10. 'len' → logprob: -13.881951332092285

Token 925: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8212480545043945
    2. '[' → logprob: -1.5712480545043945
    3. ':' → logprob: -1.6962480545043945
    4. '_' → logprob: -3.4462480545043945
    5. ' for' → logprob: -3.9462480545043945
    6. ',' → logprob: -3.9462480545043945
    7. '=' → logprob: -4.3212480545043945
    8. ')' → logprob: -4.5712480545043945
    9. '```' → logprob: -4.8212480545043945
    10. ''' → logprob: -4.9462480545043945

Token 926: ' check' (ID: 2371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7766081094741821
    2. ''' → logprob: -1.2766081094741821
    3. 'for' → logprob: -2.5266079902648926
    4. ',' → logprob: -3.4016079902648926
    5. '[' → logprob: -3.6516079902648926
    6. '"' → logprob: -3.9016079902648926
    7. ' for' → logprob: -4.026607990264893
    8. '#' → logprob: -4.276607990264893
    9. '```' → logprob: -4.901607990264893
    10. '=' → logprob: -5.151607990264893

Token 927: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7608935236930847
    2. 'if' → logprob: -1.8858935832977295
    3. 'l' → logprob: -2.2608935832977295
    4. ' if' → logprob: -2.7608935832977295
    5. '`' → logprob: -3.5108935832977295
    6. '```' → logprob: -3.6358935832977295
    7. 'for' → logprob: -3.6358935832977295
    8. ''' → logprob: -3.7608935832977295
    9. '=' → logprob: -4.13589334487915
    10. ')' → logprob: -4.51089334487915

Token 928: ' substring' (ID: 89494)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12207512557506561
    2. 'they' → logprob: -3.497075080871582
    3. ' L' → logprob: -3.622075080871582
    4. 'any' → logprob: -3.872075080871582
    5. 'the' → logprob: -4.872075080871582
    6. 'there' → logprob: -4.872075080871582
    7. 'it' → logprob: -5.372075080871582
    8. '```' → logprob: -5.622075080871582
    9. 'that' → logprob: -5.872075080871582
    10. ' they' → logprob: -6.122075080871582

Token 929: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05831696093082428
    2. 's' → logprob: -3.808316946029663
    3. ''' → logprob: -4.683317184448242
    4. '```' → logprob: -4.808317184448242
    5. '[' → logprob: -5.183317184448242
    6. ''_' → logprob: -5.558317184448242
    7. '_length' → logprob: -6.433317184448242
    8. '_
' → logprob: -6.558317184448242
    9. '`' → logprob: -7.183317184448242
    10. ''s' → logprob: -7.183317184448242

Token 930: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.3393796682357788
    2. 'a' → logprob: -1.4643796682357788
    3. 'found' → logprob: -1.7143796682357788
    4. 'in' → logprob: -2.2143797874450684
    5. ' subse' → logprob: -2.7143797874450684
    6. ' a' → logprob: -3.2143797874450684
    7. ' in' → logprob: -3.5893797874450684
    8. 'present' → logprob: -3.5893797874450684
    9. ' present' → logprob: -4.089379787445068
    10. ' found' → logprob: -4.089379787445068

Token 931: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.05184340476989746
    2. 'q' → logprob: -3.0518434047698975
    3. 'sequence' → logprob: -6.176843643188477
    4. 'quences' → logprob: -6.926843643188477
    5. 'qu' → logprob: -9.176843643188477
    6. 'quent' → logprob: -10.676843643188477
    7. '```' → logprob: -10.801843643188477
    8. '#' → logprob: -12.301843643188477
    9. 'ence' → logprob: -12.426843643188477
    10. 'que' → logprob: -12.551843643188477

Token 932: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.172806978225708
    2. '[' → logprob: -1.672806978225708
    3. ':' → logprob: -2.172806978225708
    4. '_' → logprob: -2.297806978225708
    5. '=' → logprob: -3.297806978225708
    6. ''' → logprob: -3.297806978225708
    7. '```' → logprob: -3.422806978225708
    8. ',' → logprob: -3.422806978225708
    9. '(' → logprob: -4.172806739807129
    10. '#' → logprob: -4.172806739807129

Token 933: ' Anna' (ID: 34101)
  Prédit: 'Anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Anna' → logprob: -0.014216037467122078
    2. 'anna' → logprob: -4.26421594619751
    3. '```' → logprob: -10.389216423034668
    4. ' anna' → logprob: -11.389216423034668
    5. ' Anna' → logprob: -11.889216423034668
    6. 'Ana' → logprob: -14.139216423034668
    7. 'A' → logprob: -14.514216423034668
    8. 'Anne' → logprob: -14.889216423034668
    9. 'ana' → logprob: -15.014216423034668
    10. '`' → logprob: -15.014216423034668

Token 934: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1353387087583542
    2. ':' → logprob: -3.38533878326416
    3. ' for' → logprob: -4.13533878326416
    4. ':
' → logprob: -4.13533878326416
    5. '[' → logprob: -4.51033878326416
    6. 'while' → logprob: -4.76033878326416
    7. '\n' → logprob: -5.01033878326416
    8. '```' → logprob: -5.38533878326416
    9. ''' → logprob: -6.01033878326416
    10. ',' → logprob: -6.38533878326416

Token 935: ' and' (ID: 326)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.208495855331421
    2. ':' → logprob: -1.208495855331421
    3. '[' → logprob: -1.833495855331421
    4. 'for' → logprob: -2.333495855331421
    5. '"' → logprob: -3.708495855331421
    6. '#' → logprob: -3.958495855331421
    7. '```' → logprob: -4.08349609375
    8. ',' → logprob: -4.58349609375
    9. ' for' → logprob: -4.95849609375
    10. '_' → logprob: -5.08349609375

Token 936: ' return' (ID: 622)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9821524024009705
    2. '```' → logprob: -1.7321524620056152
    3. ' #' → logprob: -2.3571524620056152
    4. 'break' → logprob: -2.9821524620056152
    5. ' l' → logprob: -3.3571524620056152
    6. ' L' → logprob: -3.6071524620056152
    7. ' break' → logprob: -3.7321524620056152
    8. ' ' → logprob: -3.8571524620056152
    9. 'L' → logprob: -4.107152462005615
    10. 'len' → logprob: -4.232152462005615

Token 937: ' max' (ID: 2999)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2420542240142822
    2. '`' → logprob: -1.4920542240142822
    3. '_' → logprob: -2.3670542240142822
    4. '"' → logprob: -2.4920542240142822
    5. '```' → logprob: -2.6170542240142822
    6. '[' → logprob: -3.3670542240142822
    7. 'max' → logprob: -3.4920542240142822
    8. 'for' → logprob: -3.8670542240142822
    9. 'l' → logprob: -3.9920542240142822
    10. ')' → logprob: -4.242053985595703

Token 938: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5655157566070557
    2. '[' → logprob: -1.6905157566070557
    3. '[
' → logprob: -3.5655157566070557
    4. ' 
' → logprob: -4.065515518188477
    5. ' for' → logprob: -4.065515518188477
    6. ')' → logprob: -4.065515518188477
    7. ''' → logprob: -4.190515518188477
    8. '=' → logprob: -4.315515518188477
    9. '`' → logprob: -4.565515518188477
    10. ' ' → logprob: -4.815515518188477

Token 939: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15765422582626343
    2. 'l' → logprob: -2.907654285430908
    3. ' for' → logprob: -3.532654285430908
    4. 'low' → logprob: -3.657654285430908
    5. '```' → logprob: -4.407654285430908
    6. 'def' → logprob: -5.032654285430908
    7. 'left' → logprob: -5.657654285430908
    8. 'max' → logprob: -6.032654285430908
    9. 'import' → logprob: -6.032654285430908
    10. ',' → logprob: -6.407654285430908

Token 940: ' which' (ID: 1118)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.026724100112915
    2. ' L' → logprob: -1.901724100112915
    3. 'length' → logprob: -2.651724100112915
    4. 'substring' → logprob: -2.776724100112915
    5. ' length' → logprob: -3.026724100112915
    6. 'l' → logprob: -3.026724100112915
    7. ' substring' → logprob: -3.026724100112915
    8. 'i' → logprob: -3.651724100112915
    9. ' l' → logprob: -3.651724100112915
    10. '```' → logprob: -4.026723861694336

Token 941: ' yes' (ID: 14531)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0858627557754517
    2. ' substring' → logprob: -1.2108627557754517
    3. 'substring' → logprob: -1.8358627557754517
    4. 'i' → logprob: -3.085862636566162
    5. ' i' → logprob: -3.335862636566162
    6. '`' → logprob: -3.585862636566162
    7. ' l' → logprob: -3.835862636566162
    8. 'l' → logprob: -4.460862636566162
    9. 'br' → logprob: -4.835862636566162
    10. '``' → logprob: -5.210862636566162

Token 942: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1248767226934433
    2. 'l' → logprob: -3.1248767375946045
    3. 'low' → logprob: -3.1248767375946045
    4. 'left' → logprob: -4.249876499176025
    5. 'max' → logprob: -5.374876499176025
    6. 'L' → logprob: -5.624876499176025
    7. 'def' → logprob: -6.249876499176025
    8. 'import' → logprob: -6.374876499176025
    9. '```' → logprob: -7.249876499176025
    10. 'lo' → logprob: -7.624876499176025

Token 943: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4244181513786316
    2. 'l' → logprob: -1.2994182109832764
    3. 'low' → logprob: -3.7994182109832764
    4. ' for' → logprob: -4.799417972564697
    5. 'max' → logprob: -4.924417972564697
    6. 'def' → logprob: -5.174417972564697
    7. 'L' → logprob: -5.549417972564697
    8. 'length' → logprob: -5.674417972564697
    9. 'import' → logprob: -5.674417972564697
    10. 'while' → logprob: -5.799417972564697

Token 944: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19741687178611755
    2. 'l' → logprob: -2.6974167823791504
    3. 'low' → logprob: -2.6974167823791504
    4. 'left' → logprob: -3.5724167823791504
    5. ' for' → logprob: -5.32241678237915
    6. '```' → logprob: -5.57241678237915
    7. 'def' → logprob: -6.07241678237915
    8. 'import' → logprob: -6.69741678237915
    9. 'while' → logprob: -7.32241678237915
    10. 'lo' → logprob: -7.44741678237915

Token 945: ' binary' (ID: 15600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6291742920875549
    2. 'low' → logprob: -1.7541742324829102
    3. 'l' → logprob: -2.12917423248291
    4. 'L' → logprob: -2.37917423248291
    5. 'left' → logprob: -3.00417423248291
    6. ' for' → logprob: -4.50417423248291
    7. 'def' → logprob: -5.12917423248291
    8. 'max' → logprob: -5.50417423248291
    9. '```' → logprob: -5.62917423248291
    10. 'lo' → logprob: -7.00417423248291

Token 946: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.6785181760787964
    2. '_' → logprob: -0.9285181760787964
    3. ' _' → logprob: -3.053518295288086
    4. ' search' → logprob: -3.303518295288086
    5. 'search' → logprob: -4.428518295288086
    6. ' ' → logprob: -7.303518295288086
    7. '```' → logprob: -8.178518295288086
    8. 'space' → logprob: -8.803518295288086
    9. 'Search' → logprob: -9.178518295288086
    10. ''' → logprob: -9.178518295288086

Token 947: ' length' (ID: 5517)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1100609302520752
    2. 'for' → logprob: -1.7350609302520752
    3. 'def' → logprob: -1.9850609302520752
    4. 'while' → logprob: -2.360060930252075
    5. '=' → logprob: -3.110060930252075
    6. '```' → logprob: -3.360060930252075
    7. ':
' → logprob: -3.485060930252075
    8. 'max' → logprob: -3.860060930252075
    9. '#' → logprob: -3.985060930252075
    10. '_' → logprob: -4.235060691833496

Token 948: ' L' (ID: 451)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16160975396633148
    2. ':
' → logprob: -3.661609649658203
    3. '[' → logprob: -3.786609649658203
    4. ',' → logprob: -4.036609649658203
    5. 'for' → logprob: -4.411609649658203
    6. '```' → logprob: -4.411609649658203
    7. '_' → logprob: -4.536609649658203
    8. ')' → logprob: -4.786609649658203
    9. '=' → logprob: -4.786609649658203
    10. 'def' → logprob: -5.661609649658203

Token 949: ':

' (ID: 1402)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.634982705116272
    2. 'l' → logprob: -1.259982705116272
    3. 'left' → logprob: -2.0099825859069824
    4. '```' → logprob: -4.259982585906982
    5. 'for' → logprob: -4.509982585906982
    6. 'L' → logprob: -5.009982585906982
    7. 'def' → logprob: -5.259982585906982
    8. 'lo' → logprob: -5.384982585906982
    9. 'while' → logprob: -5.634982585906982
    10. 'mid' → logprob: -6.384982585906982

Token 950: '#' (ID: 2)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9811594486236572
    2. 'for' → logprob: -1.9811594486236572
    3. 'while' → logprob: -2.1061594486236572
    4. ':' → logprob: -2.1061594486236572
    5. '=' → logprob: -2.6061594486236572
    6. 'low' → logprob: -3.1061594486236572
    7. 'l' → logprob: -3.2311594486236572
    8. 'L' → logprob: -3.3561594486236572
    9. '```' → logprob: -3.3561594486236572
    10. 'r' → logprob: -3.4811594486236572

Token 951: ' For' (ID: 2214)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5620459318161011
    2. 'left' → logprob: -1.562045931816101
    3. 'l' → logprob: -1.812045931816101
    4. 'while' → logprob: -3.8120460510253906
    5. 'mid' → logprob: -4.437046051025391
    6. 'lo' → logprob: -4.687046051025391
    7. 'L' → logprob: -5.937046051025391
    8. 'ok' → logprob: -6.062046051025391
    9. '```' → logprob: -6.312046051025391
    10. 'right' → logprob: -6.312046051025391

Token 952: ' each' (ID: 2454)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12632712721824646
    2. ' L' → logprob: -3.0013270378112793
    3. 'l' → logprob: -3.1263270378112793
    4. 'low' → logprob: -4.251327037811279
    5. ' low' → logprob: -5.626327037811279
    6. ' l' → logprob: -6.251327037811279
    7. 'length' → logprob: -6.501327037811279
    8. 'left' → logprob: -6.501327037811279
    9. 'mid' → logprob: -6.626327037811279
    10. ' left' → logprob: -8.251327514648438

Token 953: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5788712501525879
    2. ' length' → logprob: -1.203871250152588
    3. 'L' → logprob: -3.078871250152588
    4. 'l' → logprob: -3.203871250152588
    5. '_length' → logprob: -3.828871250152588
    6. ' L' → logprob: -4.328871250152588
    7. '_' → logprob: -5.203871250152588
    8. ' l' → logprob: -5.828871250152588
    9. ' _' → logprob: -6.453871250152588
    10. ' substring' → logprob: -6.578871250152588

Token 954: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09483342617750168
    2. '=' → logprob: -3.4698333740234375
    3. '```' → logprob: -3.9698333740234375
    4. '`' → logprob: -4.3448333740234375
    5. ' _' → logprob: -5.4698333740234375
    6. '[' → logprob: -5.7198333740234375
    7. ''' → logprob: -5.8448333740234375
    8. 'l' → logprob: -6.2198333740234375
    9. ' =' → logprob: -6.3448333740234375
    10. '(' → logprob: -6.4698333740234375

Token 955: ' max' (ID: 2999)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7329731583595276
    2. 'L' → logprob: -1.4829730987548828
    3. 'B' → logprob: -1.6079730987548828
    4. 'br' → logprob: -4.232973098754883
    5. '```' → logprob: -4.232973098754883
    6. ' L' → logprob: -4.607973098754883
    7. ' (' → logprob: -4.732973098754883
    8. ' B' → logprob: -5.107973098754883
    9. 'low' → logprob: -5.357973098754883
    10. 'mid' → logprob: -5.482973098754883

Token 956: ' down' (ID: 1917)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10481196641921997
    2. '=' → logprob: -3.729811906814575
    3. '```' → logprob: -3.729811906814575
    4. '(
' → logprob: -4.854812145233154
    5. '_length' → logprob: -5.104812145233154
    6. ')' → logprob: -5.354812145233154
    7. ']' → logprob: -5.479812145233154
    8. ' =' → logprob: -5.604812145233154
    9. '+' → logprob: -5.729812145233154
    10. '_len' → logprob: -5.854812145233154

Token 957: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6315937042236328
    2. '``' → logprob: -1.2565937042236328
    3. '_' → logprob: -3.256593704223633
    4. '_length' → logprob: -3.506593704223633
    5. '   ' → logprob: -4.006593704223633
    6. '[' → logprob: -4.006593704223633
    7. '_to' → logprob: -4.381593704223633
    8. 'ward' → logprob: -4.506593704223633
    9. '#' → logprob: -4.756593704223633
    10. 'wards' → logprob: -5.131593704223633

Token 958: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16575250029563904
    2. 'L' → logprob: -1.9157525300979614
    3. ' L' → logprob: -5.665752410888672
    4. ' ' → logprob: -6.790752410888672
    5. '0' → logprob: -7.790752410888672
    6. 'length' → logprob: -8.165752410888672
    7. '```' → logprob: -8.915752410888672
    8. ' length' → logprob: -10.665752410888672
    9. '`' → logprob: -11.040752410888672
    10. 'min' → logprob: -11.290752410888672

Token 959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002227098448202014
    2. 'L' → logprob: -6.127227306365967
    3. 'length' → logprob: -11.252226829528809
    4. 'min' → logprob: -11.502226829528809
    5. '```' → logprob: -11.627226829528809
    6. '0' → logprob: -12.377226829528809
    7. 'one' → logprob: -13.377226829528809
    8. '
' → logprob: -13.752226829528809
    9. 'l' → logprob: -14.252226829528809
    10. '`' → logprob: -14.377226829528809

Token 960: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1158541440963745
    2. '[' → logprob: -1.1158541440963745
    3. '_' → logprob: -1.4908541440963745
    4. ',' → logprob: -3.490854263305664
    5. ')' → logprob: -4.240854263305664
    6. ''' → logprob: -4.490854263305664
    7. '=' → logprob: -4.740854263305664
    8. '```' → logprob: -4.990854263305664
    9. '   ' → logprob: -5.115854263305664
    10. '#' → logprob: -5.115854263305664

Token 961: 'using' (ID: 1846)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7196044325828552
    2. '):' → logprob: -1.4696044921875
    3. ')' → logprob: -1.5946044921875
    4. '=' → logprob: -3.7196044921875
    5. ',' → logprob: -3.9696044921875
    6. ':
' → logprob: -4.0946044921875
    7. '):
' → logprob: -4.3446044921875
    8. '+' → logprob: -6.0946044921875
    9. '```' → logprob: -6.5946044921875
    10. '),' → logprob: -7.3446044921875

Token 962: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.43251317739486694
    2. 'b' → logprob: -1.3075132369995117
    3. ')' → logprob: -2.6825132369995117
    4. '```' → logprob: -5.682513236999512
    5. ' binary' → logprob: -5.807513236999512
    6. '#' → logprob: -6.932513236999512
    7. '`' → logprob: -7.182513236999512
    8. '-' → logprob: -7.307513236999512
    9. '1' → logprob: -7.432513236999512
    10. 'range' → logprob: -8.432513236999512

Token 963: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.015442590229213238
    2. '_' → logprob: -4.765442371368408
    3. 'search' → logprob: -5.890442371368408
    4. ' _' → logprob: -6.140442371368408
    5. ' search' → logprob: -6.640442371368408
    6. '```' → logprob: -7.765442371368408
    7. ')' → logprob: -9.265442848205566
    8. '_space' → logprob: -10.765442848205566
    9. ')_' → logprob: -11.640442848205566
    10. '`' → logprob: -11.765442848205566

Token 964: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6016858816146851
    2. ')' → logprob: -2.1016860008239746
    3. '[' → logprob: -2.1016860008239746
    4. '_' → logprob: -2.2266860008239746
    5. '```' → logprob: -3.3516860008239746
    6. ',' → logprob: -4.476686000823975
    7. '(' → logprob: -4.726686000823975
    8. '   ' → logprob: -4.976686000823975
    9. ''' → logprob: -5.476686000823975
    10. '+' → logprob: -5.601686000823975

Token 965: ' reduce' (ID: 10389)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4454304277896881
    2. ')' → logprob: -2.3204305171966553
    3. 'find' → logprob: -2.4454305171966553
    4. '):
' → logprob: -3.4454305171966553
    5. ' check' → logprob: -3.4454305171966553
    6. 'binary' → logprob: -3.5704305171966553
    7. '=' → logprob: -3.9454305171966553
    8. ':' → logprob: -4.195430278778076
    9. 'search' → logprob: -4.820430278778076
    10. ':
' → logprob: -4.945430278778076

Token 966: '),' (ID: 936)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3888922929763794
    2. '1' → logprob: -1.8888922929763794
    3. '```' → logprob: -1.8888922929763794
    4. ')' → logprob: -2.13889217376709
    5. 'L' → logprob: -2.88889217376709
    6. '`' → logprob: -3.01389217376709
    7. 'length' → logprob: -3.13889217376709
    8. '_length' → logprob: -3.63889217376709
    9. '``' → logprob: -3.76389217376709
    10. 'l' → logprob: -3.88889217376709

Token 967: ' we' (ID: 581)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35662907361984253
    2. '=' → logprob: -2.7316291332244873
    3. 'l' → logprob: -2.8566291332244873
    4. 'mid' → logprob: -3.4816291332244873
    5. ',' → logprob: -3.6066291332244873
    6. 'low' → logprob: -3.7316291332244873
    7. 'for' → logprob: -4.231628894805908
    8. 'left' → logprob: -4.356628894805908
    9. ' =' → logprob: -4.481628894805908
    10. 'L' → logprob: -4.606628894805908

Token 968: ' check' (ID: 2371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11554858833551407
    2. '=' → logprob: -2.740548610687256
    3. ' can' → logprob: -4.865548610687256
    4. '#' → logprob: -4.865548610687256
    5. 'can' → logprob: -4.990548610687256
    6. ' =' → logprob: -5.365548610687256
    7. ':
' → logprob: -5.490548610687256
    8. ')' → logprob: -6.490548610687256
    9. '.' → logprob: -6.490548610687256
    10. '):' → logprob: -6.740548610687256

Token 969: ' all' (ID: 722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39039453864097595
    2. 'if' → logprob: -2.640394449234009
    3. ' if' → logprob: -2.765394449234009
    4. 'for' → logprob: -2.890394449234009
    5. ')' → logprob: -3.390394449234009
    6. '   ' → logprob: -3.515394449234009
    7. '=' → logprob: -3.640394449234009
    8. ' for' → logprob: -4.265394687652588
    9. ',' → logprob: -5.515394687652588
    10. 'l' → logprob: -5.890394687652588

Token 970: ' substr' (ID: 29234)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6227242350578308
    2. 'mid' → logprob: -0.9977242350578308
    3. 'L' → logprob: -3.7477242946624756
    4. 'l' → logprob: -3.9977242946624756
    5. 'sub' → logprob: -3.9977242946624756
    6. 'possible' → logprob: -4.7477240562438965
    7. ')' → logprob: -5.2477240562438965
    8. '```' → logprob: -5.6227240562438965
    9. 'substring' → logprob: -5.8727240562438965
    10. 'for' → logprob: -6.4977240562438965

Token 971: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.06845560669898987
    2. 'ing' → logprob: -3.193455696105957
    3. 'rings' → logprob: -4.818455696105957
    4. '```' → logprob: -5.193455696105957
    5. '[' → logprob: -6.443455696105957
    6. 'ring' → logprob: -6.693455696105957
    7. 'strings' → logprob: -6.943455696105957
    8. ']' → logprob: -7.068455696105957
    9. '[]' → logprob: -7.193455696105957
    10. 's' → logprob: -7.318455696105957

Token 972: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8855381011962891
    2. '[' → logprob: -1.635538101196289
    3. 'of' → logprob: -2.010538101196289
    4. ' of' → logprob: -2.885538101196289
    5. '```' → logprob: -3.135538101196289
    6. '_of' → logprob: -3.635538101196289
    7. '[i' → logprob: -4.135538101196289
    8. '_length' → logprob: -4.135538101196289
    9. '[l' → logprob: -4.135538101196289
    10. 'for' → logprob: -4.385538101196289

Token 973: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.015269549563527107
    2. 'B' → logprob: -5.140269756317139
    3. '```' → logprob: -5.265269756317139
    4. 'Br' → logprob: -6.015269756317139
    5. 'length' → logprob: -6.515269756317139
    6. '`' → logprob: -9.51526927947998
    7. ' br' → logprob: -9.64026927947998
    8. 'b' → logprob: -10.39026927947998
    9. '	br' → logprob: -11.39026927947998
    10. '``' → logprob: -11.39026927947998

Token 974: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0915411189198494
    2. '_' → logprob: -3.091541051864624
    3. '```' → logprob: -3.841541051864624
    4. ''' → logprob: -5.341541290283203
    5. '[
' → logprob: -5.466541290283203
    6. '[l' → logprob: -6.216541290283203
    7. '[j' → logprob: -6.966541290283203
    8. '[i' → logprob: -6.966541290283203
    9. '"' → logprob: -7.091541290283203
    10. '`' → logprob: -7.341541290283203

Token 975: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.002521680435165763
    2. ' length' → logprob: -6.252521514892578
    3. 'that' → logprob: -7.627521514892578
    4. 'L' → logprob: -9.877521514892578
    5. 'size' → logprob: -10.627521514892578
    6. '```' → logprob: -11.127521514892578
    7. '_length' → logprob: -11.377521514892578
    8. ' that' → logprob: -13.627521514892578
    9. 'len' → logprob: -14.002521514892578
    10. ' L' → logprob: -14.377521514892578

Token 976: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004883262328803539
    2. '```' → logprob: -5.629883289337158
    3. ' L' → logprob: -6.754883289337158
    4. '`' → logprob: -9.7548828125
    5. '_L' → logprob: -10.8798828125
    6. 'l' → logprob: -11.5048828125
    7. '``' → logprob: -11.6298828125
    8. 'length' → logprob: -11.7548828125
    9. '=L' → logprob: -12.7548828125
    10. '
' → logprob: -13.1298828125

Token 977: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043680671602487564
    2. ',' → logprob: -4.918680667877197
    3. ':
' → logprob: -4.918680667877197
    4. '_' → logprob: -5.293680667877197
    5. '':' → logprob: -5.543680667877197
    6. '[' → logprob: -5.668680667877197
    7. 'def' → logprob: -5.793680667877197
    8. '```' → logprob: -6.168680667877197
    9. '):' → logprob: -6.543680667877197
    10. 'for' → logprob: -6.543680667877197

Token 978: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04481792822480202
    2. 'def' → logprob: -4.794817924499512
    3. '_' → logprob: -4.919817924499512
    4. '[' → logprob: -5.044817924499512
    5. ':
' → logprob: -5.419817924499512
    6. '=' → logprob: -5.794817924499512
    7. ',' → logprob: -5.919817924499512
    8. 'for' → logprob: -6.419817924499512
    9. ')' → logprob: -6.544817924499512
    10. '```' → logprob: -6.544817924499512

Token 979: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20620104670524597
    2. ':' → logprob: -2.4562010765075684
    3. 'for' → logprob: -2.5812010765075684
    4. ':
' → logprob: -4.831201076507568
    5. 'l' → logprob: -5.581201076507568
    6. '```' → logprob: -6.081201076507568
    7. 'while' → logprob: -6.331201076507568
    8. 'L' → logprob: -6.581201076507568
    9. ',' → logprob: -6.706201076507568
    10. '=' → logprob: -7.206201076507568

Token 980: ' each' (ID: 2454)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.058491587638855
    2. 'l' → logprob: -1.308491587638855
    3. ' l' → logprob: -2.4334917068481445
    4. 'L' → logprob: -2.4334917068481445
    5. 'length' → logprob: -3.0584917068481445
    6. ' mid' → logprob: -3.0584917068481445
    7. ' length' → logprob: -3.5584917068481445
    8. 'low' → logprob: -3.5584917068481445
    9. ' low' → logprob: -4.1834917068481445
    10. '_' → logprob: -4.5584917068481445

Token 981: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.5758692622184753
    2. 'length' → logprob: -1.2008693218231201
    3. ' substring' → logprob: -2.20086932182312
    4. ' length' → logprob: -4.325869083404541
    5. 'substr' → logprob: -4.950869083404541
    6. 'L' → logprob: -6.825869083404541
    7. '_length' → logprob: -6.825869083404541
    8. 'sub' → logprob: -6.950869083404541
    9. '```' → logprob: -7.700869083404541
    10. 'l' → logprob: -7.825869083404541

Token 982: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29516667127609253
    2. '_' → logprob: -1.6701667308807373
    3. ',' → logprob: -4.170166492462158
    4. ' of' → logprob: -4.170166492462158
    5. ''' → logprob: -4.795166492462158
    6. '```' → logprob: -4.920166492462158
    7. 'of' → logprob: -5.420166492462158
    8. '=' → logprob: -5.420166492462158
    9. ':' → logprob: -6.545166492462158
    10. '_length' → logprob: -6.795166492462158

Token 983: ' check' (ID: 2371)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.23205308616161346
    2. ' check' → logprob: -2.35705304145813
    3. 'we' → logprob: -2.73205304145813
    4. '   ' → logprob: -4.732053279876709
    5. ' ' → logprob: -4.857053279876709
    6. ' if' → logprob: -4.982053279876709
    7. ' for' → logprob: -5.482053279876709
    8. '```' → logprob: -5.607053279876709
    9. 'check' → logprob: -5.732053279876709
    10. '#' → logprob: -5.732053279876709

Token 984: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6932896375656128
    2. ' if' → logprob: -0.6932896375656128
    3. '```' → logprob: -9.818289756774902
    4. '   ' → logprob: -10.443289756774902
    5. 'sub' → logprob: -11.068289756774902
    6. ' subse' → logprob: -11.693289756774902
    7. ' ' → logprob: -12.318289756774902
    8. 'is' → logprob: -12.443289756774902
    9. 'substring' → logprob: -12.693289756774902
    10. 'whether' → logprob: -12.693289756774902

Token 985: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3781827390193939
    2. ' it' → logprob: -2.1281826496124268
    3. 'substring' → logprob: -2.6281826496124268
    4. 'anna' → logprob: -3.8781826496124268
    5. 'any' → logprob: -4.128182888031006
    6. '```' → logprob: -4.253182888031006
    7. 'it's' → logprob: -4.378182888031006
    8. ' anna' → logprob: -4.503182888031006
    9. 'Anna' → logprob: -4.628182888031006
    10. 'the' → logprob: -5.003182888031006

Token 986: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03312595561146736
    2. 'is' → logprob: -3.533125877380371
    3. '_is' → logprob: -7.158125877380371
    4. '```' → logprob: -7.158125877380371
    5. ' ' → logprob: -7.408125877380371
    6. ''s' → logprob: -8.033125877380371
    7. '_' → logprob: -8.033125877380371
    8. '#' → logprob: -8.908125877380371
    9. ')' → logprob: -9.283125877380371
    10. ' in' → logprob: -9.533125877380371

Token 987: ' subse' (ID: 19874)
  Prédit: ' subse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subse' → logprob: -0.368213415145874
    2. 'sub' → logprob: -1.368213415145874
    3. 'a' → logprob: -3.368213415145874
    4. ' a' → logprob: -3.993213415145874
    5. '_sub' → logprob: -7.743213653564453
    6. 'substring' → logprob: -9.743213653564453
    7. 'substr' → logprob: -10.868213653564453
    8. ' ' → logprob: -11.368213653564453
    9. '```' → logprob: -11.743213653564453
    10. '_' → logprob: -11.868213653564453

Token 988: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.01495217066258192
    2. 'sequence' → logprob: -4.889952182769775
    3. 'q' → logprob: -5.139952182769775
    4. 'quences' → logprob: -7.389952182769775
    5. 'b' → logprob: -7.764952182769775
    6. '#' → logprob: -8.764951705932617
    7. '_sequence' → logprob: -9.389951705932617
    8. 'qu' → logprob: -9.764951705932617
    9. 'QUENCE' → logprob: -10.014951705932617
    10. '```' → logprob: -10.764951705932617

Token 989: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20034554600715637
    2. '(' → logprob: -2.700345516204834
    3. '[' → logprob: -3.450345516204834
    4. ''' → logprob: -3.575345516204834
    5. '```' → logprob: -3.950345516204834
    6. ':' → logprob: -4.700345516204834
    7. 'of' → logprob: -5.325345516204834
    8. ',' → logprob: -5.450345516204834
    9. ' of' → logprob: -5.825345516204834
    10. '.' → logprob: -6.200345516204834

Token 990: ' Anna' (ID: 34101)
  Prédit: 'Anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Anna' → logprob: -0.5761902928352356
    2. 'anna' → logprob: -0.8261902928352356
    3. '```' → logprob: -8.826189994812012
    4. 'A' → logprob: -10.201189994812012
    5. ' anna' → logprob: -10.201189994812012
    6. ' Anna' → logprob: -11.076189994812012
    7. 'ana' → logprob: -12.826189994812012
    8. 'ann' → logprob: -12.951189994812012
    9. 'annah' → logprob: -13.076189994812012
    10. 'An' → logprob: -13.326189994812012

Token 991: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1436840444803238
    2. '[' → logprob: -2.643684148788452
    3. '_' → logprob: -4.018683910369873
    4. ':
' → logprob: -4.768683910369873
    5. ')' → logprob: -4.893683910369873
    6. ',' → logprob: -5.143683910369873
    7. 'for' → logprob: -5.768683910369873
    8. 'def' → logprob: -6.143683910369873
    9. ']' → logprob: -6.143683910369873
    10. '#' → logprob: -6.268683910369873

Token 992: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13383211195468903
    2. ':
' → logprob: -2.7588322162628174
    3. 'def' → logprob: -3.1338322162628174
    4. 'for' → logprob: -5.508831977844238
    5. '```' → logprob: -6.008831977844238
    6. ',' → logprob: -6.758831977844238
    7. ')' → logprob: -6.758831977844238
    8. '':' → logprob: -7.008831977844238
    9. '
' → logprob: -7.133831977844238
    10. '[' → logprob: -7.258831977844238

Token 993: ' Since' (ID: 12265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6170296669006348
    2. 'l' → logprob: -1.6170296669006348
    3. 'def' → logprob: -2.2420296669006348
    4. 'low' → logprob: -2.8670296669006348
    5. 'for' → logprob: -3.3670296669006348
    6. 'while' → logprob: -4.367029666900635
    7. 'left' → logprob: -4.367029666900635
    8. ':
' → logprob: -4.492029666900635
    9. '```' → logprob: -5.367029666900635
    10. ',' → logprob: -6.367029666900635

Token 994: ' checking' (ID: 19141)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4929949045181274
    2. '```' → logprob: -1.9929949045181274
    3. '_' → logprob: -2.367994785308838
    4. 'L' → logprob: -2.492994785308838
    5. ',' → logprob: -2.492994785308838
    6. ')' → logprob: -2.867994785308838
    7. 'l' → logprob: -2.992994785308838
    8. 'a' → logprob: -3.242994785308838
    9. '[' → logprob: -3.742994785308838
    10. 'A' → logprob: -3.867994785308838

Token 995: ' subse' (ID: 19874)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.090157151222229
    2. 'if' → logprob: -2.7151570320129395
    3. 'substring' → logprob: -5.5901570320129395
    4. '_sub' → logprob: -5.8401570320129395
    5. '```' → logprob: -6.3401570320129395
    6. 'is' → logprob: -6.4651570320129395
    7. ' if' → logprob: -6.4651570320129395
    8. 'for' → logprob: -6.5901570320129395
    9. ''' → logprob: -6.8401570320129395
    10. 'sub' → logprob: -6.9651570320129395

Token 996: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.13149920105934143
    2. 'q' → logprob: -2.6314992904663086
    3. 'sequence' → logprob: -3.2564992904663086
    4. 'quences' → logprob: -4.756499290466309
    5. '```' → logprob: -7.381499290466309
    6. '[' → logprob: -7.381499290466309
    7. 'qu' → logprob: -7.506499290466309
    8. '#' → logprob: -7.881499290466309
    9. '_' → logprob: -8.006499290466309
    10. '[]' → logprob: -8.131499290466309

Token 997: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016651345416903496
    2. '_check' → logprob: -5.141651153564453
    3. '_match' → logprob: -6.141651153564453
    4. 's' → logprob: -6.766651153564453
    5. ')' → logprob: -7.016651153564453
    6. '_length' → logprob: -7.266651153564453
    7. ':' → logprob: -7.266651153564453
    8. ' _' → logprob: -7.766651153564453
    9. '```' → logprob: -7.766651153564453
    10. '_of' → logprob: -8.016651153564453

Token 998: ' length' (ID: 5517)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.8865573406219482
    2. 'each' → logprob: -1.0115573406219482
    3. '```' → logprob: -2.8865573406219482
    4. 'the' → logprob: -3.0115573406219482
    5. ' substring' → logprob: -3.7615573406219482
    6. ' the' → logprob: -4.011557579040527
    7. 'substring' → logprob: -4.136557579040527
    8. ' subse' → logprob: -4.511557579040527
    9. 'a' → logprob: -4.886557579040527
    10. 'sub' → logprob: -5.136557579040527

Token 999: ' L' (ID: 451)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4032636284828186
    2. '```' → logprob: -1.7782635688781738
    3. 'L' → logprob: -2.653263568878174
    4. '`' → logprob: -4.153263568878174
    5. '_' → logprob: -4.403263568878174
    6. ' +' → logprob: -4.653263568878174
    7. '_l' → logprob: -4.653263568878174
    8. 'l' → logprob: -4.903263568878174
    9. '_L' → logprob: -5.403263568878174
    10. ')' → logprob: -5.528263568878174

Token 1000: ' substr' (ID: 29234)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6897755861282349
    2. '```' → logprob: -2.5647754669189453
    3. 'L' → logprob: -3.0647754669189453
    4. ':' → logprob: -3.0647754669189453
    5. '_' → logprob: -3.0647754669189453
    6. '=' → logprob: -3.1897754669189453
    7. ' is' → logprob: -3.4397754669189453
    8. 'for' → logprob: -3.5647754669189453
    9. '[' → logprob: -3.6897754669189453
    10. '<=' → logprob: -3.9397754669189453

Token 1001: 'ings' (ID: 963)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6740866899490356
    2. 'e' → logprob: -2.674086570739746
    3. '=' → logprob: -3.049086570739746
    4. '```' → logprob: -3.049086570739746
    5. 'ence' → logprob: -3.174086570739746
    6. '+' → logprob: -3.174086570739746
    7. ')
' → logprob: -3.424086570739746
    8. ']' → logprob: -3.424086570739746
    9. '>' → logprob: -3.674086570739746
    10. 'u' → logprob: -3.799086570739746

Token 1002: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8976243138313293
    2. '```' → logprob: -1.6476242542266846
    3. '[' → logprob: -1.7726242542266846
    4. ',' → logprob: -3.3976242542266846
    5. '=' → logprob: -3.6476242542266846
    6. 'for' → logprob: -3.8976242542266846
    7. ' is' → logprob: -4.147624492645264
    8. 'of' → logprob: -4.147624492645264
    9. ')' → logprob: -4.397624492645264
    10. ''' → logprob: -4.522624492645264

Token 1003: ' O' (ID: 532)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4817050695419312
    2. '"' → logprob: -2.2317051887512207
    3. 'n' → logprob: -2.2317051887512207
    4. '`' → logprob: -2.3567051887512207
    5. '_' → logprob: -2.3567051887512207
    6. ''' → logprob: -2.6067051887512207
    7. 'O' → logprob: -3.6067051887512207
    8. '[' → logprob: -3.6067051887512207
    9. ',' → logprob: -3.7317051887512207
    10. ' O' → logprob: -3.7317051887512207

Token 1004: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.11867121607065201
    2. 'A' → logprob: -3.493671178817749
    3. '(len' → logprob: -3.493671178817749
    4. '(' → logprob: -3.743671178817749
    5. '(B' → logprob: -3.993671178817749
    6. 'len' → logprob: -5.868671417236328
    7. '1' → logprob: -6.368671417236328
    8. 'B' → logprob: -6.493671417236328
    9. '```' → logprob: -6.868671417236328
    10. 'L' → logprob: -7.618671417236328

Token 1005: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20514477789402008
    2. '+' → logprob: -2.3301448822021484
    3. '[' → logprob: -2.9551448822021484
    4. '_' → logprob: -5.330144882202148
    5. '#' → logprob: -5.455144882202148
    6. '),' → logprob: -6.080144882202148
    7. '[
' → logprob: -6.080144882202148
    8. '```' → logprob: -6.330144882202148
    9. '):' → logprob: -6.580144882202148
    10. ',' → logprob: -6.705144882202148

Token 1006: ' per' (ID: 777)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9243552684783936
    2. ')' → logprob: -2.4243552684783936
    3. '[' → logprob: -2.4243552684783936
    4. 'for' → logprob: -2.6743552684783936
    5. ']' → logprob: -2.7993552684783936
    6. '[i' → logprob: -3.2993552684783936
    7. '```' → logprob: -3.4243552684783936
    8. 'def' → logprob: -3.6743552684783936
    9. ':
' → logprob: -3.7993552684783936
    10. 'import' → logprob: -3.9243552684783936

Token 1007: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.8770632743835449
    2. '_' → logprob: -1.002063274383545
    3. ' substring' → logprob: -2.377063274383545
    4. ''' → logprob: -3.627063274383545
    5. 'sub' → logprob: -4.127063274383545
    6. '```' → logprob: -4.252063274383545
    7. ' ' → logprob: -4.377063274383545
    8. ')' → logprob: -5.127063274383545
    9. '#' → logprob: -5.252063274383545
    10. 'character' → logprob: -5.377063274383545

Token 1008: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28958022594451904
    2. 'for' → logprob: -3.2895803451538086
    3. '[' → logprob: -3.7895803451538086
    4. ']' → logprob: -3.7895803451538086
    5. ':
' → logprob: -3.7895803451538086
    6. 'import' → logprob: -4.039580345153809
    7. ')' → logprob: -4.289580345153809
    8. '):' → logprob: -4.414580345153809
    9. ',' → logprob: -4.539580345153809
    10. '=' → logprob: -4.539580345153809

Token 1009: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6692085862159729
    2. 'for' → logprob: -2.169208526611328
    3. ')' → logprob: -2.794208526611328
    4. '#' → logprob: -2.919208526611328
    5. ' ' → logprob: -3.544208526611328
    6. ',' → logprob: -3.669208526611328
    7. '+' → logprob: -3.669208526611328
    8. '   ' → logprob: -3.794208526611328
    9. '_' → logprob: -3.919208526611328
    10. 'def' → logprob: -4.169208526611328

Token 1010: ' For' (ID: 2214)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5323747396469116
    2. 'for' → logprob: -2.157374858856201
    3. '\n' → logprob: -2.782374858856201
    4. 'while' → logprob: -2.782374858856201
    5. '+' → logprob: -3.157374858856201
    6. '   ' → logprob: -3.407374858856201
    7. 'def' → logprob: -3.407374858856201
    8. '"' → logprob: -3.407374858856201
    9. ')' → logprob: -3.407374858856201
    10. '```' → logprob: -3.657374858856201

Token 1011: ' B' (ID: 418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05017508938908577
    2. ' _' → logprob: -4.175175189971924
    3. ' each' → logprob: -4.675175189971924
    4. ' ' → logprob: -4.675175189971924
    5. 'l' → logprob: -5.550175189971924
    6. 'each' → logprob: -6.175175189971924
    7. 'i' → logprob: -6.300175189971924
    8. 'L' → logprob: -6.425175189971924
    9. ' length' → logprob: -7.425175189971924
    10. 'B' → logprob: -7.550175189971924

Token 1012: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6132681369781494
    2. '**' → logprob: -2.1132681369781494
    3. '//' → logprob: -2.3632681369781494
    4. '```' → logprob: -2.4882681369781494
    5. '^' → logprob: -3.4882681369781494
    6. '*' → logprob: -3.4882681369781494
    7. '`' → logprob: -3.8632681369781494
    8. '+' → logprob: -3.9882681369781494
    9. '_
' → logprob: -4.36326789855957
    10. '[' → logprob: -4.36326789855957

Token 1013: '500' (ID: 3234)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27529847621917725
    2. '```' → logprob: -1.6502984762191772
    3. '=' → logprob: -4.525298595428467
    4. '``' → logprob: -4.900298595428467
    5. '^' → logprob: -5.400298595428467
    6. '
' → logprob: -5.400298595428467
    7. ')' → logprob: -5.525298595428467
    8. '**' → logprob: -5.650298595428467
    9. '*' → logprob: -5.650298595428467
    10. '5' → logprob: -5.775298595428467

Token 1014: '0' (ID: 15)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6357744336128235
    2. '_' → logprob: -2.1357743740081787
    3. '**' → logprob: -2.5107743740081787
    4. '*' → logprob: -2.5107743740081787
    5. ')' → logprob: -3.0107743740081787
    6. ':' → logprob: -3.5107743740081787
    7. '[' → logprob: -4.010774612426758
    8. '#' → logprob: -4.385774612426758
    9. ']' → logprob: -4.510774612426758
    10. 'B' → logprob: -4.510774612426758

Token 1015: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20022688806056976
    2. ')' → logprob: -2.8252267837524414
    3. ']' → logprob: -3.9502267837524414
    4. '[' → logprob: -4.200226783752441
    5. ',' → logprob: -4.325226783752441
    6. ':
' → logprob: -4.450226783752441
    7. '+' → logprob: -4.575226783752441
    8. '```' → logprob: -4.700226783752441
    9. ' ' → logprob: -4.825226783752441
    10. 'for' → logprob: -4.950226783752441

Token 1016: ' L' (ID: 451)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8560705780982971
    2. '+' → logprob: -1.1060705184936523
    3. '`' → logprob: -2.4810705184936523
    4. '1' → logprob: -2.4810705184936523
    5. '0' → logprob: -4.231070518493652
    6. '``' → logprob: -4.731070518493652
    7. 'B' → logprob: -4.981070518493652
    8. ':' → logprob: -5.106070518493652
    9. ')' → logprob: -5.106070518493652
    10. ',' → logprob: -5.231070518493652

Token 1017: ' ~' (ID: 6574)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44197261333465576
    2. '+' → logprob: -2.5669727325439453
    3. '```' → logprob: -2.5669727325439453
    4. '=' → logprob: -2.8169727325439453
    5. '[' → logprob: -2.8169727325439453
    6. ')' → logprob: -4.191972732543945
    7. ''' → logprob: -4.691972732543945
    8. ':' → logprob: -5.066972732543945
    9. '<' → logprob: -5.191972732543945
    10. '*' → logprob: -5.191972732543945

Token 1018: '250' (ID: 6911)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2444814294576645
    2. '```' → logprob: -2.744481325149536
    3. '100' → logprob: -3.119481325149536
    4. '``' → logprob: -3.119481325149536
    5. '`' → logprob: -3.244481325149536
    6. '1' → logprob: -4.994481563568115
    7. '250' → logprob: -5.869481563568115
    8. '0' → logprob: -6.244481563568115
    9. '50' → logprob: -6.369481563568115
    10. ''' → logprob: -6.494481563568115

Token 1019: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4800535440444946
    2. ':' → logprob: -1.6050535440444946
    3. '_' → logprob: -2.230053424835205
    4. ',' → logprob: -2.480053424835205
    5. '+' → logprob: -2.730053424835205
    6. '=' → logprob: -2.980053424835205
    7. '```' → logprob: -2.980053424835205
    8. ' ' → logprob: -3.355053424835205
    9. ']' → logprob: -3.355053424835205
    10. '>' → logprob: -3.480053424835205

Token 1020: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2053745836019516
    2. ':
' → logprob: -3.4553744792938232
    3. ')' → logprob: -3.5803744792938232
    4. ']' → logprob: -3.8303744792938232
    5. '   ' → logprob: -4.330374717712402
    6. '):' → logprob: -4.580374717712402
    7. '[' → logprob: -4.705374717712402
    8. '+' → logprob: -4.705374717712402
    9. ',' → logprob: -4.705374717712402
    10. '```' → logprob: -4.830374717712402

Token 1021: ' still' (ID: 2928)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3194830119609833
    2. '+' → logprob: -2.4444830417633057
    3. '```' → logprob: -3.0694830417633057
    4. ')' → logprob: -3.6944830417633057
    5. ':
' → logprob: -4.194482803344727
    6. ''' → logprob: -4.319482803344727
    7. ' ' → logprob: -4.444482803344727
    8. '):' → logprob: -4.569482803344727
    9. '=' → logprob: -4.694482803344727
    10. '_' → logprob: -4.819482803344727

Token 1022: ' expensive' (ID: 14818)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5282532572746277
    2. ')' → logprob: -2.5282533168792725
    3. '_' → logprob: -2.9032533168792725
    4. ',' → logprob: -2.9032533168792725
    5. '=' → logprob: -3.1532533168792725
    6. '+' → logprob: -3.2782533168792725
    7. '*' → logprob: -3.7782533168792725
    8. '```' → logprob: -3.9032533168792725
    9. '[' → logprob: -4.028253078460693
    10. '>' → logprob: -4.153253078460693

Token 1023: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5031847953796387
    2. ')' → logprob: -2.0031847953796387
    3. ':' → logprob: -2.1281847953796387
    4. ',' → logprob: -2.3781847953796387
    5. '\n' → logprob: -2.7531847953796387
    6. '`' → logprob: -2.7531847953796387
    7. ']' → logprob: -3.1281847953796387
    8. '```' → logprob: -3.1281847953796387
    9. 'while' → logprob: -3.6281847953796387
    10. '"' → logprob: -3.8781847953796387

Token 1024: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1271146535873413
    2. ':' → logprob: -1.7521146535873413
    3. 'while' → logprob: -2.627114772796631
    4. 'import' → logprob: -2.752114772796631
    5. 'l' → logprob: -3.252114772796631
    6. ']' → logprob: -3.252114772796631
    7. '```' → logprob: -3.252114772796631
    8. 'def' → logprob: -3.502114772796631
    9. 'low' → logprob: -3.752114772796631
    10. ',' → logprob: -4.002114772796631

Token 1025: ' Optimize' (ID: 167174)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9334619641304016
    2. 'from' → logprob: -1.5584619045257568
    3. 'for' → logprob: -1.8084619045257568
    4. 'def' → logprob: -3.058461904525757
    5. 'low' → logprob: -3.558461904525757
    6. 'left' → logprob: -3.683461904525757
    7. 'pos' → logprob: -3.808461904525757
    8. '#' → logprob: -4.058462142944336
    9. '```' → logprob: -4.058462142944336
    10. 'dp' → logprob: -4.433462142944336

Token 1026: ' subse' (ID: 19874)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.191037893295288
    2. 'import' → logprob: -2.316037893295288
    3. 'n' → logprob: -2.566037893295288
    4. 'dp' → logprob: -2.566037893295288
    5. '```' → logprob: -2.941037893295288
    6. 'pos' → logprob: -3.066037893295288
    7. 'def' → logprob: -3.191037893295288
    8. 'i' → logprob: -3.316037893295288
    9. 'next' → logprob: -3.316037893295288
    10. ']' → logprob: -3.441037893295288

Token 1027: 'quence' (ID: 6975)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8430122137069702
    2. '[' → logprob: -0.9680122137069702
    3. '```' → logprob: -3.4680123329162598
    4. '`' → logprob: -3.8430123329162598
    5. 'n' → logprob: -3.8430123329162598
    6. '[
' → logprob: -3.9680123329162598
    7. ']' → logprob: -4.34301233291626
    8. '=' → logprob: -4.71801233291626
    9. 'p' → logprob: -4.84301233291626
    10. 'r' → logprob: -4.96801233291626

Token 1028: ' checking' (ID: 19141)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6805815696716309
    2. '[' → logprob: -1.5555815696716309
    3. '```' → logprob: -3.430581569671631
    4. ')' → logprob: -3.555581569671631
    5. '[
' → logprob: -3.555581569671631
    6. '[i' → logprob: -3.680581569671631
    7. '`' → logprob: -3.930581569671631
    8. ']' → logprob: -3.930581569671631
    9. ''' → logprob: -4.180581569671631
    10. 'i' → logprob: -4.305581569671631

Token 1029: ':

' (ID: 1402)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.989182710647583
    2. ']' → logprob: -1.864182710647583
    3. 'for' → logprob: -2.614182710647583
    4. 'n' → logprob: -3.114182710647583
    5. 'i' → logprob: -3.364182710647583
    6. '```' → logprob: -3.364182710647583
    7. ',' → logprob: -3.739182710647583
    8. 'import' → logprob: -3.739182710647583
    9. 'pos' → logprob: -3.989182710647583
    10. 'a' → logprob: -4.114182472229004

Token 1030: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6585289239883423
    2. 'next' → logprob: -1.2835289239883423
    3. 'import' → logprob: -2.1585288047790527
    4. '#' → logprob: -3.4085288047790527
    5. 'pos' → logprob: -3.5335288047790527
    6. 'n' → logprob: -4.408528804779053
    7. 'anna' → logprob: -6.158528804779053
    8. 'for' → logprob: -6.408528804779053
    9. '
' → logprob: -6.783528804779053
    10. '"""
' → logprob: -7.033528804779053

Token 1031: ' Pre' (ID: 4659)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16745597124099731
    2. 'pos' → logprob: -2.7924559116363525
    3. '#' → logprob: -3.6674559116363525
    4. 'from' → logprob: -4.167456150054932
    5. 'n' → logprob: -4.417456150054932
    6. 'for' → logprob: -4.542456150054932
    7. 'anna' → logprob: -5.042456150054932
    8. 'import' → logprob: -5.792456150054932
    9. '\n' → logprob: -6.292456150054932
    10. 'Anna' → logprob: -6.542456150054932

Token 1032: 'processing' (ID: 41376)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.08967555314302444
    2. 'computed' → logprob: -2.8396756649017334
    3. 'pare' → logprob: -4.714675426483154
    4. 'fix' → logprob: -4.964675426483154
    5. 'p' → logprob: -5.589675426483154
    6. 'process' → logprob: -6.339675426483154
    7. 'v' → logprob: -6.589675426483154
    8. 'f' → logprob: -7.089675426483154
    9. 'd' → logprob: -8.089675903320312
    10. '[' → logprob: -8.089675903320312

Token 1033: ' Anna' (ID: 34101)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.33082878589630127
    2. 'n' → logprob: -2.9558286666870117
    3. 'anna' → logprob: -3.0808286666870117
    4. 'pos' → logprob: -3.5808286666870117
    5. 'for' → logprob: -3.7058286666870117
    6. 'from' → logprob: -3.7058286666870117
    7. ']' → logprob: -3.9558286666870117
    8. 'positions' → logprob: -4.330828666687012
    9. '#' → logprob: -4.455828666687012
    10. ' anna' → logprob: -5.080828666687012

Token 1034: ':

' (ID: 1402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.650116503238678
    2. '_next' → logprob: -2.275116443634033
    3. ']' → logprob: -2.400116443634033
    4. 'pos' → logprob: -2.775116443634033
    5. 'n' → logprob: -3.650116443634033
    6. 'positions' → logprob: -3.650116443634033
    7. '#' → logprob: -4.150116443634033
    8. '```' → logprob: -4.275116443634033
    9. ',' → logprob: -4.650116443634033
    10. '][' → logprob: -4.775116443634033

Token 1035: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5635042786598206
    2. 'from' → logprob: -1.3135042190551758
    3. 'pos' → logprob: -2.438504219055176
    4. 'import' → logprob: -4.188504219055176
    5. 'positions' → logprob: -4.313504219055176
    6. '#' → logprob: -4.438504219055176
    7. 'max' → logprob: -4.813504219055176
    8. 'n' → logprob: -5.313504219055176
    9. 'for' → logprob: -6.063504219055176
    10. 'anna' → logprob: -6.313504219055176

Token 1036: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7723058462142944
    2. 'next' → logprob: -0.8973058462142944
    3. 'pos' → logprob: -2.522305965423584
    4. 'positions' → logprob: -4.522305965423584
    5. 'max' → logprob: -4.647305965423584
    6. 'import' → logprob: -4.647305965423584
    7. 'n' → logprob: -4.772305965423584
    8. '#' → logprob: -5.022305965423584
    9. 'anna' → logprob: -7.522305965423584
    10. 'idx' → logprob: -7.647305965423584

Token 1037: ' Anna' (ID: 34101)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8049280643463135
    2. '_' → logprob: -1.4299280643463135
    3. 'i' → logprob: -2.8049280643463135
    4. 'pos' → logprob: -2.8049280643463135
    5. 'Anna' → logprob: -3.1799280643463135
    6. '
' → logprob: -3.6799280643463135
    7. 'a' → logprob: -3.9299280643463135
    8. ']' → logprob: -4.054927825927734
    9. ' Anna' → logprob: -5.054927825927734
    10. '_
' → logprob: -5.304927825927734

Token 1038: ''s' (ID: 885)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.8772057294845581
    2. '_positions' → logprob: -0.8772057294845581
    3. 'positions' → logprob: -2.8772058486938477
    4. '_pos' → logprob: -3.3772058486938477
    5. 'next' → logprob: -3.6272058486938477
    6. '_cards' → logprob: -4.752205848693848
    7. '_len' → logprob: -5.377205848693848
    8. '_' → logprob: -5.377205848693848
    9. 'pos' → logprob: -5.377205848693848
    10. ''s' → logprob: -5.752205848693848

Token 1039: ' cards' (ID: 10541)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.9800847172737122
    2. '_pos' → logprob: -1.3550846576690674
    3. '_next' → logprob: -1.6050846576690674
    4. 'positions' → logprob: -3.1050846576690674
    5. '_cards' → logprob: -3.2300846576690674
    6. 'pos' → logprob: -3.7300846576690674
    7. 'next' → logprob: -3.9800846576690674
    8. '_' → logprob: -3.9800846576690674
    9. 'cards' → logprob: -4.9800848960876465
    10. ' next' → logprob: -6.2300848960876465

Token 1040: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.26880061626434326
    2. '_' → logprob: -2.768800735473633
    3. '_positions' → logprob: -2.768800735473633
    4. 'next' → logprob: -3.393800735473633
    5. '_pos' → logprob: -4.018800735473633
    6. ',' → logprob: -4.643800735473633
    7. 'positions' → logprob: -4.768800735473633
    8. 'n' → logprob: -5.518800735473633
    9. '
' → logprob: -5.643800735473633
    10. '```' → logprob: -5.643800735473633

Token 1041: ' we' (ID: 581)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.36979299783706665
    2. ' next' → logprob: -2.369792938232422
    3. 'positions' → logprob: -2.494792938232422
    4. 'pos' → logprob: -3.119792938232422
    5. 'n' → logprob: -3.744792938232422
    6. 'import' → logprob: -3.994792938232422
    7. 'from' → logprob: -4.244792938232422
    8. ' nxt' → logprob: -5.494792938232422
    9. '_next' → logprob: -5.619792938232422
    10. ' positions' → logprob: -5.619792938232422

Token 1042: ' can' (ID: 665)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.3663949966430664
    2. '_positions' → logprob: -1.4913949966430664
    3. 'can' → logprob: -1.8663949966430664
    4. 'positions' → logprob: -2.1163949966430664
    5. 'next' → logprob: -2.7413949966430664
    6. 'have' → logprob: -2.9913949966430664
    7. '=' → logprob: -3.6163949966430664
    8. ' can' → logprob: -3.8663949966430664
    9. '#' → logprob: -4.741394996643066
    10. '_pre' → logprob: -4.741394996643066

Token 1043: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.09048573672771454
    2. 'pre' → logprob: -2.7154858112335205
    3. 'create' → logprob: -4.715485572814941
    4. 'prepare' → logprob: -5.465485572814941
    5. 'from' → logprob: -5.590485572814941
    6. 'import' → logprob: -6.840485572814941
    7. 'store' → logprob: -6.965485572814941
    8. ' pre' → logprob: -7.840485572814941
    9. 'compute' → logprob: -8.715485572814941
    10. ' build' → logprob: -8.840485572814941

Token 1044: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.013358099386096
    2. ' next' → logprob: -4.638358116149902
    3. ' nxt' → logprob: -6.388358116149902
    4. 'a' → logprob: -7.138358116149902
    5. 'pos' → logprob: -7.513358116149902
    6. 'n' → logprob: -8.888358116149902
    7. '[next' → logprob: -9.138358116149902
    8. '```' → logprob: -9.388358116149902
    9. ' a' → logprob: -9.638358116149902
    10. '`' → logprob: -9.763358116149902

Token 1045: ' occurrence' (ID: 55807)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.20428767800331116
    2. '_' → logprob: -1.9542876482009888
    3. '_occ' → logprob: -3.9542877674102783
    4. '_=' → logprob: -5.329287528991699
    5. '_indices' → logprob: -5.579287528991699
    6. ' =' → logprob: -5.829287528991699
    7. 'pos' → logprob: -5.954287528991699
    8. '_arr' → logprob: -6.079287528991699
    9. '_positions' → logprob: -6.079287528991699
    10. '=' → logprob: -6.204287528991699

Token 1046: ' arrays' (ID: 38774)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03863599896430969
    2. '```' → logprob: -4.413636207580566
    3. 'array' → logprob: -5.038636207580566
    4. '_pos' → logprob: -5.663636207580566
    5. '_array' → logprob: -5.788636207580566
    6. '_
' → logprob: -6.163636207580566
    7. '_a' → logprob: -6.788636207580566
    8. '_arr' → logprob: -7.038636207580566
    9. '
' → logprob: -7.163636207580566
    10. '`' → logprob: -7.163636207580566

Token 1047: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8728281855583191
    2. '[' → logprob: -1.6228282451629639
    3. '```' → logprob: -2.747828245162964
    4. '[
' → logprob: -2.997828245162964
    5. '_next' → logprob: -3.372828245162964
    6. ']' → logprob: -3.372828245162964
    7. '_
' → logprob: -3.997828245162964
    8. '`' → logprob: -3.997828245162964
    9. ',' → logprob: -4.122828006744385
    10. '
' → logprob: -4.247828006744385

Token 1048: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9890033006668091
    2. 'anna' → logprob: -1.739003300666809
    3. 'num' → logprob: -1.989003300666809
    4. 'the' → logprob: -2.2390031814575195
    5. 'numbers' → logprob: -3.6140031814575195
    6. ' anna' → logprob: -3.7390031814575195
    7. 'Anna' → logprob: -3.8640031814575195
    8. '0' → logprob: -3.9890031814575195
    9. 'arr' → logprob: -4.1140031814575195
    10. 'a' → logprob: -4.1140031814575195

Token 1049: ' card' (ID: 4766)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7646611928939819
    2. '_' → logprob: -1.764661192893982
    3. ']' → logprob: -2.1396613121032715
    4. 'num' → logprob: -2.6396613121032715
    5. 'number' → logprob: -3.2646613121032715
    6. '```' → logprob: -3.5146613121032715
    7. 'anna' → logprob: -4.0146613121032715
    8. 'n' → logprob: -4.2646613121032715
    9. '[' → logprob: -4.3896613121032715
    10. '_
' → logprob: -4.7646613121032715

Token 1050: ' value' (ID: 1432)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2720682621002197
    2. '_' → logprob: -2.1470682621002197
    3. '```' → logprob: -2.5220682621002197
    4. '[
' → logprob: -2.7720682621002197
    5. ',' → logprob: -3.1470682621002197
    6. '][' → logprob: -3.1470682621002197
    7. '[' → logprob: -3.2720682621002197
    8. 'n' → logprob: -3.3970682621002197
    9. '
' → logprob: -3.5220682621002197
    10. 'a' → logprob: -3.7720682621002197

Token 1051: ':

' (ID: 1402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3306422233581543
    2. ']' → logprob: -1.7056422233581543
    3. 'n' → logprob: -2.0806422233581543
    4. ',' → logprob: -2.4556422233581543
    5. 'max' → logprob: -3.0806422233581543
    6. 'for' → logprob: -3.0806422233581543
    7. '```' → logprob: -3.5806422233581543
    8. ' next' → logprob: -3.8306422233581543
    9. '\n' → logprob: -4.205642223358154
    10. '   ' → logprob: -4.330642223358154

Token 1052: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5022842884063721
    2. 'next' → logprob: -2.127284288406372
    3. 'n' → logprob: -3.127284288406372
    4. 'from' → logprob: -3.377284288406372
    5. 'size' → logprob: -3.502284288406372
    6. '```' → logprob: -3.627284288406372
    7. ']' → logprob: -4.377284049987793
    8. '#' → logprob: -4.377284049987793
    9. 'MAX' → logprob: -4.377284049987793
    10. 'for' → logprob: -4.627284049987793

Token 1053: ' For' (ID: 2214)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.313388854265213
    2. 'next' → logprob: -2.1883888244628906
    3. 'from' → logprob: -2.4383888244628906
    4. 'MAX' → logprob: -3.9383888244628906
    5. 'n' → logprob: -4.188388824462891
    6. '#' → logprob: -4.188388824462891
    7. 'N' → logprob: -5.438388824462891
    8. 'import' → logprob: -5.813388824462891
    9. 'value' → logprob: -6.063388824462891
    10. '
' → logprob: -6.313388824462891

Token 1054: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.7114914655685425
    2. 'i' → logprob: -1.9614914655685425
    3. '```' → logprob: -1.9614914655685425
    4. 'anna' → logprob: -2.211491584777832
    5. 'max' → logprob: -2.586491584777832
    6. 'pos' → logprob: -2.961491584777832
    7. 'idx' → logprob: -3.336491584777832
    8. 'len' → logprob: -3.586491584777832
    9. 'Anna' → logprob: -3.711491584777832
    10. ' anna' → logprob: -3.836491584777832

Token 1055: ' position' (ID: 4010)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.2609663009643555
    2. 'value' → logprob: -1.3859663009643555
    3. 'val' → logprob: -1.8859663009643555
    4. 'number' → logprob: -2.0109663009643555
    5. '```' → logprob: -3.3859663009643555
    6. 'v' → logprob: -3.8859663009643555
    7. 'x' → logprob: -4.1359663009643555
    8. 'card' → logprob: -4.2609663009643555
    9. 'a' → logprob: -4.3859663009643555
    10. 'c' → logprob: -4.5109663009643555

Token 1056: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2573397159576416
    2. 'in' → logprob: -1.2573397159576416
    3. ' in' → logprob: -1.8823397159576416
    4. ',' → logprob: -2.5073397159576416
    5. '[
' → logprob: -3.5073397159576416
    6. '```' → logprob: -4.1323394775390625
    7. '[i' → logprob: -4.2573394775390625
    8. '
' → logprob: -4.2573394775390625
    9. '[' → logprob: -4.3823394775390625
    10. '`' → logprob: -4.5073394775390625

Token 1057: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.817563533782959
    2. ' in' → logprob: -1.567563533782959
    3. '_' → logprob: -2.192563533782959
    4. '[' → logprob: -2.692563533782959
    5. 'in' → logprob: -3.442563533782959
    6. '=' → logprob: -4.192563533782959
    7. '```' → logprob: -4.192563533782959
    8. '_,' → logprob: -4.317563533782959
    9. '_in' → logprob: -4.442563533782959
    10. ']' → logprob: -4.567563533782959

Token 1058: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.0006558468448929489
    2. '```' → logprob: -8.250656127929688
    3. 'range' → logprob: -9.250656127929688
    4. '   ' → logprob: -10.250656127929688
    5. ' anna' → logprob: -10.250656127929688
    6. 'br' → logprob: -10.250656127929688
    7. '0' → logprob: -10.500656127929688
    8. '`' → logprob: -10.625656127929688
    9. 'ana' → logprob: -10.625656127929688
    10. 'Anna' → logprob: -10.625656127929688

Token 1059: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30887001752853394
    2. '[' → logprob: -3.6838700771331787
    3. ':' → logprob: -3.9338700771331787
    4. '][' → logprob: -3.9338700771331787
    5. ']' → logprob: -4.0588698387146
    6. '+' → logprob: -4.0588698387146
    7. '_next' → logprob: -4.3088698387146
    8. '
' → logprob: -4.4338698387146
    9. ':
' → logprob: -4.4338698387146
    10. ' next' → logprob: -4.4338698387146

Token 1060: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6792018413543701
    2. '),' → logprob: -2.30420184135437
    3. '],' → logprob: -2.67920184135437
    4. ' in' → logprob: -2.80420184135437
    5. 'from' → logprob: -2.80420184135437
    6. '```' → logprob: -2.80420184135437
    7. '0' → logprob: -2.92920184135437
    8. '
' → logprob: -3.05420184135437
    9. ')' → logprob: -3.05420184135437
    10. '][' → logprob: -3.30420184135437

Token 1061: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6184638738632202
    2. ']' → logprob: -1.6184638738632202
    3. '
' → logprob: -1.9934638738632202
    4. '][' → logprob: -2.2434639930725098
    5. 'for' → logprob: -2.7434639930725098
    6. '=' → logprob: -2.9934639930725098
    7. ':' → logprob: -3.1184639930725098
    8. '```' → logprob: -3.6184639930725098
    9. 'n' → logprob: -3.7434639930725098
    10. ' =' → logprob: -3.9934639930725098

Token 1062: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29481014609336853
    2. ':
' → logprob: -2.9198100566864014
    3. ':' → logprob: -3.1698100566864014
    4. '],' → logprob: -3.4198100566864014
    5. '
' → logprob: -3.6698100566864014
    6. ']' → logprob: -4.6698102951049805
    7. ' in' → logprob: -4.7948102951049805
    8. '```' → logprob: -4.7948102951049805
    9. '`' → logprob: -4.9198102951049805
    10. ' for' → logprob: -5.0448102951049805

Token 1063: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.18672668933868408
    2. ' next' → logprob: -1.936726689338684
    3. '`' → logprob: -4.8117265701293945
    4. 'n' → logprob: -5.1867265701293945
    5. '```' → logprob: -6.1867265701293945
    6. 'from' → logprob: -6.3117265701293945
    7. 'max' → logprob: -6.4367265701293945
    8. '
' → logprob: -6.9367265701293945
    9. 'for' → logprob: -7.3117265701293945
    10. '#' → logprob: -7.3117265701293945

Token 1064: '[i' (ID: 1768)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.5738927125930786
    2. '_occ' → logprob: -0.9488927125930786
    3. '_' → logprob: -3.198892593383789
    4. '_i' → logprob: -5.698892593383789
    5. '_idx' → logprob: -6.573892593383789
    6. '_oc' → logprob: -6.823892593383789
    7. '[i' → logprob: -7.573892593383789
    8. 'pos' → logprob: -7.948892593383789
    9. ' =' → logprob: -8.073892593383789
    10. '_arr' → logprob: -8.198892593383789

Token 1065: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18884466588497162
    2. '_' → logprob: -3.313844680786133
    3. ']_' → logprob: -3.313844680786133
    4. '```' → logprob: -3.313844680786133
    5. '][' → logprob: -3.438844680786133
    6. ']=' → logprob: -5.313844680786133
    7. '[' → logprob: -5.563844680786133
    8. '
' → logprob: -5.688844680786133
    9. '``' → logprob: -5.813844680786133
    10. '][_' → logprob: -6.188844680786133

Token 1066: 'v' (ID: 85)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.29595157504081726
    2. 'br' → logprob: -2.2959516048431396
    3. 'max' → logprob: -3.4209516048431396
    4. '0' → logprob: -3.5459516048431396
    5. ']' → logprob: -3.6709516048431396
    6. '500' → logprob: -4.0459513664245605
    7. 'A' → logprob: -4.5459513664245605
    8. '100' → logprob: -4.7959513664245605
    9. 'len' → logprob: -4.9209513664245605
    10. ']
' → logprob: -5.0459513664245605

Token 1067: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039988450706005096
    2. ' ]' → logprob: -4.0399885177612305
    3. '```' → logprob: -4.7899885177612305
    4. '[' → logprob: -5.4149885177612305
    5. '_' → logprob: -6.7899885177612305
    6. '
' → logprob: -7.1649885177612305
    7. 'a' → logprob: -7.4149885177612305
    8. 'v' → logprob: -7.4149885177612305
    9. ' ' → logprob: -7.5399885177612305
    10. '0' → logprob: -7.5399885177612305

Token 1068: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13250914216041565
    2. '[
' → logprob: -3.007509231567383
    3. '```' → logprob: -3.757509231567383
    4. '_' → logprob: -4.007509231567383
    5. '=' → logprob: -4.507509231567383
    6. '`' → logprob: -5.382509231567383
    7. ']' → logprob: -5.757509231567383
    8. '\[' → logprob: -6.007509231567383
    9. '
' → logprob: -6.382509231567383
    10. '.' → logprob: -6.632509231567383

Token 1069: ' next' (ID: 2613)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.8874340057373047
    2. ' the' → logprob: -2.1374340057373047
    3. '0' → logprob: -2.7624340057373047
    4. '{' → logprob: -2.7624340057373047
    5. '`' → logprob: -2.8874340057373047
    6. ''' → logprob: -2.8874340057373047
    7. ' ' → logprob: -3.0124340057373047
    8. ' -' → logprob: -3.2624340057373047
    9. ' next' → logprob: -3.2624340057373047
    10. 'A' → logprob: -3.5124340057373047

Token 1070: ' occurrence' (ID: 55807)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.3805464506149292
    2. '[i' → logprob: -1.5055464506149292
    3. '_pos' → logprob: -1.5055464506149292
    4. '_occ' → logprob: -2.6305465698242188
    5. 'pos' → logprob: -2.8805465698242188
    6. '_' → logprob: -3.0055465698242188
    7. '[' → logprob: -3.8805465698242188
    8. ']' → logprob: -4.005546569824219
    9. 'i' → logprob: -4.255546569824219
    10. 'occ' → logprob: -4.380546569824219

Token 1071: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18737094104290009
    2. '```' → logprob: -2.437371015548706
    3. '_' → logprob: -3.062371015548706
    4. '`' → logprob: -4.062370777130127
    5. '[
' → logprob: -4.437370777130127
    6. '\[' → logprob: -6.187370777130127
    7. ''' → logprob: -6.562370777130127
    8. '``' → logprob: -6.937370777130127
    9. '[i' → logprob: -6.937370777130127
    10. '
' → logprob: -8.062371253967285

Token 1072: ' card' (ID: 4766)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.10124550014734268
    2. 'i' → logprob: -3.476245403289795
    3. '```' → logprob: -3.726245403289795
    4. 'the' → logprob: -3.976245403289795
    5. ' anna' → logprob: -5.226245403289795
    6. ']' → logprob: -5.476245403289795
    7. '`' → logprob: -6.226245403289795
    8. 'v' → logprob: -6.351245403289795
    9. '[i' → logprob: -6.601245403289795
    10. '``' → logprob: -6.851245403289795

Token 1073: ' v' (ID: 323)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9541725516319275
    2. '```' → logprob: -1.2041726112365723
    3. '[' → logprob: -1.5791726112365723
    4. '
' → logprob: -3.4541726112365723
    5. '[
' → logprob: -3.8291726112365723
    6. '``' → logprob: -4.454172611236572
    7. ' ' → logprob: -4.954172611236572
    8. '`' → logprob: -4.954172611236572
    9. 'v' → logprob: -5.204172611236572
    10. '_
' → logprob: -5.454172611236572

Token 1074: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.345361590385437
    2. '[
' → logprob: -1.470361590385437
    3. '```' → logprob: -3.7203617095947266
    4. '_' → logprob: -4.845361709594727
    5. ']' → logprob: -5.095361709594727
    6. '`' → logprob: -5.720361709594727
    7. '[i' → logprob: -5.720361709594727
    8. '][' → logprob: -6.095361709594727
    9. '\[' → logprob: -6.095361709594727
    10. ''' → logprob: -6.970361709594727

Token 1075: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028911326080560684
    2. ' i' → logprob: -4.153911113739014
    3. '```' → logprob: -5.153911113739014
    4. '[i' → logprob: -6.403911113739014
    5. ' (' → logprob: -7.028911113739014
    6. 'position' → logprob: -7.153911113739014
    7. '`' → logprob: -7.403911113739014
    8. '0' → logprob: -7.528911113739014
    9. 'the' → logprob: -7.778911113739014
    10. ' position' → logprob: -8.153911590576172

Token 1076: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07429708540439606
    2. '```' → logprob: -3.8242971897125244
    3. '0' → logprob: -4.074296951293945
    4. '][' → logprob: -5.199296951293945
    5. '+' → logprob: -5.449296951293945
    6. ']' → logprob: -5.449296951293945
    7. '`' → logprob: -5.574296951293945
    8. '[i' → logprob: -5.949296951293945
    9. '1' → logprob: -6.199296951293945
    10. '
' → logprob: -6.324296951293945

Token 1077: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3365494906902313
    2. '[
' → logprob: -1.9615495204925537
    3. ']' → logprob: -3.3365495204925537
    4. '```' → logprob: -3.8365495204925537
    5. '`' → logprob: -4.336549282073975
    6. '][' → logprob: -4.586549282073975
    7. '\n' → logprob: -4.711549282073975
    8. '[next' → logprob: -4.836549282073975
    9. ',' → logprob: -5.461549282073975
    10. '_' → logprob: -5.711549282073975

Token 1078: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8726567029953003
    2. ']' → logprob: -1.8726567029953003
    3. 'next' → logprob: -2.37265682220459
    4. '[
' → logprob: -2.49765682220459
    5. '\n' → logprob: -2.87265682220459
    6. 'import' → logprob: -2.99765682220459
    7. ',' → logprob: -3.12265682220459
    8. 'n' → logprob: -3.24765682220459
    9. '[next' → logprob: -3.24765682220459
    10. '```' → logprob: -3.49765682220459

Token 1079: ' So' (ID: 2632)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6053365468978882
    2. '\n' → logprob: -2.6053366661071777
    3. 'import' → logprob: -2.9803366661071777
    4. ' next' → logprob: -2.9803366661071777
    5. 'n' → logprob: -3.2303366661071777
    6. '#' → logprob: -3.4803366661071777
    7. ']' → logprob: -3.6053366661071777
    8. 'from' → logprob: -3.6053366661071777
    9. '```' → logprob: -3.6053366661071777
    10. ',' → logprob: -3.8553366661071777

Token 1080: ' to' (ID: 316)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.950790286064148
    2. '```' → logprob: -1.950790286064148
    3. ' next' → logprob: -2.4507904052734375
    4. '[' → logprob: -2.4507904052734375
    5. 'v' → logprob: -2.7007904052734375
    6. 'next' → logprob: -2.8257904052734375
    7. ']' → logprob: -2.9507904052734375
    8. ' for' → logprob: -3.0757904052734375
    9. 'n' → logprob: -3.7007904052734375
    10. ',' → logprob: -3.7007904052734375

Token 1081: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.1432344615459442
    2. 'build' → logprob: -3.3932344913482666
    3. ' check' → logprob: -3.5182344913482666
    4. 'find' → logprob: -3.8932344913482666
    5. 'next' → logprob: -4.7682342529296875
    6. 'pre' → logprob: -4.8932342529296875
    7. ']' → logprob: -5.1432342529296875
    8. 'do' → logprob: -6.1432342529296875
    9. 'match' → logprob: -6.1432342529296875
    10. '[' → logprob: -6.2682342529296875

Token 1082: ' subse' (ID: 19874)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30508825182914734
    2. '[
' → logprob: -2.5550882816314697
    3. '[i' → logprob: -2.5550882816314697
    4. '[next' → logprob: -4.055088043212891
    5. '`' → logprob: -4.180088043212891
    6. '[v' → logprob: -4.555088043212891
    7. '_' → logprob: -4.680088043212891
    8. '```' → logprob: -4.930088043212891
    9. 'v' → logprob: -5.055088043212891
    10. '
' → logprob: -5.430088043212891

Token 1083: 'quence' (ID: 6975)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.45076167583465576
    2. 'quence' → logprob: -1.0757616758346558
    3. 'sequence' → logprob: -4.200761795043945
    4. 'quences' → logprob: -6.200761795043945
    5. '[
' → logprob: -6.450761795043945
    6. '_q' → logprob: -7.825761795043945
    7. '[' → logprob: -8.075761795043945
    8. 'u' → logprob: -8.325761795043945
    9. '
' → logprob: -8.450761795043945
    10. '`' → logprob: -8.450761795043945

Token 1084: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5288769602775574
    2. '_' → logprob: -2.278877019882202
    3. '[i' → logprob: -2.403877019882202
    4. '[
' → logprob: -2.778877019882202
    5. ',' → logprob: -3.403877019882202
    6. '```' → logprob: -4.528876781463623
    7. '_next' → logprob: -4.528876781463623
    8. '[]' → logprob: -5.028876781463623
    9. 'for' → logprob: -5.028876781463623
    10. ''' → logprob: -5.153876781463623

Token 1085: ' length' (ID: 5517)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.21792705357074738
    2. 'br' → logprob: -2.9679269790649414
    3. 'Anna' → logprob: -2.9679269790649414
    4. '```' → logprob: -3.3429269790649414
    5. '`' → logprob: -4.467926979064941
    6. ' anna' → logprob: -4.842926979064941
    7. 'i' → logprob: -5.342926979064941
    8. '0' → logprob: -5.467926979064941
    9. '[' → logprob: -5.592926979064941
    10. ']' → logprob: -5.717926979064941

Token 1086: ' L' (ID: 451)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7398210167884827
    2. '[' → logprob: -1.989820957183838
    3. '`' → logprob: -2.489820957183838
    4. ' ' → logprob: -3.239820957183838
    5. '0' → logprob: -3.614820957183838
    6. '``' → logprob: -3.739820957183838
    7. '1' → logprob: -3.864820957183838
    8. '_' → logprob: -3.989820957183838
    9. 'L' → logprob: -4.239820957183838
    10. ']' → logprob: -4.364820957183838

Token 1087: ' quickly' (ID: 8065)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18317879736423492
    2. '[
' → logprob: -3.0581789016723633
    3. '```' → logprob: -3.0581789016723633
    4. '_' → logprob: -4.058178901672363
    5. '`' → logprob: -4.433178901672363
    6. ',' → logprob: -4.933178901672363
    7. '[i' → logprob: -5.183178901672363
    8. ''' → logprob: -5.308178901672363
    9. '\[' → logprob: -5.433178901672363
    10. '``' → logprob: -5.808178901672363

Token 1088: ':

' (ID: 1402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3284497559070587
    2. '```' → logprob: -2.5784497261047363
    3. '[
' → logprob: -2.8284497261047363
    4. '`' → logprob: -3.2034497261047363
    5. '[i' → logprob: -3.3284497261047363
    6. ',' → logprob: -4.328449726104736
    7. ']' → logprob: -5.078449726104736
    8. '_' → logprob: -5.328449726104736
    9. '``' → logprob: -5.578449726104736
    10. '[next' → logprob: -5.578449726104736

Token 1089: '#' (ID: 2)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.3125483989715576
    2. '[' → logprob: -1.8125483989715576
    3. 'next' → logprob: -2.4375483989715576
    4. ']' → logprob: -2.8125483989715576
    5. 'import' → logprob: -2.8125483989715576
    6. '```' → logprob: -2.8125483989715576
    7. '`' → logprob: -3.3125483989715576
    8. ',' → logprob: -3.4375483989715576
    9. '\n' → logprob: -3.8125483989715576
    10. 'n' → logprob: -3.9375483989715576

Token 1090: ' For' (ID: 2214)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.4903523921966553
    2. '[' → logprob: -1.6153523921966553
    3. '```' → logprob: -2.4903523921966553
    4. ']' → logprob: -2.9903523921966553
    5. 'n' → logprob: -2.9903523921966553
    6. '#' → logprob: -3.2403523921966553
    7. '\n' → logprob: -3.2403523921966553
    8. 'a' → logprob: -3.3653523921966553
    9. 'next' → logprob: -3.3653523921966553
    10. ',' → logprob: -3.6153523921966553

Token 1091: ' substring' (ID: 89494)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2317589521408081
    2. '0' → logprob: -2.8567590713500977
    3. '```' → logprob: -3.6067590713500977
    4. 'v' → logprob: -3.7317590713500977
    5. 'next' → logprob: -4.231759071350098
    6. 'pos' → logprob: -4.356759071350098
    7. 'each' → logprob: -4.481759071350098
    8. 'anna' → logprob: -4.731759071350098
    9. 'Anna' → logprob: -5.356759071350098
    10. ']' → logprob: -5.606759071350098

Token 1092: ' s' (ID: 265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18767611682415009
    2. '_' → logprob: -2.812676191329956
    3. '[
' → logprob: -2.937676191329956
    4. '[i' → logprob: -4.937675952911377
    5. '```' → logprob: -4.937675952911377
    6. '`' → logprob: -5.062675952911377
    7. '[]' → logprob: -5.562675952911377
    8. ' ' → logprob: -6.187675952911377
    9. 'of' → logprob: -6.312675952911377
    10. ' of' → logprob: -6.312675952911377

Token 1093: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8974552750587463
    2. '_' → logprob: -1.2724552154541016
    3. 'u' → logprob: -2.7724552154541016
    4. '=' → logprob: -3.0224552154541016
    5. '\[' → logprob: -3.3974552154541016
    6. 's' → logprob: -3.5224552154541016
    7. 'ub' → logprob: -3.6474552154541016
    8. '[
' → logprob: -3.7724552154541016
    9. '```' → logprob: -3.7724552154541016
    10. 'i' → logprob: -4.522455215454102

Token 1094: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.018301062285900116
    2. '```' → logprob: -5.268301010131836
    3. 'anna' → logprob: -6.143301010131836
    4. 'B' → logprob: -6.268301010131836
    5. ' br' → logprob: -6.393301010131836
    6. ']' → logprob: -6.518301010131836
    7. 'Br' → logprob: -6.768301010131836
    8. 'length' → logprob: -7.143301010131836
    9. '0' → logprob: -7.393301010131836
    10. '[' → logprob: -7.518301010131836

Token 1095: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1686682105064392
    2. '_' → logprob: -2.918668270111084
    3. '```' → logprob: -4.168668270111084
    4. '
' → logprob: -4.418668270111084
    5. '[i' → logprob: -4.418668270111084
    6. '[
' → logprob: -4.668668270111084
    7. 's' → logprob: -4.918668270111084
    8. '[j' → logprob: -5.043668270111084
    9. ''' → logprob: -5.168668270111084
    10. '`' → logprob: -5.793668270111084

Token 1096: ' we' (ID: 581)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5861920714378357
    2. '[
' → logprob: -2.3361921310424805
    3. '
' → logprob: -3.0861921310424805
    4. '`' → logprob: -3.2111921310424805
    5. 'next' → logprob: -3.5861921310424805
    6. 'for' → logprob: -3.7111921310424805
    7. '#' → logprob: -3.7111921310424805
    8. 'i' → logprob: -3.9611921310424805
    9. '```' → logprob: -4.0861921310424805
    10. ' 
' → logprob: -4.0861921310424805

Token 1097: ' can' (ID: 665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2232711911201477
    2. '_next' → logprob: -3.223271131515503
    3. ' =' → logprob: -3.598271131515503
    4. '_' → logprob: -3.598271131515503
    5. '[
' → logprob: -4.098271369934082
    6. '=' → logprob: -4.098271369934082
    7. '#' → logprob: -4.473271369934082
    8. 'next' → logprob: -4.598271369934082
    9. 'n' → logprob: -4.723271369934082
    10. '[next' → logprob: -4.848271369934082

Token 1098: ' simulate' (ID: 66687)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.7604782581329346
    2. 'start' → logprob: -2.0104782581329346
    3. 'use' → logprob: -2.3854782581329346
    4. 'pos' → logprob: -2.5104782581329346
    5. 'i' → logprob: -2.7604782581329346
    6. 'go' → logprob: -3.1354782581329346
    7. 'check' → logprob: -3.1354782581329346
    8. 'try' → logprob: -3.3854782581329346
    9. '[' → logprob: -3.3854782581329346
    10. '
' → logprob: -3.6354782581329346

Token 1099: ' travers' (ID: 26957)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.3759379386901855
    2. 'next' → logprob: -1.7509379386901855
    3. 's' → logprob: -2.1259379386901855
    4. 'the' → logprob: -2.5009379386901855
    5. ' next' → logprob: -2.8759379386901855
    6. '```' → logprob: -3.3759379386901855
    7. '[next' → logprob: -3.3759379386901855
    8. '[' → logprob: -3.5009379386901855
    9. ' the' → logprob: -3.5009379386901855
    10. 'n' → logprob: -3.7509379386901855

Token 1100: 'ing' (ID: 289)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.315336138010025
    2. ')' → logprob: -1.9403361082077026
    3. 'a' → logprob: -3.315336227416992
    4. 'i' → logprob: -3.940336227416992
    5. 'er' → logprob: -4.065336227416992
    6. 'ing' → logprob: -4.440336227416992
    7. 'al' → logprob: -5.190336227416992
    8. '[' → logprob: -5.315336227416992
    9. 'ation' → logprob: -5.315336227416992
    10. 'n' → logprob: -5.440336227416992

Token 1101: ' Anna' (ID: 34101)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.6834162473678589
    2. '[' → logprob: -2.1834163665771484
    3. '```' → logprob: -2.3084163665771484
    4. ' the' → logprob: -2.5584163665771484
    5. 'the' → logprob: -2.5584163665771484
    6. 's' → logprob: -4.183416366577148
    7. '[
' → logprob: -4.183416366577148
    8. ' ' → logprob: -4.183416366577148
    9. ' next' → logprob: -4.433416366577148
    10. ''' → logprob: -4.558416366577148

Token 1102: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1262778043746948
    2. '```' → logprob: -1.1262778043746948
    3. '[
' → logprob: -2.0012779235839844
    4. '`' → logprob: -2.7512779235839844
    5. '[i' → logprob: -3.1262779235839844
    6. '``' → logprob: -3.2512779235839844
    7. ''' → logprob: -4.251277923583984
    8. '[next' → logprob: -5.001277923583984
    9. ''s' → logprob: -5.126277923583984
    10. 's' → logprob: -5.126277923583984

Token 1103: ' cards' (ID: 10541)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.941765546798706
    2. '[
' → logprob: -1.566765546798706
    3. '_next' → logprob: -2.441765546798706
    4. 'next' → logprob: -2.441765546798706
    5. '`' → logprob: -2.566765546798706
    6. '```' → logprob: -3.441765546798706
    7. '[next' → logprob: -4.066765785217285
    8. '
' → logprob: -4.066765785217285
    9. '``' → logprob: -4.316765785217285
    10. '_' → logprob: -4.316765785217285

Token 1104: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1587735414505005
    2. '```' → logprob: -3.033773422241211
    3. '[
' → logprob: -3.283773422241211
    4. '`' → logprob: -3.783773422241211
    5. ''' → logprob: -4.408773422241211
    6. '[i' → logprob: -5.158773422241211
    7. '[next' → logprob: -5.658773422241211
    8. '.' → logprob: -6.158773422241211
    9. ',' → logprob: -6.158773422241211
    10. '[n' → logprob: -6.158773422241211

Token 1105: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3128681480884552
    2. '`' → logprob: -3.062868118286133
    3. 'the' → logprob: -3.062868118286133
    4. ' next' → logprob: -3.187868118286133
    5. '0' → logprob: -3.312868118286133
    6. 'a' → logprob: -3.687868118286133
    7. '[next' → logprob: -4.312868118286133
    8. '[' → logprob: -4.562868118286133
    9. 'i' → logprob: -5.062868118286133
    10. '1' → logprob: -5.062868118286133

Token 1106: ' arrays' (ID: 38774)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4113677144050598
    2. '_' → logprob: -1.161367654800415
    3. '
' → logprob: -5.036367893218994
    4. '[
' → logprob: -5.036367893218994
    5. '`' → logprob: -6.161367893218994
    6. '```' → logprob: -6.161367893218994
    7. '\[' → logprob: -6.786367893218994
    8. '_[' → logprob: -7.036367893218994
    9. ' ' → logprob: -7.411367893218994
    10. '_
' → logprob: -7.536367893218994

Token 1107: ':

' (ID: 1402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5610023736953735
    2. '[
' → logprob: -1.1860023736953735
    3. '\n' → logprob: -3.811002254486084
    4. '[i' → logprob: -3.936002254486084
    5. '```' → logprob: -3.936002254486084
    6. '`' → logprob: -4.186002254486084
    7. '[next' → logprob: -4.936002254486084
    8. '[n' → logprob: -5.561002254486084
    9. ',' → logprob: -5.561002254486084
    10. ']' → logprob: -5.811002254486084

Token 1108: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4186127185821533
    2. '\n' → logprob: -1.6686127185821533
    3. ']' → logprob: -2.1686127185821533
    4. '[' → logprob: -2.4186127185821533
    5. '[
' → logprob: -2.5436127185821533
    6. '`' → logprob: -2.9186127185821533
    7. ',' → logprob: -3.6686127185821533
    8. '[next' → logprob: -4.293612480163574
    9. '
' → logprob: -4.543612480163574
    10. '``' → logprob: -4.543612480163574

Token 1109: ' Start' (ID: 7972)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.743854820728302
    2. '```' → logprob: -1.8688547611236572
    3. ']' → logprob: -3.1188547611236572
    4. '[' → logprob: -3.2438547611236572
    5. '[
' → logprob: -3.3688547611236572
    6. 'import' → logprob: -3.6188547611236572
    7. '#' → logprob: -3.7438547611236572
    8. '
' → logprob: -3.9938547611236572
    9. '`' → logprob: -3.9938547611236572
    10. ',' → logprob: -4.243854999542236

Token 1110: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7962822318077087
    2. 'pos' → logprob: -1.0462822914123535
    3. 'from' → logprob: -1.9212822914123535
    4. '_pos' → logprob: -3.5462822914123535
    5. '[' → logprob: -5.5462822914123535
    6. 'i' → logprob: -5.9212822914123535
    7. 'with' → logprob: -6.0462822914123535
    8. 'idx' → logprob: -6.1712822914123535
    9. 'at' → logprob: -6.5462822914123535
    10. '=
' → logprob: -6.6712822914123535

Token 1111: ' pos' (ID: 1253)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03663203492760658
    2. 'pos' → logprob: -3.4116320610046387
    3. '[' → logprob: -6.911632061004639
    4. 'i' → logprob: -7.161632061004639
    5. 'position' → logprob: -7.786632061004639
    6. '-' → logprob: -8.28663158416748
    7. 'A' → logprob: -8.91163158416748
    8. 'Anna' → logprob: -8.91163158416748
    9. '`' → logprob: -9.78663158416748
    10. 'idx' → logprob: -10.41163158416748

Token 1112: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48485440015792847
    2. '[' → logprob: -2.4848544597625732
    3. '=' → logprob: -2.6098544597625732
    4. ' =' → logprob: -2.6098544597625732
    5. '```' → logprob: -2.9848544597625732
    6. '+' → logprob: -3.3598544597625732
    7. '0' → logprob: -3.6098544597625732
    8. '`' → logprob: -4.859854221343994
    9. '_
' → logprob: -5.234854221343994
    10. '\[' → logprob: -5.359854221343994

Token 1113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020728617906570435
    2. '-' → logprob: -3.895728588104248
    3. ' ' → logprob: -9.645729064941406
    4. ' -' → logprob: -9.895729064941406
    5. '```' → logprob: -10.270729064941406
    6. 'A' → logprob: -11.145729064941406
    7. '`' → logprob: -11.145729064941406
    8. '``' → logprob: -13.020729064941406
    9. '[' → logprob: -13.145729064941406
    10. '+' → logprob: -14.020729064941406

Token 1114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048637669533491135
    2. '-' → logprob: -3.048637628555298
    3. ' -' → logprob: -11.048637390136719
    4. '[' → logprob: -11.548637390136719
    5. ' ' → logprob: -11.673637390136719
    6. '```' → logprob: -12.298637390136719
    7. '`' → logprob: -12.673637390136719
    8. '
' → logprob: -12.923637390136719
    9. '−' → logprob: -13.548637390136719
    10. '[-' → logprob: -13.798637390136719

Token 1115: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37932923436164856
    2. '```' → logprob: -2.254329204559326
    3. '[' → logprob: -2.629329204559326
    4. '[next' → logprob: -2.754329204559326
    5. 'for' → logprob: -4.504329204559326
    6. '[
' → logprob: -4.629329204559326
    7. ';' → logprob: -5.004329204559326
    8. ',' → logprob: -5.004329204559326
    9. '`' → logprob: -5.254329204559326
    10. 'next' → logprob: -5.379329204559326

Token 1116: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.727252721786499
    2. '
' → logprob: -1.852252721786499
    3. 'for' → logprob: -1.852252721786499
    4. '#' → logprob: -2.727252721786499
    5. 'next' → logprob: -2.852252721786499
    6. '```' → logprob: -2.977252721786499
    7. ',' → logprob: -3.102252721786499
    8. '[' → logprob: -3.352252721786499
    9. '[next' → logprob: -3.352252721786499
    10. 'while' → logprob: -3.352252721786499

Token 1117: ' For' (ID: 2214)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.940176248550415
    2. '=' → logprob: -1.440176248550415
    3. '[
' → logprob: -2.065176248550415
    4. '[next' → logprob: -2.690176248550415
    5. '=
' → logprob: -3.440176248550415
    6. '`' → logprob: -3.440176248550415
    7. 'next' → logprob: -3.940176248550415
    8. '#' → logprob: -4.190176010131836
    9. '```' → logprob: -4.315176010131836
    10. '
' → logprob: -4.940176010131836

Token 1118: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4366288483142853
    2. 'each' → logprob: -1.936628818511963
    3. ' pos' → logprob: -2.561628818511963
    4. ' each' → logprob: -2.561628818511963
    5. 'i' → logprob: -4.811628818511963
    6. 's' → logprob: -4.936628818511963
    7. ' s' → logprob: -5.186628818511963
    8. 'the' → logprob: -5.561628818511963
    9. ' Anna' → logprob: -5.561628818511963
    10. ' the' → logprob: -5.686628818511963

Token 1119: ' card' (ID: 4766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8812218904495239
    2. '[' → logprob: -1.756221890449524
    3. ' s' → logprob: -2.1312217712402344
    4. ' ]' → logprob: -2.6312217712402344
    5. 's' → logprob: -3.6312217712402344
    6. ']' → logprob: -4.006221771240234
    7. 'char' → logprob: -4.381221771240234
    8. '_' → logprob: -4.381221771240234
    9. ' card' → logprob: -4.381221771240234
    10. 'br' → logprob: -4.506221771240234

Token 1120: ' c' (ID: 274)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8337885141372681
    2. '[' → logprob: -1.333788514137268
    3. '[pos' → logprob: -2.3337883949279785
    4. '_' → logprob: -2.5837883949279785
    5. '`' → logprob: -3.3337883949279785
    6. ' in' → logprob: -4.2087883949279785
    7. '
' → logprob: -4.2087883949279785
    8. ' ' → logprob: -4.3337883949279785
    9. '[i' → logprob: -4.8337883949279785
    10. '``' → logprob: -4.9587883949279785

Token 1121: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5875282883644104
    2. '```' → logprob: -1.9625282287597656
    3. ' in' → logprob: -2.2125282287597656
    4. ' ' → logprob: -3.3375282287597656
    5. ' =' → logprob: -3.4625282287597656
    6. ',' → logprob: -3.7125282287597656
    7. '`' → logprob: -3.8375282287597656
    8. '_' → logprob: -4.212528228759766
    9. '[pos' → logprob: -4.212528228759766
    10. '=' → logprob: -4.837528228759766

Token 1122: ' substring' (ID: 89494)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0145574808120728
    2. 's' → logprob: -1.1395574808120728
    3. 'anna' → logprob: -1.8895574808120728
    4. 'br' → logprob: -2.514557361602783
    5. ' br' → logprob: -3.014557361602783
    6. ' anna' → logprob: -4.014557361602783
    7. 'substring' → logprob: -5.764557361602783
    8. '```' → logprob: -6.014557361602783
    9. ' substring' → logprob: -6.139557361602783
    10. 'Anna' → logprob: -6.639557361602783

Token 1123: ' s' (ID: 265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8488613367080688
    2. ':
' → logprob: -1.4738613367080688
    3. '_next' → logprob: -2.7238612174987793
    4. '[' → logprob: -3.2238612174987793
    5. '```' → logprob: -3.2238612174987793
    6. 's' → logprob: -3.5988612174987793
    7. '[pos' → logprob: -3.7238612174987793
    8. '`' → logprob: -3.8488612174987793
    9. '[next' → logprob: -4.223861217498779
    10. '
' → logprob: -4.348861217498779

Token 1124: ':

' (ID: 1402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2501716613769531
    2. ':' → logprob: -1.5001716613769531
    3. '[pos' → logprob: -1.7501716613769531
    4. ':
' → logprob: -1.8751716613769531
    5. '```' → logprob: -2.875171661376953
    6. ',' → logprob: -3.375171661376953
    7. '[next' → logprob: -4.375171661376953
    8. '[i' → logprob: -4.500171661376953
    9. '[
' → logprob: -4.750171661376953
    10. '`' → logprob: -5.000171661376953

Token 1125: '#' (ID: 2)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.7772626876831055
    2. 'pos' → logprob: -1.0272626876831055
    3. ' next' → logprob: -2.2772626876831055
    4. '```' → logprob: -3.9022626876831055
    5. 'next' → logprob: -4.5272626876831055
    6. '
' → logprob: -4.9022626876831055
    7. '   ' → logprob: -5.0272626876831055
    8. ' =' → logprob: -5.4022626876831055
    9. '``' → logprob: -5.4022626876831055
    10. ',' → logprob: -5.5272626876831055

Token 1126: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4091293513774872
    2. ' =' → logprob: -1.6591293811798096
    3. ' pos' → logprob: -2.6591293811798096
    4. '=' → logprob: -3.4091293811798096
    5. ' next' → logprob: -4.5341291427612305
    6. 'next' → logprob: -4.9091291427612305
    7. '   ' → logprob: -5.9091291427612305
    8. '```' → logprob: -5.9091291427612305
    9. 'if' → logprob: -6.4091291427612305
    10. '
' → logprob: -6.5341291427612305

Token 1127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198471784591675
    2. ' =' → logprob: -2.8119847774505615
    3. '=
' → logprob: -11.68698501586914
    4. '[' → logprob: -12.93698501586914
    5. ' ' → logprob: -13.68698501586914
    6. '+=' → logprob: -13.68698501586914
    7. ' ' → logprob: -14.31198501586914
    8. '```' → logprob: -14.31198501586914
    9. '   ' → logprob: -14.43698501586914
    10. '	' → logprob: -15.06198501586914

Token 1128: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.023305809125304222
    2. ' next' → logprob: -3.773305892944336
    3. 'pos' → logprob: -10.023305892944336
    4. '[next' → logprob: -11.398305892944336
    5. '	next' → logprob: -13.148305892944336
    6. '_next' → logprob: -13.898305892944336
    7. ' pos' → logprob: -14.398305892944336
    8. '```' → logprob: -15.023305892944336
    9. '   ' → logprob: -15.273305892944336
    10. 'Next' → logprob: -15.273305892944336

Token 1129: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.24171723425388336
    2. '[' → logprob: -2.1167173385620117
    3. '_pos' → logprob: -2.6167173385620117
    4. '[_' → logprob: -5.116717338562012
    5. '```' → logprob: -5.241717338562012
    6. '[i' → logprob: -5.491717338562012
    7. 'pos' → logprob: -6.116717338562012
    8. '\[' → logprob: -7.241717338562012
    9. '[
' → logprob: -7.866717338562012
    10. '
' → logprob: -7.991717338562012

Token 1130: '][' (ID: 2696)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9312396049499512
    2. '][' → logprob: -1.1812396049499512
    3. '[' → logprob: -2.056239604949951
    4. ']' → logprob: -2.306239604949951
    5. '[c' → logprob: -3.306239604949951
    6. '
' → logprob: -4.306239604949951
    7. '[
' → logprob: -4.931239604949951
    8. '`' → logprob: -5.931239604949951
    9. '``' → logprob: -6.181239604949951
    10. ']
' → logprob: -6.556239604949951

Token 1131: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002387018030276522
    2. ' c' → logprob: -8.375238418579102
    3. '   ' → logprob: -12.375238418579102
    4. '```' → logprob: -13.250238418579102
    5. '	c' → logprob: -14.375238418579102
    6. '
' → logprob: -14.625238418579102
    7. '`' → logprob: -15.125238418579102
    8. ' ' → logprob: -15.750238418579102
    9. ')c' → logprob: -15.750238418579102
    10. '[c' → logprob: -16.3752384185791

Token 1132: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16230900585651398
    2. '[' → logprob: -2.162308931350708
    3. '[
' → logprob: -4.162309169769287
    4. '```' → logprob: -4.412309169769287
    5. '
' → logprob: -6.537309169769287
    6. '+' → logprob: -6.787309169769287
    7. ']+' → logprob: -6.912309169769287
    8. ']
' → logprob: -7.662309169769287
    9. '`]' → logprob: -7.787309169769287
    10. '`' → logprob: -8.162308692932129

Token 1133: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5500163435935974
    2. '```' → logprob: -1.9250164031982422
    3. '`' → logprob: -2.550016403198242
    4. '
' → logprob: -2.925016403198242
    5. '[
' → logprob: -3.175016403198242
    6. '[pos' → logprob: -4.050016403198242
    7. 'if' → logprob: -4.550016403198242
    8. ''' → logprob: -4.550016403198242
    9. '#' → logprob: -4.675016403198242
    10. ']' → logprob: -4.675016403198242

Token 1134: ' If' (ID: 1843)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8394615054130554
    2. '```' → logprob: -1.4644615650177002
    3. ']' → logprob: -2.9644615650177
    4. '[
' → logprob: -3.0894615650177
    5. 'if' → logprob: -3.2144615650177
    6. '`' → logprob: -3.2144615650177
    7. ' if' → logprob: -3.9644615650177
    8. '
' → logprob: -3.9644615650177
    9. '+' → logprob: -3.9644615650177
    10. '=' → logprob: -4.214461326599121

Token 1135: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5829796195030212
    2. ' pos' → logprob: -0.8329796195030212
    3. ' ==' → logprob: -5.582979679107666
    4. '==' → logprob: -6.082979679107666
    5. '(pos' → logprob: -8.332979202270508
    6. '[pos' → logprob: -8.457979202270508
    7. '=' → logprob: -8.957979202270508
    8. '`' → logprob: -9.082979202270508
    9. ' ' → logprob: -9.457979202270508
    10. '```' → logprob: -9.957979202270508

Token 1136: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.025020718574524
    2. ' ==' → logprob: -1.650020718574524
    3. '=' → logprob: -1.900020718574524
    4. '[pos' → logprob: -2.4000205993652344
    5. '+' → logprob: -3.1500205993652344
    6. ' <' → logprob: -3.2750205993652344
    7. '<' → logprob: -3.7750205993652344
    8. '[' → logprob: -3.7750205993652344
    9. '<len' → logprob: -3.9000205993652344
    10. '```' → logprob: -4.150020599365234

Token 1137: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1620449423789978
    2. 'A' → logprob: -1.9120450019836426
    3. 'len' → logprob: -6.537045001983643
    4. '-A' → logprob: -8.412044525146484
    5. ' -' → logprob: -9.787044525146484
    6. 'None' → logprob: -10.162044525146484
    7. '```' → logprob: -11.037044525146484
    8. '`' → logprob: -11.162044525146484
    9. '500' → logprob: -11.537044525146484
    10. ' A' → logprob: -12.912044525146484

Token 1138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019645551219582558
    2. '-' → logprob: -7.501964569091797
    3. '2' → logprob: -8.501964569091797
    4. '`' → logprob: -8.501964569091797
    5. '
' → logprob: -8.751964569091797
    6. ' ' → logprob: -8.751964569091797
    7. '_' → logprob: -8.876964569091797
    8. '```' → logprob: -9.126964569091797
    9. ' ' → logprob: -9.251964569091797
    10. '``' → logprob: -9.626964569091797

Token 1139: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8559383153915405
    2. '[' → logprob: -1.1059383153915405
    3. ' or' → logprob: -2.60593843460083
    4. ':
' → logprob: -2.98093843460083
    5. ',' → logprob: -3.10593843460083
    6. '```' → logprob: -3.60593843460083
    7. '`' → logprob: -4.48093843460083
    8. '[pos' → logprob: -5.10593843460083
    9. '\n' → logprob: -5.60593843460083
    10. '``' → logprob: -5.73093843460083

Token 1140: 'no' (ID: 1750)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1890573501586914
    2. '],' → logprob: -1.3140573501586914
    3. '0' → logprob: -2.5640573501586914
    4. '```' → logprob: -2.5640573501586914
    5. '`' → logprob: -2.6890573501586914
    6. '[' → logprob: -2.9390573501586914
    7. ',' → logprob: -3.1890573501586914
    8. '``' → logprob: -4.189057350158691
    9. ' or' → logprob: -4.314057350158691
    10. ')' → logprob: -4.564057350158691

Token 1141: ' occurrence' (ID: 55807)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2131415605545044
    2. '[' → logprob: -1.5881415605545044
    3. ' more' → logprob: -2.713141441345215
    4. '],' → logprob: -2.963141441345215
    5. '`' → logprob: -3.213141441345215
    6. '
' → logprob: -3.213141441345215
    7. ')' → logprob: -3.213141441345215
    8. '_' → logprob: -3.338141441345215
    9. 'n' → logprob: -3.463141441345215
    10. '```' → logprob: -3.588141441345215

Token 1142: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.786455512046814
    2. '],' → logprob: -1.536455512046814
    3. '```' → logprob: -3.0364556312561035
    4. ' at' → logprob: -3.1614556312561035
    5. ']:' → logprob: -3.4114556312561035
    6. ']:
' → logprob: -3.5364556312561035
    7. '[' → logprob: -3.7864556312561035
    8. ',' → logprob: -3.7864556312561035
    9. ')' → logprob: -3.9114556312561035
    10. '[pos' → logprob: -4.4114556312561035

Token 1143: ' fail' (ID: 7111)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.197835922241211
    2. ',' → logprob: -1.572835922241211
    3. ' continue' → logprob: -2.072835922241211
    4. ' return' → logprob: -2.197835922241211
    5. ' then' → logprob: -2.197835922241211
    6. ' the' → logprob: -3.447835922241211
    7. 'continue' → logprob: -3.947835922241211
    8. ':' → logprob: -4.197835922241211
    9. ':
' → logprob: -4.197835922241211
    10. ' ' → logprob: -5.072835922241211

Token 1144: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.102761149406433
    2. '```' → logprob: -1.977761149406433
    3. '[' → logprob: -2.3527612686157227
    4. ' =' → logprob: -2.7277612686157227
    5. '
' → logprob: -3.1027612686157227
    6. '][' → logprob: -3.2277612686157227
    7. '[
' → logprob: -3.2277612686157227
    8. '=' → logprob: -3.6027612686157227
    9. '\' → logprob: -3.8527612686157227
    10. '`' → logprob: -3.8527612686157227

Token 1145: '#' (ID: 2)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1843229532241821
    2. '```' → logprob: -2.0593228340148926
    3. ' =' → logprob: -2.6843228340148926
    4. '\n' → logprob: -3.0593228340148926
    5. '][' → logprob: -3.0593228340148926
    6. 'import' → logprob: -3.0593228340148926
    7. '\' → logprob: -3.0593228340148926
    8. '#' → logprob: -3.1843228340148926
    9. '
' → logprob: -3.1843228340148926
    10. '=' → logprob: -3.5593228340148926

Token 1146: ' else' (ID: 1203)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.637524127960205
    2. 'import' → logprob: -1.762524127960205
    3. '\n' → logprob: -2.387524127960205
    4. ']' → logprob: -2.512524127960205
    5. '#' → logprob: -2.637524127960205
    6. 'from' → logprob: -2.762524127960205
    7. '```' → logprob: -2.762524127960205
    8. ',' → logprob: -3.387524127960205
    9. ' next' → logprob: -3.512524127960205
    10. 'n' → logprob: -3.512524127960205

Token 1147: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7264474630355835
    2. ' pos' → logprob: -1.6014474630355835
    3. ' +=' → logprob: -2.226447582244873
    4. '+=' → logprob: -2.351447582244873
    5. '+' → logprob: -2.601447582244873
    6. '++' → logprob: -4.726447582244873
    7. ' =' → logprob: -4.976447582244873
    8. '[pos' → logprob: -5.101447582244873
    9. ' +' → logprob: -5.226447582244873
    10. '(pos' → logprob: -6.476447582244873

Token 1148: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.612658679485321
    2. '+=' → logprob: -1.1126587390899658
    3. ' +=' → logprob: -2.487658739089966
    4. '=' → logprob: -3.737658739089966
    5. ' +' → logprob: -4.112658500671387
    6. ' =' → logprob: -5.112658500671387
    7. '++' → logprob: -9.862658500671387
    8. '```' → logprob: -10.862658500671387
    9. '[' → logprob: -12.237658500671387
    10. ')' → logprob: -12.362658500671387

Token 1149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -17.5000057220459
    4. '```' → logprob: -18.6250057220459
    5. ' +' → logprob: -20.5000057220459
    6. '
' → logprob: -20.5000057220459
    7. ' ' → logprob: -20.6250057220459
    8. '   ' → logprob: -21.0000057220459
    9. '`' → logprob: -21.7500057220459
    10. '１' → logprob: -21.8750057220459

Token 1150: ' to' (ID: 316)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8492869138717651
    2. 'import' → logprob: -2.4742870330810547
    3. 'n' → logprob: -2.5992870330810547
    4. '```' → logprob: -2.7242870330810547
    5. 'next' → logprob: -2.9742870330810547
    6. '
' → logprob: -3.0992870330810547
    7. '\' → logprob: -3.2242870330810547
    8. ',' → logprob: -3.2242870330810547
    9. '#' → logprob: -3.3492870330810547
    10. '_max' → logprob: -3.4742870330810547

Token 1151: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.4627819359302521
    2. 'continue' → logprob: -1.7127819061279297
    3. ' move' → logprob: -1.9627819061279297
    4. 'search' → logprob: -3.9627819061279297
    5. ' continue' → logprob: -4.83778190612793
    6. 'next' → logprob: -5.21278190612793
    7. 'advance' → logprob: -5.46278190612793
    8. 'check' → logprob: -5.46278190612793
    9. 'go' → logprob: -5.71278190612793
    10. '```' → logprob: -6.21278190612793

Token 1152: ' to' (ID: 316)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0933616161346436
    2. ']' → logprob: -1.7183616161346436
    3. '```' → logprob: -1.7183616161346436
    4. '[pos' → logprob: -2.0933616161346436
    5. '[' → logprob: -2.7183616161346436
    6. '`' → logprob: -3.7183616161346436
    7. '``' → logprob: -3.8433616161346436
    8. 'pos' → logprob: -3.8433616161346436
    9. '[next' → logprob: -4.718361854553223
    10. '[]' → logprob: -5.343361854553223

Token 1153: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.034292589873075485
    2. 'the' → logprob: -3.534292697906494
    3. ' next' → logprob: -5.409292697906494
    4. '```' → logprob: -10.534292221069336
    5. ' the' → logprob: -11.284292221069336
    6. 'pos' → logprob: -11.409292221069336
    7. 'search' → logprob: -13.409292221069336
    8. '_next' → logprob: -13.784292221069336
    9. '	next' → logprob: -14.534292221069336
    10. 'start' → logprob: -14.659292221069336

Token 1154: ' position' (ID: 4010)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5885597467422485
    2. '][' → logprob: -2.588559627532959
    3. '```' → logprob: -2.588559627532959
    4. '[
' → logprob: -2.713559627532959
    5. ']
' → logprob: -3.713559627532959
    6. '[' → logprob: -3.838559627532959
    7. ' =' → logprob: -4.088559627532959
    8. '#' → logprob: -4.338559627532959
    9. '[pos' → logprob: -4.338559627532959
    10. '_next' → logprob: -4.463559627532959

Token 1155: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5853183269500732
    2. 'import' → logprob: -2.2103183269500732
    3. 'n' → logprob: -2.3353183269500732
    4. ' =' → logprob: -2.3353183269500732
    5. '```' → logprob: -2.7103183269500732
    6. ',' → logprob: -3.0853183269500732
    7. 'next' → logprob: -3.3353183269500732
    8. '][' → logprob: -3.4603183269500732
    9. '
' → logprob: -3.7103183269500732
    10. '_next' → logprob: -3.7103183269500732

Token 1156: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3278467655181885
    2. ']' → logprob: -1.9528467655181885
    3. '
' → logprob: -2.2028467655181885
    4. '\n' → logprob: -2.8278467655181885
    5. ']
' → logprob: -3.0778467655181885
    6. '```' → logprob: -3.0778467655181885
    7. '][' → logprob: -3.2028467655181885
    8. '\' → logprob: -3.3278467655181885
    9. 'next' → logprob: -3.5778467655181885
    10. 'n' → logprob: -3.7028467655181885

Token 1157: ' If' (ID: 1843)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7192102074623108
    2. '\n' → logprob: -2.219210147857666
    3. 'n' → logprob: -2.469210147857666
    4. 'import' → logprob: -2.844210147857666
    5. 'from' → logprob: -3.344210147857666
    6. 'max' → logprob: -3.469210147857666
    7. ' next' → logprob: -3.969210147857666
    8. ']' → logprob: -3.969210147857666
    9. '#' → logprob: -4.094210147857666
    10. ',' → logprob: -4.094210147857666

Token 1158: ' we' (ID: 581)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.6326984167098999
    2. 'pos' → logprob: -0.7576984167098999
    3. ' ' → logprob: -10.007698059082031
    4. '(pos' → logprob: -10.632698059082031
    5. '	pos' → logprob: -12.257698059082031
    6. '```' → logprob: -12.757698059082031
    7. ' ' → logprob: -13.132698059082031
    8. '`' → logprob: -13.257698059082031
    9. '_pos' → logprob: -13.257698059082031
    10. '[pos' → logprob: -13.257698059082031

Token 1159: ' reach' (ID: 7627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8260664343833923
    2. ' ==' → logprob: -1.451066493988037
    3. '==' → logprob: -3.076066493988037
    4. '_' → logprob: -3.201066493988037
    5. '=' → logprob: -3.701066493988037
    6. ' can' → logprob: -3.826066493988037
    7. ' continue' → logprob: -3.951066493988037
    8. '```' → logprob: -3.951066493988037
    9. '[next' → logprob: -3.951066493988037
    10. ']' → logprob: -4.201066493988037

Token 1160: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.44472432136535645
    2. 'len' → logprob: -1.6947243213653564
    3. '```' → logprob: -2.4447243213653564
    4. '-' → logprob: -3.1947243213653564
    5. ' -' → logprob: -4.444724082946777
    6. ' len' → logprob: -4.694724082946777
    7. ' ' → logprob: -5.444724082946777
    8. ' pos' → logprob: -5.694724082946777
    9. '`' → logprob: -5.819724082946777
    10. '``' → logprob: -6.194724082946777

Token 1161: ' end' (ID: 1268)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5909503102302551
    2. '[' → logprob: -1.5909502506256104
    3. 'n' → logprob: -2.7159502506256104
    4. ' ' → logprob: -3.3409502506256104
    5. '```' → logprob: -3.4659502506256104
    6. '[
' → logprob: -4.0909504890441895
    7. ' next' → logprob: -4.7159504890441895
    8. ' ]' → logprob: -4.8409504890441895
    9. '`' → logprob: -5.0909504890441895
    10. '\n' → logprob: -5.2159504890441895

Token 1162: ' successfully' (ID: 12836)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04081907868385315
    2. '```' → logprob: -4.16581916809082
    3. '[
' → logprob: -4.29081916809082
    4. '[pos' → logprob: -5.91581916809082
    5. ':' → logprob: -6.54081916809082
    6. ']' → logprob: -6.54081916809082
    7. '\[' → logprob: -7.66581916809082
    8. '
' → logprob: -7.66581916809082
    9. '`' → logprob: -7.79081916809082
    10. ''' → logprob: -7.91581916809082

Token 1163: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.053202543407678604
    2. '[
' → logprob: -3.5532026290893555
    3. '```' → logprob: -4.4282026290893555
    4. ''' → logprob: -5.8032026290893555
    5. ':' → logprob: -6.1782026290893555
    6. '[i' → logprob: -7.1782026290893555
    7. '[pos' → logprob: -7.4282026290893555
    8. ']' → logprob: -7.5532026290893555
    9. '`' → logprob: -7.6782026290893555
    10. '=' → logprob: -7.6782026290893555

Token 1164: ' substring' (ID: 89494)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8501686453819275
    2. ' continue' → logprob: -1.7251687049865723
    3. ' True' → logprob: -1.9751687049865723
    4. '#' → logprob: -2.2251687049865723
    5. ' we' → logprob: -2.9751687049865723
    6. 'True' → logprob: -4.100168704986572
    7. ',' → logprob: -4.100168704986572
    8. 'continue' → logprob: -4.225168704986572
    9. ' then' → logprob: -4.475168704986572
    10. ' the' → logprob: -5.225168704986572

Token 1165: ' s' (ID: 265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3530444800853729
    2. 's' → logprob: -2.3530445098876953
    3. ')' → logprob: -2.8530445098876953
    4. '[' → logprob: -3.1030445098876953
    5. ' is' → logprob: -3.4780445098876953
    6. '```' → logprob: -3.7280445098876953
    7. '_is' → logprob: -4.978044509887695
    8. ']' → logprob: -5.228044509887695
    9. ''' → logprob: -5.478044509887695
    10. '"' → logprob: -5.728044509887695

Token 1166: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19365577399730682
    2. '_' → logprob: -2.4436557292938232
    3. '```' → logprob: -3.0686557292938232
    4. '[
' → logprob: -4.193655967712402
    5. ''' → logprob: -4.943655967712402
    6. ')' → logprob: -5.568655967712402
    7. 's' → logprob: -5.943655967712402
    8. '.' → logprob: -6.568655967712402
    9. '"' → logprob: -6.693655967712402
    10. '`' → logprob: -6.693655967712402

Token 1167: ' subse' (ID: 19874)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7854894399642944
    2. ' subse' → logprob: -0.9104894399642944
    3. 'a' → logprob: -2.535489559173584
    4. 'sub' → logprob: -2.785489559173584
    5. ' valid' → logprob: -8.660489082336426
    6. 'valid' → logprob: -8.660489082336426
    7. 'found' → logprob: -9.285489082336426
    8. '```' → logprob: -9.660489082336426
    9. ' matched' → logprob: -9.910489082336426
    10. 'matched' → logprob: -10.160489082336426

Token 1168: 'quence' (ID: 6975)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3513450026512146
    2. 'quence' → logprob: -1.2263450622558594
    3. 'quences' → logprob: -6.601345062255859
    4. '#' → logprob: -7.726345062255859
    5. 'qu' → logprob: -8.22634506225586
    6. '[
' → logprob: -8.72634506225586
    7. '[' → logprob: -9.10134506225586
    8. 'c' → logprob: -9.10134506225586
    9. 'quent' → logprob: -9.97634506225586
    10. 'sequence' → logprob: -10.10134506225586

Token 1169: '.

' (ID: 364)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9543247222900391
    2. '[' → logprob: -1.579324722290039
    3. '```' → logprob: -2.329324722290039
    4. '[
' → logprob: -2.704324722290039
    5. ',' → logprob: -3.204324722290039
    6. '][' → logprob: -3.329324722290039
    7. '\' → logprob: -3.454324722290039
    8. ':' → logprob: -4.079324722290039
    9. '[next' → logprob: -4.079324722290039
    10. '`' → logprob: -4.329324722290039

Token 1170: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1461269855499268
    2. 'import' → logprob: -1.6461269855499268
    3. 'next' → logprob: -1.7711269855499268
    4. 'n' → logprob: -2.2711269855499268
    5. 'from' → logprob: -2.2711269855499268
    6. 'MAX' → logprob: -3.2711269855499268
    7. '
' → logprob: -4.271126747131348
    8. '#' → logprob: -4.271126747131348
    9. '\n' → logprob: -4.396126747131348
    10. 'size' → logprob: -4.771126747131348

Token 1171: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.588878870010376
    2. 'import' → logprob: -2.338878870010376
    3. '\n' → logprob: -2.713878870010376
    4. 'max' → logprob: -2.838878870010376
    5. 'from' → logprob: -3.088878870010376
    6. '```' → logprob: -3.213878870010376
    7. 'n' → logprob: -3.338878870010376
    8. ']' → logprob: -4.213878631591797
    9. '
' → logprob: -4.463878631591797
    10. '#' → logprob: -4.963878631591797

Token 1172: ' arrays' (ID: 38774)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055621810257434845
    2. ' =' → logprob: -2.930621862411499
    3. '=[' → logprob: -7.43062162399292
    4. '=[[' → logprob: -10.180622100830078
    5. '```' → logprob: -10.555622100830078
    6. 's' → logprob: -11.055622100830078
    7. 'size' → logprob: -11.930622100830078
    8. '=[]' → logprob: -12.055622100830078
    9. '=
' → logprob: -12.055622100830078
    10. '_size' → logprob: -12.305622100830078

Token 1173: ' build' (ID: 3024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03435168042778969
    2. ' =' → logprob: -3.4093515872955322
    3. '=[' → logprob: -7.534351825714111
    4. ',' → logprob: -10.034351348876953
    5. '=[]' → logprob: -10.659351348876953
    6. '=[[' → logprob: -10.909351348876953
    7. '```' → logprob: -11.034351348876953
    8. '={}' → logprob: -11.034351348876953
    9. '=
' → logprob: -11.409351348876953
    10. '[' → logprob: -11.909351348876953

Token 1174: ':

' (ID: 1402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.296257346868515
    2. 'from' → logprob: -2.296257257461548
    3. '=' → logprob: -2.796257257461548
    4. 'import' → logprob: -3.171257257461548
    5. 'max' → logprob: -4.421257495880127
    6. '```' → logprob: -4.921257495880127
    7. ',' → logprob: -5.296257495880127
    8. 'n' → logprob: -5.671257495880127
    9. 'MAX' → logprob: -5.796257495880127
    10. '
' → logprob: -5.921257495880127

Token 1175: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14501996338367462
    2. 'max' → logprob: -2.645020008087158
    3. 'import' → logprob: -2.895020008087158
    4. 'MAX' → logprob: -6.020020008087158
    5. 'n' → logprob: -6.395020008087158
    6. '#' → logprob: -6.520020008087158
    7. '```' → logprob: -6.895020008087158
    8. '
' → logprob: -7.395020008087158
    9. 'size' → logprob: -8.14501953125
    10. 'card' → logprob: -8.77001953125

Token 1176: ' next' (ID: 2613)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14307372272014618
    2. 'from' → logprob: -2.268073797225952
    3. 'MAX' → logprob: -3.893073797225952
    4. 'import' → logprob: -5.393073558807373
    5. 'next' → logprob: -6.018073558807373
    6. '#' → logprob: -6.768073558807373
    7. 'n' → logprob: -7.268073558807373
    8. 'N' → logprob: -8.018074035644531
    9. 'card' → logprob: -10.018074035644531
    10. 'mx' → logprob: -10.143074035644531

Token 1177: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012785682454705238
    2. ' =' → logprob: -4.512785911560059
    3. '=[' → logprob: -6.512785911560059
    4. '=[[' → logprob: -8.762785911560059
    5. '=[]' → logprob: -10.637785911560059
    6. '```' → logprob: -11.387785911560059
    7. 'A' → logprob: -11.887785911560059
    8. '=max' → logprob: -12.012785911560059
    9. '[' → logprob: -12.262785911560059
    10. '=[]
' → logprob: -12.387785911560059

Token 1178: '][' (ID: 2696)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0734772682189941
    2. '=' → logprob: -1.1984772682189941
    3. ']' → logprob: -1.1984772682189941
    4. '=[' → logprob: -4.323477268218994
    5. ']=' → logprob: -4.698477268218994
    6. '][' → logprob: -5.073477268218994
    7. '[' → logprob: -5.073477268218994
    8. 's' → logprob: -5.698477268218994
    9. '[i' → logprob: -5.698477268218994
    10. '```' → logprob: -5.823477268218994

Token 1179: 'v' (ID: 85)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9377564191818237
    2. '=' → logprob: -1.4377564191818237
    3. ']' → logprob: -2.0627565383911133
    4. ' =' → logprob: -2.0627565383911133
    5. '500' → logprob: -4.062756538391113
    6. 'br' → logprob: -4.187756538391113
    7. 'A' → logprob: -4.187756538391113
    8. '100' → logprob: -4.562756538391113
    9. '0' → logprob: -5.062756538391113
    10. '256' → logprob: -5.062756538391113

Token 1180: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.030373215675354
    2. ']' → logprob: -1.405373215675354
    3. '[' → logprob: -1.780373215675354
    4. '=' → logprob: -1.905373215675354
    5. '[
' → logprob: -4.5303730964660645
    6. '][' → logprob: -4.6553730964660645
    7. '=[' → logprob: -4.7803730964660645
    8. '```' → logprob: -4.7803730964660645
    9. '[i' → logprob: -5.2803730964660645
    10. '.' → logprob: -5.2803730964660645

Token 1181: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021597091108560562
    2. ' =' → logprob: -3.896597146987915
    3. '=[' → logprob: -7.021596908569336
    4. '=[]' → logprob: -10.396596908569336
    5. '=[[' → logprob: -10.396596908569336
    6. '[' → logprob: -10.771596908569336
    7. '=
' → logprob: -11.146596908569336
    8. '```' → logprob: -11.271596908569336
    9. '={}' → logprob: -11.271596908569336
    10. ',' → logprob: -11.521596908569336

Token 1182: 'i' (ID: 72)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.968450665473938
    2. '=' → logprob: -1.093450665473938
    3. ' =' → logprob: -1.843450665473938
    4. '[' → logprob: -2.9684505462646484
    5. '[
' → logprob: -4.093450546264648
    6. '```' → logprob: -4.468450546264648
    7. '][' → logprob: -5.093450546264648
    8. ']=' → logprob: -5.343450546264648
    9. '=
' → logprob: -5.718450546264648
    10. '=[' → logprob: -5.718450546264648

Token 1183: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9727402329444885
    2. ']' → logprob: -1.0977401733398438
    3. '```' → logprob: -2.7227401733398438
    4. '[
' → logprob: -2.8477401733398438
    5. '=' → logprob: -2.9727401733398438
    6. ' =' → logprob: -3.8477401733398438
    7. '
' → logprob: -3.9727401733398438
    8. '][' → logprob: -4.722740173339844
    9. '0' → logprob: -4.722740173339844
    10. ',' → logprob: -5.347740173339844

Token 1184: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2804993987083435
    2. ' range' → logprob: -1.6554994583129883
    3. 'A' → logprob: -3.4054994583129883
    4. '0' → logprob: -4.905499458312988
    5. ' A' → logprob: -5.280499458312988
    6. 'Anna' → logprob: -6.280499458312988
    7. '500' → logprob: -6.780499458312988
    8. ' Anna' → logprob: -7.030499458312988
    9. ' ' → logprob: -7.280499458312988
    10. '[' → logprob: -7.780499458312988

Token 1185: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1300760507583618
    2. 'range' → logprob: -1.2550760507583618
    3. ']' → logprob: -2.0050759315490723
    4. '500' → logprob: -2.6300759315490723
    5. '0' → logprob: -2.7550759315490723
    6. '][' → logprob: -4.130075931549072
    7. 'B' → logprob: -4.630075931549072
    8. 'len' → logprob: -4.630075931549072
    9. '501' → logprob: -4.880075931549072
    10. 'Anna' → logprob: -5.255075931549072

Token 1186: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8307765126228333
    2. '][' → logprob: -1.0807764530181885
    3. '[' → logprob: -2.7057764530181885
    4. '+' → logprob: -3.0807764530181885
    5. '0' → logprob: -3.9557764530181885
    6. '
' → logprob: -4.455776691436768
    7. '```' → logprob: -4.580776691436768
    8. ']=' → logprob: -5.080776691436768
    9. '=' → logprob: -5.330776691436768
    10. 'x' → logprob: -5.330776691436768

Token 1187: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18650086224079132
    2. '500' → logprob: -2.5615007877349854
    3. '499' → logprob: -2.8115007877349854
    4. ']' → logprob: -4.4365010261535645
    5. 'B' → logprob: -5.4365010261535645
    6. 'len' → logprob: -5.5615010261535645
    7. '][' → logprob: -5.9365010261535645
    8. ',' → logprob: -6.5615010261535645
    9. '0' → logprob: -6.8115010261535645
    10. '501' → logprob: -6.9365010261535645

Token 1188: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15564100444316864
    2. '][' → logprob: -2.6556410789489746
    3. ']' → logprob: -2.9056410789489746
    4. '0' → logprob: -4.530641078948975
    5. '1' → logprob: -5.905641078948975
    6. '-' → logprob: -6.280641078948975
    7. ' +' → logprob: -7.780641078948975
    8. '```' → logprob: -7.905641078948975
    9. '
' → logprob: -8.030640602111816
    10. 'A' → logprob: -8.030640602111816

Token 1189: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.405411720275879
    2. '```' → logprob: -1.780411720275879
    3. '=' → logprob: -1.905411720275879
    4. ' =' → logprob: -2.030411720275879
    5. ']' → logprob: -2.155411720275879
    6. '[next' → logprob: -3.530411720275879
    7. '[i' → logprob: -3.780411720275879
    8. '[
' → logprob: -4.030411720275879
    9. '][' → logprob: -4.155411720275879
    10. ',' → logprob: -4.155411720275879

Token 1190: 'A' (ID: 32)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46262237429618835
    2. ']' → logprob: -1.5876224040985107
    3. '[
' → logprob: -2.4626224040985107
    4. '```' → logprob: -3.4626224040985107
    5. '][' → logprob: -4.462622165679932
    6. '[]' → logprob: -5.212622165679932
    7. '
' → logprob: -5.712622165679932
    8. '=' → logprob: -5.837622165679932
    9. ',' → logprob: -5.962622165679932
    10. '.' → logprob: -6.087622165679932

Token 1191: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3818516433238983
    2. '[
' → logprob: -2.1318516731262207
    3. '```' → logprob: -2.5068516731262207
    4. ']' → logprob: -3.1318516731262207
    5. '[v' → logprob: -4.506851673126221
    6. '[i' → logprob: -4.756851673126221
    7. '][' → logprob: -4.881851673126221
    8. '[]' → logprob: -5.256851673126221
    9. '[A' → logprob: -5.381851673126221
    10. '``' → logprob: -5.631851673126221

Token 1192: '1' (ID: 16)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6085100769996643
    2. '][' → logprob: -1.4835100173950195
    3. '``' → logprob: -3.1085100173950195
    4. '0' → logprob: -3.1085100173950195
    5. ']' → logprob: -3.3585100173950195
    6. '
' → logprob: -4.3585100173950195
    7. '   ' → logprob: -4.4835100173950195
    8. '[' → logprob: -4.4835100173950195
    9. '000' → logprob: -4.8585100173950195
    10. '+' → logprob: -5.1085100173950195

Token 1193: ' size' (ID: 2349)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6850321888923645
    2. '```' → logprob: -1.3100321292877197
    3. '][' → logprob: -2.8100321292877197
    4. '[
' → logprob: -3.5600321292877197
    5. '[' → logprob: -3.5600321292877197
    6. '``' → logprob: -3.8100321292877197
    7. '[next' → logprob: -4.310032367706299
    8. '+' → logprob: -4.435032367706299
    9. '=' → logprob: -4.685032367706299
    10. 'import' → logprob: -4.935032367706299

Token 1194: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6595391035079956
    2. ']' → logprob: -1.6595391035079956
    3. ' =' → logprob: -1.7845391035079956
    4. '```' → logprob: -1.9095391035079956
    5. '[
' → logprob: -2.159539222717285
    6. '][' → logprob: -3.534539222717285
    7. '[i' → logprob: -3.534539222717285
    8. '=' → logprob: -3.659539222717285
    9. '[v' → logprob: -3.909539222717285
    10. '\n' → logprob: -3.909539222717285

Token 1195: ' handle' (ID: 5318)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.657993733882904
    2. '][' → logprob: -1.2829937934875488
    3. ' =' → logprob: -2.657993793487549
    4. '=' → logprob: -3.032993793487549
    5. '+' → logprob: -3.532993793487549
    6. '```' → logprob: -3.782993793487549
    7. '``' → logprob: -5.032993793487549
    8. '[' → logprob: -6.032993793487549
    9. ']
' → logprob: -6.157993793487549
    10. ']=' → logprob: -6.157993793487549

Token 1196: ' end' (ID: 1268)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9499131441116333
    2. ']' → logprob: -1.5749131441116333
    3. '```' → logprob: -2.1999130249023438
    4. '][' → logprob: -2.6999130249023438
    5. '[' → logprob: -3.9499130249023438
    6. '
' → logprob: -4.074913024902344
    7. ' =' → logprob: -4.074913024902344
    8. '0' → logprob: -4.074913024902344
    9. '``' → logprob: -4.074913024902344
    10. '   ' → logprob: -4.199913024902344

Token 1197: ')

' (ID: 1029)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2644765079021454
    2. '[
' → logprob: -1.6394765377044678
    3. '```' → logprob: -3.7644765377044678
    4. '``' → logprob: -6.014476299285889
    5. '[i' → logprob: -6.264476299285889
    6. ']' → logprob: -6.264476299285889
    7. '`' → logprob: -6.514476299285889
    8. '[v' → logprob: -6.889476299285889
    9. '][' → logprob: -7.014476299285889
    10. '
' → logprob: -7.139476299285889

Token 1198: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7246989607810974
    2. 'import' → logprob: -1.8496990203857422
    3. 'from' → logprob: -2.349699020385742
    4. '\n' → logprob: -3.099699020385742
    5. '```' → logprob: -3.474699020385742
    6. '#' → logprob: -3.849699020385742
    7. 'n' → logprob: -3.849699020385742
    8. ']' → logprob: -4.224699020385742
    9. ' next' → logprob: -4.474699020385742
    10. ',' → logprob: -4.599699020385742

Token 1199: ' For' (ID: 2214)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6789888143539429
    2. 'next' → logprob: -2.1789889335632324
    3. ']' → logprob: -2.4289889335632324
    4. '\n' → logprob: -2.5539889335632324
    5. '```' → logprob: -2.5539889335632324
    6. ',' → logprob: -2.6789889335632324
    7. '[
' → logprob: -3.3039889335632324
    8. '`' → logprob: -3.4289889335632324
    9. 'a' → logprob: -3.6789889335632324
    10. '[' → logprob: -3.6789889335632324

Token 1200: ' positions' (ID: 15897)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2691335678100586
    2. 'v' → logprob: -2.8941335678100586
    3. '0' → logprob: -3.3941335678100586
    4. 'i' → logprob: -3.5191335678100586
    5. 'range' → logprob: -4.144133567810059
    6. ']' → logprob: -4.394133567810059
    7. 'max' → logprob: -4.644133567810059
    8. 'a' → logprob: -4.769133567810059
    9. '][' → logprob: -4.769133567810059
    10. ' A' → logprob: -5.144133567810059

Token 1201: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4378798007965088
    2. ' =' → logprob: -1.8128798007965088
    3. 'A' → logprob: -1.9378798007965088
    4. '```' → logprob: -1.9378798007965088
    5. ']' → logprob: -2.812879800796509
    6. '][' → logprob: -3.312879800796509
    7. '0' → logprob: -3.562879800796509
    8. '[
' → logprob: -3.562879800796509
    9. '[A' → logprob: -3.562879800796509
    10. '[' → logprob: -3.937879800796509

Token 1202: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002338144404347986
    2. 'Anna' → logprob: -9.50023365020752
    3. ' A' → logprob: -10.00023365020752
    4. '```' → logprob: -10.25023365020752
    5. '0' → logprob: -10.37523365020752
    6. '
' → logprob: -11.37523365020752
    7. 'a' → logprob: -11.87523365020752
    8. ']' → logprob: -12.50023365020752
    9. 'anna' → logprob: -13.25023365020752
    10. '`' → logprob: -13.25023365020752

Token 1203: '-' (ID: 12)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3839983940124512
    2. ']' → logprob: -1.7589983940124512
    3. '=' → logprob: -2.383998394012451
    4. '[' → logprob: -2.383998394012451
    5. '
' → logprob: -2.383998394012451
    6. '][' → logprob: -2.758998394012451
    7. '+' → logprob: -2.883998394012451
    8. '[
' → logprob: -3.508998394012451
    9. ' =' → logprob: -3.633998394012451
    10. '``' → logprob: -3.758998394012451

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33923929929733276
    2. '-' → logprob: -1.9642393589019775
    3. '+' → logprob: -2.0892393589019775
    4. ' -' → logprob: -5.089239120483398
    5. ' +' → logprob: -5.214239120483398
    6. ']' → logprob: -5.714239120483398
    7. '```' → logprob: -5.964239120483398
    8. '0' → logprob: -6.714239120483398
    9. '][' → logprob: -6.839239120483398
    10. ':' → logprob: -7.214239120483398

Token 1205: ' dow' (ID: 18461)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.160948634147644
    2. '][' → logprob: -1.785948634147644
    3. '+' → logprob: -2.1609487533569336
    4. ':' → logprob: -2.6609487533569336
    5. '```' → logprob: -2.6609487533569336
    6. ']' → logprob: -2.7859487533569336
    7. 'for' → logprob: -3.4109487533569336
    8. '
' → logprob: -3.5359487533569336
    9. 'next' → logprob: -3.5359487533569336
    10. '[i' → logprob: -4.035948753356934

Token 1206: 'nt' (ID: 578)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3266589641571045
    2. 'n' → logprob: -1.4516589641571045
    3. '``' → logprob: -1.5766589641571045
    4. '```' → logprob: -2.3266589641571045
    5. 'wn' → logprob: -2.8266589641571045
    6. '0' → logprob: -3.2016589641571045
    7. '1' → logprob: -3.2016589641571045
    8. 'own' → logprob: -4.201659202575684
    9. '#' → logprob: -4.576659202575684
    10. 'w' → logprob: -4.576659202575684

Token 1207: 'o' (ID: 78)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5283325910568237
    2. 'wn' → logprob: -1.5283325910568237
    3. 'n' → logprob: -1.9033325910568237
    4. '```' → logprob: -3.4033327102661133
    5. '0' → logprob: -5.653332710266113
    6. '``' → logprob: -6.028332710266113
    7. '1' → logprob: -6.153332710266113
    8. 'own' → logprob: -6.903332710266113
    9. '-' → logprob: -7.028332710266113
    10. 'e' → logprob: -7.528332710266113

Token 1208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01651838608086109
    2. 'A' → logprob: -4.266518592834473
    3. '-' → logprob: -7.516518592834473
    4. '```' → logprob: -7.641518592834473
    5. '
' → logprob: -7.891518592834473
    6. 'i' → logprob: -8.641518592834473
    7. 'Anna' → logprob: -8.641518592834473
    8. '1' → logprob: -9.266518592834473
    9. ' ' → logprob: -9.516518592834473
    10. '-A' → logprob: -9.766518592834473

Token 1209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07383781671524048
    2. 'A' → logprob: -3.1988377571105957
    3. '-' → logprob: -3.8238377571105957
    4. '-A' → logprob: -5.698837757110596
    5. 'range' → logprob: -7.073837757110596
    6. 'Anna' → logprob: -7.323837757110596
    7. '1' → logprob: -7.448837757110596
    8. ']' → logprob: -7.448837757110596
    9. '```' → logprob: -7.948837757110596
    10. 'i' → logprob: -8.198838233947754

Token 1210: ':

' (ID: 1402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.8559114933013916
    2. ']' → logprob: -1.9809114933013916
    3. '```' → logprob: -1.9809114933013916
    4. '][' → logprob: -2.4809114933013916
    5. '=' → logprob: -2.6059114933013916
    6. '[' → logprob: -3.1059114933013916
    7. '[
' → logprob: -3.1059114933013916
    8. 'for' → logprob: -3.2309114933013916
    9. '#' → logprob: -3.2309114933013916
    10. '[next' → logprob: -3.4809114933013916

Token 1211: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4118567109107971
    2. '``' → logprob: -2.7868566513061523
    3. 'next' → logprob: -3.2868566513061523
    4. 'v' → logprob: -3.4118566513061523
    5. '`' → logprob: -3.9118566513061523
    6. ']' → logprob: -4.036856651306152
    7. '   ' → logprob: -4.161856651306152
    8. ' for' → logprob: -4.286856651306152
    9. ' =' → logprob: -4.411856651306152
    10. '][' → logprob: -4.411856651306152

Token 1212: ' For' (ID: 2214)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.8325860500335693
    2. 'v' → logprob: -2.2075860500335693
    3. '```' → logprob: -2.2075860500335693
    4. ']' → logprob: -2.5825860500335693
    5. 'for' → logprob: -2.7075860500335693
    6. 'next' → logprob: -2.8325860500335693
    7. '][' → logprob: -3.2075860500335693
    8. '0' → logprob: -3.3325860500335693
    9. ' for' → logprob: -3.4575860500335693
    10. '   ' → logprob: -3.4575860500335693

Token 1213: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5963118672370911
    2. 'A' → logprob: -1.5963118076324463
    3. 'v' → logprob: -2.5963118076324463
    4. 'range' → logprob: -2.9713118076324463
    5. '   ' → logprob: -3.7213118076324463
    6. 'anna' → logprob: -4.096312046051025
    7. ']' → logprob: -4.471312046051025
    8. '0' → logprob: -4.471312046051025
    9. 'pos' → logprob: -4.846312046051025
    10. ')' → logprob: -5.346312046051025

Token 1214: ' card' (ID: 4766)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -1.180024266242981
    2. 'A' → logprob: -2.0550241470336914
    3. '0' → logprob: -2.1800241470336914
    4. 'v' → logprob: -2.4300241470336914
    5. 'next' → logprob: -2.5550241470336914
    6. 'i' → logprob: -3.0550241470336914
    7. '```' → logprob: -3.4300241470336914
    8. 'len' → logprob: -3.4300241470336914
    9. 'max' → logprob: -3.9300241470336914
    10. 'c' → logprob: -4.180024147033691

Token 1215: ' value' (ID: 1432)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3130033016204834
    2. '[' → logprob: -1.8130033016204834
    3. '
' → logprob: -2.8130033016204834
    4. 'next' → logprob: -2.9380033016204834
    5. '```' → logprob: -2.9380033016204834
    6. '][' → logprob: -3.0630033016204834
    7. '[next' → logprob: -3.0630033016204834
    8. '[
' → logprob: -3.1880033016204834
    9. ']' → logprob: -3.3130033016204834
    10. 'v' → logprob: -3.5630033016204834

Token 1216: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6434916853904724
    2. ' =' → logprob: -2.018491744995117
    3. '[
' → logprob: -2.643491744995117
    4. '`' → logprob: -3.268491744995117
    5. '[' → logprob: -3.518491744995117
    6. '=' → logprob: -3.643491744995117
    7. '[v' → logprob: -3.893491744995117
    8. '``' → logprob: -3.893491744995117
    9. '[next' → logprob: -3.893491744995117
    10. '[]' → logprob: -4.143491744995117

Token 1217: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0941517353057861
    2. '```' → logprob: -1.8441517353057861
    3. '=' → logprob: -2.094151735305786
    4. ' =' → logprob: -2.469151735305786
    5. '[
' → logprob: -2.469151735305786
    6. '[next' → logprob: -3.469151735305786
    7. '.' → logprob: -3.844151735305786
    8. '`' → logprob: -3.844151735305786
    9. ',' → logprob: -4.219151496887207
    10. ':' → logprob: -4.594151496887207

Token 1218: '..' (ID: 485)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7314988374710083
    2. '000' → logprob: -1.8564988374710083
    3. '<<' → logprob: -1.8564988374710083
    4. '
' → logprob: -2.3564987182617188
    5. ']' → logprob: -2.6064987182617188
    6. ':' → logprob: -2.8564987182617188
    7. '.' → logprob: -2.9814987182617188
    8. '```' → logprob: -3.3564987182617188
    9. '6' → logprob: -3.4814987182617188
    10. '][' → logprob: -3.9814987182617188

Token 1219: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.035631366074085236
    2. '100' → logprob: -3.4106314182281494
    3. 'max' → logprob: -7.16063117980957
    4. 'A' → logprob: -7.66063117980957
    5. '10' → logprob: -7.66063117980957
    6. 'B' → logprob: -9.53563117980957
    7. '5' → logprob: -10.53563117980957
    8. '200' → logprob: -11.03563117980957
    9. 'br' → logprob: -11.16063117980957
    10. ' ' → logprob: -11.16063117980957

Token 1220: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8195157647132874
    2. '][' → logprob: -1.6945157051086426
    3. '```' → logprob: -2.1945157051086426
    4. '[' → logprob: -2.6945157051086426
    5. '[next' → logprob: -3.8195157051086426
    6. '[v' → logprob: -4.069515705108643
    7. '
' → logprob: -4.069515705108643
    8. 'for' → logprob: -4.319515705108643
    9. '0' → logprob: -4.319515705108643
    10. '``' → logprob: -4.569515705108643

Token 1221: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4595452845096588
    2. '[' → logprob: -2.334545373916626
    3. '``' → logprob: -3.084545373916626
    4. '[
' → logprob: -3.459545373916626
    5. ' =' → logprob: -3.584545373916626
    6. ',' → logprob: -3.959545373916626
    7. '`' → logprob: -4.084545135498047
    8. ' ' → logprob: -4.084545135498047
    9. ']' → logprob: -4.709545135498047
    10. ' 
' → logprob: -4.709545135498047

Token 1222: ' set' (ID: 920)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7672678232192993
    2. ' next' → logprob: -2.3922677040100098
    3. 'next' → logprob: -2.8922677040100098
    4. ' =' → logprob: -2.8922677040100098
    5. '#' → logprob: -3.5172677040100098
    6. '
' → logprob: -3.6422677040100098
    7. '   ' → logprob: -3.6422677040100098
    8. ' 
' → logprob: -3.7672677040100098
    9. ' for' → logprob: -3.7672677040100098
    10. ':' → logprob: -3.7672677040100098

Token 1223: ' next' (ID: 2613)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9300096035003662
    2. 'next' → logprob: -1.4300096035003662
    3. '`' → logprob: -2.555009603500366
    4. '``' → logprob: -3.055009603500366
    5. '   ' → logprob: -3.180009603500366
    6. '[' → logprob: -3.305009603500366
    7. 'prev' → logprob: -3.930009603500366
    8. ' next' → logprob: -3.930009603500366
    9. '[
' → logprob: -4.305009841918945
    10. '[next' → logprob: -4.430009841918945

Token 1224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5149586796760559
    2. '[' → logprob: -1.1399586200714111
    3. '[
' → logprob: -3.389958620071411
    4. '_' → logprob: -4.13995885848999
    5. '```' → logprob: -4.63995885848999
    6. '_pos' → logprob: -5.88995885848999
    7. '[pos' → logprob: -6.01495885848999
    8. '`' → logprob: -6.26495885848999
    9. '[next' → logprob: -6.26495885848999
    10. '=' → logprob: -6.38995885848999

Token 1225: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7455108761787415
    2. '[i' → logprob: -0.8705108761787415
    3. '[' → logprob: -3.6205108165740967
    4. ']' → logprob: -3.7455108165740967
    5. '[next' → logprob: -4.120511054992676
    6. '```' → logprob: -4.120511054992676
    7. '+' → logprob: -5.370511054992676
    8. '
' → logprob: -5.745511054992676
    9. '   ' → logprob: -6.120511054992676
    10. '[
' → logprob: -6.245511054992676

Token 1226: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35348087549209595
    2. 'c' → logprob: -1.3534808158874512
    3. ']' → logprob: -4.728480815887451
    4. ' v' → logprob: -5.228480815887451
    5. ' c' → logprob: -5.353480815887451
    6. '   ' → logprob: -5.978480815887451
    7. 'next' → logprob: -5.978480815887451
    8. 'card' → logprob: -6.103480815887451
    9. ' ]' → logprob: -6.228480815887451
    10. 'anna' → logprob: -6.603480815887451

Token 1227: ']:

' (ID: 147502)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3611808121204376
    2. '```' → logprob: -1.9861807823181152
    3. '][' → logprob: -3.1111807823181152
    4. ']=' → logprob: -3.2361807823181152
    5. '[' → logprob: -3.9861807823181152
    6. '=' → logprob: -4.236180782318115
    7. '[
' → logprob: -4.236180782318115
    8. '[i' → logprob: -4.611180782318115
    9. ' =' → logprob: -4.611180782318115
    10. '``' → logprob: -5.861180782318115

Token 1228: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8637787699699402
    2. ' =' → logprob: -2.113778829574585
    3. '[
' → logprob: -2.863778829574585
    4. 'import' → logprob: -2.863778829574585
    5. '[' → logprob: -3.238778829574585
    6. '`' → logprob: -3.238778829574585
    7. ']' → logprob: -3.363778829574585
    8. ',' → logprob: -3.613778829574585
    9. '][' → logprob: -3.988778829574585
    10. '``' → logprob: -4.113778591156006

Token 1229: ' But' (ID: 3072)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45125487446784973
    2. '100' → logprob: -2.9512548446655273
    3. '```' → logprob: -2.9512548446655273
    4. '][' → logprob: -3.0762548446655273
    5. 'max' → logprob: -3.5762548446655273
    6. '=' → logprob: -3.5762548446655273
    7. ']' → logprob: -3.7012548446655273
    8. 'import' → logprob: -3.9512548446655273
    9. ',' → logprob: -4.326254844665527
    10. 'v' → logprob: -4.451254844665527

Token 1230: ' storing' (ID: 42787)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3317926228046417
    2. '[
' → logprob: -2.8317925930023193
    3. 'import' → logprob: -2.9567925930023193
    4. '```' → logprob: -3.2067925930023193
    5. '`' → logprob: -3.9567925930023193
    6. ' =' → logprob: -4.456792831420898
    7. '[i' → logprob: -4.581792831420898
    8. ',' → logprob: -4.831792831420898
    9. '[v' → logprob: -4.831792831420898
    10. ' ' → logprob: -4.956792831420898

Token 1231: ' next' (ID: 2613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06104389950633049
    2. '[
' → logprob: -3.1860439777374268
    3. '```' → logprob: -6.061043739318848
    4. '.' → logprob: -6.311043739318848
    5. '[next' → logprob: -6.311043739318848
    6. ' [' → logprob: -6.561043739318848
    7. ' ' → logprob: -6.811043739318848
    8. '`' → logprob: -6.936043739318848
    9. '[i' → logprob: -7.061043739318848
    10. 'A' → logprob: -7.061043739318848

Token 1232: ' array' (ID: 2644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4004530906677246
    2. ' =' → logprob: -1.7754530906677246
    3. '_' → logprob: -2.0254530906677246
    4. '=' → logprob: -2.1504530906677246
    5. '```' → logprob: -2.4004530906677246
    6. '_array' → logprob: -2.6504530906677246
    7. '[i' → logprob: -3.0254530906677246
    8. 'array' → logprob: -3.7754530906677246
    9. '`' → logprob: -4.400453090667725
    10. '\' → logprob: -4.400453090667725

Token 1233: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09652049094438553
    2. '[
' → logprob: -3.34652042388916
    3. '=' → logprob: -4.34652042388916
    4. ']' → logprob: -4.59652042388916
    5. ' =' → logprob: -4.84652042388916
    6. '```' → logprob: -5.09652042388916
    7. ',' → logprob: -5.34652042388916
    8. '.' → logprob: -6.22152042388916
    9. '[]' → logprob: -6.59652042388916
    10. '[next' → logprob: -6.72152042388916

Token 1234: ' each' (ID: 2454)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1192137002944946
    2. '[' → logprob: -1.6192137002944946
    3. ']' → logprob: -1.9942137002944946
    4. ' =' → logprob: -2.744213581085205
    5. '100' → logprob: -2.744213581085205
    6. '=' → logprob: -3.619213581085205
    7. '][' → logprob: -3.869213581085205
    8. 'anna' → logprob: -4.119213581085205
    9. 'A' → logprob: -4.244213581085205
    10. ')' → logprob: -4.494213581085205

Token 1235: ' position' (ID: 4010)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10725091397762299
    2. '[
' → logprob: -3.607250928878784
    3. '_' → logprob: -4.357250690460205
    4. '```' → logprob: -4.732250690460205
    5. 'v' → logprob: -4.982250690460205
    6. ' [' → logprob: -4.982250690460205
    7. ' ' → logprob: -5.232250690460205
    8. '
' → logprob: -5.607250690460205
    9. ',' → logprob: -5.732250690460205
    10. ']' → logprob: -5.732250690460205

Token 1236: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05837969481945038
    2. '[
' → logprob: -3.183379650115967
    3. '```' → logprob: -5.308379650115967
    4. ',' → logprob: -6.433379650115967
    5. ']' → logprob: -6.683379650115967
    6. '.' → logprob: -7.058379650115967
    7. '=' → logprob: -7.058379650115967
    8. ' [' → logprob: -7.183379650115967
    9. '[]' → logprob: -7.308379650115967
    10. '`' → logprob: -7.433379650115967

Token 1237: ' each' (ID: 2454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8469415903091431
    2. '```' → logprob: -1.471941590309143
    3. '100' → logprob: -1.846941590309143
    4. 'card' → logprob: -3.0969414710998535
    5. 'br' → logprob: -3.4719414710998535
    6. '[
' → logprob: -4.2219414710998535
    7. 'v' → logprob: -4.4719414710998535
    8. '`' → logprob: -4.7219414710998535
    9. '[v' → logprob: -4.7219414710998535
    10. '``' → logprob: -4.8469414710998535

Token 1238: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23891682922840118
    2. '[
' → logprob: -3.2389168739318848
    3. 'card' → logprob: -3.4889168739318848
    4. '```' → logprob: -3.4889168739318848
    5. ' ' → logprob: -3.7389168739318848
    6. ' [' → logprob: -3.7389168739318848
    7. 'v' → logprob: -4.488916873931885
    8. ' card' → logprob: -4.488916873931885
    9. 'value' → logprob: -4.988916873931885
    10. '``' → logprob: -4.988916873931885

Token 1239: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.38539740443229675
    2. '[' → logprob: -3.010397434234619
    3. 'v' → logprob: -3.260397434234619
    4. '1' → logprob: -3.385397434234619
    5. '```' → logprob: -3.385397434234619
    6. ' ' → logprob: -3.510397434234619
    7. '[v' → logprob: -3.635397434234619
    8. '   ' → logprob: -3.885397434234619
    9. 'the' → logprob: -4.010397434234619
    10. ']' → logprob: -4.510397434234619

Token 1240: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0974217653274536
    2. '```' → logprob: -1.4724217653274536
    3. '[' → logprob: -1.9724217653274536
    4. ''' → logprob: -2.972421646118164
    5. '`' → logprob: -3.097421646118164
    6. ',' → logprob: -3.597421646118164
    7. '1' → logprob: -3.597421646118164
    8. ']' → logprob: -3.597421646118164
    9. ' ' → logprob: -3.722421646118164
    10. '_' → logprob: -4.472421646118164

Token 1241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017887691035866737
    2. '00' → logprob: -4.642887592315674
    3. '[' → logprob: -5.517887592315674
    4. '[
' → logprob: -6.767887592315674
    5. '000' → logprob: -7.142887592315674
    6. '```' → logprob: -8.017888069152832
    7. ',' → logprob: -8.392888069152832
    8. '][' → logprob: -8.392888069152832
    9. '   ' → logprob: -8.392888069152832
    10. ']' → logprob: -8.892888069152832

Token 1242: ' cards' (ID: 10541)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14500439167022705
    2. '[
' → logprob: -2.2700042724609375
    3. '```' → logprob: -4.0200042724609375
    4. ']' → logprob: -5.5200042724609375
    5. ',' → logprob: -7.1450042724609375
    6. ' [' → logprob: -7.1450042724609375
    7. '`' → logprob: -7.2700042724609375
    8. '[]' → logprob: -7.3950042724609375
    9. '.' → logprob: -7.5200042724609375
    10. '[i' → logprob: -7.5200042724609375

Token 1243: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07910260558128357
    2. '[
' → logprob: -2.8291025161743164
    3. '```' → logprob: -5.329102516174316
    4. ''' → logprob: -5.829102516174316
    5. ']' → logprob: -5.954102516174316
    6. '`' → logprob: -6.454102516174316
    7. ',' → logprob: -7.204102516174316
    8. ' [' → logprob: -7.579102516174316
    9. '.' → logprob: -7.829102516174316
    10. '[i' → logprob: -8.204102516174316

Token 1244: ' big' (ID: 3464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022100254893302917
    2. '[
' → logprob: -4.022100448608398
    3. ' [' → logprob: -6.272100448608398
    4. '```' → logprob: -7.772100448608398
    5. ''' → logprob: -8.022100448608398
    6. '[]' → logprob: -8.272100448608398
    7. ' ' → logprob: -8.272100448608398
    8. ' [
' → logprob: -9.147100448608398
    9. '.' → logprob: -9.772100448608398
    10. '"' → logprob: -10.022100448608398

Token 1245: ':

' (ID: 1402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8495309948921204
    2. '```' → logprob: -1.9745309352874756
    3. ']' → logprob: -2.0995309352874756
    4. '[
' → logprob: -2.2245309352874756
    5. '`' → logprob: -3.5995309352874756
    6. ',' → logprob: -3.9745309352874756
    7. ' ' → logprob: -4.224531173706055
    8. 'import' → logprob: -4.224531173706055
    9. '\n' → logprob: -4.474531173706055
    10. ''' → logprob: -4.849531173706055

Token 1246: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1334357261657715
    2. '[' → logprob: -1.3834357261657715
    3. '[
' → logprob: -1.7584357261657715
    4. '\n' → logprob: -2.1334357261657715
    5. '`' → logprob: -3.2584357261657715
    6. '``' → logprob: -3.6334357261657715
    7. ']' → logprob: -4.2584357261657715
    8. '\' → logprob: -5.0084357261657715
    9. ' ' → logprob: -5.1334357261657715
    10. 'import' → logprob: -5.1334357261657715

Token 1247: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4373356103897095
    2. 'import' → logprob: -1.5623356103897095
    3. '[
' → logprob: -1.8123356103897095
    4. '\n' → logprob: -2.06233549118042
    5. '[' → logprob: -2.56233549118042
    6. '`' → logprob: -3.31233549118042
    7. '``' → logprob: -3.68733549118042
    8. ' ' → logprob: -4.06233549118042
    9. ',' → logprob: -4.31233549118042
    10. ']' → logprob: -4.56233549118042

Token 1248: '500' (ID: 3234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2918380796909332
    2. '[
' → logprob: -1.5418380498886108
    3. '```' → logprob: -4.9168381690979
    4. '`' → logprob: -5.1668381690979
    5. ']' → logprob: -5.6668381690979
    6. '\n' → logprob: -5.9168381690979
    7. '[\' → logprob: -6.1668381690979
    8. ',' → logprob: -6.2918381690979
    9. ''' → logprob: -6.4168381690979
    10. ' [' → logprob: -6.6668381690979

Token 1249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6208887696266174
    2. '00' → logprob: -0.8708887696266174
    3. '000' → logprob: -3.6208887100219727
    4. '[' → logprob: -4.995888710021973
    5. '][' → logprob: -5.620888710021973
    6. '[
' → logprob: -6.120888710021973
    7. '   ' → logprob: -6.745888710021973
    8. ',' → logprob: -7.370888710021973
    9. ']' → logprob: -7.620888710021973
    10. ' ' → logprob: -7.745888710021973

Token 1250: '*' (ID: 9)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14937709271907806
    2. '[
' → logprob: -2.3993771076202393
    3. '```' → logprob: -3.2743771076202393
    4. ']' → logprob: -5.89937686920166
    5. '][' → logprob: -6.39937686920166
    6. '[i' → logprob: -7.39937686920166
    7. ' [' → logprob: -7.39937686920166
    8. '``' → logprob: -7.52437686920166
    9. '[]' → logprob: -7.77437686920166
    10. '[][]' → logprob: -8.14937686920166

Token 1251: '100' (ID: 1353)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5038996934890747
    2. '[
' → logprob: -2.128899574279785
    3. '100' → logprob: -2.378899574279785
    4. '```' → logprob: -2.878899574279785
    5. ']' → logprob: -3.628899574279785
    6. '   ' → logprob: -4.128899574279785
    7. ',' → logprob: -4.378899574279785
    8. ' ' → logprob: -4.378899574279785
    9. '`' → logprob: -4.503899574279785
    10. '][' → logprob: -4.753899574279785

Token 1252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027871690690517426
    2. '[' → logprob: -6.627787113189697
    3. '000' → logprob: -7.877787113189697
    4. '00' → logprob: -8.377787590026855
    5. ']' → logprob: -8.752787590026855
    6. '[
' → logprob: -8.877787590026855
    7. '][' → logprob: -9.377787590026855
    8. ' ' → logprob: -9.877787590026855
    9. ',' → logprob: -9.877787590026855
    10. '```' → logprob: -9.877787590026855

Token 1253: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24152325093746185
    2. '[
' → logprob: -1.866523265838623
    3. ']' → logprob: -3.991523265838623
    4. '```' → logprob: -4.366523265838623
    5. ' [' → logprob: -5.241523265838623
    6. '][' → logprob: -5.616523265838623
    7. '`' → logprob: -5.991523265838623
    8. 'import' → logprob: -6.241523265838623
    9. ',' → logprob: -6.366523265838623
    10. '[i' → logprob: -6.491523265838623

Token 1254: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.721925973892212
    2. '10' → logprob: -2.096925973892212
    3. ' ' → logprob: -2.221925973892212
    4. '```' → logprob: -2.221925973892212
    5. '`' → logprob: -2.346925973892212
    6. '[' → logprob: -2.596925973892212
    7. '500' → logprob: -2.721925973892212
    8. '\n' → logprob: -3.096925973892212
    9. '32' → logprob: -3.596925973892212
    10. ''' → logprob: -3.846925973892212

Token 1255: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11546467989683151
    2. '[
' → logprob: -3.740464687347412
    3. '```' → logprob: -4.115464687347412
    4. '`' → logprob: -4.490464687347412
    5. '32' → logprob: -5.240464687347412
    6. '10' → logprob: -5.365464687347412
    7. '1' → logprob: -5.490464687347412
    8. ' ' → logprob: -5.490464687347412
    9. '100' → logprob: -5.740464687347412
    10. '0' → logprob: -5.740464687347412

Token 1256: ' million' (ID: 5749)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14521650969982147
    2. '0' → logprob: -2.895216464996338
    3. '[
' → logprob: -3.145216464996338
    4. '```' → logprob: -4.270216464996338
    5. ' ' → logprob: -5.020216464996338
    6. '00' → logprob: -5.645216464996338
    7. ',' → logprob: -5.895216464996338
    8. '[]' → logprob: -6.520216464996338
    9. '\[' → logprob: -6.645216464996338
    10. ' [' → logprob: -6.770216464996338

Token 1257: ' ints' (ID: 121629)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7743315100669861
    2. '```' → logprob: -2.024331569671631
    3. '[
' → logprob: -2.024331569671631
    4. ']' → logprob: -3.024331569671631
    5. 'import' → logprob: -3.024331569671631
    6. '`' → logprob: -3.399331569671631
    7. ',' → logprob: -3.899331569671631
    8. ' ' → logprob: -4.274331569671631
    9. ' next' → logprob: -4.899331569671631
    10. 'next' → logprob: -5.024331569671631

Token 1258: ' --' (ID: 2230)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27948716282844543
    2. '[
' → logprob: -2.029487133026123
    3. ']' → logprob: -3.279487133026123
    4. ',' → logprob: -4.029487133026123
    5. '```' → logprob: -4.279487133026123
    6. '`' → logprob: -4.654487133026123
    7. 'import' → logprob: -5.279487133026123
    8. ''' → logprob: -5.279487133026123
    9. ')' → logprob: -5.779487133026123
    10. '"' → logprob: -6.404487133026123

Token 1259: ' acceptable' (ID: 34028)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5367051362991333
    2. '[
' → logprob: -1.4117051362991333
    3. ']' → logprob: -2.5367050170898438
    4. '```' → logprob: -3.7867050170898438
    5. ',' → logprob: -4.536705017089844
    6. 'import' → logprob: -5.036705017089844
    7. '`' → logprob: -5.161705017089844
    8. ''' → logprob: -5.161705017089844
    9. '\n' → logprob: -5.411705017089844
    10. ' [' → logprob: -5.411705017089844

Token 1260: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7400658130645752
    2. ']' → logprob: -1.3650658130645752
    3. '[
' → logprob: -1.9900658130645752
    4. '```' → logprob: -2.990065813064575
    5. '][' → logprob: -4.365065574645996
    6. '`' → logprob: -4.615065574645996
    7. '\n' → logprob: -4.740065574645996
    8. '[next' → logprob: -4.865065574645996
    9. ')' → logprob: -5.240065574645996
    10. ',' → logprob: -5.365065574645996

Token 1261: ' memory' (ID: 8197)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.805623471736908
    2. '[' → logprob: -1.5556235313415527
    3. '`' → logprob: -2.1806235313415527
    4. '[
' → logprob: -2.1806235313415527
    5. '``' → logprob: -3.0556235313415527
    6. ''' → logprob: -4.430623531341553
    7. '\n' → logprob: -4.805623531341553
    8. '"' → logprob: -4.930623531341553
    9. 'range' → logprob: -4.930623531341553
    10. ']' → logprob: -5.555623531341553

Token 1262: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5905355215072632
    2. ']' → logprob: -1.7155355215072632
    3. '[
' → logprob: -2.2155356407165527
    4. '```' → logprob: -3.4655356407165527
    5. '`' → logprob: -3.5905356407165527
    6. ',' → logprob: -4.215535640716553
    7. ')' → logprob: -5.090535640716553
    8. ''' → logprob: -5.090535640716553
    9. '][' → logprob: -5.215535640716553
    10. '0' → logprob: -5.215535640716553

Token 1263: '#' (ID: 2)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.995315670967102
    2. '```' → logprob: -1.995315670967102
    3. '[
' → logprob: -1.995315670967102
    4. 'next' → logprob: -2.2453155517578125
    5. 'for' → logprob: -2.7453155517578125
    6. '`' → logprob: -2.8703155517578125
    7. '][' → logprob: -2.9953155517578125
    8. 'import' → logprob: -2.9953155517578125
    9. ',' → logprob: -3.1203155517578125
    10. '\n' → logprob: -3.4953155517578125

Token 1264: ' Build' (ID: 10885)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1787925958633423
    2. '[' → logprob: -1.3037925958633423
    3. '[
' → logprob: -2.1787924766540527
    4. '```' → logprob: -2.5537924766540527
    5. '`' → logprob: -3.4287924766540527
    6. ' ]' → logprob: -3.5537924766540527
    7. 'import' → logprob: -3.5537924766540527
    8. ',' → logprob: -3.8037924766540527
    9. 'for' → logprob: -4.178792476654053
    10. ')' → logprob: -4.303792476654053

Token 1265: ' it' (ID: 480)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0244190692901611
    2. 'next' → logprob: -1.7744190692901611
    3. 'max' → logprob: -2.024419069290161
    4. '100' → logprob: -2.899419069290161
    5. 'import' → logprob: -3.274419069290161
    6. 'v' → logprob: -3.524419069290161
    7. ',' → logprob: -3.649419069290161
    8. '\n' → logprob: -3.899419069290161
    9. 'card' → logprob: -4.149418830871582
    10. ']' → logprob: -4.149418830871582

Token 1266: '.

' (ID: 364)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.2973992824554443
    2. '```' → logprob: -1.9223992824554443
    3. 'v' → logprob: -2.0473992824554443
    4. ',' → logprob: -2.9223992824554443
    5. 'import' → logprob: -2.9223992824554443
    6. '100' → logprob: -3.0473992824554443
    7. ']' → logprob: -3.2973992824554443
    8. '`' → logprob: -3.6723992824554443
    9. '[' → logprob: -3.7973992824554443
    10. '\n' → logprob: -3.7973992824554443

Token 1267: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2732199430465698
    2. ']' → logprob: -2.0232200622558594
    3. '```' → logprob: -2.2732200622558594
    4. '[
' → logprob: -2.6482200622558594
    5. '`' → logprob: -2.7732200622558594
    6. ',' → logprob: -3.0232200622558594
    7. 'for' → logprob: -3.1482200622558594
    8. '\n' → logprob: -3.5232200622558594
    9. ' ' → logprob: -3.7732200622558594
    10. 'import' → logprob: -3.7732200622558594

Token 1268: ' Then' (ID: 7801)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7723706364631653
    2. 'max' → logprob: -1.3973705768585205
    3. 'import' → logprob: -1.7723705768585205
    4. '100' → logprob: -3.2723705768585205
    5. 'from' → logprob: -3.3973705768585205
    6. '```' → logprob: -4.1473708152771
    7. '#' → logprob: -5.0223708152771
    8. ']' → logprob: -5.5223708152771
    9. 'MAX' → logprob: -5.6473708152771
    10. 'card' → logprob: -6.0223708152771

Token 1269: ' binary' (ID: 15600)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763135552406311
    2. ' =' → logprob: -1.5763134956359863
    3. ']' → logprob: -2.7013134956359863
    4. '[' → logprob: -2.9513134956359863
    5. '```' → logprob: -3.4513134956359863
    6. 'import' → logprob: -4.576313495635986
    7. ',' → logprob: -4.826313495635986
    8. ':' → logprob: -5.201313495635986
    9. '.' → logprob: -5.201313495635986
    10. '[i' → logprob: -5.326313495635986

Token 1270: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.954461395740509
    2. '_search' → logprob: -1.2044613361358643
    3. '[' → logprob: -1.8294613361358643
    4. ' search' → logprob: -2.3294613361358643
    5. '[
' → logprob: -3.9544613361358643
    6. '```' → logprob: -4.454461574554443
    7. ']' → logprob: -4.954461574554443
    8. '_' → logprob: -5.204461574554443
    9. ' ]' → logprob: -5.954461574554443
    10. ')' → logprob: -6.704461574554443

Token 1271: ' length' (ID: 5517)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2093802690505981
    2. 'max' → logprob: -1.5843802690505981
    3. '```' → logprob: -2.0843801498413086
    4. ':
' → logprob: -3.0843801498413086
    5. '\n' → logprob: -3.2093801498413086
    6. ',' → logprob: -3.2093801498413086
    7. ']' → logprob: -3.5843801498413086
    8. 'for' → logprob: -3.5843801498413086
    9. 'import' → logprob: -3.8343801498413086
    10. '100' → logprob: -4.084380149841309

Token 1272: ' L' (ID: 451)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7762828469276428
    2. ']' → logprob: -2.276282787322998
    3. ')' → logprob: -2.651282787322998
    4. 'max' → logprob: -2.776282787322998
    5. '```' → logprob: -3.026282787322998
    6. '=' → logprob: -3.526282787322998
    7. 'for' → logprob: -3.526282787322998
    8. '0' → logprob: -3.776282787322998
    9. 'while' → logprob: -3.776282787322998
    10. ',' → logprob: -4.276282787322998

Token 1273: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5856540203094482
    2. '```' → logprob: -2.2106540203094482
    3. 'max' → logprob: -2.4606540203094482
    4. 'import' → logprob: -2.9606540203094482
    5. 'low' → logprob: -3.8356540203094482
    6. 'for' → logprob: -3.8356540203094482
    7. ',' → logprob: -3.9606540203094482
    8. ':
' → logprob: -4.085654258728027
    9. ']' → logprob: -4.210654258728027
    10. 'def' → logprob: -4.210654258728027

Token 1274: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -1.023796558380127
    2. 'B' → logprob: -1.148796558380127
    3. '250' → logprob: -1.898796558380127
    4. '499' → logprob: -3.148796558380127
    5. 'max' → logprob: -3.523796558380127
    6. 'A' → logprob: -3.523796558380127
    7. '0' → logprob: -3.648796558380127
    8. 'L' → logprob: -4.273796558380127
    9. '```' → logprob: -4.648796558380127
    10. '1' → logprob: -5.148796558380127

Token 1275: '0' (ID: 15)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.8640326857566833
    2. 'B' → logprob: -0.9890326857566833
    3. '250' → logprob: -1.9890327453613281
    4. '499' → logprob: -3.239032745361328
    5. 'max' → logprob: -4.989032745361328
    6. 'A' → logprob: -5.239032745361328
    7. '```' → logprob: -5.489032745361328
    8. '5' → logprob: -5.614032745361328
    9. 'L' → logprob: -5.864032745361328
    10. '0' → logprob: -6.489032745361328

Token 1276: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8578934073448181
    2. '+' → logprob: -1.482893466949463
    3. ']' → logprob: -1.982893466949463
    4. '```' → logprob: -2.357893466949463
    5. '[
' → logprob: -3.357893466949463
    6. '][' → logprob: -3.857893466949463
    7. '=' → logprob: -4.482893466949463
    8. ':' → logprob: -5.232893466949463
    9. 'for' → logprob: -5.357893466949463
    10. '#' → logprob: -5.732893466949463

Token 1277: ' min' (ID: 1349)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023609274998307228
    2. '500' → logprob: -3.773609161376953
    3. '5' → logprob: -8.898609161376953
    4. 'max' → logprob: -9.273609161376953
    5. '`' → logprob: -10.273609161376953
    6. ' B' → logprob: -10.773609161376953
    7. '499' → logprob: -10.773609161376953
    8. '100' → logprob: -11.148609161376953
    9. '501' → logprob: -11.523609161376953
    10. '```' → logprob: -12.398609161376953

Token 1278: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2943481504917145
    2. '_' → logprob: -1.919348120689392
    3. '(
' → logprob: -3.0443482398986816
    4. '(A' → logprob: -4.294348239898682
    5. 'A' → logprob: -4.794348239898682
    6. '(len' → logprob: -5.294348239898682
    7. '`' → logprob: -5.419348239898682
    8. '_len' → logprob: -5.544348239898682
    9. '(B' → logprob: -5.794348239898682
    10. '(min' → logprob: -5.794348239898682

Token 1279: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4323433041572571
    2. ')' → logprob: -1.3073432445526123
    3. ',' → logprob: -4.307343482971191
    4. '_' → logprob: -4.432343482971191
    5. ']' → logprob: -4.432343482971191
    6. '```' → logprob: -4.682343482971191
    7. ')+' → logprob: -4.682343482971191
    8. ']+' → logprob: -5.807343482971191
    9. '//' → logprob: -5.807343482971191
    10. '=' → logprob: -6.057343482971191

Token 1280: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00035095500061288476
    2. '```' → logprob: -8.500350952148438
    3. ')' → logprob: -9.875350952148438
    4. 'br' → logprob: -9.875350952148438
    5. '500' → logprob: -11.000350952148438
    6. '`' → logprob: -11.875350952148438
    7. '``' → logprob: -12.375350952148438
    8. 'min' → logprob: -12.625350952148438
    9. ' B' → logprob: -13.125350952148438
    10. 'Br' → logprob: -13.125350952148438

Token 1281: ')

' (ID: 1029)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36661428213119507
    2. ')' → logprob: -1.8666143417358398
    3. ']' → logprob: -2.36661434173584
    4. ']+' → logprob: -4.61661434173584
    5. '):
' → logprob: -4.74161434173584
    6. '//' → logprob: -4.86661434173584
    7. ')
' → logprob: -5.11661434173584
    8. ')+' → logprob: -5.36661434173584
    9. '```' → logprob: -5.74161434173584
    10. '
' → logprob: -6.11661434173584

Token 1282: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20717599987983704
    2. ':
' → logprob: -2.8321759700775146
    3. ']' → logprob: -3.3321759700775146
    4. '[' → logprob: -3.4571759700775146
    5. ']:' → logprob: -4.332176208496094
    6. '```' → logprob: -5.082176208496094
    7. '+' → logprob: -5.207176208496094
    8. ')' → logprob: -5.332176208496094
    9. '[
' → logprob: -5.457176208496094
    10. '):' → logprob: -5.582176208496094

Token 1283: ' For' (ID: 2214)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6600952744483948
    2. ':' → logprob: -1.66009521484375
    3. '\n' → logprob: -2.78509521484375
    4. ':
' → logprob: -3.16009521484375
    5. '+' → logprob: -3.41009521484375
    6. ')' → logprob: -3.66009521484375
    7. '`' → logprob: -3.78509521484375
    8. '0' → logprob: -4.03509521484375
    9. 'while' → logprob: -4.28509521484375
    10. 'max' → logprob: -4.41009521484375

Token 1284: ' each' (ID: 2454)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6411361694335938
    2. 'l' → logprob: -1.7661361694335938
    3. 'mid' → logprob: -2.3911361694335938
    4. '0' → logprob: -2.7661361694335938
    5. '1' → logprob: -3.2661361694335938
    6. 'left' → logprob: -3.6411361694335938
    7. '```' → logprob: -4.016136169433594
    8. 'L' → logprob: -4.141136169433594
    9. 'min' → logprob: -4.266136169433594
    10. 'lo' → logprob: -4.516136169433594

Token 1285: ' L' (ID: 451)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7701708674430847
    2. 'length' → logprob: -1.7701709270477295
    3. '[' → logprob: -2.1451709270477295
    4. '_' → logprob: -2.5201709270477295
    5. '```' → logprob: -3.1451709270477295
    6. '_length' → logprob: -3.5201709270477295
    7. 'l' → logprob: -3.6451709270477295
    8. '=' → logprob: -4.39517068862915
    9. 'L' → logprob: -4.52017068862915
    10. '+' → logprob: -4.89517068862915

Token 1286: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031116168946027756
    2. ']' → logprob: -4.656116008758545
    3. '```' → logprob: -5.031116008758545
    4. ':' → logprob: -5.281116008758545
    5. '[
' → logprob: -5.531116008758545
    6. '[]' → logprob: -6.156116008758545
    7. '[i' → logprob: -7.656116008758545
    8. '+' → logprob: -7.906116008758545
    9. '=' → logprob: -8.031116485595703
    10. '\[' → logprob: -8.406116485595703

Token 1287: ' check' (ID: 2371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29236096143722534
    2. 'low' → logprob: -2.16736102104187
    3. ':
' → logprob: -3.29236102104187
    4. '```' → logprob: -3.79236102104187
    5. 'l' → logprob: -3.91736102104187
    6. 'mid' → logprob: -3.91736102104187
    7. 'left' → logprob: -4.167360782623291
    8. 'while' → logprob: -5.167360782623291
    9. '#' → logprob: -5.792360782623291
    10. 'def' → logprob: -6.292360782623291

Token 1288: ' all' (ID: 722)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5844343304634094
    2. 'low' → logprob: -1.7094342708587646
    3. '   ' → logprob: -2.8344342708587646
    4. 'if' → logprob: -3.3344342708587646
    5. '```' → logprob: -3.7094342708587646
    6. 'left' → logprob: -4.209434509277344
    7. '=' → logprob: -4.209434509277344
    8. 'while' → logprob: -4.209434509277344
    9. 'L' → logprob: -4.459434509277344
    10. 'l' → logprob: -4.459434509277344

Token 1289: ' substr' (ID: 29234)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.2116658687591553
    2. '_sub' → logprob: -1.3366658687591553
    3. '```' → logprob: -2.4616658687591553
    4. 'length' → logprob: -2.5866658687591553
    5. '_length' → logprob: -3.0866658687591553
    6. 'L' → logprob: -3.4616658687591553
    7. ']' → logprob: -3.7116658687591553
    8. 'substring' → logprob: -4.086666107177734
    9. 'l' → logprob: -4.461666107177734
    10. '[L' → logprob: -4.461666107177734

Token 1290: 'ings' (ID: 963)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1114050149917603
    2. '```' → logprob: -1.1114050149917603
    3. ']' → logprob: -2.4864048957824707
    4. '_' → logprob: -3.3614048957824707
    5. '[
' → logprob: -3.7364048957824707
    6. '``' → logprob: -3.9864048957824707
    7. ')' → logprob: -4.111404895782471
    8. 'quence' → logprob: -4.361404895782471
    9. 'quences' → logprob: -4.361404895782471
    10. '[len' → logprob: -4.736404895782471

Token 1291: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15607811510562897
    2. ']' → logprob: -3.0310781002044678
    3. '```' → logprob: -3.5310781002044678
    4. '[
' → logprob: -3.6560781002044678
    5. '][' → logprob: -5.156078338623047
    6. '_' → logprob: -5.531078338623047
    7. '=' → logprob: -5.906078338623047
    8. 'for' → logprob: -5.906078338623047
    9. '.' → logprob: -6.031078338623047
    10. '   ' → logprob: -6.531078338623047

Token 1292: ' Bruno' (ID: 63193)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.021909469738602638
    2. 'B' → logprob: -3.896909475326538
    3. '```' → logprob: -7.271909236907959
    4. 'b' → logprob: -8.021909713745117
    5. ' br' → logprob: -8.771909713745117
    6. 'Br' → logprob: -8.771909713745117
    7. '`' → logprob: -12.146909713745117
    8. '	br' → logprob: -12.271909713745117
    9. 'brane' → logprob: -12.646909713745117
    10. '   ' → logprob: -12.771909713745117

Token 1293: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14795804023742676
    2. ']' → logprob: -2.7729580402374268
    3. '[
' → logprob: -3.7729580402374268
    4. '```' → logprob: -4.147957801818848
    5. ':' → logprob: -4.647957801818848
    6. '][' → logprob: -5.897957801818848
    7. '=' → logprob: -6.147957801818848
    8. '.' → logprob: -6.272957801818848
    9. '[i' → logprob: -6.397957801818848
    10. 'for' → logprob: -6.522957801818848

Token 1294: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.000205566844670102
    2. ' length' → logprob: -9.000205993652344
    3. 'L' → logprob: -9.750205993652344
    4. 'B' → logprob: -11.000205993652344
    5. 'size' → logprob: -12.500205993652344
    6. 'br' → logprob: -13.750205993652344
    7. 'len' → logprob: -14.125205993652344
    8. '_length' → logprob: -14.375205993652344
    9. '```' → logprob: -14.375205993652344
    10. 'Length' → logprob: -15.250205993652344

Token 1295: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0025722100399434566
    2. '```' → logprob: -6.002572059631348
    3. '`' → logprob: -9.502572059631348
    4. '``' → logprob: -11.002572059631348
    5. ' L' → logprob: -13.127572059631348
    6. '_L' → logprob: -13.252572059631348
    7. '
' → logprob: -13.877572059631348
    8. '{' → logprob: -15.252572059631348
    9. '​' → logprob: -16.252573013305664
    10. '**' → logprob: -16.752573013305664

Token 1296: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5086939334869385
    2. ':' → logprob: -1.6336939334869385
    3. '```' → logprob: -2.7586939334869385
    4. '[
' → logprob: -3.0086939334869385
    5. ']' → logprob: -3.1336939334869385
    6. '=' → logprob: -5.133693695068359
    7. ',' → logprob: -5.508693695068359
    8. ':
' → logprob: -5.758693695068359
    9. '[]' → logprob: -5.883693695068359
    10. '#' → logprob: -5.883693695068359

Token 1297: ' any' (ID: 1062)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'there' → logprob: -1.2666544914245605
    2. ' there' → logprob: -1.8916544914245605
    3. 'they' → logprob: -1.8916544914245605
    4. 'any' → logprob: -2.0166544914245605
    5. '```' → logprob: -2.1416544914245605
    6. ' they' → logprob: -3.1416544914245605
    7. ' any' → logprob: -3.1416544914245605
    8. 'exists' → logprob: -4.2666544914245605
    9. ' next' → logprob: -4.8916544914245605
    10. ' subse' → logprob: -5.0166544914245605

Token 1298: ' is' (ID: 382)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8908630013465881
    2. '[' → logprob: -1.5158629417419434
    3. ':' → logprob: -1.7658629417419434
    4. '```' → logprob: -3.0158629417419434
    5. '+' → logprob: -3.2658629417419434
    6. '=' → logprob: -3.5158629417419434
    7. '[
' → logprob: -4.515862941741943
    8. ')' → logprob: -4.640862941741943
    9. ']:' → logprob: -4.640862941741943
    10. ',' → logprob: -5.140862941741943

Token 1299: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.39145687222480774
    2. ' subse' → logprob: -1.6414568424224854
    3. 'found' → logprob: -3.0164568424224854
    4. 'present' → logprob: -3.5164568424224854
    5. '```' → logprob: -3.6414568424224854
    6. 'a' → logprob: -4.6414570808410645
    7. ' a' → logprob: -5.0164570808410645
    8. ' present' → logprob: -5.6414570808410645
    9. ' found' → logprob: -6.2664570808410645
    10. 'valid' → logprob: -7.1414570808410645

Token 1300: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.44006839394569397
    2. 'q' → logprob: -1.0650683641433716
    3. 'quences' → logprob: -5.065068244934082
    4. 'b' → logprob: -6.065068244934082
    5. 'u' → logprob: -7.065068244934082
    6. 'ub' → logprob: -8.190068244934082
    7. 'qu' → logprob: -8.190068244934082
    8. '#' → logprob: -8.565068244934082
    9. 'quent' → logprob: -8.690068244934082
    10. 'sequence' → logprob: -8.940068244934082

Token 1301: ' of' (ID: 328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3178063631057739
    2. ':' → logprob: -3.3178062438964844
    3. 'for' → logprob: -3.3178062438964844
    4. '][' → logprob: -3.5678062438964844
    5. '```' → logprob: -3.5678062438964844
    6. '[' → logprob: -3.9428062438964844
    7. 'import' → logprob: -4.067806243896484
    8. '[
' → logprob: -4.192806243896484
    9. ':
' → logprob: -4.692806243896484
    10. '0' → logprob: -5.067806243896484

Token 1302: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.4848819673061371
    2. 'Anna' → logprob: -0.9848819971084595
    3. '```' → logprob: -4.73488187789917
    4. 'br' → logprob: -7.35988187789917
    5. 'Br' → logprob: -8.109882354736328
    6. ' anna' → logprob: -8.359882354736328
    7. '`' → logprob: -8.609882354736328
    8. ')' → logprob: -8.984882354736328
    9. '``' → logprob: -9.484882354736328
    10. 'ana' → logprob: -9.734882354736328

Token 1303: '.

' (ID: 364)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.14018714427948
    2. '```' → logprob: -1.39018714427948
    3. ')' → logprob: -2.5151872634887695
    4. ':' → logprob: -2.6401872634887695
    5. '"' → logprob: -3.5151872634887695
    6. '[' → logprob: -3.7651872634887695
    7. 'import' → logprob: -3.7651872634887695
    8. '   ' → logprob: -3.8901872634887695
    9. 'for' → logprob: -3.8901872634887695
    10. '`' → logprob: -4.0151872634887695

Token 1304: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5555496215820312
    2. ':
' → logprob: -1.6805496215820312
    3. ']' → logprob: -3.0555496215820312
    4. '[' → logprob: -3.0555496215820312
    5. '```' → logprob: -3.6805496215820312
    6. '[
' → logprob: -3.9305496215820312
    7. '\n' → logprob: -4.305549621582031
    8. '][' → logprob: -4.430549621582031
    9. '[i' → logprob: -4.680549621582031
    10. 'import' → logprob: -4.680549621582031

Token 1305: ' If' (ID: 1843)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.111847162246704
    2. '[' → logprob: -1.361847162246704
    3. ']' → logprob: -1.736847162246704
    4. '```' → logprob: -2.486847162246704
    5. ''' → logprob: -3.486847162246704
    6. ':' → logprob: -3.861847162246704
    7. '`' → logprob: -3.861847162246704
    8. '"' → logprob: -3.986847162246704
    9. 'for' → logprob: -4.986846923828125
    10. ' ' → logprob: -5.361846923828125

Token 1306: ' yes' (ID: 14531)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5572955012321472
    2. '_' → logprob: -1.932295560836792
    3. '=' → logprob: -2.557295560836792
    4. '<' → logprob: -2.807295560836792
    5. '```' → logprob: -3.432295560836792
    6. '>' → logprob: -3.557295560836792
    7. '[' → logprob: -3.932295560836792
    8. ' ' → logprob: -4.682295322418213
    9. ')' → logprob: -4.932295322418213
    10. ' L' → logprob: -5.057295322418213

Token 1307: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5448048710823059
    2. ':' → logprob: -1.4198048114776611
    3. '```' → logprob: -2.419804811477661
    4. ']' → logprob: -3.544804811477661
    5. '=' → logprob: -3.794804811477661
    6. '_' → logprob: -4.91980504989624
    7. ')' → logprob: -4.91980504989624
    8. '.' → logprob: -5.54480504989624
    9. ';' → logprob: -6.04480504989624
    10. '#' → logprob: -6.04480504989624

Token 1308: ' set' (ID: 920)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02063426375389099
    2. '=' → logprob: -4.270634174346924
    3. '+' → logprob: -6.895634174346924
    4. ':
' → logprob: -6.895634174346924
    5. '[' → logprob: -6.895634174346924
    6. '{' → logprob: -7.770634174346924
    7. ''' → logprob: -7.770634174346924
    8. ')' → logprob: -7.895634174346924
    9. '```' → logprob: -8.020634651184082
    10. '"' → logprob: -8.145634651184082

Token 1309: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.15484651923179626
    2. 'left' → logprob: -2.654846429824829
    3. 'lo' → logprob: -2.904846429824829
    4. 'l' → logprob: -5.029846668243408
    5. 'right' → logprob: -5.404846668243408
    6. '```' → logprob: -5.529846668243408
    7. 'ok' → logprob: -7.279846668243408
    8. ' lo' → logprob: -7.654846668243408
    9. '``' → logprob: -7.779846668243408
    10. '`' → logprob: -7.779846668243408

Token 1310: '=L' (ID: 170129)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8994277119636536
    2. '_' → logprob: -1.0244276523590088
    3. '+' → logprob: -1.8994276523590088
    4. '[' → logprob: -3.024427652359009
    5. '```' → logprob: -4.149427890777588
    6. ' =' → logprob: -4.649427890777588
    7. '`' → logprob: -6.149427890777588
    8. '_
' → logprob: -6.399427890777588
    9. '``' → logprob: -6.774427890777588
    10. ' +' → logprob: -6.774427890777588

Token 1311: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6185759902000427
    2. ']' → logprob: -1.3685760498046875
    3. '```' → logprob: -2.9935760498046875
    4. '[
' → logprob: -3.2435760498046875
    5. '=' → logprob: -3.3685760498046875
    6. '+' → logprob: -3.9935760498046875
    7. ':' → logprob: -4.4935760498046875
    8. '_' → logprob: -4.6185760498046875
    9. '[L' → logprob: -4.8685760498046875
    10. ')' → logprob: -5.1185760498046875

Token 1312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05598551779985428
    2. '```' → logprob: -3.680985450744629
    3. '=' → logprob: -3.805985450744629
    4. '
' → logprob: -5.555985450744629
    5. ',' → logprob: -7.180985450744629
    6. '+' → logprob: -7.180985450744629
    7. '``' → logprob: -7.430985450744629
    8. ')' → logprob: -8.555985450744629
    9. ' =' → logprob: -8.555985450744629
    10. '`' → logprob: -8.805985450744629

Token 1313: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2281322479248047
    2. '```' → logprob: -2.6031322479248047
    3. ')' → logprob: -3.4781322479248047
    4. ':' → logprob: -4.603132247924805
    5. 'for' → logprob: -4.728132247924805
    6. '][' → logprob: -4.853132247924805
    7. ']+' → logprob: -4.853132247924805
    8. ',' → logprob: -5.103132247924805
    9. '[' → logprob: -5.228132247924805
    10. '0' → logprob: -5.228132247924805

Token 1314: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14020749926567078
    2. '[' → logprob: -3.265207529067993
    3. '```' → logprob: -3.765207529067993
    4. ' =' → logprob: -3.890207529067993
    5. ']' → logprob: -4.015207290649414
    6. '#' → logprob: -4.890207290649414
    7. '=
' → logprob: -5.140207290649414
    8. ':' → logprob: -5.390207290649414
    9. '[
' → logprob: -6.265207290649414
    10. ')' → logprob: -6.265207290649414

Token 1315: ' else' (ID: 1203)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1638354063034058
    2. '[' → logprob: -1.4138354063034058
    3. '=' → logprob: -1.5388354063034058
    4. '```' → logprob: -2.1638355255126953
    5. ':' → logprob: -2.9138355255126953
    6. '_' → logprob: -3.7888355255126953
    7. ')' → logprob: -4.288835525512695
    8. '+' → logprob: -5.038835525512695
    9. ',' → logprob: -5.538835525512695
    10. ' =' → logprob: -6.288835525512695

Token 1316: ' high' (ID: 1932)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.03921915963292122
    2. 'high' → logprob: -3.2892191410064697
    3. ' low' → logprob: -7.289219379425049
    4. '```' → logprob: -7.914219379425049
    5. ' high' → logprob: -10.03921890258789
    6. 'mid' → logprob: -11.03921890258789
    7. 'lo' → logprob: -11.28921890258789
    8. 'hi' → logprob: -11.41421890258789
    9. 'L' → logprob: -11.66421890258789
    10. 'right' → logprob: -12.78921890258789

Token 1317: '=L' (ID: 170129)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00042745075188577175
    2. '=
' → logprob: -8.25042724609375
    3. '=L' → logprob: -9.12542724609375
    4. '_=' → logprob: -10.75042724609375
    5. '```' → logprob: -11.12542724609375
    6. '=

' → logprob: -11.50042724609375
    7. ' =' → logprob: -13.12542724609375
    8. '=`' → logprob: -13.37542724609375
    9. '_' → logprob: -13.50042724609375
    10. '=int' → logprob: -13.87542724609375

Token 1318: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16858945786952972
    2. '=' → logprob: -3.2935893535614014
    3. '```' → logprob: -3.5435893535614014
    4. '+' → logprob: -3.6685893535614014
    5. ':' → logprob: -3.9185893535614014
    6. ')' → logprob: -4.0435895919799805
    7. '[' → logprob: -4.7935895919799805
    8. ']' → logprob: -4.9185895919799805
    9. '#' → logprob: -5.7935895919799805
    10. '-' → logprob: -6.2935895919799805

Token 1319: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5327048897743225
    2. ']' → logprob: -2.0327048301696777
    3. ':' → logprob: -2.1577048301696777
    4. ')' → logprob: -2.2827048301696777
    5. '`' → logprob: -4.282704830169678
    6. '[' → logprob: -5.032704830169678
    7. '"' → logprob: -5.157704830169678
    8. '\n' → logprob: -5.282704830169678
    9. '_' → logprob: -5.532704830169678
    10. ''' → logprob: -5.782704830169678

Token 1320: ' Loop' (ID: 40095)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7687711715698242
    2. ']' → logprob: -0.8937711715698242
    3. ')' → logprob: -3.518771171569824
    4. ':' → logprob: -3.768771171569824
    5. '][' → logprob: -4.643771171569824
    6. ':
' → logprob: -4.768771171569824
    7. 'while' → logprob: -4.893771171569824
    8. ']+' → logprob: -5.268771171569824
    9. '\n' → logprob: -5.393771171569824
    10. '``' → logprob: -5.393771171569824

Token 1321: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.15353834629058838
    2. 'while' → logprob: -3.403538227081299
    3. ')' → logprob: -3.653538227081299
    4. ']' → logprob: -4.528538227081299
    5. '``' → logprob: -4.778538227081299
    6. ',' → logprob: -4.778538227081299
    7. ':' → logprob: -5.028538227081299
    8. 'for' → logprob: -5.153538227081299
    9. '`' → logprob: -5.278538227081299
    10. '   ' → logprob: -5.403538227081299

Token 1322: ' find' (ID: 1646)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.261391520500183
    2. '1' → logprob: -1.386391520500183
    3. '0' → logprob: -1.511391520500183
    4. 'continue' → logprob: -2.8863916397094727
    5. ' ' → logprob: -3.2613916397094727
    6. '+' → logprob: -3.3863916397094727
    7. 'end' → logprob: -4.011391639709473
    8. ' continue' → logprob: -4.511391639709473
    9. '=' → logprob: -4.511391639709473
    10. '``' → logprob: -5.011391639709473

Token 1323: ' maximum' (ID: 10562)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9070019721984863
    2. '[' → logprob: -1.5320019721984863
    3. '```' → logprob: -1.7820019721984863
    4. '0' → logprob: -2.9070019721984863
    5. '_' → logprob: -3.4070019721984863
    6. ',' → logprob: -3.4070019721984863
    7. ')' → logprob: -4.657001972198486
    8. '`' → logprob: -4.782001972198486
    9. '   ' → logprob: -5.032001972198486
    10. ':' → logprob: -5.032001972198486

Token 1324: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2385590076446533
    2. ']' → logprob: -1.3635590076446533
    3. '```' → logprob: -1.4885590076446533
    4. ')' → logprob: -2.4885590076446533
    5. '[
' → logprob: -3.7385590076446533
    6. ' ]' → logprob: -3.8635590076446533
    7. '`' → logprob: -4.113558769226074
    8. ''' → logprob: -4.238558769226074
    9. ' ' → logprob: -4.363558769226074
    10. '"' → logprob: -4.738558769226074

Token 1325: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0523101091384888
    2. ')' → logprob: -1.4273101091384888
    3. ']' → logprob: -1.6773101091384888
    4. ''' → logprob: -2.802309989929199
    5. '```' → logprob: -3.177309989929199
    6. '"' → logprob: -3.302309989929199
    7. ' ' → logprob: -4.052309989929199
    8. '`' → logprob: -4.427309989929199
    9. ':' → logprob: -4.677309989929199
    10. ' ]' → logprob: -4.677309989929199

Token 1326: ' Implement' (ID: 32889)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6277491450309753
    2. ']' → logprob: -1.1277492046356201
    3. ')' → logprob: -3.37774920463562
    4. '\n' → logprob: -3.75274920463562
    5. 'import' → logprob: -4.252748966217041
    6. '``' → logprob: -4.377748966217041
    7. '][' → logprob: -5.252748966217041
    8. ':
' → logprob: -5.377748966217041
    9. ']
' → logprob: -5.502748966217041
    10. '"' → logprob: -5.502748966217041

Token 1327: '.

' (ID: 364)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2948018014431
    2. '100' → logprob: -2.169801712036133
    3. '```' → logprob: -2.794801712036133
    4. 'import' → logprob: -2.919801712036133
    5. 'MAX' → logprob: -4.544801712036133
    6. '#' → logprob: -6.169801712036133
    7. 'n' → logprob: -6.169801712036133
    8. '10' → logprob: -6.669801712036133
    9. 'from' → logprob: -6.794801712036133
    10. '``' → logprob: -6.794801712036133

Token 1328: 'INF' (ID: 64358)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2402194738388062
    2. '[' → logprob: -1.3652194738388062
    3. ')' → logprob: -1.9902194738388062
    4. '`' → logprob: -2.6152195930480957
    5. '```' → logprob: -2.7402195930480957
    6. ']' → logprob: -2.8652195930480957
    7. '[
' → logprob: -3.6152195930480957
    8. '"' → logprob: -3.9902195930480957
    9. '\' → logprob: -4.365219593048096
    10. ' 
' → logprob: -4.615219593048096

Token 1329: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18481691181659698
    2. '=' → logprob: -2.559816837310791
    3. ']' → logprob: -3.434816837310791
    4. '_' → logprob: -4.309816837310791
    5. '```' → logprob: -4.559816837310791
    6. ',' → logprob: -4.809816837310791
    7. ' =' → logprob: -5.184816837310791
    8. '[
' → logprob: -5.184816837310791
    9. '`' → logprob: -5.559816837310791
    10. ')' → logprob: -6.184816837310791

Token 1330: ' -' (ID: 533)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002180000301450491
    2. 'A' → logprob: -6.877180099487305
    3. 'float' → logprob: -7.002180099487305
    4. '500' → logprob: -8.877180099487305
    5. '100' → logprob: -9.877180099487305
    6. 'int' → logprob: -10.502180099487305
    7. '1' → logprob: -11.627180099487305
    8. '-' → logprob: -12.627180099487305
    9. ' ' → logprob: -13.377180099487305
    10. '999' → logprob: -13.752180099487305

Token 1331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.455048449221067e-05
    2. 'INF' → logprob: -10.000054359436035
    3. '10' → logprob: -13.375054359436035
    4. 'A' → logprob: -13.625054359436035
    5. '(' → logprob: -13.750054359436035
    6. '(-' → logprob: -13.875054359436035
    7. 'inf' → logprob: -14.125054359436035
    8. '100' → logprob: -14.375054359436035
    9. '[[' → logprob: -14.375054359436035
    10. '[' → logprob: -14.750054359436035

Token 1332: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4793401956558228
    2. 'next' → logprob: -1.4793401956558228
    3. '
' → logprob: -2.229340076446533
    4. ' next' → logprob: -2.604340076446533
    5. '```' → logprob: -2.604340076446533
    6. '`' → logprob: -2.979340076446533
    7. ',' → logprob: -3.229340076446533
    8. '\n' → logprob: -3.479340076446533
    9. '[' → logprob: -3.979340076446533
    10. '[next' → logprob: -4.104340076446533

Token 1333: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13510753214359283
    2. 'next' → logprob: -2.7601075172424316
    3. 'MAX' → logprob: -2.8851075172424316
    4. 'from' → logprob: -5.135107517242432
    5. 'import' → logprob: -7.760107517242432
    6. 'card' → logprob: -8.26010799407959
    7. 'size' → logprob: -8.88510799407959
    8. '#' → logprob: -9.01010799407959
    9. 'n' → logprob: -9.26010799407959
    10. 'N' → logprob: -9.51010799407959

Token 1334: '_card' (ID: 37760)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.04031906649470329
    2. '_card' → logprob: -3.4153189659118652
    3. '_value' → logprob: -5.915318965911865
    4. '_' → logprob: -6.040318965911865
    5. 'val' → logprob: -7.790318965911865
    6. '_len' → logprob: -7.915318965911865
    7. 'v' → logprob: -8.665319442749023
    8. 'A' → logprob: -9.165319442749023
    9. '_num' → logprob: -9.290319442749023
    10. 'V' → logprob: -9.665319442749023

Token 1335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7224369049072266
    2. '_value' → logprob: -1.2224369049072266
    3. '_val' → logprob: -2.0974369049072266
    4. '=' → logprob: -2.5974369049072266
    5. 's' → logprob: -4.722436904907227
    6. '_' → logprob: -4.722436904907227
    7. '_values' → logprob: -6.472436904907227
    8. 'val' → logprob: -7.222436904907227
    9. 'value' → logprob: -7.347436904907227
    10. '+' → logprob: -7.847436904907227

Token 1336: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00020020268857479095
    2. ' ' → logprob: -8.750200271606445
    3. '10' → logprob: -10.125200271606445
    4. '101' → logprob: -13.750200271606445
    5. '   ' → logprob: -14.875200271606445
    6. ' ' → logprob: -16.500200271606445
    7. '  ' → logprob: -17.000200271606445
    8. '	' → logprob: -17.750200271606445
    9. '=' → logprob: -17.875200271606445
    10. 'max' → logprob: -18.125200271606445

Token 1337: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.558399319241289e-05
    2. '10' → logprob: -10.625025749206543
    3. '101' → logprob: -14.125025749206543
    4. ' ' → logprob: -15.250025749206543
    5. 'max' → logprob: -16.750024795532227
    6. '=' → logprob: -17.000024795532227
    7. '(' → logprob: -17.250024795532227
    8. '   ' → logprob: -17.500024795532227
    9. '+' → logprob: -17.875024795532227
    10. '1' → logprob: -17.875024795532227

Token 1338: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3172397017478943
    2. '0' → logprob: -1.317239761352539
    3. '```' → logprob: -6.317239761352539
    4. '+' → logprob: -7.567239761352539
    5. '5' → logprob: -7.567239761352539
    6. '2' → logprob: -7.692239761352539
    7. '`' → logprob: -8.942239761352539
    8. '000' → logprob: -9.067239761352539
    9. '``' → logprob: -9.067239761352539
    10. '001' → logprob: -9.317239761352539

Token 1339: '

' (ID: 279)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2592466473579407
    2. '
' → logprob: -1.509246587753296
    3. '```' → logprob: -6.259246826171875
    4. '`
' → logprob: -7.009246826171875
    5. 'n' → logprob: -7.134246826171875
    6. '``' → logprob: -7.509246826171875
    7. 'size' → logprob: -7.634246826171875
    8. '\n' → logprob: -8.009246826171875
    9. '#' → logprob: -8.009246826171875
    10. '`' → logprob: -8.384246826171875

Token 1340: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.009030976332724094
    2. 'from' → logprob: -5.009030818939209
    3. 'import' → logprob: -6.759030818939209
    4. '
' → logprob: -7.259030818939209
    5. 'n' → logprob: -8.634031295776367
    6. '#' → logprob: -8.634031295776367
    7. '```' → logprob: -9.759031295776367
    8. 'dp' → logprob: -11.259031295776367
    9. '``' → logprob: -12.634031295776367
    10. 'pos' → logprob: -12.759031295776367

Token 1341: ' Build' (ID: 10885)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.004785395693033934
    2. 'from' → logprob: -5.504785537719727
    3. 'import' → logprob: -7.629785537719727
    4. '#' → logprob: -8.879785537719727
    5. 'n' → logprob: -10.129785537719727
    6. '
' → logprob: -10.629785537719727
    7. 'dp' → logprob: -11.754785537719727
    8. 'pos' → logprob: -12.754785537719727
    9. 'max' → logprob: -13.129785537719727
    10. ' next' → logprob: -13.629785537719727

Token 1342: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0021744086407124996
    2. '
' → logprob: -7.252174377441406
    3. 'n' → logprob: -8.127174377441406
    4. 'A' → logprob: -8.252174377441406
    5. '```' → logprob: -8.502174377441406
    6. 'from' → logprob: -8.627174377441406
    7. '[next' → logprob: -8.627174377441406
    8. '#' → logprob: -9.377174377441406
    9. ' next' → logprob: -10.002174377441406
    10. '(next' → logprob: -10.502174377441406

Token 1343: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.747651219367981
    2. '=' → logprob: -0.997651219367981
    3. '```' → logprob: -3.2476511001586914
    4. '[' → logprob: -3.4976511001586914
    5. '_positions' → logprob: -4.497651100158691
    6. '_pos' → logprob: -4.497651100158691
    7. '[i' → logprob: -4.747651100158691
    8. '=[' → logprob: -5.122651100158691
    9. '[pos' → logprob: -5.247651100158691
    10. '
' → logprob: -5.372651100158691

Token 1344: ' for' (ID: 395)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06262214481830597
    2. '
' → logprob: -3.4376220703125
    3. '\n' → logprob: -4.6876220703125
    4. '`
' → logprob: -4.9376220703125
    5. ' next' → logprob: -5.3126220703125
    6. 'n' → logprob: -6.4376220703125
    7. '```' → logprob: -6.4376220703125
    8. 'import' → logprob: -7.1876220703125
    9. '`' → logprob: -7.6876220703125
    10. '\' → logprob: -7.6876220703125

Token 1345: ' Anna' (ID: 34101)
  Prédit: 'anna'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.03770839795470238
    2. 'A' → logprob: -3.537708282470703
    3. 'Anna' → logprob: -5.537708282470703
    4. '```' → logprob: -6.537708282470703
    5. ' anna' → logprob: -6.787708282470703
    6. '0' → logprob: -8.037708282470703
    7. '   ' → logprob: -9.162708282470703
    8. '
' → logprob: -9.162708282470703
    9. 'ann' → logprob: -9.287708282470703
    10. '500' → logprob: -9.412708282470703

Token 1346: '

' (ID: 279)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.017320431768894196
    2. '
' → logprob: -4.26732063293457
    3. 'n' → logprob: -6.89232063293457
    4. 'import' → logprob: -7.64232063293457
    5. '```' → logprob: -7.64232063293457
    6. ' next' → logprob: -7.76732063293457
    7. '`
' → logprob: -8.51732063293457
    8. '\n' → logprob: -8.51732063293457
    9. 'from' → logprob: -8.89232063293457
    10. '``' → logprob: -10.01732063293457

Token 1347: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0004315036640036851
    2. 'import' → logprob: -8.750431060791016
    3. 'n' → logprob: -9.125431060791016
    4. 'from' → logprob: -9.500431060791016
    5. '
' → logprob: -9.875431060791016
    6. '```' → logprob: -11.250431060791016
    7. ' next' → logprob: -11.750431060791016
    8. '#' → logprob: -12.125431060791016
    9. '``' → logprob: -13.500431060791016
    10. 'max' → logprob: -13.500431060791016

Token 1348: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8118320107460022
    2. '=' → logprob: -0.9368320107460022
    3. ' =' → logprob: -2.8118319511413574
    4. '_pos' → logprob: -3.0618319511413574
    5. '```' → logprob: -3.9368319511413574
    6. '[' → logprob: -4.436831951141357
    7. '_=' → logprob: -4.436831951141357
    8. '=[' → logprob: -5.311831951141357
    9. '_arr' → logprob: -6.061831951141357
    10. '_idx' → logprob: -6.686831951141357

Token 1349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08931467682123184
    2. ' =' → logprob: -2.4643146991729736
    3. '=[' → logprob: -8.464314460754395
    4. '=[[' → logprob: -9.339314460754395
    5. '```' → logprob: -9.964314460754395
    6. '=
' → logprob: -12.089314460754395
    7. '=[]' → logprob: -12.214314460754395
    8. '[' → logprob: -12.339314460754395
    9. ' =[' → logprob: -12.589314460754395
    10. '_pos' → logprob: -13.089314460754395

Token 1350: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0004319804720580578
    2. '[' → logprob: -8.000432014465332
    3. ' [[' → logprob: -9.250432014465332
    4. ' [' → logprob: -15.000432014465332
    5. '[A' → logprob: -16.500431060791016
    6. '([[' → logprob: -19.000431060791016
    7. '[int' → logprob: -19.125431060791016
    8. '[['' → logprob: -19.125431060791016
    9. '[-' → logprob: -19.250431060791016
    10. '[
' → logprob: -19.250431060791016

Token 1351: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.053587015718221664
    2. 'A' → logprob: -3.553586959838867
    3. '-' → logprob: -3.928586959838867
    4. 'max' → logprob: -6.553586959838867
    5. '0' → logprob: -6.678586959838867
    6. 'False' → logprob: -8.053586959838867
    7. 'inf' → logprob: -8.053586959838867
    8. '(' → logprob: -9.678586959838867
    9. '500' → logprob: -9.678586959838867
    10. '-INF' → logprob: -9.678586959838867

Token 1352: ']*(' (ID: 92627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09751441329717636
    2. ' for' → logprob: -2.5975143909454346
    3. ']' → logprob: -4.222514629364014
    4. ']*(' → logprob: -5.972514629364014
    5. ']*' → logprob: -6.847514629364014
    6. '+' → logprob: -9.597514152526855
    7. '   ' → logprob: -10.097514152526855
    8. ']+' → logprob: -10.097514152526855
    9. '	for' → logprob: -11.847514152526855
    10. '0' → logprob: -11.972514152526855

Token 1353: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003195535857230425
    2. '(max' → logprob: -5.753195762634277
    3. '100' → logprob: -11.253195762634277
    4. '[max' → logprob: -13.253195762634277
    5. ' max' → logprob: -13.503195762634277
    6. '101' → logprob: -13.878195762634277
    7. '(' → logprob: -15.378195762634277
    8. ',max' → logprob: -16.00319480895996
    9. '=max' → logprob: -16.12819480895996
    10. '+' → logprob: -16.25319480895996

Token 1354: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0061388881877064705
    2. '+' → logprob: -5.256138801574707
    3. 'card' → logprob: -7.381138801574707
    4. '1' → logprob: -9.381138801574707
    5. '_cards' → logprob: -9.881138801574707
    6. '_' → logprob: -10.506138801574707
    7. '```' → logprob: -10.756138801574707
    8. 'Card' → logprob: -11.256138801574707
    9. '_val' → logprob: -11.506138801574707
    10. '_value' → logprob: -11.631138801574707

Token 1355: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.644463479053229e-05
    2. ' +' → logprob: -10.875046730041504
    3. ')+' → logprob: -11.375046730041504
    4. '+
' → logprob: -12.250046730041504
    5. '100' → logprob: -12.750046730041504
    6. ')' → logprob: -12.875046730041504
    7. '```' → logprob: -12.875046730041504
    8. '1' → logprob: -14.250046730041504
    9. '+[' → logprob: -14.500046730041504
    10. '[' → logprob: -15.125046730041504

Token 1356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004114850424230099
    2. '2' → logprob: -5.504114627838135
    3. '100' → logprob: -11.379115104675293
    4. ' ' → logprob: -11.754115104675293
    5. ')' → logprob: -12.879115104675293
    6. '   ' → logprob: -13.004115104675293
    7. '10' → logprob: -13.129115104675293
    8. '101' → logprob: -13.254115104675293
    9. '5' → logprob: -13.504115104675293
    10. '+' → logprob: -13.816615104675293

Token 1357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016325322212651372
    2. 'for' → logprob: -9.250163078308105
    3. ' )' → logprob: -9.875163078308105
    4. ' for' → logprob: -12.000163078308105
    5. ')]' → logprob: -12.000163078308105
    6. ']' → logprob: -12.750163078308105
    7. ')
' → logprob: -15.500163078308105
    8. '   ' → logprob: -16.625164031982422
    9. ' ' → logprob: -17.250164031982422
    10. '+' → logprob: -18.000164031982422

Token 1358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12719927728176117
    2. ' for' → logprob: -2.127199172973633
    3. ']' → logprob: -8.252199172973633
    4. '[:]' → logprob: -12.377199172973633
    5. '	for' → logprob: -12.877199172973633
    6. '
' → logprob: -13.752199172973633
    7. ' ' → logprob: -13.877199172973633
    8. ')' → logprob: -14.002199172973633
    9. '   ' → logprob: -14.877199172973633
    10. ']
' → logprob: -15.877199172973633

Token 1359: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019496219232678413
    2. '_A' → logprob: -4.019496440887451
    3. '_range' → logprob: -7.894496440887451
    4. ' _' → logprob: -8.269495964050293
    5. 'i' → logprob: -8.394495964050293
    6. '_i' → logprob: -8.769495964050293
    7. 'range' → logprob: -9.019495964050293
    8. 'A' → logprob: -9.269495964050293
    9. '   ' → logprob: -10.019495964050293
    10. ' range' → logprob: -10.269495964050293

Token 1360: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016544418409466743
    2. ' range' → logprob: -4.141544342041016
    3. 'i' → logprob: -8.391544342041016
    4. '_' → logprob: -8.641544342041016
    5. '   ' → logprob: -10.266544342041016
    6. '_range' → logprob: -10.641544342041016
    7. '(range' → logprob: -10.891544342041016
    8. '_A' → logprob: -12.016544342041016
    9. 'in' → logprob: -12.016544342041016
    10. '
' → logprob: -12.391544342041016

Token 1361: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7848862373502925e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -15.125027656555176
    4. '   ' → logprob: -17.375028610229492
    5. '
' → logprob: -18.375028610229492
    6. '	range' → logprob: -20.000028610229492
    7. '#' → logprob: -22.000028610229492
    8. ' ' → logprob: -22.125028610229492
    9. 'reverse' → logprob: -22.125028610229492
    10. '```' → logprob: -22.375028610229492

Token 1362: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014328152872622013
    2. '(A' → logprob: -4.2643280029296875
    3. 'range' → logprob: -10.264328002929688
    4. ' A' → logprob: -10.264328002929688
    5. '(' → logprob: -10.389328002929688
    6. 'Anna' → logprob: -10.639328002929688
    7. '   ' → logprob: -11.014328002929688
    8. '[A' → logprob: -11.639328002929688
    9. ' (' → logprob: -12.639328002929688
    10. '500' → logprob: -12.639328002929688

Token 1363: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5067899227142334
    2. '+' → logprob: -1.0067899227142334
    3. ')]' → logprob: -3.5067899227142334
    4. ' -' → logprob: -6.6317901611328125
    5. ')][' → logprob: -7.6317901611328125
    6. ' +' → logprob: -8.131790161132812
    7. ')]
' → logprob: -10.006790161132812
    8. ')' → logprob: -10.756790161132812
    9. '   ' → logprob: -11.631790161132812
    10. ')])' → logprob: -12.506790161132812

Token 1364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '+' → logprob: -12.750004768371582
    3. '2' → logprob: -14.000004768371582
    4. '   ' → logprob: -14.625004768371582
    5. ' ' → logprob: -15.000004768371582
    6. '```' → logprob: -15.750004768371582
    7. '
' → logprob: -16.1250057220459
    8. '0' → logprob: -16.3750057220459
    9. ')' → logprob: -16.5000057220459
    10. '``' → logprob: -17.5000057220459

Token 1365: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40124887228012085
    2. ')]' → logprob: -1.1512489318847656
    3. ')]
' → logprob: -4.776248931884766
    4. ']
' → logprob: -5.651248931884766
    5. ')' → logprob: -6.901248931884766
    6. ')]

' → logprob: -6.901248931884766
    7. ']

' → logprob: -8.151248931884766
    8. 'for' → logprob: -11.276248931884766
    9. '])' → logprob: -12.026248931884766
    10. ']]
' → logprob: -12.401248931884766

Token 1366: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019962044898420572
    2. 'i' → logprob: -7.251996040344238
    3. 'next' → logprob: -7.876996040344238
    4. ' for' → logprob: -8.251996040344238
    5. 'pos' → logprob: -8.376996040344238
    6. '
' → logprob: -8.501996040344238
    7. '```' → logprob: -9.376996040344238
    8. 'prev' → logprob: -10.001996040344238
    9. ']' → logprob: -10.751996040344238
    10. ')' → logprob: -11.251996040344238

Token 1367: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049617353826761246
    2. 'A' → logprob: -3.049617290496826
    3. 'pos' → logprob: -7.549617290496826
    4. ' i' → logprob: -8.174617767333984
    5. ' A' → logprob: -9.174617767333984
    6. 'a' → logprob: -9.674617767333984
    7. '_A' → logprob: -11.299617767333984
    8. 'idx' → logprob: -11.674617767333984
    9. 'x' → logprob: -12.049617767333984
    10. '
' → logprob: -12.174617767333984

Token 1368: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5247488021850586
    2. ' in' → logprob: -0.8997488021850586
    3. 'A' → logprob: -7.524748802185059
    4. 'i' → logprob: -7.899748802185059
    5. '=' → logprob: -8.899748802185059
    6. '=A' → logprob: -9.274748802185059
    7. 'range' → logprob: -9.274748802185059
    8. '
' → logprob: -9.524748802185059
    9. ' =' → logprob: -9.774748802185059
    10. ' A' → logprob: -10.149748802185059

Token 1369: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02501615323126316
    2. 'A' → logprob: -4.4000163078308105
    3. ' range' → logprob: -4.9000163078308105
    4. 'max' → logprob: -6.1500163078308105
    5. 'r' → logprob: -6.9000163078308105
    6. 'a' → logprob: -7.6500163078308105
    7. 'c' → logprob: -7.9000163078308105
    8. 're' → logprob: -8.525015830993652
    9. 'ra' → logprob: -8.525015830993652
    10. ' reversed' → logprob: -9.400015830993652

Token 1370: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11680551618337631
    2. 'max' → logprob: -2.2418055534362793
    3. '(max' → logprob: -5.991805553436279
    4. '(' → logprob: -6.991805553436279
    5. '0' → logprob: -7.616805553436279
    6. ' max' → logprob: -10.366805076599121
    7. '100' → logprob: -10.866805076599121
    8. ' ' → logprob: -12.241805076599121
    9. '[max' → logprob: -13.241805076599121
    10. ',max' → logprob: -13.491805076599121

Token 1371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38697198033332825
    2. 'max' → logprob: -1.1369719505310059
    3. '0' → logprob: -9.761972427368164
    4. '(max' → logprob: -10.511972427368164
    5. ' max' → logprob: -11.886972427368164
    6. '100' → logprob: -12.261972427368164
    7. '(' → logprob: -13.761972427368164
    8. ',max' → logprob: -14.136972427368164
    9. '[max' → logprob: -14.886972427368164
    10. '=max' → logprob: -15.011972427368164

Token 1372: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02327471412718296
    2. ',max' → logprob: -4.023274898529053
    3. ' ,' → logprob: -5.398274898529053
    4. 'max' → logprob: -8.273274421691895
    5. '0' → logprob: -8.523274421691895
    6. '(max' → logprob: -10.148274421691895
    7. '100' → logprob: -10.398274421691895
    8. ',A' → logprob: -10.773274421691895
    9. ',
' → logprob: -11.148274421691895
    10. ',c' → logprob: -12.398274421691895

Token 1373: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.007556220982223749
    2. '100' → logprob: -6.007556438446045
    3. 'card' → logprob: -6.132556438446045
    4. '+' → logprob: -6.882556438446045
    5. 'Card' → logprob: -7.632556438446045
    6. '```' → logprob: -7.757556438446045
    7. '000' → logprob: -8.632555961608887
    8. '0' → logprob: -9.132555961608887
    9. '001' → logprob: -9.257555961608887
    10. '_CARD' → logprob: -9.382555961608887

Token 1374: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015359772078227252
    2. ' +' → logprob: -9.250153541564941
    3. '+
' → logprob: -10.000153541564941
    4. '```' → logprob: -11.875153541564941
    5. '
' → logprob: -12.875153541564941
    6. ')+' → logprob: -14.250153541564941
    7. '1' → logprob: -14.625153541564941
    8. ',' → logprob: -15.125153541564941
    9. '+c' → logprob: -16.125154495239258
    10. ')' → logprob: -16.250154495239258

Token 1375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4369797706604004
    2. '+' → logprob: -1.0619797706604004
    3. '100' → logprob: -4.9369797706604
    4. '```' → logprob: -7.5619797706604
    5. '=' → logprob: -8.811979293823242
    6. ']+' → logprob: -9.436979293823242
    7. ' +' → logprob: -9.936979293823242
    8. '001' → logprob: -10.061979293823242
    9. '101' → logprob: -10.186979293823242
    10. 'A' → logprob: -10.436979293823242

Token 1376: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13254809379577637
    2. '):' → logprob: -3.0075480937957764
    3. ']:
' → logprob: -3.1325480937957764
    4. ')' → logprob: -4.7575483322143555
    5. ']:' → logprob: -5.0075483322143555
    6. ']' → logprob: -5.7575483322143555
    7. '   ' → logprob: -6.0075483322143555
    8. ':' → logprob: -6.1325483322143555
    9. ':
' → logprob: -6.2575483322143555
    10. '][' → logprob: -6.5075483322143555

Token 1377: '   ' (ID: 271)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0036985352635383606
    2. ' next' → logprob: -6.003698348999023
    3. '   ' → logprob: -6.753698348999023
    4. '	next' → logprob: -10.003698348999023
    5. '```' → logprob: -12.753698348999023
    6. '[next' → logprob: -13.003698348999023
    7. 'for' → logprob: -13.128698348999023
    8. '
' → logprob: -13.753698348999023
    9. '_next' → logprob: -14.628698348999023
    10. '    
' → logprob: -14.753698348999023

Token 1378: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -5.2166411478538066e-05
    2. ' next' → logprob: -10.500052452087402
    3. '   ' → logprob: -11.250052452087402
    4. 'if' → logprob: -11.500052452087402
    5. 'for' → logprob: -14.375052452087402
    6. '	next' → logprob: -15.000052452087402
    7. 'Next' → logprob: -15.750052452087402
    8. '[next' → logprob: -15.750052452087402
    9. '```' → logprob: -16.750051498413086
    10. '(next' → logprob: -16.750051498413086

Token 1379: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.704065213445574e-05
    2. 'pos' → logprob: -10.125046730041504
    3. '[A' → logprob: -13.250046730041504
    4. '```' → logprob: -13.500046730041504
    5. '
' → logprob: -14.375046730041504
    6. 'A' → logprob: -14.625046730041504
    7. '][' → logprob: -14.875046730041504
    8. 'Pos' → logprob: -14.875046730041504
    9. '=A' → logprob: -14.875046730041504
    10. '[-' → logprob: -15.250046730041504

Token 1380: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.004263589158654213
    2. '[-' → logprob: -5.629263401031494
    3. 'A' → logprob: -8.129263877868652
    4. '=A' → logprob: -8.379263877868652
    5. '[' → logprob: -10.129263877868652
    6. '=' → logprob: -10.379263877868652
    7. '   ' → logprob: -10.879263877868652
    8. ' [' → logprob: -11.129263877868652
    9. '
' → logprob: -12.504263877868652
    10. '    
' → logprob: -12.504263877868652

Token 1381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07113666087388992
    2. '[' → logprob: -4.071136474609375
    3. '[A' → logprob: -4.196136474609375
    4. '-' → logprob: -4.321136474609375
    5. ']=' → logprob: -5.071136474609375
    6. ']' → logprob: -5.071136474609375
    7. '[i' → logprob: -5.696136474609375
    8. '[
' → logprob: -6.821136474609375
    9. '[I' → logprob: -6.821136474609375
    10. '[c' → logprob: -6.946136474609375

Token 1382: 'c' (ID: 66)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0015927036292850971
    2. '-INF' → logprob: -6.751592636108398
    3. 'c' → logprob: -8.251592636108398
    4. '-' → logprob: -9.876592636108398
    5. '
' → logprob: -10.501592636108398
    6. '=' → logprob: -10.751592636108398
    7. '_INF' → logprob: -10.876592636108398
    8. ' INF' → logprob: -11.251592636108398
    9. ']' → logprob: -12.126592636108398
    10. '   ' → logprob: -12.126592636108398

Token 1383: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012096378486603498
    2. '=-' → logprob: -7.751209735870361
    3. ' =' → logprob: -8.126209259033203
    4. ']=' → logprob: -8.251209259033203
    5. '=
' → logprob: -8.751209259033203
    6. ']=-' → logprob: -10.376209259033203
    7. ']' → logprob: -10.751209259033203
    8. '   ' → logprob: -12.751209259033203
    9. '=A' → logprob: -12.876209259033203
    10. '=int' → logprob: -13.376209259033203

Token 1384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003476209531072527
    2. ' =' → logprob: -8.000348091125488
    3. '=-' → logprob: -11.750348091125488
    4. '=
' → logprob: -12.500348091125488
    5. '=int' → logprob: -15.125348091125488
    6. '=A' → logprob: -15.875348091125488
    7. '   ' → logprob: -17.500347137451172
    8. ']=' → logprob: -17.625347137451172
    9. '=True' → logprob: -17.625347137451172
    10. '=(-' → logprob: -17.750347137451172

Token 1385: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.40041807293891907
    2. '-' → logprob: -1.2754180431365967
    3. '-INF' → logprob: -3.0254180431365967
    4. 'A' → logprob: -6.775418281555176
    5. '-inf' → logprob: -7.275418281555176
    6. '-A' → logprob: -9.275418281555176
    7. ' -' → logprob: -9.900418281555176
    8. ' INF' → logprob: -10.275418281555176
    9. '_INF' → logprob: -10.400418281555176
    10. 'IN' → logprob: -10.900418281555176

Token 1386: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001992397475987673
    2. ' for' → logprob: -6.376992225646973
    3. '
' → logprob: -8.501992225646973
    4. '```' → logprob: -9.876992225646973
    5. 'A' → logprob: -11.376992225646973
    6. 'i' → logprob: -11.626992225646973
    7. '   ' → logprob: -12.251992225646973
    8. '	for' → logprob: -12.876992225646973
    9. ')' → logprob: -13.126992225646973
    10. ' 
' → logprob: -13.251992225646973

Token 1387: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002072357019642368
    2. '```' → logprob: -8.75020694732666
    3. ' for' → logprob: -10.25020694732666
    4. '
' → logprob: -11.62520694732666
    5. '``' → logprob: -13.25020694732666
    6. 'i' → logprob: -14.37520694732666
    7. '   ' → logprob: -14.75020694732666
    8. 'For' → logprob: -14.87520694732666
    9. '    
' → logprob: -15.12520694732666
    10. '`' → logprob: -15.37520694732666

Token 1388: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06207938492298126
    2. 'i' → logprob: -2.812079429626465
    3. 'range' → logprob: -10.062079429626465
    4. ' A' → logprob: -10.437079429626465
    5. 'pos' → logprob: -11.062079429626465
    6. '   ' → logprob: -11.312079429626465
    7. '_A' → logprob: -12.062079429626465
    8. 'a' → logprob: -13.812079429626465
    9. ' i' → logprob: -13.812079429626465
    10. 'in' → logprob: -14.312079429626465

Token 1389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10707966983318329
    2. 'in' → logprob: -2.3570797443389893
    3. 'A' → logprob: -5.35707950592041
    4. ' A' → logprob: -6.48207950592041
    5. '   ' → logprob: -7.60707950592041
    6. '=A' → logprob: -9.73207950592041
    7. '=' → logprob: -11.48207950592041
    8. '_A' → logprob: -12.10707950592041
    9. ' i' → logprob: -12.48207950592041
    10. ' =' → logprob: -12.48207950592041

Token 1390: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20161935687065125
    2. 'range' → logprob: -1.7016193866729736
    3. ' range' → logprob: -9.076619148254395
    4. ' A' → logprob: -9.576619148254395
    5. 're' → logprob: -11.701619148254395
    6. '   ' → logprob: -11.826619148254395
    7. '
' → logprob: -13.076619148254395
    8. '(A' → logprob: -13.201619148254395
    9. '[A' → logprob: -14.076619148254395
    10. ' ' → logprob: -14.201619148254395

Token 1391: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1517960956552997e-05
    2. ' A' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.625011444091797
    4. '(A' → logprob: -16.875011444091797
    5. '
' → logprob: -17.375011444091797
    6. '	A' → logprob: -17.750011444091797
    7. ' ' → logprob: -19.625011444091797
    8. '_A' → logprob: -20.250011444091797
    9. '```' → logprob: -20.375011444091797
    10. ',A' → logprob: -20.875011444091797

Token 1392: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017958412354346365
    2. ' -' → logprob: -8.625179290771484
    3. '-
' → logprob: -16.750179290771484
    4. '   ' → logprob: -17.500179290771484
    5. '```' → logprob: -17.875179290771484
    6. '	' → logprob: -18.000179290771484
    7. '
' → logprob: -18.375179290771484
    8. ')' → logprob: -18.875179290771484
    9. ')-' → logprob: -19.125179290771484
    10. '1' → logprob: -19.625179290771484

Token 1393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009171743295155466
    2. '2' → logprob: -7.000916957855225
    3. '
' → logprob: -13.125917434692383
    4. '```' → logprob: -13.500917434692383
    5. '-' → logprob: -13.875917434692383
    6. ' ' → logprob: -14.625917434692383
    7. '3' → logprob: -15.500917434692383
    8. '   ' → logprob: -15.500917434692383
    9. '5' → logprob: -16.438417434692383
    10. '0' → logprob: -16.563417434692383

Token 1394: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5649557113647461
    2. '][' → logprob: -1.689955711364746
    3. ',' → logprob: -1.814955711364746
    4. ' -' → logprob: -3.189955711364746
    5. ' ,' → logprob: -3.814955711364746
    6. ',-' → logprob: -4.689955711364746
    7. '][-' → logprob: -5.064955711364746
    8. ',i' → logprob: -6.564955711364746
    9. '+' → logprob: -6.689955711364746
    10. ']' → logprob: -7.189955711364746

Token 1395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '
' → logprob: -17.375
    4. '-' → logprob: -18.125
    5. '``' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. '`' → logprob: -20.875
    8. ' -' → logprob: -20.875
    9. '0' → logprob: -21.375
    10. '１' → logprob: -21.5

Token 1396: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17404884099960327
    2. ',' → logprob: -2.174048900604248
    3. ',-' → logprob: -3.924048900604248
    4. '):
' → logprob: -4.299048900604248
    5. '):' → logprob: -4.674048900604248
    6. ' -' → logprob: -7.049048900604248
    7. '```' → logprob: -7.049048900604248
    8. ':' → logprob: -7.799048900604248
    9. '   ' → logprob: -8.29904842376709
    10. ')' → logprob: -8.29904842376709

Token 1397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. '
' → logprob: -19.0
    4. '   ' → logprob: -19.75
    5. '-' → logprob: -21.5
    6. '１' → logprob: -21.625
    7. ' ' → logprob: -22.375
    8. '``' → logprob: -22.5
    9. ')' → logprob: -22.875
    10. ',' → logprob: -23.25

Token 1398: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13082149624824524
    2. '):' → logprob: -2.130821466445923
    3. '   ' → logprob: -6.630821704864502
    4. '-' → logprob: -7.005821704864502
    5. ':' → logprob: -7.380821704864502
    6. ')' → logprob: -7.755821704864502
    7. '```' → logprob: -8.755821228027344
    8. '):
' → logprob: -9.005821228027344
    9. ':
' → logprob: -9.255821228027344
    10. ',' → logprob: -9.630821228027344

Token 1399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007877510972321033
    2. ' for' → logprob: -5.632877349853516
    3. 'for' → logprob: -5.882877349853516
    4. '```' → logprob: -7.382877349853516
    5. '   ' → logprob: -7.882877349853516
    6. '       ' → logprob: -8.757877349853516
    7. '	for' → logprob: -8.882877349853516
    8. ' next' → logprob: -9.382877349853516
    9. 'next' → logprob: -10.632877349853516
    10. '`' → logprob: -10.757877349853516

Token 1400: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21213966608047485
    2. 'next' → logprob: -1.83713960647583
    3. '   ' → logprob: -3.46213960647583
    4. ' for' → logprob: -8.337140083312988
    5. ' next' → logprob: -8.962140083312988
    6. '       ' → logprob: -10.087140083312988
    7. '[next' → logprob: -10.087140083312988
    8. 'from' → logprob: -11.712140083312988
    9. 'Next' → logprob: -12.087140083312988
    10. '_next' → logprob: -12.212140083312988

Token 1401: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006008075084537268
    2. '1' → logprob: -6.006008148193359
    3. 'max' → logprob: -6.256008148193359
    4. ' c' → logprob: -7.256008148193359
    5. 'range' → logprob: -7.881008148193359
    6. 'card' → logprob: -9.00600814819336
    7. 'num' → logprob: -9.25600814819336
    8. '   ' → logprob: -9.38100814819336
    9. 'j' → logprob: -10.13100814819336
    10. 'val' → logprob: -10.63100814819336

Token 1402: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31902632117271423
    2. 'in' → logprob: -1.3190263509750366
    3. '   ' → logprob: -5.319026470184326
    4. '=' → logprob: -8.319025993347168
    5. '	in' → logprob: -8.444025993347168
    6. 'range' → logprob: -8.944025993347168
    7. ' ' → logprob: -9.944025993347168
    8. ' =' → logprob: -10.319025993347168
    9. '0' → logprob: -10.319025993347168
    10. '1' → logprob: -10.569025993347168

Token 1403: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004648115020245314
    2. ' range' → logprob: -5.629648208618164
    3. '1' → logprob: -6.879648208618164
    4. '(' → logprob: -11.754648208618164
    5. '(range' → logprob: -12.004648208618164
    6. '   ' → logprob: -12.504648208618164
    7. 'max' → logprob: -14.004648208618164
    8. '0' → logprob: -15.504648208618164
    9. 'in' → logprob: -16.129648208618164
    10. ' ' → logprob: -16.629648208618164

Token 1404: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04369163140654564
    2. '(' → logprob: -3.168691635131836
    3. 'max' → logprob: -8.168691635131836
    4. '   ' → logprob: -8.293691635131836
    5. '(max' → logprob: -8.793691635131836
    6. '0' → logprob: -12.793691635131836
    7. '100' → logprob: -13.293691635131836
    8. ' ' → logprob: -14.293691635131836
    9. 'A' → logprob: -14.918691635131836
    10. '
' → logprob: -15.043691635131836

Token 1405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.721228368813172e-05
    2. 'max' → logprob: -9.375086784362793
    3. '0' → logprob: -13.500086784362793
    4. '100' → logprob: -14.875086784362793
    5. '   ' → logprob: -15.125086784362793
    6. '(max' → logprob: -16.50008773803711
    7. ' ' → logprob: -16.62508773803711
    8. '(' → logprob: -17.25008773803711
    9. ' max' → logprob: -18.00008773803711
    10. ',max' → logprob: -19.00008773803711

Token 1406: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.21798063814640045
    2. ',' → logprob: -2.3429806232452393
    3. 'max' → logprob: -2.3429806232452393
    4. 'A' → logprob: -6.842980861663818
    5. ',A' → logprob: -6.842980861663818
    6. '   ' → logprob: -7.467980861663818
    7. ',c' → logprob: -7.717980861663818
    8. '(max' → logprob: -8.46798038482666
    9. ',i' → logprob: -8.96798038482666
    10. 'c' → logprob: -9.71798038482666

Token 1407: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0005165747134014964
    2. 'card' → logprob: -8.250516891479492
    3. '   ' → logprob: -9.625516891479492
    4. '_pos' → logprob: -9.875516891479492
    5. '100' → logprob: -10.000516891479492
    6. 'pos' → logprob: -10.250516891479492
    7. 'Card' → logprob: -11.125516891479492
    8. '```' → logprob: -11.125516891479492
    9. 'max' → logprob: -11.750516891479492
    10. 'A' → logprob: -12.125516891479492

Token 1408: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04531795158982277
    2. ',' → logprob: -3.9203178882598877
    3. '   ' → logprob: -3.9203178882598877
    4. '1' → logprob: -6.920318126678467
    5. '=' → logprob: -7.170318126678467
    6. '```' → logprob: -7.545318126678467
    7. ' +' → logprob: -7.795318126678467
    8. '):
' → logprob: -8.045317649841309
    9. ',c' → logprob: -8.170317649841309
    10. ' ' → logprob: -8.545317649841309

Token 1409: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0008744205697439611
    2. '   ' → logprob: -8.375874519348145
    3. 'max' → logprob: -8.500874519348145
    4. '+' → logprob: -8.875874519348145
    5. '1' → logprob: -8.875874519348145
    6. 'A' → logprob: -9.125874519348145
    7. '```' → logprob: -10.375874519348145
    8. '
' → logprob: -12.000874519348145
    9. '0' → logprob: -12.500874519348145
    10. '=' → logprob: -13.000874519348145

Token 1410: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11703299731016159
    2. '   ' → logprob: -2.992033004760742
    3. '):
' → logprob: -3.242033004760742
    4. ':' → logprob: -5.117033004760742
    5. ':
' → logprob: -5.117033004760742
    6. '):' → logprob: -5.617033004760742
    7. ',' → logprob: -5.867033004760742
    8. ')' → logprob: -7.367033004760742
    9. '           ' → logprob: -8.367033004760742
    10. '=' → logprob: -8.492033004760742

Token 1411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0401640310883522
    2. ' next' → logprob: -3.415163993835449
    3. '	next' → logprob: -6.040163993835449
    4. '	' → logprob: -6.165163993835449
    5. 'next' → logprob: -6.415163993835449
    6. '	   ' → logprob: -9.41516399383545
    7. '   ' → logprob: -9.66516399383545
    8. '	       ' → logprob: -10.04016399383545
    9. '[next' → logprob: -10.04016399383545
    10. '```' → logprob: -10.41516399383545

Token 1412: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0022900181356817484
    2. '       ' → logprob: -6.50229024887085
    3. '   ' → logprob: -7.87729024887085
    4. ' next' → logprob: -8.252289772033691
    5. '	next' → logprob: -9.252289772033691
    6. 'if' → logprob: -10.002289772033691
    7. '[next' → logprob: -12.627289772033691
    8. '           ' → logprob: -14.002289772033691
    9. '(next' → logprob: -14.752289772033691
    10. '_next' → logprob: -14.752289772033691

Token 1413: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00017362393555231392
    2. '```' → logprob: -9.000173568725586
    3. 'pos' → logprob: -10.375173568725586
    4. '[pos' → logprob: -12.000173568725586
    5. '[i' → logprob: -12.000173568725586
    6. 'Pos' → logprob: -13.125173568725586
    7. '   ' → logprob: -13.750173568725586
    8. '	pos' → logprob: -14.375173568725586
    9. '_positions' → logprob: -14.625173568725586
    10. '[' → logprob: -15.000173568725586

Token 1414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.632542913896032e-05
    2. '   ' → logprob: -10.500046730041504
    3. '[' → logprob: -11.875046730041504
    4. ' [' → logprob: -12.625046730041504
    5. '][' → logprob: -12.625046730041504
    6. '[I' → logprob: -13.625046730041504
    7. '```' → logprob: -14.125046730041504
    8. 'i' → logprob: -14.375046730041504
    9. '=' → logprob: -14.750046730041504
    10. ')[' → logprob: -14.875046730041504

Token 1415: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.478126585483551
    2. '[i' → logprob: -1.1031265258789062
    3. '=' → logprob: -3.7281265258789062
    4. ']=' → logprob: -5.103126525878906
    5. '=i' → logprob: -5.478126525878906
    6. '[' → logprob: -5.478126525878906
    7. ']' → logprob: -6.228126525878906
    8. '   ' → logprob: -6.228126525878906
    9. '[
' → logprob: -6.353126525878906
    10. '```' → logprob: -6.478126525878906

Token 1416: 'c' (ID: 66)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17941460013389587
    2. ']' → logprob: -2.9294145107269287
    3. 'next' → logprob: -3.1794145107269287
    4. 'c' → logprob: -3.3044145107269287
    5. '0' → logprob: -4.179414749145508
    6. '   ' → logprob: -5.054414749145508
    7. '][' → logprob: -5.429414749145508
    8. ']=' → logprob: -6.679414749145508
    9. '[i' → logprob: -7.429414749145508
    10. ')' → logprob: -7.554414749145508

Token 1417: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012098236009478569
    2. ' =' → logprob: -4.76209831237793
    3. ']=' → logprob: -6.26209831237793
    4. ']' → logprob: -6.51209831237793
    5. '=
' → logprob: -9.88709831237793
    6. '   ' → logprob: -10.88709831237793
    7. ' next' → logprob: -12.51209831237793
    8. '[next' → logprob: -12.76209831237793
    9. ')=' → logprob: -13.01209831237793
    10. ',next' → logprob: -13.26209831237793

Token 1418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.078839502763003e-05
    2. ' =' → logprob: -9.625090599060059
    3. '=
' → logprob: -10.625090599060059
    4. 'next' → logprob: -15.750090599060059
    5. ']=' → logprob: -15.875090599060059
    6. '=

' → logprob: -16.875091552734375
    7. '[next' → logprob: -17.000091552734375
    8. ' next' → logprob: -17.750091552734375
    9. '   ' → logprob: -17.875091552734375
    10. ')=' → logprob: -18.000091552734375

Token 1419: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0004421127669047564
    2. ' next' → logprob: -7.750442028045654
    3. '   ' → logprob: -11.750442504882812
    4. '	next' → logprob: -12.625442504882812
    5. '(next' → logprob: -17.125442504882812
    6. '       ' → logprob: -17.625442504882812
    7. '
' → logprob: -17.750442504882812
    8. '0' → logprob: -18.250442504882812
    9. '[next' → logprob: -18.500442504882812
    10. '    ' → logprob: -19.500442504882812

Token 1420: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0027597027365118265
    2. '[i' → logprob: -6.50275993347168
    3. 'pos' → logprob: -7.12775993347168
    4. '```' → logprob: -7.87775993347168
    5. '   ' → logprob: -10.62775993347168
    6. '[pos' → logprob: -11.25275993347168
    7. '[' → logprob: -11.75275993347168
    8. 'i' → logprob: -12.25275993347168
    9. '`' → logprob: -12.37775993347168
    10. 'Pos' → logprob: -12.50275993347168

Token 1421: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.12127808178775e-05
    2. 'i' → logprob: -10.125051498413086
    3. '   ' → logprob: -11.500051498413086
    4. '[' → logprob: -14.750051498413086
    5. '```' → logprob: -15.375051498413086
    6. '(i' → logprob: -15.500051498413086
    7. '{i' → logprob: -16.375051498413086
    8. '       ' → logprob: -17.500051498413086
    9. '`' → logprob: -17.875051498413086
    10. '[I' → logprob: -18.375051498413086

Token 1422: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006049074232578278
    2. 'i' → logprob: -5.881049156188965
    3. '][' → logprob: -6.006049156188965
    4. '   ' → logprob: -8.256049156188965
    5. '+' → logprob: -8.631049156188965
    6. '[' → logprob: -8.881049156188965
    7. '```' → logprob: -9.381049156188965
    8. ' [' → logprob: -11.256049156188965
    9. '{i' → logprob: -11.256049156188965
    10. '+i' → logprob: -11.381049156188965

Token 1423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009048703126609325
    2. 'i' → logprob: -4.884048938751221
    3. 'c' → logprob: -7.259048938751221
    4. '0' → logprob: -8.509048461914062
    5. '   ' → logprob: -8.634048461914062
    6. '][' → logprob: -9.259048461914062
    7. '```' → logprob: -9.259048461914062
    8. '
' → logprob: -9.509048461914062
    9. ' ' → logprob: -10.009048461914062
    10. ']' → logprob: -10.884048461914062

Token 1424: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5266603231430054
    2. '][' → logprob: -0.9016603231430054
    3. '[' → logprob: -5.776660442352295
    4. '   ' → logprob: -8.651659965515137
    5. '       ' → logprob: -9.776659965515137
    6. '```' → logprob: -10.401659965515137
    7. '[i' → logprob: -10.776659965515137
    8. '	' → logprob: -11.026659965515137
    9. ' ][' → logprob: -11.151659965515137
    10. ']' → logprob: -11.151659965515137

Token 1425: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.080963092041202e-06
    2. '   ' → logprob: -13.250004768371582
    3. '
' → logprob: -13.375004768371582
    4. '```' → logprob: -14.125004768371582
    5. ' c' → logprob: -15.125004768371582
    6. '[c' → logprob: -15.625004768371582
    7. 'for' → logprob: -15.875004768371582
    8. '[' → logprob: -16.0000057220459
    9. '       ' → logprob: -16.6250057220459
    10. '	c' → logprob: -16.8750057220459

Token 1426: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015611383132636547
    2. 'next' → logprob: -4.515611171722412
    3. '```' → logprob: -6.015611171722412
    4. '
' → logprob: -6.890611171722412
    5. 'if' → logprob: -7.515611171722412
    6. '    
' → logprob: -8.26561164855957
    7. ' next' → logprob: -9.39061164855957
    8. ' if' → logprob: -10.01561164855957
    9. '	next' → logprob: -10.64061164855957
    10. '[next' → logprob: -11.01561164855957

Token 1428: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.016508186236023903
    2. '   ' → logprob: -4.266508102416992
    3. '```' → logprob: -7.266508102416992
    4. ' next' → logprob: -7.766508102416992
    5. 'if' → logprob: -8.141508102416992
    6. '[next' → logprob: -8.266508102416992
    7. '
' → logprob: -8.391508102416992
    8. '	next' → logprob: -8.766508102416992
    9. '    
' → logprob: -9.141508102416992
    10. 'for' → logprob: -9.641508102416992

Token 1429: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.5120287066092715e-05
    2. 'pos' → logprob: -10.875035285949707
    3. '```' → logprob: -11.500035285949707
    4. 'Pos' → logprob: -13.000035285949707
    5. '[pos' → logprob: -13.250035285949707
    6. '[i' → logprob: -13.875035285949707
    7. '_' → logprob: -14.625035285949707
    8. '_positions' → logprob: -15.125035285949707
    9. '   ' → logprob: -15.875035285949707
    10. '	pos' → logprob: -16.75003433227539

Token 1430: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020497082732617855
    2. '[' → logprob: -9.375205039978027
    3. '```' → logprob: -9.750205039978027
    4. '   ' → logprob: -10.125205039978027
    5. '[I' → logprob: -11.875205039978027
    6. 'i' → logprob: -12.750205039978027
    7. ' [' → logprob: -12.875205039978027
    8. '][' → logprob: -14.000205039978027
    9. '[line' → logprob: -14.000205039978027
    10. '    
' → logprob: -14.125205039978027

Token 1431: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31757962703704834
    2. '][' → logprob: -1.3175796270370483
    3. '   ' → logprob: -6.317579746246338
    4. '[A' → logprob: -6.692579746246338
    5. ']' → logprob: -7.692579746246338
    6. '```' → logprob: -8.44257926940918
    7. '[a' → logprob: -9.19257926940918
    8. ')[' → logprob: -9.31757926940918
    9. '       ' → logprob: -9.44257926940918
    10. '=' → logprob: -10.31757926940918

Token 1432: 'anna' (ID: 9332)
  Prédit: 'anna'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anna' → logprob: -0.00022916549642104656
    2. '   ' → logprob: -9.000228881835938
    3. ' anna' → logprob: -10.625228881835938
    4. ']' → logprob: -11.000228881835938
    5. 'ana' → logprob: -11.375228881835938
    6. '```' → logprob: -11.750228881835938
    7. 'a' → logprob: -12.250228881835938
    8. '[' → logprob: -12.375228881835938
    9. '0' → logprob: -12.625228881835938
    10. '           ' → logprob: -12.625228881835938

Token 1433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8219583075260743e-05
    2. '[' → logprob: -10.375038146972656
    3. '```' → logprob: -13.125038146972656
    4. ']' → logprob: -13.500038146972656
    5. '[I' → logprob: -13.750038146972656
    6. '   ' → logprob: -14.500038146972656
    7. '[
' → logprob: -14.500038146972656
    8. '][' → logprob: -14.750038146972656
    9. ' [' → logprob: -14.875038146972656
    10. '\[' → logprob: -16.000038146972656

Token 1434: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0115070641040802
    2. ']==' → logprob: -5.261507034301758
    3. '][' → logprob: -5.511507034301758
    4. ']=' → logprob: -6.386507034301758
    5. '   ' → logprob: -8.261507034301758
    6. '[i' → logprob: -9.636507034301758
    7. '][]' → logprob: -10.386507034301758
    8. '[' → logprob: -10.636507034301758
    9. ']
' → logprob: -10.761507034301758
    10. ']][' → logprob: -11.011507034301758

Token 1435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018515000119805336
    2. ' =' → logprob: -4.018515110015869
    3. '   ' → logprob: -9.393514633178711
    4. '=
' → logprob: -10.018514633178711
    5. '<|end|>' → logprob: -10.018514633178711
    6. '[' → logprob: -10.268514633178711
    7. '```' → logprob: -10.518514633178711
    8. '[next' → logprob: -10.643514633178711
    9. ']' → logprob: -11.018514633178711
    10. '[i' → logprob: -11.268514633178711

Token 1436: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020389800192788243
    2. ' i' → logprob: -8.500204086303711
    3. '	i' → logprob: -15.125204086303711
    4. '   ' → logprob: -17.25020408630371
    5. ')i' → logprob: -17.87520408630371
    6. '{i' → logprob: -18.25020408630371
    7. '$i' → logprob: -18.62520408630371
    8. '*i' → logprob: -18.87520408630371
    9. '%i' → logprob: -19.25020408630371
    10. ''i' → logprob: -20.00020408630371

Token 1437: '

' (ID: 279)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.013260935433208942
    2. '
' → logprob: -4.638260841369629
    3. '```' → logprob: -6.263260841369629
    4. 'def' → logprob: -6.888260841369629
    5. 'high' → logprob: -8.388260841369629
    6. 'lo' → logprob: -8.638260841369629
    7. 'l' → logprob: -9.138260841369629
    8. 'left' → logprob: -10.888260841369629
    9. ' low' → logprob: -11.638260841369629
    10. '    
' → logprob: -11.763260841369629

Token 1438: 'def' (ID: 1314)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.00023095356300473213
    2. '```' → logprob: -9.00023078918457
    3. 'def' → logprob: -9.87523078918457
    4. 'lo' → logprob: -10.62523078918457
    5. '
' → logprob: -10.62523078918457
    6. '    
' → logprob: -13.12523078918457
    7. 'l' → logprob: -13.12523078918457
    8. '``' → logprob: -13.62523078918457
    9. 'left' → logprob: -13.75023078918457
    10. ' low' → logprob: -14.50023078918457

Token 1439: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.24729256331920624
    2. 'can' → logprob: -1.9972925186157227
    3. 'check' → logprob: -2.4972925186157227
    4. 'sub' → logprob: -7.747292518615723
    5. 'def' → logprob: -7.997292518615723
    6. ' can' → logprob: -9.247292518615723
    7. '```' → logprob: -9.747292518615723
    8. ' is' → logprob: -9.997292518615723
    9. '
' → logprob: -10.122292518615723
    10. 'possible' → logprob: -10.747292518615723

Token 1440: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.05224977433681488
    2. 'sub' → logprob: -3.5522496700286865
    3. 'ub' → logprob: -4.177249908447266
    4. ' subse' → logprob: -5.677249908447266
    5. 'Sub' → logprob: -5.927249908447266
    6. '_Sub' → logprob: -8.927249908447266
    7. '_valid' → logprob: -8.927249908447266
    8. 'valid' → logprob: -9.052249908447266
    9. '```' → logprob: -9.052249908447266
    10. '-sub' → logprob: -10.052249908447266

Token 1441: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0010201864643022418
    2. 'seq' → logprob: -7.1260199546813965
    3. 's' → logprob: -9.001020431518555
    4. 'se' → logprob: -10.126020431518555
    5. 'sequ' → logprob: -10.626020431518555
    6. '_sequence' → logprob: -11.376020431518555
    7. '```' → logprob: -12.251020431518555
    8. '`' → logprob: -12.876020431518555
    9. '_seq' → logprob: -12.876020431518555
    10. 'string' → logprob: -13.126020431518555

Token 1442: '(sub' (ID: 19764)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.8550164699554443
    2. '(length' → logprob: -1.2300164699554443
    3. '(s' → logprob: -1.4800164699554443
    4. '(sub' → logprob: -3.7300164699554443
    5. '(len' → logprob: -4.730016708374023
    6. '(seq' → logprob: -5.230016708374023
    7. '(l' → logprob: -5.480016708374023
    8. '(substr' → logprob: -5.480016708374023
    9. '(' → logprob: -5.730016708374023
    10. '(start' → logprob: -6.355016708374023

Token 1443: '):
' (ID: 1883)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.33261173963546753
    2. 'quence' → logprob: -2.0826117992401123
    3. 'string' → logprob: -2.2076117992401123
    4. '):
' → logprob: -4.582611560821533
    5. '_sequence' → logprob: -4.832611560821533
    6. '```' → logprob: -5.207611560821533
    7. '
' → logprob: -5.457611560821533
    8. '[' → logprob: -5.457611560821533
    9. '(sequence' → logprob: -5.457611560821533
    10. ')' → logprob: -6.082611560821533

Token 1444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46994996070861816
    2. '```' → logprob: -1.0949499607086182
    3. ' pos' → logprob: -4.719949722290039
    4. '
' → logprob: -4.969949722290039
    5. '    
' → logprob: -5.594949722290039
    6. 'pos' → logprob: -5.719949722290039
    7. ' 
' → logprob: -5.969949722290039
    8. '    ' → logprob: -6.219949722290039
    9. '  
' → logprob: -6.219949722290039
    10. ':' → logprob: -6.344949722290039

Token 1445: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.5827429294586182
    2. '   ' → logprob: -1.3327429294586182
    3. ' pos' → logprob: -1.8327429294586182
    4. '```' → logprob: -4.457742691040039
    5. '	pos' → logprob: -5.582742691040039
    6. '
' → logprob: -6.457742691040039
    7. '``' → logprob: -7.832742691040039
    8. '       ' → logprob: -8.332742691040039
    9. '    ' → logprob: -9.207742691040039
    10. '    
' → logprob: -9.707742691040039

Token 1446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688984513282776
    2. ' =' → logprob: -1.1368898153305054
    3. '   ' → logprob: -11.886889457702637
    4. '=
' → logprob: -12.511889457702637
    5. '	' → logprob: -12.761889457702637
    6. ' =
' → logprob: -14.136889457702637
    7. ' ' → logprob: -14.136889457702637
    8. '_=' → logprob: -14.136889457702637
    9. '_' → logprob: -14.386889457702637
    10. '```' → logprob: -14.636889457702637

Token 1447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010337610729038715
    2. ' ' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.501033782958984
    4. '-' → logprob: -15.501033782958984
    5. ' -' → logprob: -15.876033782958984
    6. '=' → logprob: -17.751033782958984
    7. '```' → logprob: -18.001033782958984
    8. '
' → logprob: -18.251033782958984
    9. '	' → logprob: -18.376033782958984
    10. '[' → logprob: -18.626033782958984

Token 1448: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1449: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2725173532962799
    2. ' for' → logprob: -2.397517442703247
    3. '   ' → logprob: -3.022517442703247
    4. '```' → logprob: -3.147517442703247
    5. '
' → logprob: -3.647517442703247
    6. '	for' → logprob: -4.147517204284668
    7. ' ' → logprob: -5.647517204284668
    8. ':' → logprob: -6.022517204284668
    9. '<|end|>' → logprob: -6.272517204284668
    10. ':
' → logprob: -6.772517204284668

Token 1450: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001136050675995648
    2. ' for' → logprob: -7.12613582611084
    3. '   ' → logprob: -8.37613582611084
    4. '```' → logprob: -9.75113582611084
    5. '
' → logprob: -10.25113582611084
    6. '	for' → logprob: -12.25113582611084
    7. 'if' → logprob: -13.87613582611084
    8. '       ' → logprob: -14.50113582611084
    9. 'For' → logprob: -14.75113582611084
    10. '``' → logprob: -14.87613582611084

Token 1451: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.7146746763028204e-05
    2. 'x' → logprob: -10.62503719329834
    3. ' c' → logprob: -11.62503719329834
    4. 'card' → logprob: -12.87503719329834
    5. 'ch' → logprob: -14.00003719329834
    6. 'num' → logprob: -15.37503719329834
    7. 'v' → logprob: -15.62503719329834
    8. '   ' → logprob: -17.000036239624023
    9. '```' → logprob: -17.625036239624023
    10. 'val' → logprob: -18.250036239624023

Token 1452: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04982571676373482
    2. 'in' → logprob: -3.049825668334961
    3. '   ' → logprob: -7.049825668334961
    4. '	in' → logprob: -8.924825668334961
    5. ' =' → logprob: -9.299825668334961
    6. '=' → logprob: -9.424825668334961
    7. '_in' → logprob: -11.674825668334961
    8. '    ' → logprob: -11.674825668334961
    9. ' ' → logprob: -11.924825668334961
    10. '    
' → logprob: -12.049825668334961

Token 1453: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00024870390188880265
    2. ' sub' → logprob: -8.500248908996582
    3. 'range' → logprob: -10.125248908996582
    4. '   ' → logprob: -13.250248908996582
    5. 'c' → logprob: -13.875248908996582
    6. '
' → logprob: -14.000248908996582
    7. '	sub' → logprob: -14.625248908996582
    8. ' range' → logprob: -14.750248908996582
    9. ' ' → logprob: -15.250248908996582
    10. '[sub' → logprob: -15.875248908996582

Token 1454: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5452018976211548
    2. ':
' → logprob: -1.5452018976211548
    3. ':' → logprob: -1.9202018976211548
    4. '   ' → logprob: -3.4202017784118652
    5. ' =' → logprob: -4.045201778411865
    6. '=
' → logprob: -5.795201778411865
    7. '==' → logprob: -6.295201778411865
    8. '       ' → logprob: -6.295201778411865
    9. ' in' → logprob: -6.670201778411865
    10. '):
' → logprob: -6.920201778411865

Token 1455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025672605261206627
    2. '```' → logprob: -3.900672674179077
    3. ' if' → logprob: -5.775672435760498
    4. '        
' → logprob: -7.650672435760498
    5. 'if' → logprob: -7.900672435760498
    6. '<|end|>' → logprob: -8.150672912597656
    7. '``' → logprob: -8.275672912597656
    8. '   ' → logprob: -8.525672912597656
    9. '<|end|>' → logprob: -10.025672912597656
    10. ' 
' → logprob: -10.150672912597656

Token 1456: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.053151339292526245
    2. 'if' → logprob: -3.1781513690948486
    3. ' pos' → logprob: -4.9281511306762695
    4. ' if' → logprob: -6.1781511306762695
    5. '       ' → logprob: -7.8031511306762695
    6. 'next' → logprob: -9.42815113067627
    7. '           ' → logprob: -9.42815113067627
    8. '```' → logprob: -10.17815113067627
    9. '
' → logprob: -10.30315113067627
    10. '   ' → logprob: -10.42815113067627

Token 1457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024788661394268274
    2. ' =' → logprob: -6.002479076385498
    3. '=
' → logprob: -13.00247859954834
    4. '   ' → logprob: -14.25247859954834
    5. '       ' → logprob: -16.502479553222656
    6. '=int' → logprob: -16.877479553222656
    7. '=n' → logprob: -17.752479553222656
    8. '＝' → logprob: -18.127479553222656
    9. '=line' → logprob: -18.127479553222656
    10. '_=' → logprob: -18.252479553222656

Token 1458: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.014163863845169544
    2. ' next' → logprob: -4.264163970947266
    3. '(next' → logprob: -16.389163970947266
    4. '	next' → logprob: -16.639163970947266
    5. '[next' → logprob: -17.014163970947266
    6. '   ' → logprob: -17.139163970947266
    7. '```' → logprob: -18.889163970947266
    8. '.next' → logprob: -19.389163970947266
    9. '0' → logprob: -19.389163970947266
    10. '_next' → logprob: -19.639163970947266

Token 1459: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.36574100604048e-06
    2. 'pos' → logprob: -12.875004768371582
    3. '[pos' → logprob: -13.875004768371582
    4. '```' → logprob: -14.875004768371582
    5. '[_' → logprob: -15.625004768371582
    6. 'Pos' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '	pos' → logprob: -17.125003814697266
    9. ' _' → logprob: -17.625003814697266
    10. '`' → logprob: -17.625003814697266

Token 1460: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.005275141913443804
    2. 'pos' → logprob: -5.255275249481201
    3. '```' → logprob: -10.255274772644043
    4. '[' → logprob: -12.755274772644043
    5. '[i' → logprob: -13.130274772644043
    6. '[position' → logprob: -14.505274772644043
    7. '   ' → logprob: -15.755274772644043
    8. '	pos' → logprob: -15.880274772644043
    9. '_pos' → logprob: -15.880274772644043
    10. '`' → logprob: -16.13027572631836

Token 1461: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.31852197647094727
    2. '][' → logprob: -1.3185219764709473
    3. '[' → logprob: -5.318521976470947
    4. 'c' → logprob: -9.568521499633789
    5. '```' → logprob: -9.818521499633789
    6. '[C' → logprob: -10.318521499633789
    7. '[
' → logprob: -10.568521499633789
    8. '[pos' → logprob: -10.693521499633789
    9. '       ' → logprob: -10.943521499633789
    10. '   ' → logprob: -11.193521499633789

Token 1462: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: 0.0
    2. ' c' → logprob: -17.625
    3. ')c' → logprob: -20.25
    4. '	c' → logprob: -23.375
    5. '
' → logprob: -24.125
    6. '_c' → logprob: -24.75
    7. 'с' → logprob: -24.875
    8. '$c' → logprob: -25.25
    9. '[c' → logprob: -25.375
    10. '(c' → logprob: -25.625

Token 1463: ']
' (ID: 1592)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2811904847621918
    2. ']' → logprob: -1.6561905145645142
    3. '+' → logprob: -3.0311903953552246
    4. ' +' → logprob: -5.531190395355225
    5. ']
' → logprob: -7.156190395355225
    6. ' ]' → logprob: -7.656190395355225
    7. '+]' → logprob: -7.906190395355225
    8. '       ' → logprob: -8.781190872192383
    9. ']+=' → logprob: -9.156190872192383
    10. ' if' → logprob: -10.656190872192383

Token 1464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1660938411951065
    2. '+' → logprob: -2.0410938262939453
    3. ' +' → logprob: -4.041093826293945
    4. '
' → logprob: -5.916093826293945
    5. '```' → logprob: -6.041093826293945
    6. 'if' → logprob: -8.541093826293945
    7. 'If' → logprob: -9.416093826293945
    8. ' if' → logprob: -9.416093826293945
    9. '   ' → logprob: -10.541093826293945
    10. '``' → logprob: -10.791093826293945

Token 1465: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22982996702194214
    2. '       ' → logprob: -1.979830026626587
    3. '+' → logprob: -2.979830026626587
    4. 'pos' → logprob: -4.354829788208008
    5. ' if' → logprob: -5.979829788208008
    6. ' +' → logprob: -7.354829788208008
    7. '```' → logprob: -8.854829788208008
    8. '
' → logprob: -9.104829788208008
    9. '++' → logprob: -10.354829788208008
    10. 'If' → logprob: -10.354829788208008

Token 1466: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.001502598519437015
    2. ' pos' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.876502990722656
    4. '   ' → logprob: -16.876502990722656
    5. '           ' → logprob: -17.876502990722656
    6. '(pos' → logprob: -19.001502990722656
    7. '==' → logprob: -19.126502990722656
    8. '	pos' → logprob: -19.251502990722656
    9. '    ' → logprob: -19.876502990722656
    10. '        ' → logprob: -20.751502990722656

Token 1467: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020314712077379227
    2. ' ==' → logprob: -4.270314693450928
    3. '==-' → logprob: -5.145314693450928
    4. ')==' → logprob: -9.395315170288086
    5. ']==' → logprob: -9.645315170288086
    6. '===' → logprob: -9.770315170288086
    7. '==
' → logprob: -10.145315170288086
    8. ')' → logprob: -10.895315170288086
    9. '=' → logprob: -11.020315170288086
    10. '```' → logprob: -11.770315170288086

Token 1468: ' INF' (ID: 69196)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21504229307174683
    2. 'INF' → logprob: -1.7150423526763916
    3. '-INF' → logprob: -4.3400421142578125
    4. ' -' → logprob: -7.8400421142578125
    5. ' INF' → logprob: -9.965042114257812
    6. '-inf' → logprob: -10.715042114257812
    7. '   ' → logprob: -11.215042114257812
    8. '_INF' → logprob: -11.840042114257812
    9. 'IN' → logprob: -11.965042114257812
    10. '-IN' → logprob: -12.840042114257812

Token 1469: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2919786870479584
    2. '           ' → logprob: -2.541978597640991
    3. ' +' → logprob: -2.666978597640991
    4. '       ' → logprob: -3.291978597640991
    5. ':' → logprob: -3.541978597640991
    6. ':
' → logprob: -3.541978597640991
    7. '		' → logprob: -6.04197883605957
    8. '	' → logprob: -6.04197883605957
    9. ' or' → logprob: -7.41697883605957
    10. '=' → logprob: -7.54197883605957

Token 1470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000829759519547224
    2. '		' → logprob: -8.625829696655273
    3. ':
' → logprob: -8.625829696655273
    4. '+' → logprob: -8.875829696655273
    5. 'return' → logprob: -9.125829696655273
    6. ':' → logprob: -10.250829696655273
    7. '	       ' → logprob: -10.750829696655273
    8. '```' → logprob: -10.750829696655273
    9. ':return' → logprob: -10.875829696655273
    10. '          ' → logprob: -10.875829696655273

Token 1471: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024510381743311882
    2. '           ' → logprob: -3.774510383605957
    3. 'break' → logprob: -7.024510383605957
    4. ' return' → logprob: -8.024510383605957
    5. '       ' → logprob: -10.899510383605957
    6. '```' → logprob: -11.399510383605957
    7. '               ' → logprob: -11.649510383605957
    8. '	return' → logprob: -12.649510383605957
    9. '		' → logprob: -13.149510383605957
    10. '{return' → logprob: -14.149510383605957

Token 1472: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1472419600977446e-06
    2. ' False' → logprob: -13.750000953674316
    3. '0' → logprob: -19.875001907348633
    4. '
' → logprob: -20.000001907348633
    5. '(False' → logprob: -20.375001907348633
    6. 'false' → logprob: -21.000001907348633
    7. '   ' → logprob: -21.000001907348633
    8. 'True' → logprob: -21.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. '=False' → logprob: -23.125001907348633

Token 1473: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014823668170720339
    2. '
' → logprob: -6.7514824867248535
    3. '	' → logprob: -8.626482009887695
    4. '```' → logprob: -9.876482009887695
    5. '        
' → logprob: -10.376482009887695
    6. '   ' → logprob: -10.501482009887695
    7. '           ' → logprob: -12.376482009887695
    8. '<|end|>' → logprob: -12.626482009887695
    9. '    
' → logprob: -12.876482009887695
    10. '	   ' → logprob: -13.001482009887695

Token 1474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002225198782980442
    2. '
' → logprob: -6.252225399017334
    3. '        
' → logprob: -9.002224922180176
    4. '```' → logprob: -9.377224922180176
    5. '	' → logprob: -10.002224922180176
    6. '   ' → logprob: -11.002224922180176
    7. '    
' → logprob: -12.127224922180176
    8. '+' → logprob: -12.377224922180176
    9. '           ' → logprob: -12.502224922180176
    10. '  
' → logprob: -13.002224922180176

Token 1475: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10073020309209824
    2. 'pos' (adapté à ' pos') → logprob: -2.3507301807403564
    3. ' pos' → logprob: -7.8507304191589355
    4. '   ' → logprob: -9.600729942321777
    5. '
' → logprob: -11.350729942321777
    6. '	pos' → logprob: -11.475729942321777
    7. '	' → logprob: -11.475729942321777
    8. '+' → logprob: -11.600729942321777
    9. '```' → logprob: -11.600729942321777
    10. '           ' → logprob: -12.350729942321777

Token 1476: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07516136765480042
    2. ' +=' → logprob: -2.7001614570617676
    3. '+' → logprob: -5.575161457061768
    4. '=' → logprob: -6.700161457061768
    5. ' =' → logprob: -9.20016098022461
    6. ' +' → logprob: -9.82516098022461
    7. ']+=' → logprob: -11.20016098022461
    8. '   ' → logprob: -11.32516098022461
    9. '```' → logprob: -12.82516098022461
    10. '    ' → logprob: -13.70016098022461

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '
' → logprob: -21.125
    4. '+' → logprob: -21.625
    5. '   ' → logprob: -21.625
    6. '```' → logprob: -21.875
    7. '=' → logprob: -23.625
    8. '0' → logprob: -23.75
    9. '１' → logprob: -23.875
    10. '<|end|>' → logprob: -24.25

Token 1478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002674345625564456
    2. '```' → logprob: -7.252674579620361
    3. '<|end|>' → logprob: -7.502674579620361
    4. ')' → logprob: -8.377674102783203
    5. 'return' → logprob: -8.377674102783203
    6. '	return' → logprob: -8.377674102783203
    7. ':' → logprob: -8.377674102783203
    8. '
' → logprob: -9.002674102783203
    9. ' return' → logprob: -9.127674102783203
    10. ':return' → logprob: -9.502674102783203

Token 1479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002370297210291028
    2. 'return' → logprob: -7.377370357513428
    3. ' return' → logprob: -7.752370357513428
    4. '	return' → logprob: -7.877370357513428
    5. '
' → logprob: -8.00236988067627
    6. '```' → logprob: -8.00236988067627
    7. ':' → logprob: -9.87736988067627
    8. ':return' → logprob: -10.00236988067627
    9. '<|end|>' → logprob: -10.25236988067627
    10. ')' → logprob: -10.87736988067627

Token 1480: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20315125584602356
    2. 'return' (adapté à ' return') → logprob: -1.7031512260437012
    3. ' return' → logprob: -7.203151226043701
    4. '```' → logprob: -7.453151226043701
    5. '	return' → logprob: -7.953151226043701
    6. 'True' → logprob: -10.07815170288086
    7. '
' → logprob: -11.57815170288086
    8. '{return' → logprob: -12.95315170288086
    9. '       ' → logprob: -13.57815170288086
    10. '    
' → logprob: -13.95315170288086

Token 1481: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '   ' → logprob: -20.25020408630371
    4. '(True' → logprob: -20.62520408630371
    5. ' ' → logprob: -23.00020408630371
    6. 'true' → logprob: -23.12520408630371
    7. '=True' → logprob: -24.12520408630371
    8. 'False' → logprob: -24.50020408630371
    9. '	' → logprob: -24.87520408630371
    10. '1' → logprob: -25.50020408630371

Token 1482: '

' (ID: 279)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.001261663855984807
    2. '
' → logprob: -6.8762617111206055
    3. '```' → logprob: -8.626261711120605
    4. 'l' → logprob: -11.251261711120605
    5. 'def' → logprob: -11.376261711120605
    6. 'left' → logprob: -11.751261711120605
    7. ' low' → logprob: -12.251261711120605
    8. 'lo' → logprob: -12.376261711120605
    9. '(low' → logprob: -12.501261711120605
    10. '``' → logprob: -13.251261711120605

Token 1483: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.735893965815194e-05
    2. '```' → logprob: -11.750017166137695
    3. 'lo' → logprob: -12.250017166137695
    4. '
' → logprob: -13.000017166137695
    5. 'l' → logprob: -14.000017166137695
    6. 'left' → logprob: -14.125017166137695
    7. 'def' → logprob: -14.500017166137695
    8. '``' → logprob: -15.750017166137695
    9. ' low' → logprob: -16.125017166137695
    10. 'ok' → logprob: -18.500017166137695

Token 1484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16049280762672424
    2. '=' → logprob: -1.9104927778244019
    3. ',' → logprob: -8.285492897033691
    4. '0' → logprob: -11.660492897033691
    5. ' ,' → logprob: -12.160492897033691
    6. ' ' → logprob: -13.785492897033691
    7. ' =
' → logprob: -14.785492897033691
    8. '<|end|>' → logprob: -15.160492897033691
    9. '```' → logprob: -15.910492897033691
    10. ')' → logprob: -16.160491943359375

Token 1485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -11.750009536743164
    3. ' ' → logprob: -13.500009536743164
    4. '```' → logprob: -17.250009536743164
    5. '=' → logprob: -18.875009536743164
    6. '   ' → logprob: -19.000009536743164
    7. '۰' → logprob: -19.000009536743164
    8. '
' → logprob: -19.875009536743164
    9. '０' → logprob: -20.500009536743164
    10. '``' → logprob: -20.625009536743164

Token 1486: '
' (ID: 198)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.4518001675605774
    2. 'high' → logprob: -1.4518001079559326
    3. '
' → logprob: -2.7018001079559326
    4. ',' → logprob: -2.8268001079559326
    5. ',
' → logprob: -7.076800346374512
    6. ' 
' → logprob: -7.076800346374512
    7. ' ,' → logprob: -7.326800346374512
    8. '(high' → logprob: -8.451800346374512
    9. '_high' → logprob: -8.701800346374512
    10. '  
' → logprob: -9.326800346374512

Token 1487: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.00032712158281356096
    2. ' high' → logprob: -8.375327110290527
    3. '
' → logprob: -9.625327110290527
    4. ',' → logprob: -10.500327110290527
    5. '```' → logprob: -13.500327110290527
    6. '_high' → logprob: -14.875327110290527
    7. ',
' → logprob: -15.125327110290527
    8. ' 
' → logprob: -15.250327110290527
    9. '=' → logprob: -15.625327110290527
    10. '(high' → logprob: -16.125328063964844

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22818756103515625
    2. ' =' → logprob: -1.9781875610351562
    3. '=min' → logprob: -2.7281875610351562
    4. '=max' → logprob: -8.103187561035156
    5. 'min' → logprob: -10.353187561035156
    6. '[min' → logprob: -11.478187561035156
    7. ',' → logprob: -11.853187561035156
    8. '=
' → logprob: -12.103187561035156
    9. ',min' → logprob: -12.478187561035156
    10. '=len' → logprob: -12.978187561035156

Token 1489: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.153795766294934e-06
    2. ' min' → logprob: -12.125005722045898
    3. '(min' → logprob: -15.250005722045898
    4. 'max' → logprob: -15.500005722045898
    5. '=min' → logprob: -16.2500057220459
    6. '[min' → logprob: -16.6250057220459
    7. '	min' → logprob: -17.8750057220459
    8. ',min' → logprob: -18.8750057220459
    9. '
' → logprob: -19.2500057220459
    10. '1' → logprob: -19.2500057220459

Token 1490: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.463036435074173e-05
    2. 'A' → logprob: -11.500024795532227
    3. '(' → logprob: -11.875024795532227
    4. '(
' → logprob: -12.500024795532227
    5. '(B' → logprob: -12.625024795532227
    6. '(a' → logprob: -16.250024795532227
    7. ' (' → logprob: -16.250024795532227
    8. '((' → logprob: -16.875024795532227
    9. '(min' → logprob: -16.875024795532227
    10. '```' → logprob: -17.250024795532227

Token 1491: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.387869268655777
    2. ',B' → logprob: -1.1378692388534546
    3. ',b' → logprob: -7.137869358062744
    4. ',min' → logprob: -9.262868881225586
    5. 'B' → logprob: -10.512868881225586
    6. ',
' → logprob: -10.637868881225586
    7. ' ,' → logprob: -11.012868881225586
    8. ',len' → logprob: -11.512868881225586
    9. ',max' → logprob: -11.637868881225586
    10. '+' → logprob: -11.637868881225586

Token 1492: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11667261272668839
    2. ')+' → logprob: -2.3666725158691406
    3. ')' → logprob: -4.116672515869141
    4. ' +' → logprob: -10.61667251586914
    5. '+)' → logprob: -12.86667251586914
    6. '+
' → logprob: -13.11667251586914
    7. ')
' → logprob: -13.24167251586914
    8. ']+' → logprob: -13.61667251586914
    9. '```' → logprob: -15.61667251586914
    10. '}+' → logprob: -15.99167251586914

Token 1493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -16.625
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '+' → logprob: -21.25
    7. '``' → logprob: -22.375
    8. '１' → logprob: -22.75
    9. '\
' → logprob: -23.0
    10. '0' → logprob: -23.625

Token 1494: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003784750821068883
    2. '
' → logprob: -6.003784656524658
    3. '```' → logprob: -7.253784656524658
    4. ' while' → logprob: -7.503784656524658
    5. '``' → logprob: -10.253785133361816
    6. 'While' → logprob: -12.378785133361816
    7. '<|end|>' → logprob: -13.253785133361816
    8. 'def' → logprob: -13.503785133361816
    9. '	while' → logprob: -13.628785133361816
    10. '`
' → logprob: -14.253785133361816

Token 1495: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005581548321060836
    2. 'mid' → logprob: -7.500558376312256
    3. '```' → logprob: -12.375557899475098
    4. '
' → logprob: -14.750557899475098
    5. ' while' → logprob: -14.875557899475098
    6. 'middle' → logprob: -15.625557899475098
    7. 'While' → logprob: -16.875558853149414
    8. '``' → logprob: -17.750558853149414
    9. '	while' → logprob: -18.875558853149414
    10. 'm' → logprob: -19.500558853149414

Token 1496: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.03805847465991974
    2. 'low' → logprob: -3.2880585193634033
    3. '(low' → logprob: -11.163058280944824
    4. '```' → logprob: -13.288058280944824
    5. ' high' → logprob: -14.413058280944824
    6. ' ' → logprob: -15.288058280944824
    7. 'high' → logprob: -15.788058280944824
    8. '_low' → logprob: -16.28805923461914
    9. ' ```' → logprob: -17.66305923461914
    10. ' (' → logprob: -17.91305923461914

Token 1497: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.21361017227172852
    2. ' <' → logprob: -1.7136101722717285
    3. '<=' → logprob: -4.8386101722717285
    4. ' <=' → logprob: -6.0886101722717285
    5. '!=' → logprob: -7.5886101722717285
    6. '<int' → logprob: -7.7136101722717285
    7. ' !=' → logprob: -7.7136101722717285
    8. '<len' → logprob: -8.58860969543457
    9. '<n' → logprob: -9.71360969543457
    10. '<size' → logprob: -10.58860969543457

Token 1498: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.00861468818038702
    2. ' high' → logprob: -4.758614540100098
    3. '(high' → logprob: -16.133615493774414
    4. '_high' → logprob: -17.633615493774414
    5. '/high' → logprob: -17.883615493774414
    6. '
' → logprob: -18.133615493774414
    7. 'High' → logprob: -18.383615493774414
    8. '.high' → logprob: -18.883615493774414
    9. '```' → logprob: -19.008615493774414
    10. '-high' → logprob: -20.258615493774414

Token 1499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053805507719516754
    2. ':
' → logprob: -3.0538055896759033
    3. '   ' → logprob: -6.178805351257324
    4. '=' → logprob: -7.053805351257324
    5. '<|end|>' → logprob: -8.053805351257324
    6. '[' → logprob: -8.178805351257324
    7. '```' → logprob: -8.178805351257324
    8. ',' → logprob: -8.303805351257324
    9. '<|end|>' → logprob: -8.303805351257324
    10. '{' → logprob: -8.803805351257324

Token 1500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03196050971746445
    2. 'mid' → logprob: -4.406960487365723
    3. '	m' → logprob: -4.656960487365723
    4. ' mid' → logprob: -5.031960487365723
    5. '```' → logprob: -6.031960487365723
    6. '    
' → logprob: -7.906960487365723
    7. 'm' → logprob: -9.031960487365723
    8. '   ' → logprob: -9.156960487365723
    9. '  
' → logprob: -10.656960487365723
    10. '
' → logprob: -10.656960487365723

Token 1501: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.0012282043462619185
    2. '   ' → logprob: -6.751228332519531
    3. 'm' → logprob: -10.251228332519531
    4. ' mid' → logprob: -10.751228332519531
    5. 'middle' → logprob: -14.626228332519531
    6. '    
' → logprob: -15.126228332519531
    7. '```' → logprob: -15.626228332519531
    8. '
' → logprob: -15.751228332519531
    9. '[mid' → logprob: -16.87622833251953
    10. '	m' → logprob: -16.87622833251953

Token 1502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026813630014657974
    2. '=' → logprob: -3.6518137454986572
    3. '<|end|>' → logprob: -8.026813507080078
    4. '=int' → logprob: -9.901813507080078
    5. '<|end|>' → logprob: -10.276813507080078
    6. ')' → logprob: -11.151813507080078
    7. '   ' → logprob: -11.651813507080078
    8. '=True' → logprob: -12.151813507080078
    9. ' =
' → logprob: -12.276813507080078
    10. ' <<=' → logprob: -12.276813507080078

Token 1503: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.011057134717702866
    2. ' (' → logprob: -4.511056900024414
    3. '(l' → logprob: -12.636056900024414
    4. '(lower' → logprob: -12.886056900024414
    5. '(high' → logprob: -13.511056900024414
    6. '   ' → logprob: -14.136056900024414
    7. ' low' → logprob: -14.636056900024414
    8. 'low' → logprob: -15.011056900024414
    9. '(mid' → logprob: -16.136056900024414
    10. ' ' → logprob: -16.261056900024414

Token 1504: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -6.511406809295295e-06
    2. ' low' → logprob: -12.000006675720215
    3. '(low' → logprob: -15.500006675720215
    4. 'high' → logprob: -17.7500057220459
    5. '   ' → logprob: -19.6250057220459
    6. ' ' → logprob: -22.2500057220459
    7. '_low' → logprob: -22.6250057220459
    8. '
' → logprob: -23.5000057220459
    9. '.low' → logprob: -23.6250057220459
    10. 'l' → logprob: -24.3750057220459

Token 1505: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868790566921234
    2. ' +' → logprob: -1.1368790864944458
    3. '+
' → logprob: -12.136878967285156
    4. ' +
' → logprob: -13.136878967285156
    5. '```' → logprob: -15.261878967285156
    6. '＋' → logprob: -15.511878967285156
    7. '+B' → logprob: -16.761878967285156
    8. ')' → logprob: -17.136878967285156
    9. ' ' → logprob: -17.761878967285156
    10. ')+' → logprob: -18.011878967285156

Token 1506: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -1.8624639324116288e-06
    2. ' high' → logprob: -13.625001907348633
    3. '(high' → logprob: -14.625001907348633
    4. '
' → logprob: -15.875001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '1' → logprob: -19.500001907348633
    7. '高' → logprob: -20.500001907348633
    8. ' ' → logprob: -21.125001907348633
    9. '.high' → logprob: -21.125001907348633
    10. '-high' → logprob: -21.375001907348633

Token 1507: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5792881846427917
    2. ')//' → logprob: -0.8292881846427917
    3. ')>>' → logprob: -5.704288005828857
    4. ' )' → logprob: -11.454288482666016
    5. ')
' → logprob: -14.954288482666016
    6. '//' → logprob: -15.579288482666016
    7. '>>' → logprob: -16.579288482666016
    8. ')#' → logprob: -16.579288482666016
    9. '```' → logprob: -16.829288482666016
    10. '+' → logprob: -17.204288482666016

Token 1508: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '
' → logprob: -22.625
    4. '```' → logprob: -23.25
    5. '２' → logprob: -23.375
    6. '۲' → logprob: -23.75
    7. '22' → logprob: -25.125
    8. '٢' → logprob: -25.5
    9. '२' → logprob: -25.875
    10. '   ' → logprob: -26.0

Token 1509: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15412648022174835
    2. '   ' → logprob: -2.9041264057159424
    3. '<|end|>' → logprob: -3.0291264057159424
    4. '```' → logprob: -4.1541266441345215
    5. '    
' → logprob: -5.1541266441345215
    6. '#' → logprob: -5.4041266441345215
    7. 'sub' → logprob: -5.7791266441345215
    8. '<|end|>' → logprob: -6.2791266441345215
    9. 'if' → logprob: -6.5291266441345215
    10. ':
' → logprob: -7.2791266441345215

Token 1510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04549519717693329
    2. '    
' → logprob: -4.04549503326416
    3. '```' → logprob: -4.54549503326416
    4. '<|end|>' → logprob: -4.67049503326416
    5. '
' → logprob: -5.54549503326416
    6. '[' → logprob: -7.54549503326416
    7. ':' → logprob: -7.54549503326416
    8. '<|end|>' → logprob: -8.29549503326416
    9. '  
' → logprob: -8.54549503326416
    10. ':
' → logprob: -8.79549503326416

Token 1511: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.003328853053972125
    2. '   ' → logprob: -6.253328800201416
    3. 'ok' → logprob: -6.753328800201416
    4. 'if' → logprob: -9.378329277038574
    5. 'flag' → logprob: -10.003329277038574
    6. 'possible' → logprob: -10.003329277038574
    7. 'exists' → logprob: -11.128329277038574
    8. 'l' → logprob: -11.378329277038574
    9. 'left' → logprob: -11.628329277038574
    10. 'valid' → logprob: -12.378329277038574

Token 1512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43297505378723145
    2. ' =' → logprob: -1.0579750537872314
    3. '=False' → logprob: -6.182974815368652
    4. '=True' → logprob: -6.682974815368652
    5. ':' → logprob: -8.057974815368652
    6. '   ' → logprob: -8.932974815368652
    7. '_' → logprob: -9.057974815368652
    8. ' ==' → logprob: -9.682974815368652
    9. ')' → logprob: -9.807974815368652
    10. '<|end|>' → logprob: -9.807974815368652

Token 1513: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '0' → logprob: -17.25002670288086
    4. '   ' → logprob: -18.75002670288086
    5. '(False' → logprob: -20.25002670288086
    6. 'True' → logprob: -21.37502670288086
    7. 'false' → logprob: -21.87502670288086
    8. '=False' → logprob: -22.25002670288086
    9. '	' → logprob: -22.75002670288086
    10. '
' → logprob: -23.12502670288086

Token 1514: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003687053394969553
    2. '
' → logprob: -8.87536907196045
    3. '    
' → logprob: -8.87536907196045
    4. '   ' → logprob: -10.50036907196045
    5. '```' → logprob: -10.87536907196045
    6. '	for' → logprob: -10.87536907196045
    7. 'for' → logprob: -11.37536907196045
    8. ' for' → logprob: -12.25036907196045
    9. ' ' → logprob: -13.75036907196045
    10. '	
' → logprob: -13.87536907196045

Token 1515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015894850948825479
    2. 'for' → logprob: -7.376589298248291
    3. '	for' → logprob: -7.626589298248291
    4. ' for' → logprob: -8.00158977508545
    5. '```' → logprob: -9.62658977508545
    6. '
' → logprob: -10.62658977508545
    7. '   ' → logprob: -10.62658977508545
    8. '    
' → logprob: -10.87658977508545
    9. '\t' → logprob: -13.00158977508545
    10. '``' → logprob: -13.87658977508545

Token 1516: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019446993246674538
    2. '   ' → logprob: -6.501944541931152
    3. ' for' → logprob: -7.751944541931152
    4. '
' → logprob: -12.126944541931152
    5. 'i' → logprob: -13.001944541931152
    6. '	for' → logprob: -13.126944541931152
    7. '    
' → logprob: -13.376944541931152
    8. 'if' → logprob: -14.501944541931152
    9. '```' → logprob: -14.751944541931152
    10. 'start' → logprob: -16.87694549560547

Token 1517: ' start' (ID: 1604)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.025932028889656067
    2. 'start' → logprob: -4.5259318351745605
    3. ' j' → logprob: -4.6509318351745605
    4. '_j' → logprob: -6.4009318351745605
    5. 'i' → logprob: -7.0259318351745605
    6. 'br' → logprob: -7.1509318351745605
    7. 's' → logprob: -7.2759318351745605
    8. 'sub' → logprob: -8.150932312011719
    9. 'length' → logprob: -8.275932312011719
    10. ' start' → logprob: -9.275932312011719

Token 1518: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06200835481286049
    2. 'in' → logprob: -2.8120083808898926
    3. '   ' → logprob: -11.062007904052734
    4. '	in' → logprob: -11.312007904052734
    5. ',' → logprob: -12.562007904052734
    6. ')' → logprob: -12.812007904052734
    7. '_in' → logprob: -13.812007904052734
    8. '=' → logprob: -14.187007904052734
    9. 'range' → logprob: -14.187007904052734
    10. '```' → logprob: -14.312007904052734

Token 1519: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '0' → logprob: -15.625158309936523
    4. '(range' → logprob: -18.125158309936523
    5. '   ' → logprob: -20.625158309936523
    6. 'br' → logprob: -21.000158309936523
    7. '(' → logprob: -21.750158309936523
    8. '
' → logprob: -22.500158309936523
    9. '	range' → logprob: -22.625158309936523
    10. ' ' → logprob: -22.750158309936523

Token 1520: '(B' (ID: 8409)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005372133571654558
    2. '0' → logprob: -5.755372047424316
    3. '(B' → logprob: -6.255372047424316
    4. '   ' → logprob: -8.255372047424316
    5. ' B' → logprob: -11.755372047424316
    6. '(' → logprob: -12.755372047424316
    7. 'high' → logprob: -14.380372047424316
    8. '(high' → logprob: -14.630372047424316
    9. '	B' → logprob: -15.880372047424316
    10. '[B' → logprob: -17.630373001098633

Token 1521: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5665993094444275
    2. '-' → logprob: -1.0665993690490723
    3. '-mid' → logprob: -2.4415993690490723
    4. '   ' → logprob: -7.691599369049072
    5. '-B' → logprob: -7.691599369049072
    6. '-m' → logprob: -8.816598892211914
    7. '-start' → logprob: -9.316598892211914
    8. ')' → logprob: -10.316598892211914
    9. '-length' → logprob: -10.316598892211914
    10. '-b' → logprob: -10.941598892211914

Token 1522: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.253090865968261e-06
    2. ' mid' → logprob: -12.000009536743164
    3. '(mid' → logprob: -12.750009536743164
    4. '[mid' → logprob: -16.500009536743164
    5. '   ' → logprob: -18.250009536743164
    6. '
' → logprob: -21.125009536743164
    7. '.mid' → logprob: -22.125009536743164
    8. '       ' → logprob: -22.375009536743164
    9. 'middle' → logprob: -22.500009536743164
    10. '```' → logprob: -22.500009536743164

Token 1523: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017095671501010656
    2. ' +' → logprob: -6.376709461212158
    3. '):
' → logprob: -12.501709938049316
    4. '   ' → logprob: -12.876709938049316
    5. '+
' → logprob: -14.626709938049316
    6. ')+' → logprob: -15.501709938049316
    7. '```' → logprob: -15.876709938049316
    8. '):' → logprob: -16.251708984375
    9. '＋' → logprob: -16.251708984375
    10. '
' → logprob: -17.126708984375

Token 1524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -18.25
    4. '   ' → logprob: -19.375
    5. '```' → logprob: -20.125
    6. '0' → logprob: -20.875
    7. ')' → logprob: -21.125
    8. '１' → logprob: -21.625
    9. '``' → logprob: -22.5
    10. '

' → logprob: -22.625

Token 1525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -17.5
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '2' → logprob: -20.375
    7. ')' → logprob: -20.75
    8. '0' → logprob: -20.875
    9. '``' → logprob: -21.5
    10. '{' → logprob: -21.5

Token 1526: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013365271501243114
    2. '   ' → logprob: -4.513365268707275
    3. '):' → logprob: -6.138365268707275
    4. '       ' → logprob: -9.638365745544434
    5. '```' → logprob: -9.888365745544434
    6. ':
' → logprob: -11.013365745544434
    7. '):
' → logprob: -12.388365745544434
    8. ':' → logprob: -12.638365745544434
    9. ''):
' → logprob: -12.888365745544434
    10. '	' → logprob: -13.138365745544434

Token 1527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025480776093900204
    2. '   ' → logprob: -6.7525482177734375
    3. 'sub' → logprob: -7.0025482177734375
    4. ' sub' → logprob: -8.752548217773438
    5. 'substring' → logprob: -9.627548217773438
    6. 'br' → logprob: -9.627548217773438
    7. '```' → logprob: -9.627548217773438
    8. ' ' → logprob: -10.877548217773438
    9. ' if' → logprob: -11.377548217773438
    10. '	sub' → logprob: -11.502548217773438

Token 1528: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.015392457135021687
    2. 'substring' → logprob: -5.015392303466797
    3. '       ' → logprob: -5.640392303466797
    4. 'if' → logprob: -5.765392303466797
    5. 'substr' → logprob: -6.515392303466797
    6. 'slice' → logprob: -9.015392303466797
    7. '   ' → logprob: -9.265392303466797
    8. 'subset' → logprob: -9.390392303466797
    9. 's' → logprob: -9.640392303466797
    10. '	sub' → logprob: -10.015392303466797

Token 1529: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14272548258304596
    2. ' =' → logprob: -2.0177254676818848
    3. '=sub' → logprob: -11.142725944519043
    4. '=b' → logprob: -11.517725944519043
    5. '=[]' → logprob: -12.017725944519043
    6. '=start' → logprob: -12.517725944519043
    7. '=[' → logprob: -13.017725944519043
    8. '	br' → logprob: -13.142725944519043
    9. '=
' → logprob: -13.267725944519043
    10. 'br' → logprob: -13.392725944519043

Token 1530: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0004330532974563539
    2. ' br' → logprob: -7.750432968139648
    3. '	br' → logprob: -13.625432968139648
    4. '   ' → logprob: -14.375432968139648
    5. '[' → logprob: -14.875432968139648
    6. '       ' → logprob: -16.62543296813965
    7. 'brane' → logprob: -16.75043296813965
    8. 'Br' → logprob: -16.87543296813965
    9. 'b' → logprob: -17.50043296813965
    10. '```' → logprob: -17.50043296813965

Token 1531: 'uno' (ID: 12811)
  Prédit: 'uno'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uno' → logprob: -3.607391408877447e-05
    2. 'u' → logprob: -11.500036239624023
    3. 'un' → logprob: -12.000036239624023
    4. 'undo' → logprob: -12.500036239624023
    5. '[' → logprob: -12.875036239624023
    6. 'no' → logprob: -12.875036239624023
    7. 'uto' → logprob: -13.250036239624023
    8. 'br' → logprob: -13.875036239624023
    9. '	' → logprob: -13.875036239624023
    10. '```' → logprob: -13.875036239624023

Token 1532: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00017123986617662013
    2. '[' → logprob: -9.000171661376953
    3. 'start' → logprob: -10.125171661376953
    4. 'br' → logprob: -12.625171661376953
    5. '[
' → logprob: -13.125171661376953
    6. '```' → logprob: -14.000171661376953
    7. ' [' → logprob: -14.750171661376953
    8. '[sub' → logprob: -15.250171661376953
    9. '
' → logprob: -15.750171661376953
    10. '   ' → logprob: -15.875171661376953

Token 1533: ':start' (ID: 198329)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.007452460005879402
    2. ':start' → logprob: -5.257452487945557
    3. 'start' → logprob: -6.132452487945557
    4. '   ' → logprob: -11.382452011108398
    5. '```' → logprob: -11.757452011108398
    6. '[' → logprob: -12.257452011108398
    7. '(start' → logprob: -12.257452011108398
    8. ',start' → logprob: -12.382452011108398
    9. '       ' → logprob: -12.507452011108398
    10. ':' → logprob: -13.382452011108398

Token 1534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003606244223192334
    2. ' +' → logprob: -5.62860631942749
    3. '   ' → logprob: -13.628605842590332
    4. 'mid' → logprob: -14.003605842590332
    5. 'start' → logprob: -14.253605842590332
    6. ']' → logprob: -14.253605842590332
    7. ']+' → logprob: -14.503605842590332
    8. '[mid' → logprob: -14.628605842590332
    9. ':' → logprob: -14.878605842590332
    10. '```' → logprob: -15.003605842590332

Token 1535: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.9361264946837764e-07
    2. ' mid' → logprob: -15.625
    3. '[mid' → logprob: -18.25
    4. '(mid' → logprob: -18.5
    5. 'middle' → logprob: -19.25
    6. '   ' → logprob: -22.0
    7. '
' → logprob: -22.125
    8. 'min' → logprob: -22.875
    9. '_mid' → logprob: -23.125
    10. '.mid' → logprob: -23.25

Token 1536: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03855868801474571
    2. ']' → logprob: -3.6635587215423584
    3. '       ' → logprob: -4.413558483123779
    4. ']
' → logprob: -10.038558959960938
    5. ')
' → logprob: -11.538558959960938
    6. ']:
' → logprob: -12.288558959960938
    7. '])
' → logprob: -13.288558959960938
    8. ']()
' → logprob: -13.413558959960938
    9. '```' → logprob: -13.538558959960938
    10. ')' → logprob: -13.538558959960938

Token 1537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022308611369226128
    2. ' if' → logprob: -9.250223159790039
    3. '           ' → logprob: -10.125223159790039
    4. '   ' → logprob: -10.625223159790039
    5. '<|end|>' → logprob: -10.750223159790039
    6. '
' → logprob: -11.250223159790039
    7. '```' → logprob: -11.500223159790039
    8. 'if' → logprob: -12.000223159790039
    9. '        
' → logprob: -12.875223159790039
    10. '	' → logprob: -13.250223159790039

Token 1538: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002600245934445411
    2. ' if' → logprob: -8.750260353088379
    3. '       ' → logprob: -9.250260353088379
    4. '```' → logprob: -12.500260353088379
    5. '   ' → logprob: -13.625260353088379
    6. '	if' → logprob: -15.000260353088379
    7. 'If' → logprob: -15.875260353088379
    8. '``' → logprob: -16.375259399414062
    9. '           ' → logprob: -17.500259399414062
    10. '@if' → logprob: -17.875259399414062

Token 1539: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011047935113310814
    2. ' is' → logprob: -4.511047840118408
    3. 'True' → logprob: -16.76104736328125
    4. '(is' → logprob: -16.88604736328125
    5. '   ' → logprob: -17.76104736328125
    6. '```' → logprob: -17.88604736328125
    7. '
' → logprob: -18.13604736328125
    8. ')is' → logprob: -18.76104736328125
    9. 'not' → logprob: -19.01104736328125
    10. ' ' → logprob: -19.26104736328125

Token 1540: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.6537622034084052e-05
    2. 'sub' → logprob: -10.62502670288086
    3. '	sub' → logprob: -14.00002670288086
    4. '_' → logprob: -14.37502670288086
    5. '_s' → logprob: -15.12502670288086
    6. '(sub' → logprob: -15.37502670288086
    7. 's' → logprob: -16.50002670288086
    8. 'Sub' → logprob: -17.25002670288086
    9. '[sub' → logprob: -17.87502670288086
    10. '
' → logprob: -18.25002670288086

Token 1541: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.08645030856132507
    2. 'sub' → logprob: -3.0864503383636475
    3. '_sub' → logprob: -3.3364503383636475
    4. 'quence' → logprob: -7.211450099945068
    5. '_sequence' → logprob: -7.711450099945068
    6. 'ub' → logprob: -8.211450576782227
    7. 'sequ' → logprob: -9.836450576782227
    8. 'se' → logprob: -10.086450576782227
    9. ' subse' → logprob: -11.211450576782227
    10. '
' → logprob: -12.586450576782227

Token 1542: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -9.019237768370658e-05
    2. '(' → logprob: -9.375090599060059
    3. '(
' → logprob: -12.500090599060059
    4. '[sub' → logprob: -14.625090599060059
    5. 'sub' → logprob: -15.000090599060059
    6. ' (' → logprob: -15.000090599060059
    7. ')' → logprob: -15.250090599060059
    8. '   ' → logprob: -16.125089645385742
    9. '```' → logprob: -16.375089645385742
    10. '(substr' → logprob: -17.500089645385742

Token 1543: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5768513679504395
    2. '):' → logprob: -0.8268513679504395
    3. ')' → logprob: -7.7018513679504395
    4. '==' → logprob: -8.951850891113281
    5. ')==' → logprob: -8.951850891113281
    6. '           ' → logprob: -9.326850891113281
    7. '       ' → logprob: -10.201850891113281
    8. '```' → logprob: -10.701850891113281
    9. '**' → logprob: -11.576850891113281
    10. '):
' → logprob: -11.951850891113281

Token 1544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003087678924202919
    2. ' found' → logprob: -9.000308990478516
    3. 'found' → logprob: -9.250308990478516
    4. '```' → logprob: -10.000308990478516
    5. '(found' → logprob: -10.875308990478516
    6. '            
' → logprob: -11.750308990478516
    7. '<|end|>' → logprob: -12.500308990478516
    8. '               ' → logprob: -13.000308990478516
    9. '		' → logprob: -13.625308990478516
    10. '	       ' → logprob: -13.750308990478516

Token 1545: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.00016516048344783485
    2. ' found' → logprob: -9.000164985656738
    3. '	found' → logprob: -11.000164985656738
    4. '   ' → logprob: -11.500164985656738
    5. '       ' → logprob: -11.625164985656738
    6. '           ' → logprob: -12.500164985656738
    7. '(found' → logprob: -13.625164985656738
    8. 'Found' → logprob: -14.750164985656738
    9. '```' → logprob: -15.000164985656738
    10. '_found' → logprob: -15.875164985656738

Token 1546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025585419498384
    2. ' =' → logprob: -6.252558708190918
    3. '=True' → logprob: -7.377558708190918
    4. '=False' → logprob: -13.002558708190918
    5. '==' → logprob: -14.502558708190918
    6. '=
' → logprob: -14.502558708190918
    7. '<|end|>' → logprob: -15.002558708190918
    8. '+=' → logprob: -15.377558708190918
    9. '_=' → logprob: -15.502558708190918
    10. '=true' → logprob: -15.627558708190918

Token 1547: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.7500057220459
    4. '=True' → logprob: -18.6250057220459
    5. '(True' → logprob: -18.8750057220459
    6. 'true' → logprob: -19.0000057220459
    7. '
' → logprob: -21.3750057220459
    8. '```' → logprob: -21.5000057220459
    9. '1' → logprob: -22.6250057220459
    10. '_true' → logprob: -22.7500057220459

Token 1548: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005756704485975206
    2. '               ' → logprob: -8.00057601928711
    3. '       ' → logprob: -8.75057601928711
    4. ',' → logprob: -10.62557601928711
    5. '```' → logprob: -11.25057601928711
    6. ':
' → logprob: -11.37557601928711
    7. '		' → logprob: -11.50057601928711
    8. '<|end|>' → logprob: -11.87557601928711
    9. ':' → logprob: -12.87557601928711
    10. '            
' → logprob: -12.87557601928711

Token 1549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012821375858038664
    2. '               ' → logprob: -6.751282215118408
    3. '       ' → logprob: -9.37628173828125
    4. '```' → logprob: -11.00128173828125
    5. '		' → logprob: -12.75128173828125
    6. ',' → logprob: -13.62628173828125
    7. '                   ' → logprob: -13.62628173828125
    8. '            
' → logprob: -13.62628173828125
    9. '        ' → logprob: -14.50128173828125
    10. ' ' → logprob: -14.75128173828125

Token 1550: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6383732557296753
    2. 'break' (adapté à ' break') → logprob: -0.8883732557296753
    3. '       ' → logprob: -3.138373374938965
    4. '               ' → logprob: -4.513373374938965
    5. ' break' → logprob: -5.513373374938965
    6. '```' → logprob: -7.263373374938965
    7. '		' → logprob: -7.638373374938965
    8. '   ' → logprob: -7.888373374938965
    9. ' ' → logprob: -8.263373374938965
    10. '	break' → logprob: -9.013373374938965

Token 1551: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038574778591282666
    2. '```' → logprob: -8.625385284423828
    3. ')' → logprob: -9.125385284423828
    4. '       ' → logprob: -9.750385284423828
    5. '           ' → logprob: -11.500385284423828
    6. ':
' → logprob: -11.875385284423828
    7. '<|end|>' → logprob: -12.125385284423828
    8. '    
' → logprob: -12.625385284423828
    9. '):
' → logprob: -12.625385284423828
    10. ':' → logprob: -13.000385284423828

Token 1552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005724519141949713
    2. '       ' → logprob: -8.375572204589844
    3. '```' → logprob: -8.375572204589844
    4. ')' → logprob: -9.375572204589844
    5. ' if' → logprob: -11.750572204589844
    6. 'if' → logprob: -12.375572204589844
    7. '    
' → logprob: -12.750572204589844
    8. '           ' → logprob: -12.875572204589844
    9. '
' → logprob: -13.000572204589844
    10. '<|end|>' → logprob: -13.750572204589844

Token 1553: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47980374097824097
    2. 'if' (adapté à ' if') → logprob: -0.979803740978241
    3. ' if' → logprob: -5.229803562164307
    4. '```' → logprob: -8.229804039001465
    5. 'low' → logprob: -9.729804039001465
    6. '	if' → logprob: -11.729804039001465
    7. ' low' → logprob: -12.479804039001465
    8. '       ' → logprob: -12.604804039001465
    9. '    
' → logprob: -12.854804039001465
    10. 'If' → logprob: -12.979804039001465

Token 1554: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.16083917021751404
    2. ' found' → logprob: -1.9108392000198364
    3. 'low' → logprob: -8.035839080810547
    4. ' low' → logprob: -8.160839080810547
    5. '   ' → logprob: -13.160839080810547
    6. '	found' → logprob: -13.160839080810547
    7. '(found' → logprob: -13.785839080810547
    8. ' ' → logprob: -15.910839080810547
    9. '
' → logprob: -16.285839080810547
    10. ' high' → logprob: -16.410839080810547

Token 1555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011565152555704117
    2. '=' → logprob: -4.886565208435059
    3. ':
' → logprob: -6.261565208435059
    4. '   ' → logprob: -7.136565208435059
    5. '):' → logprob: -7.261565208435059
    6. '==' → logprob: -8.011565208435059
    7. '       ' → logprob: -9.386565208435059
    8. '[' → logprob: -10.636565208435059
    9. ')' → logprob: -10.886565208435059
    10. '{' → logprob: -11.136565208435059

Token 1556: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4124709665775299
    2. ' low' → logprob: -1.6624709367752075
    3. 'low' → logprob: -2.037471055984497
    4. '       ' → logprob: -4.037470817565918
    5. '```' → logprob: -8.412470817565918
    6. '(low' → logprob: -9.912470817565918
    7. '_low' → logprob: -11.537470817565918
    8. '    ' → logprob: -11.662470817565918
    9. '    
' → logprob: -11.787470817565918
    10. '   ' → logprob: -12.912470817565918

Token 1557: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -1.8550976164988242e-05
    2. ' low' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.250018119812012
    4. '       ' → logprob: -18.125019073486328
    5. '(low' → logprob: -19.750019073486328
    6. '```' → logprob: -20.125019073486328
    7. '           ' → logprob: -20.250019073486328
    8. '低' → logprob: -20.250019073486328
    9. '    ' → logprob: -20.375019073486328
    10. 'Low' → logprob: -20.750019073486328

Token 1558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10032033175230026
    2. ' =' → logprob: -2.350320339202881
    3. ' +=' → logprob: -9.475319862365723
    4. '+=' → logprob: -10.225319862365723
    5. '+' → logprob: -15.350319862365723
    6. ')' → logprob: -16.35032081604004
    7. ' <<=' → logprob: -16.35032081604004
    8. '<|end|>' → logprob: -16.60032081604004
    9. '_=' → logprob: -16.97532081604004
    10. '=end' → logprob: -17.22532081604004

Token 1559: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0005530327325686812
    2. ' mid' → logprob: -7.500553131103516
    3. '(mid' → logprob: -17.250553131103516
    4. '   ' → logprob: -17.875553131103516
    5. '[mid' → logprob: -18.625553131103516
    6. '_mid' → logprob: -19.500553131103516
    7. 'middle' → logprob: -19.750553131103516
    8. '.mid' → logprob: -21.750553131103516
    9. 'midd' → logprob: -23.250553131103516
    10. '
' → logprob: -23.500553131103516

Token 1560: ' +' (ID: 659)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2225138396024704
    2. '+' → logprob: -2.3475139141082764
    3. ' else' → logprob: -2.9725139141082764
    4. '<|end|>' → logprob: -3.0975139141082764
    5. '   ' → logprob: -5.847513675689697
    6. '
' → logprob: -6.472513675689697
    7. '```' → logprob: -6.597513675689697
    8. ' +' → logprob: -7.722513675689697
    9. '	else' → logprob: -7.972513675689697
    10. '<|end|>' → logprob: -8.347514152526855

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.5
    4. '0' → logprob: -18.375
    5. '
' → logprob: -19.75
    6. '   ' → logprob: -20.5
    7. '<|end|>' → logprob: -20.5
    8. '+' → logprob: -22.25
    9. '``' → logprob: -22.25
    10. '=' → logprob: -23.125

Token 1562: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2086697816848755
    2. '   ' → logprob: -1.7086697816848755
    3. '```' → logprob: -5.458669662475586
    4. ' else' → logprob: -5.958669662475586
    5. 'high' → logprob: -7.958669662475586
    6. '``' → logprob: -10.958669662475586
    7. '(high' → logprob: -11.958669662475586
    8. '
' → logprob: -12.458669662475586
    9. ' high' → logprob: -12.958669662475586
    10. '	else' → logprob: -13.083669662475586

Token 1563: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3137586712837219
    2. '   ' → logprob: -1.3137586116790771
    3. ' else' → logprob: -7.813758850097656
    4. '```' → logprob: -9.313758850097656
    5. '	else' → logprob: -13.563758850097656
    6. 'high' → logprob: -14.313758850097656
    7. '   ' → logprob: -15.688758850097656
    8. '``' → logprob: -16.188758850097656
    9. '_else' → logprob: -16.438758850097656
    10. '       ' → logprob: -16.813758850097656

Token 1564: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02330394648015499
    2. 'high' → logprob: -3.773303985595703
    3. ' else' → logprob: -10.023303985595703
    4. '   ' → logprob: -11.648303985595703
    5. ' high' → logprob: -12.648303985595703
    6. '```' → logprob: -13.398303985595703
    7. '
' → logprob: -16.148303985595703
    8. '``' → logprob: -16.398303985595703
    9. 'otherwise' → logprob: -16.523303985595703
    10. '(high' → logprob: -16.898303985595703

Token 1565: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44945767521858215
    2. '       ' → logprob: -1.1994576454162598
    3. ':
' → logprob: -3.4494576454162598
    4. ':' → logprob: -4.19945764541626
    5. ' high' → logprob: -4.57445764541626
    6. 'high' → logprob: -5.69945764541626
    7. '(high' → logprob: -9.324458122253418
    8. '```' → logprob: -9.574458122253418
    9. '_high' → logprob: -11.074458122253418
    10. '):
' → logprob: -11.574458122253418

Token 1566: '       ' (ID: 309)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -2.3080716346157715e-05
    2. '   ' → logprob: -11.000022888183594
    3. ' high' → logprob: -12.000022888183594
    4. '(high' → logprob: -16.500022888183594
    5. '_high' → logprob: -17.625022888183594
    6. '.high' → logprob: -18.750022888183594
    7. '-high' → logprob: -19.125022888183594
    8. '       ' → logprob: -19.375022888183594
    9. 'High' → logprob: -19.500022888183594
    10. 'hi' → logprob: -20.250022888183594

Token 1567: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -7.896309739408025e-07
    2. ' high' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.625
    4. '_high' → logprob: -20.75
    5. '.high' → logprob: -21.5
    6. 'High' → logprob: -22.125
    7. '-high' → logprob: -22.375
    8. '高' → logprob: -22.625
    9. '(high' → logprob: -22.625
    10. 'hi' → logprob: -22.75

Token 1568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178782993927598
    2. ' =' → logprob: -5.753178596496582
    3. '=
' → logprob: -14.503178596496582
    4. '+=' → logprob: -15.628178596496582
    5. '=end' → logprob: -16.1281795501709
    6. '[' → logprob: -16.6281795501709
    7. '-=' → logprob: -17.0031795501709
    8. ' +=' → logprob: -17.2531795501709
    9. '=int' → logprob: -17.7531795501709
    10. '==' → logprob: -17.7531795501709

Token 1569: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.9361264946837764e-07
    2. ' mid' → logprob: -15.875
    3. 'middle' → logprob: -18.375
    4. '[mid' → logprob: -19.5
    5. '(mid' → logprob: -19.5
    6. 'low' → logprob: -21.375
    7. '_mid' → logprob: -21.5
    8. '   ' → logprob: -22.125
    9. 'min' → logprob: -23.625
    10. 'medium' → logprob: -24.0

Token 1570: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020577155519276857
    2. '-' → logprob: -7.0020575523376465
    3. '
' → logprob: -7.1270575523376465
    4. ')' → logprob: -9.877058029174805
    5. '```' → logprob: -10.002058029174805
    6. '#' → logprob: -10.127058029174805
    7. ' print' → logprob: -10.127058029174805
    8. 'low' → logprob: -10.627058029174805
    9. ')
' → logprob: -11.127058029174805
    10. '

' → logprob: -11.252058029174805

Token 1571: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.250001907348633
    3. '``' → logprob: -19.000001907348633
    4. '
' → logprob: -20.375001907348633
    5. ' print' → logprob: -20.375001907348633
    6. '#print' → logprob: -20.500001907348633
    7. '#' → logprob: -21.500001907348633
    8. 'for' → logprob: -21.875001907348633
    9. '`' → logprob: -22.250001907348633
    10. 'result' → logprob: -23.125001907348633

Token 1572: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.313263863325119
    2. 'low' → logprob: -1.3132638931274414
    3. ' low' → logprob: -13.188263893127441
    4. '_low' → logprob: -15.313263893127441
    5. '(high' → logprob: -17.063262939453125
    6. 'lowest' → logprob: -18.188262939453125
    7. '(' → logprob: -18.188262939453125
    8. '低' → logprob: -18.563262939453125
    9. '(lower' → logprob: -18.563262939453125
    10. '0' → logprob: -19.188262939453125

Token 1573: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022536260075867176
    2. ' -' → logprob: -6.627253532409668
    3. ')' → logprob: -7.002253532409668
    4. '-)' → logprob: -11.252253532409668
    5. ')-' → logprob: -12.627253532409668
    6. '()-' → logprob: -15.127253532409668
    7. '```' → logprob: -15.377253532409668
    8. '−' → logprob: -15.627253532409668
    9. '-
' → logprob: -15.752253532409668
    10. '   ' → logprob: -16.752254486083984

Token 1574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' ' → logprob: -19.125
    4. ')' → logprob: -19.375
    5. '0' → logprob: -20.25
    6. '``' → logprob: -20.375
    7. '১' → logprob: -20.75
    8. '१' → logprob: -20.75
    9. 'from' → logprob: -21.0
    10. '１' → logprob: -21.0

Token 1575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. '```' → logprob: -11.625025749206543
    3. ')
' → logprob: -11.750025749206543
    4. '<|end|>' → logprob: -12.375025749206543
    5. ' )' → logprob: -13.125025749206543
    6. '#' → logprob: -14.250025749206543
    7. '
' → logprob: -14.375025749206543
    8. '')' → logprob: -14.625025749206543
    9. '`)' → logprob: -14.875025749206543
    10. '")' → logprob: -16.12502670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1573
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 277
Tokens correctement prédits (top 10): 771
Précision stricte (1ère position): 16.47%
Précision adaptée (1ère position): 17.61%
Précision (top 10): 49.01%
================================================================================
