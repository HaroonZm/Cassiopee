================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def polygon_area(points):
    n = len(points)
    area = 0
    for i in range(n):
        x1, y1 = points[i]
        x2, y2 = points[(i + 1) % n]
        area += x1 * y2 - y1 * x2
    return abs(area) / 2

sequence = 1
while True:
    n = int(input())
    if n == 0:
        break
    polygon = [tuple(map(int, input().split())) for _ in range(n)]
    area = polygon_area(polygon)
    print(sequence, f"{area:.1f}")
    sequence += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' polygon' (ID: 65081)
  → Token d'amorce (pas de prédiction)

Token 2: '_area' (ID: 34097)
  → Token d'amorce (pas de prédiction)

Token 3: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025415359996259212
    2. '_' → logprob: -6.002541542053223
    3. '```' → logprob: -11.002541542053223
    4. ' (' → logprob: -11.502541542053223
    5. '(p' → logprob: -12.127541542053223
    6. '_parent' → logprob: -12.377541542053223
    7. '(_' → logprob: -12.877541542053223
    8. '("("' → logprob: -13.127541542053223
    9. '\(' → logprob: -13.377541542053223
    10. '('' → logprob: -13.377541542053223

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055408675223588943
    2. ')' → logprob: -3.3054087162017822
    3. '[' → logprob: -4.305408477783203
    4. ':' → logprob: -5.930408477783203
    5. '[]):' → logprob: -8.055408477783203
    6. '<|end|>' → logprob: -8.805408477783203
    7. '```' → logprob: -8.805408477783203
    8. '   ' → logprob: -9.555408477783203
    9. '[int' → logprob: -10.055408477783203
    10. '():' → logprob: -10.055408477783203

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025065694004297256
    2. '   ' → logprob: -3.7750656604766846
    3. '():' → logprob: -7.150065898895264
    4. '```' → logprob: -8.150065422058105
    5. '(' → logprob: -9.025065422058105
    6. '":' → logprob: -9.150065422058105
    7. '    
' → logprob: -9.400065422058105
    8. '):' → logprob: -9.650065422058105
    9. '':' → logprob: -9.775065422058105
    10. '`:' → logprob: -10.150065422058105

Token 6: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03096732124686241
    2. '```' → logprob: -4.0309672355651855
    3. ' ' → logprob: -5.6559672355651855
    4. '    ' → logprob: -6.4059672355651855
    5. 'n' (adapté à ' n') → logprob: -6.4059672355651855
    6. '    
' → logprob: -7.0309672355651855
    7. ''' → logprob: -7.5309672355651855
    8. ' if' → logprob: -7.6559672355651855
    9. '       ' → logprob: -7.9059672355651855
    10. '`' → logprob: -8.030967712402344

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6465412974357605
    2. '=' → logprob: -0.8965412974357605
    3. '   ' → logprob: -3.1465413570404053
    4. '_' → logprob: -4.271541118621826
    5. ' ' → logprob: -5.271541118621826
    6. ')' → logprob: -6.146541118621826
    7. '  ' → logprob: -7.271541118621826
    8. '_points' → logprob: -7.271541118621826
    9. '    ' → logprob: -8.021541595458984
    10. '```' → logprob: -8.146541595458984

Token 8: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0001234428636962548
    2. 'len' → logprob: -9.000123023986816
    3. '=len' → logprob: -16.750123977661133
    4. '(len' → logprob: -18.125123977661133
    5. '	len' → logprob: -19.625123977661133
    6. ' ' → logprob: -19.875123977661133
    7. '[len' → logprob: -21.000123977661133
    8. ' ' → logprob: -21.375123977661133
    9. ' length' → logprob: -21.625123977661133
    10. '   ' → logprob: -21.625123977661133

Token 9: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.005240872036665678
    2. '(' → logprob: -5.2552409172058105
    3. ' points' → logprob: -12.005240440368652
    4. 'points' → logprob: -14.505240440368652
    5. '	points' → logprob: -15.130240440368652
    6. '_points' → logprob: -16.50524139404297
    7. ')' → logprob: -16.75524139404297
    8. ' (' → logprob: -17.00524139404297
    9. '(
' → logprob: -17.13024139404297
    10. '(point' → logprob: -17.63024139404297

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.625017166137695
    3. ' )' → logprob: -12.375017166137695
    4. ')
' → logprob: -13.750017166137695
    5. ')return' → logprob: -14.250017166137695
    6. '`)' → logprob: -14.750017166137695
    7. '```' → logprob: -14.875017166137695
    8. '')' → logprob: -14.875017166137695
    9. '[' → logprob: -15.500017166137695
    10. ' ' → logprob: -15.625017166137695

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28431224822998047
    2. '    
' → logprob: -1.7843122482299805
    3. '```' → logprob: -2.7843122482299805
    4. '``' → logprob: -5.7843122482299805
    5. '   
' → logprob: -5.9093122482299805
    6. '    ' → logprob: -6.0343122482299805
    7. '     
' → logprob: -6.1593122482299805
    8. '
' → logprob: -6.2843122482299805
    9. ' if' → logprob: -7.0343122482299805
    10. '  
' → logprob: -7.1593122482299805

Token 12: ' area' (ID: 3624)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23501251637935638
    2. '```' → logprob: -2.9850125312805176
    3. ' area' → logprob: -3.1100125312805176
    4. 'area' (adapté à ' area') → logprob: -3.3600125312805176
    5. '    
' → logprob: -3.3600125312805176
    6. ' if' → logprob: -3.7350125312805176
    7. '    ' → logprob: -4.985012531280518
    8. 'result' → logprob: -5.610012531280518
    9. ' result' → logprob: -6.110012531280518
    10. '``' → logprob: -6.735012531280518

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01013603713363409
    2. '=' → logprob: -4.635136127471924
    3. ' +=' → logprob: -8.510135650634766
    4. ' ' → logprob: -9.260135650634766
    5. '_' → logprob: -9.885135650634766
    6. ')' → logprob: -12.010135650634766
    7. 's' → logprob: -12.135135650634766
    8. ' *=' → logprob: -12.635135650634766
    9. '<|end|>' → logprob: -12.760135650634766
    10. ' .=' → logprob: -13.010135650634766

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06993665546178818
    2. '0' → logprob: -2.694936752319336
    3. ' ' → logprob: -15.569936752319336
    4. '   ' → logprob: -17.257436752319336
    5. '  ' → logprob: -18.007436752319336
    6. '```' → logprob: -18.694936752319336
    7. '	' → logprob: -19.319936752319336
    8. '۰' → logprob: -20.069936752319336
    9. '1' → logprob: -20.319936752319336
    10. '.' → logprob: -20.382436752319336

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '```' → logprob: -16.000045776367188
    5. 'sum' → logprob: -16.500045776367188
    6. 'float' → logprob: -16.625045776367188
    7. '  ' → logprob: -18.375045776367188
    8. ' ' → logprob: -19.187545776367188
    9. '1' → logprob: -19.312545776367188
    10. '``' → logprob: -19.500045776367188

Token 16: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11908063292503357
    2. ' for' → logprob: -2.4940805435180664
    3. '    ' → logprob: -4.994080543518066
    4. '    
' → logprob: -4.994080543518066
    5. ' ' → logprob: -5.244080543518066
    6. 'for' → logprob: -6.119080543518066
    7. '\' → logprob: -6.744080543518066
    8. '
' → logprob: -6.869080543518066
    9. ' 
' → logprob: -7.119080543518066
    10. '  ' → logprob: -7.369080543518066

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07971031218767166
    2. ' for' → logprob: -2.8297102451324463
    3. ' ' → logprob: -4.829710483551025
    4. 'for' → logprob: -5.329710483551025
    5. '    
' → logprob: -6.829710483551025
    6. '```' → logprob: -6.829710483551025
    7. '  ' → logprob: -7.829710483551025
    8. '
' → logprob: -7.829710483551025
    9. ' 
' → logprob: -8.204710006713867
    10. '  
' → logprob: -8.454710006713867

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6595087051391602
    2. ' for' → logprob: -0.9095087051391602
    3. '   ' → logprob: -2.53450870513916
    4. ' ' → logprob: -7.53450870513916
    5. '```' → logprob: -8.40950870513916
    6. '    ' → logprob: -10.40950870513916
    7. '  ' → logprob: -10.40950870513916
    8. ':' → logprob: -11.65950870513916
    9. '	for' → logprob: -11.65950870513916
    10. '    
' → logprob: -11.78450870513916

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018806226551532745
    2. ' ' → logprob: -4.143806457519531
    3. 'i' → logprob: -5.893806457519531
    4. ' ' → logprob: -13.018806457519531
    5. '	i' → logprob: -13.143806457519531
    6. '_' → logprob: -13.393806457519531
    7. '  ' → logprob: -13.643806457519531
    8. ' _' → logprob: -13.643806457519531
    9. ' I' → logprob: -13.893806457519531
    10. '```' → logprob: -14.768806457519531

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018854460213333368
    2. ' ' → logprob: -6.876885414123535
    3. 'in' → logprob: -7.126885414123535
    4. '  ' → logprob: -10.751885414123535
    5. '+' → logprob: -11.626885414123535
    6. '<|end|>' → logprob: -11.876885414123535
    7. '	in' → logprob: -13.001885414123535
    8. 'In' → logprob: -13.626885414123535
    9. ')' → logprob: -13.626885414123535
    10. '```' → logprob: -14.251885414123535

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02669118344783783
    2. 'range' → logprob: -4.02669095993042
    3. ' ' → logprob: -4.77669095993042
    4. '	range' → logprob: -10.776691436767578
    5. '  ' → logprob: -10.901691436767578
    6. '0' → logprob: -11.026691436767578
    7. ' xrange' → logprob: -11.526691436767578
    8. ' in' → logprob: -12.776691436767578
    9. ' n' → logprob: -12.901691436767578
    10. ' ' → logprob: -13.026691436767578

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34856170415878296
    2. '(n' → logprob: -1.2235617637634277
    3. '(len' → logprob: -9.22356128692627
    4. '(
' → logprob: -11.97356128692627
    5. ' (' → logprob: -12.22356128692627
    6. '(

' → logprob: -13.84856128692627
    7. '(i' → logprob: -13.97356128692627
    8. '('' → logprob: -14.09856128692627
    9. 'n' → logprob: -14.59856128692627
    10. '((' → logprob: -14.72356128692627

Token 23: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33410900831222534
    2. '):' → logprob: -1.5841090679168701
    3. '-' → logprob: -3.33410906791687
    4. ' )' → logprob: -3.58410906791687
    5. ' -' → logprob: -4.959108829498291
    6. ' ):' → logprob: -5.834108829498291
    7. '+' → logprob: -5.959108829498291
    8. '   ' → logprob: -6.209108829498291
    9. '):
' → logprob: -7.709108829498291
    10. ' ' → logprob: -8.70910930633545

Token 24: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2588626444339752
    2. '   ' → logprob: -2.1338627338409424
    3. ' ' → logprob: -2.6338627338409424
    4. '(' → logprob: -4.758862495422363
    5. '  ' → logprob: -4.883862495422363
    6. ' (' → logprob: -5.008862495422363
    7. ')' → logprob: -6.008862495422363
    8. ':' → logprob: -6.258862495422363
    9. '       ' → logprob: -6.508862495422363
    10. ''' → logprob: -6.883862495422363

Token 25: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4289368391036987
    2. ' points' → logprob: -1.4289368391036987
    3. '    ' → logprob: -1.9289368391036987
    4. '   ' → logprob: -2.3039369583129883
    5. '(' → logprob: -2.9289369583129883
    6. ' ' → logprob: -3.0539369583129883
    7. 'points' → logprob: -3.0539369583129883
    8. '(points' → logprob: -3.0539369583129883
    9. '+' → logprob: -4.428936958312988
    10. '  ' → logprob: -4.928936958312988

Token 26: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.22988760471344
    2. '<|end|>' → logprob: -1.22988760471344
    3. '[i' → logprob: -1.85488760471344
    4. ']' → logprob: -1.97988760471344
    5. '_' → logprob: -3.7298874855041504
    6. ' *' → logprob: -3.8548874855041504
    7. '<|end|>' → logprob: -3.9798874855041504
    8. ')' → logprob: -4.85488748550415
    9. 's' → logprob: -4.97988748550415
    10. ',' → logprob: -5.10488748550415

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07525115460157394
    2. ' ,' → logprob: -2.9502511024475098
    3. ' ' → logprob: -5.07525110244751
    4. '<|end|>' → logprob: -5.32525110244751
    5. '[' → logprob: -5.95025110244751
    6. '=' → logprob: -6.45025110244751
    7. ']' → logprob: -6.70025110244751
    8. ' =' → logprob: -6.95025110244751
    9. '   ' → logprob: -7.57525110244751
    10. ')' → logprob: -7.57525110244751

Token 28: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759919285774231
    2. ' y' → logprob: -0.8259919285774231
    3. '<|end|>' → logprob: -9.9509916305542
    4. ' ' → logprob: -13.7009916305542
    5. '	y' → logprob: -13.8259916305542
    6. '=' → logprob: -14.2009916305542
    7. ',y' → logprob: -14.8259916305542
    8. ' =' → logprob: -14.8259916305542
    9. '<|end|>' → logprob: -14.9509916305542
    10. ' points' → logprob: -15.2009916305542

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2515895366668701
    2. '_' → logprob: -2.00158953666687
    3. '<|end|>' → logprob: -3.25158953666687
    4. 'i' → logprob: -3.37658953666687
    5. '0' → logprob: -5.376589775085449
    6. '_i' → logprob: -5.626589775085449
    7. ',' → logprob: -6.251589775085449
    8. 's' → logprob: -7.126589775085449
    9. ' =' → logprob: -7.251589775085449
    10. '<|end|>' → logprob: -7.376589775085449

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04432564228773117
    2. '=' → logprob: -3.169325590133667
    3. ',' → logprob: -6.669325828552246
    4. '<|end|>' → logprob: -10.669325828552246
    5. ')' → logprob: -11.294325828552246
    6. ' ' → logprob: -12.044325828552246
    7. ' =)' → logprob: -12.544325828552246
    8. ' =
' → logprob: -12.794325828552246
    9. ' ,' → logprob: -13.169325828552246
    10. '   ' → logprob: -13.419325828552246

Token 31: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.033652618527412415
    2. 'points' → logprob: -3.4086525440216064
    3. '(points' → logprob: -12.533652305603027
    4. '	points' → logprob: -12.783652305603027
    5. '.points' → logprob: -15.533652305603027
    6. '_points' → logprob: -16.158653259277344
    7. ' puntos' → logprob: -17.033653259277344
    8. ' pontos' → logprob: -17.033653259277344
    9. 'oints' → logprob: -17.408653259277344
    10. ' ' → logprob: -18.283653259277344

Token 32: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002477081725373864
    2. '[' → logprob: -6.002477169036865
    3. '[
' → logprob: -14.502476692199707
    4. '[(' → logprob: -15.502476692199707
    5. '[n' → logprob: -16.002477645874023
    6. '[x' → logprob: -16.127477645874023
    7. '[I' → logprob: -16.252477645874023
    8. '[int' → logprob: -16.752477645874023
    9. '[j' → logprob: -17.002477645874023
    10. 'i' → logprob: -17.252477645874023

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016110755677800626
    2. ']
' → logprob: -9.250161170959473
    3. ')' → logprob: -10.250161170959473
    4. ' ]' → logprob: -11.500161170959473
    5. ')]' → logprob: -12.125161170959473
    6. '[' → logprob: -12.375161170959473
    7. '])' → logprob: -12.500161170959473
    8. '],' → logprob: -13.500161170959473
    9. ']

' → logprob: -13.875161170959473
    10. '   ' → logprob: -14.375161170959473

Token 34: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3109440803527832
    2. ' x' → logprob: -1.5609440803527832
    3. '       ' → logprob: -3.685944080352783
    4. '   ' → logprob: -4.935944080352783
    5. ' (' → logprob: -5.060944080352783
    6. ' ' → logprob: -5.185944080352783
    7. ' 
' → logprob: -6.060944080352783
    8. '    ' → logprob: -6.435944080352783
    9. '`' → logprob: -7.060944080352783
    10. '        
' → logprob: -7.185944080352783

Token 36: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4095085859298706
    2. '+' → logprob: -2.15950870513916
    3. ',' → logprob: -2.28450870513916
    4. '0' → logprob: -3.03450870513916
    5. '<|end|>' → logprob: -3.65950870513916
    6. '[' → logprob: -3.90950870513916
    7. '```' → logprob: -4.90950870513916
    8. '[i' → logprob: -5.53450870513916
    9. '2' → logprob: -5.78450870513916
    10. '<|end|>' → logprob: -6.15950870513916

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013103757984936237
    2. ' =' → logprob: -4.76310396194458
    3. ' ,' → logprob: -5.88810396194458
    4. '=' → logprob: -6.38810396194458
    5. ')' → logprob: -11.763103485107422
    6. 's' → logprob: -12.638103485107422
    7. ' ' → logprob: -12.638103485107422
    8. '<|end|>' → logprob: -12.638103485107422
    9. '```' → logprob: -13.763103485107422
    10. ']' → logprob: -13.888103485107422

Token 38: ' y' (ID: 342)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.021701499819755554
    2. ' ' → logprob: -4.021701335906982
    3. 'points' → logprob: -5.771701335906982
    4. ' ' → logprob: -8.77170181274414
    5. ' space' → logprob: -9.39670181274414
    6. 'space' → logprob: -9.77170181274414
    7. ' spaces' → logprob: -10.27170181274414
    8. '(points' → logprob: -10.64670181274414
    9. '	points' → logprob: -10.89670181274414
    10. ' x' → logprob: -11.14670181274414

Token 39: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08493398129940033
    2. '1' → logprob: -3.0849339962005615
    3. '[' → logprob: -3.4599339962005615
    4. '-' → logprob: -5.959933757781982
    5. '```' → logprob: -7.834933757781982
    6. '[i' → logprob: -7.959933757781982
    7. ']' → logprob: -8.58493423461914
    8. '2' → logprob: -9.83493423461914
    9. '<|end|>' → logprob: -9.83493423461914
    10. '[
' → logprob: -9.95993423461914

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005282019264996052
    2. '=' → logprob: -5.255281925201416
    3. ' =
' → logprob: -11.005282402038574
    4. ' ' → logprob: -11.505282402038574
    5. '<|end|>' → logprob: -11.505282402038574
    6. ',' → logprob: -12.130282402038574
    7. ')' → logprob: -12.380282402038574
    8. ' =)' → logprob: -14.505282402038574
    9. ' ,' → logprob: -15.380282402038574
    10. ' points' → logprob: -15.505282402038574

Token 41: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.0009132515988312662
    2. 'points' → logprob: -7.000913143157959
    3. '(points' → logprob: -13.875913619995117
    4. '	points' → logprob: -14.500913619995117
    5. ' ' → logprob: -16.625913619995117
    6. ' pontos' → logprob: -16.625913619995117
    7. '.points' → logprob: -16.750913619995117
    8. ' puntos' → logprob: -17.250913619995117
    9. '_points' → logprob: -17.625913619995117
    10. ' ' → logprob: -19.125913619995117

Token 42: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.021870160475373268
    2. '[' → logprob: -4.021870136260986
    3. '[i' → logprob: -5.646870136260986
    4. '[
' → logprob: -8.771870613098145
    5. '(i' → logprob: -11.021870613098145
    6. '(' → logprob: -11.646870613098145
    7. '[next' → logprob: -13.646870613098145
    8. '   ' → logprob: -14.521870613098145
    9. '[j' → logprob: -14.646870613098145
    10. '[n' → logprob: -14.771870613098145

Token 43: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014168102643452585
    2. '(i' → logprob: -8.875142097473145
    3. ' i' → logprob: -13.375142097473145
    4. '```' → logprob: -15.500142097473145
    5. ' (' → logprob: -16.625141143798828
    6. ')i' → logprob: -16.750141143798828
    7. '_i' → logprob: -17.125141143798828
    8. '	i' → logprob: -17.250141143798828
    9. '{i' → logprob: -17.500141143798828
    10. '(' → logprob: -17.750141143798828

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029758941382169724
    2. ' +' → logprob: -3.529758930206299
    3. '1' → logprob: -11.779759407043457
    4. ' ' → logprob: -14.904759407043457
    5. '+
' → logprob: -15.779759407043457
    6. '+i' → logprob: -17.02975845336914
    7. ' +
' → logprob: -17.02975845336914
    8. '```' → logprob: -17.15475845336914
    9. '+j' → logprob: -17.15475845336914
    10. '0' → logprob: -17.27975845336914

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -15.501032829284668
    4. '   ' → logprob: -17.001033782958984
    5. ' ' → logprob: -17.126033782958984
    6. ')' → logprob: -17.813533782958984
    7. '`' → logprob: -18.188533782958984
    8. '  ' → logprob: -18.751033782958984
    9. '<|end|>' → logprob: -19.063533782958984
    10. '2' → logprob: -19.126033782958984

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.750001907348633
    4. '<|end|>' → logprob: -18.000001907348633
    5. ')' → logprob: -18.125001907348633
    6. '
' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.125001907348633
    8. 'def' → logprob: -20.000001907348633
    9. '۱' → logprob: -20.937501907348633
    10. '`' → logprob: -21.125001907348633

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008490558248013258
    2. ')%' → logprob: -7.50084924697876
    3. ' )' → logprob: -8.250848770141602
    4. '%' → logprob: -10.750848770141602
    5. ')]' → logprob: -11.875848770141602
    6. ']' → logprob: -12.875848770141602
    7. ' %' → logprob: -13.625848770141602
    8. ')
' → logprob: -13.875848770141602
    9. '%)' → logprob: -14.250848770141602
    10. ')`' → logprob: -15.250848770141602

Token 48: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008601570501923561
    2. ')%' → logprob: -5.883601665496826
    3. ' )' → logprob: -6.258601665496826
    4. '%' → logprob: -6.383601665496826
    5. ' %' → logprob: -6.883601665496826
    6. ']' → logprob: -6.883601665496826
    7. ')]' → logprob: -9.383601188659668
    8. ']%' → logprob: -10.508601188659668
    9. ' ]' → logprob: -12.008601188659668
    10. '%)' → logprob: -13.133601188659668

Token 49: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269325166940689
    2. ' n' → logprob: -2.1269326210021973
    3. '	n' → logprob: -12.376932144165039
    4. ' ' → logprob: -16.50193214416504
    5. '<|end|>' → logprob: -16.75193214416504
    6. ')n' → logprob: -16.87693214416504
    7. '   ' → logprob: -17.50193214416504
    8. '  ' → logprob: -18.25193214416504
    9. ' н' → logprob: -18.25193214416504
    10. '_n' → logprob: -18.75193214416504

Token 50: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013874107040464878
    2. ']' → logprob: -4.388874053955078
    3. ')]' → logprob: -7.513874053955078
    4. '       ' → logprob: -8.013874053955078
    5. ')
' → logprob: -8.513874053955078
    6. '   ' → logprob: -8.888874053955078
    7. '])' → logprob: -9.638874053955078
    8. ')])' → logprob: -10.013874053955078
    9. '```' → logprob: -11.763874053955078
    10. '）' → logprob: -12.388874053955078

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15106099843978882
    2. '       ' → logprob: -2.5260610580444336
    3. ' ' → logprob: -3.7760610580444336
    4. '    
' → logprob: -4.401061058044434
    5. ')' → logprob: -5.276061058044434
    6. '`' → logprob: -5.651061058044434
    7. '    ' → logprob: -5.901061058044434
    8. ' area' → logprob: -6.276061058044434
    9. '  ' → logprob: -6.901061058044434
    10. '\' → logprob: -7.026061058044434

Token 52: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.34276559948921204
    2. '   ' → logprob: -1.9677655696868896
    3. ' area' → logprob: -2.8427655696868896
    4. '       ' → logprob: -2.8427655696868896
    5. ' ' → logprob: -4.217765808105469
    6. ')' → logprob: -4.967765808105469
    7. '    ' → logprob: -6.217765808105469
    8. '+' → logprob: -6.342765808105469
    9. 'a' → logprob: -6.717765808105469
    10. '*' → logprob: -6.967765808105469

Token 53: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0034620333462953568
    2. '+=' → logprob: -5.753461837768555
    3. '+' → logprob: -8.253461837768555
    4. ' +' → logprob: -11.503461837768555
    5. '+=(' → logprob: -12.878461837768555
    6. '<|end|>' → logprob: -12.878461837768555
    7. '```' → logprob: -13.503461837768555
    8. ')' → logprob: -13.628461837768555
    9. ' -=' → logprob: -13.753461837768555
    10. '+='' → logprob: -13.878461837768555

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9388664364814758
    2. '(x' → logprob: -0.9388664364814758
    3. ' x' → logprob: -1.688866376876831
    4. ' (' → logprob: -3.438866376876831
    5. '   ' → logprob: -7.18886661529541
    6. '(' → logprob: -8.31386661529541
    7. ' ' → logprob: -11.43886661529541
    8. '	x' → logprob: -11.68886661529541
    9. '  ' → logprob: -12.81386661529541
    10. '```' → logprob: -13.31386661529541

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.253713218029588e-05
    2. '*' → logprob: -10.625062942504883
    3. '_' → logprob: -10.750062942504883
    4. '[i' → logprob: -12.125062942504883
    5. '[' → logprob: -12.250062942504883
    6. '```' → logprob: -12.875062942504883
    7. ' ' → logprob: -13.000062942504883
    8. 'i' → logprob: -14.625062942504883
    9. ' *' → logprob: -15.375062942504883
    10. '`' → logprob: -15.500062942504883

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16025236248970032
    2. ' *' → logprob: -1.910252332687378
    3. '**' → logprob: -11.160252571105957
    4. ' ' → logprob: -12.035252571105957
    5. ' ' → logprob: -13.660252571105957
    6. '*object' → logprob: -13.910252571105957
    7. '*y' → logprob: -13.910252571105957
    8. '*

' → logprob: -14.035252571105957
    9. '***' → logprob: -14.160252571105957
    10. ' **' → logprob: -14.285252571105957

Token 57: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015024791937321424
    2. ' y' → logprob: -6.501502513885498
    3. '	y' → logprob: -16.376502990722656
    4. '<|end|>' → logprob: -16.626502990722656
    5. '*y' → logprob: -17.251502990722656
    6. ''y' → logprob: -18.001502990722656
    7. ',y' → logprob: -18.751502990722656
    8. '(y' → logprob: -19.626502990722656
    9. ')y' → logprob: -19.751502990722656
    10. '_y' → logprob: -19.876502990722656

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.25000286102295
    3. '+' → logprob: -15.12500286102295
    4. '```' → logprob: -15.87500286102295
    5. '-' → logprob: -16.000001907348633
    6. '[' → logprob: -16.250001907348633
    7. '_' → logprob: -17.062501907348633
    8. '₂' → logprob: -17.187501907348633
    9. ' ' → logprob: -17.812501907348633
    10. '[next' → logprob: -17.937501907348633

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12716044485569
    2. '-' → logprob: -2.1271605491638184
    3. ' -
' → logprob: -8.50216007232666
    4. ' ' → logprob: -11.12716007232666
    5. '-
' → logprob: -12.62716007232666
    6. ''' → logprob: -13.00216007232666
    7. '"' → logprob: -13.37716007232666
    8. ' -

' → logprob: -13.50216007232666
    9. '```' → logprob: -13.50216007232666
    10. ' ' → logprob: -13.75216007232666

Token 60: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2507096529006958
    2. ' x' → logprob: -1.8757096529006958
    3. ' y' → logprob: -3.0007095336914062
    4. 'y' → logprob: -4.000709533691406
    5. '<|end|>' → logprob: -7.750709533691406
    6. '	x' → logprob: -11.625709533691406
    7. ' ' → logprob: -12.250709533691406
    8. '	y' → logprob: -12.750709533691406
    9. '1' → logprob: -13.000709533691406
    10. '(x' → logprob: -14.875709533691406

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '2' → logprob: -18.125
    4. '_' → logprob: -18.5
    5. '```' → logprob: -19.0
    6. '１' → logprob: -19.375
    7. '[' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. '<|end|>' → logprob: -20.5625
    10. '  ' → logprob: -20.75

Token 62: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6652976870536804
    2. 'x' → logprob: -0.9152976870536804
    3. '*' → logprob: -3.290297746658325
    4. ' x' → logprob: -3.415297746658325
    5. '*x' → logprob: -4.290297508239746
    6. ' ' → logprob: -6.790297508239746
    7. '<|end|>' → logprob: -8.290297508239746
    8. '`' → logprob: -9.665297508239746
    9. '	x' → logprob: -9.790297508239746
    10. '   ' → logprob: -10.165297508239746

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750604182481766
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -16.02975082397461
    4. '<|end|>' → logprob: -18.90475082397461
    5. ' ' → logprob: -19.27975082397461
    6. ')x' → logprob: -19.65475082397461
    7. '{x' → logprob: -20.40475082397461
    8. '(x' → logprob: -20.52975082397461
    9. ''x' → logprob: -20.65475082397461
    10. '>x' → logprob: -20.77975082397461

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025039594620466232
    2. '+' → logprob: -6.002503871917725
    3. '```' → logprob: -11.252504348754883
    4. '1' → logprob: -11.752504348754883
    5. '[' → logprob: -12.002504348754883
    6. '``' → logprob: -15.877504348754883
    7. '[i' → logprob: -16.002504348754883
    8. '[next' → logprob: -16.002504348754883
    9. '-' → logprob: -16.127504348754883
    10. ''s' → logprob: -16.252504348754883

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21292191743850708
    2. ' ' → logprob: -2.2129218578338623
    3. ' return' → logprob: -3.8379218578338623
    4. '\n' → logprob: -4.462922096252441
    5. ')' → logprob: -4.712922096252441
    6. '
' → logprob: -4.712922096252441
    7. '    
' → logprob: -4.962922096252441
    8. '\' → logprob: -5.212922096252441
    9. ' 
' → logprob: -5.337922096252441
    10. 'return' → logprob: -5.837922096252441

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08893489092588425
    2. ' ' → logprob: -3.213934898376465
    3. ' return' → logprob: -3.838934898376465
    4. ' 
' → logprob: -5.588934898376465
    5. ')' → logprob: -5.963934898376465
    6. '\' → logprob: -6.088934898376465
    7. '    
' → logprob: -6.338934898376465
    8. '    ' → logprob: -6.463934898376465
    9. 'return' → logprob: -6.463934898376465
    10. '`' → logprob: -6.588934898376465

Token 67: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34812110662460327
    2. ' ' → logprob: -1.723121166229248
    3. ' return' → logprob: -2.473121166229248
    4. 'return' (adapté à ' return') → logprob: -4.473121166229248
    5. ' 
' → logprob: -5.223121166229248
    6. ')' → logprob: -5.348121166229248
    7. '    ' → logprob: -6.723121166229248
    8. '\' → logprob: -7.223121166229248
    9. '	return' → logprob: -7.348121166229248
    10. '*' → logprob: -7.473121166229248

Token 68: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.017298413440585136
    2. ' area' → logprob: -4.767298221588135
    3. 'abs' → logprob: -4.767298221588135
    4. 'area' → logprob: -9.892298698425293
    5. '   ' → logprob: -10.392298698425293
    6. ' ' → logprob: -10.517298698425293
    7. '0' → logprob: -11.142298698425293
    8. ' ' → logprob: -11.392298698425293
    9. '  ' → logprob: -12.767298698425293
    10. '(abs' → logprob: -12.767298698425293

Token 69: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.20141451060771942
    2. '(' → logprob: -1.7014144659042358
    3. '(space' → logprob: -14.951414108276367
    4. '(a' → logprob: -15.326414108276367
    5. '(angle' → logprob: -15.451414108276367
    6. 'area' → logprob: -16.201414108276367
    7. '(
' → logprob: -16.826414108276367
    8. '(article' → logprob: -17.201414108276367
    9. '(axis' → logprob: -17.451414108276367
    10. '(

' → logprob: -17.451414108276367

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '()' → logprob: -14.750004768371582
    5. ')//' → logprob: -15.000004768371582
    6. '(' → logprob: -16.2500057220459
    7. '）' → logprob: -16.8750057220459
    8. ']' → logprob: -17.0000057220459
    9. ' ' → logprob: -17.0000057220459
    10. '//' → logprob: -17.2500057220459

Token 71: ' /' (ID: 820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2637413442134857
    2. ' ' → logprob: -2.2637412548065186
    3. '"' → logprob: -3.0137412548065186
    4. '()' → logprob: -3.6387412548065186
    5. '_' → logprob: -4.388741493225098
    6. '0' → logprob: -4.888741493225098
    7. ')' → logprob: -5.013741493225098
    8. '   ' → logprob: -5.013741493225098
    9. '`' → logprob: -5.763741493225098
    10. '1' → logprob: -5.888741493225098

Token 72: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -17.87507438659668
    4. '   ' → logprob: -18.25007438659668
    5. '(' → logprob: -18.50007438659668
    6. '２' → logprob: -19.50007438659668
    7. ' ' → logprob: -20.00007438659668
    8. '
' → logprob: -20.25007438659668
    9. '.' → logprob: -20.37507438659668
    10. '۲' → logprob: -20.50007438659668

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.625
    4. '２' → logprob: -20.25
    5. '   ' → logprob: -21.5
    6. '۲' → logprob: -22.25
    7. '(' → logprob: -22.5
    8. '
' → logprob: -23.125
    9. '₂' → logprob: -23.625
    10. '.' → logprob: -23.625

Token 74: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'sequence' (ID: 47173)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3625146150588989
    2. '<|end|>' → logprob: -2.2375144958496094
    3. '\n' → logprob: -2.3625144958496094
    4. '#' → logprob: -3.2375144958496094
    5. '```' → logprob: -3.2375144958496094
    6. '(' → logprob: -5.237514495849609
    7. '\' → logprob: -5.362514495849609
    8. 'newline' → logprob: -5.987514495849609
    9. ' ' → logprob: -6.237514495849609
    10. '

' → logprob: -6.737514495849609

Token 76: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.360358327627182
    2. '(' → logprob: -1.3603583574295044
    3. '#' → logprob: -3.610358238220215
    4. '<|end|>' → logprob: -5.110358238220215
    5. '.' → logprob: -5.360358238220215
    6. ':' → logprob: -5.985358238220215
    7. '\' → logprob: -7.235358238220215
    8. '_' → logprob: -7.360358238220215
    9. '(
' → logprob: -7.360358238220215
    10. '```' → logprob: -7.360358238220215

Token 77: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.22920861840248108
    2. ' [(' → logprob: -1.8542085886001587
    3. '[' → logprob: -3.3542087078094482
    4. ' "' → logprob: -4.979208469390869
    5. ' [
' → logprob: -6.229208469390869
    6. ' ' → logprob: -6.604208469390869
    7. ' [('' → logprob: -6.729208469390869
    8. '[(' → logprob: -7.354208469390869
    9. ' '' → logprob: -7.854208469390869
    10. ' []' → logprob: -8.229208946228027

Token 78: '1' (ID: 16)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2547817826271057
    2. '[' → logprob: -1.504781723022461
    3. '[((' → logprob: -7.129781723022461
    4. '[[' → logprob: -7.379781723022461
    5. ' [(' → logprob: -7.379781723022461
    6. '[p' → logprob: -7.879781723022461
    7. '[
' → logprob: -8.504781723022461
    8. ' [' → logprob: -9.254781723022461
    9. 'polygon' → logprob: -10.129781723022461
    10. '[int' → logprob: -10.254781723022461

Token 79: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17011532187461853
    2. '0' → logprob: -1.920115351676941
    3. ' +' → logprob: -5.0451154708862305
    4. '2' → logprob: -6.2951154708862305
    5. ' ' → logprob: -7.0451154708862305
    6. '.' → logprob: -7.9201154708862305
    7. '*' → logprob: -9.29511547088623
    8. '<|end|>' → logprob: -10.54511547088623
    9. ' *' → logprob: -11.04511547088623
    10. '4' → logprob: -11.04511547088623

Token 80: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012315735220909119
    2. ' +' → logprob: -5.38731575012207
    3. '=' → logprob: -5.63731575012207
    4. ' ' → logprob: -6.26231575012207
    5. '.' → logprob: -7.76231575012207
    6. ' =' → logprob: -7.76231575012207
    7. '0' → logprob: -8.01231575012207
    8. '*' → logprob: -8.26231575012207
    9. '+
' → logprob: -8.88731575012207
    10. ' +=' → logprob: -9.38731575012207

Token 81: ' True' (ID: 6432)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.006175967399030924
    2. '(sequence' → logprob: -5.631175994873047
    3. 'sequence' → logprob: -6.131175994873047
    4. ' True' → logprob: -8.131175994873047
    5. ' ' → logprob: -9.256175994873047
    6. ' (' → logprob: -12.881175994873047
    7. '_sequence' → logprob: -13.131175994873047
    8. 'True' → logprob: -13.506175994873047
    9. '.sequence' → logprob: -14.506175994873047
    10. ' sequences' → logprob: -14.756175994873047

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019460011390037835
    2. ' :' → logprob: -8.625194549560547
    3. ':
' → logprob: -12.375194549560547
    4. ':**' → logprob: -12.750194549560547
    5. '():' → logprob: -13.000194549560547
    6. '):' → logprob: -13.875194549560547
    7. ':def' → logprob: -13.875194549560547
    8. ',' → logprob: -14.500194549560547
    9. ',:' → logprob: -14.750194549560547
    10. ':return' → logprob: -14.875194549560547

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07101618498563766
    2. ':' → logprob: -2.8210160732269287
    3. '<|end|>' → logprob: -5.696016311645508
    4. ' :' → logprob: -6.196016311645508
    5. ' ' → logprob: -6.946016311645508
    6. '    
' → logprob: -7.071016311645508
    7. '    ' → logprob: -8.071016311645508
    8. '(' → logprob: -8.571016311645508
    9. '<|end|>' → logprob: -8.571016311645508
    10. ' (' → logprob: -8.821016311645508

Token 84: ' n' (ID: 297)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.23209069669246674
    2. ' line' → logprob: -2.232090711593628
    3. ' try' → logprob: -2.607090711593628
    4. '   ' → logprob: -5.107090473175049
    5. ' user' → logprob: -5.232090473175049
    6. ' input' → logprob: -5.607090473175049
    7. ' n' → logprob: -5.982090473175049
    8. 'points' → logprob: -6.232090473175049
    9. ' point' → logprob: -7.107090473175049
    10. ' data' → logprob: -7.107090473175049

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2452709972858429
    2. ' >' → logprob: -1.8702709674835205
    3. ' ' → logprob: -2.9952709674835205
    4. '=' → logprob: -5.2452712059021
    5. ' ==' → logprob: -5.4952712059021
    6. ' >=' → logprob: -6.3702712059021
    7. ' <=' → logprob: -7.6202712059021
    8. ' <' → logprob: -7.9952712059021
    9. '  ' → logprob: -7.9952712059021
    10. '>' → logprob: -8.120270729064941

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.024065343663096428
    2. 'int' → logprob: -3.7740652561187744
    3. ' ' → logprob: -7.3990654945373535
    4. ' input' → logprob: -8.649065017700195
    5. '[int' → logprob: -11.524065017700195
    6. 'input' → logprob: -12.274065017700195
    7. '<|end|>' → logprob: -12.274065017700195
    8. '=int' → logprob: -12.399065017700195
    9. '<int' → logprob: -13.149065017700195
    10. '(int' → logprob: -13.149065017700195

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3132753074169159
    2. '(' → logprob: -1.3132753372192383
    3. 'input' → logprob: -11.563275337219238
    4. '(
' → logprob: -13.563275337219238
    5. '()' → logprob: -13.563275337219238
    6. '(eval' → logprob: -15.188275337219238
    7. '(in' → logprob: -15.313275337219238
    8. '(

' → logprob: -15.688275337219238
    9. '(raw' → logprob: -16.438274383544922
    10. ' (' → logprob: -16.563274383544922

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005735502112656832
    2. '())' → logprob: -5.755735397338867
    3. '("("' → logprob: -7.130735397338867
    4. '(' → logprob: -7.255735397338867
    5. '('' → logprob: -7.380735397338867
    6. '("' → logprob: -8.505735397338867
    7. '()>' → logprob: -10.130735397338867
    8. '("")' → logprob: -10.255735397338867
    9. '().' → logprob: -10.880735397338867
    10. '()))' → logprob: -11.255735397338867

Token 89: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004724887665361166
    2. ' not' → logprob: -5.379724979400635
    3. ' ' → logprob: -9.754724502563477
    4. 'n' → logprob: -10.004724502563477
    5. '<|end|>' → logprob: -14.754724502563477
    6. 'not' → logprob: -15.004724502563477
    7. '	n' → logprob: -15.004724502563477
    8. ' ' → logprob: -15.504724502563477
    9. ' н' → logprob: -15.629724502563477
    10. ' n't' → logprob: -17.254724502563477

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22548939287662506
    2. '==' → logprob: -1.6004893779754639
    3. '=' → logprob: -10.225489616394043
    4. ' ' → logprob: -11.225489616394043
    5. '0' → logprob: -11.725489616394043
    6. ' <=' → logprob: -12.725489616394043
    7. '<=' → logprob: -12.850489616394043
    8. '```' → logprob: -12.975489616394043
    9. '<' → logprob: -13.225489616394043
    10. ' =' → logprob: -13.350489616394043

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692873179912567
    2. '0' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.626928329467773
    4. '۰' → logprob: -16.751928329467773
    5. '<|end|>' → logprob: -17.126928329467773
    6. '_' → logprob: -17.126928329467773
    7. '  ' → logprob: -17.814428329467773
    8. '```' → logprob: -17.939428329467773
    9. '   ' → logprob: -18.064428329467773
    10. '=' → logprob: -18.189428329467773

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011188744247192517
    2. ' ' → logprob: -9.12511157989502
    3. '-' → logprob: -13.12511157989502
    4. '```' → logprob: -14.50011157989502
    5. ' -' → logprob: -15.62511157989502
    6. '   ' → logprob: -16.750112533569336
    7. '۰' → logprob: -17.437612533569336
    8. '``' → logprob: -17.687612533569336
    9. '`' → logprob: -17.812612533569336
    10. '  ' → logprob: -17.812612533569336

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026646157493814826
    2. ':
' → logprob: -8.250266075134277
    3. ':return' → logprob: -13.500266075134277
    4. ' :' → logprob: -13.625266075134277
    5. '<|end|>' → logprob: -13.625266075134277
    6. '   ' → logprob: -14.000266075134277
    7. '):' → logprob: -15.625266075134277
    8. '.' → logprob: -16.250267028808594
    9. ':

' → logprob: -16.500267028808594
    10. '<|end|>' → logprob: -16.500267028808594

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13057443499565125
    2. '   ' → logprob: -2.1305744647979736
    3. ':' → logprob: -5.7555742263793945
    4. '    ' → logprob: -8.755574226379395
    5. ' ' → logprob: -9.505574226379395
    6. '     ' → logprob: -9.755574226379395
    7. '      ' → logprob: -10.380574226379395
    8. '<|end|>' → logprob: -10.630574226379395
    9. '	break' → logprob: -10.755574226379395
    10. '  ' → logprob: -11.005574226379395

Token 97: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09517382085323334
    2. '       ' → logprob: -2.9701738357543945
    3. 'break' (adapté à ' break') → logprob: -3.4701738357543945
    4. '   ' → logprob: -4.9701738357543945
    5. '	break' → logprob: -6.5951738357543945
    6. '           ' → logprob: -10.720173835754395
    7. '```' → logprob: -11.470173835754395
    8. ' ' → logprob: -11.845173835754395
    9. '_break' → logprob: -11.970173835754395
    10. ' ' → logprob: -12.345173835754395

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48730483651161194
    2. '   ' → logprob: -1.3623048067092896
    3. '<|end|>' → logprob: -2.362304925918579
    4. '    
' → logprob: -3.612304925918579
    5. '\n' → logprob: -5.9873046875
    6. '  
' → logprob: -6.7373046875
    7. '<|end|>' → logprob: -6.7373046875
    8. '```' → logprob: -6.8623046875
    9. 'n' → logprob: -7.1123046875
    10. ' 
' → logprob: -7.4873046875

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0728982463479042
    2. '<|end|>' → logprob: -3.3228981494903564
    3. ' points' → logprob: -3.9478981494903564
    4. 'points' → logprob: -5.3228983879089355
    5. '    
' → logprob: -5.3228983879089355
    6. '	points' → logprob: -6.1978983879089355
    7. '
' → logprob: -7.0728983879089355
    8. '```' → logprob: -7.5728983879089355
    9. 'n' → logprob: -8.072897911071777
    10. '(points' → logprob: -8.072897911071777

Token 100: ' polygon' (ID: 65081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2810838520526886
    2. ' points' → logprob: -1.5310838222503662
    3. 'points' → logprob: -3.656083822250366
    4. '	points' → logprob: -6.031084060668945
    5. '(points' → logprob: -8.531084060668945
    6. '_points' → logprob: -8.906084060668945
    7. '   ' → logprob: -9.781084060668945
    8. '    
' → logprob: -10.406084060668945
    9. '    ' → logprob: -11.031084060668945
    10. '.points' → logprob: -11.531084060668945

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07252811640501022
    2. '_points' → logprob: -2.947528123855591
    3. '=' → logprob: -4.197527885437012
    4. '_' → logprob: -6.447527885437012
    5. '_area' → logprob: -7.572527885437012
    6. 's' → logprob: -8.947527885437012
    7. ' ' → logprob: -9.947527885437012
    8. 'points' → logprob: -9.947527885437012
    9. '<|end|>' → logprob: -10.572527885437012
    10. '_pts' → logprob: -10.697527885437012

Token 102: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21992377936840057
    2. ' [' → logprob: -1.969923734664917
    3. ' []' → logprob: -3.469923734664917
    4. '[]' → logprob: -3.719923734664917
    5. '[p' → logprob: -6.969923973083496
    6. '[n' → logprob: -7.344923973083496
    7. '[int' → logprob: -7.844923973083496
    8. '[s' → logprob: -8.344923973083496
    9. '[input' → logprob: -10.219923973083496
    10. '[list' → logprob: -10.344923973083496

Token 103: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00043853666284121573
    2. ' tuple' → logprob: -8.000438690185547
    3. 'list' → logprob: -9.250438690185547
    4. '(tuple' → logprob: -11.875438690185547
    5. '   ' → logprob: -17.125438690185547
    6. 'map' → logprob: -18.250438690185547
    7. ' list' → logprob: -18.625438690185547
    8. ']' → logprob: -19.125438690185547
    9. 'tu' → logprob: -19.625438690185547
    10. '(list' → logprob: -20.000438690185547

Token 104: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.15310683415737e-05
    2. 'map' → logprob: -11.000021934509277
    3. '(int' → logprob: -12.750021934509277
    4. '(' → logprob: -13.375021934509277
    5. ' map' → logprob: -15.000021934509277
    6. '.map' → logprob: -17.62502098083496
    7. '	map' → logprob: -17.87502098083496
    8. '_map' → logprob: -18.12502098083496
    9. '(
' → logprob: -18.37502098083496
    10. '()' → logprob: -19.00002098083496

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020077454391866922
    2. '(' → logprob: -6.252007961273193
    3. 'int' → logprob: -10.002007484436035
    4. '(input' → logprob: -11.127007484436035
    5. ',int' → logprob: -11.752007484436035
    6. '(float' → logprob: -12.627007484436035
    7. ')' → logprob: -12.627007484436035
    8. '<int' → logprob: -13.377007484436035
    9. '(
' → logprob: -14.127007484436035
    10. ']int' → logprob: -14.377007484436035

Token 106: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016578540205955505
    2. ',input' → logprob: -4.266578674316406
    3. 'input' → logprob: -6.641578674316406
    4. '(' → logprob: -7.141578674316406
    5. ',' → logprob: -8.141578674316406
    6. '(
' → logprob: -11.641578674316406
    7. ' input' → logprob: -11.891578674316406
    8. '=input' → logprob: -12.766578674316406
    9. ' (' → logprob: -13.016578674316406
    10. ')' → logprob: -13.516578674316406

Token 107: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009155054576694965
    2. ' input' → logprob: -7.00091552734375
    3. ')' → logprob: -13.25091552734375
    4. '(input' → logprob: -13.50091552734375
    5. ',input' → logprob: -14.62591552734375
    6. '   ' → logprob: -16.12591552734375
    7. '=input' → logprob: -16.12591552734375
    8. '	input' → logprob: -16.75091552734375
    9. '<input' → logprob: -17.12591552734375
    10. ' ' → logprob: -17.37591552734375

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1008713702030946e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -14.625001907348633
    4. '()
' → logprob: -16.625001907348633
    5. '(' → logprob: -18.000001907348633
    6. '.' → logprob: -18.750001907348633
    7. '.split' → logprob: -19.125001907348633
    8. 'split' → logprob: -19.375001907348633
    9. ' ' → logprob: -19.625001907348633
    10. ')' → logprob: -19.750001907348633

Token 109: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015260485233739018
    2. 'strip' → logprob: -6.50152587890625
    3. 'rstrip' → logprob: -10.75152587890625
    4. ' split' → logprob: -13.25152587890625
    5. '(split' → logprob: -14.50152587890625
    6. '.split' → logprob: -17.75152587890625
    7. 's' → logprob: -18.50152587890625
    8. 'plit' → logprob: -19.00152587890625
    9. ' strip' → logprob: -19.25152587890625
    10. '().' → logprob: -19.25152587890625

Token 110: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002664481056854129
    2. '))' → logprob: -6.002664566040039
    3. '()' → logprob: -8.877664566040039
    4. '()))
' → logprob: -10.752664566040039
    5. '())' → logprob: -11.252664566040039
    6. '(' → logprob: -11.752664566040039
    7. '())))' → logprob: -13.252664566040039
    8. '()
' → logprob: -13.377664566040039
    9. '().' → logprob: -13.627664566040039
    10. '()));' → logprob: -14.752664566040039

Token 111: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12347037345170975
    2. ' for' → logprob: -2.9984703063964844
    3. 'for' → logprob: -3.2484703063964844
    4. '()' → logprob: -3.9984703063964844
    5. '   ' → logprob: -4.748470306396484
    6. ' ' → logprob: -8.748470306396484
    7. ' )' → logprob: -9.123470306396484
    8. '	for' → logprob: -9.873470306396484
    9. '(' → logprob: -9.998470306396484
    10. ')]' → logprob: -10.623470306396484

Token 112: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5577593445777893
    2. '_' → logprob: -0.9327593445777893
    3. ' range' → logprob: -3.4327592849731445
    4. 'range' → logprob: -6.6827592849731445
    5. ' ' → logprob: -8.307759284973145
    6. ' i' → logprob: -9.182759284973145
    7. '_range' → logprob: -9.682759284973145
    8. ' in' → logprob: -9.807759284973145
    9. 'i' → logprob: -11.057759284973145
    10. '(range' → logprob: -12.432759284973145

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19813823699951172
    2. 'in' → logprob: -2.0731382369995117
    3. 'range' → logprob: -2.9481382369995117
    4. ' range' → logprob: -6.573138236999512
    5. 'n' → logprob: -9.948138236999512
    6. ' ' → logprob: -10.323138236999512
    7. '(' → logprob: -11.823138236999512
    8. '  ' → logprob: -11.948138236999512
    9. '	range' → logprob: -11.948138236999512
    10. 'i' → logprob: -12.323138236999512

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002967320033349097
    2. ' range' → logprob: -8.125296592712402
    3. '(range' → logprob: -14.250296592712402
    4. ' ' → logprob: -17.50029754638672
    5. '	range' → logprob: -17.75029754638672
    6. '   ' → logprob: -18.25029754638672
    7. ')' → logprob: -18.50029754638672
    8. '[' → logprob: -18.87529754638672
    9. 'rang' → logprob: -19.12529754638672
    10. '  ' → logprob: -19.12529754638672

Token 115: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.6789137084269896e-05
    2. 'n' → logprob: -10.75003719329834
    3. '(' → logprob: -11.12503719329834
    4. ' (' → logprob: -15.00003719329834
    5. ' n' → logprob: -15.37503719329834
    6. '(
' → logprob: -18.875036239624023
    7. '	n' → logprob: -19.000036239624023
    8. ')n' → logprob: -19.250036239624023
    9. ' ' → logprob: -20.250036239624023
    10. '   ' → logprob: -20.625036239624023

Token 116: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012023169983876869
    2. ']' → logprob: -9.625120162963867
    3. ')' → logprob: -9.875120162963867
    4. ')]
' → logprob: -13.625120162963867
    5. '))' → logprob: -15.000120162963867
    6. '   ' → logprob: -15.500120162963867
    7. ' )' → logprob: -15.625120162963867
    8. ')],' → logprob: -15.625120162963867
    9. ')])' → logprob: -15.625120162963867
    10. '])]' → logprob: -15.750120162963867

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39131489396095276
    2. '   ' → logprob: -1.1413148641586304
    3. '    
' → logprob: -5.89131498336792
    4. 'area' → logprob: -7.39131498336792
    5. ' area' → logprob: -7.51631498336792
    6. '   
' → logprob: -9.141314506530762
    7. '<|end|>' → logprob: -9.141314506530762
    8. '  
' → logprob: -9.516314506530762
    9. '```' → logprob: -9.516314506530762
    10. '
' → logprob: -9.766314506530762

Token 118: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.897215723991394
    2. 'area' (adapté à ' area') → logprob: -1.022215723991394
    3. 'print' → logprob: -1.647215723991394
    4. ' print' → logprob: -3.7722158432006836
    5. '   ' → logprob: -4.772215843200684
    6. 'result' → logprob: -5.522215843200684
    7. ' result' → logprob: -5.647215843200684
    8. 'a' → logprob: -9.022215843200684
    9. '```' → logprob: -9.397215843200684
    10. '    
' → logprob: -9.584715843200684

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1495392918586731
    2. ' +=' → logprob: -2.3995392322540283
    3. ' ' → logprob: -3.5245392322540283
    4. '=' → logprob: -4.649539470672607
    5. '<|end|>' → logprob: -5.149539470672607
    6. '_' → logprob: -7.274539470672607
    7. '<|end|>' → logprob: -7.524539470672607
    8. ' .=' → logprob: -7.899539470672607
    9. ' *=' → logprob: -8.39953899383545
    10. ' <<=' → logprob: -9.02453899383545

Token 120: ' polygon' (ID: 65081)
  Prédit: ' polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.03365077078342438
    2. 'polygon' → logprob: -3.4086508750915527
    3. 'pol' → logprob: -13.408650398254395
    4. '_polygon' → logprob: -13.533650398254395
    5. ' polygons' → logprob: -14.408650398254395
    6. ' ' → logprob: -14.408650398254395
    7. ' polynomial' → logprob: -15.408650398254395
    8. 'olygon' → logprob: -15.783650398254395
    9. ' ' → logprob: -15.783650398254395
    10. 'Polygon' → logprob: -15.783650398254395

Token 121: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.500000953674316
    3. ' _' → logprob: -16.75
    4. 'area' → logprob: -17.125
    5. '_AREA' → logprob: -17.25
    6. ')_' → logprob: -17.625
    7. '_are' → logprob: -17.875
    8. '_size' → logprob: -18.75
    9. 'Area' → logprob: -18.75
    10. '_angle' → logprob: -19.0

Token 122: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005891331238672137
    2. '(' → logprob: -7.625589370727539
    3. '(points' → logprob: -9.250589370727539
    4. '(poly' → logprob: -12.875589370727539
    5. '(pol' → logprob: -13.875589370727539
    6. ' (' → logprob: -14.250589370727539
    7. '(
' → logprob: -15.250589370727539
    8. '(sequence' → logprob: -15.375589370727539
    9. ' polygon' → logprob: -15.750589370727539
    10. 'polygon' → logprob: -16.50058937072754

Token 123: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.0006121210753917694
    2. 'ol' → logprob: -8.375612258911133
    3. 'oly' → logprob: -8.750612258911133
    4. 'polygon' → logprob: -8.875612258911133
    5. 'oints' → logprob: -9.500612258911133
    6. 'ly' → logprob: -12.750612258911133
    7. 'ygon' → logprob: -13.000612258911133
    8. '   ' → logprob: -14.125612258911133
    9. 'lyg' → logprob: -14.500612258911133
    10. 'oy' → logprob: -14.500612258911133

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0399591363966465
    2. ')
' → logprob: -3.289959192276001
    3. '   ' → logprob: -6.289958953857422
    4. ' )' → logprob: -10.914958953857422
    5. ')
' → logprob: -11.164958953857422
    6. 'print' → logprob: -11.789958953857422
    7. ' ' → logprob: -12.539958953857422
    8. ' )
' → logprob: -12.789958953857422
    9. '<|end|>' → logprob: -13.039958953857422
    10. '[' → logprob: -13.164958953857422

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24905338883399963
    2. ' print' → logprob: -2.124053478240967
    3. 'print' → logprob: -2.374053478240967
    4. '
' → logprob: -4.999053478240967
    5. ' if' → logprob: -6.999053478240967
    6. '```' → logprob: -9.499053001403809
    7. 'if' → logprob: -9.999053001403809
    8. '    
' → logprob: -11.249053001403809
    9. '
' → logprob: -12.999053001403809
    10. ' 
' → logprob: -13.124053001403809

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3153933584690094
    2. ' print' → logprob: -1.315393328666687
    3. '   ' → logprob: -6.690393447875977
    4. 'if' → logprob: -7.815393447875977
    5. ' if' → logprob: -7.940393447875977
    6. '
' → logprob: -9.440393447875977
    7. '```' → logprob: -10.940393447875977
    8. ' area' → logprob: -11.690393447875977
    9. 'area' → logprob: -11.940393447875977
    10. '	print' → logprob: -13.565393447875977

Token 127: '(sequence' (ID: 129991)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2448797971010208
    2. '(' → logprob: -1.6198798418045044
    3. '("' → logprob: -4.744879722595215
    4. '(area' → logprob: -4.994879722595215
    5. '('' → logprob: -5.994879722595215
    6. '(round' → logprob: -7.244879722595215
    7. '()' → logprob: -7.994879722595215
    8. 'f' → logprob: -9.619879722595215
    9. '(int' → logprob: -9.619879722595215
    10. ' (' → logprob: -10.744879722595215

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08388044685125351
    2. ')' → logprob: -2.5838804244995117
    3. ',)' → logprob: -5.833880424499512
    4. ' ,' → logprob: -6.958880424499512
    5. ' )' → logprob: -8.083880424499512
    6. ',",' → logprob: -8.458880424499512
    7. ',end' → logprob: -8.958880424499512
    8. ',:)' → logprob: -8.958880424499512
    9. '")' → logprob: -9.708880424499512
    10. ',f' → logprob: -9.833880424499512

Token 129: ' f' (ID: 285)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0029964817222207785
    2. 'f' → logprob: -7.127996444702148
    3. '"{' → logprob: -7.127996444702148
    4. 'round' → logprob: -7.627996444702148
    5. '"' → logprob: -8.002996444702148
    6. ' area' → logprob: -8.627996444702148
    7. ')' → logprob: -8.752996444702148
    8. 'int' → logprob: -9.377996444702148
    9. 'format' → logprob: -9.502996444702148
    10. ''{' → logprob: -11.127996444702148

Token 130: '"{' (ID: 27510)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.588869035243988
    2. '"{' → logprob: -0.838869035243988
    3. ''{' → logprob: -5.338869094848633
    4. ''' → logprob: -6.213869094848633
    5. '"The' → logprob: -6.338869094848633
    6. 'area' → logprob: -6.338869094848633
    7. '"A' → logprob: -6.463869094848633
    8. '{' → logprob: -8.963869094848633
    9. '":' → logprob: -8.963869094848633
    10. 'Area' → logprob: -9.213869094848633

Token 131: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.00018947436183225363
    2. ' area' → logprob: -9.125189781188965
    3. ':' → logprob: -10.500189781188965
    4. ':.' → logprob: -10.500189781188965
    5. '0' → logprob: -11.125189781188965
    6. ' ' → logprob: -12.750189781188965
    7. '{' → logprob: -13.250189781188965
    8. 'a' → logprob: -13.875189781188965
    9. '   ' → logprob: -14.000189781188965
    10. '(area' → logprob: -14.250189781188965

Token 132: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.8550976164988242e-05
    2. ':' → logprob: -11.000018119812012
    3. ' :.' → logprob: -13.500018119812012
    4. '.' → logprob: -15.125018119812012
    5. ' .' → logprob: -18.875019073486328
    6. '   ' → logprob: -19.250019073486328
    7. ' ' → logprob: -19.500019073486328
    8. '}' → logprob: -19.500019073486328
    9. ':
' → logprob: -19.625019073486328
    10. ':+' → logprob: -19.750019073486328

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49170827865600586
    2. '2' → logprob: -0.9917082786560059
    3. '0' → logprob: -4.866708278656006
    4. '6' → logprob: -5.116708278656006
    5. '3' → logprob: -5.741708278656006
    6. 'f' → logprob: -7.616708278656006
    7. '4' → logprob: -9.991708755493164
    8. '5' → logprob: -11.366708755493164
    9. '9' → logprob: -11.991708755493164
    10. '10' → logprob: -12.241708755493164

Token 134: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.375
    3. ' f' → logprob: -16.375
    4. '2' → logprob: -16.5
    5. '}' → logprob: -17.125
    6. '6' → logprob: -17.25
    7. '	f' → logprob: -17.625
    8. '3' → logprob: -18.625
    9. '-' → logprob: -18.875
    10. 'lf' → logprob: -19.125

Token 135: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0002922022540587932
    2. '")' → logprob: -8.87529182434082
    3. '}")
' → logprob: -9.12529182434082
    4. '}"' → logprob: -10.87529182434082
    5. '}")

' → logprob: -11.62529182434082
    6. ')")' → logprob: -12.12529182434082
    7. '}' → logprob: -12.50029182434082
    8. '}",' → logprob: -13.25029182434082
    9. '}")
' → logprob: -13.75029182434082
    10. 'f' → logprob: -13.87529182434082

Token 136: '   ' (ID: 271)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.017386166378855705
    2. ' sequence' → logprob: -4.517385959625244
    3. '   ' → logprob: -5.142385959625244
    4. '
' → logprob: -8.267386436462402
    5. '(sequence' → logprob: -9.017386436462402
    6. '\n' → logprob: -9.517386436462402
    7. ',' → logprob: -12.142386436462402
    8. '\' → logprob: -12.517386436462402
    9. '```' → logprob: -12.517386436462402
    10. '+
' → logprob: -13.392386436462402

Token 137: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' (adapté à ' sequence') → logprob: -2.165027217415627e-05
    2. ' sequence' → logprob: -10.750021934509277
    3. '(sequence' → logprob: -16.75002098083496
    4. '   ' → logprob: -17.12502098083496
    5. '
' → logprob: -18.25002098083496
    6. '    
' → logprob: -21.12502098083496
    7. '.sequence' → logprob: -21.25002098083496
    8. '_sequence' → logprob: -21.75002098083496
    9. '```' → logprob: -22.00002098083496
    10. ' ' → logprob: -22.37502098083496

Token 138: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015278246253728867
    2. ' +=' → logprob: -4.765278339385986
    3. '+' → logprob: -5.015278339385986
    4. '++' → logprob: -13.015277862548828
    5. '+="' → logprob: -13.515277862548828
    6. '+='' → logprob: -13.890277862548828
    7. ']+=' → logprob: -14.765277862548828
    8. '=' → logprob: -14.765277862548828
    9. '```' → logprob: -16.265277862548828
    10. '+++' → logprob: -16.265277862548828

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364592790603638
    2. ' ' → logprob: -3.4086458683013916
    3. ' ' → logprob: -15.783645629882812
    4. '```' → logprob: -16.783645629882812
    5. '   ' → logprob: -17.283645629882812
    6. '    ' → logprob: -17.971145629882812
    7. '１' → logprob: -18.096145629882812
    8. '۱' → logprob: -18.283645629882812
    9. '<|end|>' → logprob: -18.533645629882812
    10. ' space' → logprob: -18.971145629882812

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.125001907348633
    4. '<|end|>' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '１' → logprob: -21.062501907348633
    8. '१' → logprob: -21.125001907348633
    9. '১' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 50.72%
Précision adaptée (1ère position): 54.35%
Précision (top 10): 85.51%
================================================================================
