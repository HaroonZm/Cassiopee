================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def main():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        m, n = map(int, line.split())
        if m == 0 and n == 0:
            break
        times = [int(input()) for _ in range(n)]
        # arrival times: car i arrives at i*10
        # parking spots: each has upper and lower slot (None or (car_id, leave_time))
        spots = [ [None,None] for _ in range(m)]  # [lower, upper]
        leave_order = []
        waiting = deque()
        time = 0
        car_idx = 0
        total_cars = n
        parking_cars = 0

        def remaining_time(pos):
            # returns list of remaining times of cars in this spot (lower then upper)
            res = []
            for car in spots[pos]:
                if car is None:
                    res.append(None)
                else:
                    res.append(car[1]-current_time)
            return res

        def park_car(car_id, park_time):
            # find spot following the rules
            # 1) any empty spot (both None) -> pick smallest spot #
            empty_spots = [i for i,(l,u) in enumerate(spots) if l is None and u is None]
            if empty_spots:
                spot = empty_spots[0]
                spots[spot][0] = (car_id, park_time)
                return True

            # 2) any spot with 1 car: put new car in upper slot, but may need to move previous lower to upper
            empty_one = [i for i,(l,u) in enumerate(spots) if (l is not None and u is None) or (l is None and u is not None)]
            # but problem states that 2段式 has 1 lower and 1 upper, so first is lower, second is upper,
            # and already parking assigns first car to lower, second car to upper

            # 3) For spots partly occupied or full?
            # Actually, per problem:
            # when parking, first try spots with 0 cars
            # if no such spot, then pick spots with 1 car whose remaining parking time satisfies conditions

            # So, find spots that have exactly one car
            one_car_spots = []
            for i in range(m):
                l,u = spots[i]
                count = (l is not None) + (u is not None)
                if count==1:
                    one_car_spots.append(i)

            ctime = park_time # the leave time of new car

            # For these spots with one car, compute difference with existing car(s)
            # For difference calculation, use existing car remaining time(s)
            # Existing remaining time = leave time - current_time
            # But what is current_time? The arrival time of the incoming car: 10*car_id (starting id=0)
            current_time = car_id*10

            candidates = []
            less_equal = []
            less = []
            for pos in one_car_spots:
                # get occupied car's remaining time
                l,u = spots[pos]
                exist_car = l if l is not None else u
                rt = exist_car[1]-current_time
                diff = rt - times[car_id]
                if rt >= times[car_id]:
                    # diff >= 0
                    less_equal.append((diff,pos))
                else:
                    # diff < 0
                    less.append((abs(diff),pos))
            if less_equal:
                less_equal.sort(key=lambda x:(x[0],x[1]))
                spot = less_equal[0][1]
                # park upper
                spots[spot][1] = (car_id+1, park_time)
                # move existing lower to upper? no, existing is lower, we put new car upper
                return True
            if less:
                less.sort(key=lambda x:(x[0],x[1]))
                spot = less[0][1]
                spots[spot][1] = (car_id+1, park_time)
                return True

            # no available spots, return False
            return False


        def park_car_full(car_id):
            current_time = car_id*10
            ct = current_time + times[car_id]

            # 1) check empty spots no cars
            empty_spots = [i for i,(l,u) in enumerate(spots) if l is None and u is None]
            if empty_spots:
                spot = empty_spots[0]
                spots[spot][0] = (car_id+1, ct)
                return True

            # 2) spots with one car, per problem's parking rule
            one_car_spots = []
            for i in range(m):
                l,u = spots[i]
                cnt = (l is not None)+(u is not None)
                if cnt == 1:
                    one_car_spots.append(i)

            less_equal = []
            less = []
            for pos in one_car_spots:
                l,u = spots[pos]
                exist_car = l if l is not None else u
                remain = exist_car[1]-current_time
                diff = remain - times[car_id]
                if remain >= times[car_id]:
                    less_equal.append((diff,pos))
                else:
                    less.append((abs(diff),pos))
            if less_equal:
                less_equal.sort(key=lambda x:(x[0],x[1]))
                spot = less_equal[0][1]
                spots[spot][1] = (car_id+1, ct)
                return True
            if less:
                less.sort(key=lambda x:(x[0],x[1]))
                spot = less[0][1]
                spots[spot][1] = (car_id+1, ct)
                return True
            return False

        # simulate each 10 min interval until all cars have arrived and left
        # but multiple cars come and leave at same time may occur
        # So track next arrival, next departure times
        # departure can be multiple cars at same time, output in spot order

        all_leave = 0
        current_time = 0
        waiting = deque()
        arriving_cars = 0 # next car to come index
        left = [False]*n
        output = []

        # convert spots with (car_id,leave_time) with car_id 1-based
        # At each time:
        # 1) remove cars whose leave_time == current_time (for upper slot, must wait lower leaves)
        # 2) after all removals, park waiting cars as many as possible
        # 3) if next car arrival_time == current_time, add to waiting (or try park immediately)
        # iterate time by 10 min steps until all cars left

        max_time = 1500 # safe upper limit, as max times 120*10 cars ~1200

        while len(output)<n:
            current_time = arriving_cars*10 if arriving_cars<n else current_time+10
            # First, remove cars leaving now (if any), order spots by number
            # But upper must wait lower car to leave first

            # find cars leaving now
            leaving_now = []
            for i in range(m):
                lower = spots[i][0]
                upper = spots[i][1]
                # check lower
                if lower and lower[1] <= current_time:
                    leaving_now.append((current_time,i,0,lower[0]))
                # check upper condition: leave time passed & lower must be empty
            # output lower cars leaving first
            leaving_now.sort(key=lambda x: (x[1], x[2])) # spot asc, lower(0) before upper(1)

            for _,i,pos,car_id in leaving_now:
                if pos == 0:
                    # lower car leaves
                    spots[i][0] = None
                    output.append(car_id)
                    left[car_id-1]=True
                # upper leave delayed
            # now check upper cars leaving
            upper_leaving_now = []
            for i in range(m):
                upper = spots[i][1]
                lower = spots[i][0]
                if upper and upper[1] <= current_time and lower is None:
                    upper_leaving_now.append((i,upper[0]))
            upper_leaving_now.sort(key=lambda x:x[0])
            for i,car_id in upper_leaving_now:
                spots[i][1] = None
                output.append(car_id)
                left[car_id-1] = True

            # after removals, try to park waiting cars
            while waiting:
                c = waiting[0]
                if not park_car_full(c):
                    break
                waiting.popleft()

            # finally, current arriving car tries to park
            if arriving_cars < n and current_time == arriving_cars*10:
                if not park_car_full(arriving_cars):
                    waiting.append(arriving_cars)
                arriving_cars+=1

            # avoid stuck, increment time if no cars arriving
            if arriving_cars>=n and not waiting:
                # no car waiting or arriving, time step by 10 to exit leaving loop
                # but break if all cars left
                if len(output) == n:
                    break
                current_time += 10

        print(' '.join(map(str, output)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02685900591313839
    2. '\n' → logprob: -3.9018590450286865
    3. '<|end|>' → logprob: -6.651858806610107
    4. '\' → logprob: -7.151858806610107
    5. 'newline' → logprob: -7.151858806610107
    6. 'import' → logprob: -7.276858806610107
    7. '```' → logprob: -7.526858806610107
    8. '' → logprob: -7.901858806610107
    9. '<|end|>' → logprob: -7.901858806610107
    10. 'print' → logprob: -8.276859283447266

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35011377930641174
    2. 'import' → logprob: -1.2251137495040894
    3. '.' → logprob: -6.475113868713379
    4. ' ' → logprob: -10.225113868713379
    5. '```' → logprob: -10.225113868713379
    6. '.Counter' → logprob: -11.350113868713379
    7. '.import' → logprob: -11.475113868713379
    8. '	import' → logprob: -11.850113868713379
    9. ' defaultdict' → logprob: -12.225113868713379
    10. ' .' → logprob: -13.100113868713379

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.07916120439767838
    2. ' deque' → logprob: -2.7041611671447754
    3. ' abc' → logprob: -4.829161167144775
    4. 'deque' → logprob: -7.204161167144775
    5. ' Counter' → logprob: -8.454161643981934
    6. ' named' → logprob: -9.329161643981934
    7. ' import' → logprob: -9.954161643981934
    8. ' counter' → logprob: -10.329161643981934
    9. ' collections' → logprob: -11.079161643981934
    10. ' default' → logprob: -11.329161643981934

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7309108972549438
    2. '

' → logprob: -1.6059108972549438
    3. '
' → logprob: -1.8559108972549438
    4. 'import' → logprob: -2.2309107780456543
    5. '```' → logprob: -3.4809107780456543
    6. '\' → logprob: -4.230910778045654
    7. '<|end|>' → logprob: -5.605910778045654
    8. '<|end|>' → logprob: -6.605910778045654
    9. 'newline' → logprob: -7.105910778045654
    10. ',' → logprob: -7.480910778045654

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1668646335601807
    2. 'b' → logprob: -1.4168646335601807
    3. '`' → logprob: -1.9168646335601807
    4. 'd' → logprob: -2.1668646335601807
    5. '.' → logprob: -3.1668646335601807
    6. '```' → logprob: -3.2918646335601807
    7. 'import' → logprob: -3.6668646335601807
    8. '\' → logprob: -4.291864395141602
    9. 'a' → logprob: -4.541864395141602
    10. 'data' → logprob: -5.041864395141602

Token 9: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.430410772562027
    2. ' bfs' → logprob: -1.4304107427597046
    3. ' process' → logprob: -2.930410861968994
    4. ' main' → logprob: -4.430410861968994
    5. ' breadth' → logprob: -5.055410861968994
    6. ' ' → logprob: -5.305410861968994
    7. ' BFS' → logprob: -5.555410861968994
    8. ' dfs' → logprob: -5.805410861968994
    9. ' space' → logprob: -5.930410861968994
    10. ' deque' → logprob: -6.305410861968994

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015988911036401987
    2. ':' → logprob: -7.001598834991455
    3. '():' → logprob: -7.626598834991455
    4. '(:' → logprob: -9.501599311828613
    5. ' (' → logprob: -9.751599311828613
    6. '(
' → logprob: -10.876599311828613
    7. '):' → logprob: -10.876599311828613
    8. ')' → logprob: -12.376599311828613
    9. '('' → logprob: -12.876599311828613
    10. '```' → logprob: -13.001599311828613

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.011902928352356
    2. ' ' → logprob: -1.511902928352356
    3. '    ' → logprob: -1.886902928352356
    4. ' queue' → logprob: -2.7619028091430664
    5. 'n' → logprob: -3.1369028091430664
    6. ' input' → logprob: -3.8869028091430664
    7. ' readline' → logprob: -4.011902809143066
    8. ' n' → logprob: -4.136902809143066
    9. 'input' → logprob: -4.136902809143066
    10. ' )' → logprob: -4.511902809143066

Token 12: ' input' (ID: 3422)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.7376859188079834
    2. '   ' → logprob: -1.8626859188079834
    3. ' ' → logprob: -2.3626859188079834
    4. 'queue' → logprob: -2.8626859188079834
    5. ' n' → logprob: -2.9876859188079834
    6. ' q' → logprob: -3.1126859188079834
    7. '    ' → logprob: -3.9876859188079834
    8. ' input' → logprob: -4.1126861572265625
    9. 'n' → logprob: -4.2376861572265625
    10. ' stack' → logprob: -4.2376861572265625

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13185438513755798
    2. '()' → logprob: -2.506854295730591
    3. '_data' → logprob: -4.50685453414917
    4. '_' → logprob: -4.63185453414917
    5. '_line' → logprob: -4.75685453414917
    6. ' =' → logprob: -5.38185453414917
    7. '=' → logprob: -5.50685453414917
    8. '('' → logprob: -7.88185453414917
    9. '.' → logprob: -7.88185453414917
    10. '_str' → logprob: -8.006854057312012

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005247275810688734
    2. 'sys' → logprob: -5.255247116088867
    3. ' input' → logprob: -12.255247116088867
    4. ' ' → logprob: -13.005247116088867
    5. '	sys' → logprob: -13.130247116088867
    6. 'input' → logprob: -13.380247116088867
    7. ' deque' → logprob: -13.755247116088867
    8. 'deque' → logprob: -14.005247116088867
    9. '(sys' → logprob: -14.505247116088867
    10. '=sys' → logprob: -14.630247116088867

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02902435138821602
    2. '.' → logprob: -3.654024362564087
    3. ' .' → logprob: -6.279024124145508
    4. '.stdout' → logprob: -7.529024124145508
    5. '.readline' → logprob: -9.029024124145508
    6. '.argv' → logprob: -9.154024124145508
    7. '.std' → logprob: -10.279024124145508
    8. '.exit' → logprob: -11.654024124145508
    9. '.setdefault' → logprob: -11.654024124145508
    10. ' stdin' → logprob: -11.654024124145508

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01208091527223587
    2. '.read' → logprob: -4.512081146240234
    3. '.' → logprob: -6.887081146240234
    4. '.readlines' → logprob: -11.637081146240234
    5. '.buffer' → logprob: -13.887081146240234
    6. 'read' → logprob: -14.137081146240234
    7. '.Read' → logprob: -14.887081146240234
    8. '.stdin' → logprob: -15.887081146240234
    9. '.write' → logprob: -16.012081146240234
    10. ' .' → logprob: -16.137081146240234

Token 17: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03352823853492737
    2. '(' → logprob: -3.6585283279418945
    3. '()
' → logprob: -5.2835283279418945
    4. '(
' → logprob: -6.7835283279418945
    5. '().' → logprob: -7.7835283279418945
    6. '()\' → logprob: -8.783528327941895
    7. '()

' → logprob: -9.283528327941895
    8. '
' → logprob: -9.658528327941895
    9. '   ' → logprob: -9.908528327941895
    10. ')' → logprob: -10.033528327941895

Token 18: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0855315700173378
    2. '   ' → logprob: -2.58553147315979
    3. '(' → logprob: -5.710531711578369
    4. '()
' → logprob: -6.585531711578369
    5. '    
' → logprob: -6.585531711578369
    6. '()\' → logprob: -8.960531234741211
    7. ')' → logprob: -9.585531234741211
    8. '
' → logprob: -9.710531234741211
    9. '(
' → logprob: -10.085531234741211
    10. 'def' → logprob: -10.460531234741211

Token 19: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27077287435531616
    2. 'n' → logprob: -1.645772933959961
    3. ' n' → logprob: -4.145772933959961
    4. '(' → logprob: -5.270772933959961
    5. 'data' → logprob: -5.270772933959961
    6. '(n' → logprob: -5.270772933959961
    7. 's' → logprob: -5.895772933959961
    8. '()' → logprob: -6.020772933959961
    9. 'queue' → logprob: -7.020772933959961
    10. 'line' → logprob: -7.145772933959961

Token 20: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0006164124351926148
    2. 'True' → logprob: -7.625616550445557
    3. '(True' → logprob: -9.375616073608398
    4. ' ' → logprob: -10.375616073608398
    5. ' not' → logprob: -11.500616073608398
    6. ' (' → logprob: -13.625616073608398
    7. '(' → logprob: -14.625616073608398
    8. ' true' → logprob: -15.375616073608398
    9. '    ' → logprob: -15.750616073608398
    10. '  ' → logprob: -16.5006160736084

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014772482682019472
    2. '():' → logprob: -6.876477241516113
    3. ' :' → logprob: -8.251477241516113
    4. '):' → logprob: -9.751477241516113
    5. ':**' → logprob: -10.126477241516113
    6. '       ' → logprob: -10.501477241516113
    7. ':
' → logprob: -10.751477241516113
    8. '   ' → logprob: -11.001477241516113
    9. ':return' → logprob: -12.376477241516113
    10. '    ' → logprob: -12.501477241516113

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008101735264062881
    2. '    ' → logprob: -5.258101940155029
    3. '   ' → logprob: -6.758101940155029
    4. ' ' → logprob: -7.258101940155029
    5. '        
' → logprob: -8.008101463317871
    6. '        ' → logprob: -8.883101463317871
    7. '      ' → logprob: -9.383101463317871
    8. ' readline' → logprob: -9.508101463317871
    9. '     ' → logprob: -9.758101463317871
    10. ' line' → logprob: -10.133101463317871

Token 23: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06877227127552032
    2. 'line' (adapté à ' line') → logprob: -3.068772315979004
    3. '   ' → logprob: -5.068772315979004
    4. 'data' → logprob: -5.818772315979004
    5. '    ' → logprob: -5.943772315979004
    6. ' data' → logprob: -6.193772315979004
    7. '       ' → logprob: -6.818772315979004
    8. ' try' → logprob: -6.943772315979004
    9. 's' → logprob: -7.318772315979004
    10. ' user' → logprob: -7.568772315979004

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716674659401178
    2. '=' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.25671672821045
    4. '=line' → logprob: -15.13171672821045
    5. 's' → logprob: -16.006715774536133
    6. ' ==' → logprob: -16.131715774536133
    7. ' =)' → logprob: -17.006715774536133
    8. ')' → logprob: -17.506715774536133
    9. '.' → logprob: -18.006715774536133
    10. '<|end|>' → logprob: -18.131715774536133

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05488555505871773
    2. 'input' → logprob: -2.9298856258392334
    3. ' sys' → logprob: -13.304885864257812
    4. 'sys' → logprob: -14.804885864257812
    5. '=input' → logprob: -14.804885864257812
    6. '(input' → logprob: -15.554885864257812
    7. ' ' → logprob: -15.679885864257812
    8. '_input' → logprob: -16.179885864257812
    9. '	input' → logprob: -16.304885864257812
    10. '<input' → logprob: -16.804885864257812

Token 26: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026353945955634117
    2. '().' → logprob: -3.6513538360595703
    3. '(' → logprob: -10.40135383605957
    4. '()
' → logprob: -12.27635383605957
    5. ' ()' → logprob: -12.27635383605957
    6. '())' → logprob: -12.77635383605957
    7. '()`' → logprob: -13.52635383605957
    8. '()

' → logprob: -13.77635383605957
    9. '()\' → logprob: -13.90135383605957
    10. '()<' → logprob: -14.02635383605957

Token 27: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07583676278591156
    2. '.rstrip' → logprob: -3.200836658477783
    3. '<|end|>' → logprob: -4.450836658477783
    4. '   ' → logprob: -5.075836658477783
    5. ' ' → logprob: -5.450836658477783
    6. '       ' → logprob: -5.825836658477783
    7. '    ' → logprob: -6.200836658477783
    8. 'rstrip' → logprob: -6.325836658477783
    9. ' if' → logprob: -6.825836658477783
    10. '<|end|>' → logprob: -7.325836658477783

Token 28: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17746621370315552
    2. '.strip' → logprob: -1.9274661540985107
    3. 'if' (adapté à ' if') → logprob: -5.05246639251709
    4. '.rstrip' → logprob: -6.05246639251709
    5. ' strip' → logprob: -6.17746639251709
    6. '       ' → logprob: -6.30246639251709
    7. '<|end|>' → logprob: -6.55246639251709
    8. 'rstrip' → logprob: -6.92746639251709
    9. 'strip' → logprob: -7.42746639251709
    10. ' ' → logprob: -7.42746639251709

Token 29: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0032163304276764393
    2. 'not' → logprob: -5.75321626663208
    3. ' line' → logprob: -10.253216743469238
    4. 'line' → logprob: -12.753216743469238
    5. ' ' → logprob: -15.003216743469238
    6. '	not' → logprob: -16.378215789794922
    7. ' ' → logprob: -16.753215789794922
    8. '!' → logprob: -17.628215789794922
    9. '[line' → logprob: -18.003215789794922
    10. '#line' → logprob: -18.128215789794922

Token 30: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0031784253660589457
    2. 'line' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.253178596496582
    4. '(line' → logprob: -15.628178596496582
    5. '	line' → logprob: -15.753178596496582
    6. '[line' → logprob: -17.128177642822266
    7. '=line' → logprob: -17.878177642822266
    8. '#line' → logprob: -18.628177642822266
    9. ' ' → logprob: -19.503177642822266
    10. ' ligne' → logprob: -20.128177642822266

Token 31: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.15469108521938324
    2. ':' → logprob: -2.154690980911255
    3. ':
' → logprob: -4.404691219329834
    4. '.rstrip' → logprob: -4.654691219329834
    5. '.' → logprob: -5.529691219329834
    6. ' or' → logprob: -6.779691219329834
    7. '.readline' → logprob: -8.654690742492676
    8. '.startswith' → logprob: -9.279690742492676
    9. '.split' → logprob: -9.779690742492676
    10. ' :' → logprob: -10.404690742492676

Token 32: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005097838002257049
    2. '       ' → logprob: -8.375510215759277
    3. ' break' → logprob: -8.625510215759277
    4. ' ' → logprob: -10.500510215759277
    5. '   ' → logprob: -10.625510215759277
    6. 'break' → logprob: -11.875510215759277
    7. ':' → logprob: -12.250510215759277
    8. '               ' → logprob: -12.250510215759277
    9. ' or' → logprob: -12.500510215759277
    10. ',' → logprob: -12.625510215759277

Token 33: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5071555972099304
    2. '           ' → logprob: -1.0071556568145752
    3. 'break' (adapté à ' break') → logprob: -3.507155656814575
    4. '       ' → logprob: -6.507155418395996
    5. '   ' → logprob: -7.757155418395996
    6. '               ' → logprob: -8.132155418395996
    7. ' ' → logprob: -8.507155418395996
    8. '	break' → logprob: -9.632155418395996
    9. ' ' → logprob: -11.007155418395996
    10. '```' → logprob: -11.632155418395996

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03227589279413223
    2. '
' → logprob: -4.532275676727295
    3. '        
' → logprob: -4.657275676727295
    4. '<|end|>' → logprob: -4.657275676727295
    5. '   ' → logprob: -7.657275676727295
    6. '        ' → logprob: -8.032276153564453
    7. '    ' → logprob: -8.157276153564453
    8. '    
' → logprob: -8.657276153564453
    9. '<|end|>' → logprob: -8.782276153564453
    10. ' ' → logprob: -9.032276153564453

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012484933249652386
    2. '        
' → logprob: -4.512485027313232
    3. '    ' → logprob: -8.512484550476074
    4. '   ' → logprob: -8.512484550476074
    5. '\n' → logprob: -8.512484550476074
    6. '        ' → logprob: -8.637484550476074
    7. '    
' → logprob: -9.137484550476074
    8. '
' → logprob: -9.387484550476074
    9. '            
' → logprob: -9.637484550476074
    10. '      ' → logprob: -9.762484550476074

Token 36: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1142650693655014
    2. '   ' → logprob: -2.864264965057373
    3. ' data' → logprob: -4.864264965057373
    4. 'data' → logprob: -5.239264965057373
    5. ' tokens' → logprob: -5.489264965057373
    6. 's' → logprob: -5.614264965057373
    7. ' n' → logprob: -5.739264965057373
    8. ' queue' → logprob: -5.864264965057373
    9. 'n' → logprob: -5.989264965057373
    10. 'tokens' → logprob: -5.989264965057373

Token 37: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7964303493499756
    2. 'a' → logprob: -1.9214303493499756
    3. 'y' → logprob: -2.5464303493499756
    4. '=' → logprob: -2.6714303493499756
    5. 'essage' → logprob: -2.9214303493499756
    6. '.' → logprob: -3.0464303493499756
    7. ')' → logprob: -3.5464303493499756
    8. 's' → logprob: -3.6714303493499756
    9. ',' → logprob: -3.7964303493499756
    10. 'sg' → logprob: -4.046430587768555

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5269683003425598
    2. 'n' → logprob: -0.9019683003425598
    3. ' s' → logprob: -7.026968479156494
    4. 's' → logprob: -7.276968479156494
    5. 'w' → logprob: -8.026968002319336
    6. ' w' → logprob: -8.151968002319336
    7. ' d' → logprob: -8.151968002319336
    8. 'd' → logprob: -8.526968002319336
    9. ' k' → logprob: -8.526968002319336
    10. 'k' → logprob: -8.651968002319336

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0431058369576931
    2. '=' → logprob: -3.1681058406829834
    3. ',' → logprob: -9.168106079101562
    4. ' ' → logprob: -14.293106079101562
    5. ' ,' → logprob: -14.543106079101562
    6. ')' → logprob: -14.793106079101562
    7. '=line' → logprob: -15.293106079101562
    8. ' =
' → logprob: -16.293106079101562
    9. '=int' → logprob: -16.543106079101562
    10. '=input' → logprob: -16.918106079101562

Token 40: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011353963054716587
    2. ' line' → logprob: -4.886353969573975
    3. 'map' → logprob: -5.636353969573975
    4. 'line' → logprob: -8.886353492736816
    5. ' ' → logprob: -11.261353492736816
    6. ' [' → logprob: -11.886353492736816
    7. ' m' → logprob: -12.761353492736816
    8. '[' → logprob: -12.886353492736816
    9. '	map' → logprob: -12.886353492736816
    10. '[line' → logprob: -13.136353492736816

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22726406157016754
    2. '(' → logprob: -2.352264165878296
    3. '(str' → logprob: -2.352264165878296
    4. '(lambda' → logprob: -4.352263927459717
    5. '(line' → logprob: -10.727264404296875
    6. '(eval' → logprob: -10.852264404296875
    7. '(float' → logprob: -11.727264404296875
    8. '[int' → logprob: -11.727264404296875
    9. '<|end|>' → logprob: -12.102264404296875
    10. '(tuple' → logprob: -12.352264404296875

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0696781799197197
    2. '(line' → logprob: -3.3196780681610107
    3. ',line' → logprob: -3.5696780681610107
    4. ')' → logprob: -6.44467830657959
    5. '(' → logprob: -6.94467830657959
    6. ' ,' → logprob: -8.31967830657959
    7. '(),' → logprob: -9.31967830657959
    8. '[line' → logprob: -10.94467830657959
    9. '<|end|>' → logprob: -11.19467830657959
    10. '```' → logprob: -11.69467830657959

Token 43: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07889331132173538
    2. 'line' → logprob: -2.5788934230804443
    3. '	line' → logprob: -12.828893661499023
    4. '(line' → logprob: -14.703893661499023
    5. '[line' → logprob: -15.578893661499023
    6. '=line' → logprob: -16.203893661499023
    7. ')' → logprob: -16.453893661499023
    8. '#line' → logprob: -17.578893661499023
    9. ',line' → logprob: -17.578893661499023
    10. ' ' → logprob: -17.703893661499023

Token 44: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8558036684989929
    2. '().' → logprob: -1.2308037281036377
    3. '.split' → logprob: -1.7308037281036377
    4. '.' → logprob: -2.3558037281036377
    5. '.rstrip' → logprob: -5.355803489685059
    6. '.readline' → logprob: -5.605803489685059
    7. ')' → logprob: -6.230803489685059
    8. ' .' → logprob: -8.230803489685059
    9. 'strip' → logprob: -9.230803489685059
    10. 'split' → logprob: -9.605803489685059

Token 45: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01725975051522255
    2. '('' → logprob: -5.14225959777832
    3. '))' → logprob: -5.39225959777832
    4. '())' → logprob: -5.51725959777832
    5. '(' → logprob: -6.51725959777832
    6. '()' → logprob: -7.89225959777832
    7. '')' → logprob: -8.01725959777832
    8. '(','' → logprob: -8.39225959777832
    9. '(',' → logprob: -9.01725959777832
    10. '")' → logprob: -10.01725959777832

Token 46: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13325771689414978
    2. 'd' → logprob: -3.8832576274871826
    3. ' 
' → logprob: -4.008257865905762
    4. '<|end|>' → logprob: -4.133257865905762
    5. ' if' → logprob: -4.508257865905762
    6. ')' → logprob: -4.508257865905762
    7. ',' → logprob: -4.758257865905762
    8. '[' → logprob: -5.258257865905762
    9. '       ' → logprob: -6.008257865905762
    10. '    ' → logprob: -6.008257865905762

Token 48: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.008058097213506699
    2. 'm' → logprob: -4.883058071136475
    3. ' n' → logprob: -7.758058071136475
    4. ' not' → logprob: -11.133058547973633
    5. 'n' → logprob: -11.883058547973633
    6. ' ' → logprob: -13.383058547973633
    7. ' ' → logprob: -14.383058547973633
    8. ' (' → logprob: -14.633058547973633
    9. 'not' → logprob: -15.383058547973633
    10. '(m' → logprob: -16.008058547973633

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0912855714559555
    2. '==' → logprob: -2.466285467147827
    3. ' <' → logprob: -6.466285705566406
    4. ' <=' → logprob: -7.591285705566406
    5. ' >' → logprob: -9.966285705566406
    6. '<' → logprob: -9.966285705566406
    7. ' ' → logprob: -9.966285705566406
    8. '>' → logprob: -10.216285705566406
    9. '<=' → logprob: -10.466285705566406
    10. '=' → logprob: -10.591285705566406

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006784996949136257
    2. ' ' → logprob: -5.006784915924072
    3. 'n' → logprob: -9.75678539276123
    4. ' n' → logprob: -11.75678539276123
    5. '   ' → logprob: -14.06928539276123
    6. '  ' → logprob: -14.94428539276123
    7. '۰' → logprob: -15.25678539276123
    8. '```' → logprob: -15.25678539276123
    9. '-' → logprob: -15.31928539276123
    10. '1' → logprob: -15.44428539276123

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045926711754873395
    2. 'n' → logprob: -7.75045919418335
    3. ' ' → logprob: -10.875459671020508
    4. '-' → logprob: -12.750459671020508
    5. '1' → logprob: -13.687959671020508
    6. '```' → logprob: -13.937959671020508
    7. ' n' → logprob: -14.625459671020508
    8. 'm' → logprob: -14.812959671020508
    9. 'EOF' → logprob: -14.875459671020508
    10. 'o' → logprob: -15.000459671020508

Token 52: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011079652234911919
    2. 'and' → logprob: -4.511079788208008
    3. ' ' → logprob: -11.261079788208008
    4. '<|end|>' → logprob: -11.761079788208008
    5. ' or' → logprob: -11.886079788208008
    6. '	and' → logprob: -12.886079788208008
    7. ' ' → logprob: -14.386079788208008
    8. '   ' → logprob: -14.636079788208008
    9. '<|end|>' → logprob: -15.886079788208008
    10. ':' → logprob: -15.886079788208008

Token 53: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04301003739237785
    2. 'n' → logprob: -3.1680099964141846
    3. '	n' → logprob: -12.168009757995605
    4. ' ' → logprob: -12.293009757995605
    5. ' ' → logprob: -14.293009757995605
    6. '<|end|>' → logprob: -16.543010711669922
    7. ' н' → logprob: -17.230510711669922
    8. '_n' → logprob: -17.855510711669922
    9. ' ' → logprob: -18.043010711669922
    10. '  ' → logprob: -18.043010711669922

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06199267506599426
    2. '==' → logprob: -2.811992645263672
    3. '<|end|>' → logprob: -11.561992645263672
    4. ' ' → logprob: -11.686992645263672
    5. '0' → logprob: -13.561992645263672
    6. ' ' → logprob: -13.686992645263672
    7. ' =' → logprob: -13.936992645263672
    8. '<|end|>' → logprob: -14.061992645263672
    9. ')==' → logprob: -14.186992645263672
    10. '  ' → logprob: -14.311992645263672

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797468215227127
    2. '0' → logprob: -1.8047468662261963
    3. ' ' → logprob: -13.429746627807617
    4. '  ' → logprob: -14.804746627807617
    5. '<|end|>' → logprob: -15.867246627807617
    6. '<|end|>' → logprob: -16.492246627807617
    7. '	' → logprob: -17.054746627807617
    8. '   ' → logprob: -17.867246627807617
    9. '=' → logprob: -17.867246627807617
    10. '۰' → logprob: -17.992246627807617

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -18.125036239624023
    4. '  ' → logprob: -18.250036239624023
    5. '   ' → logprob: -18.437536239624023
    6. '<|end|>' → logprob: -18.625036239624023
    7. '```' → logprob: -19.125036239624023
    8. '০' → logprob: -19.312536239624023
    9. '०' → logprob: -19.500036239624023
    10. ' ' → logprob: -20.125036239624023

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007364890188910067
    2. ':
' → logprob: -7.500736713409424
    3. '       ' → logprob: -9.125736236572266
    4. '           ' → logprob: -9.750736236572266
    5. ' :' → logprob: -11.875736236572266
    6. ':return' → logprob: -12.375736236572266
    7. '   ' → logprob: -13.500736236572266
    8. '.' → logprob: -13.500736236572266
    9. '):' → logprob: -13.750736236572266
    10. ',' → logprob: -14.875736236572266

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10315003246068954
    2. ':' → logprob: -2.3531501293182373
    3. '       ' → logprob: -5.978149890899658
    4. ':
' → logprob: -8.478150367736816
    5. '   ' → logprob: -9.728150367736816
    6. '		' → logprob: -9.978150367736816
    7. '          ' → logprob: -10.978150367736816
    8. '	       ' → logprob: -11.478150367736816
    9. '	' → logprob: -11.853150367736816
    10. '<|end|>' → logprob: -11.853150367736816

Token 59: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2989959418773651
    2. ' break' → logprob: -2.0489959716796875
    3. 'break' (adapté à ' break') → logprob: -2.0489959716796875
    4. '       ' → logprob: -8.048995971679688
    5. '               ' → logprob: -8.673995971679688
    6. 'return' → logprob: -9.423995971679688
    7. '   ' → logprob: -9.423995971679688
    8. '	break' → logprob: -10.423995971679688
    9. ' return' → logprob: -11.298995971679688
    10. ' ' → logprob: -11.673995971679688

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09282109886407852
    2. '<|end|>' → logprob: -2.7178211212158203
    3. '       ' → logprob: -3.8428211212158203
    4. '        
' → logprob: -7.71782112121582
    5. '<|end|>' → logprob: -8.59282112121582
    6. '\n' → logprob: -8.96782112121582
    7. '    
' → logprob: -9.09282112121582
    8. '
' → logprob: -9.46782112121582
    9. '   ' → logprob: -9.59282112121582
    10. '' → logprob: -10.21782112121582

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2867732048034668
    2. '
' → logprob: -1.5367732048034668
    3. '        
' → logprob: -3.786773204803467
    4. '<|end|>' → logprob: -5.536773204803467
    5. '    
' → logprob: -5.911773204803467
    6. '   ' → logprob: -6.411773204803467
    7. '\n' → logprob: -6.786773204803467
    8. '' → logprob: -7.036773204803467
    9. 'newline' → logprob: -8.661773681640625
    10. '```' → logprob: -8.786773681640625

Token 62: ' times' (ID: 4238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5282689332962036
    2. 'grid' → logprob: -1.9032689332962036
    3. ' grid' → logprob: -2.528268814086914
    4. '        
' → logprob: -3.028268814086914
    5. 'graph' → logprob: -3.153268814086914
    6. ' graph' → logprob: -3.903268814086914
    7. '
' → logprob: -4.403268814086914
    8. '   ' → logprob: -5.028268814086914
    9. '        ' → logprob: -5.028268814086914
    10. ' 
' → logprob: -5.278268814086914

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1591205894947052
    2. '=' → logprob: -2.034120559692383
    3. ',' → logprob: -4.409120559692383
    4. '_queue' → logprob: -6.909120559692383
    5. '_map' → logprob: -8.034120559692383
    6. '[' → logprob: -8.034120559692383
    7. '_to' → logprob: -8.159120559692383
    8. '=[]' → logprob: -8.284120559692383
    9. 'visited' → logprob: -8.284120559692383
    10. '_' → logprob: -8.534120559692383

Token 64: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7563204169273376
    2. ' []' → logprob: -0.8813204169273376
    3. ' [' → logprob: -2.8813204765319824
    4. ' list' → logprob: -3.3813204765319824
    5. 'deque' → logprob: -4.631320476531982
    6. '[' → logprob: -5.006320476531982
    7. 'list' → logprob: -5.256320476531982
    8. ' deque' → logprob: -5.881320476531982
    9. '[list' → logprob: -6.881320476531982
    10. ' ' → logprob: -8.256319999694824

Token 65: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10715442895889282
    2. 'int' → logprob: -3.107154369354248
    3. '0' → logprob: -3.857154369354248
    4. '[int' → logprob: -4.232154369354248
    5. '[]' → logprob: -4.607154369354248
    6. ']' → logprob: -5.107154369354248
    7. '[list' → logprob: -6.607154369354248
    8. ' list' → logprob: -7.232154369354248
    9. ']int' → logprob: -7.357154369354248
    10. '[' → logprob: -7.607154369354248

Token 66: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7436197996139526
    2. '(input' → logprob: -1.1186197996139526
    3. '(' → logprob: -2.118619918823242
    4. '()]' → logprob: -2.618619918823242
    5. '(x' → logprob: -5.868619918823242
    6. ']' → logprob: -7.368619918823242
    7. '(line' → logprob: -8.243619918823242
    8. '(i' → logprob: -8.368619918823242
    9. 'input' → logprob: -8.993619918823242
    10. ' ()' → logprob: -9.243619918823242

Token 67: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0065135713666677475
    2. '()' → logprob: -5.256513595581055
    3. '().' → logprob: -6.756513595581055
    4. ')' → logprob: -10.131513595581055
    5. '())
' → logprob: -10.256513595581055
    6. '()
' → logprob: -11.006513595581055
    7. ' ())' → logprob: -11.506513595581055
    8. '()]' → logprob: -11.756513595581055
    9. '();)' → logprob: -13.756513595581055
    10. '()),' → logprob: -14.256513595581055

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13144056499004364
    2. 'for' → logprob: -2.1314406394958496
    3. '()' → logprob: -5.88144063949585
    4. '	for' → logprob: -6.88144063949585
    5. '       ' → logprob: -8.631440162658691
    6. '   ' → logprob: -8.631440162658691
    7. ' ' → logprob: -9.381440162658691
    8. ']' → logprob: -9.381440162658691
    9. ')' → logprob: -10.006440162658691
    10. '(' → logprob: -10.381440162658691

Token 69: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43249785900115967
    2. ' _' → logprob: -1.0574978590011597
    3. ' range' → logprob: -5.682497978210449
    4. ' ' → logprob: -8.80749797821045
    5. 'range' → logprob: -9.18249797821045
    6. ' in' → logprob: -9.55749797821045
    7. '_range' → logprob: -10.05749797821045
    8. ' ' → logprob: -11.30749797821045
    9. ' i' → logprob: -13.55749797821045
    10. '	range' → logprob: -13.68249797821045

Token 70: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21821413934230804
    2. ' in' → logprob: -1.9682141542434692
    3. ' range' → logprob: -2.9682140350341797
    4. 'in' → logprob: -5.34321403503418
    5. ' ' → logprob: -9.71821403503418
    6. '	range' → logprob: -10.21821403503418
    7. '   ' → logprob: -10.34321403503418
    8. '  ' → logprob: -11.09321403503418
    9. '(range' → logprob: -11.21821403503418
    10. '    ' → logprob: -13.59321403503418

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235887598246336
    2. ' range' → logprob: -5.25523567199707
    3. '	range' → logprob: -13.38023567199707
    4. 'rang' → logprob: -15.25523567199707
    5. ' ' → logprob: -16.00523567199707
    6. '   ' → logprob: -16.38023567199707
    7. '(range' → logprob: -16.50523567199707
    8. '  ' → logprob: -16.75523567199707
    9. ' xrange' → logprob: -18.25523567199707
    10. ')' → logprob: -18.50523567199707

Token 72: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5767499804496765
    2. '(n' → logprob: -0.8267499804496765
    3. '(' → logprob: -7.201749801635742
    4. ' (' → logprob: -9.701749801635742
    5. 'm' → logprob: -13.576749801635742
    6. '(s' → logprob: -13.826749801635742
    7. '	m' → logprob: -15.451749801635742
    8. ' m' → logprob: -15.576749801635742
    9. '(M' → logprob: -15.826749801635742
    10. ')m' → logprob: -15.826749801635742

Token 73: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009976790752261877
    2. ')' → logprob: -7.500997543334961
    3. ']' → logprob: -7.750997543334961
    4. ')]
' → logprob: -12.125997543334961
    5. ' )' → logprob: -12.625997543334961
    6. ')
' → logprob: -13.500997543334961
    7. ' ]' → logprob: -14.500997543334961
    8. ']
' → logprob: -14.625997543334961
    9. '   ' → logprob: -14.875997543334961
    10. ' ' → logprob: -14.875997543334961

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.078256368637085
    2. ' queue' → logprob: -1.453256368637085
    3. 'graph' → logprob: -2.578256368637085
    4. '       ' → logprob: -2.953256368637085
    5. 'dist' → logprob: -3.078256368637085
    6. 'visited' → logprob: -3.203256368637085
    7. ' graph' → logprob: -3.328256368637085
    8. 'dp' → logprob: -3.453256368637085
    9. 'times' → logprob: -3.703256368637085
    10. 'q' → logprob: -4.328256607055664

Token 76: ' arrival' (ID: 24861)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.069750189781189
    2. ' queue' → logprob: -1.819750189781189
    3. 'queue' → logprob: -2.5697503089904785
    4. ' times' → logprob: -2.5697503089904785
    5. ' q' → logprob: -2.9447503089904785
    6. ' #' → logprob: -3.1947503089904785
    7. 'times' → logprob: -3.5697503089904785
    8. ' visited' → logprob: -3.6947503089904785
    9. ' dp' → logprob: -3.8197503089904785
    10. '<|end|>' → logprob: -4.0697503089904785

Token 77: ' times' (ID: 4238)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.588342010974884
    2. '_times' → logprob: -1.7133419513702393
    3. ' =' → logprob: -1.8383419513702393
    4. '_queue' → logprob: -2.5883419513702393
    5. '_time' → logprob: -4.338342189788818
    6. 's' → logprob: -4.463342189788818
    7. 'times' → logprob: -6.463342189788818
    8. '_' → logprob: -6.588342189788818
    9. '=[]' → logprob: -7.213342189788818
    10. ',' → logprob: -8.08834171295166

Token 78: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' car' (ID: 1669)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.9602611660957336
    2. 'deque' → logprob: -1.5852611064910889
    3. 'times' → logprob: -2.210261106491089
    4. ' ' → logprob: -2.335261106491089
    5. ' [' → logprob: -2.585261106491089
    6. ' deque' → logprob: -3.085261106491089
    7. '<|end|>' → logprob: -3.460261106491089
    8. '[' → logprob: -4.710261344909668
    9. '0' → logprob: -4.710261344909668
    10. ' []' → logprob: -4.835261344909668

Token 80: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2918468117713928
    2. ' =' → logprob: -2.416846752166748
    3. '_queue' → logprob: -3.041846752166748
    4. '_arr' → logprob: -3.416846752166748
    5. '_times' → logprob: -3.541846752166748
    6. '_positions' → logprob: -4.166846752166748
    7. '=' → logprob: -5.041846752166748
    8. '_' → logprob: -5.416846752166748
    9. '_count' → logprob: -5.541846752166748
    10. '_per' → logprob: -5.666846752166748

Token 81: ' arrives' (ID: 39650)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7812296152114868
    2. ' =' → logprob: -1.9062296152114868
    3. ' at' → logprob: -2.4062294960021973
    4. ' is' → logprob: -2.4062294960021973
    5. '_arr' → logprob: -2.6562294960021973
    6. ' arrives' → logprob: -2.6562294960021973
    7. ''s' → logprob: -2.9062294960021973
    8. '_times' → logprob: -3.2812294960021973
    9. ',' → logprob: -3.9062294960021973
    10. '<|end|>' → logprob: -3.9062294960021973

Token 82: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.03595319017767906
    2. 'at' → logprob: -4.035953044891357
    3. ' =' → logprob: -4.785953044891357
    4. '_at' → logprob: -5.410953044891357
    5. '<|end|>' → logprob: -6.535953044891357
    6. '_times' → logprob: -7.410953044891357
    7. ' ' → logprob: -7.785953044891357
    8. '=' → logprob: -7.785953044891357
    9. ' in' → logprob: -7.910953044891357
    10. '[' → logprob: -8.160953521728516

Token 83: ' i' (ID: 575)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.07408790290355682
    2. 'times' → logprob: -2.6990878582000732
    3. ' i' → logprob: -6.324088096618652
    4. ' ' → logprob: -6.824088096618652
    5. '<|end|>' → logprob: -8.324088096618652
    6. ' time' → logprob: -8.574088096618652
    7. ' car' → logprob: -8.824088096618652
    8. ' a' → logprob: -8.824088096618652
    9. ' the' → logprob: -8.949088096618652
    10. 'time' → logprob: -9.449088096618652

Token 84: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6519399881362915
    2. '<|end|>' → logprob: -1.5269399881362915
    3. ' *' → logprob: -2.151939868927002
    4. '*' → logprob: -2.401939868927002
    5. ' +' → logprob: -3.526939868927002
    6. ' times' → logprob: -4.901939868927002
    7. '<|end|>' → logprob: -5.026939868927002
    8. 'times' → logprob: -6.276939868927002
    9. ''s' → logprob: -7.026939868927002
    10. ' ' → logprob: -7.026939868927002

Token 85: '10' (ID: 702)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4429760277271271
    2. '60' → logprob: -2.0679759979248047
    3. '10' → logprob: -2.0679759979248047
    4. '100' → logprob: -2.5679759979248047
    5. '600' → logprob: -4.817975997924805
    6. ' m' → logprob: -4.942975997924805
    7. ' ' → logprob: -5.567975997924805
    8. '20' → logprob: -6.317975997924805
    9. '864' → logprob: -6.442975997924805
    10. '2' → logprob: -6.817975997924805

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040133681148290634
    2. '<|end|>' → logprob: -3.5401337146759033
    3. '        
' → logprob: -5.415133476257324
    4. 'queue' → logprob: -6.290133476257324
    5. '
' → logprob: -6.790133476257324
    6. 'dist' → logprob: -7.790133476257324
    7. 'times' → logprob: -7.915133476257324
    8. '        ' → logprob: -8.165133476257324
    9. ' queue' → logprob: -8.540133476257324
    10. 'distance' → logprob: -8.540133476257324

Token 88: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.11867280304431915
    2. 'dist' → logprob: -3.9936728477478027
    3. 'graph' → logprob: -4.368672847747803
    4. 'car' → logprob: -4.368672847747803
    5. 'visited' → logprob: -4.368672847747803
    6. 'q' → logprob: -4.493672847747803
    7. 'arrival' → logprob: -4.868672847747803
    8. 'arr' → logprob: -5.493672847747803
    9. 'garage' → logprob: -5.493672847747803
    10. ' queue' → logprob: -5.743672847747803

Token 89: ' parking' (ID: 14472)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8055109977722168
    2. 'parking' → logprob: -3.055510997772217
    3. 'graph' → logprob: -3.180510997772217
    4. '#' → logprob: -3.180510997772217
    5. 'wait' → logprob: -3.305510997772217
    6. 'waiting' → logprob: -3.305510997772217
    7. 'arrival' → logprob: -3.555510997772217
    8. 'times' → logprob: -3.680510997772217
    9. 'def' → logprob: -3.680510997772217
    10. 'dist' → logprob: -3.930510997772217

Token 90: ' spots' (ID: 25522)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7413948774337769
    2. '_slots' → logprob: -1.8663948774337769
    3. '_' → logprob: -1.9913948774337769
    4. '_sp' → logprob: -2.1163949966430664
    5. 'lot' → logprob: -2.8663949966430664
    6. '_l' → logprob: -3.1163949966430664
    7. '_spaces' → logprob: -3.1163949966430664
    8. '_times' → logprob: -3.1163949966430664
    9. ' =' → logprob: -3.4913949966430664
    10. 'slots' → logprob: -3.6163949966430664

Token 91: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17994488775730133
    2. '=' → logprob: -1.8049448728561401
    3. 'times' → logprob: -9.67994499206543
    4. ',' → logprob: -9.92994499206543
    5. ':' → logprob: -10.17994499206543
    6. '_times' → logprob: -11.42994499206543
    7. ' ' → logprob: -12.05494499206543
    8. '<|end|>' → logprob: -12.30494499206543
    9. '=[]' → logprob: -12.30494499206543
    10. '   ' → logprob: -12.42994499206543

Token 92: ' each' (ID: 2454)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9548034071922302
    2. ' deque' → logprob: -0.9548034071922302
    3. 'deque' → logprob: -1.579803466796875
    4. ' [-' → logprob: -4.454803466796875
    5. '[' → logprob: -5.079803466796875
    6. ' []' → logprob: -5.954803466796875
    7. '[]' → logprob: -6.954803466796875
    8. '[-' → logprob: -7.454803466796875
    9. ' ['' → logprob: -7.454803466796875
    10. ' ' → logprob: -8.079803466796875

Token 93: ' has' (ID: 853)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.7322077751159668
    2. ' has' → logprob: -1.4822077751159668
    3. 'has' → logprob: -3.232207775115967
    4. ' spot' → logprob: -3.232207775115967
    5. ' with' → logprob: -3.357207775115967
    6. ' is' → logprob: -3.482207775115967
    7. ' represented' → logprob: -3.982207775115967
    8. 'with' → logprob: -4.107207775115967
    9. 'parking' → logprob: -4.232207775115967
    10. 'represented' → logprob: -4.357207775115967

Token 94: ' upper' (ID: 13057)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3337450921535492
    2. 'a' → logprob: -1.5837451219558716
    3. ' its' → logprob: -3.208745002746582
    4. ' an' → logprob: -5.333745002746582
    5. '0' → logprob: -5.458745002746582
    6. 'time' → logprob: -5.583745002746582
    7. ' ' → logprob: -5.958745002746582
    8. 'deque' → logprob: -5.958745002746582
    9. '[]' → logprob: -6.208745002746582
    10. 'its' → logprob: -6.208745002746582

Token 95: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0927506685256958
    2. '_limit' → logprob: -1.3427506685256958
    3. '_bound' → logprob: -1.7177506685256958
    4. '_limits' → logprob: -2.7177505493164062
    5. 'limit' → logprob: -2.8427505493164062
    6. 'limits' → logprob: -3.5927505493164062
    7. '_bounds' → logprob: -3.9677505493164062
    8. 'bound' → logprob: -4.092750549316406
    9. ' bound' → logprob: -4.467750549316406
    10. ' limit' → logprob: -4.592750549316406

Token 96: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.31415554881095886
    2. ' lower' → logprob: -1.3141555786132812
    3. '_lower' → logprob: -7.689155578613281
    4. 'bottom' → logprob: -8.814155578613281
    5. 'ower' → logprob: -9.689155578613281
    6. ' bottom' → logprob: -9.939155578613281
    7. '(lower' → logprob: -10.314155578613281
    8. '.lower' → logprob: -10.439155578613281
    9. 'low' → logprob: -11.189155578613281
    10. '```' → logprob: -11.501655578613281

Token 97: ' slot' (ID: 8215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4842697381973267
    2. 'levels' → logprob: -1.4842697381973267
    3. '<|end|>' → logprob: -2.609269618988037
    4. ' lists' → logprob: -3.234269618988037
    5. 'flo' → logprob: -3.484269618988037
    6. ' =' → logprob: -3.609269618988037
    7. ' spots' → logprob: -3.609269618988037
    8. 'level' → logprob: -3.609269618988037
    9. ' levels' → logprob: -3.734269618988037
    10. ' floors' → logprob: -3.734269618988037

Token 98: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6257218718528748
    2. '
' → logprob: -1.0007219314575195
    3. '<|end|>' → logprob: -3.5007219314575195
    4. '        
' → logprob: -3.7507219314575195
    5. '   ' → logprob: -4.5007219314575195
    6. ' ' → logprob: -4.5007219314575195
    7. '<|end|>' → logprob: -5.6257219314575195
    8. '        ' → logprob: -5.8757219314575195
    9. '    
' → logprob: -6.1257219314575195
    10. '    ' → logprob: -6.1257219314575195

Token 99: 'None' (ID: 8505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03688012436032295
    2. ' )' → logprob: -4.411880016326904
    3. '#' → logprob: -5.661880016326904
    4. ' ' → logprob: -5.911880016326904
    5. '),' → logprob: -6.036880016326904
    6. ')
' → logprob: -6.661880016326904
    7. '2' → logprob: -6.786880016326904
    8. '[' → logprob: -7.161880016326904
    9. ',' → logprob: -7.286880016326904
    10. '```' → logprob: -7.411880016326904

Token 100: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13187673687934875
    2. ')' → logprob: -2.6318767070770264
    3. ',None' → logprob: -3.6318767070770264
    4. ' ,' → logprob: -4.1318769454956055
    5. ' for' → logprob: -5.7568769454956055
    6. ' or' → logprob: -5.8818769454956055
    7. ' )' → logprob: -6.2568769454956055
    8. 'None' → logprob: -8.131876945495605
    9. '),' → logprob: -8.131876945495605
    10. ' None' → logprob: -9.006876945495605

Token 101: ' (' (ID: 350)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5778117179870605
    2. ' car' → logprob: -1.7028117179870605
    3. 'int' → logprob: -2.3278117179870605
    4. ' int' → logprob: -2.8278117179870605
    5. ' a' → logprob: -4.3278117179870605
    6. 'occupied' → logprob: -4.5778117179870605
    7. '0' → logprob: -4.7028117179870605
    8. ' an' → logprob: -4.8278117179870605
    9. 'a' → logprob: -4.9528117179870605
    10. ' index' → logprob: -5.2028117179870605

Token 102: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09283262491226196
    2. 'time' → logprob: -3.467832565307617
    3. 'arrival' → logprob: -3.967832565307617
    4. ' car' → logprob: -4.467832565307617
    5. 'color' → logprob: -5.592832565307617
    6. 'id' → logprob: -5.592832565307617
    7. 'index' → logprob: -6.092832565307617
    8. 'int' → logprob: -6.342832565307617
    9. 'x' → logprob: -6.717832565307617
    10. 'True' → logprob: -6.717832565307617

Token 103: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.05722464248538017
    2. ',' → logprob: -3.557224750518799
    3. 'id' → logprob: -3.807224750518799
    4. ')' → logprob: -6.057224750518799
    5. '_' → logprob: -7.057224750518799
    6. '_index' → logprob: -7.682224750518799
    7. ' id' → logprob: -8.30722427368164
    8. '))' → logprob: -8.43222427368164
    9. 'ID' → logprob: -9.18222427368164
    10. '_time' → logprob: -9.18222427368164

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008746940642595291
    2. ')' → logprob: -4.758747100830078
    3. '))' → logprob: -10.258747100830078
    4. ' ,' → logprob: -10.383747100830078
    5. ',)' → logprob: -11.133747100830078
    6. 'None' → logprob: -11.133747100830078
    7. ',None' → logprob: -11.383747100830078
    8. ',
' → logprob: -12.258747100830078
    9. ')))' → logprob: -12.383747100830078
    10. '),' → logprob: -13.008747100830078

Token 105: ' leave' (ID: 7668)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.9485893249511719
    2. ' arrival' → logprob: -1.3235893249511719
    3. 'time' → logprob: -2.073589324951172
    4. ' time' → logprob: -2.198589324951172
    5. ' start' → logprob: -3.198589324951172
    6. 'start' → logprob: -3.823589324951172
    7. ')' → logprob: -4.948589324951172
    8. 'end' → logprob: -5.761089324951172
    9. 'arr' → logprob: -5.886089324951172
    10. ' entry' → logprob: -6.198589324951172

Token 106: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0028394684195518494
    2. ')' → logprob: -7.1278395652771
    3. ')_' → logprob: -7.1278395652771
    4. '_' → logprob: -7.5028395652771
    5. 'time' → logprob: -8.002839088439941
    6. '_times' → logprob: -8.502839088439941
    7. ' _' → logprob: -9.627839088439941
    8. ' time' → logprob: -11.752839088439941
    9. '```' → logprob: -11.752839088439941
    10. '_t' → logprob: -11.752839088439941

Token 107: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5777434706687927
    2. '))' → logprob: -0.8277434706687927
    3. '))
' → logprob: -6.8277435302734375
    4. ',' → logprob: -8.702743530273438
    5. ' ))' → logprob: -8.827743530273438
    6. ')))' → logprob: -9.202743530273438
    7. ' )' → logprob: -9.452743530273438
    8. ' ' → logprob: -9.827743530273438
    9. ')
' → logprob: -9.827743530273438
    10. '[' → logprob: -10.577743530273438

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13302794098854065
    2. '        
' → logprob: -2.383028030395508
    3. '
' → logprob: -3.883028030395508
    4. '   ' → logprob: -5.758028030395508
    5. '    
' → logprob: -6.133028030395508
    6. '<|end|>' → logprob: -6.383028030395508
    7. ' 
' → logprob: -7.258028030395508
    8. '        ' → logprob: -7.633028030395508
    9. 'def' → logprob: -7.883028030395508
    10. '  
' → logprob: -8.008028030395508

Token 109: ' spots' (ID: 25522)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0405360460281372
    2. 'parking' → logprob: -1.4155360460281372
    3. '        
' → logprob: -2.1655359268188477
    4. '
' → logprob: -2.6655359268188477
    5. ' parking' → logprob: -2.6655359268188477
    6. ' 
' → logprob: -2.9155359268188477
    7. 'spots' (adapté à ' spots') → logprob: -3.5405359268188477
    8. ' spots' → logprob: -4.040535926818848
    9. 'upper' → logprob: -4.415535926818848
    10. '    
' → logprob: -4.665535926818848

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815205067396164
    2. '=' → logprob: -4.018152236938477
    3. '=[]' → logprob: -13.643152236938477
    4. '=[' → logprob: -15.018152236938477
    5. ' =[' → logprob: -15.143152236938477
    6. '[' → logprob: -16.268152236938477
    7. ' ' → logprob: -16.643152236938477
    8. '=[]
' → logprob: -17.268152236938477
    9. '=[[' → logprob: -17.268152236938477
    10. ' =
' → logprob: -17.393152236938477

Token 111: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16273629665374756
    2. ' [(' → logprob: -2.787736415863037
    3. '[' → logprob: -3.037736415863037
    4. '[[' → logprob: -3.787736415863037
    5. ' [' → logprob: -4.537736415863037
    6. ' [[' → logprob: -5.037736415863037
    7. '[((' → logprob: -8.412735939025879
    8. '[n' → logprob: -9.037735939025879
    9. '[{' → logprob: -9.287735939025879
    10. ' [{'' → logprob: -9.412735939025879

Token 112: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005549154710024595
    2. ' [' → logprob: -5.75554895401001
    3. '[(' → logprob: -6.63054895401001
    4. '(None' → logprob: -7.38054895401001
    5. '[n' → logprob: -9.005549430847168
    6. '   ' → logprob: -9.130549430847168
    7. '([' → logprob: -10.380549430847168
    8. '(' → logprob: -10.505549430847168
    9. ' (' → logprob: -10.630549430847168
    10. '[[' → logprob: -10.630549430847168

Token 113: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01980282925069332
    2. '[' → logprob: -4.019803047180176
    3. '(None' → logprob: -6.644803047180176
    4. ' None' → logprob: -8.019803047180176
    5. ' [' → logprob: -11.644803047180176
    6. ',None' → logprob: -11.644803047180176
    7. '   ' → logprob: -13.394803047180176
    8. '(' → logprob: -13.394803047180176
    9. '_None' → logprob: -14.894803047180176
    10. '
' → logprob: -15.269803047180176

Token 114: ',None' (ID: 186897)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009818188846111298
    2. ',None' → logprob: -4.634818077087402
    3. ' ,' → logprob: -10.384818077087402
    4. ',
' → logprob: -11.009818077087402
    5. 'None' → logprob: -11.634818077087402
    6. ',null' → logprob: -13.509818077087402
    7. ',

' → logprob: -13.884818077087402
    8. '(None' → logprob: -14.009818077087402
    9. ',N' → logprob: -14.134818077087402
    10. ',n' → logprob: -15.509818077087402

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003370118502061814
    2. ')' → logprob: -8.875336647033691
    3. ' ]' → logprob: -9.125336647033691
    4. '],' → logprob: -10.000336647033691
    5. '   ' → logprob: -11.375336647033691
    6. '       ' → logprob: -11.375336647033691
    7. ']
' → logprob: -11.625336647033691
    8. ')]' → logprob: -11.750336647033691
    9. '])' → logprob: -13.875336647033691
    10. ']

' → logprob: -14.375336647033691

Token 116: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0029630844946950674
    2. 'for' → logprob: -6.127963066101074
    3. '       ' → logprob: -7.627963066101074
    4. '   ' → logprob: -9.127963066101074
    5. ' ]' → logprob: -9.502963066101074
    6. ']' → logprob: -10.127963066101074
    7. ' ' → logprob: -10.627963066101074
    8. '	for' → logprob: -11.127963066101074
    9. '        ' → logprob: -11.627963066101074
    10. '    ' → logprob: -12.377963066101074

Token 117: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3869834244251251
    2. ' range' → logprob: -1.1369833946228027
    3. '_' → logprob: -9.261983871459961
    4. 'range' → logprob: -12.011983871459961
    5. '_range' → logprob: -12.261983871459961
    6. '(range' → logprob: -12.636983871459961
    7. ' ' → logprob: -12.886983871459961
    8. '	range' → logprob: -15.011983871459961
    9. ' i' → logprob: -15.386983871459961
    10. ' in' → logprob: -15.636983871459961

Token 118: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26611191034317017
    2. ' range' → logprob: -1.5161118507385254
    3. ' in' → logprob: -4.391111850738525
    4. 'in' → logprob: -6.391111850738525
    5. ' ' → logprob: -12.141112327575684
    6. '(range' → logprob: -12.266112327575684
    7. '_range' → logprob: -12.266112327575684
    8. '  ' → logprob: -13.516112327575684
    9. '	range' → logprob: -13.641112327575684
    10. ' xrange' → logprob: -14.016112327575684

Token 119: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868723213672638
    2. 'range' → logprob: -1.1368722915649414
    3. '	range' → logprob: -14.636872291564941
    4. '(range' → logprob: -14.886872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '   ' → logprob: -16.011873245239258
    7. ' xrange' → logprob: -16.511873245239258
    8. '_range' → logprob: -17.136873245239258
    9. 'rang' → logprob: -17.261873245239258
    10. '  ' → logprob: -17.761873245239258

Token 120: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.011008087545633316
    2. ' m' → logprob: -5.011008262634277
    3. ' (' → logprob: -5.636008262634277
    4. 'm' → logprob: -7.636008262634277
    5. '(' → logprob: -8.511008262634277
    6. '	m' → logprob: -11.636008262634277
    7. ')m' → logprob: -11.636008262634277
    8. ')' → logprob: -12.511008262634277
    9. '   ' → logprob: -12.636008262634277
    10. ' ' → logprob: -13.011008262634277

Token 121: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005644689663313329
    2. ')' → logprob: -7.8755645751953125
    3. ']' → logprob: -8.625564575195312
    4. ' )' → logprob: -12.875564575195312
    5. ' ]' → logprob: -13.375564575195312
    6. '   ' → logprob: -15.125564575195312
    7. ' ' → logprob: -16.000564575195312
    8. ')]

' → logprob: -16.000564575195312
    9. '}]' → logprob: -16.625564575195312
    10. ')]
' → logprob: -16.875564575195312

Token 122: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02661028690636158
    2. '
' → logprob: -4.276610374450684
    3. '        
' → logprob: -4.776610374450684
    4. '<|end|>' → logprob: -6.401610374450684
    5. 'queue' → logprob: -7.401610374450684
    6. '   ' → logprob: -7.901610374450684
    7. '```' → logprob: -9.401610374450684
    8. ' car' → logprob: -9.401610374450684
    9. '		
' → logprob: -9.401610374450684
    10. 'def' → logprob: -9.526610374450684

Token 123: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7162657976150513
    2. '<|end|>' → logprob: -0.9662657976150513
    3. '       ' → logprob: -2.2162656784057617
    4. '   ' → logprob: -4.591265678405762
    5. '<|end|>' → logprob: -5.716265678405762
    6. '        
' → logprob: -5.966265678405762
    7. '    
' → logprob: -6.591265678405762
    8. '  
' → logprob: -6.841265678405762
    9. ')' → logprob: -7.091265678405762
    10. 'def' → logprob: -7.716265678405762

Token 124: ' [' (ID: 723)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8246697783470154
    2. 'car' → logprob: -2.07466983795166
    3. ' car' → logprob: -2.69966983795166
    4. '       ' → logprob: -2.82466983795166
    5. 'def' → logprob: -2.94966983795166
    6. 'queue' → logprob: -3.19966983795166
    7. ' #' → logprob: -3.19966983795166
    8. '<|end|>' → logprob: -3.82466983795166
    9. '   ' → logprob: -3.94966983795166
    10. ' ' → logprob: -4.07466983795166

Token 125: 'lower' (ID: 30330)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8217501044273376
    2. 'None' → logprob: -0.8217501044273376
    3. ' [' → logprob: -3.4467501640319824
    4. '0' → logprob: -3.5717501640319824
    5. ' None' → logprob: -3.8217501640319824
    6. 'upper' → logprob: -4.196750164031982
    7. '(None' → logprob: -4.571750164031982
    8. '#' → logprob: -6.196750164031982
    9. ' (' → logprob: -6.696750164031982
    10. ' upper' → logprob: -6.821750164031982

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00669074896723032
    2. ' ,' → logprob: -5.881690979003906
    3. '][' → logprob: -6.506690979003906
    4. ',None' → logprob: -7.256690979003906
    5. ']' → logprob: -7.756690979003906
    6. 'slot' → logprob: -8.131690979003906
    7. ' slot' → logprob: -8.506690979003906
    8. '],[' → logprob: -8.881690979003906
    9. '[' → logprob: -9.006690979003906
    10. '_slot' → logprob: -9.256690979003906

Token 127: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.31328123807907104
    2. 'upper' → logprob: -1.3132812976837158
    3. '_upper' → logprob: -11.938281059265137
    4. ' ' → logprob: -12.313281059265137
    5. '.upper' → logprob: -13.438281059265137
    6. 'Upper' → logprob: -13.438281059265137
    7. '   ' → logprob: -14.063281059265137
    8. '0' → logprob: -14.188281059265137
    9. 'lower' → logprob: -14.313281059265137
    10. ' None' → logprob: -14.313281059265137

Token 128: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005650650127790868
    2. ' ]' → logprob: -7.500565052032471
    3. ')' → logprob: -12.625565528869629
    4. ')]' → logprob: -13.000565528869629
    5. '])' → logprob: -13.250565528869629
    6. ']

' → logprob: -13.750565528869629
    7. '],' → logprob: -14.000565528869629
    8. ',' → logprob: -14.125565528869629
    9. ']
' → logprob: -14.500565528869629
    10. ']]' → logprob: -14.750565528869629

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17204555869102478
    2. '<|end|>' → logprob: -2.0470454692840576
    3. '
' → logprob: -4.297045707702637
    4. '        
' → logprob: -4.547045707702637
    5. '<|end|>' → logprob: -6.172045707702637
    6. '   ' → logprob: -6.922045707702637
    7. '    
' → logprob: -8.797045707702637
    8. ' ' → logprob: -8.797045707702637
    9. '[' → logprob: -9.172045707702637
    10. 'while' → logprob: -9.172045707702637

Token 130: ' leave' (ID: 7668)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7466996908187866
    2. 'queue' → logprob: -0.8716996908187866
    3. 'available' → logprob: -3.496699810028076
    4. 'for' → logprob: -3.621699810028076
    5. 'waiting' → logprob: -4.246699810028076
    6. 'q' → logprob: -5.371699810028076
    7. 'deque' → logprob: -5.621699810028076
    8. 'arrival' → logprob: -5.746699810028076
    9. 'from' → logprob: -5.871699810028076
    10. 'occupied' → logprob: -5.996699810028076

Token 131: '_order' (ID: 17446)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.3085865378379822
    2. '_queue' → logprob: -1.558586597442627
    3. '_time' → logprob: -3.058586597442627
    4. '_' → logprob: -5.808586597442627
    5. '_events' → logprob: -6.308586597442627
    6. 'ing' → logprob: -7.058586597442627
    7. '_order' → logprob: -7.308586597442627
    8. 'ed' → logprob: -7.683586597442627
    9. '_map' → logprob: -7.808586597442627
    10. 'times' → logprob: -9.558586120605469

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200442835688591
    2. '=' → logprob: -2.812004327774048
    3. '=[]' → logprob: -11.187004089355469
    4. '_' → logprob: -11.562004089355469
    5. ',' → logprob: -11.937004089355469
    6. ' ' → logprob: -13.187004089355469
    7. 's' → logprob: -13.437004089355469
    8. '_queue' → logprob: -14.687004089355469
    9. '(' → logprob: -14.687004089355469
    10. ')' → logprob: -14.812004089355469

Token 133: ' []
' (ID: 8911)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1443086415529251
    2. '[]' → logprob: -2.144308567047119
    3. ' deque' → logprob: -4.644308567047119
    4. ' []' → logprob: -4.894308567047119
    5. 'de' → logprob: -9.269309043884277
    6. '[' → logprob: -11.894309043884277
    7. '[]}' → logprob: -12.269309043884277
    8. ' ' → logprob: -12.394309043884277
    9. '0' → logprob: -12.519309043884277
    10. '[]
' → logprob: -12.769309043884277

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023164307698607445
    2. '        
' → logprob: -4.89816427230835
    3. '        ' → logprob: -5.52316427230835
    4. '
' → logprob: -5.89816427230835
    5. ' car' → logprob: -6.39816427230835
    6. ' for' → logprob: -6.39816427230835
    7. ' ' → logprob: -7.02316427230835
    8. '<|end|>' → logprob: -7.02316427230835
    9. 'for' → logprob: -7.64816427230835
    10. 'queue' → logprob: -8.023164749145508

Token 135: ' waiting' (ID: 12028)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1492117643356323
    2. 'queue' → logprob: -1.5242117643356323
    3. 'car' → logprob: -1.7742117643356323
    4. '       ' → logprob: -2.274211883544922
    5. ' for' → logprob: -2.274211883544922
    6. ' queue' → logprob: -4.274211883544922
    7. 'available' → logprob: -4.274211883544922
    8. '   ' → logprob: -4.399211883544922
    9. ' car' → logprob: -4.649211883544922
    10. 'waiting' (adapté à ' waiting') → logprob: -5.149211883544922

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3118775188922882
    2. ' =' → logprob: -1.8118774890899658
    3. '_queue' → logprob: -2.311877489089966
    4. '_' → logprob: -6.186877727508545
    5. '=[]' → logprob: -6.186877727508545
    6. 'queue' → logprob: -7.561877727508545
    7. 'deque' → logprob: -8.186877250671387
    8. '_car' → logprob: -8.686877250671387
    9. '_list' → logprob: -9.436877250671387
    10. ' queue' → logprob: -9.686877250671387

Token 137: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.06308325380086899
    2. ' deque' → logprob: -2.8130831718444824
    3. '[]' → logprob: -7.063083171844482
    4. ' []' → logprob: -8.31308364868164
    5. 'de' → logprob: -11.43808364868164
    6. ' ' → logprob: -13.81308364868164
    7. '	de' → logprob: -14.06308364868164
    8. '   ' → logprob: -14.81308364868164
    9. 'Deque' → logprob: -14.93808364868164
    10. '```' → logprob: -16.68808364868164

Token 138: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021843716967850924
    2. '([]' → logprob: -8.500218391418457
    3. '()
' → logprob: -11.750218391418457
    4. '(' → logprob: -13.000218391418457
    5. '[]' → logprob: -13.375218391418457
    6. '()]' → logprob: -13.625218391418457
    7. ' ()' → logprob: -14.375218391418457
    8. '()

' → logprob: -15.375218391418457
    9. '()\' → logprob: -15.375218391418457
    10. '()<' → logprob: -15.500218391418457

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057701971381902695
    2. '<|end|>' → logprob: -3.68270206451416
    3. ' for' → logprob: -4.43270206451416
    4. 'for' → logprob: -4.93270206451416
    5. '        
' → logprob: -5.05770206451416
    6. '        ' → logprob: -6.80770206451416
    7. ' ' → logprob: -6.93270206451416
    8. '   ' → logprob: -7.05770206451416
    9. '
' → logprob: -7.43270206451416
    10. '<|end|>' → logprob: -8.30770206451416

Token 140: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35956093668937683
    2. ' for' → logprob: -1.9845609664916992
    3. 'for' → logprob: -2.359560966491699
    4. 'while' → logprob: -3.734560966491699
    5. ' while' → logprob: -3.984560966491699
    6. 'car' → logprob: -4.484560966491699
    7. ' car' → logprob: -6.109560966491699
    8. '   ' → logprob: -6.234560966491699
    9. 'token' → logprob: -6.484560966491699
    10. '        ' → logprob: -7.109560966491699

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742636978626251
    2. '=' → logprob: -0.9742636680603027
    3. '_now' → logprob: -9.849264144897461
    4. ' ' → logprob: -10.474264144897461
    5. '_elapsed' → logprob: -11.099264144897461
    6. '_current' → logprob: -11.349264144897461
    7. ',' → logprob: -11.599264144897461
    8. '_' → logprob: -11.724264144897461
    9. '<|end|>' → logprob: -12.099264144897461
    10. '   ' → logprob: -12.099264144897461

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05490078777074814
    2. ' ' → logprob: -2.929900884628296
    3. '   ' → logprob: -11.554901123046875
    4. ' -' → logprob: -12.804901123046875
    5. ' times' → logprob: -13.429901123046875
    6. 'times' → logprob: -14.429901123046875
    7. '  ' → logprob: -14.492401123046875
    8. '-' → logprob: -14.554901123046875
    9. ' m' → logprob: -14.679901123046875
    10. 'm' → logprob: -14.679901123046875

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015165306394919753
    2. ' ' → logprob: -6.501516342163086
    3. '-' → logprob: -12.126516342163086
    4. ' -' → logprob: -12.376516342163086
    5. '   ' → logprob: -13.314016342163086
    6. '  ' → logprob: -15.189016342163086
    7. '10' → logprob: -15.376516342163086
    8. 'times' → logprob: -15.439016342163086
    9. ' times' → logprob: -15.501516342163086
    10. '1' → logprob: -15.689016342163086

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24675974249839783
    2. '<|end|>' → logprob: -1.9967597723007202
    3. '
' → logprob: -3.2467596530914307
    4. 'while' → logprob: -4.87175989151001
    5. '<|end|>' → logprob: -5.12175989151001
    6. ' while' → logprob: -5.12175989151001
    7. '        
' → logprob: -5.37175989151001
    8. ' ' → logprob: -5.49675989151001
    9. ' 
' → logprob: -5.74675989151001
    10. '   ' → logprob: -5.87175989151001

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08013357222080231
    2. '<|end|>' → logprob: -3.0801336765289307
    3. '   ' → logprob: -4.830133438110352
    4. ' ' → logprob: -5.455133438110352
    5. 'while' → logprob: -5.580133438110352
    6. ' while' → logprob: -5.580133438110352
    7. '        
' → logprob: -6.080133438110352
    8. '<|end|>' → logprob: -6.330133438110352
    9. ' 
' → logprob: -6.830133438110352
    10. '    ' → logprob: -6.830133438110352

Token 146: ' car' (ID: 1669)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23443351686000824
    2. '       ' → logprob: -2.10943341255188
    3. 'for' → logprob: -2.73443341255188
    4. ' while' → logprob: -4.484433650970459
    5. '   ' → logprob: -5.859433650970459
    6. 'car' (adapté à ' car') → logprob: -6.359433650970459
    7. '#' → logprob: -6.359433650970459
    8. 'i' → logprob: -7.234433650970459
    9. ' for' → logprob: -7.234433650970459
    10. 'continue' → logprob: -7.859433650970459

Token 147: '_idx' (ID: 15257)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.008047099225223064
    2. '_idx' → logprob: -5.383047103881836
    3. '_index' → logprob: -5.883047103881836
    4. '_' → logprob: -8.508047103881836
    5. '_i' → logprob: -8.758047103881836
    6. 's' → logprob: -8.883047103881836
    7. '_count' → logprob: -9.258047103881836
    8. '_queue' → logprob: -10.633047103881836
    9. '_ids' → logprob: -11.633047103881836
    10. '_counter' → logprob: -12.633047103881836

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. 's' → logprob: -16.011871337890625
    4. '0' → logprob: -16.136871337890625
    5. ' ' → logprob: -16.261871337890625
    6. ',' → logprob: -16.636871337890625
    7. ')' → logprob: -17.511871337890625
    8. '＝' → logprob: -17.636871337890625
    9. '```' → logprob: -17.886871337890625
    10. '<|end|>' → logprob: -17.886871337890625

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -14.3751802444458
    4. '=' → logprob: -16.625181198120117
    5. 'n' → logprob: -17.000181198120117
    6. '<|end|>' → logprob: -17.687681198120117
    7. '```' → logprob: -18.125181198120117
    8. '   ' → logprob: -18.250181198120117
    9. '۰' → logprob: -18.312681198120117
    10. '[' → logprob: -19.000181198120117

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. '1' → logprob: -13.250035285949707
    4. 'n' → logprob: -13.750035285949707
    5. '-' → logprob: -15.625035285949707
    6. '=' → logprob: -16.25003433227539
    7. '```' → logprob: -16.37503433227539
    8. '   ' → logprob: -17.00003433227539
    9. '۰' → logprob: -17.31253433227539
    10. 's' → logprob: -17.50003433227539

Token 151: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' total' (ID: 3609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03725254535675049
    2. ' while' → logprob: -4.287252426147461
    3. 'car' → logprob: -5.287252426147461
    4. '       ' → logprob: -5.412252426147461
    5. 'events' → logprob: -5.662252426147461
    6. '   ' → logprob: -6.787252426147461
    7. 'max' → logprob: -7.037252426147461
    8. ')' → logprob: -7.037252426147461
    9. 'for' → logprob: -7.037252426147461
    10. 'tokens' → logprob: -7.162252426147461

Token 154: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5827827453613281
    2. '_time' → logprob: -1.5827827453613281
    3. '_wait' → logprob: -1.5827827453613281
    4. '_c' → logprob: -2.082782745361328
    5. '_fee' → logprob: -2.707782745361328
    6. '_cost' → logprob: -2.832782745361328
    7. '_pen' → logprob: -3.707782745361328
    8. '_par' → logprob: -4.082782745361328
    9. '_times' → logprob: -4.207782745361328
    10. ' =' → logprob: -4.332782745361328

Token 155: 'ars' (ID: 1904)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.40608444809913635
    2. 'ars' → logprob: -1.406084418296814
    3. 'ount' → logprob: -2.9060845375061035
    4. 'ost' → logprob: -3.6560845375061035
    5. 'ounter' → logprob: -5.7810845375061035
    6. 'har' → logprob: -6.2810845375061035
    7. ' ar' → logprob: -7.2810845375061035
    8. 'ap' → logprob: -7.7810845375061035
    9. 'nt' → logprob: -7.9060845375061035
    10. 'ounted' → logprob: -7.9060845375061035

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08908168226480484
    2. '=' → logprob: -2.4640817642211914
    3. ' ' → logprob: -9.339081764221191
    4. ',' → logprob: -10.589081764221191
    5. 'ed' → logprob: -12.339081764221191
    6. '_' → logprob: -12.964081764221191
    7. ' ,' → logprob: -13.089081764221191
    8. ' +=' → logprob: -13.214081764221191
    9. '   ' → logprob: -13.214081764221191
    10. ')' → logprob: -13.339081764221191

Token 157: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3486877977848053
    2. ' n' → logprob: -1.223687767982483
    3. '0' → logprob: -9.098688125610352
    4. 'len' → logprob: -9.098688125610352
    5. ' ' → logprob: -11.473688125610352
    6. ' len' → logprob: -12.098688125610352
    7. '	n' → logprob: -13.848688125610352
    8. '10' → logprob: -14.223688125610352
    9. '   ' → logprob: -15.473688125610352
    10. 'int' → logprob: -15.723688125610352

Token 158: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6872596740722656
    2. '<|end|>' → logprob: -1.0622596740722656
    3. '
' → logprob: -2.0622596740722656
    4. ' while' → logprob: -5.062259674072266
    5. '<|end|>' → logprob: -5.187259674072266
    6. '        
' → logprob: -5.812259674072266
    7. 'while' → logprob: -6.187259674072266
    8. ' ' → logprob: -6.687259674072266
    9. ' 
' → logprob: -6.812259674072266
    10. '  
' → logprob: -7.187259674072266

Token 160: ' parking' (ID: 14472)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06864862143993378
    2. 'events' → logprob: -3.19364857673645
    3. ' while' → logprob: -4.693648815155029
    4. 'car' → logprob: -4.693648815155029
    5. '       ' → logprob: -5.943648815155029
    6. '   ' → logprob: -6.068648815155029
    7. 'def' → logprob: -7.693648815155029
    8. ' events' → logprob: -8.068648338317871
    9. 'cars' → logprob: -8.068648338317871
    10. 'next' → logprob: -9.068648338317871

Token 161: '_c' (ID: 1303)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1625348329544067
    2. '_queue' → logprob: -1.4125348329544067
    3. '=' → logprob: -1.6625348329544067
    4. '_' → logprob: -2.537534713745117
    5. '_sp' → logprob: -2.912534713745117
    6. '_events' → logprob: -4.037534713745117
    7. '_times' → logprob: -4.287534713745117
    8. '_map' → logprob: -4.537534713745117
    9. '_status' → logprob: -4.787534713745117
    10. '_state' → logprob: -5.162534713745117

Token 162: 'ars' (ID: 1904)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.15022191405296326
    2. 'ount' → logprob: -2.275221824645996
    3. 'ounter' → logprob: -4.275221824645996
    4. 'ar' → logprob: -5.025221824645996
    5. 'ars' → logprob: -5.025221824645996
    6. 'nt' → logprob: -5.775221824645996
    7. 'ontrol' → logprob: -6.900221824645996
    8. 'ost' → logprob: -7.275221824645996
    9. 'urrent' → logprob: -7.400221824645996
    10. 'h' → logprob: -7.400221824645996

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135356605052948
    2. ' =' → logprob: -1.3135356903076172
    3. '[' → logprob: -9.438535690307617
    4. ')' → logprob: -9.438535690307617
    5. '=[]' → logprob: -10.938535690307617
    6. ' +=' → logprob: -11.063535690307617
    7. '_' → logprob: -11.188535690307617
    8. ' ' → logprob: -11.438535690307617
    9. '   ' → logprob: -11.563535690307617
    10. '+=' → logprob: -11.688535690307617

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05127502977848053
    2. ' ' → logprob: -3.0512750148773193
    3. '{}' → logprob: -6.676275253295898
    4. ' set' → logprob: -7.551275253295898
    5. 'set' → logprob: -7.676275253295898
    6. '[]' → logprob: -8.426275253295898
    7. ' {}' → logprob: -9.051275253295898
    8. ' []' → logprob: -9.301275253295898
    9. 'deque' → logprob: -13.051275253295898
    10. '{' → logprob: -13.801275253295898

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02543787844479084
    2. '{}' → logprob: -3.900437831878662
    3. 'set' → logprob: -5.525437831878662
    4. '[]' → logprob: -7.150437831878662
    5. 'deque' → logprob: -9.90043830871582
    6. ' ' → logprob: -10.27543830871582
    7. ' set' → logprob: -11.65043830871582
    8. '{' → logprob: -11.90043830871582
    9. ' {}' → logprob: -12.27543830871582
    10. 'dict' → logprob: -12.40043830871582

Token 166: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4099567234516144
    2. '<|end|>' → logprob: -1.284956693649292
    3. '       ' → logprob: -2.909956693649292
    4. '<|end|>' → logprob: -5.534956932067871
    5. '        
' → logprob: -8.034956932067871
    6. '   ' → logprob: -8.534956932067871
    7. 'while' → logprob: -9.159956932067871
    8. ' while' → logprob: -9.284956932067871
    9. '
' → logprob: -9.284956932067871
    10. ' ' → logprob: -9.534956932067871

Token 167: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1224987506866455
    2. '       ' → logprob: -1.2474987506866455
    3. 'while' → logprob: -1.4974987506866455
    4. ' while' → logprob: -2.7474987506866455
    5. '<|end|>' → logprob: -2.9974987506866455
    6. '        
' → logprob: -3.9974987506866455
    7. '	while' → logprob: -4.997498512268066
    8. '<|end|>' → logprob: -5.122498512268066
    9. '    
' → logprob: -5.872498512268066
    10. '   ' → logprob: -5.997498512268066

Token 168: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.021352296695113182
    2. '   ' → logprob: -4.521352291107178
    3. ' while' → logprob: -5.271352291107178
    4. '#' → logprob: -6.896352291107178
    5. '       ' → logprob: -6.896352291107178
    6. '
' → logprob: -7.146352291107178
    7. ':' → logprob: -7.521352291107178
    8. 'def' (adapté à ' def') → logprob: -8.021352767944336
    9. '	while' → logprob: -8.021352767944336
    10. 'for' → logprob: -8.146352767944336

Token 169: ' remaining' (ID: 15448)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8557082414627075
    2. ' try' → logprob: -1.4807082414627075
    3. 'can' → logprob: -1.6057082414627075
    4. ' park' → logprob: -2.855708122253418
    5. 'park' → logprob: -3.605708122253418
    6. ' find' → logprob: -3.980708122253418
    7. 'try' → logprob: -4.105708122253418
    8. ' process' → logprob: -4.605708122253418
    9. 'process' → logprob: -5.855708122253418
    10. ' attempt' → logprob: -6.230708122253418

Token 170: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.7838937044143677
    2. '():' → logprob: -1.0338937044143677
    3. '_par' → logprob: -2.908893585205078
    4. '_c' → logprob: -3.283893585205078
    5. '()' → logprob: -3.533893585205078
    6. '_' → logprob: -4.158893585205078
    7. '_times' → logprob: -4.158893585205078
    8. '():
' → logprob: -4.408893585205078
    9. '_sp' → logprob: -4.533893585205078
    10. '_car' → logprob: -5.408893585205078

Token 171: '(pos' (ID: 24566)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07124633342027664
    2. '(car' → logprob: -3.196246385574341
    3. '(' → logprob: -4.196246147155762
    4. ' ():' → logprob: -4.821246147155762
    5. '():
' → logprob: -5.821246147155762
    6. ' (' → logprob: -7.696246147155762
    7. '()' → logprob: -7.696246147155762
    8. '(sp' → logprob: -8.321246147155762
    9. ' ()' → logprob: -8.696246147155762
    10. '(s' → logprob: -9.071246147155762

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09344006329774857
    2. ')' → logprob: -2.593440055847168
    3. '):
' → logprob: -4.593440055847168
    4. ',' → logprob: -6.093440055847168
    5. 'ition' → logprob: -7.718440055847168
    6. ')]' → logprob: -8.218440055847168
    7. '):
' → logprob: -8.468440055847168
    8. '[' → logprob: -8.593440055847168
    9. '):

' → logprob: -8.968440055847168
    10. 's' → logprob: -9.093440055847168

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0138378143310547
    2. ':' → logprob: -2.0138378143310547
    3. '       ' → logprob: -2.0138378143310547
    4. ',' → logprob: -2.2638378143310547
    5. '[' → logprob: -2.5138378143310547
    6. '<|end|>' → logprob: -2.8888378143310547
    7. ' (' → logprob: -3.7638378143310547
    8. '   ' → logprob: -3.8888378143310547
    9. '(' → logprob: -4.013837814331055
    10. '<|end|>' → logprob: -4.638837814331055

Token 174: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8878878355026245
    2. 'return' → logprob: -1.6378878355026245
    3. '           ' → logprob: -2.137887954711914
    4. '   ' → logprob: -2.137887954711914
    5. ' return' → logprob: -3.637887954711914
    6. ':
' → logprob: -3.887887954711914
    7. ' if' → logprob: -4.262887954711914
    8. '    ' → logprob: -4.512887954711914
    9. 'if' → logprob: -4.512887954711914
    10. ':' → logprob: -4.887887954711914

Token 175: ' returns' (ID: 7377)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.5984306931495667
    2. 'non' → logprob: -2.348430633544922
    3. 'upper' → logprob: -2.973430633544922
    4. 'total' → logprob: -3.098430633544922
    5. 'spot' → logprob: -3.223430633544922
    6. 'return' → logprob: -3.348430633544922
    7. 'if' → logprob: -3.473430633544922
    8. 'res' → logprob: -3.973430633544922
    9. 'lt' → logprob: -4.098430633544922
    10. '   ' → logprob: -4.223430633544922

Token 176: ' list' (ID: 1562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4649476706981659
    2. 'sum' → logprob: -2.0899477005004883
    3. 'spots' → logprob: -2.0899477005004883
    4. '0' → logprob: -3.5899477005004883
    5. 'float' → logprob: -3.9649477005004883
    6. ' max' → logprob: -3.9649477005004883
    7. 'times' → logprob: -4.339947700500488
    8. ' sum' → logprob: -4.839947700500488
    9. ' spots' → logprob: -4.839947700500488
    10. '   ' → logprob: -5.214947700500488

Token 177: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.855330765247345
    2. '(sp' → logprob: -1.3553307056427002
    3. '(' → logprob: -1.6053307056427002
    4. '([' → logprob: -2.6053307056427
    5. '()' → logprob: -4.355330944061279
    6. '(
' → logprob: -4.730330944061279
    7. '(pos' → logprob: -5.855330944061279
    8. '[pos' → logprob: -6.230330944061279
    9. '(times' → logprob: -6.355330944061279
    10. '(s' → logprob: -6.355330944061279

Token 178: ' remaining' (ID: 15448)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.7983810901641846
    2. 't' → logprob: -2.1733810901641846
    3. '[t' → logprob: -2.2983810901641846
    4. '[' → logprob: -2.4233810901641846
    5. 'remaining' → logprob: -3.4233810901641846
    6. '0' → logprob: -3.7983810901641846
    7. 'time' → logprob: -3.9233810901641846
    8. 'spot' → logprob: -4.0483808517456055
    9. 'max' → logprob: -4.0483808517456055
    10. 'int' → logprob: -4.1733808517456055

Token 179: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.8140443563461304
    2. ')' → logprob: -1.0640443563461304
    3. '[' → logprob: -2.81404447555542
    4. '(' → logprob: -2.81404447555542
    5. '_times' → logprob: -3.68904447555542
    6. ']' → logprob: -3.81404447555542
    7. 'time' → logprob: -4.43904447555542
    8. '_' → logprob: -5.18904447555542
    9. ',' → logprob: -5.31404447555542
    10. 'slots' → logprob: -5.81404447555542

Token 180: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8792533874511719
    2. ' for' → logprob: -2.004253387451172
    3. ' =' → logprob: -2.254253387451172
    4. '[' → logprob: -2.629253387451172
    5. '       ' → logprob: -2.754253387451172
    6. ',' → logprob: -3.004253387451172
    7. '()' → logprob: -3.254253387451172
    8. ':' → logprob: -3.504253387451172
    9. '=' → logprob: -3.754253387451172
    10. 'for' → logprob: -4.254253387451172

Token 181: ' cars' (ID: 13653)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0776535272598267
    2. 'spots' → logprob: -1.3276535272598267
    3. 'spot' → logprob: -1.4526535272598267
    4. '[t' → logprob: -3.702653408050537
    5. 'slot' → logprob: -3.827653408050537
    6. 't' → logprob: -3.952653408050537
    7. 'car' → logprob: -4.077653408050537
    8. '[s' → logprob: -4.077653408050537
    9. '[
' → logprob: -4.577653408050537
    10. 's' → logprob: -4.577653408050537

Token 182: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6032137274742126
    2. '(' → logprob: -0.8532137274742126
    3. '()' → logprob: -4.978213787078857
    4. ' in' → logprob: -5.603213787078857
    5. '[pos' → logprob: -6.103213787078857
    6. ')' → logprob: -6.228213787078857
    7. '()[' → logprob: -6.228213787078857
    8. '(pos' → logprob: -6.353213787078857
    9. ',' → logprob: -7.103213787078857
    10. '(
' → logprob: -7.228213787078857

Token 183: ' this' (ID: 495)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.024310171604156494
    2. ' spots' → logprob: -4.024310111999512
    3. '[' → logprob: -5.899310111999512
    4. 'spot' → logprob: -7.024310111999512
    5. '   ' → logprob: -7.024310111999512
    6. '       ' → logprob: -8.399310111999512
    7. 'pos' → logprob: -8.399310111999512
    8. '[
' → logprob: -8.774310111999512
    9. 'positions' → logprob: -8.899310111999512
    10. ' [' → logprob: -9.149310111999512

Token 184: ' spot' (ID: 10021)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.6747889518737793
    2. ' spot' → logprob: -1.5497889518737793
    3. 'pos' → logprob: -2.4247889518737793
    4. 'spot' → logprob: -2.7997889518737793
    5. 'spots' → logprob: -2.7997889518737793
    6. '[pos' → logprob: -3.4247889518737793
    7. ' pos' → logprob: -4.049788951873779
    8. '[' → logprob: -4.549788951873779
    9. ' parking' → logprob: -6.049788951873779
    10. ' [' → logprob: -6.549788951873779

Token 185: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26364609599113464
    2. '[pos' → logprob: -1.888646125793457
    3. '(pos' → logprob: -3.513646125793457
    4. ':' → logprob: -3.888646125793457
    5. '(' → logprob: -4.513646125793457
    6. '       ' → logprob: -5.513646125793457
    7. '   ' → logprob: -6.388646125793457
    8. '
' → logprob: -6.513646125793457
    9. ',' → logprob: -6.513646125793457
    10. '           ' → logprob: -6.513646125793457

Token 186: 'lower' (ID: 30330)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -1.0410586595535278
    2. ' spots' → logprob: -1.4160586595535278
    3. '[' → logprob: -2.4160585403442383
    4. ')' → logprob: -2.9160585403442383
    5. '[
' → logprob: -3.2910585403442383
    6. 'spot' → logprob: -3.4160585403442383
    7. ' spot' → logprob: -3.7910585403442383
    8. '
' → logprob: -3.9160585403442383
    9. '[t' → logprob: -3.9160585403442383
    10. '[pos' → logprob: -4.041058540344238

Token 187: ' then' (ID: 1815)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05777432397007942
    2. ' ,' → logprob: -4.432774543762207
    3. ')' → logprob: -4.557774543762207
    4. '),' → logprob: -4.682774543762207
    5. '[' → logprob: -5.057774543762207
    6. ' +' → logprob: -5.182774543762207
    7. ' and' → logprob: -5.307774543762207
    8. '+' → logprob: -6.182774543762207
    9. ',
' → logprob: -7.057774543762207
    10. ' or' → logprob: -7.182774543762207

Token 188: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.47436338663101196
    2. 'upper' → logprob: -0.974363386631012
    3. ''' → logprob: -8.599363327026367
    4. ',' → logprob: -10.599363327026367
    5. 'space' → logprob: -10.849363327026367
    6. ')' → logprob: -11.349363327026367
    7. ' '' → logprob: -11.474363327026367
    8. '[' → logprob: -11.849363327026367
    9. ' space' → logprob: -12.099363327026367
    10. '"' → logprob: -12.599363327026367

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007982061244547367
    2. ')
' → logprob: -5.00798225402832
    3. '):' → logprob: -7.75798225402832
    4. ' )' → logprob: -8.25798225402832
    5. '):
' → logprob: -8.38298225402832
    6. ']' → logprob: -8.63298225402832
    7. '       ' → logprob: -10.25798225402832
    8. ',' → logprob: -10.25798225402832
    9. '   ' → logprob: -10.38298225402832
    10. '[' → logprob: -11.25798225402832

Token 190: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6187149286270142
    2. ':
' → logprob: -1.4937149286270142
    3. '       ' → logprob: -2.2437148094177246
    4. '[' → logprob: -2.9937148094177246
    5. '   ' → logprob: -3.9937148094177246
    6. '           ' → logprob: -4.118714809417725
    7. '(' → logprob: -4.493714809417725
    8. '
' → logprob: -5.368714809417725
    9. '):
' → logprob: -5.368714809417725
    10. 'return' → logprob: -5.868714809417725

Token 191: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06034331023693085
    2. '   ' → logprob: -4.935343265533447
    3. ' res' → logprob: -4.935343265533447
    4. 'r' → logprob: -5.185343265533447
    5. 'result' → logprob: -5.185343265533447
    6. 'ret' → logprob: -5.310343265533447
    7. 'return' → logprob: -5.310343265533447
    8. ' return' → logprob: -5.560343265533447
    9. 'rt' → logprob: -5.685343265533447
    10. ' rt' → logprob: -5.810343265533447

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06297983229160309
    2. ' =' → logprob: -2.8129799365997314
    3. '=[]' → logprob: -6.937979698181152
    4. '=[]
' → logprob: -10.312979698181152
    5. '=[' → logprob: -12.562979698181152
    6. '[:]' → logprob: -13.437979698181152
    7. '[' → logprob: -13.937979698181152
    8. '=[]
' → logprob: -14.312979698181152
    9. '.append' → logprob: -14.812979698181152
    10. 'eturn' → logprob: -14.812979698181152

Token 193: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04862426593899727
    2. '[]' → logprob: -3.048624277114868
    3. ' []
' → logprob: -10.298624038696289
    4. ' []' → logprob: -13.048624038696289
    5. '[' → logprob: -14.173624038696289
    6. '[]

' → logprob: -14.923624038696289
    7. '[
' → logprob: -16.92362403869629
    8. '[])
' → logprob: -17.04862403869629
    9. '[],' → logprob: -18.92362403869629
    10. '   ' → logprob: -19.17362403869629

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021653673611581326
    2. ' for' → logprob: -6.6271653175354
    3. 'for' → logprob: -7.6271653175354
    4. '       ' → logprob: -8.002165794372559
    5. '   ' → logprob: -11.127165794372559
    6. '          ' → logprob: -14.502165794372559
    7. '               ' → logprob: -15.002165794372559
    8. '		' → logprob: -15.002165794372559
    9. '    ' → logprob: -15.502165794372559
    10. ' ' → logprob: -15.877165794372559

Token 195: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19314715266227722
    2. ' for' → logprob: -2.0681471824645996
    3. '           ' → logprob: -3.4431471824645996
    4. '       ' → logprob: -4.0681471824646
    5. '	for' → logprob: -9.693146705627441
    6. '   ' → logprob: -9.818146705627441
    7. 'if' → logprob: -11.068146705627441
    8. '	       ' → logprob: -12.693146705627441
    9. ' if' → logprob: -12.818146705627441
    10. '	   ' → logprob: -13.568146705627441

Token 196: ' car' (ID: 1669)
  Prédit: 'slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slot' → logprob: -0.011520260013639927
    2. ' slot' → logprob: -5.0115203857421875
    3. 'level' → logprob: -6.7615203857421875
    4. 's' → logprob: -7.2615203857421875
    5. 'layer' → logprob: -7.2615203857421875
    6. 'i' → logprob: -7.3865203857421875
    7. 'car' → logprob: -8.011520385742188
    8. 'spot' → logprob: -8.011520385742188
    9. 'pos' → logprob: -8.886520385742188
    10. 'state' → logprob: -9.261520385742188

Token 197: ' in' (ID: 306)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.34426140785217285
    2. '_slot' → logprob: -1.8442614078521729
    3. '_sp' → logprob: -2.969261407852173
    4. ' in' → logprob: -2.969261407852173
    5. 'pos' → logprob: -4.094261169433594
    6. '_state' → logprob: -5.344261169433594
    7. 'slot' → logprob: -5.719261169433594
    8. 'in' → logprob: -6.469261169433594
    9. '_status' → logprob: -6.844261169433594
    10. 'spot' → logprob: -7.594261169433594

Token 198: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.13494151830673218
    2. ' spots' → logprob: -2.259941577911377
    3. 'pos' → logprob: -3.884941577911377
    4. 'spot' → logprob: -7.634941577911377
    5. ' pos' → logprob: -7.634941577911377
    6. '[' → logprob: -8.884941101074219
    7. '[pos' → logprob: -9.759941101074219
    8. 'sp' → logprob: -9.884941101074219
    9. '   ' → logprob: -10.384941101074219
    10. 'positions' → logprob: -11.009941101074219

Token 199: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.003923687618225813
    2. 'pos' → logprob: -5.6289238929748535
    3. '[' → logprob: -8.378923416137695
    4. '[position' → logprob: -10.128923416137695
    5. '[-' → logprob: -11.128923416137695
    6. '   ' → logprob: -11.628923416137695
    7. '[i' → logprob: -12.253923416137695
    8. 'if' → logprob: -13.003923416137695
    9. ')' → logprob: -13.253923416137695
    10. '[p' → logprob: -13.378923416137695

Token 200: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2902820110321045
    2. ']:
' → logprob: -1.4152820110321045
    3. '[' → logprob: -5.540282249450684
    4. '):
' → logprob: -6.040282249450684
    5. '):' → logprob: -6.790282249450684
    6. ']' → logprob: -8.040282249450684
    7. '   ' → logprob: -8.040282249450684
    8. '       ' → logprob: -8.665282249450684
    9. ']):
' → logprob: -8.915282249450684
    10. '][' → logprob: -8.915282249450684

Token 201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10226979106664658
    2. ' if' → logprob: -2.4772698879241943
    3. 'if' → logprob: -4.352269649505615
    4. '           ' → logprob: -9.227270126342773
    5. ' ' → logprob: -9.852270126342773
    6. '   ' → logprob: -9.977270126342773
    7. '	           ' → logprob: -10.477270126342773
    8. ':' → logprob: -10.852270126342773
    9. '[' → logprob: -11.352270126342773
    10. '       ' → logprob: -11.352270126342773

Token 202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.056181393563747406
    2. 'if' (adapté à ' if') → logprob: -3.0561814308166504
    3. '                   ' → logprob: -5.55618143081665
    4. '               ' → logprob: -5.80618143081665
    5. '           ' → logprob: -7.80618143081665
    6. ' ' → logprob: -9.056180953979492
    7. '   ' → logprob: -10.181180953979492
    8. '	           ' → logprob: -10.681180953979492
    9. '		           ' → logprob: -10.681180953979492
    10. ' ' → logprob: -11.181180953979492

Token 203: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.014166681095957756
    2. ' car' → logprob: -4.264166831970215
    3. '	car' → logprob: -13.389166831970215
    4. '   ' → logprob: -14.264166831970215
    5. '(car' → logprob: -15.264166831970215
    6. '               ' → logprob: -15.264166831970215
    7. ' ' → logprob: -15.889166831970215
    8. ' not' → logprob: -16.3891658782959
    9. '           ' → logprob: -16.8891658782959
    10. 'not' → logprob: -16.8891658782959

Token 204: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03379795700311661
    2. 'is' → logprob: -3.4087979793548584
    3. 'and' → logprob: -9.533798217773438
    4. '!=' → logprob: -10.533798217773438
    5. ' and' → logprob: -11.158798217773438
    6. '                   ' → logprob: -11.783798217773438
    7. 'not' → logprob: -11.783798217773438
    8. ':' → logprob: -12.533798217773438
    9. '   ' → logprob: -13.033798217773438
    10. ')' → logprob: -13.158798217773438

Token 205: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4251905083656311
    2. ' not' → logprob: -1.1751904487609863
    3. 'None' → logprob: -3.3001904487609863
    4. ' None' → logprob: -7.300190448760986
    5. '   ' → logprob: -10.800190925598145
    6. '                   ' → logprob: -11.550190925598145
    7. '               ' → logprob: -12.175190925598145
    8. 'Not' → logprob: -13.175190925598145
    9. '	not' → logprob: -13.425190925598145
    10. '           ' → logprob: -13.675190925598145

Token 206: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.45828452706336975
    2. ':' → logprob: -1.4582844972610474
    3. ':
' → logprob: -2.333284616470337
    4. '                   ' → logprob: -3.833284616470337
    5. '               ' → logprob: -4.708284378051758
    6. '           ' → logprob: -5.458284378051758
    7. 'or' → logprob: -6.458284378051758
    8. ':return' → logprob: -7.333284378051758
    9. '                       ' → logprob: -8.583284378051758
    10. ',' → logprob: -8.583284378051758

Token 207: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033483440056443214
    2. ' or' → logprob: -6.128348350524902
    3. '               ' → logprob: -7.503348350524902
    4. 'continue' → logprob: -8.503348350524902
    5. ',' → logprob: -9.128348350524902
    6. ' continue' → logprob: -9.753348350524902
    7. '           ' → logprob: -10.128348350524902
    8. 'res' → logprob: -10.128348350524902
    9. ':
' → logprob: -11.003348350524902
    10. '   ' → logprob: -11.253348350524902

Token 208: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.21237769722938538
    2. 'res' (adapté à ' res') → logprob: -1.712377667427063
    3. '0' → logprob: -4.962377548217773
    4. '                   ' → logprob: -6.087377548217773
    5. 'continue' → logprob: -7.087377548217773
    6. ' continue' → logprob: -7.337377548217773
    7. ' ' → logprob: -10.212377548217773
    8. '                       ' → logprob: -10.712377548217773
    9. ',res' → logprob: -10.837377548217773
    10. 'break' → logprob: -11.462377548217773

Token 209: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019788339268416166
    2. '.' → logprob: -6.751978874206543
    3. 'eturn' → logprob: -7.251978874206543
    4. '=' → logprob: -10.501978874206543
    5. '                   ' → logprob: -11.251978874206543
    6. 'append' → logprob: -11.501978874206543
    7. ' =' → logprob: -12.001978874206543
    8. 'es' → logprob: -12.001978874206543
    9. '.insert' → logprob: -12.001978874206543
    10. '               ' → logprob: -12.376978874206543

Token 210: '(None' (ID: 65126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01805933006107807
    2. '-' → logprob: -4.143059253692627
    3. 'None' → logprob: -6.518059253692627
    4. 'float' → logprob: -7.893059253692627
    5. ' ' → logprob: -9.143059730529785
    6. '(' → logprob: -10.518059730529785
    7. ' -' → logprob: -11.143059730529785
    8. '(-' → logprob: -11.518059730529785
    9. ' None' → logprob: -12.143059730529785
    10. '   ' → logprob: -13.393059730529785

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04348311945796013
    2. '               ' → logprob: -3.793483018875122
    3. ')
' → logprob: -3.918483018875122
    4. 'else' → logprob: -9.293482780456543
    5. ' else' → logprob: -10.543482780456543
    6. ' )' → logprob: -10.543482780456543
    7. ')return' → logprob: -12.668482780456543
    8. '           ' → logprob: -12.793482780456543
    9. ' )
' → logprob: -13.168482780456543
    10. ')

' → logprob: -13.543482780456543

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011464104754850268
    2. 'else' → logprob: -7.12614631652832
    3. ' else' → logprob: -8.00114631652832
    4. '           ' → logprob: -13.50114631652832
    5. '			' → logprob: -13.75114631652832
    6. '	           ' → logprob: -14.12614631652832
    7. ',' → logprob: -14.12614631652832
    8. '		       ' → logprob: -14.12614631652832
    9. '              ' → logprob: -14.75114631652832
    10. '                   ' → logprob: -15.25114631652832

Token 213: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6690860986709595
    2. ' else' → logprob: -1.2940860986709595
    3. 'else' (adapté à ' else') → logprob: -1.5440860986709595
    4. '           ' → logprob: -9.419086456298828
    5. '	else' → logprob: -10.919086456298828
    6. 'elif' → logprob: -11.169086456298828
    7. '              ' → logprob: -11.669086456298828
    8. ',' → logprob: -11.794086456298828
    9. '			' → logprob: -11.919086456298828
    10. ' elif' → logprob: -12.169086456298828

Token 214: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.040288493037223816
    2. ':
' → logprob: -3.5402884483337402
    3. ':' → logprob: -5.04028844833374
    4. ',' → logprob: -5.91528844833374
    5. '               ' → logprob: -8.165288925170898
    6. ' :
' → logprob: -8.665288925170898
    7. '                ' → logprob: -8.790288925170898
    8. ' res' → logprob: -9.040288925170898
    9. '                    ' → logprob: -9.165288925170898
    10. '                  ' → logprob: -9.165288925170898

Token 215: '                   ' (ID: 699)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.823020339012146
    2. '                   ' → logprob: -1.448020339012146
    3. ' (' → logprob: -1.698020339012146
    4. '(car' → logprob: -3.0730204582214355
    5. '               ' → logprob: -3.5730204582214355
    6. 'car' → logprob: -3.5730204582214355
    7. ' res' → logprob: -3.9480204582214355
    8. '                ' → logprob: -4.4480204582214355
    9. '(' → logprob: -5.6980204582214355
    10. '                    ' → logprob: -6.4480204582214355

Token 216: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.659090518951416
    2. 'res' (adapté à ' res') → logprob: -0.784090518951416
    3. '_,' → logprob: -4.284090518951416
    4. 'car' → logprob: -5.034090518951416
    5. ' _,' → logprob: -5.784090518951416
    6. ' car' → logprob: -6.284090518951416
    7. '   ' → logprob: -7.534090518951416
    8. ' remaining' → logprob: -9.659090042114258
    9. 'remaining' → logprob: -9.659090042114258
    10. '                   ' → logprob: -9.784090042114258

Token 217: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012228479608893394
    2. 'append' → logprob: -4.762228488922119
    3. '.' → logprob: -6.762228488922119
    4. '=' → logprob: -7.137228488922119
    5. 'res' → logprob: -7.637228488922119
    6. ' append' → logprob: -7.762228488922119
    7. ' .' → logprob: -7.887228488922119
    8. '[' → logprob: -9.637228012084961
    9. 'return' → logprob: -9.637228012084961
    10. ' =' → logprob: -10.012228012084961

Token 218: '(car' (ID: 77006)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.149973526597023
    2. ' car' → logprob: -2.0249736309051514
    3. ' max' → logprob: -5.524973392486572
    4. '(car' → logprob: -6.274973392486572
    5. 'max' → logprob: -6.774973392486572
    6. ' (' → logprob: -9.14997386932373
    7. '(' → logprob: -9.14997386932373
    8. '(max' → logprob: -11.02497386932373
    9. ' ' → logprob: -12.02497386932373
    10. '   ' → logprob: -12.64997386932373

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3915141355246305e-05
    2. '[-' → logprob: -11.87502384185791
    3. ' [' → logprob: -12.25002384185791
    4. ')' → logprob: -12.87502384185791
    5. '(' → logprob: -12.87502384185791
    6. ',' → logprob: -14.25002384185791
    7. '[
' → logprob: -14.25002384185791
    8. '
' → logprob: -14.31252384185791
    9. '][' → logprob: -14.31252384185791
    10. '   ' → logprob: -14.31252384185791

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -12.312520027160645
    3. '
' → logprob: -12.312520027160645
    4. '0' → logprob: -12.750020027160645
    5. ']' → logprob: -13.437520027160645
    6. '```' → logprob: -14.062520027160645
    7. '[' → logprob: -14.125020027160645
    8. '-' → logprob: -14.375020027160645
    9. 'time' → logprob: -14.500020027160645
    10. '

' → logprob: -14.500020027160645

Token 221: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07857786118984222
    2. '-' → logprob: -2.703577756881714
    3. '-time' → logprob: -5.828577995300293
    4. ')' → logprob: -6.078577995300293
    5. '])' → logprob: -6.078577995300293
    6. ']' → logprob: -7.953577995300293
    7. ')])' → logprob: -7.953577995300293
    8. ')]' → logprob: -9.078577995300293
    9. ' ])' → logprob: -10.203577995300293
    10. ' )' → logprob: -10.203577995300293

Token 222: 'current' (ID: 5804)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0028140286449342966
    2. ' time' → logprob: -5.877813816070557
    3. 'max' → logprob: -12.377814292907715
    4. 't' → logprob: -12.877814292907715
    5. 'current' → logprob: -14.627814292907715
    6. '(time' → logprob: -15.127814292907715
    7. ')' → logprob: -15.252814292907715
    8. '	time' → logprob: -15.627814292907715
    9. 'times' → logprob: -15.752814292907715
    10. '0' → logprob: -15.877814292907715

Token 223: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1447702944278717
    2. 'time' → logprob: -2.144770383834839
    3. ' time' → logprob: -4.89477014541626
    4. '_' → logprob: -5.14477014541626
    5. ')' → logprob: -5.51977014541626
    6. ' _' → logprob: -9.144770622253418
    7. '[' → logprob: -9.644770622253418
    8. '_t' → logprob: -9.894770622253418
    9. 't' → logprob: -10.644770622253418
    10. 'Time' → logprob: -10.894770622253418

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0057619307190179825
    2. ' )' → logprob: -5.880762100219727
    3. ')
' → logprob: -6.255762100219727
    4. '           ' → logprob: -7.505762100219727
    5. '               ' → logprob: -8.005762100219727
    6. '))' → logprob: -10.005762100219727
    7. '       ' → logprob: -10.255762100219727
    8. ' )
' → logprob: -10.630762100219727
    9. '                   ' → logprob: -11.130762100219727
    10. '+' → logprob: -12.005762100219727

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009392123320139945
    2. '
' → logprob: -8.12593936920166
    3. '       ' → logprob: -8.50093936920166
    4. 'return' → logprob: -9.00093936920166
    5. '               ' → logprob: -9.00093936920166
    6. ' return' → logprob: -9.75093936920166
    7. '            
' → logprob: -10.37593936920166
    8. '		' → logprob: -10.87593936920166
    9. '<|end|>' → logprob: -11.25093936920166
    10. ')' → logprob: -11.62593936920166

Token 226: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2042085826396942
    2. '
' → logprob: -2.0792086124420166
    3. '       ' → logprob: -3.4542086124420166
    4. 'return' (adapté à ' return') → logprob: -3.9542086124420166
    5. ' return' → logprob: -5.0792083740234375
    6. '               ' → logprob: -6.9542083740234375
    7. '   ' → logprob: -7.5792083740234375
    8. '	return' → logprob: -7.9542083740234375
    9. ' ' → logprob: -8.704208374023438
    10. '                   ' → logprob: -8.954208374023438

Token 227: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2519393861293793
    2. ' res' → logprob: -1.5019394159317017
    3. ' ' → logprob: -12.12693977355957
    4. '	res' → logprob: -12.87693977355957
    5. '[' → logprob: -14.25193977355957
    6. '(res' → logprob: -14.37693977355957
    7. '   ' → logprob: -14.75193977355957
    8. '  ' → logprob: -15.50193977355957
    9. ' ' → logprob: -15.62693977355957
    10. ' [' → logprob: -16.62693977355957

Token 228: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0002647927321959287
    2. '<|end|>' → logprob: -9.500265121459961
    3. '
' → logprob: -9.875265121459961
    4. '

' → logprob: -9.875265121459961
    5. '\n' → logprob: -10.750265121459961
    6. '' → logprob: -10.875265121459961
    7. '       ' → logprob: -11.875265121459961
    8. '  
' → logprob: -12.000265121459961
    9. 'current' → logprob: -12.375265121459961
    10. '        
' → logprob: -12.500265121459961

Token 229: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0737079307436943
    2. '_' → logprob: -3.4487078189849854
    3. '_
' → logprob: -3.4487078189849854
    4. '' → logprob: -5.9487080574035645
    5. '

' → logprob: -6.6987080574035645
    6. '\n' → logprob: -7.0737080574035645
    7. '_

' → logprob: -7.0737080574035645
    8. '  
' → logprob: -7.9487080574035645
    9. '_current' → logprob: -8.198707580566406
    10. '    
' → logprob: -8.448707580566406

Token 230: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32220304012298584
    2. 'current' → logprob: -1.3222030401229858
    3. '       ' → logprob: -5.072203159332275
    4. ' current' → logprob: -6.447203159332275
    5. '        
' → logprob: -8.072202682495117
    6. '_current' → logprob: -8.822202682495117
    7. '	current' → logprob: -8.947202682495117
    8. '
' → logprob: -9.322202682495117
    9. '		
' → logprob: -9.572202682495117
    10. '    
' → logprob: -10.197202682495117

Token 231: ' park' (ID: 11796)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8370667099952698
    2. 'can' → logprob: -1.587066650390625
    3. ' find' → logprob: -2.212066650390625
    4. ' park' → logprob: -3.337066650390625
    5. ' process' → logprob: -3.462066650390625
    6. ' update' → logprob: -3.837066650390625
    7. ' current' → logprob: -3.962066650390625
    8. ' available' → logprob: -3.962066650390625
    9. 'park' → logprob: -4.087066650390625
    10. ' try' → logprob: -4.212066650390625

Token 232: '_car' (ID: 62991)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013627070933580399
    2. '_' → logprob: -4.513627052307129
    3. ' (' → logprob: -7.388627052307129
    4. '(car' → logprob: -8.013627052307129
    5. '(space' → logprob: -8.013627052307129
    6. '_token' → logprob: -8.263627052307129
    7. '(token' → logprob: -8.638627052307129
    8. '_car' → logprob: -8.888627052307129
    9. '(
' → logprob: -9.138627052307129
    10. '():' → logprob: -9.638627052307129

Token 233: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.1836037039756775
    2. '(' → logprob: -1.9336037635803223
    3. '(pos' → logprob: -3.8086037635803223
    4. ' (' → logprob: -7.558603763580322
    5. '(c' → logprob: -9.058603286743164
    6. '(position' → logprob: -9.308603286743164
    7. '(sp' → logprob: -9.808603286743164
    8. '():' → logprob: -9.933603286743164
    9. '(idx' → logprob: -10.933603286743164
    10. '(space' → logprob: -11.433603286743164

Token 234: '_id' (ID: 1537)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5868221521377563
    2. '_id' → logprob: -0.9618221521377563
    3. '):' → logprob: -3.336822032928467
    4. ')' → logprob: -4.461822032928467
    5. '[' → logprob: -4.961822032928467
    6. ',' → logprob: -6.336822032928467
    7. 'idx' → logprob: -6.586822032928467
    8. '):
' → logprob: -6.711822032928467
    9. '_' → logprob: -7.586822032928467
    10. ')_' → logprob: -7.711822032928467

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. ' ,' → logprob: -10.000051498413086
    3. '):' → logprob: -12.250051498413086
    4. '   ' → logprob: -15.125051498413086
    5. '(car' → logprob: -15.625051498413086
    6. ',pos' → logprob: -15.875051498413086
    7. ')' → logprob: -16.500051498413086
    8. ',current' → logprob: -16.625051498413086
    9. '       ' → logprob: -16.750051498413086
    10. ',
' → logprob: -16.875051498413086

Token 236: ' park' (ID: 11796)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.7585313320159912
    2. 'arr' → logprob: -1.0085313320159912
    3. 'leave' → logprob: -2.133531332015991
    4. ' arrival' → logprob: -3.258531332015991
    5. ' arrive' → logprob: -5.50853157043457
    6. ' leave' → logprob: -6.00853157043457
    7. 'current' → logprob: -7.13353157043457
    8. 'car' → logprob: -7.25853157043457
    9. 'start' → logprob: -8.00853157043457
    10. ' arr' → logprob: -8.25853157043457

Token 237: '_time' (ID: 6425)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.026639299467206
    2. 'ing' → logprob: -4.276639461517334
    3. '_idx' → logprob: -5.276639461517334
    4. ')' → logprob: -6.276639461517334
    5. 'pos' → logprob: -6.276639461517334
    6. 'ed' → logprob: -6.276639461517334
    7. '_time' → logprob: -7.651639461517334
    8. '_sp' → logprob: -7.776639461517334
    9. '_position' → logprob: -8.776638984680176
    10. '_id' → logprob: -8.901638984680176

Token 238: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06353911757469177
    2. '):' → logprob: -2.8135390281677246
    3. '):
' → logprob: -6.563539028167725
    4. ' ,' → logprob: -9.313539505004883
    5. ')' → logprob: -10.438539505004883
    6. ' ):' → logprob: -10.813539505004883
    7. '   ' → logprob: -12.313539505004883
    8. '):

' → logprob: -12.438539505004883
    9. '):
' → logprob: -12.938539505004883
    10. ',
' → logprob: -13.313539505004883

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1567649394273758
    2. '<|end|>' → logprob: -2.4067649841308594
    3. ' 
' → logprob: -4.406764984130859
    4. '        
' → logprob: -4.656764984130859
    5. ':' → logprob: -4.906764984130859
    6. '   ' → logprob: -5.406764984130859
    7. ' ' → logprob: -5.781764984130859
    8. '[' → logprob: -5.906764984130859
    9. ':
' → logprob: -6.156764984130859
    10. '    
' → logprob: -6.156764984130859

Token 240: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4303630590438843
    2. ' non' → logprob: -1.8053630590438843
    3. '       ' → logprob: -3.055363178253174
    4. 'for' → logprob: -3.180363178253174
    5. '   ' → logprob: -3.555363178253174
    6. ' while' → logprob: -4.055363178253174
    7. ' global' → logprob: -4.555363178253174
    8. ' #' → logprob: -4.805363178253174
    9. ' car' → logprob: -5.180363178253174
    10. 'non' → logprob: -5.555363178253174

Token 241: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2541281282901764
    2. 'non' → logprob: -2.3791282176971436
    3. '#' → logprob: -3.3791282176971436
    4. 'car' → logprob: -3.3791282176971436
    5. 'current' → logprob: -4.0041279792785645
    6. '       ' → logprob: -4.3791279792785645
    7. 'if' → logprob: -4.3791279792785645
    8. 'global' → logprob: -5.6291279792785645
    9. 'def' → logprob: -6.3791279792785645
    10. 'pos' → logprob: -6.3791279792785645

Token 242: ' spot' (ID: 10021)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9120007157325745
    2. ' a' → logprob: -1.9120006561279297
    3. ' i' → logprob: -2.0370006561279297
    4. 'pos' → logprob: -2.1620006561279297
    5. ' next' → logprob: -2.6620006561279297
    6. ' pos' → logprob: -3.5370006561279297
    7. 'i' → logprob: -4.16200065612793
    8. ' for' → logprob: -4.16200065612793
    9. 'the' → logprob: -4.28700065612793
    10. ' ' → logprob: -4.41200065612793

Token 243: ' following' (ID: 3992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' the' (ID: 290)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7950798869132996
    2. ' the' → logprob: -1.5450799465179443
    3. 'range' → logprob: -1.6700799465179443
    4. ' spots' → logprob: -3.5450799465179443
    5. ' for' → logprob: -3.9200799465179443
    6. ' lambda' → logprob: -4.545079708099365
    7. ' in' → logprob: -4.670079708099365
    8. ')' → logprob: -4.670079708099365
    9. 'the' → logprob: -5.045079708099365
    10. 'for' → logprob: -5.170079708099365

Token 245: ' rules' (ID: 9607)
  Prédit: ' rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rules' → logprob: -0.6313880085945129
    2. 'rules' → logprob: -2.006387948989868
    3. ' priority' → logprob: -2.756387948989868
    4. 'priority' → logprob: -3.256387948989868
    5. ' for' → logprob: -3.381387948989868
    6. 'for' → logprob: -3.881387948989868
    7. ' parking' → logprob: -3.881387948989868
    8. ' logic' → logprob: -4.006388187408447
    9. ' spots' → logprob: -4.131388187408447
    10. ' range' → logprob: -4.381388187408447

Token 246: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10225450992584229
    2. '       ' → logprob: -3.6022543907165527
    3. ' ' → logprob: -3.7272543907165527
    4. '           ' → logprob: -3.8522543907165527
    5. 'for' → logprob: -4.227254390716553
    6. '<|end|>' → logprob: -5.852254390716553
    7. '        ' → logprob: -6.852254390716553
    8. ' 
' → logprob: -7.227254390716553
    9. '   ' → logprob: -7.477254390716553
    10. ' available' → logprob: -7.602254390716553

Token 249: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6025620102882385
    2. ' for' → logprob: -0.9775620102882385
    3. ' non' → logprob: -3.7275619506835938
    4. 'non' → logprob: -4.102561950683594
    5. '           ' → logprob: -4.477561950683594
    6. 'current' → logprob: -5.227561950683594
    7. '       ' → logprob: -5.477561950683594
    8. 'car' → logprob: -5.727561950683594
    9. 'available' → logprob: -6.102561950683594
    10. ' current' → logprob: -6.352561950683594

Token 250: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03806409612298012
    2. 'available' → logprob: -4.413064002990723
    3. ' for' → logprob: -5.538064002990723
    4. 'found' → logprob: -5.538064002990723
    5. 'best' → logprob: -5.663064002990723
    6. 'min' → logprob: -5.913064002990723
    7. 'car' → logprob: -5.913064002990723
    8. 'non' → logprob: -6.413064002990723
    9. '       ' → logprob: -6.538064002990723
    10. 'possible' → logprob: -7.413064002990723

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5402592420578003
    2. '.' → logprob: -1.1652592420578003
    3. '       ' → logprob: -3.41525936126709
    4. 'for' → logprob: -4.04025936126709
    5. ' if' → logprob: -4.41525936126709
    6. ' for' → logprob: -4.66525936126709
    7. ' ' → logprob: -5.29025936126709
    8. '           ' → logprob: -5.29025936126709
    9. ' )' → logprob: -5.29025936126709
    10. '   ' → logprob: -5.66525936126709

Token 252: ' any' (ID: 1062)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31113141775131226
    2. ' for' → logprob: -1.561131477355957
    3. '#' → logprob: -4.311131477355957
    4. '   ' → logprob: -4.811131477355957
    5. 'For' → logprob: -5.436131477355957
    6. 'Find' → logprob: -5.686131477355957
    7. ' first' → logprob: -6.436131477355957
    8. 'available' → logprob: -6.436131477355957
    9. ' all' → logprob: -6.561131477355957
    10. '       ' → logprob: -6.561131477355957

Token 253: ' empty' (ID: 8213)
  Prédit: ' spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spot' → logprob: -0.31260716915130615
    2. 'spot' → logprob: -1.4376071691513062
    3. ' lower' → logprob: -5.062607288360596
    4. ' car' → logprob: -5.187607288360596
    5. ' spots' → logprob: -5.562607288360596
    6. 'lower' → logprob: -5.937607288360596
    7. ' i' → logprob: -6.312607288360596
    8. 'car' → logprob: -6.562607288360596
    9. 'pos' → logprob: -6.687607288360596
    10. ' (' → logprob: -7.312607288360596

Token 254: ' spot' (ID: 10021)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.8095023036003113
    2. 'spot' → logprob: -1.684502363204956
    3. ' lower' → logprob: -2.059502363204956
    4. 'slot' → logprob: -2.434502363204956
    5. ' spot' → logprob: -2.434502363204956
    6. ' slot' → logprob: -3.684502363204956
    7. '_lower' → logprob: -4.809502124786377
    8. 'space' → logprob: -5.059502124786377
    9. '(lower' → logprob: -5.309502124786377
    10. '[' → logprob: -5.559502124786377

Token 255: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5597304105758667
    2. ' or' → logprob: -1.8097304105758667
    3. '<|end|>' → logprob: -1.8097304105758667
    4. ':' → logprob: -2.1847305297851562
    5. ' if' → logprob: -2.4347305297851562
    6. ' for' → logprob: -2.5597305297851562
    7. '<|end|>' → logprob: -3.1847305297851562
    8. ',' → logprob: -3.5597305297851562
    9. ':
' → logprob: -3.6847305297851562
    10. '           ' → logprob: -4.184730529785156

Token 256: 'both' (ID: 47163)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.159205675125122
    2. ')' → logprob: -1.409205675125122
    3. '0' → logprob: -2.284205675125122
    4. '[' → logprob: -3.409205675125122
    5. ' lower' → logprob: -3.659205675125122
    6. ' )' → logprob: -3.659205675125122
    7. 'car' → logprob: -4.034205436706543
    8. ' or' → logprob: -4.034205436706543
    9. ',' → logprob: -4.034205436706543
    10. 's' → logprob: -4.284205436706543

Token 257: ' None' (ID: 4662)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.23625648021697998
    2. ' slots' → logprob: -1.86125648021698
    3. '[' → logprob: -4.4862565994262695
    4. ' spots' → logprob: -4.6112565994262695
    5. 'lower' → logprob: -4.8612565994262695
    6. ' lower' → logprob: -4.9862565994262695
    7. ' is' → logprob: -5.3612565994262695
    8. ' None' → logprob: -5.6112565994262695
    9. ')' → logprob: -5.9862565994262695
    10. 'None' → logprob: -6.2362565994262695

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040001630783081055
    2. ',' → logprob: -4.29000186920166
    3. '),' → logprob: -4.54000186920166
    4. '[' → logprob: -5.54000186920166
    5. ' )' → logprob: -6.41500186920166
    6. ' or' → logprob: -6.41500186920166
    7. ' in' → logprob: -6.54000186920166
    8. ',None' → logprob: -6.54000186920166
    9. ')
' → logprob: -7.29000186920166
    10. '):' → logprob: -7.41500186920166

Token 259: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' pick' (ID: 5230)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.44077572226524353
    2. ' for' → logprob: -2.1907756328582764
    3. 'spots' → logprob: -2.4407756328582764
    4. ' return' → logprob: -3.1907756328582764
    5. 'for' → logprob: -3.1907756328582764
    6. 'lower' → logprob: -3.5657756328582764
    7. ' lower' → logprob: -4.0657758712768555
    8. 'return' → logprob: -4.1907758712768555
    9. ' spot' → logprob: -6.1907758712768555
    10. 'spot' → logprob: -6.5657758712768555

Token 261: ' smallest' (ID: 42173)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.059824131429195404
    2. ' first' → logprob: -3.434824228286743
    3. 'the' → logprob: -4.309823989868164
    4. ' lowest' → logprob: -5.059823989868164
    5. 'lowest' → logprob: -6.059823989868164
    6. ' smallest' → logprob: -6.684823989868164
    7. 'first' → logprob: -7.309823989868164
    8. ' spot' → logprob: -8.309823989868164
    9. ' any' → logprob: -8.559823989868164
    10. ' earliest' → logprob: -8.809823989868164

Token 262: ' spot' (ID: 10021)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.3400928974151611
    2. '<|end|>' → logprob: -1.4650928974151611
    3. 'index' → logprob: -1.8400928974151611
    4. ')' → logprob: -2.465092897415161
    5. '[' → logprob: -3.090092897415161
    6. '_' → logprob: -3.215092897415161
    7. 'spot' → logprob: -3.465092897415161
    8. '_index' → logprob: -3.715092897415161
    9. ' spot' → logprob: -4.090092658996582
    10. ' _' → logprob: -4.090092658996582

Token 263: ' #
' (ID: 21888)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.9285033941268921
    2. '[' → logprob: -1.053503394126892
    3. '<|end|>' → logprob: -2.1785035133361816
    4. ')' → logprob: -3.3035035133361816
    5. '_idx' → logprob: -3.3035035133361816
    6. '_index' → logprob: -4.053503513336182
    7. '<|end|>' → logprob: -5.303503513336182
    8. '_' → logprob: -5.303503513336182
    9. '[]' → logprob: -5.428503513336182
    10. 'index' → logprob: -5.428503513336182

Token 264: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11734015494585037
    2. '           ' → logprob: -3.367340087890625
    3. '
' → logprob: -3.492340087890625
    4. '<|end|>' → logprob: -3.992340087890625
    5. ' 
' → logprob: -5.367340087890625
    6. '        
' → logprob: -5.867340087890625
    7. '  
' → logprob: -6.117340087890625
    8. '   ' → logprob: -6.367340087890625
    9. ' ' → logprob: -6.367340087890625
    10. ' if' → logprob: -6.492340087890625

Token 265: ' empty' (ID: 8213)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47958990931510925
    2. ' for' → logprob: -1.4795899391174316
    3. ' ' → logprob: -3.4795899391174316
    4. '       ' → logprob: -3.4795899391174316
    5. ' 
' → logprob: -3.4795899391174316
    6. '            
' → logprob: -3.7295899391174316
    7. 'for' → logprob: -4.479589939117432
    8. ')' → logprob: -5.354589939117432
    9. ' if' → logprob: -5.979589939117432
    10. '
' → logprob: -6.104589939117432

Token 266: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.2170180082321167
    2. ' =' → logprob: -2.8420181274414062
    3. '_' → logprob: -3.3420181274414062
    4. '=' → logprob: -3.5920181274414062
    5. '_idx' → logprob: -3.9670181274414062
    6. 's' → logprob: -4.342018127441406
    7. ')' → logprob: -4.967018127441406
    8. 'spots' → logprob: -5.592018127441406
    9. ',' → logprob: -5.717018127441406
    10. '_found' → logprob: -6.092018127441406

Token 267: 'ots' (ID: 2677)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.020932581275701523
    2. 'ots' → logprob: -3.895932674407959
    3. '```' → logprob: -9.0209321975708
    4. '   ' → logprob: -9.8959321975708
    5. '       ' → logprob: -10.3959321975708
    6. '[' → logprob: -10.3959321975708
    7. 'pot' → logprob: -10.6459321975708
    8. '
' → logprob: -10.8959321975708
    9. 'ace' → logprob: -11.5834321975708
    10. '           ' → logprob: -11.8959321975708

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16037319600582123
    2. '=' → logprob: -1.9103732109069824
    3. '=[]' → logprob: -9.410372734069824
    4. 's' → logprob: -10.785372734069824
    5. ':' → logprob: -11.535372734069824
    6. '=find' → logprob: -11.910372734069824
    7. 'found' → logprob: -12.660372734069824
    8. ')' → logprob: -12.785372734069824
    9. '_found' → logprob: -12.910372734069824
    10. '=[]
' → logprob: -13.160372734069824

Token 269: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06922978162765503
    2. '[' → logprob: -2.8192298412323
    3. '[pos' → logprob: -5.819229602813721
    4. '[idx' → logprob: -6.694229602813721
    5. '[]
' → logprob: -7.694229602813721
    6. '[x' → logprob: -7.694229602813721
    7. '[k' → logprob: -7.694229602813721
    8. '[int' → logprob: -8.319230079650879
    9. '[c' → logprob: -8.444230079650879
    10. '[j' → logprob: -8.694230079650879

Token 270: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002317965030670166
    2. 'idx' → logprob: -6.377317905426025
    3. '(i' → logprob: -8.127318382263184
    4. ' i' → logprob: -8.127318382263184
    5. ' idx' → logprob: -11.377318382263184
    6. 'pos' → logprob: -12.752318382263184
    7. '   ' → logprob: -13.377318382263184
    8. ' (' → logprob: -13.502318382263184
    9. '
' → logprob: -13.752318382263184
    10. 'index' → logprob: -13.877318382263184

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759493708610535
    2. ' for' → logprob: -0.8259493708610535
    3. ' ' → logprob: -12.825949668884277
    4. '
' → logprob: -13.075949668884277
    5. '	for' → logprob: -13.450949668884277
    6. '   ' → logprob: -13.700949668884277
    7. '```' → logprob: -13.950949668884277
    8. 'i' → logprob: -15.450949668884277
    9. '

' → logprob: -15.700949668884277
    10. '       ' → logprob: -15.825949668884277

Token 272: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.386933296918869
    2. 'range' → logprob: -1.1369333267211914
    3. ',' → logprob: -10.011933326721191
    4. ' in' → logprob: -11.886933326721191
    5. 'i' → logprob: -12.511933326721191
    6. '(range' → logprob: -12.886933326721191
    7. '	range' → logprob: -13.636933326721191
    8. ' i' → logprob: -13.761933326721191
    9. ' xrange' → logprob: -13.886933326721191
    10. 'in' → logprob: -14.511933326721191

Token 273: ',(' (ID: 27243)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7014113664627075
    2. ',' → logprob: -1.3264113664627075
    3. 'range' → logprob: -1.4514113664627075
    4. ' in' → logprob: -5.576411247253418
    5. 'in' → logprob: -8.076411247253418
    6. ' ,' → logprob: -8.826411247253418
    7. ' spots' → logprob: -8.951411247253418
    8. 'spots' → logprob: -10.576411247253418
    9. '(range' → logprob: -10.826411247253418
    10. ' ' → logprob: -12.576411247253418

Token 274: 'l' (ID: 75)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.03051714040338993
    2. 'spot' → logprob: -4.530517101287842
    3. '_,' → logprob: -5.530517101287842
    4. 's' → logprob: -5.905517101287842
    5. ' lower' → logprob: -6.155517101287842
    6. 'l' → logprob: -6.155517101287842
    7. 'spots' → logprob: -6.280517101287842
    8. 'low' → logprob: -6.655517101287842
    9. 'sp' → logprob: -7.030517101287842
    10. 'slots' → logprob: -7.155517101287842

Token 275: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.1533178836107254
    2. 'ower' → logprob: -2.278317928314209
    3. ',' → logprob: -3.278317928314209
    4. 'ow' → logprob: -7.403317928314209
    5. ',e' → logprob: -7.653317928314209
    6. 'u' → logprob: -8.40331745147705
    7. ',o' → logprob: -8.52831745147705
    8. ',s' → logprob: -9.27831745147705
    9. ',b' → logprob: -9.52831745147705
    10. 'wer' → logprob: -9.77831745147705

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021193820983171463
    2. 'in' → logprob: -3.896193742752075
    3. ' in' → logprob: -7.521193981170654
    4. ' )' → logprob: -10.271193504333496
    5. 'n' → logprob: -11.521193504333496
    6. 'and' → logprob: -11.896193504333496
    7. 'a' → logprob: -12.021193504333496
    8. ']' → logprob: -12.646193504333496
    9. 'None' → logprob: -12.771193504333496
    10. 'i' → logprob: -12.896193504333496

Token 277: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10310056805610657
    2. ' in' → logprob: -2.353100538253784
    3. ')' → logprob: -5.853100776672363
    4. ' ' → logprob: -12.478100776672363
    5. 'n' → logprob: -12.978100776672363
    6. ']' → logprob: -12.978100776672363
    7. ' )' → logprob: -13.353100776672363
    8. '   ' → logprob: -13.478100776672363
    9. 'i' → logprob: -13.978100776672363
    10. '
' → logprob: -14.103100776672363

Token 278: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6931489109992981
    2. 'enumer' → logprob: -0.6931489109992981
    3. 'spots' → logprob: -14.318148612976074
    4. 'en' → logprob: -14.568148612976074
    5. '```' → logprob: -14.818148612976074
    6. 'enum' → logprob: -15.818148612976074
    7. 'spot' → logprob: -16.94314956665039
    8. ' spots' → logprob: -17.31814956665039
    9. 'Enumer' → logprob: -17.56814956665039
    10. 'enqueue' → logprob: -17.94314956665039

Token 279: '(sp' (ID: 33591)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.01855970360338688
    2. ' spots' → logprob: -4.14355993270874
    3. '(sp' → logprob: -6.14355993270874
    4. 'sp' → logprob: -8.018559455871582
    5. 'spot' → logprob: -11.393559455871582
    6. 's' → logprob: -11.643559455871582
    7. ')' → logprob: -11.768559455871582
    8. '
' → logprob: -12.018559455871582
    9. '	sp' → logprob: -13.018559455871582
    10. '[' → logprob: -13.643559455871582

Token 280: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.003125429153442383
    2. '[' → logprob: -6.128125190734863
    3. '[[' → logprob: -8.503125190734863
    4. '[(' → logprob: -8.628125190734863
    5. '(' → logprob: -9.253125190734863
    6. 'orts' → logprob: -9.753125190734863
    7. ' ots' → logprob: -10.253125190734863
    8. 'pots' → logprob: -10.503125190734863
    9. '```' → logprob: -10.753125190734863
    10. '[]' → logprob: -10.753125190734863

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024234564043581486
    2. 'if' → logprob: -6.252423286437988
    3. ' if' → logprob: -7.877423286437988
    4. ' )' → logprob: -9.252423286437988
    5. '   ' → logprob: -11.627423286437988
    6. ')
' → logprob: -12.752423286437988
    7. '       ' → logprob: -13.127423286437988
    8. '           ' → logprob: -13.502423286437988
    9. '
' → logprob: -13.877423286437988
    10. ' ' → logprob: -14.002423286437988

Token 282: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7023782134056091
    2. ' if' → logprob: -0.7023782134056091
    3. ')' → logprob: -4.702378273010254
    4. '   ' → logprob: -9.827378273010254
    5. ' ' → logprob: -10.702378273010254
    6. '       ' → logprob: -11.952378273010254
    7. '
' → logprob: -11.952378273010254
    8. '    ' → logprob: -12.202378273010254
    9. ' )' → logprob: -12.452378273010254
    10. '           ' → logprob: -12.702378273010254

Token 283: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0700320228934288
    2. ' l' → logprob: -2.6950321197509766
    3. '   ' → logprob: -10.195032119750977
    4. ' ' → logprob: -10.570032119750977
    5. '  ' → logprob: -11.820032119750977
    6. '	l' → logprob: -12.320032119750977
    7. ' not' → logprob: -12.757532119750977
    8. 'not' → logprob: -12.820032119750977
    9. '(l' → logprob: -12.945032119750977
    10. '    ' → logprob: -12.945032119750977

Token 284: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04195038229227066
    2. 'is' → logprob: -3.4169504642486572
    3. '==' → logprob: -5.166950225830078
    4. '[' → logprob: -6.416950225830078
    5. ' ==' → logprob: -7.291950225830078
    6. ' ' → logprob: -9.041950225830078
    7. 'None' → logprob: -10.291950225830078
    8. ' None' → logprob: -10.916950225830078
    9. '           ' → logprob: -11.041950225830078
    10. ')' → logprob: -11.416950225830078

Token 285: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06997000426054001
    2. ' None' → logprob: -2.694969892501831
    3. '   ' → logprob: -11.19497013092041
    4. ' ' → logprob: -11.44497013092041
    5. 'none' → logprob: -13.44497013092041
    6. '(None' → logprob: -13.56997013092041
    7. '  ' → logprob: -13.69497013092041
    8. '_None' → logprob: -13.81997013092041
    9. '    ' → logprob: -14.06997013092041
    10. '[' → logprob: -14.44497013092041

Token 286: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759737491607666
    2. 'and' → logprob: -0.8259737491607666
    3. '           ' → logprob: -11.200973510742188
    4. ' ' → logprob: -11.950973510742188
    5. ')' → logprob: -12.950973510742188
    6. '       ' → logprob: -13.450973510742188
    7. '        ' → logprob: -13.700973510742188
    8. '          ' → logprob: -13.700973510742188
    9. '	and' → logprob: -13.825973510742188
    10. '            ' → logprob: -13.825973510742188

Token 287: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1798672080039978
    2. ' u' → logprob: -1.8048672676086426
    3. '   ' → logprob: -9.554866790771484
    4. ' ' → logprob: -11.179866790771484
    5. '	u' → logprob: -11.179866790771484
    6. '    ' → logprob: -11.804866790771484
    7. '  ' → logprob: -12.304866790771484
    8. ' ' → logprob: -13.304866790771484
    9. '     ' → logprob: -13.429866790771484
    10. '       ' → logprob: -13.554866790771484

Token 288: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06118900701403618
    2. 'is' → logprob: -2.9361889362335205
    3. 'None' → logprob: -5.1861891746521
    4. ' None' → logprob: -7.3111891746521
    5. '=None' → logprob: -11.936188697814941
    6. ' ' → logprob: -12.436188697814941
    7. ')' → logprob: -12.561188697814941
    8. '==' → logprob: -12.936188697814941
    9. '(None' → logprob: -13.061188697814941
    10. '<|end|>' → logprob: -13.061188697814941

Token 289: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006719871424138546
    2. ' None' → logprob: -5.006720066070557
    3. '   ' → logprob: -12.881719589233398
    4. '(None' → logprob: -14.256719589233398
    5. ' ' → logprob: -14.881719589233398
    6. '_None' → logprob: -14.881719589233398
    7. '=None' → logprob: -15.881719589233398
    8. ',None' → logprob: -16.0067195892334
    9. '  ' → logprob: -16.1317195892334
    10. 'none' → logprob: -16.2567195892334

Token 290: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47611454129219055
    2. ']
' → logprob: -0.9761145114898682
    3. '       ' → logprob: -6.351114749908447
    4. ']
' → logprob: -9.351114273071289
    5. ' ]
' → logprob: -9.476114273071289
    6. ' ]' → logprob: -9.601114273071289
    7. ']

' → logprob: -10.226114273071289
    8. '   ' → logprob: -11.226114273071289
    9. '           ' → logprob: -12.601114273071289
    10. '      ' → logprob: -13.851114273071289

Token 291: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40697890520095825
    2. '
' → logprob: -1.1569788455963135
    3. ' if' → logprob: -4.781979084014893
    4. '<|end|>' → logprob: -5.156979084014893
    5. '<|end|>' → logprob: -6.531979084014893
    6. '        
' → logprob: -6.906979084014893
    7. '[' → logprob: -7.156979084014893
    8. 'if' → logprob: -7.531979084014893
    9. ')' → logprob: -7.906979084014893
    10. '           ' → logprob: -8.406978607177734

Token 292: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30448997020721436
    2. '           ' → logprob: -2.304490089416504
    3. '       ' → logprob: -2.429490089416504
    4. 'if' (adapté à ' if') → logprob: -2.929490089416504
    5. '<|end|>' → logprob: -4.929490089416504
    6. ' 
' → logprob: -5.804490089416504
    7. '   ' → logprob: -6.054490089416504
    8. '
' → logprob: -6.054490089416504
    9. '<|end|>' → logprob: -6.804490089416504
    10. '            
' → logprob: -6.929490089416504

Token 293: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.5760827660560608
    2. 'empty' → logprob: -0.8260827660560608
    3. 'len' → logprob: -9.201083183288574
    4. ' len' → logprob: -10.326083183288574
    5. ' not' → logprob: -11.951083183288574
    6. 'not' → logprob: -12.951083183288574
    7. '(empty' → logprob: -14.826083183288574
    8. 'empt' → logprob: -15.701083183288574
    9. '   ' → logprob: -16.201082229614258
    10. ' ' → logprob: -16.201082229614258

Token 294: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -4.036524842376821e-05
    2. 'empty' → logprob: -11.125040054321289
    3. ' _' → logprob: -11.750040054321289
    4. '```' → logprob: -12.125040054321289
    5. '_' → logprob: -12.750040054321289
    6. '(_' → logprob: -12.875040054321289
    7. '\' → logprob: -13.500040054321289
    8. '_spaces' → logprob: -13.750040054321289
    9. '_empty' → logprob: -14.125040054321289
    10. '"_' → logprob: -14.750040054321289

Token 295: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -6.897412822581828e-05
    2. 'ot' → logprob: -9.875068664550781
    3. 'orts' → logprob: -12.250068664550781
    4. '```' → logprob: -12.500068664550781
    5. '[' → logprob: -13.250068664550781
    6. 'ts' → logprob: -13.625068664550781
    7. ' ots' → logprob: -13.875068664550781
    8. 'ects' → logprob: -14.125068664550781
    9. 'empty' → logprob: -14.500068664550781
    10. 'pots' → logprob: -14.625068664550781

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.031157969729975e-05
    2. '):' → logprob: -10.000090599060059
    3. ':
' → logprob: -10.500090599060059
    4. '[' → logprob: -12.500090599060059
    5. '>:' → logprob: -12.750090599060059
    6. ' :' → logprob: -12.750090599060059
    7. 'and' → logprob: -13.500090599060059
    8. ':**' → logprob: -13.625090599060059
    9. '}:' → logprob: -14.250090599060059
    10. 'not' → logprob: -14.500090599060059

Token 297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015462885610759258
    2. ' return' → logprob: -4.390462875366211
    3. ':
' → logprob: -6.640462875366211
    4. 'return' → logprob: -6.890462875366211
    5. ':' → logprob: -8.015462875366211
    6. '[' → logprob: -9.515462875366211
    7. '                
' → logprob: -10.265462875366211
    8. '           ' → logprob: -10.640462875366211
    9. '```' → logprob: -10.890462875366211
    10. ' :
' → logprob: -11.015462875366211

Token 298: ' spot' (ID: 10021)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9947863221168518
    2. ' spot' → logprob: -1.369786262512207
    3. ' i' → logprob: -2.244786262512207
    4. ' idx' → logprob: -2.369786262512207
    5. 'return' → logprob: -3.119786262512207
    6. ' pos' → logprob: -3.244786262512207
    7. 'spot' (adapté à ' spot') → logprob: -3.244786262512207
    8. '               ' → logprob: -4.244786262512207
    9. 'idx' → logprob: -4.369786262512207
    10. 'i' → logprob: -4.744786262512207

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3593473732471466
    2. '=' → logprob: -1.3593473434448242
    3. 's' → logprob: -3.359347343444824
    4. '_sp' → logprob: -5.109347343444824
    5. '_' → logprob: -5.734347343444824
    6. '_idx' → logprob: -8.359347343444824
    7. '_empty' → logprob: -8.984347343444824
    8. '_s' → logprob: -9.234347343444824
    9. '_id' → logprob: -9.484347343444824
    10. 'sp' → logprob: -9.484347343444824

Token 300: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.25193122029304504
    2. ' empty' → logprob: -1.5019311904907227
    3. ' min' → logprob: -13.376931190490723
    4. 'min' → logprob: -14.876931190490723
    5. '0' → logprob: -16.37693214416504
    6. '(empty' → logprob: -16.75193214416504
    7. ' ' → logprob: -19.37693214416504
    8. 'Empty' → logprob: -19.50193214416504
    9. '空' → logprob: -19.62693214416504
    10. '           ' → logprob: -19.87693214416504

Token 301: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -6.718606891809031e-05
    2. 's' → logprob: -10.500066757202148
    3. 'Sp' → logprob: -11.250066757202148
    4. 'spots' → logprob: -11.250066757202148
    5. 'sp' → logprob: -12.125066757202148
    6. 'empty' → logprob: -12.875066757202148
    7. '[' → logprob: -13.625066757202148
    8. '_' → logprob: -14.375066757202148
    9. 't' → logprob: -14.875066757202148
    10. ')' → logprob: -15.250066757202148

Token 302: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.22919961810112
    2. 'ot' → logprob: -1.6041996479034424
    3. 'empty' → logprob: -5.604199409484863
    4. 't' → logprob: -10.979199409484863
    5. 'orts' → logprob: -11.229199409484863
    6. ' empty' → logprob: -11.354199409484863
    7. '[' → logprob: -11.354199409484863
    8. '_empty' → logprob: -11.604199409484863
    9. '       ' → logprob: -12.104199409484863
    10. '   ' → logprob: -12.604199409484863

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0484450437361374e-05
    2. '0' → logprob: -10.125040054321289
    3. ' [' → logprob: -15.625040054321289
    4. ' ' → logprob: -17.62504005432129
    5. 'min' → logprob: -17.62504005432129
    6. '[
' → logprob: -17.62504005432129
    7. '```' → logprob: -18.00004005432129
    8. '][' → logprob: -18.25004005432129
    9. '.pop' → logprob: -18.50004005432129
    10. '[min' → logprob: -18.87504005432129

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '[' → logprob: -16.750015258789062
    4. '   ' → logprob: -17.125015258789062
    5. 'min' → logprob: -17.125015258789062
    6. '
' → logprob: -17.500015258789062
    7. '```' → logprob: -18.000015258789062
    8. '000' → logprob: -18.812515258789062
    9. '00' → logprob: -18.875015258789062
    10. '       ' → logprob: -19.312515258789062

Token 305: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01964818872511387
    2. '           ' → logprob: -4.14464807510376
    3. '                
' → logprob: -6.76964807510376
    4. '            
' → logprob: -7.26964807510376
    5. '
' → logprob: -7.39464807510376
    6. '       ' → logprob: -7.76964807510376
    7. '                   ' → logprob: -9.144648551940918
    8. 'return' → logprob: -9.269648551940918
    9. '        
' → logprob: -9.769648551940918
    10. ' return' → logprob: -9.894648551940918

Token 307: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.16460314393043518
    2. ' spots' → logprob: -2.0396032333374023
    3. '               ' → logprob: -4.039603233337402
    4. '           ' → logprob: -6.414603233337402
    5. '       ' → logprob: -6.414603233337402
    6. '                       ' → logprob: -8.289603233337402
    7. '                   ' → logprob: -8.914603233337402
    8. 'if' → logprob: -10.039603233337402
    9. '   ' → logprob: -10.039603233337402
    10. '
' → logprob: -10.039603233337402

Token 308: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. 'spot' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.37500286102295
    4. '[pos' → logprob: -14.50000286102295
    5. '```' → logprob: -15.62500286102295
    6. '][' → logprob: -15.87500286102295
    7. '[i' → logprob: -16.500001907348633
    8. ')[' → logprob: -16.500001907348633
    9. '[s' → logprob: -17.250001907348633
    10. 'def' → logprob: -18.125001907348633

Token 309: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.625008583068848
    3. ' spot' → logprob: -12.750008583068848
    4. '
' → logprob: -14.875008583068848
    5. 'slot' → logprob: -15.250008583068848
    6. '```' → logprob: -15.250008583068848
    7. '0' → logprob: -15.375008583068848
    8. 'spo' → logprob: -15.750008583068848
    9. ']' → logprob: -16.00000762939453
    10. 'spots' → logprob: -16.25000762939453

Token 310: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004167297447565943
    2. '[' → logprob: -7.8754167556762695
    3. ' ][' → logprob: -10.37541675567627
    4. ']' → logprob: -12.75041675567627
    5. '0' → logprob: -14.62541675567627
    6. '   ' → logprob: -15.00041675567627
    7. ''][' → logprob: -15.25041675567627
    8. '       ' → logprob: -15.62541675567627
    9. ']][' → logprob: -15.62541675567627
    10. '"][' → logprob: -15.62541675567627

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '[' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '۰' → logprob: -17.250001907348633
    7. '```' → logprob: -18.187501907348633
    8. '
' → logprob: -18.937501907348633
    9. '০' → logprob: -18.937501907348633
    10. '#' → logprob: -19.312501907348633

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017324176151305437
    2. ']=' → logprob: -6.376732349395752
    3. ' ]' → logprob: -10.62673282623291
    4. ']=(' → logprob: -12.37673282623291
    5. '=' → logprob: -13.50173282623291
    6. ')' → logprob: -16.001731872558594
    7. ']={' → logprob: -16.751731872558594
    8. ']
' → logprob: -16.876731872558594
    9. ']='' → logprob: -17.251731872558594
    10. ' =' → logprob: -17.501731872558594

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028142668306827545
    2. ' =' → logprob: -5.877814292907715
    3. ']=' → logprob: -12.252814292907715
    4. ']' → logprob: -12.502814292907715
    5. ')' → logprob: -14.877814292907715
    6. ')=' → logprob: -15.127814292907715
    7. '=None' → logprob: -15.502814292907715
    8. '=

' → logprob: -16.5028133392334
    9. '=
' → logprob: -18.1278133392334
    10. ',' → logprob: -18.3778133392334

Token 314: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.0009326597792096436
    2. ' (' → logprob: -7.000932693481445
    3. '(' → logprob: -10.875932693481445
    4. '(Car' → logprob: -14.125932693481445
    5. '(c' → logprob: -14.500932693481445
    6. 'car' → logprob: -15.500932693481445
    7. '((' → logprob: -16.125932693481445
    8. '   ' → logprob: -16.500932693481445
    9. '(str' → logprob: -16.500932693481445
    10. '(card' → logprob: -16.625932693481445

Token 315: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.5094070477061905e-05
    2. ' car' → logprob: -11.125015258789062
    3. '(car' → logprob: -15.625015258789062
    4. '	car' → logprob: -16.500015258789062
    5. 'Car' → logprob: -18.500015258789062
    6. '   ' → logprob: -18.750015258789062
    7. 'cars' → logprob: -19.125015258789062
    8. '
' → logprob: -19.250015258789062
    9. '.car' → logprob: -19.500015258789062
    10. '_car' → logprob: -19.625015258789062

Token 316: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.36574100604048e-06
    2. 'id' → logprob: -12.750004768371582
    3. '_idx' → logprob: -15.000004768371582
    4. ' _' → logprob: -15.375004768371582
    5. ''_' → logprob: -15.625004768371582
    6. ',' → logprob: -15.750004768371582
    7. '```' → logprob: -16.750003814697266
    8. ')' → logprob: -16.875003814697266
    9. ')_' → logprob: -17.125003814697266
    10. '}_' → logprob: -17.125003814697266

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043400691356509924
    2. ' ,' → logprob: -7.750433921813965
    3. ',
' → logprob: -13.625433921813965
    4. ',p' → logprob: -14.125433921813965
    5. ',time' → logprob: -14.750433921813965
    6. 'park' → logprob: -16.25043487548828
    7. '```' → logprob: -16.37543487548828
    8. ',int' → logprob: -16.37543487548828
    9. ')' → logprob: -16.62543487548828
    10. '‌,' → logprob: -16.87543487548828

Token 318: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.004131949506700039
    2. ' park' → logprob: -5.50413179397583
    3. '   ' → logprob: -10.504132270812988
    4. '
' → logprob: -12.254132270812988
    5. 'par' → logprob: -12.879132270812988
    6. 'time' → logprob: -12.879132270812988
    7. '           ' → logprob: -13.504132270812988
    8. 'peak' → logprob: -13.504132270812988
    9. 'pack' → logprob: -13.754132270812988
    10. '    ' → logprob: -13.879132270812988

Token 319: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00011009939044015482
    2. 'time' → logprob: -9.125109672546387
    3. 'Time' → logprob: -14.625109672546387
    4. ' time' → logprob: -15.000109672546387
    5. '"time' → logprob: -16.375110626220703
    6. ')' → logprob: -16.625110626220703
    7. '_times' → logprob: -17.000110626220703
    8. '_TIME' → logprob: -17.125110626220703
    9. '+' → logprob: -17.750110626220703
    10. '   ' → logprob: -18.125110626220703

Token 320: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2951456308364868
    2. ' +' → logprob: -1.5451456308364868
    3. ')' → logprob: -3.1701455116271973
    4. ' )' → logprob: -8.295145988464355
    5. '+)' → logprob: -10.670145988464355
    6. '<|end|>' → logprob: -11.795145988464355
    7. ')
' → logprob: -12.920145988464355
    8. '+
' → logprob: -13.295145988464355
    9. ' ' → logprob: -13.545145988464355
    10. '   ' → logprob: -13.670145988464355

Token 321: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9048503637313843
    2. '\n' → logprob: -1.4048503637313843
    3. ' return' → logprob: -1.4048503637313843
    4. '
' → logprob: -3.404850482940674
    5. '<|end|>' → logprob: -3.529850482940674
    6. '           ' → logprob: -4.279850482940674
    7. ':return' → logprob: -5.404850482940674
    8. ')' → logprob: -5.404850482940674
    9. ' 
' → logprob: -5.529850482940674
    10. '               ' → logprob: -5.779850482940674

Token 323: ' True' (ID: 6432)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.6428258419036865
    2. '<|end|>' → logprob: -1.2678258419036865
    3. ' spot' → logprob: -2.3928258419036865
    4. 'spots' → logprob: -3.1428258419036865
    5. '1' → logprob: -4.392826080322266
    6. ' spots' → logprob: -4.517826080322266
    7. '
' → logprob: -4.642826080322266
    8. ' 
' → logprob: -4.767826080322266
    9. ' ' → logprob: -5.142826080322266
    10. '  
' → logprob: -5.767826080322266

Token 324: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7386204600334167
    2. '
' → logprob: -1.3636205196380615
    3. ' ' → logprob: -2.1136205196380615
    4. '<|end|>' → logprob: -3.1136205196380615
    5. '\n' → logprob: -3.4886205196380615
    6. '  
' → logprob: -3.8636205196380615
    7. ')' → logprob: -5.113620281219482
    8. '        
' → logprob: -5.363620281219482
    9. '    
' → logprob: -5.363620281219482
    10. '' → logprob: -5.488620281219482

Token 326: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7491156458854675
    2. '<|end|>' → logprob: -0.9991156458854675
    3. ' ' → logprob: -2.3741157054901123
    4. '       ' → logprob: -4.249115467071533
    5. '  
' → logprob: -4.624115467071533
    6. '
' → logprob: -4.624115467071533
    7. '            
' → logprob: -4.999115467071533
    8. '        
' → logprob: -5.374115467071533
    9. '        ' → logprob: -5.624115467071533
    10. '<|end|>' → logprob: -5.749115467071533

Token 327: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9141144752502441
    2. ' #' → logprob: -1.7891144752502441
    3. '1' → logprob: -2.164114475250244
    4. '       ' → logprob: -2.414114475250244
    5. ' spots' → logprob: -2.664114475250244
    6. 'upper' → logprob: -3.414114475250244
    7. ' upper' → logprob: -3.539114475250244
    8. '           ' → logprob: -3.664114475250244
    9. ' ' → logprob: -4.164114475250244
    10. '   ' → logprob: -4.164114475250244

Token 328: '2' (ID: 17)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.41281941533088684
    2. '#' → logprob: -1.5378193855285645
    3. 'full' → logprob: -3.1628193855285645
    4. '1' → logprob: -3.2878193855285645
    5. '2' → logprob: -4.6628193855285645
    6. '   ' → logprob: -5.5378193855285645
    7. 'any' → logprob: -5.6628193855285645
    8. 'both' → logprob: -5.7878193855285645
    9. '       ' → logprob: -5.9128193855285645
    10. 'up' → logprob: -6.1628193855285645

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001721934968372807
    2. ' )' → logprob: -8.87517261505127
    3. '   ' → logprob: -11.12517261505127
    4. 'elif' → logprob: -11.75017261505127
    5. ' else' → logprob: -13.25017261505127
    6. 'else' → logprob: -13.37517261505127
    7. ')
' → logprob: -13.62517261505127
    8. ' if' → logprob: -14.25017261505127
    9. '）' → logprob: -14.50017261505127
    10. ' elif' → logprob: -14.50017261505127

Token 330: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.2313703298568726
    2. ' spots' → logprob: -1.8563703298568726
    3. ' upper' → logprob: -2.231370449066162
    4. ' all' → logprob: -2.606370449066162
    5. '#' → logprob: -2.856370449066162
    6. 'any' → logprob: -3.106370449066162
    7. ' for' → logprob: -3.106370449066162
    8. ' check' → logprob: -3.356370449066162
    9. ' #' → logprob: -3.856370449066162
    10. '   ' → logprob: -4.231370449066162

Token 331: ' spot' (ID: 10021)
  Prédit: ' spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spot' → logprob: -0.24050560593605042
    2. 'spot' → logprob: -1.990505576133728
    3. ' empty' → logprob: -3.8655056953430176
    4. 'i' → logprob: -4.490505695343018
    5. 'empty' → logprob: -5.240505695343018
    6. ' spots' → logprob: -5.365505695343018
    7. ' upper' → logprob: -5.490505695343018
    8. ' i' → logprob: -5.490505695343018
    9. ' l' → logprob: -5.615505695343018
    10. 'upper' → logprob: -5.740505695343018

Token 332: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5485894680023193
    2. 'with' → logprob: -1.5485894680023193
    3. ' where' → logprob: -2.2985894680023193
    4. '[' → logprob: -2.9235894680023193
    5. '           ' → logprob: -3.9235894680023193
    6. ' =' → logprob: -4.423589706420898
    7. ' that' → logprob: -4.673589706420898
    8. 'where' → logprob: -5.048589706420898
    9. '=' → logprob: -6.548589706420898
    10. ' [' → logprob: -6.798589706420898

Token 333: ' ' (ID: 220)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.5819164514541626
    2. ' l' → logprob: -1.7069164514541626
    3. 'lower' → logprob: -1.8319164514541626
    4. ' spots' → logprob: -3.581916332244873
    5. ' None' → logprob: -4.206916332244873
    6. 'l' → logprob: -4.331916332244873
    7. ' empty' → logprob: -4.956916332244873
    8. ' [' → logprob: -5.206916332244873
    9. ' ' → logprob: -5.206916332244873
    10. '[' → logprob: -5.331916332244873

Token 334: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42847001552581787
    2. 'lower' → logprob: -2.9284701347351074
    3. 'None' → logprob: -2.9284701347351074
    4. ' l' → logprob: -3.0534701347351074
    5. 'i' → logprob: -3.1784701347351074
    6. 'a' → logprob: -3.3034701347351074
    7. 'both' → logprob: -4.053470134735107
    8. ' None' → logprob: -4.178470134735107
    9. 'any' → logprob: -4.553470134735107
    10. ' a' → logprob: -4.553470134735107

Token 335: ' car' (ID: 1669)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3017953634262085
    2. 'None' → logprob: -1.9267953634262085
    3. ' empty' → logprob: -3.051795482635498
    4. 'slot' → logprob: -4.176795482635498
    5. '[' → logprob: -4.426795482635498
    6. ' slot' → logprob: -4.676795482635498
    7. ' free' → logprob: -4.801795482635498
    8. 'empty' → logprob: -4.926795482635498
    9. 'spot' → logprob: -6.051795482635498
    10. ' spot' → logprob: -6.176795482635498

Token 336: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.477635383605957
    2. ' (' → logprob: -1.602635383605957
    3. '           ' → logprob: -1.727635383605957
    4. ' =' → logprob: -2.602635383605957
    5. '[' → logprob: -2.727635383605957
    6. '=' → logprob: -2.977635383605957
    7. ' for' → logprob: -3.352635383605957
    8. ' with' → logprob: -3.477635383605957
    9. ',' → logprob: -3.602635383605957
    10. ' available' → logprob: -3.977635383605957

Token 337: ' put' (ID: 3006)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02754683792591095
    2. 'for' → logprob: -3.7775468826293945
    3. ' empty' → logprob: -6.4025468826293945
    4. '           ' → logprob: -6.9025468826293945
    5. ' spots' → logprob: -6.9025468826293945
    6. ' available' → logprob: -8.402546882629395
    7. 'spots' → logprob: -9.277546882629395
    8. 'empty' → logprob: -9.402546882629395
    9. ' spot' → logprob: -9.902546882629395
    10. '            ' → logprob: -10.402546882629395

Token 338: ' new' (ID: 620)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.5437963604927063
    2. ' in' → logprob: -1.7937963008880615
    3. 'car' → logprob: -1.7937963008880615
    4. ' the' → logprob: -3.0437963008880615
    5. 'in' → logprob: -4.168796539306641
    6. 'the' → logprob: -5.168796539306641
    7. ' it' → logprob: -5.543796539306641
    8. ' on' → logprob: -5.793796539306641
    9. '(car' → logprob: -6.418796539306641
    10. ' spots' → logprob: -6.543796539306641

Token 339: ' car' (ID: 1669)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3556710481643677
    2. '[' → logprob: -1.4806710481643677
    3. ' car' → logprob: -1.4806710481643677
    4. ' [' → logprob: -1.9806710481643677
    5. ' at' → logprob: -3.105670928955078
    6. ' (' → logprob: -3.480670928955078
    7. 'car' → logprob: -3.605670928955078
    8. '_car' → logprob: -4.355670928955078
    9. ' ' → logprob: -4.730670928955078
    10. '(car' → logprob: -5.730670928955078

Token 340: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5268476605415344
    2. ' in' → logprob: -1.1518476009368896
    3. ' at' → logprob: -3.1518476009368896
    4. ' on' → logprob: -3.7768476009368896
    5. ' [' → logprob: -4.651847839355469
    6. 'in' → logprob: -4.776847839355469
    7. '           ' → logprob: -5.526847839355469
    8. ',' → logprob: -6.651847839355469
    9. '               ' → logprob: -6.901847839355469
    10. 'at' → logprob: -7.526847839355469

Token 341: ' upper' (ID: 13057)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8453541994094849
    2. ' spots' → logprob: -0.9703541994094849
    3. 'spots' → logprob: -2.2203540802001953
    4. ' [' → logprob: -2.8453540802001953
    5. '1' → logprob: -5.095354080200195
    6. 'spot' → logprob: -5.470354080200195
    7. ' spot' → logprob: -5.470354080200195
    8. ' the' → logprob: -5.595354080200195
    9. ' ' → logprob: -6.720354080200195
    10. 'the' → logprob: -6.845354080200195

Token 342: ' slot' (ID: 8215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11080501973628998
    2. ' spot' → logprob: -2.735805034637451
    3. 'spot' → logprob: -3.735805034637451
    4. ' [' → logprob: -5.235805034637451
    5. 'slot' → logprob: -5.735805034637451
    6. ' slot' → logprob: -5.860805034637451
    7. '_slot' → logprob: -7.235805034637451
    8. '[
' → logprob: -7.360805034637451
    9. '       ' → logprob: -7.860805034637451
    10. ')' → logprob: -7.860805034637451

Token 343: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02612471580505371
    2. '
' → logprob: -4.776124954223633
    3. '            
' → logprob: -5.776124954223633
    4. '<|end|>' → logprob: -6.026124954223633
    5. ' for' → logprob: -6.151124954223633
    6. ',' → logprob: -6.401124954223633
    7. '[' → logprob: -6.526124954223633
    8. '=' → logprob: -7.026124954223633
    9. '<|end|>' → logprob: -7.276124954223633
    10. ':' → logprob: -7.276124954223633

Token 344: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1055541038513184
    2. '               ' → logprob: -1.7305541038513184
    3. ' return' → logprob: -1.8555541038513184
    4. ' spot' → logprob: -1.8555541038513184
    5. ' if' → logprob: -2.6055541038513184
    6. ' spots' → logprob: -3.1055541038513184
    7. '       ' → logprob: -4.605554103851318
    8. ' for' → logprob: -4.730554103851318
    9. '            
' → logprob: -4.980554103851318
    10. 'spot' → logprob: -5.480554103851318

Token 345: ' may' (ID: 1340)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9138339161872864
    2. ' spots' → logprob: -1.2888338565826416
    3. 'spots' → logprob: -1.9138338565826416
    4. ' only' → logprob: -2.9138338565826416
    5. 'not' → logprob: -3.5388338565826416
    6. ' if' → logprob: -3.5388338565826416
    7. 'if' → logprob: -3.9138338565826416
    8. ' return' → logprob: -4.538834095001221
    9. 'only' → logprob: -5.163834095001221
    10. 'return' → logprob: -5.538834095001221

Token 346: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.18827621638774872
    2. 'need' → logprob: -2.3132762908935547
    3. ' have' → logprob: -3.0632762908935547
    4. ' require' → logprob: -4.438276290893555
    5. 'have' → logprob: -4.813276290893555
    6. ' not' → logprob: -6.313276290893555
    7. 'not' → logprob: -6.938276290893555
    8. 'require' → logprob: -7.063276290893555
    9. ' be' → logprob: -8.063276290893555
    10. 'remove' → logprob: -8.438276290893555

Token 347: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.22798874974250793
    2. 'to' → logprob: -1.6029887199401855
    3. ' move' → logprob: -6.9779887199401855
    4. ' moving' → logprob: -7.9779887199401855
    5. 'move' → logprob: -8.102989196777344
    6. '   ' → logprob: -8.727989196777344
    7. '    ' → logprob: -9.102989196777344
    8. ' spots' → logprob: -9.227989196777344
    9. 'moving' → logprob: -9.352989196777344
    10. '       ' → logprob: -9.352989196777344

Token 348: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.1585754007101059
    2. ' move' → logprob: -2.0335752964019775
    3. 'wait' → logprob: -5.158575534820557
    4. 'remove' → logprob: -5.533575534820557
    5. 'shift' → logprob: -6.783575534820557
    6. 'pop' → logprob: -7.033575534820557
    7. '
' → logprob: -7.658575534820557
    8. '   ' → logprob: -7.908575534820557
    9. ' wait' → logprob: -7.908575534820557
    10. 'ev' → logprob: -8.283575057983398

Token 349: ' previous' (ID: 5880)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' lower' (ID: 6931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.16045016050338745
    2. ' upper' → logprob: -1.9104502201080322
    3. 'make' → logprob: -10.160449981689453
    4. ' ' → logprob: -10.410449981689453
    5. '   ' → logprob: -10.660449981689453
    6. ' make' → logprob: -10.785449981689453
    7. '[' → logprob: -10.785449981689453
    8. 'lower' → logprob: -11.035449981689453
    9. 'the' → logprob: -11.035449981689453
    10. ' the' → logprob: -11.160449981689453

Token 353: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0684921741485596
    2. '           ' → logprob: -1.1934921741485596
    3. '<|end|>' → logprob: -1.3184921741485596
    4. '       ' → logprob: -3.3184921741485596
    5. '  
' → logprob: -4.3184919357299805
    6. '            
' → logprob: -4.6934919357299805
    7. '<|end|>' → logprob: -4.9434919357299805
    8. ' if' → logprob: -5.8184919357299805
    9. ' 
' → logprob: -5.9434919357299805
    10. '        
' → logprob: -6.1934919357299805

Token 355: ' empty' (ID: 8213)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6858863830566406
    2. '
' → logprob: -1.8108863830566406
    3. ' 
' → logprob: -1.9358863830566406
    4. '[' → logprob: -2.1858863830566406
    5. '<|end|>' → logprob: -2.8108863830566406
    6. '  
' → logprob: -2.9358863830566406
    7. '       ' → logprob: -3.0608863830566406
    8. ' spots' → logprob: -3.3108863830566406
    9. '            
' → logprob: -3.3108863830566406
    10. ' for' → logprob: -4.060886383056641

Token 356: '_one' (ID: 26979)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.03357112780213356
    2. '_slots' → logprob: -3.658571243286133
    3. '_' → logprob: -5.408571243286133
    4. '_spaces' → logprob: -7.658571243286133
    5. ' =' → logprob: -8.033571243286133
    6. '_s' → logprob: -8.158571243286133
    7. '_slot' → logprob: -8.283571243286133
    8. 'spots' → logprob: -8.408571243286133
    9. '[' → logprob: -8.533571243286133
    10. 's' → logprob: -8.908571243286133

Token 357: ' =' (ID: 314)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.9038802981376648
    2. '_slots' → logprob: -1.1538803577423096
    3. ' =' → logprob: -2.2788803577423096
    4. '=' → logprob: -2.7788803577423096
    5. 's' → logprob: -2.7788803577423096
    6. 'spots' → logprob: -4.0288801193237305
    7. '_spaces' → logprob: -4.1538801193237305
    8. '_s' → logprob: -5.0288801193237305
    9. '=[]' → logprob: -5.7788801193237305
    10. '_' → logprob: -5.9038801193237305

Token 358: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0337592288851738
    2. ' [' → logprob: -3.658759117126465
    3. '[' → logprob: -5.033759117126465
    4. '[(' → logprob: -7.783759117126465
    5. '[next' → logprob: -8.658759117126465
    6. '[]
' → logprob: -9.033759117126465
    7. '[int' → logprob: -9.908759117126465
    8. 'None' → logprob: -10.783759117126465
    9. '[ind' → logprob: -11.033759117126465
    10. '[len' → logprob: -11.158759117126465

Token 359: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021450345229823142
    2. '(i' → logprob: -9.000214576721191
    3. ' i' → logprob: -9.750214576721191
    4. ' (' → logprob: -10.750214576721191
    5. '(' → logprob: -12.375214576721191
    6. ']' → logprob: -13.125214576721191
    7. '   ' → logprob: -13.875214576721191
    8. '[i' → logprob: -14.000214576721191
    9. ' ' → logprob: -14.375214576721191
    10. '
' → logprob: -15.000214576721191

Token 360: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519311308860779
    2. 'for' → logprob: -1.5019311904907227
    3. ' ' → logprob: -14.126931190490723
    4. '	for' → logprob: -14.376931190490723
    5. '   ' → logprob: -14.626931190490723
    6. '
' → logprob: -17.001930236816406
    7. '       ' → logprob: -17.251930236816406
    8. '```' → logprob: -17.876930236816406
    9. '  ' → logprob: -18.001930236816406
    10. ' in' → logprob: -18.126930236816406

Token 361: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007267732638865709
    2. ',' → logprob: -5.007267951965332
    3. ' i' → logprob: -7.757267951965332
    4. ',i' → logprob: -9.757267951965332
    5. 'enumer' → logprob: -10.007267951965332
    6. 'range' → logprob: -11.382267951965332
    7. ' ,' → logprob: -13.257267951965332
    8. '(i' → logprob: -13.507267951965332
    9. ',(' → logprob: -13.507267951965332
    10. '
' → logprob: -13.632267951965332

Token 362: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.008735123090445995
    2. ',' → logprob: -5.008735179901123
    3. ',l' → logprob: -6.258735179901123
    4. ',[' → logprob: -10.008734703063965
    5. ',i' → logprob: -10.508734703063965
    6. ' ,' → logprob: -11.758734703063965
    7. ',e' → logprob: -12.508734703063965
    8. '(l' → logprob: -13.008734703063965
    9. ',u' → logprob: -13.008734703063965
    10. ',x' → logprob: -13.383734703063965

Token 363: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0020774556323885918
    2. ' l' → logprob: -6.252077579498291
    3. 'i' → logprob: -10.127077102661133
    4. 'lower' → logprob: -10.502077102661133
    5. '(l' → logprob: -10.752077102661133
    6. '_,' → logprob: -11.689577102661133
    7. '	l' → logprob: -11.752077102661133
    8. ',' → logprob: -12.002077102661133
    9. ',l' → logprob: -12.064577102661133
    10. '```' → logprob: -12.627077102661133

Token 364: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.041362762451171875
    2. ',' → logprob: -3.291362762451172
    3. ' ,' → logprob: -5.791362762451172
    4. 'u' → logprob: -8.791362762451172
    5. ',None' → logprob: -10.166362762451172
    6. '_,' → logprob: -11.416362762451172
    7. ' u' → logprob: -11.791362762451172
    8. ',v' → logprob: -11.916362762451172
    9. ',i' → logprob: -12.166362762451172
    10. ',user' → logprob: -12.416362762451172

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00401939544826746
    2. ' in' → logprob: -6.004019260406494
    3. 'in' → logprob: -6.504019260406494
    4. ' )' → logprob: -10.129019737243652
    5. ',' → logprob: -13.504019737243652
    6. '   ' → logprob: -13.629019737243652
    7. ' ' → logprob: -14.879019737243652
    8. 'n' → logprob: -15.004019737243652
    9. 's' → logprob: -15.379019737243652
    10. 'if' → logprob: -15.629019737243652

Token 366: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760543346405029
    2. ' in' → logprob: -0.8260543346405029
    3. ')' → logprob: -9.951054573059082
    4. ',' → logprob: -10.326054573059082
    5. '
' → logprob: -11.576054573059082
    6. ' ' → logprob: -11.951054573059082
    7. 'n' → logprob: -12.701054573059082
    8. 'is' → logprob: -13.076054573059082
    9. '	in' → logprob: -13.326054573059082
    10. '```' → logprob: -13.326054573059082

Token 367: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.006593036465346813
    2. ' enumerate' → logprob: -5.381593227386475
    3. 'spots' → logprob: -6.256593227386475
    4. ' spots' → logprob: -10.631592750549316
    5. 'en' → logprob: -11.881592750549316
    6. '
' → logprob: -12.256592750549316
    7. 'spot' → logprob: -12.381592750549316
    8. '(en' → logprob: -12.381592750549316
    9. 'enum' → logprob: -13.006592750549316
    10. 'enqueue' → logprob: -13.506592750549316

Token 368: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.3892495334148407
    2. 'spots' → logprob: -1.139249563217163
    3. 'sp' → logprob: -6.264249324798584
    4. ' spots' → logprob: -8.264249801635742
    5. '
' → logprob: -9.264249801635742
    6. 'enumer' → logprob: -9.889249801635742
    7. '(
' → logprob: -11.514249801635742
    8. 'spot' → logprob: -11.764249801635742
    9. ' (' → logprob: -11.764249801635742
    10. '```' → logprob: -12.014249801635742

Token 369: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0010129223810508847
    2. '[' → logprob: -7.751012802124023
    3. 'pots' → logprob: -8.626012802124023
    4. '[(' → logprob: -9.876012802124023
    5. '```' → logprob: -10.001012802124023
    6. 'spots' → logprob: -10.251012802124023
    7. '(' → logprob: -10.501012802124023
    8. 'orts' → logprob: -10.626012802124023
    9. '[[' → logprob: -10.751012802124023
    10. '[i' → logprob: -10.876012802124023

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0070255654864013195
    2. ' if' → logprob: -5.257025718688965
    3. 'if' → logprob: -6.507025718688965
    4. '()' → logprob: -8.757025718688965
    5. ' )' → logprob: -9.132025718688965
    6. '   ' → logprob: -11.757025718688965
    7. 'in' → logprob: -12.132025718688965
    8. '())' → logprob: -12.257025718688965
    9. ',' → logprob: -13.132025718688965
    10. '       ' → logprob: -13.382025718688965

Token 371: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12693724036216736
    2. 'if' → logprob: -2.1269371509552
    3. ' in' → logprob: -12.251936912536621
    4. '       ' → logprob: -13.751936912536621
    5. '        ' → logprob: -14.126936912536621
    6. ' ' → logprob: -14.501936912536621
    7. '           ' → logprob: -14.626936912536621
    8. '          ' → logprob: -15.001936912536621
    9. 'in' → logprob: -15.251936912536621
    10. ')' → logprob: -15.376936912536621

Token 372: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39612898230552673
    2. '(l' → logprob: -1.2711290121078491
    3. '(u' → logprob: -3.2711288928985596
    4. 'u' → logprob: -5.271129131317139
    5. ' (' → logprob: -6.396129131317139
    6. ' l' → logprob: -7.021129131317139
    7. '(' → logprob: -7.396129131317139
    8. '(not' → logprob: -10.02112865447998
    9. '(i' → logprob: -10.39612865447998
    10. '((' → logprob: -10.89612865447998

Token 373: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2563764750957489
    2. '(l' → logprob: -1.7563765048980713
    3. '(u' → logprob: -3.1313765048980713
    4. 'u' → logprob: -5.006376266479492
    5. ' (' → logprob: -6.631376266479492
    6. '(' → logprob: -6.881376266479492
    7. ' l' → logprob: -8.006376266479492
    8. '(not' → logprob: -9.631376266479492
    9. '(i' → logprob: -9.756376266479492
    10. '   ' → logprob: -9.881376266479492

Token 374: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14321433007717133
    2. 'is' → logprob: -2.018214225769043
    3. '[' → logprob: -7.643214225769043
    4. ' ' → logprob: -10.518214225769043
    5. '   ' → logprob: -11.143214225769043
    6. '	is' → logprob: -12.518214225769043
    7. 'and' → logprob: -12.768214225769043
    8. '[i' → logprob: -13.393214225769043
    9. 'None' → logprob: -13.518214225769043
    10. '0' → logprob: -13.643214225769043

Token 375: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.060678571462631226
    2. ' not' → logprob: -2.935678482055664
    3. 'None' → logprob: -5.185678482055664
    4. ' None' → logprob: -8.685678482055664
    5. ' ' → logprob: -12.560678482055664
    6. '   ' → logprob: -12.560678482055664
    7. 'none' → logprob: -13.310678482055664
    8. '	not' → logprob: -13.935678482055664
    9. '    ' → logprob: -14.310678482055664
    10. '
' → logprob: -14.310678482055664

Token 376: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0521884523332119
    2. ' None' → logprob: -3.3021883964538574
    3. 'not' → logprob: -4.427188396453857
    4. ' not' → logprob: -6.177188396453857
    5. 'none' → logprob: -11.677188873291016
    6. '(None' → logprob: -12.552188873291016
    7. '   ' → logprob: -13.052188873291016
    8. ' ' → logprob: -13.177188873291016
    9. 'Not' → logprob: -13.552188873291016
    10. '_None' → logprob: -13.927188873291016

Token 377: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4757811427116394
    2. 'and' → logprob: -0.9757811427116394
    3. ')' → logprob: -6.475780963897705
    4. ' ' → logprob: -9.225781440734863
    5. '   ' → logprob: -10.350781440734863
    6. ' )' → logprob: -11.850781440734863
    7. '    ' → logprob: -11.975781440734863
    8. ',' → logprob: -12.600781440734863
    9. ' or' → logprob: -12.725781440734863
    10. '       ' → logprob: -12.975781440734863

Token 378: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.22544287145137787
    2. ' u' → logprob: -1.600442886352539
    3. '   ' → logprob: -11.725442886352539
    4. '	u' → logprob: -12.475442886352539
    5. '    ' → logprob: -12.600442886352539
    6. ' ' → logprob: -12.600442886352539
    7. ' ' → logprob: -12.975442886352539
    8. '
' → logprob: -13.600442886352539
    9. '[u' → logprob: -13.662942886352539
    10. '  ' → logprob: -14.162942886352539

Token 379: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.056026194244623184
    2. 'is' → logprob: -2.9310262203216553
    3. 'None' → logprob: -7.306025981903076
    4. ' None' → logprob: -7.681025981903076
    5. ')' → logprob: -12.306026458740234
    6. ' ' → logprob: -12.556026458740234
    7. '=None' → logprob: -14.056026458740234
    8. '(None' → logprob: -14.931026458740234
    9. '==' → logprob: -15.181026458740234
    10. '[' → logprob: -15.556026458740234

Token 380: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07889099419116974
    2. ' None' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.578890800476074
    4. '   ' → logprob: -14.828890800476074
    5. '    ' → logprob: -15.453890800476074
    6. '  ' → logprob: -16.57889175415039
    7. 'none' → logprob: -16.82889175415039
    8. '(None' → logprob: -17.07889175415039
    9. '_None' → logprob: -17.20389175415039
    10. '=None' → logprob: -17.70389175415039

Token 381: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025980148930102587
    2. ')' → logprob: -6.502597808837891
    3. ')]
' → logprob: -7.127597808837891
    4. ']' → logprob: -8.37759780883789
    5. ' and' → logprob: -10.62759780883789
    6. ')]

' → logprob: -11.62759780883789
    7. ')]
' → logprob: -12.25259780883789
    8. ' )' → logprob: -12.37759780883789
    9. 'and' → logprob: -12.62759780883789
    10. '           ' → logprob: -13.12759780883789

Token 382: ' or' (ID: 503)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02546832710504532
    2. ']
' → logprob: -3.775468349456787
    3. '           ' → logprob: -6.775468349456787
    4. ' and' → logprob: -7.275468349456787
    5. ' ]' → logprob: -9.025467872619629
    6. ']

' → logprob: -9.275467872619629
    7. '<|end|>' → logprob: -9.900467872619629
    8. 'and' → logprob: -10.525467872619629
    9. '<|end|>' → logprob: -11.025467872619629
    10. '       ' → logprob: -11.400467872619629

Token 383: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2634231448173523
    2. ' (' → logprob: -1.513423204421997
    3. '(u' → logprob: -4.888422966003418
    4. '(' → logprob: -5.888422966003418
    5. '(False' → logprob: -8.013422966003418
    6. '(i' → logprob: -8.513422966003418
    7. '(True' → logprob: -9.138422966003418
    8. ' False' → logprob: -9.888422966003418
    9. ' l' → logprob: -9.888422966003418
    10. 'False' → logprob: -10.138422966003418

Token 384: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17390912771224976
    2. '(l' → logprob: -2.1739091873168945
    3. ' l' → logprob: -4.2989091873168945
    4. '(u' → logprob: -4.2989091873168945
    5. ' (' → logprob: -4.6739091873168945
    6. 'u' → logprob: -5.2989091873168945
    7. '(' → logprob: -5.9239091873168945
    8. '(False' → logprob: -8.173909187316895
    9. 'None' → logprob: -8.423909187316895
    10. '   ' → logprob: -8.548909187316895

Token 385: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1303785741329193
    2. 'is' → logprob: -2.380378484725952
    3. 'None' → logprob: -4.130378723144531
    4. ' None' → logprob: -5.005378723144531
    5. ' not' → logprob: -5.255378723144531
    6. 'not' → logprob: -6.505378723144531
    7. ')' → logprob: -9.130378723144531
    8. '=None' → logprob: -10.505378723144531
    9. '(None' → logprob: -10.755378723144531
    10. ' ' → logprob: -10.880378723144531

Token 386: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.46171629428863525
    2. ' None' → logprob: -1.2117162942886353
    3. ' not' → logprob: -2.8367161750793457
    4. 'not' → logprob: -4.336716175079346
    5. '   ' → logprob: -8.961716651916504
    6. ' ' → logprob: -9.086716651916504
    7. 'Not' → logprob: -10.711716651916504
    8. '    ' → logprob: -10.711716651916504
    9. 'none' → logprob: -10.836716651916504
    10. '_None' → logprob: -10.836716651916504

Token 387: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2818542718887329
    2. 'and' → logprob: -1.406854271888733
    3. ')' → logprob: -7.531854152679443
    4. '<|end|>' → logprob: -9.656854629516602
    5. ' ' → logprob: -10.281854629516602
    6. '	and' → logprob: -10.781854629516602
    7. ' )' → logprob: -11.531854629516602
    8. '<|end|>' → logprob: -11.906854629516602
    9. '   ' → logprob: -12.656854629516602
    10. ' or' → logprob: -12.906854629516602

Token 388: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.14653615653514862
    2. ' u' → logprob: -2.021536111831665
    3. 'True' → logprob: -5.771536350250244
    4. ' True' → logprob: -7.896536350250244
    5. 'False' → logprob: -9.021535873413086
    6. ' not' → logprob: -9.646535873413086
    7. 'not' → logprob: -9.771535873413086
    8. 'None' → logprob: -10.146535873413086
    9. '   ' → logprob: -10.896535873413086
    10. ' False' → logprob: -11.396535873413086

Token 389: ' is' (ID: 382)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7313359975814819
    2. ' None' → logprob: -1.481335997581482
    3. ' not' → logprob: -1.856335997581482
    4. ' is' → logprob: -2.4813361167907715
    5. 'is' → logprob: -3.6063361167907715
    6. 'not' → logprob: -3.7313361167907715
    7. 'Not' → logprob: -8.231335639953613
    8. ' ' → logprob: -9.731335639953613
    9. 'True' → logprob: -10.856335639953613
    10. '   ' → logprob: -11.231335639953613

Token 390: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07770999521017075
    2. ' None' → logprob: -3.077709913253784
    3. ' not' → logprob: -4.202710151672363
    4. 'not' → logprob: -4.327710151672363
    5. 'True' → logprob: -8.202710151672363
    6. 'Not' → logprob: -8.327710151672363
    7. ' ' → logprob: -11.827710151672363
    8. 'none' → logprob: -12.077710151672363
    9. 'False' → logprob: -12.077710151672363
    10. ' True' → logprob: -12.702710151672363

Token 391: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023254098370671272
    2. ' None' → logprob: -3.773254156112671
    3. '_None' → logprob: -12.39825439453125
    4. '(None' → logprob: -13.27325439453125
    5. 'not' → logprob: -13.64825439453125
    6. '_none' → logprob: -14.27325439453125
    7. ' not' → logprob: -15.02325439453125
    8. 'Not' → logprob: -15.14825439453125
    9. ' ' → logprob: -16.27325439453125
    10. 'none' → logprob: -16.39825439453125

Token 392: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014812873676419258
    2. ']' → logprob: -4.26481294631958
    3. ')' → logprob: -7.51481294631958
    4. ')]
' → logprob: -10.139812469482422
    5. '])' → logprob: -11.264812469482422
    6. '])]' → logprob: -11.264812469482422
    7. ' ]' → logprob: -11.764812469482422
    8. ')])' → logprob: -12.139812469482422
    9. ']
' → logprob: -12.139812469482422
    10. '}]' → logprob: -12.389812469482422

Token 393: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28191182017326355
    2. '<|end|>' → logprob: -2.406911849975586
    3. ':' → logprob: -2.906911849975586
    4. '[
' → logprob: -3.656911849975586
    5. ' if' → logprob: -3.906911849975586
    6. ' 
' → logprob: -4.281911849975586
    7. ' ' → logprob: -5.031911849975586
    8. '  
' → logprob: -5.031911849975586
    9. '(' → logprob: -5.156911849975586
    10. 'if' → logprob: -5.406911849975586

Token 395: ' but' (ID: 889)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14454656839370728
    2. 'if' → logprob: -2.1445465087890625
    3. '           ' → logprob: -4.5195465087890625
    4. ' for' → logprob: -5.5195465087890625
    5. 'for' → logprob: -7.0195465087890625
    6. 'empty' → logprob: -7.8945465087890625
    7. ' empty' → logprob: -8.019546508789062
    8. ' spots' → logprob: -8.019546508789062
    9. '       ' → logprob: -9.019546508789062
    10. '#' → logprob: -9.394546508789062

Token 396: ' problem' (ID: 4792)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17341850697994232
    2. ' for' → logprob: -2.9234185218811035
    3. ' empty' → logprob: -3.2984185218811035
    4. 'if' → logprob: -4.1734185218811035
    5. ' not' → logprob: -4.6734185218811035
    6. ' len' → logprob: -4.7984185218811035
    7. 'empty' → logprob: -4.7984185218811035
    8. 'for' → logprob: -5.6734185218811035
    9. ' continue' → logprob: -5.6734185218811035
    10. 'len' → logprob: -5.6734185218811035

Token 397: ' states' (ID: 9407)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47739377617836
    2. '<|end|>' → logprob: -1.4773937463760376
    3. '<|end|>' → logprob: -2.727393865585327
    4. '[' → logprob: -3.977393865585327
    5. ':
' → logprob: -4.227393627166748
    6. ' if' → logprob: -4.602393627166748
    7. ' continues' → logprob: -4.977393627166748
    8. ' =' → logprob: -5.227393627166748
    9. '=' → logprob: -5.352393627166748
    10. ' here' → logprob: -5.727393627166748

Token 398: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5450341105461121
    2. ' spots' → logprob: -1.2950341701507568
    3. ' we' → logprob: -2.670034170150757
    4. ' the' → logprob: -3.420034170150757
    5. ' only' → logprob: -4.795033931732178
    6. ',' → logprob: -5.295033931732178
    7. ' if' → logprob: -5.670033931732178
    8. ' spot' → logprob: -6.045033931732178
    9. 'that' → logprob: -6.045033931732178
    10. '<|end|>' → logprob: -6.170033931732178

Token 399: ' ' (ID: 220)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.2540332078933716
    2. ' the' → logprob: -1.6290332078933716
    3. 'the' → logprob: -2.379033088684082
    4. ' only' → logprob: -2.504033088684082
    5. ' lower' → logprob: -2.504033088684082
    6. 'only' → logprob: -2.754033088684082
    7. 'upper' → logprob: -3.504033088684082
    8. ' we' → logprob: -3.879033088684082
    9. ' if' → logprob: -3.879033088684082
    10. ' spots' → logprob: -4.129033088684082

Token 400: '2' (ID: 17)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.0566881895065308
    2. 'the' → logprob: -1.6816881895065308
    3. ' the' → logprob: -1.9316881895065308
    4. 'only' → logprob: -2.8066883087158203
    5. ' lower' → logprob: -2.9316883087158203
    6. ' only' → logprob: -3.0566883087158203
    7. 'upper' → logprob: -3.3066883087158203
    8. 'we' → logprob: -3.6816883087158203
    9. ' upper' → logprob: -4.30668830871582
    10. 'if' → logprob: -4.43168830871582

Token 401: '段' (ID: 27561)
  Prédit: ' cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cars' → logprob: -1.148110032081604
    2. ' spots' → logprob: -1.648110032081604
    3. 'cars' → logprob: -2.3981099128723145
    4. '0' → logprob: -2.5231099128723145
    5. 'nd' → logprob: -2.6481099128723145
    6. ' None' → logprob: -3.3981099128723145
    7. 'slots' → logprob: -3.3981099128723145
    8. 'None' → logprob: -3.5231099128723145
    9. ')' → logprob: -3.8981099128723145
    10. '#' → logprob: -4.3981099128723145

Token 402: '式' (ID: 10348)
  Prédit: '目'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '目' → logprob: -0.8661405444145203
    2. ' parking' → logprob: -1.991140604019165
    3. '階' → logprob: -2.366140604019165
    4. ' spots' → logprob: -2.491140604019165
    5. ' spaces' → logprob: -2.991140604019165
    6. 'の' → logprob: -3.491140604019165
    7. ')' → logprob: -3.616140604019165
    8. '\xe9\xa7' → logprob: -4.241140365600586
    9. '車' → logprob: -4.241140365600586
    10. '_' → logprob: -4.366140365600586

Token 403: ' has' (ID: 853)
  Prédit: ' parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parking' → logprob: -0.9133007526397705
    2. '\xe9\xa7' → logprob: -1.0383007526397705
    3. 'parking' → logprob: -1.7883007526397705
    4. '<|end|>' → logprob: -3.0383007526397705
    5. 'の' → logprob: -4.538300514221191
    6. '車' → logprob: -5.913300514221191
    7. ' spots' → logprob: -6.163300514221191
    8. 'パ' → logprob: -6.600800514221191
    9. '
' → logprob: -6.600800514221191
    10. 'で' → logprob: -6.725800514221191

Token 404: ' ' (ID: 220)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1555095911026
    2. 'lower' → logprob: -1.4055095911026
    3. ' lower' → logprob: -1.9055095911026
    4. ' only' → logprob: -2.2805094718933105
    5. ' no' → logprob: -2.9055094718933105
    6. 'only' → logprob: -3.1555094718933105
    7. 'to' → logprob: -3.6555094718933105
    8. ' the' → logprob: -4.5305094718933105
    9. 'no' → logprob: -4.6555094718933105
    10. 'both' → logprob: -5.2805094718933105

Token 405: '1' (ID: 16)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.04840202257037163
    2. ' lower' → logprob: -3.7984020709991455
    3. 'only' → logprob: -4.423401832580566
    4. 'to' → logprob: -5.798401832580566
    5. ' to' → logprob: -5.923401832580566
    6. 'the' → logprob: -6.673401832580566
    7. 'upper' → logprob: -6.923401832580566
    8. ' only' → logprob: -6.923401832580566
    9. 'both' → logprob: -7.173401832580566
    10. 'no' → logprob: -7.423401832580566

Token 406: ' lower' (ID: 6931)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8188589811325073
    2. ' if' → logprob: -2.068859100341797
    3. ')' → logprob: -2.318859100341797
    4. ' only' → logprob: -2.818859100341797
    5. ' None' → logprob: -3.193859100341797
    6. 'and' → logprob: -3.193859100341797
    7. 'None' → logprob: -3.318859100341797
    8. ' for' → logprob: -3.568859100341797
    9. ' in' → logprob: -3.693859100341797
    10. ' is' → logprob: -4.193859100341797

Token 407: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7664312124252319
    2. '<|end|>' → logprob: -1.391431212425232
    3. ')' → logprob: -1.891431212425232
    4. '<|end|>' → logprob: -3.2664313316345215
    5. ' ' → logprob: -4.1414313316345215
    6. '
' → logprob: -4.5164313316345215
    7. 'None' → logprob: -4.5164313316345215
    8. ' and' → logprob: -4.7664313316345215
    9. ']' → logprob: -5.1414313316345215
    10. '_lower' → logprob: -5.3914313316345215

Token 408: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22794035077095032
    2. ' ' → logprob: -1.977940320968628
    3. '1' → logprob: -2.727940320968628
    4. ' no' → logprob: -9.977940559387207
    5. ' one' → logprob: -10.227940559387207
    6. ' zero' → logprob: -11.852940559387207
    7. 'one' → logprob: -12.102940559387207
    8. 'no' → logprob: -12.165440559387207
    9. '
' → logprob: -13.165440559387207
    10. '2' → logprob: -13.290440559387207

Token 409: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5238912105560303
    2. '1' → logprob: -0.8988912105560303
    3. ' ' → logprob: -7.273891448974609
    4. 'no' → logprob: -11.02389144897461
    5. 'upper' → logprob: -11.02389144897461
    6. 'None' → logprob: -11.64889144897461
    7. '2' → logprob: -12.02389144897461
    8. 'one' → logprob: -12.46139144897461
    9. '```' → logprob: -12.64889144897461
    10. ' no' → logprob: -13.14889144897461

Token 410: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.5909722447395325
    2. 'upper' → logprob: -0.8409722447395325
    3. ' None' → logprob: -4.840972423553467
    4. 'None' → logprob: -5.465972423553467
    5. '上' → logprob: -6.465972423553467
    6. 'lower' → logprob: -8.340971946716309
    7. ' ' → logprob: -8.715971946716309
    8. '[' → logprob: -8.840971946716309
    9. '_upper' → logprob: -8.840971946716309
    10. ' lower' → logprob: -9.215971946716309

Token 411: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4229314923286438
    2. ' not' → logprob: -1.422931432723999
    3. 'not' → logprob: -3.547931432723999
    4. '0' → logprob: -3.922931432723999
    5. ' and' → logprob: -4.047931671142578
    6. ')' → logprob: -5.047931671142578
    7. ' no' → logprob: -5.547931671142578
    8. 'so' → logprob: -5.547931671142578
    9. 'and' → logprob: -6.047931671142578
    10. '<|end|>' → logprob: -6.047931671142578

Token 413: ' first' (ID: 1577)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.6519624590873718
    2. '           ' → logprob: -1.9019625186920166
    3. 'continue' → logprob: -2.0269625186920166
    4. 'spots' → logprob: -3.5269625186920166
    5. 'no' → logprob: -3.7769625186920166
    6. 'if' → logprob: -3.7769625186920166
    7. ' empty' → logprob: -4.2769622802734375
    8. 'the' → logprob: -4.5269622802734375
    9. 'len' → logprob: -4.6519622802734375
    10. ' no' → logprob: -4.6519622802734375

Token 414: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.600061058998108
    2. 'fill' → logprob: -1.725061058998108
    3. ')' → logprob: -2.2250609397888184
    4. 'lower' → logprob: -2.2250609397888184
    5. 'empty' → logprob: -2.9750609397888184
    6. 'f' → logprob: -3.7250609397888184
    7. 'put' → logprob: -3.7250609397888184
    8. ' fill' → logprob: -3.8500609397888184
    9. 'slot' → logprob: -3.9750609397888184
    10. 'spot' → logprob: -3.9750609397888184

Token 415: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.37959638237953186
    2. 'always' → logprob: -2.379596471786499
    3. ' lower' → logprob: -3.379596471786499
    4. ' always' → logprob: -3.504596471786499
    5. ' spots' → logprob: -3.629596471786499
    6. 'spots' → logprob: -3.754596471786499
    7. 'the' → logprob: -4.25459623336792
    8. 'l' → logprob: -4.25459623336792
    9. 'None' → logprob: -4.87959623336792
    10. ' None' → logprob: -5.37959623336792

Token 416: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9407088756561279
    2. '[' → logprob: -1.190708875656128
    3. '<|end|>' → logprob: -2.315708875656128
    4. '           ' → logprob: -2.690708875656128
    5. ' if' → logprob: -3.315708875656128
    6. '<|end|>' → logprob: -3.690708875656128
    7. ' ' → logprob: -4.190709114074707
    8. ')' → logprob: -4.565709114074707
    9. ' and' → logprob: -4.690709114074707
    10. '            
' → logprob: -4.815709114074707

Token 417: ' second' (ID: 3099)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17429202795028687
    2. 'not' → logprob: -2.2992920875549316
    3. '<|end|>' → logprob: -3.5492920875549316
    4. ' so' → logprob: -4.924292087554932
    5. '<|end|>' → logprob: -4.924292087554932
    6. ' and' → logprob: -6.049292087554932
    7. ' ' → logprob: -6.424292087554932
    8. 'and' → logprob: -6.674292087554932
    9. ' second' → logprob: -6.924292087554932
    10. ' then' → logprob: -6.924292087554932

Token 418: ' is' (ID: 382)
  Prédit: ' slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slot' → logprob: -0.9433838725090027
    2. '<|end|>' → logprob: -1.5683839321136475
    3. ' spot' → logprob: -2.6933839321136475
    4. '[' → logprob: -2.9433839321136475
    5. '<|end|>' → logprob: -3.0683839321136475
    6. ')' → logprob: -3.0683839321136475
    7. ' is' → logprob: -3.3183839321136475
    8. ' token' → logprob: -3.5683839321136475
    9. ',' → logprob: -3.5683839321136475
    10. 'slot' → logprob: -4.068383693695068

Token 419: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.4323047995567322
    2. ' upper' → logprob: -1.057304859161377
    3. 'None' → logprob: -6.432304859161377
    4. ' None' → logprob: -6.807304859161377
    5. ' empty' → logprob: -8.057304382324219
    6. 'empty' → logprob: -8.432304382324219
    7. 'occupied' → logprob: -9.682304382324219
    8. '上' → logprob: -9.932304382324219
    9. ' not' → logprob: -9.932304382324219
    10. ' always' → logprob: -10.557304382324219

Token 420: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4872184097766876
    2. ' and' → logprob: -2.4872183799743652
    3. 'and' → logprob: -2.6122183799743652
    4. ' so' → logprob: -3.3622183799743652
    5. ' but' → logprob: -3.4872183799743652
    6. ' not' → logprob: -3.6122183799743652
    7. '<|end|>' → logprob: -3.6122183799743652
    8. ')' → logprob: -4.112218379974365
    9. '        ' → logprob: -4.112218379974365
    10. '           ' → logprob: -4.862218379974365

Token 422: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.7765249609947205
    2. ' not' → logprob: -2.1515250205993652
    3. ' and' → logprob: -2.2765250205993652
    4. ' spot' → logprob: -2.5265250205993652
    5. ' ' → logprob: -2.9015250205993652
    6. ' spots' → logprob: -3.1515250205993652
    7. ' but' → logprob: -3.5265250205993652
    8. '<|end|>' → logprob: -4.151525020599365
    9. '<|end|>' → logprob: -4.276525020599365
    10. 'return' → logprob: -4.401525020599365

Token 423: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' already' (ID: 4279)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -1.268170714378357
    2. ' the' → logprob: -1.768170714378357
    3. ' only' → logprob: -2.2681708335876465
    4. ' we' → logprob: -2.7681708335876465
    5. 'the' → logprob: -2.7681708335876465
    6. ' if' → logprob: -3.0181708335876465
    7. 'spots' → logprob: -3.6431708335876465
    8. ' not' → logprob: -3.7681708335876465
    9. 'we' → logprob: -3.8931708335876465
    10. 'if' → logprob: -4.0181708335876465

Token 425: ' parking' (ID: 14472)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.9206580519676208
    2. 'spots' → logprob: -1.9206581115722656
    3. ' the' → logprob: -2.5456581115722656
    4. 'the' → logprob: -2.7956581115722656
    5. '           ' → logprob: -3.5456581115722656
    6. 'lower' → logprob: -3.6706581115722656
    7. 'occupied' → logprob: -3.6706581115722656
    8. ' only' → logprob: -3.9206581115722656
    9. 'only' → logprob: -4.045658111572266
    10. ' guaranteed' → logprob: -4.295658111572266

Token 426: ' assigns' (ID: 113134)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41313397884368896
    2. '       ' → logprob: -2.2881340980529785
    3. ' if' → logprob: -2.2881340980529785
    4. '<|end|>' → logprob: -3.7881340980529785
    5. ' in' → logprob: -4.2881340980529785
    6. ',' → logprob: -4.4131340980529785
    7. '<|end|>' → logprob: -4.9131340980529785
    8. '.' → logprob: -4.9131340980529785
    9. ' only' → logprob: -5.0381340980529785
    10. '[' → logprob: -5.0381340980529785

Token 427: ' first' (ID: 1577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.236435890197754
    2. ')' → logprob: -1.736435890197754
    3. ' in' → logprob: -1.986435890197754
    4. ' to' → logprob: -2.361435890197754
    5. ' spots' → logprob: -2.486435890197754
    6. '       ' → logprob: -3.611435890197754
    7. ' the' → logprob: -3.986435890197754
    8. '           ' → logprob: -4.361435890197754
    9. ' None' → logprob: -4.611435890197754
    10. 'spots' → logprob: -4.611435890197754

Token 428: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8579586744308472
    2. '[' → logprob: -1.7329586744308472
    3. '<|end|>' → logprob: -2.1079587936401367
    4. '           ' → logprob: -2.3579587936401367
    5. '       ' → logprob: -2.8579587936401367
    6. '<|end|>' → logprob: -3.3579587936401367
    7. '            
' → logprob: -4.107958793640137
    8. ' if' → logprob: -4.107958793640137
    9. ')' → logprob: -4.607958793640137
    10. '.' → logprob: -5.107958793640137

Token 430: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.22647564113140106
    2. ' lower' → logprob: -1.6014755964279175
    3. '0' → logprob: -8.351475715637207
    4. 'the' → logprob: -8.351475715637207
    5. ' the' → logprob: -8.476475715637207
    6. '[' → logprob: -8.476475715637207
    7. ' spots' → logprob: -10.226475715637207
    8. '```' → logprob: -10.601475715637207
    9. ' [' → logprob: -10.726475715637207
    10. '(lower' → logprob: -10.851475715637207

Token 431: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27957820892333984
    2. '
' → logprob: -2.40457820892334
    3. ' if' → logprob: -2.65457820892334
    4. '<|end|>' → logprob: -3.52957820892334
    5. '       ' → logprob: -3.77957820892334
    6. '[' → logprob: -4.90457820892334
    7. '<|end|>' → logprob: -5.15457820892334
    8. 'if' → logprob: -5.77957820892334
    9. ' and' → logprob: -6.27957820892334
    10. ',' → logprob: -6.40457820892334

Token 432: ' second' (ID: 3099)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.14270667731761932
    2. ' not' → logprob: -3.2677066326141357
    3. 'so' → logprob: -3.5177066326141357
    4. '<|end|>' → logprob: -4.267706871032715
    5. ' then' → logprob: -4.392706871032715
    6. 'not' → logprob: -4.767706871032715
    7. ' and' → logprob: -5.017706871032715
    8. 'and' → logprob: -5.142706871032715
    9. '<|end|>' → logprob: -5.767706871032715
    10. 'return' → logprob: -5.767706871032715

Token 433: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.2662023901939392
    2. '[' → logprob: -3.391202449798584
    3. '<|end|>' → logprob: -3.391202449798584
    4. ')' → logprob: -3.516202449798584
    5. 'car' → logprob: -3.641202449798584
    6. ' token' → logprob: -3.641202449798584
    7. ' spot' → logprob: -3.766202449798584
    8. '_car' → logprob: -4.266202449798584
    9. '<|end|>' → logprob: -5.141202449798584
    10. 'token' → logprob: -5.391202449798584

Token 434: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.2260301411151886
    2. 'upper' → logprob: -1.6010301113128662
    3. ' lower' → logprob: -8.226030349731445
    4. 'lower' → logprob: -8.226030349731445
    5. ' the' → logprob: -10.101030349731445
    6. 'the' → logprob: -11.851030349731445
    7. ' ' → logprob: -11.851030349731445
    8. '   ' → logprob: -12.601030349731445
    9. '0' → logprob: -12.726030349731445
    10. ' empty' → logprob: -13.101030349731445

Token 436: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3580434024333954
    2. '
' → logprob: -1.8580434322357178
    3. '<|end|>' → logprob: -3.3580434322357178
    4. ' if' → logprob: -3.7330434322357178
    5. '       ' → logprob: -4.233043193817139
    6. '[' → logprob: -4.483043193817139
    7. '<|end|>' → logprob: -4.608043193817139
    8. '               ' → logprob: -4.858043193817139
    9. '            
' → logprob: -4.983043193817139
    10. ' ' → logprob: -5.108043193817139

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6915290355682373
    2. '       ' → logprob: -1.5665290355682373
    3. '[' → logprob: -2.4415290355682373
    4. ' if' → logprob: -2.4415290355682373
    5. ' ' → logprob: -3.6915290355682373
    6. '               ' → logprob: -3.9415290355682373
    7. '            
' → logprob: -4.441529273986816
    8. '<|end|>' → logprob: -4.941529273986816
    9. ')' → logprob: -5.066529273986816
    10. '   ' → logprob: -5.316529273986816

Token 438: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18911653757095337
    2. ' if' → logprob: -2.3141164779663086
    3. '       ' → logprob: -3.6891164779663086
    4. '               ' → logprob: -3.8141164779663086
    5. 'if' → logprob: -4.439116477966309
    6. '            
' → logprob: -6.189116477966309
    7. '            ' → logprob: -6.689116477966309
    8. 'If' → logprob: -6.814116477966309
    9. ' ' → logprob: -6.939116477966309
    10. ' spot' → logprob: -7.064116477966309

Token 439: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0083162784576416
    2. 'if' → logprob: -1.1333162784576416
    3. ' for' → logprob: -2.2583162784576416
    4. '           ' → logprob: -2.3833162784576416
    5. 'for' → logprob: -2.3833162784576416
    6. '       ' → logprob: -4.8833160400390625
    7. '#' → logprob: -5.1333160400390625
    8. 'empty' → logprob: -6.3833160400390625
    9. 'return' → logprob: -6.6333160400390625
    10. 'spot' → logprob: -6.8833160400390625

Token 440: '3' (ID: 18)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4147586226463318
    2. ' if' → logprob: -1.4147586822509766
    3. 'for' → logprob: -2.7897586822509766
    4. '           ' → logprob: -4.289758682250977
    5. ' for' → logprob: -4.289758682250977
    6. 'spot' → logprob: -6.539758682250977
    7. '[' → logprob: -6.789758682250977
    8. 'If' → logprob: -7.164758682250977
    9. '       ' → logprob: -7.289758682250977
    10. '            
' → logprob: -7.539758682250977

Token 441: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13020414113998413
    2. '           ' → logprob: -3.130204200744629
    3. '       ' → logprob: -3.755204200744629
    4. ' for' → logprob: -4.005204200744629
    5. 'for' → logprob: -4.130204200744629
    6. ' if' → logprob: -4.380204200744629
    7. 'if' → logprob: -5.755204200744629
    8. ')
' → logprob: -6.130204200744629
    9. ']' → logprob: -6.880204200744629
    10. '   ' → logprob: -7.005204200744629

Token 442: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7580568790435791
    2. 'for' → logprob: -0.8830568790435791
    3. '#' → logprob: -3.383056879043579
    4. '       ' → logprob: -3.883056879043579
    5. ' for' → logprob: -4.008056640625
    6. ' if' → logprob: -4.133056640625
    7. 'return' → logprob: -4.258056640625
    8. 'None' → logprob: -5.508056640625
    9. '           ' → logprob: -6.008056640625
    10. 'car' → logprob: -6.133056640625

Token 443: ' spots' (ID: 25522)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6716053485870361
    2. ' spot' → logprob: -1.2966053485870361
    3. 'i' → logprob: -1.9216053485870361
    4. 'spot' → logprob: -2.796605348587036
    5. ' car' → logprob: -5.796605110168457
    6. 'car' → logprob: -6.546605110168457
    7. 'pos' → logprob: -7.484105110168457
    8. ' empty' → logprob: -7.484105110168457
    9. ' pos' → logprob: -7.734105110168457
    10. ' ' → logprob: -8.109105110168457

Token 444: ' partly' (ID: 53958)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.42908933758735657
    2. ' with' → logprob: -1.1790893077850342
    3. ' in' → logprob: -4.054089546203613
    4. ' that' → logprob: -5.054089546203613
    5. ' where' → logprob: -5.429089546203613
    6. ':' → logprob: -5.929089546203613
    7. 'in' → logprob: -6.179089546203613
    8. ' =' → logprob: -6.304089546203613
    9. 'that' → logprob: -6.429089546203613
    10. 'where' → logprob: -6.804089546203613

Token 445: ' occupied' (ID: 46186)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.6678473949432373
    2. 'occupied' → logprob: -1.6678473949432373
    3. '[' → logprob: -2.0428473949432373
    4. 'with' → logprob: -2.5428473949432373
    5. ' with' → logprob: -3.0428473949432373
    6. 'None' → logprob: -3.2928473949432373
    7. 'available' → logprob: -3.4178473949432373
    8. 'filled' → logprob: -3.6678473949432373
    9. ' occupied' → logprob: -3.7928473949432373
    10. '```' → logprob: -3.9178473949432373

Token 446: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6135342717170715
    2. '[' → logprob: -1.9885342121124268
    3. '<|end|>' → logprob: -2.1135342121124268
    4. ' if' → logprob: -2.7385342121124268
    5. '<|end|>' → logprob: -2.7385342121124268
    6. ':
' → logprob: -3.2385342121124268
    7. ' and' → logprob: -4.488534450531006
    8. 'and' → logprob: -5.863534450531006
    9. '[]' → logprob: -5.863534450531006
    10. ',' → logprob: -6.113534450531006

Token 447: ' full' (ID: 3149)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.41780322790145874
    2. 'not' → logprob: -1.9178032875061035
    3. ' partially' → logprob: -3.5428032875061035
    4. ' full' → logprob: -3.6678032875061035
    5. '   ' → logprob: -4.2928032875061035
    6. '[]' → logprob: -4.6678032875061035
    7. ' fully' → logprob: -4.7928032875061035
    8. ' ' → logprob: -4.9178032875061035
    9. '[' → logprob: -5.0428032875061035
    10. 'partial' → logprob: -5.1678032875061035

Token 448: '?
' (ID: 3901)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6408779621124268
    2. '<|end|>' → logprob: -1.5158779621124268
    3. '[' → logprob: -2.0158779621124268
    4. ':
' → logprob: -3.0158779621124268
    5. '<|end|>' → logprob: -3.3908779621124268
    6. ' and' → logprob: -4.765877723693848
    7. ')' → logprob: -4.890877723693848
    8. ']' → logprob: -5.765877723693848
    9. '[]' → logprob: -5.890877723693848
    10. ' if' → logprob: -6.140877723693848

Token 449: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8293008804321289
    2. '<|end|>' → logprob: -1.079300880432129
    3. ' if' → logprob: -2.079300880432129
    4. '           ' → logprob: -3.954300880432129
    5. '[' → logprob: -4.204300880432129
    6. ' for' → logprob: -4.329300880432129
    7. 'if' → logprob: -4.579300880432129
    8. '[]' → logprob: -4.829300880432129
    9. '<|end|>' → logprob: -5.204300880432129
    10. '        
' → logprob: -5.829300880432129

Token 451: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4541281461715698
    2. '<|end|>' → logprob: -1.2041281461715698
    3. ' if' → logprob: -4.204128265380859
    4. '[' → logprob: -4.204128265380859
    5. '           ' → logprob: -4.704128265380859
    6. '<|end|>' → logprob: -5.454128265380859
    7. '        ' → logprob: -5.579128265380859
    8. ' ' → logprob: -5.704128265380859
    9. 'if' → logprob: -5.954128265380859
    10. ')' → logprob: -6.454128265380859

Token 452: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5242979526519775
    2. ' the' → logprob: -2.0242979526519775
    3. ',' → logprob: -2.3992979526519775
    4. ' spots' → logprob: -3.0242979526519775
    5. '       ' → logprob: -3.1492979526519775
    6. 'the' → logprob: -3.8992979526519775
    7. 'return' → logprob: -5.024297714233398
    8. '<|end|>' → logprob: -5.149297714233398
    9. '<|end|>' → logprob: -5.399297714233398
    10. 'spots' → logprob: -5.399297714233398

Token 453: ' per' (ID: 777)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6904624700546265
    2. ' return' → logprob: -1.0654624700546265
    3. '           ' → logprob: -2.940462589263916
    4. '#' → logprob: -3.190462589263916
    5. ' if' → logprob: -3.815462589263916
    6. ' for' → logprob: -4.190462589263916
    7. '       ' → logprob: -4.690462589263916
    8. 'if' → logprob: -5.815462589263916
    9. 'for' → logprob: -6.190462589263916
    10. ' #' → logprob: -6.440462589263916

Token 454: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.744061291217804
    2. ' the' → logprob: -0.994061291217804
    3. ' spot' → logprob: -3.619061231613159
    4. 'spot' → logprob: -3.619061231613159
    5. 'def' → logprob: -4.369061470031738
    6. '```' → logprob: -4.369061470031738
    7. ' code' → logprob: -4.744061470031738
    8. ' your' → logprob: -4.994061470031738
    9. 'problem' → logprob: -4.994061470031738
    10. ' indentation' → logprob: -5.119061470031738

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.638931155204773
    2. ',' → logprob: -1.388931155204773
    3. ')' → logprob: -3.1389312744140625
    4. '<|end|>' → logprob: -3.3889312744140625
    5. '<|end|>' → logprob: -3.5139312744140625
    6. '       ' → logprob: -3.5139312744140625
    7. '   ' → logprob: -4.0139312744140625
    8. '[' → logprob: -4.1389312744140625
    9. '):' → logprob: -4.1389312744140625
    10. ':
' → logprob: -4.7639312744140625

Token 456: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.657181441783905
    2. '<|end|>' → logprob: -0.782181441783905
    3. '        ' → logprob: -5.032181262969971
    4. ')' → logprob: -5.407181262969971
    5. '<|end|>' → logprob: -5.532181262969971
    6. '       ' → logprob: -5.782181262969971
    7. '...' → logprob: -6.532181262969971
    8. '[' → logprob: -7.032181262969971
    9. ' )' → logprob: -7.282181262969971
    10. '            ' → logprob: -7.407181262969971

Token 457: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0801328420639038
    2. '           ' → logprob: -1.3301328420639038
    3. '#' (adapté à ' #') → logprob: -1.9551328420639038
    4. ' if' → logprob: -2.0801329612731934
    5. 'for' → logprob: -3.2051329612731934
    6. '       ' → logprob: -3.5801329612731934
    7. 'if' → logprob: -3.8301329612731934
    8. ' #' → logprob: -4.705132961273193
    9. ' spot' → logprob: -5.705132961273193
    10. ' spots' → logprob: -5.705132961273193

Token 458: ' when' (ID: 1261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' parking' (ID: 14472)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4883549213409424
    2. ' parking' → logprob: -1.9883549213409424
    3. ' car' → logprob: -2.3633549213409424
    4. ' spot' → logprob: -3.7383549213409424
    5. ' you' → logprob: -4.113354682922363
    6. ' the' → logprob: -4.238354682922363
    7. ' there' → logprob: -4.363354682922363
    8. 'parking' → logprob: -4.488354682922363
    9. ' spots' → logprob: -4.738354682922363
    10. 'car' → logprob: -4.738354682922363

Token 460: ',' (ID: 11)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.8917148113250732
    2. '_' → logprob: -1.1417148113250732
    3. ',' → logprob: -1.7667148113250732
    4. ')' → logprob: -3.2667148113250732
    5. '[' → logprob: -4.141715049743652
    6. ' a' → logprob: -5.516715049743652
    7. 'car' → logprob: -5.641715049743652
    8. '_token' → logprob: -5.766715049743652
    9. ' ,' → logprob: -5.891715049743652
    10. ' _' → logprob: -6.016715049743652

Token 461: ' first' (ID: 1577)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.45763179659843445
    2. '<|end|>' → logprob: -2.707631826400757
    3. '           ' → logprob: -3.082631826400757
    4. 'car' → logprob: -3.207631826400757
    5. ' ' → logprob: -3.207631826400757
    6. ' spots' → logprob: -3.582631826400757
    7. '<|end|>' → logprob: -4.082631587982178
    8. ' ' → logprob: -4.082631587982178
    9. '            ' → logprob: -4.207631587982178
    10. 'spots' → logprob: -4.332631587982178

Token 462: ' try' (ID: 2075)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.9025044441223145
    2. 'car' → logprob: -0.9025044441223145
    3. '_car' → logprob: -3.0275044441223145
    4. 'come' → logprob: -3.2775044441223145
    5. ')' → logprob: -4.1525044441223145
    6. 'lower' → logprob: -4.5275044441223145
    7. ' come' → logprob: -4.9025044441223145
    8. 'token' → logprob: -5.0275044441223145
    9. 'spot' → logprob: -5.2775044441223145
    10. ',' → logprob: -5.4025044441223145

Token 463: ' spots' (ID: 25522)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.41056081652641296
    2. 'to' → logprob: -1.9105608463287354
    3. 'spots' → logprob: -2.6605608463287354
    4. ' spots' → logprob: -3.4105608463287354
    5. 'spot' → logprob: -4.160560607910156
    6. 'car' → logprob: -4.535560607910156
    7. 'lower' → logprob: -4.910560607910156
    8. ' the' → logprob: -5.285560607910156
    9. '   ' → logprob: -5.660560607910156
    10. 'empty' → logprob: -5.785560607910156

Token 464: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.2287007570266724
    2. ' with' → logprob: -1.3537007570266724
    3. '[' → logprob: -1.8537007570266724
    4. ' where' → logprob: -2.228700637817383
    5. ' that' → logprob: -2.478700637817383
    6. 'where' → logprob: -3.728700637817383
    7. '<|end|>' → logprob: -3.978700637817383
    8. ' if' → logprob: -3.978700637817383
    9. 'that' → logprob: -4.853700637817383
    10. '       ' → logprob: -4.978700637817383

Token 465: ' ' (ID: 220)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.2493555545806885
    2. 'both' → logprob: -1.6243555545806885
    3. 'l' → logprob: -2.1243555545806885
    4. 'empty' → logprob: -2.7493555545806885
    5. ' both' → logprob: -2.8743555545806885
    6. ' empty' → logprob: -3.1243555545806885
    7. ' l' → logprob: -3.3743555545806885
    8. ' lower' → logprob: -3.4993555545806885
    9. 'None' → logprob: -3.4993555545806885
    10. 'a' → logprob: -3.7493555545806885

Token 466: '0' (ID: 15)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.3425798416137695
    2. 'both' → logprob: -1.5925798416137695
    3. 'l' → logprob: -1.9675798416137695
    4. 'empty' → logprob: -2.5925798416137695
    5. 'one' → logprob: -2.5925798416137695
    6. 'None' → logprob: -3.2175798416137695
    7. ' empty' → logprob: -3.5925798416137695
    8. ' both' → logprob: -3.7175798416137695
    9. ' l' → logprob: -3.8425798416137695
    10. '0' → logprob: -3.8425798416137695

Token 467: ' cars' (ID: 13653)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9975780248641968
    2. '<|end|>' → logprob: -1.8725780248641968
    3. ' or' → logprob: -2.1225781440734863
    4. 'None' → logprob: -2.6225781440734863
    5. ' None' → logprob: -2.8725781440734863
    6. ' spots' → logprob: -3.2475781440734863
    7. 'tokens' → logprob: -3.7475781440734863
    8. ' spaces' → logprob: -3.8725781440734863
    9. ' tokens' → logprob: -3.8725781440734863
    10. 'spaces' → logprob: -3.9975781440734863

Token 468: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8055018782615662
    2. '<|end|>' → logprob: -1.305501937866211
    3. ',' → logprob: -2.430501937866211
    4. '
' → logprob: -2.805501937866211
    5. '<|end|>' → logprob: -3.305501937866211
    6. ' then' → logprob: -3.680501937866211
    7. ' else' → logprob: -4.555501937866211
    8. 'else' → logprob: -4.930501937866211
    9. ' ' → logprob: -4.930501937866211
    10. '   ' → logprob: -5.055501937866211

Token 470: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.827606201171875
    2. '<|end|>' → logprob: -1.327606201171875
    3. '           ' → logprob: -1.577606201171875
    4. '
' → logprob: -3.077606201171875
    5. '<|end|>' → logprob: -4.077606201171875
    6. ',' → logprob: -5.077606201171875
    7. ' then' → logprob: -5.452606201171875
    8. ' and' → logprob: -5.702606201171875
    9. '   ' → logprob: -5.952606201171875
    10. ' or' → logprob: -6.452606201171875

Token 471: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22364413738250732
    2. ' then' → logprob: -1.9736441373825073
    3. ' next' → logprob: -3.973644256591797
    4. '           ' → logprob: -4.223644256591797
    5. ' second' → logprob: -5.348644256591797
    6. '
' → logprob: -5.723644256591797
    7. 'then' → logprob: -5.723644256591797
    8. 'Then' → logprob: -5.973644256591797
    9. 'next' → logprob: -5.973644256591797
    10. 'elif' → logprob: -6.223644256591797

Token 472: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9292017817497253
    2. ' there' → logprob: -1.8042018413543701
    3. ' spots' → logprob: -2.55420184135437
    4. 'len' → logprob: -2.80420184135437
    5. 'not' → logprob: -3.17920184135437
    6. ' l' → logprob: -3.42920184135437
    7. ' len' → logprob: -3.42920184135437
    8. 'spots' → logprob: -4.054201602935791
    9. 'car' → logprob: -4.179201602935791
    10. ' car' → logprob: -4.429201602935791

Token 473: ' such' (ID: 2238)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.20810522139072418
    2. 'spots' → logprob: -2.4581053256988525
    3. ' more' → logprob: -3.3331053256988525
    4. 'spot' → logprob: -4.333105087280273
    5. ' empty' → logprob: -4.333105087280273
    6. ' spot' → logprob: -4.458105087280273
    7. 'empty' → logprob: -4.583105087280273
    8. ' spaces' → logprob: -5.833105087280273
    9. 'more' → logprob: -6.208105087280273
    10. ' car' → logprob: -6.208105087280273

Token 474: ' spot' (ID: 10021)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.4565354287624359
    2. 'spots' → logprob: -1.7065354585647583
    3. ' spot' → logprob: -3.0815353393554688
    4. 'spot' → logprob: -3.3315353393554688
    5. '_' → logprob: -3.7065353393554688
    6. '_sp' → logprob: -4.081535339355469
    7. ',' → logprob: -4.581535339355469
    8. ' car' → logprob: -4.956535339355469
    9. 'car' → logprob: -5.331535339355469
    10. ' available' → logprob: -5.706535339355469

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5724716186523438
    2. ':' → logprob: -0.9474716186523438
    3. ':
' → logprob: -3.3224716186523438
    4. ',
' → logprob: -4.822471618652344
    5. '           ' → logprob: -6.572471618652344
    6. ' is' → logprob: -8.072471618652344
    7. 'available' → logprob: -8.072471618652344
    8. ' available' → logprob: -8.322471618652344
    9. 'and' → logprob: -8.322471618652344
    10. '.' → logprob: -8.322471618652344

Token 476: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.651207447052002
    2. ' for' → logprob: -1.401207447052002
    3. 'for' → logprob: -2.651207447052002
    4. ' if' → logprob: -2.776207447052002
    5. '#' → logprob: -3.901207447052002
    6. ' return' → logprob: -4.026207447052002
    7. 'if' → logprob: -4.151207447052002
    8. 'then' → logprob: -4.651207447052002
    9. ' spots' → logprob: -5.026207447052002
    10. '           ' → logprob: -5.151207447052002

Token 477: ' pick' (ID: 5230)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6065928936004639
    2. 'for' → logprob: -0.9815928936004639
    3. '#' → logprob: -3.481592893600464
    4. '           ' → logprob: -3.856592893600464
    5. '       ' → logprob: -5.356593132019043
    6. 'return' → logprob: -5.606593132019043
    7. '   ' → logprob: -5.856593132019043
    8. 'empty' → logprob: -5.981593132019043
    9. ' spots' → logprob: -5.981593132019043
    10. '               ' → logprob: -6.356593132019043

Token 478: ' spots' (ID: 25522)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.25848326086997986
    2. ' a' → logprob: -2.6334831714630127
    3. ' spot' → logprob: -3.0084831714630127
    4. 'the' → logprob: -4.008483409881592
    5. ' i' → logprob: -4.133483409881592
    6. ' one' → logprob: -4.258483409881592
    7. ' an' → logprob: -4.258483409881592
    8. ' spots' → logprob: -4.258483409881592
    9. 'i' → logprob: -4.383483409881592
    10. 'spot' → logprob: -4.883483409881592

Token 479: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.23339854180812836
    2. 'with' → logprob: -1.6083985567092896
    3. '_with' → logprob: -5.6083984375
    4. '[' → logprob: -6.6083984375
    5. ' that' → logprob: -7.2333984375
    6. '       ' → logprob: -7.9833984375
    7. ')' → logprob: -8.2333984375
    8. '	with' → logprob: -8.6083984375
    9. 's' → logprob: -8.9833984375
    10. ' where' → logprob: -9.1083984375

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5929064154624939
    2. ' ' → logprob: -1.9679064750671387
    3. ' exactly' → logprob: -2.0929064750671387
    4. 'l' → logprob: -2.8429064750671387
    5. ' l' → logprob: -3.0929064750671387
    6. ' one' → logprob: -4.092906475067139
    7. 'one' → logprob: -4.717906475067139
    8. '0' → logprob: -4.842906475067139
    9. 'exact' → logprob: -5.092906475067139
    10. 'lower' → logprob: -5.467906475067139

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18430408835411072
    2. 'one' → logprob: -3.0593039989471436
    3. 'exact' → logprob: -3.0593039989471436
    4. ' exactly' → logprob: -3.8093039989471436
    5. 'only' → logprob: -3.9343039989471436
    6. 'l' → logprob: -4.434304237365723
    7. ' ' → logprob: -5.559304237365723
    8. '0' → logprob: -5.809304237365723
    9. 'lower' → logprob: -6.059304237365723
    10. 'None' → logprob: -6.059304237365723

Token 482: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.20252089202404022
    2. ' car' → logprob: -2.4525208473205566
    3. '_car' → logprob: -2.9525208473205566
    4. '車' → logprob: -5.077520847320557
    5. '   ' → logprob: -5.202520847320557
    6. ' cars' → logprob: -5.577520847320557
    7. ')' → logprob: -5.702520847320557
    8. '       ' → logprob: -5.827520847320557
    9. 'cars' → logprob: -5.827520847320557
    10. '_' → logprob: -6.077520847320557

Token 483: ' whose' (ID: 12119)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1758328378200531
    2. '       ' → logprob: -3.300832748413086
    3. '[' → logprob: -3.425832748413086
    4. ' if' → logprob: -3.800832748413086
    5. '   ' → logprob: -4.050832748413086
    6. '<|end|>' → logprob: -4.550832748413086
    7. '<|end|>' → logprob: -5.175832748413086
    8. ' and' → logprob: -5.425832748413086
    9. ' ' → logprob: -5.800832748413086
    10. '[]' → logprob: -6.050832748413086

Token 484: ' remaining' (ID: 15448)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.7719813585281372
    2. 'l' → logprob: -1.5219813585281372
    3. '0' → logprob: -2.3969812393188477
    4. 'u' → logprob: -2.6469812393188477
    5. ' l' → logprob: -3.2719812393188477
    6. ' lower' → logprob: -3.5219812393188477
    7. 'upper' → logprob: -4.396981239318848
    8. '[' → logprob: -4.521981239318848
    9. 'None' → logprob: -4.521981239318848
    10. ' u' → logprob: -4.521981239318848

Token 485: ' parking' (ID: 14472)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.14027640223503113
    2. 'time' → logprob: -2.8902764320373535
    3. '_' → logprob: -3.1402764320373535
    4. '_times' → logprob: -4.3902764320373535
    5. ' time' → logprob: -5.1402764320373535
    6. '[' → logprob: -5.2652764320373535
    7. ')' → logprob: -5.5152764320373535
    8. 'times' → logprob: -6.7652764320373535
    9. ' _' → logprob: -7.7652764320373535
    10. '_remaining' → logprob: -7.7652764320373535

Token 486: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5835677981376648
    2. '_time' → logprob: -0.9585677981376648
    3. '[' → logprob: -3.4585678577423096
    4. ')' → logprob: -4.9585676193237305
    5. 'times' → logprob: -5.2085676193237305
    6. '_times' → logprob: -5.7085676193237305
    7. '_' → logprob: -6.0835676193237305
    8. ' time' → logprob: -6.4585676193237305
    9. '   ' → logprob: -6.9585676193237305
    10. ']' → logprob: -7.3335676193237305

Token 487: ' satisfies' (ID: 126205)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.7908189296722412
    2. '[' → logprob: -1.0408189296722412
    3. ')' → logprob: -2.540818929672241
    4. '<|end|>' → logprob: -3.790818929672241
    5. ' is' → logprob: -4.29081916809082
    6. 'current' → logprob: -5.04081916809082
    7. '<|end|>' → logprob: -5.04081916809082
    8. '[next' → logprob: -5.41581916809082
    9. '[user' → logprob: -5.54081916809082
    10. '>' → logprob: -5.54081916809082

Token 488: ' conditions' (ID: 6409)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3340997695922852
    2. '<|end|>' → logprob: -1.4590997695922852
    3. '       ' → logprob: -2.709099769592285
    4. '[' → logprob: -2.709099769592285
    5. '<|end|>' → logprob: -2.834099769592285
    6. '   ' → logprob: -2.834099769592285
    7. ')' → logprob: -3.209099769592285
    8. '
' → logprob: -3.334099769592285
    9. ' ' → logprob: -3.459099769592285
    10. ':
' → logprob: -3.834099769592285

Token 490: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5673565864562988
    2. '<|end|>' → logprob: -1.1923565864562988
    3. '           ' → logprob: -3.442356586456299
    4. ')' → logprob: -3.692356586456299
    5. '<|end|>' → logprob: -3.942356586456299
    6. ' ' → logprob: -4.192356586456299
    7. '[' → logprob: -4.192356586456299
    8. '        ' → logprob: -5.067356586456299
    9. ' if' → logprob: -5.442356586456299
    10. '   ' → logprob: -6.567356586456299

Token 492: ' So' (ID: 2632)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1938848495483398
    2. ' if' → logprob: -1.4438848495483398
    3. 'for' → logprob: -1.5688848495483398
    4. 'if' → logprob: -1.9438848495483398
    5. '       ' → logprob: -2.69388484954834
    6. 'car' → logprob: -5.06888484954834
    7. '           ' → logprob: -5.31888484954834
    8. '   ' → logprob: -5.44388484954834
    9. 'return' → logprob: -5.44388484954834
    10. ' car' → logprob: -6.19388484954834

Token 494: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5446585416793823
    2. 'if' → logprob: -1.5446585416793823
    3. ' for' → logprob: -2.294658660888672
    4. ' if' → logprob: -3.544658660888672
    5. 'car' → logprob: -3.919658660888672
    6. '       ' → logprob: -4.294658660888672
    7. '#' → logprob: -4.669658660888672
    8. '   ' → logprob: -5.294658660888672
    9. 'return' → logprob: -5.419658660888672
    10. 'remaining' → logprob: -5.419658660888672

Token 495: ' spots' (ID: 25522)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3978549242019653
    2. 'spot' → logprob: -1.6478549242019653
    3. ' spots' → logprob: -2.022854804992676
    4. 'spots' → logprob: -2.522854804992676
    5. '[i' → logprob: -2.647854804992676
    6. ' spot' → logprob: -3.522854804992676
    7. ' for' → logprob: -3.522854804992676
    8. ' i' → logprob: -3.772854804992676
    9. '   ' → logprob: -3.772854804992676
    10. 'pos' → logprob: -3.772854804992676

Token 496: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5840211510658264
    2. 'with' → logprob: -0.8340211510658264
    3. '<|end|>' → logprob: -5.709021091461182
    4. ' that' → logprob: -6.084021091461182
    5. 'that' → logprob: -7.209021091461182
    6. '_with' → logprob: -7.584021091461182
    7. '<|end|>' → logprob: -8.20902156829834
    8. ' where' → logprob: -9.08402156829834
    9. '	with' → logprob: -9.08402156829834
    10. '[' → logprob: -9.20902156829834

Token 497: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5202855467796326
    2. 'have' → logprob: -1.2702856063842773
    3. 'len' → logprob: -2.6452856063842773
    4. 'l' → logprob: -4.270285606384277
    5. ' has' → logprob: -4.770285606384277
    6. ' len' → logprob: -5.020285606384277
    7. 'has' → logprob: -5.270285606384277
    8. '   ' → logprob: -5.395285606384277
    9. ' l' → logprob: -5.395285606384277
    10. ' ' → logprob: -6.645285606384277

Token 498: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -1.0084093809127808
    2. 'l' → logprob: -1.1334093809127808
    3. 'exact' → logprob: -2.5084095001220703
    4. ' l' → logprob: -3.0084095001220703
    5. 'one' → logprob: -3.3834095001220703
    6. 'len' → logprob: -3.3834095001220703
    7. '1' → logprob: -3.3834095001220703
    8. 'only' → logprob: -3.8834095001220703
    9. ' one' → logprob: -4.25840950012207
    10. '(l' → logprob: -4.88340950012207

Token 499: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002134675160050392
    2. ' ' → logprob: -6.627134799957275
    3. 'one' → logprob: -7.877134799957275
    4. ' one' → logprob: -8.127134323120117
    5. '   ' → logprob: -9.752134323120117
    6. '0' → logprob: -10.127134323120117
    7. 'len' → logprob: -10.877134323120117
    8. 'sum' → logprob: -12.627134323120117
    9. '
' → logprob: -13.127134323120117
    10. '  ' → logprob: -13.627134323120117

Token 500: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16488999128341675
    2. ' car' → logprob: -2.0398900508880615
    3. ' None' → logprob: -4.664889812469482
    4. 'None' → logprob: -6.289889812469482
    5. '_car' → logprob: -6.414889812469482
    6. ')' → logprob: -6.789889812469482
    7. 'spot' → logprob: -7.289889812469482
    8. ' ' → logprob: -7.414889812469482
    9. '(car' → logprob: -7.414889812469482
    10. '_' → logprob: -7.664889812469482

Token 501: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2396270036697388
    2. '           ' → logprob: -1.4896270036697388
    3. '<|end|>' → logprob: -1.6146270036697388
    4. '[' → logprob: -2.489626884460449
    5. '<|end|>' → logprob: -2.989626884460449
    6. ' and' → logprob: -3.239626884460449
    7. ' for' → logprob: -4.364626884460449
    8. ')' → logprob: -4.489626884460449
    9. ',' → logprob: -4.614626884460449
    10. ':' → logprob: -4.614626884460449

Token 503: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' (adapté à ' one') → logprob: -0.15199613571166992
    2. ' one' → logprob: -3.27699613571167
    3. '           ' → logprob: -3.40199613571167
    4. '[' → logprob: -4.02699613571167
    5. 'single' → logprob: -4.15199613571167
    6. '       ' → logprob: -4.40199613571167
    7. 'ones' → logprob: -5.15199613571167
    8. '   ' → logprob: -5.40199613571167
    9. '_one' → logprob: -5.90199613571167
    10. '1' → logprob: -6.27699613571167

Token 504: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.013949926011264324
    2. '_c' → logprob: -4.513949871063232
    3. '_sp' → logprob: -6.513949871063232
    4. '_' → logprob: -7.263949871063232
    5. 'car' → logprob: -7.888949871063232
    6. 's' → logprob: -8.63895034790039
    7. '_s' → logprob: -10.26395034790039
    8. '_count' → logprob: -10.63895034790039
    9. '_one' → logprob: -11.01395034790039
    10. ' =' → logprob: -11.51395034790039

Token 505: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.08041279017925262
    2. ' =' → logprob: -2.7054128646850586
    3. '=' → logprob: -4.830412864685059
    4. 'spots' → logprob: -6.830412864685059
    5. 's' → logprob: -7.580412864685059
    6. '_slots' → logprob: -8.580412864685059
    7. '_indices' → logprob: -9.080412864685059
    8. '_' → logprob: -9.205412864685059
    9. '_positions' → logprob: -9.580412864685059
    10. 'Sp' → logprob: -9.705412864685059

Token 506: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.1810046285390854
    2. 'ot' → logprob: -1.8060046434402466
    3. '```' → logprob: -7.681004524230957
    4. '   ' → logprob: -8.056004524230957
    5. 'pots' → logprob: -9.556004524230957
    6. '=' → logprob: -9.806004524230957
    7. '       ' → logprob: -9.931004524230957
    8. 'pot' → logprob: -10.306004524230957
    9. '[' → logprob: -10.618504524230957
    10. 'ost' → logprob: -10.931004524230957

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806604817509651
    2. '=' → logprob: -3.2880661487579346
    3. '=[]' → logprob: -10.913065910339355
    4. '=[' → logprob: -12.663065910339355
    5. ' =[' → logprob: -13.788065910339355
    6. '=[]
' → logprob: -15.038065910339355
    7. '[' → logprob: -15.038065910339355
    8. ']' → logprob: -15.163065910339355
    9. ',' → logprob: -15.288065910339355
    10. ')' → logprob: -15.538065910339355

Token 508: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.022834135219454765
    2. ' [' → logprob: -3.897834062576294
    3. '[' → logprob: -6.147834300994873
    4. '[j' → logprob: -10.772833824157715
    5. '[k' → logprob: -11.022833824157715
    6. '[int' → logprob: -11.022833824157715
    7. '[]
' → logprob: -11.522833824157715
    8. '[x' → logprob: -11.647833824157715
    9. '[e' → logprob: -11.647833824157715
    10. '[len' → logprob: -11.647833824157715

Token 509: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20449194312095642
    2. 'for' → logprob: -2.4544918537139893
    3. '<|end|>' → logprob: -2.8294918537139893
    4. '       ' → logprob: -3.8294918537139893
    5. '<|end|>' → logprob: -4.704492092132568
    6. '           ' → logprob: -5.704492092132568
    7. '[' → logprob: -5.954492092132568
    8. ')' → logprob: -7.579492092132568
    9. ' ' → logprob: -7.954492092132568
    10. ',' → logprob: -8.32949161529541

Token 510: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31922003626823425
    2. ' for' → logprob: -1.3192200660705566
    3. '           ' → logprob: -5.194220066070557
    4. 'i' → logprob: -8.944219589233398
    5. '[i' → logprob: -9.069219589233398
    6. '       ' → logprob: -9.944219589233398
    7. '```' → logprob: -10.819219589233398
    8. ' ' → logprob: -11.819219589233398
    9. ' i' → logprob: -11.819219589233398
    10. '[' → logprob: -11.819219589233398

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008914840407669544
    2. ' i' → logprob: -4.758914947509766
    3. 'idx' → logprob: -8.258914947509766
    4. ' idx' → logprob: -10.758914947509766
    5. '   ' → logprob: -12.008914947509766
    6. 'spot' → logprob: -12.133914947509766
    7. 'pos' → logprob: -12.883914947509766
    8. ' ' → logprob: -13.758914947509766
    9. ' spot' → logprob: -13.883914947509766
    10. '```' → logprob: -14.258914947509766

Token 512: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031705088913440704
    2. ',(' → logprob: -4.281704902648926
    3. ' in' → logprob: -4.406704902648926
    4. 'in' → logprob: -5.531704902648926
    5. ' ,' → logprob: -7.531704902648926
    6. ',s' → logprob: -7.781704902648926
    7. ',[' → logprob: -9.031704902648926
    8. ',in' → logprob: -10.281704902648926
    9. ',line' → logprob: -10.406704902648926
    10. ',v' → logprob: -11.281704902648926

Token 513: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004621780011802912
    2. ' range' → logprob: -5.379621982574463
    3. '   ' → logprob: -14.629621505737305
    4. 'ange' → logprob: -15.129621505737305
    5. '
' → logprob: -15.504621505737305
    6. '(range' → logprob: -15.754621505737305
    7. ' ' → logprob: -15.879621505737305
    8. '```' → logprob: -16.254621505737305
    9. '  ' → logprob: -16.379621505737305
    10. '	range' → logprob: -16.754621505737305

Token 514: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007161272224038839
    2. 'len' → logprob: -7.750716209411621
    3. ' m' → logprob: -8.500716209411621
    4. '(m' → logprob: -10.125716209411621
    5. '       ' → logprob: -10.875716209411621
    6. '           ' → logprob: -11.250716209411621
    7. '   ' → logprob: -12.250716209411621
    8. ' len' → logprob: -13.375716209411621
    9. '(len' → logprob: -13.625716209411621
    10. '               ' → logprob: -14.375716209411621

Token 515: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0022550527937710285
    2. '):' → logprob: -6.127254962921143
    3. '):
' → logprob: -9.8772554397583
    4. ':
' → logprob: -11.6272554397583
    5. '       ' → logprob: -12.7522554397583
    6. ' ):
' → logprob: -13.3772554397583
    7. '   ' → logprob: -13.7522554397583
    8. ':' → logprob: -13.8772554397583
    9. '):

' → logprob: -14.3772554397583
    10. '():
' → logprob: -14.3772554397583

Token 516: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14743086695671082
    2. '   ' → logprob: -3.147430896759033
    3. ' if' → logprob: -3.272430896759033
    4. ',' → logprob: -3.772430896759033
    5. '           ' → logprob: -4.147430896759033
    6. ':' → logprob: -5.272430896759033
    7. ' ' → logprob: -5.647430896759033
    8. '	       ' → logprob: -6.147430896759033
    9. '	   ' → logprob: -6.397430896759033
    10. '<|end|>' → logprob: -6.897430896759033

Token 517: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6758801341056824
    2. '   ' → logprob: -1.1758801937103271
    3. 'if' → logprob: -2.675880193710327
    4. 'l' (adapté à ' l') → logprob: -3.300880193710327
    5. ' if' → logprob: -3.675880193710327
    6. 'car' → logprob: -4.050879955291748
    7. 'cars' → logprob: -4.550879955291748
    8. 'count' → logprob: -5.175879955291748
    9. 'lower' → logprob: -5.675879955291748
    10. 'spots' → logprob: -6.300879955291748

Token 518: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0127626657485962
    2. ' =' → logprob: -1.3877626657485962
    3. 'if' → logprob: -2.1377625465393066
    4. '=' → logprob: -2.5127625465393066
    5. 'car' → logprob: -3.3877625465393066
    6. '   ' → logprob: -3.3877625465393066
    7. 'ower' → logprob: -3.5127625465393066
    8. 'spots' → logprob: -3.7627625465393066
    9. '       ' → logprob: -3.8877625465393066
    10. ' if' → logprob: -4.137762546539307

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25589630007743835
    2. ' =' → logprob: -1.5058963298797607
    3. ' is' → logprob: -6.005896091461182
    4. '=None' → logprob: -7.005896091461182
    5. 'is' → logprob: -8.38089656829834
    6. 'if' → logprob: -9.75589656829834
    7. ')' → logprob: -9.75589656829834
    8. ' ' → logprob: -10.00589656829834
    9. ' None' → logprob: -10.13089656829834
    10. 'None' → logprob: -10.25589656829834

Token 520: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.005279653239995241
    2. ' spots' → logprob: -5.255279541015625
    3. 'sp' → logprob: -10.255279541015625
    4. 'spot' → logprob: -12.005279541015625
    5. '   ' → logprob: -13.880279541015625
    6. 'pots' → logprob: -14.005279541015625
    7. 's' → logprob: -14.380279541015625
    8. 'slots' → logprob: -15.005279541015625
    9. '
' → logprob: -15.505279541015625
    10. 'spo' → logprob: -15.630279541015625

Token 521: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. 'i' → logprob: -11.75001049041748
    3. '][' → logprob: -13.75001049041748
    4. ')[' → logprob: -14.50001049041748
    5. '       ' → logprob: -15.12501049041748
    6. '   ' → logprob: -15.75001049041748
    7. '[' → logprob: -15.75001049041748
    8. '           ' → logprob: -16.000011444091797
    9. '(i' → logprob: -16.500011444091797
    10. '```' → logprob: -16.500011444091797

Token 522: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.09627660363912582
    2. ')
' → logprob: -2.9712765216827393
    3. ']' → logprob: -3.3462765216827393
    4. ')' → logprob: -6.096276760101318
    5. '][' → logprob: -7.096276760101318
    6. '               ' → logprob: -7.596276760101318
    7. '           ' → logprob: -7.596276760101318
    8. '       ' → logprob: -7.971276760101318
    9. ']
' → logprob: -8.47127628326416
    10. '])
' → logprob: -8.59627628326416

Token 523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009916032431647182
    2. '           ' → logprob: -7.7509918212890625
    3. 'if' → logprob: -8.375991821289062
    4. ' if' → logprob: -8.750991821289062
    5. ',' → logprob: -10.125991821289062
    6. 'car' → logprob: -10.875991821289062
    7. '       ' → logprob: -11.000991821289062
    8. '   ' → logprob: -11.250991821289062
    9. '	           ' → logprob: -11.625991821289062
    10. ' car' → logprob: -11.750991821289062

Token 524: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3773714005947113
    2. 'count' (adapté à ' count') → logprob: -1.8773714303970337
    3. '           ' → logprob: -2.627371311187744
    4. 'car' → logprob: -3.377371311187744
    5. '               ' → logprob: -4.127371311187744
    6. 'one' → logprob: -4.252371311187744
    7. ' if' → logprob: -4.752371311187744
    8. 'ones' → logprob: -5.627371311187744
    9. 'cars' → logprob: -5.877371311187744
    10. 'num' → logprob: -6.127371311187744

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3158220052719116
    2. ' =' → logprob: -1.4408220052719116
    3. ' +=' → logprob: -4.190822124481201
    4. '+=' → logprob: -5.315822124481201
    5. '==' → logprob: -5.565822124481201
    6. '(' → logprob: -5.690822124481201
    7. ' ==' → logprob: -6.065822124481201
    8. '(l' → logprob: -7.065822124481201
    9. 'if' → logprob: -7.440822124481201
    10. ')' → logprob: -7.815822124481201

Token 526: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6866704225540161
    2. '0' → logprob: -1.1866704225540161
    3. 'sum' → logprob: -2.5616703033447266
    4. '(int' → logprob: -3.1866703033447266
    5. ' (' → logprob: -3.5616703033447266
    6. '(sum' → logprob: -4.186670303344727
    7. 'int' → logprob: -4.436670303344727
    8. '(' → logprob: -4.811670303344727
    9. '1' → logprob: -6.061670303344727
    10. ' sum' → logprob: -6.561670303344727

Token 527: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.10027536004781723
    2. '1' → logprob: -2.7252752780914307
    3. 'int' → logprob: -4.35027551651001
    4. '0' → logprob: -4.85027551651001
    5. ' (' → logprob: -5.97527551651001
    6. 'l' → logprob: -6.10027551651001
    7. '(' → logprob: -6.72527551651001
    8. '(int' → logprob: -6.72527551651001
    9. '[l' → logprob: -7.10027551651001
    10. '(i' → logprob: -7.60027551651001

Token 528: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25708380341529846
    2. 'is' → logprob: -1.507083773612976
    3. '1' → logprob: -7.132083892822266
    4. ' or' → logprob: -7.132083892822266
    5. '[' → logprob: -7.507083892822266
    6. ' ' → logprob: -7.507083892822266
    7. 'if' → logprob: -7.632083892822266
    8. 'or' → logprob: -7.632083892822266
    9. '==' → logprob: -7.757083892822266
    10. '   ' → logprob: -8.132083892822266

Token 529: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0548945814371109
    2. ' not' → logprob: -2.9298946857452393
    3. '!' → logprob: -13.05489444732666
    4. '   ' → logprob: -13.42989444732666
    5. ')' → logprob: -13.67989444732666
    6. ' ' → logprob: -13.92989444732666
    7. 'Not' → logprob: -14.17989444732666
    8. '    ' → logprob: -14.30489444732666
    9. 'None' → logprob: -14.42989444732666
    10. '	not' → logprob: -14.42989444732666

Token 530: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.018865184858441353
    2. ' not' → logprob: -4.01886510848999
    3. 'None' → logprob: -7.26886510848999
    4. '   ' → logprob: -11.768865585327148
    5. '    ' → logprob: -12.268865585327148
    6. 'Not' → logprob: -13.268865585327148
    7. ' ' → logprob: -14.018865585327148
    8. '  ' → logprob: -14.768865585327148
    9. ' None' → logprob: -14.893865585327148
    10. '[' → logprob: -15.268865585327148

Token 531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18112826347351074
    2. ')+' → logprob: -2.4311282634735107
    3. ')+(' → logprob: -2.5561282634735107
    4. '+' → logprob: -9.43112850189209
    5. 'and' → logprob: -10.68112850189209
    6. ' )' → logprob: -11.80612850189209
    7. ' and' → logprob: -12.05612850189209
    8. ')
' → logprob: -12.93112850189209
    9. ' +' → logprob: -13.68112850189209
    10. '+)' → logprob: -13.80612850189209

Token 532: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03814350441098213
    2. ' +' → logprob: -3.2881433963775635
    3. '+(' → logprob: -9.288143157958984
    4. '               ' → logprob: -12.038143157958984
    5. '+[' → logprob: -14.038143157958984
    6. ')+(' → logprob: -14.538143157958984
    7. '+
' → logprob: -14.663143157958984
    8. ')+' → logprob: -14.788143157958984
    9. '+x' → logprob: -15.413143157958984
    10. '()+' → logprob: -15.538143157958984

Token 533: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.049123652279376984
    2. ' (' → logprob: -3.049123764038086
    3. '   ' → logprob: -8.049123764038086
    4. '           ' → logprob: -9.924123764038086
    5. '               ' → logprob: -9.924123764038086
    6. '       ' → logprob: -10.799123764038086
    7. '(' → logprob: -10.924123764038086
    8. '              ' → logprob: -11.424123764038086
    9. ' ' → logprob: -11.674123764038086
    10. '          ' → logprob: -11.799123764038086

Token 534: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006814827676862478
    2. '(u' → logprob: -5.631814956665039
    3. ' u' → logprob: -5.881814956665039
    4. '   ' → logprob: -8.131814956665039
    5. ' (' → logprob: -10.256814956665039
    6. '1' → logprob: -11.256814956665039
    7. '  ' → logprob: -11.631814956665039
    8. '       ' → logprob: -11.631814956665039
    9. ' ' → logprob: -11.631814956665039
    10. '	u' → logprob: -11.756814956665039

Token 535: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03807443380355835
    2. 'is' → logprob: -3.288074493408203
    3. '1' → logprob: -12.038074493408203
    4. ' ' → logprob: -12.288074493408203
    5. ' not' → logprob: -12.288074493408203
    6. ')' → logprob: -12.288074493408203
    7. 'not' → logprob: -12.538074493408203
    8. 'None' → logprob: -12.663074493408203
    9. '[' → logprob: -13.288074493408203
    10. '0' → logprob: -14.038074493408203

Token 536: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048852138221263885
    2. ' not' → logprob: -3.0488522052764893
    3. 'None' → logprob: -8.29885196685791
    4. '1' → logprob: -12.04885196685791
    5. '   ' → logprob: -13.17385196685791
    6. ' None' → logprob: -13.54885196685791
    7. ' ' → logprob: -13.67385196685791
    8. 'False' → logprob: -14.04885196685791
    9. 'none' → logprob: -14.17385196685791
    10. 'Not' → logprob: -14.29885196685791

Token 537: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002088165609166026
    2. 'not' → logprob: -6.7520880699157715
    3. ' None' → logprob: -7.0020880699157715
    4. ' not' → logprob: -12.12708854675293
    5. 'none' → logprob: -13.50208854675293
    6. '   ' → logprob: -15.50208854675293
    7. 'False' → logprob: -15.87708854675293
    8. '(None' → logprob: -16.12708854675293
    9. '_None' → logprob: -16.50208854675293
    10. '_none' → logprob: -17.12708854675293

Token 538: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31447702646255493
    2. ')' → logprob: -1.3144769668579102
    3. '           ' → logprob: -7.31447696685791
    4. '               ' → logprob: -7.68947696685791
    5. ')
' → logprob: -10.18947696685791
    6. '       ' → logprob: -11.31447696685791
    7. ')

' → logprob: -11.56447696685791
    8. ' )
' → logprob: -11.93947696685791
    9. '<|end|>' → logprob: -12.18947696685791
    10. '
' → logprob: -12.93947696685791

Token 539: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000989699736237526
    2. '<|end|>' → logprob: -7.25098991394043
    3. '<|end|>' → logprob: -9.37598991394043
    4. '           ' → logprob: -9.37598991394043
    5. '[' → logprob: -10.75098991394043
    6. '		       ' → logprob: -11.25098991394043
    7. ' if' → logprob: -11.37598991394043
    8. ',' → logprob: -11.37598991394043
    9. ')' → logprob: -11.50098991394043
    10. '
' → logprob: -12.12598991394043

Token 540: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04152161255478859
    2. '           ' → logprob: -3.4165215492248535
    3. 'if' (adapté à ' if') → logprob: -5.4165215492248535
    4. ' if' → logprob: -6.0415215492248535
    5. '       ' → logprob: -7.5415215492248535
    6. '<|end|>' → logprob: -8.541522026062012
    7. ' ' → logprob: -9.791522026062012
    8. '   ' → logprob: -10.166522026062012
    9. '<|end|>' → logprob: -10.166522026062012
    10. 'If' → logprob: -10.291522026062012

Token 541: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.061972394585609436
    2. ' count' → logprob: -2.8119723796844482
    3. ' ' → logprob: -13.186972618103027
    4. '   ' → logprob: -13.311972618103027
    5. '	count' → logprob: -14.561972618103027
    6. '(count' → logprob: -15.561972618103027
    7. '  ' → logprob: -15.561972618103027
    8. '[count' → logprob: -16.43697166442871
    9. '    ' → logprob: -17.06197166442871
    10. '<count' → logprob: -17.43697166442871

Token 542: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03805537521839142
    2. ' ==' → logprob: -3.288055419921875
    3. '1' → logprob: -12.163055419921875
    4. '()==' → logprob: -12.538055419921875
    5. '===' → logprob: -13.413055419921875
    6. ']==' → logprob: -13.788055419921875
    7. ')==' → logprob: -14.163055419921875
    8. '==
' → logprob: -14.163055419921875
    9. '=' → logprob: -14.288055419921875
    10. ' ' → logprob: -14.788055419921875

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.000036239624023
    4. '```' → logprob: -16.312536239624023
    5. '0' → logprob: -17.187536239624023
    6. '=' → logprob: -17.187536239624023
    7. '  ' → logprob: -17.250036239624023
    8. '۱' → logprob: -17.812536239624023
    9. '１' → logprob: -17.875036239624023
    10. '2' → logprob: -17.937536239624023

Token 544: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5907261967658997
    2. ':' → logprob: -1.2157261371612549
    3. ' and' → logprob: -2.840726137161255
    4. '           ' → logprob: -2.965726137161255
    5. '               ' → logprob: -3.590726137161255
    6. '                   ' → logprob: -4.590726375579834
    7. '<|end|>' → logprob: -7.965726375579834
    8. '):
' → logprob: -8.090725898742676
    9. ',' → logprob: -8.340725898742676
    10. 'and' → logprob: -8.840725898742676

Token 545: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11886610835790634
    2. '                   ' → logprob: -2.743866205215454
    3. ' one' → logprob: -3.243866205215454
    4. 'one' → logprob: -4.993865966796875
    5. '           ' → logprob: -6.493865966796875
    6. '(one' → logprob: -9.618865966796875
    7. ',' → logprob: -9.743865966796875
    8. '   ' → logprob: -9.993865966796875
    9. ':
' → logprob: -10.243865966796875
    10. ' and' → logprob: -10.618865966796875

Token 546: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' (adapté à ' one') → logprob: -0.08699823915958405
    2. '               ' → logprob: -3.211998224258423
    3. ' one' → logprob: -3.586998224258423
    4. 'if' → logprob: -5.211998462677002
    5. 'car' → logprob: -5.211998462677002
    6. '           ' → logprob: -6.711998462677002
    7. ' if' → logprob: -7.336998462677002
    8. 'spot' → logprob: -7.586998462677002
    9. '                   ' → logprob: -7.711998462677002
    10. '#' → logprob: -8.336997985839844

Token 547: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0008727516396902502
    2. '           ' → logprob: -7.750872611999512
    3. 'car' → logprob: -8.500872611999512
    4. '_c' → logprob: -9.125872611999512
    5. '               ' → logprob: -10.375872611999512
    6. '   ' → logprob: -10.875872611999512
    7. '       ' → logprob: -11.000872611999512
    8. '                   ' → logprob: -11.500872611999512
    9. 'Car' → logprob: -12.375872611999512
    10. '```' → logprob: -12.500872611999512

Token 548: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.010630486533045769
    2. 'sp' → logprob: -4.7606306076049805
    3. 'spots' → logprob: -6.6356306076049805
    4. 's' → logprob: -7.5106306076049805
    5. '.append' → logprob: -9.51063060760498
    6. 'Sp' → logprob: -10.26063060760498
    7. '```' → logprob: -11.76063060760498
    8. 'spot' → logprob: -12.26063060760498
    9. '_s' → logprob: -12.26063060760498
    10. '.sp' → logprob: -12.63563060760498

Token 549: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0009273029863834381
    2. '```' → logprob: -8.250926971435547
    3. 'ts' → logprob: -8.875926971435547
    4. 'orts' → logprob: -9.000926971435547
    5. 'ot' → logprob: -9.625926971435547
    6. 'pots' → logprob: -10.438426971435547
    7. '[' → logprob: -10.500926971435547
    8. '   ' → logprob: -10.563426971435547
    9. 'ost' → logprob: -10.750926971435547
    10. '=' → logprob: -10.875926971435547

Token 550: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014656837447546422
    2. '.' → logprob: -9.000146865844727
    3. 'append' → logprob: -11.250146865844727
    4. '                   ' → logprob: -12.750146865844727
    5. ' .' → logprob: -12.750146865844727
    6. '().' → logprob: -13.625146865844727
    7. '               ' → logprob: -13.625146865844727
    8. '           ' → logprob: -14.500146865844727
    9. '                       ' → logprob: -15.000146865844727
    10. 'Append' → logprob: -15.625146865844727

Token 551: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01417080033570528
    2. 'i' → logprob: -4.2641706466674805
    3. ' i' → logprob: -12.13917064666748
    4. '(' → logprob: -14.13917064666748
    5. ' (' → logprob: -14.26417064666748
    6. '((' → logprob: -14.76417064666748
    7. '[i' → logprob: -16.264171600341797
    8. '   ' → logprob: -16.889171600341797
    9. '(
' → logprob: -17.514171600341797
    10. ',i' → logprob: -17.764171600341797

Token 552: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016760177677497268
    2. '<|end|>' → logprob: -6.501676082611084
    3. '<|end|>' → logprob: -9.626675605773926
    4. ' )' → logprob: -9.876675605773926
    5. ')
' → logprob: -10.251675605773926
    6. ')return' → logprob: -12.126675605773926
    7. '[' → logprob: -12.251675605773926
    8. ']' → logprob: -13.626675605773926
    9. '           ' → logprob: -13.751675605773926
    10. '')' → logprob: -13.751675605773926

Token 553: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07316629588603973
    2. '<|end|>' → logprob: -3.6981663703918457
    3. '           ' → logprob: -4.073166370391846
    4. ' for' → logprob: -4.698166370391846
    5. '
' → logprob: -4.823166370391846
    6. '   ' → logprob: -5.823166370391846
    7. '<|end|>' → logprob: -6.448166370391846
    8. ' if' → logprob: -6.573166370391846
    9. '        
' → logprob: -6.698166370391846
    10. 'for' → logprob: -6.948166370391846

Token 554: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7912226915359497
    2. 'one' → logprob: -1.2912226915359497
    3. '           ' → logprob: -1.9162226915359497
    4. 'if' → logprob: -2.91622257232666
    5. ' for' → logprob: -3.54122257232666
    6. '       ' → logprob: -4.41622257232666
    7. 'car' → logprob: -4.54122257232666
    8. '#' → logprob: -5.79122257232666
    9. 'valid' → logprob: -6.04122257232666
    10. ' one' → logprob: -6.04122257232666

Token 555: 'time' (ID: 4580)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4869077503681183
    2. 'for' → logprob: -1.111907720565796
    3. 'andidates' → logprob: -3.236907720565796
    4. '#' → logprob: -5.361907958984375
    5. 'andidate' → logprob: -5.486907958984375
    6. 'and' → logprob: -5.611907958984375
    7. ' for' → logprob: -6.236907958984375
    8. 'urrent' → logprob: -7.611907958984375
    9. 'ars' → logprob: -7.611907958984375
    10. '=' → logprob: -8.111907958984375

Token 556: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5800949931144714
    2. 'urrent' → logprob: -1.2050950527191162
    3. '=' → logprob: -2.580095052719116
    4. ' =' → logprob: -3.080095052719116
    5. '=current' → logprob: -4.455094814300537
    6. 'ur' → logprob: -6.580094814300537
    7. 'r' → logprob: -6.830094814300537
    8. '_current' → logprob: -6.955094814300537
    9. 'urr' → logprob: -6.955094814300537
    10. '_' → logprob: -6.955094814300537

Token 557: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.02238437719643116
    2. 'car' → logprob: -4.522384166717529
    3. ' park' → logprob: -4.647384166717529
    4. 'current' → logprob: -7.147384166717529
    5. 'time' → logprob: -7.772384166717529
    6. ' car' → logprob: -9.147384643554688
    7. 'parking' → logprob: -9.647384643554688
    8. ' current' → logprob: -9.772384643554688
    9. 'max' → logprob: -9.897384643554688
    10. 'int' → logprob: -9.897384643554688

Token 558: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.3663626305060461e-05
    2. '_car' → logprob: -11.25001335144043
    3. 'time' → logprob: -14.62501335144043
    4. '_' → logprob: -17.12501335144043
    5. 'car' → logprob: -17.62501335144043
    6. '   ' → logprob: -17.75001335144043
    7. '_times' → logprob: -18.37501335144043
    8. '_token' → logprob: -18.62501335144043
    9. ' time' → logprob: -19.00001335144043
    10. '_TIME' → logprob: -19.37501335144043

Token 559: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10838795453310013
    2. '           ' → logprob: -2.6083879470825195
    3. '+' → logprob: -4.8583879470825195
    4. '<|end|>' → logprob: -4.8583879470825195
    5. '            
' → logprob: -5.3583879470825195
    6. '<|end|>' → logprob: -5.4833879470825195
    7. ' +' → logprob: -6.9833879470825195
    8. '       ' → logprob: -7.3583879470825195
    9. ' 
' → logprob: -7.6083879470825195
    10. '
' → logprob: -7.7333879470825195

Token 560: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0345139503479004
    2. ' 
' → logprob: -1.6595139503479004
    3. '
' → logprob: -2.2845139503479004
    4. ' car' → logprob: -2.5345139503479004
    5. ' current' → logprob: -2.6595139503479004
    6. 'current' → logprob: -3.1595139503479004
    7. '<|end|>' → logprob: -3.1595139503479004
    8. ' if' → logprob: -3.2845139503479004
    9. ' for' → logprob: -4.4095139503479
    10. ')' → logprob: -4.5345139503479

Token 561: ' leave' (ID: 7668)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.29316991567611694
    2. ' current' → logprob: -2.4181699752807617
    3. 'car' → logprob: -3.0431699752807617
    4. ' car' → logprob: -3.6681699752807617
    5. 'next' → logprob: -4.043169975280762
    6. ' next' → logprob: -4.168169975280762
    7. 'time' → logprob: -4.793169975280762
    8. 'input' → logprob: -5.543169975280762
    9. 'import' → logprob: -5.668169975280762
    10. 'while' → logprob: -5.793169975280762

Token 562: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0017157548572868109
    2. '_' → logprob: -6.501715660095215
    3. 'time' → logprob: -9.126715660095215
    4. ')' → logprob: -9.876715660095215
    5. ' time' → logprob: -10.751715660095215
    6. ' _' → logprob: -11.501715660095215
    7. ')_' → logprob: -12.126715660095215
    8. '_token' → logprob: -12.251715660095215
    9. '_times' → logprob: -12.876715660095215
    10. '   ' → logprob: -13.001715660095215

Token 563: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' new' (ID: 620)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.17320279777050018
    2. ' car' → logprob: -3.0482027530670166
    3. 'times' → logprob: -3.4232027530670166
    4. ' the' → logprob: -3.9232027530670166
    5. 'the' → logprob: -4.298202991485596
    6. ' times' → logprob: -4.298202991485596
    7. 'waiting' → logprob: -5.048202991485596
    8. 'park' → logprob: -5.173202991485596
    9. ' waiting' → logprob: -5.673202991485596
    10. ' spots' → logprob: -6.298202991485596

Token 565: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10161590576171875
    2. ' car' → logprob: -2.6016159057617188
    3. '_car' → logprob: -4.351615905761719
    4. '_time' → logprob: -5.726615905761719
    5. 'time' → logprob: -6.101615905761719
    6. '(car' → logprob: -6.226615905761719
    7. '   ' → logprob: -8.101615905761719
    8. '[' → logprob: -8.226615905761719
    9. ')' → logprob: -8.226615905761719
    10. ' time' → logprob: -8.726615905761719

Token 566: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021535951644182205
    2. '<|end|>' → logprob: -4.896535873413086
    3. '
' → logprob: -5.021535873413086
    4. ' for' → logprob: -5.896535873413086
    5. '<|end|>' → logprob: -6.646535873413086
    6. '            
' → logprob: -7.021535873413086
    7. '       ' → logprob: -8.146535873413086
    8. 'token' → logprob: -8.271535873413086
    9. 'tokens' → logprob: -8.271535873413086
    10. 'for' → logprob: -8.521535873413086

Token 568: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5557224750518799
    2. ' for' → logprob: -1.3057224750518799
    3. '           ' → logprob: -1.9307224750518799
    4. '
' → logprob: -6.430722236633301
    5. 'one' → logprob: -6.805722236633301
    6. ' one' → logprob: -6.930722236633301
    7. '#' (adapté à ' #') → logprob: -6.930722236633301
    8. '   ' → logprob: -7.055722236633301
    9. '       ' → logprob: -7.180722236633301
    10. 'candidate' → logprob: -7.430722236633301

Token 569: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2496972680091858
    2. ' for' → logprob: -1.999697208404541
    3. '           ' → logprob: -3.124697208404541
    4. 'c' → logprob: -4.624697208404541
    5. ' candidates' → logprob: -4.999697208404541
    6. 'one' → logprob: -5.124697208404541
    7. '#' → logprob: -5.499697208404541
    8. '       ' → logprob: -5.624697208404541
    9. 'candidate' → logprob: -5.749697208404541
    10. ' one' → logprob: -6.249697208404541

Token 570: ' these' (ID: 1879)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.38312211632728577
    2. ' spot' → logprob: -1.3831220865249634
    3. 'i' → logprob: -2.883122205734253
    4. ' i' → logprob: -5.383121967315674
    5. 's' → logprob: -5.758121967315674
    6. 'pos' → logprob: -6.633121967315674
    7. ' s' → logprob: -7.008121967315674
    8. 'sp' → logprob: -7.883121967315674
    9. ' sp' → logprob: -8.508122444152832
    10. 'car' → logprob: -8.633122444152832

Token 571: ' spots' (ID: 25522)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7452789545059204
    2. 'spot' → logprob: -1.2452789545059204
    3. 'spots' → logprob: -2.495278835296631
    4. ' spots' → logprob: -2.620278835296631
    5. ' i' → logprob: -3.620278835296631
    6. ' spot' → logprob: -3.620278835296631
    7. ' one' → logprob: -4.370278835296631
    8. 'one' → logprob: -5.120278835296631
    9. 's' → logprob: -5.495278835296631
    10. ' for' → logprob: -6.245278835296631

Token 572: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7951658964157104
    2. ',' → logprob: -0.9201658964157104
    3. ':' → logprob: -2.420166015625
    4. '<|end|>' → logprob: -3.670166015625
    5. '<|end|>' → logprob: -4.295166015625
    6. ' for' → logprob: -4.670166015625
    7. ':
' → logprob: -5.545166015625
    8. 'for' → logprob: -6.420166015625
    9. '...' → logprob: -7.295166015625
    10. '[' → logprob: -7.420166015625

Token 573: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.03521115705370903
    2. ' one' → logprob: -3.4102110862731934
    3. '1' → logprob: -7.035211086273193
    4. 'car' → logprob: -8.285211563110352
    5. 'exact' → logprob: -8.785211563110352
    6. 'count' → logprob: -9.660211563110352
    7. ' ' → logprob: -9.910211563110352
    8. ' exactly' → logprob: -9.910211563110352
    9. 'i' → logprob: -10.785211563110352
    10. 'len' → logprob: -10.910211563110352

Token 574: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.047079816460609436
    2. 'car' → logprob: -3.4220798015594482
    3. ' car' → logprob: -4.797080039978027
    4. '   ' → logprob: -6.172080039978027
    5. '           ' → logprob: -6.797080039978027
    6. '-car' → logprob: -7.797080039978027
    7. '_c' → logprob: -7.797080039978027
    8. '       ' → logprob: -8.797080039978027
    9. ')' → logprob: -9.172080039978027
    10. '(car' → logprob: -9.297080039978027

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6818574070930481
    2. '           ' → logprob: -0.8068574070930481
    3. ':' → logprob: -3.5568573474884033
    4. ':
' → logprob: -5.056857585906982
    5. ' for' → logprob: -5.056857585906982
    6. '<|end|>' → logprob: -6.306857585906982
    7. '<|end|>' → logprob: -7.056857585906982
    8. 'for' → logprob: -7.181857585906982
    9. ',
' → logprob: -7.681857585906982
    10. '   ' → logprob: -7.931857585906982

Token 576: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48130062222480774
    2. 'for' → logprob: -1.1063005924224854
    3. '           ' → logprob: -4.1063008308410645
    4. ' best' → logprob: -4.7313008308410645
    5. ' min' → logprob: -4.9813008308410645
    6. ' candidates' → logprob: -5.6063008308410645
    7. 'min' → logprob: -5.8563008308410645
    8. ' one' → logprob: -5.9813008308410645
    9. 'best' → logprob: -6.3563008308410645
    10. ' candidate' → logprob: -6.7313008308410645

Token 577: ' difference' (ID: 9809)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1851917505264282
    2. 'min' → logprob: -2.0601916313171387
    3. 'best' → logprob: -2.5601916313171387
    4. 'one' → logprob: -2.8101916313171387
    5. 'wait' → logprob: -2.8101916313171387
    6. 'remaining' → logprob: -2.9351916313171387
    7. 'c' → logprob: -2.9351916313171387
    8. 'possible' → logprob: -3.1851916313171387
    9. 'candidate' → logprob: -3.5601916313171387
    10. 'the' → logprob: -3.8101916313171387

Token 578: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2307460308074951
    2. ' in' → logprob: -1.4807460308074951
    3. ' between' → logprob: -2.855746030807495
    4. ' for' → logprob: -3.105746030807495
    5. '<|end|>' → logprob: -3.230746030807495
    6. ' =' → logprob: -3.355746030807495
    7. '<|end|>' → logprob: -3.605746030807495
    8. '[]' → logprob: -3.730746030807495
    9. '           ' → logprob: -3.855746030807495
    10. ' of' → logprob: -3.855746030807495

Token 579: ' existing' (ID: 9595)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.7175257802009583
    2. 'the' → logprob: -2.7175257205963135
    3. ' remaining' → logprob: -2.7175257205963135
    4. 'times' → logprob: -2.7175257205963135
    5. 'existing' → logprob: -3.0925257205963135
    6. 'ctime' → logprob: -3.3425257205963135
    7. 'car' → logprob: -3.7175257205963135
    8. 'current' → logprob: -3.7175257205963135
    9. 'waiting' → logprob: -3.7175257205963135
    10. 'c' → logprob: -3.8425257205963135

Token 580: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.1579817533493042
    2. 'times' → logprob: -2.0329818725585938
    3. ' car' → logprob: -2.1579818725585938
    4. ' times' → logprob: -2.9079818725585938
    5. '_time' → logprob: -3.1579818725585938
    6. '           ' → logprob: -3.1579818725585938
    7. '_car' → logprob: -3.4079818725585938
    8. 'cars' → logprob: -3.4079818725585938
    9. '[' → logprob: -3.5329818725585938
    10. '_times' → logprob: -3.6579818725585938

Token 581: '(s' (ID: 1858)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4788273274898529
    2. '           ' → logprob: -2.2288272380828857
    3. ' in' → logprob: -2.4788272380828857
    4. '[' → logprob: -3.6038272380828857
    5. ',' → logprob: -3.7288272380828857
    6. '...' → logprob: -4.103827476501465
    7. ''s' → logprob: -4.353827476501465
    8. '.' → logprob: -4.478827476501465
    9. ' and' → logprob: -4.728827476501465
    10. ').' → logprob: -4.728827476501465

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7056587934494019
    2. '<|end|>' → logprob: -0.8306587934494019
    3. '<|end|>' → logprob: -3.0806589126586914
    4. '
' → logprob: -5.455658912658691
    5. ' tokens' → logprob: -5.455658912658691
    6. '               ' → logprob: -6.455658912658691
    7. '...' → logprob: -6.705658912658691
    8. ' and' → logprob: -6.705658912658691
    9. 'tokens' → logprob: -6.705658912658691
    10. '            
' → logprob: -6.705658912658691

Token 584: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47034943103790283
    2. ' for' → logprob: -1.5953494310379028
    3. 'diff' → logprob: -2.7203493118286133
    4. '
' → logprob: -3.4703493118286133
    5. ' min' → logprob: -3.8453493118286133
    6. 'for' → logprob: -4.220349311828613
    7. ' diff' → logprob: -5.220349311828613
    8. 'min' → logprob: -5.470349311828613
    9. ' one' → logprob: -5.720349311828613
    10. '            
' → logprob: -5.845349311828613

Token 585: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2824150323867798
    2. 'for' → logprob: -1.5324150323867798
    3. 'diff' → logprob: -1.7824150323867798
    4. '           ' → logprob: -2.0324149131774902
    5. ' min' → logprob: -2.7824149131774902
    6. 'min' → logprob: -2.9074149131774902
    7. 'dif' → logprob: -3.7824149131774902
    8. ' diff' → logprob: -4.15741491317749
    9. 'best' → logprob: -4.65741491317749
    10. ' best' → logprob: -4.78241491317749

Token 586: ' difference' (ID: 9809)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8635774850845337
    2. 'spot' → logprob: -1.1135774850845337
    3. ' spot' → logprob: -1.6135774850845337
    4. ' i' → logprob: -3.238577365875244
    5. 's' → logprob: -5.988577365875244
    6. 'pos' → logprob: -6.238577365875244
    7. 'car' → logprob: -6.613577365875244
    8. ' s' → logprob: -7.113577365875244
    9. 'one' → logprob: -7.113577365875244
    10. ' one' → logprob: -7.363577365875244

Token 587: ' calculation' (ID: 40722)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7246025204658508
    2. 's' → logprob: -1.849602460861206
    3. ',' → logprob: -1.974602460861206
    4. ' for' → logprob: -3.349602460861206
    5. ' spots' → logprob: -3.724602460861206
    6. 'for' → logprob: -3.724602460861206
    7. '=' → logprob: -3.974602460861206
    8. ' =' → logprob: -4.099602699279785
    9. 'in' → logprob: -4.099602699279785
    10. ' between' → logprob: -4.224602699279785

Token 588: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3057268261909485
    2. '<|end|>' → logprob: -2.0557267665863037
    3. '<|end|>' → logprob: -2.6807267665863037
    4. '
' → logprob: -3.6807267665863037
    5. ',' → logprob: -3.9307267665863037
    6. ':' → logprob: -5.430727005004883
    7. ' for' → logprob: -5.805727005004883
    8. ' in' → logprob: -6.055727005004883
    9. '...' → logprob: -6.430727005004883
    10. ':
' → logprob: -7.055727005004883

Token 589: ' use' (ID: 1199)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6806643605232239
    2. 'for' → logprob: -1.555664300918579
    3. '           ' → logprob: -2.555664300918579
    4. ' min' → logprob: -3.430664300918579
    5. 'min' → logprob: -3.430664300918579
    6. ' car' → logprob: -3.805664300918579
    7. '#' → logprob: -3.930664300918579
    8. ' best' → logprob: -4.680664539337158
    9. 'diff' → logprob: -4.680664539337158
    10. 'car' → logprob: -4.805664539337158

Token 590: ' existing' (ID: 9595)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3592030704021454
    2. ' current' → logprob: -2.4842031002044678
    3. 'ctime' → logprob: -3.1092031002044678
    4. 'remaining' → logprob: -3.3592031002044678
    5. 'max' → logprob: -3.4842031002044678
    6. 'park' → logprob: -3.9842031002044678
    7. 'times' → logprob: -4.109202861785889
    8. 'car' → logprob: -4.234202861785889
    9. 'time' → logprob: -4.484202861785889
    10. ' times' → logprob: -5.109202861785889

Token 591: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7862985134124756
    2. '_time' → logprob: -1.4112985134124756
    3. '_car' → logprob: -2.4112985134124756
    4. 'cars' → logprob: -3.1612985134124756
    5. 'times' → logprob: -3.4112985134124756
    6. 'time' → logprob: -3.9112985134124756
    7. '[' → logprob: -3.9112985134124756
    8. ' car' → logprob: -3.9112985134124756
    9. ' spots' → logprob: -4.911298751831055
    10. '_times' → logprob: -5.036298751831055

Token 592: ' remaining' (ID: 15448)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5080416798591614
    2. 's' → logprob: -2.0080416202545166
    3. '<|end|>' → logprob: -2.3830416202545166
    4. ')' → logprob: -3.0080416202545166
    5. ''s' → logprob: -3.6330416202545166
    6. '_id' → logprob: -4.258041858673096
    7. '<|end|>' → logprob: -4.508041858673096
    8. '_time' → logprob: -4.508041858673096
    9. '   ' → logprob: -4.758041858673096
    10. 'time' → logprob: -4.883041858673096

Token 593: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1336926966905594
    2. '_' → logprob: -2.258692741394043
    3. '_times' → logprob: -4.258692741394043
    4. ')' → logprob: -6.258692741394043
    5. '[' → logprob: -7.258692741394043
    6. 'time' → logprob: -7.508692741394043
    7. '   ' → logprob: -7.633692741394043
    8. '_
' → logprob: -7.758692741394043
    9. ' time' → logprob: -7.758692741394043
    10. ' _' → logprob: -8.133692741394043

Token 594: '(s' (ID: 1858)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.6650635600090027
    2. '(current' → logprob: -1.7900636196136475
    3. 'current' → logprob: -2.5400636196136475
    4. '
' → logprob: -2.6650636196136475
    5. '[' → logprob: -2.9150636196136475
    6. ' =' → logprob: -4.040063381195068
    7. '=current' → logprob: -4.165063381195068
    8. ' ' → logprob: -4.415063381195068
    9. ' current' → logprob: -4.540063381195068
    10. '   ' → logprob: -5.040063381195068

Token 595: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40513917803764343
    2. ' =' → logprob: -2.155139207839966
    3. '           ' → logprob: -2.280139207839966
    4. ' -' → logprob: -4.155138969421387
    5. ')
' → logprob: -4.655138969421387
    6. ',' → logprob: -4.655138969421387
    7. '=' → logprob: -4.655138969421387
    8. '),' → logprob: -4.780138969421387
    9. '[' → logprob: -4.905138969421387
    10. ' )' → logprob: -5.030138969421387

Token 596: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18447686731815338
    2. '<|end|>' → logprob: -3.184476852416992
    3. '       ' → logprob: -3.809476852416992
    4. '[' → logprob: -4.309476852416992
    5. '            
' → logprob: -4.434476852416992
    6. ' current' → logprob: -4.559476852416992
    7. '
' → logprob: -4.684476852416992
    8. ' 
' → logprob: -4.684476852416992
    9. '[current' → logprob: -4.809476852416992
    10. 'current' → logprob: -5.309476852416992

Token 598: ' Existing' (ID: 109452)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5911962985992432
    2. 'diff' → logprob: -1.5911962985992432
    3. ' for' → logprob: -2.216196298599243
    4. 'for' → logprob: -3.466196298599243
    5. 'min' → logprob: -4.091196060180664
    6. ' min' → logprob: -4.341196060180664
    7. 'dif' → logprob: -4.466196060180664
    8. ' diff' → logprob: -4.466196060180664
    9. 'current' → logprob: -4.716196060180664
    10. '
' → logprob: -5.591196060180664

Token 599: ' remaining' (ID: 15448)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1790526658296585
    2. '_car' → logprob: -1.929052710533142
    3. '_c' → logprob: -5.554052829742432
    4. '_sp' → logprob: -5.929052829742432
    5. 'car' → logprob: -6.054052829742432
    6. '_times' → logprob: -6.429052829742432
    7. '_current' → logprob: -6.429052829742432
    8. '_remaining' → logprob: -6.804052829742432
    9. 'time' → logprob: -7.179052829742432
    10. '_' → logprob: -7.429052829742432

Token 600: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0005734055885113776
    2. '_times' → logprob: -8.00057315826416
    3. '_car' → logprob: -9.37557315826416
    4. '_' → logprob: -9.62557315826416
    5. '_c' → logprob: -10.25057315826416
    6. 'time' → logprob: -11.37557315826416
    7. '_token' → logprob: -12.37557315826416
    8. '_current' → logprob: -12.50057315826416
    9. '_tokens' → logprob: -12.50057315826416
    10. '   ' → logprob: -12.62557315826416

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09159833937883377
    2. '=' → logprob: -2.7165982723236084
    3. 's' → logprob: -4.4665985107421875
    4. '=current' → logprob: -5.2165985107421875
    5. '[' → logprob: -7.5915985107421875
    6. '[current' → logprob: -7.7165985107421875
    7. '_' → logprob: -7.8415985107421875
    8. 'current' → logprob: -7.8415985107421875
    9. '(s' → logprob: -7.9665985107421875
    10. ')' → logprob: -8.091598510742188

Token 602: ' leave' (ID: 7668)
  Prédit: 'ctime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ctime' → logprob: -1.3353033065795898
    2. '[' → logprob: -1.5853033065795898
    3. 'spots' → logprob: -1.7103033065795898
    4. '0' → logprob: -2.83530330657959
    5. ' spots' → logprob: -3.58530330657959
    6. 'lambda' → logprob: -3.58530330657959
    7. ' [' → logprob: -3.83530330657959
    8. 'max' → logprob: -4.21030330657959
    9. ' c' → logprob: -4.27280330657959
    10. 'None' → logprob: -4.33530330657959

Token 603: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0014372545992955565
    2. '_' → logprob: -7.376437187194824
    3. '_car' → logprob: -8.251437187194824
    4. '_times' → logprob: -8.376437187194824
    5. ')' → logprob: -9.376437187194824
    6. '_
' → logprob: -10.001437187194824
    7. '```' → logprob: -10.626437187194824
    8. 'time' → logprob: -10.876437187194824
    9. '   ' → logprob: -11.126437187194824
    10. '_tokens' → logprob: -11.376437187194824

Token 604: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.666510283946991
    2. '-' → logprob: -1.1665103435516357
    3. '_' → logprob: -2.9165103435516357
    4. ')' → logprob: -2.9165103435516357
    5. '[' → logprob: -3.9165103435516357
    6. '_current' → logprob: -5.041510105133057
    7. '+' → logprob: -5.166510105133057
    8. '-current' → logprob: -5.541510105133057
    9. ' +' → logprob: -5.666510105133057
    10. ' _' → logprob: -5.666510105133057

Token 605: ' current' (ID: 2208)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.8854590058326721
    2. ' park' → logprob: -1.5104589462280273
    3. ' c' → logprob: -1.6354589462280273
    4. 'ctime' → logprob: -1.8854589462280273
    5. ' current' → logprob: -5.385458946228027
    6. 'current' → logprob: -5.510458946228027
    7. 'c' → logprob: -5.635458946228027
    8. ' car' → logprob: -6.322958946228027
    9. 'car' → logprob: -7.072958946228027
    10. 'ptime' → logprob: -7.072958946228027

Token 606: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0020982760470360518
    2. '_' → logprob: -6.252098083496094
    3. '_car' → logprob: -9.502098083496094
    4. ' time' → logprob: -11.002098083496094
    5. 'time' → logprob: -11.127098083496094
    6. ' _' → logprob: -11.502098083496094
    7. '_times' → logprob: -11.752098083496094
    8. '_t' → logprob: -11.877098083496094
    9. '   ' → logprob: -12.252098083496094
    10. '"time' → logprob: -12.377098083496094

Token 607: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35873034596443176
    2. '<|end|>' → logprob: -1.6087303161621094
    3. '<|end|>' → logprob: -2.9837303161621094
    4. '\n' → logprob: -4.233730316162109
    5. ')' → logprob: -4.733730316162109
    6. ' 
' → logprob: -5.733730316162109
    7. ' ' → logprob: -6.108730316162109
    8. '[' → logprob: -6.483730316162109
    9. '[current' → logprob: -6.483730316162109
    10. '.' → logprob: -6.608730316162109

Token 608: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.594639778137207
    2. 'current' → logprob: -2.344639778137207
    3. '[current' → logprob: -2.469639778137207
    4. '(current' → logprob: -2.594639778137207
    5. '\n' → logprob: -3.344639778137207
    6. '<|end|>' → logprob: -3.594639778137207
    7. ' =' → logprob: -4.344639778137207
    8. '[' → logprob: -4.344639778137207
    9. '[
' → logprob: -4.469639778137207
    10. '           ' → logprob: -4.469639778137207

Token 610: ' But' (ID: 3072)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6087761521339417
    2. 'current' → logprob: -0.8587761521339417
    3. '<|end|>' → logprob: -4.608776092529297
    4. ' current' → logprob: -5.358776092529297
    5. '[current' → logprob: -5.608776092529297
    6. '\n' → logprob: -5.608776092529297
    7. '(current' → logprob: -6.108776092529297
    8. 'def' → logprob: -6.608776092529297
    9. '<|end|>' → logprob: -7.233776092529297
    10. '$current' → logprob: -7.733776092529297

Token 611: ' what' (ID: 1412)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.571182131767273
    2. ' current' → logprob: -0.946182131767273
    3. 'car' → logprob: -4.4461822509765625
    4. ' car' → logprob: -4.5711822509765625
    5. ' not' → logprob: -5.0711822509765625
    6. 'park' → logprob: -5.3211822509765625
    7. ' park' → logprob: -6.4461822509765625
    8. '           ' → logprob: -6.4461822509765625
    9. 'not' → logprob: -6.5711822509765625
    10. '
' → logprob: -6.9461822509765625

Token 612: ' is' (ID: 382)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.15308131277561188
    2. '_current' → logprob: -2.0280814170837402
    3. '_' → logprob: -4.90308141708374
    4. ' _' → logprob: -7.27808141708374
    5. '_token' → logprob: -7.52808141708374
    6. '_line' → logprob: -8.153080940246582
    7. 'current' → logprob: -9.028080940246582
    8. '```' → logprob: -9.153080940246582
    9. ' =' → logprob: -9.278080940246582
    10. '_times' → logprob: -9.403080940246582

Token 613: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04200844466686249
    2. 'current' → logprob: -3.292008399963379
    3. '_current' → logprob: -6.167008399963379
    4. ' car' → logprob: -7.417008399963379
    5. ' time' → logprob: -7.917008399963379
    6. '_' → logprob: -8.292008399963379
    7. '_time' → logprob: -8.917008399963379
    8. 'car' → logprob: -9.417008399963379
    9. ' _' → logprob: -9.542008399963379
    10. 'time' → logprob: -9.792008399963379

Token 614: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00249289907515049
    2. '_' → logprob: -6.002492904663086
    3. '_token' → logprob: -12.377492904663086
    4. '_car' → logprob: -12.502492904663086
    5. '_t' → logprob: -12.627492904663086
    6. ' _' → logprob: -13.502492904663086
    7. '_
' → logprob: -13.877492904663086
    8. '_line' → logprob: -14.127492904663086
    9. '_tim' → logprob: -14.752492904663086
    10. '_timestamp' → logprob: -15.252492904663086

Token 615: '?' (ID: 30)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0738869905471802
    2. '=' → logprob: -1.4488869905471802
    3. '
' → logprob: -1.8238869905471802
    4. ':' → logprob: -2.4488868713378906
    5. '?' → logprob: -2.9488868713378906
    6. ',' → logprob: -3.3238868713378906
    7. '<|end|>' → logprob: -3.6988868713378906
    8. ':
' → logprob: -4.823886871337891
    9. '=current' → logprob: -4.823886871337891
    10. '<|end|>' → logprob: -4.823886871337891

Token 616: ' The' (ID: 623)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20579825341701508
    2. ' current' → logprob: -2.7057981491088867
    3. '(current' → logprob: -3.4557981491088867
    4. 'car' → logprob: -3.4557981491088867
    5. ' =' → logprob: -4.080798149108887
    6. '_current' → logprob: -4.830798149108887
    7. '=' → logprob: -5.205798149108887
    8. '=current' → logprob: -5.205798149108887
    9. '[current' → logprob: -5.455798149108887
    10. 'time' → logprob: -6.080798149108887

Token 617: ' arrival' (ID: 24861)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.7126361727714539
    2. 'park' → logprob: -0.9626361727714539
    3. ' time' → logprob: -3.2126362323760986
    4. ' car' → logprob: -3.4626362323760986
    5. ' current' → logprob: -3.8376362323760986
    6. 'time' → logprob: -4.2126359939575195
    7. 'car' → logprob: -4.3376359939575195
    8. 'current' → logprob: -5.4626359939575195
    9. ' parking' → logprob: -6.9626359939575195
    10. 'parking' → logprob: -7.8376359939575195

Token 618: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13452228903770447
    2. '_' → logprob: -2.1345221996307373
    3. '_token' → logprob: -5.509522438049316
    4. ' _' → logprob: -7.134522438049316
    5. 'time' → logprob: -7.759522438049316
    6. ')' → logprob: -7.759522438049316
    7. '   ' → logprob: -8.134522438049316
    8. '_times' → logprob: -8.384522438049316
    9. '_tokens' → logprob: -8.884522438049316
    10. ' =' → logprob: -9.134522438049316

Token 619: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' the' (ID: 290)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6747696399688721
    2. 'park' → logprob: -0.7997696399688721
    3. ' car' → logprob: -3.799769639968872
    4. ' park' → logprob: -4.049769401550293
    5. 'parking' → logprob: -8.049769401550293
    6. 'line' → logprob: -8.549769401550293
    7. 'time' → logprob: -8.674769401550293
    8. ' the' → logprob: -8.924769401550293
    9. 'the' → logprob: -9.174769401550293
    10. 'new' → logprob: -9.674769401550293

Token 621: ' incoming' (ID: 37780)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7902485132217407
    2. ' car' → logprob: -1.1652485132217407
    3. ' new' → logprob: -2.415248394012451
    4. 'new' → logprob: -2.540248394012451
    5. 'park' → logprob: -2.915248394012451
    6. 'parking' → logprob: -5.290248394012451
    7. ' parking' → logprob: -6.415248394012451
    8. ' park' → logprob: -6.665248394012451
    9. '```' → logprob: -7.165248394012451
    10. 'arrival' → logprob: -8.16524887084961

Token 622: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.42970141768455505
    2. '_car' → logprob: -1.5547014474868774
    3. '_' → logprob: -2.679701328277588
    4. ' ' → logprob: -3.304701328277588
    5. 'car' → logprob: -4.179701328277588
    6. ' 
' → logprob: -5.554701328277588
    7. '_token' → logprob: -5.679701328277588
    8. '_time' → logprob: -6.429701328277588
    9. ' _' → logprob: -6.804701328277588
    10. '	car' → logprob: -6.929701328277588

Token 623: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1197690963745117
    2. '<|end|>' → logprob: -1.2447690963745117
    3. ':' → logprob: -2.3697690963745117
    4. '\n' → logprob: -2.4947690963745117
    5. '<|end|>' → logprob: -2.8697690963745117
    6. ')' → logprob: -3.1197690963745117
    7. '.' → logprob: -3.7447690963745117
    8. ',' → logprob: -3.8697690963745117
    9. ':
' → logprob: -4.994769096374512
    10. '   ' → logprob: -4.994769096374512

Token 624: ' ' (ID: 220)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.7066446542739868
    2. ' car' → logprob: -0.8316446542739868
    3. 'park' → logprob: -2.8316445350646973
    4. 'car' → logprob: -4.456644535064697
    5. ' time' → logprob: -9.394145011901855
    6. ' c' → logprob: -9.831645011901855
    7. '
' → logprob: -10.019145011901855
    8. '    ' → logprob: -10.144145011901855
    9. 'ctime' → logprob: -10.394145011901855
    10. '(car' → logprob: -10.456645011901855

Token 625: '10' (ID: 702)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.09026934206485748
    2. 'car' → logprob: -2.5902693271636963
    3. ' park' → logprob: -5.215269565582275
    4. 'ctime' → logprob: -5.340269565582275
    5. ' car' → logprob: -7.340269565582275
    6. 'ct' → logprob: -8.840269088745117
    7. 'ptime' → logprob: -9.590269088745117
    8. '   ' → logprob: -10.090269088745117
    9. 'c' → logprob: -11.402769088745117
    10. 'current' → logprob: -11.465269088745117

Token 626: '*' (ID: 9)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.676292231422849e-05
    2. ' car' → logprob: -11.125017166137695
    3. '(car' → logprob: -13.375017166137695
    4. '	car' → logprob: -15.625017166137695
    5. '   ' → logprob: -16.375017166137695
    6. '_car' → logprob: -16.875017166137695
    7. 'park' → logprob: -17.125017166137695
    8. 'parking' → logprob: -17.750017166137695
    9. '```' → logprob: -17.750017166137695
    10. 'cars' → logprob: -18.375017166137695

Token 628: '_id' (ID: 1537)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0053129736334085464
    2. '_id' → logprob: -5.255312919616699
    3. '_index' → logprob: -9.8803129196167
    4. '_i' → logprob: -11.8803129196167
    5. '   ' → logprob: -12.1303129196167
    6. ' _' → logprob: -13.0053129196167
    7. '_arr' → logprob: -13.0053129196167
    8. '```' → logprob: -13.3803129196167
    9. '_idxs' → logprob: -13.5053129196167
    10. '_' → logprob: -13.5053129196167

Token 629: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.724856972694397
    2. '_' → logprob: -2.2248568534851074
    3. '[current' → logprob: -2.7248568534851074
    4. '\n' → logprob: -3.2248568534851074
    5. '_current' → logprob: -3.3498568534851074
    6. '_
' → logprob: -3.5998568534851074
    7. '[' → logprob: -3.5998568534851074
    8. '(current' → logprob: -3.5998568534851074
    9. ' 
' → logprob: -4.224856853485107
    10. 'current' → logprob: -4.349856853485107

Token 630: 'starting' (ID: 78149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012382964603602886
    2. ' )' → logprob: -5.262382984161377
    3. '
' → logprob: -5.762382984161377
    4. ')
' → logprob: -6.137382984161377
    5. '\n' → logprob: -7.887382984161377
    6. 'current' → logprob: -8.637382507324219
    7. '+' → logprob: -8.762382507324219
    8. 'car' → logprob: -9.137382507324219
    9. '```' → logprob: -9.387382507324219
    10. '*' → logprob: -9.512382507324219

Token 631: ' id' (ID: 1211)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5496410131454468
    2. '+' → logprob: -1.6746410131454468
    3. '_time' → logprob: -2.0496411323547363
    4. 'from' → logprob: -3.7996411323547363
    5. ' from' → logprob: -4.174641132354736
    6. ' +' → logprob: -4.424641132354736
    7. ' at' → logprob: -4.549641132354736
    8. '_car' → logprob: -4.674641132354736
    9. '_times' → logprob: -4.924641132354736
    10. ' )' → logprob: -4.924641132354736

Token 632: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1851944774389267
    2. '+' → logprob: -2.935194492340088
    3. ' )' → logprob: -3.185194492340088
    4. ' +' → logprob: -3.310194492340088
    5. '*' → logprob: -4.435194492340088
    6. ' *' → logprob: -4.435194492340088
    7. '_' → logprob: -5.560194492340088
    8. '_times' → logprob: -6.560194492340088
    9. ')+' → logprob: -6.685194492340088
    10. ' ' → logprob: -6.685194492340088

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7249792218208313
    2. 'car' → logprob: -0.8499792218208313
    3. ' car' → logprob: -2.5999791622161865
    4. ' ' → logprob: -5.349979400634766
    5. '1' → logprob: -5.599979400634766
    6. ')' → logprob: -6.224979400634766
    7. '10' → logprob: -6.849979400634766
    8. '=' → logprob: -7.349979400634766
    9. '```' → logprob: -7.474979400634766
    10. '(car' → logprob: -8.224979400634766

Token 634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019270917400717735
    2. ' )' → logprob: -4.269270896911621
    3. '+' → logprob: -6.144270896911621
    4. ')
' → logprob: -6.894270896911621
    5. '<|end|>' → logprob: -7.269270896911621
    6. '
' → logprob: -8.269270896911621
    7. ' +' → logprob: -8.519270896911621
    8. '*' → logprob: -9.144270896911621
    9. ',' → logprob: -9.519270896911621
    10. ' )
' → logprob: -9.894270896911621

Token 635: '           ' (ID: 352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0963053703308105
    2. '<|end|>' → logprob: -1.7213053703308105
    3. '
' → logprob: -2.4713053703308105
    4. '\n' → logprob: -2.8463053703308105
    5. ')' → logprob: -3.0963053703308105
    6. 'current' → logprob: -3.2213053703308105
    7. '<|end|>' → logprob: -3.2213053703308105
    8. '_current' → logprob: -3.3463053703308105
    9. ' ' → logprob: -3.4713053703308105
    10. '(current' → logprob: -3.7213053703308105

Token 636: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.5102937817573547
    2. '(current' → logprob: -2.76029372215271
    3. ' 
' → logprob: -2.76029372215271
    4. '\n' → logprob: -3.01029372215271
    5. '[current' → logprob: -3.51029372215271
    6. '
' → logprob: -4.010293960571289
    7. '_current' → logprob: -4.010293960571289
    8. ' current' → logprob: -4.135293960571289
    9. ' ' → logprob: -4.260293960571289
    10. ')' → logprob: -4.510293960571289

Token 637: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.141186450899113e-05
    2. '_token' → logprob: -11.000020980834961
    3. '_' → logprob: -12.750020980834961
    4. '_Time' → logprob: -14.625020980834961
    5. '_tokens' → logprob: -15.125020980834961
    6. '_times' → logprob: -15.500020980834961
    7. '_t' → logprob: -15.875020980834961
    8. ' _' → logprob: -16.25002098083496
    9. '_TIME' → logprob: -16.62502098083496
    10. '_timestamp' → logprob: -16.75002098083496

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484642803668976
    2. '=' → logprob: -1.2234642505645752
    3. ' ' → logprob: -11.473464012145996
    4. ')' → logprob: -12.223464012145996
    5. '<|end|>' → logprob: -14.223464012145996
    6. ':' → logprob: -14.598464012145996
    7. ',' → logprob: -14.848464012145996
    8. '   ' → logprob: -15.098464012145996
    9. ' =
' → logprob: -15.598464012145996
    10. ']' → logprob: -15.598464012145996

Token 639: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0044625201262533665
    2. ' car' → logprob: -5.504462718963623
    3. '10' → logprob: -8.629462242126465
    4. 'park' → logprob: -8.629462242126465
    5. ' ' → logprob: -11.379462242126465
    6. '   ' → logprob: -12.504462242126465
    7. '	car' → logprob: -12.629462242126465
    8. ' park' → logprob: -13.004462242126465
    9. '(car' → logprob: -13.254462242126465
    10. 'c' → logprob: -14.004462242126465

Token 640: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004905993700958788
    2. '_idx' → logprob: -7.625490665435791
    3. 'id' → logprob: -13.750490188598633
    4. 'd' → logprob: -14.625490188598633
    5. '_' → logprob: -15.625490188598633
    6. 'idx' → logprob: -15.750490188598633
    7. '*' → logprob: -15.875490188598633
    8. '_index' → logprob: -16.500490188598633
    9. 'Id' → logprob: -16.500490188598633
    10. '*_' → logprob: -16.625490188598633

Token 641: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08895255625247955
    2. ' *' → logprob: -2.4639525413513184
    3. '
' → logprob: -13.213953018188477
    4. ' ' → logprob: -13.463953018188477
    5. 'import' → logprob: -13.463953018188477
    6. '<|end|>' → logprob: -13.463953018188477
    7. '   ' → logprob: -13.963953018188477
    8. 'times' → logprob: -13.963953018188477
    9. ')' → logprob: -14.088953018188477
    10. '<|end|>' → logprob: -14.463953018188477

Token 642: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.625009536743164
    4. '1' → logprob: -17.125009536743164
    5. '`' → logprob: -17.625009536743164
    6. '   ' → logprob: -18.250009536743164
    7. '           ' → logprob: -19.000009536743164
    8. ''' → logprob: -19.250009536743164
    9. '``' → logprob: -19.875009536743164
    10. '۱۰' → logprob: -20.125009536743164

Token 643: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3582203984260559
    2. '<|end|>' → logprob: -1.3582203388214111
    3. '<|end|>' → logprob: -3.858220338821411
    4. '           ' → logprob: -4.35822057723999
    5. ' 
' → logprob: -6.35822057723999
    6. '       ' → logprob: -6.35822057723999
    7. '            
' → logprob: -6.48322057723999
    8. ' if' → logprob: -6.60822057723999
    9. ' ' → logprob: -6.73322057723999
    10. '  
' → logprob: -8.233220100402832

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17040500044822693
    2. ' for' → logprob: -2.9204049110412598
    3. 'for' → logprob: -3.2954049110412598
    4. '       ' → logprob: -4.17040491104126
    5. '
' → logprob: -4.79540491104126
    6. '<|end|>' → logprob: -4.92040491104126
    7. ' if' → logprob: -5.29540491104126
    8. '            
' → logprob: -5.54540491104126
    9. '   ' → logprob: -5.67040491104126
    10. '<|end|>' → logprob: -5.79540491104126

Token 645: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23150770366191864
    2. '           ' → logprob: -1.856507658958435
    3. 'best' → logprob: -4.231507778167725
    4. 'valid' → logprob: -4.856507778167725
    5. 'c' → logprob: -5.106507778167725
    6. 'min' → logprob: -5.356507778167725
    7. 'one' → logprob: -5.481507778167725
    8. 'dif' → logprob: -5.981507778167725
    9. 'diff' → logprob: -6.231507778167725
    10. ' for' → logprob: -6.356507778167725

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22617457807064056
    2. '=' → logprob: -1.6011745929718018
    3. '=[]' → logprob: -7.226174354553223
    4. ':' → logprob: -11.226174354553223
    5. '=[]
' → logprob: -11.351174354553223
    6. ',' → logprob: -12.976174354553223
    7. '[]' → logprob: -13.476174354553223
    8. '.' → logprob: -13.601174354553223
    9. ' ' → logprob: -14.101174354553223
    10. '[:]' → logprob: -14.726174354553223

Token 647: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011205092072486877
    2. '[]
' → logprob: -4.511205196380615
    3. '[]

' → logprob: -8.761204719543457
    4. '[' → logprob: -15.011204719543457
    5. ' []' → logprob: -15.761204719543457
    6. '[(' → logprob: -16.261205673217773
    7. '[
' → logprob: -18.636205673217773
    8. '[])' → logprob: -19.011205673217773
    9. '[]"' → logprob: -19.136205673217773
    10. '[]}' → logprob: -19.261205673217773

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04946601763367653
    2. 'for' → logprob: -3.174466133117676
    3. ' for' → logprob: -5.049466133117676
    4. '<|end|>' → logprob: -11.049466133117676
    5. '       ' → logprob: -11.674466133117676
    6. '<|end|>' → logprob: -12.549466133117676
    7. '   ' → logprob: -13.424466133117676
    8. '
' → logprob: -13.924466133117676
    9. '            
' → logprob: -14.549466133117676
    10. '[' → logprob: -14.924466133117676

Token 649: ' less' (ID: 3760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003337969828862697
    2. '           ' → logprob: -8.250333786010742
    3. ' for' → logprob: -9.625333786010742
    4. '
' → logprob: -12.125333786010742
    5. '       ' → logprob: -15.000333786010742
    6. '            
' → logprob: -15.125333786010742
    7. 'car' → logprob: -15.500333786010742
    8. '```' → logprob: -16.000333786010742
    9. 'current' → logprob: -16.375333786010742
    10. 'diff' → logprob: -17.625333786010742

Token 650: '_equal' (ID: 27882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9478974342346191
    2. ' =' → logprob: -1.0728974342346191
    3. '_than' → logprob: -1.6978974342346191
    4. 'diff' → logprob: -4.197897434234619
    5. '_time' → logprob: -4.322897434234619
    6. '_equal' → logprob: -4.822897434234619
    7. '=[]' → logprob: -5.072897434234619
    8. '           ' → logprob: -5.572897434234619
    9. '=[]
' → logprob: -5.697897434234619
    10. 'time' → logprob: -5.947897434234619

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9116828441619873
    2. '_than' → logprob: -1.7866828441619873
    3. '_times' → logprob: -2.2866828441619873
    4. '=' → logprob: -2.4116828441619873
    5. '_candidates' → logprob: -2.6616828441619873
    6. '=[]' → logprob: -3.0366828441619873
    7. '_sp' → logprob: -3.9116828441619873
    8. '_c' → logprob: -3.9116828441619873
    9. '_time' → logprob: -4.411683082580566
    10. '_' → logprob: -4.661683082580566

Token 652: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6197644472122192
    2. '[]
' → logprob: -1.2447644472122192
    3. '[' → logprob: -1.9947644472122192
    4. '[current' → logprob: -4.49476432800293
    5. 'True' → logprob: -4.61976432800293
    6. '[c' → logprob: -6.11976432800293
    7. '[]

' → logprob: -6.11976432800293
    8. '[int' → logprob: -6.49476432800293
    9. 'False' → logprob: -6.49476432800293
    10. 'current' → logprob: -6.74476432800293

Token 653: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24575845897197723
    2. '           ' → logprob: -1.7457584142684937
    3. 'for' → logprob: -3.495758533477783
    4. '<|end|>' → logprob: -5.495758533477783
    5. ' ' → logprob: -6.370758533477783
    6. '[' → logprob: -6.620758533477783
    7. '       ' → logprob: -6.745758533477783
    8. '<|end|>' → logprob: -7.370758533477783
    9. '            
' → logprob: -7.495758533477783
    10. '	for' → logprob: -8.120758056640625

Token 654: ' less' (ID: 3760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2526134252548218
    2. ' for' → logprob: -1.6276134252548218
    3. '           ' → logprob: -3.7526135444641113
    4. 'more' → logprob: -7.002613544464111
    5. 'greater' → logprob: -7.002613544464111
    6. '[' → logprob: -7.877613544464111
    7. 'equal' → logprob: -7.877613544464111
    8. ' more' → logprob: -9.002613067626953
    9. '       ' → logprob: -9.377613067626953
    10. '            
' → logprob: -9.752613067626953

Token 655: ' =' (ID: 314)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.03656422719359398
    2. '_than' → logprob: -4.411564350128174
    3. 'equal' → logprob: -4.786564350128174
    4. '_or' → logprob: -5.411564350128174
    5. '_less' → logprob: -6.036564350128174
    6. '<|end|>' → logprob: -6.411564350128174
    7. 'than' → logprob: -6.911564350128174
    8. 'or' → logprob: -7.161564350128174
    9. ' =' → logprob: -7.411564350128174
    10. '=' → logprob: -7.411564350128174

Token 656: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04261520504951477
    2. '[]
' → logprob: -3.2926151752471924
    3. '=[]' → logprob: -6.4176154136657715
    4. ' []' → logprob: -6.7926154136657715
    5. '[]

' → logprob: -7.2926154136657715
    6. '[' → logprob: -8.417614936828613
    7. ' []
' → logprob: -8.792614936828613
    8. '=[]
' → logprob: -9.167614936828613
    9. '[]}' → logprob: -9.292614936828613
    10. 'True' → logprob: -9.292614936828613

Token 657: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02062504179775715
    2. ' for' → logprob: -4.520625114440918
    3. '<|end|>' → logprob: -5.020625114440918
    4. 'for' → logprob: -6.520625114440918
    5. '<|end|>' → logprob: -7.020625114440918
    6. '[' → logprob: -9.270625114440918
    7. '	       ' → logprob: -9.395625114440918
    8. '       ' → logprob: -9.770625114440918
    9. ' ' → logprob: -10.020625114440918
    10. '...' → logprob: -10.145625114440918

Token 658: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3788655996322632
    2. ' for' → logprob: -1.5038655996322632
    3. '           ' → logprob: -2.3788657188415527
    4. '       ' → logprob: -9.253865242004395
    5. '            
' → logprob: -9.753865242004395
    6. '[' → logprob: -10.128865242004395
    7. '.' → logprob: -10.878865242004395
    8. '               ' → logprob: -10.878865242004395
    9. '...' → logprob: -11.128865242004395
    10. '   ' → logprob: -11.128865242004395

Token 659: ' pos' (ID: 1253)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.8554521799087524
    2. ' spot' → logprob: -1.1054521799087524
    3. 'i' → logprob: -1.6054521799087524
    4. ' i' → logprob: -3.355452060699463
    5. ' idx' → logprob: -5.480452060699463
    6. 'idx' → logprob: -5.980452060699463
    7. 'pos' → logprob: -7.355452060699463
    8. ' pos' → logprob: -8.105452537536621
    9. 's' → logprob: -8.605452537536621
    10. 'sp' → logprob: -8.855452537536621

Token 660: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06275919079780579
    2. 'in' → logprob: -2.8127591609954834
    3. ',' → logprob: -7.1877593994140625
    4. ' ' → logprob: -11.437759399414062
    5. ' ,' → logprob: -11.687759399414062
    6. 'i' → logprob: -13.312759399414062
    7. '```' → logprob: -13.687759399414062
    8. ')' → logprob: -13.812759399414062
    9. '  ' → logprob: -13.937759399414062
    10. '=' → logprob: -14.062759399414062

Token 661: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00998331606388092
    2. ' one' → logprob: -4.634983539581299
    3. 'range' → logprob: -8.63498306274414
    4. '   ' → logprob: -11.13498306274414
    5. '(one' → logprob: -11.25998306274414
    6. ' range' → logprob: -11.50998306274414
    7. '[' → logprob: -12.75998306274414
    8. '    ' → logprob: -13.94748306274414
    9. '  ' → logprob: -14.19748306274414
    10. ' ' → logprob: -14.38498306274414

Token 662: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.596781946020201e-05
    2. 'car' → logprob: -10.250045776367188
    3. '_c' → logprob: -12.500045776367188
    4. '_one' → logprob: -12.875045776367188
    5. 'one' → logprob: -13.750045776367188
    6. '
' → logprob: -14.625045776367188
    7. '	car' → logprob: -14.875045776367188
    8. '_' → logprob: -15.125045776367188
    9. 'Car' → logprob: -15.250045776367188
    10. '   ' → logprob: -15.375045776367188

Token 663: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.05051765590906143
    2. 'spots' → logprob: -3.0505175590515137
    3. 'sp' → logprob: -6.800517559051514
    4. 's' → logprob: -7.425517559051514
    5. '```' → logprob: -9.800518035888672
    6. '_s' → logprob: -9.925518035888672
    7. ' spots' → logprob: -10.550518035888672
    8. '
' → logprob: -11.425518035888672
    9. ')' → logprob: -11.800518035888672
    10. '       ' → logprob: -11.800518035888672

Token 664: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0005536287208087742
    2. '```' → logprob: -8.250554084777832
    3. 'ot' → logprob: -9.000554084777832
    4. 'orts' → logprob: -10.500554084777832
    5. '   ' → logprob: -10.750554084777832
    6. 'ts' → logprob: -11.000554084777832
    7. '       ' → logprob: -11.125554084777832
    8. 'its' → logprob: -11.125554084777832
    9. 'pots' → logprob: -11.500554084777832
    10. 'ost' → logprob: -11.750554084777832

Token 665: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1614995151758194
    2. ':
' → logprob: -1.9114995002746582
    3. ',' → logprob: -7.661499500274658
    4. '       ' → logprob: -8.411499977111816
    5. '               ' → logprob: -8.911499977111816
    6. '           ' → logprob: -9.036499977111816
    7. '   ' → logprob: -9.911499977111816
    8. '[' → logprob: -9.911499977111816
    9. '<|end|>' → logprob: -9.911499977111816
    10. '):
' → logprob: -10.411499977111816

Token 666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07843238115310669
    2. '           ' → logprob: -2.828432321548462
    3. '   ' → logprob: -4.578432559967041
    4. ' l' → logprob: -5.578432559967041
    5. ',' → logprob: -6.953432559967041
    6. ',l' → logprob: -8.453432083129883
    7. ' lower' → logprob: -8.578432083129883
    8. '       ' → logprob: -8.703432083129883
    9. '```' → logprob: -9.203432083129883
    10. ' for' → logprob: -9.203432083129883

Token 667: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.039524469524621964
    2. 'lower' → logprob: -4.039524555206299
    3. ' l' → logprob: -4.164524555206299
    4. '           ' → logprob: -5.914524555206299
    5. '   ' → logprob: -7.039524555206299
    6. 'existing' → logprob: -8.03952407836914
    7. ' lower' → logprob: -8.16452407836914
    8. '	l' → logprob: -8.28952407836914
    9. 'lt' → logprob: -9.16452407836914
    10. 'car' → logprob: -9.28952407836914

Token 668: ' get' (ID: 717)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04251536726951599
    2. ' l' → logprob: -3.667515277862549
    3. 'lower' → logprob: -4.792515277862549
    4. '           ' → logprob: -6.042515277862549
    5. 'existing' → logprob: -6.917515277862549
    6. 'lt' → logprob: -7.917515277862549
    7. '               ' → logprob: -7.917515277862549
    8. '   ' → logprob: -7.917515277862549
    9. 'for' → logprob: -8.042515754699707
    10. 'current' → logprob: -8.292515754699707

Token 669: ' occupied' (ID: 46186)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -1.0261077880859375
    2. ' spots' → logprob: -1.2761077880859375
    3. 'remaining' → logprob: -1.7761077880859375
    4. 'lower' → logprob: -2.9011077880859375
    5. 'l' → logprob: -3.1511077880859375
    6. ' remaining' → logprob: -3.7761077880859375
    7. ' l' → logprob: -4.2761077880859375
    8. 'slots' → logprob: -4.7761077880859375
    9. 'car' → logprob: -5.0261077880859375
    10. 'times' → logprob: -5.0261077880859375

Token 670: ' car' (ID: 1669)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.11532841622829437
    2. 'slot' → logprob: -2.990328311920166
    3. 'lower' → logprob: -3.740328311920166
    4. 'spots' → logprob: -4.740328311920166
    5. '_slots' → logprob: -5.240328311920166
    6. ' slots' → logprob: -5.490328311920166
    7. 'times' → logprob: -5.865328311920166
    8. 'car' → logprob: -5.865328311920166
    9. ' spots' → logprob: -6.115328311920166
    10. 'spot' → logprob: -6.240328311920166

Token 671: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17493973672389984
    2. 'times' → logprob: -2.0499396324157715
    3. ' =' → logprob: -4.9249396324157715
    4. 'lower' → logprob: -5.6749396324157715
    5. '   ' → logprob: -5.6749396324157715
    6. 'slots' → logprob: -5.7999396324157715
    7. '_times' → logprob: -6.0499396324157715
    8. '=' → logprob: -6.2999396324157715
    9. '(s' → logprob: -6.2999396324157715
    10. ' times' → logprob: -6.4249396324157715

Token 672: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.11359853297472
    2. 'leave' → logprob: -2.738598585128784
    3. 'times' → logprob: -4.238598346710205
    4. ' remaining' → logprob: -4.613598346710205
    5. 'remain' → logprob: -4.863598346710205
    6. 'car' → logprob: -5.738598346710205
    7. 'time' → logprob: -6.488598346710205
    8. '[' → logprob: -6.613598346710205
    9. '0' → logprob: -6.863598346710205
    10. 'le' → logprob: -7.613598346710205

Token 673: ' time' (ID: 1058)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5369285345077515
    2. 'time' → logprob: -1.5369285345077515
    3. ' times' → logprob: -2.411928653717041
    4. '_time' → logprob: -3.161928653717041
    5. ' time' → logprob: -3.286928653717041
    6. '_times' → logprob: -4.036928653717041
    7. 's' → logprob: -5.286928653717041
    8. '[' → logprob: -5.661928653717041
    9. '   ' → logprob: -6.536928653717041
    10. ' ' → logprob: -7.536928653717041

Token 674: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3684162199497223
    2. ' =' → logprob: -1.8684161901474
    3. '(s' → logprob: -2.6184163093566895
    4. ' for' → logprob: -4.3684163093566895
    5. ',' → logprob: -4.4934163093566895
    6. '           ' → logprob: -4.7434163093566895
    7. 'times' → logprob: -4.9934163093566895
    8. '               ' → logprob: -5.1184163093566895
    9. '=' → logprob: -5.2434163093566895
    10. ' s' → logprob: -5.6184163093566895

Token 675: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2274409830570221
    2. ',' → logprob: -2.8524410724639893
    3. ' for' → logprob: -3.6024410724639893
    4. ' =' → logprob: -3.9774410724639893
    5. ' at' → logprob: -4.35244083404541
    6. '(s' → logprob: -4.47744083404541
    7. ' in' → logprob: -4.72744083404541
    8. '[' → logprob: -4.72744083404541
    9. '           ' → logprob: -4.72744083404541
    10. 's' → logprob: -5.35244083404541

Token 676: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.5768947601318359
    2. ' l' → logprob: -1.326894760131836
    3. 'occupied' → logprob: -2.826894760131836
    4. '   ' → logprob: -3.576894760131836
    5. ' times' → logprob: -4.826894760131836
    6. 'lower' → logprob: -4.951894760131836
    7. ' occupied' → logprob: -5.076894760131836
    8. '       ' → logprob: -5.201894760131836
    9. ' for' → logprob: -5.326894760131836
    10. 'for' → logprob: -5.451894760131836

Token 677: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4165996015071869
    2. ',u' → logprob: -1.5415996313095093
    3. '_,' → logprob: -3.4165995121002197
    4. '_time' → logprob: -3.6665995121002197
    5. ',r' → logprob: -4.666599750518799
    6. 'car' → logprob: -4.791599750518799
    7. '_car' → logprob: -5.166599750518799
    8. 'time' → logprob: -5.291599750518799
    9. ',t' → logprob: -5.416599750518799
    10. '_rem' → logprob: -5.666599750518799

Token 678: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014448046684265
    2. ' =' → logprob: -1.7014448642730713
    3. ')' → logprob: -11.826444625854492
    4. ',' → logprob: -12.201444625854492
    5. '           ' → logprob: -12.576444625854492
    6. '   ' → logprob: -12.576444625854492
    7. ' ' → logprob: -12.701444625854492
    8. '               ' → logprob: -13.576444625854492
    9. '    ' → logprob: -14.201444625854492
    10. '=
' → logprob: -14.326444625854492

Token 679: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.01819969341158867
    2. ' spots' → logprob: -4.018199920654297
    3. '   ' → logprob: -11.018199920654297
    4. 'spot' → logprob: -11.643199920654297
    5. 'sp' → logprob: -12.018199920654297
    6. '           ' → logprob: -12.893199920654297
    7. 'pots' → logprob: -13.143199920654297
    8. '       ' → logprob: -13.143199920654297
    9. '[' → logprob: -13.393199920654297
    10. 'slots' → logprob: -13.643199920654297

Token 680: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.127333340875339e-06
    2. 'pos' → logprob: -12.500003814697266
    3. '[i' → logprob: -16.750003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '(pos' → logprob: -17.000003814697266
    6. '           ' → logprob: -17.250003814697266
    7. '               ' → logprob: -17.375003814697266
    8. ',pos' → logprob: -17.500003814697266
    9. '```' → logprob: -17.750003814697266
    10. '[' → logprob: -18.000003814697266

Token 681: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.14305491745471954
    2. ']' → logprob: -2.018054962158203
    3. ']
' → logprob: -8.893054962158203
    4. '       ' → logprob: -9.643054962158203
    5. '][' → logprob: -9.893054962158203
    6. '           ' → logprob: -10.018054962158203
    7. '[' → logprob: -10.268054962158203
    8. '               ' → logprob: -10.643054962158203
    9. ']

' → logprob: -11.143054962158203
    10. ' ]
' → logprob: -13.143054962158203

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026646002661436796
    2. '                
' → logprob: -7.377664566040039
    3. '
' → logprob: -7.877664566040039
    4. 'occupied' → logprob: -7.877664566040039
    5. ' for' → logprob: -8.252664566040039
    6. '```' → logprob: -8.752664566040039
    7. '[' → logprob: -9.377664566040039
    8. ',' → logprob: -9.502664566040039
    9. 'current' → logprob: -9.627664566040039
    10. 'for' → logprob: -9.877664566040039

Token 683: ' exist' (ID: 4310)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.4700307548046112
    2. 'if' → logprob: -2.0950307846069336
    3. '               ' → logprob: -2.0950307846069336
    4. 'existing' → logprob: -3.5950307846069336
    5. 'occ' → logprob: -3.7200307846069336
    6. 'oc' → logprob: -3.9700307846069336
    7. 'times' → logprob: -4.220030784606934
    8. 'car' → logprob: -4.845030784606934
    9. ' occupied' → logprob: -4.970030784606934
    10. 'for' → logprob: -4.970030784606934

Token 684: '_car' (ID: 62991)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0005582740413956344
    2. '_car' → logprob: -8.000557899475098
    3. 'car' → logprob: -9.250557899475098
    4. '_time' → logprob: -10.250557899475098
    5. 'ent' → logprob: -10.500557899475098
    6. ' =' → logprob: -11.375557899475098
    7. '_ing' → logprob: -11.500557899475098
    8. 'ant' → logprob: -11.750557899475098
    9. 'ed' → logprob: -11.875557899475098
    10. '_times' → logprob: -12.125557899475098

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13956041634082794
    2. '=' → logprob: -2.2645604610443115
    3. '_times' → logprob: -4.389560222625732
    4. 's' → logprob: -4.764560222625732
    5. '_time' → logprob: -5.889560222625732
    6. 'times' → logprob: -6.889560222625732
    7. '   ' → logprob: -7.014560222625732
    8. ' ' → logprob: -9.01456069946289
    9. '_tokens' → logprob: -9.26456069946289
    10. 'time' → logprob: -9.76456069946289

Token 686: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003739983309060335
    2. ' l' → logprob: -6.378739833831787
    3. 'None' → logprob: -7.003739833831787
    4. 'u' → logprob: -7.003739833831787
    5. '   ' → logprob: -9.503740310668945
    6. '(l' → logprob: -10.128740310668945
    7. '[l' → logprob: -10.503740310668945
    8. ' None' → logprob: -10.878740310668945
    9. '	l' → logprob: -11.253740310668945
    10. 'next' → logprob: -12.128740310668945

Token 687: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35299572348594666
    2. ' or' → logprob: -1.477995753288269
    3. 'if' → logprob: -2.8529956340789795
    4. 'or' → logprob: -5.102995872497559
    5. '[' → logprob: -5.227995872497559
    6. '<|end|>' → logprob: -9.227995872497559
    7. '
' → logprob: -10.352995872497559
    8. '<|end|>' → logprob: -10.977995872497559
    9. '	if' → logprob: -11.102995872497559
    10. ' ' → logprob: -11.352995872497559

Token 688: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013573219068348408
    2. ' l' → logprob: -4.638573169708252
    3. 'u' → logprob: -5.638573169708252
    4. ' u' → logprob: -8.51357364654541
    5. '   ' → logprob: -10.51357364654541
    6. '	l' → logprob: -12.26357364654541
    7. 'None' → logprob: -12.38857364654541
    8. '    ' → logprob: -12.76357364654541
    9. '           ' → logprob: -13.26357364654541
    10. ' ' → logprob: -13.38857364654541

Token 689: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47467267513275146
    2. 'is' → logprob: -0.9746726751327515
    3. 'else' → logprob: -7.599672794342041
    4. 'None' → logprob: -10.474672317504883
    5. 'not' → logprob: -10.474672317504883
    6. ' else' → logprob: -11.724672317504883
    7. ' not' → logprob: -11.849672317504883
    8. '[' → logprob: -12.474672317504883
    9. '!=' → logprob: -12.849672317504883
    10. ' None' → logprob: -12.849672317504883

Token 690: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3489423394203186
    2. ' not' → logprob: -1.2239422798156738
    3. 'None' → logprob: -7.723942279815674
    4. '   ' → logprob: -11.973942756652832
    5. '!' → logprob: -12.223942756652832
    6. '[' → logprob: -12.223942756652832
    7. ' None' → logprob: -12.223942756652832
    8. '...' → logprob: -12.473942756652832
    9. 'Not' → logprob: -12.473942756652832
    10. '	not' → logprob: -12.598942756652832

Token 691: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004035017918795347
    2. 'not' → logprob: -8.25040340423584
    3. ' None' → logprob: -8.87540340423584
    4. 'none' → logprob: -13.50040340423584
    5. ' not' → logprob: -14.50040340423584
    6. '(None' → logprob: -15.50040340423584
    7. '_None' → logprob: -15.87540340423584
    8. '   ' → logprob: -16.375404357910156
    9. 'Not' → logprob: -16.625404357910156
    10. '.None' → logprob: -17.375404357910156

Token 692: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2014264017343521
    2. ' else' → logprob: -1.701426386833191
    3. ' is' → logprob: -12.07642650604248
    4. '               ' → logprob: -13.45142650604248
    5. ' or' → logprob: -13.70142650604248
    6. '
' → logprob: -13.95142650604248
    7. 'and' → logprob: -14.57642650604248
    8. '           ' → logprob: -14.82642650604248
    9. 'elif' → logprob: -14.82642650604248
    10. '<|end|>' → logprob: -14.95142650604248

Token 693: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0017056517535820603
    2. ' u' → logprob: -6.376705646514893
    3. '           ' → logprob: -13.12670612335205
    4. '               ' → logprob: -14.50170612335205
    5. '   ' → logprob: -14.87670612335205
    6. '	u' → logprob: -15.00170612335205
    7. '                   ' → logprob: -16.001705169677734
    8. '    ' → logprob: -17.126705169677734
    9. '(u' → logprob: -17.251705169677734
    10. ' ' → logprob: -18.126705169677734

Token 694: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08748985826969147
    2. '
' → logprob: -2.5874898433685303
    3. '<|end|>' → logprob: -5.462490081787109
    4. '                
' → logprob: -6.337490081787109
    5. '[' → logprob: -7.837490081787109
    6. '<|end|>' → logprob: -7.837490081787109
    7. ',' → logprob: -8.21249008178711
    8. ')' → logprob: -8.58749008178711
    9. ' or' → logprob: -8.71249008178711
    10. '           ' → logprob: -8.83749008178711

Token 695: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07574216276407242
    2. '
' → logprob: -3.950742244720459
    3. '<|end|>' → logprob: -4.325742244720459
    4. ' if' → logprob: -4.950742244720459
    5. ',' → logprob: -4.950742244720459
    6. '[' → logprob: -5.325742244720459
    7. '                
' → logprob: -5.450742244720459
    8. ')' → logprob: -5.575742244720459
    9. ' 
' → logprob: -5.950742244720459
    10. '<|end|>' → logprob: -6.325742244720459

Token 696: ' rt' (ID: 38742)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.679689884185791
    2. 'diff' → logprob: -1.679689884185791
    3. 'existing' → logprob: -2.429689884185791
    4. '               ' → logprob: -2.679689884185791
    5. ' exist' → logprob: -3.179689884185791
    6. 'remain' → logprob: -4.179689884185791
    7. 'if' → logprob: -4.554689884185791
    8. 'leave' → logprob: -4.804689884185791
    9. ' if' → logprob: -5.054689884185791
    10. 'ex' → logprob: -5.054689884185791

Token 697: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23271328210830688
    2. '=' → logprob: -1.607713222503662
    3. 'ime' → logprob: -4.982713222503662
    4. '=(' → logprob: -8.98271369934082
    5. 'em' → logprob: -9.10771369934082
    6. 'emp' → logprob: -10.60771369934082
    7. '=time' → logprob: -11.23271369934082
    8. ' ' → logprob: -11.35771369934082
    9. 'imes' → logprob: -11.48271369934082
    10. 'e' → logprob: -11.73271369934082

Token 698: ' exist' (ID: 4310)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.008196213282644749
    2. ' exist' → logprob: -4.8831963539123535
    3. 'abs' → logprob: -8.133195877075195
    4. 'existing' → logprob: -9.633195877075195
    5. 'exists' → logprob: -9.758195877075195
    6. 'existent' → logprob: -10.258195877075195
    7. '(' → logprob: -10.508195877075195
    8. 'ex' → logprob: -11.008195877075195
    9. '(ex' → logprob: -11.133195877075195
    10. 'ctime' → logprob: -11.508195877075195

Token 699: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00020330198458395898
    2. '_time' → logprob: -8.750203132629395
    3. '[' → logprob: -10.625203132629395
    4. 'ent' → logprob: -12.750203132629395
    5. 'car' → logprob: -13.250203132629395
    6. '=' → logprob: -13.250203132629395
    7. ' =' → logprob: -13.250203132629395
    8. '_' → logprob: -14.000203132629395
    9. '<Car' → logprob: -14.000203132629395
    10. 'Car' → logprob: -14.125203132629395

Token 700: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -15.875000953674316
    3. ' [' → logprob: -16.000001907348633
    4. '
' → logprob: -16.250001907348633
    5. '=' → logprob: -16.500001907348633
    6. '           ' → logprob: -16.625001907348633
    7. '1' → logprob: -16.750001907348633
    8. 's' → logprob: -17.000001907348633
    9. '(' → logprob: -17.125001907348633
    10. ' =' → logprob: -17.125001907348633

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.75000286102295
    3. '[' → logprob: -14.25000286102295
    4. '0' → logprob: -15.18750286102295
    5. '```' → logprob: -15.43750286102295
    6. '
' → logprob: -15.62500286102295
    7. '   ' → logprob: -16.000003814697266
    8. '(' → logprob: -17.187503814697266
    9. '-' → logprob: -17.250003814697266
    10. '`' → logprob: -17.312503814697266

Token 702: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08980447798967361
    2. '-' → logprob: -2.4648044109344482
    3. '-current' → logprob: -7.214804649353027
    4. ')' → logprob: -10.089804649353027
    5. '-c' → logprob: -10.339804649353027
    6. ']' → logprob: -11.714804649353027
    7. ' ' → logprob: -11.714804649353027
    8. '           ' → logprob: -11.839804649353027
    9. '   ' → logprob: -11.839804649353027
    10. 'current' → logprob: -12.714804649353027

Token 703: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00036394817288964987
    2. 'ctime' → logprob: -8.375364303588867
    3. ' current' → logprob: -9.000364303588867
    4. 'car' → logprob: -12.250364303588867
    5. '(current' → logprob: -13.000364303588867
    6. 'park' → logprob: -14.125364303588867
    7. 'ct' → logprob: -14.375364303588867
    8. '   ' → logprob: -15.375364303588867
    9. '$current' → logprob: -15.625364303588867
    10. '	current' → logprob: -15.625364303588867

Token 704: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5048530030981055e-06
    2. 'time' → logprob: -13.625001907348633
    3. '_token' → logprob: -15.500001907348633
    4. 'Time' → logprob: -17.250001907348633
    5. '_' → logprob: -18.375001907348633
    6. ' time' → logprob: -19.000001907348633
    7. '_TIME' → logprob: -19.000001907348633
    8. ' _' → logprob: -19.125001907348633
    9. '"time' → logprob: -19.625001907348633
    10. '_Time' → logprob: -19.625001907348633

Token 705: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12129151076078415
    2. '
' → logprob: -2.746291399002075
    3. ')' → logprob: -3.871291399002075
    4. '<|end|>' → logprob: -4.621291637420654
    5. ' 
' → logprob: -5.246291637420654
    6. '           ' → logprob: -5.246291637420654
    7. '                
' → logprob: -6.121291637420654
    8. ' if' → logprob: -6.246291637420654
    9. '  
' → logprob: -6.746291637420654
    10. '<|end|>' → logprob: -7.121291637420654

Token 706: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06817013770341873
    2. '<|end|>' → logprob: -3.4431700706481934
    3. ' if' → logprob: -4.193170070648193
    4. ')' → logprob: -5.568170070648193
    5. '           ' → logprob: -5.818170070648193
    6. '<|end|>' → logprob: -6.193170070648193
    7. '                
' → logprob: -6.318170070648193
    8. ' 
' → logprob: -6.443170070648193
    9. ',' → logprob: -6.693170070648193
    10. '
' → logprob: -7.068170070648193

Token 707: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6981477737426758
    2. ' if' → logprob: -0.8231477737426758
    3. '               ' → logprob: -3.573147773742676
    4. 'diff' (adapté à ' diff') → logprob: -3.698147773742676
    5. '           ' → logprob: -5.448147773742676
    6. ' diff' → logprob: -5.948147773742676
    7. 'new' → logprob: -6.948147773742676
    8. '#' → logprob: -7.448147773742676
    9. ' new' → logprob: -7.948147773742676
    10. 'car' → logprob: -8.698147773742676

Token 708: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28115710616111755
    2. '=' → logprob: -1.40615713596344
    3. '=int' → logprob: -12.656157493591309
    4. ' ' → logprob: -14.406157493591309
    5. '＝' → logprob: -14.406157493591309
    6. ')' → logprob: -15.406157493591309
    7. '=(' → logprob: -15.531157493591309
    8. 's' → logprob: -15.781157493591309
    9. '=float' → logprob: -15.906157493591309
    10. '=
' → logprob: -15.906157493591309

Token 709: ' rt' (ID: 38742)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6550115346908569
    2. ' c' → logprob: -1.780011534690857
    3. ' abs' → logprob: -1.905011534690857
    4. 'ctime' → logprob: -2.2800116539001465
    5. 'c' → logprob: -3.5300116539001465
    6. 'ct' → logprob: -4.4050116539001465
    7. 'rt' → logprob: -4.4050116539001465
    8. 'park' → logprob: -6.2800116539001465
    9. ' rt' → logprob: -6.7800116539001465
    10. ' park' → logprob: -6.8425116539001465

Token 710: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23113824427127838
    2. '-' → logprob: -1.9811382293701172
    3. '=' → logprob: -3.231138229370117
    4. ' =' → logprob: -3.606138229370117
    5. '+' → logprob: -8.231138229370117
    6. '-c' → logprob: -8.356138229370117
    7. '>=' → logprob: -8.481138229370117
    8. '           ' → logprob: -8.606138229370117
    9. ' >=' → logprob: -8.606138229370117
    10. '>' → logprob: -9.231138229370117

Token 711: ' times' (ID: 4238)
  Prédit: 'ctime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ctime' → logprob: -0.4138633608818054
    2. '(' → logprob: -1.1638634204864502
    3. '10' → logprob: -4.913863182067871
    4. '(times' → logprob: -5.538863182067871
    5. '(ct' → logprob: -5.538863182067871
    6. 'times' → logprob: -6.038863182067871
    7. '0' → logprob: -6.413863182067871
    8. 'ct' → logprob: -6.538863182067871
    9. '(c' → logprob: -6.663863182067871
    10. 'car' → logprob: -7.288863182067871

Token 712: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013830940006300807
    2. '[pos' → logprob: -7.626383304595947
    3. '[c' → logprob: -8.001382827758789
    4. 'car' → logprob: -8.126382827758789
    5. '[n' → logprob: -9.376382827758789
    6. ' [' → logprob: -9.876382827758789
    7. '[current' → logprob: -10.251382827758789
    8. '[m' → logprob: -11.001382827758789
    9. 'n' → logprob: -11.376382827758789
    10. ' car' → logprob: -11.376382827758789

Token 713: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -11.375027656555176
    3. '	car' → logprob: -12.625027656555176
    4. ' car' → logprob: -13.000027656555176
    5. 'current' → logprob: -13.125027656555176
    6. 'park' → logprob: -13.250027656555176
    7. '   ' → logprob: -13.750027656555176
    8. ']' → logprob: -13.875027656555176
    9. '(car' → logprob: -14.375027656555176
    10. '```' → logprob: -14.500027656555176

Token 714: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0023008473217487335
    2. '_idx' → logprob: -6.12730073928833
    3. 'id' → logprob: -9.752301216125488
    4. 'idx' → logprob: -10.502301216125488
    5. '[' → logprob: -11.502301216125488
    6. ']' → logprob: -12.002301216125488
    7. 'i' → logprob: -13.627301216125488
    8. '-' → logprob: -13.752301216125488
    9. '```' → logprob: -13.752301216125488
    10. 's' → logprob: -13.877301216125488

Token 715: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007756276521831751
    2. '])' → logprob: -5.507756233215332
    3. ']
' → logprob: -5.882756233215332
    4. ')' → logprob: -8.257756233215332
    5. ' ]' → logprob: -9.257756233215332
    6. '[' → logprob: -9.507756233215332
    7. '<|end|>' → logprob: -9.507756233215332
    8. ']

' → logprob: -9.882756233215332
    9. ']+' → logprob: -10.257756233215332
    10. ')]' → logprob: -10.257756233215332

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6083827614784241
    2. '<|end|>' → logprob: -0.9833827614784241
    3. ')' → logprob: -3.2333827018737793
    4. '<|end|>' → logprob: -4.108382701873779
    5. '           ' → logprob: -4.233382701873779
    6. '
' → logprob: -5.358382701873779
    7. ' 
' → logprob: -6.108382701873779
    8. '            
' → logprob: -7.483382701873779
    9. ' if' → logprob: -7.608382701873779
    10. '  
' → logprob: -7.608382701873779

Token 717: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03860124200582504
    2. ' if' → logprob: -3.9136011600494385
    3. '<|end|>' → logprob: -5.038601398468018
    4. '           ' → logprob: -5.413601398468018
    5. ')' → logprob: -5.913601398468018
    6. ' ' → logprob: -7.163601398468018
    7. '<|end|>' → logprob: -7.538601398468018
    8. ' tokens' → logprob: -7.913601398468018
    9. ' )' → logprob: -8.16360092163086
    10. 'if' (adapté à ' if') → logprob: -8.28860092163086

Token 718: ' rt' (ID: 38742)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03071148693561554
    2. ' diff' → logprob: -3.5307114124298096
    3. 'abs' → logprob: -8.03071117401123
    4. '0' → logprob: -8.15571117401123
    5. 'rt' → logprob: -9.53071117401123
    6. '	diff' → logprob: -9.65571117401123
    7. '-' → logprob: -9.90571117401123
    8. '   ' → logprob: -10.03071117401123
    9. ' abs' → logprob: -10.90571117401123
    10. 'less' → logprob: -11.03071117401123

Token 719: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7570617198944092
    2. '0' → logprob: -0.8820617198944092
    3. '>=' → logprob: -3.632061719894409
    4. ' >=' → logprob: -3.882061719894409
    5. ' ' → logprob: -4.007061958312988
    6. ' times' → logprob: -4.632061958312988
    7. '>' → logprob: -4.632061958312988
    8. ' =' → logprob: -4.757061958312988
    9. '<=' → logprob: -5.007061958312988
    10. ' <=' → logprob: -5.632061958312988

Token 720: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.029502714052796364
    2. '0' → logprob: -4.154502868652344
    3. ' times' → logprob: -4.529502868652344
    4. 'car' → logprob: -6.654502868652344
    5. 'diff' → logprob: -7.154502868652344
    6. '10' → logprob: -9.404502868652344
    7. ' ' → logprob: -9.404502868652344
    8. 'tim' → logprob: -9.779502868652344
    9. '-' → logprob: -10.029502868652344
    10. '-times' → logprob: -10.529502868652344

Token 721: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.97024549683556e-05
    2. 'car' → logprob: -10.250080108642578
    3. '               ' → logprob: -11.375080108642578
    4. '           ' → logprob: -11.500080108642578
    5. '[pos' → logprob: -12.375080108642578
    6. '                   ' → logprob: -12.375080108642578
    7. '```' → logprob: -12.500080108642578
    8. '(car' → logprob: -13.125080108642578
    9. '   ' → logprob: -13.375080108642578
    10. '       ' → logprob: -13.375080108642578

Token 722: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0001370320824207738
    2. '[' → logprob: -9.375137329101562
    3. '(car' → logprob: -10.375137329101562
    4. ' car' → logprob: -11.250137329101562
    5. ']' → logprob: -12.625137329101562
    6. '.car' → logprob: -13.750137329101562
    7. '	car' → logprob: -14.125137329101562
    8. '_car' → logprob: -14.500137329101562
    9. '-car' → logprob: -14.750137329101562
    10. '][' → logprob: -15.250137329101562

Token 723: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.9160102712921798e-05
    2. 'id' → logprob: -10.500029563903809
    3. '[' → logprob: -14.250029563903809
    4. 'd' → logprob: -15.500029563903809
    5. '```' → logprob: -15.875029563903809
    6. 's' → logprob: -16.375028610229492
    7. 'i' → logprob: -16.875028610229492
    8. ']' → logprob: -16.875028610229492
    9. 'Id' → logprob: -17.000028610229492
    10. 'e' → logprob: -17.000028610229492

Token 724: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1544683277606964
    2. ':
' → logprob: -2.529468297958374
    3. ':' → logprob: -3.279468297958374
    4. ']:
' → logprob: -4.779468536376953
    5. '):
' → logprob: -4.904468536376953
    6. ']' → logprob: -5.904468536376953
    7. '           ' → logprob: -6.404468536376953
    8. 'and' → logprob: -6.529468536376953
    9. ']:' → logprob: -6.779468536376953
    10. ' or' → logprob: -7.154468536376953

Token 725: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04446522146463394
    2. '               ' → logprob: -3.5444653034210205
    3. '                       ' → logprob: -4.294465065002441
    4. ' and' → logprob: -8.044465065002441
    5. ',' → logprob: -8.794465065002441
    6. ':
' → logprob: -9.169465065002441
    7. ':' → logprob: -9.419465065002441
    8. '<|end|>' → logprob: -10.044465065002441
    9. '):
' → logprob: -10.544465065002441
    10. ')' → logprob: -10.544465065002441

Token 726: ' #' (ID: 1069)
  Prédit: ' less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.4254179894924164
    2. '               ' → logprob: -1.9254180192947388
    3. '                   ' → logprob: -2.175417900085449
    4. ' candidates' → logprob: -2.925417900085449
    5. '                       ' → logprob: -3.925417900085449
    6. 'less' → logprob: -4.550417900085449
    7. ' if' → logprob: -6.925417900085449
    8. ' spots' → logprob: -7.925417900085449
    9. 'c' → logprob: -8.80041790008545
    10. '_less' → logprob: -9.05041790008545

Token 727: ' diff' (ID: 8868)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.27955126762390137
    2. ' less' → logprob: -1.6545512676239014
    3. ' candidates' → logprob: -4.1545515060424805
    4. 'c' → logprob: -4.5295515060424805
    5. '                   ' → logprob: -4.5295515060424805
    6. '               ' → logprob: -5.0295515060424805
    7. '   ' → logprob: -5.6545515060424805
    8. '                       ' → logprob: -5.7795515060424805
    9. '           ' → logprob: -7.4045515060424805
    10. ' c' → logprob: -7.7795515060424805

Token 728: ' >=' (ID: 5064)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47578972578048706
    2. '=' → logprob: -1.6007897853851318
    3. '<=' → logprob: -2.350789785385132
    4. ' =' → logprob: -3.100789785385132
    5. '               ' → logprob: -4.350789546966553
    6. ' <=' → logprob: -4.850789546966553
    7. 'less' → logprob: -5.225789546966553
    8. '.' → logprob: -5.600789546966553
    9. '.append' → logprob: -5.850789546966553
    10. '           ' → logprob: -6.850789546966553

Token 729: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01610521785914898
    2. ' ' → logprob: -4.1411051750183105
    3. '                   ' → logprob: -10.391105651855469
    4. '=' → logprob: -10.891105651855469
    5. '-' → logprob: -12.016105651855469
    6. ' -' → logprob: -12.641105651855469
    7. '                       ' → logprob: -13.016105651855469
    8. '           ' → logprob: -13.141105651855469
    9. '   ' → logprob: -13.391105651855469
    10. '               ' → logprob: -13.391105651855469

Token 730: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006838412955403328
    2. ' ' → logprob: -7.375683784484863
    3. '-' → logprob: -10.125683784484863
    4. '=' → logprob: -12.000683784484863
    5. ' -' → logprob: -12.375683784484863
    6. '                   ' → logprob: -14.000683784484863
    7. '   ' → logprob: -14.000683784484863
    8. 'diff' → logprob: -14.000683784484863
    9. '
' → logprob: -14.063183784484863
    10. '1' → logprob: -15.000683784484863

Token 731: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0596172958612442
    2. ' and' → logprob: -4.059617519378662
    3. ':
' → logprob: -4.309617519378662
    4. '               ' → logprob: -4.934617519378662
    5. '                       ' → logprob: -4.934617519378662
    6. ':' → logprob: -5.059617519378662
    7. '):
' → logprob: -6.184617519378662
    8. ' less' → logprob: -6.184617519378662
    9. ',' → logprob: -7.434617519378662
    10. 'and' → logprob: -8.184617042541504

Token 732: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.035014230757951736
    2. '                       ' → logprob: -4.6600141525268555
    3. '<|end|>' → logprob: -4.7850141525268555
    4. ')' → logprob: -5.0350141525268555
    5. '               ' → logprob: -5.2850141525268555
    6. ',' → logprob: -6.9100141525268555
    7. ' and' → logprob: -7.6600141525268555
    8. '                    
' → logprob: -7.7850141525268555
    9. 'tokens' → logprob: -7.9100141525268555
    10. '<|end|>' → logprob: -7.9100141525268555

Token 733: ' less' (ID: 3760)
  Prédit: ' less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.5878139138221741
    2. 'less' (adapté à ' less') → logprob: -1.4628138542175293
    3. '                   ' → logprob: -1.9628138542175293
    4. '                       ' → logprob: -3.3378138542175293
    5. ' candidates' → logprob: -3.7128138542175293
    6. '               ' → logprob: -4.837813854217529
    7. ' if' → logprob: -6.712813854217529
    8. 'c' → logprob: -7.087813854217529
    9. '_less' → logprob: -8.087814331054688
    10. '   ' → logprob: -8.337814331054688

Token 734: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0015643771039322019
    2. '.append' → logprob: -6.8765645027160645
    3. '_less' → logprob: -8.001564025878906
    4. '._' → logprob: -10.376564025878906
    5. '_equ' → logprob: -10.626564025878906
    6. 'equal' → logprob: -10.626564025878906
    7. '_le' → logprob: -10.751564025878906
    8. '=_' → logprob: -11.376564025878906
    9. ' .' → logprob: -11.376564025878906
    10. '_.' → logprob: -11.376564025878906

Token 735: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00864068977534771
    2. '.' → logprob: -4.758640766143799
    3. ' .' → logprob: -10.63364028930664
    4. '.app' → logprob: -14.75864028930664
    5. '.add' → logprob: -15.00864028930664
    6. '=' → logprob: -15.25864028930664
    7. '           ' → logprob: -15.38364028930664
    8. '.push' → logprob: -15.50864028930664
    9. '.ap' → logprob: -15.88364028930664
    10. '               ' → logprob: -16.13364028930664

Token 736: '((' (ID: 2054)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.018171481788158417
    2. 'pos' → logprob: -4.018171310424805
    3. '((' → logprob: -11.518171310424805
    4. ' pos' → logprob: -12.268171310424805
    5. '(' → logprob: -12.393171310424805
    6. '[pos' → logprob: -13.643171310424805
    7. ',pos' → logprob: -14.018171310424805
    8. ' (' → logprob: -14.768171310424805
    9. '	pos' → logprob: -16.018171310424805
    10. '(i' → logprob: -16.768171310424805

Token 737: 'diff' (ID: 31460)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5299627780914307
    2. 'diff' → logprob: -0.9049627780914307
    3. 'abs' → logprob: -6.029962539672852
    4. ' pos' → logprob: -6.779962539672852
    5. ' diff' → logprob: -7.029962539672852
    6. 'rt' → logprob: -7.154962539672852
    7. '0' → logprob: -7.529962539672852
    8. '(diff' → logprob: -7.654962539672852
    9. '(pos' → logprob: -8.154962539672852
    10. '(' → logprob: -9.529962539672852

Token 738: ',pos' (ID: 128292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6934800744056702
    2. ',pos' → logprob: -0.6934800744056702
    3. ',i' → logprob: -8.443480491638184
    4. ' ,' → logprob: -9.193480491638184
    5. ',p' → logprob: -12.318480491638184
    6. ',index' → logprob: -12.943480491638184
    7. 'pos' → logprob: -13.318480491638184
    8. '                   ' → logprob: -13.443480491638184
    9. '   ' → logprob: -13.693480491638184
    10. '[pos' → logprob: -13.693480491638184

Token 739: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004824315197765827
    2. '))
' → logprob: -5.379824161529541
    3. ',' → logprob: -8.8798246383667
    4. ')' → logprob: -10.3798246383667
    5. '                   ' → logprob: -11.5048246383667
    6. '               ' → logprob: -12.0048246383667
    7. ' ))' → logprob: -12.0048246383667
    8. '           ' → logprob: -12.6298246383667
    9. '))

' → logprob: -13.3798246383667
    10. '))
' → logprob: -14.0048246383667

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24627315998077393
    2. '           ' → logprob: -1.996273159980774
    3. ')' → logprob: -2.9962730407714844
    4. '<|end|>' → logprob: -4.371273040771484
    5. 'else' → logprob: -5.246273040771484
    6. '                   ' → logprob: -5.621273040771484
    7. ' else' → logprob: -5.871273040771484
    8. 'continue' → logprob: -6.121273040771484
    9. '
' → logprob: -6.371273040771484
    10. ')
' → logprob: -7.371273040771484

Token 741: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09250175207853317
    2. '               ' → logprob: -2.717501640319824
    3. 'else' (adapté à ' else') → logprob: -5.217501640319824
    4. ' else' → logprob: -5.217501640319824
    5. ')' → logprob: -5.592501640319824
    6. '            
' → logprob: -6.967501640319824
    7. ' for' → logprob: -6.967501640319824
    8. '       ' → logprob: -7.217501640319824
    9. '<|end|>' → logprob: -7.342501640319824
    10. '[' → logprob: -7.467501640319824

Token 742: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4607307016849518
    2. '                   ' → logprob: -1.0857306718826294
    3. '           ' → logprob: -4.08573055267334
    4. '                       ' → logprob: -5.46073055267334
    5. ' less' → logprob: -5.96073055267334
    6. '                ' → logprob: -6.58573055267334
    7. '   ' → logprob: -6.71073055267334
    8. '{
' → logprob: -6.83573055267334
    9. 'less' → logprob: -7.33573055267334
    10. '       ' → logprob: -7.46073055267334

Token 743: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8186244964599609
    2. '                   ' → logprob: -1.318624496459961
    3. ' less' → logprob: -1.943624496459961
    4. 'less' → logprob: -1.943624496459961
    5. '                       ' → logprob: -6.318624496459961
    6. '           ' → logprob: -6.568624496459961
    7. '   ' → logprob: -7.943624496459961
    8. '                ' → logprob: -8.068624496459961
    9. 'if' → logprob: -8.568624496459961
    10. 'diff' → logprob: -8.568624496459961

Token 744: ' #' (ID: 1069)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.006435525603592396
    2. ' less' → logprob: -5.506435394287109
    3. 'c' → logprob: -7.006435394287109
    4. '(' → logprob: -7.381435394287109
    5. 'diff' → logprob: -8.88143539428711
    6. 'greater' → logprob: -8.88143539428711
    7. 'more' → logprob: -9.38143539428711
    8. '(c' → logprob: -9.38143539428711
    9. '   ' → logprob: -9.38143539428711
    10. ' candidates' → logprob: -9.75643539428711

Token 745: ' diff' (ID: 8868)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.013364799320697784
    2. ' less' → logprob: -4.388364791870117
    3. 'diff' → logprob: -7.763364791870117
    4. '   ' → logprob: -8.888364791870117
    5. '                   ' → logprob: -9.638364791870117
    6. 'c' → logprob: -10.263364791870117
    7. '           ' → logprob: -10.388364791870117
    8. '               ' → logprob: -10.513364791870117
    9. 'greater' → logprob: -10.888364791870117
    10. 'more' → logprob: -10.888364791870117

Token 746: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.014275742694735527
    2. ' <' → logprob: -4.264275550842285
    3. '>' → logprob: -10.389275550842285
    4. '.append' → logprob: -10.639275550842285
    5. '<int' → logprob: -11.264275550842285
    6. ',' → logprob: -12.264275550842285
    7. '<p' → logprob: -12.389275550842285
    8. ' >' → logprob: -12.514275550842285
    9. '<data' → logprob: -12.764275550842285
    10. ')' → logprob: -12.889275550842285

Token 747: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029777804389595985
    2. ' ' → logprob: -3.529777765274048
    3. ' times' → logprob: -11.404777526855469
    4. '   ' → logprob: -12.279777526855469
    5. 'times' → logprob: -12.404777526855469
    6. 'diff' → logprob: -13.342277526855469
    7. '  ' → logprob: -13.592277526855469
    8. '=' → logprob: -13.654777526855469
    9. ' diff' → logprob: -14.717277526855469
    10. '1' → logprob: -14.779777526855469

Token 748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020687808864749968
    2. ' ' → logprob: -8.50020694732666
    3. 'times' → logprob: -13.37520694732666
    4. ' times' → logprob: -13.50020694732666
    5. '=' → logprob: -15.50020694732666
    6. '   ' → logprob: -16.750205993652344
    7. '1' → logprob: -17.250205993652344
    8. '  ' → logprob: -17.562705993652344
    9. 'diff' → logprob: -18.000205993652344
    10. '(' → logprob: -18.187705993652344

Token 749: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12686562538146973
    2. ' less' → logprob: -2.3768656253814697
    3. 'less' → logprob: -3.8768656253814697
    4. '               ' → logprob: -5.751865386962891
    5. '                       ' → logprob: -7.126865386962891
    6. '           ' → logprob: -8.12686538696289
    7. '                    ' → logprob: -8.37686538696289
    8. '<' → logprob: -8.50186538696289
    9. ',' → logprob: -8.62686538696289
    10. '(' → logprob: -8.87686538696289

Token 750: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5027887225151062
    2. 'less' → logprob: -1.252788782119751
    3. ' less' → logprob: -2.252788782119751
    4. '               ' → logprob: -6.377788543701172
    5. '                       ' → logprob: -6.752788543701172
    6. '           ' → logprob: -7.627788543701172
    7. 'greater' → logprob: -8.127788543701172
    8. '_less' → logprob: -8.752788543701172
    9. 'diff' → logprob: -9.502788543701172
    10. '                    ' → logprob: -9.627788543701172

Token 751: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.0008350008283741772
    2. ' less' → logprob: -7.250834941864014
    3. '   ' → logprob: -10.375835418701172
    4. 'more' → logprob: -10.875835418701172
    5. '                   ' → logprob: -11.125835418701172
    6. '           ' → logprob: -11.375835418701172
    7. 'greater' → logprob: -11.375835418701172
    8. 'diff' → logprob: -11.500835418701172
    9. '       ' → logprob: -11.875835418701172
    10. '               ' → logprob: -12.125835418701172

Token 752: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006471486412920058
    2. '_less' → logprob: -7.375647068023682
    3. '.insert' → logprob: -12.25064754486084
    4. '_than' → logprob: -12.75064754486084
    5. '_equal' → logprob: -13.00064754486084
    6. '_append' → logprob: -13.37564754486084
    7. '.extend' → logprob: -13.50064754486084
    8. '.add' → logprob: -13.50064754486084
    9. 'append' → logprob: -13.87564754486084
    10. '_more' → logprob: -14.37564754486084

Token 753: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003233070601709187
    2. '(diff' → logprob: -8.625323295593262
    3. '(' → logprob: -9.250323295593262
    4. '((-' → logprob: -10.250323295593262
    5. '   ' → logprob: -12.375323295593262
    6. '(pos' → logprob: -12.875323295593262
    7. '(abs' → logprob: -13.000323295593262
    8. ' ((' → logprob: -13.625323295593262
    9. ' (' → logprob: -14.625323295593262
    10. ' ' → logprob: -15.375323295593262

Token 754: 'abs' (ID: 6071)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.019741231575608253
    2. '(diff' → logprob: -4.144741058349609
    3. ' diff' → logprob: -5.644741058349609
    4. 'abs' → logprob: -10.01974105834961
    5. ' (' → logprob: -10.26974105834961
    6. '-d' → logprob: -10.64474105834961
    7. '(' → logprob: -11.01974105834961
    8. '(-' → logprob: -11.26974105834961
    9. '	diff' → logprob: -11.51974105834961
    10. '-' → logprob: -11.89474105834961

Token 755: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -4.0484450437361374e-05
    2. 'diff' → logprob: -10.125040054321289
    3. '(' → logprob: -15.625040054321289
    4. ' diff' → logprob: -16.50004005432129
    5. '	diff' → logprob: -16.50004005432129
    6. '(di' → logprob: -19.37504005432129
    7. '.diff' → logprob: -19.62504005432129
    8. '(
' → logprob: -19.87504005432129
    9. '_diff' → logprob: -19.87504005432129
    10. ' (' → logprob: -20.25004005432129

Token 756: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010295333340764046
    2. ',pos' → logprob: -4.760295391082764
    3. ' ),' → logprob: -7.135295391082764
    4. '(pos' → logprob: -7.760295391082764
    5. ',' → logprob: -8.510294914245605
    6. ')+' → logprob: -9.510294914245605
    7. ')' → logprob: -9.510294914245605
    8. '[pos' → logprob: -10.635294914245605
    9. 'pos' → logprob: -10.885294914245605
    10. '+' → logprob: -11.635294914245605

Token 757: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00020389800192788243
    2. ' pos' → logprob: -8.500204086303711
    3. '(pos' → logprob: -16.12520408630371
    4. '	pos' → logprob: -16.25020408630371
    5. ',pos' → logprob: -17.37520408630371
    6. '[pos' → logprob: -17.50020408630371
    7. '.pos' → logprob: -17.62520408630371
    8. 'position' → logprob: -18.12520408630371
    9. 'diff' → logprob: -18.12520408630371
    10. ')' → logprob: -18.37520408630371

Token 758: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001867326645879075
    2. ')
' → logprob: -8.875186920166016
    3. '           ' → logprob: -10.250186920166016
    4. '))' → logprob: -12.000186920166016
    5. ' )' → logprob: -12.625186920166016
    6. '               ' → logprob: -13.875186920166016
    7. ')

' → logprob: -15.125186920166016
    8. '                   ' → logprob: -15.125186920166016
    9. ')`' → logprob: -15.375186920166016
    10. '       ' → logprob: -16.125186920166016

Token 759: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7280622124671936
    2. '           ' → logprob: -1.7280621528625488
    3. 'less' → logprob: -1.9780621528625488
    4. ' less' → logprob: -2.228062152862549
    5. 'if' (adapté à ' if') → logprob: -2.978062152862549
    6. ' candidates' → logprob: -4.353062152862549
    7. 'least' → logprob: -5.478062152862549
    8. ')' → logprob: -5.478062152862549
    9. 'tokens' → logprob: -5.478062152862549
    10. '<|end|>' → logprob: -5.728062152862549

Token 761: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.031232986599206924
    2. ' less' → logprob: -3.531233072280884
    3. 'len' → logprob: -7.281232833862305
    4. 'not' → logprob: -7.781232833862305
    5. ' not' → logprob: -8.031232833862305
    6. ' len' → logprob: -10.531232833862305
    7. '   ' → logprob: -11.406232833862305
    8. 'les' → logprob: -11.781232833862305
    9. 'le' → logprob: -14.031232833862305
    10. '_less' → logprob: -14.656232833862305

Token 762: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.03375738486647606
    2. ':' → logprob: -3.533757448196411
    3. 'equal' → logprob: -6.408757209777832
    4. '=' → logprob: -6.908757209777832
    5. '==' → logprob: -7.908757209777832
    6. '_EQUAL' → logprob: -8.283757209777832
    7. ' equal' → logprob: -9.408757209777832
    8. '_equals' → logprob: -9.408757209777832
    9. ' or' → logprob: -9.533757209777832
    10. '_e' → logprob: -9.658757209777832

Token 763: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034102473873645067
    2. '<|end|>' → logprob: -6.753410339355469
    3. 'and' → logprob: -7.378410339355469
    4. '.' → logprob: -7.753410339355469
    5. ' and' → logprob: -8.128410339355469
    6. ':
' → logprob: -8.253410339355469
    7. '==' → logprob: -9.128410339355469
    8. '<|end|>' → logprob: -9.253410339355469
    9. '=' → logprob: -9.503410339355469
    10. '):' → logprob: -9.753410339355469

Token 764: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004342887084931135
    2. 'less' → logprob: -6.254343032836914
    3. ' less' → logprob: -7.004343032836914
    4. '           ' → logprob: -7.254343032836914
    5. 'tokens' → logprob: -8.254343032836914
    6. ' candidates' → logprob: -8.879343032836914
    7. 'next' → logprob: -10.129343032836914
    8. ' next' → logprob: -10.379343032836914
    9. '```' → logprob: -10.379343032836914
    10. '<|end|>' → logprob: -10.379343032836914

Token 765: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.2103530764579773
    2. '               ' → logprob: -1.710353136062622
    3. 'spot' → logprob: -6.585352897644043
    4. '           ' → logprob: -6.585352897644043
    5. 'pos' → logprob: -6.710352897644043
    6. 'diff' → logprob: -6.835352897644043
    7. 'c' → logprob: -6.960352897644043
    8. ' less' → logprob: -7.960352897644043
    9. '   ' → logprob: -8.210352897644043
    10. 'best' → logprob: -8.210352897644043

Token 766: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.00024608144303783774
    2. 'equal' → logprob: -8.375246047973633
    3. '_sorted' → logprob: -11.625246047973633
    4. '_EQUAL' → logprob: -13.375246047973633
    5. '_equ' → logprob: -13.750246047973633
    6. '.equal' → logprob: -13.875246047973633
    7. '.sort' → logprob: -14.000246047973633
    8. 'Equal' → logprob: -14.500246047973633
    9. '=' → logprob: -14.500246047973633
    10. '_equals' → logprob: -15.000246047973633

Token 767: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -3.292907877039397e-06
    2. '=' → logprob: -13.25000286102295
    3. 'sort' → logprob: -14.00000286102295
    4. '.' → logprob: -14.50000286102295
    5. '.append' → logprob: -16.625003814697266
    6. '_sorted' → logprob: -18.000003814697266
    7. ' sort' → logprob: -18.625003814697266
    8. ' .' → logprob: -19.125003814697266
    9. ' =' → logprob: -19.750003814697266
    10. '	sort' → logprob: -20.125003814697266

Token 768: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3134419023990631
    2. '()
' → logprob: -1.3134418725967407
    3. '(key' → logprob: -8.81344223022461
    4. '()
' → logprob: -10.93844223022461
    5. '(reverse' → logprob: -11.68844223022461
    6. 'key' → logprob: -13.18844223022461
    7. '();' → logprob: -13.68844223022461
    8. '()\' → logprob: -14.06344223022461
    9. '()`' → logprob: -14.43844223022461
    10. '()

' → logprob: -15.18844223022461

Token 769: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -3.225939872208983e-05
    2. '=' → logprob: -10.375032424926758
    3. '(lambda' → logprob: -14.500032424926758
    4. 'lambda' → logprob: -14.625032424926758
    5. '=None' → logprob: -17.500032424926758
    6. '=
' → logprob: -17.625032424926758
    7. '=True' → logprob: -17.625032424926758
    8. ' lambda' → logprob: -17.750032424926758
    9. '=item' → logprob: -18.375032424926758
    10. '=str' → logprob: -19.625032424926758

Token 770: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.037094950675964355
    2. 'x' → logprob: -3.537095069885254
    3. '(lambda' → logprob: -5.037095069885254
    4. ' lambda' → logprob: -7.162095069885254
    5. '=lambda' → logprob: -10.537095069885254
    6. ' x' → logprob: -11.037095069885254
    7. '_lambda' → logprob: -13.162095069885254
    8. '(x' → logprob: -13.662095069885254
    9. 't' → logprob: -14.037095069885254
    10. '0' → logprob: -14.037095069885254

Token 771: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08258522301912308
    2. ':x' → logprob: -2.582585334777832
    3. 'x' → logprob: -5.957585334777832
    4. ' :' → logprob: -7.582585334777832
    5. ':(' → logprob: -8.207585334777832
    6. ' x' → logprob: -8.707585334777832
    7. '(x' → logprob: -9.332585334777832
    8. '(' → logprob: -10.082585334777832
    9. ' (' → logprob: -11.707585334777832
    10. ' :(' → logprob: -11.957585334777832

Token 772: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011705794604495168
    2. ' x' → logprob: -6.751170635223389
    3. '(x' → logprob: -15.00117015838623
    4. '
' → logprob: -17.251171112060547
    5. ')x' → logprob: -17.501171112060547
    6. '0' → logprob: -17.626171112060547
    7. '_x' → logprob: -18.251171112060547
    8. '_' → logprob: -18.751171112060547
    9. '   ' → logprob: -19.001171112060547
    10. '	x' → logprob: -19.126171112060547

Token 773: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520717680454254
    2. '[' → logprob: -1.502071738243103
    3. ' ' → logprob: -8.877071380615234
    4. '(' → logprob: -13.752071380615234
    5. '1' → logprob: -14.752071380615234
    6. '   ' → logprob: -15.002071380615234
    7. '00' → logprob: -15.377071380615234
    8. '
' → logprob: -15.377071380615234
    9. ',' → logprob: -15.502071380615234
    10. ' [' → logprob: -15.752071380615234

Token 774: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '1' → logprob: -14.625003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '
' → logprob: -16.625003814697266
    7. '00' → logprob: -17.125003814697266
    8. '01' → logprob: -17.500003814697266
    9. '012' → logprob: -18.000003814697266
    10. 'x' → logprob: -18.125003814697266

Token 775: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31361687183380127
    2. ',pos' → logprob: -1.3136168718338013
    3. ' ,' → logprob: -8.313616752624512
    4. '[' → logprob: -10.313616752624512
    5. ']))' → logprob: -10.813616752624512
    6. ',len' → logprob: -11.438616752624512
    7. ']))
' → logprob: -11.438616752624512
    8. '))' → logprob: -11.938616752624512
    9. ',p' → logprob: -12.813616752624512
    10. ',min' → logprob: -12.938616752624512

Token 776: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.000431060791016
    4. ')x' → logprob: -18.000431060791016
    5. '	x' → logprob: -18.625431060791016
    6. ' ' → logprob: -19.125431060791016
    7. '0' → logprob: -19.375431060791016
    8. '  ' → logprob: -19.625431060791016
    9. '    ' → logprob: -19.875431060791016
    10. '     ' → logprob: -20.000431060791016

Token 777: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.590104698669165e-05
    2. '1' → logprob: -9.375085830688477
    3. ',' → logprob: -15.125085830688477
    4. '[
' → logprob: -15.500085830688477
    5. '
' → logprob: -15.750085830688477
    6. '][' → logprob: -16.125085830688477
    7. ' [' → logprob: -16.250085830688477
    8. '```' → logprob: -16.625085830688477
    9. '   ' → logprob: -16.750085830688477
    10. ')[' → logprob: -17.125085830688477

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -13.500003814697266
    3. '2' → logprob: -14.250003814697266
    4. '0' → logprob: -14.375003814697266
    5. 'pos' → logprob: -14.750003814697266
    6. '[' → logprob: -14.812503814697266
    7. '```' → logprob: -15.812503814697266
    8. '-' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.437503814697266
    10. '{' → logprob: -16.500003814697266

Token 779: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10451994836330414
    2. '))
' → logprob: -2.354519844055176
    3. ')' → logprob: -5.604519844055176
    4. '])' → logprob: -8.229519844055176
    5. ')
' → logprob: -8.354519844055176
    6. '])
' → logprob: -10.479519844055176
    7. '))

' → logprob: -10.604519844055176
    8. ' ))' → logprob: -10.979519844055176
    9. '))
' → logprob: -11.354519844055176
    10. ' ))
' → logprob: -11.479519844055176

Token 780: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041152503341436386
    2. 'return' → logprob: -3.2911524772644043
    3. ' return' → logprob: -6.291152477264404
    4. 'spot' → logprob: -7.041152477264404
    5. ' spot' → logprob: -9.291152954101562
    6. '       ' → logprob: -9.666152954101562
    7. '           ' → logprob: -10.041152954101562
    8. '
' → logprob: -10.166152954101562
    9. '                   ' → logprob: -10.291152954101562
    10. '```' → logprob: -10.416152954101562

Token 781: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.28766611218452454
    2. ' spot' → logprob: -2.037666082382202
    3. 'pos' → logprob: -3.287666082382202
    4. 'spots' → logprob: -3.287666082382202
    5. 'return' → logprob: -3.537666082382202
    6. ' return' → logprob: -5.037666320800781
    7. ' spots' → logprob: -5.287666320800781
    8. ' pos' → logprob: -6.287666320800781
    9. 'best' → logprob: -7.787666320800781
    10. '               ' → logprob: -7.912666320800781

Token 782: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484937667847
    2. ' =' → logprob: -0.6931484937667847
    3. ',' → logprob: -14.443148612976074
    4. 's' → logprob: -15.943148612976074
    5. '＝' → logprob: -16.318147659301758
    6. ' ' → logprob: -16.318147659301758
    7. '=int' → logprob: -16.443147659301758
    8. '=
' → logprob: -16.443147659301758
    9. '=_' → logprob: -17.318147659301758
    10. ')' → logprob: -17.568147659301758

Token 783: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.0019286326132714748
    2. ' less' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.626928329467773
    4. '_less' → logprob: -18.376928329467773
    5. 'les' → logprob: -19.126928329467773
    6. 'least' → logprob: -19.501928329467773
    7. 'Less' → logprob: -19.751928329467773
    8. '-less' → logprob: -20.001928329467773
    9. 'le' → logprob: -20.126928329467773
    10. '0' → logprob: -21.126928329467773

Token 784: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -7.541112427134067e-05
    2. 'equal' → logprob: -9.500075340270996
    3. '_EQUAL' → logprob: -15.250075340270996
    4. 'Equal' → logprob: -16.000076293945312
    5. '.equal' → logprob: -16.125076293945312
    6. ' equal' → logprob: -16.875076293945312
    7. '[' → logprob: -17.250076293945312
    8. '_equ' → logprob: -17.625076293945312
    9. '_equals' → logprob: -18.000076293945312
    10. '(equal' → logprob: -18.625076293945312

Token 785: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.25
    3. '```' → logprob: -17.25
    4. '[-' → logprob: -17.75
    5. '   ' → logprob: -19.25
    6. ' [' → logprob: -19.75
    7. '\[' → logprob: -20.5
    8. '][' → logprob: -21.0
    9. ')[' → logprob: -21.375
    10. '       ' → logprob: -21.625

Token 786: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.50000286102295
    4. '(' → logprob: -16.875001907348633
    5. '-' → logprob: -17.000001907348633
    6. '][' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. ':' → logprob: -17.375001907348633
    10. '#' → logprob: -18.625001907348633

Token 787: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013319060672074556
    2. '[' → logprob: -6.626331806182861
    3. ']' → logprob: -13.25133228302002
    4. '1' → logprob: -13.25133228302002
    5. ' ][' → logprob: -13.87633228302002
    6. ')[' → logprob: -15.37633228302002
    7. '"][' → logprob: -15.50133228302002
    8. ''][' → logprob: -15.87633228302002
    9. '```' → logprob: -15.87633228302002
    10. '   ' → logprob: -15.87633228302002

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.75
    5. 'pos' → logprob: -19.25
    6. '
' → logprob: -19.5
    7. '-' → logprob: -20.0
    8. ' ' → logprob: -20.0
    9. '۱' → logprob: -20.5
    10. '

' → logprob: -20.875

Token 789: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042378030717372894
    2. '               ' → logprob: -3.6673779487609863
    3. '           ' → logprob: -4.667377948760986
    4. ']' → logprob: -5.667377948760986
    5. '<|end|>' → logprob: -6.667377948760986
    6. ')
' → logprob: -7.042377948760986
    7. '       ' → logprob: -7.542377948760986
    8. '                   ' → logprob: -9.542378425598145
    9. ')return' → logprob: -9.542378425598145
    10. '   ' → logprob: -10.542378425598145

Token 790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16712670028209686
    2. '           ' → logprob: -2.0421266555786133
    3. '       ' → logprob: -4.417126655578613
    4. 'spots' → logprob: -4.792126655578613
    5. ' spots' → logprob: -6.542126655578613
    6. '                   ' → logprob: -6.542126655578613
    7. '                       ' → logprob: -7.792126655578613
    8. '
' → logprob: -9.167126655578613
    9. '   ' → logprob: -9.417126655578613
    10. '            
' → logprob: -9.792126655578613

Token 791: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8209170699119568
    2. 'spots' → logprob: -0.8209170699119568
    3. 'l' → logprob: -2.9459171295166016
    4. '#' (adapté à ' #') → logprob: -3.1959171295166016
    5. 'lower' → logprob: -4.820917129516602
    6. '       ' → logprob: -5.695917129516602
    7. '   ' → logprob: -6.070917129516602
    8. ' spots' → logprob: -6.570917129516602
    9. 'existing' → logprob: -6.570917129516602
    10. 'spot' → logprob: -6.820917129516602

Token 792: ' park' (ID: 11796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34767723083496094
    2. 'spots' → logprob: -1.472677230834961
    3. '#' → logprob: -3.222677230834961
    4. '       ' → logprob: -4.972677230834961
    5. '           ' → logprob: -5.222677230834961
    6. ' if' → logprob: -5.722677230834961
    7. ' spots' → logprob: -6.222677230834961
    8. 'l' → logprob: -6.347677230834961
    9. 'lower' → logprob: -6.472677230834961
    10. '   ' → logprob: -7.347677230834961

Token 793: ' upper' (ID: 13057)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.18444038927555084
    2. 'car' → logprob: -2.1844403743743896
    3. 'spot' → logprob: -3.8094403743743896
    4. 'spots' → logprob: -4.059440612792969
    5. '_sp' → logprob: -5.309440612792969
    6. 'Car' → logprob: -5.434440612792969
    7. '_time' → logprob: -6.309440612792969
    8. ' spots' → logprob: -7.309440612792969
    9. 's' → logprob: -7.434440612792969
    10. '   ' → logprob: -7.559440612792969

Token 794: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3286159336566925
    2. '       ' → logprob: -3.20361590385437
    3. 'spot' → logprob: -3.20361590385437
    4. '   ' → logprob: -3.82861590385437
    5. '_token' → logprob: -3.82861590385437
    6. 'slot' → logprob: -4.078616142272949
    7. '_slot' → logprob: -4.453616142272949
    8. ' spot' → logprob: -4.453616142272949
    9. ' [' → logprob: -4.578616142272949
    10. '```' → logprob: -4.828616142272949

Token 795: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006775407586246729
    2. '][' → logprob: -5.506775379180908
    3. 'spot' → logprob: -6.631775379180908
    4. '```' → logprob: -7.256775379180908
    5. ']' → logprob: -8.381775856018066
    6. ' [' → logprob: -8.756775856018066
    7. '   ' → logprob: -10.006775856018066
    8. '       ' → logprob: -10.131775856018066
    9. ' spot' → logprob: -10.631775856018066
    10. '[
' → logprob: -10.631775856018066

Token 796: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.017966603860259056
    2. ' spots' → logprob: -4.2679667472839355
    3. '           ' → logprob: -6.3929667472839355
    4. 'if' → logprob: -6.7679667472839355
    5. '               ' → logprob: -7.7679667472839355
    6. '       ' → logprob: -7.8929667472839355
    7. '   ' → logprob: -10.267966270446777
    8. 'sp' → logprob: -10.642966270446777
    9. '```' → logprob: -10.642966270446777
    10. ' if' → logprob: -10.642966270446777

Token 797: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'spot' → logprob: -14.75
    3. '```' → logprob: -17.875
    4. ' [' → logprob: -19.0
    5. '[pos' → logprob: -19.625
    6. '[
' → logprob: -19.875
    7. 'Spot' → logprob: -20.25
    8. '][' → logprob: -20.375
    9. '       ' → logprob: -20.5
    10. ' spot' → logprob: -20.625

Token 798: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. ' spot' → logprob: -15.875
    4. 'slot' → logprob: -19.125
    5. 'Spot' → logprob: -20.125
    6. 'spo' → logprob: -20.25
    7. '```' → logprob: -20.5
    8. 'sp' → logprob: -20.75
    9. '0' → logprob: -20.75
    10. 'spots' → logprob: -21.0

Token 799: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02977178245782852
    2. '[' → logprob: -3.5297718048095703
    3. ')[' → logprob: -12.02977180480957
    4. '1' → logprob: -12.02977180480957
    5. ' ][' → logprob: -13.15477180480957
    6. ']' → logprob: -13.90477180480957
    7. '"][' → logprob: -13.90477180480957
    8. '```' → logprob: -14.02977180480957
    9. ''][' → logprob: -14.15477180480957
    10. '>[' → logprob: -14.27977180480957

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. '[' → logprob: -17.125
    4. ' ' → logprob: -17.5
    5. '0' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. 'upper' → logprob: -20.0625
    8. '۱' → logprob: -20.125
    9. '-' → logprob: -20.75
    10. ']' → logprob: -20.9375

Token 801: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008320206543430686
    2. ']=' → logprob: -7.3758320808410645
    3. ' ]' → logprob: -8.625831604003906
    4. '=' → logprob: -11.250831604003906
    5. ')' → logprob: -11.750831604003906
    6. ']=(' → logprob: -12.500831604003906
    7. ' =' → logprob: -13.625831604003906
    8. ')=' → logprob: -17.000831604003906
    9. ')]' → logprob: -17.250831604003906
    10. '']' → logprob: -17.750831604003906

Token 802: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759437680244446
    2. ' =' → logprob: -0.8259437680244446
    3. ')' → logprob: -12.700943946838379
    4. ']' → logprob: -14.575943946838379
    5. ')=' → logprob: -14.950943946838379
    6. ']=' → logprob: -15.075943946838379
    7. ' =(' → logprob: -16.325942993164062
    8. ' ' → logprob: -16.450942993164062
    9. '=(' → logprob: -17.200942993164062
    10. '=None' → logprob: -17.700942993164062

Token 803: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.001331190811470151
    2. ' (' → logprob: -6.626331329345703
    3. '(' → logprob: -13.126331329345703
    4. '(None' → logprob: -14.001331329345703
    5. '(c' → logprob: -14.126331329345703
    6. '(Car' → logprob: -14.126331329345703
    7. ' ' → logprob: -15.251331329345703
    8. '(ci' → logprob: -15.626331329345703
    9. '(vehicle' → logprob: -15.751331329345703
    10. '   ' → logprob: -16.251331329345703

Token 804: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -5.438573680294212e-06
    2. ' car' → logprob: -12.375005722045898
    3. '(car' → logprob: -13.625005722045898
    4. '	car' → logprob: -17.5000057220459
    5. '   ' → logprob: -19.8750057220459
    6. '.car' → logprob: -20.0000057220459
    7. '_car' → logprob: -20.0000057220459
    8. 'Car' → logprob: -20.1250057220459
    9. ' ' → logprob: -20.3750057220459
    10. '-car' → logprob: -21.0000057220459

Token 805: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.5577775128767826e-06
    2. 'id' → logprob: -12.375005722045898
    3. '_idx' → logprob: -14.375005722045898
    4. ''_' → logprob: -15.500005722045898
    5. 'user' → logprob: -16.3750057220459
    6. '```' → logprob: -16.6250057220459
    7. 'Id' → logprob: -16.8750057220459
    8. 'car' → logprob: -17.1250057220459
    9. '[' → logprob: -17.5000057220459
    10. '_car' → logprob: -17.7500057220459

Token 806: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012687401846051216
    2. ',current' → logprob: -4.3876872062683105
    3. ' ,' → logprob: -8.762687683105469
    4. 'current' → logprob: -11.137687683105469
    5. ' current' → logprob: -13.137687683105469
    6. ',
' → logprob: -14.012687683105469
    7. ',time' → logprob: -14.137687683105469
    8. ',c' → logprob: -14.262687683105469
    9. '(current' → logprob: -14.512687683105469
    10. ')' → logprob: -14.887687683105469

Token 807: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9950591325759888
    2. 'times' → logprob: -1.1200591325759888
    3. ' times' → logprob: -1.4950591325759888
    4. '0' → logprob: -3.745059013366699
    5. '1' → logprob: -4.245059013366699
    6. '10' → logprob: -4.995059013366699
    7. ' ,' → logprob: -4.995059013366699
    8. ' ' → logprob: -5.245059013366699
    9. ' park' → logprob: -5.495059013366699
    10. ' current' → logprob: -5.495059013366699

Token 808: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013362806290388107
    2. ' ,' → logprob: -4.513362884521484
    3. 'times' → logprob: -7.013362884521484
    4. ' times' → logprob: -7.638362884521484
    5. ',current' → logprob: -8.263362884521484
    6. '0' → logprob: -8.638362884521484
    7. ')' → logprob: -9.388362884521484
    8. ',t' → logprob: -9.388362884521484
    9. '),' → logprob: -9.763362884521484
    10. ',time' → logprob: -9.888362884521484

Token 809: ' park' (ID: 11796)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9856587052345276
    2. 'park' → logprob: -0.9856587052345276
    3. 'ctime' → logprob: -1.7356586456298828
    4. 'times' → logprob: -2.735658645629883
    5. ' current' → logprob: -5.360658645629883
    6. ' park' → logprob: -6.110658645629883
    7. ' times' → logprob: -6.610658645629883
    8. '10' → logprob: -7.235658645629883
    9. 'ptime' → logprob: -7.485658645629883
    10. 'ct' → logprob: -7.485658645629883

Token 810: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.000431861262768507
    2. 'time' → logprob: -7.750432014465332
    3. '_times' → logprob: -14.750432014465332
    4. ' time' → logprob: -15.125432014465332
    5. 'Time' → logprob: -15.500432014465332
    6. '"time' → logprob: -16.625431060791016
    7. 'times' → logprob: -16.625431060791016
    8. 'ime' → logprob: -16.875431060791016
    9. ')' → logprob: -16.875431060791016
    10. '_TIME' → logprob: -17.625431060791016

Token 811: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.897412822581828e-05
    2. ')
' → logprob: -9.625068664550781
    3. ' )' → logprob: -13.250068664550781
    4. '           ' → logprob: -15.000068664550781
    5. '<|end|>' → logprob: -15.500068664550781
    6. ')
' → logprob: -15.875068664550781
    7. ')return' → logprob: -16.75006866455078
    8. '       ' → logprob: -16.75006866455078
    9. ')

' → logprob: -17.00006866455078
    10. '               ' → logprob: -17.12506866455078

Token 812: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44029849767684937
    2. '<|end|>' → logprob: -1.6902985572814941
    3. '
' → logprob: -1.8152985572814941
    4. ')
' → logprob: -6.065298557281494
    5. '<|end|>' → logprob: -6.065298557281494
    6. '[' → logprob: -6.315298557281494
    7. '\n' → logprob: -7.190298557281494
    8. '```' → logprob: -8.565298080444336
    9. '[
' → logprob: -8.940298080444336
    10. ' 
' → logprob: -9.065298080444336

Token 813: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' move' (ID: 5275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3617676794528961
    2. ' return' → logprob: -1.3617676496505737
    3. '<|end|>' → logprob: -4.236767768859863
    4. ' car' → logprob: -4.986767768859863
    5. ' spots' → logprob: -4.986767768859863
    6. '       ' → logprob: -5.236767768859863
    7. 'car' → logprob: -5.611767768859863
    8. '           ' → logprob: -6.236767768859863
    9. ')' → logprob: -6.361767768859863
    10. 'spots' → logprob: -6.736767768859863

Token 815: ' existing' (ID: 9595)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.7974753975868225
    2. 'spots' → logprob: -0.7974753975868225
    3. 'lower' → logprob: -2.5474753379821777
    4. ' lower' → logprob: -5.797475337982178
    5. 'car' → logprob: -6.047475337982178
    6. 'down' → logprob: -6.422475337982178
    7. '(car' → logprob: -6.422475337982178
    8. '       ' → logprob: -6.547475337982178
    9. '           ' → logprob: -7.172475337982178
    10. '(lower' → logprob: -7.172475337982178

Token 816: ' lower' (ID: 6931)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4238898754119873
    2. 'lower' → logprob: -1.4238898754119873
    3. 'spots' → logprob: -3.2988898754119873
    4. '_car' → logprob: -3.7988898754119873
    5. 'l' → logprob: -3.7988898754119873
    6. ' spots' → logprob: -4.923890113830566
    7. 'cars' → logprob: -5.798890113830566
    8. '[' → logprob: -6.048890113830566
    9. '[l' → logprob: -6.548890113830566
    10. '(car' → logprob: -6.548890113830566

Token 817: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18293945491313934
    2. '<|end|>' → logprob: -1.9329394102096558
    3. ']' → logprob: -5.057939529418945
    4. '][' → logprob: -5.307939529418945
    5. '0' → logprob: -6.307939529418945
    6. 'token' → logprob: -6.932939529418945
    7. ')' → logprob: -6.932939529418945
    8. '<|end|>' → logprob: -7.057939529418945
    9. 'spot' → logprob: -7.182939529418945
    10. '[token' → logprob: -7.182939529418945

Token 818: ' upper' (ID: 13057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5162185430526733
    2. 'spots' → logprob: -1.7662185430526733
    3. ' spots' → logprob: -2.266218662261963
    4. '[' → logprob: -3.016218662261963
    5. ' (' → logprob: -3.141218662261963
    6. 'spot' → logprob: -3.766218662261963
    7. '(car' → logprob: -5.766218662261963
    8. 'lower' → logprob: -6.266218662261963
    9. '(sp' → logprob: -6.266218662261963
    10. 'upper' → logprob: -6.391218662261963

Token 819: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24077767133712769
    2. '<|end|>' → logprob: -2.6157777309417725
    3. '(car' → logprob: -2.8657777309417725
    4. '[' → logprob: -2.9907777309417725
    5. '
' → logprob: -4.490777492523193
    6. 'car' → logprob: -4.865777492523193
    7. ')
' → logprob: -5.615777492523193
    8. '_car' → logprob: -6.365777492523193
    9. '(' → logprob: -6.615777492523193
    10. '[
' → logprob: -7.365777492523193

Token 822: ' existing' (ID: 9595)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 823: ' is' (ID: 382)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.9791291356086731
    2. 'car' → logprob: -1.6041290760040283
    3. 'lower' → logprob: -1.8541290760040283
    4. '[' → logprob: -1.9791290760040283
    5. '_lower' → logprob: -2.6041290760040283
    6. '<|end|>' → logprob: -3.1041290760040283
    7. ')' → logprob: -6.479129314422607
    8. '(car' → logprob: -6.854129314422607
    9. ' car' → logprob: -6.854129314422607
    10. '.lower' → logprob: -7.479129314422607

Token 824: ' lower' (ID: 6931)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.5867536067962646
    2. 'car' → logprob: -1.3367536067962646
    3. 'l' → logprob: -2.3367536067962646
    4. ' spots' → logprob: -3.0867536067962646
    5. '(car' → logprob: -4.461753845214844
    6. 'lower' → logprob: -5.336753845214844
    7. ' car' → logprob: -5.711753845214844
    8. ' l' → logprob: -5.711753845214844
    9. '...' → logprob: -6.336753845214844
    10. '(' → logprob: -6.586753845214844

Token 825: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5945115089416504
    2. '<|end|>' → logprob: -1.0945115089416504
    3. '[' → logprob: -2.5945115089416504
    4. '(car' → logprob: -4.21951150894165
    5. '
' → logprob: -4.46951150894165
    6. '<|end|>' → logprob: -5.71951150894165
    7. '(' → logprob: -6.71951150894165
    8. ')
' → logprob: -6.84451150894165
    9. ' ' → logprob: -7.46951150894165
    10. '```' → logprob: -7.59451150894165

Token 826: ' we' (ID: 581)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.027404068037867546
    2. ' car' → logprob: -4.402403831481934
    3. '(car' → logprob: -5.777403831481934
    4. '0' → logprob: -6.027403831481934
    5. ' not' → logprob: -6.152403831481934
    6. 'not' → logprob: -6.652403831481934
    7. 'spot' → logprob: -6.902403831481934
    8. 'spots' → logprob: -6.902403831481934
    9. '...' → logprob: -7.902403831481934
    10. 'park' → logprob: -8.027403831481934

Token 827: ' put' (ID: 3006)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.8463809490203857
    2. ' should' → logprob: -1.3463809490203857
    3. ' just' → logprob: -2.8463809490203857
    4. 'continue' → logprob: -3.0963809490203857
    5. 'replace' → logprob: -3.4713809490203857
    6. ' continue' → logprob: -3.5963809490203857
    7. ' keep' → logprob: -3.9713809490203857
    8. 'spots' → logprob: -4.471381187438965
    9. ' want' → logprob: -4.596381187438965
    10. '=' → logprob: -4.596381187438965

Token 828: ' new' (ID: 620)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.14096412062644958
    2. 'car' → logprob: -2.5159640312194824
    3. ' (' → logprob: -3.6409640312194824
    4. ' car' → logprob: -4.015964031219482
    5. ' the' → logprob: -5.515964031219482
    6. 'the' → logprob: -7.015964031219482
    7. '(' → logprob: -7.265964031219482
    8. '	car' → logprob: -8.39096450805664
    9. ' spots' → logprob: -8.64096450805664
    10. 'spots' → logprob: -9.01596450805664

Token 829: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.009480396285653114
    2. 'car' → logprob: -5.5094804763793945
    3. ')' → logprob: -6.0094804763793945
    4. '[' → logprob: -7.0094804763793945
    5. ' car' → logprob: -7.5094804763793945
    6. '_token' → logprob: -7.6344804763793945
    7. ')_' → logprob: -8.759480476379395
    8. '```' → logprob: -9.134480476379395
    9. ' _' → logprob: -9.259480476379395
    10. ']' → logprob: -9.384480476379395

Token 830: ' upper' (ID: 13057)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.702242374420166
    2. '[' → logprob: -0.952242374420166
    3. '<|end|>' → logprob: -3.077242374420166
    4. '(car' → logprob: -3.702242374420166
    5. '(' → logprob: -4.452242374420166
    6. ']' → logprob: -4.577242374420166
    7. '
' → logprob: -4.702242374420166
    8. '[
' → logprob: -5.827242374420166
    9. '(
' → logprob: -6.327242374420166
    10. '```' → logprob: -6.577242374420166

Token 831: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26952269673347473
    2. '<|end|>' → logprob: -1.8945226669311523
    3. '
' → logprob: -3.0195226669311523
    4. '[' → logprob: -4.269522666931152
    5. '(car' → logprob: -4.644522666931152
    6. '<|end|>' → logprob: -5.769522666931152
    7. ')
' → logprob: -6.019522666931152
    8. '(' → logprob: -6.894522666931152
    9. ' ' → logprob: -7.144522666931152
    10. '```' → logprob: -7.519522666931152

Token 832: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17433439195156097
    2. '<|end|>' → logprob: -2.1743342876434326
    3. '
' → logprob: -3.5493342876434326
    4. '[' → logprob: -5.174334526062012
    5. ')
' → logprob: -6.299334526062012
    6. '(' → logprob: -6.299334526062012
    7. ' ' → logprob: -6.799334526062012
    8. '(
' → logprob: -6.924334526062012
    9. '(car' → logprob: -6.924334526062012
    10. '<|end|>' → logprob: -7.174334526062012

Token 833: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 834: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.023400846868753433
    2. ' True' → logprob: -3.7734007835388184
    3. 'False' → logprob: -8.773401260375977
    4. ' False' → logprob: -14.648401260375977
    5. '(True' → logprob: -16.523401260375977
    6. 'None' → logprob: -18.023401260375977
    7. '=True' → logprob: -19.398401260375977
    8. 'true' → logprob: -20.398401260375977
    9. 'spot' → logprob: -20.523401260375977
    10. 'space' → logprob: -21.398401260375977

Token 835: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 836: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32096046209335327
    2. '[' → logprob: -2.320960521697998
    3. '<|end|>' → logprob: -3.195960521697998
    4. 'else' → logprob: -3.945960521697998
    5. '       ' → logprob: -4.070960521697998
    6. 'spots' → logprob: -4.195960521697998
    7. ' spots' → logprob: -4.320960521697998
    8. ':' → logprob: -4.695960521697998
    9. '
' → logprob: -4.820960521697998
    10. '(' → logprob: -4.945960521697998

Token 838: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.018646644428372383
    2. ' less' → logprob: -4.018646717071533
    3. 'not' → logprob: -8.643646240234375
    4. 'len' → logprob: -8.768646240234375
    5. ' not' → logprob: -9.518646240234375
    6. 'les' → logprob: -10.393646240234375
    7. 'waiting' → logprob: -10.643646240234375
    8. ' len' → logprob: -11.768646240234375
    9. ' waiting' → logprob: -12.518646240234375
    10. 'False' → logprob: -12.518646240234375

Token 839: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01260313019156456
    2. '_equal' → logprob: -4.762603282928467
    3. 'equal' → logprob: -7.387603282928467
    4. 'else' → logprob: -7.512603282928467
    5. '_less' → logprob: -7.637603282928467
    6. '_else' → logprob: -8.137602806091309
    7. '.' → logprob: -8.762602806091309
    8. '...' → logprob: -8.887602806091309
    9. 'and' → logprob: -9.012602806091309
    10. '[' → logprob: -9.137602806091309

Token 840: '               ' (ID: 506)
  Prédit: ' less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.5009825229644775
    2. '               ' → logprob: -1.3759825229644775
    3. '           ' → logprob: -2.5009825229644775
    4. 'less' → logprob: -3.0009825229644775
    5. '[' → logprob: -5.750982284545898
    6. '            ' → logprob: -6.375982284545898
    7. '   ' → logprob: -6.750982284545898
    8. '_less' → logprob: -6.750982284545898
    9. '       ' → logprob: -7.375982284545898
    10. '                   ' → logprob: -7.750982284545898

Token 841: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.4310421049594879
    2. ' less' → logprob: -1.0560420751571655
    3. '       ' → logprob: -6.681042194366455
    4. '   ' → logprob: -7.306042194366455
    5. '           ' → logprob: -8.681041717529297
    6. '               ' → logprob: -10.056041717529297
    7. '-less' → logprob: -10.806041717529297
    8. '_less' → logprob: -10.806041717529297
    9. 'return' → logprob: -10.931041717529297
    10. 'diff' → logprob: -10.931041717529297

Token 842: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -4.417976379045285e-05
    2. '.' → logprob: -10.500043869018555
    3. ' .' → logprob: -12.000043869018555
    4. 'sort' → logprob: -13.125043869018555
    5. '.append' → logprob: -13.250043869018555
    6. '_sorted' → logprob: -13.250043869018555
    7. '           ' → logprob: -13.375043869018555
    8. '               ' → logprob: -13.500043869018555
    9. '_sort' → logprob: -13.875043869018555
    10. '        ' → logprob: -15.000043869018555

Token 843: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0001129602751461789
    2. '()' → logprob: -9.250112533569336
    3. 'key' → logprob: -11.500112533569336
    4. '()
' → logprob: -12.625112533569336
    5. ',key' → logprob: -13.375112533569336
    6. '```' → logprob: -14.375112533569336
    7. '(' → logprob: -14.750112533569336
    8. ' key' → logprob: -15.250112533569336
    9. '(lambda' → logprob: -15.250112533569336
    10. '(reverse' → logprob: -15.375112533569336

Token 844: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.4617256056226324e-05
    2. '=' → logprob: -11.250014305114746
    3. 'lambda' → logprob: -13.375014305114746
    4. '(lambda' → logprob: -18.000015258789062
    5. ' =' → logprob: -18.250015258789062
    6. '=
' → logprob: -20.375015258789062
    7. '=\' → logprob: -20.750015258789062
    8. '   ' → logprob: -20.750015258789062
    9. '=len' → logprob: -20.750015258789062
    10. '=l' → logprob: -20.875015258789062

Token 845: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00037716879160143435
    2. ' lambda' → logprob: -8.00037670135498
    3. '=lambda' → logprob: -10.50037670135498
    4. '(lambda' → logprob: -11.25037670135498
    5. 'x' → logprob: -13.87537670135498
    6. '   ' → logprob: -16.250377655029297
    7. 'lam' → logprob: -17.375377655029297
    8. 'λ' → logprob: -17.875377655029297
    9. '_lambda' → logprob: -18.625377655029297
    10. '```' → logprob: -19.250377655029297

Token 846: ':(' (ID: 7990)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.015452088788151741
    2. '=(' → logprob: -4.265451908111572
    3. '=' → logprob: -7.140451908111572
    4. '(lambda' → logprob: -8.14045238494873
    5. '=x' → logprob: -8.89045238494873
    6. '(x' → logprob: -10.51545238494873
    7. ':' → logprob: -11.14045238494873
    8. '(' → logprob: -12.01545238494873
    9. 'lambda' → logprob: -12.01545238494873
    10. ':(' → logprob: -13.26545238494873

Token 847: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.991464786347933e-05
    2. ' x' → logprob: -9.750060081481934
    3. '0' → logprob: -13.375060081481934
    4. '(x' → logprob: -17.625059127807617
    5. 'lambda' → logprob: -19.750059127807617
    6. '
' → logprob: -19.875059127807617
    7. ')x' → logprob: -19.875059127807617
    8. '1' → logprob: -20.125059127807617
    9. '[' → logprob: -20.250059127807617
    10. ' ' → logprob: -21.500059127807617

Token 848: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6550729419104755e-05
    2. '0' → logprob: -10.250036239624023
    3. '1' → logprob: -14.500036239624023
    4. '[
' → logprob: -16.250036239624023
    5. '(' → logprob: -16.375036239624023
    6. '
' → logprob: -16.500036239624023
    7. ' [' → logprob: -16.500036239624023
    8. '   ' → logprob: -16.625036239624023
    9. ' ' → logprob: -17.125036239624023
    10. '{' → logprob: -17.375036239624023

Token 849: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. '[' → logprob: -14.625007629394531
    4. '1' → logprob: -14.625007629394531
    5. '```' → logprob: -17.68750762939453
    6. '
' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.12500762939453
    8. '۰' → logprob: -18.75000762939453
    9. '00' → logprob: -18.93750762939453
    10. '  ' → logprob: -19.18750762939453

Token 850: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06379269808530807
    2. ',x' → logprob: -3.0637927055358887
    3. '[' → logprob: -4.438792705535889
    4. ',pos' → logprob: -6.438792705535889
    5. ',[' → logprob: -6.563792705535889
    6. ' ,' → logprob: -9.31379222869873
    7. ',
' → logprob: -10.81379222869873
    8. ',user' → logprob: -10.81379222869873
    9. ',int' → logprob: -11.06379222869873
    10. ',index' → logprob: -11.68879222869873

Token 851: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029772015288472176
    2. '0' → logprob: -3.5297720432281494
    3. ' x' → logprob: -11.27977180480957
    4. '1' → logprob: -11.77977180480957
    5. 'lambda' → logprob: -13.90477180480957
    6. ')x' → logprob: -15.90477180480957
    7. '(x' → logprob: -16.27977180480957
    8. '$x' → logprob: -16.77977180480957
    9. ' ' → logprob: -17.15477180480957
    10. '
' → logprob: -17.90477180480957

Token 852: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008466706611216068
    2. '1' → logprob: -5.008466720581055
    3. ',' → logprob: -6.383466720581055
    4. ',[' → logprob: -11.008466720581055
    5. '0' → logprob: -11.633466720581055
    6. '```' → logprob: -12.133466720581055
    7. '-' → logprob: -12.258466720581055
    8. '[
' → logprob: -12.508466720581055
    9. '][' → logprob: -12.758466720581055
    10. '   ' → logprob: -13.008466720581055

Token 853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005548207554966211
    2. '0' → logprob: -7.500555038452148
    3. '[' → logprob: -14.625555038452148
    4. '
' → logprob: -15.000555038452148
    5. '```' → logprob: -15.125555038452148
    6. '   ' → logprob: -15.688055038452148
    7. '-' → logprob: -16.25055503845215
    8. ' ' → logprob: -16.50055503845215
    9. '{' → logprob: -16.75055503845215
    10. '(' → logprob: -16.75055503845215

Token 854: ']))
' (ID: 24801)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5711065530776978
    2. ']))
' → logprob: -1.0711065530776978
    3. ']))' → logprob: -2.821106433868408
    4. '))' → logprob: -3.446106433868408
    5. '])
' → logprob: -7.321106433868408
    6. ']' → logprob: -8.946106910705566
    7. '[' → logprob: -9.196106910705566
    8. '])' → logprob: -9.446106910705566
    9. '           ' → logprob: -10.821106910705566
    10. '               ' → logprob: -11.946106910705566

Token 855: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05913212150335312
    2. ' spot' → logprob: -3.3091320991516113
    3. '                ' → logprob: -5.184132099151611
    4. 'spot' → logprob: -5.684132099151611
    5. '<|end|>' → logprob: -6.184132099151611
    6. '                   ' → logprob: -6.559132099151611
    7. '       ' → logprob: -6.684132099151611
    8. '                
' → logprob: -6.934132099151611
    9. '[' → logprob: -7.184132099151611
    10. '```' → logprob: -7.184132099151611

Token 856: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.016382716596126556
    2. ' spot' → logprob: -4.141382694244385
    3. '               ' → logprob: -9.016383171081543
    4. 'spots' → logprob: -9.016383171081543
    5. 'pos' → logprob: -11.016383171081543
    6. 'print' → logprob: -11.141383171081543
    7. '                   ' → logprob: -11.641383171081543
    8. ' spots' → logprob: -11.891383171081543
    9. '```' → logprob: -12.016383171081543
    10. '                               ' → logprob: -12.391383171081543

Token 857: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.423587799072266
    4. ',' → logprob: -18.173587799072266
    5. '=_' → logprob: -18.798587799072266
    6. '＝' → logprob: -18.798587799072266
    7. ' =
' → logprob: -19.048587799072266
    8. '           ' → logprob: -19.173587799072266
    9. '=
' → logprob: -19.173587799072266
    10. '   ' → logprob: -19.423587799072266

Token 858: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.0021852378267794847
    2. ' less' → logprob: -6.127185344696045
    3. '_less' → logprob: -16.377185821533203
    4. 'les' → logprob: -17.752185821533203
    5. 'Less' → logprob: -18.002185821533203
    6. '   ' → logprob: -18.252185821533203
    7. '-less' → logprob: -18.627185821533203
    8. 'least' → logprob: -19.502185821533203
    9. '[' → logprob: -19.877185821533203
    10. 'eless' → logprob: -19.877185821533203

Token 859: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016766376211307943
    2. 'less' → logprob: -8.875167846679688
    3. '[-' → logprob: -11.625167846679688
    4. ' [' → logprob: -12.000167846679688
    5. '0' → logprob: -12.375167846679688
    6. '_less' → logprob: -12.500167846679688
    7. ' less' → logprob: -13.000167846679688
    8. '   ' → logprob: -15.125167846679688
    9. '[
' → logprob: -15.250167846679688
    10. '
' → logprob: -15.625167846679688

Token 860: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007048065308481455
    2. '[' → logprob: -7.500704765319824
    3. 'less' → logprob: -9.000704765319824
    4. ' ' → logprob: -10.750704765319824
    5. '(' → logprob: -13.500704765319824
    6. '1' → logprob: -13.875704765319824
    7. 'least' → logprob: -14.000704765319824
    8. '   ' → logprob: -14.125704765319824
    9. ' [' → logprob: -14.500704765319824
    10. '-' → logprob: -14.500704765319824

Token 861: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2812599539756775
    2. '[' → logprob: -1.4062600135803223
    3. ')[' → logprob: -10.156259536743164
    4. ' ][' → logprob: -10.406259536743164
    5. ' [' → logprob: -11.531259536743164
    6. '>[' → logprob: -11.656259536743164
    7. '+' → logprob: -12.656259536743164
    8. '}[' → logprob: -12.906259536743164
    9. ']' → logprob: -13.156259536743164
    10. '"][' → logprob: -13.156259536743164

Token 862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.500007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '0' → logprob: -13.875007629394531
    5. '][' → logprob: -15.750007629394531
    6. '```' → logprob: -15.937507629394531
    7. '   ' → logprob: -16.06250762939453
    8. '
' → logprob: -16.18750762939453
    9. 'pos' → logprob: -16.37500762939453
    10. '(' → logprob: -17.06250762939453

Token 863: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1559775471687317
    2. '               ' → logprob: -2.155977487564087
    3. '<|end|>' → logprob: -4.655977725982666
    4. ']
' → logprob: -4.905977725982666
    5. ')' → logprob: -5.155977725982666
    6. '       ' → logprob: -6.655977725982666
    7. '[' → logprob: -6.780977725982666
    8. '           ' → logprob: -7.280977725982666
    9. '
' → logprob: -7.780977725982666
    10. ':
' → logprob: -7.905977725982666

Token 864: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6075409054756165
    2. ' spots' → logprob: -1.7325408458709717
    3. '       ' → logprob: -1.8575408458709717
    4. 'spots' → logprob: -2.4825408458709717
    5. '[' → logprob: -4.232541084289551
    6. '           ' → logprob: -4.857541084289551
    7. '                       ' → logprob: -5.357541084289551
    8. '                   ' → logprob: -5.482541084289551
    9. '```' → logprob: -5.982541084289551
    10. '                ' → logprob: -7.482541084289551

Token 865: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.6496682167053223
    2. ' spots' → logprob: -0.7746682167053223
    3. '               ' → logprob: -4.774668216705322
    4. '       ' → logprob: -5.649668216705322
    5. '           ' → logprob: -5.899668216705322
    6. '                       ' → logprob: -7.274668216705322
    7. '                   ' → logprob: -7.649668216705322
    8. '```' → logprob: -8.399667739868164
    9. '#' → logprob: -9.024667739868164
    10. 'return' → logprob: -9.524667739868164

Token 866: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.375000953674316
    3. 'spot' → logprob: -15.625000953674316
    4. '           ' → logprob: -16.0
    5. ' [' → logprob: -16.25
    6. '               ' → logprob: -16.375
    7. '][' → logprob: -17.0
    8. '       ' → logprob: -17.25
    9. '[pos' → logprob: -17.5
    10. '                   ' → logprob: -18.625

Token 867: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -1.1472419600977446e-06
    2. ' spot' → logprob: -14.250000953674316
    3. '[' → logprob: -14.750000953674316
    4. 'slot' → logprob: -17.375001907348633
    5. 'pos' → logprob: -19.000001907348633
    6. 'sp' → logprob: -20.000001907348633
    7. 'stop' → logprob: -20.375001907348633
    8. 'sport' → logprob: -20.375001907348633
    9. 'spots' → logprob: -20.500001907348633
    10. 'spo' → logprob: -20.500001907348633

Token 868: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016078360378742218
    2. '[' → logprob: -4.141078472137451
    3. ' ][' → logprob: -11.266077995300293
    4. ')[' → logprob: -11.891077995300293
    5. '       ' → logprob: -12.391077995300293
    6. '           ' → logprob: -12.641077995300293
    7. ''][' → logprob: -13.016077995300293
    8. ']][' → logprob: -13.016077995300293
    9. '   ' → logprob: -13.016077995300293
    10. ']' → logprob: -13.141077995300293

Token 869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04866219684481621
    2. '0' → logprob: -3.0486621856689453
    3. '[' → logprob: -9.798662185668945
    4. '```' → logprob: -12.486162185668945
    5. '][' → logprob: -12.798662185668945
    6. '   ' → logprob: -13.486162185668945
    7. '-' → logprob: -13.548662185668945
    8. '
' → logprob: -13.673662185668945
    9. 'lower' → logprob: -13.673662185668945
    10. ']' → logprob: -13.736162185668945

Token 870: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015154958702623844
    2. '=' → logprob: -5.140154838562012
    3. ']=' → logprob: -5.140154838562012
    4. ' =' → logprob: -5.765154838562012
    5. ' ]' → logprob: -9.265154838562012
    6. ']=(' → logprob: -9.640154838562012
    7. '[' → logprob: -11.640154838562012
    8. ')' → logprob: -11.765154838562012
    9. '][' → logprob: -12.640154838562012
    10. '=(' → logprob: -13.015154838562012

Token 871: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07022640854120255
    2. ' =' → logprob: -2.6952264308929443
    3. '[' → logprob: -8.320226669311523
    4. '=(' → logprob: -10.820226669311523
    5. '[(' → logprob: -12.195226669311523
    6. '           ' → logprob: -12.320226669311523
    7. ']=' → logprob: -12.820226669311523
    8. ']' → logprob: -12.945226669311523
    9. '```' → logprob: -13.195226669311523
    10. '               ' → logprob: -13.195226669311523

Token 872: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.00030900631099939346
    2. ' (' → logprob: -8.125308990478516
    3. '(' → logprob: -11.500308990478516
    4. '(c' → logprob: -13.625308990478516
    5. '(None' → logprob: -13.875308990478516
    6. '(ci' → logprob: -16.375308990478516
    7. 'None' → logprob: -16.500308990478516
    8. '(Car' → logprob: -16.500308990478516
    9. '(current' → logprob: -16.750308990478516
    10. '   ' → logprob: -16.875308990478516

Token 873: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004089916590601206
    2. '(car' → logprob: -5.504089832305908
    3. ' car' → logprob: -11.754090309143066
    4. '	car' → logprob: -13.754090309143066
    5. '(' → logprob: -14.504090309143066
    6. '.car' → logprob: -14.754090309143066
    7. '_car' → logprob: -15.379090309143066
    8. '   ' → logprob: -15.879090309143066
    9. 'cars' → logprob: -15.879090309143066
    10. 'Car' → logprob: -16.00408935546875

Token 874: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.002362563507631421
    2. 'id' → logprob: -6.1273627281188965
    3. '_idx' → logprob: -8.752362251281738
    4. 'idx' → logprob: -11.252362251281738
    5. 'd' → logprob: -13.252362251281738
    6. '```' → logprob: -13.752362251281738
    7. 'Id' → logprob: -14.002362251281738
    8. '-' → logprob: -14.502362251281738
    9. '+' → logprob: -14.877362251281738
    10. '-id' → logprob: -15.627362251281738

Token 875: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1607559472322464
    2. '+' → logprob: -1.91075599193573
    3. ' +' → logprob: -7.9107561111450195
    4. ' ,' → logprob: -9.16075611114502
    5. '+,' → logprob: -10.78575611114502
    6. '   ' → logprob: -11.41075611114502
    7. '       ' → logprob: -12.16075611114502
    8. '           ' → logprob: -12.53575611114502
    9. '),' → logprob: -12.66075611114502
    10. ')' → logprob: -12.66075611114502

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -8.000490188598633
    3. '0' → logprob: -8.875490188598633
    4. '+' → logprob: -12.625490188598633
    5. 'park' → logprob: -12.875490188598633
    6. ')' → logprob: -13.250490188598633
    7. '```' → logprob: -13.625490188598633
    8. '10' → logprob: -13.875490188598633
    9. '2' → logprob: -14.125490188598633
    10. '`' → logprob: -14.625490188598633

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ' ,' → logprob: -10.625042915344238
    3. '),' → logprob: -12.000042915344238
    4. ')' → logprob: -12.125042915344238
    5. '[' → logprob: -12.625042915344238
    6. ',
' → logprob: -13.125042915344238
    7. '<|end|>' → logprob: -15.125042915344238
    8. '```' → logprob: -15.375042915344238
    9. '‌,' → logprob: -16.375043869018555
    10. '   ' → logprob: -16.500043869018555

Token 878: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.029787063598632812
    2. ' park' → logprob: -3.529787063598633
    3. 'par' → logprob: -11.029787063598633
    4. 'parking' → logprob: -12.029787063598633
    5. 'times' → logprob: -12.654787063598633
    6. 'pack' → logprob: -13.404787063598633
    7. ' times' → logprob: -13.529787063598633
    8. 'parks' → logprob: -13.654787063598633
    9. 'car' → logprob: -13.779787063598633
    10. ' ' → logprob: -14.029787063598633

Token 879: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.77627644513268e-06
    2. 'time' → logprob: -11.750008583068848
    3. '_times' → logprob: -15.000008583068848
    4. 'Time' → logprob: -15.500008583068848
    5. ' time' → logprob: -16.375009536743164
    6. '"time' → logprob: -16.875009536743164
    7. ')' → logprob: -17.125009536743164
    8. '_TIME' → logprob: -17.500009536743164
    9. 'times' → logprob: -17.875009536743164
    10. '```' → logprob: -17.875009536743164

Token 880: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03836000710725784
    2. ')
' → logprob: -3.288360118865967
    3. ')return' → logprob: -8.663359642028809
    4. '           ' → logprob: -9.413359642028809
    5. '       ' → logprob: -10.788359642028809
    6. '               ' → logprob: -10.913359642028809
    7. '[' → logprob: -12.288359642028809
    8. ']' → logprob: -12.288359642028809
    9. '<|end|>' → logprob: -12.538359642028809
    10. ')
' → logprob: -13.163359642028809

Token 881: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07844880223274231
    2. '               ' → logprob: -4.20344877243042
    3. 'return' → logprob: -4.32844877243042
    4. ' return' → logprob: -4.32844877243042
    5. '<|end|>' → logprob: -4.45344877243042
    6. '       ' → logprob: -4.70344877243042
    7. '           ' → logprob: -5.45344877243042
    8. '	return' → logprob: -6.07844877243042
    9. '```' → logprob: -6.57844877243042
    10. '
' → logprob: -6.57844877243042

Token 882: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10644390434026718
    2. 'return' (adapté à ' return') → logprob: -2.6064438819885254
    3. '               ' → logprob: -4.106443881988525
    4. '
' → logprob: -5.481443881988525
    5. '<|end|>' → logprob: -6.231443881988525
    6. '       ' → logprob: -6.356443881988525
    7. '           ' → logprob: -7.481443881988525
    8. '                               ' → logprob: -7.606443881988525
    9. '	return' → logprob: -7.606443881988525
    10. ':return' → logprob: -8.106444358825684

Token 883: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.27701112627983093
    2. 'False' → logprob: -1.5270111560821533
    3. ' True' → logprob: -3.7770111560821533
    4. ' False' → logprob: -6.277010917663574
    5. '(True' → logprob: -17.27701187133789
    6. '=True' → logprob: -18.02701187133789
    7. '(False' → logprob: -19.02701187133789
    8. '```' → logprob: -19.15201187133789
    9. 'spot' → logprob: -19.40201187133789
    10. 'None' → logprob: -19.40201187133789

Token 884: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 886: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23852689564228058
    2. 'False' → logprob: -1.9885269403457642
    3. ' False' → logprob: -2.7385268211364746
    4. 'return' → logprob: -6.113526821136475
    5. ' return' → logprob: -6.238526821136475
    6. '```' → logprob: -6.363526821136475
    7. ' 
' → logprob: -6.613526821136475
    8. '   ' → logprob: -7.488526821136475
    9. ' false' → logprob: -7.613526821136475
    10. '        
' → logprob: -7.613526821136475

Token 887: ' no' (ID: 860)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12905427813529968
    2. 'return' → logprob: -2.379054307937622
    3. ' False' → logprob: -4.504054069519043
    4. 'None' → logprob: -4.879054069519043
    5. '       ' → logprob: -5.004054069519043
    6. ' return' → logprob: -6.629054069519043
    7. '           ' → logprob: -6.754054069519043
    8. ' None' → logprob: -8.254054069519043
    9. '(False' → logprob: -9.254054069519043
    10. 'True' → logprob: -9.379054069519043

Token 888: ' available' (ID: 2839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3458898663520813
    2. ' return' → logprob: -1.4708898067474365
    3. 't' → logprob: -3.7208898067474365
    4. ' True' → logprob: -4.470890045166016
    5. 'True' → logprob: -4.970890045166016
    6. '       ' → logprob: -5.345890045166016
    7. 'False' → logprob: -5.470890045166016
    8. '   ' → logprob: -5.845890045166016
    9. 'def' → logprob: -6.470890045166016
    10. ' False' → logprob: -6.720890045166016

Token 889: ' spots' (ID: 25522)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20604798197746277
    2. ' None' → logprob: -1.7060480117797852
    3. '```' → logprob: -7.081048011779785
    4. '(None' → logprob: -7.206048011779785
    5. '\n' → logprob: -7.581048011779785
    6. ' spots' → logprob: -8.081048011779785
    7. '_car' → logprob: -8.206048011779785
    8. 'car' → logprob: -8.456048011779785
    9. '.' → logprob: -8.706048011779785
    10. '_' → logprob: -8.956048011779785

Token 890: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0755137205123901
    2. '
' → logprob: -1.2005137205123901
    3. '        
' → logprob: -1.7005137205123901
    4. 'return' → logprob: -2.7005138397216797
    5. '\n' → logprob: -3.4505138397216797
    6. ' 
' → logprob: -3.7005138397216797
    7. ' return' → logprob: -4.07551383972168
    8. '    
' → logprob: -4.20051383972168
    9. 'False' → logprob: -5.32551383972168
    10. '            
' → logprob: -5.57551383972168

Token 891: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5587392449378967
    2. 'return' → logprob: -1.183739185333252
    3. '       ' → logprob: -2.933739185333252
    4. ' False' → logprob: -3.308739185333252
    5. 'False' → logprob: -3.808739185333252
    6. '        
' → logprob: -5.433739185333252
    7. ' 
' → logprob: -5.558739185333252
    8. '   ' → logprob: -7.433739185333252
    9. '    
' → logprob: -7.433739185333252
    10. '
' → logprob: -9.18373966217041

Token 892: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022412478923798
    2. ' False' → logprob: -1.9102240800857544
    3. '(False' → logprob: -17.53522491455078
    4. '_false' → logprob: -19.78522491455078
    5. '=False' → logprob: -19.91022491455078
    6. ' false' → logprob: -20.16022491455078
    7. '.False' → logprob: -22.03522491455078
    8. 'false' → logprob: -22.16022491455078
    9. 'None' → logprob: -22.78522491455078
    10. ' ' → logprob: -23.66022491455078

Token 893: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12080863118171692
    2. '   ' → logprob: -2.9958086013793945
    3. '<|end|>' → logprob: -2.9958086013793945
    4. '           ' → logprob: -4.9958086013793945
    5. '
' → logprob: -6.1208086013793945
    6. '	' → logprob: -7.2458086013793945
    7. '    
' → logprob: -7.4958086013793945
    8. '	return' → logprob: -7.4958086013793945
    9. '<|end|>' → logprob: -7.4958086013793945
    10. '\n' → logprob: -7.4958086013793945

Token 894: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013913080329075456
    2. 'return' → logprob: -7.251391410827637
    3. '           ' → logprob: -8.001391410827637
    4. '   ' → logprob: -8.376391410827637
    5. ' return' → logprob: -9.376391410827637
    6. '	return' → logprob: -11.501391410827637
    7. '```' → logprob: -11.876391410827637
    8. '<|end|>' → logprob: -12.376391410827637
    9. '               ' → logprob: -13.251391410827637
    10. '        
' → logprob: -13.376391410827637

Token 895: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14681729674339294
    2. '       ' → logprob: -2.396817207336426
    3. ' return' → logprob: -3.146817207336426
    4. '   ' → logprob: -6.271817207336426
    5. '           ' → logprob: -7.646817207336426
    6. '```' → logprob: -9.646817207336426
    7. '
' → logprob: -10.021817207336426
    8. 'False' → logprob: -10.771817207336426
    9. '        
' → logprob: -10.771817207336426
    10. '	return' → logprob: -11.271817207336426

Token 896: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -17.76104736328125
    4. '=False' → logprob: -21.01104736328125
    5. 'false' → logprob: -22.13604736328125
    6. '_false' → logprob: -23.13604736328125
    7. 'None' → logprob: -23.51104736328125
    8. '.False' → logprob: -23.88604736328125
    9. 'True' → logprob: -24.63604736328125
    10. ' false' → logprob: -24.76104736328125

Token 897: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 898: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49507439136505127
    2. '<|end|>' → logprob: -1.8700743913650513
    3. ')' → logprob: -2.3700742721557617
    4. '
' → logprob: -3.1200742721557617
    5. '(' → logprob: -3.6200742721557617
    6. ' ' → logprob: -3.9950742721557617
    7. '   ' → logprob: -4.245074272155762
    8. '\n' → logprob: -4.995074272155762
    9. '\' → logprob: -5.245074272155762
    10. '_' → logprob: -5.620074272155762

Token 899: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46202173829078674
    2. 'while' → logprob: -1.2120217084884644
    3. ' while' → logprob: -3.087021827697754
    4. '
' → logprob: -4.712021827697754
    5. '<|end|>' → logprob: -5.087021827697754
    6. '   ' → logprob: -5.462021827697754
    7. '        
' → logprob: -5.962021827697754
    8. '```' → logprob: -6.587021827697754
    9. '	while' → logprob: -7.212021827697754
    10. '#' → logprob: -7.587021827697754

Token 900: ' park' (ID: 11796)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -1.0540530681610107
    2. 'process' → logprob: -1.1790530681610107
    3. 'update' → logprob: -2.0540530681610107
    4. ' simulate' → logprob: -2.9290530681610107
    5. 'advance' → logprob: -3.1790530681610107
    6. ' process' → logprob: -3.1790530681610107
    7. ' update' → logprob: -3.6790530681610107
    8. 'leave' → logprob: -4.17905330657959
    9. 'can' → logprob: -5.17905330657959
    10. 'car' → logprob: -5.30405330657959

Token 901: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0008286866941489279
    2. '_c' → logprob: -8.500828742980957
    3. 'Car' → logprob: -8.875828742980957
    4. '_' → logprob: -9.000828742980957
    5. '(car' → logprob: -9.250828742980957
    6. '<Car' → logprob: -9.750828742980957
    7. '(' → logprob: -10.250828742980957
    8. 'car' → logprob: -10.375828742980957
    9. ')' → logprob: -10.500828742980957
    10. '_C' → logprob: -10.750828742980957

Token 902: '_full' (ID: 36973)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06521208584308624
    2. '_' → logprob: -3.0652120113372803
    3. '(car' → logprob: -4.440212249755859
    4. '_car' → logprob: -6.315212249755859
    5. '_(' → logprob: -7.065212249755859
    6. '(_' → logprob: -7.440212249755859
    7. '_token' → logprob: -7.690212249755859
    8. '(
' → logprob: -7.815212249755859
    9. ':' → logprob: -10.06521224975586
    10. '_:' → logprob: -10.06521224975586

Token 903: '(car' (ID: 77006)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35533517599105835
    2. '(car' → logprob: -1.3553352355957031
    3. '_car' → logprob: -3.355335235595703
    4. 'car' → logprob: -6.355335235595703
    5. '():' → logprob: -6.355335235595703
    6. '):' → logprob: -7.355335235595703
    7. '_' → logprob: -7.355335235595703
    8. '(line' → logprob: -7.980335235595703
    9. ':' → logprob: -8.480335235595703
    10. '_token' → logprob: -8.855335235595703

Token 904: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00020950057660229504
    2. ')_' → logprob: -9.37520980834961
    3. ')' → logprob: -9.87520980834961
    4. '_idx' → logprob: -10.25020980834961
    5. '   ' → logprob: -11.87520980834961
    6. 'id' → logprob: -11.87520980834961
    7. '[' → logprob: -12.75020980834961
    8. ''_' → logprob: -12.87520980834961
    9. '```' → logprob: -13.00020980834961
    10. '_' → logprob: -13.12520980834961

Token 905: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001322639436693862
    2. '):' → logprob: -9.37513256072998
    3. ' ,' → logprob: -10.12513256072998
    4. ')' → logprob: -13.62513256072998
    5. ',current' → logprob: -13.87513256072998
    6. ',time' → logprob: -14.25013256072998
    7. ':' → logprob: -14.37513256072998
    8. ',p' → logprob: -15.00013256072998
    9. ',t' → logprob: -15.12513256072998
    10. '_,' → logprob: -15.12513256072998

Token 906: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22246211767196655
    2. ':' → logprob: -1.9724621772766113
    3. '       ' → logprob: -3.5974621772766113
    4. '<|end|>' → logprob: -4.097462177276611
    5. '(' → logprob: -5.722462177276611
    6. '    ' → logprob: -5.972462177276611
    7. ')' → logprob: -6.222462177276611
    8. '\' → logprob: -6.597462177276611
    9. '<|end|>' → logprob: -6.847462177276611
    10. ' ' → logprob: -7.347462177276611

Token 907: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.7069056630134583
    2. '#' → logprob: -2.0819056034088135
    3. 'car' → logprob: -2.2069056034088135
    4. 'return' → logprob: -2.9569056034088135
    5. ' for' → logprob: -3.0819056034088135
    6. ' current' → logprob: -3.2069056034088135
    7. 'for' → logprob: -3.2069056034088135
    8. ')' → logprob: -4.081905841827393
    9. '       ' → logprob: -4.456905841827393
    10. '   ' → logprob: -4.581905841827393

Token 908: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.08339153230190277
    2. '_token' → logprob: -3.0833914279937744
    3. '_' → logprob: -3.4583914279937744
    4. '_car' → logprob: -7.0833916664123535
    5. '_Time' → logprob: -7.5833916664123535
    6. '_tokens' → logprob: -8.208391189575195
    7. '_T' → logprob: -8.583391189575195
    8. '_t' → logprob: -9.083391189575195
    9. ')_' → logprob: -9.208391189575195
    10. '```' → logprob: -9.458391189575195

Token 909: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20641733705997467
    2. '=' → logprob: -1.8314173221588135
    3. '<|end|>' → logprob: -4.206417560577393
    4. '*' → logprob: -5.456417560577393
    5. ')' → logprob: -5.581417560577393
    6. '[' → logprob: -6.956417560577393
    7. ' *' → logprob: -7.581417560577393
    8. '+' → logprob: -7.581417560577393
    9. '<|end|>' → logprob: -8.206417083740234
    10. ' ' → logprob: -8.331417083740234

Token 910: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0002043748099822551
    2. ' car' → logprob: -8.500204086303711
    3. '10' → logprob: -14.750204086303711
    4. '	car' → logprob: -15.625204086303711
    5. '   ' → logprob: -16.62520408630371
    6. ' ' → logprob: -16.75020408630371
    7. '0' → logprob: -16.87520408630371
    8. '(car' → logprob: -17.00020408630371
    9. 'cars' → logprob: -17.00020408630371
    10. '_car' → logprob: -19.25020408630371

Token 911: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0002639582962729037
    2. '_idx' → logprob: -8.250264167785645
    3. 'id' → logprob: -13.000264167785645
    4. 'idx' → logprob: -15.875264167785645
    5. 'Id' → logprob: -17.000263214111328
    6. 'Idx' → logprob: -17.125263214111328
    7. '_index' → logprob: -17.750263214111328
    8. '__' → logprob: -17.875263214111328
    9. '*' → logprob: -18.000263214111328
    10. 'd' → logprob: -18.125263214111328

Token 912: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001356667373329401
    2. ' *' → logprob: -6.626356601715088
    3. '+' → logprob: -11.626357078552246
    4. ')' → logprob: -11.876357078552246
    5. '<|end|>' → logprob: -12.001357078552246
    6. '**' → logprob: -12.876357078552246
    7. '```' → logprob: -13.751357078552246
    8. '*object' → logprob: -14.126357078552246
    9. '***' → logprob: -14.626357078552246
    10. '<|end|>' → logprob: -14.751357078552246

Token 913: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -16.500003814697266
    4. '```' → logprob: -18.500003814697266
    5. '=' → logprob: -18.625003814697266
    6. '۱۰' → logprob: -19.875003814697266
    7. '0' → logprob: -20.250003814697266
    8. ''' → logprob: -20.625003814697266
    9. '`' → logprob: -20.625003814697266
    10. '   ' → logprob: -21.000003814697266

Token 914: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.717018723487854
    2. ':' → logprob: -1.842018723487854
    3. '<|end|>' → logprob: -1.842018723487854
    4. '       ' → logprob: -2.0920186042785645
    5. '   ' → logprob: -3.4670186042785645
    6. ':
' → logprob: -4.0920186042785645
    7. '<|end|>' → logprob: -4.7170186042785645
    8. ')' → logprob: -5.2170186042785645
    9. ':return' → logprob: -6.8420186042785645
    10. ' ' → logprob: -7.2170186042785645

Token 915: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3787856101989746
    2. '       ' → logprob: -2.5037856101989746
    3. '   ' → logprob: -2.8787856101989746
    4. ':
' → logprob: -2.8787856101989746
    5. '<|end|>' → logprob: -3.0037856101989746
    6. '
' → logprob: -3.2537856101989746
    7. '<|end|>' → logprob: -4.628785610198975
    8. ')' → logprob: -5.003785610198975
    9. '):' → logprob: -6.128785610198975
    10. ' 
' → logprob: -6.503785610198975

Token 916: ' ct' (ID: 40541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3858746290206909
    2. '           ' → logprob: -2.6358747482299805
    3. 'empty' → logprob: -2.6358747482299805
    4. ' for' → logprob: -2.8858747482299805
    5. 'if' → logprob: -3.1358747482299805
    6. '#' → logprob: -3.2608747482299805
    7. '       ' → logprob: -4.2608747482299805
    8. 'car' → logprob: -5.2608747482299805
    9. '```' → logprob: -5.7608747482299805
    10. 'return' → logprob: -6.2608747482299805

Token 917: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.13315023481845856
    2. '=' → logprob: -2.883150339126587
    3. ' =' → logprob: -3.383150339126587
    4. 'imes' → logprob: -3.383150339126587
    5. 'time' → logprob: -8.133150100708008
    6. 'times' → logprob: -8.758150100708008
    7. 'park' → logprob: -10.258150100708008
    8. 'r' → logprob: -10.258150100708008
    9. '_time' → logprob: -10.258150100708008
    10. 'leave' → logprob: -10.383150100708008

Token 918: ' current' (ID: 2208)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.34417328238487244
    2. 'current' → logprob: -1.5941733121871948
    3. 'car' → logprob: -2.7191731929779053
    4. ' times' → logprob: -4.094173431396484
    5. ' current' → logprob: -5.594173431396484
    6. 'time' → logprob: -6.969173431396484
    7. ' car' → logprob: -7.594173431396484
    8. '10' → logprob: -9.344173431396484
    9. '0' → logprob: -9.969173431396484
    10. 'park' → logprob: -10.594173431396484

Token 919: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1041145626222715e-05
    2. '_times' → logprob: -11.750011444091797
    3. 'time' → logprob: -14.000011444091797
    4. 'Time' → logprob: -14.000011444091797
    5. '_token' → logprob: -14.125011444091797
    6. '_TIME' → logprob: -16.250011444091797
    7. '_car' → logprob: -16.250011444091797
    8. ' time' → logprob: -16.625011444091797
    9. '_id' → logprob: -17.000011444091797
    10. '_t' → logprob: -17.125011444091797

Token 920: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5631001591682434
    2. ' +' → logprob: -0.9381001591682434
    3. '<|end|>' → logprob: -4.313100337982178
    4. ')' → logprob: -4.938100337982178
    5. '
' → logprob: -5.188100337982178
    6. '*' → logprob: -6.063100337982178
    7. '<|end|>' → logprob: -6.063100337982178
    8. ' ' → logprob: -6.313100337982178
    9. ',' → logprob: -6.438100337982178
    10. '   ' → logprob: -7.313100337982178

Token 921: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.008615754544734955
    2. ' times' → logprob: -4.758615970611572
    3. '(times' → logprob: -14.633615493774414
    4. '10' → logprob: -14.883615493774414
    5. '   ' → logprob: -16.258615493774414
    6. ' ' → logprob: -16.383615493774414
    7. 't' → logprob: -17.133615493774414
    8. 'time' → logprob: -17.133615493774414
    9. 'int' → logprob: -17.383615493774414
    10. 'tim' → logprob: -17.383615493774414

Token 922: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2233183042553719e-05
    2. '[current' → logprob: -12.125012397766113
    3. 'car' → logprob: -12.500012397766113
    4. '```' → logprob: -13.875012397766113
    5. '_car' → logprob: -14.500012397766113
    6. '[c' → logprob: -15.375012397766113
    7. ']' → logprob: -15.625012397766113
    8. '(car' → logprob: -15.625012397766113
    9. ' car' → logprob: -16.000011444091797
    10. '[cur' → logprob: -16.125011444091797

Token 923: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.2664456789934775e-06
    2. ' car' → logprob: -14.375000953674316
    3. '(car' → logprob: -14.750000953674316
    4. '[' → logprob: -15.375000953674316
    5. '_car' → logprob: -16.625001907348633
    6. '```' → logprob: -17.125001907348633
    7. '0' → logprob: -18.250001907348633
    8. ']' → logprob: -18.500001907348633
    9. '	car' → logprob: -18.750001907348633
    10. '1' → logprob: -19.125001907348633

Token 924: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.2233183042553719e-05
    2. 'id' → logprob: -11.375012397766113
    3. '_idx' → logprob: -14.750012397766113
    4. '[' → logprob: -15.750012397766113
    5. 'd' → logprob: -16.875011444091797
    6. 'car' → logprob: -17.750011444091797
    7. '```' → logprob: -17.750011444091797
    8. ']' → logprob: -18.000011444091797
    9. '[id' → logprob: -18.625011444091797
    10. '[
' → logprob: -18.750011444091797

Token 925: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016556495800614357
    2. ']
' → logprob: -4.141556262969971
    3. '])' → logprob: -8.891556739807129
    4. ')]' → logprob: -9.016556739807129
    5. '[' → logprob: -9.141556739807129
    6. ')' → logprob: -10.141556739807129
    7. ' ]' → logprob: -10.641556739807129
    8. ']

' → logprob: -11.016556739807129
    9. ']
' → logprob: -11.141556739807129
    10. '()]' → logprob: -11.391556739807129

Token 926: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8528047204017639
    2. '
' → logprob: -1.6028046607971191
    3. '<|end|>' → logprob: -1.6028046607971191
    4. '   ' → logprob: -2.352804660797119
    5. ')' → logprob: -3.727804660797119
    6. ' if' → logprob: -4.852804660797119
    7. ':' → logprob: -4.977804660797119
    8. '[' → logprob: -5.352804660797119
    9. ' ' → logprob: -5.352804660797119
    10. '<|end|>' → logprob: -5.602804660797119

Token 927: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.327218621969223
    2. 'for' → logprob: -2.077218532562256
    3. ' for' → logprob: -2.577218532562256
    4. 'if' → logprob: -3.952218532562256
    5. '#' (adapté à ' #') → logprob: -4.077218532562256
    6. ' if' → logprob: -4.327218532562256
    7. '           ' → logprob: -4.952218532562256
    8. '```' → logprob: -4.952218532562256
    9. '   ' → logprob: -5.202218532562256
    10. '
' → logprob: -6.077218532562256

Token 928: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05587436258792877
    2. '#' → logprob: -4.180874347686768
    3. 'if' → logprob: -4.180874347686768
    4. '       ' → logprob: -4.680874347686768
    5. 'i' → logprob: -5.680874347686768
    6. 'car' → logprob: -5.930874347686768
    7. ' for' → logprob: -6.180874347686768
    8. '```' → logprob: -6.555874347686768
    9. 'return' → logprob: -6.805874347686768
    10. '   ' → logprob: -6.930874347686768

Token 929: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12930087745189667
    2. 'if' → logprob: -2.254300832748413
    3. '#' → logprob: -5.129301071166992
    4. 'car' → logprob: -6.004301071166992
    5. 'return' → logprob: -6.129301071166992
    6. 'available' → logprob: -6.754301071166992
    7. 'empty' → logprob: -6.879301071166992
    8. 'while' → logprob: -6.879301071166992
    9. 'i' → logprob: -7.379301071166992
    10. '```' → logprob: -8.004301071166992

Token 930: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009531481191515923
    2. 'empty' → logprob: -8.50095272064209
    3. ' )' → logprob: -9.00095272064209
    4. ')#' → logprob: -9.00095272064209
    5. '   ' → logprob: -9.12595272064209
    6. '#' → logprob: -9.12595272064209
    7. ' if' → logprob: -9.25095272064209
    8. 'if' → logprob: -9.37595272064209
    9. '()' → logprob: -11.25095272064209
    10. ' empty' → logprob: -11.62595272064209

Token 931: ' check' (ID: 2371)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.12352990359067917
    2. '#' → logprob: -2.9985299110412598
    3. 'for' → logprob: -3.2485299110412598
    4. ' empty' → logprob: -3.8735299110412598
    5. ' for' → logprob: -5.62352991104126
    6. 'car' → logprob: -6.87352991104126
    7. 'available' → logprob: -7.62352991104126
    8. ' #' → logprob: -8.373529434204102
    9. ' spots' → logprob: -8.998529434204102
    10. ' car' → logprob: -9.248529434204102

Token 932: ' empty' (ID: 8213)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1843080520629883
    2. ' if' → logprob: -1.5593080520629883
    3. 'if' → logprob: -1.6843080520629883
    4. 'for' → logprob: -1.8093080520629883
    5. ' spots' → logprob: -2.3093080520629883
    6. 'lower' → logprob: -4.684308052062988
    7. ' any' → logprob: -4.934308052062988
    8. 'spots' → logprob: -5.184308052062988
    9. ' lower' → logprob: -6.059308052062988
    10. 'any' → logprob: -6.309308052062988

Token 933: ' spots' (ID: 25522)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.007626973092556
    2. 'spots' → logprob: -5.257627010345459
    3. '_' → logprob: -7.382627010345459
    4. ' spots' → logprob: -7.632627010345459
    5. '_spaces' → logprob: -7.882627010345459
    6. ')' → logprob: -8.2576265335083
    7. '_slots' → logprob: -8.2576265335083
    8. '```' → logprob: -9.2576265335083
    9. '[' → logprob: -9.8826265335083
    10. '[]' → logprob: -10.2576265335083

Token 934: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 935: ' cars' (ID: 13653)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5691617131233215
    2. 'w' → logprob: -1.5691616535186768
    3. 't' → logprob: -1.6941616535186768
    4. 'e' → logprob: -5.194161891937256
    5. 'n' → logprob: -5.319161891937256
    6. 'None' → logprob: -5.319161891937256
    7. ' spots' → logprob: -5.444161891937256
    8. 'for' → logprob: -5.694161891937256
    9. ' for' → logprob: -5.944161891937256
    10. '[' → logprob: -6.319161891937256

Token 936: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6633639931678772
    2. '<|end|>' → logprob: -1.4133639335632324
    3. '           ' → logprob: -1.6633639335632324
    4. '[' → logprob: -4.038363933563232
    5. ')' → logprob: -5.413363933563232
    6. '<|end|>' → logprob: -5.663363933563232
    7. 'for' → logprob: -5.663363933563232
    8. '   ' → logprob: -6.038363933563232
    9. '               ' → logprob: -6.288363933563232
    10. '        ' → logprob: -6.288363933563232

Token 938: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' (adapté à ' empty') → logprob: -0.036297332495450974
    2. ' empty' → logprob: -3.41129732131958
    3. 'for' → logprob: -6.78629732131958
    4. ' for' → logprob: -6.91129732131958
    5. '       ' → logprob: -8.911297798156738
    6. '_empty' → logprob: -10.036297798156738
    7. 'empt' → logprob: -10.036297798156738
    8. '   ' → logprob: -10.411297798156738
    9. 'if' → logprob: -10.411297798156738
    10. '           ' → logprob: -10.786297798156738

Token 939: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0003244990948587656
    2. '_tokens' → logprob: -9.750324249267578
    3. ' =' → logprob: -10.125324249267578
    4. '_' → logprob: -10.250324249267578
    5. 'spots' → logprob: -10.250324249267578
    6. '_spaces' → logprob: -10.750324249267578
    7. '```' → logprob: -10.875324249267578
    8. '_slots' → logprob: -11.125324249267578
    9. '_s' → logprob: -11.125324249267578
    10. '=[]' → logprob: -11.500324249267578

Token 940: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0001129602751461789
    2. '[' → logprob: -10.125112533569336
    3. 'ost' → logprob: -10.125112533569336
    4. '```' → logprob: -11.875112533569336
    5. 'ot' → logprob: -12.000112533569336
    6. 'orts' → logprob: -12.250112533569336
    7. '_' → logprob: -12.875112533569336
    8. '=' → logprob: -13.125112533569336
    9. '[]' → logprob: -13.250112533569336
    10. 'pots' → logprob: -13.375112533569336

Token 941: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20194846391677856
    2. '=' → logprob: -1.7019484043121338
    3. '=[]' → logprob: -8.076948165893555
    4. ')' → logprob: -9.326948165893555
    5. '[' → logprob: -9.701948165893555
    6. '=[' → logprob: -10.451948165893555
    7. ']' → logprob: -11.076948165893555
    8. ' =[' → logprob: -12.076948165893555
    9. '[:]' → logprob: -12.201948165893555
    10. '=[]
' → logprob: -12.576948165893555

Token 942: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0043460913002491
    2. ' [' → logprob: -5.504345893859863
    3. '[' → logprob: -8.254345893859863
    4. '[]' → logprob: -13.254345893859863
    5. '[x' → logprob: -13.879345893859863
    6. '[j' → logprob: -14.254345893859863
    7. '[e' → logprob: -14.254345893859863
    8. '[s' → logprob: -14.379345893859863
    9. '[a' → logprob: -14.504345893859863
    10. '[k' → logprob: -14.879345893859863

Token 943: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. '[i' → logprob: -18.00001335144043
    4. '(i' → logprob: -18.37501335144043
    5. '```' → logprob: -18.75001335144043
    6. ']' → logprob: -19.12501335144043
    7. ')i' → logprob: -19.87501335144043
    8. '	i' → logprob: -20.00001335144043
    9. ''i' → logprob: -20.00001335144043
    10. '   ' → logprob: -20.25001335144043

Token 944: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029753267765045166
    2. 'for' → logprob: -3.5297532081604004
    3. ' ' → logprob: -14.279753684997559
    4. '	for' → logprob: -14.529753684997559
    5. ' i' → logprob: -14.779753684997559
    6. '()' → logprob: -15.029753684997559
    7. '(i' → logprob: -15.154753684997559
    8. '   ' → logprob: -15.654753684997559
    9. 'i' → logprob: -15.654753684997559
    10. '
' → logprob: -16.154752731323242

Token 945: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011072699911892414
    2. ' i' → logprob: -4.511072635650635
    3. ',' → logprob: -10.886073112487793
    4. ',i' → logprob: -13.011073112487793
    5. '_,' → logprob: -13.261073112487793
    6. ' in' → logprob: -14.261073112487793
    7. 'range' → logprob: -15.011073112487793
    8. 'in' → logprob: -15.386073112487793
    9. '```' → logprob: -16.011072158813477
    10. '
' → logprob: -16.261072158813477

Token 946: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.14604811370372772
    2. ',' → logprob: -2.396048069000244
    3. ',l' → logprob: -3.271048069000244
    4. ' in' → logprob: -6.146048069000244
    5. ',x' → logprob: -6.646048069000244
    6. 'in' → logprob: -7.271048069000244
    7. ',e' → logprob: -7.271048069000244
    8. ',i' → logprob: -7.896048069000244
    9. ',line' → logprob: -8.021048545837402
    10. ',c' → logprob: -8.271048545837402

Token 947: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00021152703266125172
    2. ' l' → logprob: -8.500211715698242
    3. ',l' → logprob: -13.125211715698242
    4. '(l' → logprob: -13.500211715698242
    5. '_,' → logprob: -13.625211715698242
    6. '```' → logprob: -14.000211715698242
    7. '_l' → logprob: -14.375211715698242
    8. '	l' → logprob: -14.500211715698242
    9. ',' → logprob: -15.000211715698242
    10. 'spot' → logprob: -15.500211715698242

Token 948: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.0012295155320316553
    2. ',' → logprob: -6.751229286193848
    3. ' ,' → logprob: -9.876229286193848
    4. 'u' → logprob: -12.001229286193848
    5. ',o' → logprob: -15.126229286193848
    6. ',None' → logprob: -15.251229286193848
    7. '_,' → logprob: -15.626229286193848
    8. ',v' → logprob: -15.751229286193848
    9. '```' → logprob: -16.126230239868164
    10. ',U' → logprob: -16.126230239868164

Token 949: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012238615192472935
    2. 'in' → logprob: -4.762238502502441
    3. ' in' → logprob: -5.637238502502441
    4. ' )' → logprob: -10.137238502502441
    5. ',' → logprob: -12.137238502502441
    6. 'is' → logprob: -13.012238502502441
    7. 'n' → logprob: -13.512238502502441
    8. 's' → logprob: -14.262238502502441
    9. ',)' → logprob: -14.387238502502441
    10. 'In' → logprob: -14.512238502502441

Token 950: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31550493836402893
    2. ' in' → logprob: -1.3155049085617065
    3. ')' → logprob: -6.190505027770996
    4. ',' → logprob: -8.690505027770996
    5. 'is' → logprob: -11.940505027770996
    6. '```' → logprob: -11.940505027770996
    7. '
' → logprob: -12.940505027770996
    8. ' ' → logprob: -13.440505027770996
    9. 'if' → logprob: -13.690505027770996
    10. '   ' → logprob: -14.190505027770996

Token 951: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.001613173633813858
    2. ' enumerate' → logprob: -6.626613140106201
    3. 'spots' → logprob: -8.87661361694336
    4. '(en' → logprob: -9.12661361694336
    5. '[(' → logprob: -10.87661361694336
    6. 'en' → logprob: -12.12661361694336
    7. '(l' → logprob: -12.50161361694336
    8. ' spots' → logprob: -13.12661361694336
    9. 'enum' → logprob: -13.50161361694336
    10. 'enqueue' → logprob: -13.75161361694336

Token 952: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.5764456391334534
    2. 'spots' → logprob: -0.8264456391334534
    3. ' spots' → logprob: -8.076445579528809
    4. 'sp' → logprob: -8.576445579528809
    5. '(s' → logprob: -13.576445579528809
    6. '
' → logprob: -14.201445579528809
    7. '	sp' → logprob: -14.201445579528809
    8. 'spot' → logprob: -14.576445579528809
    9. '_sp' → logprob: -14.701445579528809
    10. '(' → logprob: -14.701445579528809

Token 953: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0020795976743102074
    2. '[' → logprob: -6.502079486846924
    3. 'spots' → logprob: -8.502079963684082
    4. '[(' → logprob: -9.002079963684082
    5. 'orts' → logprob: -10.252079963684082
    6. 'pots' → logprob: -10.502079963684082
    7. '[i' → logprob: -10.502079963684082
    8. 'ts' → logprob: -10.752079963684082
    9. '[
' → logprob: -10.877079963684082
    10. '[[' → logprob: -11.252079963684082

Token 954: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0883229672908783
    2. ' if' → logprob: -2.588322877883911
    3. 'if' → logprob: -4.71332311630249
    4. ' )' → logprob: -8.088322639465332
    5. '       ' → logprob: -9.963322639465332
    6. '           ' → logprob: -10.963322639465332
    7. '        ' → logprob: -11.088322639465332
    8. '          ' → logprob: -11.963322639465332
    9. '()' → logprob: -12.088322639465332
    10. '   ' → logprob: -12.588322639465332

Token 955: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023247340694069862
    2. 'if' → logprob: -3.773247241973877
    3. ')' → logprob: -13.648247718811035
    4. ' in' → logprob: -15.523247718811035
    5. '        ' → logprob: -15.898247718811035
    6. '       ' → logprob: -16.02324676513672
    7. '           ' → logprob: -16.52324676513672
    8. ' ' → logprob: -16.64824676513672
    9. '          ' → logprob: -17.02324676513672
    10. '
' → logprob: -18.14824676513672

Token 956: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4740802049636841
    2. ' l' → logprob: -0.9740802049636841
    3. '	l' → logprob: -13.349080085754395
    4. ' ' → logprob: -14.474080085754395
    5. '(l' → logprob: -14.974080085754395
    6. ' ' → logprob: -15.474080085754395
    7. '   ' → logprob: -15.724080085754395
    8. ' not' → logprob: -16.47408103942871
    9. '    ' → logprob: -16.84908103942871
    10. ' (' → logprob: -16.91158103942871

Token 957: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005936263594776392
    2. 'is' → logprob: -5.130936145782471
    3. ' None' → logprob: -12.630936622619629
    4. 'None' → logprob: -12.755936622619629
    5. ' ' → logprob: -14.505936622619629
    6. '[' → logprob: -14.755936622619629
    7. '==' → logprob: -15.130936622619629
    8. '=None' → logprob: -16.130935668945312
    9. '	is' → logprob: -16.755935668945312
    10. ')' → logprob: -17.130935668945312

Token 958: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008615042082965374
    2. ' None' → logprob: -4.758615016937256
    3. '(None' → logprob: -15.508615493774414
    4. '_None' → logprob: -15.758615493774414
    5. '=None' → logprob: -16.383615493774414
    6. ' ' → logprob: -17.258615493774414
    7. '   ' → logprob: -17.758615493774414
    8. '0' → logprob: -17.883615493774414
    9. ',None' → logprob: -17.883615493774414
    10. '```' → logprob: -18.133615493774414

Token 959: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31327024102211
    2. 'and' → logprob: -1.3132702112197876
    3. ')' → logprob: -12.563270568847656
    4. ' ' → logprob: -13.688270568847656
    5. '```' → logprob: -13.938270568847656
    6. ' or' → logprob: -14.313270568847656
    7. ']' → logprob: -14.688270568847656
    8. ' ' → logprob: -15.063270568847656
    9. '
' → logprob: -15.688270568847656
    10. '           ' → logprob: -15.688270568847656

Token 960: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.25192946195602417
    2. 'u' → logprob: -1.501929521560669
    3. '	u' → logprob: -15.37692928314209
    4. '(u' → logprob: -17.376930236816406
    5. ',u' → logprob: -17.376930236816406
    6. '[u' → logprob: -18.001930236816406
    7. '<u' → logprob: -18.501930236816406
    8. ' ' → logprob: -18.876930236816406
    9. '   ' → logprob: -18.876930236816406
    10. '_u' → logprob: -19.001930236816406

Token 961: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03257997706532478
    2. 'is' → logprob: -3.7825798988342285
    3. 'None' → logprob: -4.9075798988342285
    4. ' None' → logprob: -6.2825798988342285
    5. '=None' → logprob: -11.157580375671387
    6. '==' → logprob: -11.782580375671387
    7. '(None' → logprob: -12.282580375671387
    8. '```' → logprob: -13.407580375671387
    9. ')' → logprob: -14.032580375671387
    10. '[' → logprob: -14.157580375671387

Token 962: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078997299075127
    2. ' None' → logprob: -5.5040788650512695
    3. '_None' → logprob: -15.00407886505127
    4. '(None' → logprob: -15.62907886505127
    5. '=None' → logprob: -16.754079818725586
    6. ' ' → logprob: -17.379079818725586
    7. ',None' → logprob: -18.129079818725586
    8. '.None' → logprob: -18.254079818725586
    9. '_none' → logprob: -18.379079818725586
    10. 'none' → logprob: -18.504079818725586

Token 963: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011918948730453849
    2. ']
' → logprob: -6.751192092895508
    3. ' ]' → logprob: -11.376192092895508
    4. '       ' → logprob: -13.126192092895508
    5. ')]' → logprob: -13.126192092895508
    6. ']

' → logprob: -13.376192092895508
    7. ']
' → logprob: -13.876192092895508
    8. ')' → logprob: -14.126192092895508
    9. '           ' → logprob: -14.251192092895508
    10. '()]' → logprob: -14.626192092895508

Token 964: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 965: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1076381206512451
    2. '       ' → logprob: -1.3576381206512451
    3. '[' → logprob: -1.4826381206512451
    4. ':
' → logprob: -2.482638120651245
    5. '<|end|>' → logprob: -3.857638120651245
    6. ')' → logprob: -4.107638359069824
    7. '   ' → logprob: -4.357638359069824
    8. ' ' → logprob: -4.482638359069824
    9. '           ' → logprob: -4.857638359069824
    10. ']' → logprob: -5.607638359069824

Token 966: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.16022971272468567
    2. ' empty' → logprob: -1.9102296829223633
    3. 'not' → logprob: -13.035229682922363
    4. ' not' → logprob: -13.285229682922363
    5. '(empty' → logprob: -14.535229682922363
    6. 'len' → logprob: -15.035229682922363
    7. '   ' → logprob: -15.660229682922363
    8. '```' → logprob: -16.03523063659668
    9. ' ' → logprob: -16.16023063659668
    10. 'Empty' → logprob: -16.28523063659668

Token 967: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0001249925117008388
    2. '```' → logprob: -9.50012493133545
    3. '_' → logprob: -11.50012493133545
    4. '
' → logprob: -12.37512493133545
    5. ')' → logprob: -12.37512493133545
    6. 'spots' → logprob: -12.87512493133545
    7. ' _' → logprob: -13.00012493133545
    8. '[' → logprob: -13.00012493133545
    9. 'empty' → logprob: -13.12512493133545
    10. '_spaces' → logprob: -13.25012493133545

Token 968: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.012132863514125347
    2. '```' → logprob: -5.76213264465332
    3. '[' → logprob: -6.63713264465332
    4. '_sp' → logprob: -6.76213264465332
    5. '_' → logprob: -7.51213264465332
    6. 'ost' → logprob: -7.76213264465332
    7. 'orts' → logprob: -7.88713264465332
    8. '[
' → logprob: -7.88713264465332
    9. '[]' → logprob: -8.01213264465332
    10. 'spots' → logprob: -8.01213264465332

Token 969: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6753771901130676
    2. '[' → logprob: -0.8003771901130676
    3. ':
' → logprob: -3.175377130508423
    4. '[
' → logprob: -10.925376892089844
    5. '==' → logprob: -11.425376892089844
    6. '):' → logprob: -11.550376892089844
    7. '```' → logprob: -11.800376892089844
    8. '.' → logprob: -12.175376892089844
    9. ':return' → logprob: -12.175376892089844
    10. ':

' → logprob: -12.425376892089844

Token 970: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.214919313788414
    2. '[' → logprob: -1.7149193286895752
    3. ':
' → logprob: -5.339919090270996
    4. '           ' → logprob: -6.339919090270996
    5. 'spots' → logprob: -6.464919090270996
    6. ' spots' → logprob: -6.589919090270996
    7. '                
' → logprob: -6.964919090270996
    8. '       ' → logprob: -7.589919090270996
    9. 'return' → logprob: -7.714919090270996
    10. '[
' → logprob: -7.839919090270996

Token 971: ' spot' (ID: 10021)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.7235296964645386
    2. 'spots' → logprob: -1.2235296964645386
    3. '               ' → logprob: -2.348529815673828
    4. 'spot' (adapté à ' spot') → logprob: -2.723529815673828
    5. ' spot' → logprob: -2.848529815673828
    6. '```' → logprob: -7.473529815673828
    7. '
' → logprob: -8.473529815673828
    8. '           ' → logprob: -8.723529815673828
    9. '                
' → logprob: -9.098529815673828
    10. '                   ' → logprob: -9.473529815673828

Token 972: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25351661443710327
    2. '[' → logprob: -1.878516674041748
    3. '=' → logprob: -2.878516674041748
    4. ')' → logprob: -5.253516674041748
    5. '<|end|>' → logprob: -6.253516674041748
    6. ']' → logprob: -7.003516674041748
    7. '][' → logprob: -7.253516674041748
    8. '[token' → logprob: -7.628516674041748
    9. 'empty' → logprob: -7.753516674041748
    10. 's' → logprob: -7.753516674041748

Token 973: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.011047814972698689
    2. ' empty' → logprob: -4.511047840118408
    3. '(empty' → logprob: -18.51104736328125
    4. '0' → logprob: -20.13604736328125
    5. '_empty' → logprob: -21.13604736328125
    6. '.empty' → logprob: -21.51104736328125
    7. 'Empty' → logprob: -21.63604736328125
    8. '空' → logprob: -21.76104736328125
    9. 'EMPTY' → logprob: -22.13604736328125
    10. 'empt' → logprob: -22.26104736328125

Token 974: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -1.0325924449716695e-05
    2. 'spots' → logprob: -12.00001049041748
    3. 'empty' → logprob: -13.00001049041748
    4. 'Sp' → logprob: -14.62501049041748
    5. 'sp' → logprob: -15.25001049041748
    6. '```' → logprob: -15.62501049041748
    7. 's' → logprob: -16.000009536743164
    8. '_' → logprob: -16.125009536743164
    9. '_empty' → logprob: -16.250009536743164
    10. '_spaces' → logprob: -16.375009536743164

Token 975: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0007282786536961794
    2. '```' → logprob: -8.125728607177734
    3. 'empty' → logprob: -8.250728607177734
    4. 'orts' → logprob: -10.375728607177734
    5. '[' → logprob: -10.750728607177734
    6. 'ot' → logprob: -11.375728607177734
    7. '   ' → logprob: -11.625728607177734
    8. 'ost' → logprob: -11.750728607177734
    9. 'spots' → logprob: -11.875728607177734
    10. '       ' → logprob: -11.875728607177734

Token 976: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.780830830801278e-05
    2. '0' → logprob: -9.62508773803711
    3. ' [' → logprob: -12.25008773803711
    4. '           ' → logprob: -12.37508773803711
    5. '               ' → logprob: -12.37508773803711
    6. '()[' → logprob: -12.50008773803711
    7. '```' → logprob: -13.50008773803711
    8. '][' → logprob: -14.12508773803711
    9. 'def' → logprob: -14.37508773803711
    10. '                   ' → logprob: -14.87508773803711

Token 977: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.999452772201039e-05
    2. '[' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.375029563903809
    4. '```' → logprob: -14.125029563903809
    5. '   ' → logprob: -16.125030517578125
    6. '``' → logprob: -17.625030517578125
    7. '1' → logprob: -17.875030517578125
    8. '
' → logprob: -18.062530517578125
    9. '       ' → logprob: -18.250030517578125
    10. '00' → logprob: -18.687530517578125

Token 978: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16617056727409363
    2. ']' → logprob: -2.291170597076416
    3. '               ' → logprob: -3.041170597076416
    4. '           ' → logprob: -6.166170597076416
    5. '][' → logprob: -7.541170597076416
    6. '                   ' → logprob: -7.791170597076416
    7. '       ' → logprob: -7.916170597076416
    8. '
' → logprob: -8.041170120239258
    9. '[' → logprob: -9.166170120239258
    10. ')
' → logprob: -9.166170120239258

Token 979: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2066550999879837
    2. '       ' → logprob: -2.4566550254821777
    3. '           ' → logprob: -3.0816550254821777
    4. '
' → logprob: -3.9566550254821777
    5. ' spots' → logprob: -4.456655025482178
    6. 'spots' → logprob: -4.956655025482178
    7. '        
' → logprob: -5.206655025482178
    8. '                
' → logprob: -5.956655025482178
    9. '            
' → logprob: -6.081655025482178
    10. '                   ' → logprob: -6.581655025482178

Token 980: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.009023886173963547
    2. ' spots' → logprob: -4.759023666381836
    3. '           ' → logprob: -8.759023666381836
    4. '               ' → logprob: -9.009023666381836
    5. '       ' → logprob: -9.009023666381836
    6. '   ' → logprob: -12.884023666381836
    7. '```' → logprob: -13.759023666381836
    8. '                       ' → logprob: -13.759023666381836
    9. 'spot' → logprob: -14.134023666381836
    10. 'sp' → logprob: -14.384023666381836

Token 981: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '           ' → logprob: -15.250000953674316
    3. '               ' → logprob: -15.250000953674316
    4. 'spot' → logprob: -15.375000953674316
    5. '][' → logprob: -15.375000953674316
    6. '```' → logprob: -16.375001907348633
    7. 'Spot' → logprob: -16.500001907348633
    8. ')[' → logprob: -16.625001907348633
    9. ' [' → logprob: -16.750001907348633
    10. '       ' → logprob: -17.000001907348633

Token 982: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -1.9361264946837764e-07
    2. ' spot' → logprob: -16.375
    3. '[' → logprob: -17.0
    4. 'pot' → logprob: -18.25
    5. 'sport' → logprob: -19.875
    6. 'spo' → logprob: -20.625
    7. '0' → logprob: -20.75
    8. '```' → logprob: -20.75
    9. 'spots' → logprob: -21.0
    10. 'sp' → logprob: -21.25

Token 983: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020711800083518028
    2. '[' → logprob: -3.895711898803711
    3. '[][' → logprob: -10.645711898803711
    4. ']' → logprob: -10.770711898803711
    5. ' ][' → logprob: -11.020711898803711
    6. '       ' → logprob: -11.145711898803711
    7. ')[' → logprob: -11.270711898803711
    8. '           ' → logprob: -11.395711898803711
    9. '```' → logprob: -11.520711898803711
    10. ']][' → logprob: -11.645711898803711

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. 'car' → logprob: -12.25001049041748
    3. ' ' → logprob: -13.25001049041748
    4. '1' → logprob: -13.75001049041748
    5. '[' → logprob: -13.87501049041748
    6. 'lower' → logprob: -14.00001049041748
    7. 'None' → logprob: -15.68751049041748
    8. ']' → logprob: -16.062511444091797
    9. '][' → logprob: -16.062511444091797
    10. '(' → logprob: -16.250011444091797

Token 985: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006901971064507961
    2. ']=' → logprob: -5.006901741027832
    3. '=' → logprob: -8.756901741027832
    4. ']=(' → logprob: -11.131901741027832
    5. ' ]' → logprob: -11.381901741027832
    6. ' =' → logprob: -13.381901741027832
    7. ')' → logprob: -14.131901741027832
    8. ']
' → logprob: -15.506901741027832
    9. '][' → logprob: -16.00690269470215
    10. '](' → logprob: -16.25690269470215

Token 986: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47424647212028503
    2. ' =' → logprob: -0.9742465019226074
    3. ']' → logprob: -9.09924602508545
    4. ']=' → logprob: -9.97424602508545
    5. '=(' → logprob: -12.22424602508545
    6. ')' → logprob: -12.72424602508545
    7. ' =(' → logprob: -13.72424602508545
    8. ']=(' → logprob: -14.59924602508545
    9. ')=' → logprob: -15.22424602508545
    10. '```' → logprob: -15.34924602508545

Token 987: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.002476724097505212
    2. ' (' → logprob: -6.002476692199707
    3. '(Car' → logprob: -14.377476692199707
    4. '   ' → logprob: -15.377476692199707
    5. '(c' → logprob: -16.377477645874023
    6. ' ' → logprob: -16.377477645874023
    7. '(' → logprob: -16.752477645874023
    8. '  ' → logprob: -18.252477645874023
    9. '(card' → logprob: -18.252477645874023
    10. '(ci' → logprob: -18.377477645874023

Token 988: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -2.45848218582978e-06
    2. '(car' → logprob: -13.12500286102295
    3. ' car' → logprob: -14.87500286102295
    4. '	car' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '(' → logprob: -20.125001907348633
    7. 'Car' → logprob: -20.125001907348633
    8. 'cars' → logprob: -20.750001907348633
    9. '```' → logprob: -20.875001907348633
    10. '_car' → logprob: -21.250001907348633

Token 989: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.300083648762666e-05
    2. 'id' → logprob: -9.875053405761719
    3. '_idx' → logprob: -14.000053405761719
    4. '```' → logprob: -15.750053405761719
    5. 'car' → logprob: -16.50005340576172
    6. '_car' → logprob: -16.62505340576172
    7. 'idx' → logprob: -16.75005340576172
    8. 'Id' → logprob: -17.00005340576172
    9. '_i' → logprob: -17.62505340576172
    10. '_' → logprob: -17.87505340576172

Token 990: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -13.125003814697266
    3. ',
' → logprob: -14.250003814697266
    4. ',current' → logprob: -14.375003814697266
    5. 'ct' → logprob: -15.000003814697266
    6. '),' → logprob: -15.500003814697266
    7. '(ct' → logprob: -15.875003814697266
    8. '‌,' → logprob: -16.750003814697266
    9. '```' → logprob: -16.750003814697266
    10. '`,' → logprob: -17.000003814697266

Token 991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.416688472032547
    2. '0' → logprob: -1.4166884422302246
    3. 'ct' → logprob: -2.9166884422302246
    4. 'times' → logprob: -3.5416884422302246
    5. ' ' → logprob: -5.166688442230225
    6. ' ct' → logprob: -5.791688442230225
    7. ' times' → logprob: -5.791688442230225
    8. '10' → logprob: -6.041688442230225
    9. ',' → logprob: -9.041688919067383
    10. '_ct' → logprob: -9.166688919067383

Token 992: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.875004768371582
    3. '(ct' → logprob: -14.875004768371582
    4. ',current' → logprob: -14.875004768371582
    5. 'ct' → logprob: -15.125004768371582
    6. ',
' → logprob: -15.250004768371582
    7. '           ' → logprob: -15.625004768371582
    8. '),' → logprob: -16.125003814697266
    9. '```' → logprob: -16.500003814697266
    10. ',c' → logprob: -16.750003814697266

Token 993: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.004265608265995979
    2. ' ct' → logprob: -6.004265785217285
    3. 'current' → logprob: -6.379265785217285
    4. ' current' → logprob: -9.879265785217285
    5. 'time' → logprob: -11.129265785217285
    6. 'park' → logprob: -12.129265785217285
    7. 'ctime' → logprob: -12.129265785217285
    8. '	ct' → logprob: -12.504265785217285
    9. '(ct' → logprob: -12.879265785217285
    10. '   ' → logprob: -13.254265785217285

Token 994: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16030353307724
    2. ')
' → logprob: -1.9103035926818848
    3. ')
' → logprob: -10.285303115844727
    4. '               ' → logprob: -10.660303115844727
    5. '           ' → logprob: -11.535303115844727
    6. ')

' → logprob: -12.160303115844727
    7. '       ' → logprob: -13.285303115844727
    8. ')return' → logprob: -13.285303115844727
    9. ' )' → logprob: -14.035303115844727
    10. '                   ' → logprob: -14.410303115844727

Token 995: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17625169456005096
    2. '
' → logprob: -2.3012516498565674
    3. '<|end|>' → logprob: -3.0512516498565674
    4. '```' → logprob: -5.3012518882751465
    5. ')' → logprob: -5.5512518882751465
    6. '           ' → logprob: -6.6762518882751465
    7. '\n' → logprob: -6.8012518882751465
    8. ')
' → logprob: -7.3012518882751465
    9. '                
' → logprob: -7.5512518882751465
    10. '                   ' → logprob: -8.176251411437988

Token 996: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6610016226768494
    2. '
' → logprob: -1.9110016822814941
    3. '       ' → logprob: -2.286001682281494
    4. ' return' → logprob: -2.536001682281494
    5. '<|end|>' → logprob: -2.661001682281494
    6. '	return' → logprob: -3.411001682281494
    7. '\n' → logprob: -3.536001682281494
    8. '           ' → logprob: -5.161001682281494
    9. ':return' → logprob: -5.536001682281494
    10. '   ' → logprob: -5.786001682281494

Token 997: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004674099385738373
    2. ' True' → logprob: -5.379673957824707
    3. 'False' → logprob: -10.379673957824707
    4. 'spot' → logprob: -10.879673957824707
    5. 'None' → logprob: -13.004673957824707
    6. '(True' → logprob: -13.754673957824707
    7. 'spots' → logprob: -15.129673957824707
    8. '=True' → logprob: -16.629674911499023
    9. ' spot' → logprob: -16.754674911499023
    10. 'Spot' → logprob: -16.879674911499023

Token 998: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 999: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2268507480621338
    2. '<|end|>' → logprob: -1.9768507480621338
    3. '
' → logprob: -3.601850748062134
    4. '        
' → logprob: -4.601850509643555
    5. '           ' → logprob: -4.726850509643555
    6. '```' → logprob: -4.851850509643555
    7. '\n' → logprob: -5.726850509643555
    8. '   ' → logprob: -6.851850509643555
    9. ')' → logprob: -6.976850509643555
    10. '    
' → logprob: -7.226850509643555

Token 1000: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36906665563583374
    2. 'spots' → logprob: -2.1190667152404785
    3. '           ' → logprob: -2.8690667152404785
    4. 'empty' → logprob: -2.9940667152404785
    5. '#' (adapté à ' #') → logprob: -3.1190667152404785
    6. 'spot' → logprob: -4.2440667152404785
    7. ' spots' → logprob: -4.6190667152404785
    8. '
' → logprob: -6.2440667152404785
    9. '[' → logprob: -6.3690667152404785
    10. '               ' → logprob: -6.6190667152404785

Token 1001: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8699350953102112
    2. '#' → logprob: -1.8699350357055664
    3. 'empty' → logprob: -2.1199350357055664
    4. '           ' → logprob: -2.4949350357055664
    5. 'one' → logprob: -2.8699350357055664
    6. 'spot' → logprob: -2.9949350357055664
    7. 'spots' → logprob: -3.1199350357055664
    8. ' one' → logprob: -4.119935035705566
    9. ' spots' → logprob: -4.244935035705566
    10. 'for' → logprob: -4.869935035705566

Token 1002: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6597567796707153
    2. 'empty' → logprob: -1.9097567796707153
    3. '2' → logprob: -2.534756660461426
    4. '1' → logprob: -2.909756660461426
    5. 'None' → logprob: -2.909756660461426
    6. '0' → logprob: -3.409756660461426
    7. 'spot' → logprob: -3.409756660461426
    8. 'spots' → logprob: -4.034756660461426
    9. '       ' → logprob: -4.284756660461426
    10. 'for' → logprob: -4.284756660461426

Token 1003: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036890320479869843
    2. '           ' → logprob: -6.628688812255859
    3. '       ' → logprob: -7.253688812255859
    4. '   ' → logprob: -7.878688812255859
    5. ' spots' → logprob: -8.50368881225586
    6. 'for' → logprob: -8.75368881225586
    7. 'def' → logprob: -8.87868881225586
    8. '#' → logprob: -9.12868881225586
    9. ':' → logprob: -9.75368881225586
    10. ' for' → logprob: -9.75368881225586

Token 1004: ' spots' (ID: 25522)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.3454608619213104
    2. 'one' → logprob: -1.5954608917236328
    3. ' one' → logprob: -3.970460891723633
    4. '#' → logprob: -4.095460891723633
    5. ' empty' → logprob: -4.470460891723633
    6. '       ' → logprob: -4.970460891723633
    7. 'for' → logprob: -4.970460891723633
    8. '
' → logprob: -5.095460891723633
    9. '           ' → logprob: -5.220460891723633
    10. ' for' → logprob: -5.595460891723633

Token 1005: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3018592596054077
    2. ' =' → logprob: -2.5518593788146973
    3. '=' → logprob: -2.8018593788146973
    4. '_with' → logprob: -3.0518593788146973
    5. '_full' → logprob: -3.8018593788146973
    6. ' with' → logprob: -4.051859378814697
    7. '[' → logprob: -4.301859378814697
    8. 'full' → logprob: -4.926859378814697
    9. '[i' → logprob: -5.801859378814697
    10. '_sp' → logprob: -6.051859378814697

Token 1006: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.4945630431175232
    2. ' one' → logprob: -2.369563102722168
    3. 'i' → logprob: -2.494563102722168
    4. '(i' → logprob: -2.494563102722168
    5. 'l' → logprob: -3.494563102722168
    6. '1' → logprob: -3.994563102722168
    7. 'exact' → logprob: -4.244563102722168
    8. '(l' → logprob: -4.369563102722168
    9. 'count' → logprob: -4.619563102722168
    10. '[i' → logprob: -4.744563102722168

Token 1007: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2295321673154831
    2. ' car' → logprob: -2.604532241821289
    3. 'l' → logprob: -3.229532241821289
    4. 'None' → logprob: -4.354532241821289
    5. '(car' → logprob: -4.354532241821289
    6. ' None' → logprob: -4.479532241821289
    7. ' l' → logprob: -4.479532241821289
    8. '_car' → logprob: -5.354532241821289
    9. '       ' → logprob: -5.604532241821289
    10. 'spot' → logprob: -5.729532241821289

Token 1008: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2810429036617279
    2. ':' → logprob: -2.5310428142547607
    3. '[' → logprob: -3.5310428142547607
    4. ' spots' → logprob: -3.6560428142547607
    5. 'empty' → logprob: -3.9060428142547607
    6. 'spots' → logprob: -4.53104305267334
    7. ' for' → logprob: -4.65604305267334
    8. ',' → logprob: -4.65604305267334
    9. ' =' → logprob: -4.65604305267334
    10. '<|end|>' → logprob: -4.90604305267334

Token 1009: ' per' (ID: 777)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.9996239542961121
    2. 'empty' → logprob: -1.3746240139007568
    3. ' spots' → logprob: -1.7496240139007568
    4. ' for' → logprob: -2.624624013900757
    5. 'for' → logprob: -3.499624013900757
    6. '           ' → logprob: -3.999624013900757
    7. '...' → logprob: -4.374623775482178
    8. 'spot' → logprob: -4.374623775482178
    9. ' empty' → logprob: -4.499623775482178
    10. 'i' → logprob: -4.874623775482178

Token 1010: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3441367149353027
    2. 'for' → logprob: -1.7191367149353027
    3. '#' → logprob: -1.9691367149353027
    4. 'len' → logprob: -2.7191367149353027
    5. 'spot' → logprob: -2.9691367149353027
    6. 'the' → logprob: -3.0941367149353027
    7. 'enumer' → logprob: -3.3441367149353027
    8. 'haps' → logprob: -3.4691367149353027
    9. 'spots' → logprob: -3.8441367149353027
    10. 'code' → logprob: -4.094136714935303

Token 1011: ''s' (ID: 885)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1810135841369629
    2. ' for' → logprob: -2.681013584136963
    3. 'for' → logprob: -3.806013584136963
    4. '               ' → logprob: -4.056013584136963
    5. ':' → logprob: -4.556013584136963
    6. '<|end|>' → logprob: -5.181013584136963
    7. 'spots' → logprob: -5.431013584136963
    8. '       ' → logprob: -5.431013584136963
    9. '```' → logprob: -5.431013584136963
    10. ',' → logprob: -5.431013584136963

Token 1012: ' parking' (ID: 14472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.541154146194458
    2. ')' → logprob: -1.916154146194458
    3. ' logic' → logprob: -2.291154146194458
    4. '```' → logprob: -2.541154146194458
    5. '[' → logprob: -3.041154146194458
    6. ' rules' → logprob: -3.291154146194458
    7. 'rules' → logprob: -3.291154146194458
    8. 'continue' → logprob: -3.416154146194458
    9. ' code' → logprob: -3.416154146194458
    10. 'return' → logprob: -3.666154146194458

Token 1013: ' rule' (ID: 10652)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31732919812202454
    2. ' spots' → logprob: -2.817329168319702
    3. '```' → logprob: -2.942329168319702
    4. ')' → logprob: -3.192329168319702
    5. '           ' → logprob: -3.817329168319702
    6. 'spots' → logprob: -4.192329406738281
    7. '_sp' → logprob: -4.317329406738281
    8. ']' → logprob: -4.817329406738281
    9. '       ' → logprob: -4.817329406738281
    10. '[
' → logprob: -5.067329406738281

Token 1014: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04628945514559746
    2. ' for' → logprob: -3.7962894439697266
    3. '       ' → logprob: -5.421289443969727
    4. '<|end|>' → logprob: -5.546289443969727
    5. ' spots' → logprob: -5.671289443969727
    6. '               ' → logprob: -5.921289443969727
    7. '            
' → logprob: -6.546289443969727
    8. 'for' → logprob: -6.671289443969727
    9. 'spots' → logprob: -6.921289443969727
    10. '<|end|>' → logprob: -7.046289443969727

Token 1015: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1153504028916359
    2. '               ' → logprob: -3.4903504848480225
    3. ' spots' → logprob: -3.6153504848480225
    4. ' for' → logprob: -3.7403504848480225
    5. '[' → logprob: -5.240350246429443
    6. '	       ' → logprob: -5.740350246429443
    7. 'spots' → logprob: -5.865350246429443
    8. '       ' → logprob: -5.990350246429443
    9. 'for' → logprob: -5.990350246429443
    10. '<|end|>' → logprob: -6.490350246429443

Token 1016: ' one' (ID: 1001)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8312467336654663
    2. 'one' (adapté à ' one') → logprob: -1.5812467336654663
    3. ' one' → logprob: -1.9562467336654663
    4. 'empty' → logprob: -2.581246852874756
    5. 'spots' → logprob: -2.831246852874756
    6. '               ' → logprob: -3.581246852874756
    7. ' spots' → logprob: -3.831246852874756
    8. ' for' → logprob: -4.706246852874756
    9. 'for' → logprob: -5.081246852874756
    10. ' empty' → logprob: -5.206246852874756

Token 1017: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0007903324440121651
    2. '_' → logprob: -8.2507905960083
    3. '_sp' → logprob: -8.2507905960083
    4. ')_' → logprob: -9.1257905960083
    5. '_c' → logprob: -9.5007905960083
    6. '_C' → logprob: -11.2507905960083
    7. '```' → logprob: -11.2507905960083
    8. ']_' → logprob: -11.5007905960083
    9. ' _' → logprob: -11.6257905960083
    10. ')' → logprob: -11.7507905960083

Token 1018: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0037623094394803047
    2. 's' → logprob: -5.628762245178223
    3. '```' → logprob: -10.128762245178223
    4. '_s' → logprob: -10.378762245178223
    5. 'spots' → logprob: -10.878762245178223
    6. '_positions' → logprob: -11.378762245178223
    7. 'sp' → logprob: -11.878762245178223
    8. '_' → logprob: -12.128762245178223
    9. ')_' → logprob: -12.253762245178223
    10. '_spaces' → logprob: -12.378762245178223

Token 1019: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.002252910751849413
    2. '```' → logprob: -7.00225305557251
    3. '[' → logprob: -7.37725305557251
    4. 'ot' → logprob: -8.877252578735352
    5. '_' → logprob: -9.002252578735352
    6. '_sp' → logprob: -9.752252578735352
    7. '[
' → logprob: -10.252252578735352
    8. 'ost' → logprob: -10.377252578735352
    9. 'pots' → logprob: -10.502252578735352
    10. '   ' → logprob: -11.002252578735352

Token 1020: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16098441183567047
    2. '=' → logprob: -1.9109843969345093
    3. '=[]' → logprob: -7.410984516143799
    4. '=[]
' → logprob: -10.16098403930664
    5. '=[' → logprob: -10.28598403930664
    6. ':' → logprob: -11.16098403930664
    7. ')' → logprob: -11.66098403930664
    8. '<|end|>' → logprob: -11.78598403930664
    9. '```' → logprob: -11.78598403930664
    10. '[' → logprob: -11.91098403930664

Token 1021: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06469474732875824
    2. ' [' → logprob: -2.81469464302063
    3. '[]
' → logprob: -6.564694881439209
    4. '[]' → logprob: -7.314694881439209
    5. '[' → logprob: -7.439694881439209
    6. ' []
' → logprob: -10.43969440460205
    7. ' []' → logprob: -11.56469440460205
    8. '[j' → logprob: -12.18969440460205
    9. '[x' → logprob: -13.18969440460205
    10. '[k' → logprob: -13.18969440460205

Token 1022: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.393781453371048
    2. ' for' → logprob: -1.8937814235687256
    3. '	       ' → logprob: -2.5187814235687256
    4. '[' → logprob: -2.7687814235687256
    5. 'for' → logprob: -3.8937814235687256
    6. '	           ' → logprob: -5.768781661987305
    7. '	for' → logprob: -6.893781661987305
    8. '		' → logprob: -6.893781661987305
    9. '               ' → logprob: -7.018781661987305
    10. '       ' → logprob: -7.518781661987305

Token 1023: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45019081234931946
    2. ' for' → logprob: -1.700190782546997
    3. '           ' → logprob: -1.825190782546997
    4. '[' → logprob: -4.700191020965576
    5. '	       ' → logprob: -5.950191020965576
    6. '       ' → logprob: -6.075191020965576
    7. '	for' → logprob: -6.450191020965576
    8. '[i' → logprob: -6.950191020965576
    9. '	   ' → logprob: -8.075190544128418
    10. '		' → logprob: -8.200190544128418

Token 1024: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028098674956709146
    2. ' i' → logprob: -5.877810001373291
    3. '```' → logprob: -13.752809524536133
    4. 'pos' → logprob: -13.877809524536133
    5. ' ' → logprob: -14.877809524536133
    6. '_i' → logprob: -14.877809524536133
    7. '   ' → logprob: -14.877809524536133
    8. '	i' → logprob: -15.002809524536133
    9. '...' → logprob: -15.252809524536133
    10. '
' → logprob: -15.377809524536133

Token 1025: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.583490788936615
    2. 'in' → logprob: -0.833490788936615
    3. ',' → logprob: -5.33349084854126
    4. ',(' → logprob: -5.95849084854126
    5. ' ,' → logprob: -10.833490371704102
    6. 'i' → logprob: -11.208490371704102
    7. ',i' → logprob: -11.458490371704102
    8. ',[' → logprob: -11.583490371704102
    9. ',in' → logprob: -11.583490371704102
    10. ',l' → logprob: -12.083490371704102

Token 1026: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031893588602542877
    2. ' range' → logprob: -5.753189563751221
    3. '```' → logprob: -12.503189086914062
    4. 'i' → logprob: -12.878189086914062
    5. 'in' → logprob: -12.878189086914062
    6. '(range' → logprob: -14.378189086914062
    7. '0' → logprob: -14.878189086914062
    8. '
' → logprob: -15.003189086914062
    9. ' ' → logprob: -15.253189086914062
    10. '   ' → logprob: -15.628189086914062

Token 1027: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000533732702024281
    2. 'range' → logprob: -7.875533580780029
    3. '(m' → logprob: -8.875534057617188
    4. ' m' → logprob: -11.500534057617188
    5. '0' → logprob: -13.500534057617188
    6. ' range' → logprob: -13.625534057617188
    7. 'len' → logprob: -15.000534057617188
    8. '
' → logprob: -15.500534057617188
    9. '   ' → logprob: -15.750534057617188
    10. 'in' → logprob: -16.250534057617188

Token 1028: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008258765563368797
    2. '):' → logprob: -5.508258819580078
    3. '           ' → logprob: -6.008258819580078
    4. ':
' → logprob: -7.258258819580078
    5. '       ' → logprob: -8.258258819580078
    6. '               ' → logprob: -8.508258819580078
    7. '():
' → logprob: -8.883258819580078
    8. ':' → logprob: -9.133258819580078
    9. ']:
' → logprob: -9.508258819580078
    10. '):
' → logprob: -9.633258819580078

Token 1029: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06521710753440857
    2. ' if' → logprob: -3.9402170181274414
    3. '           ' → logprob: -4.190217018127441
    4. '```' → logprob: -4.190217018127441
    5. 'if' → logprob: -5.440217018127441
    6. ':' → logprob: -5.940217018127441
    7. '[' → logprob: -7.065217018127441
    8. '	       ' → logprob: -7.315217018127441
    9. ' spots' → logprob: -7.315217018127441
    10. '	           ' → logprob: -7.565217018127441

Token 1030: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.4900929927825928
    2. '(l' → logprob: -1.8650929927825928
    3. ' i' → logprob: -1.9900929927825928
    4. ' spots' → logprob: -2.1150929927825928
    5. 'l' (adapté à ' l') → logprob: -2.3650929927825928
    6. 'i' → logprob: -2.6150929927825928
    7. 'spots' → logprob: -3.4900929927825928
    8. ' if' → logprob: -3.4900929927825928
    9. '   ' → logprob: -3.7400929927825928
    10. ' (' → logprob: -3.7400929927825928

Token 1031: ',u' (ID: 80698)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.025522716343402863
    2. 'is' → logprob: -4.275522708892822
    3. ',' → logprob: -5.400522708892822
    4. ' in' → logprob: -6.025522708892822
    5. ')' → logprob: -6.900522708892822
    6. ' not' → logprob: -7.150522708892822
    7. '[' → logprob: -8.02552318572998
    8. ',is' → logprob: -8.02552318572998
    9. ',u' → logprob: -8.15052318572998
    10. '```' → logprob: -8.52552318572998

Token 1032: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16355401277542114
    2. '=' → logprob: -2.1635539531707764
    3. ' in' → logprob: -3.9135539531707764
    4. ' is' → logprob: -5.1635541915893555
    5. 'is' → logprob: -5.6635541915893555
    6. ')' → logprob: -6.2885541915893555
    7. '```' → logprob: -6.2885541915893555
    8. 'in' → logprob: -6.6635541915893555
    9. '           ' → logprob: -7.2885541915893555
    10. ':' → logprob: -8.163554191589355

Token 1033: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.17300449311733246
    2. ' spots' → logprob: -1.9230045080184937
    3. '0' → logprob: -4.923004627227783
    4. 'i' → logprob: -5.923004627227783
    5. '(i' → logprob: -7.298004627227783
    6. '1' → logprob: -8.173004150390625
    7. 'range' → logprob: -8.173004150390625
    8. ' i' → logprob: -8.423004150390625
    9. ' ' → logprob: -8.548004150390625
    10. 'enumer' → logprob: -8.798004150390625

Token 1034: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0890908241271973
    2. ' not' → logprob: -1.5890908241271973
    3. '[' → logprob: -2.2140908241271973
    4. 'None' → logprob: -2.3390908241271973
    5. 'i' → logprob: -2.8390908241271973
    6. ' None' → logprob: -2.9640908241271973
    7. '```' → logprob: -3.2140908241271973
    8. 'not' → logprob: -3.4640908241271973
    9. ' i' → logprob: -3.4640908241271973
    10. 'is' → logprob: -4.214090824127197

Token 1035: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0635882318019867
    2. ']:
' → logprob: -3.4385881423950195
    3. '               ' → logprob: -3.9385881423950195
    4. ']
' → logprob: -5.3135881423950195
    5. '           ' → logprob: -6.8135881423950195
    6. ']:' → logprob: -7.0635881423950195
    7. ')' → logprob: -7.1885881423950195
    8. '][' → logprob: -7.8135881423950195
    9. '):
' → logprob: -7.9385881423950195
    10. ']=' → logprob: -8.06358814239502

Token 1036: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10256418585777283
    2. ' if' → logprob: -2.6025640964508057
    3. '[' → logprob: -5.352564334869385
    4. 'if' → logprob: -5.727564334869385
    5. '	           ' → logprob: -5.977564334869385
    6. '<|end|>' → logprob: -6.102564334869385
    7. '```' → logprob: -6.102564334869385
    8. '		       ' → logprob: -6.227564334869385
    9. '	       ' → logprob: -6.227564334869385
    10. '                   ' → logprob: -7.227564334869385

Token 1037: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16087013483047485
    2. 'if' → logprob: -2.28587007522583
    3. '       ' → logprob: -3.66087007522583
    4. '           ' → logprob: -4.91087007522583
    5. '```' → logprob: -5.16087007522583
    6. '   ' → logprob: -5.28587007522583
    7. 'count' → logprob: -6.53587007522583
    8. '               ' → logprob: -7.03587007522583
    9. ' count' → logprob: -8.660870552062988
    10. '``' → logprob: -9.535870552062988

Token 1038: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8638294339179993
    2. '=' → logprob: -1.4888293743133545
    3. '+=' → logprob: -1.6138293743133545
    4. ' +=' → logprob: -2.4888293743133545
    5. ' ==' → logprob: -2.9888293743133545
    6. ' =' → logprob: -4.113829612731934
    7. '+=(' → logprob: -7.238829612731934
    8. '=count' → logprob: -7.363829612731934
    9. '==(' → logprob: -7.738829612731934
    10. '```' → logprob: -7.988829612731934

Token 1039: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5765751600265503
    2. ' (' → logprob: -0.8265751600265503
    3. '0' → logprob: -7.82657527923584
    4. '(' → logprob: -9.20157527923584
    5. '1' → logprob: -9.82657527923584
    6. '(int' → logprob: -10.82657527923584
    7. '(t' → logprob: -11.20157527923584
    8. '(i' → logprob: -11.57657527923584
    9. '(c' → logprob: -11.57657527923584
    10. ' ' → logprob: -11.70157527923584

Token 1040: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000591874762903899
    2. '1' → logprob: -7.62559175491333
    3. '(l' → logprob: -9.375592231750488
    4. ' l' → logprob: -11.250592231750488
    5. 'u' → logprob: -13.250592231750488
    6. '```' → logprob: -13.750592231750488
    7. 'i' → logprob: -14.000592231750488
    8. '   ' → logprob: -14.625592231750488
    9. '(u' → logprob: -15.000592231750488
    10. '0' → logprob: -15.125592231750488

Token 1041: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008210873231291771
    2. 'is' → logprob: -4.8832106590271
    3. ')' → logprob: -8.008211135864258
    4. '[' → logprob: -9.008211135864258
    5. ' not' → logprob: -10.133211135864258
    6. '```' → logprob: -10.383211135864258
    7. '==' → logprob: -10.883211135864258
    8. ' ==' → logprob: -11.633211135864258
    9. 'not' → logprob: -11.758211135864258
    10. '<|end|>' → logprob: -11.883211135864258

Token 1042: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16025012731552124
    2. ' not' → logprob: -1.910250186920166
    3. 'None' → logprob: -10.785249710083008
    4. '1' → logprob: -12.910249710083008
    5. 'Not' → logprob: -14.035249710083008
    6. '...' → logprob: -14.035249710083008
    7. ' None' → logprob: -14.660249710083008
    8. '_not' → logprob: -15.285249710083008
    9. '0' → logprob: -16.035249710083008
    10. '	not' → logprob: -16.160249710083008

Token 1043: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6932973265647888
    2. 'None' → logprob: -0.6932973265647888
    3. ' not' → logprob: -9.068297386169434
    4. ' None' → logprob: -10.443297386169434
    5. 'Not' → logprob: -13.443297386169434
    6. 'none' → logprob: -13.443297386169434
    7. '```' → logprob: -14.068297386169434
    8. '1' → logprob: -14.443297386169434
    9. '...' → logprob: -14.693297386169434
    10. '0' → logprob: -14.818297386169434

Token 1044: ')+(' (ID: 104644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026850201189517975
    2. ')+' → logprob: -3.6518502235412598
    3. ')+(' → logprob: -8.276849746704102
    4. '+' → logprob: -8.276849746704102
    5. '```' → logprob: -11.526849746704102
    6. '[' → logprob: -11.901849746704102
    7. '+)' → logprob: -12.651849746704102
    8. '           ' → logprob: -13.026849746704102
    9. ')
' → logprob: -13.026849746704102
    10. ' +' → logprob: -13.401849746704102

Token 1045: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006569960620254278
    2. '(u' → logprob: -5.256569862365723
    3. ' u' → logprob: -7.381569862365723
    4. '1' → logprob: -7.506569862365723
    5. ' (' → logprob: -9.131569862365723
    6. '```' → logprob: -10.506569862365723
    7. '0' → logprob: -12.131569862365723
    8. '(not' → logprob: -12.256569862365723
    9. '[u' → logprob: -12.506569862365723
    10. '(' → logprob: -12.506569862365723

Token 1046: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1305660605430603
    2. 'is' → logprob: -2.505566120147705
    3. ')' → logprob: -3.505566120147705
    4. ' not' → logprob: -5.255566120147705
    5. 'not' → logprob: -5.755566120147705
    6. '[' → logprob: -7.255566120147705
    7. ')is' → logprob: -7.630566120147705
    8. '```' → logprob: -7.755566120147705
    9. ']' → logprob: -8.505565643310547
    10. '!=' → logprob: -9.005565643310547

Token 1047: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048844415694475174
    2. ' not' → logprob: -3.048844337463379
    3. '1' → logprob: -8.548844337463379
    4. 'None' → logprob: -9.798844337463379
    5. '0' → logprob: -12.548844337463379
    6. 'Not' → logprob: -12.923844337463379
    7. ' None' → logprob: -14.673844337463379
    8. '	not' → logprob: -14.798844337463379
    9. '...' → logprob: -15.048844337463379
    10. '_not' → logprob: -15.423844337463379

Token 1048: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006962585728615522
    2. ' None' → logprob: -5.006962776184082
    3. 'not' → logprob: -8.381962776184082
    4. ' not' → logprob: -11.131962776184082
    5. 'Not' → logprob: -13.506962776184082
    6. '(None' → logprob: -13.881962776184082
    7. '_None' → logprob: -14.006962776184082
    8. '1' → logprob: -15.381962776184082
    9. '_none' → logprob: -15.756962776184082
    10. '0' → logprob: -16.506961822509766

Token 1049: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006504574324935675
    2. ')
' → logprob: -5.131504535675049
    3. ')==' → logprob: -8.131505012512207
    4. '           ' → logprob: -9.381505012512207
    5. '```' → logprob: -10.381505012512207
    6. '<|end|>' → logprob: -10.381505012512207
    7. '==' → logprob: -10.756505012512207
    8. '):
' → logprob: -10.756505012512207
    9. ')<' → logprob: -11.256505012512207
    10. ')>' → logprob: -11.631505012512207

Token 1050: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.286012887954712
    2. '<|end|>' → logprob: -1.286012887954712
    3. '           ' → logprob: -1.786012887954712
    4. '               ' → logprob: -2.411012887954712
    5. '[' → logprob: -2.661012887954712
    6. '```' → logprob: -3.661012887954712
    7. 'if' → logprob: -4.036012649536133
    8. '                   ' → logprob: -4.286012649536133
    9. '<|end|>' → logprob: -4.411012649536133
    10. '       ' → logprob: -4.911012649536133

Token 1051: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09587538242340088
    2. 'if' (adapté à ' if') → logprob: -3.0958752632141113
    3. '
' → logprob: -3.5958752632141113
    4. '```' → logprob: -5.095875263214111
    5. '[' → logprob: -5.345875263214111
    6. ' 
' → logprob: -6.345875263214111
    7. ':
' → logprob: -6.720875263214111
    8. '               ' → logprob: -6.845875263214111
    9. ' ' → logprob: -7.220875263214111
    10. '<|end|>' → logprob: -7.345875263214111

Token 1052: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06198538839817047
    2. ' cnt' → logprob: -2.811985492706299
    3. '(cnt' → logprob: -11.81198501586914
    4. '	cnt' → logprob: -12.31198501586914
    5. 'count' → logprob: -12.43698501586914
    6. '[cnt' → logprob: -13.56198501586914
    7. '1' → logprob: -15.93698501586914
    8. '   ' → logprob: -16.06198501586914
    9. '           ' → logprob: -16.06198501586914
    10. '_cnt' → logprob: -16.93698501586914

Token 1053: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001976691884920001
    2. ' ==' → logprob: -6.251976490020752
    3. '()==' → logprob: -10.87697696685791
    4. ')==' → logprob: -11.37697696685791
    5. ']==' → logprob: -11.75197696685791
    6. '==
' → logprob: -12.87697696685791
    7. '```' → logprob: -13.00197696685791
    8. '!=' → logprob: -13.75197696685791
    9. ')' → logprob: -14.00197696685791
    10. '[' → logprob: -14.25197696685791

Token 1054: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.250003814697266
    5. '
' → logprob: -17.500003814697266
    6. '0' → logprob: -18.625003814697266
    7. '=' → logprob: -19.250003814697266
    8. '2' → logprob: -19.375003814697266
    9. '  ' → logprob: -20.500003814697266
    10. '۱' → logprob: -21.250003814697266

Token 1055: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -16.500001907348633
    4. '
' → logprob: -16.875001907348633
    5. '```' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '=' → logprob: -18.625001907348633
    8. '2' → logprob: -20.062501907348633
    9. '...' → logprob: -20.187501907348633
    10. '  ' → logprob: -20.500001907348633

Token 1056: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20211346447467804
    2. ':' → logprob: -1.7021135091781616
    3. '                   ' → logprob: -8.452113151550293
    4. '               ' → logprob: -8.827113151550293
    5. '[' → logprob: -9.327113151550293
    6. '           ' → logprob: -9.452113151550293
    7. ' and' → logprob: -9.952113151550293
    8. '):
' → logprob: -10.202113151550293
    9. '<|end|>' → logprob: -11.577113151550293
    10. '==' → logprob: -11.702113151550293

Token 1057: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5120673179626465
    2. ':
' → logprob: -1.3870673179626465
    3. '```' → logprob: -3.0120673179626465
    4. ':' → logprob: -3.1370673179626465
    5. '               ' → logprob: -3.2620673179626465
    6. '[' → logprob: -4.7620673179626465
    7. '):
' → logprob: -6.0120673179626465
    8. ' spots' → logprob: -6.2620673179626465
    9. '                       ' → logprob: -6.3870673179626465
    10. ' and' → logprob: -7.5120673179626465

Token 1058: ' one' (ID: 1001)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.13071879744529724
    2. 'spots' → logprob: -2.88071870803833
    3. ' one' → logprob: -3.50571870803833
    4. '```' → logprob: -4.50571870803833
    5. '[' → logprob: -4.88071870803833
    6. '                   ' → logprob: -5.63071870803833
    7. ' (' → logprob: -6.25571870803833
    8. 'one' (adapté à ' one') → logprob: -6.63071870803833
    9. '               ' → logprob: -6.88071870803833
    10. '(one' → logprob: -7.13071870803833

Token 1059: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0036107590422034264
    2. '[' → logprob: -6.378610610961914
    3. '[i' → logprob: -7.378610610961914
    4. '_sp' → logprob: -8.003610610961914
    5. '[
' → logprob: -8.253610610961914
    6. ')' → logprob: -9.253610610961914
    7. ')[' → logprob: -9.628610610961914
    8. '<Car' → logprob: -9.878610610961914
    9. '```' → logprob: -9.878610610961914
    10. ')_' → logprob: -10.253610610961914

Token 1060: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0028571782168000937
    2. '```' → logprob: -6.877857208251953
    3. '_s' → logprob: -7.377857208251953
    4. 's' → logprob: -7.377857208251953
    5. '[i' → logprob: -9.127857208251953
    6. '[' → logprob: -9.252857208251953
    7. 'spots' → logprob: -9.877857208251953
    8. 'Sp' → logprob: -10.127857208251953
    9. ')' → logprob: -10.127857208251953
    10. 'sp' → logprob: -10.377857208251953

Token 1061: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0008965740562416613
    2. '```' → logprob: -7.750896453857422
    3. 'ot' → logprob: -8.750896453857422
    4. 'pots' → logprob: -9.000896453857422
    5. 'orts' → logprob: -9.875896453857422
    6. 'ts' → logprob: -11.000896453857422
    7. '[
' → logprob: -11.125896453857422
    8. 'pts' → logprob: -11.625896453857422
    9. 'otsa' → logprob: -11.625896453857422
    10. 'opts' → logprob: -11.625896453857422

Token 1062: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009518369333818555
    2. '.' → logprob: -7.250951766967773
    3. 'append' → logprob: -8.875951766967773
    4. '```' → logprob: -10.625951766967773
    5. ').' → logprob: -11.125951766967773
    6. '().' → logprob: -11.250951766967773
    7. ' .' → logprob: -12.000951766967773
    8. '].' → logprob: -12.125951766967773
    9. '=' → logprob: -12.250951766967773
    10. '           ' → logprob: -12.250951766967773

Token 1063: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.869017852295656e-06
    2. 'i' → logprob: -12.125006675720215
    3. '[i' → logprob: -14.000006675720215
    4. '(' → logprob: -14.875006675720215
    5. ' (' → logprob: -16.50000762939453
    6. '(
' → logprob: -17.25000762939453
    7. '((' → logprob: -18.37500762939453
    8. '
' → logprob: -18.50000762939453
    9. '   ' → logprob: -18.50000762939453
    10. '{i' → logprob: -18.75000762939453

Token 1064: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006078583188354969
    2. '<|end|>' → logprob: -5.506078720092773
    3. ')
' → logprob: -7.006078720092773
    4. '           ' → logprob: -8.256078720092773
    5. '<|end|>' → logprob: -8.506078720092773
    6. '       ' → logprob: -8.881078720092773
    7. '[' → logprob: -9.006078720092773
    8. ']' → logprob: -9.756078720092773
    9. '```' → logprob: -9.756078720092773
    10. '               ' → logprob: -10.006078720092773

Token 1065: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7508473992347717
    2. '       ' → logprob: -1.125847339630127
    3. '           ' → logprob: -2.875847339630127
    4. '	       ' → logprob: -3.375847339630127
    5. '```' → logprob: -4.000847339630127
    6. ' spots' → logprob: -4.250847339630127
    7. '                   ' → logprob: -4.250847339630127
    8. '[' → logprob: -4.750847339630127
    9. '<|end|>' → logprob: -4.750847339630127
    10. '
' → logprob: -5.250847339630127

Token 1066: ' less' (ID: 3760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.667962372303009
    2. '           ' → logprob: -1.0429623126983643
    3. ' for' → logprob: -2.2929623126983643
    4. 'current' → logprob: -3.9179623126983643
    5. '```' → logprob: -4.667962551116943
    6. '               ' → logprob: -6.417962551116943
    7. '       ' → logprob: -6.792962551116943
    8. '
' → logprob: -7.417962551116943
    9. '   ' → logprob: -8.042962074279785
    10. '``' → logprob: -8.542962074279785

Token 1067: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0004330532974563539
    2. 'equal' → logprob: -8.875432968139648
    3. '=' → logprob: -9.750432968139648
    4. '=[]' → logprob: -10.125432968139648
    5. ' =' → logprob: -10.250432968139648
    6. '           ' → logprob: -10.625432968139648
    7. '.equal' → logprob: -10.750432968139648
    8. 'Equal' → logprob: -10.875432968139648
    9. '_EQUAL' → logprob: -10.875432968139648
    10. '_' → logprob: -11.250432968139648

Token 1068: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0004652273200917989
    2. '.' → logprob: -8.000465393066406
    3. '.append' → logprob: -9.625465393066406
    4. ',' → logprob: -10.875465393066406
    5. ' =' → logprob: -11.500465393066406
    6. 'sort' → logprob: -11.625465393066406
    7. '=[]' → logprob: -12.000465393066406
    8. '=' → logprob: -12.500465393066406
    9. '=[]
' → logprob: -12.875465393066406
    10. '.clear' → logprob: -13.125465393066406

Token 1069: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0021113590337336063
    2. '[]
' → logprob: -6.377111434936523
    3. ' []' → logprob: -7.877111434936523
    4. '[(' → logprob: -11.127111434936523
    5. '[' → logprob: -11.752111434936523
    6. '[
' → logprob: -12.752111434936523
    7. '[],' → logprob: -13.377111434936523
    8. '[]}' → logprob: -14.252111434936523
    9. '[]>' → logprob: -14.627111434936523
    10. '=[]' → logprob: -14.752111434936523

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.347271591424942
    2. '               ' → logprob: -1.9722715616226196
    3. '```' → logprob: -2.472271680831909
    4. '[' → logprob: -2.972271680831909
    5. 'for' → logprob: -5.22227144241333
    6. ' for' → logprob: -5.34727144241333
    7. '[
' → logprob: -6.22227144241333
    8. '(' → logprob: -6.59727144241333
    9. '                   ' → logprob: -7.22227144241333
    10. '``' → logprob: -7.34727144241333

Token 1071: ' less' (ID: 3760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5752427577972412
    2. '[' → logprob: -1.5752427577972412
    3. '           ' → logprob: -2.450242757797241
    4. '[
' → logprob: -2.450242757797241
    5. '(' → logprob: -3.825242757797241
    6. '```' → logprob: -4.45024299621582
    7. ' for' → logprob: -4.70024299621582
    8. '[]' → logprob: -4.95024299621582
    9. '[(' → logprob: -6.07524299621582
    10. '(
' → logprob: -7.07524299621582

Token 1072: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.8458325862884521
    2. '_equal' → logprob: -1.2208325862884521
    3. '.sort' → logprob: -1.5958325862884521
    4. '=' → logprob: -3.970832586288452
    5. '.equal' → logprob: -4.720832824707031
    6. 'Equal' → logprob: -4.845832824707031
    7. 'equal' → logprob: -5.095832824707031
    8. '=[]' → logprob: -5.095832824707031
    9. '```' → logprob: -5.220832824707031
    10. '.' → logprob: -5.720832824707031

Token 1073: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.034940436482429504
    2. ' []' → logprob: -4.034940242767334
    3. '[]
' → logprob: -4.159940242767334
    4. '[(' → logprob: -7.409940242767334
    5. '[' → logprob: -8.409940719604492
    6. ' []
' → logprob: -8.784940719604492
    7. '[
' → logprob: -10.409940719604492
    8. ' [(' → logprob: -10.784940719604492
    9. '=[]' → logprob: -13.034940719604492
    10. '[]}' → logprob: -13.409940719604492

Token 1074: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20641006529331207
    2. ' for' → logprob: -2.0814101696014404
    3. 'for' → logprob: -2.8314101696014404
    4. '[' → logprob: -6.706409931182861
    5. '```' → logprob: -7.206409931182861
    6. '               ' → logprob: -7.831409931182861
    7. '       ' → logprob: -8.20641040802002
    8. '	for' → logprob: -10.58141040802002
    9. '   ' → logprob: -10.95641040802002
    10. '(' → logprob: -11.08141040802002

Token 1075: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6145502328872681
    2. '           ' → logprob: -1.364550232887268
    3. ' for' → logprob: -1.614550232887268
    4. '```' → logprob: -6.2395501136779785
    5. '               ' → logprob: -7.1145501136779785
    6. '       ' → logprob: -7.1145501136779785
    7. '	for' → logprob: -7.3645501136779785
    8. '[' → logprob: -8.489550590515137
    9. '   ' → logprob: -9.989550590515137
    10. '	       ' → logprob: -10.864550590515137

Token 1076: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3400901257991791
    2. 'pos' → logprob: -1.9650901556015015
    3. 'car' → logprob: -2.465090036392212
    4. ' i' → logprob: -3.340090036392212
    5. ' pos' → logprob: -3.965090036392212
    6. ' car' → logprob: -4.840090274810791
    7. 'idx' → logprob: -8.965089797973633
    8. '(car' → logprob: -9.340089797973633
    9. '   ' → logprob: -9.465089797973633
    10. '(pos' → logprob: -9.527589797973633

Token 1077: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015618532896042
    2. 'in' → logprob: -1.7015618085861206
    3. ',' → logprob: -9.07656192779541
    4. ',(' → logprob: -11.95156192779541
    5. '```' → logprob: -12.07656192779541
    6. ',pos' → logprob: -12.32656192779541
    7. ' ,' → logprob: -12.57656192779541
    8. 'pos' → logprob: -13.45156192779541
    9. ',in' → logprob: -13.57656192779541
    10. '
' → logprob: -13.70156192779541

Token 1078: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.013760649599134922
    2. 'range' → logprob: -4.638760566711426
    3. ' one' → logprob: -5.763760566711426
    4. '(one' → logprob: -8.263760566711426
    5. ' range' → logprob: -8.513760566711426
    6. '(' → logprob: -8.638760566711426
    7. '[' → logprob: -10.138760566711426
    8. 'i' → logprob: -10.513760566711426
    9. 'pos' → logprob: -10.763760566711426
    10. '   ' → logprob: -10.763760566711426

Token 1079: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.453891396522522
    2. 'in' → logprob: -1.203891396522522
    3. ' in' → logprob: -2.8288912773132324
    4. 'range' → logprob: -6.328891277313232
    5. ')' → logprob: -7.453891277313232
    6. 'Car' → logprob: -7.703891277313232
    7. 'spots' → logprob: -7.953891277313232
    8. 'car' → logprob: -8.20389175415039
    9. '_sp' → logprob: -8.57889175415039
    10. '   ' → logprob: -8.57889175415039

Token 1080: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.01916906051337719
    2. 'spots' → logprob: -4.769168853759766
    3. '_car' → logprob: -5.394168853759766
    4. 'one' → logprob: -5.519168853759766
    5. '_one' → logprob: -6.894168853759766
    6. 'sp' → logprob: -8.144168853759766
    7. '[' → logprob: -9.019168853759766
    8. 'car' → logprob: -9.019168853759766
    9. '_c' → logprob: -9.519168853759766
    10. ' spots' → logprob: -9.644168853759766

Token 1081: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.001637812121771276
    2. '```' → logprob: -7.126637935638428
    3. '
' → logprob: -8.75163745880127
    4. 'pots' → logprob: -9.00163745880127
    5. '[' → logprob: -9.25163745880127
    6. '_car' → logprob: -9.37663745880127
    7. 'car' → logprob: -10.00163745880127
    8. '[
' → logprob: -10.00163745880127
    9. '{
' → logprob: -10.25163745880127
    10. 'orts' → logprob: -10.37663745880127

Token 1082: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20535632967948914
    2. ':
' → logprob: -1.7053563594818115
    3. '               ' → logprob: -6.330356121063232
    4. ',' → logprob: -7.205356121063232
    5. '```' → logprob: -7.580356121063232
    6. '           ' → logprob: -8.33035659790039
    7. ' in' → logprob: -8.83035659790039
    8. 'in' → logprob: -9.08035659790039
    9. '[' → logprob: -9.45535659790039
    10. '):
' → logprob: -10.08035659790039

Token 1083: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008781121578067541
    2. '```' → logprob: -8.00087833404541
    3. '(' → logprob: -9.25087833404541
    4. '           ' → logprob: -9.62587833404541
    5. '   ' → logprob: -10.12587833404541
    6. '
' → logprob: -10.12587833404541
    7. ' (' → logprob: -10.12587833404541
    8. '[' → logprob: -10.25087833404541
    9. '                   ' → logprob: -10.50087833404541
    10. '       ' → logprob: -10.75087833404541

Token 1084: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.2185034453868866
    2. ' l' → logprob: -2.343503475189209
    3. '               ' → logprob: -2.718503475189209
    4. 'current' → logprob: -4.843503475189209
    5. '(l' → logprob: -4.968503475189209
    6. '                   ' → logprob: -4.968503475189209
    7. '#' → logprob: -5.468503475189209
    8. 'car' → logprob: -5.968503475189209
    9. ' current' → logprob: -6.968503475189209
    10. '```' → logprob: -7.093503475189209

Token 1085: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.012831701897084713
    2. ',' → logprob: -4.387831687927246
    3. ',is' → logprob: -9.262831687927246
    4. ' ,' → logprob: -10.137831687927246
    5. ',v' → logprob: -10.262831687927246
    6. '```' → logprob: -10.637831687927246
    7. ',o' → logprob: -11.512831687927246
    8. ',e' → logprob: -11.512831687927246
    9. ' is' → logprob: -11.512831687927246
    10. '   ' → logprob: -11.512831687927246

Token 1086: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07098209857940674
    2. ' =' → logprob: -3.820981979370117
    3. '[' → logprob: -4.445981979370117
    4. '=' → logprob: -5.195981979370117
    5. '<|end|>' → logprob: -5.320981979370117
    6. '                   ' → logprob: -5.445981979370117
    7. ':' → logprob: -5.445981979370117
    8. ':
' → logprob: -5.945981979370117
    9. ' if' → logprob: -6.195981979370117
    10. '```' → logprob: -6.320981979370117

Token 1087: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.18001538515090942
    2. ' spots' → logprob: -1.8050153255462646
    3. '   ' → logprob: -10.055015563964844
    4. 'pos' → logprob: -10.305015563964844
    5. 'positions' → logprob: -10.305015563964844
    6. 'spot' → logprob: -10.430015563964844
    7. '       ' → logprob: -10.430015563964844
    8. '           ' → logprob: -10.430015563964844
    9. ' (' → logprob: -11.430015563964844
    10. '(' → logprob: -11.930015563964844

Token 1088: '[pos' (ID: 48272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7255030870437622
    2. ' if' → logprob: -2.3505029678344727
    3. '[' → logprob: -2.4755029678344727
    4. 'if' → logprob: -2.4755029678344727
    5. '[pos' → logprob: -2.8505029678344727
    6. '=' → logprob: -3.4755029678344727
    7. ')' → logprob: -3.7255029678344727
    8. ' is' → logprob: -3.8505029678344727
    9. 'is' → logprob: -3.9755029678344727
    10. 'pos' → logprob: -4.100502967834473

Token 1089: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.318092942237854
    2. ']
' → logprob: -1.693092942237854
    3. ']' → logprob: -2.8180928230285645
    4. '[' → logprob: -4.5680928230285645
    5. '][' → logprob: -5.3180928230285645
    6. ')' → logprob: -5.6930928230285645
    7. ')
' → logprob: -5.9430928230285645
    8. '           ' → logprob: -6.0680928230285645
    9. '                   ' → logprob: -7.0680928230285645
    10. ':
' → logprob: -7.1930928230285645

Token 1090: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041623156517744064
    2. '                   ' → logprob: -3.541623115539551
    3. '```' → logprob: -5.166623115539551
    4. ' car' → logprob: -6.166623115539551
    5. 'car' → logprob: -7.041623115539551
    6. ' existing' → logprob: -7.666623115539551
    7. '                ' → logprob: -7.791623115539551
    8. 'existing' → logprob: -8.04162311553955
    9. 'current' → logprob: -8.29162311553955
    10. ' if' → logprob: -8.54162311553955

Token 1091: ' exist' (ID: 4310)
  Prédit: ' exist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exist' → logprob: -0.5070574879646301
    2. 'exist' (adapté à ' exist') → logprob: -1.1320574283599854
    3. '               ' → logprob: -2.8820574283599854
    4. '```' → logprob: -4.7570576667785645
    5. 'existing' → logprob: -5.1320576667785645
    6. ' existing' → logprob: -5.8820576667785645
    7. ' car' → logprob: -7.7570576667785645
    8. '``' → logprob: -7.8820576667785645
    9. '                   ' → logprob: -8.007057189941406
    10. 'car' → logprob: -8.007057189941406

Token 1092: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0029515549540519714
    2. '               ' → logprob: -6.127951622009277
    3. 'car' → logprob: -8.377951622009277
    4. '[' → logprob: -8.377951622009277
    5. '```' → logprob: -8.752951622009277
    6. '_c' → logprob: -9.252951622009277
    7. '_' → logprob: -11.502951622009277
    8. '                   ' → logprob: -12.002951622009277
    9. ' car' → logprob: -12.252951622009277
    10. ')_' → logprob: -12.627951622009277

Token 1093: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6252584457397461
    2. ' =' → logprob: -0.8752584457397461
    3. '=' → logprob: -3.250258445739746
    4. '```' → logprob: -5.625258445739746
    5. '
' → logprob: -6.875258445739746
    6. ' is' → logprob: -7.125258445739746
    7. ')' → logprob: -7.375258445739746
    8. '=None' → logprob: -7.625258445739746
    9. ')[' → logprob: -8.000258445739746
    10. 'None' → logprob: -8.250258445739746

Token 1094: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6327376365661621
    2. 'l' → logprob: -0.7577376365661621
    3. '(l' → logprob: -10.13273811340332
    4. 'None' → logprob: -10.38273811340332
    5. 'u' → logprob: -11.50773811340332
    6. ' None' → logprob: -11.50773811340332
    7. '   ' → logprob: -11.50773811340332
    8. ' (' → logprob: -11.88273811340332
    9. '[l' → logprob: -12.07023811340332
    10. '	l' → logprob: -12.75773811340332

Token 1095: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09957538545131683
    2. 'if' → logprob: -2.8495752811431885
    3. '[' → logprob: -3.3495752811431885
    4. '               ' → logprob: -6.599575519561768
    5. '<|end|>' → logprob: -8.72457504272461
    6. '           ' → logprob: -9.47457504272461
    7. '```' → logprob: -10.47457504272461
    8. '                   ' → logprob: -10.72457504272461
    9. '
' → logprob: -10.72457504272461
    10. ' or' → logprob: -10.84957504272461

Token 1096: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.032168544828891754
    2. ' l' → logprob: -3.5321686267852783
    3. 'exist' → logprob: -6.282168388366699
    4. ' exist' → logprob: -7.657168388366699
    5. 'u' → logprob: -10.1571683883667
    6. ' u' → logprob: -11.6571683883667
    7. 'existing' → logprob: -12.0321683883667
    8. ' spots' → logprob: -12.2821683883667
    9. 'None' → logprob: -12.4071683883667
    10. 'exists' → logprob: -13.1571683883667

Token 1097: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6351822018623352
    2. 'is' → logprob: -0.7601822018623352
    3. '[' → logprob: -6.8851823806762695
    4. 'not' → logprob: -7.1351823806762695
    5. '```' → logprob: -8.13518238067627
    6. 'None' → logprob: -8.38518238067627
    7. ' not' → logprob: -8.51018238067627
    8. ' None' → logprob: -11.51018238067627
    9. 'u' → logprob: -12.01018238067627
    10. '=None' → logprob: -13.01018238067627

Token 1098: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07249220460653305
    2. 'None' → logprob: -2.8224921226501465
    3. ' not' → logprob: -4.5724921226501465
    4. ' None' → logprob: -8.947492599487305
    5. '(None' → logprob: -13.447492599487305
    6. 'Not' → logprob: -13.572492599487305
    7. '```' → logprob: -13.822492599487305
    8. 'none' → logprob: -14.072492599487305
    9. '_None' → logprob: -14.822492599487305
    10. '(not' → logprob: -15.072492599487305

Token 1099: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20265258848667145
    2. 'None' → logprob: -1.7026525735855103
    3. ' not' → logprob: -6.952652454376221
    4. ' None' → logprob: -8.202652931213379
    5. 'none' → logprob: -12.827652931213379
    6. 'Not' → logprob: -13.202652931213379
    7. '(None' → logprob: -13.827652931213379
    8. '_None' → logprob: -14.077652931213379
    9. '```' → logprob: -14.327652931213379
    10. '
' → logprob: -14.827652931213379

Token 1100: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25298959016799927
    2. ' else' → logprob: -1.5029895305633545
    3. '               ' → logprob: -7.127989768981934
    4. '[' → logprob: -8.502989768981934
    5. '```' → logprob: -10.502989768981934
    6. '                ' → logprob: -11.752989768981934
    7. '           ' → logprob: -12.502989768981934
    8. '                   ' → logprob: -12.502989768981934
    9. '             ' → logprob: -13.002989768981934
    10. '              ' → logprob: -13.002989768981934

Token 1101: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011796315666288137
    2. ' u' → logprob: -6.7511796951293945
    3. 'l' → logprob: -12.251179695129395
    4. '(u' → logprob: -14.126179695129395
    5. '   ' → logprob: -14.376179695129395
    6. 'None' → logprob: -14.501179695129395
    7. ' spots' → logprob: -14.626179695129395
    8. 'spots' → logprob: -15.001179695129395
    9. '[u' → logprob: -15.001179695129395
    10. '	u' → logprob: -15.126179695129395

Token 1102: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04768509790301323
    2. '[' → logprob: -3.422685146331787
    3. '
' → logprob: -4.422685146331787
    4. '```' → logprob: -6.922685146331787
    5. '           ' → logprob: -8.422684669494629
    6. '<|end|>' → logprob: -8.672684669494629
    7. '                   ' → logprob: -9.172684669494629
    8. '              ' → logprob: -9.297684669494629
    9. '                
' → logprob: -9.422684669494629
    10. '                ' → logprob: -10.672684669494629

Token 1103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3298148512840271
    2. '```' → logprob: -1.4548149108886719
    3. '
' → logprob: -3.704814910888672
    4. '[' → logprob: -4.454814910888672
    5. '                   ' → logprob: -6.329814910888672
    6. '``' → logprob: -6.454814910888672
    7. ',' → logprob: -6.954814910888672
    8. '<|end|>' → logprob: -7.079814910888672
    9. '                
' → logprob: -7.329814910888672
    10. ' =' → logprob: -7.579814910888672

Token 1104: ' remain' (ID: 12760)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4861074686050415
    2. ' diff' → logprob: -2.236107349395752
    3. 'diff' → logprob: -2.236107349395752
    4. ' rt' → logprob: -2.486107349395752
    5. ' current' → logprob: -2.986107349395752
    6. 'rt' → logprob: -4.236107349395752
    7. 'current' → logprob: -4.611107349395752
    8. '```' → logprob: -4.861107349395752
    9. '                   ' → logprob: -6.361107349395752
    10. ' time' → logprob: -7.611107349395752

Token 1105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2507973313331604
    2. '=' → logprob: -2.0007972717285156
    3. '_car' → logprob: -3.3757972717285156
    4. '_time' → logprob: -3.6257972717285156
    5. '[' → logprob: -5.000797271728516
    6. '               ' → logprob: -5.375797271728516
    7. '           ' → logprob: -5.625797271728516
    8. ')' → logprob: -6.625797271728516
    9. '_tokens' → logprob: -6.625797271728516
    10. ' -' → logprob: -7.000797271728516

Token 1106: ' exist' (ID: 4310)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.014184542931616306
    2. ' exist' → logprob: -4.264184474945068
    3. 'existing' → logprob: -12.139184951782227
    4. 'exists' → logprob: -12.514184951782227
    5. 'remain' → logprob: -12.639184951782227
    6. 'ex' → logprob: -13.139184951782227
    7. 'abs' → logprob: -13.514184951782227
    8. 'existent' → logprob: -13.889184951782227
    9. 'exit' → logprob: -14.264184951782227
    10. '.exist' → logprob: -14.389184951782227

Token 1107: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.002858370542526245
    2. 'Car' → logprob: -7.1278581619262695
    3. '_exist' → logprob: -7.3778581619262695
    4. '[' → logprob: -7.5028581619262695
    5. 'exist' → logprob: -8.12785816192627
    6. '<Car' → logprob: -8.25285816192627
    7. '_C' → logprob: -8.87785816192627
    8. 'car' → logprob: -10.12785816192627
    9. 't' → logprob: -10.50285816192627
    10. '_tokens' → logprob: -11.50285816192627

Token 1108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8550976164988242e-05
    2. '```' → logprob: -11.125018119812012
    3. '               ' → logprob: -13.875018119812012
    4. '                   ' → logprob: -14.625018119812012
    5. '_time' → logprob: -15.000018119812012
    6. ')' → logprob: -15.250018119812012
    7. '-' → logprob: -15.250018119812012
    8. '           ' → logprob: -15.375018119812012
    9. 's' → logprob: -15.625018119812012
    10. 'time' → logprob: -15.875018119812012

Token 1109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010893779108300805
    2. '[' → logprob: -6.876089572906494
    3. '```' → logprob: -11.626089096069336
    4. '0' → logprob: -11.876089096069336
    5. '
' → logprob: -11.938589096069336
    6. '(' → logprob: -12.126089096069336
    7. '-' → logprob: -12.188589096069336
    8. ' ' → logprob: -12.376089096069336
    9. '2' → logprob: -13.126089096069336
    10. '   ' → logprob: -13.876089096069336

Token 1110: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49881941080093384
    2. '-current' → logprob: -1.248819351196289
    3. '-' → logprob: -2.248819351196289
    4. '-token' → logprob: -9.623819351196289
    5. ')' → logprob: -9.873819351196289
    6. ']' → logprob: -10.623819351196289
    7. '   ' → logprob: -10.748819351196289
    8. '```' → logprob: -10.998819351196289
    9. ']-' → logprob: -11.123819351196289
    10. '           ' → logprob: -11.123819351196289

Token 1111: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001370320824207738
    2. 'ct' → logprob: -9.125137329101562
    3. ' current' → logprob: -10.625137329101562
    4. 'car' → logprob: -13.625137329101562
    5. '(current' → logprob: -13.875137329101562
    6. '10' → logprob: -14.500137329101562
    7. '0' → logprob: -15.500137329101562
    8. 'time' → logprob: -16.250137329101562
    9. '$current' → logprob: -16.250137329101562
    10. '
' → logprob: -16.375137329101562

Token 1112: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.739826181321405e-05
    2. '_token' → logprob: -10.12504768371582
    3. 'time' → logprob: -12.25004768371582
    4. 'token' → logprob: -13.87504768371582
    5. '_tokens' → logprob: -14.75004768371582
    6. 'Time' → logprob: -15.37504768371582
    7. '_times' → logprob: -15.75004768371582
    8. '```' → logprob: -15.87504768371582
    9. '_' → logprob: -16.00004768371582
    10. '+' → logprob: -16.25004768371582

Token 1113: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19308632612228394
    2. '
' → logprob: -1.9430863857269287
    3. '<|end|>' → logprob: -4.06808614730835
    4. '           ' → logprob: -4.69308614730835
    5. '<|end|>' → logprob: -6.56808614730835
    6. ')' → logprob: -6.69308614730835
    7. '```' → logprob: -7.31808614730835
    8. ')
' → logprob: -8.318086624145508
    9. ',' → logprob: -8.318086624145508
    10. '                
' → logprob: -8.443086624145508

Token 1114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010270876373397186
    2. '```' → logprob: -10.125102996826172
    3. ' if' → logprob: -10.500102996826172
    4. '           ' → logprob: -11.000102996826172
    5. '                   ' → logprob: -12.625102996826172
    6. '              ' → logprob: -12.750102996826172
    7. '>' → logprob: -13.000102996826172
    8. '                ' → logprob: -13.250102996826172
    9. 'if' → logprob: -13.375102996826172
    10. ',' → logprob: -13.875102996826172

Token 1115: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.34633558988571167
    2. '               ' → logprob: -1.9713356494903564
    3. ' diff' → logprob: -2.7213356494903564
    4. 'if' → logprob: -2.8463356494903564
    5. ' if' → logprob: -4.221335411071777
    6. '           ' → logprob: -4.846335411071777
    7. 'car' → logprob: -5.346335411071777
    8. '```' → logprob: -7.471335411071777
    9. ' car' → logprob: -7.846335411071777
    10. 'for' → logprob: -8.346335411071777

Token 1116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12729144096374512
    2. '=' → logprob: -2.127291440963745
    3. '>' → logprob: -9.127291679382324
    4. '>=' → logprob: -9.627291679382324
    5. ')' → logprob: -10.252291679382324
    6. ' >=' → logprob: -10.377291679382324
    7. '           ' → logprob: -10.752291679382324
    8. '_tokens' → logprob: -10.877291679382324
    9. '```' → logprob: -11.252291679382324
    10. 'tokens' → logprob: -11.502291679382324

Token 1117: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.01700698211789131
    2. ' remain' → logprob: -4.142006874084473
    3. 'times' → logprob: -7.392006874084473
    4. 'rem' → logprob: -8.392006874084473
    5. ' times' → logprob: -9.142006874084473
    6. '(rem' → logprob: -12.517006874084473
    7. 'abs' → logprob: -12.892006874084473
    8. 'remaining' → logprob: -13.204506874084473
    9. 'retain' → logprob: -13.704506874084473
    10. 'time' → logprob: -13.892006874084473

Token 1118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11053746938705444
    2. '-' → logprob: -2.360537528991699
    3. '-t' → logprob: -5.735537528991699
    4. ' >=' → logprob: -5.735537528991699
    5. '>=' → logprob: -5.985537528991699
    6. '-times' → logprob: -7.485537528991699
    7. '           ' → logprob: -7.985537528991699
    8. '```' → logprob: -9.8605375289917
    9. '-import' → logprob: -10.1105375289917
    10. '-token' → logprob: -10.1105375289917

Token 1119: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0024950411170721054
    2. '(times' → logprob: -6.127494812011719
    3. ' times' → logprob: -8.377494812011719
    4. 'ct' → logprob: -9.752494812011719
    5. '(ct' → logprob: -11.502494812011719
    6. '(t' → logprob: -12.502494812011719
    7. 'time' → logprob: -13.252494812011719
    8. '(' → logprob: -13.377494812011719
    9. '0' → logprob: -14.252494812011719
    10. 't' → logprob: -14.502494812011719

Token 1120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'car' → logprob: -14.000000953674316
    3. '```' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.125001907348633
    5. '(car' → logprob: -17.875001907348633
    6. '[[' → logprob: -18.625001907348633
    7. '\[' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.750001907348633
    9. 'Car' → logprob: -19.750001907348633
    10. ' car' → logprob: -19.875001907348633

Token 1121: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -9.088346359931165e-07
    2. '(car' → logprob: -14.375000953674316
    3. '[' → logprob: -15.500000953674316
    4. ' car' → logprob: -16.0
    5. '```' → logprob: -18.875
    6. '_car' → logprob: -19.0
    7. '	car' → logprob: -19.75
    8. '
' → logprob: -20.0
    9. 'Car' → logprob: -20.0
    10. 'user' → logprob: -20.5

Token 1122: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0036012595519423485
    2. '[' → logprob: -6.62860107421875
    3. '_car' → logprob: -6.75360107421875
    4. 'car' → logprob: -6.87860107421875
    5. '```' → logprob: -10.75360107421875
    6. 'Car' → logprob: -11.37860107421875
    7. '           ' → logprob: -11.37860107421875
    8. '(car' → logprob: -11.50360107421875
    9. 'id' → logprob: -11.87860107421875
    10. ']' → logprob: -12.25360107421875

Token 1123: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1495785117149353
    2. '           ' → logprob: -2.64957857131958
    3. ']' → logprob: -3.14957857131958
    4. '[' → logprob: -4.02457857131958
    5. ')
' → logprob: -5.27457857131958
    6. '               ' → logprob: -7.39957857131958
    7. ')' → logprob: -7.52457857131958
    8. '])
' → logprob: -8.399578094482422
    9. '       ' → logprob: -8.649578094482422
    10. ')]' → logprob: -8.774578094482422

Token 1124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4004078805446625
    2. '           ' → logprob: -1.2754079103469849
    3. ')' → logprob: -3.6504077911376953
    4. ')
' → logprob: -4.775407791137695
    5. '```' → logprob: -5.400407791137695
    6. '[' → logprob: -5.900407791137695
    7. '                   ' → logprob: -6.400407791137695
    8. '<|end|>' → logprob: -6.650407791137695
    9. '
' → logprob: -7.650407791137695
    10. '(' → logprob: -7.650407791137695

Token 1125: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6350820660591125
    2. 'if' (adapté à ' if') → logprob: -1.1350820064544678
    3. '           ' → logprob: -2.3850820064544678
    4. ' if' → logprob: -2.8850820064544678
    5. '```' → logprob: -7.885082244873047
    6. 'for' → logprob: -9.385082244873047
    7. ')' → logprob: -9.760082244873047
    8. '+' → logprob: -9.885082244873047
    9. ',' → logprob: -10.135082244873047
    10. 'If' → logprob: -10.635082244873047

Token 1126: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.23373547196388245
    2. ' remain' → logprob: -1.60873544216156
    3. 'diff' → logprob: -4.98373556137085
    4. ' diff' → logprob: -6.73373556137085
    5. 'rem' → logprob: -8.608735084533691
    6. ' rem' → logprob: -10.608735084533691
    7. '0' → logprob: -11.233735084533691
    8. '   ' → logprob: -12.108735084533691
    9. 'Remain' → logprob: -12.483735084533691
    10. ' ' → logprob: -13.296235084533691

Token 1127: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5759887099266052
    2. '>=' → logprob: -0.8259887099266052
    3. '>' → logprob: -10.57598876953125
    4. ']>=' → logprob: -12.32598876953125
    5. ')>=' → logprob: -12.70098876953125
    6. '```' → logprob: -12.95098876953125
    7. '==' → logprob: -13.20098876953125
    8. ' ' → logprob: -13.20098876953125
    9. '   ' → logprob: -13.32598876953125
    10. ' >' → logprob: -13.95098876953125

Token 1128: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.3181886672973633
    2. ' times' → logprob: -1.3181886672973633
    3. '0' → logprob: -5.318188667297363
    4. ' ' → logprob: -12.818188667297363
    5. '           ' → logprob: -12.818188667297363
    6. '(times' → logprob: -13.443188667297363
    7. '               ' → logprob: -13.818188667297363
    8. '   ' → logprob: -13.943188667297363
    9. '       ' → logprob: -14.068188667297363
    10. '
' → logprob: -14.693188667297363

Token 1129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. '           ' → logprob: -12.875003814697266
    3. '```' → logprob: -14.375003814697266
    4. '       ' → logprob: -15.000003814697266
    5. '               ' → logprob: -15.125003814697266
    6. 'car' → logprob: -16.125003814697266
    7. '[
' → logprob: -16.250003814697266
    8. ' [' → logprob: -16.500003814697266
    9. '
' → logprob: -16.750003814697266
    10. '                   ' → logprob: -17.000003814697266

Token 1130: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.011066801846027374
    2. '[' → logprob: -4.511066913604736
    3. '(car' → logprob: -11.386066436767578
    4. '0' → logprob: -12.636066436767578
    5. ' car' → logprob: -12.886066436767578
    6. '```' → logprob: -13.886066436767578
    7. '	car' → logprob: -15.136066436767578
    8. '
' → logprob: -15.636066436767578
    9. '_car' → logprob: -16.511066436767578
    10. '[
' → logprob: -16.636066436767578

Token 1131: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.23229266703128815
    2. '[' → logprob: -1.607292652130127
    3. 'car' → logprob: -5.107292652130127
    4. '_car' → logprob: -7.607292652130127
    5. 'id' → logprob: -9.732293128967285
    6. '[user' → logprob: -9.857293128967285
    7. '	car' → logprob: -10.107293128967285
    8. ' car' → logprob: -10.607293128967285
    9. '(car' → logprob: -10.732293128967285
    10. '[id' → logprob: -10.857293128967285

Token 1132: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.24460551142692566
    2. ':
' → logprob: -1.744605541229248
    3. '):
' → logprob: -3.619605541229248
    4. ':' → logprob: -4.744605541229248
    5. '           ' → logprob: -5.619605541229248
    6. ']:' → logprob: -6.494605541229248
    7. '               ' → logprob: -6.744605541229248
    8. '']:
' → logprob: -9.24460506439209
    9. '():
' → logprob: -9.49460506439209
    10. '                   ' → logprob: -10.11960506439209

Token 1133: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03697042539715767
    2. '               ' → logprob: -3.411970376968384
    3. '                       ' → logprob: -6.036970615386963
    4. ':
' → logprob: -7.411970615386963
    5. ':' → logprob: -9.036970138549805
    6. ',' → logprob: -10.161970138549805
    7. '           ' → logprob: -10.911970138549805
    8. '                  ' → logprob: -10.911970138549805
    9. '<|end|>' → logprob: -11.161970138549805
    10. '                    ' → logprob: -11.161970138549805

Token 1134: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.13125742971897125
    2. ' less' → logprob: -2.2562575340270996
    3. '(' → logprob: -4.8812575340271
    4. '                   ' → logprob: -5.2562575340271
    5. '                       ' → logprob: -6.3812575340271
    6. '               ' → logprob: -6.5062575340271
    7. '                           ' → logprob: -7.6312575340271
    8. '_less' → logprob: -7.6312575340271
    9. '[' → logprob: -8.131257057189941
    10. ' (' → logprob: -8.381257057189941

Token 1135: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0002659847668837756
    2. '.append' → logprob: -8.375266075134277
    3. '_equ' → logprob: -11.500266075134277
    4. 'equal' → logprob: -12.000266075134277
    5. '.equal' → logprob: -12.625266075134277
    6. '_e' → logprob: -12.625266075134277
    7. '=_' → logprob: -12.750266075134277
    8. '_equals' → logprob: -12.875266075134277
    9. '_EQUAL' → logprob: -13.375266075134277
    10. '_append' → logprob: -13.625266075134277

Token 1136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004080062732100487
    2. '.' → logprob: -5.504080295562744
    3. '           ' → logprob: -14.504079818725586
    4. ' .' → logprob: -14.754079818725586
    5. 'append' → logprob: -14.879079818725586
    6. ').' → logprob: -16.754079818725586
    7. '.push' → logprob: -17.129079818725586
    8. '.app' → logprob: -17.379079818725586
    9. '.setdefault' → logprob: -17.629079818725586
    10. '].' → logprob: -17.754079818725586

Token 1137: '((' (ID: 2054)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.011116202920675278
    2. '((' → logprob: -4.511116027832031
    3. '(' → logprob: -10.011116027832031
    4. '   ' → logprob: -11.386116027832031
    5. ' (' → logprob: -11.511116027832031
    6. '[(' → logprob: -14.011116027832031
    7. '  ' → logprob: -15.011116027832031
    8. 'diff' → logprob: -16.01111602783203
    9. '       ' → logprob: -16.13611602783203
    10. '(dist' → logprob: -16.26111602783203

Token 1138: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06201507896184921
    2. '(diff' → logprob: -2.8120150566101074
    3. ' diff' → logprob: -10.687015533447266
    4. '0' → logprob: -11.062015533447266
    5. '(' → logprob: -12.437015533447266
    6. '	diff' → logprob: -12.937015533447266
    7. ' (' → logprob: -13.687015533447266
    8. '   ' → logprob: -14.687015533447266
    9. 'abs' → logprob: -15.312015533447266
    10. '
' → logprob: -15.812015533447266

Token 1139: ',pos' (ID: 128292)
  Prédit: ',pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',pos' → logprob: -0.00033665422233752906
    2. ',' → logprob: -8.000336647033691
    3. ' ,' → logprob: -14.375336647033691
    4. ',p' → logprob: -14.500336647033691
    5. '[pos' → logprob: -18.000337600708008
    6. ',index' → logprob: -18.375337600708008
    7. ',i' → logprob: -18.500337600708008
    8. 'pos' → logprob: -18.625337600708008
    9. ',key' → logprob: -18.625337600708008
    10. '   ' → logprob: -19.375337600708008

Token 1140: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38689592480659485
    2. '))
' → logprob: -1.1368958950042725
    3. '               ' → logprob: -12.011896133422852
    4. '[' → logprob: -12.261896133422852
    5. '           ' → logprob: -12.636896133422852
    6. ')' → logprob: -12.886896133422852
    7. ',' → logprob: -13.136896133422852
    8. '))
' → logprob: -13.386896133422852
    9. '))}
' → logprob: -13.636896133422852
    10. '))

' → logprob: -14.261896133422852

Token 1141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2518896162509918
    2. '```' → logprob: -1.6268895864486694
    3. '                   ' → logprob: -4.001889705657959
    4. ')' → logprob: -5.501889705657959
    5. '           ' → logprob: -7.001889705657959
    6. 'else' → logprob: -7.126889705657959
    7. '``' → logprob: -7.376889705657959
    8. '                       ' → logprob: -7.376889705657959
    9. '       ' → logprob: -8.3768892288208
    10. '<|end|>' → logprob: -8.3768892288208

Token 1142: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004104877356439829
    2. '           ' → logprob: -6.254105091094971
    3. ')' → logprob: -7.254105091094971
    4. '                   ' → logprob: -7.629105091094971
    5. '[' → logprob: -8.129104614257812
    6. 'else' (adapté à ' else') → logprob: -8.129104614257812
    7. '```' → logprob: -8.754104614257812
    8. ' else' → logprob: -10.504104614257812
    9. '       ' → logprob: -11.004104614257812
    10. '
' → logprob: -11.129104614257812

Token 1143: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35566726326942444
    2. '               ' → logprob: -1.355667233467102
    3. ' less' → logprob: -3.9806673526763916
    4. '                       ' → logprob: -4.9806671142578125
    5. '{
' → logprob: -5.2306671142578125
    6. '(' → logprob: -5.3556671142578125
    7. ':
' → logprob: -6.3556671142578125
    8. 'less' → logprob: -7.1056671142578125
    9. '[' → logprob: -7.4806671142578125
    10. ' (' → logprob: -7.8556671142578125

Token 1144: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24386268854141235
    2. '                   ' → logprob: -1.9938626289367676
    3. ' less' → logprob: -2.8688626289367676
    4. 'less' → logprob: -3.9938626289367676
    5. '                       ' → logprob: -5.993862628936768
    6. '```' → logprob: -7.493862628936768
    7. '[' → logprob: -7.743862628936768
    8. '                ' → logprob: -7.743862628936768
    9. ')' → logprob: -8.493863105773926
    10. '           ' → logprob: -8.618863105773926

Token 1145: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.0015098588773980737
    2. ' less' → logprob: -6.501509666442871
    3. '               ' → logprob: -12.251509666442871
    4. '                   ' → logprob: -13.251509666442871
    5. '_less' → logprob: -15.126509666442871
    6. '           ' → logprob: -15.626509666442871
    7. 'diff' → logprob: -15.751509666442871
    8. '.less' → logprob: -16.251510620117188
    9. '                       ' → logprob: -16.501510620117188
    10. '   ' → logprob: -16.751510620117188

Token 1146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00047392549458891153
    2. '.sort' → logprob: -7.750473976135254
    3. 'append' → logprob: -10.250473976135254
    4. '.' → logprob: -12.500473976135254
    5. ' .' → logprob: -13.750473976135254
    6. 'sort' → logprob: -13.875473976135254
    7. '_append' → logprob: -14.125473976135254
    8. '.insert' → logprob: -15.125473976135254
    9. '```' → logprob: -15.250473976135254
    10. '
' → logprob: -15.500473976135254

Token 1147: '((' (ID: 2054)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.2561925947666168
    2. '((' → logprob: -1.5061925649642944
    3. '[(' → logprob: -6.006192684173584
    4. '(' → logprob: -6.381192684173584
    5. '([(' → logprob: -10.631192207336426
    6. '   ' → logprob: -11.381192207336426
    7. '(sorted' → logprob: -11.381192207336426
    8. '```' → logprob: -12.006192207336426
    9. ' (' → logprob: -12.131192207336426
    10. '
' → logprob: -12.131192207336426

Token 1148: 'abs' (ID: 6071)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.02325141802430153
    2. 'abs' → logprob: -3.773251533508301
    3. '(' → logprob: -12.6482515335083
    4. ' abs' → logprob: -13.0232515335083
    5. ' (' → logprob: -14.5232515335083
    6. '(diff' → logprob: -17.023250579833984
    7. '(min' → logprob: -17.273250579833984
    8. '_abs' → logprob: -18.398250579833984
    9. '.abs' → logprob: -19.023250579833984
    10. '0' → logprob: -19.398250579833984

Token 1149: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.00015860427811276168
    2. 'diff' → logprob: -8.750158309936523
    3. '	diff' → logprob: -16.500158309936523
    4. '(' → logprob: -16.750158309936523
    5. ' diff' → logprob: -19.000158309936523
    6. '(dist' → logprob: -19.250158309936523
    7. '_diff' → logprob: -19.875158309936523
    8. '(
' → logprob: -20.125158309936523
    9. '0' → logprob: -20.125158309936523
    10. '.diff' → logprob: -20.500158309936523

Token 1150: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0033318297937512398
    2. '[' → logprob: -5.753331661224365
    3. '[pos' → logprob: -10.003332138061523
    4. ')[' → logprob: -10.628332138061523
    5. '(pos' → logprob: -10.628332138061523
    6. ')' → logprob: -11.128332138061523
    7. ',' → logprob: -12.003332138061523
    8. '0' → logprob: -12.128332138061523
    9. '           ' → logprob: -12.503332138061523
    10. '   ' → logprob: -12.628332138061523

Token 1151: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.941161776310764e-05
    2. '(pos' → logprob: -10.250039100646973
    3. '0' → logprob: -13.250039100646973
    4. 'spot' → logprob: -13.375039100646973
    5. '[pos' → logprob: -14.500039100646973
    6. ' pos' → logprob: -16.62504005432129
    7. '(' → logprob: -17.87504005432129
    8. '	pos' → logprob: -18.00004005432129
    9. ',pos' → logprob: -18.50004005432129
    10. 'spots' → logprob: -18.75004005432129

Token 1152: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062406353652477264
    2. ')' → logprob: -2.812406301498413
    3. '))
' → logprob: -7.812406539916992
    4. '])' → logprob: -11.187406539916992
    5. ')))' → logprob: -11.812406539916992
    6. ')]' → logprob: -12.312406539916992
    7. ')}' → logprob: -13.187406539916992
    8. ')
' → logprob: -13.562406539916992
    9. '               ' → logprob: -13.562406539916992
    10. '           ' → logprob: -13.687406539916992

Token 1153: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010427243076264858
    2. '           ' → logprob: -5.135427474975586
    3. '```' → logprob: -5.885427474975586
    4. '                   ' → logprob: -7.260427474975586
    5. '<|end|>' → logprob: -8.135427474975586
    6. ')' → logprob: -8.510427474975586
    7. '       ' → logprob: -9.385427474975586
    8. ',' → logprob: -9.760427474975586
    9. '[' → logprob: -9.885427474975586
    10. '``' → logprob: -9.885427474975586

Token 1154: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5409685969352722
    2. '               ' → logprob: -0.9159685969352722
    3. '       ' → logprob: -5.540968418121338
    4. '```' → logprob: -5.540968418121338
    5. ' if' → logprob: -5.665968418121338
    6. '[' → logprob: -5.915968418121338
    7. '<|end|>' → logprob: -7.165968418121338
    8. ')' → logprob: -7.165968418121338
    9. '                   ' → logprob: -7.790968418121338
    10. ' spots' → logprob: -7.915968418121338

Token 1155: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.16024382412433624
    2. ' less' → logprob: -1.9102438688278198
    3. 'len' → logprob: -10.91024398803711
    4. '   ' → logprob: -14.66024398803711
    5. ' len' → logprob: -14.66024398803711
    6. '_less' → logprob: -15.91024398803711
    7. '           ' → logprob: -16.03524398803711
    8. '       ' → logprob: -16.78524398803711
    9. 'Less' → logprob: -16.78524398803711
    10. '0' → logprob: -17.28524398803711

Token 1156: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -6.992775888647884e-05
    2. 'equal' → logprob: -10.500069618225098
    3. '_EQUAL' → logprob: -10.500069618225098
    4. 'Equal' → logprob: -12.625069618225098
    5. '.equal' → logprob: -12.750069618225098
    6. '=' → logprob: -12.875069618225098
    7. '=_' → logprob: -13.375069618225098
    8. '_equals' → logprob: -13.625069618225098
    9. ':' → logprob: -13.875069618225098
    10. '_equ' → logprob: -14.500069618225098

Token 1157: ':
' (ID: 734)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -8.304016228066757e-05
    2. '.' → logprob: -9.750082969665527
    3. ':' → logprob: -11.375082969665527
    4. ':
' → logprob: -12.000082969665527
    5. 'sort' → logprob: -13.000082969665527
    6. '.setdefault' → logprob: -13.375082969665527
    7. '.sorted' → logprob: -13.625082969665527
    8. ' sort' → logprob: -14.500082969665527
    9. '.append' → logprob: -15.125082969665527
    10. '_sorted' → logprob: -15.250082969665527

Token 1158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029772259294986725
    2. '.sort' → logprob: -7.00297737121582
    3. '```' → logprob: -7.12797737121582
    4. '                       ' → logprob: -7.50297737121582
    5. '                   ' → logprob: -8.37797737121582
    6. '[' → logprob: -8.50297737121582
    7. '.' → logprob: -9.50297737121582
    8. '           ' → logprob: -9.75297737121582
    9. '``' → logprob: -10.37797737121582
    10. '                
' → logprob: -11.00297737121582

Token 1159: ' less' (ID: 3760)
  Prédit: ' less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.2523442208766937
    2. 'less' (adapté à ' less') → logprob: -1.5023442506790161
    3. '               ' → logprob: -8.002344131469727
    4. ' spots' → logprob: -10.377344131469727
    5. '.less' → logprob: -11.377344131469727
    6. '_less' → logprob: -11.502344131469727
    7. ' spot' → logprob: -11.877344131469727
    8. '```' → logprob: -12.252344131469727
    9. 'spot' → logprob: -12.627344131469727
    10. 'spots' → logprob: -12.877344131469727

Token 1160: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.002764698350802064
    2. '.sort' → logprob: -6.002764701843262
    3. '.equal' → logprob: -8.877764701843262
    4. 'sort' → logprob: -10.002764701843262
    5. '_equ' → logprob: -10.252764701843262
    6. 'equal' → logprob: -10.502764701843262
    7. '_EQUAL' → logprob: -10.627764701843262
    8. '_sorted' → logprob: -12.252764701843262
    9. 'Equal' → logprob: -12.502764701843262
    10. '.append' → logprob: -13.002764701843262

Token 1161: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00013262155698612332
    2. '.' → logprob: -9.00013256072998
    3. 'sort' → logprob: -12.00013256072998
    4. ' .' → logprob: -13.50013256072998
    5. '.append' → logprob: -14.12513256072998
    6. '[' → logprob: -15.12513256072998
    7. '.setdefault' → logprob: -15.62513256072998
    8. ' sort' → logprob: -16.000133514404297
    9. '```' → logprob: -17.125133514404297
    10. '.
' → logprob: -17.250133514404297

Token 1162: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0002967320033349097
    2. 'key' → logprob: -8.625296592712402
    3. ',key' → logprob: -9.375296592712402
    4. '```' → logprob: -11.500296592712402
    5. '               ' → logprob: -11.875296592712402
    6. '[key' → logprob: -11.875296592712402
    7. '           ' → logprob: -12.250296592712402
    8. '(lambda' → logprob: -14.250296592712402
    9. ' key' → logprob: -14.375296592712402
    10. '                   ' → logprob: -14.875296592712402

Token 1163: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011293967254459858
    2. '(lambda' → logprob: -4.886293888092041
    3. 'lambda' → logprob: -6.261293888092041
    4. '(key' → logprob: -6.636293888092041
    5. ',key' → logprob: -8.3862943649292
    6. 'key' → logprob: -9.1362943649292
    7. '                   ' → logprob: -9.7612943649292
    8. '=' → logprob: -10.8862943649292
    9. ',' → logprob: -11.5112943649292
    10. '               ' → logprob: -11.6362943649292

Token 1164: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5896244049072266
    2. 'lambda' → logprob: -0.8396244049072266
    3. ' x' → logprob: -4.714624404907227
    4. '=lambda' → logprob: -5.714624404907227
    5. ' lambda' → logprob: -6.714624404907227
    6. '(lambda' → logprob: -10.214624404907227
    7. '0' → logprob: -10.214624404907227
    8. '   ' → logprob: -11.089624404907227
    9. '```' → logprob: -11.714624404907227
    10. '1' → logprob: -12.839624404907227

Token 1165: ':(' (ID: 7990)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.04308608919382095
    2. ':' → logprob: -4.293086051940918
    3. ':x' → logprob: -4.668086051940918
    4. '(x' → logprob: -4.793086051940918
    5. '(lambda' → logprob: -5.168086051940918
    6. ':(' → logprob: -6.043086051940918
    7. '=(' → logprob: -6.918086051940918
    8. '=x' → logprob: -7.293086051940918
    9. '):(' → logprob: -8.293086051940918
    10. '[' → logprob: -8.543086051940918

Token 1166: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.676981345459353e-06
    2. '0' → logprob: -12.250005722045898
    3. ' x' → logprob: -14.125005722045898
    4. '(x' → logprob: -16.1250057220459
    5. 'lambda' → logprob: -21.1250057220459
    6. ')x' → logprob: -21.3750057220459
    7. '1' → logprob: -22.7500057220459
    8. '	x' → logprob: -22.8750057220459
    9. '   ' → logprob: -23.0000057220459
    10. '
' → logprob: -23.2500057220459

Token 1167: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002966127940453589
    2. '0' → logprob: -8.125296592712402
    3. '(' → logprob: -16.25029754638672
    4. '1' → logprob: -16.37529754638672
    5. ' ' → logprob: -16.50029754638672
    6. '[
' → logprob: -16.62529754638672
    7. ',' → logprob: -16.75029754638672
    8. '][' → logprob: -17.25029754638672
    9. '.' → logprob: -17.62529754638672
    10. '
' → logprob: -17.75029754638672

Token 1168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '
' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '1' → logprob: -18.500001907348633
    7. '```' → logprob: -18.750001907348633
    8. '۰' → logprob: -19.812501907348633
    9. ',' → logprob: -19.937501907348633
    10. '(' → logprob: -20.562501907348633

Token 1169: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1289774775505066
    2. '[' → logprob: -2.3789775371551514
    3. ',x' → logprob: -4.253977298736572
    4. ',[' → logprob: -4.378977298736572
    5. ',pos' → logprob: -7.378977298736572
    6. ',val' → logprob: -8.50397777557373
    7. ',len' → logprob: -8.62897777557373
    8. ',(' → logprob: -9.37897777557373
    9. ',value' → logprob: -10.00397777557373
    10. ',p' → logprob: -10.37897777557373

Token 1170: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.750000953674316
    3. '0' → logprob: -16.125
    4. '
' → logprob: -19.0
    5. '1' → logprob: -20.125
    6. '(x' → logprob: -21.125
    7. '2' → logprob: -21.875
    8. ')x' → logprob: -22.625
    9. '```' → logprob: -22.75
    10. '"x' → logprob: -23.375

Token 1171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026055607944726944
    2. ',' → logprob: -3.7760555744171143
    3. '1' → logprob: -5.901055812835693
    4. ',[' → logprob: -10.026055335998535
    5. '][' → logprob: -11.776055335998535
    6. '```' → logprob: -12.276055335998535
    7. '0' → logprob: -12.526055335998535
    8. '],' → logprob: -13.776055335998535
    9. '),' → logprob: -13.776055335998535
    10. '{' → logprob: -14.151055335998535

Token 1172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.875
    3. ' ' → logprob: -16.375
    4. '[' → logprob: -16.5
    5. '```' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. '-' → logprob: -18.5
    8. ',' → logprob: -19.125
    9. '
' → logprob: -19.5
    10. '][' → logprob: -20.375

Token 1173: ']))
' (ID: 24801)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.002854328602552414
    2. ']))
' → logprob: -6.502854347229004
    3. '))' → logprob: -7.127854347229004
    4. '])
' → logprob: -7.877854347229004
    5. '               ' → logprob: -9.127854347229004
    6. ']))' → logprob: -10.877854347229004
    7. '[' → logprob: -11.502854347229004
    8. '                   ' → logprob: -11.627854347229004
    9. '           ' → logprob: -11.877854347229004
    10. '))
' → logprob: -12.127854347229004

Token 1174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011626080609858036
    2. '```' → logprob: -5.011626243591309
    3. '                   ' → logprob: -5.511626243591309
    4. 'spot' → logprob: -7.886626243591309
    5. '``' → logprob: -8.386626243591309
    6. '[' → logprob: -9.261626243591309
    7. '                       ' → logprob: -10.011626243591309
    8. '           ' → logprob: -10.386626243591309
    9. ' spot' → logprob: -10.511626243591309
    10. '{
' → logprob: -11.511626243591309

Token 1175: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.05000365525484085
    2. '               ' → logprob: -3.05000376701355
    3. ' spot' → logprob: -6.675003528594971
    4. '```' → logprob: -9.675004005432129
    5. '                   ' → logprob: -9.800004005432129
    6. '[' → logprob: -11.425004005432129
    7. '           ' → logprob: -12.175004005432129
    8. '{
' → logprob: -12.800004005432129
    9. '``' → logprob: -12.925004005432129
    10. '                       ' → logprob: -13.175004005432129

Token 1176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10283955931663513
    2. '=' → logprob: -2.352839469909668
    3. '[' → logprob: -5.977839469909668
    4. ')' → logprob: -10.352839469909668
    5. '=[' → logprob: -10.977839469909668
    6. '```' → logprob: -11.477839469909668
    7. ')[' → logprob: -11.602839469909668
    8. ']' → logprob: -11.977839469909668
    9. '][' → logprob: -12.352839469909668
    10. '           ' → logprob: -12.727839469909668

Token 1177: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.01814994215965271
    2. ' less' → logprob: -4.0181498527526855
    3. '_less' → logprob: -16.893150329589844
    4. '-less' → logprob: -18.143150329589844
    5. 'Less' → logprob: -18.268150329589844
    6. '[' → logprob: -18.768150329589844
    7. '   ' → logprob: -19.143150329589844
    8. 'least' → logprob: -19.518150329589844
    9. '0' → logprob: -19.768150329589844
    10. '.less' → logprob: -20.018150329589844

Token 1178: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0017965621082112193
    2. 'equal' → logprob: -6.501796722412109
    3. '[' → logprob: -8.25179672241211
    4. '_equ' → logprob: -10.75179672241211
    5. '_EQUAL' → logprob: -12.75179672241211
    6. '=' → logprob: -13.25179672241211
    7. '_equals' → logprob: -13.62679672241211
    8. '_eq' → logprob: -13.75179672241211
    9. 'Equal' → logprob: -14.12679672241211
    10. '.equal' → logprob: -14.37679672241211

Token 1179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. '```' → logprob: -13.375004768371582
    3. '0' → logprob: -13.500004768371582
    4. '][' → logprob: -13.875004768371582
    5. ')[' → logprob: -15.500004768371582
    6. ' [' → logprob: -16.375003814697266
    7. '
' → logprob: -16.750003814697266
    8. '           ' → logprob: -17.125003814697266
    9. 'def' → logprob: -17.250003814697266
    10. '`' → logprob: -17.875003814697266

Token 1180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929274018853903
    2. '[' → logprob: -5.130929470062256
    3. ' ' → logprob: -15.505928993225098
    4. '```' → logprob: -15.755928993225098
    5. '][' → logprob: -16.630929946899414
    6. '(' → logprob: -16.755929946899414
    7. '
' → logprob: -16.880929946899414
    8. ' [' → logprob: -17.880929946899414
    9. '#' → logprob: -18.005929946899414
    10. '[
' → logprob: -18.130929946899414

Token 1181: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028199704829603434
    2. '[' → logprob: -5.877820014953613
    3. ')[' → logprob: -12.252820014953613
    4. ' ][' → logprob: -12.377820014953613
    5. ']' → logprob: -13.752820014953613
    6. '```' → logprob: -13.752820014953613
    7. '>[' → logprob: -14.377820014953613
    8. '   ' → logprob: -14.627820014953613
    9. '0' → logprob: -14.627820014953613
    10. '#' → logprob: -15.252820014953613

Token 1182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -12.12501335144043
    3. '0' → logprob: -12.50001335144043
    4. '```' → logprob: -13.75001335144043
    5. '
' → logprob: -13.87501335144043
    6. '(' → logprob: -14.93751335144043
    7. '][' → logprob: -15.06251335144043
    8. ' ' → logprob: -15.37501335144043
    9. '   ' → logprob: -15.56251335144043
    10. 'pos' → logprob: -15.75001335144043

Token 1183: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03069298528134823
    2. ']' → logprob: -4.655693054199219
    3. ']
' → logprob: -5.030693054199219
    4. ')
' → logprob: -5.655693054199219
    5. ')' → logprob: -6.155693054199219
    6. ' spots' → logprob: -6.280693054199219
    7. '
' → logprob: -6.405693054199219
    8. '           ' → logprob: -6.905693054199219
    9. '[' → logprob: -6.905693054199219
    10. 'spots' → logprob: -7.030693054199219

Token 1184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6018186211585999
    2. '[' → logprob: -1.851818561553955
    3. '```' → logprob: -2.101818561553955
    4. 'spots' → logprob: -2.976818561553955
    5. '                   ' → logprob: -3.726818561553955
    6. ')
' → logprob: -3.851818561553955
    7. '
' → logprob: -4.101818561553955
    8. ' spots' → logprob: -4.101818561553955
    9. '                       ' → logprob: -4.351818561553955
    10. '``' → logprob: -4.726818561553955

Token 1185: ' spots' (ID: 25522)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3154720664024353
    2. 'spots' (adapté à ' spots') → logprob: -1.56547212600708
    3. ' spots' → logprob: -2.81547212600708
    4. '```' → logprob: -7.44047212600708
    5. '                   ' → logprob: -7.94047212600708
    6. '                       ' → logprob: -8.315471649169922
    7. '[' → logprob: -8.815471649169922
    8. '``' → logprob: -9.315471649169922
    9. '           ' → logprob: -9.815471649169922
    10. '
' → logprob: -9.940471649169922

Token 1186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8444881536415778e-05
    2. '][' → logprob: -11.125028610229492
    3. '               ' → logprob: -12.750028610229492
    4. '[pos' → logprob: -12.875028610229492
    5. '           ' → logprob: -13.250028610229492
    6. '```' → logprob: -13.375028610229492
    7. '
' → logprob: -13.750028610229492
    8. 'spot' → logprob: -13.875028610229492
    9. ')[' → logprob: -14.000028610229492
    10. ' [' → logprob: -14.625028610229492

Token 1187: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. ' spot' → logprob: -15.875
    4. 'slot' → logprob: -19.75
    5. 'sport' → logprob: -20.375
    6. '0' → logprob: -22.0
    7. 'spo' → logprob: -22.0
    8. '
' → logprob: -22.5
    9. '[
' → logprob: -22.875
    10. 'pot' → logprob: -23.125

Token 1188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004684307146817446
    2. '[' → logprob: -5.3796844482421875
    3. '           ' → logprob: -10.004684448242188
    4. '               ' → logprob: -12.004684448242188
    5. ' ][' → logprob: -12.754684448242188
    6. ')[' → logprob: -13.379684448242188
    7. '       ' → logprob: -13.379684448242188
    8. ']' → logprob: -13.379684448242188
    9. ']][' → logprob: -13.629684448242188
    10. '```' → logprob: -14.379684448242188

Token 1189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001963009126484394
    2. '[' → logprob: -6.376963138580322
    3. '0' → logprob: -8.626962661743164
    4. '][' → logprob: -10.001962661743164
    5. 'spot' → logprob: -11.751962661743164
    6. '
' → logprob: -12.126962661743164
    7. ' [' → logprob: -12.126962661743164
    8. '-' → logprob: -12.626962661743164
    9. '```' → logprob: -13.001962661743164
    10. '   ' → logprob: -13.251962661743164

Token 1190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030210569500923157
    2. ']=' → logprob: -4.030210494995117
    3. '=' → logprob: -4.530210494995117
    4. ' =' → logprob: -7.030210494995117
    5. ')' → logprob: -9.280210494995117
    6. '<|end|>' → logprob: -9.530210494995117
    7. ']=(' → logprob: -9.780210494995117
    8. '[' → logprob: -10.155210494995117
    9. ' ]' → logprob: -10.655210494995117
    10. '][' → logprob: -11.155210494995117

Token 1191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474477618932724
    2. ' =' → logprob: -0.9744776487350464
    3. ']' → logprob: -8.599477767944336
    4. ']=' → logprob: -9.099477767944336
    5. ')' → logprob: -9.474477767944336
    6. '[' → logprob: -11.349477767944336
    7. ')=' → logprob: -11.974477767944336
    8. '=(' → logprob: -12.849477767944336
    9. '```' → logprob: -13.224477767944336
    10. ',' → logprob: -13.724477767944336

Token 1192: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.004099177662283182
    2. ' (' → logprob: -5.504099369049072
    3. '   ' → logprob: -11.754098892211914
    4. '(current' → logprob: -12.254098892211914
    5. '(None' → logprob: -13.004098892211914
    6. '(Car' → logprob: -13.379098892211914
    7. '(' → logprob: -13.629098892211914
    8. ' ' → logprob: -14.129098892211914
    9. '(vehicle' → logprob: -14.254098892211914
    10. '  ' → logprob: -14.754098892211914

Token 1193: 'car' (ID: 6830)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.001629717298783362
    2. 'car' → logprob: -6.501629829406738
    3. ' (' → logprob: -9.001629829406738
    4. '   ' → logprob: -13.751629829406738
    5. '(Car' → logprob: -14.001629829406738
    6. '(c' → logprob: -14.251629829406738
    7. '(' → logprob: -14.501629829406738
    8. '((' → logprob: -15.376629829406738
    9. '	car' → logprob: -15.376629829406738
    10. ' car' → logprob: -15.876629829406738

Token 1194: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0006056951242499053
    2. 'id' → logprob: -7.500605583190918
    3. 'car' → logprob: -10.250605583190918
    4. '_car' → logprob: -11.125605583190918
    5. '_idx' → logprob: -13.875605583190918
    6. '+' → logprob: -15.000605583190918
    7. 'Car' → logprob: -15.375605583190918
    8. '[' → logprob: -15.625605583190918
    9. 'Id' → logprob: -15.750605583190918
    10. '```' → logprob: -15.750605583190918

Token 1195: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011045700375689194
    2. ',' → logprob: -9.500110626220703
    3. ' +' → logprob: -10.875110626220703
    4. '[' → logprob: -12.000110626220703
    5. ')+' → logprob: -12.375110626220703
    6. '+,' → logprob: -13.250110626220703
    7. ')' → logprob: -13.375110626220703
    8. '),' → logprob: -14.000110626220703
    9. ']+' → logprob: -15.125110626220703
    10. '+
' → logprob: -15.125110626220703

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.875005722045898
    3. '+' → logprob: -13.000005722045898
    4. '2' → logprob: -14.125005722045898
    5. '```' → logprob: -15.000005722045898
    6. '0' → logprob: -16.8750057220459
    7. '
' → logprob: -17.2500057220459
    8. '``' → logprob: -18.2500057220459
    9. '`' → logprob: -18.5000057220459
    10. '   ' → logprob: -19.0625057220459

Token 1197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ' ,' → logprob: -11.750019073486328
    3. ',t' → logprob: -12.000019073486328
    4. ',time' → logprob: -13.375019073486328
    5. '),' → logprob: -14.625019073486328
    6. ',c' → logprob: -14.875019073486328
    7. ',
' → logprob: -15.500019073486328
    8. '           ' → logprob: -15.625019073486328
    9. ',(' → logprob: -15.625019073486328
    10. ')' → logprob: -15.750019073486328

Token 1198: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.07139375060796738
    2. ' ct' → logprob: -2.6963937282562256
    3. '(ct' → logprob: -7.196393966674805
    4. 'current' → logprob: -7.946393966674805
    5. '(' → logprob: -8.821393966674805
    6. ' current' → logprob: -9.446393966674805
    7. 'park' → logprob: -10.196393966674805
    8. ' (' → logprob: -10.696393966674805
    9. ')' → logprob: -11.446393966674805
    10. 'times' → logprob: -11.571393966674805

Token 1199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017298025777563453
    2. '<|end|>' → logprob: -6.501729965209961
    3. ')return' → logprob: -9.126729965209961
    4. ')
' → logprob: -9.876729965209961
    5. '               ' → logprob: -10.626729965209961
    6. '<|end|>' → logprob: -11.501729965209961
    7. '[' → logprob: -11.751729965209961
    8. ']' → logprob: -12.501729965209961
    9. '           ' → logprob: -12.751729965209961
    10. '```' → logprob: -13.001729965209961

Token 1200: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7173638343811035
    2. '<|end|>' → logprob: -1.3423638343811035
    3. ')' → logprob: -1.7173638343811035
    4. '
' → logprob: -3.4673638343811035
    5. '           ' → logprob: -4.4673638343811035
    6. '```' → logprob: -5.0923638343811035
    7. ')return' → logprob: -5.2173638343811035
    8. '                   ' → logprob: -5.8423638343811035
    9. '       ' → logprob: -5.9673638343811035
    10. ')
' → logprob: -6.0923638343811035

Token 1201: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016429394483566284
    2. '
' → logprob: -5.266429424285889
    3. '                   ' → logprob: -5.516429424285889
    4. 'return' (adapté à ' return') → logprob: -5.641429424285889
    5. ' return' → logprob: -6.266429424285889
    6. '           ' → logprob: -7.266429424285889
    7. '                       ' → logprob: -8.01642894744873
    8. '```' → logprob: -8.51642894744873
    9. '<|end|>' → logprob: -9.39142894744873
    10. '       ' → logprob: -9.76642894744873

Token 1202: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.000158842682139948
    2. ' True' → logprob: -8.75015926361084
    3. 'False' → logprob: -15.00015926361084
    4. '(True' → logprob: -17.750158309936523
    5. 'spot' → logprob: -18.250158309936523
    6. '```' → logprob: -19.750158309936523
    7. '=True' → logprob: -20.375158309936523
    8. 'Spot' → logprob: -21.625158309936523
    9. 'spots' → logprob: -21.625158309936523
    10. 'Yes' → logprob: -22.000158309936523

Token 1203: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5070052146911621
    2. '
' → logprob: -2.132005214691162
    3. '<|end|>' → logprob: -2.132005214691162
    4. '       ' → logprob: -2.257005214691162
    5. '\n' → logprob: -3.757005214691162
    6. '            
' → logprob: -5.007005214691162
    7. '               ' → logprob: -5.132005214691162
    8. '```' → logprob: -5.257005214691162
    9. '        
' → logprob: -5.882005214691162
    10. '   ' → logprob: -7.007005214691162

Token 1204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9288351535797119
    2. '<|end|>' → logprob: -1.178835153579712
    3. '```' → logprob: -2.303835153579712
    4. ')' → logprob: -2.803835153579712
    5. '\n' → logprob: -2.928835153579712
    6. '           ' → logprob: -3.678835153579712
    7. '   ' → logprob: -4.178834915161133
    8. '
' → logprob: -5.053834915161133
    9. '...' → logprob: -5.178834915161133
    10. '        
' → logprob: -5.428834915161133

Token 1205: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6631923913955688
    2. '           ' → logprob: -0.9131923913955688
    3. '               ' → logprob: -4.163192272186279
    4. '```' → logprob: -4.163192272186279
    5. '            
' → logprob: -4.538192272186279
    6. '#' → logprob: -4.538192272186279
    7. ' spots' → logprob: -5.413192272186279
    8. 'return' → logprob: -5.413192272186279
    9. 'spots' → logprob: -5.538192272186279
    10. 'else' → logprob: -5.663192272186279

Token 1206: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.12693461775779724
    2. ' less' → logprob: -2.12693452835083
    3. 'len' → logprob: -12.251935005187988
    4. ' not' → logprob: -14.751935005187988
    5. 'not' → logprob: -14.751935005187988
    6. ' len' → logprob: -14.876935005187988
    7. 'False' → logprob: -15.501935005187988
    8. '_less' → logprob: -16.001934051513672
    9. 'Less' → logprob: -16.126934051513672
    10. '-less' → logprob: -16.251934051513672

Token 1207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001810960122384131
    2. ':
' → logprob: -6.5018110275268555
    3. '):' → logprob: -8.376811027526855
    4. '.sort' → logprob: -11.126811027526855
    5. '):
' → logprob: -11.251811027526855
    6. '_sorted' → logprob: -11.376811027526855
    7. '_equal' → logprob: -12.126811027526855
    8. '_:' → logprob: -12.126811027526855
    9. ')' → logprob: -12.501811027526855
    10. '.append' → logprob: -13.001811027526855

Token 1208: '               ' (ID: 506)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.6251648664474487
    2. '               ' → logprob: -0.8751648664474487
    3. ' less' → logprob: -3.5001649856567383
    4. '```' → logprob: -4.375164985656738
    5. '           ' → logprob: -6.375164985656738
    6. '_less' → logprob: -6.625164985656738
    7. '[' → logprob: -7.500164985656738
    8. '            ' → logprob: -8.375164985656738
    9. '``' → logprob: -8.375164985656738
    10. '                   ' → logprob: -8.625164985656738

Token 1209: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' (adapté à ' less') → logprob: -0.03805159032344818
    2. ' less' → logprob: -3.2880516052246094
    3. '_less' → logprob: -11.91305160522461
    4. 'Less' → logprob: -14.41305160522461
    5. '.less' → logprob: -14.53805160522461
    6. '[' → logprob: -14.66305160522461
    7. '-less' → logprob: -14.78805160522461
    8. ' menos' → logprob: -14.91305160522461
    9. '```' → logprob: -15.16305160522461
    10. ' moins' → logprob: -15.91305160522461

Token 1210: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0001158211671281606
    2. '.' → logprob: -9.125115394592285
    3. '.append' → logprob: -12.750115394592285
    4. ' .' → logprob: -13.125115394592285
    5. '```' → logprob: -14.250115394592285
    6. 'sort' → logprob: -14.375115394592285
    7. '_sorted' → logprob: -15.500115394592285
    8. '.sorted' → logprob: -15.750115394592285
    9. '[' → logprob: -16.2501163482666
    10. '_sort' → logprob: -16.8751163482666

Token 1211: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0008135587559081614
    2. 'key' → logprob: -7.8758134841918945
    3. '(lambda' → logprob: -7.8758134841918945
    4. '```' → logprob: -10.250813484191895
    5. '[key' → logprob: -11.875813484191895
    6. 'lambda' → logprob: -12.375813484191895
    7. ',key' → logprob: -13.000813484191895
    8. '(' → logprob: -13.000813484191895
    9. ' key' → logprob: -13.875813484191895
    10. '(
' → logprob: -14.000813484191895

Token 1212: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.07300496101379395
    2. 'key' → logprob: -3.573004961013794
    3. 'lambda' → logprob: -3.948004961013794
    4. '(key' → logprob: -4.073004722595215
    5. '(lambda' → logprob: -5.448004722595215
    6. '=' → logprob: -7.573004722595215
    7. '```' → logprob: -7.573004722595215
    8. ' key' → logprob: -8.448004722595215
    9. '           ' → logprob: -8.948004722595215
    10. ',key' → logprob: -9.323004722595215

Token 1213: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0009556477889418602
    2. 'key' → logprob: -7.625955581665039
    3. 'x' → logprob: -8.000955581665039
    4. '1' → logprob: -9.875955581665039
    5. ' lambda' → logprob: -10.625955581665039
    6. '0' → logprob: -10.625955581665039
    7. '(lambda' → logprob: -11.000955581665039
    8. '```' → logprob: -11.375955581665039
    9. '=lambda' → logprob: -12.750955581665039
    10. '           ' → logprob: -14.375955581665039

Token 1214: ':(' (ID: 7990)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.05777556076645851
    2. '=(' → logprob: -2.9327754974365234
    3. '(lambda' → logprob: -6.307775497436523
    4. '=' → logprob: -7.432775497436523
    5. '(x' → logprob: -8.557775497436523
    6. '=x' → logprob: -9.432775497436523
    7. 'lambda' → logprob: -10.057775497436523
    8. ':(' → logprob: -10.182775497436523
    9. ':' → logprob: -10.682775497436523
    10. '==(' → logprob: -10.932775497436523

Token 1215: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007651951164007187
    2. '0' → logprob: -7.250765323638916
    3. 'lambda' → logprob: -10.250764846801758
    4. '(x' → logprob: -11.000764846801758
    5. '1' → logprob: -13.125764846801758
    6. '(lambda' → logprob: -14.250764846801758
    7. ' x' → logprob: -15.125764846801758
    8. '(' → logprob: -16.875764846801758
    9. ')x' → logprob: -16.875764846801758
    10. '```' → logprob: -16.875764846801758

Token 1216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019587287679314613
    2. '0' → logprob: -6.251958847045898
    3. '(' → logprob: -10.501958847045898
    4. '```' → logprob: -13.876958847045898
    5. '1' → logprob: -14.251958847045898
    6. '{' → logprob: -15.376958847045898
    7. '[
' → logprob: -15.626958847045898
    8. ':' → logprob: -16.0019588470459
    9. '
' → logprob: -16.6269588470459
    10. '.' → logprob: -16.6269588470459

Token 1217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -11.250024795532227
    3. '1' → logprob: -11.500024795532227
    4. '(' → logprob: -14.500024795532227
    5. '
' → logprob: -14.625024795532227
    6. ' ' → logprob: -15.000024795532227
    7. '```' → logprob: -15.000024795532227
    8. '{' → logprob: -15.125024795532227
    9. '   ' → logprob: -17.187524795532227
    10. '``' → logprob: -17.812524795532227

Token 1218: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5143311619758606
    2. ',[' → logprob: -2.014331102371216
    3. ',x' → logprob: -2.264331102371216
    4. '[' → logprob: -2.264331102371216
    5. '][' → logprob: -3.264331102371216
    6. '],[' → logprob: -4.514331340789795
    7. ',len' → logprob: -5.139331340789795
    8. ',(' → logprob: -7.264331340789795
    9. ',
' → logprob: -7.389331340789795
    10. ',pos' → logprob: -7.389331340789795

Token 1219: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.080963092041202e-06
    2. '0' → logprob: -12.250004768371582
    3. ' x' → logprob: -16.5000057220459
    4. 'lambda' → logprob: -17.2500057220459
    5. '(x' → logprob: -18.1250057220459
    6. '```' → logprob: -18.5000057220459
    7. '<|end|>' → logprob: -18.6250057220459
    8. '$x' → logprob: -19.0000057220459
    9. '"x' → logprob: -19.1250057220459
    10. '1' → logprob: -19.5000057220459

Token 1220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004675761330872774
    2. '1' → logprob: -5.37967586517334
    3. ',' → logprob: -9.87967586517334
    4. '][' → logprob: -13.50467586517334
    5. '{' → logprob: -14.12967586517334
    6. ',[' → logprob: -15.00467586517334
    7. '```' → logprob: -15.25467586517334
    8. '[
' → logprob: -15.37967586517334
    9. '-' → logprob: -15.50467586517334
    10. '=' → logprob: -15.50467586517334

Token 1221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.375000953674316
    3. '[' → logprob: -16.0
    4. '```' → logprob: -16.75
    5. '
' → logprob: -17.25
    6. '{' → logprob: -17.625
    7. '-' → logprob: -18.0
    8. '``' → logprob: -18.375
    9. '(' → logprob: -19.1875
    10. '۱' → logprob: -19.25

Token 1222: ']))
' (ID: 24801)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9151355028152466
    2. '])
' → logprob: -1.2901355028152466
    3. '])[' → logprob: -1.7901355028152466
    4. '[' → logprob: -2.665135383605957
    5. ')[' → logprob: -3.415135383605957
    6. ')][' → logprob: -3.915135383605957
    7. '))
' → logprob: -4.415135383605957
    8. ']))
' → logprob: -5.040135383605957
    9. '])' → logprob: -5.165135383605957
    10. '))[' → logprob: -5.540135383605957

Token 1223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0085215512663126
    2. 'spot' → logprob: -5.008521556854248
    3. '```' → logprob: -7.508521556854248
    4. '                   ' → logprob: -7.758521556854248
    5. ' spot' → logprob: -8.38352108001709
    6. '``' → logprob: -8.88352108001709
    7. 'spots' → logprob: -9.13352108001709
    8. '[' → logprob: -9.63352108001709
    9. '           ' → logprob: -9.63352108001709
    10. '                
' → logprob: -10.13352108001709

Token 1224: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.022967655211687088
    2. ' spot' → logprob: -4.39796781539917
    3. '               ' → logprob: -4.64796781539917
    4. '[
' → logprob: -9.022967338562012
    5. '           ' → logprob: -9.272967338562012
    6. 'spots' → logprob: -9.272967338562012
    7. '                   ' → logprob: -9.272967338562012
    8. '[' → logprob: -9.522967338562012
    9. '```' → logprob: -9.897967338562012
    10. '                               ' → logprob: -10.022967338562012

Token 1225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760484337806702
    2. ' =' → logprob: -0.8260484337806702
    3. ' spots' → logprob: -9.826048851013184
    4. 'spots' → logprob: -10.326048851013184
    5. '[' → logprob: -11.201048851013184
    6. 'spot' → logprob: -12.326048851013184
    7. '=
' → logprob: -13.451048851013184
    8. '=[' → logprob: -13.826048851013184
    9. '>' → logprob: -14.576048851013184
    10. '```' → logprob: -14.701048851013184

Token 1226: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.006715728435665369
    2. ' less' → logprob: -5.006715774536133
    3. '_less' → logprob: -15.631715774536133
    4. '[' → logprob: -16.256715774536133
    5. '-less' → logprob: -17.006715774536133
    6. '.less' → logprob: -18.006715774536133
    7. 'least' → logprob: -18.506715774536133
    8. 'Less' → logprob: -18.631715774536133
    9. 'les' → logprob: -19.006715774536133
    10. '0' → logprob: -19.256715774536133

Token 1227: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001589618914294988
    2. 'less' → logprob: -8.87515926361084
    3. '_less' → logprob: -12.00015926361084
    4. '_' → logprob: -12.50015926361084
    5. '```' → logprob: -12.87515926361084
    6. '_[' → logprob: -13.75015926361084
    7. '[
' → logprob: -14.00015926361084
    8. '[-' → logprob: -14.25015926361084
    9. '{' → logprob: -14.25015926361084
    10. '`' → logprob: -14.87515926361084

Token 1228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013864279026165605
    2. '[' → logprob: -6.751386642456055
    3. '1' → logprob: -9.376386642456055
    4. '-' → logprob: -10.376386642456055
    5. 'spot' → logprob: -10.501386642456055
    6. '+' → logprob: -10.876386642456055
    7. '```' → logprob: -11.126386642456055
    8. '(' → logprob: -11.501386642456055
    9. '
' → logprob: -12.251386642456055
    10. 'less' → logprob: -12.251386642456055

Token 1229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3870464563369751
    2. '[' → logprob: -1.137046456336975
    3. '+' → logprob: -9.012046813964844
    4. '>[' → logprob: -11.012046813964844
    5. ')[' → logprob: -11.012046813964844
    6. '+[' → logprob: -12.262046813964844
    7. '           ' → logprob: -12.637046813964844
    8. '```' → logprob: -12.762046813964844
    9. ''][' → logprob: -13.512046813964844
    10. ' ][' → logprob: -13.762046813964844

Token 1230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002135534887202084
    2. '[' → logprob: -8.625213623046875
    3. 'x' → logprob: -10.625213623046875
    4. '```' → logprob: -12.625213623046875
    5. '+' → logprob: -13.750213623046875
    6. '0' → logprob: -14.000213623046875
    7. '
' → logprob: -14.000213623046875
    8. '(x' → logprob: -14.250213623046875
    9. ' ' → logprob: -14.625213623046875
    10. '(' → logprob: -14.750213623046875

Token 1231: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05019674822688103
    2. '[' → logprob: -3.050196647644043
    3. '               ' → logprob: -7.050196647644043
    4. ']
' → logprob: -8.425196647644043
    5. 'spots' → logprob: -8.425196647644043
    6. ' spots' → logprob: -9.300196647644043
    7. ')[' → logprob: -9.925196647644043
    8. '           ' → logprob: -10.050196647644043
    9. '```' → logprob: -10.300196647644043
    10. '
' → logprob: -10.550196647644043

Token 1232: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3917297124862671
    2. '```' → logprob: -2.2667298316955566
    3. '               ' → logprob: -2.3917298316955566
    4. 'spots' → logprob: -2.5167298316955566
    5. ' spots' → logprob: -3.1417298316955566
    6. '                       ' → logprob: -6.141729831695557
    7. '``' → logprob: -6.766729831695557
    8. '                   ' → logprob: -6.891729831695557
    9. '][' → logprob: -9.016729354858398
    10. '           ' → logprob: -9.266729354858398

Token 1233: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.08922723680734634
    2. ' spots' → logprob: -2.4642271995544434
    3. 'spot' → logprob: -9.464227676391602
    4. '       ' → logprob: -9.964227676391602
    5. '(sp' → logprob: -10.839227676391602
    6. ' (' → logprob: -10.964227676391602
    7. '(' → logprob: -11.339227676391602
    8. ''s' → logprob: -11.339227676391602
    9. '```' → logprob: -11.589227676391602
    10. '           ' → logprob: -11.839227676391602

Token 1234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.125000953674316
    3. '[pos' → logprob: -15.250000953674316
    4. 'spot' → logprob: -15.625000953674316
    5. '][' → logprob: -16.375001907348633
    6. '
' → logprob: -17.500001907348633
    7. '[
' → logprob: -17.750001907348633
    8. ')[' → logprob: -18.125001907348633
    9. ' [' → logprob: -18.500001907348633
    10. '``' → logprob: -18.625001907348633

Token 1235: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.2587611973285675
    2. '[' → logprob: -1.5087611675262451
    3. '0' → logprob: -5.008761405944824
    4. 'spots' → logprob: -9.258761405944824
    5. ' spot' → logprob: -11.133761405944824
    6. '
' → logprob: -12.758761405944824
    7. '```' → logprob: -12.758761405944824
    8. '{' → logprob: -12.883761405944824
    9. 'spo' → logprob: -13.008761405944824
    10. '(' → logprob: -13.508761405944824

Token 1236: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0790167972445488
    2. '[' → logprob: -2.57901668548584
    3. ')[' → logprob: -9.57901668548584
    4. '           ' → logprob: -11.32901668548584
    5. '1' → logprob: -11.45401668548584
    6. '```' → logprob: -11.82901668548584
    7. '       ' → logprob: -12.07901668548584
    8. '               ' → logprob: -12.20401668548584
    9. ' ][' → logprob: -12.57901668548584
    10. ']][' → logprob: -12.82901668548584

Token 1237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.62500286102295
    3. 'spot' → logprob: -14.75000286102295
    4. '[' → logprob: -15.12500286102295
    5. '2' → logprob: -15.62500286102295
    6. '```' → logprob: -15.87500286102295
    7. '-' → logprob: -16.500001907348633
    8. '
' → logprob: -16.500001907348633
    9. 'spots' → logprob: -16.750001907348633
    10. ' ' → logprob: -17.125001907348633

Token 1238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.528680145740509
    2. '=' → logprob: -1.0286800861358643
    3. ']=' → logprob: -3.1536800861358643
    4. ' =' → logprob: -4.653680324554443
    5. ')' → logprob: -7.653680324554443
    6. ']=(' → logprob: -9.153679847717285
    7. '[' → logprob: -9.403679847717285
    8. ' ]' → logprob: -9.653679847717285
    9. '][' → logprob: -9.653679847717285
    10. '],' → logprob: -10.403679847717285

Token 1239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016159415245056152
    2. ' =' → logprob: -4.141159534454346
    3. ']' → logprob: -9.641159057617188
    4. ']=' → logprob: -9.766159057617188
    5. '[' → logprob: -13.891159057617188
    6. ')' → logprob: -13.891159057617188
    7. ')=' → logprob: -15.141159057617188
    8. '```' → logprob: -15.766159057617188
    9. '=(' → logprob: -15.891159057617188
    10. '<|end|>' → logprob: -16.141159057617188

Token 1240: ' (' (ID: 350)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.00505324499681592
    2. '(' → logprob: -5.3800530433654785
    3. 'car' → logprob: -7.8800530433654785
    4. ' (' → logprob: -10.380053520202637
    5. '(c' → logprob: -11.755053520202637
    6. '(sp' → logprob: -12.880053520202637
    7. 'spot' → logprob: -13.005053520202637
    8. '(pos' → logprob: -13.380053520202637
    9. '(Car' → logprob: -13.505053520202637
    10. '(code' → logprob: -13.880053520202637

Token 1241: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.625000953674316
    3. ' car' → logprob: -15.750000953674316
    4. '(car' → logprob: -16.375
    5. 'x' → logprob: -17.0
    6. 'spot' → logprob: -17.125
    7. 'code' → logprob: -18.375
    8. 'cars' → logprob: -18.875
    9. 'cost' → logprob: -19.25
    10. 'card' → logprob: -19.75

Token 1242: '_id' (ID: 1537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.513628363609314
    2. '_id' → logprob: -1.263628363609314
    3. '[' → logprob: -2.1386284828186035
    4. 'id' → logprob: -7.1386284828186035
    5. '_' → logprob: -8.263628005981445
    6. ' ' → logprob: -10.263628005981445
    7. 'car' → logprob: -10.888628005981445
    8. '_car' → logprob: -10.888628005981445
    9. '-' → logprob: -11.013628005981445
    10. '(' → logprob: -11.013628005981445

Token 1243: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.729906196298543e-06
    2. ' +' → logprob: -11.750009536743164
    3. ',' → logprob: -14.125009536743164
    4. '[' → logprob: -14.750009536743164
    5. '+,' → logprob: -15.125009536743164
    6. ')+' → logprob: -15.750009536743164
    7. '+
' → logprob: -16.125009536743164
    8. '```' → logprob: -16.750009536743164
    9. ']+' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -17.375009536743164

Token 1244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004086275293957442
    2. 'car' → logprob: -8.250408172607422
    3. '+' → logprob: -9.000408172607422
    4. ' ' → logprob: -11.000408172607422
    5. '0' → logprob: -13.250408172607422
    6. '```' → logprob: -13.375408172607422
    7. ' car' → logprob: -13.875408172607422
    8. '
' → logprob: -14.125408172607422
    9. '   ' → logprob: -14.375408172607422
    10. ' +' → logprob: -15.500408172607422

Token 1245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.253713218029588e-05
    2. '               ' → logprob: -10.125062942504883
    3. '[' → logprob: -12.250062942504883
    4. '           ' → logprob: -12.375062942504883
    5. ' ,' → logprob: -12.750062942504883
    6. '```' → logprob: -13.000062942504883
    7. ',
' → logprob: -13.125062942504883
    8. '`,' → logprob: -13.125062942504883
    9. '                   ' → logprob: -14.625062942504883
    10. '),' → logprob: -14.625062942504883

Token 1246: ' ct' (ID: 40541)
  Prédit: ' ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ct' → logprob: -0.3488393723964691
    2. 'ct' → logprob: -1.2238394021987915
    3. '(ct' → logprob: -8.47383975982666
    4. ' spot' → logprob: -9.84883975982666
    5. 'spot' → logprob: -10.09883975982666
    6. '_ct' → logprob: -10.84883975982666
    7. '	ct' → logprob: -10.84883975982666
    8. 'park' → logprob: -11.59883975982666
    9. 'car' → logprob: -11.84883975982666
    10. ' car' → logprob: -11.84883975982666

Token 1247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09002424031496048
    2. '               ' → logprob: -2.59002423286438
    3. ')
' → logprob: -4.715024471282959
    4. ')return' → logprob: -7.340024471282959
    5. '<|end|>' → logprob: -7.340024471282959
    6. '[' → logprob: -7.715024471282959
    7. '           ' → logprob: -8.8400239944458
    8. '
' → logprob: -10.2150239944458
    9. '       ' → logprob: -10.5900239944458
    10. ')[' → logprob: -10.8400239944458

Token 1248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1200205460190773
    2. '                   ' → logprob: -2.995020627975464
    3. ')' → logprob: -3.495020627975464
    4. '[' → logprob: -5.120020389556885
    5. '```' → logprob: -5.120020389556885
    6. '       ' → logprob: -5.870020389556885
    7. '           ' → logprob: -5.870020389556885
    8. '
' → logprob: -5.995020389556885
    9. 'return' → logprob: -6.245020389556885
    10. ' =' → logprob: -6.370020389556885

Token 1249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05119994282722473
    2. ' return' → logprob: -3.0511999130249023
    3. '               ' → logprob: -6.051199913024902
    4. '                   ' → logprob: -8.676199913024902
    5. '
' → logprob: -10.801199913024902
    6. '           ' → logprob: -10.926199913024902
    7. '	return' → logprob: -11.551199913024902
    8. '   ' → logprob: -11.676199913024902
    9. '       ' → logprob: -12.301199913024902
    10. '                ' → logprob: -12.551199913024902

Token 1250: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.630610641877865e-06
    2. ' True' → logprob: -12.250006675720215
    3. 'False' → logprob: -13.375006675720215
    4. 'spot' → logprob: -15.875006675720215
    5. 'Spot' → logprob: -17.3750057220459
    6. 'spots' → logprob: -17.7500057220459
    7. '(True' → logprob: -18.6250057220459
    8. '
' → logprob: -21.6250057220459
    9. '1' → logprob: -22.0000057220459
    10. 'Yes' → logprob: -22.1250057220459

Token 1251: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1252: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1253: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5962149500846863
    2. 'False' → logprob: -1.721215009689331
    3. '           ' → logprob: -1.846215009689331
    4. '<|end|>' → logprob: -2.596215009689331
    5. '```' → logprob: -5.096214771270752
    6. '   ' → logprob: -5.471214771270752
    7. ' False' → logprob: -5.596214771270752
    8. '\n' → logprob: -5.596214771270752
    9. '(False' → logprob: -5.846214771270752
    10. '
' → logprob: -5.971214771270752

Token 1254: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10020732134580612
    2. ' False' → logprob: -2.3502073287963867
    3. '(False' → logprob: -14.350207328796387
    4. '_false' → logprob: -16.10020637512207
    5. '=False' → logprob: -18.10020637512207
    6. '.False' → logprob: -19.97520637512207
    7. '_FALSE' → logprob: -20.97520637512207
    8. ' ' → logprob: -21.60020637512207
    9. 'Falsy' → logprob: -21.60020637512207
    10. 'false' → logprob: -21.85020637512207

Token 1255: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5402193069458008
    2. '
' → logprob: -1.6652193069458008
    3. '<|end|>' → logprob: -1.7902193069458008
    4. ':
' → logprob: -4.915219306945801
    5. '```' → logprob: -4.915219306945801
    6. '        
' → logprob: -5.040219306945801
    7. '\n' → logprob: -5.165219306945801
    8. ':' → logprob: -5.165219306945801
    9. '(' → logprob: -5.290219306945801
    10. '<|end|>' → logprob: -5.540219306945801

Token 1256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16833381354808807
    2. '<|end|>' → logprob: -2.0433337688446045
    3. '   ' → logprob: -4.418334007263184
    4. 'while' → logprob: -5.043334007263184
    5. '```' → logprob: -6.418334007263184
    6. '
' → logprob: -6.918334007263184
    7. '        
' → logprob: -7.043334007263184
    8. '...' → logprob: -7.168334007263184
    9. ' while' → logprob: -7.293334007263184
    10. '#' → logprob: -7.793334007263184

Token 1257: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2962263226509094
    2. 'while' → logprob: -1.4212262630462646
    3. ' while' → logprob: -4.546226501464844
    4. '<|end|>' → logprob: -6.421226501464844
    5. '   ' → logprob: -7.546226501464844
    6. '
' → logprob: -7.546226501464844
    7. '```' → logprob: -7.796226501464844
    8. '...' → logprob: -7.921226501464844
    9. 'While' → logprob: -8.421226501464844
    10. 'car' → logprob: -8.796226501464844

Token 1258: ' simulate' (ID: 66687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014268343336880207
    2. '       ' → logprob: -4.514268398284912
    3. 'for' → logprob: -6.264268398284912
    4. ' while' → logprob: -7.514268398284912
    5. 'car' → logprob: -7.764268398284912
    6. '   ' → logprob: -8.889267921447754
    7. '#' → logprob: -9.639267921447754
    8. 'While' → logprob: -10.014267921447754
    9. '```' → logprob: -10.139267921447754
    10. '
' → logprob: -10.639267921447754

Token 1259: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0463968887925148
    2. 'while' → logprob: -3.5463969707489014
    3. '   ' → logprob: -4.796396732330322
    4. ' while' → logprob: -5.421396732330322
    5. 'car' → logprob: -6.546396732330322
    6. '```' → logprob: -6.671396732330322
    7. '        
' → logprob: -7.921396732330322
    8. '
' → logprob: -8.04639720916748
    9. ' car' → logprob: -9.17139720916748
    10. '    
' → logprob: -9.92139720916748

Token 1260: ' ' (ID: 220)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09879660606384277
    2. '_car' → logprob: -2.7237966060638428
    3. ' car' → logprob: -4.598796844482422
    4. '   ' → logprob: -5.348796844482422
    5. 'arrival' → logprob: -5.598796844482422
    6. 'while' → logprob: -5.598796844482422
    7. 'for' → logprob: -6.723796844482422
    8. '       ' → logprob: -6.848796844482422
    9. ' arrival' → logprob: -6.973796844482422
    10. '_' → logprob: -7.723796844482422

Token 1261: '10' (ID: 702)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.010918722487986088
    2. 'arrival' → logprob: -5.135918617248535
    3. 'while' → logprob: -6.260918617248535
    4. '_car' → logprob: -7.260918617248535
    5. 'time' → logprob: -7.385918617248535
    6. 'for' → logprob: -7.510918617248535
    7. 'iteration' → logprob: -7.760918617248535
    8. '10' → logprob: -8.260918617248535
    9. 'step' → logprob: -8.385918617248535
    10. 'line' → logprob: -9.010918617248535

Token 1262: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.171199083328247
    2. '       ' → logprob: -1.546199083328247
    3. '*' → logprob: -1.796199083328247
    4. '
' → logprob: -2.171199083328247
    5. 'car' → logprob: -3.171199083328247
    6. '```' → logprob: -3.171199083328247
    7. ' ' → logprob: -4.296198844909668
    8. '\t' → logprob: -4.296198844909668
    9. '#' → logprob: -4.546198844909668
    10. 'while' → logprob: -4.796198844909668

Token 1263: ' interval' (ID: 17116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5479834675788879
    2. '
' → logprob: -1.1729834079742432
    3. '   ' → logprob: -2.797983407974243
    4. '        
' → logprob: -3.672983407974243
    5. 'while' → logprob: -4.922983646392822
    6. '    
' → logprob: -5.047983646392822
    7. 'for' → logprob: -5.797983646392822
    8. ':
' → logprob: -5.797983646392822
    9. ':' → logprob: -6.547983646392822
    10. ' for' → logprob: -6.922983646392822

Token 1264: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05090939253568649
    2. '
' → logprob: -3.0509092807769775
    3. '        
' → logprob: -7.175909519195557
    4. 'while' → logprob: -7.425909519195557
    5. ' while' → logprob: -7.675909519195557
    6. '   ' → logprob: -8.425909042358398
    7. '```' → logprob: -9.425909042358398
    8. '<|end|>' → logprob: -9.925909042358398
    9. '    
' → logprob: -10.300909042358398
    10. '  
' → logprob: -10.925909042358398

Token 1265: ' all' (ID: 722)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0018059646245092154
    2. ' car' → logprob: -7.126805782318115
    3. 'parking' → logprob: -7.126805782318115
    4. 'False' → logprob: -8.876806259155273
    5. ' parking' → logprob: -11.501806259155273
    6. 'all' → logprob: -11.626806259155273
    7. 'total' → logprob: -11.626806259155273
    8. ' False' → logprob: -11.751806259155273
    9. 'n' → logprob: -12.001806259155273
    10. '(car' → logprob: -12.501806259155273

Token 1266: ' cars' (ID: 13653)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11273742467164993
    2. ' car' → logprob: -3.1127374172210693
    3. 'parking' → logprob: -3.7377374172210693
    4. ' parking' → logprob: -4.362737655639648
    5. 'cars' → logprob: -4.487737655639648
    6. '       ' → logprob: -4.737737655639648
    7. ' cars' → logprob: -5.612737655639648
    8. ' parked' → logprob: -7.612737655639648
    9. '(car' → logprob: -7.612737655639648
    10. '   ' → logprob: -8.237737655639648

Token 1267: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30915069580078125
    2. 'are' → logprob: -1.8091506958007812
    3. 'arr' → logprob: -3.1841506958007812
    4. ' are' → logprob: -4.184150695800781
    5. 'park' → logprob: -4.434150695800781
    6. '   ' → logprob: -4.684150695800781
    7. 'have' → logprob: -4.934150695800781
    8. '           ' → logprob: -5.309150695800781
    9. '```' → logprob: -5.434150695800781
    10. '_arr' → logprob: -6.559150695800781

Token 1268: ' arrived' (ID: 18157)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.34300941228866577
    2. 'park' → logprob: -1.3430094718933105
    3. 'arr' → logprob: -3.7180094718933105
    4. ' been' → logprob: -6.2180094718933105
    5. 'car' → logprob: -6.8430094718933105
    6. 'entered' → logprob: -6.8430094718933105
    7. 'attempt' → logprob: -7.7180094718933105
    8. '```' → logprob: -8.968008995056152
    9. 'parking' → logprob: -9.093008995056152
    10. 'be' → logprob: -9.968008995056152

Token 1269: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015329777263104916
    2. '
' → logprob: -4.515329837799072
    3. '<|end|>' → logprob: -6.015329837799072
    4. '        
' → logprob: -7.515329837799072
    5. ':' → logprob: -7.890329837799072
    6. ' and' → logprob: -8.140329360961914
    7. '   ' → logprob: -8.765329360961914
    8. ':
' → logprob: -9.140329360961914
    9. '<|end|>' → logprob: -9.515329360961914
    10. '  
' → logprob: -9.515329360961914

Token 1270: ' left' (ID: 3561)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.11543356627225876
    2. 'left' → logprob: -2.49043345451355
    3. 'all' → logprob: -4.740433692932129
    4. ' all' → logprob: -5.365433692932129
    5. 'depart' → logprob: -5.740433692932129
    6. 'been' → logprob: -5.990433692932129
    7. ' left' → logprob: -5.990433692932129
    8. ' parked' → logprob: -6.365433692932129
    9. '```' → logprob: -6.615433692932129
    10. ' departed' → logprob: -8.240433692932129

Token 1271: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.697151243686676
    2. '       ' → logprob: -0.697151243686676
    3. '<|end|>' → logprob: -6.322151184082031
    4. '        
' → logprob: -6.947151184082031
    5. '   ' → logprob: -7.322151184082031
    6. ' while' → logprob: -9.072151184082031
    7. '    
' → logprob: -9.197151184082031
    8. 'while' → logprob: -9.197151184082031
    9. '  
' → logprob: -9.697151184082031
    10. '<|end|>' → logprob: -9.822151184082031

Token 1272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05256685987114906
    2. '
' → logprob: -3.9275667667388916
    3. ' while' → logprob: -3.9275667667388916
    4. 'while' → logprob: -4.927567005157471
    5. '```' → logprob: -6.052567005157471
    6. '           ' → logprob: -7.677567005157471
    7. '<|end|>' → logprob: -7.677567005157471
    8. '        
' → logprob: -7.927567005157471
    9. '   ' → logprob: -7.927567005157471
    10. ' 
' → logprob: -9.052566528320312

Token 1273: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5438970923423767
    2. ' while' → logprob: -1.4188971519470215
    3. '       ' → logprob: -1.7938971519470215
    4. '
' → logprob: -5.2938971519470215
    5. '   ' → logprob: -5.2938971519470215
    6. '```' → logprob: -7.1688971519470215
    7. 'for' → logprob: -8.918896675109863
    8. '	while' → logprob: -9.418896675109863
    9. '        
' → logprob: -9.543896675109863
    10. ' for' → logprob: -10.293896675109863

Token 1274: ' but' (ID: 889)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2973906099796295
    2. '       ' → logprob: -1.5473905801773071
    3. ' while' → logprob: -3.1723906993865967
    4. 'for' → logprob: -6.922390460968018
    5. '
' → logprob: -7.297390460968018
    6. '```' → logprob: -7.422390460968018
    7. '   ' → logprob: -9.297390937805176
    8. '        
' → logprob: -9.672390937805176
    9. ' for' → logprob: -10.047390937805176
    10. 'if' → logprob: -10.422390937805176

Token 1275: ' multiple' (ID: 7598)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5613386034965515
    2. '       ' → logprob: -1.4363386631011963
    3. ' car' → logprob: -2.3113386631011963
    4. '   ' → logprob: -3.8113386631011963
    5. ' not' → logprob: -4.186338424682617
    6. '
' → logprob: -4.561338424682617
    7. 'time' → logprob: -4.936338424682617
    8. ' while' → logprob: -5.186338424682617
    9. 'while' → logprob: -5.186338424682617
    10. '```' → logprob: -5.311338424682617

Token 1276: ' cars' (ID: 13653)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.8975767493247986
    2. '
' → logprob: -2.0225768089294434
    3. ' cars' → logprob: -2.5225768089294434
    4. '_car' → logprob: -2.7725768089294434
    5. ' lines' → logprob: -3.0225768089294434
    6. '_' → logprob: -3.3975768089294434
    7. '```' → logprob: -3.6475768089294434
    8. 'car' → logprob: -3.7725768089294434
    9. 'cars' → logprob: -3.7725768089294434
    10. 'times' → logprob: -3.8975768089294434

Token 1277: ' come' (ID: 3063)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04394879564642906
    2. ':' → logprob: -4.293948650360107
    3. '
' → logprob: -4.543948650360107
    4. '<|end|>' → logprob: -4.918948650360107
    5. '   ' → logprob: -5.793948650360107
    6. '        
' → logprob: -6.418948650360107
    7. '<|end|>' → logprob: -6.668948650360107
    8. '           ' → logprob: -6.668948650360107
    9. ':
' → logprob: -6.793948650360107
    10. '```' → logprob: -8.043949127197266

Token 1278: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43173593282699585
    2. ':' → logprob: -1.3067359924316406
    3. '   ' → logprob: -3.3067359924316406
    4. ':
' → logprob: -4.056735992431641
    5. '           ' → logprob: -5.056735992431641
    6. 'while' → logprob: -5.556735992431641
    7. '
' → logprob: -6.181735992431641
    8. ' and' → logprob: -6.431735992431641
    9. '```' → logprob: -6.556735992431641
    10. ' while' → logprob: -6.806735992431641

Token 1279: ' leave' (ID: 7668)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6611443161964417
    2. 'leave' → logprob: -0.9111443161964417
    3. 'go' → logprob: -3.161144256591797
    4. 'multiple' → logprob: -3.911144256591797
    5. 'park' → logprob: -4.661144256591797
    6. 'depart' → logprob: -5.286144256591797
    7. 'gone' → logprob: -6.661144256591797
    8. ' leave' → logprob: -7.661144256591797
    9. ' left' → logprob: -7.661144256591797
    10. '   ' → logprob: -7.661144256591797

Token 1280: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03223318234086037
    2. 'while' → logprob: -4.157233238220215
    3. ' while' → logprob: -4.407233238220215
    4. '```' → logprob: -6.907233238220215
    5. '        
' → logprob: -7.032233238220215
    6. '   ' → logprob: -7.282233238220215
    7. '
' → logprob: -7.407233238220215
    8. '           ' → logprob: -9.157233238220215
    9. '<|end|>' → logprob: -9.407233238220215
    10. ',' → logprob: -9.407233238220215

Token 1281: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6556117534637451
    2. 'each' → logprob: -0.9056117534637451
    3. 'once' → logprob: -3.780611753463745
    4. 'time' → logprob: -4.155611991882324
    5. 'same' → logprob: -4.780611991882324
    6. ' the' → logprob: -5.155611991882324
    7. 'current' → logprob: -5.405611991882324
    8. 'a' → logprob: -5.530611991882324
    9. 'car' → logprob: -5.655611991882324
    10. 'different' → logprob: -5.905611991882324

Token 1282: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6235120892524719
    2. '
' → logprob: -2.248512029647827
    3. ' line' → logprob: -2.248512029647827
    4. '```' → logprob: -2.248512029647827
    5. ' times' → logprob: -2.998512029647827
    6. 'time' → logprob: -3.373512029647827
    7. '_time' → logprob: -4.248512268066406
    8. '       ' → logprob: -4.748512268066406
    9. '        
' → logprob: -5.123512268066406
    10. ' lines' → logprob: -5.248512268066406

Token 1283: ' may' (ID: 1340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02289554290473461
    2. '
' → logprob: -3.897895574569702
    3. '        
' → logprob: -6.397895336151123
    4. '<|end|>' → logprob: -8.022895812988281
    5. '```' → logprob: -9.522895812988281
    6. '           ' → logprob: -9.897895812988281
    7. '  
' → logprob: -9.897895812988281
    8. ' while' → logprob: -10.147895812988281
    9. ',' → logprob: -10.647895812988281
    10. ' 
' → logprob: -11.022895812988281

Token 1284: ' occur' (ID: 11416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6218659281730652
    2. '           ' → logprob: -0.9968659281730652
    3. ' continue' → logprob: -3.99686598777771
    4. '
' → logprob: -4.246865749359131
    5. '   ' → logprob: -4.371865749359131
    6. 'continue' → logprob: -4.621865749359131
    7. '          ' → logprob: -4.746865749359131
    8. '               ' → logprob: -4.871865749359131
    9. '```' → logprob: -4.871865749359131
    10. '        
' → logprob: -5.621865749359131

Token 1285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048437461256980896
    2. '
' → logprob: -3.5484373569488525
    3. 'while' → logprob: -4.923437595367432
    4. ' while' → logprob: -5.423437595367432
    5. '        
' → logprob: -5.798437595367432
    6. '   ' → logprob: -6.798437595367432
    7. '<|end|>' → logprob: -7.423437595367432
    8. '#' → logprob: -8.423437118530273
    9. '  
' → logprob: -8.548437118530273
    10. '        ' → logprob: -8.673437118530273

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02297302521765232
    2. '
' → logprob: -4.02297306060791
    3. '        
' → logprob: -6.39797306060791
    4. ' while' → logprob: -7.02297306060791
    5. '<|end|>' → logprob: -7.14797306060791
    6. 'while' → logprob: -7.64797306060791
    7. '```' → logprob: -8.02297306060791
    8. '   ' → logprob: -8.52297306060791
    9. '  
' → logprob: -9.27297306060791
    10. '           ' → logprob: -9.39797306060791

Token 1287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15498311817646027
    2. 'while' → logprob: -2.0299830436706543
    3. ' while' → logprob: -4.529983043670654
    4. 'for' → logprob: -7.279983043670654
    5. 'car' → logprob: -8.529983520507812
    6. '```' → logprob: -9.029983520507812
    7. '        
' → logprob: -9.154983520507812
    8. '           ' → logprob: -9.154983520507812
    9. ' for' → logprob: -9.279983520507812
    10. '   ' → logprob: -10.279983520507812

Token 1288: ' So' (ID: 2632)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22443151473999023
    2. '       ' → logprob: -1.8494315147399902
    3. ' while' → logprob: -3.2244315147399902
    4. '```' → logprob: -6.47443151473999
    5. '   ' → logprob: -6.97443151473999
    6. '
' → logprob: -6.97443151473999
    7. 'for' → logprob: -8.349431991577148
    8. 'car' → logprob: -9.349431991577148
    9. '        
' → logprob: -9.474431991577148
    10. 'current' → logprob: -10.349431991577148

Token 1289: ' track' (ID: 5290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08852659165859222
    2. ' while' → logprob: -2.963526487350464
    3. 'while' → logprob: -3.588526487350464
    4. '
' → logprob: -5.338526725769043
    5. '   ' → logprob: -7.838526725769043
    6. '        
' → logprob: -9.463526725769043
    7. ' for' → logprob: -10.088526725769043
    8. '           ' → logprob: -10.463526725769043
    9. 'for' → logprob: -11.088526725769043
    10. '      ' → logprob: -11.588526725769043

Token 1290: ' next' (ID: 2613)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12734633684158325
    2. '       ' → logprob: -3.2523462772369385
    3. 'cars' → logprob: -3.8773462772369385
    4. 'current' → logprob: -3.8773462772369385
    5. 'while' → logprob: -4.127346515655518
    6. '   ' → logprob: -4.627346515655518
    7. 'events' → logprob: -5.877346515655518
    8. 'for' → logprob: -6.252346515655518
    9. 'time' → logprob: -6.502346515655518
    10. 'parking' → logprob: -6.502346515655518

Token 1291: ' arrival' (ID: 24861)
  Prédit: '_event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_event' → logprob: -0.353305846452713
    2. '_arr' → logprob: -1.8533058166503906
    3. '_time' → logprob: -2.7283058166503906
    4. '_car' → logprob: -3.2283058166503906
    5. '_leave' → logprob: -3.6033058166503906
    6. '_depart' → logprob: -6.228305816650391
    7. '_action' → logprob: -6.228305816650391
    8. '_events' → logprob: -6.603305816650391
    9. '_le' → logprob: -7.103305816650391
    10. '_available' → logprob: -7.853305816650391

Token 1292: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8037749528884888
    2. '_car' → logprob: -1.4287749528884888
    3. '   ' → logprob: -1.9287749528884888
    4. '       ' → logprob: -2.678774833679199
    5. 'car' → logprob: -4.178774833679199
    6. '
' → logprob: -4.178774833679199
    7. '_time' → logprob: -4.303774833679199
    8. ' ' → logprob: -4.928774833679199
    9. '(car' → logprob: -5.303774833679199
    10. '    
' → logprob: -5.303774833679199

Token 1293: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.09321180731058121
    2. ' next' → logprob: -2.4682118892669678
    3. '       ' → logprob: -5.593211650848389
    4. '   ' → logprob: -8.468212127685547
    5. 'departure' → logprob: -9.218212127685547
    6. '
' → logprob: -9.593212127685547
    7. '	next' → logprob: -9.843212127685547
    8. 'leave' → logprob: -10.468212127685547
    9. '        
' → logprob: -11.343212127685547
    10. '           ' → logprob: -11.593212127685547

Token 1294: ' departure' (ID: 40493)
  Prédit: '_leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leave' → logprob: -0.5315288305282593
    2. 'departure' → logprob: -1.1565288305282593
    3. '_depart' → logprob: -2.906528949737549
    4. 'leave' → logprob: -3.281528949737549
    5. 'depart' → logprob: -6.406528949737549
    6. '_le' → logprob: -6.656528949737549
    7. 'le' → logprob: -7.406528949737549
    8. 'car' → logprob: -8.15652847290039
    9. '_time' → logprob: -8.28152847290039
    10. ' departure' → logprob: -8.40652847290039

Token 1295: ' times' (ID: 4238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018936077132821083
    2. '
' → logprob: -4.5189361572265625
    3. '        
' → logprob: -5.8939361572265625
    4. ',' → logprob: -6.2689361572265625
    5. 'next' → logprob: -7.1439361572265625
    6. '   ' → logprob: -8.018936157226562
    7. 'arrival' → logprob: -8.018936157226562
    8. '_next' → logprob: -8.768936157226562
    9. '```' → logprob: -8.893936157226562
    10. ' next' → logprob: -8.893936157226562

Token 1296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03046441450715065
    2. '
' → logprob: -4.1554646492004395
    3. '<|end|>' → logprob: -4.7804646492004395
    4. '        
' → logprob: -6.2804646492004395
    5. '<|end|>' → logprob: -6.7804646492004395
    6. 'next' → logprob: -6.9054646492004395
    7. '_next' → logprob: -7.4054646492004395
    8. ',' → logprob: -8.030464172363281
    9. '   ' → logprob: -8.905464172363281
    10. ' next' → logprob: -9.155464172363281

Token 1297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015753019601106644
    2. '        
' → logprob: -4.890752792358398
    3. '
' → logprob: -5.015752792358398
    4. '<|end|>' → logprob: -7.140752792358398
    5. '```' → logprob: -9.015752792358398
    6. '<|end|>' → logprob: -9.140752792358398
    7. ',' → logprob: -9.765752792358398
    8. '  
' → logprob: -9.890752792358398
    9. 'next' → logprob: -10.140752792358398
    10. 'while' → logprob: -10.265752792358398

Token 1298: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11520475894212723
    2. 'while' → logprob: -2.3652048110961914
    3. ' while' → logprob: -5.240204811096191
    4. '
' → logprob: -5.490204811096191
    5. 'next' → logprob: -6.615204811096191
    6. '        
' → logprob: -6.990204811096191
    7. '   ' → logprob: -6.990204811096191
    8. 'car' → logprob: -7.115204811096191
    9. '<|end|>' → logprob: -7.740204811096191
    10. 'arrival' → logprob: -8.615204811096191

Token 1299: ' departure' (ID: 40493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4152921140193939
    2. 'while' → logprob: -1.4152921438217163
    3. ' while' → logprob: -2.5402920246124268
    4. '
' → logprob: -5.290292263031006
    5. '        
' → logprob: -6.040292263031006
    6. 'next' → logprob: -6.040292263031006
    7. 'car' → logprob: -6.290292263031006
    8. '   ' → logprob: -6.665292263031006
    9. ' next' → logprob: -7.415292263031006
    10. 'current' → logprob: -7.415292263031006

Token 1300: ' can' (ID: 665)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.44007912278175354
    2. '_time' → logprob: -1.0650790929794312
    3. 'times' → logprob: -5.690079212188721
    4. '=' → logprob: -6.565079212188721
    5. 's' → logprob: -6.690079212188721
    6. '_idx' → logprob: -6.690079212188721
    7. '_' → logprob: -6.690079212188721
    8. '_events' → logprob: -7.315079212188721
    9. 'time' → logprob: -7.440079212188721
    10. '_index' → logprob: -7.690079212188721

Token 1301: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0719387531280518
    2. '_time' → logprob: -1.4469387531280518
    3. ')' → logprob: -1.9469387531280518
    4. '_times' → logprob: -2.6969387531280518
    5. 'time' → logprob: -3.1969387531280518
    6. '_' → logprob: -3.5719387531280518
    7. ' =' → logprob: -3.6969387531280518
    8. '   ' → logprob: -3.9469387531280518
    9. 'continue' → logprob: -4.321938514709473
    10. ' time' → logprob: -4.946938514709473

Token 1302: ' multiple' (ID: 7598)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.39548230171203613
    2. 'car' → logprob: -2.645482301712036
    3. 'None' → logprob: -2.895482301712036
    4. '[]' → logprob: -2.895482301712036
    5. 'tracked' → logprob: -3.520482301712036
    6. 'spots' → logprob: -4.020482063293457
    7. 'found' → logprob: -4.145482063293457
    8. '[min' → logprob: -4.395482063293457
    9. '[' → logprob: -4.645482063293457
    10. 'determ' → logprob: -4.770482063293457

Token 1303: ' cars' (ID: 13653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01630590669810772
    2. '
' → logprob: -4.641305923461914
    3. '        
' → logprob: -5.641305923461914
    4. '<|end|>' → logprob: -6.516305923461914
    5. 'while' → logprob: -7.516305923461914
    6. '   ' → logprob: -8.766305923461914
    7. ' while' → logprob: -8.766305923461914
    8. 'next' → logprob: -9.016305923461914
    9. '<|end|>' → logprob: -9.016305923461914
    10. '           ' → logprob: -9.766305923461914

Token 1304: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024411384016275406
    2. '
' → logprob: -4.274411201477051
    3. '<|end|>' → logprob: -5.649411201477051
    4. '        
' → logprob: -5.774411201477051
    5. '   ' → logprob: -7.399411201477051
    6. '```' → logprob: -7.649411201477051
    7. ',' → logprob: -7.649411201477051
    8. '<|end|>' → logprob: -8.27441120147705
    9. ':' → logprob: -8.39941120147705
    10. 'while' → logprob: -8.52441120147705

Token 1305: ' same' (ID: 2684)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.32546213269233704
    2. 'time' → logprob: -2.3254621028900146
    3. 'car' → logprob: -2.5754621028900146
    4. 'the' → logprob: -3.2004621028900146
    5. 'same' → logprob: -3.2004621028900146
    6. ' current' → logprob: -5.325462341308594
    7. 'any' → logprob: -5.575462341308594
    8. 'least' → logprob: -5.575462341308594
    9. 'each' → logprob: -6.450462341308594
    10. 'a' → logprob: -6.450462341308594

Token 1306: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5793667435646057
    2. '_time' → logprob: -0.8293667435646057
    3. 'times' → logprob: -7.204366683959961
    4. '_times' → logprob: -7.329366683959961
    5. '_' → logprob: -7.954366683959961
    6. '
' → logprob: -8.079366683959961
    7. 'def' → logprob: -8.204366683959961
    8. ' time' → logprob: -8.329366683959961
    9. '```' → logprob: -8.329366683959961
    10. '\n' → logprob: -8.704366683959961

Token 1307: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005923935677856207
    2. '        
' → logprob: -5.880923748016357
    3. '<|end|>' → logprob: -6.380923748016357
    4. '
' → logprob: -7.380923748016357
    5. 'while' → logprob: -8.755924224853516
    6. '```' → logprob: -9.005924224853516
    7. '<|end|>' → logprob: -9.380924224853516
    8. '           ' → logprob: -9.630924224853516
    9. ' while' → logprob: -9.630924224853516
    10. ',' → logprob: -10.380924224853516

Token 1308: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0850212499499321
    2. '<|end|>' → logprob: -2.9600212574005127
    3. '
' → logprob: -3.9600212574005127
    4. '```' → logprob: -5.585021018981934
    5. '<|end|>' → logprob: -5.960021018981934
    6. '        
' → logprob: -6.335021018981934
    7. '           ' → logprob: -7.710021018981934
    8. '   ' → logprob: -7.835021018981934
    9. ' ' → logprob: -8.585021018981934
    10. ' while' → logprob: -8.585021018981934

Token 1309: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02732890658080578
    2. '
' → logprob: -4.527328968048096
    3. 'while' → logprob: -4.652328968048096
    4. '        
' → logprob: -6.277328968048096
    5. ' while' → logprob: -6.527328968048096
    6. '```' → logprob: -6.777328968048096
    7. '<|end|>' → logprob: -7.652328968048096
    8. '   ' → logprob: -7.652328968048096
    9. '#' → logprob: -8.652328491210938
    10. 'current' → logprob: -8.902328491210938

Token 1310: ' spot' (ID: 10021)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.40960782766342163
    2. '```' → logprob: -2.4096078872680664
    3. 'the' → logprob: -2.7846078872680664
    4. 'time' → logprob: -3.0346078872680664
    5. 'range' → logprob: -3.2846078872680664
    6. 'sorted' → logprob: -3.6596078872680664
    7. 'ascending' → logprob: -4.659607887268066
    8. 'arrival' → logprob: -4.659607887268066
    9. 'car' → logprob: -5.284607887268066
    10. 'continue' → logprob: -5.284607887268066

Token 1311: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03012937679886818
    2. '
' → logprob: -4.280129432678223
    3. '        
' → logprob: -5.155129432678223
    4. '   ' → logprob: -5.530129432678223
    5. '```' → logprob: -7.405129432678223
    6. '_next' → logprob: -7.530129432678223
    7. '()
' → logprob: -7.905129432678223
    8. '_' → logprob: -8.155129432678223
    9. '           ' → logprob: -8.155129432678223
    10. '()' → logprob: -8.280129432678223

Token 1312: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11275511234998703
    2. 'while' → logprob: -2.362755060195923
    3. ' while' → logprob: -5.112755298614502
    4. '
' → logprob: -6.612755298614502
    5. '```' → logprob: -6.612755298614502
    6. '        
' → logprob: -7.112755298614502
    7. 'next' → logprob: -7.487755298614502
    8. '   ' → logprob: -7.612755298614502
    9. 'current' → logprob: -7.987755298614502
    10. 'for' → logprob: -7.987755298614502

Token 1313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2994820475578308
    2. 'while' → logprob: -1.4244821071624756
    3. 'next' → logprob: -4.5494818687438965
    4. '
' → logprob: -5.9244818687438965
    5. ' while' → logprob: -6.2994818687438965
    6. '```' → logprob: -7.0494818687438965
    7. 'arrival' → logprob: -7.2994818687438965
    8. 'current' → logprob: -7.7994818687438965
    9. '   ' → logprob: -7.9244818687438965
    10. 'arr' → logprob: -8.299482345581055

Token 1314: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17093797028064728
    2. 'while' → logprob: -2.170938014984131
    3. 'next' → logprob: -3.420938014984131
    4. '
' → logprob: -5.545938014984131
    5. '        
' → logprob: -6.170938014984131
    6. ' while' → logprob: -6.420938014984131
    7. 'car' → logprob: -7.420938014984131
    8. 'arrival' → logprob: -7.670938014984131
    9. 'current' → logprob: -7.795938014984131
    10. ' next' → logprob: -8.170937538146973

Token 1315: '_leave' (ID: 156042)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.8050379753112793
    2. '_arr' → logprob: -1.1800379753112793
    3. '_time' → logprob: -2.4300379753112793
    4. '_car' → logprob: -2.8050379753112793
    5. '_' → logprob: -3.1800379753112793
    6. '_times' → logprob: -3.8050379753112793
    7. '       ' → logprob: -5.055037975311279
    8. '_sp' → logprob: -5.430037975311279
    9. '()' → logprob: -5.930037975311279
    10. '[' → logprob: -5.930037975311279

Token 1316: ' =' (ID: 314)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.23455053567886353
    2. '_order' → logprob: -1.6095504760742188
    3. '_time' → logprob: -5.984550476074219
    4. '_events' → logprob: -6.484550476074219
    5. '_orders' → logprob: -6.859550476074219
    6. '_c' → logprob: -6.984550476074219
    7. ' =' → logprob: -6.984550476074219
    8. 's' → logprob: -7.484550476074219
    9. '=' → logprob: -7.734550476074219
    10. '_done' → logprob: -8.859550476074219

Token 1317: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00048656106810085475
    2. 'False' → logprob: -8.625486373901367
    3. '[' → logprob: -8.875486373901367
    4. '[]
' → logprob: -9.000486373901367
    5. '0' → logprob: -10.875486373901367
    6. ' []' → logprob: -11.875486373901367
    7. 'set' → logprob: -12.000486373901367
    8. '{}' → logprob: -12.750486373901367
    9. '[]}' → logprob: -12.875486373901367
    10. 'deque' → logprob: -13.375486373901367

Token 1318: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003625247161835432
    2. '[' → logprob: -6.003625392913818
    3. '0' → logprob: -8.00362491607666
    4. 'False' → logprob: -8.00362491607666
    5. 'deque' → logprob: -8.37862491607666
    6. '[]
' → logprob: -8.75362491607666
    7. 'set' → logprob: -10.00362491607666
    8. '{}' → logprob: -11.37862491607666
    9. '[]}' → logprob: -11.50362491607666
    10. '[n' → logprob: -11.62862491607666

Token 1319: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007847334491088986
    2. '<|end|>' → logprob: -8.250784873962402
    3. 'while' → logprob: -8.625784873962402
    4. '       ' → logprob: -8.750784873962402
    5. ' while' → logprob: -10.000784873962402
    6. '   ' → logprob: -10.250784873962402
    7. '```' → logprob: -10.500784873962402
    8. '
' → logprob: -11.125784873962402
    9. '    
' → logprob: -11.375784873962402
    10. '        
' → logprob: -11.500784873962402

Token 1320: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2231263816356659
    2. '       ' → logprob: -1.8481264114379883
    3. '<|end|>' → logprob: -3.2231264114379883
    4. '        
' → logprob: -6.848126411437988
    5. '<|end|>' → logprob: -7.223126411437988
    6. '   ' → logprob: -8.223126411437988
    7. 'while' → logprob: -8.348126411437988
    8. ' while' → logprob: -9.223126411437988
    9. '    
' → logprob: -9.348126411437988
    10. '	while' → logprob: -10.348126411437988

Token 1321: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29485416412353516
    2. '
' → logprob: -1.6698541641235352
    3. '       ' → logprob: -3.419854164123535
    4. ' while' → logprob: -4.169854164123535
    5. '   ' → logprob: -4.669854164123535
    6. 'car' → logprob: -5.669854164123535
    7. 'current' (adapté à ' current') → logprob: -5.919854164123535
    8. '```' → logprob: -6.169854164123535
    9. '        
' → logprob: -7.794854164123535
    10. '    
' → logprob: -8.419854164123535

Token 1322: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0006416652468033135
    2. '_' → logprob: -7.500641822814941
    3. '_token' → logprob: -10.375641822814941
    4. 'Time' → logprob: -11.000641822814941
    5. '_line' → logprob: -11.625641822814941
    6. ' _' → logprob: -12.125641822814941
    7. 'time' → logprob: -12.250641822814941
    8. '_Time' → logprob: -12.375641822814941
    9. ')_' → logprob: -12.500641822814941
    10. '_tokens' → logprob: -13.125641822814941

Token 1323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2076624184846878
    2. '=' → logprob: -1.8326624631881714
    3. ' +=' → logprob: -3.707662343978882
    4. '+=' → logprob: -6.207662582397461
    5. '<|end|>' → logprob: -8.082662582397461
    6. '+' → logprob: -8.582662582397461
    7. ')' → logprob: -8.707662582397461
    8. ' +' → logprob: -9.082662582397461
    9. ',' → logprob: -9.457662582397461
    10. '<|end|>' → logprob: -10.457662582397461

Token 1324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005977381486445665
    2. 'car' → logprob: -6.005977153778076
    3. ' ' → logprob: -6.380977153778076
    4. '-' → logprob: -6.380977153778076
    5. ' -' → logprob: -10.130977630615234
    6. '-car' → logprob: -11.130977630615234
    7. ' car' → logprob: -11.505977630615234
    8. 'm' → logprob: -11.755977630615234
    9. '   ' → logprob: -11.880977630615234
    10. '(car' → logprob: -12.005977630615234

Token 1325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. '-' → logprob: -7.375911712646484
    3. 'car' → logprob: -8.500911712646484
    4. ' ' → logprob: -9.875911712646484
    5. '-car' → logprob: -12.000911712646484
    6. ' -' → logprob: -12.250911712646484
    7. '10' → logprob: -12.625911712646484
    8. 'm' → logprob: -12.625911712646484
    9. '(' → logprob: -12.875911712646484
    10. '   ' → logprob: -13.250911712646484

Token 1326: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33554255962371826
    2. '
' → logprob: -1.4605425596237183
    3. '        
' → logprob: -3.335542678833008
    4. '<|end|>' → logprob: -4.835542678833008
    5. 'while' → logprob: -5.335542678833008
    6. '<|end|>' → logprob: -7.335542678833008
    7. '  
' → logprob: -7.335542678833008
    8. ' while' → logprob: -7.585542678833008
    9. ' 
' → logprob: -7.835542678833008
    10. '		
' → logprob: -8.085542678833008

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05744447931647301
    2. '
' → logprob: -3.1824445724487305
    3. '<|end|>' → logprob: -5.5574445724487305
    4. 'while' → logprob: -5.6824445724487305
    5. '   ' → logprob: -5.8074445724487305
    6. '        
' → logprob: -6.3074445724487305
    7. ' while' → logprob: -7.5574445724487305
    8. ',' → logprob: -8.18244457244873
    9. '```' → logprob: -8.30744457244873
    10. '<|end|>' → logprob: -8.30744457244873

Token 1328: ' waiting' (ID: 12028)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01588701829314232
    2. ' while' → logprob: -4.7658867835998535
    3. '       ' → logprob: -5.2658867835998535
    4. '```' → logprob: -6.7658867835998535
    5. '   ' → logprob: -7.6408867835998535
    6. 'for' → logprob: -8.640887260437012
    7. '
' → logprob: -8.890887260437012
    8. 'car' → logprob: -9.890887260437012
    9. '	while' → logprob: -10.515887260437012
    10. '        
' → logprob: -11.015887260437012

Token 1329: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04682765528559685
    2. '.' → logprob: -4.046827793121338
    3. '=' → logprob: -4.171827793121338
    4. ' =' → logprob: -5.421827793121338
    5. '.p' → logprob: -5.921827793121338
    6. '.extend' → logprob: -6.046827793121338
    7. '.clear' → logprob: -6.796827793121338
    8. '.enqueue' → logprob: -7.671827793121338
    9. '.dequeue' → logprob: -8.29682731628418
    10. '.queue' → logprob: -8.54682731628418

Token 1330: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002613358374219388
    2. ' deque' → logprob: -8.250261306762695
    3. '[]' → logprob: -17.375261306762695
    4. 'de' → logprob: -18.750261306762695
    5. 'Deque' → logprob: -18.750261306762695
    6. '```' → logprob: -18.875261306762695
    7. 'waiting' → logprob: -20.375261306762695
    8. 'dq' → logprob: -20.750261306762695
    9. '   ' → logprob: -20.875261306762695
    10. 'queue' → logprob: -20.875261306762695

Token 1331: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018393639475107193
    2. '()
' → logprob: -4.018393516540527
    3. '()

' → logprob: -8.643393516540527
    4. '()\' → logprob: -11.268393516540527
    5. '();' → logprob: -11.393393516540527
    6. '       ' → logprob: -11.393393516540527
    7. '(),' → logprob: -11.893393516540527
    8. '(car' → logprob: -12.143393516540527
    9. '([]' → logprob: -12.518393516540527
    10. '([])
' → logprob: -12.643393516540527

Token 1332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01277567446231842
    2. '<|end|>' → logprob: -5.637775897979736
    3. '        
' → logprob: -5.762775897979736
    4. 'while' → logprob: -5.887775897979736
    5. '
' → logprob: -6.637775897979736
    6. ' while' → logprob: -6.887775897979736
    7. '   ' → logprob: -8.137775421142578
    8. '```' → logprob: -8.387775421142578
    9. '<|end|>' → logprob: -8.887775421142578
    10. '           ' → logprob: -10.512775421142578

Token 1333: ' arriving' (ID: 53419)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02593633346259594
    2. '       ' → logprob: -4.400936126708984
    3. ' while' → logprob: -4.775936126708984
    4. '
' → logprob: -6.150936126708984
    5. 'for' → logprob: -6.900936126708984
    6. '```' → logprob: -7.025936126708984
    7. 'car' → logprob: -7.775936126708984
    8. '   ' → logprob: -8.650936126708984
    9. 'if' → logprob: -8.775936126708984
    10. '        
' → logprob: -10.025936126708984

Token 1334: '_c' (ID: 1303)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5580862164497375
    2. '=' → logprob: -1.1830861568450928
    3. '()' → logprob: -3.1830861568450928
    4. '_car' → logprob: -3.1830861568450928
    5. '_' → logprob: -4.933086395263672
    6. '=[]' → logprob: -5.308086395263672
    7. '(' → logprob: -5.933086395263672
    8. ')' → logprob: -6.058086395263672
    9. '_idxs' → logprob: -6.058086395263672
    10. '_c' → logprob: -6.433086395263672

Token 1335: 'ars' (ID: 1904)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0022711048368364573
    2. 'ars' → logprob: -6.5022711753845215
    3. '=' → logprob: -7.3772711753845215
    4. '```' → logprob: -10.252270698547363
    5. ' =' → logprob: -11.002270698547363
    6. '_' → logprob: -11.252270698547363
    7. 'a' → logprob: -11.377270698547363
    8. '_idx' → logprob: -11.502270698547363
    9. '_ar' → logprob: -11.627270698547363
    10. '+=' → logprob: -11.752270698547363

Token 1336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47816672921180725
    2. '=' → logprob: -0.9781666994094849
    3. '<|end|>' → logprob: -6.728166580200195
    4. '=[]' → logprob: -7.353166580200195
    5. '.append' → logprob: -7.478166580200195
    6. '[' → logprob: -7.853166580200195
    7. '.' → logprob: -8.603166580200195
    8. ')' → logprob: -8.728166580200195
    9. '[]' → logprob: -8.728166580200195
    10. ':' → logprob: -8.853166580200195

Token 1337: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6570515632629395
    2. 'deque' → logprob: -1.5320515632629395
    3. 'car' → logprob: -1.9070515632629395
    4. '0' → logprob: -2.2820515632629395
    5. '[' → logprob: -4.4070515632629395
    6. ' []' → logprob: -7.2820515632629395
    7. '[]}' → logprob: -7.6570515632629395
    8. '[n' → logprob: -7.9070515632629395
    9. '[]
' → logprob: -8.282051086425781
    10. 'range' → logprob: -8.532051086425781

Token 1338: '0' (ID: 15)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.21665553748607635
    2. 'deque' → logprob: -2.5916554927825928
    3. '[]' → logprob: -2.7166554927825928
    4. '0' → logprob: -3.2166554927825928
    5. '[]
' → logprob: -5.466655731201172
    6. '[' → logprob: -5.591655731201172
    7. '[n' → logprob: -5.966655731201172
    8. 'n' → logprob: -6.341655731201172
    9. '[]

' → logprob: -8.341655731201172
    10. '[]}' → logprob: -8.591655731201172

Token 1339: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3365187346935272
    2. '
' → logprob: -1.3365187644958496
    3. '        
' → logprob: -4.46151876449585
    4. 'while' → logprob: -5.83651876449585
    5. '<|end|>' → logprob: -6.08651876449585
    6. ' while' → logprob: -6.58651876449585
    7. ' 
' → logprob: -6.71151876449585
    8. ',' → logprob: -7.83651876449585
    9. '```' → logprob: -7.83651876449585
    10. '  
' → logprob: -8.211518287658691

Token 1340: ' next' (ID: 2613)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09388142824172974
    2. 'm' → logprob: -3.218881368637085
    3. ' car' → logprob: -4.093881607055664
    4. 'arr' → logprob: -4.468881607055664
    5. '0' → logprob: -5.093881607055664
    6. 'n' → logprob: -5.593881607055664
    7. ' m' → logprob: -5.843881607055664
    8. 'while' → logprob: -5.968881607055664
    9. 'True' → logprob: -6.343881607055664
    10. '(car' → logprob: -6.843881607055664

Token 1341: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.08754337579011917
    2. ' car' → logprob: -3.587543487548828
    3. '_car' → logprob: -3.712543487548828
    4. '=' → logprob: -4.337543487548828
    5. '       ' → logprob: -6.087543487548828
    6. '   ' → logprob: -6.212543487548828
    7. 'arrival' → logprob: -6.337543487548828
    8. '_id' → logprob: -6.337543487548828
    9. '_idx' → logprob: -6.587543487548828
    10. '```' → logprob: -6.587543487548828

Token 1342: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1343: ' come' (ID: 3063)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.001057698973454535
    2. 'park' → logprob: -7.5010576248168945
    3. '10' → logprob: -8.126057624816895
    4. 'arrival' → logprob: -9.251057624816895
    5. 'process' → logprob: -10.251057624816895
    6. ' arrive' → logprob: -10.501057624816895
    7. 'add' → logprob: -11.001057624816895
    8. '_arr' → logprob: -11.876057624816895
    9. 'enqueue' → logprob: -12.001057624816895
    10. 'car' → logprob: -12.126057624816895

Token 1344: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0802537128329277
    2. '
' → logprob: -2.8302536010742188
    3. '        
' → logprob: -4.455253601074219
    4. '   ' → logprob: -6.205253601074219
    5. '<|end|>' → logprob: -6.330253601074219
    6. 'while' → logprob: -7.080253601074219
    7. ' while' → logprob: -7.705253601074219
    8. '<|end|>' → logprob: -8.455253601074219
    9. '```' → logprob: -8.580253601074219
    10. ')' → logprob: -8.830253601074219

Token 1345: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0507934093475342
    2. '<|end|>' → logprob: -1.5507934093475342
    3. '<|end|>' → logprob: -1.6757934093475342
    4. '       ' → logprob: -1.6757934093475342
    5. '        
' → logprob: -4.550793647766113
    6. ':' → logprob: -4.550793647766113
    7. ')' → logprob: -4.675793647766113
    8. '   ' → logprob: -5.050793647766113
    9. ' 
' → logprob: -5.425793647766113
    10. '=' → logprob: -5.550793647766113

Token 1346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06078648939728737
    2. ':' → logprob: -4.185786724090576
    3. '   ' → logprob: -4.185786724090576
    4. '        
' → logprob: -5.060786724090576
    5. '<|end|>' → logprob: -5.185786724090576
    6. '
' → logprob: -5.310786724090576
    7. ')' → logprob: -6.685786724090576
    8. ':
' → logprob: -6.935786724090576
    9. 'while' → logprob: -6.935786724090576
    10. '```' → logprob: -7.060786724090576

Token 1347: ' left' (ID: 3561)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030189402401447296
    2. '       ' → logprob: -3.9051895141601562
    3. ' while' → logprob: -5.280189514160156
    4. '```' → logprob: -6.280189514160156
    5. 'for' → logprob: -7.155189514160156
    6. 'if' → logprob: -7.655189514160156
    7. 'car' → logprob: -7.780189514160156
    8. '   ' → logprob: -8.155189514160156
    9. '
' → logprob: -8.405189514160156
    10. 'current' → logprob: -8.780189514160156

Token 1348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39843666553497314
    2. ' =' → logprob: -1.1484366655349731
    3. 'over' → logprob: -5.648436546325684
    4. '_times' → logprob: -5.898436546325684
    5. '_time' → logprob: -5.898436546325684
    6. '_' → logprob: -7.273436546325684
    7. '_idx' → logprob: -7.398436546325684
    8. '_car' → logprob: -8.398436546325684
    9. '```' → logprob: -8.523436546325684
    10. '_over' → logprob: -8.773436546325684

Token 1349: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052650682628154755
    2. ' ' → logprob: -5.255265235900879
    3. '[]' → logprob: -11.255265235900879
    4. 'arr' → logprob: -12.130265235900879
    5. 'deque' → logprob: -12.255265235900879
    6. 'n' → logprob: -12.755265235900879
    7. 'waiting' → logprob: -13.630265235900879
    8. '   ' → logprob: -14.255265235900879
    9. '[]
' → logprob: -14.505265235900879
    10. '[' → logprob: -14.630265235900879

Token 1350: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10914049297571182
    2. '0' → logprob: -2.359140396118164
    3. 'None' → logprob: -4.734140396118164
    4. '-' → logprob: -9.859140396118164
    5. ' False' → logprob: -10.109140396118164
    6. ']' → logprob: -12.734140396118164
    7. '   ' → logprob: -13.484140396118164
    8. '[]' → logprob: -13.484140396118164
    9. '[' → logprob: -13.484140396118164
    10. ' ' → logprob: -13.859140396118164

Token 1351: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014191479422152042
    2. ']*' → logprob: -4.889191627502441
    3. ' for' → logprob: -5.139191627502441
    4. 'for' → logprob: -8.014191627502441
    5. ',' → logprob: -8.264191627502441
    6. ' ]' → logprob: -10.014191627502441
    7. ']*(' → logprob: -10.139191627502441
    8. '   ' → logprob: -11.889191627502441
    9. ',
' → logprob: -12.139191627502441
    10. '[' → logprob: -12.639191627502441

Token 1352: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031201209872961044
    2. '(n' → logprob: -3.531201124191284
    3. '(' → logprob: -7.156201362609863
    4. 'total' → logprob: -7.531201362609863
    5. '(total' → logprob: -9.281201362609863
    6. ' (' → logprob: -10.781201362609863
    7. ' n' → logprob: -11.781201362609863
    8. 'len' → logprob: -12.656201362609863
    9. '100' → logprob: -12.781201362609863
    10. '(len' → logprob: -13.406201362609863

Token 1353: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07667731493711472
    2. '<|end|>' → logprob: -2.7016773223876953
    3. '       ' → logprob: -5.951677322387695
    4. '<|end|>' → logprob: -6.451677322387695
    5. '        
' → logprob: -7.451677322387695
    6. '```' → logprob: -8.201677322387695
    7. '\n' → logprob: -8.326677322387695
    8. '
' → logprob: -8.451677322387695
    9. ' 
' → logprob: -8.576677322387695
    10. '[' → logprob: -8.826677322387695

Token 1354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.548971951007843
    2. '
' → logprob: -0.923971951007843
    3. '<|end|>' → logprob: -4.173972129821777
    4. '        
' → logprob: -5.298972129821777
    5. '   ' → logprob: -6.048972129821777
    6. '```' → logprob: -7.173972129821777
    7. '    
' → logprob: -7.798972129821777
    8. '<|end|>' → logprob: -7.798972129821777
    9. 'while' → logprob: -8.048972129821777
    10. ' while' → logprob: -8.548972129821777

Token 1355: ' output' (ID: 4733)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0659257099032402
    2. ' while' → logprob: -3.5659255981445312
    3. '```' → logprob: -3.8159255981445312
    4. '       ' → logprob: -4.565925598144531
    5. '   ' → logprob: -6.065925598144531
    6. '
' → logprob: -8.440925598144531
    7. 'for' → logprob: -8.565925598144531
    8. 'current' → logprob: -9.440925598144531
    9. '	while' → logprob: -9.815925598144531
    10. '``' → logprob: -9.815925598144531

Token 1356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4317495822906494
    2. ' =' → logprob: -1.1817495822906494
    3. '_lines' → logprob: -3.4317495822906494
    4. '=[]' → logprob: -5.68174934387207
    5. '_times' → logprob: -6.18174934387207
    6. '_' → logprob: -6.30674934387207
    7. '()' → logprob: -6.55674934387207
    8. '_list' → logprob: -7.93174934387207
    9. '_line' → logprob: -8.05674934387207
    10. '[' → logprob: -8.18174934387207

Token 1357: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3425219549390022e-05
    2. '[]
' → logprob: -11.62501335144043
    3. '""' → logprob: -13.00001335144043
    4. '[' → logprob: -14.12501335144043
    5. ' []' → logprob: -14.87501335144043
    6. '[]}' → logprob: -15.00001335144043
    7. '[]"' → logprob: -15.50001335144043
    8. '[],' → logprob: -16.00001335144043
    9. '[]

' → logprob: -16.00001335144043
    10. '[])' → logprob: -16.37501335144043

Token 1358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18427027761936188
    2. 'while' → logprob: -2.6842703819274902
    3. '
' → logprob: -3.4342703819274902
    4. '   ' → logprob: -3.8092703819274902
    5. '<|end|>' → logprob: -4.18427038192749
    6. ' while' → logprob: -4.55927038192749
    7. '        
' → logprob: -4.68427038192749
    8. '```' → logprob: -5.93427038192749
    9. '    
' → logprob: -6.18427038192749
    10. '\n' → logprob: -6.93427038192749

Token 1359: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.018678469583392143
    2. ' while' → logprob: -4.518678665161133
    3. '       ' → logprob: -5.643678665161133
    4. '   ' → logprob: -5.893678665161133
    5. '```' → logprob: -7.518678665161133
    6. '
' → logprob: -7.643678665161133
    7. 'for' → logprob: -9.143678665161133
    8. 'current' → logprob: -9.643678665161133
    9. 'car' → logprob: -10.518678665161133
    10. '	while' → logprob: -10.643678665161133

Token 1360: ' convert' (ID: 8452)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.018988242372870445
    2. '       ' → logprob: -4.143988132476807
    3. ' while' → logprob: -5.893988132476807
    4. '   ' → logprob: -8.893988609313965
    5. '
' → logprob: -11.393988609313965
    6. '```' → logprob: -11.518988609313965
    7. 'for' → logprob: -11.643988609313965
    8. 'next' → logprob: -11.768988609313965
    9. 'current' → logprob: -11.768988609313965
    10. 'car' → logprob: -12.143988609313965

Token 1361: ' spots' (ID: 25522)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.48828810453414917
    2. 'car' → logprob: -1.863288164138794
    3. 'to' → logprob: -3.488288164138794
    4. 'for' → logprob: -3.613288164138794
    5. 'from' → logprob: -3.613288164138794
    6. '```' → logprob: -3.738288164138794
    7. 'current' → logprob: -3.863288164138794
    8. '
' → logprob: -4.113287925720215
    9. ' while' → logprob: -4.613287925720215
    10. '       ' → logprob: -4.738287925720215

Token 1362: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5420892238616943
    2. '=' → logprob: -1.6670892238616943
    3. '[' → logprob: -2.9170892238616943
    4. '_idx' → logprob: -3.6670892238616943
    5. '       ' → logprob: -4.042089462280273
    6. ':' → logprob: -4.292089462280273
    7. '_' → logprob: -4.667089462280273
    8. '
' → logprob: -4.792089462280273
    9. '[
' → logprob: -5.167089462280273
    10. '_index' → logprob: -5.167089462280273

Token 1363: ' (' (ID: 350)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.3845410346984863
    2. 'None' → logprob: -1.7595410346984863
    3. '[(' → logprob: -2.1345410346984863
    4. 'cars' → logprob: -2.3845410346984863
    5. 'lower' → logprob: -2.5095410346984863
    6. '[' → logprob: -2.7595410346984863
    7. '#' → logprob: -3.3845410346984863
    8. 'all' → logprob: -3.7595410346984863
    9. 'for' → logprob: -4.134541034698486
    10. ' cars' → logprob: -4.509541034698486

Token 1364: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.04694288223981857
    2. 'None' → logprob: -3.171942949295044
    3. '(car' → logprob: -6.296942710876465
    4. ')' → logprob: -7.296942710876465
    5. '(None' → logprob: -7.921942710876465
    6. 'id' → logprob: -8.296942710876465
    7. ' car' → logprob: -8.921942710876465
    8. '0' → logprob: -9.046942710876465
    9. '
' → logprob: -9.171942710876465
    10. '```' → logprob: -9.296942710876465

Token 1365: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0007152927573770285
    2. ',' → logprob: -8.750715255737305
    3. ')_' → logprob: -9.125715255737305
    4. '[' → logprob: -9.375715255737305
    5. 'id' → logprob: -9.375715255737305
    6. ')' → logprob: -9.625715255737305
    7. 'None' → logprob: -9.875715255737305
    8. '```' → logprob: -10.250715255737305
    9. '
' → logprob: -10.625715255737305
    10. '_ids' → logprob: -11.125715255737305

Token 1366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021977806463837624
    2. ',None' → logprob: -3.8969779014587402
    3. ' ,' → logprob: -7.64697790145874
    4. 'None' → logprob: -8.021977424621582
    5. ',time' → logprob: -8.146977424621582
    6. ',
' → logprob: -9.146977424621582
    7. ',t' → logprob: -10.021977424621582
    8. ')' → logprob: -10.271977424621582
    9. '=None' → logprob: -10.271977424621582
    10. ',status' → logprob: -10.521977424621582

Token 1367: 'leave' (ID: 47897)
  Prédit: 'leave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.03400515019893646
    2. ' leave' → logprob: -3.5340051651000977
    3. 'park' → logprob: -6.284005165100098
    4. ')' → logprob: -6.909005165100098
    5. 'remain' → logprob: -8.034005165100098
    6. 'car' → logprob: -8.909005165100098
    7. 'le' → logprob: -8.909005165100098
    8. '0' → logprob: -8.909005165100098
    9. 'lease' → logprob: -9.284005165100098
    10. 'remaining' → logprob: -9.784005165100098

Token 1368: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00030293059535324574
    2. ')_' → logprob: -8.875303268432617
    3. ')' → logprob: -9.500303268432617
    4. '_' → logprob: -10.125303268432617
    5. '_times' → logprob: -10.875303268432617
    6. 'time' → logprob: -11.000303268432617
    7. '_t' → logprob: -11.750303268432617
    8. 'Time' → logprob: -14.125303268432617
    9. '```' → logprob: -14.125303268432617
    10. '_TIME' → logprob: -14.750303268432617

Token 1369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076650637201964855
    2. ')
' → logprob: -5.382665157318115
    3. 's' → logprob: -6.757665157318115
    4. ')=' → logprob: -7.257665157318115
    5. ')s' → logprob: -8.382664680480957
    6. '[' → logprob: -8.632664680480957
    7. '):
' → logprob: -8.632664680480957
    8. '       ' → logprob: -9.257664680480957
    9. '))' → logprob: -9.757664680480957
    10. '),' → logprob: -10.132664680480957

Token 1370: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1203728914260864
    2. ' =' → logprob: -1.8703728914260864
    3. '       ' → logprob: -1.8703728914260864
    4. 'to' → logprob: -2.120372772216797
    5. '=' → logprob: -2.495372772216797
    6. ' to' → logprob: -3.245372772216797
    7. '
' → logprob: -3.370372772216797
    8. 'def' → logprob: -3.620372772216797
    9. ' into' → logprob: -4.245372772216797
    10. '#' → logprob: -4.495372772216797

Token 1371: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5447289347648621
    2. 'def' → logprob: -2.794728994369507
    3. 'current' → logprob: -2.794728994369507
    4. '[' → logprob: -3.044728994369507
    5. 'None' → logprob: -3.169728994369507
    6. 'lambda' → logprob: -3.419728994369507
    7. '(car' → logprob: -3.669728994369507
    8. 'for' → logprob: -4.044728755950928
    9. '[(' → logprob: -4.544728755950928
    10. '[]' → logprob: -4.669728755950928

Token 1372: '_id' (ID: 1537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.921465277671814
    2. '_id' → logprob: -1.171465277671814
    3. '_' → logprob: -2.5464653968811035
    4. 's' → logprob: -2.6714653968811035
    5. '_ids' → logprob: -3.4214653968811035
    6. '=' → logprob: -3.5464653968811035
    7. '_s' → logprob: -4.1714653968811035
    8. ')
' → logprob: -4.2964653968811035
    9. ')_' → logprob: -4.6714653968811035
    10. '_idx' → logprob: -4.7964653968811035

Token 1373: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.161222219467163
    2. ' =' → logprob: -1.411222219467163
    3. ')' → logprob: -2.036222219467163
    4. '       ' → logprob: -2.286222219467163
    5. '_' → logprob: -3.536222219467163
    6. '   ' → logprob: -3.536222219467163
    7. ']' → logprob: -3.661222219467163
    8. '```' → logprob: -4.036222457885742
    9. '[' → logprob: -4.286222457885742
    10. 's' → logprob: -4.411222457885742

Token 1374: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34090614318847656
    2. ' =' → logprob: -2.2159061431884766
    3. ',' → logprob: -2.5909061431884766
    4. '=None' → logprob: -3.0909061431884766
    5. ')' → logprob: -3.7159061431884766
    6. ' in' → logprob: -5.215906143188477
    7. 'None' → logprob: -5.340906143188477
    8. 'in' → logprob: -5.715906143188477
    9. 'for' → logprob: -6.215906143188477
    10. 's' → logprob: -6.590906143188477

Token 1375: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6101828217506409
    2. ']' → logprob: -1.360182762145996
    3. '<|end|>' → logprob: -2.985182762145996
    4. ',' → logprob: -3.110182762145996
    5. ':' → logprob: -3.860182762145996
    6. '+' → logprob: -4.110182762145996
    7. '<|end|>' → logprob: -4.860182762145996
    8. ')]' → logprob: -4.860182762145996
    9. ')
' → logprob: -4.985182762145996
    10. '[' → logprob: -5.360182762145996

Token 1376: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3916884660720825
    2. '=' → logprob: -1.7666884660720825
    3. '       ' → logprob: -2.141688346862793
    4. '<|end|>' → logprob: -2.141688346862793
    5. ':' → logprob: -2.391688346862793
    6. ' =' → logprob: -2.891688346862793
    7. ')' → logprob: -3.266688346862793
    8. '```' → logprob: -3.516688346862793
    9. '        
' → logprob: -4.016688346862793
    10. '   ' → logprob: -4.141688346862793

Token 1377: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5504542589187622
    2. '       ' → logprob: -1.1754542589187622
    3. '<|end|>' → logprob: -2.4254541397094727
    4. '        
' → logprob: -4.925454139709473
    5. '<|end|>' → logprob: -5.175454139709473
    6. ' for' → logprob: -6.425454139709473
    7. '[' → logprob: -6.550454139709473
    8. '```' → logprob: -6.675454139709473
    9. ',' → logprob: -6.800454139709473
    10. 'while' → logprob: -6.800454139709473

Token 1378: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.933414101600647
    2. 'while' → logprob: -1.183414101600647
    3. '
' → logprob: -1.808414101600647
    4. ' while' → logprob: -2.3084139823913574
    5. 'for' → logprob: -4.433413982391357
    6. ' for' → logprob: -4.683413982391357
    7. '        
' → logprob: -5.308413982391357
    8. '   ' → logprob: -5.683413982391357
    9. '```' → logprob: -5.933413982391357
    10. '<|end|>' → logprob: -7.058413982391357

Token 1379: ' At' (ID: 3604)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03545822203159332
    2. '       ' → logprob: -4.285458087921143
    3. 'for' → logprob: -4.410458087921143
    4. '
' → logprob: -5.035458087921143
    5. '   ' → logprob: -6.660458087921143
    6. ' while' → logprob: -7.160458087921143
    7. 'def' → logprob: -8.6604585647583
    8. '        
' → logprob: -9.7854585647583
    9. 'next' → logprob: -10.5354585647583
    10. '```' → logprob: -10.9104585647583

Token 1380: ' each' (ID: 2454)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.7579711079597473
    2. 'while' → logprob: -1.3829710483551025
    3. '#' → logprob: -2.6329710483551025
    4. 'def' → logprob: -3.0079710483551025
    5. 'the' → logprob: -3.3829710483551025
    6. ' least' → logprob: -3.5079710483551025
    7. 'car' → logprob: -3.7579710483551025
    8. '
' → logprob: -4.132971286773682
    9. 'each' → logprob: -4.757971286773682
    10. 'current' → logprob: -4.882971286773682

Token 1381: ' time' (ID: 1058)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.2282177209854126
    2. 'time' → logprob: -1.4782177209854126
    3. 'while' → logprob: -1.9782177209854126
    4. 'step' → logprob: -2.853217601776123
    5. '_time' → logprob: -3.228217601776123
    6. '   ' → logprob: -3.353217601776123
    7. 'line' → logprob: -3.353217601776123
    8. 'arrival' → logprob: -3.853217601776123
    9. '       ' → logprob: -4.103217601776123
    10. ' step' → logprob: -4.228217601776123

Token 1382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8138658404350281
    2. '=' → logprob: -1.4388659000396729
    3. 'while' → logprob: -2.188865900039673
    4. ',' → logprob: -2.438865900039673
    5. ' =' → logprob: -3.313865900039673
    6. ':
' → logprob: -4.188865661621094
    7. ' while' → logprob: -4.438865661621094
    8. '   ' → logprob: -4.563865661621094
    9. '       ' → logprob: -4.813865661621094
    10. '```' → logprob: -5.188865661621094

Token 1383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010766234248876572
    2. '
' → logprob: -5.76076602935791
    3. ' while' → logprob: -5.76076602935791
    4. 'while' → logprob: -6.13576602935791
    5. '        
' → logprob: -6.63576602935791
    6. '   ' → logprob: -7.63576602935791
    7. '```' → logprob: -8.26076602935791
    8. '           ' → logprob: -9.51076602935791
    9. '#' → logprob: -11.01076602935791
    10. '<|end|>' → logprob: -11.01076602935791

Token 1384: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5849857926368713
    2. 'while' → logprob: -0.8349857926368713
    3. ' while' → logprob: -5.084985733032227
    4. '
' → logprob: -6.459985733032227
    5. '```' → logprob: -7.584985733032227
    6. '   ' → logprob: -7.959985733032227
    7. 'for' → logprob: -8.334985733032227
    8. 'current' → logprob: -9.709985733032227
    9. '           ' → logprob: -10.209985733032227
    10. '        
' → logprob: -10.709985733032227

Token 1385: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06876403093338013
    2. '       ' → logprob: -3.0687639713287354
    3. ' while' → logprob: -4.1937642097473145
    4. '```' → logprob: -6.1937642097473145
    5. '
' → logprob: -6.8187642097473145
    6. 'for' → logprob: -6.9437642097473145
    7. '   ' → logprob: -7.4437642097473145
    8. 'current' → logprob: -9.818763732910156
    9. '``' → logprob: -9.943763732910156
    10. ' for' → logprob: -10.568763732910156

Token 1386: '1' (ID: 16)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007507956121116877
    2. 'for' → logprob: -5.882507801055908
    3. '
' → logprob: -6.257507801055908
    4. ' while' → logprob: -6.757507801055908
    5. 'car' → logprob: -7.132507801055908
    6. '```' → logprob: -7.632507801055908
    7. '       ' → logprob: -9.007508277893066
    8. 'current' → logprob: -9.382508277893066
    9. '   ' → logprob: -10.007508277893066
    10. 'arr' → logprob: -10.757508277893066

Token 1387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11611754447221756
    2. '   ' → logprob: -2.616117477416992
    3. '       ' → logprob: -3.616117477416992
    4. '=' → logprob: -6.241117477416992
    5. ':' → logprob: -6.366117477416992
    6. ' =' → logprob: -6.491117477416992
    7. ' ' → logprob: -7.366117477416992
    8. '):' → logprob: -7.366117477416992
    9. ')
' → logprob: -7.491117477416992
    10. '  ' → logprob: -7.741117477416992

Token 1388: ' remove' (ID: 6234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4930724501609802
    2. '#' → logprob: -1.118072509765625
    3. '       ' → logprob: -3.493072509765625
    4. 'while' → logprob: -3.493072509765625
    5. '
' → logprob: -6.743072509765625
    6. '   ' → logprob: -8.743072509765625
    7. '```' → logprob: -9.868072509765625
    8. ' for' → logprob: -9.868072509765625
    9. 'arr' → logprob: -10.993072509765625
    10. '           ' → logprob: -11.493072509765625

Token 1389: ' cars' (ID: 13653)
  Prédit: ' cars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cars' → logprob: -1.3330764770507812
    2. 'cars' → logprob: -1.3330764770507812
    3. '       ' → logprob: -1.5830764770507812
    4. ' for' → logprob: -2.2080764770507812
    5. 'for' → logprob: -3.2080764770507812
    6. ' spots' → logprob: -3.7080764770507812
    7. ' #' → logprob: -4.583076477050781
    8. 'car' → logprob: -4.583076477050781
    9. '```' → logprob: -4.583076477050781
    10. 'le' → logprob: -4.708076477050781

Token 1390: ' whose' (ID: 12119)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6691816449165344
    2. '       ' → logprob: -0.7941816449165344
    3. ' from' → logprob: -3.5441815853118896
    4. '[' → logprob: -6.419181823730469
    5. '           ' → logprob: -6.669181823730469
    6. ' at' → logprob: -7.294181823730469
    7. ' in' → logprob: -7.669181823730469
    8. '   ' → logprob: -7.794181823730469
    9. 'for' → logprob: -8.169181823730469
    10. '#' → logprob: -8.294181823730469

Token 1391: ' leave' (ID: 7668)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.00850264448672533
    2. ' leave' → logprob: -4.88350248336792
    3. 'le' → logprob: -8.883502960205078
    4. 'time' → logprob: -9.008502960205078
    5. '   ' → logprob: -9.008502960205078
    6. '```' → logprob: -9.133502960205078
    7. '_leave' → logprob: -9.133502960205078
    8. 'current' → logprob: -9.258502960205078
    9. 'departure' → logprob: -9.883502960205078
    10. ' ' → logprob: -10.383502960205078

Token 1392: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.005781716667115688
    2. '_' → logprob: -5.880781650543213
    3. '_times' → logprob: -6.130781650543213
    4. '   ' → logprob: -7.755781650543213
    5. '       ' → logprob: -8.880782127380371
    6. 'time' → logprob: -9.130782127380371
    7. '```' → logprob: -9.755782127380371
    8. ' _' → logprob: -11.130782127380371
    9. '_list' → logprob: -12.005782127380371
    10. '
' → logprob: -12.130782127380371

Token 1393: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.43828287720680237
    2. '<=' → logprob: -1.06328284740448
    3. '==' → logprob: -5.4382829666137695
    4. ' ==' → logprob: -5.9382829666137695
    5. '   ' → logprob: -6.1882829666137695
    6. ' ' → logprob: -9.06328296661377
    7. '```' → logprob: -9.06328296661377
    8. '       ' → logprob: -9.68828296661377
    9. '  ' → logprob: -10.56328296661377
    10. '=' → logprob: -10.68828296661377

Token 1394: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2519305646419525
    2. ' current' → logprob: -1.501930594444275
    3. '	current' → logprob: -14.876930236816406
    4. '
' → logprob: -15.126930236816406
    5. '=current' → logprob: -15.626930236816406
    6. '_current' → logprob: -15.876930236816406
    7. '```' → logprob: -15.876930236816406
    8. '(current' → logprob: -16.251930236816406
    9. ' ' → logprob: -17.001930236816406
    10. 'time' → logprob: -17.001930236816406

Token 1395: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.623244553338736e-05
    2. '_' → logprob: -10.625065803527832
    3. '_
' → logprob: -11.125065803527832
    4. '_line' → logprob: -11.375065803527832
    5. 'time' → logprob: -12.500065803527832
    6. '_token' → logprob: -12.875065803527832
    7. '   ' → logprob: -13.500065803527832
    8. ' _' → logprob: -13.625065803527832
    9. '_current' → logprob: -13.625065803527832
    10. 'Time' → logprob: -13.750065803527832

Token 1396: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011153695173561573
    2. '
' → logprob: -4.511153697967529
    3. '        
' → logprob: -9.761153221130371
    4. ',' → logprob: -10.886153221130371
    5. '   ' → logprob: -12.261153221130371
    6. '<|end|>' → logprob: -12.386153221130371
    7. '           ' → logprob: -12.511153221130371
    8. ' for' → logprob: -12.761153221130371
    9. '  
' → logprob: -12.886153221130371
    10. '#' → logprob: -13.011153221130371

Token 1397: 'for' (ID: 1938)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24214382469654083
    2. ')
' → logprob: -2.1171438694000244
    3. '
' → logprob: -3.1171438694000244
    4. ')' → logprob: -3.1171438694000244
    5. '):
' → logprob: -6.742143630981445
    6. ':
' → logprob: -6.867143630981445
    7. '        
' → logprob: -7.242143630981445
    8. '\n' → logprob: -7.742143630981445
    9. '   ' → logprob: -7.867143630981445
    10. ':' → logprob: -7.867143630981445

Token 1398: ' upper' (ID: 13057)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6231520175933838
    2. ' spot' → logprob: -1.6231520175933838
    3. ' _' → logprob: -2.623152017593384
    4. ' line' → logprob: -2.748152017593384
    5. 'spot' → logprob: -3.123152017593384
    6. ' car' → logprob: -3.748152017593384
    7. 'line' → logprob: -3.873152017593384
    8. '_' → logprob: -4.873151779174805
    9. ')' → logprob: -4.998151779174805
    10. '
' → logprob: -5.123151779174805

Token 1399: ' slot' (ID: 8215)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4818629026412964
    2. 'slot' → logprob: -1.4818629026412964
    3. ')' → logprob: -1.8568629026412964
    4. ' or' → logprob: -2.356863021850586
    5. ')
' → logprob: -2.606863021850586
    6. ']
' → logprob: -3.356863021850586
    7. ' and' → logprob: -3.481863021850586
    8. '```' → logprob: -3.731863021850586
    9. '[' → logprob: -3.856863021850586
    10. ',' → logprob: -3.981863021850586

Token 1400: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5869632959365845
    2. '       ' → logprob: -1.4619632959365845
    3. ')' → logprob: -2.586963176727295
    4. ')
' → logprob: -2.586963176727295
    5. 'or' → logprob: -3.711963176727295
    6. '           ' → logprob: -4.086963176727295
    7. '):
' → logprob: -5.086963176727295
    8. ' and' → logprob: -5.211963176727295
    9. '):' → logprob: -6.586963176727295
    10. ',' → logprob: -6.711963176727295

Token 1401: ' must' (ID: 2804)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.339236319065094
    2. 'for' → logprob: -2.589236259460449
    3. '           ' → logprob: -2.839236259460449
    4. '       ' → logprob: -2.964236259460449
    5. '               ' → logprob: -3.839236259460449
    6. '```' → logprob: -4.089236259460449
    7. 'lower' → logprob: -4.089236259460449
    8. ' for' → logprob: -4.214236259460449
    9. ')' → logprob: -4.339236259460449
    10. ' #' → logprob: -5.714236259460449

Token 1402: ' wait' (ID: 5238)
  Prédit: 'also'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'also' → logprob: -0.5385292172431946
    2. 'remove' → logprob: -1.7885291576385498
    3. 'be' → logprob: -2.41352915763855
    4. 'check' → logprob: -2.78852915763855
    5. ' also' → logprob: -2.91352915763855
    6. 'continue' → logprob: -3.78852915763855
    7. 'pop' → logprob: -5.163529396057129
    8. '#' → logprob: -5.913529396057129
    9. 'process' → logprob: -6.288529396057129
    10. '           ' → logprob: -6.663529396057129

Token 1403: ' lower' (ID: 6931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0569361448287964
    2. ' until' → logprob: -1.5569361448287964
    3. ' for' → logprob: -2.181936264038086
    4. '       ' → logprob: -2.306936264038086
    5. '   ' → logprob: -2.556936264038086
    6. ')' → logprob: -2.556936264038086
    7. 'until' → logprob: -3.306936264038086
    8. '           ' → logprob: -4.056936264038086
    9. ' )' → logprob: -6.056936264038086
    10. ')
' → logprob: -6.306936264038086

Token 1404: ' leaves' (ID: 15657)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08005038648843765
    2. '           ' → logprob: -3.580050468444824
    3. '
' → logprob: -4.455050468444824
    4. '               ' → logprob: -4.580050468444824
    5. '[' → logprob: -4.955050468444824
    6. ')' → logprob: -5.205050468444824
    7. '   ' → logprob: -6.330050468444824
    8. '        
' → logprob: -6.580050468444824
    9. '```' → logprob: -6.955050468444824
    10. ')
' → logprob: -7.080050468444824

Token 1405: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07317959517240524
    2. '
' → logprob: -2.6981794834136963
    3. '        
' → logprob: -6.323179721832275
    4. '```' → logprob: -7.823179721832275
    5. '<|end|>' → logprob: -8.198179244995117
    6. ')
' → logprob: -8.823179244995117
    7. '           ' → logprob: -9.198179244995117
    8. '   ' → logprob: -9.198179244995117
    9. '  
' → logprob: -9.573179244995117
    10. ')' → logprob: -9.573179244995117

Token 1406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067728073336184025
    2. '
' → logprob: -5.006772994995117
    3. '        
' → logprob: -10.131772994995117
    4. '```' → logprob: -11.881772994995117
    5. '#' → logprob: -12.631772994995117
    6. '           ' → logprob: -12.881772994995117
    7. '   ' → logprob: -13.256772994995117
    8. '
' → logprob: -13.756772994995117
    9. ',' → logprob: -14.506772994995117
    10. 'while' → logprob: -15.881772994995117

Token 1407: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045012119226157665
    2. '
' → logprob: -5.5045013427734375
    3. '        
' → logprob: -7.8795013427734375
    4. '           ' → logprob: -11.129501342773438
    5. '#' (adapté à ' #') → logprob: -12.254501342773438
    6. '   ' → logprob: -12.379501342773438
    7. ',' → logprob: -12.629501342773438
    8. '  
' → logprob: -12.754501342773438
    9. '```' → logprob: -12.754501342773438
    10. '<|end|>' → logprob: -12.879501342773438

Token 1408: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010544853284955025
    2. '
' → logprob: -4.635544776916504
    3. 'while' → logprob: -8.135544776916504
    4. ' while' → logprob: -8.635544776916504
    5. '        
' → logprob: -9.010544776916504
    6. '           ' → logprob: -9.135544776916504
    7. 'for' → logprob: -10.510544776916504
    8. '   ' → logprob: -10.510544776916504
    9. '```' → logprob: -11.260544776916504
    10. ' for' → logprob: -11.385544776916504

Token 1409: '2' (ID: 17)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7012079358100891
    2. '       ' → logprob: -1.2012078762054443
    3. 'for' → logprob: -1.7012078762054443
    4. '#' → logprob: -4.701208114624023
    5. '
' → logprob: -4.701208114624023
    6. 'def' → logprob: -6.451208114624023
    7. '   ' → logprob: -7.701208114624023
    8. ' while' → logprob: -8.576208114624023
    9. '        
' → logprob: -9.326208114624023
    10. '```' → logprob: -9.451208114624023

Token 1410: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2996748387813568
    2. '       ' → logprob: -1.4246748685836792
    3. ':' → logprob: -4.799674987792969
    4. '   ' → logprob: -5.424674987792969
    5. '           ' → logprob: -6.424674987792969
    6. '):' → logprob: -7.174674987792969
    7. '#' → logprob: -7.299674987792969
    8. '=' → logprob: -7.299674987792969
    9. ' =' → logprob: -8.174674987792969
    10. '
' → logprob: -8.799674987792969

Token 1411: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0797417163848877
    2. 'for' → logprob: -1.2047417163848877
    3. 'while' → logprob: -1.2047417163848877
    4. '#' → logprob: -2.9547417163848877
    5. '
' → logprob: -4.954741477966309
    6. 'def' → logprob: -7.579741477966309
    7. '   ' → logprob: -7.954741477966309
    8. 'arr' → logprob: -8.704741477966309
    9. ' while' → logprob: -8.829741477966309
    10. '           ' → logprob: -8.829741477966309

Token 1412: ' all' (ID: 722)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.5696260929107666
    2. 'car' → logprob: -1.9446260929107666
    3. '```' → logprob: -2.0696260929107666
    4. '   ' → logprob: -2.3196260929107666
    5. 'rem' → logprob: -2.3196260929107666
    6. '       ' → logprob: -2.4446260929107666
    7. 'checking' → logprob: -2.6946260929107666
    8. 'while' → logprob: -3.1946260929107666
    9. '
' → logprob: -3.8196260929107666
    10. 'arr' → logprob: -3.9446260929107666

Token 1413: ' remov' (ID: 12074)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.17691920697689056
    2. 'lower' → logprob: -2.9269192218780518
    3. 'car' → logprob: -3.4269192218780518
    4. '       ' → logprob: -3.8019192218780518
    5. 'arr' → logprob: -4.551918983459473
    6. 'le' → logprob: -4.801918983459473
    7. ' cars' → logprob: -4.926918983459473
    8. '```' → logprob: -5.301918983459473
    9. '   ' → logprob: -5.426918983459473
    10. '#' → logprob: -6.051918983459473

Token 1414: 'als' (ID: 1288)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.19556358456611633
    2. 'e' → logprob: -2.320563554763794
    3. 've' → logprob: -3.195563554763794
    4. '       ' → logprob: -4.070563793182373
    5. 'oving' → logprob: -4.195563793182373
    6. '   ' → logprob: -6.195563793182373
    7. '
' → logprob: -6.695563793182373
    8. '#' → logprob: -7.570563793182373
    9. 'ave' → logprob: -7.695563793182373
    10. 'ing' → logprob: -8.070563316345215

Token 1415: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06109055131673813
    2. ',' → logprob: -2.9360904693603516
    3. '
' → logprob: -5.561090469360352
    4. ',
' → logprob: -6.686090469360352
    5. '           ' → logprob: -7.936090469360352
    6. '<|end|>' → logprob: -8.686090469360352
    7. '        
' → logprob: -9.186090469360352
    8. ' for' → logprob: -9.311090469360352
    9. ':' → logprob: -9.436090469360352
    10. ':
' → logprob: -9.561090469360352

Token 1416: ' park' (ID: 11796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17892998456954956
    2. '
' → logprob: -2.4289300441741943
    3. ' for' → logprob: -3.5539300441741943
    4. 'for' → logprob: -4.053929805755615
    5. '#' → logprob: -4.303929805755615
    6. '           ' → logprob: -5.428929805755615
    7. 'while' → logprob: -5.928929805755615
    8. '   ' → logprob: -6.053929805755615
    9. '        
' → logprob: -6.178929805755615
    10. ' while' → logprob: -6.303929805755615

Token 1417: ' waiting' (ID: 12028)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11167014390230179
    2. 'cars' → logprob: -3.3616702556610107
    3. 'for' → logprob: -3.9866702556610107
    4. 'car' → logprob: -4.111670017242432
    5. 'lower' → logprob: -4.861670017242432
    6. '
' → logprob: -4.986670017242432
    7. ' cars' → logprob: -5.611670017242432
    8. '   ' → logprob: -5.861670017242432
    9. '```' → logprob: -5.986670017242432
    10. '_car' → logprob: -6.111670017242432

Token 1418: ' cars' (ID: 13653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11905015259981155
    2. '
' → logprob: -2.2440502643585205
    3. '        
' → logprob: -5.994050025939941
    4. 'while' → logprob: -5.994050025939941
    5. ' while' → logprob: -7.869050025939941
    6. '```' → logprob: -8.494050025939941
    7. '   ' → logprob: -8.619050025939941
    8. '           ' → logprob: -9.619050025939941
    9. 'current' → logprob: -10.119050025939941
    10. '    
' → logprob: -10.119050025939941

Token 1419: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5255404114723206
    2. '       ' → logprob: -0.9005404114723206
    3. '        
' → logprob: -6.900540351867676
    4. 'while' → logprob: -7.400540351867676
    5. '   ' → logprob: -7.775540351867676
    6. ' while' → logprob: -9.150540351867676
    7. '    
' → logprob: -9.275540351867676
    8. '
' → logprob: -10.275540351867676
    9. '```' → logprob: -10.400540351867676
    10. '           ' → logprob: -10.775540351867676

Token 1420: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.4262641668319702
    2. 'much' → logprob: -1.1762641668319702
    3. 'long' → logprob: -3.3012642860412598
    4. 'possible' → logprob: -6.55126428604126
    5. ' much' → logprob: -9.176263809204102
    6. 'soon' → logprob: -9.551263809204102
    7. ' many' → logprob: -9.676263809204102
    8. 'far' → logprob: -9.676263809204102
    9. '
' → logprob: -11.051263809204102
    10. ' long' → logprob: -11.051263809204102

Token 1421: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039004214107990265
    2. 'while' → logprob: -3.914004325866699
    3. '           ' → logprob: -5.289004325866699
    4. '   ' → logprob: -5.664004325866699
    5. 'for' → logprob: -6.289004325866699
    6. '               ' → logprob: -6.664004325866699
    7. '
' → logprob: -7.289004325866699
    8. ':' → logprob: -7.414004325866699
    9. ' while' → logprob: -7.414004325866699
    10. '        
' → logprob: -7.539004325866699

Token 1422: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0006086751818656921
    2. ' possible' → logprob: -7.500608444213867
    3. '```' → logprob: -10.125608444213867
    4. 'many' → logprob: -11.875608444213867
    5. '
' → logprob: -12.375608444213867
    6. 'much' → logprob: -13.375608444213867
    7. 'poss' → logprob: -14.000608444213867
    8. '    
' → logprob: -14.625608444213867
    9. '_possible' → logprob: -15.125608444213867
    10. ' posible' → logprob: -15.125608444213867

Token 1423: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13062192499637604
    2. '
' → logprob: -2.130621910095215
    3. 'while' → logprob: -6.255621910095215
    4. ' while' → logprob: -7.005621910095215
    5. '        
' → logprob: -7.755621910095215
    6. '   ' → logprob: -8.130621910095215
    7. '```' → logprob: -10.255621910095215
    8. '    
' → logprob: -10.630621910095215
    9. '           ' → logprob: -11.505621910095215
    10. ' for' → logprob: -11.630621910095215

Token 1424: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6358977556228638
    2. '       ' → logprob: -0.7608977556228638
    3. '        
' → logprob: -6.010897636413574
    4. '   ' → logprob: -8.260897636413574
    5. '    
' → logprob: -8.885897636413574
    6. '<|end|>' → logprob: -9.135897636413574
    7. '  
' → logprob: -9.510897636413574
    8. '```' → logprob: -9.635897636413574
    9. '

' → logprob: -10.385897636413574
    10. '           ' → logprob: -10.635897636413574

Token 1425: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012288536876440048
    2. '
' → logprob: -4.512288570404053
    3. '        
' → logprob: -7.512288570404053
    4. '   ' → logprob: -7.762288570404053
    5. 'while' → logprob: -8.637288093566895
    6. ' while' → logprob: -9.887288093566895
    7. '```' → logprob: -11.387288093566895
    8. '    
' → logprob: -11.512288093566895
    9. '           ' → logprob: -12.137288093566895
    10. '  
' → logprob: -12.637288093566895

Token 1426: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3216513693332672
    2. 'while' → logprob: -1.3216513395309448
    3. '
' → logprob: -5.571651458740234
    4. '   ' → logprob: -5.946651458740234
    5. ' while' → logprob: -6.321651458740234
    6. '        
' → logprob: -9.696651458740234
    7. 'current' → logprob: -10.696651458740234
    8. '```' → logprob: -10.821651458740234
    9. 'for' → logprob: -11.446651458740234
    10. 'next' → logprob: -12.071651458740234

Token 1427: '3' (ID: 18)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001374518615193665
    2. '       ' → logprob: -7.3763747215271
    3. '
' → logprob: -8.001374244689941
    4. ' while' → logprob: -8.626374244689941
    5. '   ' → logprob: -9.376374244689941
    6. 'current' → logprob: -9.626374244689941
    7. 'car' → logprob: -10.501374244689941
    8. 'for' → logprob: -10.626374244689941
    9. '```' → logprob: -10.626374244689941
    10. '        
' → logprob: -13.001374244689941

Token 1428: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2210896611213684
    2. ')' → logprob: -1.8460896015167236
    3. '   ' → logprob: -3.7210896015167236
    4. '=' → logprob: -5.096089839935303
    5. ' =' → logprob: -6.221089839935303
    6. ')
' → logprob: -6.221089839935303
    7. '#' → logprob: -6.721089839935303
    8. 'while' → logprob: -6.846089839935303
    9. ':' → logprob: -7.096089839935303
    10. '```' → logprob: -7.471089839935303

Token 1429: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09498541057109833
    2. 'current' → logprob: -3.7199854850769043
    3. ' while' → logprob: -3.9699854850769043
    4. 'car' → logprob: -4.469985485076904
    5. 'arr' → logprob: -4.719985485076904
    6. 'for' → logprob: -4.969985485076904
    7. '#' → logprob: -5.094985485076904
    8. '
' → logprob: -5.469985485076904
    9. '       ' → logprob: -5.469985485076904
    10. '   ' → logprob: -6.344985485076904

Token 1430: ' next' (ID: 2613)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.08324182033538818
    2. 'car' → logprob: -2.8332419395446777
    3. ' arriving' → logprob: -4.208241939544678
    4. 'current' → logprob: -5.583241939544678
    5. ' current' → logprob: -7.083241939544678
    6. ' car' → logprob: -7.083241939544678
    7. 'arrival' → logprob: -8.33324146270752
    8. '   ' → logprob: -8.33324146270752
    9. ' arr' → logprob: -9.70824146270752
    10. 'waiting' → logprob: -9.83324146270752

Token 1431: ' car' (ID: 1669)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.05374247208237648
    2. '_car' → logprob: -3.1787424087524414
    3. '_time' → logprob: -4.803742408752441
    4. 'arrival' → logprob: -7.303742408752441
    5. '_line' → logprob: -7.553742408752441
    6. 'arr' → logprob: -7.678742408752441
    7. 'car' → logprob: -8.178742408752441
    8. '   ' → logprob: -8.928742408752441
    9. '_' → logprob: -9.053742408752441
    10. '_c' → logprob: -9.553742408752441

Token 1432: ' arrival' (ID: 24861)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.22670099139213562
    2. '_id' → logprob: -1.851701021194458
    3. '_to' → logprob: -3.976701021194458
    4. '_arr' → logprob: -5.226700782775879
    5. '_index' → logprob: -5.351700782775879
    6. '   ' → logprob: -5.476700782775879
    7. '_time' → logprob: -5.851700782775879
    8. '=' → logprob: -5.851700782775879
    9. '==' → logprob: -6.226700782775879
    10. ' =' → logprob: -6.726700782775879

Token 1433: '_time' (ID: 6425)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45295029878616333
    2. '==' → logprob: -1.5779502391815186
    3. '_time' → logprob: -2.7029502391815186
    4. '_' → logprob: -3.4529502391815186
    5. '   ' → logprob: -4.327950477600098
    6. '()' → logprob: -4.327950477600098
    7. ' is' → logprob: -4.702950477600098
    8. '()==' → logprob: -5.452950477600098
    9. '_idx' → logprob: -5.827950477600098
    10. ' <' → logprob: -6.077950477600098

Token 1434: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5265159606933594
    2. '==' → logprob: -1.4015159606933594
    3. ' <=' → logprob: -2.0265159606933594
    4. '<=' → logprob: -4.026515960693359
    5. ' <' → logprob: -4.776515960693359
    6. ' >=' → logprob: -6.651515960693359
    7. ' is' → logprob: -6.776515960693359
    8. '=' → logprob: -8.02651596069336
    9. '   ' → logprob: -8.02651596069336
    10. ' ' → logprob: -8.02651596069336

Token 1435: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1842803955078125
    2. ' current' → logprob: -1.8092803955078125
    3. 'car' → logprob: -5.4342803955078125
    4. ' car' → logprob: -9.559280395507812
    5. 'arrival' → logprob: -10.184280395507812
    6. 'arr' → logprob: -11.309280395507812
    7. '=current' → logprob: -11.684280395507812
    8. ' arriving' → logprob: -12.309280395507812
    9. '(current' → logprob: -12.309280395507812
    10. '10' → logprob: -12.309280395507812

Token 1436: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00012487331696320325
    2. '_' → logprob: -9.25012493133545
    3. '+' → logprob: -11.75012493133545
    4. '_car' → logprob: -12.00012493133545
    5. '```' → logprob: -13.12512493133545
    6. '==' → logprob: -13.12512493133545
    7. 'time' → logprob: -13.25012493133545
    8. 'Time' → logprob: -13.37512493133545
    9. '   ' → logprob: -13.50012493133545
    10. '_
' → logprob: -13.87512493133545

Token 1437: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0521551370620728
    2. ':' → logprob: -1.4271551370620728
    3. ' ==' → logprob: -1.9271551370620728
    4. ':
' → logprob: -2.177155017852783
    5. '       ' → logprob: -2.427155017852783
    6. ' and' → logprob: -2.927155017852783
    7. ',' → logprob: -5.177155017852783
    8. '   ' → logprob: -6.302155017852783
    9. '=' → logprob: -7.177155017852783
    10. 'and' → logprob: -7.677155017852783

Token 1438: ' add' (ID: 1147)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8873993158340454
    2. ' car' → logprob: -0.8873993158340454
    3. 'car' → logprob: -2.262399196624756
    4. '           ' → logprob: -3.637399196624756
    5. ' continue' → logprob: -4.012399196624756
    6. 'continue' → logprob: -4.762399196624756
    7. ' if' → logprob: -5.637399196624756
    8. ' while' → logprob: -5.762399196624756
    9. ' for' → logprob: -6.387399196624756
    10. 'while' → logprob: -6.387399196624756

Token 1439: ' to' (ID: 316)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.20185863971710205
    2. 'arr' → logprob: -3.2018585205078125
    3. 'waiting' → logprob: -3.2018585205078125
    4. ' car' → logprob: -3.4518585205078125
    5. ' arriving' → logprob: -3.9518585205078125
    6. '   ' → logprob: -3.9518585205078125
    7. ' waiting' → logprob: -4.0768585205078125
    8. '(car' → logprob: -5.4518585205078125
    9. '       ' → logprob: -5.5768585205078125
    10. '_car' → logprob: -6.3268585205078125

Token 1440: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0032397438772022724
    2. 'arr' → logprob: -6.003239631652832
    3. ' waiting' → logprob: -7.253239631652832
    4. 'arrival' → logprob: -10.753239631652832
    5. 'wait' → logprob: -11.003239631652832
    6. 'queue' → logprob: -11.753239631652832
    7. '```' → logprob: -12.878239631652832
    8. ' arriving' → logprob: -13.253239631652832
    9. '   ' → logprob: -13.628239631652832
    10. '
' → logprob: -13.628239631652832

Token 1441: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5788583159446716
    2. '       ' → logprob: -0.8288583159446716
    3. '        
' → logprob: -6.203858375549316
    4. '```' → logprob: -7.828858375549316
    5. '\n' → logprob: -9.203858375549316
    6. '   ' → logprob: -9.703858375549316
    7. '<|end|>' → logprob: -10.203858375549316
    8. '
' → logprob: -10.203858375549316
    9. ',' → logprob: -10.453858375549316
    10. '\
' → logprob: -10.453858375549316

Token 1442: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03048071637749672
    2. ' )' → logprob: -4.655480861663818
    3. ')
' → logprob: -5.155480861663818
    4. 'car' → logprob: -5.280480861663818
    5. '       ' → logprob: -5.655480861663818
    6. ' car' → logprob: -6.030480861663818
    7. '):
' → logprob: -7.155480861663818
    8. 'waiting' → logprob: -7.905480861663818
    9. '
' → logprob: -8.15548038482666
    10. ' waiting' → logprob: -8.28048038482666

Token 1443: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.26170286536216736
    2. ' continue' → logprob: -2.3867027759552
    3. 'park' → logprob: -2.5117027759552
    4. '
' → logprob: -3.7617027759552
    5. '```' → logprob: -4.011703014373779
    6. 'pass' → logprob: -4.761703014373779
    7. ' park' → logprob: -6.261703014373779
    8. 'arr' → logprob: -6.261703014373779
    9. ')' → logprob: -7.636703014373779
    10. 'try' → logprob: -7.761703014373779

Token 1444: ' park' (ID: 11796)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5526396632194519
    2. '   ' → logprob: -1.6776397228240967
    3. 'park' → logprob: -2.1776397228240967
    4. ':
' → logprob: -2.6776397228240967
    5. ' to' → logprob: -3.1776397228240967
    6. ':' → logprob: -4.802639484405518
    7. '       ' → logprob: -6.177639484405518
    8. 'parking' → logprob: -6.302639484405518
    9. '```' → logprob: -7.177639484405518
    10. ' ' → logprob: -7.552639484405518

Token 1445: ' immediately' (ID: 10731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05470995604991913
    2. '_car' → logprob: -3.8047099113464355
    3. 'car' → logprob: -4.4297099113464355
    4. ')
' → logprob: -5.3047099113464355
    5. '       ' → logprob: -5.5547099113464355
    6. '   ' → logprob: -6.3047099113464355
    7. '):' → logprob: -6.3047099113464355
    8. '(car' → logprob: -6.4297099113464355
    9. '):
' → logprob: -6.6797099113464355
    10. '())' → logprob: -7.4297099113464355

Token 1446: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0861915796995163
    2. ')
' → logprob: -3.0861916542053223
    3. '       ' → logprob: -3.3361916542053223
    4. '()' → logprob: -7.836191654205322
    5. ',' → logprob: -8.836191177368164
    6. ' if' → logprob: -8.961191177368164
    7. '):
' → logprob: -9.211191177368164
    8. '()
' → logprob: -9.211191177368164
    9. '())' → logprob: -9.586191177368164
    10. '.' → logprob: -10.086191177368164

Token 1447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01877148449420929
    2. '
' → logprob: -4.268771648406982
    3. '        
' → logprob: -6.018771648406982
    4. 'while' → logprob: -6.893771648406982
    5. '   ' → logprob: -8.143771171569824
    6. ' while' → logprob: -8.518771171569824
    7. '```' → logprob: -8.768771171569824
    8. '    
' → logprob: -9.768771171569824
    9. '	' → logprob: -9.893771171569824
    10. '  
' → logprob: -10.018771171569824

Token 1448: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1488327980041504
    2. '
' → logprob: -2.0238327980041504
    3. '   ' → logprob: -5.77383279800415
    4. '        
' → logprob: -6.64883279800415
    5. 'while' → logprob: -6.77383279800415
    6. ' while' → logprob: -7.89883279800415
    7. '```' → logprob: -9.148832321166992
    8. '    
' → logprob: -9.648832321166992
    9. '  
' → logprob: -11.648832321166992
    10. '<|end|>' → logprob: -12.023832321166992

Token 1449: ' iterate' (ID: 63166)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06035374850034714
    2. 'while' → logprob: -3.8103537559509277
    3. '   ' → logprob: -3.9353537559509277
    4. '
' → logprob: -4.185353755950928
    5. ' while' → logprob: -6.810353755950928
    6. '        
' → logprob: -8.31035327911377
    7. '```' → logprob: -8.56035327911377
    8. '    
' → logprob: -9.68535327911377
    9. 'current' → logprob: -10.06035327911377
    10. '           ' → logprob: -11.56035327911377

Token 1450: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.568413496017456
    2. '   ' → logprob: -1.193413496017456
    3. '
' → logprob: -2.193413496017456
    4. 'while' → logprob: -4.318413734436035
    5. ' while' → logprob: -6.318413734436035
    6. 'current' → logprob: -6.818413734436035
    7. '    
' → logprob: -7.068413734436035
    8. '        
' → logprob: -7.318413734436035
    9. '```' → logprob: -8.568413734436035
    10. ' current' → logprob: -8.568413734436035

Token 1451: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.385083943605423
    2. '
' → logprob: -1.7600839138031006
    3. '       ' → logprob: -2.1350839138031006
    4. 'while' → logprob: -4.76008415222168
    5. '    
' → logprob: -5.76008415222168
    6. '        
' → logprob: -6.13508415222168
    7. ' =' → logprob: -6.13508415222168
    8. '\n' → logprob: -6.13508415222168
    9. '\t' → logprob: -6.38508415222168
    10. ':
' → logprob: -6.38508415222168

Token 1452: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9623810658231378e-05
    2. '1' → logprob: -11.000020027160645
    3. ' ' → logprob: -13.375020027160645
    4. '+' → logprob: -14.625020027160645
    5. '+=' → logprob: -15.500020027160645
    6. '   ' → logprob: -15.750020027160645
    7. '
' → logprob: -15.750020027160645
    8. '```' → logprob: -15.750020027160645
    9. 'increments' → logprob: -16.000019073486328
    10. 'increment' → logprob: -16.125019073486328

Token 1453: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -14.000001907348633
    3. '1' → logprob: -14.250001907348633
    4. '```' → logprob: -15.875001907348633
    5. '+=' → logprob: -16.250001907348633
    6. '+' → logprob: -16.375001907348633
    7. ' ' → logprob: -16.500001907348633
    8. 'increments' → logprob: -16.875001907348633
    9. 'increment' → logprob: -17.625001907348633
    10. '0' → logprob: -18.375001907348633

Token 1454: ' min' (ID: 1349)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009129736572504044
    2. '       ' → logprob: -4.884129524230957
    3. 'while' → logprob: -7.384129524230957
    4. '        
' → logprob: -8.009129524230957
    5. '   ' → logprob: -8.259129524230957
    6. ' while' → logprob: -9.384129524230957
    7. '    
' → logprob: -9.634129524230957
    8. '```' → logprob: -9.759129524230957
    9. '\n' → logprob: -10.509129524230957
    10. '
' → logprob: -10.759129524230957

Token 1455: ' steps' (ID: 10331)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10809653997421265
    2. '       ' → logprob: -2.3580965995788574
    3. 'while' → logprob: -5.858096599578857
    4. '   ' → logprob: -6.483096599578857
    5. '        
' → logprob: -6.483096599578857
    6. '    
' → logprob: -7.483096599578857
    7. '\n' → logprob: -8.1080961227417
    8. ' while' → logprob: -8.1080961227417
    9. '  
' → logprob: -8.6080961227417
    10. ' 
' → logprob: -8.9830961227417

Token 1456: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7329251170158386
    2. '
' → logprob: -0.8579251170158386
    3. 'while' → logprob: -2.7329251766204834
    4. '   ' → logprob: -4.357924938201904
    5. ' while' → logprob: -4.357924938201904
    6. 'current' → logprob: -5.982924938201904
    7. '        
' → logprob: -6.982924938201904
    8. '    
' → logprob: -7.607924938201904
    9. '	while' → logprob: -8.857925415039062
    10. '```' → logprob: -8.982925415039062

Token 1457: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.19873540103435516
    2. 'arr' → logprob: -2.198735475540161
    3. 'car' → logprob: -3.573735475540161
    4. 'left' → logprob: -3.698735475540161
    5. 'parking' → logprob: -4.698735237121582
    6. ' all' → logprob: -5.948735237121582
    7. '   ' → logprob: -6.823735237121582
    8. 'current' → logprob: -6.948735237121582
    9. 'len' → logprob: -7.323735237121582
    10. 'waiting' → logprob: -7.573735237121582

Token 1458: ' cars' (ID: 13653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7286263704299927
    2. '_time' → logprob: -1.3536263704299927
    3. '_c' → logprob: -2.728626251220703
    4. '
' → logprob: -2.853626251220703
    5. '   ' → logprob: -3.228626251220703
    6. 'cars' → logprob: -3.478626251220703
    7. '_car' → logprob: -3.978626251220703
    8. 'time' → logprob: -4.478626251220703
    9. 'car' → logprob: -4.603626251220703
    10. '```' → logprob: -5.353626251220703

Token 1459: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38046732544898987
    2. '   ' → logprob: -1.2554672956466675
    3. ' +=' → logprob: -4.505467414855957
    4. '
' → logprob: -5.130467414855957
    5. ':' → logprob: -5.630467414855957
    6. '+=' → logprob: -6.130467414855957
    7. 'while' → logprob: -6.255467414855957
    8. ':
' → logprob: -6.755467414855957
    9. '\t' → logprob: -6.755467414855957
    10. ' <=' → logprob: -7.255467414855957

Token 1460: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7344566583633423
    2. '       ' → logprob: -0.8594566583633423
    3. 'while' → logprob: -2.9844565391540527
    4. '   ' → logprob: -3.3594565391540527
    5. ' while' → logprob: -4.734456539154053
    6. '        
' → logprob: -7.109456539154053
    7. '    
' → logprob: -7.359456539154053
    8. '	while' → logprob: -8.234457015991211
    9. '```' → logprob: -8.484457015991211
    10. 'current' → logprob: -8.609457015991211

Token 1461: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9825088977813721
    2. '       ' → logprob: -1.107508897781372
    3. '
' → logprob: -1.357508897781372
    4. 'while' → logprob: -3.732508897781372
    5. ' while' → logprob: -5.107508659362793
    6. '    
' → logprob: -5.607508659362793
    7. '        
' → logprob: -5.857508659362793
    8. '```' → logprob: -6.857508659362793
    9. 'current' → logprob: -8.857508659362793
    10. '	while' → logprob: -9.732508659362793

Token 1462: ' max' (ID: 2999)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8158901333808899
    2. '       ' → logprob: -0.9408901333808899
    3. '   ' → logprob: -2.690890073776245
    4. '
' → logprob: -2.815890073776245
    5. ' while' → logprob: -3.440890073776245
    6. 'current' → logprob: -5.315890312194824
    7. '```' → logprob: -7.065890312194824
    8. '        
' → logprob: -7.440890312194824
    9. '    
' → logprob: -7.565890312194824
    10. 'time' → logprob: -7.815890312194824

Token 1463: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03419594466686249
    2. '_' → logprob: -4.034195899963379
    3. '(' → logprob: -4.534195899963379
    4. '_car' → logprob: -5.659195899963379
    5. 'time' → logprob: -7.784195899963379
    6. '(
' → logprob: -8.034195899963379
    7. '_arr' → logprob: -8.409195899963379
    8. 'Time' → logprob: -8.784195899963379
    9. '(_' → logprob: -8.784195899963379
    10. '_c' → logprob: -9.409195899963379

Token 1464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06297781318426132
    2. '=' → logprob: -3.1879777908325195
    3. ' +=' → logprob: -4.1879777908325195
    4. ' +' → logprob: -6.0629777908325195
    5. '+=' → logprob: -6.5629777908325195
    6. '+' → logprob: -7.1879777908325195
    7. '   ' → logprob: -9.56297779083252
    8. ' ' → logprob: -12.18797779083252
    9. '```' → logprob: -12.18797779083252
    10. ' >=' → logprob: -12.68797779083252

Token 1465: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3118807077407837
    2. '10' → logprob: -1.5618807077407837
    3. '(' → logprob: -1.6868807077407837
    4. 'n' → logprob: -2.061880588531494
    5. 'max' → logprob: -2.561880588531494
    6. '(n' → logprob: -3.311880588531494
    7. 'times' → logprob: -3.311880588531494
    8. '(times' → logprob: -4.061880588531494
    9. '(max' → logprob: -4.311880588531494
    10. ' (' → logprob: -5.311880588531494

Token 1466: '150' (ID: 5215)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6183876395225525
    2. '(' → logprob: -1.7433876991271973
    3. 'max' → logprob: -2.1183876991271973
    4. '(max' → logprob: -3.2433876991271973
    5. 'times' → logprob: -3.4933876991271973
    6. '(times' → logprob: -3.6183876991271973
    7. '10' → logprob: -3.7433876991271973
    8. '(n' → logprob: -3.8683876991271973
    9. 'n' → logprob: -4.868387699127197
    10. '200' → logprob: -5.243387699127197

Token 1467: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07169272005558014
    2. ':
' → logprob: -3.821692705154419
    3. '0' → logprob: -4.071692943572998
    4. ':' → logprob: -4.571692943572998
    5. '   ' → logprob: -4.946692943572998
    6. '       ' → logprob: -5.446692943572998
    7. '    
' → logprob: -6.196692943572998
    8. '+' → logprob: -7.321692943572998
    9. 'while' → logprob: -7.321692943572998
    10. '+
' → logprob: -7.446692943572998

Token 1468: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013752414844930172
    2. 'while' → logprob: -4.638752460479736
    3. ' while' → logprob: -6.763752460479736
    4. '   ' → logprob: -7.138752460479736
    5. '       ' → logprob: -7.138752460479736
    6. '<|end|>' → logprob: -8.513751983642578
    7. '    
' → logprob: -8.638751983642578
    8. ' 
' → logprob: -8.763751983642578
    9. '+
' → logprob: -8.888751983642578
    10. ':
' → logprob: -9.513751983642578

Token 1469: ' safe' (ID: 7703)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06080678850412369
    2. 'current' → logprob: -4.060806751251221
    3. ' while' → logprob: -4.435806751251221
    4. '       ' → logprob: -4.560806751251221
    5. '   ' → logprob: -5.310806751251221
    6. 'car' → logprob: -5.435806751251221
    7. 'max' → logprob: -5.685806751251221
    8. '
' → logprob: -6.060806751251221
    9. '0' → logprob: -6.185806751251221
    10. '10' → logprob: -6.935806751251221

Token 1470: ' upper' (ID: 13057)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00833194050937891
    2. '       ' → logprob: -5.383331775665283
    3. '   ' → logprob: -6.008331775665283
    4. '    
' → logprob: -8.008332252502441
    5. '        
' → logprob: -8.258332252502441
    6. '```' → logprob: -8.383332252502441
    7. 'while' → logprob: -9.133332252502441
    8. ':' → logprob: -9.633332252502441
    9. ':
' → logprob: -9.883332252502441
    10. '
' → logprob: -10.258332252502441

Token 1471: ' limit' (ID: 5967)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.7333797812461853
    2. '_limit' → logprob: -1.48337984085083
    3. 'bound' → logprob: -1.98337984085083
    4. 'limit' → logprob: -2.48337984085083
    5. '
' → logprob: -3.73337984085083
    6. '_time' → logprob: -4.10837984085083
    7. ' bound' → logprob: -4.85837984085083
    8. '   ' → logprob: -5.23337984085083
    9. ' limit' → logprob: -5.60837984085083
    10. 'for' → logprob: -5.60837984085083

Token 1472: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27470919489860535
    2. '       ' → logprob: -2.0247092247009277
    3. '   ' → logprob: -3.0247092247009277
    4. 'while' → logprob: -3.1497092247009277
    5. '```' → logprob: -4.899709224700928
    6. 'current' → logprob: -5.274709224700928
    7. ' while' → logprob: -6.024709224700928
    8. '    
' → logprob: -7.774709224700928
    9. '        
' → logprob: -7.774709224700928
    10. 'for' → logprob: -8.89970874786377

Token 1473: ' as' (ID: 472)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4801330268383026
    2. 'while' → logprob: -1.730133056640625
    3. ' current' → logprob: -2.730133056640625
    4. '   ' → logprob: -2.855133056640625
    5. 'current' → logprob: -3.855133056640625
    6. '       ' → logprob: -3.855133056640625
    7. '
' → logprob: -4.105133056640625
    8. 'time' → logprob: -4.980133056640625
    9. ' time' → logprob: -5.230133056640625
    10. ' for' → logprob: -5.480133056640625

Token 1474: ' max' (ID: 2999)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -1.0891754627227783
    2. 'car' → logprob: -1.5891754627227783
    3. 'times' → logprob: -1.7141754627227783
    4. 'n' → logprob: -3.0891754627227783
    5. ' True' → logprob: -3.0891754627227783
    6. ' car' → logprob: -3.5891754627227783
    7. 'max' → logprob: -3.9641754627227783
    8. ' n' → logprob: -4.089175224304199
    9. 'range' → logprob: -4.089175224304199
    10. 'cars' → logprob: -4.339175224304199

Token 1475: ' times' (ID: 4238)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6546898484230042
    2. 'car' → logprob: -1.5296897888183594
    3. 'time' → logprob: -2.0296897888183594
    4. '   ' → logprob: -2.7796897888183594
    5. 'current' → logprob: -4.279689788818359
    6. '_car' → logprob: -4.904689788818359
    7. '       ' → logprob: -5.154689788818359
    8. '=' → logprob: -5.154689788818359
    9. 'for' → logprob: -5.154689788818359
    10. 'cars' → logprob: -5.654689788818359

Token 1476: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9365106225013733
    2. '       ' → logprob: -1.3115105628967285
    3. '+=' → logprob: -2.0615105628967285
    4. ' =' → logprob: -2.5615105628967285
    5. '   ' → logprob: -3.4365105628967285
    6. '+' → logprob: -3.4365105628967285
    7. '
' → logprob: -3.5615105628967285
    8. ' +=' → logprob: -3.6865105628967285
    9. 'while' → logprob: -5.1865105628967285
    10. 'for' → logprob: -5.5615105628967285

Token 1477: '120' (ID: 6106)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02492000348865986
    2. '+=' → logprob: -3.8999199867248535
    3. '+' → logprob: -6.6499199867248535
    4. '>' → logprob: -7.5249199867248535
    5. ' =' → logprob: -7.8999199867248535
    6. '=
' → logprob: -7.8999199867248535
    7. '   ' → logprob: -8.399920463562012
    8. 'is' → logprob: -8.399920463562012
    9. '#' → logprob: -8.774920463562012
    10. '       ' → logprob: -8.899920463562012

Token 1478: '*' (ID: 9)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01228300016373396
    2. '       ' → logprob: -5.387282848358154
    3. 'while' → logprob: -5.762282848358154
    4. '   ' → logprob: -6.637282848358154
    5. ':
' → logprob: -7.387282848358154
    6. '```' → logprob: -7.512282848358154
    7. '        
' → logprob: -7.887282848358154
    8. '    
' → logprob: -8.137283325195312
    9. ' while' → logprob: -8.637283325195312
    10. ':' → logprob: -8.637283325195312

Token 1479: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10726986825466156
    2. '60' → logprob: -2.732269763946533
    3. 'car' → logprob: -4.857269763946533
    4. '20' → logprob: -5.482269763946533
    5. '```' → logprob: -5.732269763946533
    6. '100' → logprob: -5.982269763946533
    7. '=' → logprob: -6.232269763946533
    8. '2' → logprob: -6.357269763946533
    9. ')' → logprob: -6.482269763946533
    10. '30' → logprob: -6.482269763946533

Token 1480: ' cars' (ID: 13653)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18135271966457367
    2. '       ' → logprob: -2.4313526153564453
    3. '   ' → logprob: -2.9313526153564453
    4. 'while' → logprob: -4.306352615356445
    5. 'current' → logprob: -6.056352615356445
    6. 'for' → logprob: -6.306352615356445
    7. '    
' → logprob: -6.431352615356445
    8. '        
' → logprob: -6.556352615356445
    9. '```' → logprob: -6.931352615356445
    10. ' while' → logprob: -7.556352615356445

Token 1481: ' ~' (ID: 6574)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5843032598495483
    2. '       ' → logprob: -0.9593032598495483
    3. '   ' → logprob: -2.959303379058838
    4. '        
' → logprob: -6.209303379058838
    5. '```' → logprob: -6.459303379058838
    6. 'while' → logprob: -6.959303379058838
    7. '    
' → logprob: -7.084303379058838
    8. 'for' → logprob: -7.709303379058838
    9. 'current' → logprob: -7.959303379058838
    10. ':
' → logprob: -8.20930290222168

Token 1482: '120' (ID: 6106)
  Prédit: '150'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '150' → logprob: -0.13256239891052246
    2. '200' → logprob: -3.6325623989105225
    3. '100' → logprob: -3.7575623989105225
    4. '=' → logprob: -4.007562637329102
    5. 'max' → logprob: -4.132562637329102
    6. '300' → logprob: -4.507562637329102
    7. 'n' → logprob: -5.632562637329102
    8. '120' → logprob: -5.757562637329102
    9. '500' → logprob: -5.882562637329102
    10. 'car' → logprob: -6.007562637329102

Token 1483: '0' (ID: 15)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21539469063282013
    2. '
' → logprob: -2.2153947353363037
    3. 'while' → logprob: -2.8403947353363037
    4. '   ' → logprob: -4.215394496917725
    5. ' while' → logprob: -5.215394496917725
    6. '```' → logprob: -6.215394496917725
    7. 'for' → logprob: -6.340394496917725
    8. '        
' → logprob: -7.715394496917725
    9. ' for' → logprob: -7.840394496917725
    10. 'current' → logprob: -8.090394973754883

Token 1484: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05739203467965126
    2. '       ' → logprob: -3.432392120361328
    3. 'while' → logprob: -4.682392120361328
    4. '   ' → logprob: -4.932392120361328
    5. 'current' → logprob: -6.432392120361328
    6. '```' → logprob: -6.807392120361328
    7. '    
' → logprob: -7.182392120361328
    8. '\n' → logprob: -7.182392120361328
    9. '        
' → logprob: -7.182392120361328
    10. ' while' → logprob: -7.182392120361328

Token 1485: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11478088796138763
    2. '   ' → logprob: -2.739780902862549
    3. 'while' → logprob: -3.739780902862549
    4. '       ' → logprob: -4.989780902862549
    5. '    
' → logprob: -5.739780902862549
    6. '\n' → logprob: -5.864780902862549
    7. 'current' → logprob: -6.239780902862549
    8. ' while' → logprob: -6.864780902862549
    9. '```' → logprob: -6.864780902862549
    10. ':
' → logprob: -6.989780902862549

Token 1486: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6249539852142334
    2. 'while' (adapté à ' while') → logprob: -1.3749539852142334
    3. '       ' → logprob: -1.8749539852142334
    4. '
' → logprob: -3.6249539852142334
    5. 'for' → logprob: -3.9999539852142334
    6. 'current' → logprob: -4.8749542236328125
    7. ' while' → logprob: -5.8749542236328125
    8. '```' → logprob: -6.4999542236328125
    9. 'time' → logprob: -7.2499542236328125
    10. ' for' → logprob: -7.3749542236328125

Token 1487: ' len' (ID: 4631)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3056165277957916
    2. ' current' → logprob: -2.305616617202759
    3. 'time' → logprob: -3.055616617202759
    4. 'car' → logprob: -3.305616617202759
    5. 'True' → logprob: -3.430616617202759
    6. 'arr' → logprob: -3.680616617202759
    7. ' True' → logprob: -4.93061637878418
    8. 'left' → logprob: -5.30561637878418
    9. ' time' → logprob: -5.55561637878418
    10. 'all' → logprob: -5.68061637878418

Token 1488: '(output' (ID: 22485)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.029114553704857826
    2. 'waiting' → logprob: -4.529114723205566
    3. '(' → logprob: -4.654114723205566
    4. ' waiting' → logprob: -5.279114723205566
    5. '(output' → logprob: -6.029114723205566
    6. ' (' → logprob: -7.279114723205566
    7. '(w' → logprob: -9.904114723205566
    8. '_wait' → logprob: -11.029114723205566
    9. '(queue' → logprob: -11.279114723205566
    10. 'wait' → logprob: -11.404114723205566

Token 1489: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01301233284175396
    2. ')<' → logprob: -4.388012409210205
    3. ')!=' → logprob: -8.388011932373047
    4. ')<=' → logprob: -8.513011932373047
    5. ')==' → logprob: -10.388011932373047
    6. '```' → logprob: -11.388011932373047
    7. '[' → logprob: -11.888011932373047
    8. '<' → logprob: -12.388011932373047
    9. ' )' → logprob: -12.638011932373047
    10. '   ' → logprob: -12.888011932373047

Token 1490: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14654666185379028
    2. 'total' → logprob: -2.0215466022491455
    3. 'left' → logprob: -5.771546840667725
    4. 'all' → logprob: -8.521546363830566
    5. 'len' → logprob: -8.646546363830566
    6. '2' → logprob: -9.021546363830566
    7. 'sum' → logprob: -9.146546363830566
    8. 'times' → logprob: -9.521546363830566
    9. 'leave' → logprob: -10.396546363830566
    10. ' n' → logprob: -11.896546363830566

Token 1491: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6444104313850403
    2. ' or' → logprob: -1.0194103717803955
    3. ' and' → logprob: -2.3944103717803955
    4. ':' → logprob: -3.8944103717803955
    5. '       ' → logprob: -6.769410610198975
    6. 'or' → logprob: -7.394410610198975
    7. 'and' → logprob: -7.644410610198975
    8. '   ' → logprob: -8.269410133361816
    9. '           ' → logprob: -9.519410133361816
    10. ' :
' → logprob: -11.019410133361816

Token 1492: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7307494282722473
    2. '       ' → logprob: -0.7307494282722473
    3. '   ' → logprob: -3.9807493686676025
    4. '    
' → logprob: -4.980749607086182
    5. 'current' → logprob: -5.230749607086182
    6. '        
' → logprob: -5.980749607086182
    7. ' current' → logprob: -6.730749607086182
    8. '```' → logprob: -6.855749607086182
    9. '  
' → logprob: -7.730749607086182
    10. '
' → logprob: -8.730749130249023

Token 1493: ' current' (ID: 2208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21690163016319275
    2. 'for' → logprob: -2.2169015407562256
    3. '           ' → logprob: -2.4669015407562256
    4. '       ' → logprob: -7.966901779174805
    5. 'while' → logprob: -8.591901779174805
    6. 'current' (adapté à ' current') → logprob: -8.841901779174805
    7. '   ' → logprob: -8.841901779174805
    8. 'le' → logprob: -9.091901779174805
    9. '
' → logprob: -10.091901779174805
    10. 'car' → logprob: -10.216901779174805

Token 1494: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00017886889690998942
    2. '_line' → logprob: -9.875179290771484
    3. '_' → logprob: -10.250179290771484
    4. '_token' → logprob: -10.375179290771484
    5. ')_' → logprob: -10.500179290771484
    6. '}_' → logprob: -11.750179290771484
    7. '_tokens' → logprob: -11.750179290771484
    8. ' _' → logprob: -12.125179290771484
    9. ')' → logprob: -12.750179290771484
    10. '```' → logprob: -13.375179290771484

Token 1495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7850887179374695
    2. '+=' → logprob: -1.0350887775421143
    3. ' +=' → logprob: -1.7850887775421143
    4. ' =' → logprob: -4.285088539123535
    5. '==' → logprob: -6.035088539123535
    6. ')' → logprob: -6.910088539123535
    7. 'import' → logprob: -7.535088539123535
    8. '
' → logprob: -7.785088539123535
    9. '           ' → logprob: -7.910088539123535
    10. '   ' → logprob: -8.035088539123535

Token 1496: ' arriving' (ID: 53419)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1586744636297226
    2. 'arr' → logprob: -2.033674478530884
    3. '(car' → logprob: -4.908674240112305
    4. 'current' → logprob: -5.783674240112305
    5. 'waiting' → logprob: -6.158674240112305
    6. '(arr' → logprob: -7.158674240112305
    7. ' car' → logprob: -7.658674240112305
    8. '(' → logprob: -7.908674240112305
    9. 'time' → logprob: -8.158674240112305
    10. 'arrival' → logprob: -8.283674240112305

Token 1497: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.014348831959068775
    2. '*' → logprob: -4.264348983764648
    3. 'cars' → logprob: -9.889348983764648
    4. 'car' → logprob: -10.139348983764648
    5. ' *' → logprob: -10.139348983764648
    6. '   ' → logprob: -11.139348983764648
    7. '*_' → logprob: -11.764348983764648
    8. ' ' → logprob: -11.764348983764648
    9. '_' → logprob: -11.889348983764648
    10. 'c' → logprob: -12.264348983764648

Token 1498: 'ars' (ID: 1904)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.003031786298379302
    2. '0' → logprob: -6.3780317306518555
    3. '*' → logprob: -7.3780317306518555
    4. '10' → logprob: -8.753031730651855
    5. '+' → logprob: -9.003031730651855
    6. 'ars' → logprob: -9.753031730651855
    7. '_' → logprob: -9.753031730651855
    8. 'r' → logprob: -9.878031730651855
    9. 'dx' → logprob: -9.878031730651855
    10. '   ' → logprob: -10.128031730651855

Token 1499: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0019351851660758257
    2. ' *' → logprob: -6.251935005187988
    3. '```' → logprob: -13.126935005187988
    4. '+' → logprob: -14.126935005187988
    5. '
' → logprob: -14.876935005187988
    6. '   ' → logprob: -14.876935005187988
    7. '()*' → logprob: -14.876935005187988
    8. '**' → logprob: -14.876935005187988
    9. '<|end|>' → logprob: -14.876935005187988
    10. '*object' → logprob: -15.501935005187988

Token 1500: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.250015258789062
    3. '```' → logprob: -13.500015258789062
    4. '+' → logprob: -15.625015258789062
    5. '
' → logprob: -15.750015258789062
    6. '=' → logprob: -15.875015258789062
    7. '`' → logprob: -16.250015258789062
    8. '1' → logprob: -16.500015258789062
    9. 'def' → logprob: -17.250015258789062
    10. '(' → logprob: -17.375015258789062

Token 1501: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3464982807636261
    2. '
' → logprob: -1.5964982509613037
    3. '            
' → logprob: -2.9714982509613037
    4. 'while' → logprob: -4.721498489379883
    5. '<|end|>' → logprob: -5.096498489379883
    6. 'if' → logprob: -5.221498489379883
    7. 'for' → logprob: -5.221498489379883
    8. '#' → logprob: -5.346498489379883
    9. ' while' → logprob: -6.971498489379883
    10. ' if' → logprob: -6.971498489379883

Token 1502: ' arriving' (ID: 53419)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0071184877306222916
    2. ' arriving' → logprob: -5.0071187019348145
    3. 'current' → logprob: -8.132118225097656
    4. ' current' → logprob: -9.507118225097656
    5. ' arr' → logprob: -11.632118225097656
    6. 'car' → logprob: -11.632118225097656
    7. 'arrival' → logprob: -12.257118225097656
    8. 'waiting' → logprob: -12.382118225097656
    9. '(arr' → logprob: -13.132118225097656
    10. 'len' → logprob: -13.882118225097656

Token 1503: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005004895501770079
    2. '_' → logprob: -8.375500679016113
    3. '<' → logprob: -8.750500679016113
    4. ' <' → logprob: -10.625500679016113
    5. 'cars' → logprob: -10.750500679016113
    6. '_arr' → logprob: -11.250500679016113
    7. 'car' → logprob: -11.500500679016113
    8. '_car' → logprob: -11.875500679016113
    9. '<_' → logprob: -12.125500679016113
    10. '_ids' → logprob: -12.250500679016113

Token 1504: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.6551560163497925
    2. 'ar' → logprob: -0.7801560163497925
    3. '==' → logprob: -4.655156135559082
    4. '<' → logprob: -4.780156135559082
    5. 'arr' → logprob: -6.905156135559082
    6. '<=' → logprob: -7.655156135559082
    7. '_' → logprob: -8.030156135559082
    8. '```' → logprob: -8.280156135559082
    9. 'aras' → logprob: -8.280156135559082
    10. ' ==' → logprob: -8.405156135559082

Token 1505: '<n' (ID: 33872)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25462061166763306
    2. ' <' → logprob: -1.5046205520629883
    3. '<len' → logprob: -6.629620552062988
    4. '<=' → logprob: -8.004620552062988
    5. '<n' → logprob: -8.129620552062988
    6. '<num' → logprob: -8.129620552062988
    7. ' <=' → logprob: -8.504620552062988
    8. '<|end|>' → logprob: -9.754620552062988
    9. '<size' → logprob: -10.129620552062988
    10. '<int' → logprob: -11.004620552062988

Token 1506: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12740394473075867
    2. ' else' → logprob: -2.127403974533081
    3. '           ' → logprob: -7.752403736114502
    4. ' or' → logprob: -10.87740421295166
    5. 'elif' → logprob: -11.37740421295166
    6. 'or' → logprob: -12.37740421295166
    7. '            
' → logprob: -12.62740421295166
    8. '               ' → logprob: -12.87740421295166
    9. '
' → logprob: -13.50240421295166
    10. 'and' → logprob: -14.00240421295166

Token 1507: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08532866090536118
    2. 'current' → logprob: -2.8353285789489746
    3. 'time' → logprob: -5.210328578948975
    4. 'None' → logprob: -5.335328578948975
    5. 'output' → logprob: -5.585328578948975
    6. '150' → logprob: -5.960328578948975
    7. 'float' → logprob: -6.335328578948975
    8. '100' → logprob: -6.835328578948975
    9. '10' → logprob: -6.960328578948975
    10. 'waiting' → logprob: -7.460328578948975

Token 1508: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.512236498361744e-07
    2. 'time' → logprob: -15.375000953674316
    3. 'Time' → logprob: -16.625
    4. '+' → logprob: -16.875
    5. '_times' → logprob: -18.25
    6. '_TIME' → logprob: -18.5
    7. '_' → logprob: -19.75
    8. '_line' → logprob: -19.75
    9. '_code' → logprob: -19.875
    10. ')' → logprob: -20.0

Token 1509: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39452114701271057
    2. '           ' → logprob: -2.1445212364196777
    3. ' +' → logprob: -2.2695212364196777
    4. '
' → logprob: -2.6445212364196777
    5. '<|end|>' → logprob: -4.019521236419678
    6. '<|end|>' → logprob: -5.394521236419678
    7. ' +=' → logprob: -5.894521236419678
    8. '+=' → logprob: -6.144521236419678
    9. '            
' → logprob: -6.269521236419678
    10. '       ' → logprob: -6.894521236419678

Token 1510: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003978992172051221
    2. '1' → logprob: -7.875397682189941
    3. '0' → logprob: -11.125397682189941
    4. ' ' → logprob: -13.625397682189941
    5. '
' → logprob: -14.000397682189941
    6. '```' → logprob: -14.375397682189941
    7. '   ' → logprob: -16.250398635864258
    8. '１０' → logprob: -16.937898635864258
    9. '``' → logprob: -17.500398635864258
    10. '۱۰' → logprob: -17.500398635864258

Token 1511: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0217075664550066
    2. '
' → logprob: -4.521707534790039
    3. '            
' → logprob: -5.146707534790039
    4. '<|end|>' → logprob: -6.146707534790039
    5. ',' → logprob: -7.146707534790039
    6. '<|end|>' → logprob: -8.021707534790039
    7. '  
' → logprob: -8.521707534790039
    8. '    
' → logprob: -8.771707534790039
    9. ')' → logprob: -9.146707534790039
    10. '#' → logprob: -9.146707534790039

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025838283821940422
    2. '            
' → logprob: -4.775838375091553
    3. '```' → logprob: -4.900838375091553
    4. '       ' → logprob: -6.400838375091553
    5. '
' → logprob: -6.525838375091553
    6. 'for' → logprob: -6.650838375091553
    7. 'while' → logprob: -7.025838375091553
    8. 'if' → logprob: -7.275838375091553
    9. '<|end|>' → logprob: -7.525838375091553
    10. ' for' → logprob: -7.525838375091553

Token 1513: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4385313391685486
    2. 'for' → logprob: -1.5635313987731934
    3. '           ' → logprob: -2.6885313987731934
    4. 'if' → logprob: -2.6885313987731934
    5. '#' (adapté à ' #') → logprob: -4.938531398773193
    6. '```' → logprob: -6.313531398773193
    7. ' while' → logprob: -8.063530921936035
    8. '       ' → logprob: -8.563530921936035
    9. ' for' → logprob: -9.938530921936035
    10. '            
' → logprob: -9.938530921936035

Token 1514: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7747547030448914
    2. 'while' → logprob: -0.7747547030448914
    3. '#' → logprob: -2.899754762649536
    4. 'if' → logprob: -3.774754762649536
    5. '           ' → logprob: -8.774754524230957
    6. '       ' → logprob: -9.524754524230957
    7. 'arr' → logprob: -10.024754524230957
    8. 'cars' → logprob: -10.649754524230957
    9. '```' → logprob: -10.649754524230957
    10. 'l' → logprob: -11.024754524230957

Token 1515: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21818508207798004
    2. '           ' → logprob: -1.8431850671768188
    3. '#' → logprob: -3.8431851863861084
    4. '
' → logprob: -4.343184947967529
    5. ' for' → logprob: -6.593184947967529
    6. 'spots' → logprob: -6.843184947967529
    7. '       ' → logprob: -7.968184947967529
    8. '            
' → logprob: -9.218185424804688
    9. '```' → logprob: -9.593185424804688
    10. '   ' → logprob: -9.593185424804688

Token 1516: ' remove' (ID: 6234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01111726462841034
    2. '#' → logprob: -4.511117458343506
    3. '           ' → logprob: -10.011116981506348
    4. '
' → logprob: -11.886116981506348
    5. ' for' → logprob: -12.011116981506348
    6. 'remove' → logprob: -12.511116981506348
    7. '       ' → logprob: -12.886116981506348
    8. 'to' → logprob: -13.511116981506348
    9. 'removed' → logprob: -13.886116981506348
    10. '            
' → logprob: -14.386116981506348

Token 1517: ' cars' (ID: 13653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041403014212846756
    2. ' for' → logprob: -3.79140305519104
    3. 'cars' → logprob: -4.166402816772461
    4. 'depart' → logprob: -7.541402816772461
    5. 'le' → logprob: -7.541402816772461
    6. '```' → logprob: -7.666402816772461
    7. 'to' → logprob: -8.541402816772461
    8. 'car' → logprob: -8.541402816772461
    9. 'done' → logprob: -8.916402816772461
    10. ' cars' → logprob: -9.041402816772461

Token 1518: ' leaving' (ID: 15021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28707870841026306
    2. 'to' → logprob: -2.287078619003296
    3. 'in' → logprob: -3.537078619003296
    4. 'from' → logprob: -3.537078619003296
    5. ' for' → logprob: -3.912078619003296
    6. '_to' → logprob: -4.537078857421875
    7. ' =' → logprob: -4.662078857421875
    8. 'at' → logprob: -4.787078857421875
    9. 'that' → logprob: -4.912078857421875
    10. '=' → logprob: -5.162078857421875

Token 1519: ' now' (ID: 1954)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09010756760835648
    2. '           ' → logprob: -2.8401076793670654
    3. ' for' → logprob: -3.5901076793670654
    4. 'from' → logprob: -10.215107917785645
    5. 'le' → logprob: -10.465107917785645
    6. '       ' → logprob: -10.965107917785645
    7. '```' → logprob: -11.090107917785645
    8. '[' → logprob: -11.840107917785645
    9. '   ' → logprob: -11.965107917785645
    10. 'spots' → logprob: -12.340107917785645

Token 1520: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11814692616462708
    2. 'for' → logprob: -2.3681468963623047
    3. ' for' → logprob: -4.118146896362305
    4. '
' → logprob: -7.243146896362305
    5. '       ' → logprob: -8.368146896362305
    6. '   ' → logprob: -8.493146896362305
    7. '            
' → logprob: -8.743146896362305
    8. 'removed' → logprob: -9.993146896362305
    9. ',' → logprob: -10.368146896362305
    10. '```' → logprob: -10.993146896362305

Token 1521: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00039730319986119866
    2. ' for' → logprob: -8.125397682189941
    3. 'True' → logprob: -9.750397682189941
    4. '   ' → logprob: -11.500397682189941
    5. '       ' → logprob: -11.625397682189941
    6. '           ' → logprob: -12.250397682189941
    7. '
' → logprob: -12.250397682189941
    8. 'removed' → logprob: -12.375397682189941
    9. ')' → logprob: -12.500397682189941
    10. '```' → logprob: -13.500397682189941

Token 1522: ' any' (ID: 1062)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.4084194004535675
    2. 'current' → logprob: -1.9084193706512451
    3. 'any' → logprob: -2.908419370651245
    4. ' spots' → logprob: -3.158419370651245
    5. 'spot' → logprob: -3.283419370651245
    6. 'lower' → logprob: -4.158419609069824
    7. ' current' → logprob: -5.033419609069824
    8. 'all' → logprob: -5.283419609069824
    9. 'slots' → logprob: -5.533419609069824
    10. ' any' → logprob: -5.783419609069824

Token 1523: '),' (ID: 936)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18489773571491241
    2. ')
' → logprob: -2.3098976612091064
    3. ')' → logprob: -2.6848976612091064
    4. ' for' → logprob: -7.4348978996276855
    5. 'for' → logprob: -7.8098978996276855
    6. ',' → logprob: -8.809897422790527
    7. '):
' → logprob: -9.934897422790527
    8. '       ' → logprob: -10.809897422790527
    9. '),' → logprob: -10.809897422790527
    10. ')
' → logprob: -11.059897422790527

Token 1524: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04463259130716324
    2. '           ' → logprob: -3.16963267326355
    3. ' for' → logprob: -6.544632434844971
    4. 'removed' → logprob: -9.919632911682129
    5. 'le' → logprob: -10.169632911682129
    6. '       ' → logprob: -10.419632911682129
    7. 'found' → logprob: -11.294632911682129
    8. '   ' → logprob: -11.669632911682129
    9. '            
' → logprob: -11.669632911682129
    10. '#' → logprob: -11.669632911682129

Token 1525: ' spots' (ID: 25522)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6115044951438904
    2. '=' → logprob: -1.3615045547485352
    3. '           ' → logprob: -1.7365045547485352
    4. 'in' → logprob: -4.986504554748535
    5. ' for' → logprob: -5.361504554748535
    6. 'of' → logprob: -5.611504554748535
    7. '```' → logprob: -6.361504554748535
    8. '       ' → logprob: -6.611504554748535
    9. ' =' → logprob: -6.736504554748535
    10. 'lower' → logprob: -6.861504554748535

Token 1526: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037764303386211395
    2. ' for' → logprob: -3.537764310836792
    3. 'for' → logprob: -5.537764072418213
    4. '
' → logprob: -6.162764072418213
    5. '       ' → logprob: -7.037764072418213
    6. '   ' → logprob: -8.537764549255371
    7. '            
' → logprob: -8.537764549255371
    8. '```' → logprob: -8.537764549255371
    9. ',' → logprob: -9.037764549255371
    10. '<|end|>' → logprob: -9.787764549255371

Token 1527: ' number' (ID: 2086)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12313979119062424
    2. '0' → logprob: -2.9981398582458496
    3. 'spot' → logprob: -3.6231398582458496
    4. 'lambda' → logprob: -3.7481398582458496
    5. 'i' → logprob: -4.87313985824585
    6. 'lower' → logprob: -5.74813985824585
    7. 'index' → logprob: -5.74813985824585
    8. 'enumer' → logprob: -7.99813985824585
    9. 'for' → logprob: -8.123139381408691
    10. '```' → logprob: -8.248139381408691

Token 1528: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.686347246170044
    2. '       ' → logprob: -1.061347246170044
    3. 'for' → logprob: -1.936347246170044
    4. '
' → logprob: -5.936347007751465
    5. '```' → logprob: -6.936347007751465
    6. ' for' → logprob: -7.436347007751465
    7. '=' → logprob: -7.811347007751465
    8. '               ' → logprob: -8.061347007751465
    9. 'spots' → logprob: -8.186347007751465
    10. '[' → logprob: -8.561347007751465

Token 1529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010561843402683735
    2. ' for' → logprob: -5.135561943054199
    3. '       ' → logprob: -6.635561943054199
    4. 'for' → logprob: -6.635561943054199
    5. '```' → logprob: -6.635561943054199
    6. '
' → logprob: -7.635561943054199
    7. '   ' → logprob: -9.1355619430542
    8. '            
' → logprob: -10.0105619430542
    9. ',' → logprob: -11.2605619430542
    10. '``' → logprob: -11.8855619430542

Token 1530: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2634110748767853
    2. '           ' → logprob: -1.513411045074463
    3. ' for' → logprob: -4.513411045074463
    4. '```' → logprob: -8.638411521911621
    5. '       ' → logprob: -8.763411521911621
    6. 'spots' → logprob: -10.138411521911621
    7. '            
' → logprob: -10.763411521911621
    8. '   ' → logprob: -10.763411521911621
    9. '
' → logprob: -11.763411521911621
    10. '	for' → logprob: -11.888411521911621

Token 1531: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036488138139247894
    2. '           ' → logprob: -3.5364880561828613
    3. 'le' → logprob: -5.161488056182861
    4. 'depart' → logprob: -7.786488056182861
    5. 'to' → logprob: -8.53648853302002
    6. 'leave' → logprob: -8.53648853302002
    7. '       ' → logprob: -10.16148853302002
    8. 'left' → logprob: -11.03648853302002
    9. 'spots' → logprob: -11.16148853302002
    10. '```' → logprob: -11.41148853302002

Token 1532: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013392560184001923
    2. ' for' → logprob: -4.388392448425293
    3. '
' → logprob: -7.888392448425293
    4. '#' → logprob: -8.388392448425293
    5. '```' → logprob: -8.888392448425293
    6. '   ' → logprob: -10.013392448425293
    7. 'True' → logprob: -10.638392448425293
    8. '           ' → logprob: -10.638392448425293
    9. '            
' → logprob: -11.888392448425293
    10. '       ' → logprob: -12.138392448425293

Token 1533: ' must' (ID: 2804)
  Prédit: 'slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slot' → logprob: -1.1017615795135498
    2. 'slots' → logprob: -1.9767615795135498
    3. ' slot' → logprob: -2.72676157951355
    4. '_slot' → logprob: -2.72676157951355
    5. ' spots' → logprob: -2.85176157951355
    6. ',' → logprob: -2.85176157951355
    7. 'spots' → logprob: -2.85176157951355
    8. '[' → logprob: -3.35176157951355
    9. 'spot' → logprob: -3.35176157951355
    10. '_slots' → logprob: -3.35176157951355

Token 1534: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.7065558433532715
    2. 'leave' → logprob: -0.7065558433532715
    3. 'not' → logprob: -5.0815558433532715
    4. ' wait' → logprob: -6.2065558433532715
    5. 'le' → logprob: -6.7065558433532715
    6. 'be' → logprob: -6.9565558433532715
    7. 'continue' → logprob: -7.8315558433532715
    8. 'vac' → logprob: -7.9565558433532715
    9. ' leave' → logprob: -8.08155632019043
    10. 'lower' → logprob: -8.33155632019043

Token 1535: ' lower' (ID: 6931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8705469369888306
    2. '           ' → logprob: -1.2455469369888306
    3. ' for' → logprob: -1.4955469369888306
    4. '       ' → logprob: -2.745546817779541
    5. '   ' → logprob: -6.245546817779541
    6. '```' → logprob: -6.745546817779541
    7. '
' → logprob: -8.2455472946167
    8. 'lower' → logprob: -8.2455472946167
    9. '               ' → logprob: -8.2455472946167
    10. 'spots' → logprob: -8.8705472946167

Token 1536: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9131316542625427
    2. 'for' → logprob: -1.0381317138671875
    3. ' for' → logprob: -2.2881317138671875
    4. '
' → logprob: -3.1631317138671875
    5. '       ' → logprob: -3.1631317138671875
    6. '_slots' → logprob: -4.0381317138671875
    7. '   ' → logprob: -4.5381317138671875
    8. 'slots' → logprob: -5.2881317138671875
    9. '            
' → logprob: -5.5381317138671875
    10. '    
' → logprob: -6.4131317138671875

Token 1537: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07365898787975311
    2. 'for' → logprob: -3.3236589431762695
    3. ' for' → logprob: -3.6986589431762695
    4. '       ' → logprob: -5.5736589431762695
    5. '
' → logprob: -5.6986589431762695
    6. '   ' → logprob: -7.6986589431762695
    7. '            
' → logprob: -7.6986589431762695
    8. ' spots' → logprob: -8.07365894317627
    9. ',' → logprob: -8.19865894317627
    10. 'spots' → logprob: -8.32365894317627

Token 1538: ' leave' (ID: 7668)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.0009612430003471673
    2. ' leave' → logprob: -7.0009613037109375
    3. 'le' → logprob: -10.375961303710938
    4. 'be' → logprob: -12.500961303710938
    5. '_leave' → logprob: -12.500961303710938
    6. '.leave' → logprob: -12.875961303710938
    7. 'vac' → logprob: -13.250961303710938
    8. 'clear' → logprob: -13.375961303710938
    9. 'depart' → logprob: -13.500961303710938
    10. 'left' → logprob: -13.875961303710938

Token 1539: ' first' (ID: 1577)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024188341572880745
    2. 'for' → logprob: -4.39918851852417
    3. '
' → logprob: -5.14918851852417
    4. ' for' → logprob: -5.27418851852417
    5. '       ' → logprob: -8.149188041687012
    6. '            
' → logprob: -8.524188041687012
    7. '```' → logprob: -10.024188041687012
    8. ',' → logprob: -10.149188041687012
    9. '   ' → logprob: -10.274188041687012
    10. '#' → logprob: -10.899188041687012

Token 1540: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0470261313021183
    2. 'for' → logprob: -3.2970261573791504
    3. ' for' → logprob: -4.79702615737915
    4. '```' → logprob: -7.92202615737915
    5. '       ' → logprob: -9.047025680541992
    6. '
' → logprob: -9.547025680541992
    7. '            
' → logprob: -9.547025680541992
    8. '   ' → logprob: -10.672025680541992
    9. '               ' → logprob: -11.422025680541992
    10. ',' → logprob: -11.922025680541992

Token 1541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005938636604696512
    2. 'for' → logprob: -6.005938529968262
    3. '       ' → logprob: -6.630938529968262
    4. ' for' → logprob: -6.755938529968262
    5. '
' → logprob: -7.380938529968262
    6. '   ' → logprob: -8.255938529968262
    7. '```' → logprob: -10.005938529968262
    8. '            
' → logprob: -10.880938529968262
    9. '    
' → logprob: -11.630938529968262
    10. '<|end|>' → logprob: -12.630938529968262

Token 1542: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2542051374912262
    2. '           ' → logprob: -1.5042051076889038
    3. ' for' → logprob: -6.129205226898193
    4. '       ' → logprob: -9.879204750061035
    5. '   ' → logprob: -11.129204750061035
    6. '            
' → logprob: -11.629204750061035
    7. '
' → logprob: -11.754204750061035
    8. '```' → logprob: -12.129204750061035
    9. '#' (adapté à ' #') → logprob: -13.004204750061035
    10. '	for' → logprob: -13.254204750061035

Token 1543: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052544813603162766
    2. '           ' → logprob: -3.3025448322296143
    3. 'le' → logprob: -4.427544593811035
    4. 'depart' → logprob: -7.177544593811035
    5. 'leave' → logprob: -7.677544593811035
    6. 'left' → logprob: -8.052544593811035
    7. 'removed' → logprob: -8.302544593811035
    8. 'done' → logprob: -9.177544593811035
    9. 'spots' → logprob: -9.177544593811035
    10. '#' → logprob: -9.302544593811035

Token 1544: ' cars' (ID: 13653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40276145935058594
    2. 'le' → logprob: -1.277761459350586
    3. 'spots' → logprob: -4.527761459350586
    4. 'cars' → logprob: -4.652761459350586
    5. 'to' → logprob: -5.027761459350586
    6. ' for' → logprob: -5.277761459350586
    7. 'leave' → logprob: -5.527761459350586
    8. '       ' → logprob: -5.902761459350586
    9. '   ' → logprob: -6.152761459350586
    10. 'positions' → logprob: -6.402761459350586

Token 1545: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.053959693759679794
    2. '_le' → logprob: -3.428959608078003
    3. 'to' → logprob: -4.803959846496582
    4. 'that' → logprob: -5.678959846496582
    5. '           ' → logprob: -5.803959846496582
    6. 'for' → logprob: -6.303959846496582
    7. '       ' → logprob: -7.053959846496582
    8. '=' → logprob: -7.678959846496582
    9. '_to' → logprob: -7.678959846496582
    10. 'depart' → logprob: -7.928959846496582

Token 1546: ' now' (ID: 1954)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0162787437438965
    2. 'now' → logprob: -1.0162787437438965
    3. 'for' → logprob: -1.5162787437438965
    4. '           ' → logprob: -3.3912787437438965
    5. 'to' → logprob: -4.2662787437438965
    6. 'leave' → logprob: -6.0162787437438965
    7. '```' → logprob: -6.3912787437438965
    8. '       ' → logprob: -6.7662787437438965
    9. '_now' → logprob: -7.1412787437438965
    10. ' for' → logprob: -7.5162787437438965

Token 1547: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5517100691795349
    2. 'le' → logprob: -1.0517101287841797
    3. 'for' → logprob: -2.6767101287841797
    4. 'depart' → logprob: -5.80171012878418
    5. 'leave' → logprob: -6.80171012878418
    6. 'to' → logprob: -7.30171012878418
    7. ' for' → logprob: -8.55171012878418
    8. 'cars' → logprob: -8.55171012878418
    9. 'car' → logprob: -8.67671012878418
    10. ' leaving' → logprob: -9.42671012878418

Token 1548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008754019625484943
    2. 'for' → logprob: -5.008754253387451
    3. ' for' → logprob: -6.383754253387451
    4. '       ' → logprob: -9.008753776550293
    5. '```' → logprob: -9.383753776550293
    6. ',' → logprob: -9.883753776550293
    7. '            
' → logprob: -10.008753776550293
    8. '<|end|>' → logprob: -11.508753776550293
    9. '<|end|>' → logprob: -12.258753776550293
    10. '
' → logprob: -12.383753776550293

Token 1549: ' leaving' (ID: 15021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6045680046081543
    2. 'le' → logprob: -0.9795680046081543
    3. '           ' → logprob: -2.9795680046081543
    4. 'depart' → logprob: -4.229568004608154
    5. 'leave' → logprob: -4.729568004608154
    6. 'left' → logprob: -6.354568004608154
    7. ' for' → logprob: -7.729568004608154
    8. 'to' → logprob: -7.729568004608154
    9. 'car' → logprob: -8.354568481445312
    10. 'done' → logprob: -8.854568481445312

Token 1550: '_now' (ID: 49444)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.9863367080688477
    2. '_c' → logprob: -1.3613367080688477
    3. ' =' → logprob: -1.6113367080688477
    4. '=' → logprob: -3.2363367080688477
    5. '_indices' → logprob: -3.3613367080688477
    6. '_positions' → logprob: -3.4863367080688477
    7. '_now' → logprob: -4.236336708068848
    8. '_times' → logprob: -4.236336708068848
    9. 'spots' → logprob: -4.861336708068848
    10. '=[]' → logprob: -4.861336708068848

Token 1551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870241045951843
    2. '=' → logprob: -1.137024164199829
    3. '=[]' → logprob: -9.01202392578125
    4. '=[]
' → logprob: -11.26202392578125
    5. '=[' → logprob: -11.38702392578125
    6. '_positions' → logprob: -13.13702392578125
    7. 'spots' → logprob: -14.13702392578125
    8. '   ' → logprob: -14.26202392578125
    9. '=set' → logprob: -14.51202392578125
    10. ' =[' → logprob: -14.51202392578125

Token 1552: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.22699429094791412
    2. '[(' → logprob: -1.726994276046753
    3. '[' → logprob: -4.226994514465332
    4. '[i' → logprob: -4.726994514465332
    5. '[]' → logprob: -6.851994514465332
    6. '[pos' → logprob: -7.601994514465332
    7. '[]

' → logprob: -9.726994514465332
    8. '[x' → logprob: -10.476994514465332
    9. '[t' → logprob: -10.601994514465332
    10. '[c' → logprob: -11.226994514465332

Token 1553: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4797566831111908
    2. ' for' → logprob: -1.1047567129135132
    3. '
' → logprob: -3.6047565937042236
    4. '           ' → logprob: -3.8547565937042236
    5. '            
' → logprob: -8.104756355285645
    6. '[' → logprob: -8.354756355285645
    7. '       ' → logprob: -8.479756355285645
    8. ' 
' → logprob: -9.229756355285645
    9. '[]
' → logprob: -9.479756355285645
    10. '```' → logprob: -9.479756355285645

Token 1554: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010767299681901932
    2. '           ' → logprob: -5.010767459869385
    3. ' for' → logprob: -5.510767459869385
    4. '       ' → logprob: -15.135766983032227
    5. '```' → logprob: -15.260766983032227
    6. '   ' → logprob: -16.260766983032227
    7. '
' → logprob: -17.260766983032227
    8. '	for' → logprob: -17.510766983032227
    9. '``' → logprob: -18.260766983032227
    10. '            
' → logprob: -18.385766983032227

Token 1555: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003209680551663041
    2. 'spot' → logprob: -6.503209590911865
    3. 'pos' → logprob: -6.628209590911865
    4. 'idx' → logprob: -7.878209590911865
    5. ' i' → logprob: -12.503210067749023
    6. ' spot' → logprob: -15.503210067749023
    7. 'sp' → logprob: -15.628210067749023
    8. 's' → logprob: -15.878210067749023
    9. '```' → logprob: -16.753210067749023
    10. ' idx' → logprob: -16.878210067749023

Token 1556: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20579387247562408
    2. 'in' → logprob: -1.705793857574463
    3. ',' → logprob: -5.455793857574463
    4. ' ,' → logprob: -10.080794334411621
    5. 'range' → logprob: -10.830794334411621
    6. 'n' → logprob: -11.705794334411621
    7. ' ' → logprob: -12.205794334411621
    8. '[' → logprob: -12.705794334411621
    9. ',(' → logprob: -12.955794334411621
    10. '```' → logprob: -12.955794334411621

Token 1557: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '
' → logprob: -17.375911712646484
    4. '	range' → logprob: -18.125911712646484
    5. '(range' → logprob: -18.375911712646484
    6. '```' → logprob: -19.125911712646484
    7. '0' → logprob: -19.750911712646484
    8. 'r' → logprob: -20.000911712646484
    9. '   ' → logprob: -20.250911712646484
    10. 'rang' → logprob: -20.500911712646484

Token 1558: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00016301481809932739
    2. 'len' → logprob: -9.125163078308105
    3. '(m' → logprob: -10.500163078308105
    4. ' m' → logprob: -10.875163078308105
    5. '0' → logprob: -12.750163078308105
    6. '(len' → logprob: -13.875163078308105
    7. '           ' → logprob: -13.875163078308105
    8. '   ' → logprob: -14.375163078308105
    9. '```' → logprob: -14.625163078308105
    10. ')m' → logprob: -14.750163078308105

Token 1559: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03435087203979492
    2. '):' → logprob: -3.534350872039795
    3. '       ' → logprob: -5.909350872039795
    4. '[' → logprob: -7.034350872039795
    5. '           ' → logprob: -7.909350872039795
    6. ':
' → logprob: -8.534351348876953
    7. '   ' → logprob: -8.784351348876953
    8. '               ' → logprob: -10.034351348876953
    9. ',' → logprob: -10.034351348876953
    10. ']:
' → logprob: -10.284351348876953

Token 1560: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6434518694877625
    2. '               ' → logprob: -0.7684518694877625
    3. '       ' → logprob: -5.393451690673828
    4. ' for' → logprob: -5.518451690673828
    5. '	       ' → logprob: -7.268451690673828
    6. '```' → logprob: -8.143451690673828
    7. '   ' → logprob: -8.393451690673828
    8. 'for' → logprob: -8.643451690673828
    9. '	           ' → logprob: -9.018451690673828
    10. ' l' → logprob: -9.393451690673828

Token 1561: ' lower' (ID: 6931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2963064908981323
    2. 'l' → logprob: -1.5463064908981323
    3. '   ' → logprob: -1.7963064908981323
    4. 'lower' (adapté à ' lower') → logprob: -1.9213064908981323
    5. '           ' → logprob: -2.171306610107422
    6. ' for' → logprob: -3.296306610107422
    7. '               ' → logprob: -3.671306610107422
    8. 'if' → logprob: -5.046306610107422
    9. ' l' → logprob: -5.296306610107422
    10. '       ' → logprob: -5.296306610107422

Token 1562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6735403537750244
    2. 'car' → logprob: -1.6735403537750244
    3. 'slot' → logprob: -1.7985403537750244
    4. '=' → logprob: -1.7985403537750244
    5. '_slot' → logprob: -2.4235403537750244
    6. ',' → logprob: -2.6735403537750244
    7. '_car' → logprob: -2.7985403537750244
    8. 'is' → logprob: -3.6735403537750244
    9. '[' → logprob: -4.173540115356445
    10. 'spot' → logprob: -4.798540115356445

Token 1563: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.002914238488301635
    2. ' spots' → logprob: -5.8779144287109375
    3. '           ' → logprob: -10.002914428710938
    4. '               ' → logprob: -10.627914428710938
    5. 'sp' → logprob: -10.752914428710938
    6. '       ' → logprob: -12.252914428710938
    7. '0' → logprob: -12.502914428710938
    8. '   ' → logprob: -12.627914428710938
    9. '                   ' → logprob: -13.627914428710938
    10. '```' → logprob: -13.877914428710938

Token 1564: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.096126576769166e-05
    2. 'i' → logprob: -10.125041007995605
    3. '               ' → logprob: -15.250041007995605
    4. '(i' → logprob: -15.500041007995605
    5. '[' → logprob: -16.37504005432129
    6. '][' → logprob: -16.37504005432129
    7. '           ' → logprob: -16.75004005432129
    8. '                   ' → logprob: -16.75004005432129
    9. '```' → logprob: -17.12504005432129
    10. ' i' → logprob: -17.62504005432129

Token 1565: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002497417852282524
    2. '[' → logprob: -6.00249719619751
    3. ']' → logprob: -12.002497673034668
    4. '0' → logprob: -12.502497673034668
    5. ' ][' → logprob: -12.627497673034668
    6. '           ' → logprob: -13.127497673034668
    7. ')[' → logprob: -13.252497673034668
    8. '               ' → logprob: -13.752497673034668
    9. '   ' → logprob: -14.627497673034668
    10. '#' → logprob: -14.752497673034668

Token 1566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '[' → logprob: -16.500001907348633
    5. '
' → logprob: -17.812501907348633
    6. '```' → logprob: -17.937501907348633
    7. '       ' → logprob: -18.000001907348633
    8. '۰' → logprob: -18.062501907348633
    9. '           ' → logprob: -18.187501907348633
    10. '][' → logprob: -18.562501907348633

Token 1567: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07084517180919647
    2. ']
' → logprob: -3.320845127105713
    3. '
' → logprob: -3.945845127105713
    4. ')
' → logprob: -5.695845127105713
    5. '[' → logprob: -6.195845127105713
    6. '           ' → logprob: -6.445845127105713
    7. 'and' → logprob: -6.570845127105713
    8. '                   ' → logprob: -6.695845127105713
    9. '][' → logprob: -6.695845127105713
    10. '                
' → logprob: -7.320845127105713

Token 1568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005818825680762529
    2. ' if' → logprob: -5.630818843841553
    3. '           ' → logprob: -7.005818843841553
    4. 'if' → logprob: -7.505818843841553
    5. ' and' → logprob: -7.880818843841553
    6. ',' → logprob: -8.880818367004395
    7. '[' → logprob: -9.630818367004395
    8. '<|end|>' → logprob: -10.130818367004395
    9. 'and' → logprob: -10.630818367004395
    10. '	           ' → logprob: -11.130818367004395

Token 1569: ' upper' (ID: 13057)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07240982353687286
    2. 'upper' (adapté à ' upper') → logprob: -3.0724098682403564
    3. ' if' → logprob: -3.9474098682403564
    4. '               ' → logprob: -5.572409629821777
    5. ' upper' → logprob: -7.822409629821777
    6. '                   ' → logprob: -11.697409629821777
    7. '
' → logprob: -11.947409629821777
    8. '```' → logprob: -12.197409629821777
    9. '                
' → logprob: -12.572409629821777
    10. 'None' → logprob: -13.447409629821777

Token 1570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6105634570121765
    2. ' =' → logprob: -0.9855634570121765
    3. ' is' → logprob: -2.8605635166168213
    4. 'is' → logprob: -4.735563278198242
    5. 'if' → logprob: -5.110563278198242
    6. ' if' → logprob: -5.735563278198242
    7. 'and' → logprob: -6.235563278198242
    8. '==' → logprob: -6.360563278198242
    9. '=None' → logprob: -6.985563278198242
    10. '!=' → logprob: -7.110563278198242

Token 1571: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.009796345606446266
    2. ' spots' → logprob: -4.634796142578125
    3. 'spot' → logprob: -11.634796142578125
    4. '   ' → logprob: -11.759796142578125
    5. '       ' → logprob: -12.009796142578125
    6. '           ' → logprob: -12.134796142578125
    7. 'slots' → logprob: -12.884796142578125
    8. '[' → logprob: -12.884796142578125
    9. 'sp' → logprob: -13.259796142578125
    10. '               ' → logprob: -14.134796142578125

Token 1572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015924652107059956
    2. 'i' → logprob: -7.001592636108398
    3. '[' → logprob: -7.501592636108398
    4. '][' → logprob: -9.001592636108398
    5. '(i' → logprob: -13.251592636108398
    6. ' [' → logprob: -14.376592636108398
    7. '[][' → logprob: -14.376592636108398
    8. ')[' → logprob: -14.751592636108398
    9. '{i' → logprob: -15.001592636108398
    10. ' i' → logprob: -15.001592636108398

Token 1573: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022432736586779356
    2. '[' → logprob: -6.1272430419921875
    3. '0' → logprob: -10.877243041992188
    4. ']' → logprob: -10.877243041992188
    5. ' ][' → logprob: -12.377243041992188
    6. '1' → logprob: -12.502243041992188
    7. ')[' → logprob: -12.627243041992188
    8. ']][' → logprob: -13.627243041992188
    9. '```' → logprob: -14.252243041992188
    10. '   ' → logprob: -14.377243041992188

Token 1574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012034466490149498
    2. '0' → logprob: -6.751203536987305
    3. 'i' → logprob: -11.001203536987305
    4. '[' → logprob: -11.376203536987305
    5. '```' → logprob: -13.126203536987305
    6. ' ' → logprob: -13.876203536987305
    7. '][' → logprob: -14.626203536987305
    8. '   ' → logprob: -15.001203536987305
    9. '[i' → logprob: -15.251203536987305
    10. ']' → logprob: -15.501203536987305

Token 1575: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -1.111162543296814
    2. '           ' → logprob: -1.236162543296814
    3. '               ' → logprob: -1.611162543296814
    4. ')
' → logprob: -2.4861626625061035
    5. ']' → logprob: -2.8611626625061035
    6. ')' → logprob: -3.8611626625061035
    7. ':
' → logprob: -5.2361626625061035
    8. 'if' → logprob: -5.7361626625061035
    9. '):
' → logprob: -5.7361626625061035
    10. ' if' → logprob: -5.9861626625061035

Token 1576: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47582560777664185
    2. '               ' → logprob: -0.9758256077766418
    3. '       ' → logprob: -6.850825786590576
    4. '```' → logprob: -7.600825786590576
    5. ' if' → logprob: -9.850825309753418
    6. '	       ' → logprob: -10.475825309753418
    7. '                   ' → logprob: -10.600825309753418
    8. '   ' → logprob: -11.350825309753418
    9. '<|end|>' → logprob: -11.475825309753418
    10. 'if' → logprob: -11.725825309753418

Token 1577: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.556808590888977
    2. '           ' → logprob: -1.556808590888977
    3. ' if' → logprob: -1.556808590888977
    4. '```' → logprob: -6.1818084716796875
    5. '               ' → logprob: -6.4318084716796875
    6. '	if' → logprob: -7.3068084716796875
    7. '       ' → logprob: -7.5568084716796875
    8. '	       ' → logprob: -8.806808471679688
    9. '   ' → logprob: -8.931808471679688
    10. '		' → logprob: -9.181808471679688

Token 1578: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07945665717124939
    2. '           ' → logprob: -2.5794565677642822
    3. '               ' → logprob: -8.079456329345703
    4. ' if' → logprob: -8.704456329345703
    5. '```' → logprob: -9.704456329345703
    6. '#' → logprob: -11.079456329345703
    7. 'for' → logprob: -12.079456329345703
    8. '
' → logprob: -12.829456329345703
    9. '       ' → logprob: -13.079456329345703
    10. '``' → logprob: -13.329456329345703

Token 1579: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.15637636184692383
    2. ' lower' → logprob: -2.156376361846924
    3. 'if' → logprob: -4.031376361846924
    4. 'upper' → logprob: -5.281376361846924
    5. ' if' → logprob: -5.406376361846924
    6. '(lower' → logprob: -7.281376361846924
    7. '```' → logprob: -8.156375885009766
    8. ' upper' → logprob: -8.281375885009766
    9. '   ' → logprob: -8.531375885009766
    10. '           ' → logprob: -9.406375885009766

Token 1580: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3135010898113251
    2. ' is' → logprob: -2.0635011196136475
    3. '               ' → logprob: -3.0635011196136475
    4. ' if' → logprob: -3.0635011196136475
    5. 'and' → logprob: -3.9385011196136475
    6. ' and' → logprob: -4.313500881195068
    7. 'is' → logprob: -4.688500881195068
    8. '```' → logprob: -6.188500881195068
    9. '           ' → logprob: -6.563500881195068
    10. '                   ' → logprob: -7.063500881195068

Token 1581: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4628869295120239
    2. ' if' → logprob: -1.337886929512024
    3. 'if' → logprob: -2.7128868103027344
    4. '           ' → logprob: -3.5878868103027344
    5. ' is' → logprob: -4.712886810302734
    6. '```' → logprob: -5.712886810302734
    7. ',' → logprob: -8.337886810302734
    8. '==' → logprob: -8.587886810302734
    9. 'is' → logprob: -8.712886810302734
    10. ' and' → logprob: -8.837886810302734

Token 1582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08669310808181763
    2. '           ' → logprob: -2.586693048477173
    3. ' if' → logprob: -5.086693286895752
    4. '               ' → logprob: -6.461693286895752
    5. '```' → logprob: -10.711692810058594
    6. '       ' → logprob: -11.836692810058594
    7. '                   ' → logprob: -13.961692810058594
    8. '   ' → logprob: -14.211692810058594
    9. '          ' → logprob: -15.461692810058594
    10. '	if' → logprob: -15.836692810058594

Token 1583: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0007151735480874777
    2. ' lower' → logprob: -7.250715255737305
    3. '   ' → logprob: -12.375715255737305
    4. '(lower' → logprob: -14.250715255737305
    5. '  ' → logprob: -16.875715255737305
    6. '           ' → logprob: -17.000715255737305
    7. ' ' → logprob: -17.125715255737305
    8. 'lowest' → logprob: -17.500715255737305
    9. '     ' → logprob: -17.750715255737305
    10. '```' → logprob: -18.125715255737305

Token 1584: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5489411354064941
    2. 'is' → logprob: -1.2989411354064941
    3. 'and' → logprob: -1.9239411354064941
    4. ' and' → logprob: -5.673941135406494
    5. '[' → logprob: -9.423940658569336
    6. '                   ' → logprob: -10.548940658569336
    7. '!=' → logprob: -10.548940658569336
    8. '               ' → logprob: -12.048940658569336
    9. '==' → logprob: -12.923940658569336
    10. '=' → logprob: -13.173940658569336

Token 1585: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0004927450208924711
    2. ' lower' → logprob: -7.625492572784424
    3. '(lower' → logprob: -12.500493049621582
    4. '   ' → logprob: -14.500493049621582
    5. '
' → logprob: -16.000492095947266
    6. '.lower' → logprob: -16.125492095947266
    7. 'len' → logprob: -17.250492095947266
    8. '           ' → logprob: -17.375492095947266
    9. '```' → logprob: -17.375492095947266
    10. 'lowest' → logprob: -17.500492095947266

Token 1586: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.65101717156358e-05
    2. 'and' → logprob: -9.375096321105957
    3. '```' → logprob: -12.125096321105957
    4. ' and' → logprob: -12.875096321105957
    5. ' is' → logprob: -13.000096321105957
    6. '][' → logprob: -15.250096321105957
    7. '[][' → logprob: -15.375096321105957
    8. '
' → logprob: -15.500096321105957
    9. ' [' → logprob: -15.625096321105957
    10. '[
' → logprob: -16.000097274780273

Token 1587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. '
' → logprob: -10.875020980834961
    3. '[' → logprob: -14.500020980834961
    4. '```' → logprob: -14.750020980834961
    5. ' ' → logprob: -14.875020980834961
    6. '0' → logprob: -15.625020980834961
    7. '   ' → logprob: -16.00002098083496
    8. '' → logprob: -16.12502098083496
    9. '
' → logprob: -16.37502098083496
    10. '`' → logprob: -16.93752098083496

Token 1588: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20179346203804016
    2. ' ==' → logprob: -1.7017934322357178
    3. '<=' → logprob: -8.701793670654297
    4. ']==' → logprob: -9.076793670654297
    5. ' <=' → logprob: -9.826793670654297
    6. ')==' → logprob: -10.326793670654297
    7. '==
' → logprob: -12.326793670654297
    8. ')' → logprob: -13.076793670654297
    9. '()==' → logprob: -13.451793670654297
    10. '```' → logprob: -13.451793670654297

Token 1589: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01403550710529089
    2. ' ==' → logprob: -4.389035701751709
    3. '<=' → logprob: -6.514035701751709
    4. '==
' → logprob: -11.26403522491455
    5. ' <=' → logprob: -11.38903522491455
    6. ')==' → logprob: -12.01403522491455
    7. ']==' → logprob: -12.13903522491455
    8. '()==' → logprob: -12.51403522491455
    9. '```' → logprob: -13.51403522491455
    10. '===' → logprob: -13.88903522491455

Token 1590: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001234428636962548
    2. ' current' → logprob: -9.000123023986816
    3. '=current' → logprob: -17.500123977661133
    4. '	current' → logprob: -18.875123977661133
    5. '
' → logprob: -19.000123977661133
    6. '   ' → logprob: -20.375123977661133
    7. '$current' → logprob: -20.500123977661133
    8. '(current' → logprob: -20.750123977661133
    9. '_current' → logprob: -20.875123977661133
    10. 'Current' → logprob: -22.125123977661133

Token 1591: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.165027217415627e-05
    2. 'time' → logprob: -11.000021934509277
    3. '_' → logprob: -13.625021934509277
    4. ')' → logprob: -14.625021934509277
    5. 'Time' → logprob: -14.625021934509277
    6. 'ime' → logprob: -15.000021934509277
    7. '```' → logprob: -15.125021934509277
    8. ')_' → logprob: -15.500021934509277
    9. '   ' → logprob: -15.625021934509277
    10. '+' → logprob: -15.625021934509277

Token 1592: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4420529007911682
    2. ':
' → logprob: -1.1920528411865234
    3. ':' → logprob: -3.6920528411865234
    4. 'and' → logprob: -3.9420528411865234
    5. '           ' → logprob: -5.067052841186523
    6. '               ' → logprob: -6.692052841186523
    7. '                   ' → logprob: -6.692052841186523
    8. '                       ' → logprob: -9.317052841186523
    9. '       ' → logprob: -9.442052841186523
    10. '):
' → logprob: -9.442052841186523

Token 1593: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021013717632740736
    2. '           ' → logprob: -6.627101421356201
    3. '               ' → logprob: -8.502100944519043
    4. ' spots' → logprob: -8.502100944519043
    5. '                    
' → logprob: -9.127100944519043
    6. '                       ' → logprob: -9.252100944519043
    7. '```' → logprob: -10.002100944519043
    8. '            
' → logprob: -11.002100944519043
    9. 'spots' → logprob: -11.252100944519043
    10. ':
' → logprob: -11.252100944519043

Token 1594: ' leaving' (ID: 15021)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.4344828426837921
    2. ' spots' → logprob: -1.1844828128814697
    3. '                       ' → logprob: -3.5594828128814697
    4. '               ' → logprob: -4.684483051300049
    5. '                   ' → logprob: -5.184483051300049
    6. '```' → logprob: -6.309483051300049
    7. 'lower' → logprob: -8.30948257446289
    8. '           ' → logprob: -8.68448257446289
    9. '       ' → logprob: -8.68448257446289
    10. '``' → logprob: -8.80948257446289

Token 1595: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.020392391830682755
    2. 'now' → logprob: -5.395392417907715
    3. '_car' → logprob: -5.645392417907715
    4. '[' → logprob: -5.645392417907715
    5. '_time' → logprob: -6.145392417907715
    6. '[i' → logprob: -6.645392417907715
    7. '           ' → logprob: -7.770392417907715
    8. '```' → logprob: -7.770392417907715
    9. '               ' → logprob: -7.895392417907715
    10. 'Now' → logprob: -8.020392417907715

Token 1596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001307142956648022
    2. '.' → logprob: -9.375130653381348
    3. ' .' → logprob: -11.500130653381348
    4. 'append' → logprob: -11.625130653381348
    5. '           ' → logprob: -11.750130653381348
    6. '                   ' → logprob: -12.500130653381348
    7. '               ' → logprob: -12.750130653381348
    8. '().' → logprob: -13.125130653381348
    9. ',' → logprob: -13.125130653381348
    10. '=' → logprob: -13.500130653381348

Token 1597: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.34909698367118835
    2. '(i' → logprob: -1.3490970134735107
    3. '(' → logprob: -3.3490970134735107
    4. '   ' → logprob: -9.97409725189209
    5. ' (' → logprob: -10.84909725189209
    6. '(('' → logprob: -11.22409725189209
    7. '(("' → logprob: -13.22409725189209
    8. ' ((' → logprob: -14.34909725189209
    9. '[(' → logprob: -14.47409725189209
    10. '  ' → logprob: -15.09909725189209

Token 1598: 'current' (ID: 5804)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030909648165106773
    2. '0' → logprob: -3.905909538269043
    3. 'current' → logprob: -5.280909538269043
    4. ''i' → logprob: -5.655909538269043
    5. 'lower' → logprob: -7.280909538269043
    6. ''' → logprob: -7.530909538269043
    7. ' i' → logprob: -8.155909538269043
    8. '(i' → logprob: -9.905909538269043
    9. 'True' → logprob: -10.655909538269043
    10. '"' → logprob: -10.780909538269043

Token 1599: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00914368499070406
    2. 'time' → logprob: -5.884143829345703
    3. 'i' → logprob: -6.134143829345703
    4. ',' → logprob: -6.759143829345703
    5. '[i' → logprob: -6.884143829345703
    6. ',i' → logprob: -7.384143829345703
    7. '_i' → logprob: -8.134143829345703
    8. '_times' → logprob: -8.634143829345703
    9. ':' → logprob: -9.134143829345703
    10. '_,' → logprob: -9.134143829345703

Token 1600: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.25197383761405945
    2. ',' → logprob: -1.5019738674163818
    3. ' ,' → logprob: -10.876974105834961
    4. ',n' → logprob: -12.376974105834961
    5. ',index' → logprob: -12.751974105834961
    6. ',
' → logprob: -12.876974105834961
    7. ',int' → logprob: -13.001974105834961
    8. ',I' → logprob: -13.251974105834961
    9. ',user' → logprob: -13.751974105834961
    10. ',x' → logprob: -14.251974105834961

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6100132496794686e-05
    2. ',[' → logprob: -10.875056266784668
    3. ' ,' → logprob: -10.875056266784668
    4. '[' → logprob: -12.125056266784668
    5. '0' → logprob: -12.250056266784668
    6. ',
' → logprob: -12.375056266784668
    7. '))' → logprob: -14.375056266784668
    8. ',(' → logprob: -14.625056266784668
    9. '   ' → logprob: -14.875056266784668
    10. '       ' → logprob: -15.125056266784668

Token 1602: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005514653865247965
    2. ' ' → logprob: -5.755514621734619
    3. 'lower' → logprob: -6.130514621734619
    4. ' lower' → logprob: -9.630515098571777
    5. ''' → logprob: -9.880515098571777
    6. '
' → logprob: -11.505515098571777
    7. 'False' → logprob: -12.693015098571777
    8. 'True' → logprob: -12.693015098571777
    9. ' '' → logprob: -12.880515098571777
    10. ',' → logprob: -12.880515098571777

Token 1603: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.474373996257782
    2. '))
' → logprob: -0.974373996257782
    3. '                   ' → logprob: -9.224373817443848
    4. '               ' → logprob: -9.474373817443848
    5. ' ))' → logprob: -10.099373817443848
    6. ' ))
' → logprob: -10.474373817443848
    7. ',' → logprob: -10.724373817443848
    8. '))

' → logprob: -11.849373817443848
    9. '           ' → logprob: -12.099373817443848
    10. ',))
' → logprob: -12.599373817443848

Token 1604: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0003992104611825198
    2. ' lower' → logprob: -7.875399112701416
    3. '(lower' → logprob: -12.000399589538574
    4. '0' → logprob: -12.625399589538574
    5. 'spots' → logprob: -12.625399589538574
    6. ' spots' → logprob: -14.000399589538574
    7. '.lower' → logprob: -14.375399589538574
    8. 'le' → logprob: -14.625399589538574
    9. '   ' → logprob: -14.750399589538574
    10. 'lowest' → logprob: -15.000399589538574

Token 1605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5141810178756714
    2. '))' → logprob: -1.7641810178756714
    3. '))
' → logprob: -1.8891810178756714
    4. ')]' → logprob: -3.264181137084961
    5. ')])' → logprob: -4.139181137084961
    6. '])' → logprob: -4.639181137084961
    7. ')]
' → logprob: -5.764181137084961
    8. ')' → logprob: -6.139181137084961
    9. ')])
' → logprob: -6.264181137084961
    10. '])
' → logprob: -6.389181137084961

Token 1606: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015812745550647378
    2. '[' → logprob: -9.125158309936523
    3. '][' → logprob: -11.375158309936523
    4. '1' → logprob: -11.500158309936523
    5. ' ' → logprob: -11.750158309936523
    6. '
' → logprob: -12.250158309936523
    7. '])' → logprob: -12.250158309936523
    8. 'car' → logprob: -13.125158309936523
    9. ']' → logprob: -13.375158309936523
    10. '   ' → logprob: -14.125158309936523

Token 1607: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2560289204120636
    2. '))
' → logprob: -1.5060288906097412
    3. ']))' → logprob: -5.88102912902832
    4. ']))
' → logprob: -7.25602912902832
    5. '                   ' → logprob: -9.00602912902832
    6. ')))' → logprob: -9.50602912902832
    7. ')' → logprob: -9.63102912902832
    8. '])' → logprob: -9.63102912902832
    9. ',' → logprob: -9.88102912902832
    10. '               ' → logprob: -9.88102912902832

Token 1608: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12671157717704773
    2. '               ' → logprob: -2.62671160697937
    3. ')' → logprob: -4.001711368560791
    4. '           ' → logprob: -4.876711368560791
    5. '<|end|>' → logprob: -4.876711368560791
    6. '```' → logprob: -5.626711368560791
    7. '       ' → logprob: -6.001711368560791
    8. '                       ' → logprob: -6.251711368560791
    9. '                    
' → logprob: -6.376711368560791
    10. ')
' → logprob: -7.251711368560791

Token 1609: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004577174549922347
    2. '           ' → logprob: -9.000457763671875
    3. '```' → logprob: -9.000457763671875
    4. '                   ' → logprob: -9.250457763671875
    5. '       ' → logprob: -10.375457763671875
    6. '                ' → logprob: -10.750457763671875
    7. '              ' → logprob: -11.250457763671875
    8. 'if' → logprob: -11.875457763671875
    9. ' ' → logprob: -11.875457763671875
    10. ' if' → logprob: -11.875457763671875

Token 1610: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16082049906253815
    2. 'if' → logprob: -1.910820484161377
    3. ' if' → logprob: -8.160820960998535
    4. '           ' → logprob: -8.535820960998535
    5. '```' → logprob: -9.410820960998535
    6. '       ' → logprob: -11.660820960998535
    7. '                   ' → logprob: -12.285820960998535
    8. '
' → logprob: -12.535820960998535
    9. '              ' → logprob: -12.660820960998535
    10. '                
' → logprob: -12.785820960998535

Token 1611: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.4749711751937866
    2. 'upper' → logprob: -0.9749711751937866
    3. ' spots' → logprob: -7.224971294403076
    4. 'spots' → logprob: -8.974970817565918
    5. '           ' → logprob: -10.849970817565918
    6. '   ' → logprob: -12.349970817565918
    7. 'if' → logprob: -12.474970817565918
    8. '       ' → logprob: -12.849970817565918
    9. '.upper' → logprob: -12.974970817565918
    10. '               ' → logprob: -13.224970817565918

Token 1612: ' condition' (ID: 7060)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02781028300523758
    2. ' if' → logprob: -4.152810096740723
    3. ' and' → logprob: -4.652810096740723
    4. 'if' → logprob: -6.902810096740723
    5. 'and' → logprob: -7.277810096740723
    6. '                   ' → logprob: -8.652810096740723
    7. '```' → logprob: -9.277810096740723
    8. '           ' → logprob: -9.777810096740723
    9. ':
' → logprob: -10.277810096740723
    10. '
' → logprob: -10.777810096740723

Token 1613: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003839597338810563
    2. ' if' → logprob: -8.250384330749512
    3. 'if' → logprob: -9.875384330749512
    4. '```' → logprob: -10.125384330749512
    5. '                   ' → logprob: -10.750384330749512
    6. ',' → logprob: -12.375384330749512
    7. '           ' → logprob: -13.875384330749512
    8. '
' → logprob: -14.000384330749512
    9. ':' → logprob: -14.000384330749512
    10. '              ' → logprob: -14.750384330749512

Token 1614: ' leave' (ID: 7668)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -1.262229561805725
    2. ' spots' → logprob: -1.887229561805725
    3. ' upper' → logprob: -1.887229561805725
    4. ' if' → logprob: -2.0122294425964355
    5. 'lower' → logprob: -2.1372294425964355
    6. 'if' → logprob: -2.6372294425964355
    7. 'upper' → logprob: -2.6372294425964355
    8. 'spots' → logprob: -4.3872294425964355
    9. '(lower' → logprob: -5.8872294425964355
    10. ' not' → logprob: -6.7622294425964355

Token 1615: ' time' (ID: 1058)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7932481169700623
    2. '_time' → logprob: -1.793248176574707
    3. ' if' → logprob: -1.793248176574707
    4. 'if' → logprob: -2.418248176574707
    5. 'and' → logprob: -2.793248176574707
    6. '=' → logprob: -4.418248176574707
    7. 'ing' → logprob: -4.668248176574707
    8. '[' → logprob: -4.668248176574707
    9. 'time' → logprob: -5.043248176574707
    10. ' =' → logprob: -5.418248176574707

Token 1616: ' passed' (ID: 10292)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.803563117980957
    2. ' <=' → logprob: -1.053563117980957
    3. ' and' → logprob: -2.553563117980957
    4. 'and' → logprob: -2.928563117980957
    5. '                   ' → logprob: -4.303563117980957
    6. '               ' → logprob: -4.428563117980957
    7. 'if' → logprob: -4.428563117980957
    8. '```' → logprob: -4.678563117980957
    9. ' if' → logprob: -5.178563117980957
    10. '==' → logprob: -5.428563117980957

Token 1617: ' &' (ID: 827)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4351835250854492
    2. 'and' → logprob: -1.0601835250854492
    3. '           ' → logprob: -5.810183525085449
    4. '               ' → logprob: -5.810183525085449
    5. '                   ' → logprob: -8.18518352508545
    6. '>=' → logprob: -9.81018352508545
    7. ',' → logprob: -9.93518352508545
    8. ' if' → logprob: -11.18518352508545
    9. '```' → logprob: -11.18518352508545
    10. '<=' → logprob: -11.68518352508545

Token 1618: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.1174389123916626
    2. ' spots' → logprob: -1.2424389123916626
    3. 'spots' → logprob: -1.4924389123916626
    4. '(lower' → logprob: -2.492438793182373
    5. ' lower' → logprob: -2.992438793182373
    6. ' (' → logprob: -4.492438793182373
    7. '(sp' → logprob: -5.117438793182373
    8. '(' → logprob: -5.242438793182373
    9. '(i' → logprob: -6.367438793182373
    10. '(not' → logprob: -7.992438793182373

Token 1619: ' must' (ID: 2804)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8808962106704712
    2. ' is' → logprob: -1.1308962106704712
    3. 'and' → logprob: -1.3808962106704712
    4. ' and' → logprob: -4.880896091461182
    5. '[' → logprob: -5.630896091461182
    6. '```' → logprob: -9.00589656829834
    7. '0' → logprob: -9.75589656829834
    8. '
' → logprob: -9.75589656829834
    9. '==' → logprob: -10.38089656829834
    10. '[i' → logprob: -11.25589656829834

Token 1620: ' be' (ID: 413)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.023270051926374435
    2. '[' → logprob: -4.523270130157471
    3. ' is' → logprob: -4.898270130157471
    4. 'None' → logprob: -5.898270130157471
    5. 'be' → logprob: -7.023270130157471
    6. '```' → logprob: -7.898270130157471
    7. '==' → logprob: -8.273269653320312
    8. ' None' → logprob: -8.773269653320312
    9. ' be' → logprob: -9.273269653320312
    10. '0' → logprob: -9.898269653320312

Token 1621: ' empty' (ID: 8213)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002627662615850568
    2. ' None' → logprob: -8.250263214111328
    3. '(None' → logprob: -14.000263214111328
    4. 'le' → logprob: -15.250263214111328
    5. 'none' → logprob: -15.500263214111328
    6. '```' → logprob: -16.375263214111328
    7. 'gone' → logprob: -16.750263214111328
    8. '_None' → logprob: -17.375263214111328
    9. '0' → logprob: -17.875263214111328
    10. '   ' → logprob: -18.500263214111328

Token 1622: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009312293259426951
    2. '                   ' → logprob: -8.000930786132812
    3. 'if' → logprob: -8.250930786132812
    4. ' if' → logprob: -9.125930786132812
    5. '```' → logprob: -9.125930786132812
    6. '           ' → logprob: -9.750930786132812
    7. '
' → logprob: -10.125930786132812
    8. ',' → logprob: -12.000930786132812
    9. '       ' → logprob: -12.625930786132812
    10. '   ' → logprob: -12.625930786132812

Token 1623: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004798799753189087
    2. '```' → logprob: -5.629798889160156
    3. '                   ' → logprob: -7.004798889160156
    4. '``' → logprob: -8.879798889160156
    5. '                
' → logprob: -10.129798889160156
    6. '           ' → logprob: -10.254798889160156
    7. '       ' → logprob: -11.379798889160156
    8. ',' → logprob: -11.504798889160156
    9. '
' → logprob: -11.754798889160156
    10. '                ' → logprob: -12.004798889160156

Token 1624: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013188120210543275
    2. '           ' → logprob: -7.00131893157959
    3. '```' → logprob: -7.87631893157959
    4. '``' → logprob: -11.62631893157959
    5. ' if' → logprob: -11.75131893157959
    6. 'if' → logprob: -12.00131893157959
    7. '                   ' → logprob: -13.75131893157959
    8. 'for' → logprob: -14.37631893157959
    9. '       ' → logprob: -14.37631893157959
    10. '
' → logprob: -14.37631893157959

Token 1625: ' output' (ID: 4733)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25857317447662354
    2. '           ' → logprob: -1.5085731744766235
    3. '```' → logprob: -5.633573055267334
    4. 'for' → logprob: -6.508573055267334
    5. ' for' → logprob: -6.633573055267334
    6. '
' → logprob: -9.633573532104492
    7. '       ' → logprob: -9.758573532104492
    8. '``' → logprob: -10.008573532104492
    9. '                   ' → logprob: -11.133573532104492
    10. '   ' → logprob: -11.258573532104492

Token 1626: ' lower' (ID: 6931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06597805768251419
    2. ' for' → logprob: -3.1909780502319336
    3. 'for' → logprob: -3.8159780502319336
    4. '```' → logprob: -7.565978050231934
    5. '               ' → logprob: -9.565978050231934
    6. '       ' → logprob: -9.940978050231934
    7. '
' → logprob: -10.940978050231934
    8. 'le' → logprob: -11.690978050231934
    9. '            
' → logprob: -11.815978050231934
    10. '   ' → logprob: -11.815978050231934

Token 1627: ' cars' (ID: 13653)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019489673897624016
    2. 'for' → logprob: -4.644489765167236
    3. ' for' → logprob: -5.144489765167236
    4. 'if' → logprob: -6.394489765167236
    5. ' if' → logprob: -6.519489765167236
    6. '```' → logprob: -8.394489288330078
    7. '               ' → logprob: -8.644489288330078
    8. '       ' → logprob: -8.644489288330078
    9. '
' → logprob: -9.894489288330078
    10. '   ' → logprob: -10.519489288330078

Token 1628: ' leaving' (ID: 15021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015335931675508618
    2. 'for' → logprob: -9.125153541564941
    3. '               ' → logprob: -10.750153541564941
    4. '       ' → logprob: -11.625153541564941
    5. ' for' → logprob: -11.750153541564941
    6. '```' → logprob: -12.750153541564941
    7. '
' → logprob: -14.250153541564941
    8. '                   ' → logprob: -14.250153541564941
    9. '            
' → logprob: -14.375153541564941
    10. ',' → logprob: -15.000153541564941

Token 1629: ' first' (ID: 1577)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022412940859794617
    2. 'for' → logprob: -3.8974130153656006
    3. ' for' → logprob: -7.0224127769470215
    4. 'le' → logprob: -7.1474127769470215
    5. 'if' → logprob: -9.89741325378418
    6. '       ' → logprob: -10.02241325378418
    7. '               ' → logprob: -10.14741325378418
    8. '```' → logprob: -10.52241325378418
    9. '
' → logprob: -11.27241325378418
    10. '            
' → logprob: -12.64741325378418

Token 1630: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044237032532691956
    2. 'for' → logprob: -3.1692371368408203
    3. '```' → logprob: -7.54423713684082
    4. ' for' → logprob: -7.66923713684082
    5. 'if' → logprob: -9.41923713684082
    6. '
' → logprob: -9.66923713684082
    7. '               ' → logprob: -10.54423713684082
    8. 'le' → logprob: -10.79423713684082
    9. '       ' → logprob: -11.04423713684082
    10. '``' → logprob: -11.41923713684082

Token 1631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.470901229884475e-05
    2. '```' → logprob: -9.87508487701416
    3. '
' → logprob: -10.87508487701416
    4. ' for' → logprob: -11.75008487701416
    5. 'for' → logprob: -12.62508487701416
    6. '       ' → logprob: -13.75008487701416
    7. '               ' → logprob: -14.00008487701416
    8. '``' → logprob: -14.50008487701416
    9. '<|end|>' → logprob: -15.12508487701416
    10. '            
' → logprob: -16.500083923339844

Token 1632: ' leaving' (ID: 15021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013533824123442173
    2. 'for' → logprob: -4.513533592224121
    3. ' for' → logprob: -6.263533592224121
    4. '```' → logprob: -7.763533592224121
    5. 'le' → logprob: -9.513533592224121
    6. '               ' → logprob: -10.388533592224121
    7. '       ' → logprob: -11.013533592224121
    8. '
' → logprob: -11.638533592224121
    9. '``' → logprob: -11.638533592224121
    10. '   ' → logprob: -12.638533592224121

Token 1633: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0002647927321959287
    2. 'now' → logprob: -9.375265121459961
    3. '.sort' → logprob: -9.750265121459961
    4. '
' → logprob: -10.500265121459961
    5. '_sorted' → logprob: -11.125265121459961
    6. '```' → logprob: -11.750265121459961
    7. '_order' → logprob: -11.875265121459961
    8. '=' → logprob: -12.125265121459961
    9. '=[]
' → logprob: -12.125265121459961
    10. 'Now' → logprob: -12.500265121459961

Token 1634: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -9.13388703338569e-06
    2. '.extend' → logprob: -12.375009536743164
    3. '.append' → logprob: -13.000009536743164
    4. 'sort' → logprob: -13.500009536743164
    5. '           ' → logprob: -15.125009536743164
    6. '=' → logprob: -15.250009536743164
    7. '+=' → logprob: -15.375009536743164
    8. '.reverse' → logprob: -16.250009536743164
    9. ' =' → logprob: -16.375009536743164
    10. '	sort' → logprob: -16.625009536743164

Token 1635: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.6517791152000427
    2. '()' → logprob: -1.1517791748046875
    3. '()
' → logprob: -1.9017791748046875
    4. 'key' → logprob: -4.4017791748046875
    5. '(reverse' → logprob: -6.7767791748046875
    6. 'reverse' → logprob: -10.151779174804688
    7. ',key' → logprob: -10.776779174804688
    8. '```' → logprob: -11.651779174804688
    9. '(' → logprob: -11.776779174804688
    10. '(
' → logprob: -11.901779174804688

Token 1636: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -7.219262624857947e-05
    2. '=' → logprob: -9.750072479248047
    3. '=(' → logprob: -11.750072479248047
    4. '(lambda' → logprob: -13.125072479248047
    5. '=
' → logprob: -13.375072479248047
    6. 'lambda' → logprob: -13.500072479248047
    7. '=None' → logprob: -14.125072479248047
    8. '```' → logprob: -16.000072479248047
    9. '=item' → logprob: -16.875072479248047
    10. '=len' → logprob: -17.625072479248047

Token 1637: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3134271204471588
    2. '=lambda' → logprob: -1.3134270906448364
    3. '(lambda' → logprob: -9.063426971435547
    4. ' lambda' → logprob: -10.563426971435547
    5. '```' → logprob: -11.688426971435547
    6. '=' → logprob: -11.813426971435547
    7. 'x' → logprob: -12.313426971435547
    8. 'λ' → logprob: -13.188426971435547
    9. '_lambda' → logprob: -14.688426971435547
    10. '   ' → logprob: -14.938426971435547

Token 1638: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.29340603761375e-05
    2. 'lambda' → logprob: -9.625092506408691
    3. '=' → logprob: -11.250092506408691
    4. '(lambda' → logprob: -11.750092506408691
    5. '=(' → logprob: -12.500092506408691
    6. '```' → logprob: -13.750092506408691
    7. '=x' → logprob: -14.500092506408691
    8. '=None' → logprob: -15.625092506408691
    9. 'x' → logprob: -16.000093460083008
    10. '(' → logprob: -16.250093460083008

Token 1639: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4236960709095001
    2. '(' → logprob: -1.6736960411071777
    3. 'lambda' → logprob: -1.9236960411071777
    4. 'x' → logprob: -5.173696041107178
    5. '(x' → logprob: -5.173696041107178
    6. ' (' → logprob: -8.048696517944336
    7. ' lambda' → logprob: -9.423696517944336
    8. '=lambda' → logprob: -10.673696517944336
    9. '(i' → logprob: -12.798696517944336
    10. '   ' → logprob: -13.923696517944336

Token 1640: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0051991320215165615
    2. '1' → logprob: -6.005198955535889
    3. '0' → logprob: -6.130198955535889
    4. ' x' → logprob: -8.005199432373047
    5. 'lambda' → logprob: -9.255199432373047
    6. '(' → logprob: -9.380199432373047
    7. '[' → logprob: -11.255199432373047
    8. '(x' → logprob: -11.630199432373047
    9. '2' → logprob: -13.130199432373047
    10. ' (' → logprob: -13.880199432373047

Token 1641: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007790116942487657
    2. ',' → logprob: -7.625779151916504
    3. '0' → logprob: -9.125779151916504
    4. '[
' → logprob: -9.250779151916504
    5. '<|end|>' → logprob: -10.875779151916504
    6. '   ' → logprob: -11.875779151916504
    7. '```' → logprob: -12.125779151916504
    8. '
' → logprob: -12.250779151916504
    9. ',
' → logprob: -12.500779151916504
    10. '<|end|>' → logprob: -12.625779151916504

Token 1642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5361934900283813
    2. '2' → logprob: -1.4111934900283813
    3. '0' → logprob: -1.7861934900283813
    4. '3' → logprob: -5.661193370819092
    5. '[' → logprob: -11.16119384765625
    6. '(' → logprob: -11.59869384765625
    7. 'i' → logprob: -11.59869384765625
    8. '{' → logprob: -11.66119384765625
    9. '```' → logprob: -11.72369384765625
    10. '#' → logprob: -12.28619384765625

Token 1643: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020776845514774323
    2. ',x' → logprob: -3.8957767486572266
    3. ',
' → logprob: -9.645776748657227
    4. ',i' → logprob: -10.395776748657227
    5. ',n' → logprob: -10.645776748657227
    6. '<|end|>' → logprob: -11.270776748657227
    7. ',y' → logprob: -11.395776748657227
    8. '
' → logprob: -11.395776748657227
    9. ',index' → logprob: -11.645776748657227
    10. ',len' → logprob: -11.770776748657227

Token 1644: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007255369564518332
    2. ' x' → logprob: -7.250725746154785
    3. '0' → logprob: -12.375725746154785
    4. '3' → logprob: -12.750725746154785
    5. '1' → logprob: -13.000725746154785
    6. '(x' → logprob: -13.375725746154785
    7. '
' → logprob: -13.500725746154785
    8. '   ' → logprob: -14.250725746154785
    9. 'lambda' → logprob: -14.250725746154785
    10. '2' → logprob: -14.625725746154785

Token 1645: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07831896096467972
    2. '2' → logprob: -3.2033190727233887
    3. ',' → logprob: -3.4533190727233887
    4. '3' → logprob: -7.203319072723389
    5. '
' → logprob: -7.453319072723389
    6. '0' → logprob: -7.953319072723389
    7. '```' → logprob: -8.07831859588623
    8. ',
' → logprob: -8.95331859588623
    9. '][' → logprob: -8.95331859588623
    10. ':' → logprob: -9.07831859588623

Token 1646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004666268825531006
    2. '0' → logprob: -5.629666328430176
    3. '3' → logprob: -6.879666328430176
    4. '[' → logprob: -11.004666328430176
    5. '
' → logprob: -11.504666328430176
    6. '-' → logprob: -12.629666328430176
    7. '```' → logprob: -12.754666328430176
    8. '``' → logprob: -14.254666328430176
    9. '   ' → logprob: -14.942166328430176
    10. '`' → logprob: -15.129666328430176

Token 1647: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0700778216123581
    2. '))
' → logprob: -2.695077896118164
    3. ')' → logprob: -9.320077896118164
    4. ',' → logprob: -10.695077896118164
    5. '))

' → logprob: -12.070077896118164
    6. '           ' → logprob: -12.195077896118164
    7. ')))' → logprob: -12.570077896118164
    8. ')
' → logprob: -12.945077896118164
    9. ' ))' → logprob: -13.195077896118164
    10. '))
' → logprob: -13.195077896118164

Token 1648: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11842430382966995
    2. 'for' → logprob: -2.368424415588379
    3. ' for' → logprob: -4.243424415588379
    4. '```' → logprob: -5.868424415588379
    5. '            
' → logprob: -8.118424415588379
    6. '       ' → logprob: -8.493424415588379
    7. '
' → logprob: -9.118424415588379
    8. '``' → logprob: -9.368424415588379
    9. '   ' → logprob: -10.493424415588379
    10. '<|end|>' → logprob: -10.493424415588379

Token 1649: ' spot' (ID: 10021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42711734771728516
    2. '           ' → logprob: -1.1771173477172852
    3. ' for' → logprob: -3.927117347717285
    4. '```' → logprob: -4.052117347717285
    5. '       ' → logprob: -6.802117347717285
    6. '``' → logprob: -7.552117347717285
    7. '               ' → logprob: -8.677117347717285
    8. '
' → logprob: -8.802117347717285
    9. '            
' → logprob: -9.177117347717285
    10. '   ' → logprob: -9.302117347717285

Token 1650: ' asc' (ID: 23334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.07429039478302
    2. '<|end|>' → logprob: -1.07429039478302
    3. ')' → logprob: -2.4492902755737305
    4. '[' → logprob: -3.1992902755737305
    5. '           ' → logprob: -3.1992902755737305
    6. ']' → logprob: -3.5742902755737305
    7. '<|end|>' → logprob: -3.5742902755737305
    8. ',
' → logprob: -4.0742902755737305
    9. '][' → logprob: -4.3242902755737305
    10. 'for' → logprob: -4.9492902755737305

Token 1651: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13480089604854584
    2. '
' → logprob: -2.759800910949707
    3. 'for' → logprob: -3.634800910949707
    4. ')' → logprob: -4.759800910949707
    5. ')
' → logprob: -4.884800910949707
    6. '```' → logprob: -4.884800910949707
    7. '<|end|>' → logprob: -5.259800910949707
    8. '       ' → logprob: -6.509800910949707
    9. ' for' → logprob: -6.634800910949707
    10. ',' → logprob: -6.759800910949707

Token 1652: ' lower' (ID: 6931)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.414302796125412
    2. '0' → logprob: -2.0393028259277344
    3. '           ' → logprob: -3.1643028259277344
    4. 'le' → logprob: -3.5393028259277344
    5. 'key' → logprob: -3.7893028259277344
    6. '
' → logprob: -3.9143028259277344
    7. 'current' → logprob: -4.414302825927734
    8. '#' → logprob: -4.414302825927734
    9. '       ' → logprob: -4.789302825927734
    10. 'for' → logprob: -4.789302825927734

Token 1653: '(' (ID: 7)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05695046856999397
    2. '<|end|>' → logprob: -3.181950569152832
    3. ')
' → logprob: -4.806950569152832
    4. '           ' → logprob: -5.931950569152832
    5. ',' → logprob: -6.931950569152832
    6. '<|end|>' → logprob: -7.431950569152832
    7. '
' → logprob: -8.056950569152832
    8. '),' → logprob: -8.431950569152832
    9. '...' → logprob: -9.431950569152832
    10. '       ' → logprob: -9.681950569152832

Token 1654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859759286046028
    2. ')' → logprob: -3.173597574234009
    3. ',' → logprob: -5.798597812652588
    4. ' ' → logprob: -6.423597812652588
    5. '```' → logprob: -8.29859733581543
    6. '),' → logprob: -8.54859733581543
    7. '<|end|>' → logprob: -8.92359733581543
    8. ' )' → logprob: -9.67359733581543
    9. ')==' → logprob: -9.79859733581543
    10. '1' → logprob: -10.42359733581543

Token 1655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030478201806545258
    2. '),' → logprob: -6.128047943115234
    3. '<|end|>' → logprob: -8.128047943115234
    4. ')
' → logprob: -8.753047943115234
    5. ',' → logprob: -9.378047943115234
    6. '),
' → logprob: -9.878047943115234
    7. ')}}' → logprob: -10.003047943115234
    8. '))' → logprob: -10.003047943115234
    9. ')])' → logprob: -10.253047943115234
    10. ')==' → logprob: -10.503047943115234

Token 1656: ' before' (ID: 2254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1703093945980072
    2. ')
' → logprob: -2.04530930519104
    3. '<|end|>' → logprob: -4.170309543609619
    4. '           ' → logprob: -4.920309543609619
    5. '<|end|>' → logprob: -6.545309543609619
    6. ',' → logprob: -6.920309543609619
    7. '
' → logprob: -7.795309543609619
    8. '),' → logprob: -8.170309066772461
    9. '       ' → logprob: -8.545309066772461
    10. ')#' → logprob: -9.295309066772461

Token 1657: ' upper' (ID: 13057)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007484049070626497
    2. '(' → logprob: -5.632483959197998
    3. 'upper' → logprob: -6.132483959197998
    4. 'x' → logprob: -6.632483959197998
    5. ' (' → logprob: -9.007484436035156
    6. ' ' → logprob: -9.632484436035156
    7. ' x' → logprob: -10.007484436035156
    8. ' upper' → logprob: -10.257484436035156
    9. '(x' → logprob: -10.507484436035156
    10. 'higher' → logprob: -10.632484436035156

Token 1658: '(' (ID: 7)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4380955100059509
    2. '           ' → logprob: -1.0630955696105957
    3. ' for' → logprob: -4.813095569610596
    4. '```' → logprob: -6.938095569610596
    5. '``' → logprob: -9.688095092773438
    6. '
' → logprob: -9.688095092773438
    7. '            
' → logprob: -9.938095092773438
    8. 'while' → logprob: -10.688095092773438
    9. '       ' → logprob: -11.188095092773438
    10. ',' → logprob: -11.188095092773438

Token 1659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6951482892036438
    2. '0' → logprob: -0.8201482892036438
    3. ')' → logprob: -2.820148229598999
    4. ' ' → logprob: -8.070148468017578
    5. '<|end|>' → logprob: -8.195148468017578
    6. '```' → logprob: -8.570148468017578
    7. '),' → logprob: -9.695148468017578
    8. '))' → logprob: -10.570148468017578
    9. '(' → logprob: -10.820148468017578
    10. '<|end|>' → logprob: -11.195148468017578

Token 1660: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02878660336136818
    2. '))' → logprob: -4.278786659240723
    3. ')
' → logprob: -4.278786659240723
    4. '))
' → logprob: -7.403786659240723
    5. ')))' → logprob: -11.153786659240723
    6. ')#' → logprob: -12.403786659240723
    7. ')}' → logprob: -12.653786659240723
    8. '),' → logprob: -13.028786659240723
    9. ' )' → logprob: -13.028786659240723
    10. ')

' → logprob: -13.153786659240723

Token 1661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06378139555454254
    2. 'for' → logprob: -2.813781499862671
    3. ' for' → logprob: -7.188781261444092
    4. '```' → logprob: -7.563781261444092
    5. '       ' → logprob: -8.43878173828125
    6. '   ' → logprob: -8.93878173828125
    7. '
' → logprob: -9.06378173828125
    8. '``' → logprob: -10.18878173828125
    9. '            
' → logprob: -11.81378173828125
    10. '               ' → logprob: -11.93878173828125

Token 1662: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1277206391096115
    2. 'for' (adapté à ' for') → logprob: -2.127720594406128
    3. ' for' → logprob: -7.752720832824707
    4. '```' → logprob: -8.502720832824707
    5. '   ' → logprob: -10.127720832824707
    6. '
' → logprob: -10.252720832824707
    7. 'while' → logprob: -10.877720832824707
    8. 'if' → logprob: -10.877720832824707
    9. '       ' → logprob: -11.002720832824707
    10. '            
' → logprob: -11.377720832824707

Token 1663: ' _,' (ID: 18042)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06539399921894073
    2. '_,' → logprob: -3.4403939247131348
    3. '_time' → logprob: -4.565393924713135
    4. 'leave' → logprob: -4.940393924713135
    5. 't' → logprob: -5.065393924713135
    6. 'le' → logprob: -6.440393924713135
    7. 'event' → logprob: -6.815393924713135
    8. 'current' → logprob: -6.940393924713135
    9. ' time' → logprob: -7.565393924713135
    10. 'cur' → logprob: -7.565393924713135

Token 1664: 'i' (ID: 72)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.20924851298332214
    2. 'i' → logprob: -1.8342485427856445
    3. 'pos' → logprob: -3.5842485427856445
    4. ' spot' → logprob: -7.3342485427856445
    5. '_,' → logprob: -7.9592485427856445
    6. 'idx' → logprob: -8.334248542785645
    7. ' i' → logprob: -10.459248542785645
    8. 'sp' → logprob: -11.209248542785645
    9. '_i' → logprob: -11.584248542785645
    10. ' pos' → logprob: -11.834248542785645

Token 1665: ',pos' (ID: 128292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020389800192788243
    2. '_,' → logprob: -9.375204086303711
    3. ',_' → logprob: -9.875204086303711
    4. ' ,' → logprob: -10.125204086303711
    5. ',i' → logprob: -12.500204086303711
    6. ',(' → logprob: -13.125204086303711
    7. ',v' → logprob: -13.250204086303711
    8. ',n' → logprob: -13.500204086303711
    9. ',s' → logprob: -13.500204086303711
    10. ',w' → logprob: -13.625204086303711

Token 1666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2119332104921341
    2. 'in' → logprob: -2.336933135986328
    3. ' in' → logprob: -2.461933135986328
    4. '```' → logprob: -5.961933135986328
    5. '<|end|>' → logprob: -6.461933135986328
    6. ',_' → logprob: -7.336933135986328
    7. '_,' → logprob: -7.461933135986328
    8. '):
' → logprob: -7.836933135986328
    9. '<|end|>' → logprob: -7.836933135986328
    10. '       ' → logprob: -8.086933135986328

Token 1667: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.011075058951973915
    2. 'cid' → logprob: -4.511075019836426
    3. 'c' → logprob: -11.136075019836426
    4. 'id' → logprob: -12.011075019836426
    5. 'vid' → logprob: -12.761075019836426
    6. 'le' → logprob: -13.886075019836426
    7. 'lid' → logprob: -14.011075019836426
    8. 'leave' → logprob: -14.386075019836426
    9. 'pid' → logprob: -15.136075019836426
    10. ' car' → logprob: -15.136075019836426

Token 1668: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0009611238492652774
    2. 'id' → logprob: -7.1259613037109375
    3. '[' → logprob: -9.500961303710938
    4. '_idx' → logprob: -10.125961303710938
    5. '_' → logprob: -11.375961303710938
    6. '```' → logprob: -11.625961303710938
    7. '   ' → logprob: -12.500961303710938
    8. ' =' → logprob: -12.875961303710938
    9. '_out' → logprob: -13.375961303710938
    10. ')' → logprob: -13.375961303710938

Token 1669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4011087715625763
    2. 'in' → logprob: -1.901108741760254
    3. ':
' → logprob: -1.901108741760254
    4. ':' → logprob: -4.401108741760254
    5. '       ' → logprob: -5.401108741760254
    6. '           ' → logprob: -5.526108741760254
    7. '):
' → logprob: -5.651108741760254
    8. ',' → logprob: -6.026108741760254
    9. '   ' → logprob: -6.276108741760254
    10. '=' → logprob: -6.651108741760254

Token 1670: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -2.5822400857578032e-05
    2. ' leaving' → logprob: -10.625025749206543
    3. 'Leaving' → logprob: -13.750025749206543
    4. '   ' → logprob: -15.750025749206543
    5. 'leave' → logprob: -16.00002670288086
    6. 'list' → logprob: -16.12502670288086
    7. '
' → logprob: -18.00002670288086
    8. '  ' → logprob: -18.37502670288086
    9. '(le' → logprob: -18.50002670288086
    10. ' ' → logprob: -18.87502670288086

Token 1671: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -8.828512363834307e-05
    2. 'now' → logprob: -9.375088691711426
    3. '_NOW' → logprob: -13.375088691711426
    4. '
' → logprob: -14.125088691711426
    5. 'Now' → logprob: -15.000088691711426
    6. '```' → logprob: -15.125088691711426
    7. '_' → logprob: -16.00008773803711
    8. 'car' → logprob: -16.12508773803711
    9. '[now' → logprob: -16.75008773803711
    10. '	now' → logprob: -17.12508773803711

Token 1672: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2595318555831909
    2. '           ' → logprob: -2.0095319747924805
    3. ':' → logprob: -2.6345319747924805
    4. '               ' → logprob: -4.5095319747924805
    5. '       ' → logprob: -5.5095319747924805
    6. '):
' → logprob: -6.3845319747924805
    7. ',' → logprob: -6.6345319747924805
    8. '[' → logprob: -6.7595319747924805
    9. ' spots' → logprob: -7.2595319747924805
    10. '   ' → logprob: -7.5095319747924805

Token 1673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012546854093670845
    2. '           ' → logprob: -5.012547016143799
    3. ' if' → logprob: -6.137547016143799
    4. ' spots' → logprob: -6.262547016143799
    5. '       ' → logprob: -7.512547016143799
    6. '   ' → logprob: -7.637547016143799
    7. 'if' → logprob: -8.38754653930664
    8. 'spots' → logprob: -8.63754653930664
    9. '```' → logprob: -8.76254653930664
    10. '                   ' → logprob: -9.63754653930664

Token 1674: ' if' (ID: 538)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.013473371975123882
    2. '           ' → logprob: -4.6384735107421875
    3. '               ' → logprob: -6.0134735107421875
    4. ' spots' → logprob: -7.3884735107421875
    5. 'output' → logprob: -8.513473510742188
    6. '       ' → logprob: -8.638473510742188
    7. '   ' → logprob: -9.513473510742188
    8. 'if' (adapté à ' if') → logprob: -9.638473510742188
    9. 'spot' → logprob: -10.263473510742188
    10. 'sp' → logprob: -10.263473510742188

Token 1675: ' pos' (ID: 1253)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.04253935068845749
    2. 'pos' → logprob: -3.292539358139038
    3. ' spots' → logprob: -5.667539119720459
    4. '   ' → logprob: -8.042539596557617
    5. 'positions' → logprob: -8.667539596557617
    6. 'sp' → logprob: -8.917539596557617
    7. 'car' → logprob: -9.542539596557617
    8. 'i' → logprob: -9.542539596557617
    9. '
' → logprob: -9.792539596557617
    10. 'spot' → logprob: -10.292539596557617

Token 1676: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01850365474820137
    2. ' ==' → logprob: -4.018503665924072
    3. '==
' → logprob: -8.268503189086914
    4. '0' → logprob: -9.518503189086914
    5. ']==' → logprob: -11.518503189086914
    6. ')==' → logprob: -12.268503189086914
    7. '=' → logprob: -12.893503189086914
    8. '[' → logprob: -13.018503189086914
    9. '===' → logprob: -13.518503189086914
    10. '```' → logprob: -13.893503189086914

Token 1677: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.1250057220459
    4. '   ' → logprob: -19.8750057220459
    5. '           ' → logprob: -20.7500057220459
    6. '۰' → logprob: -20.8750057220459
    7. '
' → logprob: -21.0000057220459
    8. '`' → logprob: -21.3750057220459
    9. '=' → logprob: -21.5000057220459
    10. '               ' → logprob: -21.6250057220459

Token 1678: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -19.5
    5. '<|end|>' → logprob: -19.5
    6. '`' → logprob: -19.5
    7. '۰' → logprob: -19.75
    8. '=' → logprob: -19.8125
    9. '1' → logprob: -19.875
    10. 'lower' → logprob: -20.125

Token 1679: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5118486285209656
    2. '                   ' → logprob: -1.0118486881256104
    3. '               ' → logprob: -4.511848449707031
    4. ' and' → logprob: -4.761848449707031
    5. '           ' → logprob: -5.261848449707031
    6. '                       ' → logprob: -5.261848449707031
    7. ':' → logprob: -5.386848449707031
    8. 'and' → logprob: -7.386848449707031
    9. '                           ' → logprob: -7.511848449707031
    10. '   ' → logprob: -9.011848449707031

Token 1680: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1788148432970047
    2. '               ' → logprob: -2.8038148880004883
    3. '           ' → logprob: -3.4288148880004883
    4. '                       ' → logprob: -3.8038148880004883
    5. 'spots' → logprob: -3.8038148880004883
    6. ' spots' → logprob: -3.9288148880004883
    7. '       ' → logprob: -5.928814888000488
    8. '```' → logprob: -6.428814888000488
    9. '
' → logprob: -7.053814888000488
    10. '   ' → logprob: -7.428814888000488

Token 1681: ' #' (ID: 1069)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.004044683184474707
    2. '               ' → logprob: -6.504044532775879
    3. ' spots' → logprob: -6.754044532775879
    4. '                       ' → logprob: -6.879044532775879
    5. '           ' → logprob: -9.004044532775879
    6. '       ' → logprob: -9.004044532775879
    7. '                   ' → logprob: -9.629044532775879
    8. '   ' → logprob: -11.504044532775879
    9. 'spot' → logprob: -12.129044532775879
    10. 'sp' → logprob: -12.504044532775879

Token 1682: ' lower' (ID: 6931)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -9.698698704596609e-05
    2. ' spots' → logprob: -10.375097274780273
    3. '               ' → logprob: -10.500097274780273
    4. '           ' → logprob: -11.000097274780273
    5. '                       ' → logprob: -11.750097274780273
    6. 'spot' → logprob: -12.500097274780273
    7. '#' → logprob: -12.625097274780273
    8. '                   ' → logprob: -13.000097274780273
    9. '       ' → logprob: -13.750097274780273
    10. 'if' → logprob: -13.875097274780273

Token 1683: ' car' (ID: 1669)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.06854210048913956
    2. ' spots' → logprob: -3.443542003631592
    3. '                   ' → logprob: -4.443542003631592
    4. '```' → logprob: -5.318542003631592
    5. ' =' → logprob: -5.693542003631592
    6. '[' → logprob: -5.693542003631592
    7. '[i' → logprob: -5.943542003631592
    8. '               ' → logprob: -6.443542003631592
    9. '=' → logprob: -6.693542003631592
    10. '                       ' → logprob: -6.693542003631592

Token 1684: ' leaves' (ID: 15657)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.31719428300857544
    2. '                   ' → logprob: -1.8171942234039307
    3. '               ' → logprob: -3.4421942234039307
    4. ' spots' → logprob: -3.5671942234039307
    5. ' =' → logprob: -3.6921942234039307
    6. '=' → logprob: -4.69219446182251
    7. '           ' → logprob: -4.81719446182251
    8. '                       ' → logprob: -6.06719446182251
    9. '       ' → logprob: -6.81719446182251
    10. 'if' → logprob: -7.69219446182251

Token 1685: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10184385627508163
    2. 'spots' → logprob: -2.85184383392334
    3. '                       ' → logprob: -3.97684383392334
    4. '           ' → logprob: -4.72684383392334
    5. ' spots' → logprob: -5.10184383392334
    6. '               ' → logprob: -5.47684383392334
    7. '       ' → logprob: -7.47684383392334
    8. '```' → logprob: -7.85184383392334
    9. '                           ' → logprob: -9.47684383392334
    10. '   ' → logprob: -9.47684383392334

Token 1686: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3065233528614044
    2. '                   ' → logprob: -1.681523323059082
    3. 'spots' → logprob: -3.056523323059082
    4. ' spots' → logprob: -4.431523323059082
    5. '               ' → logprob: -4.806523323059082
    6. '       ' → logprob: -5.056523323059082
    7. '           ' → logprob: -5.806523323059082
    8. '```' → logprob: -7.681523323059082
    9. '                        
' → logprob: -7.806523323059082
    10. '                           ' → logprob: -8.556523323059082

Token 1687: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.015088862739503384
    2. ' spots' → logprob: -5.01508903503418
    3. '                       ' → logprob: -5.14008903503418
    4. '                   ' → logprob: -6.39008903503418
    5. '       ' → logprob: -8.01508903503418
    6. '               ' → logprob: -8.39008903503418
    7. '           ' → logprob: -9.01508903503418
    8. 'sp' → logprob: -10.26508903503418
    9. 'if' → logprob: -10.76508903503418
    10. '   ' → logprob: -10.89008903503418

Token 1688: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '][' → logprob: -15.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. ')[' → logprob: -15.875000953674316
    5. '```' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.875001907348633
    7. 'i' → logprob: -16.875001907348633
    8. '
' → logprob: -17.750001907348633
    9. ' [' → logprob: -17.750001907348633
    10. '=' → logprob: -17.750001907348633

Token 1689: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0512566938996315
    2. '[i' → logprob: -3.0512566566467285
    3. '[' → logprob: -7.0512566566467285
    4. '[pos' → logprob: -7.6762566566467285
    5. ')[' → logprob: -7.9262566566467285
    6. '           ' → logprob: -8.176257133483887
    7. '                   ' → logprob: -8.676257133483887
    8. '   ' → logprob: -9.426257133483887
    9. '               ' → logprob: -9.551257133483887
    10. '
' → logprob: -9.676257133483887

Token 1690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -17.0
    4. '[' → logprob: -17.25
    5. '۰' → logprob: -17.875
    6. '```' → logprob: -18.375
    7. 'None' → logprob: -19.375
    8. '
' → logprob: -19.8125
    9. '০' → logprob: -20.125
    10. '०' → logprob: -20.1875

Token 1691: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052708727307617664
    2. ' =' → logprob: -5.380270957946777
    3. ']=' → logprob: -8.130270957946777
    4. '=None' → logprob: -8.255270957946777
    5. ']' → logprob: -10.380270957946777
    6. ')=' → logprob: -10.380270957946777
    7. ')' → logprob: -10.380270957946777
    8. '=
' → logprob: -14.130270957946777
    9. '<|end|>' → logprob: -14.130270957946777
    10. '                   ' → logprob: -14.505270957946777

Token 1692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002639582962729037
    2. ' =' → logprob: -8.250264167785645
    3. '=None' → logprob: -12.875264167785645
    4. ']=' → logprob: -17.000263214111328
    5. '=
' → logprob: -17.375263214111328
    6. ')=' → logprob: -19.000263214111328
    7. '＝' → logprob: -19.875263214111328
    8. 'None' → logprob: -20.125263214111328
    9. '=

' → logprob: -20.125263214111328
    10. '```' → logprob: -20.250263214111328

Token 1693: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. '(None' → logprob: -17.625036239624023
    4. '   ' → logprob: -19.125036239624023
    5. '_None' → logprob: -20.000036239624023
    6. '=None' → logprob: -20.500036239624023
    7. ',None' → logprob: -22.125036239624023
    8. 'none' → logprob: -22.500036239624023
    9. '                   ' → logprob: -22.750036239624023
    10. '_none' → logprob: -24.000036239624023

Token 1694: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8264009952545166
    2. '               ' → logprob: -1.0764009952545166
    3. '<|end|>' → logprob: -1.5764009952545166
    4. '           ' → logprob: -5.2014007568359375
    5. '       ' → logprob: -6.3264007568359375
    6. '                       ' → logprob: -6.5764007568359375
    7. '                    
' → logprob: -6.5764007568359375
    8. '
' → logprob: -6.8264007568359375
    9. '                        
' → logprob: -7.5764007568359375
    10. '                
' → logprob: -7.7014007568359375

Token 1695: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.659147322177887
    2. '               ' → logprob: -0.784147322177887
    3. '<|end|>' → logprob: -3.909147262573242
    4. '           ' → logprob: -6.284147262573242
    5. '                       ' → logprob: -6.534147262573242
    6. '       ' → logprob: -6.659147262573242
    7. 'continue' → logprob: -8.159147262573242
    8. '```' → logprob: -8.409147262573242
    9. '                    
' → logprob: -8.534147262573242
    10. '                           ' → logprob: -8.534147262573242

Token 1696: ' output' (ID: 4733)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -1.024174690246582
    2. '                   ' → logprob: -1.149174690246582
    3. '           ' → logprob: -2.024174690246582
    4. '                       ' → logprob: -2.524174690246582
    5. '```' → logprob: -3.274174690246582
    6. '               ' → logprob: -3.399174690246582
    7. 'if' → logprob: -3.899174690246582
    8. ' spots' → logprob: -5.149174690246582
    9. '       ' → logprob: -5.274174690246582
    10. 'for' → logprob: -5.649174690246582

Token 1697: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020890454470645636
    2. '.' → logprob: -8.500208854675293
    3. '.app' → logprob: -13.000208854675293
    4. ' .' → logprob: -13.125208854675293
    5. 'append' → logprob: -14.750208854675293
    6. '.extend' → logprob: -15.000208854675293
    7. '.Append' → logprob: -16.50020980834961
    8. 'Append' → logprob: -16.75020980834961
    9. '_append' → logprob: -16.75020980834961
    10. '.ap' → logprob: -16.87520980834961

Token 1698: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.01929723285138607
    2. '((' → logprob: -4.144297122955322
    3. '(' → logprob: -5.769297122955322
    4. '(f' → logprob: -9.51929759979248
    5. 'car' → logprob: -10.01929759979248
    6. '(
' → logprob: -12.39429759979248
    7. '(c' → logprob: -12.76929759979248
    8. ' (' → logprob: -13.26929759979248
    9. '```' → logprob: -13.39429759979248
    10. '(('' → logprob: -13.76929759979248

Token 1699: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -11.625041961669922
    3. '[
' → logprob: -11.625041961669922
    4. ')' → logprob: -12.750041961669922
    5. ' _' → logprob: -13.000041961669922
    6. '[_' → logprob: -13.125041961669922
    7. ']_' → logprob: -13.250041961669922
    8. '_i' → logprob: -13.500041961669922
    9. ')_' → logprob: -13.500041961669922
    10. '_' → logprob: -13.500041961669922

Token 1700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04310321435332298
    2. ')
' → logprob: -3.1681032180786133
    3. '<|end|>' → logprob: -9.918103218078613
    4. '                   ' → logprob: -11.793103218078613
    5. ')\' → logprob: -11.918103218078613
    6. '
' → logprob: -11.918103218078613
    7. '               ' → logprob: -12.043103218078613
    8. ')

' → logprob: -12.418103218078613
    9. ')return' → logprob: -12.793103218078613
    10. ')
' → logprob: -13.043103218078613

Token 1701: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4974905252456665
    2. '           ' → logprob: -1.9974905252456665
    3. '                   ' → logprob: -2.497490406036377
    4. '       ' → logprob: -2.622490406036377
    5. '```' → logprob: -2.747490406036377
    6. '
' → logprob: -4.372490406036377
    7. '<|end|>' → logprob: -4.372490406036377
    8. '``' → logprob: -6.122490406036377
    9. '            
' → logprob: -6.122490406036377
    10. '                    
' → logprob: -6.747490406036377

Token 1702: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13759514689445496
    2. '               ' → logprob: -2.7625951766967773
    3. '                   ' → logprob: -2.8875951766967773
    4. '       ' → logprob: -6.387595176696777
    5. 'for' → logprob: -6.512595176696777
    6. 'elif' → logprob: -6.637595176696777
    7. '```' → logprob: -6.762595176696777
    8. 'if' → logprob: -6.762595176696777
    9. '<|end|>' → logprob: -7.137595176696777
    10. 'spots' → logprob: -7.262595176696777

Token 1703: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001328095211647451
    2. '[' → logprob: -6.751327991485596
    3. '```' → logprob: -10.126328468322754
    4. '[id' → logprob: -10.751328468322754
    5. '[idx' → logprob: -10.876328468322754
    6. '=' → logprob: -11.126328468322754
    7. '=True' → logprob: -11.626328468322754
    8. '[pos' → logprob: -11.876328468322754
    9. '[ind' → logprob: -12.001328468322754
    10. '[index' → logprob: -12.501328468322754

Token 1704: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0007419686880894005
    2. 'i' → logprob: -7.625741958618164
    3. '_]' → logprob: -9.375741958618164
    4. 'left' → logprob: -9.750741958618164
    5. '_' → logprob: -10.250741958618164
    6. '_car' → logprob: -10.625741958618164
    7. '(car' → logprob: -11.250741958618164
    8. 'pos' → logprob: -11.750741958618164
    9. ' car' → logprob: -12.500741958618164
    10. '0' → logprob: -12.625741958618164

Token 1705: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.03403153643012047
    2. '_idx' → logprob: -3.409031629562378
    3. '_i' → logprob: -8.284031867980957
    4. 'i' → logprob: -9.659031867980957
    5. 'id' → logprob: -10.534031867980957
    6. 'd' → logprob: -11.034031867980957
    7. '[i' → logprob: -11.784031867980957
    8. 'idx' → logprob: -12.409031867980957
    9. '[id' → logprob: -12.534031867980957
    10. '_index' → logprob: -12.784031867980957

Token 1706: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10666380077600479
    2. ']==' → logprob: -2.356663703918457
    3. '[' → logprob: -5.856663703918457
    4. ']=' → logprob: -6.731663703918457
    5. ' ]' → logprob: -7.106663703918457
    6. '-' → logprob: -7.981663703918457
    7. '==' → logprob: -8.106663703918457
    8. ']
' → logprob: -8.981663703918457
    9. '[i' → logprob: -8.981663703918457
    10. ']!=' → logprob: -9.606663703918457

Token 1707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.0
    4. '0' → logprob: -18.0
    5. '   ' → logprob: -18.25
    6. '2' → logprob: -18.5
    7. '<|end|>' → logprob: -18.75
    8. '۱' → logprob: -19.9375
    9. '=' → logprob: -19.9375
    10. '
' → logprob: -20.0625

Token 1708: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04409833997488022
    2. ']=' → logprob: -3.544098377227783
    3. '=' → logprob: -4.294098377227783
    4. ' =' → logprob: -7.919098377227783
    5. '=True' → logprob: -8.669097900390625
    6. ' ]' → logprob: -9.794097900390625
    7. ')' → logprob: -12.794097900390625
    8. '   ' → logprob: -14.294097900390625
    9. ')=' → logprob: -14.669097900390625
    10. '']=' → logprob: -14.794097900390625

Token 1709: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.961759259458631e-06
    2. ' True' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. '=True' → logprob: -19.3750057220459
    5. '(True' → logprob: -19.7500057220459
    6. '1' → logprob: -20.8750057220459
    7. '       ' → logprob: -21.6250057220459
    8. '           ' → logprob: -21.6250057220459
    9. '    ' → logprob: -22.1250057220459
    10. '                   ' → logprob: -22.6250057220459

Token 1710: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1579100638628006
    2. '               ' → logprob: -2.407910108566284
    3. '                   ' → logprob: -4.157909870147705
    4. '<|end|>' → logprob: -4.157909870147705
    5. '       ' → logprob: -4.407909870147705
    6. '
' → logprob: -5.282909870147705
    7. 'elif' → logprob: -5.907909870147705
    8. ' spots' → logprob: -7.032909870147705
    9. '```' → logprob: -7.032909870147705
    10. '            
' → logprob: -7.782909870147705

Token 1711: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4159605801105499
    2. '                   ' → logprob: -1.6659605503082275
    3. '           ' → logprob: -2.1659605503082275
    4. '       ' → logprob: -3.6659605503082275
    5. '<|end|>' → logprob: -5.290960788726807
    6. '```' → logprob: -5.790960788726807
    7. '
' → logprob: -7.040960788726807
    8. 'elif' → logprob: -8.040960311889648
    9. '                       ' → logprob: -8.165960311889648
    10. '   ' → logprob: -8.540960311889648

Token 1712: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6325486898422241
    2. '               ' → logprob: -0.8825486898422241
    3. 'elif' → logprob: -3.3825488090515137
    4. '                   ' → logprob: -5.007548809051514
    5. '       ' → logprob: -5.257548809051514
    6. '```' → logprob: -6.007548809051514
    7. 'else' → logprob: -6.132548809051514
    8. 'for' → logprob: -6.882548809051514
    9. ' elif' → logprob: -7.257548809051514
    10. 'if' → logprob: -7.257548809051514

Token 1713: ' upper' (ID: 13057)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6142590045928955
    2. '           ' → logprob: -1.2392590045928955
    3. '               ' → logprob: -2.3642590045928955
    4. ' elif' → logprob: -3.9892590045928955
    5. 'else' → logprob: -4.239258766174316
    6. '       ' → logprob: -4.364258766174316
    7. 'if' → logprob: -4.614258766174316
    8. '#' → logprob: -4.739258766174316
    9. 'for' → logprob: -6.114258766174316
    10. '                   ' → logprob: -6.239258766174316

Token 1714: ' leave' (ID: 7668)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3959892988204956
    2. 'car' → logprob: -1.5209892988204956
    3. ' if' → logprob: -1.6459892988204956
    4. '==' → logprob: -2.270989418029785
    5. ' ==' → logprob: -2.770989418029785
    6. ' and' → logprob: -2.895989418029785
    7. 'elif' → logprob: -3.395989418029785
    8. 'and' → logprob: -3.645989418029785
    9. ' car' → logprob: -4.645989418029785
    10. ',' → logprob: -5.145989418029785

Token 1715: ' delayed' (ID: 40480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9569429755210876
    2. '           ' → logprob: -1.3319430351257324
    3. '                   ' → logprob: -2.0819430351257324
    4. ' =' → logprob: -2.4569430351257324
    5. 'if' → logprob: -3.3319430351257324
    6. ' and' → logprob: -3.8319430351257324
    7. 'and' → logprob: -3.8319430351257324
    8. ' if' → logprob: -3.9569430351257324
    9. '=' → logprob: -4.081943035125732
    10. '==' → logprob: -6.081943035125732

Token 1716: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1271761953830719
    2. '               ' → logprob: -2.627176284790039
    3. '
' → logprob: -3.252176284790039
    4. '       ' → logprob: -5.127176284790039
    5. '<|end|>' → logprob: -6.752176284790039
    6. 'elif' → logprob: -8.127176284790039
    7. '   ' → logprob: -8.502176284790039
    8. 'if' → logprob: -9.252176284790039
    9. 'else' → logprob: -9.377176284790039
    10. 'for' → logprob: -9.377176284790039

Token 1717: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7059823870658875
    2. '                   ' → logprob: -2.0809824466705322
    3. ' if' → logprob: -2.5809824466705322
    4. '           ' → logprob: -2.8309824466705322
    5. 'if' → logprob: -2.8309824466705322
    6. ' and' → logprob: -3.4559824466705322
    7. '   ' → logprob: -3.4559824466705322
    8. '<|end|>' → logprob: -3.4559824466705322
    9. '       ' → logprob: -4.080982208251953
    10. 'elif' → logprob: -4.205982208251953

Token 1718: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01416256744414568
    2. '       ' → logprob: -4.889162540435791
    3. '               ' → logprob: -5.889162540435791
    4. 'for' → logprob: -6.514162540435791
    5. '
' → logprob: -7.139162540435791
    6. 'if' → logprob: -7.639162540435791
    7. ' for' → logprob: -8.51416301727295
    8. '```' → logprob: -8.63916301727295
    9. 'else' → logprob: -8.76416301727295
    10. 'elif' → logprob: -9.01416301727295

Token 1719: ' now' (ID: 1954)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005505760665982962
    2. 'for' → logprob: -5.255505561828613
    3. ' for' → logprob: -8.505505561828613
    4. '
' → logprob: -10.755505561828613
    5. '       ' → logprob: -11.005505561828613
    6. 'upper' → logprob: -11.255505561828613
    7. '```' → logprob: -12.255505561828613
    8. '               ' → logprob: -12.255505561828613
    9. '   ' → logprob: -12.505505561828613
    10. '            
' → logprob: -13.005505561828613

Token 1720: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024941744282841682
    2. 'for' → logprob: -4.024941921234131
    3. ' for' → logprob: -5.024941921234131
    4. '   ' → logprob: -9.524941444396973
    5. '       ' → logprob: -9.774941444396973
    6. ',' → logprob: -10.774941444396973
    7. 'upper' → logprob: -11.024941444396973
    8. '#' → logprob: -11.899941444396973
    9. '               ' → logprob: -12.149941444396973
    10. 'le' → logprob: -12.649941444396973

Token 1721: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25965818762779236
    2. '           ' → logprob: -2.259658098220825
    3. ' for' → logprob: -2.384658098220825
    4. '   ' → logprob: -3.884658098220825
    5. 'upper' → logprob: -5.134658336639404
    6. '       ' → logprob: -5.259658336639404
    7. '```' → logprob: -8.759657859802246
    8. ' upper' → logprob: -8.884657859802246
    9. ' ' → logprob: -9.884657859802246
    10. '
' → logprob: -10.384657859802246

Token 1722: ' cars' (ID: 13653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5480855107307434
    2. ' for' → logprob: -0.9230855107307434
    3. 'car' → logprob: -4.548085689544678
    4. '
' → logprob: -5.423085689544678
    5. 'cars' → logprob: -5.923085689544678
    6. '           ' → logprob: -6.423085689544678
    7. '   ' → logprob: -6.673085689544678
    8. ' cars' → logprob: -7.173085689544678
    9. '       ' → logprob: -7.548085689544678
    10. ' =' → logprob: -8.04808521270752

Token 1723: ' leaving' (ID: 15021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005022776313126087
    2. 'for' → logprob: -7.750502109527588
    3. ' for' → logprob: -9.875502586364746
    4. '       ' → logprob: -11.125502586364746
    5. '               ' → logprob: -13.000502586364746
    6. '   ' → logprob: -13.250502586364746
    7. '
' → logprob: -14.625502586364746
    8. ',' → logprob: -15.250502586364746
    9. '            
' → logprob: -15.500502586364746
    10. '	       ' → logprob: -15.625502586364746

Token 1724: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12074366956949234
    2. 'for' → logprob: -2.245743751525879
    3. ' for' → logprob: -4.870743751525879
    4. '       ' → logprob: -8.620743751525879
    5. '               ' → logprob: -11.245743751525879
    6. '   ' → logprob: -11.370743751525879
    7. '```' → logprob: -11.620743751525879
    8. '
' → logprob: -13.370743751525879
    9. 'and' → logprob: -13.870743751525879
    10. ' and' → logprob: -13.995743751525879

Token 1725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006621111650019884
    2. 'for' → logprob: -5.75662088394165
    3. ' for' → logprob: -5.88162088394165
    4. '       ' → logprob: -8.131621360778809
    5. '```' → logprob: -8.256621360778809
    6. '   ' → logprob: -10.006621360778809
    7. '               ' → logprob: -11.506621360778809
    8. '<|end|>' → logprob: -11.881621360778809
    9. '``' → logprob: -12.006621360778809
    10. ',' → logprob: -12.256621360778809

Token 1726: ' upper' (ID: 13057)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1632305532693863
    2. 'for' → logprob: -1.913230538368225
    3. ' for' → logprob: -6.0382304191589355
    4. '       ' → logprob: -8.163230895996094
    5. '```' → logprob: -8.163230895996094
    6. '   ' → logprob: -10.538230895996094
    7. '``' → logprob: -11.913230895996094
    8. '               ' → logprob: -12.038230895996094
    9. '          ' → logprob: -12.788230895996094
    10. 'le' → logprob: -13.913230895996094

Token 1727: '_le' (ID: 27121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.369598150253296
    2. '=' → logprob: -1.869598150253296
    3. '_le' → logprob: -1.869598150253296
    4. 'le' → logprob: -2.119598150253296
    5. '_now' → logprob: -2.119598150253296
    6. 'for' → logprob: -2.744598150253296
    7. '_c' → logprob: -3.119598150253296
    8. 's' → logprob: -3.494598150253296
    9. 'cars' → logprob: -4.119598388671875
    10. 'car' → logprob: -4.869598388671875

Token 1728: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -0.22697530686855316
    2. 'ave' → logprob: -1.6019753217697144
    3. 'av' → logprob: -7.601975440979004
    4. 'ft' → logprob: -8.351975440979004
    5. 'ving' → logprob: -8.351975440979004
    6. 'aves' → logprob: -8.476975440979004
    7. 'avers' → logprob: -9.351975440979004
    8. 'avings' → logprob: -9.351975440979004
    9. 'avin' → logprob: -9.976975440979004
    10. 'avel' → logprob: -10.476975440979004

Token 1729: '_now' (ID: 49444)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8492338061332703
    2. ' =' → logprob: -0.9742338061332703
    3. '_now' → logprob: -1.724233865737915
    4. 'now' → logprob: -5.724233627319336
    5. '=[]' → logprob: -6.099233627319336
    6. '=[]
' → logprob: -6.224233627319336
    7. '```' → logprob: -6.224233627319336
    8. 'Now' → logprob: -6.474233627319336
    9. 's' → logprob: -6.849233627319336
    10. '=[' → logprob: -7.099233627319336

Token 1730: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43307122588157654
    2. '=' → logprob: -1.058071255683899
    3. '=[]' → logprob: -5.933071136474609
    4. '=[]
' → logprob: -6.558071136474609
    5. 'for' → logprob: -9.55807113647461
    6. '           ' → logprob: -9.80807113647461
    7. '=[' → logprob: -10.68307113647461
    8. '=True' → logprob: -10.68307113647461
    9. '```' → logprob: -10.80807113647461
    10. '=
' → logprob: -11.18307113647461

Token 1731: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.008171973749995232
    2. '[]' → logprob: -5.508172035217285
    3. '[(' → logprob: -5.508172035217285
    4. '[' → logprob: -11.508172035217285
    5. 'True' → logprob: -11.883172035217285
    6. ' []
' → logprob: -11.883172035217285
    7. '[]

' → logprob: -12.508172035217285
    8. '[
' → logprob: -13.633172035217285
    9. '[((' → logprob: -14.008172035217285
    10. '[i' → logprob: -14.133172035217285

Token 1732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020673971623182297
    2. 'for' → logprob: -4.020673751831055
    3. ' for' → logprob: -6.020673751831055
    4. '```' → logprob: -9.520673751831055
    5. '               ' → logprob: -11.770673751831055
    6. '       ' → logprob: -11.770673751831055
    7. '   ' → logprob: -13.270673751831055
    8. '          ' → logprob: -14.395673751831055
    9. '``' → logprob: -14.520673751831055
    10. '                   ' → logprob: -15.020673751831055

Token 1733: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023341795429587364
    2. '           ' → logprob: -3.7733418941497803
    3. ' for' → logprob: -9.39834213256836
    4. '       ' → logprob: -11.39834213256836
    5. '   ' → logprob: -13.39834213256836
    6. '```' → logprob: -14.89834213256836
    7. '               ' → logprob: -15.39834213256836
    8. '
' → logprob: -16.77334213256836
    9. '	for' → logprob: -16.89834213256836
    10. '          ' → logprob: -17.52334213256836

Token 1734: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00319304340519011
    2. ' i' → logprob: -5.753192901611328
    3. '   ' → logprob: -11.378192901611328
    4. '       ' → logprob: -14.128192901611328
    5. '    ' → logprob: -14.753192901611328
    6. ' ' → logprob: -15.003192901611328
    7. '           ' → logprob: -15.128192901611328
    8. 'j' → logprob: -15.253192901611328
    9. '```' → logprob: -15.378192901611328
    10. '0' → logprob: -15.503192901611328

Token 1735: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023257127031683922
    2. 'in' → logprob: -3.77325701713562
    3. 'range' → logprob: -12.1482572555542
    4. ',' → logprob: -13.1482572555542
    5. 'n' → logprob: -13.8982572555542
    6. ' ' → logprob: -14.2732572555542
    7. '```' → logprob: -14.5232572555542
    8. '   ' → logprob: -14.8982572555542
    9. ' range' → logprob: -15.1482572555542
    10. '[' → logprob: -15.6482572555542

Token 1736: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005532711511477828
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -15.625553131103516
    4. '0' → logprob: -17.250553131103516
    5. '
' → logprob: -17.375553131103516
    6. 'spots' → logprob: -17.875553131103516
    7. '```' → logprob: -18.625553131103516
    8. '   ' → logprob: -19.000553131103516
    9. '	range' → logprob: -19.125553131103516
    10. 'in' → logprob: -19.250553131103516

Token 1737: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5880617499351501
    2. 'range' → logprob: -0.8380617499351501
    3. '(m' → logprob: -4.963061809539795
    4. ' range' → logprob: -5.338061809539795
    5. '(range' → logprob: -8.963061332702637
    6. ' m' → logprob: -9.713061332702637
    7. '
' → logprob: -11.213061332702637
    8. 'in' → logprob: -11.213061332702637
    9. ' (' → logprob: -11.838061332702637
    10. '           ' → logprob: -12.338061332702637

Token 1738: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005879494361579418
    2. '               ' → logprob: -5.6308794021606445
    3. '           ' → logprob: -7.0058794021606445
    4. '):' → logprob: -7.5058794021606445
    5. ':
' → logprob: -7.8808794021606445
    6. ']:
' → logprob: -8.380879402160645
    7. '       ' → logprob: -9.005879402160645
    8. '[' → logprob: -10.630879402160645
    9. ':' → logprob: -11.005879402160645
    10. ',' → logprob: -11.755879402160645

Token 1739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023117882665246725
    2. 'upper' → logprob: -6.127311706542969
    3. 'lower' → logprob: -10.127311706542969
    4. '   ' → logprob: -10.252311706542969
    5. '           ' → logprob: -10.377311706542969
    6. ' upper' → logprob: -11.377311706542969
    7. '                   ' → logprob: -12.752311706542969
    8. 'u' → logprob: -13.627311706542969
    9. '```' → logprob: -13.877311706542969
    10. '       ' → logprob: -14.127311706542969

Token 1740: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.10090804100036621
    2. '               ' → logprob: -2.350908041000366
    3. '   ' → logprob: -8.100908279418945
    4. ' upper' → logprob: -8.725908279418945
    5. '           ' → logprob: -8.850908279418945
    6. '       ' → logprob: -10.600908279418945
    7. 'u' → logprob: -10.600908279418945
    8. 'up' → logprob: -10.975908279418945
    9. '                   ' → logprob: -11.225908279418945
    10. 'lower' → logprob: -11.975908279418945

Token 1741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3898826539516449
    2. ' =' → logprob: -1.1398826837539673
    3. 'spot' → logprob: -6.889882564544678
    4. 'car' → logprob: -7.014882564544678
    5. '_sp' → logprob: -7.514882564544678
    6. '_car' → logprob: -8.514883041381836
    7. 'spots' → logprob: -9.889883041381836
    8. '_slot' → logprob: -10.139883041381836
    9. '   ' → logprob: -10.264883041381836
    10. 'slot' → logprob: -10.389883041381836

Token 1742: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.12711676955223083
    2. ' spots' → logprob: -2.1271166801452637
    3. '           ' → logprob: -8.752117156982422
    4. '               ' → logprob: -11.502117156982422
    5. '       ' → logprob: -12.127117156982422
    6. '   ' → logprob: -12.252117156982422
    7. 'spot' → logprob: -12.752117156982422
    8. 'sp' → logprob: -13.627117156982422
    9. 'slots' → logprob: -14.252117156982422
    10. 'sports' → logprob: -14.502117156982422

Token 1743: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2842308680992573e-05
    2. 'i' → logprob: -10.750022888183594
    3. '(i' → logprob: -14.500022888183594
    4. '[' → logprob: -14.750022888183594
    5. '][' → logprob: -17.000022888183594
    6. '[
' → logprob: -17.000022888183594
    7. 'import' → logprob: -17.250022888183594
    8. '   ' → logprob: -17.375022888183594
    9. '           ' → logprob: -17.375022888183594
    10. ')[' → logprob: -17.500022888183594

Token 1744: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004752407781779766
    2. '[' → logprob: -5.3797526359558105
    3. ']' → logprob: -10.129752159118652
    4. ')[' → logprob: -10.379752159118652
    5. '1' → logprob: -11.254752159118652
    6. '           ' → logprob: -11.754752159118652
    7. '```' → logprob: -12.004752159118652
    8. ' ][' → logprob: -12.129752159118652
    9. '0' → logprob: -12.504752159118652
    10. '"][' → logprob: -12.504752159118652

Token 1745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28192973136901855
    2. 'i' → logprob: -1.4069297313690186
    3. '0' → logprob: -8.031929969787598
    4. '][' → logprob: -8.406929969787598
    5. '[' → logprob: -9.781929969787598
    6. ' i' → logprob: -9.906929969787598
    7. '   ' → logprob: -10.531929969787598
    8. '[i' → logprob: -10.781929969787598
    9. '
' → logprob: -11.031929969787598
    10. ']' → logprob: -11.031929969787598

Token 1746: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1630648821592331
    2. ']
' → logprob: -2.038064956665039
    3. '           ' → logprob: -4.663064956665039
    4. ']' → logprob: -4.913064956665039
    5. '
' → logprob: -6.288064956665039
    6. '```' → logprob: -8.163064956665039
    7. 'if' → logprob: -8.663064956665039
    8. ')
' → logprob: -8.663064956665039
    9. 'and' → logprob: -8.663064956665039
    10. '                   ' → logprob: -8.788064956665039

Token 1747: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015455135144293308
    2. 'if' → logprob: -9.125154495239258
    3. '           ' → logprob: -10.875154495239258
    4. '```' → logprob: -10.875154495239258
    5. '                   ' → logprob: -12.750154495239258
    6. ' if' → logprob: -12.875154495239258
    7. '	           ' → logprob: -14.250154495239258
    8. '		       ' → logprob: -14.750154495239258
    9. '       ' → logprob: -15.000154495239258
    10. '	       ' → logprob: -15.625154495239258

Token 1748: ' lower' (ID: 6931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062276650220155716
    2. '               ' → logprob: -2.812276601791382
    3. ' if' → logprob: -8.437276840209961
    4. '```' → logprob: -10.312276840209961
    5. 'upper' → logprob: -10.437276840209961
    6. 'lower' (adapté à ' lower') → logprob: -11.312276840209961
    7. '           ' → logprob: -11.437276840209961
    8. '``' → logprob: -12.312276840209961
    9. '                   ' → logprob: -14.062276840209961
    10. '       ' → logprob: -14.937276840209961

Token 1749: ' =' (ID: 314)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4765719473361969
    2. ' and' → logprob: -0.9765719175338745
    3. ' is' → logprob: -6.726572036743164
    4. ' =' → logprob: -7.101572036743164
    5. '=' → logprob: -8.476572036743164
    6. 'if' → logprob: -9.226572036743164
    7. 'is' → logprob: -9.351572036743164
    8. ' if' → logprob: -10.976572036743164
    9. '=None' → logprob: -11.851572036743164
    10. '```' → logprob: -11.976572036743164

Token 1750: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.009796937927603722
    2. ' spots' → logprob: -4.634797096252441
    3. 'spot' → logprob: -11.259797096252441
    4. '   ' → logprob: -11.884797096252441
    5. 'sp' → logprob: -12.134797096252441
    6. 'slots' → logprob: -12.259797096252441
    7. '       ' → logprob: -13.009797096252441
    8. '           ' → logprob: -13.384797096252441
    9. '[' → logprob: -14.134797096252441
    10. 'None' → logprob: -14.134797096252441

Token 1751: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001933397026732564
    2. 'i' → logprob: -6.251933574676514
    3. '(i' → logprob: -13.126933097839355
    4. '[' → logprob: -13.501933097839355
    5. 'None' → logprob: -14.751933097839355
    6. '```' → logprob: -14.876933097839355
    7. ' i' → logprob: -15.501933097839355
    8. '           ' → logprob: -15.626933097839355
    9. '{i' → logprob: -17.001934051513672
    10. '   ' → logprob: -17.251934051513672

Token 1752: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0025749478954821825
    2. '[' → logprob: -6.002574920654297
    3. '0' → logprob: -10.377574920654297
    4. '[i' → logprob: -11.127574920654297
    5. ']' → logprob: -12.002574920654297
    6. 'i' → logprob: -12.002574920654297
    7. '           ' → logprob: -12.127574920654297
    8. '#' → logprob: -12.252574920654297
    9. ' ][' → logprob: -12.252574920654297
    10. '"][' → logprob: -12.502574920654297

Token 1753: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.3451433409936726e-05
    2. '0' → logprob: -10.625033378601074
    3. ' i' → logprob: -11.875033378601074
    4. '[i' → logprob: -13.625033378601074
    5. '
' → logprob: -15.375033378601074
    6. 'None' → logprob: -15.500033378601074
    7. '(i' → logprob: -15.750033378601074
    8. '```' → logprob: -15.875033378601074
    9. '	i' → logprob: -16.25003433227539
    10. '[' → logprob: -16.25003433227539

Token 1754: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36856573820114136
    2. ']
' → logprob: -1.6185657978057861
    3. ']' → logprob: -2.368565797805786
    4. 'if' → logprob: -5.118565559387207
    5. '           ' → logprob: -5.493565559387207
    6. '
' → logprob: -6.743565559387207
    7. ' if' → logprob: -6.868565559387207
    8. ')
' → logprob: -7.118565559387207
    9. '<|end|>' → logprob: -7.368565559387207
    10. ']:
' → logprob: -7.868565559387207

Token 1755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018804390856530517
    2. 'if' → logprob: -9.000187873840332
    3. '           ' → logprob: -9.750187873840332
    4. ' if' → logprob: -12.875187873840332
    5. '```' → logprob: -13.500187873840332
    6. '       ' → logprob: -13.625187873840332
    7. '                   ' → logprob: -14.250187873840332
    8. '   ' → logprob: -14.875187873840332
    9. '              ' → logprob: -16.25018882751465
    10. 'If' → logprob: -17.25018882751465

Token 1756: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5765852928161621
    2. 'if' (adapté à ' if') → logprob: -0.8265852928161621
    3. '           ' → logprob: -7.701585292816162
    4. ' if' → logprob: -8.70158576965332
    5. '```' → logprob: -10.70158576965332
    6. '       ' → logprob: -13.20158576965332
    7. '   ' → logprob: -13.82658576965332
    8. '                   ' → logprob: -14.32658576965332
    9. '``' → logprob: -14.45158576965332
    10. 'for' → logprob: -14.95158576965332

Token 1757: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.08898766338825226
    2. ' upper' → logprob: -2.4639875888824463
    3. '           ' → logprob: -10.713987350463867
    4. '               ' → logprob: -10.838987350463867
    5. '   ' → logprob: -13.088987350463867
    6. '                   ' → logprob: -13.963987350463867
    7. '(' → logprob: -14.088987350463867
    8. '            ' → logprob: -14.713987350463867
    9. 'Upper' → logprob: -15.338987350463867
    10. '       ' → logprob: -15.338987350463867

Token 1758: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20189526677131653
    2. ' and' → logprob: -1.7018952369689941
    3. '               ' → logprob: -8.326895713806152
    4. ' is' → logprob: -8.701895713806152
    5. '           ' → logprob: -10.576895713806152
    6. 'is' → logprob: -10.701895713806152
    7. '[' → logprob: -11.951895713806152
    8. '                   ' → logprob: -12.201895713806152
    9. '              ' → logprob: -12.576895713806152
    10. '                ' → logprob: -13.201895713806152

Token 1759: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.009875315241515636
    2. ' upper' → logprob: -4.634875297546387
    3. '           ' → logprob: -9.634875297546387
    4. '               ' → logprob: -10.259875297546387
    5. '(' → logprob: -12.134875297546387
    6. '                   ' → logprob: -12.384875297546387
    7. '   ' → logprob: -13.134875297546387
    8. '            ' → logprob: -13.884875297546387
    9. '
' → logprob: -14.134875297546387
    10. '       ' → logprob: -14.134875297546387

Token 1760: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. 'and' → logprob: -13.000006675720215
    3. ' [' → logprob: -13.625006675720215
    4. '```' → logprob: -13.625006675720215
    5. '][' → logprob: -14.875006675720215
    6. '
' → logprob: -15.000006675720215
    7. '   ' → logprob: -15.625006675720215
    8. ')[' → logprob: -15.875006675720215
    9. '[
' → logprob: -15.875006675720215
    10. '#' → logprob: -15.875006675720215

Token 1761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -12.500012397766113
    3. '0' → logprob: -12.750012397766113
    4. '
' → logprob: -12.750012397766113
    5. ' ' → logprob: -14.187512397766113
    6. '(' → logprob: -14.687512397766113
    7. '```' → logprob: -15.062512397766113
    8. '   ' → logprob: -15.187512397766113
    9. '-' → logprob: -15.750012397766113
    10. '2' → logprob: -16.37501335144043

Token 1762: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.299836665391922
    2. '<=' → logprob: -1.4248366355895996
    3. ']<=' → logprob: -4.1748366355896
    4. ']' → logprob: -6.1748366355896
    5. '```' → logprob: -7.9248366355896
    6. ')<=' → logprob: -8.549837112426758
    7. '           ' → logprob: -9.424837112426758
    8. '==' → logprob: -9.424837112426758
    9. '<|end|>' → logprob: -10.049837112426758
    10. ' ==' → logprob: -10.299837112426758

Token 1763: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4744083285331726
    2. '<=' → logprob: -0.9744083285331726
    3. '==' → logprob: -8.849408149719238
    4. '```' → logprob: -9.474408149719238
    5. ' ==' → logprob: -9.974408149719238
    6. ')<=' → logprob: -10.599408149719238
    7. ']<=' → logprob: -11.099408149719238
    8. ' ' → logprob: -11.724408149719238
    9. ')' → logprob: -13.099408149719238
    10. '[' → logprob: -13.474408149719238

Token 1764: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004078401252627373
    2. ' current' → logprob: -5.504078388214111
    3. '
' → logprob: -18.004077911376953
    4. '(current' → logprob: -18.004077911376953
    5. '   ' → logprob: -18.504077911376953
    6. '	current' → logprob: -19.004077911376953
    7. 'Current' → logprob: -19.629077911376953
    8. '[current' → logprob: -19.754077911376953
    9. '_current' → logprob: -19.754077911376953
    10. '$current' → logprob: -19.879077911376953

Token 1765: '_time' (ID: 6425)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0015333088813349605
    2. ' current' → logprob: -6.876533508300781
    3. '_time' → logprob: -7.626533508300781
    4. '_current' → logprob: -11.751533508300781
    5. 'time' → logprob: -12.876533508300781
    6. '(current' → logprob: -14.251533508300781
    7. '   ' → logprob: -14.376533508300781
    8. '```' → logprob: -14.876533508300781
    9. '=current' → logprob: -15.626533508300781
    10. 'Time' → logprob: -15.751533508300781

Token 1766: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06308840215206146
    2. 'and' → logprob: -3.0630884170532227
    3. '                   ' → logprob: -4.438088417053223
    4. '               ' → logprob: -6.313088417053223
    5. ':
' → logprob: -7.438088417053223
    6. '           ' → logprob: -9.438088417053223
    7. '                ' → logprob: -10.938088417053223
    8. '                  ' → logprob: -10.938088417053223
    9. ':' → logprob: -11.188088417053223
    10. '                       ' → logprob: -11.563088417053223

Token 1767: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.00022999993234407157
    2. ' lower' → logprob: -8.625229835510254
    3. '(lower' → logprob: -10.125229835510254
    4. 'not' → logprob: -12.500229835510254
    5. '(' → logprob: -12.750229835510254
    6. '   ' → logprob: -13.250229835510254
    7. 'spots' → logprob: -14.500229835510254
    8. ' (' → logprob: -14.625229835510254
    9. '
' → logprob: -15.125229835510254
    10. '           ' → logprob: -15.875229835510254

Token 1768: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4759848117828369
    2. 'is' → logprob: -0.9759848117828369
    3. '==' → logprob: -6.725984573364258
    4. '[' → logprob: -7.600984573364258
    5. '[i' → logprob: -8.600984573364258
    6. '	is' → logprob: -11.350984573364258
    7. ' ==' → logprob: -12.225984573364258
    8. '```' → logprob: -12.975984573364258
    9. '[
' → logprob: -13.350984573364258
    10. '0' → logprob: -14.600984573364258

Token 1769: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011048054322600365
    2. ' None' → logprob: -4.511047840118408
    3. '_None' → logprob: -15.511048316955566
    4. '(None' → logprob: -17.88604736328125
    5. 'none' → logprob: -18.38604736328125
    6. '0' → logprob: -18.63604736328125
    7. '                   ' → logprob: -18.88604736328125
    8. '=None' → logprob: -19.13604736328125
    9. '_none' → logprob: -19.26104736328125
    10. '               ' → logprob: -19.63604736328125

Token 1770: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20164400339126587
    2. '                   ' → logprob: -1.951643943786621
    3. ':' → logprob: -3.701643943786621
    4. '               ' → logprob: -4.451643943786621
    5. ' and' → logprob: -5.826643943786621
    6. '                       ' → logprob: -7.451643943786621
    7. '           ' → logprob: -8.201643943786621
    8. '):
' → logprob: -8.951643943786621
    9. 'and' → logprob: -9.826643943786621
    10. ',' → logprob: -10.326643943786621

Token 1771: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023537667468190193
    2. '               ' → logprob: -3.7735376358032227
    3. '                       ' → logprob: -8.523537635803223
    4. 'upper' → logprob: -10.648537635803223
    5. '                  ' → logprob: -11.273537635803223
    6. '```' → logprob: -11.273537635803223
    7. '   ' → logprob: -11.773537635803223
    8. '	               ' → logprob: -11.773537635803223
    9. '		           ' → logprob: -12.023537635803223
    10. '           ' → logprob: -12.023537635803223

Token 1772: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.022244596853852272
    2. '               ' → logprob: -4.272244453430176
    3. ' upper' → logprob: -5.397244453430176
    4. '                   ' → logprob: -6.022244453430176
    5. 'spots' → logprob: -7.397244453430176
    6. '           ' → logprob: -8.647244453430176
    7. '                       ' → logprob: -8.647244453430176
    8. '```' → logprob: -9.522244453430176
    9. ' spots' → logprob: -10.272244453430176
    10. '   ' → logprob: -11.897244453430176

Token 1773: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.05240917578339577
    2. ' =' → logprob: -3.5524091720581055
    3. '_sp' → logprob: -4.9274091720581055
    4. 'le' → logprob: -5.6774091720581055
    5. '_car' → logprob: -6.0524091720581055
    6. '=' → logprob: -6.1774091720581055
    7. '_index' → logprob: -6.6774091720581055
    8. '_pos' → logprob: -7.0524091720581055
    9. '[' → logprob: -7.1774091720581055
    10. '_c' → logprob: -7.6774091720581055

Token 1774: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -5.967624019831419e-05
    2. 'av' → logprob: -10.250060081481934
    3. 'ave' → logprob: -12.000060081481934
    4. 'ving' → logprob: -12.125060081481934
    5. '[' → logprob: -12.875060081481934
    6. '
' → logprob: -13.500060081481934
    7. '   ' → logprob: -13.625060081481934
    8. 'a' → logprob: -13.750060081481934
    9. 'avi' → logprob: -14.000060081481934
    10. '       ' → logprob: -14.500060081481934

Token 1775: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.002238874090835452
    2. 'now' → logprob: -6.127238750457764
    3. '=' → logprob: -11.002239227294922
    4. '```' → logprob: -12.127239227294922
    5. '_NOW' → logprob: -12.252239227294922
    6. '.append' → logprob: -12.377239227294922
    7. '   ' → logprob: -12.752239227294922
    8. 'Now' → logprob: -12.877239227294922
    9. ' =' → logprob: -12.877239227294922
    10. '[' → logprob: -13.002239227294922

Token 1776: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002879145904444158
    2. '.' → logprob: -8.375288009643555
    3. 'append' → logprob: -10.750288009643555
    4. '           ' → logprob: -11.000288009643555
    5. '                   ' → logprob: -11.250288009643555
    6. ' .' → logprob: -13.125288009643555
    7. '               ' → logprob: -14.375288009643555
    8. ').' → logprob: -14.375288009643555
    9. 'Append' → logprob: -14.500288009643555
    10. '=' → logprob: -14.625288009643555

Token 1777: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.035632625222206116
    2. '(i' → logprob: -4.035632610321045
    3. '(current' → logprob: -4.285632610321045
    4. '(' → logprob: -5.660632610321045
    5. ' (' → logprob: -9.660633087158203
    6. '   ' → logprob: -11.410633087158203
    7. '(True' → logprob: -12.285633087158203
    8. '(Current' → logprob: -13.410633087158203
    9. ' ' → logprob: -14.160633087158203
    10. '  ' → logprob: -14.410633087158203

Token 1778: 'i' (ID: 72)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10029681026935577
    2. '(current' → logprob: -2.35029673576355
    3. ' current' → logprob: -9.475296974182129
    4. 'i' → logprob: -12.100296974182129
    5. '(i' → logprob: -12.975296974182129
    6. ' (' → logprob: -13.850296974182129
    7. ',current' → logprob: -13.975296974182129
    8. '[current' → logprob: -14.100296974182129
    9. '$current' → logprob: -14.350296974182129
    10. '
' → logprob: -14.850296974182129

Token 1779: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038288687937892973
    2. ' ,' → logprob: -8.125382423400879
    3. '0' → logprob: -9.875382423400879
    4. '1' → logprob: -11.125382423400879
    5. '                   ' → logprob: -11.500382423400879
    6. ',
' → logprob: -13.125382423400879
    7. '               ' → logprob: -13.250382423400879
    8. '           ' → logprob: -13.500382423400879
    9. ',current' → logprob: -14.125382423400879
    10. ')' → logprob: -14.375382423400879

Token 1780: 'upper' (ID: 26119)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06224315986037254
    2. '0' → logprob: -3.0622432231903076
    3. 'current' → logprob: -4.5622429847717285
    4. 'upper' → logprob: -6.3122429847717285
    5. ' ' → logprob: -7.9372429847717285
    6. 'i' → logprob: -8.062243461608887
    7. 'spots' → logprob: -8.062243461608887
    8. '(' → logprob: -9.562243461608887
    9. 'car' → logprob: -10.249743461608887
    10. ' current' → logprob: -10.374743461608887

Token 1781: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01562475599348545
    2. ',' → logprob: -4.265624523162842
    3. ',[' → logprob: -8.015625
    4. ')[' → logprob: -8.140625
    5. '][' → logprob: -8.765625
    6. '1' → logprob: -8.890625
    7. ')][' → logprob: -9.140625
    8. '))
' → logprob: -9.890625
    9. ' ,' → logprob: -10.140625
    10. '```' → logprob: -10.140625

Token 1782: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023677609860897064
    2. '0' → logprob: -4.023677825927734
    3. '[' → logprob: -5.273677825927734
    4. '][' → logprob: -9.398677825927734
    5. '
' → logprob: -9.773677825927734
    6. '2' → logprob: -10.023677825927734
    7. ']' → logprob: -10.336177825927734
    8. '   ' → logprob: -10.961177825927734
    9. '```' → logprob: -11.148677825927734
    10. ')' → logprob: -11.273677825927734

Token 1783: ']))
' (ID: 24801)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009513110853731632
    2. '],' → logprob: -5.384512901306152
    3. ']))' → logprob: -6.259512901306152
    4. '))' → logprob: -6.884512901306152
    5. '])' → logprob: -7.009512901306152
    6. '),' → logprob: -7.384512901306152
    7. ' ,' → logprob: -9.509512901306152
    8. '0' → logprob: -9.759512901306152
    9. ')]' → logprob: -9.759512901306152
    10. ']))
' → logprob: -10.134512901306152

Token 1784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033443622291088104
    2. '                   ' → logprob: -3.9084436893463135
    3. '
' → logprob: -4.783443450927734
    4. '               ' → logprob: -6.158443450927734
    5. '```' → logprob: -6.908443450927734
    6. 'for' → logprob: -7.033443450927734
    7. ' for' → logprob: -8.533443450927734
    8. '       ' → logprob: -8.908443450927734
    9. '   ' → logprob: -10.658443450927734
    10. ',' → logprob: -11.158443450927734

Token 1785: ' upper' (ID: 13057)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2503165900707245
    2. 'for' → logprob: -1.6253166198730469
    3. ' for' → logprob: -3.875316619873047
    4. '```' → logprob: -6.250316619873047
    5. 'upper' (adapté à ' upper') → logprob: -7.125316619873047
    6. '
' → logprob: -7.625316619873047
    7. '``' → logprob: -8.375316619873047
    8. '       ' → logprob: -8.500316619873047
    9. '   ' → logprob: -9.750316619873047
    10. '               ' → logprob: -9.750316619873047

Token 1786: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -2.248469718324486e-05
    2. 'le' → logprob: -10.750022888183594
    3. 'for' → logprob: -16.000022888183594
    4. '=' → logprob: -16.000022888183594
    5. ':' → logprob: -16.375022888183594
    6. '```' → logprob: -16.500022888183594
    7. '_leave' → logprob: -16.500022888183594
    8. '
' → logprob: -17.000022888183594
    9. '   ' → logprob: -17.125022888183594
    10. ',' → logprob: -17.125022888183594

Token 1787: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -0.0002072357019642368
    2. 'e' → logprob: -9.37520694732666
    3. '_le' → logprob: -9.62520694732666
    4. 'le' → logprob: -10.12520694732666
    5. 'Leaving' → logprob: -12.12520694732666
    6. 'av' → logprob: -12.25020694732666
    7. 'ave' → logprob: -13.00020694732666
    8. 'ving' → logprob: -14.25020694732666
    9. '
' → logprob: -15.00020694732666
    10. 'avel' → logprob: -15.00020694732666

Token 1788: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0003135360311716795
    2. 'now' → logprob: -8.375313758850098
    3. '.append' → logprob: -10.000313758850098
    4. '_le' → logprob: -10.875313758850098
    5. ' =' → logprob: -12.750313758850098
    6. 'Now' → logprob: -12.875313758850098
    7. '   ' → logprob: -13.000313758850098
    8. '```' → logprob: -13.250313758850098
    9. '=' → logprob: -13.625313758850098
    10. 's' → logprob: -13.750313758850098

Token 1789: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -3.106736039626412e-05
    2. '.append' → logprob: -11.125031471252441
    3. '.' → logprob: -11.500031471252441
    4. '           ' → logprob: -13.000031471252441
    5. 'sort' → logprob: -13.625031471252441
    6. ':
' → logprob: -13.875031471252441
    7. ' .' → logprob: -14.875031471252441
    8. ':' → logprob: -15.125031471252441
    9. ')' → logprob: -15.500031471252441
    10. '       ' → logprob: -15.750031471252441

Token 1790: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -2.141186450899113e-05
    2. 'key' → logprob: -10.875020980834961
    3. ',key' → logprob: -13.500020980834961
    4. '()
' → logprob: -14.750020980834961
    5. '(reverse' → logprob: -15.250020980834961
    6. '```' → logprob: -16.00002098083496
    7. '(lambda' → logprob: -16.12502098083496
    8. '()' → logprob: -16.25002098083496
    9. '(' → logprob: -17.62502098083496
    10. ' key' → logprob: -17.75002098083496

Token 1791: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.7325706481933594
    2. 'lambda' → logprob: -1.2325706481933594
    3. 'key' → logprob: -1.4825706481933594
    4. '(lambda' → logprob: -8.23257064819336
    5. '(key' → logprob: -8.35757064819336
    6. '```' → logprob: -8.98257064819336
    7. '=' → logprob: -9.73257064819336
    8. '           ' → logprob: -11.35757064819336
    9. ',key' → logprob: -11.85757064819336
    10. ' key' → logprob: -12.10757064819336

Token 1792: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010696062818169594
    2. 'x' → logprob: -4.635695934295654
    3. '=lambda' → logprob: -7.260695934295654
    4. '(lambda' → logprob: -8.885696411132812
    5. ' lambda' → logprob: -9.510696411132812
    6. '```' → logprob: -11.760696411132812
    7. '0' → logprob: -12.260696411132812
    8. '   ' → logprob: -12.635696411132812
    9. 'λ' → logprob: -12.760696411132812
    10. '
' → logprob: -13.635696411132812

Token 1793: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33455783128738403
    2. ':(' → logprob: -1.7095577716827393
    3. ':x' → logprob: -2.7095577716827393
    4. '(' → logprob: -4.834558010101318
    5. '(x' → logprob: -5.334558010101318
    6. 'lambda' → logprob: -5.334558010101318
    7. '=lambda' → logprob: -5.584558010101318
    8. '0' → logprob: -5.709558010101318
    9. 'x' → logprob: -5.834558010101318
    10. ' (' → logprob: -5.959558010101318

Token 1794: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.672236824873835e-05
    2. '0' → logprob: -10.125076293945312
    3. ':' → logprob: -10.750076293945312
    4. '(' → logprob: -11.125076293945312
    5. '```' → logprob: -15.500076293945312
    6. '[
' → logprob: -16.000076293945312
    7. 'x' → logprob: -17.125076293945312
    8. '1' → logprob: -17.125076293945312
    9. '[](' → logprob: -17.625076293945312
    10. '
' → logprob: -17.875076293945312

Token 1795: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.000020027160645
    3. '(' → logprob: -13.500020027160645
    4. '1' → logprob: -13.750020027160645
    5. ' ' → logprob: -14.375020027160645
    6. '   ' → logprob: -16.625019073486328
    7. '```' → logprob: -18.000019073486328
    8. '00' → logprob: -18.125019073486328
    9. 'i' → logprob: -18.500019073486328
    10. '01' → logprob: -19.000019073486328

Token 1796: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2835182547569275
    2. ')' → logprob: -1.4085183143615723
    3. ',' → logprob: -6.783518314361572
    4. '):
' → logprob: -7.283518314361572
    5. ' )
' → logprob: -8.158517837524414
    6. '):' → logprob: -9.658517837524414
    7. ')#' → logprob: -10.158517837524414
    8. ')

' → logprob: -10.658517837524414
    9. ' )' → logprob: -10.908517837524414
    10. ':' → logprob: -11.283517837524414

Token 1797: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017027945723384619
    2. 'for' → logprob: -6.501702785491943
    3. ' for' → logprob: -8.751703262329102
    4. '       ' → logprob: -10.876703262329102
    5. '   ' → logprob: -11.501703262329102
    6. '```' → logprob: -11.501703262329102
    7. '
' → logprob: -13.251703262329102
    8. '               ' → logprob: -14.126703262329102
    9. '            
' → logprob: -15.501703262329102
    10. '``' → logprob: -16.2517032623291

Token 1798: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.393818736076355
    2. 'for' (adapté à ' for') → logprob: -1.143818736076355
    3. ' for' → logprob: -5.0188188552856445
    4. '```' → logprob: -8.768818855285645
    5. '   ' → logprob: -9.518818855285645
    6. '       ' → logprob: -10.393818855285645
    7. '``' → logprob: -10.768818855285645
    8. '               ' → logprob: -10.768818855285645
    9. '                   ' → logprob: -12.893818855285645
    10. '            
' → logprob: -13.643818855285645

Token 1799: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014458469115197659
    2. 'pos' → logprob: -4.514458656311035
    3. 'spot' → logprob: -6.264458656311035
    4. ' i' → logprob: -7.014458656311035
    5. '(i' → logprob: -8.264458656311035
    6. 'idx' → logprob: -8.389458656311035
    7. ' pos' → logprob: -10.139458656311035
    8. ' spot' → logprob: -10.139458656311035
    9. '   ' → logprob: -11.014458656311035
    10. ' (' → logprob: -12.889458656311035

Token 1800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009234884637407959
    2. '_,' → logprob: -8.000923156738281
    3. ',i' → logprob: -8.750923156738281
    4. ',u' → logprob: -9.250923156738281
    5. ' ,' → logprob: -9.500923156738281
    6. ',(' → logprob: -9.875923156738281
    7. ',x' → logprob: -10.000923156738281
    8. ',v' → logprob: -10.625923156738281
    9. ',item' → logprob: -10.875923156738281
    10. ',[' → logprob: -11.000923156738281

Token 1801: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -5.061676347395405e-05
    2. 'upper' → logprob: -10.12505054473877
    3. 'cid' → logprob: -11.87505054473877
    4. 'uid' → logprob: -13.50005054473877
    5. ' car' → logprob: -14.25005054473877
    6. 'c' → logprob: -14.50005054473877
    7. 'u' → logprob: -14.50005054473877
    8. 'up' → logprob: -15.75005054473877
    9. 'cars' → logprob: -16.750051498413086
    10. 'card' → logprob: -16.875051498413086

Token 1802: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00019460011390037835
    2. 'id' → logprob: -9.000194549560547
    3. '_i' → logprob: -10.500194549560547
    4. '[' → logprob: -10.750194549560547
    5. '_' → logprob: -12.250194549560547
    6. '```' → logprob: -12.750194549560547
    7. 'i' → logprob: -13.000194549560547
    8. '_ids' → logprob: -13.500194549560547
    9. '=' → logprob: -13.625194549560547
    10. '[
' → logprob: -14.000194549560547

Token 1803: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010418595047667623
    2. 'in' → logprob: -6.876041889190674
    3. ',' → logprob: -11.751041412353516
    4. ')' → logprob: -14.751041412353516
    5. '
' → logprob: -15.626041412353516
    6. ' ' → logprob: -16.251041412353516
    7. ' =' → logprob: -16.751041412353516
    8. '	in' → logprob: -16.876041412353516
    9. '):
' → logprob: -16.876041412353516
    10. '   ' → logprob: -16.876041412353516

Token 1804: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.00023226479243021458
    2. ' upper' → logprob: -8.375232696533203
    3. 'x' → logprob: -13.625232696533203
    4. 'uppercase' → logprob: -15.750232696533203
    5. 'i' → logprob: -16.375232696533203
    6. 'enumer' → logprob: -16.625232696533203
    7. '(' → logprob: -17.000232696533203
    8. '.upper' → logprob: -17.625232696533203
    9. 'car' → logprob: -17.875232696533203
    10. 'uple' → logprob: -18.000232696533203

Token 1805: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.004264539107680321
    2. '[' → logprob: -6.6292643547058105
    3. '_now' → logprob: -7.1292643547058105
    4. '[i' → logprob: -7.1292643547058105
    5. ':
' → logprob: -7.6292643547058105
    6. 'le' → logprob: -8.004264831542969
    7. '):
' → logprob: -8.379264831542969
    8. 'now' → logprob: -9.879264831542969
    9. '```' → logprob: -10.254264831542969
    10. '_upper' → logprob: -10.629264831542969

Token 1806: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -0.004146426450461149
    2. 'ving' → logprob: -5.504146575927734
    3. 'av' → logprob: -10.629146575927734
    4. 'ing' → logprob: -11.254146575927734
    5. 'ng' → logprob: -12.129146575927734
    6. 'oving' → logprob: -12.129146575927734
    7. '[' → logprob: -12.254146575927734
    8. 'ading' → logprob: -12.754146575927734
    9. '(' → logprob: -13.129146575927734
    10. 'avin' → logprob: -13.379146575927734

Token 1807: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0036794093903154135
    2. 'now' → logprob: -5.628679275512695
    3. '
' → logprob: -11.378679275512695
    4. 'Now' → logprob: -11.753679275512695
    5. '[' → logprob: -11.753679275512695
    6. '(i' → logprob: -11.878679275512695
    7. '_up' → logprob: -12.253679275512695
    8. '(' → logprob: -12.378679275512695
    9. '_' → logprob: -12.503679275512695
    10. '[i' → logprob: -12.628679275512695

Token 1808: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07136023044586182
    2. '               ' → logprob: -2.8213601112365723
    3. ':' → logprob: -4.946360111236572
    4. '           ' → logprob: -6.946360111236572
    5. '       ' → logprob: -7.696360111236572
    6. '[' → logprob: -8.69636058807373
    7. '):
' → logprob: -8.94636058807373
    8. ',' → logprob: -8.94636058807373
    9. '   ' → logprob: -9.19636058807373
    10. '                   ' → logprob: -9.44636058807373

Token 1809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037196765188127756
    2. 'spots' → logprob: -6.128719806671143
    3. ' spots' → logprob: -6.878719806671143
    4. '                   ' → logprob: -8.753719329833984
    5. '       ' → logprob: -9.003719329833984
    6. '   ' → logprob: -9.253719329833984
    7. '           ' → logprob: -9.628719329833984
    8. '```' → logprob: -10.753719329833984
    9. '                       ' → logprob: -11.253719329833984
    10. 'sp' → logprob: -11.253719329833984

Token 1810: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' (adapté à ' spots') → logprob: -0.04555249959230423
    2. '               ' → logprob: -3.1705524921417236
    3. ' spots' → logprob: -6.420552730560303
    4. '       ' → logprob: -7.545552730560303
    5. '           ' → logprob: -8.045552253723145
    6. '   ' → logprob: -10.295552253723145
    7. 'sp' → logprob: -10.920552253723145
    8. '```' → logprob: -12.045552253723145
    9. '                   ' → logprob: -12.170552253723145
    10. '                       ' → logprob: -13.045552253723145

Token 1811: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.125000953674316
    3. '       ' → logprob: -16.375
    4. '           ' → logprob: -16.5
    5. ' [' → logprob: -16.5
    6. '```' → logprob: -16.5
    7. 'i' → logprob: -16.625
    8. '   ' → logprob: -16.875
    9. '][' → logprob: -17.5
    10. '               ' → logprob: -17.875

Token 1812: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023490972816944122
    2. '[' → logprob: -3.7734909057617188
    3. ')[' → logprob: -9.398490905761719
    4. '               ' → logprob: -10.023490905761719
    5. '           ' → logprob: -10.148490905761719
    6. '                   ' → logprob: -10.898490905761719
    7. ']' → logprob: -11.273490905761719
    8. '1' → logprob: -11.398490905761719
    9. '[i' → logprob: -11.398490905761719
    10. ']][' → logprob: -12.148490905761719

Token 1813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. '[' → logprob: -11.37502384185791
    3. 'None' → logprob: -11.62502384185791
    4. '][' → logprob: -13.00002384185791
    5. ' ' → logprob: -14.75002384185791
    6. '```' → logprob: -15.62502384185791
    7. '   ' → logprob: -16.750022888183594
    8. ')[' → logprob: -17.000022888183594
    9. '
' → logprob: -17.625022888183594
    10. ']' → logprob: -17.750022888183594

Token 1814: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01106221228837967
    2. ' =' → logprob: -4.636062145233154
    3. ']=' → logprob: -7.261062145233154
    4. ']' → logprob: -7.761062145233154
    5. '=None' → logprob: -9.011062622070312
    6. ')' → logprob: -10.136062622070312
    7. ')=' → logprob: -11.136062622070312
    8. '<|end|>' → logprob: -15.636062622070312
    9. '=
' → logprob: -15.761062622070312
    10. 'None' → logprob: -15.886062622070312

Token 1815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009263493702746928
    2. ' =' → logprob: -7.000926494598389
    3. '=None' → logprob: -11.12592601776123
    4. ']=' → logprob: -16.750926971435547
    5. '=
' → logprob: -17.500926971435547
    6. ')=' → logprob: -18.000926971435547
    7. '=

' → logprob: -19.500926971435547
    8. ')' → logprob: -19.500926971435547
    9. '＝' → logprob: -19.500926971435547
    10. 'None' → logprob: -20.000926971435547

Token 1816: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5048530030981055e-06
    2. ' None' → logprob: -13.500001907348633
    3. '(None' → logprob: -18.875001907348633
    4. '_None' → logprob: -20.875001907348633
    5. ',None' → logprob: -23.250001907348633
    6. '=None' → logprob: -23.250001907348633
    7. 'none' → logprob: -23.625001907348633
    8. '   ' → logprob: -24.250001907348633
    9. '.None' → logprob: -24.250001907348633
    10. '_none' → logprob: -25.375001907348633

Token 1817: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02207156829535961
    2. '```' → logprob: -4.522071361541748
    3. '
' → logprob: -5.272071361541748
    4. 'output' → logprob: -5.647071361541748
    5. '           ' → logprob: -7.147071361541748
    6. ' output' → logprob: -7.397071361541748
    7. '       ' → logprob: -8.272071838378906
    8. '``' → logprob: -8.897071838378906
    9. '<|end|>' → logprob: -9.147071838378906
    10. '                   ' → logprob: -9.397071838378906

Token 1818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029219111427664757
    2. '```' → logprob: -3.779219150543213
    3. 'output' → logprob: -5.654219150543213
    4. '           ' → logprob: -6.779219150543213
    5. '``' → logprob: -7.904219150543213
    6. '
' → logprob: -8.029218673706055
    7. '                   ' → logprob: -8.529218673706055
    8. '       ' → logprob: -8.654218673706055
    9. '   ' → logprob: -9.529218673706055
    10. ' output' → logprob: -10.404218673706055

Token 1819: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -5.512236498361744e-07
    2. ' output' → logprob: -15.000000953674316
    3. '           ' → logprob: -15.875000953674316
    4. '   ' → logprob: -18.0
    5. '       ' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. '	output' → logprob: -20.125
    8. '(output' → logprob: -20.25
    9. '               ' → logprob: -20.875
    10. '``' → logprob: -21.125

Token 1820: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000194361709873192
    2. '.' → logprob: -8.625194549560547
    3. '.app' → logprob: -11.750194549560547
    4. 'append' → logprob: -12.000194549560547
    5. '.Append' → logprob: -15.500194549560547
    6. '.push' → logprob: -16.000194549560547
    7. '_append' → logprob: -16.250194549560547
    8. '.extend' → logprob: -16.375194549560547
    9. '.ap' → logprob: -16.500194549560547
    10. 'Append' → logprob: -16.875194549560547

Token 1821: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -4.56102097814437e-05
    2. 'car' → logprob: -10.000045776367188
    3. '(' → logprob: -15.875045776367188
    4. '	car' → logprob: -18.750045776367188
    5. '(c' → logprob: -20.125045776367188
    6. '_car' → logprob: -20.750045776367188
    7. '(Car' → logprob: -20.875045776367188
    8. '(card' → logprob: -21.375045776367188
    9. ' car' → logprob: -21.375045776367188
    10. '(vehicle' → logprob: -21.750045776367188

Token 1822: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.2723104848410003e-05
    2. 'id' → logprob: -11.125022888183594
    3. '_car' → logprob: -12.250022888183594
    4. 'car' → logprob: -13.625022888183594
    5. '```' → logprob: -14.750022888183594
    6. '[' → logprob: -14.875022888183594
    7. '[
' → logprob: -14.875022888183594
    8. 'Car' → logprob: -15.875022888183594
    9. ')' → logprob: -15.875022888183594
    10. '_i' → logprob: -16.250022888183594

Token 1823: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009188431431539357
    2. ')
' → logprob: -7.500918865203857
    3. '<|end|>' → logprob: -8.5009183883667
    4. '       ' → logprob: -9.7509183883667
    5. '               ' → logprob: -10.1259183883667
    6. '```' → logprob: -10.7509183883667
    7. '           ' → logprob: -11.0009183883667
    8. ')\' → logprob: -12.6259183883667
    9. ')\
' → logprob: -12.6259183883667
    10. '   ' → logprob: -12.6259183883667

Token 1824: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5075666904449463
    2. '<|end|>' → logprob: -1.0075666904449463
    3. '```' → logprob: -3.8825666904449463
    4. '               ' → logprob: -4.882566452026367
    5. '[' → logprob: -6.882566452026367
    6. '           ' → logprob: -7.382566452026367
    7. '\n' → logprob: -7.382566452026367
    8. '``' → logprob: -8.132566452026367
    9. '                
' → logprob: -8.382566452026367
    10. '<|end|>' → logprob: -8.507566452026367

Token 1825: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0001242772996192798
    2. ' left' → logprob: -9.375123977661133
    3. '           ' → logprob: -10.500123977661133
    4. '       ' → logprob: -12.000123977661133
    5. '               ' → logprob: -13.375123977661133
    6. '```' → logprob: -13.500123977661133
    7. '   ' → logprob: -13.750123977661133
    8. '``' → logprob: -14.250123977661133
    9. 'right' → logprob: -14.750123977661133
    10. 'for' → logprob: -14.750123977661133

Token 1826: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '[user' → logprob: -13.50000286102295
    3. '[left' → logprob: -13.62500286102295
    4. '[i' → logprob: -16.125003814697266
    5. '       ' → logprob: -16.625003814697266
    6. '```' → logprob: -16.625003814697266
    7. '           ' → logprob: -16.750003814697266
    8. '               ' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.875003814697266
    10. '[current' → logprob: -17.875003814697266

Token 1827: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005225221626460552
    2. '[' → logprob: -5.38022518157959
    3. 'upper' → logprob: -7.50522518157959
    4. 'left' → logprob: -10.75522518157959
    5. '(car' → logprob: -11.88022518157959
    6. 'i' → logprob: -11.88022518157959
    7. ' car' → logprob: -12.38022518157959
    8. 'lower' → logprob: -12.75522518157959
    9. '   ' → logprob: -13.13022518157959
    10. '[left' → logprob: -13.25522518157959

Token 1828: '_id' (ID: 1537)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3540361523628235
    2. '[' → logprob: -1.3540360927581787
    3. '1' → logprob: -3.2290360927581787
    4. '[-' → logprob: -8.354036331176758
    5. '_' → logprob: -10.979036331176758
    6. '-[' → logprob: -11.229036331176758
    7. 'user' → logprob: -11.604036331176758
    8. 'x' → logprob: -11.729036331176758
    9. ' -' → logprob: -11.729036331176758
    10. '0' → logprob: -11.729036331176758

Token 1829: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020628207130357623
    2. '[' → logprob: -8.500205993652344
    3. ' -' → logprob: -13.500205993652344
    4. '1' → logprob: -14.250205993652344
    5. '=' → logprob: -14.500205993652344
    6. '[-' → logprob: -16.375205993652344
    7. '```' → logprob: -17.000205993652344
    8. '==' → logprob: -18.375205993652344
    9. ']-' → logprob: -18.500205993652344
    10. '-[' → logprob: -18.625205993652344

Token 1830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.5
    5. '0' → logprob: -16.75
    6. '-' → logprob: -16.875
    7. '...' → logprob: -18.5
    8. '   ' → logprob: -19.0
    9. ']' → logprob: -19.0
    10. '][' → logprob: -19.375

Token 1831: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.025555826723575592
    2. '=' → logprob: -4.025555610656738
    3. ']' → logprob: -5.025555610656738
    4. '=True' → logprob: -7.150555610656738
    5. ')=' → logprob: -10.775555610656738
    6. ' =' → logprob: -13.025555610656738
    7. '']=' → logprob: -13.525555610656738
    8. '"]=' → logprob: -15.150555610656738
    9. 'True' → logprob: -15.275555610656738
    10. ']+=' → logprob: -15.275555610656738

Token 1832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011755822924897075
    2. '=True' → logprob: -6.751175403594971
    3. ' =' → logprob: -12.251175880432129
    4. '=
' → logprob: -14.751175880432129
    5. ']=' → logprob: -15.626175880432129
    6. ')=' → logprob: -17.626174926757812
    7. '=

' → logprob: -18.126174926757812
    8. '=False' → logprob: -18.501174926757812
    9. '=true' → logprob: -19.001174926757812
    10. 'True' → logprob: -20.126174926757812

Token 1833: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.8624639324116288e-06
    2. ' True' → logprob: -13.250001907348633
    3. '(True' → logprob: -20.000001907348633
    4. '=True' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.875001907348633
    6. 'False' → logprob: -22.500001907348633
    7. 'true' → logprob: -24.500001907348633
    8. '1' → logprob: -24.875001907348633
    9. '       ' → logprob: -25.000001907348633
    10. '.True' → logprob: -25.625001907348633

Token 1834: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4616992473602295
    2. '<|end|>' → logprob: -1.4616992473602295
    3. '```' → logprob: -3.0866992473602295
    4. '       ' → logprob: -3.2116992473602295
    5. '
' → logprob: -3.2116992473602295
    6. '<|end|>' → logprob: -5.086699485778809
    7. '   ' → logprob: -6.336699485778809
    8. '        
' → logprob: -7.086699485778809
    9. '    
' → logprob: -7.461699485778809
    10. '            
' → logprob: -7.711699485778809

Token 1835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001864976016804576
    2. '       ' → logprob: -7.376864910125732
    3. 'while' → logprob: -7.376864910125732
    4. '```' → logprob: -7.501864910125732
    5. '
' → logprob: -10.75186538696289
    6. '   ' → logprob: -11.25186538696289
    7. '#' → logprob: -11.37686538696289
    8. ' while' → logprob: -12.50186538696289
    9. 'if' → logprob: -12.50186538696289
    10. '            
' → logprob: -12.62686538696289

Token 1836: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4215628206729889
    2. 'while' → logprob: -1.1715627908706665
    3. '#' (adapté à ' #') → logprob: -3.421562910079956
    4. '```' → logprob: -7.046562671661377
    5. 'for' → logprob: -8.546563148498535
    6. 'if' → logprob: -8.796563148498535
    7. ' while' → logprob: -9.546563148498535
    8. '            
' → logprob: -9.671563148498535
    9. '
' → logprob: -9.796563148498535
    10. '       ' → logprob: -11.671563148498535

Token 1837: ' after' (ID: 1934)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05835045501589775
    2. '           ' → logprob: -3.5583505630493164
    3. '#' → logprob: -3.6833505630493164
    4. 'for' → logprob: -5.808350563049316
    5. 'if' → logprob: -11.433350563049316
    6. ' while' → logprob: -11.433350563049316
    7. '       ' → logprob: -11.433350563049316
    8. '
' → logprob: -11.683350563049316
    9. '            
' → logprob: -12.183350563049316
    10. '   ' → logprob: -12.683350563049316

Token 1838: ' remov' (ID: 12074)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9394866228103638
    2. '#' → logprob: -1.3144866228103638
    3. 'for' → logprob: -2.064486503601074
    4. '   ' → logprob: -2.814486503601074
    5. 'all' → logprob: -3.064486503601074
    6. '           ' → logprob: -3.939486503601074
    7. '
' → logprob: -4.064486503601074
    8. 'while' → logprob: -4.189486503601074
    9. ' for' → logprob: -5.314486503601074
    10. '       ' → logprob: -5.314486503601074

Token 1839: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.3891731798648834
    2. 'als' → logprob: -1.389173150062561
    3. 'ing' → logprob: -3.7641732692718506
    4. 'oval' → logprob: -3.7641732692718506
    5. 'ov' → logprob: -4.0141730308532715
    6. 'val' → logprob: -5.1391730308532715
    7. '#' → logprob: -7.0141730308532715
    8. 'vals' → logprob: -7.5141730308532715
    9. '
' → logprob: -8.38917350769043
    10. '[' → logprob: -8.51417350769043

Token 1840: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004527182609308511
    2. 'while' → logprob: -8.750452995300293
    3. 'for' → logprob: -9.625452995300293
    4. '       ' → logprob: -10.000452995300293
    5. '            
' → logprob: -10.125452995300293
    6. '```' → logprob: -10.125452995300293
    7. '#' → logprob: -10.750452995300293
    8. ' for' → logprob: -10.875452995300293
    9. ' while' → logprob: -11.000452995300293
    10. '
' → logprob: -11.125452995300293

Token 1841: ' try' (ID: 2075)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.031662583351135254
    2. '#' → logprob: -3.6566624641418457
    3. 'for' → logprob: -5.781662464141846
    4. '           ' → logprob: -6.156662464141846
    5. '```' → logprob: -9.906662940979004
    6. ' while' → logprob: -10.156662940979004
    7. '
' → logprob: -10.531662940979004
    8. '       ' → logprob: -11.656662940979004
    9. 'if' → logprob: -12.031662940979004
    10. '            
' → logprob: -12.281662940979004

Token 1842: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8030844330787659
    2. ':
' → logprob: -1.053084373474121
    3. '   ' → logprob: -2.303084373474121
    4. 'to' → logprob: -2.678084373474121
    5. '           ' → logprob: -3.428084373474121
    6. '       ' → logprob: -6.928084373474121
    7. '               ' → logprob: -7.053084373474121
    8. ' to' → logprob: -8.803084373474121
    9. ' ' → logprob: -10.928084373474121
    10. '```' → logprob: -11.178084373474121

Token 1843: ' park' (ID: 11796)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.427822470664978
    2. 'park' → logprob: -1.302822470664978
    3. '
' → logprob: -3.1778225898742676
    4. '   ' → logprob: -3.9278225898742676
    5. '```' → logprob: -5.427822589874268
    6. ':
' → logprob: -6.052822589874268
    7. '#' → logprob: -6.177822589874268
    8. 'for' → logprob: -6.177822589874268
    9. '       ' → logprob: -6.802822589874268
    10. ' while' → logprob: -6.927822589874268

Token 1844: ' waiting' (ID: 12028)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006023610476404428
    2. '           ' → logprob: -8.500602722167969
    3. 'car' → logprob: -8.875602722167969
    4. '       ' → logprob: -9.375602722167969
    5. ' while' → logprob: -9.375602722167969
    6. '   ' → logprob: -10.375602722167969
    7. 'for' → logprob: -11.000602722167969
    8. '
' → logprob: -11.250602722167969
    9. 'if' → logprob: -11.250602722167969
    10. '            
' → logprob: -11.875602722167969

Token 1845: ' cars' (ID: 13653)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6312408447265625
    2. 'cars' → logprob: -0.8812408447265625
    3. 'car' → logprob: -3.1312408447265625
    4. 'for' → logprob: -5.5062408447265625
    5. '
' → logprob: -6.0062408447265625
    6. ' cars' → logprob: -6.6312408447265625
    7. ' while' → logprob: -7.1312408447265625
    8. '```' → logprob: -7.3812408447265625
    9. '       ' → logprob: -8.131240844726562
    10. '           ' → logprob: -8.881240844726562

Token 1846: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013095766305923462
    2. 'while' → logprob: -4.513095855712891
    3. ' while' → logprob: -6.388095855712891
    4. '       ' → logprob: -8.76309585571289
    5. '            
' → logprob: -9.13809585571289
    6. '
' → logprob: -9.88809585571289
    7. '   ' → logprob: -11.38809585571289
    8. '```' → logprob: -11.63809585571289
    9. 'for' → logprob: -12.01309585571289
    10. '               ' → logprob: -12.63809585571289

Token 1847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009781472384929657
    2. 'while' → logprob: -4.759781360626221
    3. ' while' → logprob: -6.884781360626221
    4. '            
' → logprob: -9.884781837463379
    5. '```' → logprob: -10.009781837463379
    6. '       ' → logprob: -10.884781837463379
    7. '
' → logprob: -11.134781837463379
    8. 'for' → logprob: -12.509781837463379
    9. '               ' → logprob: -13.384781837463379
    10. '   ' → logprob: -13.509781837463379

Token 1848: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05778061971068382
    2. '           ' → logprob: -2.9327805042266846
    3. ' while' → logprob: -5.932780742645264
    4. '```' → logprob: -8.932780265808105
    5. 'for' → logprob: -9.557780265808105
    6. '	while' → logprob: -10.807780265808105
    7. '       ' → logprob: -11.932780265808105
    8. '            
' → logprob: -12.432780265808105
    9. '   ' → logprob: -13.057780265808105
    10. '``' → logprob: -13.182780265808105

Token 1849: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -6.277553620748222e-05
    2. ' waiting' → logprob: -9.750062942504883
    3. 'len' → logprob: -12.500062942504883
    4. 'wait' → logprob: -14.500062942504883
    5. 'True' → logprob: -16.625062942504883
    6. '   ' → logprob: -17.375062942504883
    7. 'parking' → logprob: -17.375062942504883
    8. 'arrival' → logprob: -18.125062942504883
    9. '(wait' → logprob: -18.375062942504883
    10. 'arr' → logprob: -18.500062942504883

Token 1850: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.35434016585350037
    2. ':
' → logprob: -1.3543401956558228
    3. ' and' → logprob: -3.229340076446533
    4. ':' → logprob: -7.854340076446533
    5. '   ' → logprob: -8.604340553283691
    6. '           ' → logprob: -10.604340553283691
    7. '```' → logprob: -10.604340553283691
    8. '       ' → logprob: -11.229340553283691
    9. '):
' → logprob: -12.479340553283691
    10. ' ' → logprob: -12.479340553283691

Token 1851: '               ' (ID: 506)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7869731783866882
    2. '               ' → logprob: -1.161973237991333
    3. ' car' → logprob: -2.286973237991333
    4. '```' → logprob: -2.786973237991333
    5. '           ' → logprob: -3.286973237991333
    6. '(car' → logprob: -5.161972999572754
    7. '   ' → logprob: -5.286972999572754
    8. '	car' → logprob: -5.286972999572754
    9. '       ' → logprob: -5.411972999572754
    10. ' if' → logprob: -5.911972999572754

Token 1852: ' c' (ID: 274)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0026403414085507393
    2. 'if' → logprob: -6.502640247344971
    3. '               ' → logprob: -7.127640247344971
    4. 'can' → logprob: -9.252640724182129
    5. ' car' → logprob: -9.252640724182129
    6. 'next' → logprob: -10.002640724182129
    7. '           ' → logprob: -10.502640724182129
    8. ' if' → logprob: -10.752640724182129
    9. 'c' (adapté à ' c') → logprob: -11.502640724182129
    10. '                   ' → logprob: -11.752640724182129

Token 1853: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.008675670251250267
    2. '=' → logprob: -5.508675575256348
    3. ' =' → logprob: -5.883675575256348
    4. '_car' → logprob: -7.008675575256348
    5. '_id' → logprob: -7.883675575256348
    6. 'car' → logprob: -7.883675575256348
    7. '_ar' → logprob: -9.258675575256348
    8. 'id' → logprob: -11.008675575256348
    9. '_' → logprob: -11.758675575256348
    10. 'arr' → logprob: -12.633675575256348

Token 1854: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0002036595979006961
    2. ' waiting' → logprob: -8.500204086303711
    3. 'wait' → logprob: -15.625204086303711
    4. 'queue' → logprob: -19.62520408630371
    5. 'Waiting' → logprob: -20.00020408630371
    6. '_wait' → logprob: -20.62520408630371
    7. 'deque' → logprob: -21.25020408630371
    8. 'await' → logprob: -21.25020408630371
    9. 'car' → logprob: -21.50020408630371
    10. 'w' → logprob: -21.87520408630371

Token 1855: '[' (ID: 58)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10021842271089554
    2. '[' → logprob: -2.3502185344696045
    3. 'p' → logprob: -11.975218772888184
    4. '```' → logprob: -12.475218772888184
    5. '   ' → logprob: -13.975218772888184
    6. '.' → logprob: -14.975218772888184
    7. '.pop' → logprob: -15.975218772888184
    8. '[p' → logprob: -16.225217819213867
    9. '
' → logprob: -17.100217819213867
    10. '_p' → logprob: -17.225217819213867

Token 1856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004823837894946337
    2. 'p' → logprob: -5.504823684692383
    3. '.p' → logprob: -7.254823684692383
    4. '[' → logprob: -10.879823684692383
    5. 'pop' → logprob: -11.129823684692383
    6. '```' → logprob: -13.004823684692383
    7. 'opleft' → logprob: -14.129823684692383
    8. ' p' → logprob: -14.879823684692383
    9. '.pop' → logprob: -15.004823684692383
    10. '   ' → logprob: -15.504823684692383

Token 1857: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.436256468296051
    2. ']' → logprob: -1.9362564086914062
    3. ')
' → logprob: -1.9362564086914062
    4. '[' → logprob: -3.6862564086914062
    5. '])' → logprob: -3.9362564086914062
    6. ']
' → logprob: -4.311256408691406
    7. '])
' → logprob: -6.061256408691406
    8. '.pop' → logprob: -6.686256408691406
    9. ')]' → logprob: -7.811256408691406
    10. '```' → logprob: -7.811256408691406

Token 1858: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2382056713104248
    2. '<|end|>' → logprob: -1.2382056713104248
    3. ')' → logprob: -2.113205671310425
    4. '               ' → logprob: -2.488205671310425
    5. '[' → logprob: -3.113205671310425
    6. '.pop' → logprob: -3.613205671310425
    7. ' if' → logprob: -3.863205671310425
    8. ' =' → logprob: -3.988205671310425
    9. '<|end|>' → logprob: -4.488205909729004
    10. ' 
' → logprob: -4.613205909729004

Token 1859: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011751789599657059
    2. 'success' → logprob: -5.886751651763916
    3. '               ' → logprob: -6.011751651763916
    4. ' if' → logprob: -6.136751651763916
    5. 'can' → logprob: -6.636751651763916
    6. 'ok' → logprob: -7.261751651763916
    7. 'park' → logprob: -7.511751651763916
    8. 'car' → logprob: -7.761751651763916
    9. '                   ' → logprob: -7.886751651763916
    10. 'current' → logprob: -8.761752128601074

Token 1860: ' not' (ID: 625)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.2027839869260788
    2. 'not' → logprob: -1.7027839422225952
    3. ' not' → logprob: -6.952784061431885
    4. 'c' → logprob: -8.952783584594727
    5. '   ' → logprob: -9.452783584594727
    6. ' park' → logprob: -9.702783584594727
    7. '(not' → logprob: -10.327783584594727
    8. 'len' → logprob: -10.702783584594727
    9. 'car' → logprob: -10.827783584594727
    10. 'parking' → logprob: -11.702783584594727

Token 1861: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.003612901084125042
    2. ' park' → logprob: -5.628612995147705
    3. 'spot' → logprob: -12.753612518310547
    4. 'wait' → logprob: -12.753612518310547
    5. '(' → logprob: -12.878612518310547
    6. '
' → logprob: -14.003612518310547
    7. 'parking' → logprob: -14.628612518310547
    8. 'car' → logprob: -14.753612518310547
    9. 'parks' → logprob: -14.753612518310547
    10. ' (' → logprob: -15.128612518310547

Token 1862: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.3676733690081164e-05
    2. '_c' → logprob: -11.12502384185791
    3. '_' → logprob: -11.87502384185791
    4. '(car' → logprob: -14.62502384185791
    5. '_wait' → logprob: -15.12502384185791
    6. 'Car' → logprob: -15.25002384185791
    7. '(c' → logprob: -15.62502384185791
    8. 'car' → logprob: -15.62502384185791
    9. '<Car' → logprob: -15.87502384185791
    10. ')_' → logprob: -16.375022888183594

Token 1863: '_full' (ID: 36973)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1696002185344696
    2. '_full' → logprob: -2.169600248336792
    3. '(' → logprob: -3.294600248336792
    4. '(
' → logprob: -6.669600009918213
    5. '(car' → logprob: -7.044600009918213
    6. '_car' → logprob: -7.419600009918213
    7. '_' → logprob: -7.919600009918213
    8. '(full' → logprob: -8.044600486755371
    9. 'full' → logprob: -8.294600486755371
    10. '(_' → logprob: -8.419600486755371

Token 1864: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.008177644573152065
    2. '(' → logprob: -4.883177757263184
    3. '(wait' → logprob: -8.008177757263184
    4. '(car' → logprob: -9.258177757263184
    5. '(
' → logprob: -9.383177757263184
    6. '(w' → logprob: -10.633177757263184
    7. ' (' → logprob: -10.758177757263184
    8. 'waiting' → logprob: -11.758177757263184
    9. '((' → logprob: -13.758177757263184
    10. '_wait' → logprob: -14.008177757263184

Token 1865: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008653099648654461
    2. '):' → logprob: -5.133653163909912
    3. '()):
' → logprob: -6.508653163909912
    4. ')' → logprob: -7.008653163909912
    5. '():
' → logprob: -8.258652687072754
    6. '()' → logprob: -10.258652687072754
    7. '):

' → logprob: -11.633652687072754
    8. '[' → logprob: -11.883652687072754
    9. '):
' → logprob: -12.758652687072754
    10. '   ' → logprob: -12.883652687072754

Token 1866: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31279805302619934
    2. ':
' → logprob: -1.812798023223877
    3. '():
' → logprob: -2.437798023223877
    4. '               ' → logprob: -4.562798023223877
    5. '):
' → logprob: -6.437798023223877
    6. '           ' → logprob: -7.062798023223877
    7. '                    
' → logprob: -7.062798023223877
    8. ':' → logprob: -7.187798023223877
    9. '   ' → logprob: -7.312798023223877
    10. '                       ' → logprob: -7.437798023223877

Token 1867: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.724393367767334
    2. 'break' (adapté à ' break') → logprob: -0.724393367767334
    3. '               ' → logprob: -3.974393367767334
    4. ' break' → logprob: -5.099393367767334
    5. '                       ' → logprob: -5.349393367767334
    6. '           ' → logprob: -7.599393367767334
    7. '	break' → logprob: -7.974393367767334
    8. '   ' → logprob: -9.474393844604492
    9. '				' → logprob: -9.724393844604492
    10. '       ' → logprob: -10.349393844604492

Token 1868: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032221633940935135
    2. '
' → logprob: -3.657221555709839
    3. '                
' → logprob: -6.407221794128418
    4. '```' → logprob: -6.532221794128418
    5. 'waiting' → logprob: -7.407221794128418
    6. '                   ' → logprob: -8.032221794128418
    7. ')
' → logprob: -8.157221794128418
    8. '                    
' → logprob: -8.407221794128418
    9. ' 
' → logprob: -8.532221794128418
    10. ' waiting' → logprob: -8.532221794128418

Token 1869: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024218130856752396
    2. '```' → logprob: -5.2742180824279785
    3. '                   ' → logprob: -5.3992180824279785
    4. '
' → logprob: -5.6492180824279785
    5. '                
' → logprob: -5.8992180824279785
    6. '``' → logprob: -6.1492180824279785
    7. '                    
' → logprob: -6.5242180824279785
    8. '\n' → logprob: -7.0242180824279785
    9. ')' → logprob: -7.6492180824279785
    10. ' 
' → logprob: -7.7742180824279785

Token 1870: ' waiting' (ID: 12028)
  Prédit: '	       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	       ' → logprob: -0.8394255638122559
    2. '               ' → logprob: -1.3394255638122559
    3. ' waiting' → logprob: -1.5894255638122559
    4. '		       ' → logprob: -2.964425563812256
    5. '	           ' → logprob: -3.964425563812256
    6. 'waiting' (adapté à ' waiting') → logprob: -4.589425563812256
    7. '           ' → logprob: -4.839425563812256
    8. '			' → logprob: -5.589425563812256
    9. '       ' → logprob: -6.464425563812256
    10. '		' → logprob: -6.589425563812256

Token 1871: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.000008583068848
    3. '.pop' → logprob: -13.250008583068848
    4. ' .' → logprob: -16.87500762939453
    5. '   ' → logprob: -17.62500762939453
    6. '​.' → logprob: -18.37500762939453
    7. '.append' → logprob: -18.62500762939453
    8. ').' → logprob: -19.00000762939453
    9. '.dequeue' → logprob: -19.12500762939453
    10. ')p' → logprob: -19.37500762939453

Token 1872: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.20145630836486816
    2. 'op' → logprob: -1.7014563083648682
    3. 'opl' → logprob: -10.576456069946289
    4. 'ople' → logprob: -12.201456069946289
    5. '```' → logprob: -12.826456069946289
    6. 'opt' → logprob: -12.826456069946289
    7. 'opup' → logprob: -13.201456069946289
    8. 'opped' → logprob: -13.576456069946289
    9. 'opc' → logprob: -14.201456069946289
    10. 'opf' → logprob: -14.451456069946289

Token 1873: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1874: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03683347627520561
    2. '<|end|>' → logprob: -4.2868332862854
    3. '
' → logprob: -4.5368332862854
    4. '            
' → logprob: -5.2868332862854
    5. '```' → logprob: -5.9118332862854
    6. '<|end|>' → logprob: -6.5368332862854
    7. '       ' → logprob: -6.6618332862854
    8. '        
' → logprob: -7.2868332862854
    9. '    
' → logprob: -9.411833763122559
    10. '	       ' → logprob: -9.786833763122559

Token 1875: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005751033313572407
    2. 'if' → logprob: -5.630751132965088
    3. '```' → logprob: -7.255751132965088
    4. 'while' → logprob: -7.505751132965088
    5. '#' (adapté à ' #') → logprob: -7.630751132965088
    6. '            
' → logprob: -8.13075065612793
    7. ' if' → logprob: -10.00575065612793
    8. '       ' → logprob: -10.50575065612793
    9. ' while' → logprob: -11.63075065612793
    10. '          ' → logprob: -12.25575065612793

Token 1876: ' finally' (ID: 8486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06636501103639603
    2. 'while' → logprob: -2.8163650035858154
    3. '           ' → logprob: -5.4413652420043945
    4. '#' → logprob: -10.441365242004395
    5. ' if' → logprob: -10.941365242004395
    6. '       ' → logprob: -12.941365242004395
    7. ' while' → logprob: -12.941365242004395
    8. 'for' → logprob: -14.316365242004395
    9. '            
' → logprob: -14.441365242004395
    10. '```' → logprob: -14.691365242004395

Token 1877: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008755320683121681
    2. 'if' → logprob: -5.133755207061768
    3. ' if' → logprob: -6.508755207061768
    4. '       ' → logprob: -7.258755207061768
    5. '   ' → logprob: -8.258755683898926
    6. '#' → logprob: -9.133755683898926
    7. ',' → logprob: -9.133755683898926
    8. '
' → logprob: -9.383755683898926
    9. 'while' → logprob: -10.883755683898926
    10. '```' → logprob: -11.258755683898926

Token 1878: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10025293380022049
    2. 'while' → logprob: -2.350252866744995
    3. '#' → logprob: -10.600253105163574
    4. '           ' → logprob: -10.850253105163574
    5. ' if' → logprob: -14.350253105163574
    6. 'for' → logprob: -14.475253105163574
    7. ' while' → logprob: -14.975253105163574
    8. '
' → logprob: -15.225253105163574
    9. '            
' → logprob: -15.475253105163574
    10. '       ' → logprob: -15.850253105163574

Token 1879: ' arriving' (ID: 53419)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.029166890308260918
    2. '_line' → logprob: -4.5291666984558105
    3. '_car' → logprob: -4.6541666984558105
    4. '_arr' → logprob: -5.1541666984558105
    5. 'time' → logprob: -6.9041666984558105
    6. '_' → logprob: -7.6541666984558105
    7. '_c' → logprob: -8.029167175292969
    8. 'if' → logprob: -8.404167175292969
    9. '   ' → logprob: -8.654167175292969
    10. 'car' → logprob: -8.779167175292969

Token 1880: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.21409213542938232
    2. '_c' → logprob: -1.9640921354293823
    3. 'car' → logprob: -3.214092254638672
    4. ' =' → logprob: -5.589092254638672
    5. '_' → logprob: -6.464092254638672
    6. '_time' → logprob: -6.589092254638672
    7. '       ' → logprob: -6.714092254638672
    8. '=' → logprob: -6.839092254638672
    9. '   ' → logprob: -7.464092254638672
    10. '
' → logprob: -7.464092254638672

Token 1881: ' tries' (ID: 30519)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1243511512875557
    2. 'if' → logprob: -2.6243512630462646
    3. ' if' → logprob: -3.3743512630462646
    4. '       ' → logprob: -4.9993510246276855
    5. '   ' → logprob: -6.7493510246276855
    6. ' =' → logprob: -7.3743510246276855
    7. '=' → logprob: -7.8743510246276855
    8. '	if' → logprob: -8.249351501464844
    9. '_id' → logprob: -8.499351501464844
    10. '	       ' → logprob: -8.999351501464844

Token 1882: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21008585393428802
    2. 'to' → logprob: -2.460085868835449
    3. ':
' → logprob: -2.460085868835449
    4. '_to' → logprob: -5.335085868835449
    5. '       ' → logprob: -5.585085868835449
    6. ' to' → logprob: -5.960085868835449
    7. '           ' → logprob: -6.335085868835449
    8. '   ' → logprob: -6.710085868835449
    9. 'if' → logprob: -6.710085868835449
    10. '```' → logprob: -6.710085868835449

Token 1883: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.05211568623781204
    2. '
' → logprob: -4.0521159172058105
    3. 'arr' → logprob: -4.6771159172058105
    4. 'try' → logprob: -4.8021159172058105
    5. 'if' → logprob: -5.6771159172058105
    6. '```' → logprob: -5.9271159172058105
    7. 'while' → logprob: -6.0521159172058105
    8. ' park' → logprob: -6.3021159172058105
    9. 'attempt' → logprob: -6.3021159172058105
    10. '#' → logprob: -7.8021159172058105

Token 1884: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3633290231227875
    2. '           ' → logprob: -1.2383290529251099
    3. ' if' → logprob: -4.73832893371582
    4. '       ' → logprob: -5.48832893371582
    5. 'while' → logprob: -7.23832893371582
    6. '   ' → logprob: -7.48832893371582
    7. 'car' → logprob: -8.36332893371582
    8. '```' → logprob: -9.23832893371582
    9. 'try' → logprob: -9.36332893371582
    10. '            
' → logprob: -9.73832893371582

Token 1885: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42232051491737366
    2. '       ' → logprob: -1.6723204851150513
    3. ' if' → logprob: -2.672320604324341
    4. '           ' → logprob: -3.047320604324341
    5. '   ' → logprob: -4.047320365905762
    6. 'c' → logprob: -4.297320365905762
    7. 'car' → logprob: -4.922320365905762
    8. 'while' → logprob: -7.547320365905762
    9. ' c' → logprob: -8.422320365905762
    10. ' car' → logprob: -9.047320365905762

Token 1886: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003417485859245062
    2. ' if' → logprob: -5.753417491912842
    3. '           ' → logprob: -8.503417015075684
    4. '       ' → logprob: -10.628417015075684
    5. 'while' → logprob: -11.878417015075684
    6. '```' → logprob: -12.628417015075684
    7. '   ' → logprob: -13.128417015075684
    8. '            
' → logprob: -16.00341796875
    9. '	if' → logprob: -16.12841796875
    10. '``' → logprob: -17.12841796875

Token 1887: ' arriving' (ID: 53419)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.043054912239313126
    2. ' arriving' → logprob: -3.1680548191070557
    3. '   ' → logprob: -10.043054580688477
    4. 'car' → logprob: -12.293054580688477
    5. ' arr' → logprob: -12.918054580688477
    6. 'arrival' → logprob: -13.293054580688477
    7. ' arriv' → logprob: -14.543054580688477
    8. '	arr' → logprob: -14.918054580688477
    9. ' arrivals' → logprob: -15.043054580688477
    10. 'Arr' → logprob: -15.043054580688477

Token 1888: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.001983948517590761
    2. '_' → logprob: -7.126984119415283
    3. 's' → logprob: -7.251984119415283
    4. '<_' → logprob: -8.376983642578125
    5. '<' → logprob: -9.126983642578125
    6. ' <' → logprob: -9.751983642578125
    7. '_car' → logprob: -10.626983642578125
    8. '<s' → logprob: -11.126983642578125
    9. '_<' → logprob: -11.251983642578125
    10. '_s' → logprob: -11.251983642578125

Token 1889: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.004150699358433485
    2. 'ar' → logprob: -6.129150867462158
    3. '<' → logprob: -7.004150867462158
    4. '_' → logprob: -7.504150867462158
    5. '<n' → logprob: -8.879150390625
    6. 's' → logprob: -9.004150390625
    7. '_c' → logprob: -9.629150390625
    8. 'cars' → logprob: -9.754150390625
    9. '<s' → logprob: -10.254150390625
    10. ' <' → logprob: -10.879150390625

Token 1890: ' <' (ID: 464)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.03187079355120659
    2. ' <' → logprob: -3.7818708419799805
    3. '<' → logprob: -4.7818708419799805
    4. '<len' → logprob: -8.65687084197998
    5. '<num' → logprob: -10.90687084197998
    6. '<m' → logprob: -11.90687084197998
    7. '<=' → logprob: -12.40687084197998
    8. '<N' → logprob: -13.28187084197998
    9. '<size' → logprob: -13.40687084197998
    10. ' <=' → logprob: -14.03187084197998

Token 1891: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.541112427134067e-05
    2. ' n' → logprob: -9.500075340270996
    3. 'total' → logprob: -15.000075340270996
    4. '   ' → logprob: -16.000076293945312
    5. '
' → logprob: -17.000076293945312
    6. '	n' → logprob: -17.875076293945312
    7. '=n' → logprob: -17.875076293945312
    8. '       ' → logprob: -18.375076293945312
    9. '```' → logprob: -18.625076293945312
    10. ' total' → logprob: -19.375076293945312

Token 1892: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05097305774688721
    2. ':' → logprob: -3.3009729385375977
    3. '==' → logprob: -5.550972938537598
    4. '       ' → logprob: -5.550972938537598
    5. ' ==' → logprob: -6.050972938537598
    6. ' and' → logprob: -6.800972938537598
    7. '           ' → logprob: -7.300972938537598
    8. '   ' → logprob: -7.675972938537598
    9. ' :
' → logprob: -9.300972938537598
    10. '):
' → logprob: -9.425972938537598

Token 1893: ' current' (ID: 2208)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(car' → logprob: -1.0652683973312378
    2. 'times' → logprob: -1.6902683973312378
    3. '(times' → logprob: -1.8152683973312378
    4. 'car' → logprob: -2.3152685165405273
    5. ' times' → logprob: -3.5652685165405273
    6. 'not' → logprob: -3.6902685165405273
    7. 'current' → logprob: -3.6902685165405273
    8. ' not' → logprob: -3.8152685165405273
    9. '(not' → logprob: -3.9402685165405273
    10. '(current' → logprob: -3.9402685165405273

Token 1894: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.07536934316158295
    2. '_' → logprob: -2.700369358062744
    3. ' _' → logprob: -6.575369358062744
    4. '==' → logprob: -6.950369358062744
    5. '_c' → logprob: -7.200369358062744
    6. ' ==' → logprob: -7.575369358062744
    7. '_arr' → logprob: -7.700369358062744
    8. '```' → logprob: -7.950369358062744
    9. '   ' → logprob: -8.200368881225586
    10. '_times' → logprob: -8.450368881225586

Token 1895: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2521739602088928
    2. '==' → logprob: -1.502173900604248
    3. ' >=' → logprob: -9.502174377441406
    4. '>=' → logprob: -9.752174377441406
    5. ')==' → logprob: -10.127174377441406
    6. ' <=' → logprob: -11.377174377441406
    7. '   ' → logprob: -11.627174377441406
    8. '<=' → logprob: -11.752174377441406
    9. '=' → logprob: -11.877174377441406
    10. ' ' → logprob: -12.002174377441406

Token 1896: ' arriving' (ID: 53419)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0018310615560039878
    2. 'car' → logprob: -6.6268310546875
    3. ' arriving' → logprob: -7.6268310546875
    4. '10' → logprob: -11.8768310546875
    5. 'arrival' → logprob: -11.8768310546875
    6. '   ' → logprob: -13.2518310546875
    7. '0' → logprob: -14.8768310546875
    8. ' arr' → logprob: -15.1268310546875
    9. '(arr' → logprob: -15.3768310546875
    10. ' car' → logprob: -15.3768310546875

Token 1897: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00010819212911883369
    2. 'cars' → logprob: -9.250107765197754
    3. 'car' → logprob: -12.500107765197754
    4. 'c' → logprob: -12.750107765197754
    5. '_car' → logprob: -13.375107765197754
    6. 's' → logprob: -13.500107765197754
    7. '_' → logprob: -13.750107765197754
    8. '```' → logprob: -14.875107765197754
    9. 'Cars' → logprob: -15.250107765197754
    10. '_arr' → logprob: -15.500107765197754

Token 1898: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.008861202746629715
    2. '_c' → logprob: -5.133861064910889
    3. 'ar' → logprob: -6.383861064910889
    4. '_' → logprob: -7.508861064910889
    5. '_ar' → logprob: -7.508861064910889
    6. '   ' → logprob: -10.508861541748047
    7. '_
' → logprob: -11.258861541748047
    8. '```' → logprob: -11.258861541748047
    9. '__' → logprob: -11.383861541748047
    10. '\' → logprob: -11.633861541748047

Token 1899: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012622780166566372
    2. ' *' → logprob: -4.387622833251953
    3. '   ' → logprob: -9.262622833251953
    4. '	' → logprob: -11.262622833251953
    5. ' ' → logprob: -12.762622833251953
    6. ' ' → logprob: -14.262622833251953
    7. '    ' → logprob: -14.637622833251953
    8. '  ' → logprob: -15.387622833251953
    9. '*object' → logprob: -15.387622833251953
    10. ')' → logprob: -16.012622833251953

Token 1900: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.375003814697266
    4. '1' → logprob: -18.625003814697266
    5. '=' → logprob: -19.375003814697266
    6. '   ' → logprob: -20.625003814697266
    7. '۱۰' → logprob: -20.750003814697266
    8. '`' → logprob: -21.125003814697266
    9. '(' → logprob: -21.125003814697266
    10. '+' → logprob: -21.375003814697266

Token 1901: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1439005434513092
    2. ':' → logprob: -2.0189006328582764
    3. '       ' → logprob: -7.143900394439697
    4. '           ' → logprob: -8.518900871276855
    5. '):
' → logprob: -9.018900871276855
    6. '   ' → logprob: -9.893900871276855
    7. ' and' → logprob: -10.518900871276855
    8. '               ' → logprob: -11.268900871276855
    9. ':

' → logprob: -11.643900871276855
    10. ':
' → logprob: -12.393900871276855

Token 1902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1723700761795044
    2. '           ' → logprob: -1.2973700761795044
    3. 'car' → logprob: -2.047369956970215
    4. ' if' → logprob: -2.047369956970215
    5. '       ' → logprob: -2.297369956970215
    6. 'if' → logprob: -3.422369956970215
    7. ' car' → logprob: -4.547369956970215
    8. '```' → logprob: -5.047369956970215
    9. ' ' → logprob: -6.047369956970215
    10. 'c' → logprob: -6.797369956970215

Token 1903: ' if' (ID: 538)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4136974513530731
    2. 'if' (adapté à ' if') → logprob: -1.1636974811553955
    3. '               ' → logprob: -3.9136974811553955
    4. 'c' → logprob: -5.163697242736816
    5. 'waiting' → logprob: -7.538697242736816
    6. '           ' → logprob: -9.913697242736816
    7. 'arr' → logprob: -10.288697242736816
    8. ' if' → logprob: -10.413697242736816
    9. 'arrival' → logprob: -10.413697242736816
    10. 'while' → logprob: -10.788697242736816

Token 1904: ' not' (ID: 625)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.502503514289856
    2. 'not' → logprob: -1.002503514289856
    3. ' not' → logprob: -3.6275033950805664
    4. ' park' → logprob: -6.627503395080566
    5. '   ' → logprob: -10.752503395080566
    6. 'spot' → logprob: -10.877503395080566
    7. 'parking' → logprob: -10.877503395080566
    8. '(not' → logprob: -11.502503395080566
    9. 'car' → logprob: -12.190003395080566
    10. '!' → logprob: -12.377503395080566

Token 1905: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0001831565605243668
    2. ' park' → logprob: -8.62518310546875
    3. 'parking' → logprob: -13.62518310546875
    4. '   ' → logprob: -14.50018310546875
    5. '
' → logprob: -15.12518310546875
    6. 'pack' → logprob: -15.37518310546875
    7. 'parks' → logprob: -15.75018310546875
    8. 'wait' → logprob: -16.12518310546875
    9. ' ' → logprob: -16.12518310546875
    10. 'spot' → logprob: -16.12518310546875

Token 1906: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -7.696077227592468e-05
    2. 'car' → logprob: -9.625077247619629
    3. '(car' → logprob: -12.625077247619629
    4. '_full' → logprob: -12.625077247619629
    5. 'Car' → logprob: -13.500077247619629
    6. 'full' → logprob: -13.750077247619629
    7. '_c' → logprob: -14.250077247619629
    8. '	car' → logprob: -14.750077247619629
    9. '_' → logprob: -15.125077247619629
    10. '<Car' → logprob: -16.000076293945312

Token 1907: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -0.0036131395027041435
    2. 'full' → logprob: -5.628612995147705
    3. '(full' → logprob: -11.753613471984863
    4. 'Full' → logprob: -13.628613471984863
    5. 'arr' → logprob: -14.128613471984863
    6. ' full' → logprob: -14.378613471984863
    7. '(arr' → logprob: -14.628613471984863
    8. 'a' → logprob: -14.753613471984863
    9. '(c' → logprob: -15.003613471984863
    10. 'ful' → logprob: -15.378613471984863

Token 1908: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.750000953674316
    3. '(' → logprob: -16.125
    4. '[arr' → logprob: -16.25
    5. 'arr' → logprob: -17.25
    6. '       ' → logprob: -17.875
    7. '           ' → logprob: -18.0
    8. '(ar' → logprob: -18.375
    9. '((' → logprob: -18.375
    10. '   ' → logprob: -18.5

Token 1909: 'iving' (ID: 2690)
  Prédit: 'iving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iving' → logprob: -2.7491250875755213e-05
    2. 'ving' → logprob: -11.250027656555176
    3. '[' → logprob: -11.625027656555176
    4. '_' → logprob: -12.750027656555176
    5. '#' → logprob: -15.250027656555176
    6. 'iv' → logprob: -15.375027656555176
    7. 'aving' → logprob: -15.500027656555176
    8. '"' → logprob: -15.750027656555176
    9. 'IVING' → logprob: -15.750027656555176
    10. '=' → logprob: -15.875027656555176

Token 1910: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.723352049040841e-06
    2. 's' → logprob: -12.500004768371582
    3. 'cars' → logprob: -14.500004768371582
    4. '_car' → logprob: -15.625004768371582
    5. '```' → logprob: -15.750004768371582
    6. '_' → logprob: -17.125003814697266
    7. 'car' → logprob: -17.125003814697266
    8. 'Cars' → logprob: -18.125003814697266
    9. '+' → logprob: -18.500003814697266
    10. '_s' → logprob: -18.625003814697266

Token 1911: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.30353009700775146
    2. '_c' → logprob: -1.5535300970077515
    3. 's' → logprob: -3.553530216217041
    4. 'ar' → logprob: -5.053530216217041
    5. 'cars' → logprob: -5.303530216217041
    6. '_s' → logprob: -5.428530216217041
    7. '_' → logprob: -5.553530216217041
    8. '_ar' → logprob: -7.678530216217041
    9. '_car' → logprob: -8.303529739379883
    10. '_
' → logprob: -8.553529739379883

Token 1912: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004162095487117767
    2. '):' → logprob: -5.504162311553955
    3. '               ' → logprob: -10.129161834716797
    4. '):
' → logprob: -11.129161834716797
    5. ')' → logprob: -11.504161834716797
    6. ':
' → logprob: -11.629161834716797
    7. '                   ' → logprob: -12.379161834716797
    8. '():
' → logprob: -12.879161834716797
    9. '):

' → logprob: -13.879161834716797
    10. ':' → logprob: -14.379161834716797

Token 1913: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.040113408118486404
    2. ':
' → logprob: -3.5401134490966797
    3. '               ' → logprob: -5.16511344909668
    4. ':' → logprob: -6.04011344909668
    5. '                    
' → logprob: -7.04011344909668
    6. '):
' → logprob: -8.29011344909668
    7. '           ' → logprob: -8.29011344909668
    8. 'else' → logprob: -8.54011344909668
    9. '                       ' → logprob: -8.91511344909668
    10. '
' → logprob: -9.54011344909668

Token 1914: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' (adapté à ' waiting') → logprob: -0.09129329770803452
    2. ' waiting' → logprob: -2.8412933349609375
    3. '                   ' → logprob: -3.7162933349609375
    4. '               ' → logprob: -5.5912933349609375
    5. '   ' → logprob: -7.2162933349609375
    6. '                       ' → logprob: -10.466293334960938
    7. '           ' → logprob: -10.716293334960938
    8. '       ' → logprob: -11.091293334960938
    9. 'wait' → logprob: -11.216293334960938
    10. '```' → logprob: -11.591293334960938

Token 1915: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -10.875021934509277
    3. '.enqueue' → logprob: -13.500021934509277
    4. '.extend' → logprob: -14.500021934509277
    5. '.Append' → logprob: -15.125021934509277
    6. '.add' → logprob: -15.375021934509277
    7. '.app' → logprob: -15.875021934509277
    8. 'append' → logprob: -17.25002098083496
    9. '.put' → logprob: -17.37502098083496
    10. '_append' → logprob: -17.37502098083496

Token 1916: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.320199877838604e-07
    2. 'arr' → logprob: -15.0
    3. '(ar' → logprob: -18.5
    4. '[arr' → logprob: -18.75
    5. '((' → logprob: -20.125
    6. '	arr' → logprob: -20.75
    7. '<arr' → logprob: -21.125
    8. '(' → logprob: -21.375
    9. '(left' → logprob: -21.625
    10. '(
' → logprob: -22.0

Token 1917: 'iving' (ID: 2690)
  Prédit: 'iving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iving' → logprob: -0.00010902655776590109
    2. '_arr' → logprob: -10.12510871887207
    3. '(arr' → logprob: -10.12510871887207
    4. 'ving' → logprob: -10.75010871887207
    5. '(' → logprob: -13.37510871887207
    6. 'arr' → logprob: -13.37510871887207
    7. 'r' → logprob: -13.62510871887207
    8. 'iv' → logprob: -14.25010871887207
    9. 'ar' → logprob: -14.62510871887207
    10. '[' → logprob: -14.75010871887207

Token 1918: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0015577126760035753
    2. 'cars' → logprob: -6.50155782699585
    3. 'car' → logprob: -10.251557350158691
    4. '_car' → logprob: -11.501557350158691
    5. '_arr' → logprob: -12.501557350158691
    6. 'ars' → logprob: -13.376557350158691
    7. 'arr' → logprob: -13.376557350158691
    8. 'c' → logprob: -13.876557350158691
    9. 'ans' → logprob: -14.501557350158691
    10. 'a' → logprob: -15.251557350158691

Token 1919: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00024524700711481273
    2. 'ar' → logprob: -8.375245094299316
    3. '_c' → logprob: -12.375245094299316
    4. '_ar' → logprob: -12.750245094299316
    5. 'cars' → logprob: -13.000245094299316
    6. '_' → logprob: -13.250245094299316
    7. 'as' → logprob: -13.875245094299316
    8. '{' → logprob: -14.500245094299316
    9. '[' → logprob: -15.500245094299316
    10. 's' → logprob: -15.625245094299316

Token 1920: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00500651728361845
    2. ')
' → logprob: -5.380006313323975
    3. '               ' → logprob: -7.880006313323975
    4. '                   ' → logprob: -12.630006790161133
    5. ')
' → logprob: -14.255006790161133
    6. ')

' → logprob: -14.380006790161133
    7. '<|end|>' → logprob: -14.630006790161133
    8. '))' → logprob: -14.755006790161133
    9. ')return' → logprob: -14.755006790161133
    10. '           ' → logprob: -14.880006790161133

Token 1921: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015803283313289285
    2. '                   ' → logprob: -7.126580238342285
    3. '           ' → logprob: -7.251580238342285
    4. 'arr' → logprob: -10.126580238342285
    5. '```' → logprob: -11.876580238342285
    6. '       ' → logprob: -12.001580238342285
    7. '	           ' → logprob: -12.626580238342285
    8. '                
' → logprob: -12.751580238342285
    9. '
' → logprob: -13.126580238342285
    10. '   ' → logprob: -14.251580238342285

Token 1922: ' arriving' (ID: 53419)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018254129216074944
    2. 'arr' → logprob: -4.268254280090332
    3. '           ' → logprob: -5.518254280090332
    4. '       ' → logprob: -10.643254280090332
    5. '                   ' → logprob: -10.643254280090332
    6. '   ' → logprob: -11.518254280090332
    7. ' arriving' → logprob: -11.768254280090332
    8. '
' → logprob: -13.768254280090332
    9. 'arrival' → logprob: -14.268254280090332
    10. '                
' → logprob: -14.518254280090332

Token 1923: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.981667537620524e-06
    2. '_car' → logprob: -13.500001907348633
    3. 's' → logprob: -15.875001907348633
    4. '+=' → logprob: -16.000001907348633
    5. 'car' → logprob: -16.625001907348633
    6. 'cars' → logprob: -16.875001907348633
    7. '_' → logprob: -17.250001907348633
    8. 'c' → logprob: -17.500001907348633
    9. '+' → logprob: -17.625001907348633
    10. '=' → logprob: -17.875001907348633

Token 1924: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00020783171930816025
    2. 'cars' → logprob: -8.625207901000977
    3. 'ar' → logprob: -10.750207901000977
    4. '_c' → logprob: -12.000207901000977
    5. ' cars' → logprob: -15.500207901000977
    6. 'arsu' → logprob: -16.375207901000977
    7. '_' → logprob: -16.750207901000977
    8. '_car' → logprob: -16.750207901000977
    9. 'Cars' → logprob: -17.125207901000977
    10. '_ar' → logprob: -17.250207901000977

Token 1925: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032069424632936716
    2. ' +=' → logprob: -5.753206729888916
    3. '+' → logprob: -10.503207206726074
    4. ']+=' → logprob: -14.253207206726074
    5. '=' → logprob: -14.628207206726074
    6. '+='' → logprob: -15.003207206726074
    7. '+="' → logprob: -16.378206253051758
    8. '+=(' → logprob: -16.503206253051758
    9. '<|end|>' → logprob: -16.503206253051758
    10. '++' → logprob: -16.628206253051758

Token 1926: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '```' → logprob: -22.125
    4. '１' → logprob: -23.125
    5. '+' → logprob: -23.375
    6. 'user' → logprob: -24.25
    7. '=' → logprob: -24.375
    8. '   ' → logprob: -24.5
    9. '۱' → logprob: -24.625
    10. '0' → logprob: -24.75

Token 1927: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47255241870880127
    2. '<|end|>' → logprob: -1.7225524187088013
    3. 'if' → logprob: -1.8475524187088013
    4. '   ' → logprob: -3.5975522994995117
    5. '```' → logprob: -5.472552299499512
    6. 'main' → logprob: -5.597552299499512
    7. '    
' → logprob: -6.722552299499512
    8. '       ' → logprob: -7.472552299499512
    9. '<|end|>' → logprob: -7.472552299499512
    10. ' if' → logprob: -7.847552299499512

Token 1928: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5519277453422546
    2. '
' → logprob: -1.5519278049468994
    3. '<|end|>' → logprob: -1.9269278049468994
    4. '   ' → logprob: -3.3019278049468994
    5. 'main' → logprob: -4.05192756652832
    6. '```' → logprob: -5.55192756652832
    7. '    
' → logprob: -6.17692756652832
    8. ')' → logprob: -6.80192756652832
    9. 'return' → logprob: -6.92692756652832
    10. ' if' → logprob: -6.92692756652832

Token 1929: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1930: ' avoid' (ID: 8397)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.487293541431427
    2. 'pass' → logprob: -1.3622934818267822
    3. '           ' → logprob: -2.7372934818267822
    4. '#' → logprob: -3.6122934818267822
    5. 'continue' → logprob: -4.237293720245361
    6. '       ' → logprob: -4.737293720245361
    7. ' if' → logprob: -4.987293720245361
    8. '<|end|>' → logprob: -5.737293720245361
    9. ' pass' → logprob: -6.362293720245361
    10. '
' → logprob: -6.487293720245361

Token 1931: ' stuck' (ID: 24327)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.29801324009895325
    2. ' current' → logprob: -1.5480132102966309
    3. 'in' → logprob: -4.298013210296631
    4. 'index' → logprob: -4.673013210296631
    5. 'Index' → logprob: -4.673013210296631
    6. 'break' → logprob: -5.298013210296631
    7. 'overflow' → logprob: -5.923013210296631
    8. 'while' → logprob: -6.923013210296631
    9. 'Overflow' → logprob: -7.048013210296631
    10. ' infinite' → logprob: -7.048013210296631

Token 1932: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4412611424922943
    2. '           ' → logprob: -1.5662611722946167
    3. ' if' → logprob: -1.9412611722946167
    4. '       ' → logprob: -6.441261291503906
    5. '<|end|>' → logprob: -6.566261291503906
    6. '
' → logprob: -7.566261291503906
    7. '   ' → logprob: -8.691261291503906
    8. '    ' → logprob: -8.816261291503906
    9. '            
' → logprob: -8.941261291503906
    10. ' ' → logprob: -9.441261291503906

Token 1933: ' increment' (ID: 24032)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013858938589692116
    2. '           ' → logprob: -4.763858795166016
    3. ' if' → logprob: -5.263858795166016
    4. '       ' → logprob: -10.013858795166016
    5. '```' → logprob: -12.138858795166016
    6. 'current' → logprob: -13.013858795166016
    7. '#' → logprob: -13.513858795166016
    8. '   ' → logprob: -14.138858795166016
    9. 'while' → logprob: -15.138858795166016
    10. 'import' → logprob: -16.388858795166016

Token 1934: ' time' (ID: 1058)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011150632053613663
    2. ' current' → logprob: -4.51115083694458
    3. '(current' → logprob: -9.636150360107422
    4. '           ' → logprob: -10.886150360107422
    5. '   ' → logprob: -12.636150360107422
    6. '
' → logprob: -12.636150360107422
    7. 'time' → logprob: -12.886150360107422
    8. '```' → logprob: -12.886150360107422
    9. 'by' → logprob: -13.386150360107422
    10. '10' → logprob: -13.886150360107422

Token 1935: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.17557373642921448
    2. '           ' → logprob: -2.3005738258361816
    3. ' current' → logprob: -3.0505738258361816
    4. '
' → logprob: -4.425573825836182
    5. '   ' → logprob: -7.675573825836182
    6. '```' → logprob: -8.175573348999023
    7. '       ' → logprob: -8.300573348999023
    8. 'if' → logprob: -8.675573348999023
    9. ' if' → logprob: -9.050573348999023
    10. '            
' → logprob: -9.925573348999023

Token 1936: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6662949919700623
    2. 'arr' → logprob: -1.166295051574707
    3. 'len' → logprob: -2.791295051574707
    4. 'waiting' → logprob: -2.791295051574707
    5. 'current' → logprob: -3.541295051574707
    6. ' not' → logprob: -4.166295051574707
    7. ' arriving' → logprob: -6.166295051574707
    8. 'True' → logprob: -6.166295051574707
    9. ' current' → logprob: -6.916295051574707
    10. ' waiting' → logprob: -6.916295051574707

Token 1937: ' cars' (ID: 13653)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.11104368418455124
    2. 'arr' → logprob: -3.486043691635132
    3. ' waiting' → logprob: -3.486043691635132
    4. 'output' → logprob: -4.236043453216553
    5. 'cars' → logprob: -4.611043453216553
    6. 'car' → logprob: -5.611043453216553
    7. ' output' → logprob: -5.736043453216553
    8. ' arriving' → logprob: -5.736043453216553
    9. ' cars' → logprob: -6.111043453216553
    10. 'arrival' → logprob: -6.236043453216553

Token 1938: ' arriving' (ID: 53419)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7292174100875854
    2. '           ' → logprob: -1.1042174100875854
    3. ' +=' → logprob: -2.479217529296875
    4. '+=' → logprob: -3.354217529296875
    5. ' if' → logprob: -3.854217529296875
    6. '   ' → logprob: -4.854217529296875
    7. ' =' → logprob: -5.229217529296875
    8. 'if' → logprob: -5.229217529296875
    9. '=' → logprob: -5.604217529296875
    10. '       ' → logprob: -5.604217529296875

Token 1939: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2043900191783905
    2. '
' → logprob: -2.454390048980713
    3. 'else' → logprob: -2.954390048980713
    4. ' else' → logprob: -4.204390048980713
    5. ' and' → logprob: -5.454390048980713
    6. '   ' → logprob: -5.454390048980713
    7. '       ' → logprob: -5.829390048980713
    8. ' or' → logprob: -6.079390048980713
    9. ' if' → logprob: -6.079390048980713
    10. '               ' → logprob: -6.204390048980713

Token 1940: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03507005050778389
    2. '
' → logprob: -3.5350699424743652
    3. '       ' → logprob: -6.285069942474365
    4. 'else' → logprob: -6.410069942474365
    5. ' else' → logprob: -7.660069942474365
    6. '   ' → logprob: -7.910069942474365
    7. '<|end|>' → logprob: -8.285070419311523
    8. 'current' → logprob: -9.035070419311523
    9. '```' → logprob: -9.035070419311523
    10. '            
' → logprob: -9.160070419311523

Token 1941: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.46320030093193054
    2. 'if' (adapté à ' if') → logprob: -1.213200330734253
    3. ' current' → logprob: -3.713200330734253
    4. ' if' → logprob: -3.963200330734253
    5. '           ' → logprob: -4.088200092315674
    6. 'else' → logprob: -4.713200092315674
    7. 'elif' → logprob: -5.838200092315674
    8. '   ' → logprob: -7.338200092315674
    9. ' else' → logprob: -8.213200569152832
    10. '       ' → logprob: -8.463200569152832

Token 1942: ' arriving' (ID: 53419)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3661612570285797
    2. 'not' → logprob: -1.8661612272262573
    3. ' not' → logprob: -2.616161346435547
    4. ' arriving' → logprob: -2.991161346435547
    5. 'waiting' → logprob: -4.241161346435547
    6. 'len' → logprob: -4.991161346435547
    7. '(not' → logprob: -6.116161346435547
    8. ' waiting' → logprob: -6.116161346435547
    9. ' len' → logprob: -6.491161346435547
    10. 'current' → logprob: -7.491161346435547

Token 1943: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.304016228066757e-05
    2. 's' → logprob: -9.500082969665527
    3. 'cars' → logprob: -12.875082969665527
    4. ' <' → logprob: -13.375082969665527
    5. '<' → logprob: -13.750082969665527
    6. '_car' → logprob: -14.375082969665527
    7. '==' → logprob: -14.875082969665527
    8. '+' → logprob: -15.000082969665527
    9. '>=' → logprob: -15.125082969665527
    10. '_' → logprob: -15.125082969665527

Token 1944: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00021843716967850924
    2. 'ar' → logprob: -8.625218391418457
    3. '_' → logprob: -10.375218391418457
    4. '_ar' → logprob: -12.125218391418457
    5. '<' → logprob: -14.000218391418457
    6. '_c' → logprob: -15.875218391418457
    7. 'cars' → logprob: -16.000219345092773
    8. ' ars' → logprob: -16.125219345092773
    9. '_arr' → logprob: -16.250219345092773
    10. '   ' → logprob: -16.375219345092773

Token 1945: '>=' (ID: 20974)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.747241735458374
    2. '<' → logprob: -0.997241735458374
    3. ' <' → logprob: -1.872241735458374
    4. '<len' → logprob: -6.622241973876953
    5. '>=' → logprob: -7.372241973876953
    6. '<m' → logprob: -7.747241973876953
    7. '==' → logprob: -7.872241973876953
    8. ' >=' → logprob: -7.997241973876953
    9. ' ==' → logprob: -8.747241973876953
    10. '*' → logprob: -9.372241973876953

Token 1946: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.860340752406046e-05
    2. ' n' → logprob: -9.7500581741333
    3. '0' → logprob: -16.000059127807617
    4. '	n' → logprob: -16.500059127807617
    5. '<n' → logprob: -17.625059127807617
    6. 'len' → logprob: -17.750059127807617
    7. '           ' → logprob: -17.875059127807617
    8. '_n' → logprob: -18.125059127807617
    9. '       ' → logprob: -18.500059127807617
    10. '   ' → logprob: -18.625059127807617

Token 1947: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7855609059333801
    2. ' and' → logprob: -1.0355608463287354
    3. ' or' → logprob: -2.0355608463287354
    4. 'or' → logprob: -2.9105608463287354
    5. '           ' → logprob: -5.9105610847473145
    6. ':
' → logprob: -7.2855610847473145
    7. '   ' → logprob: -7.7855610847473145
    8. '       ' → logprob: -8.910560607910156
    9. '               ' → logprob: -10.160560607910156
    10. ':' → logprob: -10.285560607910156

Token 1948: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.49404388666152954
    2. 'all' → logprob: -1.3690438270568848
    3. 'len' → logprob: -2.8690438270568848
    4. 'waiting' → logprob: -3.2440438270568848
    5. ' not' → logprob: -3.8690438270568848
    6. 'any' → logprob: -4.244043827056885
    7. ' all' → logprob: -6.369043827056885
    8. '(not' → logprob: -6.494043827056885
    9. ' len' → logprob: -7.494043827056885
    10. 'output' → logprob: -8.494044303894043

Token 1949: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0021767891012132168
    2. 'any' → logprob: -6.252176761627197
    3. ' waiting' → logprob: -9.002177238464355
    4. 'output' → logprob: -9.752177238464355
    5. 'spots' → logprob: -10.252177238464355
    6. 'le' → logprob: -11.377177238464355
    7. '(wait' → logprob: -12.377177238464355
    8. '(any' → logprob: -12.627177238464355
    9. 'wait' → logprob: -12.752177238464355
    10. ' any' → logprob: -12.752177238464355

Token 1950: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6608396768569946
    2. ':
' → logprob: -1.1608396768569946
    3. 'and' → logprob: -2.160839557647705
    4. ' and' → logprob: -2.910839557647705
    5. ':return' → logprob: -8.535840034484863
    6. ' or' → logprob: -8.785840034484863
    7. 'or' → logprob: -8.910840034484863
    8. '           ' → logprob: -9.535840034484863
    9. '):
' → logprob: -10.035840034484863
    10. '       ' → logprob: -10.660840034484863

Token 1951: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3489031195640564
    2. '           ' → logprob: -1.3489031791687012
    3. 'current' → logprob: -4.098903179168701
    4. '   ' → logprob: -4.348903179168701
    5. 'break' → logprob: -6.348903179168701
    6. ' current' → logprob: -6.348903179168701
    7. '       ' → logprob: -6.348903179168701
    8. '                   ' → logprob: -9.473902702331543
    9. ' break' → logprob: -9.723902702331543
    10. '```' → logprob: -10.473902702331543

Token 1952: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5543383359909058
    2. 'break' → logprob: -1.1793383359909058
    3. '           ' → logprob: -2.4293384552001953
    4. 'current' → logprob: -4.679338455200195
    5. 'if' → logprob: -4.804338455200195
    6. '   ' → logprob: -5.054338455200195
    7. '       ' → logprob: -5.804338455200195
    8. ' break' → logprob: -5.929338455200195
    9. ' if' → logprob: -8.679338455200195
    10. ' current' → logprob: -9.429338455200195

Token 1953: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.532089114189148
    2. 'break' → logprob: -1.532089114189148
    3. '           ' → logprob: -2.1570892333984375
    4. '       ' → logprob: -3.1570892333984375
    5. '   ' → logprob: -3.7820892333984375
    6. 'if' → logprob: -4.2820892333984375
    7. ' break' → logprob: -6.7820892333984375
    8. ' if' → logprob: -8.157089233398438
    9. '                   ' → logprob: -8.782089233398438
    10. ' ' → logprob: -9.782089233398438

Token 1954: ' car' (ID: 1669)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.7638430595397949
    2. 'break' → logprob: -1.013843059539795
    3. 'more' → logprob: -2.263843059539795
    4. ' cars' → logprob: -3.763843059539795
    5. 'spots' → logprob: -4.013843059539795
    6. ' more' → logprob: -4.763843059539795
    7. 'car' → logprob: -4.888843059539795
    8. 'if' → logprob: -5.638843059539795
    9. ' spots' → logprob: -6.013843059539795
    10. ' break' → logprob: -7.388843059539795

Token 1955: ' waiting' (ID: 12028)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6479730010032654
    2. 'break' → logprob: -1.0229730606079102
    3. '   ' → logprob: -3.14797306060791
    4. '               ' → logprob: -3.39797306060791
    5. ':
' → logprob: -4.27297306060791
    6. '       ' → logprob: -4.52297306060791
    7. ' break' → logprob: -6.02297306060791
    8. ':' → logprob: -6.39797306060791
    9. 'else' → logprob: -6.77297306060791
    10. '                   ' → logprob: -6.89797306060791

Token 1956: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8295596837997437
    2. '               ' → logprob: -1.3295596837997437
    3. '           ' → logprob: -1.9545596837997437
    4. ' and' → logprob: -2.079559803009033
    5. 'break' → logprob: -4.454559803009033
    6. '                   ' → logprob: -4.704559803009033
    7. ':
' → logprob: -5.329559803009033
    8. '   ' → logprob: -5.454559803009033
    9. '       ' → logprob: -6.829559803009033
    10. 'if' → logprob: -7.954559803009033

Token 1957: ' arriving' (ID: 53419)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.30886581540107727
    2. 'spots' → logprob: -1.4338657855987549
    3. ' any' → logprob: -4.558866024017334
    4. 'parking' → logprob: -5.433866024017334
    5. ' spots' → logprob: -6.183866024017334
    6. '(any' → logprob: -6.183866024017334
    7. 'len' → logprob: -6.308866024017334
    8. 'all' → logprob: -6.558866024017334
    9. 'output' → logprob: -7.058866024017334
    10. '[' → logprob: -7.308866024017334

Token 1958: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7033201456069946
    2. '           ' → logprob: -0.9533201456069946
    3. 'break' → logprob: -2.703320026397705
    4. ':
' → logprob: -3.703320026397705
    5. '   ' → logprob: -4.328320026397705
    6. '                   ' → logprob: -5.453320026397705
    7. '       ' → logprob: -5.703320026397705
    8. ' break' → logprob: -5.828320026397705
    9. '
' → logprob: -6.703320026397705
    10. 'if' → logprob: -7.203320026397705

Token 1959: ' time' (ID: 1058)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27309274673461914
    2. 'break' → logprob: -1.8980927467346191
    3. '           ' → logprob: -2.648092746734619
    4. '   ' → logprob: -4.523092746734619
    5. ' break' → logprob: -5.148092746734619
    6. '       ' → logprob: -7.148092746734619
    7. '                   ' → logprob: -7.398092746734619
    8. 'if' → logprob: -9.148092269897461
    9. ' ' → logprob: -10.148092269897461
    10. '	break' → logprob: -10.398092269897461

Token 1960: ' step' (ID: 5983)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004119616060052067
    2. ' +=' → logprob: -8.125411987304688
    3. '=' → logprob: -9.375411987304688
    4. '   ' → logprob: -10.500411987304688
    5. '+' → logprob: -13.875411987304688
    6. ']+=' → logprob: -14.250411987304688
    7. 'break' → logprob: -14.500411987304688
    8. '           ' → logprob: -14.875411987304688
    9. '       ' → logprob: -15.000411987304688
    10. '+=(' → logprob: -16.000411987304688

Token 1961: ' by' (ID: 656)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.041859254240989685
    2. '           ' → logprob: -4.041859149932861
    3. '               ' → logprob: -4.166859149932861
    4. ' +=' → logprob: -5.791859149932861
    5. '=' → logprob: -6.166859149932861
    6. '   ' → logprob: -7.166859149932861
    7. '                   ' → logprob: -7.541859149932861
    8. '+' → logprob: -7.791859149932861
    9. '
' → logprob: -8.29185962677002
    10. '       ' → logprob: -8.54185962677002

Token 1962: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.747814349073451e-05
    2. '1' → logprob: -12.000017166137695
    3. ' ' → logprob: -12.750017166137695
    4. '```' → logprob: -12.750017166137695
    5. '
' → logprob: -13.125017166137695
    6. '   ' → logprob: -13.375017166137695
    7. '           ' → logprob: -13.875017166137695
    8. '+' → logprob: -15.000017166137695
    9. 'current' → logprob: -16.375017166137695
    10. 'ten' → logprob: -16.500017166137695

Token 1963: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -13.250007629394531
    3. '   ' → logprob: -13.625007629394531
    4. '1' → logprob: -13.625007629394531
    5. '```' → logprob: -13.750007629394531
    6. '+' → logprob: -14.000007629394531
    7. '
' → logprob: -14.875007629394531
    8. '           ' → logprob: -15.000007629394531
    9. '+=' → logprob: -15.375007629394531
    10. '       ' → logprob: -16.25000762939453

Token 1964: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09591633081436157
    2. '               ' → logprob: -2.970916271209717
    3. ':
' → logprob: -3.845916271209717
    4. '
' → logprob: -4.470916271209717
    5. 'current' → logprob: -6.345916271209717
    6. '+=' → logprob: -6.470916271209717
    7. ' +=' → logprob: -6.970916271209717
    8. ':' → logprob: -7.470916271209717
    9. '            
' → logprob: -7.720916271209717
    10. '                   ' → logprob: -7.845916271209717

Token 1965: ' exit' (ID: 10654)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.00276517868042
    2. 'break' → logprob: -1.25276517868042
    3. 'current' → logprob: -2.00276517868042
    4. 'continue' → logprob: -2.62776517868042
    5. 'find' → logprob: -3.75276517868042
    6. '10' → logprob: -4.12776517868042
    7. 'pass' → logprob: -4.12776517868042
    8. '1' → logprob: -4.50276517868042
    9. ' check' → logprob: -4.75276517868042
    10. 'next' → logprob: -4.87776517868042

Token 1966: ' leaving' (ID: 15021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3509584963321686
    2. '               ' → logprob: -1.3509584665298462
    3. 'break' → logprob: -3.8509585857391357
    4. 'current' → logprob: -5.225958347320557
    5. '                   ' → logprob: -5.725958347320557
    6. '
' → logprob: -6.100958347320557
    7. '   ' → logprob: -6.350958347320557
    8. ' break' → logprob: -6.600958347320557
    9. ' current' → logprob: -6.975958347320557
    10. '       ' → logprob: -7.600958347320557

Token 1967: ' loop' (ID: 11453)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.15541326999664307
    2. '           ' → logprob: -2.4054131507873535
    3. 'if' → logprob: -4.1554131507873535
    4. '
' → logprob: -4.5304131507873535
    5. ' current' → logprob: -5.1554131507873535
    6. 'time' → logprob: -5.7804131507873535
    7. '       ' → logprob: -6.0304131507873535
    8. 'break' → logprob: -6.2804131507873535
    9. 'while' → logprob: -6.2804131507873535
    10. ':
' → logprob: -6.4054131507873535

Token 1968: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2133125215768814
    2. '               ' → logprob: -1.9633125066757202
    3. '
' → logprob: -3.3383126258850098
    4. 'current' → logprob: -5.21331262588501
    5. '   ' → logprob: -5.46331262588501
    6. '       ' → logprob: -5.83831262588501
    7. ' current' → logprob: -6.58831262588501
    8. '                   ' → logprob: -7.21331262588501
    9. ':
' → logprob: -7.58831262588501
    10. '            
' → logprob: -8.338312149047852

Token 1969: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7088320255279541
    2. '           ' → logprob: -0.8338320255279541
    3. 'current' → logprob: -3.458832025527954
    4. '   ' → logprob: -3.583832025527954
    5. ' current' → logprob: -5.333831787109375
    6. '       ' → logprob: -5.333831787109375
    7. '                   ' → logprob: -6.208831787109375
    8. 'break' → logprob: -6.458831787109375
    9. '
' → logprob: -7.958831787109375
    10. ' break' → logprob: -8.708831787109375

Token 1970: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8360034823417664
    2. '               ' → logprob: -1.5860035419464111
    3. ' current' → logprob: -1.7110035419464111
    4. '           ' → logprob: -2.086003541946411
    5. 'break' → logprob: -3.336003541946411
    6. '   ' → logprob: -4.461003303527832
    7. ' break' → logprob: -4.836003303527832
    8. '       ' → logprob: -7.461003303527832
    9. 'if' → logprob: -7.461003303527832
    10. ' if' → logprob: -7.836003303527832

Token 1971: ' but' (ID: 889)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0837095975875854
    2. 'current' → logprob: -1.2087095975875854
    3. 'if' → logprob: -1.7087095975875854
    4. '           ' → logprob: -2.083709716796875
    5. '               ' → logprob: -3.333709716796875
    6. '   ' → logprob: -4.958709716796875
    7. ' if' → logprob: -5.208709716796875
    8. '       ' → logprob: -5.833709716796875
    9. ' break' → logprob: -5.833709716796875
    10. ' current' → logprob: -5.958709716796875

Token 1972: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3059392273426056
    2. 'current' → logprob: -2.180939197540283
    3. 'if' → logprob: -2.555939197540283
    4. '           ' → logprob: -4.055939197540283
    5. 'all' → logprob: -4.180939197540283
    6. '   ' → logprob: -4.305939197540283
    7. 'len' → logprob: -5.180939197540283
    8. ' break' → logprob: -5.305939197540283
    9. ' current' → logprob: -5.680939197540283
    10. ' if' → logprob: -6.180939197540283

Token 1973: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6354014873504639
    2. '           ' → logprob: -0.7604014873504639
    3. 'break' → logprob: -6.510401725769043
    4. '       ' → logprob: -7.510401725769043
    5. '                   ' → logprob: -7.885401725769043
    6. 'if' → logprob: -9.260401725769043
    7. '              ' → logprob: -9.635401725769043
    8. ' if' → logprob: -9.885401725769043
    9. '   ' → logprob: -10.010401725769043
    10. '          ' → logprob: -10.135401725769043

Token 1974: ' all' (ID: 722)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14992140233516693
    2. 'all' → logprob: -2.024921417236328
    3. ' len' → logprob: -5.899921417236328
    4. 'not' → logprob: -6.274921417236328
    5. ' all' → logprob: -6.774921417236328
    6. 'output' → logprob: -7.024921417236328
    7. 'current' → logprob: -8.899921417236328
    8. 'arr' → logprob: -9.274921417236328
    9. ' not' → logprob: -9.399921417236328
    10. '(len' → logprob: -9.399921417236328

Token 1975: ' cars' (ID: 13653)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01145320013165474
    2. ' len' → logprob: -4.761453151702881
    3. 'left' → logprob: -6.636453151702881
    4. 'car' → logprob: -7.511453151702881
    5. '(len' → logprob: -7.636453151702881
    6. 'output' → logprob: -8.511453628540039
    7. 'cars' → logprob: -8.636453628540039
    8. 'arr' → logprob: -10.386453628540039
    9. '[len' → logprob: -10.636453628540039
    10. 'all' → logprob: -11.136453628540039

Token 1976: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9153357148170471
    2. '==' → logprob: -1.9153356552124023
    3. 'in' → logprob: -2.2903356552124023
    4. 'if' → logprob: -2.6653356552124023
    5. 'left' → logprob: -2.9153356552124023
    6. 'len' → logprob: -2.9153356552124023
    7. '```' → logprob: -3.2903356552124023
    8. '       ' → logprob: -3.5403356552124023
    9. ' in' → logprob: -3.9153356552124023
    10. '               ' → logprob: -4.165335655212402

Token 1977: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09061454236507416
    2. '               ' → logprob: -2.4656145572662354
    3. '
' → logprob: -7.090614318847656
    4. '                   ' → logprob: -8.090614318847656
    5. '       ' → logprob: -8.340614318847656
    6. 'if' → logprob: -9.090614318847656
    7. ' if' → logprob: -9.340614318847656
    8. '   ' → logprob: -10.965614318847656
    9. '```' → logprob: -11.590614318847656
    10. ' and' → logprob: -11.715614318847656

Token 1978: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4807446599006653
    2. '               ' → logprob: -0.9807446599006653
    3. '   ' → logprob: -6.4807448387146
    4. 'if' → logprob: -6.4807448387146
    5. ' if' → logprob: -6.4807448387146
    6. '       ' → logprob: -7.4807448387146
    7. '
' → logprob: -7.7307448387146
    8. 'break' → logprob: -7.7307448387146
    9. '                   ' → logprob: -8.230744361877441
    10. '```' → logprob: -8.355744361877441

Token 1979: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20957936346530914
    2. 'if' (adapté à ' if') → logprob: -1.834579348564148
    3. '               ' → logprob: -3.9595794677734375
    4. ' if' → logprob: -5.0845794677734375
    5. 'break' → logprob: -5.9595794677734375
    6. '       ' → logprob: -7.2095794677734375
    7. '   ' → logprob: -7.3345794677734375
    8. '                   ' → logprob: -9.709579467773438
    9. '```' → logprob: -9.959579467773438
    10. ' break' → logprob: -10.584579467773438

Token 1980: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014740767888724804
    2. 'all' → logprob: -4.264740943908691
    3. ' len' → logprob: -7.514740943908691
    4. ' all' → logprob: -10.639740943908691
    5. '(len' → logprob: -12.514740943908691
    6. 'left' → logprob: -13.389740943908691
    7. 'set' → logprob: -13.514740943908691
    8. 'output' → logprob: -14.764740943908691
    9. '	len' → logprob: -15.139740943908691
    10. 'not' → logprob: -15.139740943908691

Token 1981: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0004882152716163546
    2. 'output' → logprob: -7.62548828125
    3. '(left' → logprob: -16.75048828125
    4. '(' → logprob: -17.12548828125
    5. '(input' → logprob: -17.37548828125
    6. '```' → logprob: -17.62548828125
    7. '(wait' → logprob: -17.75048828125
    8. ' output' → logprob: -17.87548828125
    9. '	output' → logprob: -18.37548828125
    10. '(outputs' → logprob: -18.50048828125

Token 1982: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020026495680212975
    2. ')==' → logprob: -4.145026683807373
    3. ' ==' → logprob: -6.895026683807373
    4. ']==' → logprob: -7.020026683807373
    5. '()==' → logprob: -7.145026683807373
    6. '>=' → logprob: -7.270026683807373
    7. ')' → logprob: -7.520026683807373
    8. ')>=' → logprob: -10.520026206970215
    9. '()' → logprob: -12.145026206970215
    10. '           ' → logprob: -12.395026206970215

Token 1983: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.049328383058309555
    2. ' ==' → logprob: -3.049328327178955
    3. '>=' → logprob: -7.924328327178955
    4. ')==' → logprob: -8.799328804016113
    5. '()==' → logprob: -8.924328804016113
    6. ')' → logprob: -10.674328804016113
    7. ']==' → logprob: -11.174328804016113
    8. '<len' → logprob: -11.174328804016113
    9. ' >=' → logprob: -11.799328804016113
    10. '<n' → logprob: -12.049328804016113

Token 1984: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -14.37500286102295
    3. ' n' → logprob: -14.37500286102295
    4. 'total' → logprob: -14.50000286102295
    5. 'len' → logprob: -14.87500286102295
    6. '
' → logprob: -15.50000286102295
    7. '```' → logprob: -15.75000286102295
    8. '       ' → logprob: -18.250001907348633
    9. '           ' → logprob: -18.375001907348633
    10. '	n' → logprob: -18.375001907348633

Token 1985: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03185243532061577
    2. '           ' → logprob: -3.6568524837493896
    3. '                   ' → logprob: -6.0318522453308105
    4. '               ' → logprob: -6.2818522453308105
    5. ':' → logprob: -6.7818522453308105
    6. '):
' → logprob: -9.406852722167969
    7. '():
' → logprob: -11.281852722167969
    8. '                       ' → logprob: -11.531852722167969
    9. '```' → logprob: -11.906852722167969
    10. '==' → logprob: -12.531852722167969

Token 1986: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0035892603918910027
    2. '           ' → logprob: -6.003589153289795
    3. '               ' → logprob: -7.003589153289795
    4. '                       ' → logprob: -8.753589630126953
    5. 'break' → logprob: -10.753589630126953
    6. '```' → logprob: -11.753589630126953
    7. '                  ' → logprob: -12.253589630126953
    8. '       ' → logprob: -12.503589630126953
    9. ':
' → logprob: -12.628589630126953
    10. '		           ' → logprob: -13.753589630126953

Token 1987: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.41460877656936646
    2. '               ' → logprob: -1.6646087169647217
    3. '                   ' → logprob: -2.6646087169647217
    4. '           ' → logprob: -2.9146087169647217
    5. '                       ' → logprob: -3.6646087169647217
    6. ' break' → logprob: -8.0396089553833
    7. '	break' → logprob: -8.9146089553833
    8. '```' → logprob: -9.0396089553833
    9. '		' → logprob: -10.2896089553833
    10. '                           ' → logprob: -11.0396089553833

Token 1988: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13442985713481903
    2. '           ' → logprob: -2.259429931640625
    3. '       ' → logprob: -4.884429931640625
    4. '<|end|>' → logprob: -5.134429931640625
    5. '   ' → logprob: -5.884429931640625
    6. '            
' → logprob: -6.634429931640625
    7. '
' → logprob: -7.134429931640625
    8. '    
' → logprob: -7.134429931640625
    9. '        
' → logprob: -7.634429931640625
    10. '		' → logprob: -7.759429931640625

Token 1989: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10475088655948639
    2. '           ' → logprob: -2.479750871658325
    3. '       ' → logprob: -4.979751110076904
    4. '   ' → logprob: -5.729751110076904
    5. '<|end|>' → logprob: -6.104751110076904
    6. '            
' → logprob: -7.229751110076904
    7. '
' → logprob: -7.479751110076904
    8. '    
' → logprob: -7.729751110076904
    9. 'current' → logprob: -7.854751110076904
    10. '        
' → logprob: -7.979751110076904

Token 1990: ' current' (ID: 2208)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9189829230308533
    2. 'current' (adapté à ' current') → logprob: -1.043982982635498
    3. '
' → logprob: -1.418982982635498
    4. '   ' → logprob: -5.668982982635498
    5. ' current' → logprob: -6.543982982635498
    6. 'else' → logprob: -7.418982982635498
    7. '```' → logprob: -7.543982982635498
    8. '       ' → logprob: -7.668982982635498
    9. '               ' → logprob: -8.66898250579834
    10. '            
' → logprob: -8.79398250579834

Token 1991: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.7432603272027336e-06
    2. '+=' → logprob: -13.625001907348633
    3. 'time' → logprob: -15.375001907348633
    4. '+' → logprob: -16.750001907348633
    5. ' +=' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '_' → logprob: -17.250001907348633
    8. 'Time' → logprob: -17.625001907348633
    9. '++' → logprob: -18.250001907348633
    10. '=' → logprob: -18.500001907348633

Token 1992: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019299437990412116
    2. ' +=' → logprob: -6.251929759979248
    3. '=' → logprob: -14.251930236816406
    4. '+' → logprob: -15.126930236816406
    5. ']+=' → logprob: -15.376930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '+="' → logprob: -17.626930236816406
    8. '+='' → logprob: -17.876930236816406
    9. '+=(' → logprob: -18.126930236816406
    10. '	' → logprob: -19.751930236816406

Token 1993: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '
' → logprob: -17.0
    5. '```' → logprob: -19.375
    6. '１０' → logprob: -19.75
    7. '۱۰' → logprob: -20.375
    8. '100' → logprob: -21.0
    9. '0' → logprob: -21.125
    10. '   ' → logprob: -21.625

Token 1994: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -16.25
    4. '```' → logprob: -18.875
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -19.75
    7. '１０' → logprob: -20.125
    8. '0' → logprob: -20.375
    9. '۱۰' → logprob: -20.375
    10. '100' → logprob: -21.0

Token 1995: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1996: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1997: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17799586057662964
    2. 'print' (adapté à ' print') → logprob: -2.4279959201812744
    3. 'return' → logprob: -3.0529959201812744
    4. 'if' → logprob: -4.677995681762695
    5. '```' → logprob: -4.677995681762695
    6. 'for' → logprob: -5.177995681762695
    7. '
' → logprob: -5.802995681762695
    8. '    
' → logprob: -8.552995681762695
    9. '       ' → logprob: -9.427995681762695
    10. '<|end|>' → logprob: -10.802995681762695

Token 1998: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6449692249298096
    2. '(*' → logprob: -1.1449692249298096
    3. '('\' → logprob: -2.1449692249298096
    4. '("' → logprob: -4.1449689865112305
    5. '()' → logprob: -4.5199689865112305
    6. '(len' → logprob: -5.3949689865112305
    7. '(output' → logprob: -5.8949689865112305
    8. '(' → logprob: -6.1449689865112305
    9. '()
' → logprob: -6.3949689865112305
    10. '("\' → logprob: -6.6449689865112305

Token 1999: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02044203318655491
    2. ''\' → logprob: -4.020442008972168
    3. '"' → logprob: -6.145442008972168
    4. '"\' → logprob: -9.145442008972168
    5. ' '' → logprob: -11.520442008972168
    6. '\n' → logprob: -11.645442008972168
    7. '('' → logprob: -11.770442008972168
    8. '
' → logprob: -12.645442008972168
    9. '('\' → logprob: -13.270442008972168
    10. '',' → logprob: -13.770442008972168

Token 2000: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.246537173457909e-06
    2. 'print' → logprob: -12.625003814697266
    3. ' join' → logprob: -15.125003814697266
    4. 'j' → logprob: -15.875003814697266
    5. ''.' → logprob: -16.250003814697266
    6. '.join' → logprob: -16.375003814697266
    7. ''' → logprob: -16.375003814697266
    8. 'jo' → logprob: -16.375003814697266
    9. '.' → logprob: -17.125003814697266
    10. '```' → logprob: -17.500003814697266

Token 2001: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006732899229973555
    2. '(str' → logprob: -5.006732940673828
    3. 'map' → logprob: -11.006732940673828
    4. '(list' → logprob: -14.756732940673828
    5. ' map' → logprob: -15.756732940673828
    6. '([' → logprob: -15.756732940673828
    7. '[str' → logprob: -16.631732940673828
    8. '	map' → logprob: -17.006732940673828
    9. 'str' → logprob: -17.131732940673828
    10. '(' → logprob: -18.006732940673828

Token 2002: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.005235887598246336
    2. 'str' → logprob: -5.25523567199707
    3. '```' → logprob: -13.50523567199707
    4. '=str' → logprob: -15.00523567199707
    5. '[str' → logprob: -15.63023567199707
    6. ')' → logprob: -16.75523567199707
    7. ' str' → logprob: -16.88023567199707
    8. '
' → logprob: -17.38023567199707
    9. ',str' → logprob: -17.63023567199707
    10. '(' → logprob: -17.75523567199707

Token 2003: ',' (ID: 11)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.05686286464333534
    2. ',' → logprob: -3.0568628311157227
    3. 'output' → logprob: -4.806862831115723
    4. '$output' → logprob: -10.681862831115723
    5. '	output' → logprob: -11.681862831115723
    6. 'Output' → logprob: -11.806862831115723
    7. '/output' → logprob: -11.806862831115723
    8. ' output' → logprob: -12.306862831115723
    9. '(outputs' → logprob: -12.431862831115723
    10. '   ' → logprob: -13.056862831115723

Token 2004: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.2664456789934775e-06
    2. ' output' → logprob: -14.000000953674316
    3. '(output' → logprob: -14.750000953674316
    4. '$output' → logprob: -21.500001907348633
    5. '	output' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.250001907348633
    7. '       ' → logprob: -22.250001907348633
    8. '
' → logprob: -22.375001907348633
    9. '.output' → logprob: -23.750001907348633
    10. '           ' → logprob: -24.000001907348633

Token 2005: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017362393555231392
    2. ')))' → logprob: -8.750173568725586
    3. '))
' → logprob: -11.750173568725586
    4. '()))' → logprob: -12.375173568725586
    5. ')' → logprob: -13.125173568725586
    6. '   ' → logprob: -14.750173568725586
    7. ' ))' → logprob: -15.375173568725586
    8. '       ' → logprob: -15.750173568725586
    9. '()' → logprob: -16.250173568725586
    10. ' ' → logprob: -17.375173568725586

Token 2006: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09095070511102676
    2. 'main' → logprob: -2.9659507274627686
    3. '<|end|>' → logprob: -3.7159507274627686
    4. '
' → logprob: -5.3409504890441895
    5. '```' → logprob: -5.4659504890441895
    6. ')' → logprob: -7.3409504890441895
    7. '(main' → logprob: -7.5909504890441895
    8. ' if' → logprob: -8.090950965881348
    9. '    
' → logprob: -8.965950965881348
    10. '   ' → logprob: -9.090950965881348

Token 2007: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.020559873431921005
    2. '__' → logprob: -3.895559787750244
    3. 'main' → logprob: -12.645560264587402
    4. ' main' → logprob: -12.770560264587402
    5. 'if' → logprob: -13.145560264587402
    6. ' ___' → logprob: -13.270560264587402
    7. '___' → logprob: -13.395560264587402
    8. ' _' → logprob: -13.520560264587402
    9. '_name' → logprob: -13.770560264587402
    10. '____' → logprob: -14.020560264587402

Token 2008: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.045870646834373474
    2. '==' → logprob: -3.795870542526245
    3. '__.__' → logprob: -4.170870780944824
    4. '__.' → logprob: -6.295870780944824
    5. ' ==' → logprob: -6.420870780944824
    6. '.' → logprob: -6.920870780944824
    7. '```' → logprob: -7.170870780944824
    8. '.__' → logprob: -7.670870780944824
    9. '=='' → logprob: -8.795870780944824
    10. '=="' → logprob: -8.920870780944824

Token 2009: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.613945101387799e-05
    2. '__.__' → logprob: -9.500085830688477
    3. '==' → logprob: -12.125085830688477
    4. '=="' → logprob: -13.500085830688477
    5. '__('' → logprob: -13.875085830688477
    6. '__.' → logprob: -14.250085830688477
    7. '__
' → logprob: -14.750085830688477
    8. '____' → logprob: -14.875085830688477
    9. '__":
' → logprob: -14.875085830688477
    10. '=='' → logprob: -15.000085830688477

Token 2010: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25801652669906616
    2. '==' → logprob: -1.633016586303711
    3. '=='' → logprob: -3.883016586303711
    4. ' ==' → logprob: -5.008016586303711
    5. '=="' → logprob: -5.383016586303711
    6. '__('' → logprob: -9.883016586303711
    7. '==='' → logprob: -9.883016586303711
    8. '===' → logprob: -10.508016586303711
    9. '```' → logprob: -10.633016586303711
    10. '__.__' → logprob: -11.008016586303711

Token 2011: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07891324907541275
    2. ''' → logprob: -2.5789132118225098
    3. '__' → logprob: -10.703913688659668
    4. ' "__' → logprob: -13.953913688659668
    5. ' '__' → logprob: -16.20391273498535
    6. ''"' → logprob: -17.82891273498535
    7. '"name' → logprob: -18.07891273498535
    8. '   ' → logprob: -18.45391273498535
    9. 'main' → logprob: -18.57891273498535
    10. '"user' → logprob: -18.82891273498535

Token 2012: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05615231767296791
    2. 'main' → logprob: -2.93115234375
    3. '"' → logprob: -6.93115234375
    4. ''' → logprob: -8.68115234375
    5. '___' → logprob: -9.80615234375
    6. '____' → logprob: -10.68115234375
    7. '__":
' → logprob: -10.93115234375
    8. 'name' → logprob: -11.55615234375
    9. '_main' → logprob: -12.68115234375
    10. '```' → logprob: -12.80615234375

Token 2013: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.010790063999593258
    2. '__' → logprob: -5.01078987121582
    3. '__':
' → logprob: -5.51078987121582
    4. '():
' → logprob: -11.88578987121582
    5. '__["' → logprob: -12.01078987121582
    6. '__.__' → logprob: -12.63578987121582
    7. '__:' → logprob: -13.26078987121582
    8. '__.' → logprob: -13.88578987121582
    9. '__()
' → logprob: -14.01078987121582
    10. '__);
' → logprob: -14.51078987121582

Token 2014: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007167373783886433
    2. '   ' → logprob: -5.757167339324951
    3. '	main' → logprob: -5.757167339324951
    4. ' main' → logprob: -7.132167339324951
    5. '_main' → logprob: -10.88216781616211
    6. 'Main' → logprob: -14.00716781616211
    7. '(main' → logprob: -14.13216781616211
    8. '.main' → logprob: -15.25716781616211
    9. 'mainwindow' → logprob: -15.25716781616211
    10. '	Main' → logprob: -15.25716781616211

Token 2015: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -17.25
    4. '_main' → logprob: -18.375
    5. '   ' → logprob: -19.5
    6. '(main' → logprob: -20.375
    7. '.main' → logprob: -20.875
    8. 'Main' → logprob: -22.125
    9. 'import' → logprob: -23.5
    10. '-main' → logprob: -23.875

Token 2016: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2014
Tokens correctement prédits (1ère position, stricte): 716
Tokens correctement prédits (1ère position, avec adaptation): 763
Tokens correctement prédits (top 10): 1415
Précision stricte (1ère position): 35.55%
Précision adaptée (1ère position): 37.88%
Précision (top 10): 70.26%
================================================================================
