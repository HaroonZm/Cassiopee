================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N, M = map(int, input().split())
A = list(map(int, input().split()))

intervals = [[] for _ in range(N+1)]
for _ in range(M):
    L, R = map(int, input().split())
    intervals[R].append(L)

dp = [0]*(N+1)
for i in range(1, N+1):
    dp[i] = dp[i-1] + A[i-1]
    for L in intervals[i]:
        dp[i] = max(dp[i], dp[L-1]+A[i-1])
print(dp[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.38394302129745483
    2. 't' → logprob: -2.5089430809020996
    3. '_' → logprob: -2.6339430809020996
    4. 'set' → logprob: -3.2589430809020996
    5. '_trace' → logprob: -3.2589430809020996
    6. 'x' → logprob: -3.8839430809020996
    7. 's' → logprob: -4.5089430809021
    8. 'default' → logprob: -5.0089430809021
    9. 'sys' → logprob: -5.2589430809021
    10. 'ex' → logprob: -5.5089430809021

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.25209373235702515
    2. '_limit' → logprob: -1.50209379196167
    3. '_depth' → logprob: -9.627093315124512
    4. 'lim' → logprob: -10.002093315124512
    5. ' limit' → logprob: -10.752093315124512
    6. 'depth' → logprob: -11.252093315124512
    7. '_lim' → logprob: -12.502093315124512
    8. '_' → logprob: -12.627093315124512
    9. 'Limit' → logprob: -13.502093315124512
    10. '(limit' → logprob: -13.752093315124512

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019331586081534624
    2. '9' → logprob: -6.5019330978393555
    3. '6' → logprob: -8.001933097839355
    4. '8' → logprob: -9.251933097839355
    5. ' ' → logprob: -16.501934051513672
    6. '```' → logprob: -17.001934051513672
    7. '(' → logprob: -18.376934051513672
    8. ')' → logprob: -19.501934051513672
    9. '``' → logprob: -20.126934051513672
    10. '0' → logprob: -20.876934051513672

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '))' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.250004768371582
    4. ')
' → logprob: -16.000003814697266
    5. ')))' → logprob: -18.125003814697266
    6. '```' → logprob: -18.125003814697266
    7. ')`' → logprob: -18.125003814697266
    8. '),' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '）' → logprob: -18.625003814697266

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44119781255722046
    2. '\' → logprob: -2.0661978721618652
    3. '\n' → logprob: -2.1911978721618652
    4. ')' → logprob: -3.6911978721618652
    5. '' → logprob: -3.8161978721618652
    6. '

' → logprob: -3.9411978721618652
    7. '
' → logprob: -3.9411978721618652
    8. '(' → logprob: -4.316197872161865
    9. '```' → logprob: -4.816197872161865
    10. '#' → logprob: -5.941197872161865

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054386552423238754
    2. '()' → logprob: -3.054386615753174
    3. '.' → logprob: -6.054386615753174
    4. ')' → logprob: -6.554386615753174
    5. '().' → logprob: -7.679386615753174
    6. '('' → logprob: -7.929386615753174
    7. '40' → logprob: -8.304386138916016
    8. '```' → logprob: -8.554386138916016
    9. '("("' → logprob: -8.929386138916016
    10. ''' → logprob: -9.429386138916016

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25511083006858826
    2. ' input' → logprob: -1.5051108598709106
    3. ' sys' → logprob: -6.505110740661621
    4. 'sys' → logprob: -6.505110740661621
    5. 'lambda' → logprob: -10.255110740661621
    6. '=input' → logprob: -10.630110740661621
    7. ' lambda' → logprob: -10.755110740661621
    8. '```' → logprob: -10.880110740661621
    9. 'open' → logprob: -11.130110740661621
    10. 'raw' → logprob: -11.380110740661621

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012211170047521591
    2. '.readline' → logprob: -5.012211322784424
    3. '.' → logprob: -5.387211322784424
    4. '.stdout' → logprob: -7.762211322784424
    5. ' .' → logprob: -8.762210845947266
    6. '.input' → logprob: -9.387210845947266
    7. '.std' → logprob: -9.637210845947266
    8. '.argv' → logprob: -9.762210845947266
    9. '.setdefault' → logprob: -10.762210845947266
    10. '.read' → logprob: -11.012210845947266

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006294329650700092
    2. '.read' → logprob: -5.506294250488281
    3. 'read' → logprob: -6.381294250488281
    4. '.' → logprob: -7.881294250488281
    5. '.Read' → logprob: -9.131294250488281
    6. 'buffer' → logprob: -11.256294250488281
    7. '.buffer' → logprob: -11.756294250488281
    8. 'Read' → logprob: -12.631294250488281
    9. '_read' → logprob: -12.756294250488281
    10. '.readlines' → logprob: -13.131294250488281

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06368431448936462
    2. '()
' → logprob: -3.5636842250823975
    3. '()

' → logprob: -4.063684463500977
    4. '(' → logprob: -4.438684463500977
    5. 'def' → logprob: -6.688684463500977
    6. '()\' → logprob: -6.688684463500977
    7. '(
' → logprob: -7.313684463500977
    8. '
' → logprob: -8.563684463500977
    9. 'for' → logprob: -8.688684463500977
    10. 'while' → logprob: -9.188684463500977

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20186437666416168
    2. 'n' → logprob: -1.7018643617630005
    3. 'N' → logprob: -8.076864242553711
    4. 'd' → logprob: -9.951864242553711
    5. 't' → logprob: -10.576864242553711
    6. 'class' → logprob: -11.076864242553711
    7. 'from' → logprob: -11.576864242553711
    8. '\' → logprob: -11.826864242553711
    9. '```' → logprob: -11.826864242553711
    10. 'a' → logprob: -11.951864242553711

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6140350699424744
    2. '=' → logprob: -1.2390351295471191
    3. ' ' → logprob: -2.239035129547119
    4. ')' → logprob: -3.739035129547119
    5. '<|end|>' → logprob: -3.739035129547119
    6. ',' → logprob: -4.614035129547119
    7. '>' → logprob: -6.989035129547119
    8. '[' → logprob: -7.114035129547119
    9. '.' → logprob: -7.864035129547119
    10. ' )' → logprob: -7.989035129547119

Token 21: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.28753751516342163
    2. ' K' → logprob: -2.2875375747680664
    3. ' ' → logprob: -2.5375375747680664
    4. 'M' → logprob: -2.7875375747680664
    5. 'K' → logprob: -5.037537574768066
    6. 'input' → logprob: -8.412537574768066
    7. 'space' → logprob: -8.912537574768066
    8. '=' → logprob: -9.037537574768066
    9. ' input' → logprob: -9.037537574768066
    10. ' space' → logprob: -9.287537574768066

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.089608334004879
    2. '=' → logprob: -2.4646084308624268
    3. ',' → logprob: -7.339608192443848
    4. ' ,' → logprob: -11.714608192443848
    5. '<|end|>' → logprob: -12.714608192443848
    6. ')' → logprob: -12.839608192443848
    7. '=input' → logprob: -13.214608192443848
    8. ' ' → logprob: -13.839608192443848
    9. '[' → logprob: -13.839608192443848
    10. ' =
' → logprob: -14.964608192443848

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06197284162044525
    2. 'map' → logprob: -2.8119728565216064
    3. 'input' → logprob: -12.936972618103027
    4. ' input' → logprob: -13.061972618103027
    5. ' ' → logprob: -15.436972618103027
    6. '	map' → logprob: -15.436972618103027
    7. ' list' → logprob: -16.311973571777344
    8. 'list' → logprob: -17.061973571777344
    9. '(map' → logprob: -17.186973571777344
    10. ' sys' → logprob: -18.436973571777344

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4431895613670349
    2. '(int' → logprob: -1.0681896209716797
    3. '(input' → logprob: -4.69318962097168
    4. '(str' → logprob: -5.56818962097168
    5. '(lambda' → logprob: -6.69318962097168
    6. '(list' → logprob: -9.81818962097168
    7. '(tuple' → logprob: -10.31818962097168
    8. '(len' → logprob: -11.06818962097168
    9. '(eval' → logprob: -11.44318962097168
    10. '(in' → logprob: -11.56818962097168

Token 25: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.7093456387519836
    2. ',' → logprob: -1.3343455791473389
    3. '(input' → logprob: -1.4593455791473389
    4. '(' → logprob: -4.584345817565918
    5. ')' → logprob: -6.709345817565918
    6. 'input' → logprob: -8.084345817565918
    7. '(sys' → logprob: -8.334345817565918
    8. ',int' → logprob: -9.209345817565918
    9. ' ,' → logprob: -10.334345817565918
    10. '=input' → logprob: -10.334345817565918

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141586661338806
    2. ' input' → logprob: -1.7014158964157104
    3. ')' → logprob: -14.201416015625
    4. ' ' → logprob: -14.326416015625
    5. ' sys' → logprob: -15.201416015625
    6. ',input' → logprob: -15.201416015625
    7. 'sys' → logprob: -15.326416015625
    8. '(input' → logprob: -15.576416015625
    9. '=input' → logprob: -16.326416015625
    10. 'str' → logprob: -16.326416015625

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018971405923366547
    2. '())' → logprob: -4.0189714431762695
    3. '()' → logprob: -7.1439714431762695
    4. ')' → logprob: -11.26897144317627
    5. '(' → logprob: -11.64397144317627
    6. '()))' → logprob: -12.14397144317627
    7. '());' → logprob: -14.39397144317627
    8. '()[' → logprob: -14.39397144317627
    9. '()),' → logprob: -14.51897144317627
    10. '('' → logprob: -14.64397144317627

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007145717274397612
    2. 'strip' → logprob: -5.007145881652832
    3. 'rstrip' → logprob: -7.757145881652832
    4. 'read' → logprob: -14.007145881652832
    5. '(split' → logprob: -14.132145881652832
    6. ' split' → logprob: -14.632145881652832
    7. ')' → logprob: -15.132145881652832
    8. '_split' → logprob: -15.757145881652832
    9. 'spl' → logprob: -16.632144927978516
    10. '().' → logprob: -17.507144927978516

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019448090461082757
    2. '())' → logprob: -9.125194549560547
    3. '))' → logprob: -10.250194549560547
    4. '()' → logprob: -10.250194549560547
    5. '(' → logprob: -12.250194549560547
    6. '`)' → logprob: -12.375194549560547
    7. ')`' → logprob: -13.375194549560547
    8. '),' → logprob: -14.125194549560547
    9. ' )' → logprob: -14.375194549560547
    10. '')' → logprob: -14.625194549560547

Token 30: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4358033835887909
    2. 'graph' → logprob: -2.4358034133911133
    3. ' 
' → logprob: -2.5608034133911133
    4. 'a' → logprob: -3.0608034133911133
    5. '\n' → logprob: -3.5608034133911133
    6. '
' → logprob: -3.9358034133911133
    7. 'd' → logprob: -4.060803413391113
    8. '' → logprob: -4.310803413391113
    9. '```' → logprob: -4.310803413391113
    10. '  
' → logprob: -5.060803413391113

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5415775179862976
    2. '[' → logprob: -1.0415775775909424
    3. '=' → logprob: -3.6665775775909424
    4. ',' → logprob: -4.041577339172363
    5. ' ' → logprob: -5.416577339172363
    6. '[]' → logprob: -5.541577339172363
    7. 's' → logprob: -5.541577339172363
    8. '_' → logprob: -5.791577339172363
    9. '[:]' → logprob: -6.041577339172363
    10. '.' → logprob: -6.416577339172363

Token 32: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5827475190162659
    2. ' list' → logprob: -0.8327475190162659
    3. '[list' → logprob: -6.082747459411621
    4. ' [' → logprob: -6.207747459411621
    5. '[' → logprob: -6.707747459411621
    6. ' []' → logprob: -7.082747459411621
    7. '[]' → logprob: -7.832747459411621
    8. '[int' → logprob: -11.082747459411621
    9. 'map' → logprob: -12.582747459411621
    10. ' ' → logprob: -12.957747459411621

Token 33: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00377833959646523
    2. '(int' → logprob: -6.128778457641602
    3. '(map' → logprob: -6.753778457641602
    4. '()' → logprob: -8.128778457641602
    5. '(range' → logprob: -9.878778457641602
    6. '(input' → logprob: -10.628778457641602
    7. '(

' → logprob: -11.878778457641602
    8. '(`' → logprob: -12.378778457641602
    9. '(eval' → logprob: -13.003778457641602
    10. '(data' → logprob: -13.128778457641602

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023714400827884674
    2. '(' → logprob: -3.773714303970337
    3. '(input' → logprob: -8.273714065551758
    4. '(str' → logprob: -9.398714065551758
    5. '(in' → logprob: -10.023714065551758
    6. '<int' → logprob: -10.273714065551758
    7. '[int' → logprob: -11.398714065551758
    8. '(lambda' → logprob: -11.523714065551758
    9. '(eval' → logprob: -12.523714065551758
    10. ']int' → logprob: -12.648714065551758

Token 35: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11536463350057602
    2. '(' → logprob: -2.2403645515441895
    3. ',input' → logprob: -6.4903645515441895
    4. '(int' → logprob: -7.6153645515441895
    5. ')' → logprob: -8.115365028381348
    6. ',' → logprob: -8.990365028381348
    7. ' (' → logprob: -10.990365028381348
    8. '(in' → logprob: -11.365365028381348
    9. '(INPUT' → logprob: -11.615365028381348
    10. 'input' → logprob: -11.740365028381348

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759466886520386
    2. 'input' → logprob: -0.8259466886520386
    3. '(input' → logprob: -11.950946807861328
    4. '	input' → logprob: -15.075946807861328
    5. ',input' → logprob: -15.450946807861328
    6. '=input' → logprob: -15.950946807861328
    7. ')' → logprob: -16.200946807861328
    8. '<input' → logprob: -17.075946807861328
    9. ' ' → logprob: -17.575946807861328
    10. '_input' → logprob: -17.950946807861328

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010958074126392603
    2. '()' → logprob: -6.876095771789551
    3. '(' → logprob: -10.62609577178955
    4. '())' → logprob: -10.75109577178955
    5. '()))' → logprob: -11.37609577178955
    6. ')' → logprob: -13.50109577178955
    7. '()));' → logprob: -13.75109577178955
    8. '.readline' → logprob: -14.37609577178955
    9. '()-' → logprob: -14.37609577178955
    10. ' ().' → logprob: -14.75109577178955

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.2762428822461516e-05
    2. 'strip' → logprob: -10.000052452087402
    3. 'read' → logprob: -12.750052452087402
    4. 'rstrip' → logprob: -12.750052452087402
    5. ' split' → logprob: -14.250052452087402
    6. ')' → logprob: -14.500052452087402
    7. '(split' → logprob: -15.250052452087402
    8. 'spl' → logprob: -15.875052452087402
    9. 'plit' → logprob: -18.75005340576172
    10. 's' → logprob: -19.12505340576172

Token 39: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4679286479949951
    2. ')' → logprob: -1.2179286479949951
    3. '()))' → logprob: -2.717928647994995
    4. '())' → logprob: -4.842928886413574
    5. '(' → logprob: -5.717928886413574
    6. '()' → logprob: -7.342928886413574
    7. ')))' → logprob: -11.592928886413574
    8. '),' → logprob: -11.842928886413574
    9. ' ))' → logprob: -13.092928886413574
    10. '()))
' → logprob: -13.342928886413574

Token 40: 'interval' (ID: 37558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48196035623550415
    2. 'a' → logprob: -2.3569602966308594
    3. '\' → logprob: -3.2319602966308594
    4. 'A' → logprob: -3.2319602966308594
    5. 'd' → logprob: -3.4819602966308594
    6. '' → logprob: -3.7319602966308594
    7. ' 
' → logprob: -3.7319602966308594
    8. 'for' → logprob: -3.8569602966308594
    9. 's' → logprob: -4.231960296630859
    10. '\n' → logprob: -4.356960296630859

Token 41: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28018248081207275
    2. '_' → logprob: -1.6551824808120728
    3. '_s' → logprob: -3.280182361602783
    4. '(' → logprob: -4.655182361602783
    5. '_sum' → logprob: -6.030182361602783
    6. '_size' → logprob: -7.030182361602783
    7. '_length' → logprob: -7.405182361602783
    8. ' =' → logprob: -7.530182361602783
    9. '_len' → logprob: -7.530182361602783
    10. '_count' → logprob: -7.655182361602783

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028266172856092453
    2. '=' → logprob: -3.778266191482544
    3. '_' → logprob: -6.153265953063965
    4. '[' → logprob: -6.528265953063965
    5. '=[]' → logprob: -7.028265953063965
    6. '[]' → logprob: -8.653265953063965
    7. '(' → logprob: -9.403265953063965
    8. '[:]' → logprob: -9.528265953063965
    9. ' =[' → logprob: -9.778265953063965
    10. ' ' → logprob: -10.153265953063965

Token 43: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002848386764526367
    2. ' []' → logprob: -6.2528486251831055
    3. '[' → logprob: -7.0028486251831055
    4. '[]}' → logprob: -12.502848625183105
    5. '[]
' → logprob: -13.502848625183105
    6. '[][]' → logprob: -13.627848625183105
    7. '[list' → logprob: -14.502848625183105
    8. '[int' → logprob: -14.502848625183105
    9. '[],' → logprob: -14.752848625183105
    10. 'list' → logprob: -14.877848625183105

Token 44: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008247175253927708
    2. '()' → logprob: -5.133247375488281
    3. '(' → logprob: -6.633247375488281
    4. 'for' → logprob: -7.133247375488281
    5. ']' → logprob: -9.008247375488281
    6. ' for' → logprob: -10.258247375488281
    7. '())' → logprob: -11.508247375488281
    8. ')]' → logprob: -11.508247375488281
    9. ',' → logprob: -12.008247375488281
    10. '])' → logprob: -12.258247375488281

Token 45: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02839573286473751
    2. ' range' → logprob: -3.778395652770996
    3. ' _' → logprob: -6.028395652770996
    4. 'range' → logprob: -6.278395652770996
    5. '(' → logprob: -8.153395652770996
    6. '(range' → logprob: -8.653395652770996
    7. '_range' → logprob: -8.903395652770996
    8. ' ' → logprob: -9.153395652770996
    9. ' i' → logprob: -9.278395652770996
    10. 'i' → logprob: -11.028395652770996

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029881594236940145
    2. 'in' → logprob: -6.002988338470459
    3. 'range' → logprob: -7.627988338470459
    4. ' ' → logprob: -11.2529878616333
    5. ' range' → logprob: -12.2529878616333
    6. '_' → logprob: -13.1279878616333
    7. '(range' → logprob: -13.5029878616333
    8. 'i' → logprob: -13.7529878616333
    9. ' _' → logprob: -14.1279878616333
    10. ' i' → logprob: -14.2529878616333

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868773579597473
    2. ' range' → logprob: -1.1368772983551025
    3. '(range' → logprob: -12.011877059936523
    4. '	range' → logprob: -15.636877059936523
    5. ' ' → logprob: -17.011877059936523
    6. ' xrange' → logprob: -17.636877059936523
    7. 'rang' → logprob: -17.886877059936523
    8. ')' → logprob: -18.636877059936523
    9. '.range' → logprob: -19.011877059936523
    10. 'A' → logprob: -19.136877059936523

Token 48: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2019309252500534
    2. '(M' → logprob: -1.7019308805465698
    3. '(' → logprob: -7.576930999755859
    4. '((' → logprob: -12.82693099975586
    5. '(n' → logprob: -14.07693099975586
    6. '(A' → logprob: -14.45193099975586
    7. '(K' → logprob: -15.45193099975586
    8. ')(' → logprob: -15.57693099975586
    9. ')' → logprob: -15.57693099975586
    10. '(D' → logprob: -15.82693099975586

Token 49: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020747410599142313
    2. '+' → logprob: -8.625207901000977
    3. ')' → logprob: -11.000207901000977
    4. ' )' → logprob: -12.375207901000977
    5. ']' → logprob: -13.000207901000977
    6. ')])' → logprob: -13.500207901000977
    7. ' +' → logprob: -14.250207901000977
    8. '])' → logprob: -14.500207901000977
    9. ')]
' → logprob: -14.875207901000977
    10. ')],' → logprob: -15.250207901000977

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010223194840364158
    2. '2' → logprob: -9.625102043151855
    3. ' ' → logprob: -10.250102043151855
    4. 'M' → logprob: -15.375102043151855
    5. '(' → logprob: -16.437602996826172
    6. '3' → logprob: -16.562602996826172
    7. '１' → logprob: -17.125102996826172
    8. '```' → logprob: -17.187602996826172
    9. '10' → logprob: -17.250102996826172
    10. '7' → logprob: -17.312602996826172

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6348540186882019
    2. ']' → logprob: -0.8848540186882019
    3. ')' → logprob: -2.8848540782928467
    4. '])' → logprob: -6.634853839874268
    5. ')])' → logprob: -11.384854316711426
    6. '])]' → logprob: -11.384854316711426
    7. ']
' → logprob: -12.384854316711426
    8. '）' → logprob: -13.259854316711426
    9. ' ]' → logprob: -13.384854316711426
    10. '`]' → logprob: -14.134854316711426

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14552821218967438
    2. ' for' → logprob: -2.1455283164978027
    3. '
' → logprob: -4.395528316497803
    4. ' 
' → logprob: -5.645528316497803
    5. '<|end|>' → logprob: -6.395528316497803
    6. '\n' → logprob: -7.645528316497803
    7. '  
' → logprob: -9.145527839660645
    8. ' ' → logprob: -9.645527839660645
    9. '```' → logprob: -9.645527839660645
    10. '' → logprob: -9.770527839660645

Token 53: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07311909645795822
    2. ' i' → logprob: -2.6981191635131836
    3. '_' → logprob: -5.823119163513184
    4. ' range' → logprob: -9.073119163513184
    5. ' ' → logprob: -9.323119163513184
    6. ' in' → logprob: -12.698119163513184
    7. '_i' → logprob: -13.073119163513184
    8. 'i' → logprob: -13.198119163513184
    9. ' ‌' → logprob: -13.323119163513184
    10. ' I' → logprob: -13.573119163513184

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10739235579967499
    2. 'in' → logprob: -2.3573923110961914
    3. ' ' → logprob: -4.982392311096191
    4. 'n' → logprob: -8.982392311096191
    5. ' i' → logprob: -9.482392311096191
    6. 'range' → logprob: -10.107392311096191
    7. 'i' → logprob: -10.232392311096191
    8. '  ' → logprob: -11.982392311096191
    9. ' n' → logprob: -12.607392311096191
    10. '	in' → logprob: -12.982392311096191

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.93710636976175e-05
    2. ' range' → logprob: -9.250099182128906
    3. 'ange' → logprob: -13.500099182128906
    4. '(range' → logprob: -13.625099182128906
    5. 'A' → logprob: -15.125099182128906
    6. ')' → logprob: -16.250099182128906
    7. '	range' → logprob: -16.375099182128906
    8. 'r' → logprob: -16.500099182128906
    9. 'rang' → logprob: -17.125099182128906
    10. 'ran' → logprob: -17.250099182128906

Token 56: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0010100651998072863
    2. '(' → logprob: -7.001009941101074
    3. ' (' → logprob: -9.251009941101074
    4. ' M' → logprob: -13.376009941101074
    5. 'M' → logprob: -14.251009941101074
    6. '(
' → logprob: -16.25101089477539
    7. '(m' → logprob: -16.25101089477539
    8. '(int' → logprob: -17.12601089477539
    9. '()' → logprob: -17.50101089477539
    10. '(N' → logprob: -17.50101089477539

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006643029628321528
    2. ' ):' → logprob: -8.125664710998535
    3. ')' → logprob: -8.375664710998535
    4. '):
' → logprob: -9.000664710998535
    5. ':' → logprob: -11.750664710998535
    6. ',' → logprob: -12.375664710998535
    7. '():' → logprob: -13.875664710998535
    8. ' )' → logprob: -14.750664710998535
    9. ']:' → logprob: -15.750664710998535
    10. ' ' → logprob: -16.00066375732422

Token 58: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3811068832874298
    2. ' l' → logprob: -1.8811068534851074
    3. 'u' → logprob: -2.8811068534851074
    4. ' a' → logprob: -3.6311068534851074
    5. ' s' → logprob: -3.7561068534851074
    6. ' start' → logprob: -3.7561068534851074
    7. 'a' → logprob: -4.006106853485107
    8. 'l' → logprob: -5.506106853485107
    9. 'start' → logprob: -6.006106853485107
    10. ' i' → logprob: -6.131106853485107

Token 59: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06164516508579254
    2. 'L' (adapté à ' L') → logprob: -2.936645269393921
    3. ' l' → logprob: -5.811645030975342
    4. 'a' → logprob: -6.936645030975342
    5. 's' → logprob: -7.061645030975342
    6. 'x' → logprob: -7.061645030975342
    7. ' L' → logprob: -7.561645030975342
    8. 'u' → logprob: -8.0616455078125
    9. '```' → logprob: -9.5616455078125
    10. 'i' → logprob: -10.3116455078125

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015280749648809433
    2. ' ,' → logprob: -6.501528263092041
    3. ',int' → logprob: -12.126527786254883
    4. ',M' → logprob: -12.126527786254883
    5. ',L' → logprob: -12.501527786254883
    6. ',K' → logprob: -12.751527786254883
    7. ',N' → logprob: -14.001527786254883
    8. '<|end|>' → logprob: -14.251527786254883
    9. ',T' → logprob: -14.376527786254883
    10. ' ' → logprob: -14.376527786254883

Token 61: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08894099295139313
    2. ' R' → logprob: -2.4639410972595215
    3. ' ' → logprob: -13.838940620422363
    4. 'r' → logprob: -15.588940620422363
    5. '<|end|>' → logprob: -15.838940620422363
    6. 'space' → logprob: -17.33894157409668
    7. 'S' → logprob: -17.46394157409668
    8. 's' → logprob: -17.46394157409668
    9. 'K' → logprob: -17.71394157409668
    10. 'D' → logprob: -17.96394157409668

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575975775718689
    2. ' =' → logprob: -0.825975775718689
    3. ',' → logprob: -10.32597541809082
    4. ' ' → logprob: -13.45097541809082
    5. '=int' → logprob: -14.20097541809082
    6. '=input' → logprob: -14.82597541809082
    7. ')' → logprob: -15.32597541809082
    8. '＝' → logprob: -15.45097541809082
    9. '=line' → logprob: -16.20097541809082
    10. ' ,' → logprob: -16.32597541809082

Token 63: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011048762127757072
    2. 'map' → logprob: -4.511048793792725
    3. '	map' → logprob: -14.761048316955566
    4. ' list' → logprob: -15.261048316955566
    5. '(map' → logprob: -16.136049270629883
    6. ' ' → logprob: -16.136049270629883
    7. ' input' → logprob: -17.136049270629883
    8. ',map' → logprob: -17.136049270629883
    9. ' mapa' → logprob: -17.386049270629883
    10. ' ' → logprob: -17.761049270629883

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004995359340682626
    2. '(' → logprob: -7.625499725341797
    3. '(in' → logprob: -12.750499725341797
    4. '(lambda' → logprob: -13.000499725341797
    5. '<int' → logprob: -13.250499725341797
    6. ' (' → logprob: -13.375499725341797
    7. '(input' → logprob: -13.750499725341797
    8. '(str' → logprob: -14.375499725341797
    9. '[int' → logprob: -14.500499725341797
    10. '=int' → logprob: -15.000499725341797

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35284680128097534
    2. '(input' → logprob: -1.4778468608856201
    3. '(' → logprob: -3.10284686088562
    4. ',input' → logprob: -3.72784686088562
    5. ')' → logprob: -9.3528470993042
    6. ' (' → logprob: -10.1028470993042
    7. '(int' → logprob: -10.7278470993042
    8. '=input' → logprob: -10.8528470993042
    9. ' ,' → logprob: -11.2278470993042
    10. '),' → logprob: -11.8528470993042

Token 66: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868720829486847
    2. 'input' → logprob: -1.1368720531463623
    3. 'int' → logprob: -14.636872291564941
    4. '(input' → logprob: -15.136872291564941
    5. '=input' → logprob: -16.011871337890625
    6. ',input' → logprob: -16.636871337890625
    7. '	input' → logprob: -16.886871337890625
    8. 'range' → logprob: -17.386871337890625
    9. ' ' → logprob: -17.511871337890625
    10. '<input' → logprob: -17.761871337890625

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002639582962729037
    2. '()' → logprob: -8.250264167785645
    3. '())' → logprob: -14.125264167785645
    4. ' ().' → logprob: -14.625264167785645
    5. ')' → logprob: -14.875264167785645
    6. '(' → logprob: -15.000264167785645
    7. '()-' → logprob: -15.250264167785645
    8. '()
' → logprob: -15.750264167785645
    9. '.' → logprob: -16.000263214111328
    10. '.split' → logprob: -16.750263214111328

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.125000953674316
    3. 'strip' → logprob: -15.625000953674316
    4. 'spl' → logprob: -16.75
    5. '(split' → logprob: -17.875
    6. 'rstrip' → logprob: -19.5
    7. 'plit' → logprob: -20.0
    8. 's' → logprob: -20.375
    9. ')' → logprob: -20.5
    10. '```' → logprob: -20.875

Token 69: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027592645958065987
    2. '())' → logprob: -4.152592658996582
    3. '()' → logprob: -4.527592658996582
    4. ')
' → logprob: -7.652592658996582
    5. '))' → logprob: -9.652592658996582
    6. '())
' → logprob: -9.777592658996582
    7. '   ' → logprob: -11.027592658996582
    8. ' )' → logprob: -11.277592658996582
    9. '(' → logprob: -11.527592658996582
    10. '()
' → logprob: -11.527592658996582

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2695308029651642
    2. ' intervals' → logprob: -1.6445307731628418
    3. '<|end|>' → logprob: -4.144530773162842
    4. 'interval' → logprob: -4.644530773162842
    5. '    
' → logprob: -5.644530773162842
    6. ' ' → logprob: -5.894530773162842
    7. ')' → logprob: -6.269530773162842
    8. '	
' → logprob: -6.644530773162842
    9. '
' → logprob: -6.644530773162842
    10. '    ' → logprob: -7.019530773162842

Token 71: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.11426050961017609
    2. 'interval' → logprob: -2.23926043510437
    3. '   ' → logprob: -7.364260673522949
    4. '
' → logprob: -7.864260673522949
    5. '(interval' → logprob: -8.73926067352295
    6. ' 
' → logprob: -9.73926067352295
    7. ' interval' → logprob: -9.73926067352295
    8. '```' → logprob: -10.36426067352295
    9. 'Intervals' → logprob: -10.73926067352295
    10. '<|end|>' → logprob: -10.86426067352295

Token 72: '[R' (ID: 115069)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0003715662460308522
    2. '[' → logprob: -8.000371932983398
    3. '[R' → logprob: -10.250371932983398
    4. ' [' → logprob: -15.375371932983398
    5. '[
' → logprob: -15.375371932983398
    6. '[A' → logprob: -16.3753719329834
    7. 'L' → logprob: -16.7503719329834
    8. '[l' → logprob: -16.8753719329834
    9. '[I' → logprob: -17.0003719329834
    10. '\[' → logprob: -17.3753719329834

Token 73: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6216177940368652
    2. '.append' → logprob: -1.1216177940368652
    3. ').' → logprob: -1.9966177940368652
    4. '.' → logprob: -7.246617794036865
    5. ')' → logprob: -8.371618270874023
    6. '.app' → logprob: -8.746618270874023
    7. ']' → logprob: -9.496618270874023
    8. ' ].' → logprob: -9.746618270874023
    9. '}.' → logprob: -10.246618270874023
    10. 'append' → logprob: -10.871618270874023

Token 74: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.000000953674316
    3. 'appen' → logprob: -15.250000953674316
    4. ' append' → logprob: -16.375
    5. '	append' → logprob: -18.75
    6. 'Append' → logprob: -19.125
    7. '_append' → logprob: -19.125
    8. 'app' → logprob: -20.375
    9. 'appe' → logprob: -20.5
    10. 'push' → logprob: -21.625

Token 75: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.6492811441421509
    2. '((' → logprob: -0.8992811441421509
    3. '(' → logprob: -2.6492810249328613
    4. '(A' → logprob: -11.64928150177002
    5. '([' → logprob: -13.14928150177002
    6. '(
' → logprob: -13.89928150177002
    7. '(`' → logprob: -14.02428150177002
    8. '(()' → logprob: -15.02428150177002
    9. '(i' → logprob: -15.27428150177002
    10. '(I' → logprob: -15.27428150177002

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ' )' → logprob: -11.250014305114746
    3. ')
' → logprob: -14.125014305114746
    4. '))' → logprob: -14.375014305114746
    5. ')`' → logprob: -16.000015258789062
    6. '`)' → logprob: -16.250015258789062
    7. '())' → logprob: -17.000015258789062
    8. '   ' → logprob: -17.250015258789062
    9. '()' → logprob: -17.750015258789062
    10. ')}' → logprob: -17.875015258789062

Token 77: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003240101272240281
    2. 'dist' → logprob: -7.00324010848999
    3. 'prefix' → logprob: -7.37824010848999
    4. ')' → logprob: -8.128239631652832
    5. ' dp' → logprob: -8.503239631652832
    6. '#' → logprob: -8.503239631652832
    7. 'visited' → logprob: -8.628239631652832
    8. 'DP' → logprob: -9.128239631652832
    9. 'd' → logprob: -9.253239631652832
    10. 'ans' → logprob: -9.378239631652832

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00035751116229221225
    2. '=' → logprob: -8.125357627868652
    3. '[' → logprob: -10.000357627868652
    4. ' ' → logprob: -11.375357627868652
    5. ' =[' → logprob: -13.500357627868652
    6. '_' → logprob: -13.750357627868652
    7. '.' → logprob: -14.875357627868652
    8. '[]' → logprob: -15.000357627868652
    9. '0' → logprob: -15.625357627868652
    10. '[:]' → logprob: -15.750357627868652

Token 79: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023536965250968933
    2. ' [' → logprob: -3.7735369205474854
    3. '[N' → logprob: -8.648536682128906
    4. '[int' → logprob: -9.898536682128906
    5. '[-' → logprob: -10.273536682128906
    6. '[n' → logprob: -12.023536682128906
    7. '[len' → logprob: -12.273536682128906
    8. '[i' → logprob: -12.398536682128906
    9. '[a' → logprob: -12.773536682128906
    10. '0' → logprob: -12.898536682128906

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018602113705128431
    2. 'float' → logprob: -6.87686014175415
    3. '-' → logprob: -8.376860618591309
    4. '[' → logprob: -8.751860618591309
    5. '10' → logprob: -8.876860618591309
    6. 'False' → logprob: -9.126860618591309
    7. '(' → logprob: -9.376860618591309
    8. ' ' → logprob: -10.126860618591309
    9. '1' → logprob: -10.876860618591309
    10. '(float' → logprob: -11.001860618591309

Token 81: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004951712675392628
    2. ']*(' → logprob: -5.379951477050781
    3. ' for' → logprob: -8.504951477050781
    4. 'for' → logprob: -10.004951477050781
    5. ']*' → logprob: -10.129951477050781
    6. ' ]' → logprob: -10.379951477050781
    7. ']+' → logprob: -11.754951477050781
    8. '(N' → logprob: -13.504951477050781
    9. ',' → logprob: -14.379951477050781
    10. ')' → logprob: -14.629951477050781

Token 82: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1279553291387856e-05
    2. ' N' → logprob: -11.750011444091797
    3. '(N' → logprob: -12.625011444091797
    4. 'n' → logprob: -17.750011444091797
    5. '   ' → logprob: -18.500011444091797
    6. ' ' → logprob: -18.750011444091797
    7. 'len' → logprob: -19.000011444091797
    8. '(' → logprob: -19.000011444091797
    9. '10' → logprob: -19.000011444091797
    10. '100' → logprob: -19.250011444091797

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1160349458805285e-05
    2. ' +' → logprob: -11.500011444091797
    3. '+
' → logprob: -14.125011444091797
    4. '1' → logprob: -16.125011444091797
    5. '+)' → logprob: -16.125011444091797
    6. '```' → logprob: -18.250011444091797
    7. '＋' → logprob: -18.375011444091797
    8. ')' → logprob: -18.625011444091797
    9. '+

' → logprob: -18.875011444091797
    10. '+[' → logprob: -19.875011444091797

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '2' → logprob: -10.875025749206543
    3. ' ' → logprob: -12.000025749206543
    4. '```' → logprob: -16.312524795532227
    5. ')' → logprob: -16.437524795532227
    6. '１' → logprob: -16.500024795532227
    7. '   ' → logprob: -17.500024795532227
    8. '۱' → logprob: -17.875024795532227
    9. '१' → logprob: -17.875024795532227
    10. '+' → logprob: -17.937524795532227

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020222914463374764
    2. ')
' → logprob: -8.625202178955078
    3. ' )' → logprob: -11.500202178955078
    4. ')

' → logprob: -12.125202178955078
    5. '+' → logprob: -12.625202178955078
    6. ')
' → logprob: -13.375202178955078
    7. '`)' → logprob: -14.875202178955078
    8. ')`' → logprob: -14.875202178955078
    9. '```' → logprob: -15.125202178955078
    10. '' → logprob: -15.625202178955078

Token 86: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16268634796142578
    2. ' for' → logprob: -1.9126863479614258
    3. '\n' → logprob: -6.787686347961426
    4. '```' → logprob: -7.412686347961426
    5. '
' → logprob: -7.912686347961426
    6. 'dp' → logprob: -8.662686347961426
    7. ' 
' → logprob: -9.537686347961426
    8. '' → logprob: -10.662686347961426
    9. '``' → logprob: -10.912686347961426
    10. '\' → logprob: -11.037686347961426

Token 87: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1260506510734558
    2. ' _' → logprob: -2.2510507106781006
    3. ' R' → logprob: -5.0010504722595215
    4. ' ' → logprob: -5.2510504722595215
    5. '_' → logprob: -7.3760504722595215
    6. ' r' → logprob: -8.12605094909668
    7. 'i' → logprob: -9.00105094909668
    8. ' range' → logprob: -9.75105094909668
    9. 'R' → logprob: -11.00105094909668
    10. ' in' → logprob: -11.75105094909668

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04351222142577171
    2. 'in' → logprob: -3.1685121059417725
    3. ' ' → logprob: -7.668512344360352
    4. '+' → logprob: -11.043512344360352
    5. '	in' → logprob: -11.168512344360352
    6. '1' → logprob: -12.418512344360352
    7. '  ' → logprob: -13.168512344360352
    8. 'range' → logprob: -13.418512344360352
    9. ' i' → logprob: -13.543512344360352
    10. ',' → logprob: -13.918512344360352

Token 89: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38689324259757996
    2. ' range' → logprob: -1.1368932723999023
    3. ' ' → logprob: -11.136893272399902
    4. '	range' → logprob: -13.011893272399902
    5. '(range' → logprob: -13.136893272399902
    6. ')' → logprob: -14.011893272399902
    7. '```' → logprob: -14.136893272399902
    8. '1' → logprob: -14.636893272399902
    9. '   ' → logprob: -14.886893272399902
    10. '  ' → logprob: -15.261893272399902

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.3954463510308415e-05
    2. ' (' → logprob: -10.750054359436035
    3. '1' → logprob: -11.250054359436035
    4. '(N' → logprob: -11.375054359436035
    5. ' ' → logprob: -12.125054359436035
    6. '(
' → logprob: -13.000054359436035
    7. '(i' → logprob: -16.62505340576172
    8. ')' → logprob: -16.87505340576172
    9. '(

' → logprob: -16.87505340576172
    10. '[' → logprob: -18.12505340576172

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009904148755595088
    2. 'N' → logprob: -7.500990390777588
    3. ' ' → logprob: -7.750990390777588
    4. ' N' → logprob: -12.125990867614746
    5. '   ' → logprob: -13.875990867614746
    6. '0' → logprob: -15.125990867614746
    7. '```' → logprob: -16.37598991394043
    8. '(' → logprob: -16.50098991394043
    9. ')' → logprob: -16.87598991394043
    10. '  ' → logprob: -17.25098991394043

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008036104962229729
    2. ' ,' → logprob: -4.883036136627197
    3. ',N' → logprob: -7.758036136627197
    4. ',
' → logprob: -14.383035659790039
    5. ' ' → logprob: -14.383035659790039
    6. ',n' → logprob: -15.008035659790039
    7. ',len' → logprob: -15.008035659790039
    8. '，' → logprob: -15.633035659790039
    9. '```' → logprob: -15.758035659790039
    10. ' ,
' → logprob: -16.13303565979004

Token 93: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804229199886322
    2. ' N' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.038042068481445
    4. ')' → logprob: -15.288042068481445
    5. '	N' → logprob: -16.038042068481445
    6. '   ' → logprob: -16.788042068481445
    7. 'n' → logprob: -16.788042068481445
    8. '(N' → logprob: -17.538042068481445
    9. ',N' → logprob: -18.163042068481445
    10. '>N' → logprob: -18.288042068481445

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023333763238042593
    2. ' +' → logprob: -8.37523365020752
    3. '+
' → logprob: -13.00023365020752
    4. '1' → logprob: -16.000232696533203
    5. ')+' → logprob: -16.000232696533203
    6. '()+' → logprob: -16.250232696533203
    7. '+)' → logprob: -16.500232696533203
    8. ')' → logprob: -17.125232696533203
    9. '```' → logprob: -17.125232696533203
    10. '+i' → logprob: -17.250232696533203

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004669710993766785
    2. '+' → logprob: -5.379669666290283
    3. ')' → logprob: -11.254670143127441
    4. ' ' → logprob: -11.254670143127441
    5. '```' → logprob: -11.254670143127441
    6. '2' → logprob: -12.504670143127441
    7. '):
' → logprob: -13.504670143127441
    8. ')+' → logprob: -13.754670143127441
    9. ' +' → logprob: -13.879670143127441
    10. '   ' → logprob: -13.879670143127441

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.131159245967865
    2. ':' → logprob: -2.1311593055725098
    3. ')' → logprob: -5.50615930557251
    4. '):
' → logprob: -9.256158828735352
    5. ' ):' → logprob: -10.381158828735352
    6. '+:' → logprob: -11.631158828735352
    7. '+' → logprob: -12.006158828735352
    8. ':)' → logprob: -12.256158828735352
    9. ']:' → logprob: -12.506158828735352
    10. ',' → logprob: -12.881158828735352

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23620791733264923
    2. ' dp' → logprob: -2.361207962036133
    3. '    ' → logprob: -3.486207962036133
    4. ' ' → logprob: -3.611207962036133
    5. 'dp' → logprob: -3.611207962036133
    6. '    
' → logprob: -4.111207962036133
    7. ' 
' → logprob: -4.861207962036133
    8. '	dp' → logprob: -5.861207962036133
    9. '     
' → logprob: -7.111207962036133
    10. '  ' → logprob: -7.486207962036133

Token 98: ' dp' (ID: 21546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4814487099647522
    2. ' dp' → logprob: -1.2314486503601074
    3. ' 
' → logprob: -2.8564486503601074
    4. 'dp' (adapté à ' dp') → logprob: -4.231448650360107
    5. '    ' → logprob: -4.856448650360107
    6. '   ' → logprob: -5.481448650360107
    7. ' if' → logprob: -5.856448650360107
    8. '     
' → logprob: -7.231448650360107
    9. '  ' → logprob: -7.731448650360107
    10. '    
' → logprob: -8.356449127197266

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004931025905534625
    2. '[' → logprob: -7.625493049621582
    3. '[I' → logprob: -13.125493049621582
    4. ' [' → logprob: -14.125493049621582
    5. '```' → logprob: -14.125493049621582
    6. '\[' → logprob: -14.625493049621582
    7. 'i' → logprob: -15.375493049621582
    8. '[
' → logprob: -15.875493049621582
    9. '[j' → logprob: -16.0004940032959
    10. '[max' → logprob: -16.3754940032959

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005646832752972841
    2. ')' → logprob: -5.630646705627441
    3. ' ]' → logprob: -6.505646705627441
    4. ']=' → logprob: -7.755646705627441
    5. '])' → logprob: -10.130646705627441
    6. ' )' → logprob: -10.255646705627441
    7. '=' → logprob: -10.755646705627441
    8. ' =' → logprob: -11.755646705627441
    9. ')]' → logprob: -12.255646705627441
    10. ')=' → logprob: -12.630646705627441

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806467354297638
    2. '=' → logprob: -3.28806471824646
    3. '=max' → logprob: -11.288064956665039
    4. ' +=' → logprob: -11.663064956665039
    5. '+=' → logprob: -14.413064956665039
    6. ' ' → logprob: -14.788064956665039
    7. ' ' → logprob: -15.413064956665039
    8. ' |=' → logprob: -15.413064956665039
    9. 'max' → logprob: -15.538064956665039
    10. ' =
' → logprob: -15.663064956665039

Token 102: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0619097538292408
    2. ' dp' → logprob: -3.5619096755981445
    3. 'max' → logprob: -3.6869096755981445
    4. ' max' → logprob: -5.0619096755981445
    5. '   ' → logprob: -8.811909675598145
    6. '(dp' → logprob: -9.936909675598145
    7. '	dp' → logprob: -10.686909675598145
    8. ' ' → logprob: -11.061909675598145
    9. '(' → logprob: -12.061909675598145
    10. ' (' → logprob: -12.311909675598145

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.875000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '[' → logprob: -15.625000953674316
    5. '[I' → logprob: -15.625000953674316
    6. '\[' → logprob: -17.25
    7. '[-' → logprob: -17.625
    8. ' [' → logprob: -17.875
    9. '[
' → logprob: -18.5
    10. '`' → logprob: -18.75

Token 104: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006726144813001156
    2. ' -' → logprob: -5.006726264953613
    3. '[i' → logprob: -12.006726264953613
    4. '[-' → logprob: -13.131726264953613
    5. ']' → logprob: -14.131726264953613
    6. '1' → logprob: -14.131726264953613
    7. '-
' → logprob: -14.256726264953613
    8. '-i' → logprob: -15.256726264953613
    9. 'i' → logprob: -16.381725311279297
    10. ' ' → logprob: -17.006725311279297

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.000024795532227
    3. ']' → logprob: -12.125024795532227
    4. '   ' → logprob: -14.250024795532227
    5. '<|end|>' → logprob: -14.312524795532227
    6. '```' → logprob: -14.500024795532227
    7. 'i' → logprob: -15.937524795532227
    8. ')' → logprob: -16.125024795532227
    9. '])' → logprob: -16.312524795532227
    10. '<|end|>' → logprob: -16.312524795532227

Token 106: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4795007109642029
    2. ']' → logprob: -1.7295007705688477
    3. ')' → logprob: -1.8545007705688477
    4. ']+' → logprob: -3.3545007705688477
    5. ' +' → logprob: -4.854500770568848
    6. ')+' → logprob: -6.229500770568848
    7. '])' → logprob: -7.104500770568848
    8. ' ]' → logprob: -7.354500770568848
    9. ' )' → logprob: -7.854500770568848
    10. '<|end|>' → logprob: -9.354500770568848

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17301853001117706
    2. '
' → logprob: -1.9230185747146606
    3. ' +' → logprob: -5.548018455505371
    4. '+
' → logprob: -5.923018455505371
    5. 'for' → logprob: -6.298018455505371
    6. '<|end|>' → logprob: -6.423018455505371
    7. ' ' → logprob: -7.173018455505371
    8. '' → logprob: -7.423018455505371
    9. ' for' → logprob: -7.673018455505371
    10. ' 
' → logprob: -9.048018455505371

Token 108: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08018616586923599
    2. ' A' → logprob: -2.580186128616333
    3. '1' → logprob: -6.830186367034912
    4. '(A' → logprob: -9.205185890197754
    5. ' ' → logprob: -9.830185890197754
    6. ' (' → logprob: -11.205185890197754
    7. '(' → logprob: -11.205185890197754
    8. 'i' → logprob: -11.830185890197754
    9. '0' → logprob: -11.955185890197754
    10. '	A' → logprob: -12.205185890197754

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. 'i' → logprob: -18.625001907348633
    4. '[
' → logprob: -18.625001907348633
    5. ' [' → logprob: -19.125001907348633
    6. '[I' → logprob: -19.375001907348633
    7. '```' → logprob: -20.000001907348633
    8. '\[' → logprob: -21.250001907348633
    9. '[-' → logprob: -21.375001907348633
    10. '[index' → logprob: -22.000001907348633

Token 110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.93710636976175e-05
    2. '[i' → logprob: -9.250099182128906
    3. ' -' → logprob: -13.000099182128906
    4. '-i' → logprob: -14.875099182128906
    5. '[-' → logprob: -15.375099182128906
    6. '[' → logprob: -16.500099182128906
    7. '1' → logprob: -16.625099182128906
    8. ']' → logprob: -17.250099182128906
    9. '−' → logprob: -17.500099182128906
    10. 'i' → logprob: -17.750099182128906

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. ']' → logprob: -16.375
    4. '<|end|>' → logprob: -17.125
    5. '   ' → logprob: -17.5
    6. '１' → logprob: -17.75
    7. '```' → logprob: -18.0
    8. '2' → logprob: -18.5
    9. '१' → logprob: -19.375
    10. '۱' → logprob: -19.4375

Token 112: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022129806166049093
    2. ' )' → logprob: -8.625221252441406
    3. ']' → logprob: -10.375221252441406
    4. ')
' → logprob: -12.000221252441406
    5. '   ' → logprob: -13.500221252441406
    6. ' ' → logprob: -14.500221252441406
    7. ')]' → logprob: -14.500221252441406
    8. '）' → logprob: -15.125221252441406
    9. '}' → logprob: -15.250221252441406
    10. '])' → logprob: -15.375221252441406

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2964727282524109
    2. ' for' → logprob: -1.9214727878570557
    3. 'for' → logprob: -2.7964727878570557
    4. '<|end|>' → logprob: -3.7964727878570557
    5. '	for' → logprob: -4.296472549438477
    6. ' ' → logprob: -5.546472549438477
    7. '    
' → logprob: -5.796472549438477
    8. '
' → logprob: -5.921472549438477
    9. '  ' → logprob: -6.921472549438477
    10. '  
' → logprob: -7.046472549438477

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9202611446380615
    2. 'for' (adapté à ' for') → logprob: -0.9202611446380615
    3. '   ' → logprob: -1.6702611446380615
    4. '
' → logprob: -4.670261383056641
    5. '    
' → logprob: -5.295261383056641
    6. '	for' → logprob: -8.29526138305664
    7. ' 
' → logprob: -8.92026138305664
    8. ' ' → logprob: -9.17026138305664
    9. '  
' → logprob: -10.17026138305664
    10. '  ' → logprob: -10.79526138305664

Token 115: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.16547712683677673
    2. 'L' → logprob: -1.9154771566390991
    3. ' l' → logprob: -5.540477275848389
    4. 'l' → logprob: -7.165477275848389
    5. ' j' → logprob: -8.04047679901123
    6. ' ' → logprob: -9.04047679901123
    7. 'j' → logprob: -10.04047679901123
    8. ' start' → logprob: -11.54047679901123
    9. ' x' → logprob: -11.54047679901123
    10. '   ' → logprob: -12.16547679901123

Token 116: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602371335029602
    2. ' in' → logprob: -1.9102370738983154
    3. ' ' → logprob: -12.035237312316895
    4. ')' → logprob: -12.535237312316895
    5. '	in' → logprob: -12.910237312316895
    6. ',' → logprob: -14.660237312316895
    7. '_in' → logprob: -16.410236358642578
    8. '  ' → logprob: -16.660236358642578
    9. '```' → logprob: -16.785236358642578
    10. ',in' → logprob: -17.035236358642578

Token 117: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.20201624929904938
    2. ' intervals' → logprob: -1.7020162343978882
    3. '(interval' → logprob: -7.452016353607178
    4. ' interval' → logprob: -10.70201587677002
    5. 'Intervals' → logprob: -18.077016830444336
    6. ' ' → logprob: -19.327016830444336
    7. ' (' → logprob: -19.952016830444336
    8. ')' → logprob: -19.952016830444336
    9. 'ranges' → logprob: -19.952016830444336
    10. ' intervalo' → logprob: -20.077016830444336

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20251543819904327
    2. '[R' → logprob: -1.7025154829025269
    3. '[' → logprob: -6.827515602111816
    4. ' [' → logprob: -11.702515602111816
    5. '[I' → logprob: -11.952515602111816
    6. '[L' → logprob: -14.202515602111816
    7. '   ' → logprob: -14.577515602111816
    8. '[r' → logprob: -14.577515602111816
    9. 'R' → logprob: -14.702515602111816
    10. '```' → logprob: -15.577515602111816

Token 119: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12293361872434616
    2. ']:' → logprob: -2.2479336261749268
    3. '):
' → logprob: -5.247933387756348
    4. ':' → logprob: -5.622933387756348
    5. ']):' → logprob: -7.497933387756348
    6. '   ' → logprob: -8.372933387756348
    7. ']' → logprob: -8.872933387756348
    8. ']:
' → logprob: -9.372933387756348
    9. ')' → logprob: -9.747933387756348
    10. ' ):' → logprob: -10.122933387756348

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0321413017809391
    2. 'dp' → logprob: -4.407141208648682
    3. '        
' → logprob: -4.532141208648682
    4. '   ' → logprob: -5.782141208648682
    5. '
' → logprob: -6.657141208648682
    6. '    
' → logprob: -6.657141208648682
    7. '```' → logprob: -6.782141208648682
    8. ' dp' → logprob: -7.157141208648682
    9. '    ' → logprob: -7.782141208648682
    10. '	dp' → logprob: -8.28214168548584

Token 121: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03473205491900444
    2. ' dp' → logprob: -3.7847321033477783
    3. '   ' → logprob: -4.534731864929199
    4. '	dp' → logprob: -8.0347318649292
    5. '
' → logprob: -8.4097318649292
    6. '       ' → logprob: -9.5347318649292
    7. 'if' → logprob: -11.0347318649292
    8. '           ' → logprob: -11.4097318649292
    9. '```' → logprob: -12.2847318649292
    10. '(dp' → logprob: -12.4097318649292

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015288250870071352
    2. '[L' → logprob: -9.250152587890625
    3. '[' → logprob: -9.875152587890625
    4. 'i' → logprob: -13.750152587890625
    5. '[I' → logprob: -14.000152587890625
    6. ']' → logprob: -14.125152587890625
    7. '[j' → logprob: -14.125152587890625
    8. '[max' → logprob: -14.625152587890625
    9. '[R' → logprob: -15.125152587890625
    10. '[int' → logprob: -15.875152587890625

Token 123: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005069229518994689
    2. ' ]' → logprob: -8.125507354736328
    3. ']=' → logprob: -8.500507354736328
    4. ')' → logprob: -13.000507354736328
    5. '[' → logprob: -13.250507354736328
    6. ' =' → logprob: -13.750507354736328
    7. '=' → logprob: -14.250507354736328
    8. 'max' → logprob: -14.875507354736328
    9. '=max' → logprob: -15.625507354736328
    10. '-' → logprob: -16.125507354736328

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25322532653808594
    2. '=' → logprob: -1.503225326538086
    3. '=max' → logprob: -6.878225326538086
    4. 'max' → logprob: -8.253225326538086
    5. '>' → logprob: -13.503225326538086
    6. ' max' → logprob: -14.003225326538086
    7. ']' → logprob: -14.503225326538086
    8. ')' → logprob: -14.503225326538086
    9. ',' → logprob: -15.753225326538086
    10. ',max' → logprob: -16.003225326538086

Token 125: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132823705673218
    2. 'max' → logprob: -1.3132823705673218
    3. ' min' → logprob: -11.188282012939453
    4. 'min' → logprob: -12.063282012939453
    5. '	max' → logprob: -13.938282012939453
    6. '   ' → logprob: -16.563282012939453
    7. '_max' → logprob: -17.563282012939453
    8. '=max' → logprob: -18.188282012939453
    9. '(max' → logprob: -18.313282012939453
    10. '[max' → logprob: -18.688282012939453

Token 126: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. 'dp' → logprob: -16.750431060791016
    4. '(
' → logprob: -16.750431060791016
    5. '	dp' → logprob: -18.250431060791016
    6. '(d' → logprob: -18.625431060791016
    7. '(df' → logprob: -18.750431060791016
    8. ' (' → logprob: -19.125431060791016
    9. '(

' → logprob: -19.375431060791016
    10. ' dp' → logprob: -19.750431060791016

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. '[L' → logprob: -11.62501335144043
    3. ',i' → logprob: -13.25001335144043
    4. '[' → logprob: -14.00001335144043
    5. ',' → logprob: -14.75001335144043
    6. '[j' → logprob: -15.50001335144043
    7. 'i' → logprob: -15.62501335144043
    8. ')' → logprob: -16.00001335144043
    9. '[
' → logprob: -16.25001335144043
    10. '[I' → logprob: -16.62501335144043

Token 128: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0025839817244559526
    2. '[i' → logprob: -6.627583980560303
    3. ']' → logprob: -6.877583980560303
    4. '],
' → logprob: -9.252584457397461
    5. ',' → logprob: -10.127584457397461
    6. 'i' → logprob: -10.252584457397461
    7. ',i' → logprob: -11.127584457397461
    8. '[L' → logprob: -11.502584457397461
    9. ' ],' → logprob: -11.752584457397461
    10. '],[' → logprob: -12.002584457397461

Token 129: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12711749970912933
    2. ' dp' → logprob: -2.127117395401001
    3. '	dp' → logprob: -8.877117156982422
    4. '           ' → logprob: -11.127117156982422
    5. '(dp' → logprob: -11.502117156982422
    6. '   ' → logprob: -11.627117156982422
    7. '
' → logprob: -12.252117156982422
    8. '       ' → logprob: -12.377117156982422
    9. ' ' → logprob: -13.752117156982422
    10. ')' → logprob: -13.752117156982422

Token 130: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -2.8802491215174086e-05
    2. 'L' → logprob: -10.625028610229492
    3. '[' → logprob: -13.125028610229492
    4. '[i' → logprob: -13.750028610229492
    5. '(L' → logprob: -15.125028610229492
    6. '[l' → logprob: -15.125028610229492
    7. ' L' → logprob: -15.375028610229492
    8. '```' → logprob: -15.750028610229492
    9. '[
' → logprob: -15.875028610229492
    10. '	L' → logprob: -16.500028610229492

Token 131: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0047228685580194
    2. ' -' → logprob: -6.129723072052002
    3. '])' → logprob: -6.129723072052002
    4. ']' → logprob: -8.004722595214844
    5. ']+' → logprob: -12.254722595214844
    6. '0' → logprob: -12.379722595214844
    7. '[' → logprob: -12.504722595214844
    8. '1' → logprob: -13.004722595214844
    9. ')' → logprob: -13.004722595214844
    10. '])+' → logprob: -13.379722595214844

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -11.625020980834961
    3. ')' → logprob: -12.250020980834961
    4. '])' → logprob: -12.625020980834961
    5. ']' → logprob: -13.625020980834961
    6. '   ' → logprob: -14.312520980834961
    7. '2' → logprob: -14.437520980834961
    8. '-' → logprob: -15.312520980834961
    9. '<|end|>' → logprob: -15.312520980834961
    10. '```' → logprob: -15.500020980834961

Token 133: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3983904719352722
    2. '])' → logprob: -1.273390531539917
    3. ']+' → logprob: -3.273390531539917
    4. ')' → logprob: -4.648390293121338
    5. ' ])' → logprob: -7.898390293121338
    6. '+' → logprob: -8.273390769958496
    7. ' ]' → logprob: -8.273390769958496
    8. ')+' → logprob: -9.023390769958496
    9. ' )' → logprob: -9.523390769958496
    10. '))' → logprob: -10.273390769958496

Token 134: 'A' (ID: 32)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12610383331775665
    2. 'sum' → logprob: -2.3761038780212402
    3. ' dp' → logprob: -4.00110387802124
    4. ' sum' → logprob: -5.37610387802124
    5. 'max' → logprob: -7.00110387802124
    6. '(dp' → logprob: -7.25110387802124
    7. ' (' → logprob: -8.251103401184082
    8. ' ' → logprob: -8.751103401184082
    9. '(sum' → logprob: -9.126103401184082
    10. 'A' → logprob: -9.251103401184082

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007312587113119662
    2. 'i' → logprob: -7.625731468200684
    3. '[L' → logprob: -8.750731468200684
    4. '[' → logprob: -9.750731468200684
    5. '[R' → logprob: -11.750731468200684
    6. 'sum' → logprob: -12.000731468200684
    7. ' i' → logprob: -12.625731468200684
    8. '```' → logprob: -13.500731468200684
    9. '[j' → logprob: -13.875731468200684
    10. '[I' → logprob: -14.125731468200684

Token 136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010057775070890784
    2. ' -' → logprob: -7.50100564956665
    3. '[i' → logprob: -7.75100564956665
    4. '```' → logprob: -11.876006126403809
    5. '[-' → logprob: -12.876006126403809
    6. ']-' → logprob: -13.001006126403809
    7. 'i' → logprob: -13.501006126403809
    8. '[' → logprob: -13.501006126403809
    9. '-i' → logprob: -13.501006126403809
    10. '1' → logprob: -13.876006126403809

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.25
    4. '１' → logprob: -19.25
    5. '[i' → logprob: -19.5
    6. '2' → logprob: -19.5
    7. '
' → logprob: -19.875
    8. '[' → logprob: -19.9375
    9. '-' → logprob: -20.25
    10. '۱' → logprob: -20.375

Token 138: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005411623045802116
    2. ' )' → logprob: -5.505411624908447
    3. '])' → logprob: -6.755411624908447
    4. ')
' → logprob: -9.380411148071289
    5. '[i' → logprob: -10.255411148071289
    6. '))' → logprob: -11.505411148071289
    7. ']' → logprob: -11.880411148071289
    8. '[' → logprob: -12.630411148071289
    9. ' ])' → logprob: -12.880411148071289
    10. '[])' → logprob: -13.255411148071289

Token 139: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2281625121831894
    2. '\n' → logprob: -1.9781625270843506
    3. '<|end|>' → logprob: -3.2281625270843506
    4. '```' → logprob: -4.3531622886657715
    5. ')' → logprob: -4.4781622886657715
    6. '
' → logprob: -8.22816276550293
    7. '  
' → logprob: -8.35316276550293
    8. '' → logprob: -8.60316276550293
    9. '[i' → logprob: -8.72816276550293
    10. ' 
' → logprob: -8.97816276550293

Token 140: '(dp' (ID: 68843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04930409789085388
    2. '(dp' → logprob: -3.0493040084838867
    3. '(max' → logprob: -8.174304008483887
    4. '(sum' → logprob: -8.924304008483887
    5. '('' → logprob: -8.924304008483887
    6. '("("' → logprob: -9.424304008483887
    7. '()' → logprob: -10.549304008483887
    8. ' (' → logprob: -10.924304008483887
    9. '(
' → logprob: -11.049304008483887
    10. '((' → logprob: -11.674304008483887

Token 141: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.023252001032233238
    2. '[-' → logprob: -3.773252010345459
    3. '[' → logprob: -12.5232515335083
    4. ')' → logprob: -13.3982515335083
    5. '[i' → logprob: -14.2732515335083
    6. 'N' → logprob: -14.8982515335083
    7. '[n' → logprob: -16.023252487182617
    8. ']' → logprob: -17.023252487182617
    9. '(N' → logprob: -17.148252487182617
    10. '[len' → logprob: -17.273252487182617

Token 142: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '))' → logprob: -12.500007629394531
    3. ' )' → logprob: -13.250007629394531
    4. '})' → logprob: -14.000007629394531
    5. '])' → logprob: -14.750007629394531
    6. ')
' → logprob: -15.125007629394531
    7. ')`' → logprob: -15.375007629394531
    8. '`)' → logprob: -15.500007629394531
    9. '}' → logprob: -16.75000762939453
    10. ')}' → logprob: -17.00000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 57.86%
Précision adaptée (1ère position): 58.57%
Précision (top 10): 87.86%
================================================================================
