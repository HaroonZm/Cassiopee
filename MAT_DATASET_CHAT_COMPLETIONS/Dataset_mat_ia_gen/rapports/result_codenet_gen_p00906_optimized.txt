================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def mat_mul(A, B, M):
    n = len(A)
    res = [0]*n
    for i in range(n):
        s = 0
        a = A[i]
        for j, b in B:
            s += a[j]*b
        res[i] = s % M
    return res

def mat_vec_mul(MAT, vec, M):
    n = len(MAT)
    res = [0]*n
    for i in range(n):
        s = 0
        for j in MAT[i]:
            s += MAT[i][j]*vec[j]
        res[i] = s % M
    return res

def mat_pow(MAT, power, M):
    n = len(MAT)
    # Identity matrix sparse
    res = [dict() for _ in range(n)]
    for i in range(n):
        res[i][i] = 1
    base = [dict(row) for row in MAT]
    while power > 0:
        if power & 1:
            # res = mat_mul_sparse(res, base, M)
            tmp = [dict() for _ in range(n)]
            for i in range(n):
                for k in res[i]:
                    a = res[i][k]
                    for j in base[k]:
                        tmp[i][j] = (tmp[i].get(j,0)+ a*base[k][j])%M
            res = tmp
        # base = mat_mul_sparse(base, base, M)
        tmp = [dict() for _ in range(n)]
        for i in range(n):
            for k in base[i]:
                a = base[i][k]
                for j in base[k]:
                    tmp[i][j] = (tmp[i].get(j,0)+ a*base[k][j])%M
        base = tmp
        power >>= 1
    return res

def main():
    input=sys.stdin.readline
    while True:
        N,M,A,B,C,T = map(int, input().split())
        if N==0 and M==0 and A==0 and B==0 and C==0 and T==0:
            break
        init = list(map(int,input().split()))
        # Build sparse matrix MAT size NxN with only up to 3 entries per row
        MAT = [dict() for _ in range(N)]
        for i in range(N):
            if i-1 >= 0 and A != 0:
                MAT[i][i-1] = A
            if B != 0:
                MAT[i][i] = B
            if i+1 < N and C != 0:
                MAT[i][i+1] = C
        if T == 0:
            print(*init)
            continue
        MAT_T = mat_pow(MAT,T,M)
        res = mat_vec_mul(MAT_T, init, M)
        print(*res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2739233374595642
    2. 'import' → logprob: -2.273923397064209
    3. '\n' → logprob: -2.398923397064209
    4. '<|end|>' → logprob: -4.023923397064209
    5. '' → logprob: -4.898923397064209
    6. ' ' → logprob: -5.523923397064209
    7. '\' → logprob: -6.148923397064209
    8. '
' → logprob: -6.148923397064209
    9. 'newline' → logprob: -6.273923397064209
    10. '<|end|>' → logprob: -6.273923397064209

Token 4: ' mat' (ID: 2450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3821837902069092
    2. ' main' → logprob: -1.8821837902069092
    3. ' process' → logprob: -2.757183790206909
    4. ' space' → logprob: -3.257183790206909
    5. ' calculate' → logprob: -4.632184028625488
    6. ' read' → logprob: -4.882184028625488
    7. ' hello' → logprob: -4.882184028625488
    8. '_' → logprob: -5.257184028625488
    9. ' my' → logprob: -5.257184028625488
    10. ' a' → logprob: -5.757184028625488

Token 5: '_mul' (ID: 75111)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.22993257641792297
    2. 'ch' → logprob: -1.6049325466156006
    3. 'r' → logprob: -6.10493278503418
    4. 'rix' → logprob: -6.85493278503418
    5. ' ' → logprob: -7.72993278503418
    6. '(h' → logprob: -8.47993278503418
    7. 'plotlib' → logprob: -8.97993278503418
    8. '```' → logprob: -8.97993278503418
    9. ' h' → logprob: -9.85493278503418
    10. '(r' → logprob: -9.97993278503418

Token 6: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035508894361555576
    2. ' (' → logprob: -6.253551006317139
    3. '(
' → logprob: -7.753551006317139
    4. '_' → logprob: -8.00355052947998
    5. '(a' → logprob: -8.37855052947998
    6. '*' → logprob: -8.50355052947998
    7. '(x' → logprob: -9.50355052947998
    8. 'ip' → logprob: -10.37855052947998
    9. 'tip' → logprob: -10.37855052947998
    10. '(i' → logprob: -10.62855052947998

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008866876363754272
    2. ')' → logprob: -5.008866786956787
    3. '[' → logprob: -6.383866786956787
    4. ' ,' → logprob: -8.133867263793945
    5. '):' → logprob: -9.633867263793945
    6. '<|end|>' → logprob: -10.383867263793945
    7. ' ' → logprob: -11.633867263793945
    8. ' )' → logprob: -11.758867263793945
    9. ',
' → logprob: -11.883867263793945
    10. ',)' → logprob: -12.008867263793945

Token 8: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.014186889864504337
    2. 'B' → logprob: -4.264186859130859
    3. ' ' → logprob: -11.51418685913086
    4. ',' → logprob: -12.26418685913086
    5. ')' → logprob: -12.38918685913086
    6. ' )' → logprob: -13.76418685913086
    7. '<|end|>' → logprob: -13.88918685913086
    8. ' ,' → logprob: -14.38918685913086
    9. 'b' → logprob: -14.63918685913086
    10. ' b' → logprob: -14.88918685913086

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018502239836379886
    2. ')' → logprob: -6.376850128173828
    3. ':' → logprob: -10.001850128173828
    4. ',' → logprob: -10.126850128173828
    5. '):
' → logprob: -10.126850128173828
    6. ' ):' → logprob: -11.626850128173828
    7. '[' → logprob: -12.001850128173828
    8. '   ' → logprob: -13.376850128173828
    9. '[]):' → logprob: -14.001850128173828
    10. ']:' → logprob: -14.501850128173828

Token 10: ' M' (ID: 391)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.8964309096336365
    2. ' C' → logprob: -1.2714309692382812
    3. '):' → logprob: -1.2714309692382812
    4. ' )' → logprob: -4.396430969238281
    5. ' ' → logprob: -5.146430969238281
    6. 'C' → logprob: -5.521430969238281
    7. ' n' → logprob: -6.021430969238281
    8. ' m' → logprob: -6.646430969238281
    9. ' ' → logprob: -6.896430969238281
    10. ')' → logprob: -7.146430969238281

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06996756047010422
    2. ')' → logprob: -2.81996750831604
    3. '[' → logprob: -5.444967746734619
    4. ',' → logprob: -6.069967746734619
    5. 'atrix' → logprob: -7.319967746734619
    6. ':' → logprob: -8.569967269897461
    7. ' ):' → logprob: -8.694967269897461
    8. '*' → logprob: -9.444967269897461
    9. '**' → logprob: -10.569967269897461
    10. '.' → logprob: -10.694967269897461

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004543811548501253
    2. ':
' → logprob: -6.129543781280518
    3. '   ' → logprob: -6.629543781280518
    4. ' :' → logprob: -7.379543781280518
    5. ' ' → logprob: -9.379544258117676
    6. '[' → logprob: -9.754544258117676
    7. '":' → logprob: -10.004544258117676
    8. '):' → logprob: -10.129544258117676
    9. '':' → logprob: -10.504544258117676
    10. '```' → logprob: -10.629544258117676

Token 13: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6660264134407043
    2. '   ' → logprob: -1.7910263538360596
    3. ' ' → logprob: -2.1660263538360596
    4. 'for' → logprob: -2.4160263538360596
    5. ' n' → logprob: -3.6660263538360596
    6. 'n' (adapté à ' n') → logprob: -3.9160263538360596
    7. ' result' → logprob: -4.166026592254639
    8. ' return' → logprob: -4.666026592254639
    9. ' 
' → logprob: -4.791026592254639
    10. 'result' → logprob: -5.666026592254639

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0716903954744339
    2. '=' → logprob: -3.696690320968628
    3. ' ' → logprob: -3.821690320968628
    4. '   ' → logprob: -4.446690559387207
    5. ',' → logprob: -5.946690559387207
    6. '  ' → logprob: -6.071690559387207
    7. '    ' → logprob: -6.571690559387207
    8. ' ,' → logprob: -6.696690559387207
    9. 'u' → logprob: -7.946690559387207
    10. '=int' → logprob: -8.071690559387207

Token 15: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0028324576560407877
    2. 'len' → logprob: -5.877832412719727
    3. ' A' → logprob: -11.252832412719727
    4. ' ' → logprob: -11.627832412719727
    5. '=len' → logprob: -13.627832412719727
    6. '(len' → logprob: -13.752832412719727
    7. ' n' → logprob: -14.377832412719727
    8. '[len' → logprob: -14.752832412719727
    9. '	len' → logprob: -14.752832412719727
    10. ' ' → logprob: -14.877832412719727

Token 16: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0450592041015625
    2. '(' → logprob: -3.1700592041015625
    3. '(B' → logprob: -6.5450592041015625
    4. '(M' → logprob: -7.6700592041015625
    5. 'A' → logprob: -9.170059204101562
    6. ')' → logprob: -11.295059204101562
    7. '(
' → logprob: -11.295059204101562
    8. '(n' → logprob: -11.795059204101562
    9. '(S' → logprob: -12.545059204101562
    10. 'M' → logprob: -13.295059204101562

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03512253984808922
    2. '[' → logprob: -3.5351226329803467
    3. '   ' → logprob: -6.035122394561768
    4. ')
' → logprob: -6.535122394561768
    5. ' )' → logprob: -6.535122394561768
    6. ' ' → logprob: -11.160122871398926
    7. ' )
' → logprob: -11.285122871398926
    8. '[i' → logprob: -11.660122871398926
    9. '  ' → logprob: -12.535122871398926
    10. ')
' → logprob: -12.660122871398926

Token 18: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3405157327651978
    2. '    
' → logprob: -1.5905157327651978
    3. '  
' → logprob: -1.7155157327651978
    4. ' 
' → logprob: -2.465515613555908
    5. '   ' → logprob: -2.465515613555908
    6. ' ' → logprob: -2.715515613555908
    7. '   
' → logprob: -3.340515613555908
    8. '\n' → logprob: -3.840515613555908
    9. ')' → logprob: -4.340515613555908
    10. '     
' → logprob: -4.715515613555908

Token 19: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1005825325846672
    2. ' result' → logprob: -2.7255825996398926
    3. 'result' → logprob: -4.600582599639893
    4. 'C' → logprob: -5.475582599639893
    5. ' for' → logprob: -5.475582599639893
    6. ' ' → logprob: -5.850582599639893
    7. ' C' → logprob: -5.850582599639893
    8. '```' → logprob: -5.975582599639893
    9. '    
' → logprob: -6.600582599639893
    10. '    ' → logprob: -7.100582599639893

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06331546604633331
    2. ' ' → logprob: -2.9383153915405273
    3. '=' → logprob: -5.563315391540527
    4. '[' → logprob: -5.813315391540527
    5. 'ult' → logprob: -7.438315391540527
    6. '  ' → logprob: -8.563315391540527
    7. '   ' → logprob: -8.688315391540527
    8. '	' → logprob: -8.688315391540527
    9. 'ults' → logprob: -9.063315391540527
    10. '[:]' → logprob: -9.438315391540527

Token 21: ' [' (ID: 723)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.2656046748161316
    2. '[[' → logprob: -1.5156047344207764
    3. ' [' → logprob: -4.890604496002197
    4. '[' → logprob: -5.140604496002197
    5. ' [[[' → logprob: -8.515604972839355
    6. '[]' → logprob: -12.265604972839355
    7. ' ' → logprob: -13.265604972839355
    8. '[n' → logprob: -13.640604972839355
    9. ' []' → logprob: -13.890604972839355
    10. ' [[]' → logprob: -14.265604972839355

Token 22: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002747815568000078
    2. ' [' → logprob: -6.127748012542725
    3. '0' → logprob: -7.502748012542725
    4. '   ' → logprob: -12.627747535705566
    5. ' ' → logprob: -13.002747535705566
    6. '[n' → logprob: -13.252747535705566
    7. '[A' → logprob: -14.502747535705566
    8. '[m' → logprob: -14.877747535705566
    9. '[M' → logprob: -14.877747535705566
    10. '[[' → logprob: -15.002747535705566

Token 23: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1296537220478058
    2. ']*' → logprob: -2.1296536922454834
    3. ' for' → logprob: -6.1296539306640625
    4. ']*(' → logprob: -8.504653930664062
    5. ' ]' → logprob: -8.629653930664062
    6. 'for' → logprob: -9.379653930664062
    7. ' ' → logprob: -10.379653930664062
    8. ')' → logprob: -11.254653930664062
    9. '[' → logprob: -11.629653930664062
    10. '][' → logprob: -11.879653930664062

Token 24: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.596781946020201e-05
    2. ' n' → logprob: -10.000045776367188
    3. '(n' → logprob: -15.000045776367188
    4. '	n' → logprob: -15.625045776367188
    5. ')n' → logprob: -17.250045776367188
    6. '(' → logprob: -17.750045776367188
    7. '```' → logprob: -17.875045776367188
    8. '{' → logprob: -17.875045776367188
    9. ' ' → logprob: -18.125045776367188
    10. ' (' → logprob: -18.250045776367188

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2558677196502686
    2. 'for' → logprob: -1.6308677196502686
    3. '<|end|>' → logprob: -1.6308677196502686
    4. '[' → logprob: -2.0058677196502686
    5. ' for' → logprob: -2.5058677196502686
    6. '[n' → logprob: -2.7558677196502686
    7. ' ' → logprob: -4.505867958068848
    8. 'n' → logprob: -4.755867958068848
    9. '[]' → logprob: -5.380867958068848
    10. '  ' → logprob: -5.630867958068848

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3463667929172516
    2. ' for' → logprob: -1.4713667631149292
    3. '<|end|>' → logprob: -3.5963668823242188
    4. '[' → logprob: -3.7213668823242188
    5. '   ' → logprob: -5.221366882324219
    6. ' ' → logprob: -6.346366882324219
    7. ']' → logprob: -7.221366882324219
    8. '	for' → logprob: -7.471366882324219
    9. '\n' → logprob: -7.721366882324219
    10. ')' → logprob: -7.721366882324219

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1160288155078888
    2. ' ' → logprob: -2.2410287857055664
    3. 'i' → logprob: -5.866028785705566
    4. ' j' → logprob: -8.616028785705566
    5. ' _' → logprob: -9.491028785705566
    6. '  ' → logprob: -10.366028785705566
    7. ' ‌' → logprob: -10.741028785705566
    8. '	i' → logprob: -11.116028785705566
    9. '_' → logprob: -11.366028785705566
    10. ' ' → logprob: -11.991028785705566

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028491778299212456
    2. 'in' → logprob: -3.778491735458374
    3. ' ' → logprob: -5.528491973876953
    4. '  ' → logprob: -8.153491973876953
    5. '=' → logprob: -8.528491973876953
    6. ' =' → logprob: -8.653491973876953
    7. '   ' → logprob: -9.278491973876953
    8. '<|end|>' → logprob: -9.403491973876953
    9. ')' → logprob: -9.778491973876953
    10. '+' → logprob: -9.903491973876953

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04863278940320015
    2. 'range' → logprob: -3.048632860183716
    3. ' n' → logprob: -11.048632621765137
    4. 'n' → logprob: -11.173632621765137
    5. ' ' → logprob: -11.298632621765137
    6. '	range' → logprob: -13.673632621765137
    7. ' xrange' → logprob: -13.798632621765137
    8. '(range' → logprob: -14.798632621765137
    9. '  ' → logprob: -15.673632621765137
    10. ' rang' → logprob: -16.923633575439453

Token 31: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018238209187984467
    2. '(' → logprob: -4.018238067626953
    3. ' (' → logprob: -9.393238067626953
    4. '(len' → logprob: -12.518238067626953
    5. 'n' → logprob: -14.768238067626953
    6. ' ' → logprob: -15.518238067626953
    7. ' n' → logprob: -15.768238067626953
    8. ')' → logprob: -16.143238067626953
    9. '(
' → logprob: -16.518238067626953
    10. '((' → logprob: -16.518238067626953

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014132121577858925
    2. ')' → logprob: -6.876413345336914
    3. '):
' → logprob: -8.501413345336914
    4. ':' → logprob: -9.001413345336914
    5. ' ):' → logprob: -10.751413345336914
    6. '   ' → logprob: -10.876413345336914
    7. ' ' → logprob: -12.376413345336914
    8. ',' → logprob: -13.376413345336914
    9. '*' → logprob: -13.501413345336914
    10. '+' → logprob: -13.626413345336914

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7471804022789001
    2. ' res' → logprob: -1.247180461883545
    3. '       ' → logprob: -2.247180461883545
    4. 'res' → logprob: -2.872180461883545
    5. '[' → logprob: -3.497180461883545
    6. ' ' → logprob: -3.747180461883545
    7. '	res' → logprob: -5.872180461883545
    8. '<|end|>' → logprob: -5.872180461883545
    9. '  ' → logprob: -6.247180461883545
    10. '    ' → logprob: -6.247180461883545

Token 34: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31790462136268616
    2. ' res' → logprob: -1.3179045915603638
    3. '   ' → logprob: -5.692904472351074
    4. '0' → logprob: -7.567904472351074
    5. ' ' → logprob: -8.192904472351074
    6. '	res' → logprob: -8.817904472351074
    7. 'for' → logprob: -9.317904472351074
    8. ' for' → logprob: -9.942904472351074
    9. '[' → logprob: -10.192904472351074
    10. '<|end|>' → logprob: -10.567904472351074

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3445276916027069
    2. 'um' → logprob: -1.7195277214050293
    3. ' =' → logprob: -2.2195277214050293
    4. ' ' → logprob: -7.219527721405029
    5. '=sum' → logprob: -7.344527721405029
    6. '   ' → logprob: -7.844527721405029
    7. 'umm' → logprob: -7.844527721405029
    8. '[' → logprob: -8.219527244567871
    9. ' um' → logprob: -8.469527244567871
    10. '+=' → logprob: -8.719527244567871

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003608386032283306
    2. ' ' → logprob: -5.628608226776123
    3. 'sum' → logprob: -12.628608703613281
    4. '[' → logprob: -13.128608703613281
    5. ' sum' → logprob: -14.253608703613281
    6. 'm' → logprob: -14.503608703613281
    7. ' [' → logprob: -14.503608703613281
    8. 'um' → logprob: -14.628608703613281
    9. '   ' → logprob: -15.003608703613281
    10. 'range' → logprob: -16.12860870361328

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -10.750029563903809
    3. 'sum' → logprob: -12.375029563903809
    4. '[' → logprob: -12.875029563903809
    5. 'n' → logprob: -15.500029563903809
    6. 'int' → logprob: -16.250028610229492
    7. 'M' → logprob: -16.500028610229492
    8. 'range' → logprob: -16.500028610229492
    9. 'A' → logprob: -16.750028610229492
    10. '1' → logprob: -16.875028610229492

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.068844273686409
    2. '<|end|>' → logprob: -3.4438443183898926
    3. '   ' → logprob: -3.8188443183898926
    4. ' for' → logprob: -4.943844318389893
    5. '	for' → logprob: -6.193844318389893
    6. '<|end|>' → logprob: -7.193844318389893
    7. ' ' → logprob: -7.193844318389893
    8. 'for' → logprob: -7.568844318389893
    9. '	' → logprob: -7.693844318389893
    10. '	   ' → logprob: -8.818843841552734

Token 40: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.476873517036438
    2. ' for' → logprob: -0.976873517036438
    3. '   ' → logprob: -6.351873397827148
    4. '	for' → logprob: -7.476873397827148
    5. '       ' → logprob: -7.851873397827148
    6. ' ' → logprob: -9.851873397827148
    7. '<|end|>' → logprob: -10.601873397827148
    8. '  ' → logprob: -11.976873397827148
    9. '	   ' → logprob: -12.851873397827148
    10. '    ' → logprob: -12.851873397827148

Token 41: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3382962942123413
    2. '   ' → logprob: -2.338296413421631
    3. '=' → logprob: -2.838296413421631
    4. ' for' → logprob: -2.963296413421631
    5. ' =' → logprob: -3.963296413421631
    6. ' ' → logprob: -4.338296413421631
    7. '[i' → logprob: -4.463296413421631
    8. '  ' → logprob: -4.463296413421631
    9. '       ' → logprob: -5.088296413421631
    10. 'i' → logprob: -5.338296413421631

Token 42: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2522598206996918
    2. 'A' → logprob: -1.5022598505020142
    3. ' ' → logprob: -9.877260208129883
    4. '0' → logprob: -9.877260208129883
    5. '=A' → logprob: -10.252260208129883
    6. '[A' → logprob: -10.627260208129883
    7. '[i' → logprob: -10.877260208129883
    8. '	A' → logprob: -11.002260208129883
    9. '    ' → logprob: -11.127260208129883
    10. '   ' → logprob: -11.127260208129883

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001014706795103848
    2. '[' → logprob: -7.001014709472656
    3. ' [' → logprob: -9.876014709472656
    4. '[I' → logprob: -11.376014709472656
    5. '   ' → logprob: -11.501014709472656
    6. '[n' → logprob: -12.251014709472656
    7. '[j' → logprob: -12.501014709472656
    8. ' i' → logprob: -13.251014709472656
    9. 'i' → logprob: -13.251014709472656
    10. ')' → logprob: -13.376014709472656

Token 44: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12490818649530411
    2. ')' → logprob: -3.249908208847046
    3. '])' → logprob: -3.374908208847046
    4. '][' → logprob: -3.624908208847046
    5. '       ' → logprob: -4.749907970428467
    6. ']
' → logprob: -5.499907970428467
    7. '   ' → logprob: -6.124907970428467
    8. '[i' → logprob: -7.749907970428467
    9. ')
' → logprob: -8.124908447265625
    10. '[' → logprob: -8.624908447265625

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08056534826755524
    2. ' for' → logprob: -3.4555654525756836
    3. '   ' → logprob: -4.080565452575684
    4. 'for' → logprob: -4.330565452575684
    5. ' ' → logprob: -4.455565452575684
    6. '	for' → logprob: -6.830565452575684
    7. '<|end|>' → logprob: -7.205565452575684
    8. '	' → logprob: -7.705565452575684
    9. '  ' → logprob: -7.955565452575684
    10. '    ' → logprob: -8.330565452575684

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3998557925224304
    2. 'for' (adapté à ' for') → logprob: -1.5248558521270752
    3. '       ' → logprob: -3.149855852127075
    4. ' ' → logprob: -3.274855852127075
    5. '	for' → logprob: -4.399855613708496
    6. '   ' → logprob: -4.399855613708496
    7. '\t' → logprob: -5.774855613708496
    8. '  ' → logprob: -7.149855613708496
    9. '	' → logprob: -7.524855613708496
    10. ' *' → logprob: -7.774855613708496

Token 47: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07008036971092224
    2. 'j' → logprob: -2.695080280303955
    3. ' ' → logprob: -9.820080757141113
    4. ' range' → logprob: -10.445080757141113
    5. 'range' → logprob: -10.445080757141113
    6. '_j' → logprob: -12.070080757141113
    7. ' b' → logprob: -12.445080757141113
    8. '	j' → logprob: -12.570080757141113
    9. '  ' → logprob: -12.695080757141113
    10. '   ' → logprob: -12.945080757141113

Token 48: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034835103899240494
    2. 'in' → logprob: -3.40983510017395
    3. ' ' → logprob: -6.784835338592529
    4. '  ' → logprob: -11.159834861755371
    5. '	in' → logprob: -11.284834861755371
    6. '<|end|>' → logprob: -11.659834861755371
    7. '    ' → logprob: -12.284834861755371
    8. '   ' → logprob: -12.909834861755371
    9. ')' → logprob: -13.159834861755371
    10. 'range' → logprob: -13.159834861755371

Token 49: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5765389204025269
    2. ' b' → logprob: -0.8265389204025269
    3. ' ' → logprob: -8.326539039611816
    4. 'v' → logprob: -8.701539039611816
    5. ' v' → logprob: -9.701539039611816
    6. '    ' → logprob: -10.326539039611816
    7. 'a' → logprob: -11.326539039611816
    8. ' bj' → logprob: -11.451539039611816
    9. '   ' → logprob: -11.701539039611816
    10. 'bj' → logprob: -11.951539039611816

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024543536826968193
    2. 'in' → logprob: -3.774543523788452
    3. ' ' → logprob: -6.899543762207031
    4. ',' → logprob: -9.399543762207031
    5. 's' → logprob: -9.524543762207031
    6. '<|end|>' → logprob: -10.024543762207031
    7. '  ' → logprob: -10.774543762207031
    8. '<|end|>' → logprob: -11.524543762207031
    9. 'b' → logprob: -11.899543762207031
    10. '	in' → logprob: -12.024543762207031

Token 51: ' B' (ID: 418)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4743354022502899
    2. ' enumerate' → logprob: -0.9743354320526123
    3. 'zip' → logprob: -8.974335670471191
    4. ' zip' → logprob: -9.349335670471191
    5. ' ' → logprob: -11.474335670471191
    6. 'en' → logprob: -11.849335670471191
    7. 'range' → logprob: -12.474335670471191
    8. 'enum' → logprob: -12.474335670471191
    9. 'B' → logprob: -12.849335670471191
    10. 'b' → logprob: -12.974335670471191

Token 52: ':
' (ID: 734)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.7277794480323792
    2. ':' → logprob: -1.2277793884277344
    3. '[i' → logprob: -1.8527793884277344
    4. '.iteritems' → logprob: -3.8527793884277344
    5. '):' → logprob: -4.477779388427734
    6. '[' → logprob: -5.102779388427734
    7. ')' → logprob: -5.227779388427734
    8. '.' → logprob: -5.352779388427734
    9. 'enumer' → logprob: -6.102779388427734
    10. 'items' → logprob: -6.227779388427734

Token 53: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08006809651851654
    2. '):' → logprob: -3.3300681114196777
    3. '():' → logprob: -4.205068111419678
    4. ')' → logprob: -4.455068111419678
    5. '.items' → logprob: -6.330068111419678
    6. '   ' → logprob: -6.330068111419678
    7. 's' → logprob: -6.580068111419678
    8. ':
' → logprob: -6.705068111419678
    9. 'items' → logprob: -7.080068111419678
    10. '(n' → logprob: -7.455068111419678

Token 54: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9021711349487305
    2. ' ' → logprob: -1.4021711349487305
    3. ' (' → logprob: -2.6521711349487305
    4. 's' (adapté à ' s') → logprob: -2.9021711349487305
    5. ' j' → logprob: -3.5271711349487305
    6. '+' → logprob: -3.6521711349487305
    7. '(' → logprob: -3.7771711349487305
    8. ' n' → logprob: -3.9021711349487305
    9. ' range' → logprob: -4.4021711349487305
    10. ':' → logprob: -4.6521711349487305

Token 55: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18305480480194092
    2. ' +=' → logprob: -1.933054804801941
    3. '+' → logprob: -3.8080549240112305
    4. '=' → logprob: -8.68305492401123
    5. ' +' → logprob: -9.30805492401123
    6. '+=(' → logprob: -9.68305492401123
    7. ']+=' → logprob: -10.68305492401123
    8. '<|end|>' → logprob: -11.68305492401123
    9. '+="' → logprob: -11.93305492401123
    10. '+='' → logprob: -12.30805492401123

Token 56: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15418359637260437
    2. ' a' → logprob: -2.0291836261749268
    3. '(a' → logprob: -4.904183387756348
    4. ' (' → logprob: -5.529183387756348
    5. '(' → logprob: -10.154183387756348
    6. ' ' → logprob: -12.154183387756348
    7. '	a' → logprob: -12.529183387756348
    8. ')a' → logprob: -13.279183387756348
    9. '((' → logprob: -13.779183387756348
    10. '(s' → logprob: -14.029183387756348

Token 57: '[j' (ID: 7895)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08973691612482071
    2. ' *' → logprob: -2.7147369384765625
    3. '*b' → logprob: -4.3397369384765625
    4. '*j' → logprob: -5.2147369384765625
    5. '[j' → logprob: -6.8397369384765625
    6. '[' → logprob: -10.464736938476562
    7. 'b' → logprob: -11.964736938476562
    8. '[b' → logprob: -12.214736938476562
    9. ' ' → logprob: -12.464736938476562
    10. '*[' → logprob: -12.714736938476562

Token 58: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020683778449892998
    2. ']*' → logprob: -3.895683765411377
    3. ' ]' → logprob: -9.020684242248535
    4. '*' → logprob: -11.270684242248535
    5. '   ' → logprob: -12.895684242248535
    6. ' *' → logprob: -13.270684242248535
    7. '']' → logprob: -14.145684242248535
    8. ' ' → logprob: -14.520684242248535
    9. '       ' → logprob: -14.645684242248535
    10. '"]' → logprob: -15.145684242248535

Token 59: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002966127940453589
    2. ' b' → logprob: -8.125296592712402
    3. '*b' → logprob: -15.375296592712402
    4. ')b' → logprob: -15.625296592712402
    5. ' ' → logprob: -15.875296592712402
    6. '<|end|>' → logprob: -17.25029754638672
    7. '>b' → logprob: -18.00029754638672
    8. '%b' → logprob: -18.37529754638672
    9. '  ' → logprob: -18.50029754638672
    10. '   ' → logprob: -18.62529754638672

Token 60: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7690688967704773
    2. '[j' → logprob: -1.019068956375122
    3. 'j' → logprob: -2.019068956375122
    4. 'i' → logprob: -4.019068717956543
    5. '<|end|>' → logprob: -4.394068717956543
    6. '[' → logprob: -5.144068717956543
    7. ')' → logprob: -6.269068717956543
    8. '%' → logprob: -6.644068717956543
    9. ']' → logprob: -6.894068717956543
    10. ' ' → logprob: -7.519068717956543

Token 61: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6860463619232178
    2. '
' → logprob: -1.8110463619232178
    3. '       ' → logprob: -1.9360463619232178
    4. '   ' → logprob: -2.0610463619232178
    5. '[i' → logprob: -2.1860463619232178
    6. ')' → logprob: -2.8110463619232178
    7. ']' → logprob: -2.9360463619232178
    8. '%' → logprob: -2.9360463619232178
    9. '  ' → logprob: -4.186046600341797
    10. ' %' → logprob: -4.186046600341797

Token 62: ' res' (ID: 694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.8002641201019287
    2. ' %' → logprob: -1.8002641201019287
    3. ']' → logprob: -1.9252641201019287
    4. ')' → logprob: -2.1752641201019287
    5. ' ' → logprob: -2.1752641201019287
    6. '%' → logprob: -2.3002641201019287
    7. 's' → logprob: -3.1752641201019287
    8. '<|end|>' → logprob: -3.3002641201019287
    9. '   ' → logprob: -3.8002641201019287
    10. '       ' → logprob: -3.9252641201019287

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.704065213445574e-05
    2. '[' → logprob: -10.125046730041504
    3. '[j' → logprob: -12.375046730041504
    4. '[I' → logprob: -13.375046730041504
    5. ' [' → logprob: -15.000046730041504
    6. '```' → logprob: -15.250046730041504
    7. '\[' → logprob: -15.375046730041504
    8. '[a' → logprob: -16.87504768371582
    9. '[s' → logprob: -17.25004768371582
    10. '[idx' → logprob: -17.75004768371582

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.825890159234405e-05
    2. ']=' → logprob: -10.125068664550781
    3. ' ]' → logprob: -11.375068664550781
    4. '=' → logprob: -11.375068664550781
    5. ')' → logprob: -12.375068664550781
    6. ']+=' → logprob: -14.750068664550781
    7. ' =' → logprob: -14.875068664550781
    8. '[' → logprob: -16.00006866455078
    9. ']
' → logprob: -17.00006866455078
    10. ')]' → logprob: -17.12506866455078

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687896728515625
    2. ' =' → logprob: -1.1368789672851562
    3. ' +=' → logprob: -12.386878967285156
    4. '+=' → logprob: -13.261878967285156
    5. 's' → logprob: -13.886878967285156
    6. ' ' → logprob: -15.136878967285156
    7. '.=' → logprob: -15.636878967285156
    8. ' %=' → logprob: -16.011878967285156
    9. ' |=' → logprob: -16.386878967285156
    10. '=s' → logprob: -16.386878967285156

Token 66: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3133220076560974
    2. ' s' → logprob: -1.3133220672607422
    3. '(s' → logprob: -9.938322067260742
    4. ' (' → logprob: -12.063322067260742
    5. '(' → logprob: -12.938322067260742
    6. 'pow' → logprob: -14.563322067260742
    7. '[s' → logprob: -14.813322067260742
    8. ' ' → logprob: -14.813322067260742
    9. ' ' → logprob: -14.875822067260742
    10. '[' → logprob: -15.438322067260742

Token 67: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017296895384788513
    2. 'return' → logprob: -4.89229679107666
    3. ' return' → logprob: -5.89229679107666
    4. '
' → logprob: -6.14229679107666
    5. '<|end|>' → logprob: -6.14229679107666
    6. ' ' → logprob: -7.51729679107666
    7. '+' → logprob: -7.64229679107666
    8. '+
' → logprob: -8.01729679107666
    9. '   ' → logprob: -8.26729679107666
    10. '' → logprob: -8.64229679107666

Token 68: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011048170737922192
    2. ' M' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.886048316955566
    4. '	M' → logprob: -16.76104736328125
    5. '   ' → logprob: -17.51104736328125
    6. '(M' → logprob: -17.63604736328125
    7. '  ' → logprob: -17.88604736328125
    8. '>M' → logprob: -18.51104736328125
    9. '`' → logprob: -18.63604736328125
    10. '[M' → logprob: -18.88604736328125

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6424028873443604
    2. ')' → logprob: -2.1424028873443604
    3. '
' → logprob: -2.1424028873443604
    4. ' for' → logprob: -2.7674028873443604
    5. 'for' → logprob: -3.6424028873443604
    6. ' ' → logprob: -3.6424028873443604
    7. '<|end|>' → logprob: -3.6424028873443604
    8. ':' → logprob: -4.267402648925781
    9. 'return' → logprob: -4.392402648925781
    10. '[' → logprob: -4.892402648925781

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17631636559963226
    2. '<|end|>' → logprob: -2.551316261291504
    3. '   ' → logprob: -3.051316261291504
    4. ')' → logprob: -4.801316261291504
    5. ' return' → logprob: -5.176316261291504
    6. '
' → logprob: -5.551316261291504
    7. '	return' → logprob: -5.551316261291504
    8. ' ' → logprob: -5.676316261291504
    9. 'return' → logprob: -5.926316261291504
    10. '' → logprob: -6.426316261291504

Token 71: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08170422166585922
    2. '<|end|>' → logprob: -3.7067041397094727
    3. 'return' (adapté à ' return') → logprob: -3.9567041397094727
    4. '
' → logprob: -4.581704139709473
    5. '	return' → logprob: -4.831704139709473
    6. ' return' → logprob: -4.956704139709473
    7. ' ' → logprob: -5.581704139709473
    8. ')' → logprob: -5.831704139709473
    9. ':return' → logprob: -7.081704139709473
    10. '\n' → logprob: -7.956704139709473

Token 72: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31327635049819946
    2. ' res' → logprob: -1.3132762908935547
    3. '[' → logprob: -11.688276290893555
    4. '(res' → logprob: -12.063276290893555
    5. ' ' → logprob: -15.438276290893555
    6. ' [' → logprob: -15.813276290893555
    7. '	res' → logprob: -16.438276290893555
    8. 'list' → logprob: -17.438276290893555
    9. '$res' → logprob: -17.688276290893555
    10. 's' → logprob: -18.188276290893555

Token 73: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4592759609222412
    2. '.items' → logprob: -1.9592759609222412
    3. '():' → logprob: -2.584275960922241
    4. '.' → logprob: -3.334275960922241
    5. 'items' → logprob: -3.709275960922241
    6. ':' → logprob: -4.08427619934082
    7. ',' → logprob: -4.45927619934082
    8. '(' → logprob: -4.45927619934082
    9. '<|end|>' → logprob: -4.58427619934082
    10. '().' → logprob: -4.70927619934082

Token 74: 'def' (ID: 1314)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.8208760619163513
    2. '.' → logprob: -1.945876121520996
    3. '():' → logprob: -2.070876121520996
    4. '()' → logprob: -2.195876121520996
    5. ':' → logprob: -2.320876121520996
    6. 'items' → logprob: -3.195876121520996
    7. '().' → logprob: -4.820876121520996
    8. '(' → logprob: -4.820876121520996
    9. ',' → logprob: -5.195876121520996
    10. '_items' → logprob: -5.445876121520996

Token 75: ' mat' (ID: 2450)
  Prédit: ' mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.040251512080430984
    2. 'mat' → logprob: -3.7902514934539795
    3. ' matrix' → logprob: -4.790251731872559
    4. ' mod' → logprob: -5.915251731872559
    5. ' vector' → logprob: -6.415251731872559
    6. ' solve' → logprob: -7.290251731872559
    7. ' vec' → logprob: -7.415251731872559
    8. ' fast' → logprob: -7.915251731872559
    9. 'matrix' → logprob: -7.915251731872559
    10. '_mat' → logprob: -8.040251731872559

Token 76: '_vec' (ID: 29582)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.0018035804387181997
    2. '_mult' → logprob: -7.251803398132324
    3. '_vec' → logprob: -7.626803398132324
    4. '_add' → logprob: -7.876803398132324
    5. 'mul' → logprob: -8.876803398132324
    6. '_mat' → logprob: -10.501803398132324
    7. '_vect' → logprob: -12.001803398132324
    8. '_' → logprob: -12.126803398132324
    9. '_pow' → logprob: -12.251803398132324
    10. '_m' → logprob: -12.376803398132324

Token 77: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.0009968446101993322
    2. '_mult' → logprob: -7.250997066497803
    3. '_m' → logprob: -9.000996589660645
    4. '_' → logprob: -9.375996589660645
    5. '(_' → logprob: -10.250996589660645
    6. '```' → logprob: -11.625996589660645
    7. '(' → logprob: -12.500996589660645
    8. '*' → logprob: -12.625996589660645
    9. '_vec' → logprob: -12.750996589660645
    10. 'mul' → logprob: -12.750996589660645

Token 78: '(M' (ID: 6103)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.011607694439589977
    2. '(' → logprob: -4.636607646942139
    3. '(M' → logprob: -6.761607646942139
    4. ' (' → logprob: -7.386607646942139
    5. '(B' → logprob: -10.761608123779297
    6. '(Matrix' → logprob: -11.261608123779297
    7. '(matrix' → logprob: -11.386608123779297
    8. '(mat' → logprob: -12.011608123779297
    9. '(V' → logprob: -12.261608123779297
    10. '(Mat' → logprob: -12.886608123779297

Token 79: 'AT' (ID: 1228)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000883833912666887
    2. ' ,' → logprob: -7.750884056091309
    3. ')' → logprob: -8.125884056091309
    4. '):' → logprob: -10.125884056091309
    5. ',M' → logprob: -10.500884056091309
    6. '(M' → logprob: -10.625884056091309
    7. ',A' → logprob: -10.750884056091309
    8. '(' → logprob: -11.125884056091309
    9. '(A' → logprob: -11.500884056091309
    10. '   ' → logprob: -13.125884056091309

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012990460963919759
    2. ' ,' → logprob: -7.751298904418945
    3. '):' → logprob: -7.876298904418945
    4. ')' → logprob: -8.501298904418945
    5. '(' → logprob: -9.626298904418945
    6. ',A' → logprob: -10.126298904418945
    7. ',M' → logprob: -10.126298904418945
    8. '(A' → logprob: -10.251298904418945
    9. '),' → logprob: -10.376298904418945
    10. '(M' → logprob: -10.876298904418945

Token 81: ' vec' (ID: 10563)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.9642264246940613
    2. ' V' → logprob: -1.464226484298706
    3. 'vec' → logprob: -1.714226484298706
    4. 'v' → logprob: -2.714226484298706
    5. ' vec' → logprob: -3.214226484298706
    6. ' v' → logprob: -3.714226484298706
    7. ' vector' → logprob: -3.714226484298706
    8. 'VECTOR' → logprob: -4.089226245880127
    9. 'vector' → logprob: -4.214226245880127
    10. ' VECTOR' → logprob: -4.589226245880127

Token 82: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006336859660223126
    2. ',' → logprob: -7.625633716583252
    3. ')' → logprob: -9.375633239746094
    4. '):
' → logprob: -9.875633239746094
    5. ' ):' → logprob: -12.125633239746094
    6. '   ' → logprob: -13.875633239746094
    7. ':' → logprob: -14.125633239746094
    8. '):
' → logprob: -14.250633239746094
    9. ' ' → logprob: -15.250633239746094
    10. '  ' → logprob: -15.375633239746094

Token 83: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.11886388808488846
    2. ' n' → logprob: -3.118863821029663
    3. 'M' → logprob: -3.618863821029663
    4. ')' → logprob: -4.368864059448242
    5. '):' → logprob: -4.493864059448242
    6. ' )' → logprob: -5.118864059448242
    7. 'n' → logprob: -5.493864059448242
    8. ' ' → logprob: -6.368864059448242
    9. ' ):' → logprob: -6.993864059448242
    10. ' def' → logprob: -7.618864059448242

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018161057960242033
    2. ')' → logprob: -8.625181198120117
    3. ' ):' → logprob: -13.875181198120117
    4. ':' → logprob: -14.125181198120117
    5. '):
' → logprob: -15.750181198120117
    6. '   ' → logprob: -16.625181198120117
    7. ')：' → logprob: -17.750181198120117
    8. '():' → logprob: -18.125181198120117
    9. ' ' → logprob: -18.250181198120117
    10. '）：' → logprob: -18.375181198120117

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008959388360381126
    2. 'n' → logprob: -5.3839592933654785
    3. '<|end|>' → logprob: -6.2589592933654785
    4. ' n' → logprob: -6.6339592933654785
    5. '(n' → logprob: -8.508959770202637
    6. ':' → logprob: -8.758959770202637
    7. ' ' → logprob: -9.008959770202637
    8. ',' → logprob: -9.383959770202637
    9. '[' → logprob: -9.508959770202637
    10. '	n' → logprob: -9.633959770202637

Token 86: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7205718755722046
    2. '   ' → logprob: -1.0955718755722046
    3. 'n' (adapté à ' n') → logprob: -1.7205718755722046
    4. ' res' → logprob: -9.845571517944336
    5. '	n' → logprob: -10.095571517944336
    6. '```' → logprob: -10.345571517944336
    7. ' result' → logprob: -10.595571517944336
    8. ' return' → logprob: -11.220571517944336
    9. ' ' → logprob: -11.720571517944336
    10. '  ' → logprob: -11.845571517944336

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028258003294467926
    2. '=' → logprob: -5.877825736999512
    3. '   ' → logprob: -11.002825736999512
    4. ' ' → logprob: -12.752825736999512
    5. '    ' → logprob: -15.002825736999512
    6. '  ' → logprob: -15.002825736999512
    7. ' =
' → logprob: -15.252825736999512
    8. '=len' → logprob: -15.502825736999512
    9. ')' → logprob: -16.377826690673828
    10. ',' → logprob: -16.377826690673828

Token 88: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759522914886475
    2. 'len' → logprob: -0.8259522914886475
    3. '(len' → logprob: -11.950952529907227
    4. '[len' → logprob: -12.825952529907227
    5. '=len' → logprob: -13.200952529907227
    6. '	len' → logprob: -13.825952529907227
    7. ' ' → logprob: -15.575952529907227
    8. '   ' → logprob: -15.700952529907227
    9. ',len' → logprob: -16.075952529907227
    10. '<len' → logprob: -16.325952529907227

Token 89: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.05541025847196579
    2. '(vec' → logprob: -2.930410146713257
    3. '(mat' → logprob: -8.555410385131836
    4. '(' → logprob: -8.555410385131836
    5. 'vec' → logprob: -9.305410385131836
    6. '(Mat' → logprob: -10.680410385131836
    7. '(v' → logprob: -11.430410385131836
    8. '(vector' → logprob: -12.055410385131836
    9. '(A' → logprob: -12.305410385131836
    10. '(V' → logprob: -13.680410385131836

Token 90: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -0.005881629418581724
    2. ')' → logprob: -5.2558817863464355
    3. '[' → logprob: -8.130881309509277
    4. 'at' → logprob: -9.130881309509277
    5. '   ' → logprob: -9.630881309509277
    6. 'MAT' → logprob: -9.880881309509277
    7. 'vec' → logprob: -10.380881309509277
    8. 'vector' → logprob: -11.380881309509277
    9. ')
' → logprob: -11.630881309509277
    10. 'T' → logprob: -11.755881309509277

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004658233083318919
    2. ')
' → logprob: -8.125465393066406
    3. ' )' → logprob: -9.625465393066406
    4. '[' → logprob: -9.875465393066406
    5. '   ' → logprob: -10.000465393066406
    6. ')

' → logprob: -13.375465393066406
    7. '<|end|>' → logprob: -13.750465393066406
    8. ')
' → logprob: -13.875465393066406
    9. ' ' → logprob: -14.250465393066406
    10. ')n' → logprob: -15.125465393066406

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03347475454211235
    2. 'res' → logprob: -4.033474922180176
    3. ' res' → logprob: -4.408474922180176
    4. '    
' → logprob: -6.533474922180176
    5. '	res' → logprob: -7.408474922180176
    6. '
' → logprob: -7.658474922180176
    7. 'result' → logprob: -8.408474922180176
    8. '```' → logprob: -9.158474922180176
    9. ' result' → logprob: -10.158474922180176
    10. '  ' → logprob: -10.658474922180176

Token 93: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2675032317638397
    2. '   ' → logprob: -1.892503261566162
    3. 'res' (adapté à ' res') → logprob: -2.517503261566162
    4. ' result' → logprob: -6.642503261566162
    5. ' return' → logprob: -7.267503261566162
    6. 'result' → logprob: -7.767503261566162
    7. ' n' → logprob: -8.517502784729004
    8. 'return' → logprob: -8.767502784729004
    9. '```' → logprob: -9.142502784729004
    10. 'n' → logprob: -9.267502784729004

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029799552634358406
    2. '=' → logprob: -3.529799461364746
    3. ')' → logprob: -10.404799461364746
    4. '[' → logprob: -12.029799461364746
    5. ' ' → logprob: -12.529799461364746
    6. '   ' → logprob: -12.904799461364746
    7. '  ' → logprob: -13.404799461364746
    8. ']' → logprob: -13.404799461364746
    9. ',' → logprob: -13.779799461364746
    10. '=[]' → logprob: -14.654799461364746

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061976756900548935
    2. ' [' → logprob: -2.811976671218872
    3. '[]' → logprob: -12.061976432800293
    4. '[n' → logprob: -13.436976432800293
    5. '[len' → logprob: -13.936976432800293
    6. ' ' → logprob: -15.061976432800293
    7. ' []' → logprob: -15.436976432800293
    8. '   ' → logprob: -16.31197738647461
    9. '[new' → logprob: -17.31197738647461
    10. '  ' → logprob: -17.31197738647461

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -17.625001907348633
    4. ']' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '۰' → logprob: -19.500001907348633
    7. '[' → logprob: -19.750001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '000' → logprob: -20.250001907348633
    10. '(' → logprob: -20.375001907348633

Token 97: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18439242243766785
    2. ']*' → logprob: -1.8093924522399902
    3. '(n' → logprob: -5.55939245223999
    4. ')' → logprob: -7.68439245223999
    5. '   ' → logprob: -9.184391975402832
    6. ' for' → logprob: -9.809391975402832
    7. ')n' → logprob: -10.309391975402832
    8. 'n' → logprob: -10.434391975402832
    9. ')*' → logprob: -10.559391975402832
    10. ')]' → logprob: -10.809391975402832

Token 98: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -14.75
    3. 'len' → logprob: -18.0
    4. 'vec' → logprob: -18.5
    5. '(n' → logprob: -18.875
    6. '	n' → logprob: -19.25
    7. ')n' → logprob: -19.375
    8. 'vector' → logprob: -20.25
    9. '
' → logprob: -20.875
    10. '```' → logprob: -21.125

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06319136917591095
    2. '   ' → logprob: -2.8131914138793945
    3. ' for' → logprob: -7.6881914138793945
    4. '
' → logprob: -8.188191413879395
    5. '<|end|>' → logprob: -8.563191413879395
    6. 'for' → logprob: -9.313191413879395
    7. '    
' → logprob: -9.313191413879395
    8. '\n' → logprob: -10.313191413879395
    9. '  
' → logprob: -10.813191413879395
    10. '```' → logprob: -11.438191413879395

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20140886306762695
    2. '   ' → logprob: -1.826408863067627
    3. '	for' → logprob: -4.576408863067627
    4. ' for' → logprob: -4.951408863067627
    5. '<|end|>' → logprob: -5.951408863067627
    6. 'for' → logprob: -7.826408863067627
    7. '    
' → logprob: -8.326408386230469
    8. '
' → logprob: -8.576408386230469
    9. '\n' → logprob: -8.576408386230469
    10. '' → logprob: -8.826408386230469

Token 101: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07117418199777603
    2. 'for' (adapté à ' for') → logprob: -2.821174144744873
    3. ' for' → logprob: -4.696174144744873
    4. '	for' → logprob: -10.821174621582031
    5. '
' → logprob: -11.571174621582031
    6. 'def' → logprob: -13.321174621582031
    7. '  ' → logprob: -14.071174621582031
    8. '    
' → logprob: -14.196174621582031
    9. '<|end|>' → logprob: -14.446174621582031
    10. '```' → logprob: -14.571174621582031

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01815907657146454
    2. 'i' → logprob: -4.018158912658691
    3. ' ' → logprob: -11.893158912658691
    4. '	i' → logprob: -14.518158912658691
    5. 'range' → logprob: -14.768158912658691
    6. ' ' → logprob: -15.393158912658691
    7. ' range' → logprob: -15.643158912658691
    8. ' in' → logprob: -15.643158912658691
    9. '_i' → logprob: -15.768158912658691
    10. ' j' → logprob: -15.893158912658691

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007183883571997285
    2. 'in' → logprob: -7.250718593597412
    3. ' ' → logprob: -12.375718116760254
    4. 'n' → logprob: -13.500718116760254
    5. '  ' → logprob: -14.500718116760254
    6. '	in' → logprob: -14.500718116760254
    7. ',' → logprob: -14.625718116760254
    8. '   ' → logprob: -14.750718116760254
    9. 'range' → logprob: -15.500718116760254
    10. '```' → logprob: -16.12571907043457

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023289969190955162
    2. ' range' → logprob: -3.773289918899536
    3. '(range' → logprob: -10.023289680480957
    4. '	range' → logprob: -16.273290634155273
    5. 'n' → logprob: -17.398290634155273
    6. ' xrange' → logprob: -17.773290634155273
    7. '(' → logprob: -18.273290634155273
    8. 'ange' → logprob: -18.773290634155273
    9. '(n' → logprob: -19.023290634155273
    10. ' ' → logprob: -19.398290634155273

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.62501335144043
    3. ' (' → logprob: -12.62501335144043
    4. '(len' → logprob: -14.00001335144043
    5. 'n' → logprob: -16.25001335144043
    6. '(range' → logprob: -16.62501335144043
    7. 'range' → logprob: -17.37501335144043
    8. ' range' → logprob: -18.37501335144043
    9. ' n' → logprob: -19.37501335144043
    10. ')' → logprob: -19.62501335144043

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2817268371582031
    2. '):
' → logprob: -1.5317268371582031
    3. ')' → logprob: -3.656726837158203
    4. '   ' → logprob: -5.781726837158203
    5. '):
' → logprob: -8.906726837158203
    6. ':' → logprob: -9.031726837158203
    7. ' ):' → logprob: -10.156726837158203
    8. ' ' → logprob: -10.406726837158203
    9. '):

' → logprob: -10.656726837158203
    10. '<|end|>' → logprob: -11.156726837158203

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012124951463192701
    2. ' for' → logprob: -7.1262125968933105
    3. '   ' → logprob: -8.001212120056152
    4. 'for' → logprob: -10.626212120056152
    5. '<|end|>' → logprob: -11.126212120056152
    6. 'n' → logprob: -11.751212120056152
    7. ' ' → logprob: -11.876212120056152
    8. ':' → logprob: -12.751212120056152
    9. ',' → logprob: -13.251212120056152
    10. '):
' → logprob: -13.501212120056152

Token 108: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6605976819992065
    2. ' res' → logprob: -1.6605976819992065
    3. 's' (adapté à ' s') → logprob: -2.035597801208496
    4. '       ' → logprob: -2.285597801208496
    5. 'res' → logprob: -3.410597801208496
    6. ' for' → logprob: -3.785597801208496
    7. 'for' → logprob: -5.660597801208496
    8. '   ' → logprob: -6.785597801208496
    9. ' j' → logprob: -8.535597801208496
    10. ' ' → logprob: -9.035597801208496

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011052182875573635
    2. '=' → logprob: -4.511052131652832
    3. ' ' → logprob: -12.511052131652832
    4. ' +=' → logprob: -15.386052131652832
    5. '  ' → logprob: -16.13605308532715
    6. '   ' → logprob: -16.26105308532715
    7. ' =
' → logprob: -16.51105308532715
    8. '    ' → logprob: -16.63605308532715
    9. ' ' → logprob: -17.01105308532715
    10. '	' → logprob: -17.51105308532715

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364662081003189
    2. ' ' → logprob: -3.408646583557129
    3. '   ' → logprob: -15.033646583557129
    4. '<|end|>' → logprob: -15.783646583557129
    5. 'sum' → logprob: -15.908646583557129
    6. '(' → logprob: -16.158647537231445
    7. ' sum' → logprob: -16.283647537231445
    8. ' (' → logprob: -17.783647537231445
    9. ' ' → logprob: -17.908647537231445
    10. '  ' → logprob: -17.908647537231445

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -21.75002098083496
    4. '۰' → logprob: -21.87502098083496
    5. '(' → logprob: -22.00002098083496
    6. 'sum' → logprob: -22.12502098083496
    7. '  ' → logprob: -22.25002098083496
    8. '=' → logprob: -22.37502098083496
    9. '000' → logprob: -22.87502098083496
    10. '00' → logprob: -23.12502098083496

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16530627012252808
    2. '       ' → logprob: -2.415306329727173
    3. '<|end|>' → logprob: -2.790306329727173
    4. '<|end|>' → logprob: -7.290306091308594
    5. ' for' → logprob: -7.665306091308594
    6. '
' → logprob: -9.040306091308594
    7. '        
' → logprob: -9.665306091308594
    8. '' → logprob: -9.665306091308594
    9. 'for' → logprob: -9.665306091308594
    10. '	' → logprob: -10.665306091308594

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025237731635570526
    2. '<|end|>' → logprob: -3.900237798690796
    3. ' for' → logprob: -6.150237560272217
    4. '
' → logprob: -6.275237560272217
    5. '	' → logprob: -8.150238037109375
    6. '<|end|>' → logprob: -8.775238037109375
    7. '	for' → logprob: -9.650238037109375
    8. '   ' → logprob: -9.900238037109375
    9. 'for' → logprob: -10.025238037109375
    10. ',' → logprob: -11.025238037109375

Token 114: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31633028388023376
    2. '       ' → logprob: -1.9413303136825562
    3. ' for' → logprob: -2.0663301944732666
    4. '   ' → logprob: -6.941330432891846
    5. 'j' → logprob: -10.441329956054688
    6. 'vec' → logprob: -11.691329956054688
    7. '	for' → logprob: -12.316329956054688
    8. 'mat' → logprob: -12.941329956054688
    9. ' j' → logprob: -13.566329956054688
    10. ' ' → logprob: -13.691329956054688

Token 115: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1602320373058319
    2. 'j' → logprob: -1.9102320671081543
    3. ' ' → logprob: -12.035231590270996
    4. '   ' → logprob: -14.285231590270996
    5. '	j' → logprob: -14.785231590270996
    6. '  ' → logprob: -14.910231590270996
    7. ' k' → logprob: -15.410231590270996
    8. 'k' → logprob: -15.910231590270996
    9. ',j' → logprob: -16.035232543945312
    10. '_j' → logprob: -16.785232543945312

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02055882103741169
    2. 'in' → logprob: -3.8955588340759277
    3. ',' → logprob: -11.52055835723877
    4. 'range' → logprob: -12.77055835723877
    5. ' ' → logprob: -13.39555835723877
    6. '   ' → logprob: -14.52055835723877
    7. '    ' → logprob: -14.64555835723877
    8. 'import' → logprob: -14.77055835723877
    9. ' ,' → logprob: -15.14555835723877
    10. '	in' → logprob: -15.39555835723877

Token 117: ' MAT' (ID: 47915)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889925688505173
    2. ' range' → logprob: -2.5788991451263428
    3. '(range' → logprob: -11.578899383544922
    4. '	range' → logprob: -16.953899383544922
    5. 'ange' → logprob: -17.828899383544922
    6. ' ' → logprob: -17.828899383544922
    7. ' xrange' → logprob: -17.828899383544922
    8. '   ' → logprob: -19.078899383544922
    9. 'in' → logprob: -19.453899383544922
    10. '  ' → logprob: -19.828899383544922

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.375036239624023
    3. '[n' → logprob: -13.375036239624023
    4. '   ' → logprob: -13.375036239624023
    5. '       ' → logprob: -14.500036239624023
    6. '[I' → logprob: -14.625036239624023
    7. ' [' → logprob: -15.250036239624023
    8. '(i' → logprob: -16.125036239624023
    9. '[j' → logprob: -16.250036239624023
    10. 'range' → logprob: -16.375036239624023

Token 119: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1018577441573143
    2. ']:' → logprob: -2.4768576622009277
    3. ':' → logprob: -4.601857662200928
    4. '       ' → logprob: -6.476857662200928
    5. '):
' → logprob: -7.351857662200928
    6. ']):' → logprob: -8.726858139038086
    7. '   ' → logprob: -8.976858139038086
    8. '           ' → logprob: -9.226858139038086
    9. '}:' → logprob: -9.976858139038086
    10. ' ):' → logprob: -10.101858139038086

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027705247048288584
    2. ' s' → logprob: -6.50277042388916
    3. 's' → logprob: -7.50277042388916
    4. '          ' → logprob: -8.87777042388916
    5. '<|end|>' → logprob: -8.87777042388916
    6. ',' → logprob: -9.25277042388916
    7. '	       ' → logprob: -9.50277042388916
    8. '            ' → logprob: -10.12777042388916
    9. '<|end|>' → logprob: -10.12777042388916
    10. ':' → logprob: -10.37777042388916

Token 121: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04587941616773605
    2. 's' (adapté à ' s') → logprob: -3.920879364013672
    3. '               ' → logprob: -4.295879364013672
    4. '           ' → logprob: -4.545879364013672
    5. '       ' → logprob: -7.670879364013672
    6. '	       ' → logprob: -9.170879364013672
    7. ' ' → logprob: -9.545879364013672
    8. ' ' → logprob: -10.420879364013672
    9. 'a' → logprob: -11.045879364013672
    10. '```' → logprob: -11.170879364013672

Token 122: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020552983507514
    2. '+=' → logprob: -3.89555287361145
    3. ']+=' → logprob: -13.020552635192871
    4. '    ' → logprob: -13.145552635192871
    5. '+' → logprob: -13.270552635192871
    6. ' +' → logprob: -13.520552635192871
    7. '=' → logprob: -13.895552635192871
    8. ' =' → logprob: -14.020552635192871
    9. ' ' → logprob: -14.520552635192871
    10. '        ' → logprob: -14.895552635192871

Token 123: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.4891044497489929
    2. 'j' → logprob: -1.9891045093536377
    3. 'vec' → logprob: -2.1141045093536377
    4. ' j' → logprob: -2.8641045093536377
    5. ' MAT' → logprob: -2.9891045093536377
    6. ' vec' → logprob: -4.114104270935059
    7. 'mat' → logprob: -5.989104270935059
    8. 'M' → logprob: -7.739104270935059
    9. '           ' → logprob: -7.864104270935059
    10. '(j' → logprob: -7.864104270935059

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.209963900502771e-05
    2. '[' → logprob: -9.500092506408691
    3. 'i' → logprob: -11.625092506408691
    4. '[I' → logprob: -12.125092506408691
    5. '[j' → logprob: -13.125092506408691
    6. ' [' → logprob: -15.000092506408691
    7. '<|end|>' → logprob: -15.750092506408691
    8. '<|end|>' → logprob: -16.750091552734375
    9. '```' → logprob: -17.000091552734375
    10. '[row' → logprob: -17.125091552734375

Token 125: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.31454092264175415
    2. '][' → logprob: -1.3145408630371094
    3. '[' → logprob: -7.064540863037109
    4. ']' → logprob: -9.06454086303711
    5. ' [' → logprob: -9.81454086303711
    6. '[i' → logprob: -10.06454086303711
    7. ' ][' → logprob: -10.06454086303711
    8. '       ' → logprob: -10.31454086303711
    9. 'j' → logprob: -10.43954086303711
    10. '   ' → logprob: -10.56454086303711

Token 126: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.3795937522663735e-05
    2. ' j' → logprob: -11.12502384185791
    3. '[j' → logprob: -11.75002384185791
    4. '   ' → logprob: -15.00002384185791
    5. ']' → logprob: -15.75002384185791
    6. 'vec' → logprob: -15.87502384185791
    7. ' ' → logprob: -16.375022888183594
    8. '```' → logprob: -16.375022888183594
    9. '  ' → logprob: -16.625022888183594
    10. '	j' → logprob: -16.750022888183594

Token 127: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6343716979026794
    2. ']*' → logprob: -0.7593716979026794
    3. '*' → logprob: -6.509371757507324
    4. ' *' → logprob: -8.509371757507324
    5. ' ]' → logprob: -9.634371757507324
    6. '[' → logprob: -12.509371757507324
    7. '   ' → logprob: -12.634371757507324
    8. ']*(' → logprob: -13.384371757507324
    9. '']' → logprob: -14.009371757507324
    10. '"]' → logprob: -14.009371757507324

Token 128: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.005235648714005947
    2. ' vec' → logprob: -5.25523567199707
    3. 've' → logprob: -14.25523567199707
    4. 'vector' → logprob: -14.63023567199707
    5. '	vec' → logprob: -15.25523567199707
    6. '(vec' → logprob: -15.38023567199707
    7. '   ' → logprob: -17.00523567199707
    8. ' ' → logprob: -17.38023567199707
    9. 'v' → logprob: -17.75523567199707
    10. '[' → logprob: -18.63023567199707

Token 129: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.000020980834961
    3. 'j' → logprob: -12.750020980834961
    4. ' [' → logprob: -13.625020980834961
    5. '[i' → logprob: -16.12502098083496
    6. '```' → logprob: -16.50002098083496
    7. '(j' → logprob: -16.75002098083496
    8. '[
' → logprob: -17.12502098083496
    9. '
' → logprob: -17.37502098083496
    10. '[js' → logprob: -17.62502098083496

Token 130: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01478950772434473
    2. ' ]' → logprob: -4.264789581298828
    3. ']
' → logprob: -8.514789581298828
    4. '<|end|>' → logprob: -8.514789581298828
    5. '       ' → logprob: -9.139789581298828
    6. '<|end|>' → logprob: -10.014789581298828
    7. ' ' → logprob: -10.764789581298828
    8. ' ]
' → logprob: -11.764789581298828
    9. '   ' → logprob: -11.764789581298828
    10. '}' → logprob: -12.139789581298828

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07076431810855865
    2. '
' → logprob: -2.6957643032073975
    3. '
' → logprob: -8.445764541625977
    4. ' s' → logprob: -8.945764541625977
    5. ' 
' → logprob: -9.070764541625977
    6. '           ' → logprob: -9.320764541625977
    7. ' return' → logprob: -9.570764541625977
    8. '   ' → logprob: -9.820764541625977
    9. '        
' → logprob: -10.070764541625977
    10. '  
' → logprob: -10.320764541625977

Token 132: ' res' (ID: 694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42565473914146423
    2. '   ' → logprob: -1.6756547689437866
    3. '       ' → logprob: -2.300654649734497
    4. 'res' (adapté à ' res') → logprob: -3.425654649734497
    5. ' res' → logprob: -3.800654649734497
    6. ' return' → logprob: -6.550654888153076
    7. 'return' → logprob: -6.675654888153076
    8. '
' → logprob: -7.800654888153076
    9. ' 
' → logprob: -8.425654411315918
    10. '    
' → logprob: -8.425654411315918

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.250020027160645
    3. '[I' → logprob: -12.375020027160645
    4. ' [' → logprob: -13.750020027160645
    5. '[j' → logprob: -14.125020027160645
    6. '=' → logprob: -14.500020027160645
    7. '```' → logprob: -15.625020027160645
    8. '\[' → logprob: -15.750020027160645
    9. 'i' → logprob: -15.875020027160645
    10. '.append' → logprob: -16.25002098083496

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00542383873835206
    2. '=' → logprob: -5.3804240226745605
    3. ' =' → logprob: -7.6304240226745605
    4. ' ]' → logprob: -8.630423545837402
    5. ']=' → logprob: -9.130423545837402
    6. ')' → logprob: -11.005423545837402
    7. ']+=' → logprob: -11.255423545837402
    8. ' +=' → logprob: -14.630423545837402
    9. '+=' → logprob: -14.630423545837402
    10. '}' → logprob: -15.380423545837402

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. ' +=' → logprob: -15.075940132141113
    4. '=s' → logprob: -15.450940132141113
    5. ' ' → logprob: -16.200939178466797
    6. '+=' → logprob: -16.825939178466797
    7. ' =)' → logprob: -17.950939178466797
    8. ' =
' → logprob: -18.200939178466797
    9. '＝' → logprob: -19.075939178466797
    10. 's' → logprob: -19.450939178466797

Token 136: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.22541965544223785
    2. 's' → logprob: -1.6004196405410767
    3. '(s' → logprob: -12.100419998168945
    4. ' ' → logprob: -14.475419998168945
    5. '	s' → logprob: -15.350419998168945
    6. '_s' → logprob: -15.600419998168945
    7. ' (' → logprob: -15.600419998168945
    8. '`s' → logprob: -15.850419998168945
    9. ' ' → logprob: -16.475419998168945
    10. '(' → logprob: -16.600419998168945

Token 137: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04300958290696144
    2. '%' → logprob: -3.1680095195770264
    3. ' ' → logprob: -12.543009757995605
    4. ' %=' → logprob: -13.168009757995605
    5. ' ' → logprob: -13.168009757995605
    6. ')' → logprob: -13.293009757995605
    7. ' %#' → logprob: -14.918009757995605
    8. '<|end|>' → logprob: -15.293009757995605
    9. ')%' → logprob: -15.418009757995605
    10. ' %
' → logprob: -16.79300880432129

Token 138: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.12699046730995178
    2. 'M' → logprob: -2.126990556716919
    3. ' ' → logprob: -9.87699031829834
    4. '`' → logprob: -12.87699031829834
    5. ' ' → logprob: -13.12699031829834
    6. ' (' → logprob: -13.37699031829834
    7. '(' → logprob: -14.12699031829834
    8. '(M' → logprob: -14.12699031829834
    9. ''' → logprob: -14.37699031829834
    10. ')' → logprob: -14.62699031829834

Token 139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04616174474358559
    2. '
' → logprob: -3.171161651611328
    3. ' return' → logprob: -6.546161651611328
    4. 'return' → logprob: -6.796161651611328
    5. '	return' → logprob: -7.921161651611328
    6. '    
' → logprob: -9.421161651611328
    7. '<|end|>' → logprob: -9.421161651611328
    8. '
' → logprob: -10.421161651611328
    9. '       ' → logprob: -11.296161651611328
    10. '  
' → logprob: -12.296161651611328

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02206900343298912
    2. ' return' → logprob: -4.272068977355957
    3. 'return' → logprob: -5.272068977355957
    4. '
' → logprob: -6.397068977355957
    5. '	return' → logprob: -6.897068977355957
    6. ' ' → logprob: -10.147068977355957
    7. '    
' → logprob: -11.647068977355957
    8. ':return' → logprob: -12.147068977355957
    9. '       ' → logprob: -12.897068977355957
    10. '  ' → logprob: -13.022068977355957

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24829165637493134
    2. '   ' → logprob: -1.9982916116714478
    3. ' return' → logprob: -2.4982917308807373
    4. '
' → logprob: -6.373291492462158
    5. ' ' → logprob: -8.623291969299316
    6. '	return' → logprob: -8.748291969299316
    7. '    
' → logprob: -11.373291969299316
    8. '  ' → logprob: -12.498291969299316
    9. '```' → logprob: -12.498291969299316
    10. ' 
' → logprob: -12.873291969299316

Token 142: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.615255839889869e-05
    2. ' res' → logprob: -9.250096321105957
    3. '(res' → logprob: -20.12509536743164
    4. '	res' → logprob: -22.12509536743164
    5. '[' → logprob: -23.00009536743164
    6. '$res' → logprob: -23.87509536743164
    7. 're' → logprob: -24.25009536743164
    8. '   ' → logprob: -24.37509536743164
    9. 'r' → logprob: -24.87509536743164
    10. ' ' → logprob: -25.37509536743164

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2202377319335938
    2. ',' → logprob: -1.5952377319335938
    3. 'for' → logprob: -2.2202377319335938
    4. '<|end|>' → logprob: -2.3452377319335938
    5. ')' → logprob: -2.7202377319335938
    6. 'def' → logprob: -3.2202377319335938
    7. ']' → logprob: -3.4702377319335938
    8. '.' → logprob: -3.8452377319335938
    9. '   ' → logprob: -3.8452377319335938
    10. '[]' → logprob: -3.8452377319335938

Token 145: ' mat' (ID: 2450)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.751446008682251
    2. ' mat' → logprob: -0.876446008682251
    3. ' matrix' → logprob: -3.876446008682251
    4. ' mod' → logprob: -4.001445770263672
    5. 'mat' → logprob: -4.001445770263672
    6. ' pow' → logprob: -4.126445770263672
    7. ' fast' → logprob: -4.501445770263672
    8. 'main' → logprob: -4.751445770263672
    9. ' solve' → logprob: -5.126445770263672
    10. ' fib' → logprob: -5.626445770263672

Token 146: '_pow' (ID: 160965)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.015451394952833652
    2. '_vec' → logprob: -4.515451431274414
    3. '_mat' → logprob: -5.765451431274414
    4. '_add' → logprob: -7.515451431274414
    5. '_pow' → logprob: -7.515451431274414
    6. '_mult' → logprob: -9.515451431274414
    7. 'mul' → logprob: -9.890451431274414
    8. 'def' → logprob: -11.640451431274414
    9. '_def' → logprob: -11.765451431274414
    10. '_' → logprob: -12.515451431274414

Token 147: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.003995411563664675
    2. '(' → logprob: -6.253995418548584
    3. '(mat' → logprob: -6.253995418548584
    4. '(Mat' → logprob: -9.253994941711426
    5. '(matrix' → logprob: -10.753994941711426
    6. ' (' → logprob: -10.878994941711426
    7. '(A' → logprob: -13.003994941711426
    8. '(Matrix' → logprob: -13.378994941711426
    9. '(m' → logprob: -13.753994941711426
    10. '(
' → logprob: -15.503994941711426

Token 148: 'AT' (ID: 1228)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.613075315952301
    2. '(M' → logprob: -1.2380752563476562
    3. 'AT' → logprob: -2.1130752563476562
    4. '(' → logprob: -3.6130752563476562
    5. '(mat' → logprob: -4.738075256347656
    6. '(A' → logprob: -5.238075256347656
    7. '_at' → logprob: -6.988075256347656
    8. ',' → logprob: -7.113075256347656
    9. 'A' → logprob: -7.238075256347656
    10. '(Mat' → logprob: -7.613075256347656

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. ' ,' → logprob: -10.125045776367188
    3. ',M' → logprob: -12.125045776367188
    4. '   ' → logprob: -16.125045776367188
    5. '(mat' → logprob: -17.375045776367188
    6. '

' → logprob: -17.500045776367188
    7. '(M' → logprob: -17.750045776367188
    8. ',m' → logprob: -17.875045776367188
    9. '‌,' → logprob: -18.000045776367188
    10. ',
' → logprob: -18.000045776367188

Token 150: ' power' (ID: 3470)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4786548614501953
    2. 'exp' → logprob: -1.3536548614501953
    3. ' k' → logprob: -3.6036548614501953
    4. 'n' → logprob: -3.9786548614501953
    5. 'power' → logprob: -3.9786548614501953
    6. 'pow' → logprob: -4.103654861450195
    7. 'ex' → logprob: -4.478654861450195
    8. 'p' → logprob: -4.603654861450195
    9. 'e' → logprob: -4.978654861450195
    10. ' exp' → logprob: -4.978654861450195

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018685187387745827
    2. ' ,' → logprob: -8.625186920166016
    3. '):' → logprob: -12.250186920166016
    4. '   ' → logprob: -13.625186920166016
    5. ',M' → logprob: -14.250186920166016
    6. ')' → logprob: -15.750186920166016
    7. '):
' → logprob: -16.500186920166016
    8. '_,' → logprob: -16.500186920166016
    9. ',
' → logprob: -16.875186920166016
    10. ' ' → logprob: -16.875186920166016

Token 152: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.04864436760544777
    2. 'M' → logprob: -3.0486443042755127
    3. ' ' → logprob: -10.173644065856934
    4. '   ' → logprob: -11.798644065856934
    5. 'mod' → logprob: -12.798644065856934
    6. ' mod' → logprob: -12.923644065856934
    7. '  ' → logprob: -13.548644065856934
    8. ' modulus' → logprob: -14.111144065856934
    9. '	M' → logprob: -14.361144065856934
    10. 'MOD' → logprob: -14.611144065856934

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004898841143585742
    2. '):
' → logprob: -7.625489711761475
    3. '):
' → logprob: -14.125490188598633
    4. ')' → logprob: -14.625490188598633
    5. ' ):' → logprob: -14.750490188598633
    6. ':' → logprob: -15.875490188598633
    7. '   ' → logprob: -16.625490188598633
    8. '):

' → logprob: -17.125490188598633
    9. '}:' → logprob: -19.125490188598633
    10. '():' → logprob: -19.625490188598633

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001464508124627173
    2. 'res' → logprob: -7.001464366912842
    3. ' res' → logprob: -8.37646484375
    4. 'result' → logprob: -9.00146484375
    5. 'if' → logprob: -9.62646484375
    6. ' if' → logprob: -9.87646484375
    7. 'n' → logprob: -9.87646484375
    8. 'def' → logprob: -11.12646484375
    9. ' n' → logprob: -11.75146484375
    10. ' result' → logprob: -12.00146484375

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09148173034191132
    2. '   ' → logprob: -2.4664816856384277
    3. ' n' → logprob: -6.091481685638428
    4. 'result' → logprob: -8.466482162475586
    5. 'def' → logprob: -10.716482162475586
    6. 'import' → logprob: -11.341482162475586
    7. 'res' → logprob: -11.716482162475586
    8. 'size' → logprob: -12.091482162475586
    9. '```' → logprob: -12.216482162475586
    10. '
' → logprob: -12.341482162475586

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067170290276408195
    2. '=' → logprob: -5.006717205047607
    3. '=len' → logprob: -14.13171672821045
    4. '   ' → logprob: -14.38171672821045
    5. '=n' → logprob: -16.131717681884766
    6. 'n' → logprob: -16.381717681884766
    7. ' ' → logprob: -17.131717681884766
    8. ' =
' → logprob: -17.256717681884766
    9. 'def' → logprob: -18.131717681884766
    10. ',' → logprob: -18.381717681884766

Token 157: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.474081814289093
    2. ' len' → logprob: -0.974081814289093
    3. '(len' → logprob: -12.474081993103027
    4. '[len' → logprob: -14.724081993103027
    5. '=len' → logprob: -15.224081993103027
    6. '	len' → logprob: -15.849081993103027
    7. ' ' → logprob: -16.22408103942871
    8. '   ' → logprob: -17.34908103942871
    9. 'n' → logprob: -17.47408103942871
    10. ',len' → logprob: -17.72408103942871

Token 158: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -9.625066757202148
    3. '(A' → logprob: -15.000066757202148
    4. '(Mat' → logprob: -15.875066757202148
    5. '(S' → logprob: -16.87506675720215
    6. '(m' → logprob: -17.00006675720215
    7. '(
' → logprob: -17.00006675720215
    8. '((' → logprob: -17.12506675720215
    9. '(mat' → logprob: -17.12506675720215
    10. '(C' → logprob: -17.25006675720215

Token 159: 'AT' (ID: 1228)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.1084669977426529
    2. 'MAT' → logprob: -2.3584671020507812
    3. 'AT' → logprob: -5.108467102050781
    4. ')' → logprob: -6.233467102050781
    5. ')
' → logprob: -9.983467102050781
    6. '[' → logprob: -10.483467102050781
    7. 'M' → logprob: -10.608467102050781
    8. '(' → logprob: -11.233467102050781
    9. '(mat' → logprob: -11.358467102050781
    10. '(Mat' → logprob: -11.483467102050781

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04864482209086418
    2. ')
' → logprob: -3.048644781112671
    3. '   ' → logprob: -10.42364501953125
    4. ' )' → logprob: -11.04864501953125
    5. ' )
' → logprob: -12.67364501953125
    6. ')
' → logprob: -12.79864501953125
    7. ')n' → logprob: -12.79864501953125
    8. ')

' → logprob: -13.04864501953125
    9. 'n' → logprob: -15.79864501953125
    10. ' ' → logprob: -15.79864501953125

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07474619150161743
    2. 'res' → logprob: -2.9497461318969727
    3. ' res' → logprob: -4.324746131896973
    4. 'result' → logprob: -5.199746131896973
    5. ' result' → logprob: -7.449746131896973
    6. 'def' → logprob: -8.449746131896973
    7. '
' → logprob: -10.074746131896973
    8. '    
' → logprob: -10.449746131896973
    9. '```' → logprob: -11.074746131896973
    10. 'mat' → logprob: -11.824746131896973

Token 162: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.49420973658561707
    2. 'result' → logprob: -1.3692097663879395
    3. ' res' → logprob: -2.4942097663879395
    4. ' result' → logprob: -3.3692097663879395
    5. '   ' → logprob: -4.1192097663879395
    6. 'identity' → logprob: -6.8692097663879395
    7. '    
' → logprob: -7.8692097663879395
    8. ' identity' → logprob: -7.8692097663879395
    9. '#' (adapté à ' #') → logprob: -8.244209289550781
    10. 'I' → logprob: -9.244209289550781

Token 163: ' Identity' (ID: 47739)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4110725224018097
    2. 'res' → logprob: -1.5360724925994873
    3. ' result' → logprob: -2.4110724925994873
    4. ' res' → logprob: -3.5360724925994873
    5. '   ' → logprob: -6.911072731018066
    6. 'def' → logprob: -7.036072731018066
    7. 'if' → logprob: -7.786072731018066
    8. ' if' → logprob: -8.911072731018066
    9. 'identity' → logprob: -8.911072731018066
    10. ' ' → logprob: -9.661072731018066

Token 164: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6116297841072083
    2. '_matrix' → logprob: -1.4866297245025635
    3. ' matrix' → logprob: -1.9866297245025635
    4. ' =' → logprob: -3.1116297245025635
    5. 'mat' → logprob: -3.3616297245025635
    6. '_mat' → logprob: -4.861629962921143
    7. '=' → logprob: -5.861629962921143
    8. '_' → logprob: -6.486629962921143
    9. '   ' → logprob: -7.111629962921143
    10. 'MAT' → logprob: -7.361629962921143

Token 165: ' sparse' (ID: 70531)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7785349488258362
    2. ' I' → logprob: -1.4035348892211914
    3. '   ' → logprob: -1.6535348892211914
    4. 'I' → logprob: -2.7785348892211914
    5. ' res' → logprob: -4.278534889221191
    6. ' identity' → logprob: -4.403534889221191
    7. '
' → logprob: -5.153534889221191
    8. 'res' → logprob: -6.028534889221191
    9. 'identity' → logprob: -6.153534889221191
    10. '=' → logprob: -7.028534889221191

Token 166: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31931090354919434
    2. 'I' → logprob: -2.5693109035491943
    3. '   ' → logprob: -3.1943109035491943
    4. '=' → logprob: -3.4443109035491943
    5. 'identity' → logprob: -3.6943109035491943
    6. 'res' → logprob: -4.319311141967773
    7. ' I' → logprob: -4.444311141967773
    8. 'mat' → logprob: -4.569311141967773
    9. ' identity' → logprob: -4.819311141967773
    10. ' res' → logprob: -4.819311141967773

Token 167: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6780946254730225
    2. 'I' → logprob: -1.6780946254730225
    3. ' identity' → logprob: -2.5530946254730225
    4. 'identity' → logprob: -2.8030946254730225
    5. ' I' → logprob: -2.9280946254730225
    6. '   ' → logprob: -2.9280946254730225
    7. '=' → logprob: -4.428094863891602
    8. ' matrix' → logprob: -4.928094863891602
    9. '
' → logprob: -5.178094863891602
    10. 'id' → logprob: -5.178094863891602

Token 168: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.23282936215400696
    2. 'I' → logprob: -2.3578293323516846
    3. 'identity' → logprob: -2.3578293323516846
    4. 'result' → logprob: -4.357829570770264
    5. '   ' → logprob: -6.732829570770264
    6. ' res' → logprob: -6.982829570770264
    7. 'IDENT' → logprob: -7.107829570770264
    8. 'id' → logprob: -7.232829570770264
    9. ' identity' → logprob: -7.982829570770264
    10. 'ID' → logprob: -7.982829570770264

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019310165662318468
    2. '=' → logprob: -6.251931190490723
    3. ' =[' → logprob: -13.626931190490723
    4. '  ' → logprob: -14.876931190490723
    5. ' ' → logprob: -15.001931190490723
    6. ',' → logprob: -15.751931190490723
    7. ' =
' → logprob: -16.376930236816406
    8. '   ' → logprob: -16.501930236816406
    9. '=[' → logprob: -16.876930236816406
    10. '={}' → logprob: -17.126930236816406

Token 170: ' [' (ID: 723)
  Prédit: '[{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[{' → logprob: -0.0409916415810585
    2. '{' → logprob: -3.7909915447235107
    3. '[' → logprob: -4.04099178314209
    4. ' [{' → logprob: -12.16599178314209
    5. '{id' → logprob: -13.41599178314209
    6. '{i' → logprob: -14.41599178314209
    7. ' {' → logprob: -14.54099178314209
    8. ' [{}' → logprob: -14.66599178314209
    9. '[[' → logprob: -15.04099178314209
    10. '{}
' → logprob: -15.54099178314209

Token 171: 'dict' (ID: 20993)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.015114572830498219
    2. '{}' → logprob: -4.265114784240723
    3. ' {' → logprob: -8.015114784240723
    4. '{i' → logprob: -8.140114784240723
    5. 'dict' → logprob: -8.640114784240723
    6. '   ' → logprob: -9.890114784240723
    7. '{id' → logprob: -10.015114784240723
    8. '{k' → logprob: -11.140114784240723
    9. '{})' → logprob: -11.890114784240723
    10. '({' → logprob: -12.015114784240723

Token 172: '()' (ID: 416)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.41566506028175354
    2. '()' → logprob: -1.4156650304794312
    3. '()]' → logprob: -2.5406651496887207
    4. '([(' → logprob: -4.540665149688721
    5. '((' → logprob: -5.290665149688721
    6. '{' → logprob: -6.915665149688721
    7. '()
' → logprob: -7.790665149688721
    8. '(' → logprob: -8.290664672851562
    9. ']' → logprob: -8.540664672851562
    10. '   ' → logprob: -8.665664672851562

Token 173: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42967429757118225
    2. 'for' → logprob: -1.0546742677688599
    3. '   ' → logprob: -7.80467414855957
    4. '       ' → logprob: -8.67967414855957
    5. ']' → logprob: -8.92967414855957
    6. '[i' → logprob: -9.42967414855957
    7. ')' → logprob: -9.92967414855957
    8. ',' → logprob: -10.05467414855957
    9. '	for' → logprob: -10.55467414855957
    10. '(i' → logprob: -11.55467414855957

Token 174: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5847916007041931
    2. ' _' → logprob: -1.209791660308838
    3. ' range' → logprob: -1.959791660308838
    4. 'range' → logprob: -6.084791660308838
    5. '_range' → logprob: -7.209791660308838
    6. '(range' → logprob: -7.584791660308838
    7. ' i' → logprob: -10.20979118347168
    8. ' ' → logprob: -10.45979118347168
    9. ' in' → logprob: -10.70979118347168
    10. '	range' → logprob: -12.33479118347168

Token 175: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004147018771618605
    2. ' range' → logprob: -6.129147052764893
    3. 'in' → logprob: -6.254147052764893
    4. ' in' → logprob: -10.379146575927734
    5. '(range' → logprob: -12.254146575927734
    6. 'n' → logprob: -14.504146575927734
    7. 'i' → logprob: -15.629146575927734
    8. '_' → logprob: -15.629146575927734
    9. '[' → logprob: -15.879146575927734
    10. '0' → logprob: -16.004146575927734

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00016098834748845547
    2. ' range' → logprob: -8.750161170959473
    3. '(range' → logprob: -12.875161170959473
    4. 'n' → logprob: -17.625160217285156
    5. '	range' → logprob: -18.750160217285156
    6. '```' → logprob: -18.875160217285156
    7. '   ' → logprob: -19.125160217285156
    8. ')' → logprob: -19.375160217285156
    9. ' ' → logprob: -19.750160217285156
    10. '(n' → logprob: -19.750160217285156

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.253090865968261e-06
    2. 'n' → logprob: -11.625009536743164
    3. '(' → logprob: -15.375009536743164
    4. ' (' → logprob: -16.750009536743164
    5. ')n' → logprob: -20.500009536743164
    6. ' n' → logprob: -20.875009536743164
    7. '(
' → logprob: -21.250009536743164
    8. '(len' → logprob: -21.500009536743164
    9. '	n' → logprob: -21.875009536743164
    10. '((' → logprob: -21.875009536743164

Token 178: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00028660334646701813
    2. ')]
' → logprob: -8.250287055969238
    3. ']' → logprob: -11.125287055969238
    4. ')' → logprob: -11.875287055969238
    5. ')]

' → logprob: -14.125287055969238
    6. '   ' → logprob: -14.375287055969238
    7. ')]
' → logprob: -14.625287055969238
    8. '       ' → logprob: -15.125287055969238
    9. '}]' → logprob: -15.375287055969238
    10. ' )' → logprob: -15.500287055969238

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6067128777503967
    2. ' for' → logprob: -1.106712818145752
    3. 'for' → logprob: -2.106712818145752
    4. '
' → logprob: -6.106712818145752
    5. '	for' → logprob: -8.73171329498291
    6. '    
' → logprob: -8.98171329498291
    7. ' ' → logprob: -10.98171329498291
    8. '<|end|>' → logprob: -10.98171329498291
    9. '  ' → logprob: -11.60671329498291
    10. ' 
' → logprob: -11.98171329498291

Token 180: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5549967288970947
    2. ' for' → logprob: -1.0549967288970947
    3. '   ' → logprob: -2.5549967288970947
    4. '
' → logprob: -10.554996490478516
    5. '    
' → logprob: -12.429996490478516
    6. '	for' → logprob: -12.429996490478516
    7. 'i' → logprob: -13.179996490478516
    8. ' ' → logprob: -13.679996490478516
    9. '```' → logprob: -14.429996490478516
    10. '  ' → logprob: -14.554996490478516

Token 181: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2520098090171814
    2. ' i' → logprob: -1.5020098686218262
    3. ' range' → logprob: -9.752009391784668
    4. 'range' → logprob: -10.752009391784668
    5. '_' → logprob: -15.002009391784668
    6. ' in' → logprob: -15.252009391784668
    7. '_i' → logprob: -15.377009391784668
    8. '	i' → logprob: -15.752009391784668
    9. ' ' → logprob: -15.877009391784668
    10. 'in' → logprob: -16.252010345458984

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03814292699098587
    2. 'in' → logprob: -3.2881429195404053
    3. ' ' → logprob: -9.663143157958984
    4. ',' → logprob: -10.913143157958984
    5. 'n' → logprob: -11.413143157958984
    6. '[' → logprob: -13.663143157958984
    7. '  ' → logprob: -13.913143157958984
    8. '_' → logprob: -13.913143157958984
    9. '	in' → logprob: -14.163143157958984
    10. ' ,' → logprob: -14.288143157958984

Token 183: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132624924182892
    2. ' range' → logprob: -1.3132624626159668
    3. '(range' → logprob: -14.313262939453125
    4. '	range' → logprob: -15.563262939453125
    5. ' xrange' → logprob: -17.813262939453125
    6. ' ' → logprob: -17.813262939453125
    7. 'ange' → logprob: -19.313262939453125
    8. '```' → logprob: -20.063262939453125
    9. '.range' → logprob: -20.313262939453125
    10. '_range' → logprob: -20.313262939453125

Token 184: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.822646693966817e-06
    2. 'n' → logprob: -11.875007629394531
    3. '(' → logprob: -14.250007629394531
    4. 's' → logprob: -17.50000762939453
    5. 'range' → logprob: -17.87500762939453
    6. ' (' → logprob: -17.87500762939453
    7. '	n' → logprob: -18.00000762939453
    8. ' n' → logprob: -18.25000762939453
    9. '<n' → logprob: -19.87500762939453
    10. '(range' → logprob: -20.00000762939453

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01267186924815178
    2. '):
' → logprob: -4.387671947479248
    3. ']:' → logprob: -9.76267147064209
    4. ')' → logprob: -9.88767147064209
    5. ' ):' → logprob: -10.63767147064209
    6. ':' → logprob: -11.13767147064209
    7. '}:' → logprob: -12.26267147064209
    8. '):
' → logprob: -12.88767147064209
    9. '):

' → logprob: -13.01267147064209
    10. ']):' → logprob: -13.13767147064209

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010254038497805595
    2. ' res' → logprob: -5.13525390625
    3. 'res' → logprob: -5.51025390625
    4. '   ' → logprob: -8.26025390625
    5. '	res' → logprob: -12.13525390625
    6. '	   ' → logprob: -13.26025390625
    7. '           ' → logprob: -13.38525390625
    8. '	' → logprob: -14.13525390625
    9. '(res' → logprob: -14.38525390625
    10. '     ' → logprob: -14.76025390625

Token 187: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0015517598949372768
    2. ' res' → logprob: -6.501551628112793
    3. '       ' → logprob: -10.501551628112793
    4. '   ' → logprob: -10.751551628112793
    5. '	res' → logprob: -14.501551628112793
    6. '           ' → logprob: -16.87655258178711
    7. ' ' → logprob: -18.25155258178711
    8. '_res' → logprob: -18.50155258178711
    9. '(res' → logprob: -18.62655258178711
    10. '  ' → logprob: -19.50155258178711

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. ')[' → logprob: -13.500004768371582
    3. ' [' → logprob: -13.750004768371582
    4. '[' → logprob: -14.125004768371582
    5. '```' → logprob: -14.375004768371582
    6. '[I' → logprob: -14.625004768371582
    7. '][' → logprob: -14.750004768371582
    8. '[][' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.3750057220459
    10. '[user' → logprob: -16.8750057220459

Token 189: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004462812503334135
    2. ']' → logprob: -8.750446319580078
    3. '[i' → logprob: -8.750446319580078
    4. '[' → logprob: -9.250446319580078
    5. ' ][' → logprob: -11.125446319580078
    6. ')[' → logprob: -12.000446319580078
    7. ']={' → logprob: -12.250446319580078
    8. '   ' → logprob: -13.625446319580078
    9. ''][' → logprob: -13.875446319580078
    10. '"][' → logprob: -14.000446319580078

Token 190: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.493430894101039e-05
    2. ' i' → logprob: -9.500075340270996
    3. ')i' → logprob: -19.25007438659668
    4. '	i' → logprob: -20.12507438659668
    5. '_i' → logprob: -21.25007438659668
    6. '=i' → logprob: -21.37507438659668
    7. ')' → logprob: -21.50007438659668
    8. '{i' → logprob: -21.62507438659668
    9. '*i' → logprob: -21.75007438659668
    10. ''i' → logprob: -21.87507438659668

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000548983458429575
    2. ']=' → logprob: -7.625548839569092
    3. ' ]' → logprob: -9.87554931640625
    4. '=' → logprob: -11.62554931640625
    5. ' =' → logprob: -15.37554931640625
    6. ')' → logprob: -15.75054931640625
    7. ']+=' → logprob: -16.50054931640625
    8. '']' → logprob: -16.62554931640625
    9. '1' → logprob: -17.25054931640625
    10. '<|end|>' → logprob: -17.50054931640625

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031797364354133606
    2. ' =' → logprob: -5.753179550170898
    3. ']' → logprob: -13.628179550170898
    4. ']=' → logprob: -14.003179550170898
    5. ')' → logprob: -19.1281795501709
    6. ')=' → logprob: -19.3781795501709
    7. '=

' → logprob: -20.0031795501709
    8. ' ' → logprob: -20.5031795501709
    9. '=}' → logprob: -20.7531795501709
    10. '=
' → logprob: -20.7531795501709

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '１' → logprob: -20.750001907348633
    5. '۱' → logprob: -21.000001907348633
    6. '  ' → logprob: -21.375001907348633
    7. '১' → logprob: -22.000001907348633
    8. '```' → logprob: -22.312501907348633
    9. 'int' → logprob: -22.750001907348633
    10. '       ' → logprob: -22.937501907348633

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.625
    4. '１' → logprob: -21.375
    5. '```' → logprob: -21.625
    6. '۱' → logprob: -21.75
    7. '`' → logprob: -22.125
    8. 'int' → logprob: -22.1875
    9. '  ' → logprob: -22.5
    10. 'pow' → logprob: -22.625

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09548342972993851
    2. '   ' → logprob: -2.8454835414886475
    3. '    
' → logprob: -4.595483303070068
    4. '\n' → logprob: -4.970483303070068
    5. ' 
' → logprob: -5.095483303070068
    6. '<|end|>' → logprob: -5.470483303070068
    7. ' for' → logprob: -6.220483303070068
    8. '  
' → logprob: -6.845483303070068
    9. 'for' → logprob: -7.470483303070068
    10. ' ' → logprob: -7.595483303070068

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07902627438306808
    2. '
' → logprob: -2.829026222229004
    3. ' for' → logprob: -4.704026222229004
    4. '    
' → logprob: -6.079026222229004
    5. ' ' → logprob: -6.579026222229004
    6. ' 
' → logprob: -7.079026222229004
    7. '  
' → logprob: -7.579026222229004
    8. 'def' → logprob: -7.829026222229004
    9. ' while' → logprob: -7.954026222229004
    10. ' power' → logprob: -8.079026222229004

Token 197: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23311540484428406
    2. 'base' (adapté à ' base') → logprob: -2.4831154346466064
    3. 'while' → logprob: -2.6081154346466064
    4. 'mat' → logprob: -4.733115196228027
    5. 'pow' → logprob: -4.733115196228027
    6. 'def' → logprob: -4.858115196228027
    7. 'for' → logprob: -4.858115196228027
    8. 'temp' → logprob: -5.608115196228027
    9. 'p' → logprob: -5.608115196228027
    10. 'MAT' → logprob: -5.983115196228027

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024758970830589533
    2. '=' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.00247573852539
    4. ',' → logprob: -16.37747573852539
    5. ' =
' → logprob: -18.00247573852539
    6. ' =[' → logprob: -18.37747573852539
    7. ' =)' → logprob: -18.75247573852539
    8. '  ' → logprob: -19.87747573852539
    9. ')' → logprob: -20.25247573852539
    10. '.' → logprob: -20.37747573852539

Token 199: ' [' (ID: 723)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.04993028566241264
    2. ' MAT' → logprob: -3.2999303340911865
    3. ' [' → logprob: -5.424930095672607
    4. '[' → logprob: -5.549930095672607
    5. '[M' → logprob: -5.674930095672607
    6. 'mat' → logprob: -10.674930572509766
    7. ' MATR' → logprob: -10.674930572509766
    8. ' ' → logprob: -11.424930572509766
    9. 'M' → logprob: -11.549930572509766
    10. '[MAX' → logprob: -12.549930572509766

Token 200: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.4765370786190033
    2. 'row' → logprob: -0.9765371084213257
    3. '{' → logprob: -6.101537227630615
    4. 'd' → logprob: -8.976536750793457
    5. ' dict' → logprob: -10.351536750793457
    6. 'mat' → logprob: -11.351536750793457
    7. ' row' → logprob: -11.601536750793457
    8. '{}' → logprob: -11.726536750793457
    9. 'dic' → logprob: -11.726536750793457
    10. 'MAT' → logprob: -11.726536750793457

Token 201: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.39272749423980713
    2. '()' → logprob: -1.3927274942398071
    3. '(M' → logprob: -3.3927273750305176
    4. '(mat' → logprob: -3.8927273750305176
    5. '((' → logprob: -5.267727375030518
    6. '(x' → logprob: -5.642727375030518
    7. '(line' → logprob: -5.767727375030518
    8. '(' → logprob: -5.892727375030518
    9. '(elem' → logprob: -6.642727375030518
    10. 'for' → logprob: -6.767727375030518

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10172875970602036
    2. 'for' → logprob: -2.726728677749634
    3. 'enumer' → logprob: -3.726728677749634
    4. '(M' → logprob: -5.601728916168213
    5. ' for' → logprob: -6.726728916168213
    6. '(en' → logprob: -7.851728916168213
    7. 'items' → logprob: -7.851728916168213
    8. '(mat' → logprob: -8.101728439331055
    9. '=' → logprob: -8.226728439331055
    10. '   ' → logprob: -8.351728439331055

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11661425232887268
    2. 'for' → logprob: -2.24161434173584
    3. ')' → logprob: -6.74161434173584
    4. '   ' → logprob: -6.86661434173584
    5. ' in' → logprob: -7.74161434173584
    6. '       ' → logprob: -7.99161434173584
    7. '    ' → logprob: -9.24161434173584
    8. '(mat' → logprob: -9.24161434173584
    9. '[:]' → logprob: -9.36661434173584
    10. '(M' → logprob: -9.36661434173584

Token 204: ' row' (ID: 5225)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.004125419072806835
    2. ' MAT' → logprob: -5.504125595092773
    3. ' row' → logprob: -10.879125595092773
    4. 'row' → logprob: -11.254125595092773
    5. 'M' → logprob: -11.504125595092773
    6. ' ' → logprob: -13.629125595092773
    7. 'range' → logprob: -14.379125595092773
    8. 'mat' → logprob: -14.629125595092773
    9. ' MATR' → logprob: -14.879125595092773
    10. ' range' → logprob: -15.004125595092773

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02975570224225521
    2. 'in' → logprob: -3.5297555923461914
    3. 's' → logprob: -14.029755592346191
    4. '(M' → logprob: -14.029755592346191
    5. ' ' → logprob: -14.154755592346191
    6. ')' → logprob: -14.529755592346191
    7. 'import' → logprob: -14.654755592346191
    8. ']' → logprob: -15.529755592346191
    9. '<|end|>' → logprob: -15.529755592346191
    10. 'In' → logprob: -15.779755592346191

Token 206: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.0006301135290414095
    2. ' MAT' → logprob: -7.375629901885986
    3. 'M' → logprob: -12.875630378723145
    4. ' ' → logprob: -15.000630378723145
    5. ')' → logprob: -16.250629425048828
    6. '(M' → logprob: -16.375629425048828
    7. 'MAD' → logprob: -16.750629425048828
    8. '
' → logprob: -16.875629425048828
    9. 'PAT' → logprob: -17.250629425048828
    10. '   ' → logprob: -17.250629425048828

Token 207: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005812693270854652
    2. '   ' → logprob: -8.000581741333008
    3. ' ]' → logprob: -8.750581741333008
    4. ']
' → logprob: -9.500581741333008
    5. ']

' → logprob: -12.500581741333008
    6. ')' → logprob: -12.875581741333008
    7. ']
' → logprob: -13.125581741333008
    8. ')]' → logprob: -13.500581741333008
    9. '
' → logprob: -14.125581741333008
    10. '()]' → logprob: -14.500581741333008

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028245771303772926
    2. '
' → logprob: -3.653245687484741
    3. ' for' → logprob: -7.40324592590332
    4. 'while' → logprob: -7.90324592590332
    5. '    
' → logprob: -8.15324592590332
    6. ' while' → logprob: -8.27824592590332
    7. 'for' → logprob: -8.27824592590332
    8. '<|end|>' → logprob: -9.02824592590332
    9. ',' → logprob: -11.15324592590332
    10. 'def' → logprob: -12.02824592590332

Token 209: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7198882699012756
    2. 'while' (adapté à ' while') → logprob: -0.7198882699012756
    3. '   ' → logprob: -3.844888210296631
    4. '
' → logprob: -5.719888210296631
    5. ' for' → logprob: -6.719888210296631
    6. 'for' → logprob: -7.844888210296631
    7. '    
' → logprob: -10.219888687133789
    8. ' 
' → logprob: -10.719888687133789
    9. ' power' → logprob: -10.844888687133789
    10. 'power' → logprob: -10.844888687133789

Token 210: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.001504982472397387
    2. 'power' → logprob: -6.501504898071289
    3. '(power' → logprob: -12.876504898071289
    4. 'pow' → logprob: -17.25150489807129
    5. ' ' → logprob: -17.50150489807129
    6. 'Power' → logprob: -18.50150489807129
    7. '_power' → logprob: -18.50150489807129
    8. ' pow' → logprob: -19.62650489807129
    9. ' ' → logprob: -20.25150489807129
    10. '0' → logprob: -21.12650489807129

Token 211: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25194162130355835
    2. '>' → logprob: -1.5019416809082031
    3. ':' → logprob: -11.376941680908203
    4. ' ' → logprob: -15.001941680908203
    5. '&gt' → logprob: -15.001941680908203
    6. ' ' → logprob: -16.001941680908203
    7. '   ' → logprob: -16.876941680908203
    8. 'and' → logprob: -17.001941680908203
    9. ' >
' → logprob: -17.126941680908203
    10. '  ' → logprob: -17.126941680908203

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740770161151886
    2. ' ' → logprob: -0.9740769863128662
    3. ' ' → logprob: -18.099077224731445
    4. '=' → logprob: -18.474077224731445
    5. '  ' → logprob: -18.974077224731445
    6. '1' → logprob: -19.349077224731445
    7. '<|end|>' → logprob: -19.599077224731445
    8. '    ' → logprob: -19.724077224731445
    9. '>' → logprob: -19.849077224731445
    10. '   ' → logprob: -20.099077224731445

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '  ' → logprob: -19.751502990722656
    4. '=' → logprob: -20.751502990722656
    5. '   ' → logprob: -21.626502990722656
    6. ' ' → logprob: -21.626502990722656
    7. '1' → logprob: -21.626502990722656
    8. '۰' → logprob: -21.626502990722656
    9. '```' → logprob: -21.876502990722656
    10. '    ' → logprob: -22.376502990722656

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005780545179732144
    2. ':
' → logprob: -7.500577926635742
    3. ' :' → logprob: -10.875577926635742
    4. '<|end|>' → logprob: -13.625577926635742
    5. '       ' → logprob: -14.000577926635742
    6. ',' → logprob: -14.000577926635742
    7. '   ' → logprob: -14.000577926635742
    8. '<|end|>' → logprob: -14.125577926635742
    9. ':

' → logprob: -14.875577926635742
    10. '):' → logprob: -15.125577926635742

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022076938301324844
    2. ' if' → logprob: -4.1470770835876465
    3. ' 
' → logprob: -6.1470770835876465
    4. '   ' → logprob: -6.2720770835876465
    5. '    ' → logprob: -7.3970770835876465
    6. '        
' → logprob: -7.7720770835876465
    7. ' ' → logprob: -8.647076606750488
    8. 'if' → logprob: -8.772076606750488
    9. '    
' → logprob: -9.522076606750488
    10. '
' → logprob: -9.522076606750488

Token 216: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0806376039981842
    2. 'if' (adapté à ' if') → logprob: -3.5806376934051514
    3. '       ' → logprob: -3.7056376934051514
    4. ' 
' → logprob: -3.9556376934051514
    5. ' ' → logprob: -5.455637454986572
    6. '        ' → logprob: -8.08063793182373
    7. '
' → logprob: -8.33063793182373
    8. '<|end|>' → logprob: -8.33063793182373
    9. '   ' → logprob: -8.70563793182373
    10. '    ' → logprob: -8.83063793182373

Token 217: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.0003758575767278671
    2. '(power' → logprob: -8.000375747680664
    3. 'power' → logprob: -10.250375747680664
    4. ' (' → logprob: -12.500375747680664
    5. ' ' → logprob: -13.750375747680664
    6. ' ' → logprob: -15.625375747680664
    7. ' space' → logprob: -17.000375747680664
    8. ' powers' → logprob: -17.750375747680664
    9. '_power' → logprob: -17.875375747680664
    10. '.power' → logprob: -18.500375747680664

Token 218: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.00118677644059062
    2. '&' → logprob: -6.751186847686768
    3. ' %' → logprob: -11.25118637084961
    4. ' ' → logprob: -13.25118637084961
    5. '%' → logprob: -14.25118637084961
    6. ' ' → logprob: -14.37618637084961
    7. '[' → logprob: -15.12618637084961
    8. ' &
' → logprob: -15.75118637084961
    9. '&nbsp' → logprob: -16.25118637084961
    10. ' &=' → logprob: -17.87618637084961

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602245420217514
    2. ' ' → logprob: -1.9102245569229126
    3. ' ' → logprob: -14.910224914550781
    4. ' (' → logprob: -18.28522491455078
    5. '(' → logprob: -18.66022491455078
    6. '   ' → logprob: -18.78522491455078
    7. '-' → logprob: -18.91022491455078
    8. 'power' → logprob: -19.03522491455078
    9. 'space' → logprob: -19.03522491455078
    10. '```' → logprob: -19.28522491455078

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'power' → logprob: -18.1250057220459
    4. '

' → logprob: -20.5000057220459
    5. '
' → logprob: -20.6250057220459
    6. '(' → logprob: -21.0000057220459
    7. '{' → logprob: -21.1250057220459
    8. 'pow' → logprob: -21.1250057220459
    9. '   ' → logprob: -21.5000057220459
    10. '-' → logprob: -21.7500057220459

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004475816152989864
    2. ':
' → logprob: -5.5044755935668945
    3. ' :' → logprob: -7.8794755935668945
    4. ' ==' → logprob: -12.129475593566895
    5. ' :
' → logprob: -12.504475593566895
    6. '==' → logprob: -12.504475593566895
    7. '=' → logprob: -13.254475593566895
    8. '>' → logprob: -13.504475593566895
    9. ':

' → logprob: -14.004475593566895
    10. '>:' → logprob: -14.754475593566895

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3907695412635803
    2. 'res' → logprob: -2.0157694816589355
    3. ' res' → logprob: -2.0157694816589355
    4. '       ' → logprob: -2.8907694816589355
    5. '
' → logprob: -6.7657694816589355
    6. '   ' → logprob: -9.765769958496094
    7. '	res' → logprob: -10.015769958496094
    8. '	       ' → logprob: -10.265769958496094
    9. '        
' → logprob: -10.390769958496094
    10. '```' → logprob: -10.390769958496094

Token 223: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7029738426208496
    2. ' res' → logprob: -0.7029738426208496
    3. '           ' → logprob: -4.70297384262085
    4. '       ' → logprob: -7.70297384262085
    5. '   ' → logprob: -9.327974319458008
    6. '               ' → logprob: -9.702974319458008
    7. '	res' → logprob: -9.702974319458008
    8. ' ' → logprob: -11.077974319458008
    9. '
' → logprob: -11.202974319458008
    10. '```' → logprob: -13.202974319458008

Token 224: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39640864729881287
    2. ' res' → logprob: -1.1464086771011353
    3. '           ' → logprob: -5.021408557891846
    4. ' base' → logprob: -6.396408557891846
    5. 'base' → logprob: -8.146409034729004
    6. '               ' → logprob: -8.771409034729004
    7. '   ' → logprob: -8.896409034729004
    8. 'temp' → logprob: -8.896409034729004
    9. ' temp' → logprob: -9.146409034729004
    10. ' new' → logprob: -9.396409034729004

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141451060771942
    2. '=' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.576414108276367
    4. '[' → logprob: -16.201414108276367
    5. '[:]' → logprob: -16.326414108276367
    6. ' =[' → logprob: -16.576414108276367
    7. '=[' → logprob: -16.701414108276367
    8. ',' → logprob: -16.701414108276367
    9. 'new' → logprob: -16.826414108276367
    10. '=res' → logprob: -16.951414108276367

Token 226: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.08945998549461365
    2. ' mat' → logprob: -2.4644598960876465
    3. '[' → logprob: -8.714460372924805
    4. '{' → logprob: -8.839460372924805
    5. ' [' → logprob: -10.089460372924805
    6. '	mat' → logprob: -10.464460372924805
    7. '(mat' → logprob: -10.714460372924805
    8. '   ' → logprob: -10.901960372924805
    9. ' ' → logprob: -11.089460372924805
    10. ' {' → logprob: -11.464460372924805

Token 227: '_mul' (ID: 75111)
  Prédit: '_vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.014191831462085247
    2. '_mul' → logprob: -4.264191627502441
    3. '_mat' → logprob: -11.139191627502441
    4. '_pow' → logprob: -12.014191627502441
    5. 'vec' → logprob: -12.764191627502441
    6. 'mul' → logprob: -13.139191627502441
    7. '_mult' → logprob: -14.014191627502441
    8. '_' → logprob: -14.014191627502441
    9. ' _' → logprob: -14.514191627502441
    10. '_vect' → logprob: -14.889191627502441

Token 228: '_sparse' (ID: 189137)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.001177608733996749
    2. 'res' → logprob: -7.126177787780762
    3. ' (' → logprob: -8.126177787780762
    4. '_res' → logprob: -10.626177787780762
    5. '(' → logprob: -11.251177787780762
    6. 'mat' → logprob: -11.626177787780762
    7. ' res' → logprob: -12.001177787780762
    8. '(mat' → logprob: -12.376177787780762
    9. '_mat' → logprob: -12.501177787780762
    10. ',res' → logprob: -12.501177787780762

Token 229: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0006535819848068058
    2. ' (' → logprob: -8.000653266906738
    3. 'res' → logprob: -8.750653266906738
    4. '_res' → logprob: -9.625653266906738
    5. '_sparse' → logprob: -10.125653266906738
    6. '(' → logprob: -11.750653266906738
    7. '_s' → logprob: -12.000653266906738
    8. '_mul' → logprob: -12.125653266906738
    9. 's' → logprob: -12.250653266906738
    10. '(mat' → logprob: -12.500653266906738

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1926163285970688
    2. '_sparse' → logprob: -2.9426162242889404
    3. '_mat' → logprob: -3.0676162242889404
    4. ' ,' → logprob: -3.0676162242889404
    5. ',res' → logprob: -4.4426164627075195
    6. '_,' → logprob: -4.6926164627075195
    7. ',_' → logprob: -5.8176164627075195
    8. '_vec' → logprob: -6.4426164627075195
    9. '_res' → logprob: -6.6926164627075195
    10. '_mul' → logprob: -7.0676164627075195

Token 231: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.17749664187431335
    2. 'base' → logprob: -2.1774966716766357
    3. 'MAT' → logprob: -3.4274966716766357
    4. ' MAT' → logprob: -4.427496433258057
    5. ' mat' → logprob: -6.927496433258057
    6. 'mat' → logprob: -6.927496433258057
    7. '           ' → logprob: -7.427496433258057
    8. 'BASE' → logprob: -7.427496433258057
    9. 'B' → logprob: -7.677496433258057
    10. 'M' → logprob: -8.177496910095215

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1467585265636444
    2. ')' → logprob: -3.271758556365967
    3. ' ,' → logprob: -3.521758556365967
    4. ',res' → logprob: -3.521758556365967
    5. '_,' → logprob: -3.896758556365967
    6. ',_' → logprob: -4.646758556365967
    7. '(res' → logprob: -5.771758556365967
    8. '_sparse' → logprob: -6.521758556365967
    9. '_res' → logprob: -7.021758556365967
    10. ')_' → logprob: -7.646758556365967

Token 233: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14269860088825226
    2. ' M' → logprob: -2.0176985263824463
    3. ')' → logprob: -12.017698287963867
    4. ' ' → logprob: -12.642698287963867
    5. ' lambda' → logprob: -13.017698287963867
    6. 'lambda' → logprob: -13.017698287963867
    7. ' res' → logprob: -13.267698287963867
    8. '   ' → logprob: -13.517698287963867
    9. '  ' → logprob: -13.767698287963867
    10. '    ' → logprob: -13.892698287963867

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08413998782634735
    2. '           ' → logprob: -2.8341400623321533
    3. ')
' → logprob: -4.084139823913574
    4. 'def' → logprob: -6.334139823913574
    5. '       ' → logprob: -6.959139823913574
    6. ',' → logprob: -7.709139823913574
    7. '):
' → logprob: -7.959139823913574
    8. '
' → logprob: -8.209139823913574
    9. ' )' → logprob: -8.459139823913574
    10. '   ' → logprob: -8.959139823913574

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015526875853538513
    2. '
' → logprob: -5.01552677154541
    3. '       ' → logprob: -5.26552677154541
    4. '<|end|>' → logprob: -6.64052677154541
    5. '               ' → logprob: -7.64052677154541
    6. '            
' → logprob: -8.01552677154541
    7. 'def' → logprob: -8.01552677154541
    8. '[' → logprob: -8.51552677154541
    9. '<|end|>' → logprob: -9.01552677154541
    10. '   ' → logprob: -9.14052677154541

Token 236: ' tmp' (ID: 8919)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7509348392486572
    2. '           ' → logprob: -1.2509348392486572
    3. 'res' → logprob: -1.7509348392486572
    4. '       ' → logprob: -2.7509348392486572
    5. 'def' → logprob: -6.125934600830078
    6. '   ' → logprob: -7.250934600830078
    7. ' for' → logprob: -7.375934600830078
    8. ' def' → logprob: -8.875934600830078
    9. 'for' → logprob: -9.000934600830078
    10. '
' → logprob: -9.125934600830078

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006738342344760895
    2. '=' → logprob: -5.006738185882568
    3. '_' → logprob: -12.006738662719727
    4. ' ' → logprob: -12.131738662719727
    5. 's' → logprob: -12.881738662719727
    6. ',' → logprob: -13.131738662719727
    7. ' =
' → logprob: -13.256738662719727
    8. '   ' → logprob: -13.756738662719727
    9. '_res' → logprob: -13.881738662719727
    10. 'res' → logprob: -14.756738662719727

Token 238: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009175215847790241
    2. ' [' → logprob: -4.8841753005981445
    3. '[]' → logprob: -7.2591753005981445
    4. 'mat' → logprob: -8.009175300598145
    5. '[]
' → logprob: -8.509175300598145
    6. '[s' → logprob: -9.384175300598145
    7. '[{' → logprob: -9.634175300598145
    8. '[[' → logprob: -10.384175300598145
    9. ' mat' → logprob: -10.509175300598145
    10. '[m' → logprob: -11.134175300598145

Token 239: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.31357860565185547
    2. '{}' → logprob: -1.3135786056518555
    3. '{' → logprob: -8.438578605651855
    4. 'default' → logprob: -10.188578605651855
    5. '{}
' → logprob: -10.438578605651855
    6. '0' → logprob: -11.313578605651855
    7. ' dict' → logprob: -11.563578605651855
    8. '{})' → logprob: -12.563578605651855
    9. ' {}' → logprob: -12.938578605651855
    10. '{}

' → logprob: -13.563578605651855

Token 240: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013611305505037308
    2. '()]' → logprob: -4.513611316680908
    3. '()
' → logprob: -6.263611316680908
    4. 'for' → logprob: -8.63861083984375
    5. '(res' → logprob: -9.13861083984375
    6. '()]
' → logprob: -9.38861083984375
    7. ']()' → logprob: -9.76361083984375
    8. ' for' → logprob: -10.01361083984375
    9. '(row' → logprob: -10.13861083984375
    10. ']' → logprob: -10.38861083984375

Token 241: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6392810940742493
    2. 'for' → logprob: -0.7642810940742493
    3. ')' → logprob: -5.639281272888184
    4. '           ' → logprob: -6.014281272888184
    5. '               ' → logprob: -8.014281272888184
    6. '	for' → logprob: -9.514281272888184
    7. '()' → logprob: -9.639281272888184
    8. ']' → logprob: -10.139281272888184
    9. '<|end|>' → logprob: -10.139281272888184
    10. '       ' → logprob: -11.014281272888184

Token 242: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0045015690848231316
    2. ' _' → logprob: -5.7545013427734375
    3. ' range' → logprob: -7.3795013427734375
    4. '_range' → logprob: -7.8795013427734375
    5. 'range' → logprob: -8.879501342773438
    6. ' in' → logprob: -9.379501342773438
    7. '_i' → logprob: -9.629501342773438
    8. 'i' → logprob: -11.129501342773438
    9. ' i' → logprob: -12.004501342773438
    10. 'in' → logprob: -12.629501342773438

Token 243: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5433431267738342
    2. 'in' → logprob: -1.0433430671691895
    3. ' in' → logprob: -2.7933430671691895
    4. ' range' → logprob: -5.1683430671691895
    5. '0' → logprob: -12.793343544006348
    6. '(range' → logprob: -13.418343544006348
    7. ' ' → logprob: -13.543343544006348
    8. 'i' → logprob: -13.543343544006348
    9. 'n' → logprob: -13.918343544006348
    10. 'import' → logprob: -14.418343544006348

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151231110095978
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -13.89315128326416
    4. 'n' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.643150329589844
    6. '   ' → logprob: -17.393150329589844
    7. '
' → logprob: -18.143150329589844
    8. '_range' → logprob: -18.143150329589844
    9. '	range' → logprob: -18.143150329589844
    10. '  ' → logprob: -18.268150329589844

Token 245: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39923095703125
    2. 'range' → logprob: -1.14923095703125
    3. ' range' → logprob: -4.89923095703125
    4. '(n' → logprob: -5.39923095703125
    5. ' n' → logprob: -8.39923095703125
    6. '(range' → logprob: -9.64923095703125
    7. '_n' → logprob: -11.64923095703125
    8. '_range' → logprob: -12.39923095703125
    9. '
' → logprob: -12.77423095703125
    10. ' ' → logprob: -13.52423095703125

Token 246: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5002577304840088
    2. ']' → logprob: -1.6252577304840088
    3. ')]' → logprob: -2.000257730484009
    4. ']
' → logprob: -3.375257730484009
    5. ')
' → logprob: -3.875257730484009
    6. ')]
' → logprob: -6.00025749206543
    7. '       ' → logprob: -6.00025749206543
    8. '   ' → logprob: -6.87525749206543
    9. '           ' → logprob: -7.87525749206543
    10. '               ' → logprob: -10.87525749206543

Token 247: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01102601271122694
    2. ' for' → logprob: -5.136025905609131
    3. '           ' → logprob: -5.886025905609131
    4. '	' → logprob: -7.386025905609131
    5. '<|end|>' → logprob: -7.386025905609131
    6. 'for' → logprob: -8.011026382446289
    7. '   ' → logprob: -8.136026382446289
    8. '	       ' → logprob: -8.261026382446289
    9. '	   ' → logprob: -9.886026382446289
    10. '	for' → logprob: -10.136026382446289

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5093984603881836
    2. ' for' → logprob: -1.0093984603881836
    3. '       ' → logprob: -3.3843984603881836
    4. '           ' → logprob: -7.759398460388184
    5. '   ' → logprob: -8.009398460388184
    6. '	for' → logprob: -10.134398460388184
    7. '               ' → logprob: -13.509398460388184
    8. ' ' → logprob: -13.509398460388184
    9. '	       ' → logprob: -13.509398460388184
    10. '	   ' → logprob: -14.009398460388184

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019291093340143561
    2. ' i' → logprob: -6.25192928314209
    3. 'u' → logprob: -15.50192928314209
    4. 'x' → logprob: -16.376928329467773
    5. '	i' → logprob: -16.501928329467773
    6. 'k' → logprob: -16.876928329467773
    7. '_i' → logprob: -17.501928329467773
    8. 'r' → logprob: -18.376928329467773
    9. ' ' → logprob: -19.126928329467773
    10. 'ii' → logprob: -19.626928329467773

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002818789565935731
    2. 'in' → logprob: -5.877818584442139
    3. 'n' → logprob: -12.002819061279297
    4. '0' → logprob: -13.127819061279297
    5. ' ' → logprob: -13.127819061279297
    6. '<|end|>' → logprob: -13.627819061279297
    7. 'range' → logprob: -15.252819061279297
    8. 'import' → logprob: -15.252819061279297
    9. 's' → logprob: -15.377819061279297
    10. ',' → logprob: -15.627819061279297

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -19.375431060791016
    4. '	range' → logprob: -19.500431060791016
    5. '0' → logprob: -19.750431060791016
    6. ' ' → logprob: -20.250431060791016
    7. '
' → logprob: -20.500431060791016
    8. ')' → logprob: -21.000431060791016
    9. 'in' → logprob: -21.250431060791016
    10. '   ' → logprob: -21.375431060791016

Token 252: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4750989079475403
    2. 'n' → logprob: -1.2250988483428955
    3. 'range' → logprob: -2.4750988483428955
    4. ' range' → logprob: -8.225098609924316
    5. '(range' → logprob: -10.850098609924316
    6. ' n' → logprob: -12.475098609924316
    7. '
' → logprob: -15.100098609924316
    8. '   ' → logprob: -15.100098609924316
    9. '<n' → logprob: -15.350098609924316
    10. 'nge' → logprob: -15.475098609924316

Token 253: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28433752059936523
    2. '):' → logprob: -1.4093375205993652
    3. '           ' → logprob: -6.784337520599365
    4. '       ' → logprob: -7.409337520599365
    5. ')' → logprob: -7.659337520599365
    6. ':' → logprob: -7.909337520599365
    7. '               ' → logprob: -8.284337997436523
    8. '):
' → logprob: -8.784337997436523
    9. ':
' → logprob: -9.409337997436523
    10. '   ' → logprob: -10.159337997436523

Token 254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10007261484861374
    2. ' for' → logprob: -2.6000726222991943
    3. '           ' → logprob: -3.9750726222991943
    4. '		       ' → logprob: -7.350072383880615
    5. 'for' → logprob: -7.475072383880615
    6. '	           ' → logprob: -7.600072383880615
    7. '	       ' → logprob: -8.600072860717773
    8. '       ' → logprob: -8.850072860717773
    9. '   ' → logprob: -10.475072860717773
    10. '            ' → logprob: -11.100072860717773

Token 255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03050718829035759
    2. ' for' → logprob: -3.5305070877075195
    3. '           ' → logprob: -7.2805070877075195
    4. '               ' → logprob: -10.53050708770752
    5. '   ' → logprob: -11.28050708770752
    6. '       ' → logprob: -11.40550708770752
    7. 'row' → logprob: -11.53050708770752
    8. 'j' → logprob: -12.53050708770752
    9. 'res' → logprob: -13.78050708770752
    10. ' row' → logprob: -14.03050708770752

Token 256: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00893291737884283
    2. 'j' → logprob: -4.758933067321777
    3. ' k' → logprob: -8.133933067321777
    4. 'r' → logprob: -11.758933067321777
    5. ' j' → logprob: -11.758933067321777
    6. 'ik' → logprob: -13.133933067321777
    7. 'a' → logprob: -13.383933067321777
    8. 'x' → logprob: -13.883933067321777
    9. 'jk' → logprob: -14.383933067321777
    10. 'key' → logprob: -14.633933067321777

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20141538977622986
    2. 'in' → logprob: -1.7014154195785522
    3. ',' → logprob: -14.951415061950684
    4. 'In' → logprob: -15.326415061950684
    5. '               ' → logprob: -15.451415061950684
    6. '```' → logprob: -15.451415061950684
    7. 'to' → logprob: -15.951415061950684
    8. ' ' → logprob: -16.076416015625
    9. '   ' → logprob: -16.326416015625
    10. '	in' → logprob: -16.326416015625

Token 258: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007711516227573156
    2. 'base' → logprob: -7.7507710456848145
    3. ' res' → logprob: -8.000771522521973
    4. ' base' → logprob: -12.375771522521973
    5. 'range' → logprob: -14.125771522521973
    6. '	res' → logprob: -16.250770568847656
    7. '(res' → logprob: -17.125770568847656
    8. 'mat' → logprob: -17.375770568847656
    9. 'ress' → logprob: -17.750770568847656
    10. 're' → logprob: -18.250770568847656

Token 259: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[k' → logprob: -14.500001907348633
    3. 'i' → logprob: -14.750001907348633
    4. '[' → logprob: -15.500001907348633
    5. '[j' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.750001907348633
    7. ' [' → logprob: -16.750001907348633
    8. '[s' → logprob: -17.750001907348633
    9. 's' → logprob: -17.875001907348633
    10. '```' → logprob: -17.875001907348633

Token 260: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3522875905036926
    2. ']:' → logprob: -1.2272875308990479
    3. ']:

' → logprob: -6.352287769317627
    4. ']' → logprob: -6.602287769317627
    5. ']:
' → logprob: -8.352287292480469
    6. ':' → logprob: -8.977287292480469
    7. '].' → logprob: -9.227287292480469
    8. '.keys' → logprob: -10.227287292480469
    9. ']:


' → logprob: -10.352287292480469
    10. '):
' → logprob: -10.352287292480469

Token 261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002457106951624155
    2. '               ' → logprob: -6.752457141876221
    3. ' for' → logprob: -7.377457141876221
    4. '           ' → logprob: -7.877457141876221
    5. '                       ' → logprob: -9.127456665039062
    6. ':' → logprob: -9.502456665039062
    7. 'for' → logprob: -10.377456665039062
    8. ',' → logprob: -10.627456665039062
    9. ':
' → logprob: -11.752456665039062
    10. '		           ' → logprob: -11.877456665039062

Token 262: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.671616792678833
    2. ' for' → logprob: -1.046616792678833
    3. '                   ' → logprob: -2.421616792678833
    4. ' if' → logprob: -3.671616792678833
    5. 'if' → logprob: -4.671616554260254
    6. '                       ' → logprob: -4.921616554260254
    7. 'v' → logprob: -6.046616554260254
    8. ' val' → logprob: -6.421616554260254
    9. 'tmp' → logprob: -7.046616554260254
    10. 'val' → logprob: -7.296616554260254

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4129991829395294
    2. '=' → logprob: -1.162999153137207
    3. '                   ' → logprob: -4.287999153137207
    4. 'k' → logprob: -5.412999153137207
    5. '               ' → logprob: -5.912999153137207
    6. 'for' → logprob: -7.162999153137207
    7. 's' → logprob: -7.412999153137207
    8. 'val' → logprob: -7.537999153137207
    9. '_val' → logprob: -7.537999153137207
    10. '=k' → logprob: -8.162999153137207

Token 264: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.012524022720754147
    2. ' res' → logprob: -4.387524127960205
    3. '   ' → logprob: -12.012523651123047
    4. '                   ' → logprob: -12.137523651123047
    5. '	res' → logprob: -13.637523651123047
    6. '               ' → logprob: -14.262523651123047
    7. '           ' → logprob: -15.137523651123047
    8. ' ' → logprob: -15.762523651123047
    9. '
' → logprob: -15.887523651123047
    10. '  ' → logprob: -16.262523651123047

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.881560041918419e-05
    2. '[k' → logprob: -10.500039100646973
    3. '[' → logprob: -11.750039100646973
    4. 'i' → logprob: -13.250039100646973
    5. '[s' → logprob: -14.125039100646973
    6. ' [' → logprob: -15.750039100646973
    7. '                   ' → logprob: -16.000038146972656
    8. '<|end|>' → logprob: -16.500038146972656
    9. '][' → logprob: -16.625038146972656
    10. 's' → logprob: -16.875038146972656

Token 266: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.16769683361053467
    2. '][' → logprob: -1.9176968336105347
    3. '[i' → logprob: -5.292696952819824
    4. 'k' → logprob: -6.167696952819824
    5. '[' → logprob: -9.167696952819824
    6. ' [' → logprob: -9.917696952819824
    7. 'i' → logprob: -9.917696952819824
    8. ']' → logprob: -10.667696952819824
    9. ' ][' → logprob: -11.542696952819824
    10. '{k' → logprob: -11.542696952819824

Token 267: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -13.875000953674316
    3. '                   ' → logprob: -16.625001907348633
    4. ' ' → logprob: -17.875001907348633
    5. '[k' → logprob: -18.500001907348633
    6. 'i' → logprob: -18.625001907348633
    7. '           ' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '               ' → logprob: -18.875001907348633
    10. '                       ' → logprob: -18.875001907348633

Token 268: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2443087249994278
    2. ']
' → logprob: -1.7443087100982666
    3. '                   ' → logprob: -3.2443087100982666
    4. '               ' → logprob: -6.369308948516846
    5. '           ' → logprob: -7.744308948516846
    6. ' ]' → logprob: -8.869308471679688
    7. '                       ' → logprob: -9.119308471679688
    8. ']*' → logprob: -9.119308471679688
    9. '
' → logprob: -9.244308471679688
    10. '<|end|>' → logprob: -9.869308471679688

Token 269: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002642483450472355
    2. '               ' → logprob: -6.252642631530762
    3. '           ' → logprob: -8.002642631530762
    4. ' for' → logprob: -8.252642631530762
    5. 'for' → logprob: -9.252642631530762
    6. '		           ' → logprob: -11.877642631530762
    7. '<|end|>' → logprob: -12.377642631530762
    8. '       ' → logprob: -13.127642631530762
    9. '   ' → logprob: -13.252642631530762
    10. ',' → logprob: -13.627642631530762

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03854057192802429
    2. '                   ' → logprob: -3.5385406017303467
    3. ' for' → logprob: -4.788540363311768
    4. '               ' → logprob: -7.788540363311768
    5. '           ' → logprob: -11.663540840148926
    6. '                       ' → logprob: -13.538540840148926
    7. 'if' → logprob: -13.788540840148926
    8. '   ' → logprob: -14.913540840148926
    9. 'b' → logprob: -15.038540840148926
    10. '	for' → logprob: -15.163540840148926

Token 271: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04860122874379158
    2. ' j' → logprob: -3.0486011505126953
    3. '   ' → logprob: -11.923601150512695
    4. 'b' → logprob: -13.423601150512695
    5. 'l' → logprob: -13.548601150512695
    6. 'm' → logprob: -13.923601150512695
    7. 'x' → logprob: -14.423601150512695
    8. 'w' → logprob: -14.673601150512695
    9. ' ' → logprob: -14.798601150512695
    10. '    ' → logprob: -15.048601150512695

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0160358939319849
    2. 'in' → logprob: -4.141036033630371
    3. 'In' → logprob: -14.516036033630371
    4. ' ' → logprob: -14.641036033630371
    5. 's' → logprob: -15.516036033630371
    6. 'import' → logprob: -15.641036033630371
    7. ',' → logprob: -16.391035079956055
    8. 'k' → logprob: -17.016035079956055
    9. '	in' → logprob: -17.141035079956055
    10. '```' → logprob: -17.641035079956055

Token 273: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03804229199886322
    2. ' base' → logprob: -3.2880423069000244
    3. '(base' → logprob: -14.538042068481445
    4. ' ' → logprob: -16.413042068481445
    5. 'b' → logprob: -16.538042068481445
    6. 'range' → logprob: -16.913042068481445
    7. '	base' → logprob: -17.413042068481445
    8. '   ' → logprob: -17.788042068481445
    9. '_base' → logprob: -18.163042068481445
    10. 'Base' → logprob: -18.413042068481445

Token 274: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.008129963040119e-06
    2. 'k' → logprob: -12.500003814697266
    3. '[' → logprob: -15.500003814697266
    4. ' [' → logprob: -17.625003814697266
    5. '[i' → logprob: -17.625003814697266
    6. '{k' → logprob: -18.250003814697266
    7. '[j' → logprob: -18.750003814697266
    8. '(k' → logprob: -19.125003814697266
    9. '                   ' → logprob: -19.500003814697266
    10. '[key' → logprob: -19.625003814697266

Token 275: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02355187200009823
    2. ']:
' → logprob: -4.398551940917969
    3. ']' → logprob: -4.523551940917969
    4. ']:

' → logprob: -10.398551940917969
    5. '                   ' → logprob: -10.773551940917969
    6. ']:
' → logprob: -11.148551940917969
    7. ' ]' → logprob: -11.398551940917969
    8. '}:' → logprob: -11.648551940917969
    9. '']:' → logprob: -12.398551940917969
    10. '<|end|>' → logprob: -12.523551940917969

Token 276: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005638532340526581
    2. '                   ' → logprob: -6.005638599395752
    3. ' ' → logprob: -7.255638599395752
    4. '               ' → logprob: -7.255638599395752
    5. '                        ' → logprob: -7.880638599395752
    6. '<|end|>' → logprob: -7.880638599395752
    7. '                        
' → logprob: -8.755638122558594
    8. ',' → logprob: -8.880638122558594
    9. '                               ' → logprob: -8.880638122558594
    10. '                    ' → logprob: -9.130638122558594

Token 277: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.43805065751075745
    2. 'tmp' (adapté à ' tmp') → logprob: -1.813050627708435
    3. '                       ' → logprob: -1.938050627708435
    4. '                           ' → logprob: -3.3130507469177246
    5. ' b' → logprob: -5.688050746917725
    6. '                               ' → logprob: -6.563050746917725
    7. ' v' → logprob: -6.813050746917725
    8. '                   ' → logprob: -7.063050746917725
    9. ' val' → logprob: -7.063050746917725
    10. 'b' → logprob: -7.313050746917725

Token 278: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '][' → logprob: -14.250001907348633
    3. 'i' → logprob: -14.375001907348633
    4. '[' → logprob: -14.875001907348633
    5. '[j' → logprob: -15.500001907348633
    6. '[I' → logprob: -15.875001907348633
    7. ' [' → logprob: -16.500001907348633
    8. '```' → logprob: -16.750001907348633
    9. '[s' → logprob: -17.375001907348633
    10. '
' → logprob: -17.500001907348633

Token 279: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006867990829050541
    2. '[j' → logprob: -5.3818678855896
    3. '].' → logprob: -6.7568678855896
    4. ']' → logprob: -7.3818678855896
    5. '.setdefault' → logprob: -8.131868362426758
    6. 'j' → logprob: -10.006868362426758
    7. ' ][' → logprob: -10.006868362426758
    8. '"][' → logprob: -10.881868362426758
    9. ']][' → logprob: -11.256868362426758
    10. '   ' → logprob: -11.631868362426758

Token 280: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.676981345459353e-06
    2. ' j' → logprob: -12.125005722045898
    3. '[j' → logprob: -16.6250057220459
    4. '	j' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.1250057220459
    6. '                       ' → logprob: -18.2500057220459
    7. '
' → logprob: -18.3750057220459
    8. ']' → logprob: -18.6250057220459
    9. '_j' → logprob: -18.6250057220459
    10. ',j' → logprob: -18.7500057220459

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028541131177917123
    2. ']+=' → logprob: -8.375285148620605
    3. ']=' → logprob: -10.250285148620605
    4. ']=(' → logprob: -11.500285148620605
    5. ' ]' → logprob: -11.750285148620605
    6. ']+' → logprob: -14.875285148620605
    7. '=' → logprob: -14.875285148620605
    8. '"]' → logprob: -15.000285148620605
    9. '']' → logprob: -16.125286102294922
    10. ' =' → logprob: -16.250286102294922

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006023718509823084
    2. ' =' → logprob: -5.13102388381958
    3. '+=' → logprob: -9.381023406982422
    4. ']=' → logprob: -12.756023406982422
    5. ']' → logprob: -13.006023406982422
    6. ']+=' → logprob: -13.131023406982422
    7. '=(' → logprob: -13.756023406982422
    8. 'tmp' → logprob: -13.881023406982422
    9. ' +=' → logprob: -13.881023406982422
    10. '(tmp' → logprob: -15.131023406982422

Token 283: ' (' (ID: 350)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.00412233080714941
    2. ' (' → logprob: -5.629122257232666
    3. '(' → logprob: -7.629122257232666
    4. '(temp' → logprob: -11.629122734069824
    5. '(t' → logprob: -11.879122734069824
    6. '(a' → logprob: -12.504122734069824
    7. '[tmp' → logprob: -13.004122734069824
    8. 'tmp' → logprob: -13.129122734069824
    9. '(txt' → logprob: -13.754122734069824
    10. '
' → logprob: -13.754122734069824

Token 284: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0027018047403544188
    2. ' tmp' → logprob: -6.002701759338379
    3. '(tmp' → logprob: -8.502701759338379
    4. 'a' → logprob: -11.627701759338379
    5. '           ' → logprob: -12.627701759338379
    6. '	tmp' → logprob: -13.127701759338379
    7. 'temp' → logprob: -13.377701759338379
    8. '$tmp' → logprob: -13.752701759338379
    9. '(a' → logprob: -14.002701759338379
    10. '               ' → logprob: -14.252701759338379

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '.get' → logprob: -11.875007629394531
    3. '.setdefault' → logprob: -15.500007629394531
    4. '[' → logprob: -16.37500762939453
    5. 'i' → logprob: -17.25000762939453
    6. '```' → logprob: -17.37500762939453
    7. 'get' → logprob: -17.50000762939453
    8. '[I' → logprob: -18.37500762939453
    9. '[j' → logprob: -18.75000762939453
    10. ' [' → logprob: -19.12500762939453

Token 286: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.034338660538196564
    2. '.get' → logprob: -3.7843387126922607
    3. '[i' → logprob: -4.659338474273682
    4. '][' → logprob: -6.534338474273682
    5. '   ' → logprob: -10.53433895111084
    6. 'get' → logprob: -11.15933895111084
    7. '[j' → logprob: -11.28433895111084
    8. '.' → logprob: -11.90933895111084
    9. ' .' → logprob: -11.90933895111084
    10. ').' → logprob: -12.15933895111084

Token 287: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0001234428636962548
    2. '.get' → logprob: -9.000123023986816
    3. ' get' → logprob: -16.750123977661133
    4. '	get' → logprob: -20.250123977661133
    5. ' ' → logprob: -20.500123977661133
    6. '_get' → logprob: -20.625123977661133
    7. '.' → logprob: -21.250123977661133
    8. '   ' → logprob: -21.750123977661133
    9. '|get' → logprob: -22.000123977661133
    10. 'getitem' → logprob: -22.375123977661133

Token 288: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -6.034592388459714e-06
    2. 'j' → logprob: -12.750005722045898
    3. '[j' → logprob: -13.375005722045898
    4. '(i' → logprob: -14.125005722045898
    5. ' (' → logprob: -15.000005722045898
    6. '(' → logprob: -15.250005722045898
    7. '(k' → logprob: -16.5000057220459
    8. '(
' → logprob: -17.6250057220459
    9. ' j' → logprob: -18.5000057220459
    10. ' ' → logprob: -18.8750057220459

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ' ,' → logprob: -10.375056266784668
    3. '0' → logprob: -10.625056266784668
    4. ',k' → logprob: -15.125056266784668
    5. '(),' → logprob: -15.625056266784668
    6. ')' → logprob: -15.625056266784668
    7. 'None' → logprob: -15.875056266784668
    8. ',None' → logprob: -16.500057220458984
    9. ',
' → logprob: -16.875057220458984
    10. ' ' → logprob: -17.125057220458984

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '                       ' → logprob: -18.000009536743164
    4. '                           ' → logprob: -19.250009536743164
    5. '   ' → logprob: -19.500009536743164
    6. '           ' → logprob: -19.625009536743164
    7. '                               ' → logprob: -20.125009536743164
    8. '                        ' → logprob: -20.125009536743164
    9. '                   ' → logprob: -20.500009536743164
    10. '۰' → logprob: -20.500009536743164

Token 291: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03426148369908333
    2. ')+' → logprob: -3.409261465072632
    3. ' )' → logprob: -8.534261703491211
    4. ' +' → logprob: -8.534261703491211
    5. '+' → logprob: -8.909261703491211
    6. 'a' → logprob: -10.534261703491211
    7. '+a' → logprob: -10.909261703491211
    8. ')+(' → logprob: -11.409261703491211
    9. ']' → logprob: -11.659261703491211
    10. ']+' → logprob: -12.034261703491211

Token 292: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.055052660405635834
    2. ' a' → logprob: -2.9300527572631836
    3. '(a' → logprob: -8.930052757263184
    4. ' (' → logprob: -10.555052757263184
    5. ' ' → logprob: -12.555052757263184
    6. '   ' → logprob: -13.305052757263184
    7. '                   ' → logprob: -13.555052757263184
    8. '	a' → logprob: -13.555052757263184
    9. '                       ' → logprob: -14.055052757263184
    10. '(' → logprob: -14.430052757263184

Token 293: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01814994215965271
    2. ' *' → logprob: -4.0181498527526855
    3. '*object' → logprob: -16.518150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '*b' → logprob: -18.018150329589844
    6. '**' → logprob: -19.518150329589844
    7. '*

' → logprob: -20.268150329589844
    8. '*(' → logprob: -20.518150329589844
    9. ' ' → logprob: -20.643150329589844
    10. '*out' → logprob: -20.768150329589844

Token 294: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.029752222821116447
    2. ' base' → logprob: -3.529752254486084
    3. '(base' → logprob: -13.904751777648926
    4. ' ' → logprob: -15.154751777648926
    5. '	base' → logprob: -15.154751777648926
    6. '   ' → logprob: -15.404751777648926
    7. 'b' → logprob: -17.279752731323242
    8. '_base' → logprob: -17.404752731323242
    9. '  ' → logprob: -17.654752731323242
    10. '           ' → logprob: -17.779752731323242

Token 295: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.226628895296017e-06
    2. 'k' → logprob: -12.000007629394531
    3. '[' → logprob: -14.500007629394531
    4. '<|end|>' → logprob: -15.875007629394531
    5. '[key' → logprob: -16.12500762939453
    6. ' k' → logprob: -17.12500762939453
    7. '[
' → logprob: -17.25000762939453
    8. '[j' → logprob: -17.50000762939453
    9. '(k' → logprob: -18.00000762939453
    10. '{k' → logprob: -18.12500762939453

Token 296: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04412412643432617
    2. '][' → logprob: -3.169124126434326
    3. '[k' → logprob: -7.169124126434326
    4. '[' → logprob: -8.169124603271484
    5. '[i' → logprob: -10.419124603271484
    6. ']' → logprob: -11.294124603271484
    7. ' [' → logprob: -11.419124603271484
    8. 'j' → logprob: -11.794124603271484
    9. '}[' → logprob: -12.419124603271484
    10. ' ][' → logprob: -13.169124603271484

Token 297: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001637300301808864
    2. '[j' → logprob: -9.375164031982422
    3. ' j' → logprob: -9.500164031982422
    4. 'k' → logprob: -12.625164031982422
    5. ' ' → logprob: -15.375164031982422
    6. '   ' → logprob: -15.500164031982422
    7. '                       ' → logprob: -16.375164031982422
    8. '	j' → logprob: -17.000164031982422
    9. '```' → logprob: -17.625164031982422
    10. '       ' → logprob: -17.750164031982422

Token 298: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059433747082948685
    2. ')%' → logprob: -5.255943298339844
    3. ' )' → logprob: -7.255943298339844
    4. '%' → logprob: -12.880943298339844
    5. '   ' → logprob: -15.380943298339844
    6. ')
' → logprob: -16.130943298339844
    7. '))' → logprob: -16.130943298339844
    8. '）' → logprob: -16.755943298339844
    9. ']' → logprob: -17.255943298339844
    10. ' ' → logprob: -17.380943298339844

Token 299: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3987959325313568
    2. ' %' → logprob: -1.1487959623336792
    3. ')' → logprob: -4.523796081542969
    4. ')%' → logprob: -7.023796081542969
    5. '%A' → logprob: -10.273796081542969
    6. '%D' → logprob: -10.648796081542969
    7. '%B' → logprob: -11.023796081542969
    8. ' )' → logprob: -11.398796081542969
    9. '%i' → logprob: -11.898796081542969
    10. '%)' → logprob: -12.648796081542969

Token 300: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0024756586644798517
    2. ' M' → logprob: -6.002475738525391
    3. ' ' → logprob: -18.62747573852539
    4. '   ' → logprob: -19.37747573852539
    5. '```' → logprob: -19.75247573852539
    6. '(M' → logprob: -20.12747573852539
    7. '  ' → logprob: -21.25247573852539
    8. '	M' → logprob: -21.37747573852539
    9. ',M' → logprob: -21.87747573852539
    10. '
' → logprob: -21.87747573852539

Token 301: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35436853766441345
    2. '<|end|>' → logprob: -2.2293684482574463
    3. '               ' → logprob: -2.9793684482574463
    4. '                       ' → logprob: -3.1043684482574463
    5. '                        
' → logprob: -3.4793684482574463
    6. '
' → logprob: -3.4793684482574463
    7. ')' → logprob: -4.479368686676025
    8. '       ' → logprob: -4.854368686676025
    9. '            
' → logprob: -5.729368686676025
    10. '          ' → logprob: -6.354368686676025

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7791387438774109
    2. '
' → logprob: -1.0291388034820557
    3. ' 
' → logprob: -3.1541388034820557
    4. '       ' → logprob: -3.2791388034820557
    5. '                        
' → logprob: -3.6541388034820557
    6. '               ' → logprob: -3.9041388034820557
    7. '        
' → logprob: -4.404138565063477
    8. '                       ' → logprob: -4.529138565063477
    9. '            
' → logprob: -4.904138565063477
    10. '<|end|>' → logprob: -5.029138565063477

Token 303: ' res' (ID: 694)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.2305500507354736
    2. '           ' → logprob: -1.4805500507354736
    3. ' res' → logprob: -1.8555500507354736
    4. ' tmp' → logprob: -1.9805500507354736
    5. 'res' (adapté à ' res') → logprob: -2.8555500507354736
    6. 'power' → logprob: -2.8555500507354736
    7. ' power' → logprob: -2.9805500507354736
    8. '
' → logprob: -4.8555498123168945
    9. '       ' → logprob: -5.9805498123168945
    10. '               ' → logprob: -6.1055498123168945

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687586784362793
    2. ' =' → logprob: -1.136875867843628
    3. ',' → logprob: -12.636876106262207
    4. ' ' → logprob: -15.136876106262207
    5. '    ' → logprob: -15.261876106262207
    6. '[' → logprob: -15.386876106262207
    7. ']' → logprob: -15.511876106262207
    8. '[:]' → logprob: -15.511876106262207
    9. '   ' → logprob: -15.886876106262207
    10. ' =
' → logprob: -16.38687515258789

Token 305: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.10020839422941208
    2. ' tmp' → logprob: -2.350208282470703
    3. '[tmp' → logprob: -14.350208282470703
    4. 'temp' → logprob: -14.725208282470703
    5. '(tmp' → logprob: -14.850208282470703
    6. '	tmp' → logprob: -15.850208282470703
    7. '/tmp' → logprob: -15.975208282470703
    8. '_tmp' → logprob: -16.600208282470703
    9. '$tmp' → logprob: -16.975208282470703
    10. ' ' → logprob: -16.975208282470703

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01752392388880253
    2. 'power' → logprob: -4.767523765563965
    3. '
' → logprob: -5.142523765563965
    4. ' power' → logprob: -6.767523765563965
    5. '        
' → logprob: -7.017523765563965
    6. '           ' → logprob: -7.267523765563965
    7. '<|end|>' → logprob: -8.892523765563965
    8. ',' → logprob: -10.267523765563965
    9. '(power' → logprob: -11.017523765563965
    10. '            
' → logprob: -11.017523765563965

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03548802062869072
    2. 'power' → logprob: -3.5354881286621094
    3. ' power' → logprob: -5.410488128662109
    4. '           ' → logprob: -7.410488128662109
    5. '<|end|>' → logprob: -8.28548812866211
    6. '        
' → logprob: -9.03548812866211
    7. '
' → logprob: -9.16048812866211
    8. '(power' → logprob: -9.28548812866211
    9. '_power' → logprob: -11.16048812866211
    10. '   ' → logprob: -11.41048812866211

Token 308: ' #' (ID: 1069)
  Prédit: ' power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.6342255473136902
    2. '       ' → logprob: -1.259225606918335
    3. 'power' → logprob: -1.759225606918335
    4. ' 
' → logprob: -5.134225368499756
    5. '        
' → logprob: -5.884225368499756
    6. '        ' → logprob: -6.134225368499756
    7. ' ' → logprob: -7.009225368499756
    8. ' ' → logprob: -7.509225368499756
    9. '(power' → logprob: -8.009225845336914
    10. '
' → logprob: -8.259225845336914

Token 309: ' base' (ID: 3611)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.05741352215409279
    2. ' power' → logprob: -2.9324135780334473
    3. 'base' → logprob: -6.682413578033447
    4. '       ' → logprob: -7.807413578033447
    5. 'for' → logprob: -7.932413578033447
    6. '   ' → logprob: -8.307413101196289
    7. ' for' → logprob: -9.557413101196289
    8. ' base' → logprob: -9.682413101196289
    9. '           ' → logprob: -10.557413101196289
    10. ' ' → logprob: -10.682413101196289

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0142874950543046
    2. ' =' → logprob: -4.26428747177124
    3. '*=' → logprob: -9.139287948608398
    4. ',' → logprob: -12.139287948608398
    5. ' <<=' → logprob: -12.139287948608398
    6. ' ' → logprob: -13.139287948608398
    7. ' *=' → logprob: -14.014287948608398
    8. '   ' → logprob: -14.389287948608398
    9. '=
' → logprob: -14.514287948608398
    10. 'pow' → logprob: -14.764287948608398

Token 311: ' mat' (ID: 2450)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07900744676589966
    2. ' [' → logprob: -2.704007387161255
    3. '[tmp' → logprob: -5.204007625579834
    4. 'tmp' → logprob: -5.829007625579834
    5. 'mat' → logprob: -8.079007148742676
    6. ' tmp' → logprob: -10.079007148742676
    7. '[i' → logprob: -10.329007148742676
    8. ' mat' → logprob: -10.579007148742676
    9. '[m' → logprob: -10.704007148742676
    10. ' ' → logprob: -10.704007148742676

Token 312: '_mul' (ID: 75111)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.1286386400461197
    2. '_mul' → logprob: -2.253638744354248
    3. ' =' → logprob: -5.003638744354248
    4. 'pow' → logprob: -5.628638744354248
    5. '[' → logprob: -6.628638744354248
    6. 'base' → logprob: -6.878638744354248
    7. '=' → logprob: -7.003638744354248
    8. '_' → logprob: -8.50363826751709
    9. '   ' → logprob: -8.50363826751709
    10. '[_' → logprob: -8.75363826751709

Token 313: '_sparse' (ID: 189137)
  Prédit: '_sparse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sparse' → logprob: -0.0014539248077198863
    2. 's' → logprob: -6.626453876495361
    3. '_base' → logprob: -11.00145435333252
    4. '(base' → logprob: -11.00145435333252
    5. ' sparse' → logprob: -11.12645435333252
    6. 'Sparse' → logprob: -11.25145435333252
    7. 'base' → logprob: -11.25145435333252
    8. '[' → logprob: -11.50145435333252
    9. '_tmp' → logprob: -11.50145435333252
    10. 'tmp' → logprob: -11.50145435333252

Token 314: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.014593453146517277
    2. '(' → logprob: -4.264593601226807
    3. '(
' → logprob: -8.264593124389648
    4. 'base' → logprob: -9.264593124389648
    5. ' base' → logprob: -9.764593124389648
    6. ' (' → logprob: -11.014593124389648
    7. '[' → logprob: -13.764593124389648
    8. ';base' → logprob: -14.389593124389648
    9. '	base' → logprob: -15.139593124389648
    10. '_base' → logprob: -15.264593124389648

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576276421546936
    2. '(base' → logprob: -0.826276421546936
    3. ' ,' → logprob: -8.576276779174805
    4. '(' → logprob: -9.701276779174805
    5. ')' → logprob: -10.576276779174805
    6. 'base' → logprob: -11.076276779174805
    7. ' base' → logprob: -11.451276779174805
    8. ',
' → logprob: -11.826276779174805
    9. ' (' → logprob: -11.951276779174805
    10. ';base' → logprob: -12.326276779174805

Token 316: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.023248620331287384
    2. ' base' → logprob: -3.7732486724853516
    3. '(base' → logprob: -13.273248672485352
    4. '           ' → logprob: -14.523248672485352
    5. '       ' → logprob: -14.773248672485352
    6. '	base' → logprob: -15.523248672485352
    7. '   ' → logprob: -16.27324867248535
    8. '        ' → logprob: -17.02324867248535
    9. '    ' → logprob: -17.27324867248535
    10. '     ' → logprob: -17.27324867248535

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003301016695331782
    2. ' ,' → logprob: -8.625329971313477
    3. ',M' → logprob: -9.625329971313477
    4. ',
' → logprob: -10.250329971313477
    5. '       ' → logprob: -10.500329971313477
    6. ')' → logprob: -11.625329971313477
    7. '           ' → logprob: -11.875329971313477
    8. ',n' → logprob: -13.125329971313477
    9. '[' → logprob: -13.750329971313477
    10. ')
' → logprob: -14.125329971313477

Token 318: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.12693797051906586
    2. ' M' → logprob: -2.1269378662109375
    3. ' ' → logprob: -12.876937866210938
    4. '       ' → logprob: -13.126937866210938
    5. '    ' → logprob: -13.626937866210938
    6. '   ' → logprob: -13.876937866210938
    7. 'base' → logprob: -14.001937866210938
    8. ' base' → logprob: -14.251937866210938
    9. '        ' → logprob: -14.376937866210938
    10. '[M' → logprob: -15.001937866210938

Token 319: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04463145136833191
    2. '
' → logprob: -3.2946314811706543
    3. '           ' → logprob: -5.169631481170654
    4. '        
' → logprob: -8.044631004333496
    5. '<|end|>' → logprob: -8.669631004333496
    6. '   ' → logprob: -8.794631004333496
    7. '[
' → logprob: -10.294631004333496
    8. '[' → logprob: -10.294631004333496
    9. '```' → logprob: -10.294631004333496
    10. '<|end|>' → logprob: -10.794631004333496

Token 320: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3809664249420166
    2. '       ' → logprob: -1.3809664249420166
    3. '        
' → logprob: -4.2559661865234375
    4. '<|end|>' → logprob: -4.6309661865234375
    5. '```' → logprob: -4.8809661865234375
    6. 'power' → logprob: -4.8809661865234375
    7. '  
' → logprob: -5.1309661865234375
    8. '[' → logprob: -5.6309661865234375
    9. ' power' → logprob: -5.7559661865234375
    10. '	' → logprob: -6.3809661865234375

Token 321: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007734753657132387
    2. 'tmp' (adapté à ' tmp') → logprob: -6.132734775543213
    3. '
' → logprob: -6.382734775543213
    4. '        
' → logprob: -6.632734775543213
    5. '           ' → logprob: -6.757734775543213
    6. '	' → logprob: -7.632734775543213
    7. '[' → logprob: -8.382734298706055
    8. '```' → logprob: -8.507734298706055
    9. '   ' → logprob: -9.257734298706055
    10. '{
' → logprob: -10.382734298706055

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740772247314453
    2. ' =' → logprob: -0.9740772247314453
    3. '=[' → logprob: -15.599077224731445
    4. '[' → logprob: -16.974077224731445
    5. ' ' → logprob: -17.474077224731445
    6. ' =[' → logprob: -17.849077224731445
    7. '=
' → logprob: -18.474077224731445
    8. '＝' → logprob: -18.599077224731445
    9. '   ' → logprob: -18.724077224731445
    10. '=[]' → logprob: -19.349077224731445

Token 323: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052360063418745995
    2. ' [' → logprob: -5.2552361488342285
    3. '[data' → logprob: -13.75523567199707
    4. '[len' → logprob: -15.63023567199707
    5. '[class' → logprob: -15.75523567199707
    6. '[token' → logprob: -16.00523567199707
    7. '[df' → logprob: -16.25523567199707
    8. '[n' → logprob: -16.25523567199707
    9. '[list' → logprob: -16.25523567199707
    10. '[d' → logprob: -16.38023567199707

Token 324: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.786196975852363e-05
    2. ' dict' → logprob: -10.250038146972656
    3. '[' → logprob: -13.000038146972656
    4. '(dict' → logprob: -15.750038146972656
    5. '.dict' → logprob: -17.875038146972656
    6. '=dict' → logprob: -19.250038146972656
    7. '_dict' → logprob: -19.500038146972656
    8. '{' → logprob: -19.625038146972656
    9. '   ' → logprob: -20.000038146972656
    10. 'dic' → logprob: -20.000038146972656

Token 325: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010521204239921644
    2. 'for' → logprob: -9.250104904174805
    3. '()
' → logprob: -12.625104904174805
    4. '()[' → logprob: -12.875104904174805
    5. ' for' → logprob: -13.250104904174805
    6. '()]' → logprob: -14.125104904174805
    7. '[' → logprob: -15.125104904174805
    8. '[]' → logprob: -16.500104904174805
    9. '(for' → logprob: -16.875104904174805
    10. ' ()' → logprob: -17.500104904174805

Token 326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062472764402627945
    2. ' for' → logprob: -2.8124728202819824
    3. '()' → logprob: -7.812472820281982
    4. '[' → logprob: -9.437472343444824
    5. '       ' → logprob: -12.062472343444824
    6. '	for' → logprob: -12.062472343444824
    7. ')' → logprob: -12.562472343444824
    8. '[i' → logprob: -13.187472343444824
    9. '[]' → logprob: -13.937472343444824
    10. '[n' → logprob: -14.812472343444824

Token 327: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.553032628493384e-05
    2. ' in' → logprob: -9.750075340270996
    3. ' _' → logprob: -11.250075340270996
    4. '_n' → logprob: -13.375075340270996
    5. ' range' → logprob: -13.500075340270996
    6. 'range' → logprob: -14.750075340270996
    7. 'in' → logprob: -14.875075340270996
    8. '_range' → logprob: -15.000075340270996
    9. 'n' → logprob: -16.375076293945312
    10. '(n' → logprob: -17.375076293945312

Token 328: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0419598817825317
    2. ' in' → logprob: -1.5419598817825317
    3. 'in' → logprob: -1.5419598817825317
    4. 'range' → logprob: -1.5419598817825317
    5. ' range' → logprob: -5.416959762573242
    6. '_range' → logprob: -7.291959762573242
    7. ' _' → logprob: -8.541959762573242
    8. '(range' → logprob: -10.916959762573242
    9. 'n' → logprob: -12.291959762573242
    10. 'ange' → logprob: -12.791959762573242

Token 329: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10044852644205093
    2. ' range' → logprob: -2.3504486083984375
    3. '_range' → logprob: -8.975448608398438
    4. '(range' → logprob: -9.600448608398438
    5. 'n' → logprob: -10.475448608398438
    6. '_n' → logprob: -11.600448608398438
    7. '_' → logprob: -11.725448608398438
    8. '(n' → logprob: -13.725448608398438
    9. ' _' → logprob: -14.225448608398438
    10. ' n' → logprob: -15.100448608398438

Token 330: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3868957459926605
    2. 'n' → logprob: -1.136895775794983
    3. ' n' → logprob: -10.886896133422852
    4. 'range' → logprob: -12.261896133422852
    5. '(' → logprob: -14.636896133422852
    6. ' (' → logprob: -15.261896133422852
    7. '_n' → logprob: -15.386896133422852
    8. '	n' → logprob: -16.26189613342285
    9. ' range' → logprob: -16.38689613342285
    10. '<n' → logprob: -16.76189613342285

Token 331: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.5113188624382019
    2. ')]' → logprob: -1.5113189220428467
    3. ')' → logprob: -2.3863189220428467
    4. ')
' → logprob: -3.1363189220428467
    5. ']
' → logprob: -3.5113189220428467
    6. '       ' → logprob: -4.886318683624268
    7. ']' → logprob: -5.136318683624268
    8. '   ' → logprob: -8.011319160461426
    9. 'for' → logprob: -8.636319160461426
    10. 'n' → logprob: -9.011319160461426

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49554646015167236
    2. 'for' → logprob: -0.9955464601516724
    3. ' for' → logprob: -3.870546340942383
    4. '	for' → logprob: -8.995546340942383
    5. '           ' → logprob: -9.245546340942383
    6. '   ' → logprob: -9.370546340942383
    7. '```' → logprob: -9.620546340942383
    8. '<|end|>' → logprob: -11.870546340942383
    9. '	' → logprob: -12.495546340942383
    10. ' ' → logprob: -13.245546340942383

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012489237124100327
    2. ' for' → logprob: -6.751248836517334
    3. '       ' → logprob: -9.501249313354492
    4. '   ' → logprob: -12.751249313354492
    5. '	for' → logprob: -14.126249313354492
    6. '```' → logprob: -15.626249313354492
    7. '
' → logprob: -16.626249313354492
    8. 'i' → logprob: -16.876249313354492
    9. ' ' → logprob: -17.001249313354492
    10. '        
' → logprob: -17.501249313354492

Token 334: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004882152716163546
    2. ' i' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. '<|end|>' → logprob: -16.87548828125
    5. '	i' → logprob: -17.62548828125
    6. ' ' → logprob: -17.62548828125
    7. '  ' → logprob: -19.00048828125
    8. '_i' → logprob: -19.00048828125
    9. '<|end|>' → logprob: -19.50048828125
    10. '       ' → logprob: -19.50048828125

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029764382168650627
    2. 'in' → logprob: -3.529764413833618
    3. 'range' → logprob: -11.529764175415039
    4. 'n' → logprob: -12.779764175415039
    5. ' ' → logprob: -15.029764175415039
    6. 'for' → logprob: -15.279764175415039
    7. 'import' → logprob: -15.404764175415039
    8. '[' → logprob: -16.15476417541504
    9. 'i' → logprob: -16.65476417541504
    10. ' range' → logprob: -16.65476417541504

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.630233764648438
    4. 'n' → logprob: -19.255233764648438
    5. '	range' → logprob: -20.630233764648438
    6. ' ' → logprob: -21.380233764648438
    7. ' xrange' → logprob: -21.755233764648438
    8. '   ' → logprob: -23.505233764648438
    9. 'x' → logprob: -23.880233764648438
    10. 'ange' → logprob: -23.880233764648438

Token 337: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04893728718161583
    2. 'n' → logprob: -3.0489373207092285
    3. 'in' → logprob: -8.29893684387207
    4. 'range' → logprob: -9.92393684387207
    5. ' in' → logprob: -10.17393684387207
    6. '(' → logprob: -12.92393684387207
    7. ' n' → logprob: -13.04893684387207
    8. ' range' → logprob: -13.04893684387207
    9. '<n' → logprob: -13.17393684387207
    10. ' (' → logprob: -13.54893684387207

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06610684096813202
    2. '):' → logprob: -3.0661067962646484
    3. ':
' → logprob: -4.566106796264648
    4. ':' → logprob: -5.441106796264648
    5. ']:
' → logprob: -6.816106796264648
    6. 'for' → logprob: -7.566106796264648
    7. '):
' → logprob: -8.316106796264648
    8. '       ' → logprob: -8.566106796264648
    9. '   ' → logprob: -9.066106796264648
    10. ']:' → logprob: -9.066106796264648

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014567819889634848
    2. '       ' → logprob: -7.1264567375183105
    3. 'for' → logprob: -7.8764567375183105
    4. ' for' → logprob: -8.876457214355469
    5. '   ' → logprob: -9.751457214355469
    6. '	       ' → logprob: -9.751457214355469
    7. '		' → logprob: -12.001457214355469
    8. '               ' → logprob: -12.751457214355469
    9. ' ' → logprob: -13.251457214355469
    10. '	for' → logprob: -13.501457214355469

Token 340: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01368116308003664
    2. ' for' → logprob: -5.013680934906006
    3. '           ' → logprob: -5.263680934906006
    4. '       ' → logprob: -6.388680934906006
    5. '   ' → logprob: -9.763681411743164
    6. '               ' → logprob: -11.013681411743164
    7. ' ' → logprob: -12.263681411743164
    8. '	for' → logprob: -13.013681411743164
    9. '```' → logprob: -13.013681411743164
    10. 'k' → logprob: -14.638681411743164

Token 341: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07933828979730606
    2. 'j' → logprob: -2.579338312149048
    3. ' k' → logprob: -8.079338073730469
    4. ' j' → logprob: -8.954338073730469
    5. 'i' → logprob: -11.579338073730469
    6. '   ' → logprob: -17.95433807373047
    7. ' ' → logprob: -18.32933807373047
    8. ' i' → logprob: -18.45433807373047
    9. 'x' → logprob: -18.95433807373047
    10. '	k' → logprob: -19.70433807373047

Token 342: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20141343772411346
    2. ' in' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.076414108276367
    4. 'base' → logprob: -17.076414108276367
    5. '   ' → logprob: -17.576414108276367
    6. 'res' → logprob: -18.076414108276367
    7. '[' → logprob: -18.201414108276367
    8. 'range' → logprob: -18.201414108276367
    9. '       ' → logprob: -18.451414108276367
    10. 'tmp' → logprob: -18.576414108276367

Token 343: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.011052536778151989
    2. ' base' → logprob: -4.51105260848999
    3. 'range' → logprob: -12.386052131652832
    4. ' range' → logprob: -15.261052131652832
    5. '(base' → logprob: -15.511052131652832
    6. '	base' → logprob: -17.63605308532715
    7. ' ' → logprob: -17.76105308532715
    8. '   ' → logprob: -18.26105308532715
    9. '_base' → logprob: -19.88605308532715
    10. ';base' → logprob: -20.13605308532715

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001415618316968903
    2. ':' → logprob: -9.125141143798828
    3. ':
' → logprob: -10.875141143798828
    4. '           ' → logprob: -12.375141143798828
    5. '[' → logprob: -13.000141143798828
    6. '       ' → logprob: -13.625141143798828
    7. '```' → logprob: -13.875141143798828
    8. '[j' → logprob: -14.000141143798828
    9. 'i' → logprob: -14.250141143798828
    10. '[k' → logprob: -14.500141143798828

Token 345: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.07957886159420013
    2. ']:' → logprob: -2.5795788764953613
    3. ']' → logprob: -7.954578876495361
    4. ']:

' → logprob: -8.829578399658203
    5. ']:
' → logprob: -9.204578399658203
    6. ':' → logprob: -10.329578399658203
    7. '       ' → logprob: -10.829578399658203
    8. ':
' → logprob: -11.079578399658203
    9. '           ' → logprob: -12.454578399658203
    10. ']:


' → logprob: -12.829578399658203

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008066733367741108
    2. 'a' → logprob: -5.008066654205322
    3. '           ' → logprob: -6.758066654205322
    4. '                   ' → logprob: -9.38306713104248
    5. ' a' → logprob: -10.00806713104248
    6. '```' → logprob: -11.00806713104248
    7. 'b' → logprob: -11.75806713104248
    8. '              ' → logprob: -12.25806713104248
    9. '                       ' → logprob: -12.38306713104248
    10. '   ' → logprob: -12.50806713104248

Token 347: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01923057623207569
    2. ' a' → logprob: -4.269230365753174
    3. '               ' → logprob: -5.519230365753174
    4. '           ' → logprob: -7.144230365753174
    5. '                   ' → logprob: -8.394230842590332
    6. 'b' → logprob: -11.019230842590332
    7. '```' → logprob: -12.019230842590332
    8. '                       ' → logprob: -13.019230842590332
    9. '   ' → logprob: -13.144230842590332
    10. '       ' → logprob: -14.644230842590332

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759434103965759
    2. ' =' → logprob: -0.8259434103965759
    3. 'a' → logprob: -12.575942993164062
    4. '   ' → logprob: -15.575942993164062
    5. ' ' → logprob: -16.200942993164062
    6. '           ' → logprob: -16.950942993164062
    7. '       ' → logprob: -17.075942993164062
    8. ':' → logprob: -17.075942993164062
    9. '    ' → logprob: -17.575942993164062
    10. ',' → logprob: -17.700942993164062

Token 349: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5759442448616028
    2. 'base' → logprob: -0.8259442448616028
    3. '(base' → logprob: -12.825943946838379
    4. '	base' → logprob: -13.325943946838379
    5. ' ' → logprob: -15.325943946838379
    6. ';base' → logprob: -16.825944900512695
    7. '_base' → logprob: -17.200944900512695
    8. '           ' → logprob: -17.325944900512695
    9. '   ' → logprob: -17.450944900512695
    10. '/base' → logprob: -18.200944900512695

Token 350: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[k' → logprob: -13.875000953674316
    3. 'i' → logprob: -16.375001907348633
    4. '[' → logprob: -17.500001907348633
    5. '[I' → logprob: -19.125001907348633
    6. '[j' → logprob: -20.125001907348633
    7. '[u' → logprob: -20.375001907348633
    8. '<|end|>' → logprob: -20.625001907348633
    9. ' [' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 351: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05024447664618492
    2. '[k' → logprob: -3.0502445697784424
    3. '[i' → logprob: -6.675244331359863
    4. '[j' → logprob: -8.425244331359863
    5. ']' → logprob: -9.425244331359863
    6. '[' → logprob: -9.550244331359863
    7. ' ][' → logprob: -11.550244331359863
    8. 'k' → logprob: -12.925244331359863
    9. '   ' → logprob: -13.050244331359863
    10. '       ' → logprob: -13.175244331359863

Token 352: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -14.000000953674316
    3. '[k' → logprob: -15.125000953674316
    4. 'i' → logprob: -18.000001907348633
    5. '	k' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '{k' → logprob: -19.875001907348633
    8. '```' → logprob: -20.500001907348633
    9. '"k' → logprob: -20.625001907348633
    10. '
' → logprob: -20.750001907348633

Token 353: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.141733318567276
    2. ']' → logprob: -2.141733407974243
    3. '               ' → logprob: -4.266733169555664
    4. '           ' → logprob: -7.766733169555664
    5. '                   ' → logprob: -9.141733169555664
    6. '       ' → logprob: -10.266733169555664
    7. 'for' → logprob: -10.766733169555664
    8. ']
' → logprob: -10.766733169555664
    9. 'a' → logprob: -11.391733169555664
    10. '
' → logprob: -11.516733169555664

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16743257641792297
    2. 'for' → logprob: -2.2924325466156006
    3. '           ' → logprob: -3.1674325466156006
    4. ' for' → logprob: -4.66743278503418
    5. '       ' → logprob: -6.54243278503418
    6. '                   ' → logprob: -8.79243278503418
    7. '                       ' → logprob: -11.41743278503418
    8. '```' → logprob: -11.41743278503418
    9. '   ' → logprob: -12.04243278503418
    10. '             ' → logprob: -12.79243278503418

Token 355: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01427504327148199
    2. ' for' → logprob: -4.764275074005127
    3. '           ' → logprob: -5.764275074005127
    4. '               ' → logprob: -6.014275074005127
    5. '                   ' → logprob: -9.764274597167969
    6. '       ' → logprob: -12.764274597167969
    7. '   ' → logprob: -13.014274597167969
    8. '	for' → logprob: -15.264274597167969
    9. '```' → logprob: -15.639274597167969
    10. '                       ' → logprob: -16.38927459716797

Token 356: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031777136027812958
    2. ' j' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.378177642822266
    4. '   ' → logprob: -19.378177642822266
    5. 'k' → logprob: -19.753177642822266
    6. '	j' → logprob: -20.378177642822266
    7. 'l' → logprob: -20.878177642822266
    8. '  ' → logprob: -20.878177642822266
    9. '[j' → logprob: -21.378177642822266
    10. '$j' → logprob: -21.628177642822266

Token 357: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038042064756155014
    2. 'in' → logprob: -3.2880420684814453
    3. ' ' → logprob: -16.163042068481445
    4. '           ' → logprob: -16.288042068481445
    5. 'base' → logprob: -16.538042068481445
    6. ' =' → logprob: -16.788042068481445
    7. '               ' → logprob: -17.288042068481445
    8. ' base' → logprob: -17.413042068481445
    9. 'In' → logprob: -17.913042068481445
    10. '=' → logprob: -17.913042068481445

Token 358: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.04858850687742233
    2. ' base' → logprob: -3.048588514328003
    3. '(base' → logprob: -14.548588752746582
    4. ' ' → logprob: -15.173588752746582
    5. '	base' → logprob: -15.548588752746582
    6. 'range' → logprob: -16.173587799072266
    7. ' range' → logprob: -17.673587799072266
    8. '_base' → logprob: -18.173587799072266
    9. ';base' → logprob: -18.298587799072266
    10. '.base' → logprob: -18.423587799072266

Token 359: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.8889261304575484e-06
    2. 'k' → logprob: -12.500003814697266
    3. '{k' → logprob: -17.625003814697266
    4. '[' → logprob: -17.875003814697266
    5. '[j' → logprob: -19.125003814697266
    6. '(k' → logprob: -19.125003814697266
    7. ' k' → logprob: -19.250003814697266
    8. ',k' → logprob: -19.250003814697266
    9. '	k' → logprob: -19.375003814697266
    10. '[
' → logprob: -19.875003814697266

Token 360: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.049663178622722626
    2. ']:
' → logprob: -3.1746630668640137
    3. ']' → logprob: -5.049663066864014
    4. ']:

' → logprob: -9.674663543701172
    5. ']:
' → logprob: -10.299663543701172
    6. ']>' → logprob: -10.424663543701172
    7. '[' → logprob: -10.924663543701172
    8. '           ' → logprob: -11.549663543701172
    9. '[i' → logprob: -11.549663543701172
    10. '<|end|>' → logprob: -11.799663543701172

Token 361: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013718788512051105
    2. 'tmp' → logprob: -5.013718605041504
    3. '               ' → logprob: -5.638718605041504
    4. '                       ' → logprob: -5.888718605041504
    5. ' tmp' → logprob: -8.388718605041504
    6. '           ' → logprob: -9.013718605041504
    7. '[tmp' → logprob: -9.013718605041504
    8. '                  ' → logprob: -10.263718605041504
    9. '(tmp' → logprob: -10.388718605041504
    10. '			       ' → logprob: -11.013718605041504

Token 362: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.5358473658561707
    2. ' tmp' → logprob: -1.2858474254608154
    3. '                       ' → logprob: -2.6608474254608154
    4. '                   ' → logprob: -3.0358474254608154
    5. '               ' → logprob: -3.9108474254608154
    6. '           ' → logprob: -8.410847663879395
    7. '[tmp' → logprob: -10.035847663879395
    8. '                           ' → logprob: -10.160847663879395
    9. '(tmp' → logprob: -10.535847663879395
    10. '/tmp' → logprob: -10.910847663879395

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. 'i' → logprob: -18.375
    4. '[I' → logprob: -18.5
    5. '[u' → logprob: -18.875
    6. '[int' → logprob: -19.5
    7. ' [' → logprob: -19.625
    8. '```' → logprob: -19.625
    9. '[k' → logprob: -19.75
    10. '[j' → logprob: -20.0

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10126542299985886
    2. '[j' → logprob: -2.3512654304504395
    3. '[' → logprob: -7.1012654304504395
    4. '[i' → logprob: -9.601264953613281
    5. '[k' → logprob: -9.851264953613281
    6. '.setdefault' → logprob: -9.851264953613281
    7. ' ][' → logprob: -10.976264953613281
    8. ']' → logprob: -11.851264953613281
    9. '"][' → logprob: -11.976264953613281
    10. ''][' → logprob: -12.476264953613281

Token 365: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.27099974633893e-05
    2. ' j' → logprob: -11.500012397766113
    3. '[j' → logprob: -13.000012397766113
    4. '	j' → logprob: -16.75001335144043
    5. '   ' → logprob: -16.87501335144043
    6. '                   ' → logprob: -17.62501335144043
    7. '$j' → logprob: -18.12501335144043
    8. '                       ' → logprob: -18.37501335144043
    9. '           ' → logprob: -18.37501335144043
    10. '       ' → logprob: -18.87501335144043

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011192237958312035
    2. ']=' → logprob: -5.011192321777344
    3. '=' → logprob: -5.636192321777344
    4. ']=(' → logprob: -7.386192321777344
    5. ' =' → logprob: -8.511192321777344
    6. ']+=' → logprob: -10.136192321777344
    7. ' ]' → logprob: -10.511192321777344
    8. ')' → logprob: -11.636192321777344
    9. '=(' → logprob: -13.761192321777344
    10. '[' → logprob: -14.886192321777344

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008618827909231186
    2. ' =' → logprob: -4.7586188316345215
    3. '=(' → logprob: -12.508618354797363
    4. ')' → logprob: -15.633618354797363
    5. ' =(' → logprob: -15.633618354797363
    6. ']' → logprob: -15.758618354797363
    7. ']=' → logprob: -17.00861930847168
    8. '[' → logprob: -17.13361930847168
    9. '+=' → logprob: -17.13361930847168
    10. '=
' → logprob: -17.63361930847168

Token 368: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12695404887199402
    2. '(tmp' → logprob: -2.1269540786743164
    3. '(' → logprob: -11.501954078674316
    4. '(t' → logprob: -11.626954078674316
    5. '(temp' → logprob: -13.376954078674316
    6. '(tm' → logprob: -13.751954078674316
    7. ' ' → logprob: -14.501954078674316
    8. '(tx' → logprob: -14.751954078674316
    9. '   ' → logprob: -14.876954078674316
    10. '(total' → logprob: -15.001954078674316

Token 369: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.018245233222842216
    2. 'tmp' → logprob: -4.018245220184326
    3. ' (' → logprob: -9.643245697021484
    4. '[tmp' → logprob: -11.143245697021484
    5. ' tmp' → logprob: -11.393245697021484
    6. '/tmp' → logprob: -13.268245697021484
    7. ',tmp' → logprob: -13.393245697021484
    8. '$tmp' → logprob: -14.143245697021484
    9. '	tmp' → logprob: -14.768245697021484
    10. '(' → logprob: -16.143245697021484

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[tmp' → logprob: -17.125
    3. 'tmp' → logprob: -17.75
    4. 'i' → logprob: -18.625
    5. '.get' → logprob: -19.0
    6. '{i' → logprob: -20.75
    7. '[' → logprob: -21.0
    8. '_tmp' → logprob: -21.625
    9. '[I' → logprob: -22.0
    10. ' ' → logprob: -22.625

Token 371: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16036435961723328
    2. '][' → logprob: -1.9103643894195557
    3. '[i' → logprob: -9.660364151000977
    4. '[j' → logprob: -10.285364151000977
    5. ']' → logprob: -11.160364151000977
    6. '[' → logprob: -11.785364151000977
    7. '   ' → logprob: -12.285364151000977
    8. '.get' → logprob: -12.535364151000977
    9. '}.' → logprob: -12.785364151000977
    10. ' ].' → logprob: -13.285364151000977

Token 372: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.5048530030981055e-06
    2. '.get' → logprob: -13.750001907348633
    3. ' get' → logprob: -15.250001907348633
    4. '(get' → logprob: -16.000001907348633
    5. 'tmp' → logprob: -16.875001907348633
    6. '(tmp' → logprob: -17.875001907348633
    7. '_get' → logprob: -20.875001907348633
    8. 'Get' → logprob: -21.250001907348633
    9. '	get' → logprob: -21.500001907348633
    10. '[tmp' → logprob: -21.625001907348633

Token 373: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.125001907348633
    3. 'j' → logprob: -14.500001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '[j' → logprob: -16.250001907348633
    6. '(
' → logprob: -16.375001907348633
    7. '(k' → logprob: -17.125001907348633
    8. ',j' → logprob: -17.750001907348633
    9. '<|end|>' → logprob: -18.125001907348633
    10. '	j' → logprob: -19.250001907348633

Token 374: ',' (ID: 11)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.4044297933578491
    2. ',j' → logprob: -1.1544297933578491
    3. ',' → logprob: -4.404429912567139
    4. 'j' → logprob: -5.404429912567139
    5. ';j' → logprob: -8.27942943572998
    6. '[j' → logprob: -8.40442943572998
    7. ' j' → logprob: -9.90442943572998
    8. '+j' → logprob: -10.27942943572998
    9. '```' → logprob: -10.52942943572998
    10. ' ,' → logprob: -10.90442943572998

Token 375: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029720881138928235
    2. ' j' → logprob: -8.250297546386719
    3. '0' → logprob: -10.250297546386719
    4. ' ' → logprob: -15.375297546386719
    5. '   ' → logprob: -15.500297546386719
    6. '  ' → logprob: -17.87529754638672
    7. '	j' → logprob: -18.00029754638672
    8. '```' → logprob: -18.25029754638672
    9. '       ' → logprob: -18.37529754638672
    10. '    ' → logprob: -18.37529754638672

Token 376: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6533687710762024
    2. '+j' → logprob: -1.4033687114715576
    3. ']+' → logprob: -2.5283687114715576
    4. '[j' → logprob: -2.5283687114715576
    5. '+' → logprob: -3.2783687114715576
    6. ',j' → logprob: -3.6533687114715576
    7. ')' → logprob: -5.028368949890137
    8. ' +' → logprob: -6.778368949890137
    9. '}+' → logprob: -6.903368949890137
    10. '(j' → logprob: -7.528368949890137

Token 377: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519465982913971
    2. 'a' → logprob: -1.5019465684890747
    3. '(a' → logprob: -11.751946449279785
    4. ' (' → logprob: -12.251946449279785
    5. '   ' → logprob: -13.001946449279785
    6. '	a' → logprob: -13.501946449279785
    7. ' ' → logprob: -14.376946449279785
    8. '    ' → logprob: -15.001946449279785
    9. '           ' → logprob: -16.7519474029541
    10. '                   ' → logprob: -16.8769474029541

Token 378: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.320199877838604e-07
    2. ' *' → logprob: -14.75
    3. '*object' → logprob: -19.625
    4. '**' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. 'base' → logprob: -21.125
    7. '*(' → logprob: -21.125
    8. '*
' → logprob: -21.75
    9. '*[' → logprob: -22.5
    10. '*out' → logprob: -23.75

Token 379: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0005532711511477828
    2. ' base' → logprob: -7.500553131103516
    3. '(base' → logprob: -15.375553131103516
    4. '	base' → logprob: -17.500553131103516
    5. ' ' → logprob: -18.125553131103516
    6. '
' → logprob: -18.375553131103516
    7. '   ' → logprob: -19.125553131103516
    8. '_base' → logprob: -20.375553131103516
    9. '.base' → logprob: -20.375553131103516
    10. ';base' → logprob: -20.375553131103516

Token 380: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.822646693966817e-06
    2. 'k' → logprob: -12.000007629394531
    3. '[' → logprob: -13.625007629394531
    4. '[key' → logprob: -16.37500762939453
    5. '][' → logprob: -16.62500762939453
    6. '{k' → logprob: -16.62500762939453
    7. '```' → logprob: -16.75000762939453
    8. '(k' → logprob: -16.87500762939453
    9. '
' → logprob: -17.00000762939453
    10. '[j' → logprob: -17.25000762939453

Token 381: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07013282924890518
    2. '][' → logprob: -2.6951327323913574
    3. '[' → logprob: -9.195133209228516
    4. ']' → logprob: -9.820133209228516
    5. 'j' → logprob: -10.320133209228516
    6. '[k' → logprob: -12.945133209228516
    7. ' ][' → logprob: -13.820133209228516
    8. '}[' → logprob: -14.320133209228516
    9. ' [' → logprob: -14.820133209228516
    10. '[i' → logprob: -14.945133209228516

Token 382: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6047699318733066e-05
    2. ' j' → logprob: -11.500016212463379
    3. '[j' → logprob: -12.125016212463379
    4. '   ' → logprob: -15.625016212463379
    5. '
' → logprob: -17.000015258789062
    6. ' ' → logprob: -17.500015258789062
    7. 'k' → logprob: -17.625015258789062
    8. '	j' → logprob: -17.625015258789062
    9. '       ' → logprob: -18.750015258789062
    10. '  ' → logprob: -19.125015258789062

Token 383: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.002483149990439415
    2. ')' → logprob: -6.002483367919922
    3. ' )' → logprob: -12.002483367919922
    4. ']%' → logprob: -13.877483367919922
    5. '   ' → logprob: -14.877483367919922
    6. '       ' → logprob: -17.627483367919922
    7. '）' → logprob: -18.002483367919922
    8. ')#' → logprob: -18.127483367919922
    9. ')
' → logprob: -18.127483367919922
    10. '           ' → logprob: -18.252483367919922

Token 384: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.018213625997304916
    2. ' %' → logprob: -4.018213748931885
    3. ')%' → logprob: -9.893213272094727
    4. '%A' → logprob: -12.268213272094727
    5. '%B' → logprob: -12.393213272094727
    6. '%D' → logprob: -13.018213272094727
    7. '%C' → logprob: -13.893213272094727
    8. ']%' → logprob: -14.643213272094727
    9. ')' → logprob: -14.893213272094727
    10. '%m' → logprob: -16.143213272094727

Token 385: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.896309739408025e-07
    2. ' M' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.0
    5. '           ' → logprob: -20.5
    6. '
' → logprob: -20.75
    7. '`' → logprob: -21.125
    8. ' ' → logprob: -21.375
    9. '       ' → logprob: -21.375
    10. '``' → logprob: -21.625

Token 386: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22407077252864838
    2. '       ' → logprob: -2.8490707874298096
    3. 'base' → logprob: -3.0990707874298096
    4. '<|end|>' → logprob: -3.3490707874298096
    5. '        
' → logprob: -3.5990707874298096
    6. 'tmp' → logprob: -4.2240705490112305
    7. '    
' → logprob: -5.0990705490112305
    8. ' 
' → logprob: -5.7240705490112305
    9. '  
' → logprob: -6.0990705490112305
    10. '
' → logprob: -6.5990705490112305

Token 387: '       ' (ID: 309)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4142436981201172
    2. '
' → logprob: -1.4142436981201172
    3. 'power' → logprob: -2.914243698120117
    4. '       ' → logprob: -3.789243698120117
    5. ' base' → logprob: -4.914243698120117
    6. '        
' → logprob: -5.289243698120117
    7. '<|end|>' → logprob: -5.539243698120117
    8. ' power' → logprob: -7.289243698120117
    9. '    
' → logprob: -7.539243698120117
    10. ')' → logprob: -8.039243698120117

Token 388: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' (adapté à ' base') → logprob: -0.0024875495582818985
    2. ' base' → logprob: -6.002487659454346
    3. '       ' → logprob: -11.627487182617188
    4. '        
' → logprob: -13.752487182617188
    5. '
' → logprob: -14.002487182617188
    6. 'power' → logprob: -15.002487182617188
    7. '	base' → logprob: -15.252487182617188
    8. '   ' → logprob: -16.002487182617188
    9. '(base' → logprob: -16.252487182617188
    10. ' 
' → logprob: -16.377487182617188

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '=

' → logprob: -19.000335693359375
    4. '＝' → logprob: -19.375335693359375
    5. '=
' → logprob: -19.750335693359375
    6. '[' → logprob: -20.750335693359375
    7. '[:]' → logprob: -21.375335693359375
    8. '=}' → logprob: -21.875335693359375
    9. '.=' → logprob: -22.125335693359375
    10. '   ' → logprob: -23.125335693359375

Token 390: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.001170225441455841
    2. ' tmp' → logprob: -6.7511701583862305
    3. 'temp' → logprob: -17.751171112060547
    4. '(tmp' → logprob: -18.501171112060547
    5. '/tmp' → logprob: -18.626171112060547
    6. '	tmp' → logprob: -18.751171112060547
    7. '[tmp' → logprob: -19.501171112060547
    8. '_tmp' → logprob: -20.626171112060547
    9. '$tmp' → logprob: -20.751171112060547
    10. 'txt' → logprob: -22.001171112060547

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01167991105467081
    2. '
' → logprob: -5.3866801261901855
    3. 'power' → logprob: -5.5116801261901855
    4. '   ' → logprob: -6.5116801261901855
    5. '        
' → logprob: -6.8866801261901855
    6. ' power' → logprob: -7.8866801261901855
    7. '    
' → logprob: -9.886679649353027
    8. '           ' → logprob: -11.386679649353027
    9. '      ' → logprob: -11.511679649353027
    10. '(power' → logprob: -11.636679649353027

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036136824637651443
    2. 'power' → logprob: -3.4111368656158447
    3. ' power' → logprob: -6.161136627197266
    4. '   ' → logprob: -8.411136627197266
    5. '```' → logprob: -9.036136627197266
    6. '(power' → logprob: -10.911136627197266
    7. '
' → logprob: -12.536136627197266
    8. '        
' → logprob: -12.786136627197266
    9. 'pow' → logprob: -12.911136627197266
    10. '<|end|>' → logprob: -13.411136627197266

Token 393: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.004231785424053669
    2. 'power' (adapté à ' power') → logprob: -5.504231929779053
    3. '       ' → logprob: -8.879231452941895
    4. ' 
' → logprob: -11.629231452941895
    5. '
' → logprob: -12.754231452941895
    6. '        
' → logprob: -14.004231452941895
    7. '(power' → logprob: -14.254231452941895
    8. '        ' → logprob: -15.379231452941895
    9. '.power' → logprob: -16.00423240661621
    10. '```' → logprob: -16.00423240661621

Token 394: ' >>=' (ID: 81952)
  Prédit: ' >>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.10743657499551773
    2. '>>' → logprob: -2.3574366569519043
    3. '//=' → logprob: -5.232436656951904
    4. ' //' → logprob: -6.357436656951904
    5. '=' → logprob: -9.232436180114746
    6. ' >>' → logprob: -11.357436180114746
    7. ' <<=' → logprob: -11.982436180114746
    8. '>>>' → logprob: -12.982436180114746
    9. '-=' → logprob: -12.982436180114746
    10. ' ' → logprob: -13.232436180114746

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -16.875001907348633
    4. ' ' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '
' → logprob: -20.500001907348633
    7. '１' → logprob: -20.625001907348633
    8. '``' → logprob: -21.625001907348633
    9. '' → logprob: -21.812501907348633
    10. '=' → logprob: -21.875001907348633

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -21.375
    6. '01' → logprob: -21.5
    7. '
' → logprob: -21.875
    8. '0' → logprob: -22.125
    9. '' → logprob: -22.4375
    10. '۱' → logprob: -22.75

Token 397: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5460795164108276
    2. ' return' → logprob: -1.6710795164108276
    3. ' ' → logprob: -2.421079635620117
    4. '   ' → logprob: -2.921079635620117
    5. 'return' → logprob: -3.421079635620117
    6. '10' → logprob: -4.546079635620117
    7. '<|end|>' → logprob: -4.671079635620117
    8. '
' → logprob: -5.046079635620117
    9. '    
' → logprob: -5.046079635620117
    10. '1' → logprob: -5.046079635620117

Token 399: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31379762291908264
    2. 'return' (adapté à ' return') → logprob: -1.3137975931167603
    3. ' ' → logprob: -8.438797950744629
    4. ' 
' → logprob: -8.688797950744629
    5. '   ' → logprob: -8.938797950744629
    6. '	return' → logprob: -12.063797950744629
    7. '    
' → logprob: -12.313797950744629
    8. '
' → logprob: -12.313797950744629
    9. '  ' → logprob: -13.438797950744629
    10. ':return' → logprob: -14.063797950744629

Token 400: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.8624639324116288e-06
    2. ' res' → logprob: -13.250001907348633
    3. '(res' → logprob: -22.250001907348633
    4. '[' → logprob: -23.750001907348633
    5. '	res' → logprob: -24.500001907348633
    6. '$res' → logprob: -25.375001907348633
    7. '   ' → logprob: -26.750001907348633
    8. '_res' → logprob: -26.875001907348633
    9. 're' → logprob: -27.000001907348633
    10. 'resi' → logprob: -28.250001907348633

Token 401: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04716954007744789
    2. ' fib' → logprob: -3.4221694469451904
    3. ' solve' → logprob: -5.0471696853637695
    4. ' fibonacci' → logprob: -6.0471696853637695
    5. ' matrix' → logprob: -6.6721696853637695
    6. ' mat' → logprob: -7.0471696853637695
    7. ' mod' → logprob: -7.0471696853637695
    8. 'main' → logprob: -7.5471696853637695
    9. ' fast' → logprob: -8.17216968536377
    10. ' pow' → logprob: -9.17216968536377

Token 404: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00014525714504998177
    2. '(' → logprob: -9.250144958496094
    3. ' ():' → logprob: -10.625144958496094
    4. '():
' → logprob: -11.250144958496094
    5. '()' → logprob: -11.750144958496094
    6. '()>' → logprob: -14.000144958496094
    7. '(argv' → logprob: -14.250144958496094
    8. '(args' → logprob: -14.750144958496094
    9. '()(' → logprob: -14.875144958496094
    10. '_' → logprob: -15.125144958496094

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15587586164474487
    2. ' import' → logprob: -2.2808759212493896
    3. 'import' → logprob: -4.0308756828308105
    4. ' n' → logprob: -4.7808756828308105
    5. '```' → logprob: -5.2808756828308105
    6. ' input' → logprob: -5.4058756828308105
    7. ' readline' → logprob: -6.0308756828308105
    8. 'n' → logprob: -6.1558756828308105
    9. ' pass' → logprob: -7.4058756828308105
    10. 'input' → logprob: -8.530876159667969

Token 406: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.6534797549247742
    2. '   ' → logprob: -0.9034797549247742
    3. 'n' → logprob: -3.028479814529419
    4. ' input' → logprob: -3.778479814529419
    5. 'import' → logprob: -6.40347957611084
    6. 'N' → logprob: -6.52847957611084
    7. 'data' → logprob: -9.15347957611084
    8. ' n' → logprob: -9.90347957611084
    9. 't' → logprob: -10.77847957611084
    10. 'MOD' → logprob: -11.52847957611084

Token 407: '=sys' (ID: 149200)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1471942514181137
    2. '_data' → logprob: -2.5221941471099854
    3. '()' → logprob: -3.2721941471099854
    4. '=' → logprob: -4.8971943855285645
    5. ' =' → logprob: -5.5221943855285645
    6. '_' → logprob: -5.7721943855285645
    7. '_lines' → logprob: -5.8971943855285645
    8. 'line' → logprob: -7.8971943855285645
    9. '_=' → logprob: -8.272193908691406
    10. 'data' → logprob: -8.397193908691406

Token 408: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0014463067054748535
    2. '.' → logprob: -6.87644624710083
    3. '.readline' → logprob: -8.001446723937988
    4. '.stdout' → logprob: -10.376446723937988
    5. '().' → logprob: -11.001446723937988
    6. '.argv' → logprob: -11.501446723937988
    7. '.std' → logprob: -11.876446723937988
    8. 'stdin' → logprob: -12.251446723937988
    9. '.input' → logprob: -13.126446723937988
    10. '(stdin' → logprob: -13.251446723937988

Token 409: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.40218961238861084
    2. 'stdin' → logprob: -1.6521896123886108
    3. '.stdin' → logprob: -2.2771897315979004
    4. 'read' → logprob: -3.4021897315979004
    5. '(stdin' → logprob: -7.0271897315979
    6. '_read' → logprob: -7.2771897315979
    7. ' readline' → logprob: -7.6521897315979
    8. 'std' → logprob: -7.9021897315979
    9. '=' → logprob: -8.152189254760742
    10. 'rea' → logprob: -9.027189254760742

Token 410: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4029252231121063
    2. '()' → logprob: -1.1529252529144287
    3. '()
' → logprob: -4.15292501449585
    4. '   ' → logprob: -8.777925491333008
    5. '()
' → logprob: -10.902925491333008
    6. '()\' → logprob: -11.027925491333008
    7. '()

' → logprob: -11.277925491333008
    8. '()<' → logprob: -13.277925491333008
    9. '();' → logprob: -13.652925491333008
    10. ' ()' → logprob: -14.527925491333008

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011323668994009495
    2. 'n' → logprob: -4.63632345199585
    3. 't' → logprob: -7.38632345199585
    4. ' n' → logprob: -7.63632345199585
    5. 'N' → logprob: -8.636323928833008
    6. ' t' → logprob: -9.511323928833008
    7. '(n' → logprob: -10.136323928833008
    8. '	n' → logprob: -10.261323928833008
    9. '```' → logprob: -10.386323928833008
    10. ' N' → logprob: -10.636323928833008

Token 412: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9162425398826599
    2. 't' → logprob: -1.1662425994873047
    3. '   ' → logprob: -1.7912425994873047
    4. 'N' → logprob: -2.6662425994873047
    5. 'T' → logprob: -3.2912425994873047
    6. 'Q' → logprob: -4.791242599487305
    7. ' t' → logprob: -5.916242599487305
    8. 'k' → logprob: -6.666242599487305
    9. ' n' → logprob: -6.791242599487305
    10. 'K' → logprob: -8.041242599487305

Token 413: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.201825812458992
    2. 'True' → logprob: -1.7018258571624756
    3. '(True' → logprob: -7.8268256187438965
    4. '1' → logprob: -11.576826095581055
    5. ' ' → logprob: -13.451826095581055
    6. '=True' → logprob: -13.826826095581055
    7. ' line' → logprob: -14.076826095581055
    8. '(' → logprob: -15.076826095581055
    9. '   ' → logprob: -15.576826095581055
    10. 'true' → logprob: -16.201826095581055

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05134650319814682
    2. '       ' → logprob: -3.17634654045105
    3. '():' → logprob: -5.676346302032471
    4. ':
' → logprob: -5.801346302032471
    5. '   ' → logprob: -6.926346302032471
    6. ',' → logprob: -7.926346302032471
    7. '():
' → logprob: -8.926346778869629
    8. '):' → logprob: -9.051346778869629
    9. '<|end|>' → logprob: -9.801346778869629
    10. ' :' → logprob: -10.426346778869629

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044594623148441315
    2. ' line' → logprob: -3.4195945262908936
    3. '   ' → logprob: -4.919594764709473
    4. 'line' → logprob: -5.669594764709473
    5. '	line' → logprob: -10.419594764709473
    6. '#line' → logprob: -10.544594764709473
    7. ' try' → logprob: -10.669594764709473
    8. 'try' → logprob: -11.669594764709473
    9. '    ' → logprob: -11.794594764709473
    10. '(line' → logprob: -11.919594764709473

Token 416: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.47718143463134766
    2. 'line' → logprob: -0.9771814346313477
    3. 'n' → logprob: -6.352181434631348
    4. 'l' → logprob: -7.602181434631348
    5. '   ' → logprob: -7.977181434631348
    6. 's' → logprob: -8.602181434631348
    7. 'N' (adapté à ' N') → logprob: -8.852181434631348
    8. ' n' → logprob: -9.977181434631348
    9. 'L' → logprob: -10.352181434631348
    10. '	line' → logprob: -10.727181434631348

Token 417: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39782917499542236
    2. ',' → logprob: -1.2728291749954224
    3. '=' → logprob: -3.147829055786133
    4. ' ,' → logprob: -6.022829055786133
    5. ',N' → logprob: -7.022829055786133
    6. '=input' → logprob: -7.147829055786133
    7. '=int' → logprob: -7.647829055786133
    8. ',n' → logprob: -8.522829055786133
    9. ',input' → logprob: -8.772829055786133
    10. '=line' → logprob: -10.022829055786133

Token 418: ',A' (ID: 59196)
  Prédit: ',K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.9600434899330139
    2. '=' → logprob: -1.4600434303283691
    3. ' =' → logprob: -1.8350434303283691
    4. ',P' → logprob: -2.835043430328369
    5. ',k' → logprob: -3.210043430328369
    6. ',p' → logprob: -3.210043430328369
    7. ',' → logprob: -3.335043430328369
    8. '=input' → logprob: -3.835043430328369
    9. ',Q' → logprob: -4.210043430328369
    10. ',input' → logprob: -5.710043430328369

Token 419: ',B' (ID: 19853)
  Prédit: ',K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.2250751554965973
    2. ',P' → logprob: -2.9750752449035645
    3. ',' → logprob: -3.4750752449035645
    4. ',p' → logprob: -3.7250752449035645
    5. ',L' → logprob: -3.9750752449035645
    6. '=' → logprob: -3.9750752449035645
    7. ',Q' → logprob: -4.2250752449035645
    8. ',k' → logprob: -4.3500752449035645
    9. ' =' → logprob: -5.1000752449035645
    10. ',S' → logprob: -5.1000752449035645

Token 420: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43725109100341797
    2. ',K' → logprob: -1.937251091003418
    3. ' =' → logprob: -2.812251091003418
    4. ',P' → logprob: -2.937251091003418
    5. ',p' → logprob: -4.187251091003418
    6. '=input' → logprob: -4.312251091003418
    7. ',Q' → logprob: -4.437251091003418
    8. ',k' → logprob: -4.812251091003418
    9. ',C' → logprob: -4.812251091003418
    10. ',' → logprob: -4.937251091003418

Token 421: ',T' (ID: 44428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18477439880371094
    2. ' =' → logprob: -2.059774398803711
    3. ',K' → logprob: -4.184774398803711
    4. '=input' → logprob: -4.559774398803711
    5. ',P' → logprob: -5.684774398803711
    6. '=line' → logprob: -5.684774398803711
    7. '=P' → logprob: -6.559774398803711
    8. ',L' → logprob: -6.934774398803711
    9. ',' → logprob: -6.934774398803711
    10. ',Q' → logprob: -7.184774398803711

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02206084318459034
    2. ' =' → logprob: -4.147060871124268
    3. '=input' → logprob: -5.522060871124268
    4. '=line' → logprob: -6.897060871124268
    5. '=sys' → logprob: -7.397060871124268
    6. '=list' → logprob: -8.64706039428711
    7. '=P' → logprob: -10.52206039428711
    8. ',K' → logprob: -10.64706039428711
    9. '=_' → logprob: -10.77206039428711
    10. ',Q' → logprob: -10.77206039428711

Token 423: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.006722352933138609
    2. ' map' → logprob: -5.006722450256348
    3. 'list' → logprob: -12.631722450256348
    4. 'input' → logprob: -13.131722450256348
    5. '(map' → logprob: -13.631722450256348
    6. '[' → logprob: -14.631722450256348
    7. 'sys' → logprob: -16.75672149658203
    8. '	map' → logprob: -17.63172149658203
    9. ' list' → logprob: -17.75672149658203
    10. ' input' → logprob: -18.38172149658203

Token 424: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013066678075119853
    2. '(' → logprob: -7.001306533813477
    3. '(input' → logprob: -8.251306533813477
    4. 'int' → logprob: -9.251306533813477
    5. '(str' → logprob: -11.376306533813477
    6. '[int' → logprob: -11.626306533813477
    7. '(lambda' → logprob: -12.001306533813477
    8. 'input' → logprob: -12.501306533813477
    9. '<int' → logprob: -13.126306533813477
    10. '(
' → logprob: -13.126306533813477

Token 425: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.25394660234451294
    2. ',' → logprob: -1.5039465427398682
    3. '(input' → logprob: -6.628946781158447
    4. 'input' → logprob: -7.878946781158447
    5. '(sys' → logprob: -8.378946304321289
    6. 'sys' → logprob: -9.878946304321289
    7. '(),' → logprob: -11.378946304321289
    8. '(' → logprob: -11.878946304321289
    9. ',(' → logprob: -12.253946304321289
    10. ' input' → logprob: -12.503946304321289

Token 426: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.547789674485102e-05
    2. ' input' → logprob: -10.250035285949707
    3. 'sys' → logprob: -17.125036239624023
    4. '(input' → logprob: -20.375036239624023
    5. '	input' → logprob: -20.875036239624023
    6. '=input' → logprob: -21.375036239624023
    7. ',input' → logprob: -21.625036239624023
    8. '   ' → logprob: -22.250036239624023
    9. '<input' → logprob: -22.375036239624023
    10. ' ' → logprob: -23.500036239624023

Token 427: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.700132997939363e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.500017166137695
    4. '(' → logprob: -17.625017166137695
    5. '()
' → logprob: -18.750017166137695
    6. '())' → logprob: -20.625017166137695
    7. ')' → logprob: -20.875017166137695
    8. '()?.' → logprob: -21.625017166137695
    9. '   ' → logprob: -21.750017166137695
    10. '.' → logprob: -21.875017166137695

Token 428: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2703382074832916
    2. 'strip' → logprob: -1.5203381776809692
    3. 'rstrip' → logprob: -4.02033805847168
    4. 'read' → logprob: -8.14533805847168
    5. '(split' → logprob: -13.77033805847168
    6. '().' → logprob: -14.14533805847168
    7. ' split' → logprob: -14.52033805847168
    8. ' strip' → logprob: -14.64533805847168
    9. 'decode' → logprob: -15.27033805847168
    10. '.readline' → logprob: -15.64533805847168

Token 429: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0038957991637289524
    2. '()' → logprob: -5.7538957595825195
    3. ')' → logprob: -7.2538957595825195
    4. '())
' → logprob: -11.87889575958252
    5. '(' → logprob: -14.00389575958252
    6. ' ())' → logprob: -14.12889575958252
    7. '()))' → logprob: -14.37889575958252
    8. '();)' → logprob: -14.50389575958252
    9. '(),' → logprob: -15.75389575958252
    10. '()]' → logprob: -16.253896713256836

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12899664044380188
    2. '<|end|>' → logprob: -2.1289966106414795
    3. '        
' → logprob: -6.878996849060059
    4. '        ' → logprob: -8.253996849060059
    5. '<|end|>' → logprob: -8.503996849060059
    6. ' if' → logprob: -8.878996849060059
    7. '   ' → logprob: -9.378996849060059
    8. '
' → logprob: -9.628996849060059
    9. ' ' → logprob: -10.003996849060059
    10. ' 
' → logprob: -10.378996849060059

Token 431: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05735421180725098
    2. ' if' → logprob: -2.932354211807251
    3. '       ' → logprob: -6.057353973388672
    4. '<|end|>' → logprob: -9.182353973388672
    5. '        
' → logprob: -12.057353973388672
    6. '[' → logprob: -12.557353973388672
    7. '   ' → logprob: -12.807353973388672
    8. '	if' → logprob: -12.932353973388672
    9. '#' → logprob: -13.057353973388672
    10. '        ' → logprob: -13.182353973388672

Token 432: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10117589682340622
    2. ' N' → logprob: -2.3511757850646973
    3. ' not' → logprob: -6.976175785064697
    4. 'not' → logprob: -10.976176261901855
    5. ' ' → logprob: -11.726176261901855
    6. '(N' → logprob: -12.476176261901855
    7. '[N' → logprob: -12.726176261901855
    8. ' (' → logprob: -13.851176261901855
    9. '	N' → logprob: -13.976176261901855
    10. 'A' → logprob: -15.226176261901855

Token 433: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20150357484817505
    2. ' ==' → logprob: -1.7015035152435303
    3. ')==' → logprob: -10.07650375366211
    4. '=' → logprob: -11.07650375366211
    5. '===' → logprob: -12.07650375366211
    6. '==-' → logprob: -12.07650375366211
    7. '()==' → logprob: -12.32650375366211
    8. ')' → logprob: -12.57650375366211
    9. ']==' → logprob: -12.70150375366211
    10. '<' → logprob: -13.07650375366211

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '-' → logprob: -19.375003814697266
    4. '۰' → logprob: -19.500003814697266
    5. '０' → logprob: -20.250003814697266
    6. '=' → logprob: -21.625003814697266
    7. '```' → logprob: -22.875003814697266
    8. '_' → logprob: -23.500003814697266
    9. '٠' → logprob: -24.125003814697266
    10. '00' → logprob: -24.500003814697266

Token 435: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5268498063087463
    2. ':' → logprob: -0.9018498063087463
    3. ':
' → logprob: -6.401849746704102
    4. 'and' → logprob: -6.776849746704102
    5. ':return' → logprob: -7.776849746704102
    6. ' or' → logprob: -8.151849746704102
    7. '   ' → logprob: -9.401849746704102
    8. '       ' → logprob: -10.151849746704102
    9. ',' → logprob: -10.526849746704102
    10. '           ' → logprob: -10.776849746704102

Token 436: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.611323624383658e-05
    2. ' M' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.00006675720215
    4. '	M' → logprob: -18.12506675720215
    5. ' ' → logprob: -18.50006675720215
    6. '  ' → logprob: -18.75006675720215
    7. 'N' → logprob: -19.50006675720215
    8. ' ' → logprob: -20.25006675720215
    9. ',M' → logprob: -20.87506675720215
    10. '<M' → logprob: -21.50006675720215

Token 437: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.180879816180095e-05
    2. ' ==' → logprob: -9.875051498413086
    3. '===' → logprob: -16.500051498413086
    4. '=' → logprob: -16.750051498413086
    5. ')==' → logprob: -16.750051498413086
    6. '()==' → logprob: -16.750051498413086
    7. '==
' → logprob: -17.250051498413086
    8. ']==' → logprob: -17.750051498413086
    9. '==-' → logprob: -18.125051498413086
    10. '<|end|>' → logprob: -19.000051498413086

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -18.12501335144043
    4. '=' → logprob: -18.37501335144043
    5. '۰' → logprob: -18.37501335144043
    6. '<|end|>' → logprob: -18.68751335144043
    7. 'and' → logprob: -18.93751335144043
    8. '০' → logprob: -19.31251335144043
    9. '<|end|>' → logprob: -19.43751335144043
    10. '   ' → logprob: -19.62501335144043

Token 439: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132757246494293
    2. 'and' → logprob: -1.313275694847107
    3. '0' → logprob: -11.563275337219238
    4. '	and' → logprob: -13.063275337219238
    5. ' ' → logprob: -13.438275337219238
    6. '<|end|>' → logprob: -14.438275337219238
    7. '<|end|>' → logprob: -15.313275337219238
    8. ' и' → logprob: -17.188276290893555
    9. '   ' → logprob: -17.438276290893555
    10. ':' → logprob: -17.563276290893555

Token 440: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00012356207298580557
    2. ' A' → logprob: -9.000123977661133
    3. ' ' → logprob: -16.875123977661133
    4. '	A' → logprob: -17.750123977661133
    5. '   ' → logprob: -17.750123977661133
    6. 'N' → logprob: -19.875123977661133
    7. 'C' → logprob: -20.000123977661133
    8. '  ' → logprob: -20.625123977661133
    9. '0' → logprob: -20.875123977661133
    10. 'a' → logprob: -21.625123977661133

Token 441: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.5577775128767826e-06
    2. ' ==' → logprob: -12.125005722045898
    3. '=' → logprob: -17.2500057220459
    4. '==
' → logprob: -17.6250057220459
    5. '()==' → logprob: -17.7500057220459
    6. '===' → logprob: -17.7500057220459
    7. '0' → logprob: -17.8750057220459
    8. 'and' → logprob: -18.2500057220459
    9. '==-' → logprob: -18.7500057220459
    10. 'B' → logprob: -19.1250057220459

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.375005722045898
    3. 'B' → logprob: -13.750005722045898
    4. 'and' → logprob: -17.6250057220459
    5. 'C' → logprob: -18.5000057220459
    6. ' B' → logprob: -19.1250057220459
    7. ' and' → logprob: -19.6250057220459
    8. '```' → logprob: -20.5000057220459
    9. '۰' → logprob: -21.0000057220459
    10. '=' → logprob: -21.2500057220459

Token 443: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692968547344208
    2. 'and' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.25192928314209
    4. '0' → logprob: -15.50192928314209
    5. '```' → logprob: -15.62692928314209
    6. '	and' → logprob: -15.75192928314209
    7. '==' → logprob: -15.87692928314209
    8. '<|end|>' → logprob: -16.001930236816406
    9. ' ' → logprob: -16.251930236816406
    10. ',' → logprob: -17.751930236816406

Token 444: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007101670489646494
    2. ' B' → logprob: -7.2507100105285645
    3. ' ' → logprob: -16.125709533691406
    4. '   ' → logprob: -17.375709533691406
    5. '  ' → logprob: -17.750709533691406
    6. 'and' → logprob: -18.125709533691406
    7. '	B' → logprob: -18.125709533691406
    8. '     ' → logprob: -20.125709533691406
    9. ' and' → logprob: -20.625709533691406
    10. '    ' → logprob: -20.750709533691406

Token 445: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -3.7385154428193346e-05
    2. ' ==' → logprob: -10.25003719329834
    3. '=' → logprob: -13.87503719329834
    4. ']==' → logprob: -14.87503719329834
    5. '()==' → logprob: -15.12503719329834
    6. ')==' → logprob: -15.87503719329834
    7. '```' → logprob: -16.500038146972656
    8. '==
' → logprob: -16.750038146972656
    9. '[' → logprob: -17.000038146972656
    10. '===' → logprob: -17.250038146972656

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'and' → logprob: -17.250001907348633
    4. ' and' → logprob: -17.625001907348633
    5. '<|end|>' → logprob: -17.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. '...' → logprob: -19.500001907348633
    8. '=' → logprob: -19.750001907348633
    9. '۰' → logprob: -20.375001907348633
    10. '<|end|>' → logprob: -20.750001907348633

Token 447: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141683518886566
    2. 'and' → logprob: -1.7014168500900269
    3. '0' → logprob: -13.326416969299316
    4. ' ' → logprob: -13.326416969299316
    5. '```' → logprob: -16.076416015625
    6. '==' → logprob: -16.826416015625
    7. '	and' → logprob: -16.826416015625
    8. '   ' → logprob: -18.326416015625
    9. ' ' → logprob: -18.576416015625
    10. '  ' → logprob: -18.951416015625

Token 448: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007102862582542002
    2. ' C' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.750710487365723
    4. '   ' → logprob: -15.750710487365723
    5. '  ' → logprob: -16.375709533691406
    6. '
' → logprob: -17.625709533691406
    7. '0' → logprob: -17.750709533691406
    8. '	C' → logprob: -17.875709533691406
    9. '>C' → logprob: -18.750709533691406
    10. '       ' → logprob: -19.375709533691406

Token 449: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.796184723294573e-06
    2. ' ==' → logprob: -12.125005722045898
    3. '=' → logprob: -16.2500057220459
    4. '==
' → logprob: -16.2500057220459
    5. '()==' → logprob: -16.7500057220459
    6. ']==' → logprob: -17.1250057220459
    7. ')==' → logprob: -17.7500057220459
    8. '```' → logprob: -18.0000057220459
    9. '==(' → logprob: -18.6250057220459
    10. '===' → logprob: -18.8750057220459

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'and' → logprob: -16.5000057220459
    4. ' and' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.3750057220459
    6. '```' → logprob: -18.3750057220459
    7. '۰' → logprob: -18.7500057220459
    8. '1' → logprob: -19.0625057220459
    9. '=' → logprob: -19.1250057220459
    10. '  ' → logprob: -19.8125057220459

Token 451: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023246990516781807
    2. 'and' → logprob: -3.773247003555298
    3. '	and' → logprob: -14.023246765136719
    4. ' ' → logprob: -15.398246765136719
    5. '<|end|>' → logprob: -15.648246765136719
    6. '0' → logprob: -15.898246765136719
    7. '<|end|>' → logprob: -16.02324676513672
    8. ' ' → logprob: -16.27324676513672
    9. '```' → logprob: -16.77324676513672
    10. ':' → logprob: -16.89824676513672

Token 452: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -4.1318875446449965e-05
    2. ' T' → logprob: -10.125041007995605
    3. '0' → logprob: -13.750041007995605
    4. '   ' → logprob: -16.625041961669922
    5. ' ' → logprob: -17.125041961669922
    6. '	T' → logprob: -17.625041961669922
    7. '  ' → logprob: -18.250041961669922
    8. '
' → logprob: -18.250041961669922
    9. '
' → logprob: -20.125041961669922
    10. '

' → logprob: -20.375041961669922

Token 453: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006717974785715342
    2. ' ==' → logprob: -5.006718158721924
    3. '=' → logprob: -14.131717681884766
    4. '()==' → logprob: -14.381717681884766
    5. ')==' → logprob: -14.881717681884766
    6. ']==' → logprob: -15.381717681884766
    7. '==
' → logprob: -15.506717681884766
    8. '==-' → logprob: -15.506717681884766
    9. '0' → logprob: -16.006717681884766
    10. '==(' → logprob: -16.381717681884766

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -15.750004768371582
    4. '０' → logprob: -17.7500057220459
    5. '০' → logprob: -17.7500057220459
    6. '०' → logprob: -19.1250057220459
    7. '   ' → logprob: -19.6875057220459
    8. '٠' → logprob: -19.8125057220459
    9. '<|end|>' → logprob: -20.2500057220459
    10. ' ' → logprob: -20.3125057220459

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11452917754650116
    2. ':
' → logprob: -2.2395291328430176
    3. ':return' → logprob: -6.989529132843018
    4. '       ' → logprob: -7.489529132843018
    5. '           ' → logprob: -8.739529609680176
    6. '   ' → logprob: -9.864529609680176
    7. ',' → logprob: -12.614529609680176
    8. ':
' → logprob: -13.239529609680176
    9. '.' → logprob: -13.364529609680176
    10. ' break' → logprob: -13.739529609680176

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.292907877039397e-06
    2. '		' → logprob: -14.25000286102295
    3. '               ' → logprob: -14.75000286102295
    4. '	       ' → logprob: -14.75000286102295
    5. ' break' → logprob: -14.87500286102295
    6. '<|end|>' → logprob: -14.87500286102295
    7. '       ' → logprob: -15.12500286102295
    8. '          ' → logprob: -15.12500286102295
    9. 'break' → logprob: -15.75000286102295
    10. '```' → logprob: -16.000003814697266

Token 457: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.009100090712308884
    2. 'return' → logprob: -4.759099960327148
    3. ' break' → logprob: -7.759099960327148
    4. '           ' → logprob: -10.259099960327148
    5. '       ' → logprob: -11.009099960327148
    6. '	break' → logprob: -12.259099960327148
    7. ' return' → logprob: -13.134099960327148
    8. '               ' → logprob: -15.759099960327148
    9. '   ' → logprob: -16.00909996032715
    10. '_break' → logprob: -16.50909996032715

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024422393180429935
    2. '<|end|>' → logprob: -6.752442359924316
    3. '        
' → logprob: -7.002442359924316
    4. '
' → logprob: -8.627442359924316
    5. '   ' → logprob: -9.252442359924316
    6. '```' → logprob: -10.127442359924316
    7. '    
' → logprob: -11.502442359924316
    8. '<|end|>' → logprob: -11.877442359924316
    9. '  
' → logprob: -12.627442359924316
    10. '       
' → logprob: -12.627442359924316

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00318912067450583
    2. '<|end|>' → logprob: -6.2531890869140625
    3. '        
' → logprob: -7.3781890869140625
    4. '   ' → logprob: -8.003189086914062
    5. '```' → logprob: -8.503189086914062
    6. '
' → logprob: -10.003189086914062
    7. '<|end|>' → logprob: -11.628189086914062
    8. '  
' → logprob: -12.128189086914062
    9. 'def' → logprob: -12.128189086914062
    10. '    
' → logprob: -12.253189086914062

Token 460: ' init' (ID: 6327)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.6172207593917847
    2. 'dp' → logprob: -1.7422207593917847
    3. 'seq' → logprob: -2.242220878601074
    4. '       ' → logprob: -2.492220878601074
    5. 'F' → logprob: -2.867220878601074
    6. 's' → logprob: -2.867220878601074
    7. 'X' → logprob: -2.992220878601074
    8. 'x' → logprob: -3.117220878601074
    9. 'DP' → logprob: -3.117220878601074
    10. 'S' → logprob: -3.242220878601074

Token 461: ' =' (ID: 314)
  Prédit: '_vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.09905371069908142
    2. '_vector' → logprob: -3.5990536212921143
    3. ' =' → logprob: -3.8490536212921143
    4. '_state' → logprob: -4.224053859710693
    5. '_seq' → logprob: -4.349053859710693
    6. '_val' → logprob: -4.474053859710693
    7. '=' → logprob: -5.724053859710693
    8. '_vals' → logprob: -6.974053859710693
    9. '_vect' → logprob: -7.099053859710693
    10. '_' → logprob: -7.974053859710693

Token 462: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7104479074478149
    2. '{' → logprob: -0.7104479074478149
    3. '[{' → logprob: -4.085447788238525
    4. ' {' → logprob: -9.585448265075684
    5. ' [' → logprob: -9.710448265075684
    6. '{id' → logprob: -10.085448265075684
    7. '{x' → logprob: -10.585448265075684
    8. '[int' → logprob: -10.710448265075684
    9. '[d' → logprob: -11.210448265075684
    10. '{name' → logprob: -11.460448265075684

Token 463: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008888492360711098
    2. '(range' → logprob: -4.7588887214660645
    3. '()' → logprob: -8.883888244628906
    4. '(int' → logprob: -9.383888244628906
    5. '(input' → logprob: -10.883888244628906
    6. '(' → logprob: -11.008888244628906
    7. 'map' → logprob: -11.258888244628906
    8. '[int' → logprob: -14.258888244628906
    9. '.map' → logprob: -14.758888244628906
    10. 'range' → logprob: -14.758888244628906

Token 464: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005252372473478317
    2. 'int' → logprob: -5.255252361297607
    3. ',int' → logprob: -11.505252838134766
    4. '(' → logprob: -13.255252838134766
    5. '[int' → logprob: -13.255252838134766
    6. '=int' → logprob: -13.255252838134766
    7. ']int' → logprob: -13.630252838134766
    8. '<int' → logprob: -14.005252838134766
    9. '(lambda' → logprob: -14.630252838134766
    10. ' int' → logprob: -15.880252838134766

Token 465: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016322131268680096
    2. ',input' → logprob: -7.376632213592529
    3. '(' → logprob: -7.626632213592529
    4. '(sys' → logprob: -7.751632213592529
    5. 'input' → logprob: -9.626631736755371
    6. ',' → logprob: -11.376631736755371
    7. 'sys' → logprob: -12.501631736755371
    8. ' input' → logprob: -13.251631736755371
    9. '=input' → logprob: -13.876631736755371
    10. ' (' → logprob: -13.876631736755371

Token 466: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -15.12500286102295
    4. '.split' → logprob: -17.125003814697266
    5. '.readline' → logprob: -17.500003814697266
    6. '()))' → logprob: -17.750003814697266
    7. '(' → logprob: -18.625003814697266
    8. '()[' → logprob: -18.750003814697266
    9. '()
' → logprob: -19.000003814697266
    10. '.' → logprob: -19.750003814697266

Token 467: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024001303245313466
    2. 'strip' → logprob: -8.500240325927734
    3. 'rstrip' → logprob: -10.625240325927734
    4. 'read' → logprob: -11.625240325927734
    5. '(split' → logprob: -13.125240325927734
    6. ' split' → logprob: -13.750240325927734
    7. 'spl' → logprob: -16.875240325927734
    8. '.readline' → logprob: -17.000240325927734
    9. '_split' → logprob: -17.375240325927734
    10. '.split' → logprob: -17.875240325927734

Token 468: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04113762825727463
    2. '()' → logprob: -3.6661376953125
    3. '))' → logprob: -4.2911376953125
    4. '(' → logprob: -7.7911376953125
    5. '())' → logprob: -7.7911376953125
    6. '()))
' → logprob: -8.9161376953125
    7. '()));' → logprob: -9.9161376953125
    8. ')' → logprob: -11.6661376953125
    9. '()>' → logprob: -12.5411376953125
    10. '()[' → logprob: -12.9161376953125

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020672684535384178
    2. '<|end|>' → logprob: -4.020672798156738
    3. '        
' → logprob: -6.770672798156738
    4. '```' → logprob: -7.520672798156738
    5. '[' → logprob: -7.770672798156738
    6. ')' → logprob: -8.895672798156738
    7. '[
' → logprob: -9.270672798156738
    8. '
' → logprob: -9.895672798156738
    9. '<|end|>' → logprob: -11.270672798156738
    10. ',' → logprob: -11.395672798156738

Token 470: ' #' (ID: 1069)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.9993687868118286
    2. 'dp' → logprob: -1.7493687868118286
    3. '       ' → logprob: -2.124368667602539
    4. 'trans' → logprob: -2.124368667602539
    5. 'MAT' → logprob: -2.624368667602539
    6. 'DP' → logprob: -3.249368667602539
    7. 'vec' → logprob: -3.624368667602539
    8. 'matrix' → logprob: -3.749368667602539
    9. 'state' → logprob: -4.874368667602539
    10. 'M' → logprob: -4.874368667602539

Token 471: ' Build' (ID: 10885)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.5466058850288391
    2. 'mat' → logprob: -1.7966058254241943
    3. 'dp' → logprob: -2.5466058254241943
    4. 'vec' → logprob: -2.9216058254241943
    5. 'trans' → logprob: -3.1716058254241943
    6. 'if' → logprob: -4.296606063842773
    7. 'state' → logprob: -4.421606063842773
    8. '#' → logprob: -4.546606063842773
    9. 'DP' → logprob: -4.671606063842773
    10. 'transition' → logprob: -5.671606063842773

Token 472: ' sparse' (ID: 70531)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.7487513422966003
    2. 'mat' → logprob: -1.6237514019012451
    3. 'transition' → logprob: -1.9987514019012451
    4. 'rec' → logprob: -2.998751401901245
    5. ' mat' → logprob: -3.373751401901245
    6. ' transition' → logprob: -3.748751401901245
    7. ' trans' → logprob: -3.748751401901245
    8. 'coeff' → logprob: -4.123751163482666
    9. 'matrix' → logprob: -4.873751163482666
    10. ' recurrence' → logprob: -5.123751163482666

Token 473: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0030895359814167023
    2. 'mat' → logprob: -6.128089427947998
    3. 'transition' → logprob: -8.128089904785156
    4. 'MAT' → logprob: -8.128089904785156
    5. ' matrix' → logprob: -8.753089904785156
    6. '_matrix' → logprob: -9.378089904785156
    7. 'M' → logprob: -10.753089904785156
    8. 'adj' → logprob: -11.378089904785156
    9. 'A' → logprob: -11.628089904785156
    10. 'representation' → logprob: -12.253089904785156

Token 474: ' MAT' (ID: 47915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8783518075942993
    2. 'MAT' → logprob: -1.3783518075942993
    3. 'mat' → logprob: -1.6283518075942993
    4. ' mat' → logprob: -3.2533516883850098
    5. '```' → logprob: -4.25335168838501
    6. 'matrix' → logprob: -4.25335168838501
    7. '   ' → logprob: -4.62835168838501
    8. ' MAT' → logprob: -4.62835168838501
    9. 's' → logprob: -4.87835168838501
    10. 'S' → logprob: -5.12835168838501

Token 475: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008177272975444794
    2. '<|end|>' → logprob: -7.500817775726318
    3. '   ' → logprob: -9.50081729888916
    4. ',' → logprob: -9.87581729888916
    5. '        
' → logprob: -10.37581729888916
    6. ')' → logprob: -10.50081729888916
    7. '[' → logprob: -10.87581729888916
    8. '```' → logprob: -11.37581729888916
    9. '<|end|>' → logprob: -12.00081729888916
    10. ':' → logprob: -12.25081729888916

Token 476: ' Nx' (ID: 178338)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12322948127985
    2. '(N' → logprob: -2.498229503631592
    3. '[N' → logprob: -4.498229503631592
    4. 'T' → logprob: -4.873229503631592
    5. ' N' → logprob: -4.998229503631592
    6. ' (' → logprob: -6.123229503631592
    7. '(T' → logprob: -6.373229503631592
    8. ' =' → logprob: -7.373229503631592
    9. 'A' → logprob: -7.623229503631592
    10. '[' → logprob: -7.748229503631592

Token 477: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005956856766715646
    2. '1' → logprob: -7.500595569610596
    3. '(N' → logprob: -10.625596046447754
    4. ' N' → logprob: -12.000596046447754
    5. '(' → logprob: -12.125596046447754
    6. ' ' → logprob: -13.625596046447754
    7. '2' → logprob: -14.000596046447754
    8. '   ' → logprob: -14.250596046447754
    9. '[N' → logprob: -14.250596046447754
    10. 'n' → logprob: -14.375596046447754

Token 478: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041458409396000206
    2. '
' → logprob: -8.875414848327637
    3. '<|end|>' → logprob: -9.000414848327637
    4. '```' → logprob: -10.375414848327637
    5. '        
' → logprob: -10.500414848327637
    6. '   ' → logprob: -10.625414848327637
    7. ',' → logprob: -10.750414848327637
    8. 'MAT' → logprob: -11.125414848327637
    9. 'mat' → logprob: -11.625414848327637
    10. ' for' → logprob: -12.875414848327637

Token 479: ' only' (ID: 1606)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6188146471977234
    2. '1' → logprob: -0.8688146471977234
    3. '{i' → logprob: -3.993814706802368
    4. '0' → logprob: -5.118814468383789
    5. 'for' → logprob: -5.743814468383789
    6. 'A' → logprob: -5.868814468383789
    7. '{
' → logprob: -5.868814468383789
    8. 'ones' → logprob: -6.493814468383789
    9. 'default' → logprob: -6.618814468383789
    10. 'N' → logprob: -6.868814468383789

Token 480: ' up' (ID: 869)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38584962487220764
    2. 'for' → logprob: -2.510849714279175
    3. 'i' → logprob: -3.010849714279175
    4. '{' → logprob: -3.260849714279175
    5. '{i' → logprob: -3.260849714279175
    6. 'A' → logprob: -3.510849714279175
    7. '(' → logprob: -3.635849714279175
    8. 'one' → logprob: -4.010849475860596
    9. 'ones' → logprob: -5.010849475860596
    10. ' ones' → logprob: -5.135849475860596

Token 481: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14769089221954346
    2. 'p' → logprob: -2.272690773010254
    3. 'o' → logprob: -4.522690773010254
    4. 'per' → logprob: -4.772690773010254
    5. 'pto' → logprob: -4.772690773010254
    6. ' to' → logprob: -5.522690773010254
    7. '_to' → logprob: -7.397690773010254
    8. 'on' → logprob: -8.147690773010254
    9. 'ntil' → logprob: -8.647690773010254
    10. 'b' → logprob: -8.897690773010254

Token 482: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3871186077594757
    2. '2' → logprob: -1.6371185779571533
    3. '1' → logprob: -2.8871185779571533
    4. '3' → logprob: -3.2621185779571533
    5. 'two' → logprob: -5.262118816375732
    6. 'i' → logprob: -5.387118816375732
    7. '(N' → logprob: -5.637118816375732
    8. 'A' → logprob: -5.637118816375732
    9. 'one' → logprob: -5.762118816375732
    10. '4' → logprob: -5.887118816375732

Token 483: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20222215354442596
    2. '2' → logprob: -1.8272221088409424
    3. '4' → logprob: -4.4522223472595215
    4. 'N' → logprob: -5.2022223472595215
    5. '1' → logprob: -6.4522223472595215
    6. 'A' → logprob: -6.9522223472595215
    7. '5' → logprob: -7.2022223472595215
    8. 'B' → logprob: -7.4522223472595215
    9. 'three' → logprob: -7.9522223472595215
    10. 'T' → logprob: -8.077221870422363

Token 484: ' entries' (ID: 18614)
  Prédit: ' entries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entries' → logprob: -0.9178929328918457
    2. ' non' → logprob: -1.2928929328918457
    3. 'entries' → logprob: -1.9178929328918457
    4. 'non' → logprob: -2.5428929328918457
    5. ' elements' → logprob: -3.7928929328918457
    6. 'rows' → logprob: -4.292892932891846
    7. 'indices' → logprob: -4.292892932891846
    8. 'elements' → logprob: -4.542892932891846
    9. 'for' → logprob: -5.042892932891846
    10. ' for' → logprob: -5.042892932891846

Token 485: ' per' (ID: 777)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6544044017791748
    2. ' for' → logprob: -1.0294044017791748
    3. 'per' → logprob: -2.904404401779175
    4. ' per' → logprob: -3.279404401779175
    5. 'each' → logprob: -4.404404640197754
    6. ' in' → logprob: -5.529404640197754
    7. ':' → logprob: -5.654404640197754
    8. '       ' → logprob: -6.154404640197754
    9. ' each' → logprob: -6.154404640197754
    10. 'in' → logprob: -6.154404640197754

Token 486: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.026520662009716034
    2. ' row' → logprob: -3.7765207290649414
    3. 'i' → logprob: -5.901520729064941
    4. '```' → logprob: -8.401520729064941
    5. 'line' → logprob: -9.401520729064941
    6. ' i' → logprob: -10.151520729064941
    7. '[i' → logprob: -10.401520729064941
    8. '-row' → logprob: -10.651520729064941
    9. '	row' → logprob: -10.651520729064941
    10. '<|end|>' → logprob: -10.901520729064941

Token 487: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011843960965052247
    2. '<|end|>' → logprob: -7.376184463500977
    3. ',' → logprob: -8.126184463500977
    4. ' for' → logprob: -9.376184463500977
    5. ':' → logprob: -9.751184463500977
    6. '        
' → logprob: -11.001184463500977
    7. '{' → logprob: -11.126184463500977
    8. '```' → logprob: -11.251184463500977
    9. 'for' → logprob: -11.501184463500977
    10. '<|end|>' → logprob: -11.626184463500977

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007314481306821108
    2. '   ' → logprob: -5.632314682006836
    3. ' for' → logprob: -6.507314682006836
    4. '<|end|>' → logprob: -6.507314682006836
    5. '```' → logprob: -8.632314682006836
    6. '[' → logprob: -8.632314682006836
    7. ',' → logprob: -9.007314682006836
    8. '        
' → logprob: -9.382314682006836
    9. ':' → logprob: -10.882314682006836
    10. ')' → logprob: -11.382314682006836

Token 489: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' (adapté à ' MAT') → logprob: -0.0026294002309441566
    2. '       ' → logprob: -6.877629280090332
    3. 'mat' → logprob: -7.377629280090332
    4. ' MAT' → logprob: -7.502629280090332
    5. '   ' → logprob: -8.252629280090332
    6. 'M' → logprob: -9.627629280090332
    7. 'for' → logprob: -10.877629280090332
    8. '```' → logprob: -10.877629280090332
    9. ' mat' → logprob: -11.127629280090332
    10. ' for' → logprob: -11.252629280090332

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474192351102829
    2. '=' → logprob: -0.9741923809051514
    3. '[' → logprob: -10.09919261932373
    4. '=[]' → logprob: -10.59919261932373
    5. '   ' → logprob: -10.97419261932373
    6. '=[' → logprob: -10.97419261932373
    7. ' =[' → logprob: -11.84919261932373
    8. '=[[' → logprob: -13.72419261932373
    9. '=[
' → logprob: -14.22419261932373
    10. ' ' → logprob: -14.47419261932373

Token 491: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.994086627149954e-05
    2. ' [' → logprob: -9.750080108642578
    3. ' [{}' → logprob: -11.000080108642578
    4. '[{' → logprob: -12.250080108642578
    5. '   ' → logprob: -16.500080108642578
    6. ' ' → logprob: -18.000080108642578
    7. '[
' → logprob: -18.125080108642578
    8. '[len' → logprob: -18.250080108642578
    9. '[]' → logprob: -18.500080108642578
    10. '[n' → logprob: -19.375080108642578

Token 492: 'dict' (ID: 20993)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.12878434360027313
    2. 'dict' → logprob: -2.128784418106079
    3. '{' → logprob: -6.3787841796875
    4. '{
' → logprob: -9.8787841796875
    5. '{})' → logprob: -10.5037841796875
    6. '   ' → logprob: -10.6287841796875
    7. '{}
' → logprob: -11.1287841796875
    8. ']' → logprob: -11.3787841796875
    9. ' {}' → logprob: -11.7537841796875
    10. ' dict' → logprob: -12.0037841796875

Token 493: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006357124075293541
    2. '()]' → logprob: -7.500635623931885
    3. '()
' → logprob: -10.125636100769043
    4. 'for' → logprob: -10.375636100769043
    5. ' for' → logprob: -13.375636100769043
    6. ' ()' → logprob: -13.500636100769043
    7. ']()' → logprob: -13.625636100769043
    8. '()]
' → logprob: -13.625636100769043
    9. '()][' → logprob: -13.875636100769043
    10. '   ' → logprob: -14.375636100769043

Token 494: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026243288069963455
    2. '()]' → logprob: -4.651243209838867
    3. ' for' → logprob: -5.026243209838867
    4. 'for' → logprob: -5.026243209838867
    5. ']' → logprob: -6.151243209838867
    6. '       ' → logprob: -7.901243209838867
    7. ']()' → logprob: -8.401243209838867
    8. '()
' → logprob: -9.401243209838867
    9. '   ' → logprob: -9.526243209838867
    10. ')' → logprob: -9.901243209838867

Token 495: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5384141206741333
    2. ' in' → logprob: -1.0384141206741333
    3. '_' → logprob: -3.0384140014648438
    4. ' range' → logprob: -4.788414001464844
    5. 'range' → logprob: -5.163414001464844
    6. ' _' → logprob: -8.413414001464844
    7. 'i' → logprob: -9.788414001464844
    8. '(range' → logprob: -10.288414001464844
    9. '_range' → logprob: -10.663414001464844
    10. ' i' → logprob: -11.663414001464844

Token 496: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006981526035815477
    2. ' range' → logprob: -5.006981372833252
    3. 'in' → logprob: -8.25698184967041
    4. ' in' → logprob: -12.13198184967041
    5. '(range' → logprob: -13.63198184967041
    6. '	range' → logprob: -17.006980895996094
    7. 'ange' → logprob: -18.006980895996094
    8. '_range' → logprob: -18.881980895996094
    9. ' ' → logprob: -19.256980895996094
    10. '```' → logprob: -19.631980895996094

Token 497: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -15.505233764648438
    4. ' ' → logprob: -18.380233764648438
    5. '   ' → logprob: -19.505233764648438
    6. '	range' → logprob: -19.630233764648438
    7. '  ' → logprob: -20.005233764648438
    8. '
' → logprob: -21.755233764648438
    9. '    ' → logprob: -21.880233764648438
    10. 'N' → logprob: -22.255233764648438

Token 498: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008165352046489716
    2. 'N' → logprob: -7.125816345214844
    3. 'range' → logprob: -11.875816345214844
    4. '(' → logprob: -12.625816345214844
    5. '(n' → logprob: -13.375816345214844
    6. ')' → logprob: -16.750816345214844
    7. ' range' → logprob: -16.875816345214844
    8. '
' → logprob: -17.125816345214844
    9. 'n' → logprob: -17.250816345214844
    10. '(M' → logprob: -17.875816345214844

Token 499: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014310170896351337
    2. ')]
' → logprob: -4.264310359954834
    3. ']' → logprob: -9.889309883117676
    4. '   ' → logprob: -10.264309883117676
    5. ')' → logprob: -10.389309883117676
    6. ')]
' → logprob: -11.139309883117676
    7. '       ' → logprob: -11.889309883117676
    8. ')]

' → logprob: -12.889309883117676
    9. ')][' → logprob: -13.264309883117676
    10. ']
' → logprob: -13.889309883117676

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10725412517786026
    2. ' for' → logprob: -2.9822540283203125
    3. 'for' → logprob: -3.1072540283203125
    4. 'MAT' → logprob: -5.3572540283203125
    5. '   ' → logprob: -7.6072540283203125
    6. '<|end|>' → logprob: -7.8572540283203125
    7. '```' → logprob: -8.232254028320312
    8. '[' → logprob: -8.482254028320312
    9. 'mat' → logprob: -9.482254028320312
    10. ')' → logprob: -10.982254028320312

Token 501: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7313205003738403
    2. 'MAT' → logprob: -0.9813205003738403
    3. 'for' (adapté à ' for') → logprob: -2.106320381164551
    4. ' for' → logprob: -4.231320381164551
    5. 'if' → logprob: -5.231320381164551
    6. ' MAT' → logprob: -6.731320381164551
    7. ' if' → logprob: -7.481320381164551
    8. '   ' → logprob: -7.981320381164551
    9. '```' → logprob: -9.73132038116455
    10. 'mat' → logprob: -10.35632038116455

Token 502: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20149725675582886
    2. 'i' → logprob: -1.7014973163604736
    3. ' ' → logprob: -11.326497077941895
    4. '_i' → logprob: -11.576497077941895
    5. 'k' → logprob: -11.701497077941895
    6. ' k' → logprob: -11.951497077941895
    7. 'x' → logprob: -11.951497077941895
    8. ' x' → logprob: -12.076497077941895
    9. ' j' → logprob: -12.076497077941895
    10. 't' → logprob: -12.201497077941895

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014181028120219707
    2. 'in' → logprob: -4.264181137084961
    3. ' ' → logprob: -11.514181137084961
    4. '_' → logprob: -12.889181137084961
    5. '	in' → logprob: -13.139181137084961
    6. '<|end|>' → logprob: -14.139181137084961
    7. 'range' → logprob: -14.264181137084961
    8. ',' → logprob: -14.889181137084961
    9. ' i' → logprob: -15.639181137084961
    10. '   ' → logprob: -15.639181137084961

Token 504: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06199973449110985
    2. 'range' → logprob: -2.811999797821045
    3. ' ' → logprob: -10.936999320983887
    4. ' in' → logprob: -11.936999320983887
    5. '(range' → logprob: -12.436999320983887
    6. '   ' → logprob: -14.061999320983887
    7. ' xrange' → logprob: -14.311999320983887
    8. 'in' → logprob: -14.436999320983887
    9. '	range' → logprob: -14.686999320983887
    10. '  ' → logprob: -14.936999320983887

Token 505: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.804700493812561
    2. '(N' → logprob: -0.804700493812561
    3. 'range' → logprob: -2.3047003746032715
    4. '(range' → logprob: -6.0547003746032715
    5. 'N' → logprob: -6.3047003746032715
    6. '1' → logprob: -6.8047003746032715
    7. ' range' → logprob: -7.6797003746032715
    8. '(n' → logprob: -12.17970085144043
    9. ' ' → logprob: -12.42970085144043
    10. 'Range' → logprob: -12.80470085144043

Token 506: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07370826601982117
    2. '):
' → logprob: -2.8237082958221436
    3. ' -' → logprob: -4.8237080574035645
    4. '):' → logprob: -6.3237080574035645
    5. '   ' → logprob: -7.0737080574035645
    6. '+' → logprob: -7.5737080574035645
    7. '       ' → logprob: -8.448708534240723
    8. '):
' → logprob: -9.948708534240723
    9. ')' → logprob: -10.448708534240723
    10. '[:-' → logprob: -10.448708534240723

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041968789882957935
    2. ' if' → logprob: -6.379196643829346
    3. '       ' → logprob: -6.754196643829346
    4. '<|end|>' → logprob: -7.504196643829346
    5. '   ' → logprob: -8.129197120666504
    6. '```' → logprob: -8.379197120666504
    7. ',' → logprob: -9.629197120666504
    8. '	       ' → logprob: -10.254197120666504
    9. '<|end|>' → logprob: -10.629197120666504
    10. '          ' → logprob: -11.129197120666504

Token 508: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020091921091079712
    2. ' if' → logprob: -4.395092010498047
    3. '           ' → logprob: -5.395092010498047
    4. '       ' → logprob: -6.020092010498047
    5. 'MAT' → logprob: -7.770092010498047
    6. 'for' → logprob: -9.145092010498047
    7. '   ' → logprob: -10.770092010498047
    8. 'mat' → logprob: -11.020092010498047
    9. '```' → logprob: -12.520092010498047
    10. ' ' → logprob: -12.770092010498047

Token 509: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009841437451541424
    2. ' i' → logprob: -4.634841442108154
    3. '0' → logprob: -10.134840965270996
    4. '(i' → logprob: -11.259840965270996
    5. ' ' → logprob: -11.509840965270996
    6. '   ' → logprob: -11.759840965270996
    7. '1' → logprob: -11.759840965270996
    8. '  ' → logprob: -12.884840965270996
    9. '     ' → logprob: -14.134840965270996
    10. '    ' → logprob: -14.134840965270996

Token 510: '-' (ID: 12)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.750931441783905
    2. '+' → logprob: -1.2509315013885498
    3. '-' → logprob: -2.00093150138855
    4. ' >' → logprob: -2.75093150138855
    5. '==' → logprob: -4.125931262969971
    6. ' <' → logprob: -5.000931262969971
    7. '0' → logprob: -5.000931262969971
    8. ' ==' → logprob: -5.375931262969971
    9. ' +' → logprob: -6.000931262969971
    10. ' -' → logprob: -6.125931262969971

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018287718296051025
    2. ' ' → logprob: -4.018287658691406
    3. '>' → logprob: -9.393287658691406
    4. '0' → logprob: -10.268287658691406
    5. ' >' → logprob: -11.768287658691406
    6. '   ' → logprob: -12.893287658691406
    7. '=' → logprob: -13.143287658691406
    8. '  ' → logprob: -13.893287658691406
    9. '```' → logprob: -13.893287658691406
    10. ' i' → logprob: -14.143287658691406

Token 512: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.029168976470828056
    2. ' >=' → logprob: -4.029169082641602
    3. ' in' → logprob: -5.154169082641602
    4. ')>=' → logprob: -6.279169082641602
    5. ']>=' → logprob: -6.404169082641602
    6. '>' → logprob: -7.154169082641602
    7. 'in' → logprob: -7.779169082641602
    8. ')' → logprob: -8.029169082641602
    9. ' ' → logprob: -10.154169082641602
    10. '   ' → logprob: -10.404169082641602

Token 513: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.127185821533203
    4. '1' → logprob: -16.877185821533203
    5. ' ' → logprob: -17.877185821533203
    6. '```' → logprob: -18.002185821533203
    7. '۰' → logprob: -18.502185821533203
    8. '<|end|>' → logprob: -18.627185821533203
    9. '  ' → logprob: -18.939685821533203
    10. '=' → logprob: -18.939685821533203

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.87502098083496
    4. '1' → logprob: -17.12502098083496
    5. '
' → logprob: -19.25002098083496
    6. '۰' → logprob: -19.37502098083496
    7. '    ' → logprob: -19.62502098083496
    8. '```' → logprob: -19.75002098083496
    9. '           ' → logprob: -19.81252098083496
    10. '=' → logprob: -20.25002098083496

Token 515: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.025807376950979233
    2. ':' → logprob: -3.9008073806762695
    3. '           ' → logprob: -5.4008073806762695
    4. '):
' → logprob: -8.27580738067627
    5. '               ' → logprob: -8.27580738067627
    6. ' and' → logprob: -8.90080738067627
    7. '       ' → logprob: -10.02580738067627
    8. 'MAT' → logprob: -11.52580738067627
    9. ':
' → logprob: -12.02580738067627
    10. ',' → logprob: -12.02580738067627

Token 516: ' A' (ID: 355)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAT' → logprob: -0.2018028199672699
    2. ' MAT' → logprob: -2.7018027305603027
    3. 'i' → logprob: -2.9518027305603027
    4. '           ' → logprob: -3.7018027305603027
    5. ' i' → logprob: -3.9518027305603027
    6. '0' → logprob: -4.451802730560303
    7. '               ' → logprob: -6.451802730560303
    8. '1' → logprob: -6.576802730560303
    9. ' ' → logprob: -6.701802730560303
    10. '(i' → logprob: -7.326802730560303

Token 517: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8664740324020386
    2. 'in' → logprob: -1.9914740324020386
    3. '>' → logprob: -2.366474151611328
    4. ']' → logprob: -2.491474151611328
    5. '!=' → logprob: -2.491474151611328
    6. ']!=' → logprob: -3.866474151611328
    7. ':
' → logprob: -3.991474151611328
    8. '[i' → logprob: -3.991474151611328
    9. ' !=' → logprob: -4.116474151611328
    10. '[' → logprob: -4.116474151611328

Token 518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025287605240009725
    2. ' ' → logprob: -8.375252723693848
    3. '1' → logprob: -10.875252723693848
    4. '=' → logprob: -13.375252723693848
    5. 'None' → logprob: -14.000252723693848
    6. '```' → logprob: -14.750252723693848
    7. '
' → logprob: -16.500253677368164
    8. 'A' → logprob: -16.875253677368164
    9. '   ' → logprob: -17.000253677368164
    10. ' None' → logprob: -17.125253677368164

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.746380237629637e-05
    2. ' ' → logprob: -9.250097274780273
    3. '1' → logprob: -14.125097274780273
    4. 'None' → logprob: -15.000097274780273
    5. '-' → logprob: -16.375097274780273
    6. '=' → logprob: -16.625097274780273
    7. '[' → logprob: -17.125097274780273
    8. '```' → logprob: -17.125097274780273
    9. 'A' → logprob: -17.875097274780273
    10. '
' → logprob: -18.312597274780273

Token 520: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0244583897292614
    2. ':' → logprob: -3.774458408355713
    3. '           ' → logprob: -7.649458408355713
    4. ' and' → logprob: -8.024457931518555
    5. '       ' → logprob: -8.274457931518555
    6. '):
' → logprob: -9.274457931518555
    7. ' :
' → logprob: -11.274457931518555
    8. '   ' → logprob: -11.774457931518555
    9. 'and' → logprob: -12.024457931518555
    10. '               ' → logprob: -12.024457931518555

Token 521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006074198987334967
    2. '           ' → logprob: -5.25607442855835
    3. 'MAT' → logprob: -8.381073951721191
    4. '	           ' → logprob: -9.506073951721191
    5. ' MAT' → logprob: -9.506073951721191
    6. ',' → logprob: -9.631073951721191
    7. '	       ' → logprob: -9.756073951721191
    8. ':
' → logprob: -9.756073951721191
    9. '       ' → logprob: -9.881073951721191
    10. ':' → logprob: -10.006073951721191

Token 522: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' (adapté à ' MAT') → logprob: -0.01966525800526142
    2. ' MAT' → logprob: -4.269665241241455
    3. '               ' → logprob: -5.269665241241455
    4. '           ' → logprob: -8.144665718078613
    5. '                   ' → logprob: -10.769665718078613
    6. ' ' → logprob: -12.144665718078613
    7. '   ' → logprob: -12.144665718078613
    8. '                ' → logprob: -12.519665718078613
    9. '              ' → logprob: -12.644665718078613
    10. '```' → logprob: -13.019665718078613

Token 523: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. '[I' → logprob: -16.0
    4. 'i' → logprob: -16.5
    5. '```' → logprob: -17.0
    6. '][' → logprob: -17.625
    7. '   ' → logprob: -18.0
    8. ' [' → logprob: -18.125
    9. ')[' → logprob: -18.125
    10. '\[' → logprob: -18.25

Token 524: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004698903299868107
    2. '[i' → logprob: -5.504698753356934
    3. '].' → logprob: -8.379698753356934
    4. '-' → logprob: -9.004698753356934
    5. ']' → logprob: -9.129698753356934
    6. '   ' → logprob: -9.504698753356934
    7. '][-' → logprob: -10.629698753356934
    8. ' ][' → logprob: -10.879698753356934
    9. ' ' → logprob: -11.754698753356934
    10. '       ' → logprob: -12.504698753356934

Token 525: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.482821431243792e-05
    2. '(i' → logprob: -9.75008487701416
    3. '   ' → logprob: -11.12508487701416
    4. ' i' → logprob: -12.12508487701416
    5. ' ' → logprob: -12.37508487701416
    6. '
' → logprob: -15.00008487701416
    7. '  ' → logprob: -15.25008487701416
    8. '     ' → logprob: -15.37508487701416
    9. ' (' → logprob: -15.37508487701416
    10. '0' → logprob: -15.50008487701416

Token 526: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001093841710826382
    2. ' -' → logprob: -9.125109672546387
    3. '1' → logprob: -15.875109672546387
    4. '```' → logprob: -16.50010871887207
    5. ']' → logprob: -16.62510871887207
    6. ']-' → logprob: -17.62510871887207
    7. '   ' → logprob: -17.75010871887207
    8. '[' → logprob: -17.87510871887207
    9. ' ' → logprob: -18.50010871887207
    10. '()-' → logprob: -19.00010871887207

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '```' → logprob: -15.875000953674316
    5. ']' → logprob: -16.500001907348633
    6. '2' → logprob: -16.875001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. 'import' → logprob: -17.625001907348633
    9. '
' → logprob: -17.937501907348633
    10. '...' → logprob: -18.125001907348633

Token 528: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004693088121712208
    2. ']=' → logprob: -5.379693031311035
    3. ' ]' → logprob: -9.754693031311035
    4. ']=(' → logprob: -11.254693031311035
    5. '=' → logprob: -14.004693031311035
    6. ']+=' → logprob: -14.129693031311035
    7. '   ' → logprob: -16.50469398498535
    8. ')' → logprob: -17.00469398498535
    9. ']
' → logprob: -17.12969398498535
    10. ']={' → logprob: -17.12969398498535

Token 529: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03036092035472393
    2. ' =' → logprob: -3.5303609371185303
    3. '=A' → logprob: -7.405360698699951
    4. ']=' → logprob: -14.40536117553711
    5. '=B' → logprob: -14.78036117553711
    6. ']' → logprob: -15.03036117553711
    7. '+=' → logprob: -15.15536117553711
    8. '=C' → logprob: -15.90536117553711
    9. '%=' → logprob: -16.28036117553711
    10. '=i' → logprob: -16.28036117553711

Token 530: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.1186566047836095e-05
    2. ' A' → logprob: -11.250031471252441
    3. '(A' → logprob: -11.500031471252441
    4. 'B' → logprob: -12.625031471252441
    5. 'C' → logprob: -13.000031471252441
    6. '(' → logprob: -13.250031471252441
    7. '	A' → logprob: -16.000030517578125
    8. '1' → logprob: -16.000030517578125
    9. ' ' → logprob: -16.250030517578125
    10. '   ' → logprob: -16.375030517578125

Token 531: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10782665759325027
    2. '
' → logprob: -2.6078267097473145
    3. '       ' → logprob: -3.8578267097473145
    4. '<|end|>' → logprob: -5.8578267097473145
    5. '        
' → logprob: -6.7328267097473145
    6. ' 
' → logprob: -7.1078267097473145
    7. '    
' → logprob: -7.6078267097473145
    8. '            
' → logprob: -7.7328267097473145
    9. ' if' → logprob: -8.107826232910156
    10. '  
' → logprob: -8.357826232910156

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47224128246307373
    2. '<|end|>' → logprob: -1.3472412824630737
    3. '       ' → logprob: -2.5972414016723633
    4. '
' → logprob: -3.4722414016723633
    5. ' 
' → logprob: -5.597241401672363
    6. ' if' → logprob: -6.222241401672363
    7. '        
' → logprob: -6.847241401672363
    8. '<|end|>' → logprob: -7.222241401672363
    9. '  
' → logprob: -7.597241401672363
    10. '            
' → logprob: -7.722241401672363

Token 533: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10611375421285629
    2. 'if' (adapté à ' if') → logprob: -2.7311136722564697
    3. '       ' → logprob: -3.3561136722564697
    4. '           ' → logprob: -7.981113910675049
    5. '<|end|>' → logprob: -9.23111343383789
    6. '        ' → logprob: -9.60611343383789
    7. ' ' → logprob: -9.73111343383789
    8. '   ' → logprob: -11.10611343383789
    9. ' 
' → logprob: -11.60611343383789
    10. '[' → logprob: -11.73111343383789

Token 534: ' B' (ID: 418)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43102821707725525
    2. ' i' → logprob: -1.0560282468795776
    3. 'B' → logprob: -6.806028366088867
    4. 'C' → logprob: -7.681028366088867
    5. ' B' → logprob: -8.681028366088867
    6. '(i' → logprob: -8.681028366088867
    7. ' (' → logprob: -9.056028366088867
    8. ' C' → logprob: -9.306028366088867
    9. ' ' → logprob: -9.931028366088867
    10. 'A' → logprob: -10.431028366088867

Token 535: ' !=' (ID: 1666)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00499441334977746
    2. '[' → logprob: -5.5049943923950195
    3. '           ' → logprob: -8.25499439239502
    4. '!=' → logprob: -8.50499439239502
    5. '<|end|>' → logprob: -9.37999439239502
    6. '       ' → logprob: -9.50499439239502
    7. ' !=' → logprob: -10.00499439239502
    8. '```' → logprob: -10.00499439239502
    9. 'i' → logprob: -10.12999439239502
    10. '   ' → logprob: -10.37999439239502

Token 536: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029753267765045166
    2. ' ' → logprob: -3.5297532081604004
    3. '   ' → logprob: -14.029753684997559
    4. '       ' → logprob: -14.529753684997559
    5. '           ' → logprob: -15.154753684997559
    6. ' ' → logprob: -15.529753684997559
    7. '  ' → logprob: -15.779753684997559
    8. '        ' → logprob: -15.904753684997559
    9. '=' → logprob: -16.029752731323242
    10. 'None' → logprob: -16.779752731323242

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000205566844670102
    2. ' ' → logprob: -8.500205993652344
    3. '=' → logprob: -13.375205993652344
    4. '1' → logprob: -14.750205993652344
    5. '   ' → logprob: -17.750205993652344
    6. '```' → logprob: -17.750205993652344
    7. 'i' → logprob: -18.125205993652344
    8. 'None' → logprob: -18.250205993652344
    9. '  ' → logprob: -18.750205993652344
    10. '
' → logprob: -19.125205993652344

Token 538: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34176886081695557
    2. '           ' → logprob: -1.9667688608169556
    3. ':' → logprob: -2.466768741607666
    4. '[' → logprob: -4.216768741607666
    5. '[i' → logprob: -4.216768741607666
    6. ' and' → logprob: -4.341768741607666
    7. '       ' → logprob: -4.466768741607666
    8. '               ' → logprob: -5.216768741607666
    9. '[M' → logprob: -6.466768741607666
    10. '          ' → logprob: -7.466768741607666

Token 539: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3071536123752594
    2. '               ' → logprob: -1.557153582572937
    3. 'MAT' → logprob: -3.0571537017822266
    4. ' MAT' → logprob: -6.182153701782227
    5. '       ' → logprob: -6.307153701782227
    6. '```' → logprob: -6.932153701782227
    7. ' ' → logprob: -7.682153701782227
    8. '	       ' → logprob: -8.432153701782227
    9. '<|end|>' → logprob: -8.557153701782227
    10. ' ' → logprob: -8.557153701782227

Token 540: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' (adapté à ' MAT') → logprob: -0.0003914695407729596
    2. ' MAT' → logprob: -7.875391483306885
    3. '           ' → logprob: -11.750391006469727
    4. '       ' → logprob: -13.625391006469727
    5. 'i' → logprob: -14.250391006469727
    6. 'mat' → logprob: -14.500391006469727
    7. '               ' → logprob: -14.750391006469727
    8. 'M' → logprob: -14.875391006469727
    9. '   ' → logprob: -15.875391006469727
    10. ' ' → logprob: -16.375391006469727

Token 541: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007511401199735701
    2. '][' → logprob: -7.25075101852417
    3. 'i' → logprob: -11.000751495361328
    4. '[' → logprob: -11.125751495361328
    5. '           ' → logprob: -12.125751495361328
    6. '[I' → logprob: -14.000751495361328
    7. '       ' → logprob: -14.250751495361328
    8. ' [' → logprob: -14.250751495361328
    9. ')[' → logprob: -14.625751495361328
    10. ']' → logprob: -15.125751495361328

Token 542: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0265666376799345
    2. '[i' → logprob: -3.651566743850708
    3. '   ' → logprob: -9.651566505432129
    4. ']' → logprob: -9.776566505432129
    5. ' ][' → logprob: -9.901566505432129
    6. ')[' → logprob: -10.651566505432129
    7. '}[' → logprob: -10.651566505432129
    8. '[' → logprob: -11.026566505432129
    9. '       ' → logprob: -12.276566505432129
    10. '[j' → logprob: -12.526566505432129

Token 543: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012201975914649665
    2. ' i' → logprob: -9.7501220703125
    3. '(i' → logprob: -9.8751220703125
    4. '
' → logprob: -12.6251220703125
    5. '(' → logprob: -12.7501220703125
    6. '   ' → logprob: -13.3751220703125
    7. ' (' → logprob: -13.7501220703125
    8. ' ' → logprob: -13.8751220703125
    9. '[i' → logprob: -15.0001220703125
    10. '
' → logprob: -15.0001220703125

Token 544: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008705925196409225
    2. ']=' → logprob: -4.758706092834473
    3. ' ]' → logprob: -10.133706092834473
    4. ']+=' → logprob: -10.508706092834473
    5. '%' → logprob: -11.758706092834473
    6. '+' → logprob: -12.508706092834473
    7. '[' → logprob: -13.008706092834473
    8. '=' → logprob: -13.133706092834473
    9. '   ' → logprob: -13.258706092834473
    10. '-' → logprob: -13.758706092834473

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00469569955021143
    2. ' =' → logprob: -5.379695892333984
    3. ']=' → logprob: -10.254695892333984
    4. '[' → logprob: -10.879695892333984
    5. ']' → logprob: -11.254695892333984
    6. '=B' → logprob: -12.379695892333984
    7. '=i' → logprob: -13.504695892333984
    8. '<|end|>' → logprob: -13.504695892333984
    9. '=A' → logprob: -15.254695892333984
    10. '[i' → logprob: -15.629695892333984

Token 546: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006378580583259463
    2. ' B' → logprob: -7.375638008117676
    3. '(B' → logprob: -11.625638008117676
    4. '(' → logprob: -13.125638008117676
    5. ' (' → logprob: -15.250638008117676
    6. '	B' → logprob: -16.62563705444336
    7. '((' → logprob: -19.25063705444336
    8. '           ' → logprob: -19.75063705444336
    9. ' ' → logprob: -19.87563705444336
    10. '=B' → logprob: -19.87563705444336

Token 547: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024475925602018833
    2. '
' → logprob: -6.127447605133057
    3. '<|end|>' → logprob: -9.002447128295898
    4. '       ' → logprob: -9.627447128295898
    5. '            
' → logprob: -11.002447128295898
    6. ' if' → logprob: -11.502447128295898
    7. '    
' → logprob: -11.627447128295898
    8. '   ' → logprob: -11.877447128295898
    9. 'if' → logprob: -12.002447128295898
    10. '          ' → logprob: -12.252447128295898

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007378002628684044
    2. '       ' → logprob: -8.750738143920898
    3. 'if' → logprob: -8.875738143920898
    4. '   ' → logprob: -8.875738143920898
    5. ' if' → logprob: -8.875738143920898
    6. '```' → logprob: -9.000738143920898
    7. '<|end|>' → logprob: -11.500738143920898
    8. '	       ' → logprob: -11.750738143920898
    9. ' ' → logprob: -12.500738143920898
    10. '          ' → logprob: -12.625738143920898

Token 549: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4775773286819458
    2. ' if' → logprob: -1.7275773286819458
    3. '           ' → logprob: -1.8525773286819458
    4. '       ' → logprob: -3.1025772094726562
    5. '   ' → logprob: -9.102577209472656
    6. '```' → logprob: -9.602577209472656
    7. ' ' → logprob: -10.477577209472656
    8. '	if' → logprob: -11.727577209472656
    9. '<|end|>' → logprob: -12.477577209472656
    10. '          ' → logprob: -12.602577209472656

Token 550: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39051952958106995
    2. ' i' → logprob: -1.1405194997787476
    3. '(i' → logprob: -6.265519618988037
    4. 'C' → logprob: -7.015519618988037
    5. ' (' → logprob: -7.265519618988037
    6. ' C' → logprob: -9.390519142150879
    7. '   ' → logprob: -10.890519142150879
    8. ' ' → logprob: -11.015519142150879
    9. '(' → logprob: -11.640519142150879
    10. '(C' → logprob: -12.390519142150879

Token 551: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.062085434794425964
    2. ' +' → logprob: -2.8120853900909424
    3. ' <' → logprob: -9.312085151672363
    4. '+i' → logprob: -11.937085151672363
    5. '[i' → logprob: -12.437085151672363
    6. '[' → logprob: -12.437085151672363
    7. '-' → logprob: -12.687085151672363
    8. '<' → logprob: -13.062085151672363
    9. ' ' → logprob: -13.687085151672363
    10. 'i' → logprob: -13.812085151672363

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234713666141033
    2. ' ' → logprob: -5.255234718322754
    3. '```' → logprob: -15.255234718322754
    4. 'i' → logprob: -16.255233764648438
    5. '
' → logprob: -16.505233764648438
    6. '+' → logprob: -16.505233764648438
    7. ' i' → logprob: -16.755233764648438
    8. '   ' → logprob: -17.255233764648438
    9. '=' → logprob: -17.630233764648438
    10. '0' → logprob: -17.755233764648438

Token 553: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23849523067474365
    2. ' <' → logprob: -1.8634952306747437
    3. '<=' → logprob: -2.988495349884033
    4. '<' → logprob: -5.363495349884033
    5. '[' → logprob: -6.863495349884033
    6. '<N' → logprob: -7.988495349884033
    7. ' ' → logprob: -9.113494873046875
    8. '<|end|>' → logprob: -9.113494873046875
    9. '```' → logprob: -9.363494873046875
    10. '[i' → logprob: -10.113494873046875

Token 554: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. 'n' → logprob: -17.62520408630371
    4. '(N' → logprob: -17.87520408630371
    5. '	N' → logprob: -18.00020408630371
    6. '   ' → logprob: -18.87520408630371
    7. ' ' → logprob: -19.75020408630371
    8. '```' → logprob: -19.87520408630371
    9. 'len' → logprob: -20.25020408630371
    10. '[N' → logprob: -20.62520408630371

Token 555: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11867343634366989
    2. '               ' → logprob: -3.493673324584961
    3. 'and' → logprob: -3.493673324584961
    4. '           ' → logprob: -3.618673324584961
    5. ':
' → logprob: -4.743673324584961
    6. ':' → logprob: -5.118673324584961
    7. '[' → logprob: -5.118673324584961
    8. '][' → logprob: -6.743673324584961
    9. ']' → logprob: -7.118673324584961
    10. '=' → logprob: -7.243673324584961

Token 556: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008614808320999146
    2. ' C' → logprob: -4.758615016937256
    3. '           ' → logprob: -16.258615493774414
    4. '	C' → logprob: -16.633615493774414
    5. '               ' → logprob: -16.758615493774414
    6. '   ' → logprob: -17.008615493774414
    7. 'A' → logprob: -18.258615493774414
    8. ' ' → logprob: -18.633615493774414
    9. '```' → logprob: -18.883615493774414
    10. '                   ' → logprob: -19.383615493774414

Token 557: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0701155960559845
    2. '!=' → logprob: -2.695115566253662
    3. '[' → logprob: -9.57011604309082
    4. '```' → logprob: -10.07011604309082
    5. ')!=' → logprob: -10.19511604309082
    6. '[i' → logprob: -11.57011604309082
    7. ']!=' → logprob: -11.82011604309082
    8. ' not' → logprob: -13.19511604309082
    9. '<|end|>' → logprob: -13.32011604309082
    10. '   ' → logprob: -13.57011604309082

Token 558: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2298322468996048
    2. ' ' → logprob: -2.354832172393799
    3. 'C' → logprob: -2.854832172393799
    4. '1' → logprob: -3.229832172393799
    5. ' C' → logprob: -4.354832172393799
    6. 'N' → logprob: -7.979832172393799
    7. ' N' → logprob: -9.854832649230957
    8. '=' → logprob: -11.354832649230957
    9. '```' → logprob: -11.604832649230957
    10. '   ' → logprob: -11.979832649230957

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1465013474225998
    2. 'C' → logprob: -2.146501302719116
    3. ' ' → logprob: -4.146501541137695
    4. ' C' → logprob: -5.646501541137695
    5. 'N' → logprob: -11.146501541137695
    6. '1' → logprob: -12.271501541137695
    7. '```' → logprob: -12.521501541137695
    8. '=' → logprob: -12.896501541137695
    9. '   ' → logprob: -13.521501541137695
    10. 'c' → logprob: -13.646501541137695

Token 560: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6212080121040344
    2. ':' → logprob: -1.4962079524993896
    3. '           ' → logprob: -1.8712079524993896
    4. ':
' → logprob: -2.4962079524993896
    5. '              ' → logprob: -7.746208190917969
    6. '       ' → logprob: -7.871208190917969
    7. ' and' → logprob: -8.121208190917969
    8. '          ' → logprob: -8.621208190917969
    9. '[' → logprob: -8.746208190917969
    10. '<|end|>' → logprob: -8.871208190917969

Token 561: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21119603514671326
    2. 'MAT' → logprob: -1.7111960649490356
    3. '           ' → logprob: -5.086195945739746
    4. ' MAT' → logprob: -5.836195945739746
    5. '```' → logprob: -7.461195945739746
    6. '              ' → logprob: -11.211195945739746
    7. '                   ' → logprob: -11.836195945739746
    8. ' ' → logprob: -11.836195945739746
    9. ' ' → logprob: -12.086195945739746
    10. '   ' → logprob: -12.086195945739746

Token 562: ' MAT' (ID: 47915)
  Prédit: 'MAT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAT' (adapté à ' MAT') → logprob: -0.000816773681435734
    2. ' MAT' → logprob: -7.125816822052002
    3. '           ' → logprob: -11.750816345214844
    4. '               ' → logprob: -12.500816345214844
    5. '       ' → logprob: -15.375816345214844
    6. '   ' → logprob: -15.625816345214844
    7. ' ' → logprob: -16.500816345214844
    8. '                   ' → logprob: -16.750816345214844
    9. 'M' → logprob: -17.875816345214844
    10. 'MIT' → logprob: -17.875816345214844

Token 563: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.500001907348633
    3. '][' → logprob: -14.750001907348633
    4. '[I' → logprob: -15.000001907348633
    5. 'i' → logprob: -15.125001907348633
    6. '           ' → logprob: -16.125001907348633
    7. ' [' → logprob: -16.500001907348633
    8. '[M' → logprob: -16.875001907348633
    9. ')[' → logprob: -17.375001907348633
    10. '```' → logprob: -17.625001907348633

Token 564: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0067443884909152985
    2. '[i' → logprob: -5.006744384765625
    3. ']' → logprob: -11.131744384765625
    4. ''][' → logprob: -12.131744384765625
    5. '"][' → logprob: -13.006744384765625
    6. '[' → logprob: -13.381744384765625
    7. ' ][' → logprob: -13.506744384765625
    8. '>[' → logprob: -14.256744384765625
    9. '           ' → logprob: -14.256744384765625
    10. ')[' → logprob: -14.381744384765625

Token 565: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4285862057004124e-05
    2. ' i' → logprob: -10.37503433227539
    3. '(i' → logprob: -13.50003433227539
    4. '[i' → logprob: -13.75003433227539
    5. '   ' → logprob: -15.62503433227539
    6. '
' → logprob: -16.25003433227539
    7. '{i' → logprob: -16.25003433227539
    8. '+' → logprob: -16.37503433227539
    9. ' ' → logprob: -17.25003433227539
    10. '`' → logprob: -17.37503433227539

Token 566: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004705914470832795
    2. '[i' → logprob: -8.250470161437988
    3. '+i' → logprob: -9.125470161437988
    4. ' +' → logprob: -10.000470161437988
    5. ']' → logprob: -10.500470161437988
    6. '+]' → logprob: -11.625470161437988
    7. '+=' → logprob: -11.750470161437988
    8. '+
' → logprob: -12.125470161437988
    9. '[' → logprob: -13.000470161437988
    10. ']+' → logprob: -14.000470161437988

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. '+' → logprob: -10.875021934509277
    3. '```' → logprob: -13.375021934509277
    4. ' ' → logprob: -13.750021934509277
    5. 'i' → logprob: -14.875021934509277
    6. '   ' → logprob: -15.875021934509277
    7. '(i' → logprob: -17.187522888183594
    8. '-' → logprob: -17.250022888183594
    9. '``' → logprob: -17.250022888183594
    10. '`' → logprob: -17.500022888183594

Token 568: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008862856775522232
    2. ']=' → logprob: -4.7588629722595215
    3. '=' → logprob: -8.383862495422363
    4. ' ]' → logprob: -11.258862495422363
    5. ')' → logprob: -12.633862495422363
    6. ' =' → logprob: -13.383862495422363
    7. '']' → logprob: -15.383862495422363
    8. '   ' → logprob: -15.383862495422363
    9. '[' → logprob: -15.508862495422363
    10. '']=' → logprob: -15.758862495422363

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028439288958907127
    2. ' =' → logprob: -3.9034392833709717
    3. ']' → logprob: -5.278439521789551
    4. ']=' → logprob: -5.903439521789551
    5. '=C' → logprob: -10.27843952178955
    6. '[' → logprob: -14.40343952178955
    7. '```' → logprob: -15.40343952178955
    8. ' ]' → logprob: -15.90343952178955
    9. ')=' → logprob: -16.278438568115234
    10. ')' → logprob: -16.653438568115234

Token 570: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00033546582562848926
    2. ' C' → logprob: -8.000335693359375
    3. '               ' → logprob: -20.250335693359375
    4. '	C' → logprob: -20.750335693359375
    5. '*C' → logprob: -21.375335693359375
    6. '>C' → logprob: -21.500335693359375
    7. '   ' → logprob: -22.250335693359375
    8. '
' → logprob: -22.250335693359375
    9. '```' → logprob: -22.250335693359375
    10. '(C' → logprob: -22.375335693359375

Token 571: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08119633793830872
    2. '
' → logprob: -3.2061963081359863
    3. '   ' → logprob: -3.4561963081359863
    4. '        
' → logprob: -5.456196308135986
    5. '    
' → logprob: -6.956196308135986
    6. '<|end|>' → logprob: -9.081196784973145
    7. 'MAT' → logprob: -9.206196784973145
    8. '  
' → logprob: -9.206196784973145
    9. 'mat' → logprob: -9.956196784973145
    10. ' mat' → logprob: -10.331196784973145

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32098838686943054
    2. '   ' → logprob: -1.570988416671753
    3. '        
' → logprob: -3.445988416671753
    4. '
' → logprob: -4.195988178253174
    5. '    
' → logprob: -4.695988178253174
    6. '<|end|>' → logprob: -4.945988178253174
    7. '  
' → logprob: -6.445988178253174
    8. 'next' → logprob: -8.195988655090332
    9. ' next' → logprob: -8.195988655090332
    10. '```' → logprob: -8.320988655090332

Token 573: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05132894590497017
    2. '   ' → logprob: -3.8013288974761963
    3. 'pow' → logprob: -4.676329135894775
    4. '
' → logprob: -5.176329135894775
    5. 'mat' → logprob: -5.301329135894775
    6. '        
' → logprob: -5.551329135894775
    7. '    
' → logprob: -7.051329135894775
    8. ' mat' → logprob: -7.676329135894775
    9. 'power' → logprob: -8.051328659057617
    10. 'res' → logprob: -8.051328659057617

Token 574: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6934340000152588
    2. ' T' → logprob: -0.6934340000152588
    3. ' ' → logprob: -8.94343376159668
    4. 'N' → logprob: -10.19343376159668
    5. ' N' → logprob: -10.56843376159668
    6. '   ' → logprob: -10.94343376159668
    7. ' B' → logprob: -10.94343376159668
    8. 'B' → logprob: -10.94343376159668
    9. ' __' → logprob: -12.63093376159668
    10. '  ' → logprob: -12.69343376159668

Token 575: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.38994473218917847
    2. ' ==' → logprob: -1.3899447917938232
    3. '>' → logprob: -2.8899447917938232
    4. '==' → logprob: -4.014944553375244
    5. ' <=' → logprob: -9.764945030212402
    6. ' !=' → logprob: -9.764945030212402
    7. ' >=' → logprob: -10.889945030212402
    8. ' ' → logprob: -11.764945030212402
    9. '=' → logprob: -11.889945030212402
    10. '!=' → logprob: -12.014945030212402

Token 576: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009877925040200353
    2. ' ' → logprob: -7.000988006591797
    3. '1' → logprob: -9.500988006591797
    4. '   ' → logprob: -14.375988006591797
    5. '
' → logprob: -15.250988006591797
    6. '  ' → logprob: -15.438488006591797
    7. '    ' → logprob: -16.188488006591797
    8. '
' → logprob: -17.125988006591797
    9. '۰' → logprob: -17.125988006591797
    10. '```' → logprob: -17.563488006591797

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002441741817165166
    2. '1' → logprob: -8.750244140625
    3. ' ' → logprob: -9.375244140625
    4. '  ' → logprob: -15.250244140625
    5. '
' → logprob: -15.750244140625
    6. '   ' → logprob: -16.125244140625
    7. '    ' → logprob: -16.562744140625
    8. '=' → logprob: -17.000244140625
    9. 'T' → logprob: -17.375244140625
    10. '
' → logprob: -17.437744140625

Token 578: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12804393470287323
    2. ':
' → logprob: -2.1280438899993896
    3. '       ' → logprob: -7.003044128417969
    4. ':return' → logprob: -8.628044128417969
    5. '           ' → logprob: -11.003044128417969
    6. '   ' → logprob: -12.628044128417969
    7. ':
' → logprob: -13.253044128417969
    8. ':

' → logprob: -13.628044128417969
    9. ' or' → logprob: -14.378044128417969
    10. '):
' → logprob: -14.628044128417969

Token 579: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017440813826397061
    2. '
' → logprob: -6.876744270324707
    3. '        
' → logprob: -7.626744270324707
    4. '           ' → logprob: -9.251744270324707
    5. ',' → logprob: -10.626744270324707
    6. '    
' → logprob: -10.751744270324707
    7. ':
' → logprob: -10.876744270324707
    8. 'print' → logprob: -11.001744270324707
    9. '```' → logprob: -11.626744270324707
    10. '<|end|>' → logprob: -12.126744270324707

Token 580: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08545540273189545
    2. '       ' → logprob: -2.9604554176330566
    3. 'res' → logprob: -4.460455417633057
    4. 'for' → logprob: -5.210455417633057
    5. ' print' → logprob: -5.335455417633057
    6. 'result' → logprob: -5.460455417633057
    7. 'ans' → logprob: -6.335455417633057
    8. ' for' → logprob: -7.460455417633057
    9. ' res' → logprob: -7.460455417633057
    10. 'answer' → logprob: -7.835455417633057

Token 581: '(*' (ID: 9000)
  Prédit: '(init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(init' → logprob: -0.01985260471701622
    2. '(' → logprob: -4.269852638244629
    3. 'init' → logprob: -6.019852638244629
    4. '(sum' → logprob: -6.269852638244629
    5. '(*' → logprob: -7.644852638244629
    6. '0' → logprob: -7.894852638244629
    7. ' (' → logprob: -8.394852638244629
    8. '('' → logprob: -8.519852638244629
    9. 'sum' → logprob: -10.394852638244629
    10. ' init' → logprob: -11.269852638244629

Token 582: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.0219828002154827e-05
    2. ' init' → logprob: -11.500020027160645
    3. '(init' → logprob: -11.875020027160645
    4. '[' → logprob: -12.750020027160645
    5. ')init' → logprob: -17.62502098083496
    6. '_init' → logprob: -17.62502098083496
    7. '   ' → logprob: -18.37502098083496
    8. '	init' → logprob: -18.37502098083496
    9. 'map' → logprob: -18.62502098083496
    10. ':init' → logprob: -18.87502098083496

Token 583: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09013525396585464
    2. ')' → logprob: -2.590135335922241
    3. '       ' → logprob: -4.590135097503662
    4. '           ' → logprob: -6.965135097503662
    5. ')
' → logprob: -9.96513557434082
    6. ')return' → logprob: -10.84013557434082
    7. ',' → logprob: -11.96513557434082
    8. '               ' → logprob: -13.09013557434082
    9. '	' → logprob: -13.21513557434082
    10. '())
' → logprob: -13.46513557434082

Token 584: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47432199120521545
    2. '           ' → logprob: -0.9743219614028931
    3. 'continue' → logprob: -9.349322319030762
    4. '   ' → logprob: -10.099322319030762
    5. '<|end|>' → logprob: -10.474322319030762
    6. '	       ' → logprob: -10.974322319030762
    7. '	' → logprob: -11.474322319030762
    8. '        
' → logprob: -11.474322319030762
    9. '```' → logprob: -11.474322319030762
    10. 'import' → logprob: -11.599322319030762

Token 585: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11986744403839111
    2. 'continue' (adapté à ' continue') → logprob: -2.3698673248291016
    3. '       ' → logprob: -3.9948673248291016
    4. ' continue' → logprob: -6.869867324829102
    5. '	continue' → logprob: -11.619867324829102
    6. '   ' → logprob: -12.369867324829102
    7. '		' → logprob: -13.244867324829102
    8. '	       ' → logprob: -13.619867324829102
    9. '               ' → logprob: -14.119867324829102
    10. '
' → logprob: -14.369867324829102

Token 586: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1979343593120575
    2. '
' → logprob: -1.8229343891143799
    3. '        
' → logprob: -5.072934150695801
    4. 'MAT' → logprob: -5.322934150695801
    5. '```' → logprob: -5.947934150695801
    6. 'mat' → logprob: -6.322934150695801
    7. 'res' → logprob: -6.572934150695801
    8. '   ' → logprob: -8.5729341506958
    9. '    
' → logprob: -8.5729341506958
    10. 'vec' → logprob: -8.8229341506958

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004362709820270538
    2. '
' → logprob: -6.2543625831604
    3. '        
' → logprob: -6.5043625831604
    4. '```' → logprob: -7.2543625831604
    5. 'res' → logprob: -9.504363059997559
    6. '   ' → logprob: -10.254363059997559
    7. 'mat' → logprob: -10.629363059997559
    8. 'MAT' → logprob: -10.754363059997559
    9. '    
' → logprob: -11.004363059997559
    10. 'T' → logprob: -12.004363059997559

Token 588: ' MAT' (ID: 47915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7499955892562866
    2. 'MAT' (adapté à ' MAT') → logprob: -0.7499955892562866
    3. 'mat' → logprob: -3.749995708465576
    4. 'res' → logprob: -3.874995708465576
    5. 'pow' → logprob: -5.124995708465576
    6. ' MAT' → logprob: -6.124995708465576
    7. 'result' → logprob: -7.624995708465576
    8. 'power' → logprob: -7.874995708465576
    9. ' mat' → logprob: -8.124995231628418
    10. ' res' → logprob: -8.624995231628418

Token 589: '_T' (ID: 2154)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0355929397046566
    2. ' =' → logprob: -3.785593032836914
    3. '_pow' → logprob: -4.410593032836914
    4. 'pow' → logprob: -9.410593032836914
    5. '_power' → logprob: -10.660593032836914
    6. '_mat' → logprob: -11.910593032836914
    7. '_' → logprob: -12.535593032836914
    8. '_=' → logprob: -12.785593032836914
    9. '=_' → logprob: -13.785593032836914
    10. ',' → logprob: -13.910593032836914

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -16.626928329467773
    4. ',' → logprob: -17.126928329467773
    5. '=
' → logprob: -19.376928329467773
    6. '=_' → logprob: -19.376928329467773
    7. ' =)' → logprob: -19.751928329467773
    8. '=

' → logprob: -20.126928329467773
    9. '=}' → logprob: -20.126928329467773
    10. '_=' → logprob: -20.126928329467773

Token 591: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.10020763427019119
    2. ' mat' → logprob: -2.350207567214966
    3. '	mat' → logprob: -14.475207328796387
    4. '(mat' → logprob: -14.600207328796387
    5. '.mat' → logprob: -17.600208282470703
    6. ' ' → logprob: -18.350208282470703
    7. '   ' → logprob: -18.725208282470703
    8. '_mat' → logprob: -18.850208282470703
    9. ' ' → logprob: -19.225208282470703
    10. 'Mat' → logprob: -19.600208282470703

Token 592: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -1.9361264946837764e-07
    2. 'pow' → logprob: -16.25
    3. '_mul' → logprob: -17.25
    4. '_' → logprob: -17.875
    5. '_po' → logprob: -18.5
    6. '_pw' → logprob: -19.375
    7. '_power' → logprob: -19.625
    8. '=_' → logprob: -19.875
    9. '_p' → logprob: -19.875
    10. '[_' → logprob: -20.375

Token 593: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. '(
' → logprob: -14.875001907348633
    4. '(Mat' → logprob: -15.125001907348633
    5. '(S' → logprob: -17.000001907348633
    6. '(mat' → logprob: -17.875001907348633
    7. '<|end|>' → logprob: -18.875001907348633
    8. ' (' → logprob: -19.125001907348633
    9. '(KERN' → logprob: -19.125001907348633
    10. '(m' → logprob: -19.875001907348633

Token 594: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -0.002495160326361656
    2. 'MAT' → logprob: -6.002495288848877
    3. 'АТ' → logprob: -12.252494812011719
    4. 'T' → logprob: -12.502494812011719
    5. '   ' → logprob: -13.377494812011719
    6. 'A' → logprob: -13.377494812011719
    7. 'ATH' → logprob: -13.627494812011719
    8. '"AT' → logprob: -13.627494812011719
    9. 'def' → logprob: -14.002494812011719
    10. 'at' → logprob: -14.127494812011719

Token 595: ',T' (ID: 44428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006339243846014142
    2. ',T' → logprob: -7.625633716583252
    3. ',M' → logprob: -9.25063419342041
    4. ' ,' → logprob: -10.00063419342041
    5. '(mat' → logprob: -13.75063419342041
    6. ',m' → logprob: -14.50063419342041
    7. '(' → logprob: -14.50063419342041
    8. 'MAT' → logprob: -15.00063419342041
    9. '(Mat' → logprob: -15.25063419342041
    10. 'T' → logprob: -15.50063419342041

Token 596: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007599649950861931
    2. ',M' → logprob: -5.007599830627441
    3. ' ,' → logprob: -7.757599830627441
    4. ')' → logprob: -7.757599830627441
    5. ',m' → logprob: -11.382599830627441
    6. '```' → logprob: -12.507599830627441
    7. '   ' → logprob: -12.882599830627441
    8. ',T' → logprob: -12.882599830627441
    9. ',
' → logprob: -13.632599830627441
    10. ',A' → logprob: -14.257599830627441

Token 597: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325526252388954
    2. ')
' → logprob: -3.7732553482055664
    3. ')
' → logprob: -11.898255348205566
    4. '   ' → logprob: -13.398255348205566
    5. ')

' → logprob: -14.398255348205566
    6. ' )' → logprob: -15.148255348205566
    7. '[' → logprob: -16.52325439453125
    8. ',' → logprob: -16.64825439453125
    9. ')#' → logprob: -16.89825439453125
    10. 'def' → logprob: -17.02325439453125

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19264742732048035
    2. 'res' → logprob: -2.4426474571228027
    3. 'result' → logprob: -2.4426474571228027
    4. '        
' → logprob: -7.567647457122803
    5. 'vec' → logprob: -7.692647457122803
    6. ' res' → logprob: -8.442646980285645
    7. '   ' → logprob: -10.067646980285645
    8. 'final' → logprob: -10.192646980285645
    9. '```' → logprob: -10.442646980285645
    10. ' result' → logprob: -11.067646980285645

Token 599: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.08265086263418198
    2. 'result' → logprob: -2.582650899887085
    3. '       ' → logprob: -6.457650661468506
    4. 'vec' → logprob: -7.082650661468506
    5. 'ans' → logprob: -7.457650661468506
    6. 'out' → logprob: -8.207651138305664
    7. 'final' → logprob: -8.457651138305664
    8. ' res' → logprob: -8.707651138305664
    9. 'output' → logprob: -10.332651138305664
    10. 'answer' → logprob: -11.207651138305664

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868720829486847
    2. ' =' → logprob: -1.1368720531463623
    3. '＝' → logprob: -15.261872291564941
    4. '   ' → logprob: -16.011871337890625
    5. ',' → logprob: -16.511871337890625
    6. '_=' → logprob: -16.511871337890625
    7. '=
' → logprob: -16.636871337890625
    8. '```' → logprob: -16.636871337890625
    9. '_' → logprob: -16.761871337890625
    10. 's' → logprob: -17.011871337890625

Token 601: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00012368128227535635
    2. ' mat' → logprob: -9.000123977661133
    3. '[' → logprob: -16.875123977661133
    4. '	mat' → logprob: -17.125123977661133
    5. '   ' → logprob: -17.250123977661133
    6. '(mat' → logprob: -18.000123977661133
    7. '.mat' → logprob: -20.000123977661133
    8. 'vec' → logprob: -20.500123977661133
    9. 'Mat' → logprob: -21.000123977661133
    10. ' ' → logprob: -21.250123977661133

Token 602: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.00023333763238042593
    2. 'vec' → logprob: -8.37523365020752
    3. 'Vec' → logprob: -13.62523365020752
    4. 'mul' → logprob: -15.25023365020752
    5. '_mul' → logprob: -15.75023365020752
    6. '_VEC' → logprob: -15.87523365020752
    7. '_vect' → logprob: -15.87523365020752
    8. 'pow' → logprob: -16.000232696533203
    9. '_pow' → logprob: -16.000232696533203
    10. 've' → logprob: -16.375232696533203

Token 603: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -1.0280383548888494e-06
    2. '_pow' → logprob: -14.375000953674316
    3. 'mul' → logprob: -15.375000953674316
    4. '_vec' → logprob: -16.625001907348633
    5. '_mux' → logprob: -17.000001907348633
    6. '_' → logprob: -17.125001907348633
    7. '_mult' → logprob: -18.250001907348633
    8. '_mat' → logprob: -18.500001907348633
    9. '\' → logprob: -19.750001907348633
    10. 's' → logprob: -20.000001907348633

Token 604: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. '(Mat' → logprob: -17.625
    4. '(
' → logprob: -18.125
    5. '(T' → logprob: -18.875
    6. '(C' → logprob: -18.875
    7. '(S' → logprob: -19.0
    8. '(m' → logprob: -19.0
    9. 'M' → logprob: -19.625
    10. '(mat' → logprob: -19.75

Token 605: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -0.0015423574950546026
    2. '(M' → logprob: -6.626542568206787
    3. 'MAT' → logprob: -8.501542091369629
    4. '(' → logprob: -12.626542091369629
    5. 'АТ' → logprob: -13.001542091369629
    6. '[' → logprob: -13.251542091369629
    7. '(T' → logprob: -13.626542091369629
    8. 'A' → logprob: -14.001542091369629
    9. '"AT' → logprob: -14.126542091369629
    10. '
' → logprob: -14.126542091369629

Token 606: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.7349182367324829
    2. '(M' → logprob: -0.7349182367324829
    3. 'T' → logprob: -4.109918117523193
    4. 'MAT' → logprob: -4.109918117523193
    5. ',' → logprob: -5.234918117523193
    6. '(T' → logprob: -6.984918117523193
    7. ')' → logprob: -7.234918117523193
    8. '
' → logprob: -8.484918594360352
    9. ' MAT' → logprob: -8.734918594360352
    10. '(
' → logprob: -8.859918594360352

Token 607: ',' (ID: 11)
  Prédit: '(init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(init' → logprob: -0.8795567750930786
    2. ',' → logprob: -1.6295567750930786
    3. '(M' → logprob: -1.6295567750930786
    4. '(res' → logprob: -1.8795567750930786
    5. ',res' → logprob: -3.879556655883789
    6. '(' → logprob: -4.504556655883789
    7. ',M' → logprob: -5.129556655883789
    8. '(mat' → logprob: -6.379556655883789
    9. ')' → logprob: -8.504556655883789
    10. ' (' → logprob: -8.754556655883789

Token 608: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.004079589620232582
    2. ' init' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.504079818725586
    4. '(init' → logprob: -15.129079818725586
    5. '	init' → logprob: -15.879079818725586
    6. ' ' → logprob: -17.129079818725586
    7. ')init' → logprob: -17.629079818725586
    8. '_init' → logprob: -17.629079818725586
    9. '    ' → logprob: -17.754079818725586
    10. '
' → logprob: -17.754079818725586

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016093729063868523
    2. ',M' → logprob: -4.141093730926514
    3. ' ,' → logprob: -9.766093254089355
    4. ',m' → logprob: -13.391093254089355
    5. '```' → logprob: -15.766093254089355
    6. 'M' → logprob: -16.891094207763672
    7. ',T' → logprob: -17.016094207763672
    8. '，' → logprob: -17.141094207763672
    9. '`,' → logprob: -17.266094207763672
    10. ',
' → logprob: -17.391094207763672

Token 610: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002613358374219388
    2. ' M' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.875261306762695
    4. '	M' → logprob: -19.625261306762695
    5. ' ' → logprob: -19.750261306762695
    6. '[M' → logprob: -20.125261306762695
    7. '       ' → logprob: -20.375261306762695
    8. '    ' → logprob: -20.500261306762695
    9. '  ' → logprob: -20.875261306762695
    10. '```' → logprob: -21.375261306762695

Token 611: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008730984292924404
    2. ')' → logprob: -4.758730888366699
    3. ')
' → logprob: -9.6337308883667
    4. '   ' → logprob: -10.5087308883667
    5. '       ' → logprob: -10.7587308883667
    6. ' )
' → logprob: -14.1337308883667
    7. 'print' → logprob: -14.6337308883667
    8. ')

' → logprob: -14.7587308883667
    9. '[' → logprob: -15.7587308883667
    10. ' ' → logprob: -16.008731842041016

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035562426783144474
    2. '   ' → logprob: -6.128556251525879
    3. 'print' → logprob: -6.628556251525879
    4. '        
' → logprob: -10.503556251525879
    5. '```' → logprob: -11.753556251525879
    6. '<|end|>' → logprob: -12.253556251525879
    7. ' print' → logprob: -12.503556251525879
    8. '	print' → logprob: -13.628556251525879
    9. '	' → logprob: -14.128556251525879
    10. '    
' → logprob: -14.128556251525879

Token 613: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014241538941860199
    2. '       ' → logprob: -4.264241695404053
    3. ' print' → logprob: -10.014241218566895
    4. '   ' → logprob: -10.764241218566895
    5. '	print' → logprob: -12.389241218566895
    6. 'for' → logprob: -12.514241218566895
    7. '```' → logprob: -12.889241218566895
    8. '        
' → logprob: -14.264241218566895
    9. '
' → logprob: -15.014241218566895
    10. '	' → logprob: -15.139241218566895

Token 614: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -10.500030517578125
    3. '(*)' → logprob: -12.750030517578125
    4. '*' → logprob: -17.250030517578125
    5. '(
' → logprob: -18.625030517578125
    6. ' (*' → logprob: -19.000030517578125
    7. '(*(' → logprob: -19.875030517578125
    8. '("*' → logprob: -20.000030517578125
    9. '('*' → logprob: -20.125030517578125
    10. '()' → logprob: -20.625030517578125

Token 615: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -16.75
    3. '(res' → logprob: -19.0
    4. '	res' → logprob: -23.625
    5. '
' → logprob: -24.25
    6. '_res' → logprob: -24.25
    7. '[' → logprob: -24.375
    8. '$res' → logprob: -25.25
    9. 'map' → logprob: -26.5
    10. 'resi' → logprob: -26.875

Token 616: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ')
' → logprob: -11.500011444091797
    3. '())' → logprob: -14.625011444091797
    4. ' )' → logprob: -15.375011444091797
    5. '()' → logprob: -16.125011444091797
    6. ')`' → logprob: -16.500011444091797
    7. ')}' → logprob: -16.625011444091797
    8. ')return' → logprob: -17.375011444091797
    9. '   ' → logprob: -17.500011444091797
    10. '))' → logprob: -17.625011444091797

Token 617: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04872521013021469
    2. ' __' → logprob: -3.048725128173828
    3. 'name' → logprob: -8.923725128173828
    4. '_name' → logprob: -13.548725128173828
    5. ' name' → logprob: -14.298725128173828
    6. ' ' → logprob: -14.423725128173828
    7. 'if' → logprob: -14.673725128173828
    8. '.__' → logprob: -14.923725128173828
    9. '```' → logprob: -15.173725128173828
    10. '___' → logprob: -15.298725128173828

Token 619: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013447261415421963
    2. ' ==' → logprob: -5.138447284698486
    3. ' __' → logprob: -5.513447284698486
    4. '==' → logprob: -6.888447284698486
    5. '__.__' → logprob: -7.138447284698486
    6. '.__' → logprob: -7.388447284698486
    7. '__.' → logprob: -8.263446807861328
    8. '_' → logprob: -8.388446807861328
    9. 'name' → logprob: -9.263446807861328
    10. '.' → logprob: -9.888446807861328

Token 620: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015925843035802245
    2. '==' → logprob: -6.501592636108398
    3. '=="' → logprob: -10.126592636108398
    4. '__.__' → logprob: -10.376592636108398
    5. ' ==' → logprob: -11.376592636108398
    6. '=='' → logprob: -12.376592636108398
    7. '__["' → logprob: -13.751592636108398
    8. '__('' → logprob: -14.126592636108398
    9. '```' → logprob: -14.876592636108398
    10. '__.' → logprob: -15.501592636108398

Token 621: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2271728664636612
    2. '==' → logprob: -1.9771728515625
    3. ' ==' → logprob: -3.1021728515625
    4. '=="' → logprob: -3.9771728515625
    5. '=='' → logprob: -7.1021728515625
    6. '__.__' → logprob: -8.9771728515625
    7. '.__' → logprob: -9.9771728515625
    8. '__["' → logprob: -11.4771728515625
    9. '[' → logprob: -11.9771728515625
    10. '==
' → logprob: -11.9771728515625

Token 622: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10025745630264282
    2. ''' → logprob: -2.350257396697998
    3. '__' → logprob: -9.975257873535156
    4. ' "__' → logprob: -12.475257873535156
    5. ' '__' → logprob: -15.100257873535156
    6. '"user' → logprob: -17.600257873535156
    7. ''post' → logprob: -17.975257873535156
    8. ''"' → logprob: -18.225257873535156
    9. '   ' → logprob: -18.475257873535156
    10. '('__' → logprob: -18.600257873535156

Token 623: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00037204305408522487
    2. '"' → logprob: -8.500371932983398
    3. ''' → logprob: -9.500371932983398
    4. '__' → logprob: -9.625371932983398
    5. 'py' → logprob: -11.625371932983398
    6. 'name' → logprob: -12.375371932983398
    7. 'python' → logprob: -12.375371932983398
    8. ' main' → logprob: -12.750371932983398
    9. '_main' → logprob: -12.750371932983398
    10. 'built' → logprob: -13.375371932983398

Token 624: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.23777052760124207
    2. '__' → logprob: -1.6127705574035645
    3. '__':
' → logprob: -4.4877705574035645
    4. '__.' → logprob: -7.6127705574035645
    5. '__.__' → logprob: -8.112770080566406
    6. '__:' → logprob: -9.237770080566406
    7. '__["' → logprob: -9.237770080566406
    8. '.__' → logprob: -11.862770080566406
    9. '.' → logprob: -11.862770080566406
    10. '__);
' → logprob: -11.987770080566406

Token 625: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01276120264083147
    2. ' main' → logprob: -4.637761116027832
    3. '   ' → logprob: -6.012761116027832
    4. '	main' → logprob: -7.512761116027832
    5. '_main' → logprob: -12.637761116027832
    6. '```' → logprob: -13.637761116027832
    7. 'import' → logprob: -13.887761116027832
    8. '(main' → logprob: -14.512761116027832
    9. '__' → logprob: -14.887761116027832
    10. ' ' → logprob: -15.262761116027832

Token 626: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -21.0
    4. '_main' → logprob: -23.125
    5. '   ' → logprob: -24.5
    6. '.main' → logprob: -25.125
    7. '(main' → logprob: -26.0
    8. 'Main' → logprob: -27.25
    9. 'import' → logprob: -27.75
    10. '-main' → logprob: -27.875

Token 627: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 625
Tokens correctement prédits (1ère position, stricte): 299
Tokens correctement prédits (1ère position, avec adaptation): 328
Tokens correctement prédits (top 10): 560
Précision stricte (1ère position): 47.84%
Précision adaptée (1ère position): 52.48%
Précision (top 10): 89.60%
================================================================================
