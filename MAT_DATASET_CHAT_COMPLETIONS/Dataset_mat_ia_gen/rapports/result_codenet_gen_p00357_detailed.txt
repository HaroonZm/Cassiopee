================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python avec commentaires détaillés

import sys
sys.setrecursionlimit(10**7)

def can_complete_roundtrip(N, d):
    """
    Détermine si le sauteur peut compléter le trajet aller-retour en respectant les contraintes.
    
    Paramètres:
    - N: nombre de trampolines
    - d: liste des distances maximales de saut pour chaque trampoline
    
    Retourne:
    - "yes" si le trajet aller-retour est possible
    - "no" sinon
    """
    
    # Les trampolines sont espacés de 10m.
    # Le jumper peut sauter d'un trampoline i jusqu'à tout trampoline j tel que:
    #   abs(j - i)*10 <= min(d[i], d[j])
    #
    # En effet, le jumper saute d'un trampoline i vers un trampoline j (i < j pour aller,
    # i > j pour retour) si et seulement si:
    # - La distance horizontale entre i et j est (|j - i| * 10)
    # - Cette distance doit être <= à la portée maximale des deux trampolines
    #   puisque il ne faut pas que le saut dépasse la portée de départ ni d'arrivée.
    #
    # Problème : déterminer s'il existe un chemin allant de 0 à N-1 puis de N-1 à 0
    # dans le graphe défini par ces arcs.
    #
    # Observation importante :
    # Le graphe des transitions se base sur une distance horizontale 10*m,
    # et la condition min(d[i], d[j]) >= 10*|j-i|.
    #
    # Pour une direction donnée (aller ou retour), on peut représenter le graphe
    # orienté et vérifier si on peut se rendre de 0 à N-1 (aller), puis de N-1 à 0 (retour).
    #
    # Pour vérifier la connectivité, on peut construire le graphe orienté dans les deux sens :
    # - Arcs aller : i -> j avec i<j si 10*(j-i) <= min(d[i], d[j])
    # - Arcs retour : j -> i avec i<j même condition.
    #
    # Pour faire cela efficacement, on peut exploiter une approche basée sur les intervalles.
    #
    # Algorithme efficace:
    #
    # Given the large constraint (N up to 3*10^5), il est impossible de vérifier tous les couples.
    #
    # Utilisons une traversée en deux phases:
    # 1. Sens aller (de 0 à N-1):
    #    On veut vérifier si on peut "marcher" de 0 à N-1 avec les arcs i->j (j>i) satisfaisant
    #    10*(j-i) <= min(d[i], d[j]).
    #
    # 2. Sens retour (de N-1 à 0):
    #    De manière similaire, vérifier la connectivité en sens inverse.
    #
    # Approche:
    # Chaque trampoline i peut atteindre les trampolines j supérieurs dans un intervalle correspondant.
    #
    # Concrètement:
    #
    # Pour chaque trampoline i, définissons un intervalle de saut vers la droite:
    # - Le index j doit vérifier j > i
    # - 10*(j - i) <= d[i], donc j <= i + d[i]//10
    # - De même, pour que j puisse être atteint, d[j] >= 10*(j-i)
    #
    # Pour la portée du trampoline d[j] pour j > i, on doit vérifier la condition que :
    # 10*(j - i) <= d[j]
    #
    # On peut remarquer que pour pouvoir sauter de i vers j:
    #  10*(j - i) <= d[i]  and 10*(j - i) <= d[j]
    #
    # Par conséquent:
    # j peut être dans [i+1, i + d[i] // 10] (en respectant j < N)
    # puis, on doit s'assurer que d[j] >= 10*(j - i)
    #
    # On peut donc, pour le sens aller:
    # - pour chaque trampoline i, on connaît l'intervalle des indices possibles à atteindre pour j :
    #   j ∈ [i + 1, min(N - 1,  i + d[i] // 10)]
    # - on choisit parmi ces j ceux qui vérifient d[j] >= 10*(j - i)
    #
    # Il faudrait vérifier ce critère pour tous les j dans cet intervalle.
    #
    # Faire cela pour tous les i, naïvement, est trop coûteux.
    #
    # Optimisation:
    # On va parcourir les trampolines et déterminer la portée maximale de saut vers la droite
    # par dp ou segment tree.
    #
    # Stratégie:
    # Construire un graphe implicite où:
    # - On peut aller de i à j > i, si 10*(j - i) <= d[i] et 10*(j - i) <= d[j]
    #
    # Remarquons que la condition 10*(j - i) <= d[j] est critique.
    #
    # Pour vérifier si on peut atteindre la droite jusqu’à un certain index, on peut implémenter un balayage linéaire.
    #
    # Implémentation pratique:
    # On va déterminer, pour chaque trampoline, le maximum reachable index vers la droite
    # qu'on peut atteindre soigneusement.
    # Puis on vérifiera si on peut finalement atteindre N-1.
    #
    #
    # Même raisonnement pour le retour, du N-1 vers 0 par arcs inverses.
    
    # Fonction qui calcule si on peut aller de start à goal dans une direction donnée
    # direction = 1 (aller de gauche à droite)
    # direction = -1 (retour de droite à gauche)
    def can_reach(d, start, goal, direction):
        # On travaille sur l'intervalle selon direction
        # L'idée: on maintient le maximum reachable via une exploration efficace
        
        N = len(d)
        # reachable[i] indique si on peut atteindre trampoline i
        reachable = [False] * N
        reachable[start] = True
        
        # max_reach indique jusqu'où on a réussi à se propager
        max_reach = start
        
        # On parcourt dans la direction demandée
        # La condition de saut est:
        # for i,j with direction=1: i < j
        # 10*(|j - i|) <= d[i] and 10*(|j - i|) <= d[j]
        #
        # On va avancer en étendant la zone reachable:
        
        # Pour faciliter un balayage efficace on génère un tableau "limite" qui contient pour chaque trampoline
        # le max j tel que j dans direction puisse être rejoint.
        
        # On crée un tableau next_max_reach où pour chaque trampoline i on définit la limite maximale d'indice
        # atteignable depuis i selon d[i].
        
        next_max_reach = [0]*N
        
        if direction == 1:
            # vers la droite
            for i in range(N):
                jump_max = i + d[i] // 10
                if jump_max >= N:
                    jump_max = N - 1
                next_max_reach[i] = jump_max
            
            # On avance de start à goal
            i = start
            while i <= max_reach and i < N:
                if reachable[i]:
                    # On essaye d'étendre max_reach vers next_max_reach[i], en vérifiant les conditions sur d[j]
                    # Contrairement à notre première idée, on doit vérifier condition sur d[j]
                    # Pour j dans (max_reach+1) à next_max_reach[i], on vérifie 10*(j - i) <= d[j]
                    # Si ok, reachable[j] = True, et on étend max_reach
                    from_idx = max(max_reach+1, i+1)
                    to_idx = next_max_reach[i]
                    for j in range(from_idx, to_idx+1):
                        distance = 10 * (j - i)
                        if distance <= d[j]:
                            if not reachable[j]:
                                reachable[j] = True
                                max_reach = max(max_reach, j)
                        else:
                            # Si la condition est fausse pour un j donné,
                            # et comme d[j] est indépendante, continuer a un j supérieur ne garantit rien.
                            # Mais d est arbitraire, donc on doit tester tous.
                            pass
                i += 1
            
            return reachable[goal]
        
        else:
            # direction == -1, vers la gauche
            # mêmes raisonnements mais indices décroissants
            for i in range(N):
                jump_min = i - d[i] // 10
                if jump_min < 0:
                    jump_min = 0
                next_max_reach[i] = jump_min
            
            i = start
            min_reach = start
            reachable[start] = True
            while i >= min_reach and i >= 0:
                if reachable[i]:
                    # On essaye d'etendre min_reach vers next_max_reach[i] < i
                    from_idx = min(min_reach-1, i-1)
                    to_idx = next_max_reach[i]
                    # En ordre décroissant
                    for j in range(from_idx, to_idx-1, -1):
                        distance = 10 * (i - j)
                        if distance <= d[j]:
                            if not reachable[j]:
                                reachable[j] = True
                                min_reach = min(min_reach, j)
                        else:
                            # Même raisonnement que pour l'aller
                            pass
                i -= 1
            return reachable[goal]

    # Appel des deux phases:
    can_go = can_reach(d, 0, N - 1, 1)
    can_return = can_reach(d, N - 1, 0, -1)

    return "yes" if can_go and can_return else "no"

if __name__ == "__main__":
    input = sys.stdin.readline
    N = int(input())
    d = [int(input()) for _ in range(N)]
    print(can_complete_roundtrip(N, d))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37135758996009827
    2. '```' → logprob: -1.4963575601577759
    3. ' :' → logprob: -3.7463576793670654
    4. '#' → logprob: -3.7463576793670654
    5. 'def' → logprob: -3.7463576793670654
    6. '\n' → logprob: -5.246357440948486
    7. '``' → logprob: -6.621357440948486
    8. '

' → logprob: -6.746357440948486
    9. '\' → logprob: -6.746357440948486
    10. '
' → logprob: -7.246357440948486

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.19177737832069397
    2. 'Python' → logprob: -1.8167773485183716
    3. ' Python' → logprob: -5.441777229309082
    4. '```' → logprob: -5.441777229309082
    5. 'fr' → logprob: -6.066777229309082
    6. ' python' → logprob: -7.191777229309082
    7. 'py' → logprob: -9.691777229309082
    8. ' français' → logprob: -9.816777229309082
    9. '#' → logprob: -10.441777229309082
    10. 'French' → logprob: -11.441777229309082

Token 5: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.303193062543869
    2. '```' → logprob: -1.5531930923461914
    3. '\' → logprob: -4.303193092346191
    4. ' :' → logprob: -4.428193092346191
    5. '\n' → logprob: -4.678193092346191
    6. 'def' → logprob: -4.928193092346191
    7. '#' → logprob: -5.803193092346191
    8. ':def' → logprob: -6.303193092346191
    9. '``' → logprob: -6.803193092346191
    10. ':
' → logprob: -8.428193092346191

Token 6: ' commentaires' (ID: 67971)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3560217022895813
    2. 'import' → logprob: -2.9810216426849365
    3. 'def' → logprob: -3.1060216426849365
    4. ' def' → logprob: -3.4810216426849365
    5. 'une' → logprob: -3.8560216426849365
    6. '#' → logprob: -4.231021881103516
    7. '``' → logprob: -4.606021881103516
    8. 'python' → logprob: -4.606021881103516
    9. ' tkinter' → logprob: -4.856021881103516
    10. 'un' → logprob: -4.856021881103516

Token 7: ' déta' (ID: 99673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5947828888893127
    2. ':' → logprob: -1.094782829284668
    3. '#' → logprob: -2.844782829284668
    4. '\' → logprob: -4.219782829284668
    5. '\n' → logprob: -4.219782829284668
    6. ' :' → logprob: -4.469782829284668
    7. 'def' → logprob: -5.094782829284668
    8. '``' → logprob: -5.469782829284668
    9. '`' → logprob: -7.594782829284668
    10. ''''
' → logprob: -7.844782829284668

Token 8: 'illés' (ID: 160970)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6851999163627625
    2. 'és' → logprob: -1.4351999759674072
    3. 'r' → logprob: -2.6851999759674072
    4. 'é' → logprob: -3.0601999759674072
    5. 'n' → logprob: -3.6851999759674072
    6. 's' → logprob: -3.8101999759674072
    7. 'aires' → logprob: -3.8101999759674072
    8. 'v' → logprob: -4.810199737548828
    9. 'a' → logprob: -4.810199737548828
    10. '```' → logprob: -5.060199737548828

Token 9: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1836344599723816
    2. ':' → logprob: -2.4336345195770264
    3. '#' → logprob: -3.3086345195770264
    4. '\n' → logprob: -3.9336345195770264
    5. '\' → logprob: -4.683634281158447
    6. '``' → logprob: -5.433634281158447
    7. 'def' → logprob: -5.433634281158447
    8. '
' → logprob: -6.308634281158447
    9. ' :' → logprob: -6.683634281158447
    10. '

' → logprob: -7.308634281158447

Token 10: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5670614838600159
    2. '```' → logprob: -0.9420614838600159
    3. 'def' → logprob: -3.317061424255371
    4. 'import' → logprob: -6.567061424255371
    5. '\' → logprob: -6.567061424255371
    6. '``' → logprob: -7.317061424255371
    7. ':' → logprob: -7.567061424255371
    8. 'd' → logprob: -7.692061424255371
    9. ''''
' → logprob: -7.817061424255371
    10. '"""
' → logprob: -8.067061424255371

Token 11: ' sys' (ID: 12228)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.7736268043518066
    2. ' pandas' → logprob: -1.1486268043518066
    3. ' os' → logprob: -1.7736268043518066
    4. ' sys' → logprob: -3.7736268043518066
    5. ' math' → logprob: -3.7736268043518066
    6. ' requests' → logprob: -6.273626804351807
    7. ' json' → logprob: -7.023626804351807
    8. ' ' → logprob: -7.648626804351807
    9. ' datetime' → logprob: -7.648626804351807
    10. ' tensorflow' → logprob: -7.773626804351807

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08608242869377136
    2. '

' → logprob: -2.7110824584960938
    3. '\n' → logprob: -4.836082458496094
    4. 'import' → logprob: -5.711082458496094
    5. '' → logprob: -5.961082458496094
    6. '<|end|>' → logprob: -7.461082458496094
    7. '\' → logprob: -7.836082458496094
    8. '
' → logprob: -8.211082458496094
    9. '```' → logprob: -8.336082458496094
    10. ' 

' → logprob: -9.336082458496094

Token 13: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20882681012153625
    2. '

' → logprob: -1.9588267803192139
    3. 'import' → logprob: -3.458826780319214
    4. '\n' → logprob: -4.708827018737793
    5. '<|end|>' → logprob: -6.208827018737793
    6. '```' → logprob: -6.708827018737793
    7. 'def' → logprob: -7.333827018737793
    8. '#' → logprob: -7.333827018737793
    9. '\' → logprob: -7.708827018737793
    10. '' → logprob: -8.083827018737793

Token 14: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015506906202062964
    2. ' .' → logprob: -7.376550674438477
    3. '.import' → logprob: -7.876550674438477
    4. '.exit' → logprob: -8.376550674438477
    5. '.stdout' → logprob: -9.126550674438477
    6. '.stdin' → logprob: -9.751550674438477
    7. '.argv' → logprob: -10.001550674438477
    8. '.readline' → logprob: -10.501550674438477
    9. '.stderr' → logprob: -11.626550674438477
    10. '.ex' → logprob: -12.126550674438477

Token 15: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.003315311623737216
    2. 'trace' → logprob: -6.378315448760986
    3. 'limit' → logprob: -7.503315448760986
    4. '_limit' → logprob: -8.128314971923828
    5. '_rec' → logprob: -8.378314971923828
    6. '_trace' → logprob: -9.003314971923828
    7. '_int' → logprob: -9.378314971923828
    8. '_execution' → logprob: -9.378314971923828
    9. 'execution' → logprob: -10.003314971923828
    10. '_version' → logprob: -10.503314971923828

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005141906440258026
    2. 'urs' → logprob: -7.875514030456543
    3. 'ur' → logprob: -9.375514030456543
    4. 'ursive' → logprob: -11.000514030456543
    5. 'ursor' → logprob: -11.125514030456543
    6. '_' → logprob: -12.000514030456543
    7. 'limit' → logprob: -12.750514030456543
    8. 'urf' → logprob: -12.875514030456543
    9. 'urse' → logprob: -12.875514030456543
    10. '_limit' → logprob: -13.250514030456543

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00024834630312398076
    2. '_limit' → logprob: -8.625247955322266
    3. 'lim' → logprob: -10.125247955322266
    4. 'ault' → logprob: -10.875247955322266
    5. 'depth' → logprob: -12.125247955322266
    6. 'l' → logprob: -13.500247955322266
    7. ' limit' → logprob: -13.750247955322266
    8. 'imit' → logprob: -14.250247955322266
    9. 'Limit' → logprob: -15.875247955322266
    10. '_depth' → logprob: -16.125247955322266

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.250012397766113
    4. '(

' → logprob: -15.375012397766113
    5. '()' → logprob: -16.87501335144043
    6. '((' → logprob: -17.62501335144043
    7. '('' → logprob: -17.87501335144043
    8. '(
' → logprob: -19.00001335144043
    9. ')' → logprob: -19.12501335144043
    10. '(None' → logprob: -19.50001335144043

Token 19: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10021486133337021
    2. '100' → logprob: -2.350214958190918
    3. ' ' → logprob: -12.475214958190918
    4. '200' → logprob: -13.350214958190918
    5. '500' → logprob: -13.600214958190918
    6. '300' → logprob: -13.725214958190918
    7. '999' → logprob: -15.725214958190918
    8. '250' → logprob: -16.7252140045166
    9. '150' → logprob: -16.7252140045166
    10. ')' → logprob: -17.8502140045166

Token 20: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.3132908046245575
    2. '000' → logprob: -1.3132908344268799
    3. '7' → logprob: -11.6882905960083
    4. '6' → logprob: -11.6882905960083
    5. '**' → logprob: -11.8132905960083
    6. '5' → logprob: -12.6882905960083
    7. '4' → logprob: -14.0632905960083
    8. '007' → logprob: -14.8132905960083
    9. '0' → logprob: -14.9382905960083
    10. '005' → logprob: -15.9382905960083

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003202073508873582
    2. '6' → logprob: -5.753201961517334
    3. '8' → logprob: -11.253202438354492
    4. '9' → logprob: -11.378202438354492
    5. '```' → logprob: -20.128202438354492
    6. ' ' → logprob: -20.378202438354492
    7. '}' → logprob: -21.253202438354492
    8. '(' → logprob: -22.503202438354492
    9. ')' → logprob: -22.878202438354492
    10. '

' → logprob: -23.003202438354492

Token 22: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ' )' → logprob: -11.875008583068848
    3. '))' → logprob: -13.750008583068848
    4. ')
' → logprob: -15.750008583068848
    5. ')))' → logprob: -17.12500762939453
    6. ')#' → logprob: -17.75000762939453
    7. '```' → logprob: -18.00000762939453
    8. ')

' → logprob: -18.00000762939453
    9. '),' → logprob: -18.12500762939453
    10. ')`' → logprob: -18.37500762939453

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03347671031951904
    2. '
' → logprob: -3.7834768295288086
    3. '

' → logprob: -4.658476829528809
    4. '```' → logprob: -8.158476829528809
    5. 'class' → logprob: -8.283476829528809
    6. 'n' → logprob: -10.033476829528809
    7. '
' → logprob: -10.408476829528809
    8. '\' → logprob: -10.533476829528809
    9. 'import' → logprob: -10.783476829528809
    10. '\n' → logprob: -11.408476829528809

Token 24: ' can' (ID: 665)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factor' → logprob: -1.193524956703186
    2. ' fibonacci' → logprob: -1.443524956703186
    3. ' factorial' → logprob: -1.443524956703186
    4. ' dfs' → logprob: -1.818524956703186
    5. ' solve' → logprob: -4.1935248374938965
    6. ' fib' → logprob: -4.5685248374938965
    7. ' f' → logprob: -5.4435248374938965
    8. 'factor' → logprob: -5.6935248374938965
    9. ' ' → logprob: -5.6935248374938965
    10. ' recursive' → logprob: -5.9435248374938965

Token 25: '_complete' (ID: 67286)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008649553172290325
    2. ' _' → logprob: -5.5086493492126465
    3. '_accept' → logprob: -6.7586493492126465
    4. '_continue' → logprob: -7.7586493492126465
    5. '_access' → logprob: -8.008649826049805
    6. '_jump' → logprob: -8.133649826049805
    7. '_use' → logprob: -8.883649826049805
    8. '_cons' → logprob: -9.008649826049805
    9. '_c' → logprob: -9.258649826049805
    10. 'I' → logprob: -9.258649826049805

Token 26: '_round' (ID: 79298)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31404322385787964
    2. '_task' → logprob: -2.5640432834625244
    3. '_s' → logprob: -2.9390432834625244
    4. '_path' → logprob: -3.4390432834625244
    5. '_course' → logprob: -3.8140432834625244
    6. '_word' → logprob: -4.064043045043945
    7. '(' → logprob: -4.439043045043945
    8. '_tasks' → logprob: -5.064043045043945
    9. '_t' → logprob: -5.189043045043945
    10. '(word' → logprob: -5.439043045043945

Token 27: 'trip' (ID: 51122)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8486224412918091
    2. '():' → logprob: -0.9736224412918091
    3. 'trip' → logprob: -1.848622441291809
    4. '_trip' → logprob: -4.8486223220825195
    5. '(tr' → logprob: -5.4736223220825195
    6. '(s' → logprob: -5.7236223220825195
    7. '(circle' → logprob: -5.9736223220825195
    8. '(' → logprob: -6.0986223220825195
    9. '(players' → logprob: -6.3486223220825195
    10. '(x' → logprob: -6.4736223220825195

Token 28: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019711002241820097
    2. '(s' → logprob: -7.501971244812012
    3. '_' → logprob: -8.501971244812012
    4. '():' → logprob: -8.501971244812012
    5. '(user' → logprob: -8.501971244812012
    6. '(p' → logprob: -9.251971244812012
    7. 's' → logprob: -9.501971244812012
    8. '(start' → logprob: -10.001971244812012
    9. '(cap' → logprob: -10.001971244812012
    10. '(parent' → logprob: -10.251971244812012

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000825229799374938
    2. '):' → logprob: -7.37582540512085
    3. ' ,' → logprob: -8.625824928283691
    4. ')' → logprob: -11.625824928283691
    5. ':' → logprob: -12.125824928283691
    6. 's' → logprob: -13.625824928283691
    7. ',
' → logprob: -14.250824928283691
    8. ',int' → logprob: -14.750824928283691
    9. ' ):' → logprob: -14.875824928283691
    10. '_,' → logprob: -15.000824928283691

Token 30: ' d' (ID: 272)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0418410301208496
    2. 'M' → logprob: -1.9168410301208496
    3. ' edges' → logprob: -2.9168410301208496
    4. ' A' → logprob: -3.1668410301208496
    5. ' distances' → logprob: -3.2293410301208496
    6. 'A' → logprob: -3.4793410301208496
    7. ' dist' → logprob: -3.7918410301208496
    8. 'edges' → logprob: -3.9168410301208496
    9. 'dist' → logprob: -4.35434103012085
    10. ' R' → logprob: -4.41684103012085

Token 31: '):
' (ID: 1883)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.328233003616333
    2. 'istance' → logprob: -1.953233003616333
    3. '):' → logprob: -2.703233003616333
    4. ')' → logprob: -3.953233003616333
    5. 'ists' → logprob: -4.078232765197754
    6. ',' → logprob: -4.703232765197754
    7. '[i' → logprob: -5.578232765197754
    8. 'ay' → logprob: -5.578232765197754
    9. 'est' → logprob: -5.828232765197754
    10. 'is' → logprob: -5.828232765197754

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0622762031853199
    2. ':' → logprob: -2.8122761249542236
    3. ':
' → logprob: -9.687275886535645
    4. '```' → logprob: -9.687275886535645
    5. ' :' → logprob: -9.812275886535645
    6. '    ' → logprob: -10.687275886535645
    7. '    
' → logprob: -10.812275886535645
    8. '   ' → logprob: -11.187275886535645
    9. ':return' → logprob: -11.312275886535645
    10. '       ' → logprob: -11.437275886535645

Token 33: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12451440840959549
    2. ' visited' → logprob: -2.62451434135437
    3. 'visited' → logprob: -4.374514579772949
    4. ' dp' → logprob: -4.499514579772949
    5. 'dp' → logprob: -5.124514579772949
    6. '
' → logprob: -5.749514579772949
    7. 'distance' → logprob: -5.999514579772949
    8. '    
' → logprob: -6.624514579772949
    9. 'dist' → logprob: -6.999514579772949
    10. '    ' → logprob: -6.999514579772949

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03663192316889763
    2. ' """' → logprob: -4.411632061004639
    3. '"""' → logprob: -4.536632061004639
    4. ' """
' → logprob: -5.036632061004639
    5. '    ' → logprob: -6.536632061004639
    6. '"""
' → logprob: -6.911632061004639
    7. '#' → logprob: -7.161632061004639
    8. 'def' → logprob: -7.911632061004639
    9. '       ' → logprob: -8.28663158416748
    10. ' ' → logprob: -8.28663158416748

Token 35: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6023496389389038
    2. '"""
' → logprob: -1.9773496389389038
    3. '"""' → logprob: -2.2273497581481934
    4. 'Retour' → logprob: -3.2273497581481934
    5. 'Dé' (adapté à ' Dé') → logprob: -3.3523497581481934
    6. 'V' → logprob: -3.4773497581481934
    7. ' """
' → logprob: -3.9773497581481934
    8. 'Returns' → logprob: -4.727349758148193
    9. 'Cette' → logprob: -4.852349758148193
    10. 'Determine' → logprob: -4.852349758148193

Token 36: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.0334051139652729
    2. 'f' → logprob: -3.783405065536499
    3. 'tect' → logprob: -4.783405303955078
    4. 'crit' → logprob: -7.408405303955078
    5. 'termin' → logprob: -7.658405303955078
    6. 't' → logprob: -8.783405303955078
    7. 'ter' → logprob: -9.158405303955078
    8. 'c' → logprob: -10.033405303955078
    9. 'te' → logprob: -10.033405303955078
    10. 'fin' → logprob: -10.283405303955078

Token 37: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.014396430924534798
    2. 'iner' → logprob: -4.514396667480469
    3. 'i' → logprob: -6.139396667480469
    4. '   ' → logprob: -8.764396667480469
    5. 'iné' → logprob: -9.014396667480469
    6. '\' → logprob: -9.139396667480469
    7. '#' → logprob: -9.264396667480469
    8. '```' → logprob: -9.514396667480469
    9. 'inez' → logprob: -9.514396667480469
    10. '

' → logprob: -10.014396667480469

Token 38: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.22645065188407898
    2. ' if' → logprob: -2.2264506816864014
    3. ' ' → logprob: -2.8514506816864014
    4. 'si' → logprob: -3.8514506816864014
    5. 's' → logprob: -4.976450443267822
    6. ' ' → logprob: -5.851450443267822
    7. '   ' → logprob: -6.351450443267822
    8. 'if' → logprob: -7.476450443267822
    9. ' s' → logprob: -7.601450443267822
    10. '_' → logprob: -7.601450443267822

Token 39: ' le' (ID: 505)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.7345209121704102
    2. ' on' → logprob: -0.9845209121704102
    3. ' ' → logprob: -3.60952091217041
    4. ' l' → logprob: -4.10952091217041
    5. ' ' → logprob: -4.23452091217041
    6. 't' → logprob: -4.23452091217041
    7. ' c' → logprob: -4.35952091217041
    8. ' toutes' → logprob: -4.73452091217041
    9. 'l' → logprob: -4.98452091217041
    10. ' le' → logprob: -5.23452091217041

Token 40: ' sa' (ID: 880)
  Prédit: ' voyage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voyage' → logprob: -0.9591238498687744
    2. ' trajet' → logprob: -1.5841238498687744
    3. 'voy' → logprob: -2.2091238498687744
    4. ' robot' → logprob: -3.2091238498687744
    5. ' vélo' → logprob: -3.5841238498687744
    6. ' circuit' → logprob: -3.7091238498687744
    7. ' cycl' → logprob: -3.7091238498687744
    8. ' train' → logprob: -4.084123611450195
    9. ' camion' → logprob: -4.209123611450195
    10. ' parcours' → logprob: -4.521623611450195

Token 41: 'uteur' (ID: 25666)
  Prédit: 'voir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'voir' → logprob: -1.6004704236984253
    2. 'lut' → logprob: -2.100470542907715
    3. 'cr' → logprob: -2.475470542907715
    4. 'm' → logprob: -2.850470542907715
    5. 'l' → logprob: -2.975470542907715
    6. 'rc' → logprob: -3.475470542907715
    7. '</' → logprob: -3.600470542907715
    8. '#' → logprob: -3.850470542907715
    9. 'tur' → logprob: -3.850470542907715
    10. 'jour' → logprob: -3.975470542907715

Token 42: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.4169916808605194
    2. 'pe' → logprob: -1.1669917106628418
    3. ' pourra' → logprob: -4.041991710662842
    4. ' de' → logprob: -5.416991710662842
    5. ' peux' → logprob: -6.541991710662842
    6. 'de' → logprob: -6.791991710662842
    7. ' can' → logprob: -7.416991710662842
    8. ' ' → logprob: -7.541991710662842
    9. '_' → logprob: -7.791991710662842
    10. ' d' → logprob: -8.041991233825684

Token 43: ' compléter' (ID: 152816)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -1.0597058534622192
    2. 'effect' → logprob: -1.4347058534622192
    3. ' effectuer' → logprob: -1.6847058534622192
    4. ' faire' → logprob: -2.3097057342529297
    5. 're' → logprob: -3.9347057342529297
    6. ' revenir' → logprob: -4.30970573425293
    7. ' compléter' → logprob: -4.55970573425293
    8. 's' → logprob: -4.55970573425293
    9. ' accompl' → logprob: -4.80970573425293
    10. ' parcour' → logprob: -4.80970573425293

Token 44: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5900226831436157
    2. ' le' → logprob: -0.9650226831436157
    3. 'le' → logprob: -3.465022563934326
    4. ' son' → logprob: -3.965022563934326
    5. 'tour' → logprob: -5.840022563934326
    6. ' la' → logprob: -5.965022563934326
    7. ' ' → logprob: -6.340022563934326
    8. 't' → logprob: -6.590022563934326
    9. 'un' → logprob: -6.715022563934326
    10. 'l' → logprob: -7.340022563934326

Token 45: ' trajet' (ID: 110258)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.7163454294204712
    2. ' tour' → logprob: -1.4663454294204712
    3. ' circuit' → logprob: -2.4663453102111816
    4. 'par' → logprob: -2.5913453102111816
    5. 'c' → logprob: -2.9663453102111816
    6. ' parcours' → logprob: -3.3413453102111816
    7. ' trajet' → logprob: -4.591345310211182
    8. ' cercle' → logprob: -5.278845310211182
    9. ' cycle' → logprob: -6.341345310211182
    10. 'round' → logprob: -6.341345310211182

Token 46: ' aller' (ID: 18383)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.677699863910675
    2. ' complet' → logprob: -1.3026998043060303
    3. ' sans' → logprob: -2.5526998043060303
    4. ' ' → logprob: -3.5526998043060303
    5. ' de' → logprob: -4.052700042724609
    6. ' sur' → logprob: -4.302700042724609
    7. ' complète' → logprob: -4.427700042724609
    8. ' entre' → logprob: -4.677700042724609
    9. '```' → logprob: -4.677700042724609
    10. ' avec' → logprob: -5.427700042724609

Token 47: '-ret' (ID: 104824)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.25977852940559387
    2. ' complet' → logprob: -2.5097784996032715
    3. ' ' → logprob: -3.2597784996032715
    4. ' de' → logprob: -4.1347784996032715
    5. 'et' → logprob: -4.2597784996032715
    6. ' en' → logprob: -4.3847784996032715
    7. '-' → logprob: -4.7597784996032715
    8. ' sur' → logprob: -5.0097784996032715
    9. ' entre' → logprob: -5.0097784996032715
    10. '/' → logprob: -5.5097784996032715

Token 48: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0020050073508173227
    2. 'urn' → logprob: -7.252005100250244
    3. 'ourn' → logprob: -7.752005100250244
    4. 'o' → logprob: -8.252004623413086
    5. 'ur' → logprob: -9.377004623413086
    6. 'Our' → logprob: -10.189504623413086
    7. '```' → logprob: -10.252004623413086
    8. 'ours' → logprob: -10.252004623413086
    9. '   ' → logprob: -10.314504623413086
    10. 'out' → logprob: -10.377004623413086

Token 49: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6390532851219177
    2. '   ' → logprob: -2.2640533447265625
    3. ' ' → logprob: -2.8890533447265625
    4. ' """' → logprob: -3.0140533447265625
    5. ' entre' → logprob: -3.2640533447265625
    6. '.' → logprob: -3.3890533447265625
    7. ' sans' → logprob: -3.3890533447265625
    8. ' avec' → logprob: -3.8890533447265625
    9. '"""' → logprob: -3.8890533447265625
    10. ' complet' → logprob: -4.2640533447265625

Token 50: ' respect' (ID: 5618)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.159641146659851
    2. ' part' → logprob: -1.909641146659851
    3. ' respect' → logprob: -2.2846412658691406
    4. ' un' → logprob: -2.4096412658691406
    5. ' saut' → logprob: -2.5346412658691406
    6. 'part' → logprob: -3.4096412658691406
    7. ' faisant' → logprob: -3.6596412658691406
    8. ' utilisant' → logprob: -4.034641265869141
    9. ' tenant' → logprob: -4.034641265869141
    10. ' fonction' → logprob: -4.409641265869141

Token 51: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00030042731668800116
    2. 'er' → logprob: -8.375300407409668
    3. 'ent' → logprob: -10.875300407409668
    4. '#' → logprob: -10.875300407409668
    5. '```' → logprob: -11.000300407409668
    6. '   ' → logprob: -12.625300407409668
    7. 'e' → logprob: -12.750300407409668
    8. '[' → logprob: -13.000300407409668
    9. '{' → logprob: -13.625300407409668
    10. '``' → logprob: -14.375300407409668

Token 52: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.32378870248794556
    2. ' la' → logprob: -1.4487886428833008
    3. ' ses' → logprob: -3.698788642883301
    4. ' toutes' → logprob: -5.073788642883301
    5. ' le' → logprob: -5.573788642883301
    6. ' l' → logprob: -6.198788642883301
    7. 'les' → logprob: -6.573788642883301
    8. ' sa' → logprob: -6.948788642883301
    9. ' chaque' → logprob: -7.698788642883301
    10. ' ' → logprob: -7.823788642883301

Token 53: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.20593011379241943
    2. ' distances' → logprob: -2.330930233001709
    3. ' sa' → logprob: -3.330930233001709
    4. ' règles' → logprob: -4.830930233001709
    5. ' conditions' → logprob: -4.830930233001709
    6. ' cons' → logprob: -5.580930233001709
    7. 'restr' → logprob: -5.580930233001709
    8. ' restrictions' → logprob: -5.955930233001709
    9. ' constraints' → logprob: -5.955930233001709
    10. ' limites' → logprob: -6.080930233001709

Token 54: '.
' (ID: 558)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6355462074279785
    2. '   ' → logprob: -1.1355462074279785
    3. '.' → logprob: -2.8855462074279785
    4. ' suivantes' → logprob: -3.6355462074279785
    5. ' du' → logprob: -3.7605462074279785
    6. ' d' → logprob: -4.5105462074279785
    7. '```' → logprob: -5.0105462074279785
    8. ' des' → logprob: -5.5105462074279785
    9. '"""' → logprob: -5.6355462074279785
    10. ' données' → logprob: -5.8855462074279785

Token 55: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0585518404841423
    2. ')' → logprob: -3.433551788330078
    3. '"""' → logprob: -4.558551788330078
    4. '```' → logprob: -5.808551788330078
    5. '"""
' → logprob: -5.933551788330078
    6. '\n' → logprob: -6.058551788330078
    7. '"' → logprob: -6.433551788330078
    8. ')
' → logprob: -6.933551788330078
    9. ':' → logprob: -7.183551788330078
    10. ' ' → logprob: -7.808551788330078

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024566298816353083
    2. '    ' → logprob: -6.2524566650390625
    3. '"""' → logprob: -8.127456665039062
    4. ' """' → logprob: -9.627456665039062
    5. ' """
' → logprob: -10.127456665039062
    6. '    
' → logprob: -11.002456665039062
    7. '```' → logprob: -11.127456665039062
    8. '  ' → logprob: -11.252456665039062
    9. ' ' → logprob: -11.377456665039062
    10. '       ' → logprob: -11.377456665039062

Token 57: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21028894186019897
    2. ' for' → logprob: -2.4602890014648438
    3. '    ' → logprob: -3.7102890014648438
    4. ' Le' → logprob: -4.335289001464844
    5. ' La' → logprob: -4.460289001464844
    6. 'for' → logprob: -5.085289001464844
    7. ' return' → logprob: -5.710289001464844
    8. '#' → logprob: -5.710289001464844
    9. ' la' → logprob: -5.835289001464844
    10. 'La' → logprob: -5.960289001464844

Token 58: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.30240219831466675
    2. 'ètre' → logprob: -1.8024022579193115
    3. 'eters' → logprob: -2.6774022579193115
    4. '   ' → logprob: -3.9274022579193115
    5. '```' → logprob: -6.552402019500732
    6. 's' → logprob: -6.927402019500732
    7. 'et' → logprob: -7.052402019500732
    8. 'etre' → logprob: -7.177402019500732
    9. 'eter' → logprob: -7.427402019500732
    10. 'etros' → logprob: -7.552402019500732

Token 59: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.13278339803218842
    2. '   ' → logprob: -2.7577834129333496
    3. ':' → logprob: -3.2577834129333496
    4. ' :
' → logprob: -4.00778341293335
    5. ':
' → logprob: -6.38278341293335
    6. '
' → logprob: -7.13278341293335
    7. '```' → logprob: -7.38278341293335
    8. '    
' → logprob: -8.132782936096191
    9. '):
' → logprob: -8.382782936096191
    10. '):' → logprob: -8.757782936096191

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3128865361213684
    2. ' N' → logprob: -2.3128864765167236
    3. '    ' → logprob: -2.5628864765167236
    4. '```' → logprob: -3.3128864765167236
    5. ' 
' → logprob: -4.312886714935303
    6. ' d' → logprob: -4.562886714935303
    7. '    
' → logprob: -4.812886714935303
    8. '<|end|>' → logprob: -5.437886714935303
    9. '
' → logprob: -5.812886714935303
    10. ' def' → logprob: -6.187886714935303

Token 61: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48588722944259644
    2. ' N' → logprob: -1.2358872890472412
    3. '    ' → logprob: -2.985887289047241
    4. '```' → logprob: -4.485887050628662
    5. ' d' → logprob: -4.735887050628662
    6. 'N' → logprob: -5.110887050628662
    7. ' 
' → logprob: -5.110887050628662
    8. ' n' → logprob: -5.860887050628662
    9. ')' → logprob: -6.235887050628662
    10. '    
' → logprob: -6.610887050628662

Token 62: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.00892464630305767
    2. 'N' → logprob: -4.75892448425293
    3. ' d' → logprob: -8.38392448425293
    4. ' `' → logprob: -10.88392448425293
    5. ' int' → logprob: -11.25892448425293
    6. ' n' → logprob: -11.38392448425293
    7. 'd' → logprob: -11.88392448425293
    8. '```' → logprob: -12.25892448425293
    9. ' ' → logprob: -12.25892448425293
    10. 'n' → logprob: -12.38392448425293

Token 63: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.25771015882492065
    2. ':' → logprob: -1.8827102184295654
    3. ',' → logprob: -3.0077102184295654
    4. ':int' → logprob: -4.382709980010986
    5. ' (' → logprob: -5.007709980010986
    6. '   ' → logprob: -6.257709980010986
    7. '):' → logprob: -6.382709980010986
    8. ' =' → logprob: -7.382709980010986
    9. '=int' → logprob: -7.757709980010986
    10. ' int' → logprob: -8.007710456848145

Token 64: ' nombre' (ID: 9733)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006262104492634535
    2. ' nombre' → logprob: -6.006262302398682
    3. 'int' → logprob: -6.256262302398682
    4. ' le' → logprob: -6.631262302398682
    5. ' l' → logprob: -8.506261825561523
    6. ' ' → logprob: -9.006261825561523
    7. '=int' → logprob: -10.506261825561523
    8. ' integer' → logprob: -10.631261825561523
    9. '[int' → logprob: -10.631261825561523
    10. ' Nombre' → logprob: -10.631261825561523

Token 65: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.246331125497818
    2. ' d' → logprob: -1.8713310956954956
    3. 'de' → logprob: -3.246331214904785
    4. '_de' → logprob: -3.871331214904785
    5. 'd' → logprob: -6.246331214904785
    6. ' total' → logprob: -6.996331214904785
    7. '_total' → logprob: -7.496331214904785
    8. '_d' → logprob: -7.871331214904785
    9. ' ' → logprob: -8.246331214904785
    10. 'total' → logprob: -8.746331214904785

Token 66: ' tramp' (ID: 94418)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.680819034576416
    2. ' pont' → logprob: -2.680819034576416
    3. 'points' → logprob: -2.930819034576416
    4. ' sa' → logprob: -3.055819034576416
    5. ' plateformes' → logprob: -3.305819034576416
    6. ' étapes' → logprob: -3.555819034576416
    7. 's' → logprob: -3.680819034576416
    8. ' somm' → logprob: -4.055819034576416
    9. 'positions' → logprob: -4.180819034576416
    10. ' villes' → logprob: -4.493319034576416

Token 67: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.2413976788520813
    2. 'l' → logprob: -2.7413976192474365
    3. 'ols' → logprob: -2.7413976192474365
    4. 'orts' → logprob: -3.3663976192474365
    5. 'oints' → logprob: -4.616397857666016
    6. 'ons' → logprob: -4.741397857666016
    7. 'laces' → logprob: -5.116397857666016
    8. 'olis' → logprob: -5.116397857666016
    9. 'o' → logprob: -5.616397857666016
    10. '>' → logprob: -6.116397857666016

Token 68: 'ines' (ID: 2028)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.3869646191596985
    2. 'ines' → logprob: -2.0119645595550537
    3. 'ol' → logprob: -2.5119645595550537
    4. 'i' → logprob: -3.5119645595550537
    5. 'in' → logprob: -4.011964797973633
    6. 'ols' → logprob: -4.136964797973633
    7. 's' → logprob: -4.261964797973633
    8. 'es' → logprob: -5.011964797973633
    9. 'eins' → logprob: -5.386964797973633
    10. 'o' → logprob: -5.511964797973633

Token 69: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11328096687793732
    2. '<|end|>' → logprob: -2.863281011581421
    3. ')' → logprob: -4.113280773162842
    4. ' ,' → logprob: -4.988280773162842
    5. '```' → logprob: -4.988280773162842
    6. ''' → logprob: -5.363280773162842
    7. '<|end|>' → logprob: -5.863280773162842
    8. ' (' → logprob: -6.113280773162842
    9. ' )' → logprob: -6.363280773162842
    10. '   ' → logprob: -6.613280773162842

Token 70: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8328959345817566
    2. '<|end|>' → logprob: -1.0828959941864014
    3. ')' → logprob: -1.8328959941864014
    4. '   ' → logprob: -3.0828959941864014
    5. '<|end|>' → logprob: -5.207895755767822
    6. '
' → logprob: -6.082895755767822
    7. ' (' → logprob: -6.207895755767822
    8. ' ' → logprob: -6.207895755767822
    9. '    
' → logprob: -6.707895755767822
    10. '```' → logprob: -6.707895755767822

Token 71: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10152921080589294
    2. '
' → logprob: -2.851529121398926
    3. '```' → logprob: -3.476529121398926
    4. '\n' → logprob: -5.601529121398926
    5. ')' → logprob: -6.726529121398926
    6. '    
' → logprob: -7.351529121398926
    7. 'n' → logprob: -7.601529121398926
    8. ',' → logprob: -7.851529121398926
    9. '  
' → logprob: -8.726529121398926
    10. '    ' → logprob: -8.851529121398926

Token 72: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02355385199189186
    2. 'd' → logprob: -3.7735538482666016
    3. ' ' → logprob: -8.148553848266602
    4. ' ' → logprob: -12.398553848266602
    5. ' distances' → logprob: -12.898553848266602
    6. '   ' → logprob: -13.273553848266602
    7. ' list' → logprob: -13.523553848266602
    8. '  ' → logprob: -13.648553848266602
    9. '	d' → logprob: -13.773553848266602
    10. '```' → logprob: -13.773553848266602

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.697284460067749
    2. ' :' → logprob: -0.697284460067749
    3. ',' → logprob: -6.447284698486328
    4. '):' → logprob: -6.947284698486328
    5. ' =' → logprob: -7.322284698486328
    6. '[' → logprob: -8.322284698486328
    7. ')' → logprob: -8.572284698486328
    8. ' ):' → logprob: -8.697284698486328
    9. ' ,' → logprob: -9.697284698486328
    10. '[int' → logprob: -9.822284698486328

Token 74: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.24036088585853577
    2. ' list' → logprob: -1.7403608560562134
    3. ' distances' → logprob: -3.865360975265503
    4. ' la' → logprob: -4.865360736846924
    5. ' ' → logprob: -6.240360736846924
    6. ' distance' → logprob: -6.365360736846924
    7. ' listes' → logprob: -6.490360736846924
    8. 'list' → logprob: -6.865360736846924
    9. 'liste' → logprob: -7.115360736846924
    10. ' List' → logprob: -7.490360736846924

Token 75: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.00805821642279625
    2. ' de' → logprob: -5.508058071136475
    3. 'des' → logprob: -6.383058071136475
    4. '[int' → logprob: -6.883058071136475
    5. '[' → logprob: -8.008058547973633
    6. '_des' → logprob: -8.383058547973633
    7. ' of' → logprob: -8.508058547973633
    8. ' d' → logprob: -8.758058547973633
    9. 'de' → logprob: -9.633058547973633
    10. '   ' → logprob: -9.633058547973633

Token 76: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.14134971797466278
    2. 'dist' → logprob: -2.1413497924804688
    3. 'distance' → logprob: -5.016349792480469
    4. ' dist' → logprob: -6.141349792480469
    5. 'int' → logprob: -6.891349792480469
    6. 'positions' → logprob: -7.016349792480469
    7. 'd' → logprob: -7.141349792480469
    8. ' sa' → logprob: -8.016349792480469
    9. 'esp' → logprob: -8.391349792480469
    10. ' distance' → logprob: -8.391349792480469

Token 77: ' maxim' (ID: 29045)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.19375823438167572
    2. 'entre' → logprob: -2.693758249282837
    3. ' between' → logprob: -2.818758249282837
    4. ' des' → logprob: -3.318758249282837
    5. '   ' → logprob: -5.943758010864258
    6. 'between' → logprob: -6.068758010864258
    7. 'des' → logprob: -6.818758010864258
    8. ')' → logprob: -6.943758010864258
    9. '[' → logprob: -7.318758010864258
    10. ' à' → logprob: -7.443758010864258

Token 78: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0035443592350929976
    2. 'um' → logprob: -5.878544330596924
    3. 'aux' → logprob: -7.503544330596924
    4. 'ale' → logprob: -9.378544807434082
    5. '```' → logprob: -10.128544807434082
    6. 'al' → logprob: -11.628544807434082
    7. 'ums' → logprob: -11.753544807434082
    8. 'au' → logprob: -11.878544807434082
    9. 'a' → logprob: -11.878544807434082
    10. 'umes' → logprob: -12.128544807434082

Token 79: ' de' (ID: 334)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.1272910833358765
    2. ' de' → logprob: -1.7522910833358765
    3. ' entre' → logprob: -1.8772910833358765
    4. 'que' → logprob: -2.252291202545166
    5. 'de' → logprob: -3.252291202545166
    6. 'entre' → logprob: -3.377291202545166
    7. ' des' → logprob: -3.502291202545166
    8. ' )' → logprob: -3.877291202545166
    9. 's' → logprob: -4.252291202545166
    10. ' à' → logprob: -4.377291202545166

Token 80: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.17444632947444916
    2. 's' → logprob: -1.9244463443756104
    3. ' sa' → logprob: -5.549446105957031
    4. ' chaque' → logprob: -5.674446105957031
    5. ' salto' → logprob: -6.424446105957031
    6. 'sa' → logprob: -7.299446105957031
    7. 'bond' → logprob: -7.424446105957031
    8. ' bond' → logprob: -7.674446105957031
    9. ' each' → logprob: -7.924446105957031
    10. ' déplacement' → logprob: -7.924446105957031

Token 81: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.118871808052063
    2. ' )' → logprob: -1.493871808052063
    3. 's' → logprob: -1.618871808052063
    4. ' entre' → logprob: -2.6188716888427734
    5. ' ' → logprob: -2.9938716888427734
    6. ' pour' → logprob: -4.118871688842773
    7. '   ' → logprob: -4.118871688842773
    8. '[' → logprob: -4.118871688842773
    9. ' possibles' → logprob: -4.368871688842773
    10. ',' → logprob: -4.743871688842773

Token 82: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0070488909259438515
    2. ' each' → logprob: -5.507049083709717
    3. ' chacun' → logprob: -7.007049083709717
    4. 'each' → logprob: -7.257049083709717
    5. ' ' → logprob: -7.632049083709717
    6. ' chacune' → logprob: -8.257048606872559
    7. 'cha' → logprob: -8.507048606872559
    8. 'Chaque' → logprob: -8.882048606872559
    9. ' les' → logprob: -9.257048606872559
    10. ' Chaque' → logprob: -9.882048606872559

Token 83: ' trampoline' (ID: 162506)
  Prédit: ' trampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trampoline' → logprob: -0.29696500301361084
    2. ' tramp' → logprob: -1.5469650030136108
    3. 'tr' → logprob: -3.1719651222229004
    4. ' ' → logprob: -6.2969651222229
    5. ' tr' → logprob: -9.796964645385742
    6. '_tr' → logprob: -10.421964645385742
    7. 'tram' → logprob: -10.421964645385742
    8. ' tranche' → logprob: -10.546964645385742
    9. ' tram' → logprob: -10.796964645385742
    10. 't' → logprob: -11.296964645385742

Token 84: '
    
' (ID: 15698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8239389061927795
    2. '):' → logprob: -0.8239389061927795
    3. '   ' → logprob: -2.1989388465881348
    4. '):
' → logprob: -6.073938846588135
    5. '"""' → logprob: -6.198938846588135
    6. '```' → logprob: -6.323938846588135
    7. ' )' → logprob: -6.448938846588135
    8. ' ):' → logprob: -6.823938846588135
    9. '
' → logprob: -7.198938846588135
    10. ',' → logprob: -7.323938846588135

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0337187796831131
    2. ')' → logprob: -3.9087188243865967
    3. '"""' → logprob: -4.783718585968018
    4. '```' → logprob: -5.908718585968018
    5. '"""
' → logprob: -7.158718585968018
    6. '):' → logprob: -7.283718585968018
    7. '):
' → logprob: -9.033719062805176
    8. '    
' → logprob: -9.783719062805176
    9. '    ' → logprob: -9.908719062805176
    10. '"' → logprob: -10.033719062805176

Token 86: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06619018316268921
    2. 'for' → logprob: -3.316190242767334
    3. ' for' → logprob: -5.441190242767334
    4. '
' → logprob: -5.441190242767334
    5. '```' → logprob: -5.816190242767334
    6. '    
' → logprob: -5.941190242767334
    7. '#' → logprob: -5.941190242767334
    8. '"""
' → logprob: -6.191190242767334
    9. 'max' → logprob: -6.316190242767334
    10. 'return' → logprob: -7.066190242767334

Token 87: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.12540708482265472
    2. 'n' → logprob: -2.6254069805145264
    3. '   ' → logprob: -3.8754069805145264
    4. 'nne' → logprob: -4.8754072189331055
    5. 'ns' → logprob: -5.6254072189331055
    6. 's' → logprob: -5.6254072189331055
    7. '    
' → logprob: -6.1254072189331055
    8. 'nera' → logprob: -6.2504072189331055
    9. 'e' → logprob: -6.6254072189331055
    10. ':' → logprob: -7.2504072189331055

Token 88: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002167986473068595
    2. 'True' → logprob: -6.50216817855835
    3. ' ' → logprob: -8.877167701721191
    4. ' bool' → logprob: -9.002167701721191
    5. ' ' → logprob: -9.127167701721191
    6. ' False' → logprob: -9.377167701721191
    7. ' None' → logprob: -9.502167701721191
    8. ':' → logprob: -9.502167701721191
    9. ' "' → logprob: -11.252167701721191
    10. ' true' → logprob: -11.377167701721191

Token 89: '   ' (ID: 271)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.025473788380622864
    2. 'True' → logprob: -4.025473594665527
    3. '"' → logprob: -5.275473594665527
    4. '   ' → logprob: -6.900473594665527
    5. ''' → logprob: -7.400473594665527
    6. ' bool' → logprob: -8.900473594665527
    7. ' "' → logprob: -9.025473594665527
    8. ' None' → logprob: -9.525473594665527
    9. '    ' → logprob: -9.775473594665527
    10. ' '' → logprob: -10.025473594665527

Token 90: ' -' (ID: 533)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07550498098134995
    2. 'True' → logprob: -2.825505018234253
    3. '"' → logprob: -4.950504779815674
    4. '   ' → logprob: -5.450504779815674
    5. ' "' → logprob: -7.075504779815674
    6. ' bool' → logprob: -7.575504779815674
    7. ''' → logprob: -8.325505256652832
    8. ' '' → logprob: -8.950505256652832
    9. ' true' → logprob: -9.200505256652832
    10. ' False' → logprob: -9.450505256652832

Token 91: ' "' (ID: 392)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.169241264462471
    2. 'True' → logprob: -2.544241189956665
    3. '"' → logprob: -3.044241189956665
    4. ' "' → logprob: -4.419241428375244
    5. ' bool' → logprob: -4.794241428375244
    6. ''' → logprob: -5.419241428375244
    7. ' '' → logprob: -6.044241428375244
    8. 'bool' → logprob: -7.044241428375244
    9. '   ' → logprob: -7.419241428375244
    10. ' False' → logprob: -8.919240951538086

Token 92: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.8282896280288696
    2. 'Yes' → logprob: -1.8282896280288696
    3. 'Oui' → logprob: -1.8282896280288696
    4. 'O' → logprob: -2.07828950881958
    5. 'Possible' → logprob: -2.95328950881958
    6. 'oui' → logprob: -3.82828950881958
    7. 'True' → logprob: -4.45328950881958
    8. '"' → logprob: -4.57828950881958
    9. 'possible' → logprob: -5.57828950881958
    10. 'SI' → logprob: -5.95328950881958

Token 93: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00041267683263868093
    2. '")' → logprob: -7.875412464141846
    3. '```' → logprob: -10.875412940979004
    4. '"""' → logprob: -12.125412940979004
    5. '\n' → logprob: -12.500412940979004
    6. ')' → logprob: -14.125412940979004
    7. 's' → logprob: -14.375412940979004
    8. 'or' → logprob: -14.625412940979004
    9. ' "' → logprob: -14.750412940979004
    10. ')"' → logprob: -15.000412940979004

Token 94: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7551947832107544
    2. ' or' → logprob: -1.2551947832107544
    3. 'if' → logprob: -1.6301947832107544
    4. '<|end|>' → logprob: -3.880194664001465
    5. '```' → logprob: -4.755194664001465
    6. ' ' → logprob: -5.630194664001465
    7. ' ou' → logprob: -6.005194664001465
    8. '
' → logprob: -6.005194664001465
    9. '"' → logprob: -6.130194664001465
    10. ',' → logprob: -6.255194664001465

Token 95: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11663229763507843
    2. ' il' → logprob: -3.2416322231292725
    3. ' l' → logprob: -3.6166322231292725
    4. ' on' → logprob: -3.8666322231292725
    5. ' la' → logprob: -5.241632461547852
    6. ' the' → logprob: -5.741632461547852
    7. ' "' → logprob: -5.866632461547852
    8. ' ' → logprob: -6.241632461547852
    9. ',' → logprob: -6.491632461547852
    10. ' ' → logprob: -6.741632461547852

Token 96: ' trajet' (ID: 110258)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.07895610481500626
    2. ' trajet' → logprob: -3.578956127166748
    3. 'sa' → logprob: -3.953956127166748
    4. ' parcours' → logprob: -5.453956127166748
    5. ' saut' → logprob: -5.828956127166748
    6. ' can' → logprob: -5.953956127166748
    7. ' ' → logprob: -6.078956127166748
    8. ' trampoline' → logprob: -6.078956127166748
    9. 'a' → logprob: -6.203956127166748
    10. 's' → logprob: -6.453956127166748

Token 97: ' aller' (ID: 18383)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7829237580299377
    2. ' complet' → logprob: -1.157923698425293
    3. ' peut' → logprob: -1.657923698425293
    4. 'pe' → logprob: -4.282923698425293
    5. ' complète' → logprob: -5.157923698425293
    6. ' peux' → logprob: -5.657923698425293
    7. 'est' → logprob: -6.157923698425293
    8. ' aller' → logprob: -6.157923698425293
    9. '<|end|>' → logprob: -6.532923698425293
    10. ' can' → logprob: -6.782923698425293

Token 98: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.25009697675704956
    2. '-return' → logprob: -2.0000970363616943
    3. '-' → logprob: -2.5000970363616943
    4. '-tr' → logprob: -7.000096797943115
    5. '-re' → logprob: -7.375096797943115
    6. '-com' → logprob: -7.625096797943115
    7. '-round' → logprob: -7.750096797943115
    8. '-trip' → logprob: -7.875096797943115
    9. '-b' → logprob: -8.625097274780273
    10. '-et' → logprob: -8.750097274780273

Token 99: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.002860747277736664
    2. 'ou' → logprob: -6.2528605461120605
    3. 'o' → logprob: -8.002861022949219
    4. 'ourn' → logprob: -8.252861022949219
    5. 'out' → logprob: -9.377861022949219
    6. 'oup' → logprob: -9.377861022949219
    7. 'Our' → logprob: -10.502861022949219
    8. '_' → logprob: -10.752861022949219
    9. '"' → logprob: -11.127861022949219
    10. 'oun' → logprob: -11.377861022949219

Token 100: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.23267389833927155
    2. ' peut' → logprob: -1.9826738834381104
    3. '"' → logprob: -2.8576738834381104
    4. ' ' → logprob: -4.8576741218566895
    5. 'est' → logprob: -6.8576741218566895
    6. ' possible' → logprob: -6.8576741218566895
    7. ' "' → logprob: -7.3576741218566895
    8. ' complet' → logprob: -7.8576741218566895
    9. ' can' → logprob: -7.9826741218566895
    10. '   ' → logprob: -8.357673645019531

Token 101: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.0831863209605217
    2. 'possible' → logprob: -2.583186388015747
    3. ' réalis' → logprob: -6.083186149597168
    4. ' complet' → logprob: -6.708186149597168
    5. '_possible' → logprob: -7.333186149597168
    6. ' possibles' → logprob: -10.708186149597168
    7. 'compl' → logprob: -10.833186149597168
    8. 'Possible' → logprob: -11.083186149597168
    9. ' fais' → logprob: -11.083186149597168
    10. ' compl' → logprob: -11.458186149597168

Token 102: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05142315849661827
    2. '   ' → logprob: -3.0514230728149414
    3. '\n' → logprob: -6.426423072814941
    4. '```' → logprob: -7.926423072814941
    5. ' ,' → logprob: -8.301423072814941
    6. '
' → logprob: -8.801423072814941
    7. '"' → logprob: -8.801423072814941
    8. ',
' → logprob: -9.426423072814941
    9. '  ' → logprob: -9.426423072814941
    10. '    ' → logprob: -10.051423072814941

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02103927917778492
    2. ',' → logprob: -3.8960392475128174
    3. '    
' → logprob: -9.146039009094238
    4. '```' → logprob: -9.646039009094238
    5. '\n' → logprob: -10.021039009094238
    6. 's' → logprob: -10.146039009094238
    7. '  ' → logprob: -10.146039009094238
    8. ',
' → logprob: -10.396039009094238
    9. '
' → logprob: -10.396039009094238
    10. '    ' → logprob: -10.521039009094238

Token 104: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021557534113526344
    2. ',' → logprob: -4.146557331085205
    3. '
' → logprob: -6.646557331085205
    4. '    
' → logprob: -6.771557331085205
    5. '  ' → logprob: -7.521557331085205
    6. '    ' → logprob: -8.146557807922363
    7. ' else' → logprob: -8.146557807922363
    8. '<|end|>' → logprob: -8.146557807922363
    9. '```' → logprob: -8.146557807922363
    10. '\n' → logprob: -8.521557807922363

Token 105: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694701552391052
    2. ' "' → logprob: -2.1269469261169434
    3. ''' → logprob: -12.001947402954102
    4. ' ' → logprob: -12.376947402954102
    5. ' ' → logprob: -12.501947402954102
    6. '"No' → logprob: -13.876947402954102
    7. 'non' → logprob: -13.876947402954102
    8. ' no' → logprob: -14.501947402954102
    9. ' non' → logprob: -14.876947402954102
    10. 'space' → logprob: -15.501947402954102

Token 106: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.06840395927429199
    2. '"' → logprob: -2.818403959274292
    3. ' no' → logprob: -5.068404197692871
    4. ''' → logprob: -10.443404197692871
    5. '"No' → logprob: -10.818404197692871
    6. '	no' → logprob: -10.818404197692871
    7. 'No' → logprob: -11.443404197692871
    8. ' "' → logprob: -11.693404197692871
    9. 'n' → logprob: -11.943404197692871
    10. 'none' → logprob: -12.318404197692871

Token 107: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0010650822659954429
    2. '")' → logprob: -6.876065254211426
    3. '```' → logprob: -10.501065254211426
    4. ')' → logprob: -13.626065254211426
    5. '"""' → logprob: -13.751065254211426
    6. '"
' → logprob: -13.876065254211426
    7. 's' → logprob: -15.001065254211426
    8. '")
' → logprob: -15.251065254211426
    9. ')"' → logprob: -15.751065254211426
    10. 'e' → logprob: -15.751065254211426

Token 108: ' sinon' (ID: 52915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7564507722854614
    2. '   ' → logprob: -0.8814507722854614
    3. '
' → logprob: -2.506450653076172
    4. '):' → logprob: -3.756450653076172
    5. '):
' → logprob: -5.506450653076172
    6. ':' → logprob: -6.006450653076172
    7. '```' → logprob: -6.631450653076172
    8. ')
' → logprob: -6.756450653076172
    9. '"""' → logprob: -7.006450653076172
    10. '\n' → logprob: -8.006450653076172

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13179920613765717
    2. '
' → logprob: -2.6317992210388184
    3. ')' → logprob: -3.1317992210388184
    4. '    
' → logprob: -5.756799221038818
    5. '\n' → logprob: -7.131799221038818
    6. ':' → logprob: -7.131799221038818
    7. '):' → logprob: -7.256799221038818
    8. '```' → logprob: -7.881799221038818
    9. '"""' → logprob: -7.881799221038818
    10. ' 
' → logprob: -8.00679874420166

Token 111: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15120026469230652
    2. '"""' → logprob: -2.026200294494629
    3. '"""
' (adapté à ' """
') → logprob: -5.776200294494629
    4. ')' → logprob: -6.276200294494629
    5. '
' → logprob: -6.776200294494629
    6. '```' → logprob: -6.776200294494629
    7. '""' → logprob: -7.776200294494629
    8. '"' → logprob: -8.026200294494629
    9. ' """' → logprob: -8.776200294494629
    10. '\n' → logprob: -8.901200294494629

Token 112: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019009418785572052
    2. '    
' → logprob: -4.644009590148926
    3. '
' → logprob: -5.269009590148926
    4. 'def' → logprob: -6.144009590148926
    5. 'n' → logprob: -7.269009590148926
    6. ' 
' → logprob: -7.769009590148926
    7. 'dp' → logprob: -8.769009590148926
    8. ' def' → logprob: -9.144009590148926
    9. ' n' → logprob: -9.394009590148926
    10. '```' → logprob: -10.019009590148926

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006991708185523748
    2. ' max' → logprob: -6.006991863250732
    3. ' reachable' → logprob: -6.756991863250732
    4. ' visited' → logprob: -7.506991863250732
    5. ' dp' → logprob: -7.506991863250732
    6. 'max' → logprob: -7.881991863250732
    7. 'dp' → logprob: -8.006991386413574
    8. ' n' → logprob: -8.131991386413574
    9. 'def' → logprob: -8.506991386413574
    10. 'reachable' → logprob: -8.756991386413574

Token 114: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5173829197883606
    2. 'dp' → logprob: -2.017382860183716
    3. '#' (adapté à ' #') → logprob: -2.767382860183716
    4. 'left' → logprob: -3.017382860183716
    5. 'forward' → logprob: -3.392382860183716
    6. 'pos' → logprob: -3.892382860183716
    7. 'visited' → logprob: -4.017383098602295
    8. 'reachable' → logprob: -4.517383098602295
    9. 'jump' → logprob: -5.142383098602295
    10. 'position' → logprob: -5.267383098602295

Token 115: ' Les' (ID: 7029)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7042763829231262
    2. 'dp' → logprob: -1.5792763233184814
    3. ' max' → logprob: -2.5792763233184814
    4. 'forward' → logprob: -2.9542763233184814
    5. '#' → logprob: -3.2042763233184814
    6. 'visited' → logprob: -3.7042763233184814
    7. 'left' → logprob: -4.5792765617370605
    8. 'distance' → logprob: -4.8292765617370605
    9. 'reachable' → logprob: -4.8292765617370605
    10. ' forward' → logprob: -4.9542765617370605

Token 116: ' tramp' (ID: 94418)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7654009461402893
    2. ' distances' → logprob: -1.3904008865356445
    3. 'max' → logprob: -3.0154008865356445
    4. ' positions' → logprob: -3.2654008865356445
    5. '#' → logprob: -3.5154008865356445
    6. ' #' → logprob: -4.0154008865356445
    7. ' sa' → logprob: -4.1404008865356445
    8. 's' → logprob: -4.2654008865356445
    9. 'dp' → logprob: -4.3904008865356445
    10. 'positions' → logprob: -4.5154008865356445

Token 117: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.0001114106344175525
    2. 'oline' → logprob: -10.37511157989502
    3. 'olim' → logprob: -10.87511157989502
    4. '   ' → logprob: -11.25011157989502
    5. 'ols' → logprob: -11.25011157989502
    6. 'olini' → logprob: -12.00011157989502
    7. 'lines' → logprob: -12.37511157989502
    8. 'l' → logprob: -12.75011157989502
    9. 'olin' → logprob: -12.87511157989502
    10. 'o' → logprob: -13.00011157989502

Token 118: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.015177277848124504
    2. 'ol' → logprob: -4.265177249908447
    3. 'lines' → logprob: -8.140177726745605
    4. 'oines' → logprob: -8.890177726745605
    5. '```' → logprob: -9.265177726745605
    6. '   ' → logprob: -9.390177726745605
    7. '>' → logprob: -9.890177726745605
    8. ']' → logprob: -10.015177726745605
    9. ')' → logprob: -10.015177726745605
    10. '#' → logprob: -10.515177726745605

Token 119: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.686521053314209
    2. '=' → logprob: -1.186521053314209
    3. 'max' → logprob: -3.436521053314209
    4. 'pe' → logprob: -3.811521053314209
    5. '_max' → logprob: -3.936521053314209
    6. 'rest' → logprob: -4.061521053314209
    7. '=[' → logprob: -4.311521053314209
    8. 's' → logprob: -4.436521053314209
    9. '_pos' → logprob: -4.436521053314209
    10. '_at' → logprob: -5.186521053314209

Token 120: ' espac' (ID: 195747)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.6395094394683838
    2. ' plac' → logprob: -1.6395094394683838
    3. 'index' → logprob: -2.514509439468384
    4. ' sym' → logprob: -2.889509439468384
    5. ' espac' → logprob: -3.389509439468384
    6. ' position' → logprob: -3.514509439468384
    7. 'num' → logprob: -4.014509201049805
    8. 't' → logprob: -4.139509201049805
    9. ' des' → logprob: -4.139509201049805
    10. '[' → logprob: -4.139509201049805

Token 121: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01651826873421669
    2. 'es' → logprob: -4.1415181159973145
    3. 'e' → logprob: -8.516518592834473
    4. 'é' → logprob: -9.391518592834473
    5. 'ès' → logprob: -9.891518592834473
    6. 'ées' → logprob: -10.141518592834473
    7. '```' → logprob: -10.391518592834473
    8. '#' → logprob: -11.016518592834473
    9. '``' → logprob: -11.641518592834473
    10. 's' → logprob: -11.766518592834473

Token 122: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5870697498321533
    2. ' d' → logprob: -1.7120697498321533
    3. '[' → logprob: -1.9620697498321533
    4. '   ' → logprob: -1.9620697498321533
    5. ' uniform' → logprob: -1.9620697498321533
    6. 'd' → logprob: -3.2120697498321533
    7. ' ' → logprob: -3.3370697498321533
    8. ' =' → logprob: -3.8370697498321533
    9. '=' → logprob: -3.9620697498321533
    10. 'uniform' → logprob: -4.212069511413574

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5582180023193359
    2. ' ' → logprob: -0.9332180023193359
    3. '[' → logprob: -4.933218002319336
    4. ' une' → logprob: -4.933218002319336
    5. '2' → logprob: -5.308218002319336
    6. '100' → logprob: -5.808218002319336
    7. 'une' → logprob: -5.933218002319336
    8. '0' → logprob: -6.058218002319336
    9. ' [' → logprob: -6.058218002319336
    10. '10' → logprob: -7.183218002319336

Token 124: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22392338514328003
    2. ' ' → logprob: -2.098923444747925
    3. '[' → logprob: -3.598923444747925
    4. '100' → logprob: -4.473923206329346
    5. '0' → logprob: -4.598923206329346
    6. '2' → logprob: -4.598923206329346
    7. ' [' → logprob: -5.098923206329346
    8. '10' → logprob: -5.348923206329346
    9. 'd' → logprob: -5.723923206329346
    10. ' d' → logprob: -7.473923206329346

Token 125: 'm' (ID: 76)
  Prédit: ' unités'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unités' → logprob: -0.12131527811288834
    2. 'unit' → logprob: -2.9963152408599854
    3. ' espaces' → logprob: -3.9963152408599854
    4. ' unit' → logprob: -4.6213154792785645
    5. ' ' → logprob: -4.7463154792785645
    6. ' units' → logprob: -4.8713154792785645
    7. ' mètres' → logprob: -4.9963154792785645
    8. ' unité' → logprob: -5.4963154792785645
    9. 'units' → logprob: -5.9963154792785645
    10. 'm' → logprob: -6.2463154792785645

Token 126: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2967970371246338
    2. ',' → logprob: -2.421797037124634
    3. '    
' → logprob: -3.296797037124634
    4. '
' → logprob: -3.546797037124634
    5. '   ' → logprob: -3.546797037124634
    6. 'distance' → logprob: -4.171796798706055
    7. 'spacing' → logprob: -4.546796798706055
    8. ' spacing' → logprob: -4.796796798706055
    9. 'es' → logprob: -5.046796798706055
    10. ',
' → logprob: -5.546796798706055

Token 127: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.8376436233520508
    2. ' 
' → logprob: -1.0876436233520508
    3. '   ' → logprob: -1.7126436233520508
    4. '\n' → logprob: -4.337643623352051
    5. '  
' → logprob: -4.837643623352051
    6. '     
' → logprob: -4.837643623352051
    7. ' ' → logprob: -5.087643623352051
    8. 'n' → logprob: -5.462643623352051
    9. '   
' → logprob: -5.462643623352051
    10. ' ' → logprob: -6.212643623352051

Token 128: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1430964469909668
    2. 'max' → logprob: -3.393096446990967
    3. ' max' → logprob: -3.643096446990967
    4. ' distances' → logprob: -4.018096446990967
    5. 'distance' → logprob: -4.143096446990967
    6. '    
' → logprob: -4.393096446990967
    7. 'dp' → logprob: -4.518096446990967
    8. 'n' → logprob: -5.268096446990967
    9. '
' → logprob: -5.643096446990967
    10. 'dist' → logprob: -6.643096446990967

Token 129: ' Le' (ID: 2018)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6257430911064148
    2. 'max' → logprob: -1.1257431507110596
    3. 'distance' → logprob: -2.5007431507110596
    4. ' distance' → logprob: -4.2507429122924805
    5. 'dist' → logprob: -4.6257429122924805
    6. ' distances' → logprob: -4.7507429122924805
    7. '#' → logprob: -5.5007429122924805
    8. ' step' → logprob: -5.6257429122924805
    9. 'step' → logprob: -6.0007429122924805
    10. ' dist' → logprob: -6.0007429122924805

Token 130: ' jumper' (ID: 128010)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7204452157020569
    2. 'distance' → logprob: -1.845445156097412
    3. 'dist' → logprob: -2.345445156097412
    4. '#' → logprob: -2.345445156097412
    5. ' max' → logprob: -2.970445156097412
    6. 'n' → logprob: -2.970445156097412
    7. 'last' → logprob: -4.970445156097412
    8. ' n' → logprob: -5.095445156097412
    9. 'd' → logprob: -5.345445156097412
    10. 'interval' → logprob: -5.470445156097412

Token 131: ' peut' (ID: 9216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.414971113204956
    2. ' peut' → logprob: -1.414971113204956
    3. '_max' → logprob: -2.164971113204956
    4. '_distance' → logprob: -2.539971113204956
    5. '_' → logprob: -2.914971113204956
    6. ' doit' → logprob: -3.289971113204956
    7. '_position' → logprob: -3.789971113204956
    8. '_positions' → logprob: -3.914971113204956
    9. '_dist' → logprob: -3.914971113204956
    10. '_current' → logprob: -4.039971351623535

Token 132: ' sa' (ID: 880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.051386140286922455
    2. 'sa' → logprob: -3.9263861179351807
    3. 'jump' → logprob: -3.9263861179351807
    4. 'faire' → logprob: -6.17638635635376
    5. ' sa' → logprob: -6.67638635635376
    6. 'atte' → logprob: -7.05138635635376
    7. 'effect' → logprob: -7.42638635635376
    8. 'initial' → logprob: -7.42638635635376
    9. 'only' → logprob: -7.67638635635376
    10. ' at' → logprob: -7.67638635635376

Token 133: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.0933409258723259
    2. 'ut' → logprob: -2.7183408737182617
    3. 'u' → logprob: -3.8433408737182617
    4. 'ute' → logprob: -6.968340873718262
    5. 'utter' → logprob: -7.843340873718262
    6. 'uts' → logprob: -10.218340873718262
    7. 'uta' → logprob: -10.468340873718262
    8. 'ú' → logprob: -10.718340873718262
    9. 'uteur' → logprob: -10.718340873718262
    10. '

' → logprob: -10.843340873718262

Token 134: ' d' (ID: 272)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -1.12379789352417
    2. ' jusqu' → logprob: -1.12379789352417
    3. ' up' → logprob: -2.62379789352417
    4. ' ' → logprob: -2.74879789352417
    5. ' at' → logprob: -3.62379789352417
    6. ' à' → logprob: -3.74879789352417
    7. ' from' → logprob: -3.74879789352417
    8. ' de' → logprob: -3.74879789352417
    9. 'from' → logprob: -4.37379789352417
    10. ' d' → logprob: -4.49879789352417

Token 135: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5098550915718079
    2. 'u' → logprob: -1.384855031967163
    3. 'ist' → logprob: -3.134855031967163
    4. ''une' → logprob: -3.634855031967163
    5. 'istance' → logprob: -3.884855031967163
    6. ''au' → logprob: -4.259855270385742
    7. 'une' → logprob: -4.759855270385742
    8. 'au' → logprob: -4.759855270385742
    9. 'i' → logprob: -4.884855270385742
    10. '1' → logprob: -6.009855270385742

Token 136: ' trampoline' (ID: 162506)
  Prédit: ' trampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trampoline' → logprob: -0.08925972878932953
    2. 'tr' → logprob: -2.964259624481201
    3. ' tramp' → logprob: -3.464259624481201
    4. 'e' → logprob: -7.464259624481201
    5. 'a' → logprob: -9.02676010131836
    6. 'tram' → logprob: -9.08926010131836
    7. '_tr' → logprob: -9.15176010131836
    8. ' ' → logprob: -9.21426010131836
    9. ' point' → logprob: -9.27676010131836
    10. 'es' → logprob: -9.27676010131836

Token 137: ' i' (ID: 575)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6393986344337463
    2. ' au' → logprob: -1.3893985748291016
    3. ' jusqu' → logprob: -1.7643985748291016
    4. ' ' → logprob: -3.5143985748291016
    5. ' ou' → logprob: -5.514398574829102
    6. '   ' → logprob: -5.514398574829102
    7. 'au' → logprob: -5.639398574829102
    8. ' de' → logprob: -6.514398574829102
    9. ' jusque' → logprob: -6.764398574829102
    10. ' to' → logprob: -6.889398574829102

Token 138: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1398543119430542
    2. ''à' → logprob: -2.6398544311523438
    3. ' jusqu' → logprob: -3.7648544311523438
    4. '+' → logprob: -4.389854431152344
    5. ' au' → logprob: -5.139854431152344
    6. ''au' → logprob: -5.389854431152344
    7. ' ' → logprob: -6.139854431152344
    8. 'u' → logprob: -6.264854431152344
    9. '’à' → logprob: -6.264854431152344
    10. ' vers' → logprob: -6.764854431152344

Token 139: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.052127234637737274
    2. ''au' → logprob: -3.8021271228790283
    3. 'à' → logprob: -4.802127361297607
    4. ' à' → logprob: -4.802127361297607
    5. '’à' → logprob: -5.177127361297607
    6. 'au' → logprob: -5.552127361297607
    7. 'a' → logprob: -6.677127361297607
    8. ''' → logprob: -7.302127361297607
    9. '’au' → logprob: -8.67712688446045
    10. ' au' → logprob: -8.67712688446045

Token 140: ' tout' (ID: 5501)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1744312196969986
    2. ' i' → logprob: -2.049431324005127
    3. 'tr' → logprob: -4.299431324005127
    4. ' trampoline' → logprob: -5.049431324005127
    5. 'un' → logprob: -5.924431324005127
    6. ' un' → logprob: -5.924431324005127
    7. '10' → logprob: -6.674431324005127
    8. 'n' → logprob: -6.674431324005127
    9. ' ' → logprob: -7.424431324005127
    10. 'j' → logprob: -7.924431324005127

Token 141: ' trampoline' (ID: 162506)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2548890113830566
    2. ' trampoline' → logprob: -1.7548890113830566
    3. 'es' → logprob: -1.8798890113830566
    4. 'i' → logprob: -1.8798890113830566
    5. 'j' → logprob: -2.3798890113830566
    6. '```' → logprob: -3.8798890113830566
    7. ' ' → logprob: -4.004889011383057
    8. '<|end|>' → logprob: -4.004889011383057
    9. ' i' → logprob: -4.129889011383057
    10. 's' → logprob: -4.379889011383057

Token 142: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5432122945785522
    2. 'j' → logprob: -1.5432122945785522
    3. ' i' → logprob: -2.543212413787842
    4. ' compris' → logprob: -3.168212413787842
    5. '[i' → logprob: -4.168212413787842
    6. ' situé' → logprob: -4.418212413787842
    7. ' jusqu' → logprob: -4.543212413787842
    8. 'i' → logprob: -5.043212413787842
    9. '[j' → logprob: -5.168212413787842
    10. ' entre' → logprob: -5.293212413787842

Token 143: ' tel' (ID: 10716)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0368444919586182
    2. ',' → logprob: -1.6618444919586182
    3. ' compris' → logprob: -2.286844491958618
    4. ' (' → logprob: -2.786844491958618
    5. ' situé' → logprob: -2.786844491958618
    6. '   ' → logprob: -3.161844491958618
    7. ' avec' → logprob: -3.161844491958618
    8. ' j' → logprob: -3.536844491958618
    9. ' où' → logprob: -4.161844253540039
    10. ' ' → logprob: -4.161844253540039

Token 144: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.004998090211302042
    2. ' que' → logprob: -5.379998207092285
    3. '   ' → logprob: -8.879998207092285
    4. 'qu' → logprob: -9.254998207092285
    5. 'i' → logprob: -9.879998207092285
    6. 'j' → logprob: -11.254998207092285
    7. 'that' → logprob: -11.254998207092285
    8. '``' → logprob: -11.754998207092285
    9. '(i' → logprob: -11.879998207092285
    10. 'qui' → logprob: -11.879998207092285

Token 145: ':
' (ID: 734)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9436756372451782
    2. ' i' → logprob: -1.8186756372451782
    3. ' abs' → logprob: -2.3186755180358887
    4. ' ' → logprob: -2.4436755180358887
    5. 'j' → logprob: -2.6936755180358887
    6. ' (' → logprob: -2.9436755180358887
    7. ' d' → logprob: -3.3186755180358887
    8. 'i' → logprob: -3.5686755180358887
    9. 'abs' → logprob: -3.9436755180358887
    10. 'd' → logprob: -4.318675518035889

Token 146: '   ' (ID: 271)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2777765989303589
    2. ' i' → logprob: -1.7777765989303589
    3. ' ' → logprob: -3.6527767181396484
    4. ' abs' → logprob: -3.6527767181396484
    5. '   ' → logprob: -4.527776718139648
    6. 'j' → logprob: -5.152776718139648
    7. ' (' → logprob: -6.402776718139648
    8. 'i' → logprob: -7.152776718139648
    9. 'abs' → logprob: -7.277776718139648
    10. '10' → logprob: -7.402776718139648

Token 147: ' #' (ID: 1069)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5311524271965027
    2. ' i' → logprob: -1.1561524868011475
    3. ' ' → logprob: -2.9061524868011475
    4. ' abs' → logprob: -4.281152248382568
    5. 'j' → logprob: -4.656152248382568
    6. '   ' → logprob: -4.906152248382568
    7. 'i' → logprob: -5.656152248382568
    8. ' (' → logprob: -5.906152248382568
    9. 'abs' → logprob: -6.406152248382568
    10. '  ' → logprob: -6.531152248382568

Token 148: '  ' (ID: 256)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9923397302627563
    2. ' ' → logprob: -1.6173397302627563
    3. ' abs' → logprob: -1.9923397302627563
    4. 'j' → logprob: -2.617339611053467
    5. ' i' → logprob: -3.242339611053467
    6. '   ' → logprob: -3.242339611053467
    7. 'abs' → logprob: -3.367339611053467
    8. '10' → logprob: -3.492339611053467
    9. '0' → logprob: -3.742339611053467
    10. ' (' → logprob: -3.867339611053467

Token 149: ' abs' (ID: 8443)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2150399684906006
    2. ' abs' → logprob: -1.5900399684906006
    3. ' i' → logprob: -1.9650399684906006
    4. ' ' → logprob: -1.9650399684906006
    5. 'j' → logprob: -2.8400399684906006
    6. 'abs' (adapté à ' abs') → logprob: -3.2150399684906006
    7. ' (' → logprob: -3.4650399684906006
    8. 'i' → logprob: -3.5900399684906006
    9. '10' → logprob: -3.7150399684906006
    10. '   ' → logprob: -4.59004020690918

Token 150: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5761723518371582
    2. '(j' → logprob: -0.8261723518371582
    3. '(' → logprob: -8.451171875
    4. '(N' → logprob: -12.201171875
    5. '(d' → logprob: -12.826171875
    6. '(t' → logprob: -13.451171875
    7. ' (' → logprob: -13.451171875
    8. 'j' → logprob: -13.576171875
    9. 'i' → logprob: -13.701171875
    10. '(J' → logprob: -13.826171875

Token 151: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048786066472530365
    2. '-i' → logprob: -3.423786163330078
    3. '-' → logprob: -4.298786163330078
    4. '[i' → logprob: -7.798786163330078
    5. ' ' → logprob: -8.423786163330078
    6. '[' → logprob: -8.423786163330078
    7. ')' → logprob: -8.798786163330078
    8. 'i' → logprob: -9.048786163330078
    9. '-j' → logprob: -9.298786163330078
    10. ' i' → logprob: -9.298786163330078

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014610916376114
    2. ' i' → logprob: -1.7014610767364502
    3. ' ' → logprob: -10.451460838317871
    4. ')' → logprob: -11.826460838317871
    5. '	i' → logprob: -12.076460838317871
    6. '   ' → logprob: -13.451460838317871
    7. ')i' → logprob: -13.826460838317871
    8. '  ' → logprob: -14.201460838317871
    9. '_i' → logprob: -14.201460838317871
    10. ' ' → logprob: -14.826460838317871

Token 153: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.266944157890975e-05
    2. ')<=' → logprob: -10.000072479248047
    3. ' )' → logprob: -11.000072479248047
    4. '[' → logprob: -12.375072479248047
    5. '<=' → logprob: -13.750072479248047
    6. '")' → logprob: -14.375072479248047
    7. '')' → logprob: -14.375072479248047
    8. 'le' → logprob: -14.500072479248047
    9. '#' → logprob: -15.000072479248047
    10. 'j' → logprob: -15.000072479248047

Token 154: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2519778311252594
    2. ' ' → logprob: -1.501977801322937
    3. '   ' → logprob: -10.751977920532227
    4. '  ' → logprob: -11.939477920532227
    5. ' ' → logprob: -12.189477920532227
    6. '1' → logprob: -12.501977920532227
    7. '
' → logprob: -13.314477920532227
    8. '    ' → logprob: -13.439477920532227
    9. '```' → logprob: -13.814477920532227
    10. 'd' → logprob: -14.439477920532227

Token 155: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10037649422883987
    2. '<=' → logprob: -2.350376605987549
    3. ')<=' → logprob: -9.35037612915039
    4. ')' → logprob: -10.10037612915039
    5. ' ' → logprob: -11.72537612915039
    6. ' ' → logprob: -11.85037612915039
    7. ' ≤' → logprob: -12.10037612915039
    8. '<|end|>' → logprob: -12.35037612915039
    9. ']<=' → logprob: -12.47537612915039
    10. '+' → logprob: -13.47537612915039

Token 156: ' min' (ID: 1349)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5759735107421875
    2. ' d' → logprob: -0.8259735107421875
    3. ' ' → logprob: -10.950973510742188
    4. ' ' → logprob: -11.700973510742188
    5. '   ' → logprob: -12.700973510742188
    6. '	d' → logprob: -13.325973510742188
    7. '10' → logprob: -13.950973510742188
    8. '  ' → logprob: -14.450973510742188
    9. '    ' → logprob: -15.388473510742188
    10. ')d' → logprob: -15.575973510742188

Token 157: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01172574982047081
    2. '(' → logprob: -4.511725902557373
    3. 'd' → logprob: -7.761725902557373
    4. ' (' → logprob: -8.761725425720215
    5. '(N' → logprob: -10.886725425720215
    6. '(
' → logprob: -10.886725425720215
    7. '(len' → logprob: -11.261725425720215
    8. '(s' → logprob: -12.261725425720215
    9. 's' → logprob: -12.386725425720215
    10. '[d' → logprob: -12.386725425720215

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008501286501996219
    2. '[j' → logprob: -7.125850200653076
    3. '[N' → logprob: -10.500849723815918
    4. '[' → logprob: -11.750849723815918
    5. ')' → logprob: -13.125849723815918
    6. 'i' → logprob: -13.375849723815918
    7. '[I' → logprob: -13.500849723815918
    8. '[min' → logprob: -14.125849723815918
    9. ',i' → logprob: -14.500849723815918
    10. '[a' → logprob: -14.875849723815918

Token 159: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03955724090337753
    2. '[i' → logprob: -3.2895572185516357
    3. '[j' → logprob: -6.914557456970215
    4. ']' → logprob: -8.164557456970215
    5. '][' → logprob: -8.914557456970215
    6. ' ],' → logprob: -9.789557456970215
    7. '[' → logprob: -11.164557456970215
    8. ',' → logprob: -11.414557456970215
    9. '],[' → logprob: -12.164557456970215
    10. '[N' → logprob: -12.164557456970215

Token 160: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22546552121639252
    2. ' d' → logprob: -1.6004655361175537
    3. '   ' → logprob: -10.350465774536133
    4. ' ' → logprob: -11.975465774536133
    5. ' ' → logprob: -12.475465774536133
    6. '  ' → logprob: -13.100465774536133
    7. '    ' → logprob: -13.225465774536133
    8. ')' → logprob: -13.412965774536133
    9. ')d' → logprob: -13.850465774536133
    10. '	d' → logprob: -13.975465774536133

Token 161: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0010711579816415906
    2. '[i' → logprob: -7.001070976257324
    3. '[' → logprob: -9.001070976257324
    4. '])' → logprob: -11.126070976257324
    5. 'j' → logprob: -12.376070976257324
    6. ']' → logprob: -12.501070976257324
    7. ' [' → logprob: -13.001070976257324
    8. '[
' → logprob: -13.251070976257324
    9. '][' → logprob: -13.376070976257324
    10. '```' → logprob: -14.251070976257324

Token 162: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5818625688552856
    2. ')' → logprob: -0.8318625688552856
    3. '))' → logprob: -5.956862449645996
    4. '})' → logprob: -6.331862449645996
    5. ')])' → logprob: -7.581862449645996
    6. '),' → logprob: -8.456862449645996
    7. ']))' → logprob: -8.956862449645996
    8. '[' → logprob: -9.081862449645996
    9. ' )' → logprob: -9.206862449645996
    10. '>)' → logprob: -9.831862449645996

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057979974895715714
    2. '    
' → logprob: -2.9329800605773926
    3. '
' → logprob: -6.682980060577393
    4. '\n' → logprob: -7.807980060577393
    5. ')' → logprob: -8.057979583740234
    6. '<|end|>' → logprob: -8.432979583740234
    7. 'def' → logprob: -8.682979583740234
    8. '  
' → logprob: -8.682979583740234
    9. '    
    
' → logprob: -8.932979583740234
    10. '   
' → logprob: -9.557979583740234

Token 164: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2095305472612381
    2. '    
' → logprob: -1.8345305919647217
    3. '
' → logprob: -3.7095305919647217
    4. 'def' → logprob: -6.209530353546143
    5. ' 
' → logprob: -7.084530353546143
    6. '  
' → logprob: -7.209530353546143
    7. '\n' → logprob: -7.834530353546143
    8. '   
' → logprob: -8.4595308303833
    9. '    
    
' → logprob: -8.8345308303833
    10. 'n' → logprob: -9.2095308303833

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03467172011733055
    2. '    
' → logprob: -3.4096717834472656
    3. '
' → logprob: -7.284671783447266
    4. 'def' → logprob: -8.909671783447266
    5. '    
    
' → logprob: -9.659671783447266
    6. '#' → logprob: -10.284671783447266
    7. '    ' → logprob: -10.534671783447266
    8. '   
' → logprob: -11.534671783447266
    9. '  
' → logprob: -11.534671783447266
    10. '        
' → logprob: -11.534671783447266

Token 166: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050603337585926056
    2. '    
' → logprob: -3.5506033897399902
    3. '
' → logprob: -4.67560338973999
    4. 'def' → logprob: -4.92560338973999
    5. ' def' → logprob: -6.17560338973999
    6. '#' (adapté à ' #') → logprob: -7.42560338973999
    7. ' #' → logprob: -8.550602912902832
    8. '    ' → logprob: -8.675602912902832
    9. ' 
' → logprob: -9.050602912902832
    10. '  
' → logprob: -9.425602912902832

Token 167: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28126218914985657
    2. 'def' → logprob: -2.531262159347534
    3. '#' → logprob: -2.781262159347534
    4. ' forward' → logprob: -3.781262159347534
    5. ' #' → logprob: -4.531262397766113
    6. 'visited' → logprob: -4.531262397766113
    7. ' visited' → logprob: -4.781262397766113
    8. ' def' → logprob: -5.031262397766113
    9. 'forward' → logprob: -5.156262397766113
    10. 'from' → logprob: -5.156262397766113

Token 168: ' effet' (ID: 24342)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.6795706152915955
    2. 'suite' → logprob: -2.5545706748962402
    3. 'util' → logprob: -2.6795706748962402
    4. ' effet' → logprob: -3.1795706748962402
    5. 'part' → logprob: -3.3045706748962402
    6. ' d' → logprob: -3.4295706748962402
    7. 'd' → logprob: -3.9295706748962402
    8. ' gros' → logprob: -4.42957067489624
    9. ' part' → logprob: -4.42957067489624
    10. 's' → logprob: -4.42957067489624

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007882003672420979
    2. '   ' → logprob: -5.382882118225098
    3. ' ,' → logprob: -6.132882118225098
    4. ',
' → logprob: -7.757882118225098
    5. '#' → logprob: -8.757882118225098
    6. ' la' → logprob: -8.882882118225098
    7. 'def' → logprob: -9.757882118225098
    8. '  ' → logprob: -10.257882118225098
    9. ' le' → logprob: -10.632882118225098
    10. ' on' → logprob: -10.632882118225098

Token 170: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4900054633617401
    2. ' la' → logprob: -1.8650054931640625
    3. ' le' → logprob: -2.2400054931640625
    4. ' ' → logprob: -3.7400054931640625
    5. ' il' → logprob: -4.1150054931640625
    6. ' si' → logprob: -4.2400054931640625
    7. ' if' → logprob: -4.2400054931640625
    8. ' l' → logprob: -4.3650054931640625
    9. ' cela' → logprob: -4.7400054931640625
    10. ' chaque' → logprob: -4.9900054931640625

Token 171: ' jumper' (ID: 128010)
  Prédit: ' jumper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jumper' → logprob: -0.6833449602127075
    2. ' sa' → logprob: -2.433344841003418
    3. 'jum' → logprob: -2.683344841003418
    4. ' code' → logprob: -3.058344841003418
    5. ' saut' → logprob: -3.183344841003418
    6. 'sa' → logprob: -3.308344841003418
    7. 's' → logprob: -3.433344841003418
    8. 'min' → logprob: -3.683344841003418
    9. ' min' → logprob: -4.183344841003418
    10. ' plus' → logprob: -4.308344841003418

Token 172: ' saute' (ID: 146395)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.06221001222729683
    2. 'pe' → logprob: -3.1872100830078125
    3. '#' → logprob: -4.9372100830078125
    4. ' can' → logprob: -5.8122100830078125
    5. ' peux' → logprob: -5.9372100830078125
    6. ' ' → logprob: -6.0622100830078125
    7. ' #' → logprob: -6.5622100830078125
    8. ' doit' → logprob: -6.8122100830078125
    9. ' pourra' → logprob: -7.8122100830078125
    10. ' pe' → logprob: -8.187210083007812

Token 173: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.23070578277111053
    2. ' de' → logprob: -2.730705738067627
    3. ' toujours' → logprob: -3.355705738067627
    4. ' jusqu' → logprob: -3.730705738067627
    5. 'd' → logprob: -4.105705738067627
    6. ' du' → logprob: -4.355705738067627
    7. ' uniquement' → logprob: -4.980705738067627
    8. ' entre' → logprob: -5.105705738067627
    9. ' soit' → logprob: -5.105705738067627
    10. ' from' → logprob: -5.230705738067627

Token 174: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.007704699877649546
    2. 'u' → logprob: -5.507704734802246
    3. 'e' → logprob: -6.632704734802246
    4. '’un' → logprob: -7.632704734802246
    5. ''u' → logprob: -7.757704734802246
    6. ''' → logprob: -8.007704734802246
    7. 'un' → logprob: -8.382704734802246
    8. 'i' → logprob: -8.382704734802246
    9. ' un' → logprob: -8.882704734802246
    10. ''i' → logprob: -9.132704734802246

Token 175: ' trampoline' (ID: 162506)
  Prédit: ' trampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trampoline' → logprob: -0.11750932782888412
    2. 'tr' → logprob: -2.867509365081787
    3. ' tramp' → logprob: -3.117509365081787
    4. 'i' → logprob: -5.367509365081787
    5. ' point' → logprob: -6.992509365081787
    6. ' côté' → logprob: -7.242509365081787
    7. ' i' → logprob: -7.242509365081787
    8. ' tr' → logprob: -8.117508888244629
    9. 'j' → logprob: -8.555008888244629
    10. 'tré' → logprob: -9.055008888244629

Token 176: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13711373507976532
    2. 'i' → logprob: -2.2621138095855713
    3. ' à' → logprob: -3.7621138095855713
    4. ' vers' → logprob: -7.762113571166992
    5. 'à' → logprob: -9.262113571166992
    6. ' ' → logprob: -9.762113571166992
    7. ' ' → logprob: -10.387113571166992
    8. ' j' → logprob: -10.512113571166992
    9. ' to' → logprob: -10.512113571166992
    10. ' au' → logprob: -11.137113571166992

Token 177: ' vers' (ID: 3640)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1719137579202652
    2. ' vers' → logprob: -2.4219138622283936
    3. ' jusqu' → logprob: -2.7969138622283936
    4. ' ' → logprob: -6.4219136238098145
    5. ' au' → logprob: -6.5469136238098145
    6. ' i' → logprob: -6.5469136238098145
    7. 'à' → logprob: -7.1719136238098145
    8. ' ' → logprob: -7.7969136238098145
    9. ' j' → logprob: -7.7969136238098145
    10. ' a' → logprob: -8.171914100646973

Token 178: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1929795891046524
    2. 'un' → logprob: -1.8179795742034912
    3. ' n' → logprob: -5.06797981262207
    4. 'n' → logprob: -5.44297981262207
    5. ''un' → logprob: -6.69297981262207
    6. 'tout' → logprob: -7.31797981262207
    7. ' tout' → logprob: -8.44297981262207
    8. 't' → logprob: -9.31797981262207
    9. 'le' → logprob: -9.81797981262207
    10. ' j' → logprob: -9.94297981262207

Token 179: ' trampoline' (ID: 162506)
  Prédit: ' trampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trampoline' → logprob: -0.06757232546806335
    2. 'tr' → logprob: -3.9425723552703857
    3. 'j' → logprob: -4.317572116851807
    4. ' tramp' → logprob: -4.442572116851807
    5. ' j' → logprob: -4.942572116851807
    6. ' autre' → logprob: -5.692572116851807
    7. ' ' → logprob: -5.942572116851807
    8. 'aut' → logprob: -6.942572116851807
    9. 'e' → logprob: -6.942572116851807
    10. 'a' → logprob: -7.005072116851807

Token 180: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06441624462604523
    2. 'j' → logprob: -2.8144161701202393
    3. ' i' → logprob: -6.189416408538818
    4. 'i' → logprob: -8.68941593170166
    5. ' ' → logprob: -9.93941593170166
    6. ' voisin' → logprob: -10.06441593170166
    7. ' adjacent' → logprob: -10.18941593170166
    8. ' ' → logprob: -11.06441593170166
    9. '_j' → logprob: -11.43941593170166
    10. ',' → logprob: -11.43941593170166

Token 181: ' (' (ID: 350)
  Prédit: ' tel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tel' → logprob: -0.47866320610046387
    2. ',' → logprob: -2.103663206100464
    3. '   ' → logprob: -2.228663206100464
    4. ' (' → logprob: -3.103663206100464
    5. ' où' → logprob: -4.478663444519043
    6. ' avec' → logprob: -4.478663444519043
    7. 'tel' → logprob: -4.603663444519043
    8. ' si' → logprob: -4.728663444519043
    9. ' uniquement' → logprob: -4.728663444519043
    10. ' telle' → logprob: -4.728663444519043

Token 182: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06410501897335052
    2. ',' → logprob: -3.8141050338745117
    3. '),' → logprob: -4.439105033874512
    4. ' )' → logprob: -5.189105033874512
    5. '   ' → logprob: -5.689105033874512
    6. ' avec' → logprob: -5.814105033874512
    7. ' uniquement' → logprob: -5.939105033874512
    8. ' où' → logprob: -6.064105033874512
    9. ' si' → logprob: -6.189105033874512
    10. ' j' → logprob: -6.814105033874512

Token 183: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.3027653694152832
    2. '+' → logprob: -1.4277653694152832
    3. ' !=' → logprob: -1.6777653694152832
    4. ' <' → logprob: -1.9277653694152832
    5. ' +' → logprob: -2.552765369415283
    6. ')' → logprob: -3.677765369415283
    7. ' ==' → logprob: -4.427765369415283
    8. '<=' → logprob: -5.052765369415283
    9. ' ' → logprob: -5.177765369415283
    10. ' -' → logprob: -5.677765369415283

Token 184: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34856727719306946
    2. ' j' → logprob: -1.223567247390747
    3. ')' → logprob: -9.348567008972168
    4. '<|end|>' → logprob: -11.223567008972168
    5. ' ' → logprob: -11.848567008972168
    6. '=j' → logprob: -12.473567008972168
    7. '	j' → logprob: -12.598567008972168
    8. '   ' → logprob: -13.473567008972168
    9. '=' → logprob: -13.723567008972168
    10. '_j' → logprob: -14.348567008972168

Token 185: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06746513396501541
    2. '),' → logprob: -2.81746506690979
    3. ' )' → logprob: -5.567465305328369
    4. ').' → logprob: -7.817465305328369
    5. ',' → logprob: -7.942465305328369
    6. ' ),' → logprob: -7.942465305328369
    7. '):' → logprob: -9.317464828491211
    8. ' ou' → logprob: -9.567464828491211
    9. '   ' → logprob: -9.692464828491211
    10. ')
' → logprob: -9.817464828491211

Token 186: ' aller' (ID: 18383)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.29623299837112427
    2. ' l' → logprob: -1.7962329387664795
    3. 'aller' → logprob: -2.6712329387664795
    4. 'le' → logprob: -4.671233177185059
    5. ' aller' → logprob: -5.671233177185059
    6. ' le' → logprob: -6.171233177185059
    7. ' la' → logprob: -6.421233177185059
    8. 'la' → logprob: -6.671233177185059
    9. ')' → logprob: -7.171233177185059
    10. ''aller' → logprob: -7.671233177185059

Token 187: ',
' (ID: 412)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.24692104756832123
    2. ' vers' → logprob: -2.6219210624694824
    3. 'vers' → logprob: -2.7469210624694824
    4. ')' → logprob: -3.7469210624694824
    5. 'à' → logprob: -3.9969210624694824
    6. 'en' → logprob: -4.371921062469482
    7. ' à' → logprob: -5.121921062469482
    8. '),' → logprob: -5.246921062469482
    9. ' en' → logprob: -5.371921062469482
    10. 'au' → logprob: -5.746921062469482

Token 188: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.6370417475700378
    2. '#' → logprob: -1.6370418071746826
    3. ' j' → logprob: -2.2620418071746826
    4. ' #' → logprob: -2.5120418071746826
    5. ' et' → logprob: -3.0120418071746826
    6. 'et' → logprob: -4.3870415687561035
    7. 'j' → logprob: -4.5120415687561035
    8. ' i' → logprob: -5.3870415687561035
    9. ')' → logprob: -6.2620415687561035
    10. '   ' → logprob: -6.6370415687561035

Token 189: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.902492344379425
    2. ' j' → logprob: -0.902492344379425
    3. ' #' → logprob: -2.2774922847747803
    4. 'j' → logprob: -3.1524922847747803
    5. ' puis' → logprob: -3.4024922847747803
    6. 'def' → logprob: -6.402492523193359
    7. ' et' → logprob: -6.402492523193359
    8. ')' → logprob: -6.652492523193359
    9. 'et' → logprob: -6.902492523193359
    10. '   ' → logprob: -7.152492523193359

Token 190: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.40541142225265503
    2. ' puis' → logprob: -2.0304114818573
    3. ')' → logprob: -2.9054114818573
    4. 'j' → logprob: -3.1554114818573
    5. ' et' → logprob: -3.5304114818573
    6. ' #' → logprob: -3.5304114818573
    7. '#' → logprob: -4.280411243438721
    8. 'et' → logprob: -4.530411243438721
    9. ' ' → logprob: -5.530411243438721
    10. ' mais' → logprob: -6.280411243438721

Token 191: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07006069272756577
    2. '<' → logprob: -2.9450607299804688
    3. ' >' → logprob: -4.445060729980469
    4. '>' → logprob: -6.070060729980469
    5. ' <=' → logprob: -7.945060729980469
    6. ')' → logprob: -8.445060729980469
    7. ' >=' → logprob: -8.945060729980469
    8. '   ' → logprob: -9.820060729980469
    9. ' ' → logprob: -10.195060729980469
    10. '+' → logprob: -10.445060729980469

Token 192: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0889490619301796
    2. 'j' → logprob: -2.463948965072632
    3. ' ' → logprob: -12.588949203491211
    4. ')' → logprob: -13.213949203491211
    5. ' ' → logprob: -13.463949203491211
    6. '	j' → logprob: -13.963949203491211
    7. ' for' → logprob: -14.713949203491211
    8. '=j' → logprob: -14.838949203491211
    9. '   ' → logprob: -15.088949203491211
    10. '  ' → logprob: -15.588949203491211

Token 193: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.3456439673900604
    2. ')' → logprob: -1.4706439971923828
    3. 'pour' → logprob: -3.220643997192383
    4. ' for' → logprob: -3.970643997192383
    5. '),' → logprob: -6.720643997192383
    6. 'for' → logprob: -6.720643997192383
    7. ' ' → logprob: -8.345643997192383
    8. ' )' → logprob: -8.345643997192383
    9. '):
' → logprob: -9.345643997192383
    10. '#' → logprob: -9.345643997192383

Token 194: ' retour' (ID: 30714)
  Prédit: ' revenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' revenir' → logprob: -0.24289250373840332
    2. 'ret' → logprob: -2.2428925037384033
    3. ' le' → logprob: -3.3678925037384033
    4. 'le' → logprob: -3.4928925037384033
    5. ' retour' → logprob: -3.9928925037384033
    6. ' retourner' → logprob: -4.742892265319824
    7. ' ' → logprob: -5.367892265319824
    8. 're' → logprob: -5.742892265319824
    9. ' ' → logprob: -5.867892265319824
    10. 'return' → logprob: -6.242892265319824

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017841432243585587
    2. ').' → logprob: -4.392841339111328
    3. '),' → logprob: -5.392841339111328
    4. ' )' → logprob: -7.517841339111328
    5. '   ' → logprob: -10.142841339111328
    6. ' ' → logprob: -10.392841339111328
    7. '#' → logprob: -10.392841339111328
    8. ',' → logprob: -10.642841339111328
    9. '.' → logprob: -11.392841339111328
    10. ' pour' → logprob: -11.517841339111328

Token 196: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019081229344010353
    2. '    
' → logprob: -4.519081115722656
    3. ',' → logprob: -5.519081115722656
    4. ')' → logprob: -6.644081115722656
    5. '.' → logprob: -7.394081115722656
    6. '
' → logprob: -7.519081115722656
    7. 'def' → logprob: -7.769081115722656
    8. '  
' → logprob: -7.894081115722656
    9. '\n' → logprob: -8.769081115722656
    10. '    ' → logprob: -9.894081115722656

Token 197: ' et' (ID: 859)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.020487697795033455
    2. 'abs' → logprob: -4.1454877853393555
    3. ' ' → logprob: -6.0204877853393555
    4. '   ' → logprob: -7.1454877853393555
    5. ' ' → logprob: -7.6454877853393555
    6. '  ' → logprob: -7.8954877853393555
    7. '(abs' → logprob: -9.020487785339355
    8. '    ' → logprob: -9.270487785339355
    9. ' (' → logprob: -10.145487785339355
    10. ' la' → logprob: -10.270487785339355

Token 198: ' seulement' (ID: 32072)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6725654602050781
    2. ' ce' → logprob: -2.172565460205078
    3. ' que' → logprob: -2.547565460205078
    4. ' abs' → logprob: -3.047565460205078
    5. ' seulement' → logprob: -3.172565460205078
    6. 'à' → logprob: -3.172565460205078
    7. 'que' → logprob: -3.297565460205078
    8. ' uniquement' → logprob: -3.422565460205078
    9. '```' → logprob: -4.172565460205078
    10. ' à' → logprob: -4.172565460205078

Token 199: ' si' (ID: 1784)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.49891841411590576
    2. ' que' → logprob: -1.1239184141159058
    3. ' ' → logprob: -4.373918533325195
    4. '   ' → logprob: -4.373918533325195
    5. ' si' → logprob: -4.873918533325195
    6. 'if' → logprob: -4.998918533325195
    7. 'abs' → logprob: -5.248918533325195
    8. 'si' → logprob: -5.498918533325195
    9. 'qu' → logprob: -5.998918533325195
    10. ')' → logprob: -6.248918533325195

Token 200: ':
' (ID: 734)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.011651990003883839
    2. 'abs' → logprob: -4.761651992797852
    3. ' ' → logprob: -6.011651992797852
    4. '(abs' → logprob: -8.636651992797852
    5. ' ' → logprob: -8.886651992797852
    6. '   ' → logprob: -9.136651992797852
    7. ' (' → logprob: -10.011651992797852
    8. '  ' → logprob: -10.761651992797852
    9. '    ' → logprob: -10.761651992797852
    10. ' j' → logprob: -11.136651992797852

Token 201: '   ' (ID: 271)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.4336850047111511
    2. '   ' → logprob: -1.558685064315796
    3. ' (' → logprob: -2.933685064315796
    4. 'abs' → logprob: -3.308685064315796
    5. ' j' → logprob: -4.058684825897217
    6. '    ' → logprob: -4.183684825897217
    7. '```' → logprob: -5.433684825897217
    8. '(abs' → logprob: -5.433684825897217
    9. ' ' → logprob: -5.683684825897217
    10. ' ' → logprob: -6.433684825897217

Token 202: ' #' (ID: 1069)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.11707848310470581
    2. ' j' → logprob: -2.8670785427093506
    3. ' (' → logprob: -3.7420785427093506
    4. ' ' → logprob: -4.7420783042907715
    5. 'abs' → logprob: -4.7420783042907715
    6. ' d' → logprob: -5.7420783042907715
    7. ' i' → logprob: -5.7420783042907715
    8. '(abs' → logprob: -6.6170783042907715
    9. '   ' → logprob: -6.7420783042907715
    10. ' ' → logprob: -6.9920783042907715

Token 203: ' -' (ID: 533)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.018839921802282333
    2. 'abs' → logprob: -4.2688398361206055
    3. ' (' → logprob: -6.6438398361206055
    4. ' min' → logprob: -6.7688398361206055
    5. ' ' → logprob: -7.2688398361206055
    6. '(abs' → logprob: -7.3938398361206055
    7. ' ' → logprob: -8.393839836120605
    8. '   ' → logprob: -8.518839836120605
    9. '10' → logprob: -9.143839836120605
    10. ' d' → logprob: -9.268839836120605

Token 204: ' La' (ID: 3038)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.034153200685977936
    2. 'abs' → logprob: -3.5341532230377197
    3. ' j' → logprob: -6.784152984619141
    4. ' (' → logprob: -7.159152984619141
    5. ' ' → logprob: -7.409152984619141
    6. ' d' → logprob: -7.659152984619141
    7. ' i' → logprob: -8.03415298461914
    8. '(abs' → logprob: -8.15915298461914
    9. ' ' → logprob: -8.40915298461914
    10. ' min' → logprob: -8.53415298461914

Token 205: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6520692706108093
    2. ' abs' → logprob: -1.027069330215454
    3. 'distance' → logprob: -3.152069330215454
    4. ' distance' → logprob: -3.402069330215454
    5. ' ' → logprob: -4.152069091796875
    6. ' min' → logprob: -4.527069091796875
    7. ' ' → logprob: -6.027069091796875
    8. ' d' → logprob: -6.027069091796875
    9. 'd' → logprob: -6.152069091796875
    10. 'min' → logprob: -6.277069091796875

Token 206: ' horizont' (ID: 69308)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.4789844751358032
    2. ' between' → logprob: -1.6039844751358032
    3. ' abs' → logprob: -2.8539843559265137
    4. 'entre' → logprob: -3.1039843559265137
    5. 'abs' → logprob: -3.7289843559265137
    6. ' absol' → logprob: -4.728984355926514
    7. 'between' → logprob: -4.853984355926514
    8. ' <=' → logprob: -5.103984355926514
    9. '<=' → logprob: -5.728984355926514
    10. ' (' → logprob: -5.728984355926514

Token 207: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.12991869449615479
    2. '   ' → logprob: -3.2549185752868652
    3. 'aire' → logprob: -3.6299185752868652
    4. 'e' → logprob: -3.6299185752868652
    5. 'ion' → logprob: -4.254918575286865
    6. ' ' → logprob: -5.379918575286865
    7. 'ière' → logprob: -6.254918575286865
    8. 'é' → logprob: -6.754918575286865
    9. '       ' → logprob: -7.004918575286865
    10. 'al' → logprob: -7.004918575286865

Token 208: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.38211554288864136
    2. ' <=' → logprob: -1.8821156024932861
    3. ' between' → logprob: -2.507115602493286
    4. ' ' → logprob: -3.632115602493286
    5. ' (' → logprob: -4.007115364074707
    6. '<=' → logprob: -4.507115364074707
    7. '*' → logprob: -4.882115364074707
    8. 'entre' → logprob: -5.382115364074707
    9. '   ' → logprob: -6.132115364074707
    10. '(j' → logprob: -6.257115364074707

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7048413157463074
    2. 'les' → logprob: -1.3298413753509521
    3. ' i' → logprob: -2.204841375350952
    4. ' les' → logprob: -2.829841375350952
    5. ' eux' → logprob: -3.829841375350952
    6. 'le' → logprob: -4.204841136932373
    7. 'j' → logprob: -4.579841136932373
    8. ' trampoline' → logprob: -5.204841136932373
    9. ' deux' → logprob: -5.579841136932373
    10. 'eux' → logprob: -5.704841136932373

Token 210: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.09202834963798523
    2. ' ' → logprob: -3.3420283794403076
    3. 'et' → logprob: -3.4670283794403076
    4. '   ' → logprob: -4.7170281410217285
    5. '*' → logprob: -5.9670281410217285
    6. ' and' → logprob: -6.4670281410217285
    7. ' *' → logprob: -6.5920281410217285
    8. '  ' → logprob: -6.7170281410217285
    9. ',' → logprob: -6.8420281410217285
    10. ' j' → logprob: -6.9670281410217285

Token 211: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11291015148162842
    2. 'j' → logprob: -2.237910270690918
    3. ' i' → logprob: -9.987910270690918
    4. ' ' → logprob: -10.737910270690918
    5. 'i' → logprob: -11.737910270690918
    6. ' les' → logprob: -12.737910270690918
    7. 'les' → logprob: -13.737910270690918
    8. '	j' → logprob: -13.737910270690918
    9. ' la' → logprob: -13.862910270690918
    10. '   ' → logprob: -13.862910270690918

Token 212: ' est' (ID: 893)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0582547187805176
    2. ' <=' → logprob: -1.5582547187805176
    3. ')*' → logprob: -1.8082547187805176
    4. ')' → logprob: -2.1832547187805176
    5. ' *' → logprob: -2.8082547187805176
    6. '<=' → logprob: -3.5582547187805176
    7. ')<=' → logprob: -3.5582547187805176
    8. ' est' → logprob: -4.183254718780518
    9. '   ' → logprob: -4.433254718780518
    10. ' )' → logprob: -5.558254718780518

Token 213: ' (' (ID: 350)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1864323914051056
    2. '<=' → logprob: -2.436432361602783
    3. ' j' → logprob: -3.311432361602783
    4. ' ' → logprob: -3.936432361602783
    5. '10' → logprob: -4.811432361602783
    6. ' inf' → logprob: -5.186432361602783
    7. ' (' → logprob: -5.811432361602783
    8. 'inf' → logprob: -5.811432361602783
    9. '(j' → logprob: -6.311432361602783
    10. 'j' → logprob: -6.936432361602783

Token 214: '|' (ID: 91)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5346108675003052
    2. 'j' → logprob: -1.4096108675003052
    3. ' abs' → logprob: -2.5346107482910156
    4. '(j' → logprob: -3.6596107482910156
    5. ' j' → logprob: -3.7846107482910156
    6. ' (' → logprob: -3.9096107482910156
    7. '10' → logprob: -4.659610748291016
    8. '(abs' → logprob: -5.409610748291016
    9. '   ' → logprob: -5.659610748291016
    10. ' ' → logprob: -6.034610748291016

Token 215: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011023490224033594
    2. ' j' → logprob: -6.876102447509766
    3. 'i' → logprob: -9.626102447509766
    4. ' i' → logprob: -14.126102447509766
    5. '   ' → logprob: -14.251102447509766
    6. '	j' → logprob: -14.376102447509766
    7. '(j' → logprob: -14.501102447509766
    8. ' ' → logprob: -15.251102447509766
    9. '```' → logprob: -15.626102447509766
    10. ' ' → logprob: -15.938602447509766

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004578580614179373
    2. '-' → logprob: -5.504578590393066
    3. '-i' → logprob: -7.629578590393066
    4. '|' → logprob: -11.629578590393066
    5. '-j' → logprob: -13.004578590393066
    6. ' ' → logprob: -13.254578590393066
    7. ' ' → logprob: -14.254578590393066
    8. '   ' → logprob: -15.629578590393066
    9. '	' → logprob: -16.25457763671875
    10. ')' → logprob: -16.75457763671875

Token 217: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11288896203041077
    2. 'i' → logprob: -2.237889051437378
    3. '|' → logprob: -10.237889289855957
    4. ' ' → logprob: -11.112889289855957
    5. ' |' → logprob: -12.362889289855957
    6. ' ' → logprob: -12.862889289855957
    7. ' j' → logprob: -13.112889289855957
    8. ' abs' → logprob: -13.487889289855957
    9. ')' → logprob: -13.737889289855957
    10. '	i' → logprob: -13.987889289855957

Token 218: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00012166214582975954
    2. ')|' → logprob: -9.2501220703125
    3. ' |' → logprob: -11.3751220703125
    4. ')' → logprob: -11.6251220703125
    5. ')*' → logprob: -12.7501220703125
    6. '|\' → logprob: -14.5001220703125
    7. '   ' → logprob: -14.7501220703125
    8. '*' → logprob: -14.7501220703125
    9. ']|' → logprob: -15.6251220703125
    10. ' ' → logprob: -16.0001220703125

Token 219: ' *' (ID: 425)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.015762288123369217
    2. ')' → logprob: -4.5157623291015625
    3. '*' → logprob: -6.0157623291015625
    4. ')*' → logprob: -6.2657623291015625
    5. ')|' → logprob: -9.140762329101562
    6. ' *' → logprob: -9.390762329101562
    7. ' |' → logprob: -9.640762329101562
    8. '*)' → logprob: -9.765762329101562
    9. '   ' → logprob: -10.765762329101562
    10. ' )' → logprob: -11.765762329101562

Token 220: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.348469078540802
    2. ' ' → logprob: -1.2234690189361572
    3. ' ' → logprob: -11.473468780517578
    4. ')' → logprob: -11.598468780517578
    5. '```' → logprob: -12.848468780517578
    6. '   ' → logprob: -14.098468780517578
    7. '1' → logprob: -15.410968780517578
    8. '  ' → logprob: -15.785968780517578
    9. ' dix' → logprob: -15.973468780517578
    10. '	' → logprob: -16.160968780517578

Token 221: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. '```' → logprob: -14.376171112060547
    4. ')' → logprob: -16.376171112060547
    5. ' ' → logprob: -17.001171112060547
    6. '   ' → logprob: -17.251171112060547
    7. '1' → logprob: -17.626171112060547
    8. '`' → logprob: -18.751171112060547
    9. '  ' → logprob: -18.813671112060547
    10. '``' → logprob: -19.251171112060547

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006463001482188702
    2. ' )' → logprob: -5.131463050842285
    3. ')<=' → logprob: -7.756463050842285
    4. ' <=' → logprob: -9.881463050842285
    5. ' ' → logprob: -11.256463050842285
    6. '<=' → logprob: -11.256463050842285
    7. '   ' → logprob: -11.381463050842285
    8. ' ' → logprob: -12.256463050842285
    9. '),' → logprob: -13.006463050842285
    10. '')' → logprob: -13.381463050842285

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7661756277084351
    2. ')' → logprob: -1.391175627708435
    3. '<|end|>' → logprob: -2.1411757469177246
    4. ',' → logprob: -2.5161757469177246
    5. ' <=' → logprob: -3.8911757469177246
    6. ' et' → logprob: -4.266175746917725
    7. ' )' → logprob: -4.391175746917725
    8. ' ' → logprob: -5.266175746917725
    9. '  ' → logprob: -5.266175746917725
    10. ' and' → logprob: -5.391175746917725

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7540132999420166
    2. '#' (adapté à ' #') → logprob: -0.8790132999420166
    3. ' <=' → logprob: -2.8790132999420166
    4. ' #' → logprob: -3.1290132999420166
    5. ',' → logprob: -5.0040130615234375
    6. '<=' → logprob: -5.6290130615234375
    7. ' et' → logprob: -6.6290130615234375
    8. ')' → logprob: -7.0040130615234375
    9. '.' → logprob: -8.379013061523438
    10. '\' → logprob: -8.504013061523438

Token 225: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.017443208023905754
    2. '<=' → logprob: -4.5174431800842285
    3. '   ' → logprob: -5.5174431800842285
    4. ' ' → logprob: -7.1424431800842285
    5. '  ' → logprob: -8.142443656921387
    6. ' et' → logprob: -8.267443656921387
    7. '    ' → logprob: -8.767443656921387
    8. ')' → logprob: -8.892443656921387
    9. ',' → logprob: -8.892443656921387
    10. ' and' → logprob: -9.017443656921387

Token 226: ' Cette' (ID: 27383)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6771442294120789
    2. ' abs' → logprob: -1.4271442890167236
    3. 'min' → logprob: -1.9271442890167236
    4. ' (' → logprob: -3.0521442890167236
    5. 'abs' → logprob: -3.8021442890167236
    6. '(min' → logprob: -4.0521440505981445
    7. ' la' → logprob: -5.1771440505981445
    8. ' |' → logprob: -6.0521440505981445
    9. '(abs' → logprob: -6.0521440505981445
    10. ' ' → logprob: -6.0521440505981445

Token 227: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3177304267883301
    2. ' distance' → logprob: -1.31773042678833
    3. 'istance' → logprob: -5.81773042678833
    4. ' ' → logprob: -8.442729949951172
    5. '10' → logprob: -8.817729949951172
    6. '_distance' → logprob: -8.817729949951172
    7. ' distancia' → logprob: -9.067729949951172
    8. ' distância' → logprob: -9.317729949951172
    9. ' ' → logprob: -9.692729949951172
    10. 'abs' → logprob: -9.817729949951172

Token 228: ' doit' (ID: 21822)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.033262599259614944
    2. '<=' → logprob: -3.5332624912261963
    3. '<|end|>' → logprob: -7.283262729644775
    4. ')<=' → logprob: -7.533262729644775
    5. ' ' → logprob: -7.658262729644775
    6. ')' → logprob: -7.783262729644775
    7. ' ' → logprob: -7.783262729644775
    8. ' is' → logprob: -8.408262252807617
    9. ' ≤' → logprob: -8.658262252807617
    10. ' est' → logprob: -8.908262252807617

Token 229: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.645086407661438
    2. 'être' → logprob: -1.770086407661438
    3. '<=' → logprob: -2.0200862884521484
    4. ' <=' → logprob: -2.5200862884521484
    5. '<|end|>' → logprob: -3.0200862884521484
    6. ' be' → logprob: -3.5200862884521484
    7. ' etre' → logprob: -5.520086288452148
    8. ' ' → logprob: -6.395086288452148
    9. ' ' → logprob: -6.645086288452148
    10. 's' → logprob: -6.770086288452148

Token 230: ' <=' (ID: 5017)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.7687810063362122
    2. '<=' → logprob: -1.1437809467315674
    3. ' <=' → logprob: -1.6437809467315674
    4. ' inf' → logprob: -3.7687809467315674
    5. 'infer' → logprob: -7.6437811851501465
    6. ' inférieur' → logprob: -8.268780708312988
    7. '```' → logprob: -8.643780708312988
    8. 'moins' → logprob: -9.018780708312988
    9. '<' → logprob: -9.268780708312988
    10. '≤' → logprob: -9.518780708312988

Token 231: ' à' (ID: 1221)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.34848490357398987
    2. 'min' → logprob: -1.2234848737716675
    3. '   ' → logprob: -11.223484992980957
    4. ' ' → logprob: -12.098484992980957
    5. ' minimum' → logprob: -12.098484992980957
    6. '	min' → logprob: -12.598484992980957
    7. ' ' → logprob: -12.598484992980957
    8. '(min' → logprob: -13.473484992980957
    9. 'minimum' → logprob: -13.598484992980957
    10. ' d' → logprob: -13.598484992980957

Token 232: ' la' (ID: 557)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.47415590286254883
    2. 'min' → logprob: -0.9741559028625488
    3. ' la' → logprob: -10.97415542602539
    4. ' ' → logprob: -11.22415542602539
    5. ' ' → logprob: -11.97415542602539
    6. '	min' → logprob: -11.97415542602539
    7. ' minimum' → logprob: -12.09915542602539
    8. ' d' → logprob: -12.22415542602539
    9. '   ' → logprob: -12.34915542602539
    10. 'd' → logprob: -12.47415542602539

Token 233: ' portée' (ID: 106795)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07016228139400482
    2. 'min' → logprob: -2.695162296295166
    3. ' minimum' → logprob: -9.195161819458008
    4. ' d' → logprob: -9.445161819458008
    5. 'd' → logprob: -11.070161819458008
    6. ' ' → logprob: -12.070161819458008
    7. 'minimum' → logprob: -12.195161819458008
    8. ' max' → logprob: -12.695161819458008
    9. '	min' → logprob: -12.820161819458008
    10. ' ' → logprob: -13.070161819458008

Token 234: ' maximale' (ID: 76380)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7559861540794373
    2. ' d' → logprob: -1.880986213684082
    3. 'de' → logprob: -2.755986213684082
    4. 'min' → logprob: -2.755986213684082
    5. ' min' → logprob: -3.630986213684082
    6. ' du' → logprob: -3.630986213684082
    7. 'd' → logprob: -3.630986213684082
    8. '   ' → logprob: -3.755986213684082
    9. '[min' → logprob: -3.755986213684082
    10. ' ' → logprob: -3.880986213684082

Token 235: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17762233316898346
    2. ' d' → logprob: -2.9276223182678223
    3. ' du' → logprob: -3.5526223182678223
    4. ' des' → logprob: -3.9276223182678223
    5. 'de' → logprob: -4.302622318267822
    6. ' ' → logprob: -4.427622318267822
    7. 'd' → logprob: -5.052622318267822
    8. '   ' → logprob: -5.177622318267822
    9. 'min' → logprob: -5.177622318267822
    10. ' (' → logprob: -5.552622318267822

Token 236: ' deux' (ID: 10301)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1739245355129242
    2. 'd' → logprob: -1.9239245653152466
    3. ' i' → logprob: -5.298924446105957
    4. ' deux' → logprob: -6.298924446105957
    5. ' la' → logprob: -6.423924446105957
    6. ' ' → logprob: -6.548924446105957
    7. 'i' → logprob: -7.548924446105957
    8. ' both' → logprob: -7.798924446105957
    9. ' tramp' → logprob: -7.923924446105957
    10. ' l' → logprob: -8.048924446105957

Token 237: ' tramp' (ID: 94418)
  Prédit: ' tramp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tramp' → logprob: -0.005881391000002623
    2. ' trampoline' → logprob: -5.880881309509277
    3. 'tr' → logprob: -6.255881309509277
    4. 's' → logprob: -8.630881309509277
    5. ')' → logprob: -8.880881309509277
    6. '[' → logprob: -8.880881309509277
    7. ']' → logprob: -9.255881309509277
    8. ' indices' → logprob: -9.380881309509277
    9. ' tr' → logprob: -9.380881309509277
    10. '_tr' → logprob: -10.005881309509277

Token 238: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.15217891335487366
    2. '[i' → logprob: -2.152179002761841
    3. '   ' → logprob: -4.152178764343262
    4. ' ' → logprob: -5.152178764343262
    5. '[' → logprob: -6.652178764343262
    6. '    ' → logprob: -8.152178764343262
    7. 'o' → logprob: -8.277178764343262
    8. 'i' → logprob: -8.527178764343262
    9. '     ' → logprob: -8.527178764343262
    10. '[j' → logprob: -8.777178764343262

Token 239: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.0004610551695805043
    2. 'in' → logprob: -8.250460624694824
    3. '   ' → logprob: -10.000460624694824
    4. 'es' → logprob: -10.125460624694824
    5. 'ins' → logprob: -10.375460624694824
    6. 'ine' → logprob: -10.750460624694824
    7. '#' → logprob: -11.250460624694824
    8. 'i' → logprob: -11.625460624694824
    9. 's' → logprob: -12.250460624694824
    10. 'INES' → logprob: -12.250460624694824

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13679875433444977
    2. ')' → logprob: -2.761798858642578
    3. '.' → logprob: -3.761798858642578
    4. ',' → logprob: -3.761798858642578
    5. 'def' → logprob: -5.511798858642578
    6. '\n' → logprob: -5.511798858642578
    7. '    
' → logprob: -5.636798858642578
    8. '<|end|>' → logprob: -6.386798858642578
    9. '...' → logprob: -7.886798858642578
    10. '```' → logprob: -7.886798858642578

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04131253808736801
    2. ',' → logprob: -4.2913126945495605
    3. ' (' → logprob: -4.6663126945495605
    4. '.' → logprob: -5.4163126945495605
    5. ')' → logprob: -5.5413126945495605
    6. '#' → logprob: -6.7913126945495605
    7. ' ' → logprob: -6.7913126945495605
    8. '  ' → logprob: -7.1663126945495605
    9. 'def' → logprob: -7.2913126945495605
    10. '\' → logprob: -7.2913126945495605

Token 242: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05766404792666435
    2. ')' → logprob: -3.682664155960083
    3. '.' → logprob: -4.432663917541504
    4. ',' → logprob: -4.557663917541504
    5. 'def' → logprob: -6.182663917541504
    6. '\n' → logprob: -6.682663917541504
    7. ':' → logprob: -6.932663917541504
    8. ' ' → logprob: -7.432663917541504
    9. '    
' → logprob: -7.807663917541504
    10. ' (' → logprob: -8.057663917541504

Token 243: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23737111687660217
    2. 'def' → logprob: -2.6123712062835693
    3. '\n' → logprob: -2.9873712062835693
    4. ')' → logprob: -3.6123712062835693
    5. ' ' → logprob: -4.61237096786499
    6. ',' → logprob: -4.73737096786499
    7. '    
' → logprob: -5.11237096786499
    8. '\' → logprob: -5.23737096786499
    9. '.' → logprob: -5.36237096786499
    10. '  
' → logprob: -5.73737096786499

Token 244: ' puisque' (ID: 66135)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9734559655189514
    2. '   ' → logprob: -1.9734559059143066
    3. ' )' → logprob: -1.9734559059143066
    4. '[i' → logprob: -2.8484559059143066
    5. ',' → logprob: -3.0984559059143066
    6. '.' → logprob: -3.2234559059143066
    7. ' (' → logprob: -3.4734559059143066
    8. ' ' → logprob: -3.5984559059143066
    9. ' ,' → logprob: -3.5984559059143066
    10. ' d' → logprob: -3.9734559059143066

Token 245: ' il' (ID: 1793)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9137455821037292
    2. 'min' → logprob: -1.288745641708374
    3. ' le' → logprob: -1.538745641708374
    4. 'le' → logprob: -2.663745641708374
    5. ' la' → logprob: -4.038745403289795
    6. ' l' → logprob: -5.663745403289795
    7. ' on' → logprob: -5.913745403289795
    8. ' the' → logprob: -5.913745403289795
    9. ' c' → logprob: -6.038745403289795
    10. 'd' → logprob: -6.413745403289795

Token 246: ' ne' (ID: 453)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.7969402074813843
    2. ' doit' → logprob: -0.9219402074813843
    3. 's' → logprob: -2.171940326690674
    4. ' peut' → logprob: -4.546940326690674
    5. ' must' → logprob: -4.921940326690674
    6. ' s' → logprob: -5.546940326690674
    7. ''s' → logprob: -6.796940326690674
    8. ' est' → logprob: -6.796940326690674
    9. ' faudrait' → logprob: -7.171940326690674
    10. ' can' → logprob: -7.296940326690674

Token 247: ' faut' (ID: 17821)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.5005698204040527
    2. 'pe' → logprob: -1.3755698204040527
    3. ' faut' → logprob: -2.5005698204040527
    4. 'f' → logprob: -3.8755698204040527
    5. ' doit' → logprob: -4.000569820404053
    6. 's' → logprob: -4.500569820404053
    7. ' peux' → logprob: -6.750569820404053
    8. ' faudrait' → logprob: -7.250569820404053
    9. 'do' → logprob: -7.375569820404053
    10. ' suffit' → logprob: -7.625569820404053

Token 248: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.31393611431121826
    2. 'pas' → logprob: -1.3139361143112183
    3. 's' → logprob: -8.813936233520508
    4. ' que' → logprob: -8.938936233520508
    5. ' ' → logprob: -9.813936233520508
    6. 't' → logprob: -9.813936233520508
    7. ' jamais' → logprob: -10.188936233520508
    8. '   ' → logprob: -10.188936233520508
    9. ' plus' → logprob: -10.563936233520508
    10. ' surtout' → logprob: -10.813936233520508

Token 249: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.8962722420692444
    2. ' dépasser' → logprob: -1.1462721824645996
    3. ' que' → logprob: -1.7712721824645996
    4. 'd' → logprob: -3.8962721824645996
    5. 'dé' → logprob: -4.3962721824646
    6. ' oublier' → logprob: -4.6462721824646
    7. 'de' → logprob: -5.0212721824646
    8. 's' → logprob: -5.2712721824646
    9. ' d' → logprob: -5.3962721824646
    10. ' perdre' → logprob: -5.5212721824646

Token 250: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.740938663482666
    2. ' l' → logprob: -1.490938663482666
    3. ' le' → logprob: -2.490938663482666
    4. 'l' → logprob: -2.615938663482666
    5. 'le' → logprob: -2.865938663482666
    6. 'la' → logprob: -3.365938663482666
    7. ' cette' → logprob: -4.615938663482666
    8. 'min' → logprob: -4.865938663482666
    9. ' d' → logprob: -5.490938663482666
    10. ' jumper' → logprob: -5.865938663482666

Token 251: ' saut' (ID: 111480)
  Prédit: ' jumper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jumper' → logprob: -0.036303769797086716
    2. 's' → logprob: -4.536303997039795
    3. ' saut' → logprob: -5.286303997039795
    4. 'jum' → logprob: -5.286303997039795
    5. ' code' → logprob: -5.661303997039795
    6. ' sa' → logprob: -6.786303997039795
    7. 'distance' → logprob: -6.786303997039795
    8. ' distance' → logprob: -6.911303997039795
    9. 'sa' → logprob: -6.911303997039795
    10. 'tr' → logprob: -6.911303997039795

Token 252: ' dépasse' (ID: 165701)
  Prédit: ' dépasse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -0.10515391081571579
    2. ' soit' → logprob: -2.480153799057007
    3. ' dépass' → logprob: -4.980154037475586
    4. ' puisse' → logprob: -5.730154037475586
    5. 'so' → logprob: -6.480154037475586
    6. 'd' → logprob: -7.105154037475586
    7. ' ' → logprob: -7.105154037475586
    8. ' exceed' → logprob: -7.480154037475586
    9. ' so' → logprob: -7.730154037475586
    10. ' dépasser' → logprob: -8.230154037475586

Token 253: ' la' (ID: 557)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3482908010482788
    2. ' la' → logprob: -1.8482908010482788
    3. 'min' → logprob: -2.7232909202575684
    4. ' d' → logprob: -3.2232909202575684
    5. ' les' → logprob: -4.848290920257568
    6. ' l' → logprob: -5.223290920257568
    7. 'd' → logprob: -5.598290920257568
    8. 'la' → logprob: -5.848290920257568
    9. ' le' → logprob: -6.223290920257568
    10. ' ni' → logprob: -6.598290920257568

Token 254: ' portée' (ID: 106795)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.23195041716098785
    2. 'min' → logprob: -1.8569504022598267
    3. ' minimum' → logprob: -3.606950521469116
    4. ' plus' → logprob: -4.981950283050537
    5. ' d' → logprob: -5.106950283050537
    6. 'minimum' → logprob: -5.481950283050537
    7. ' minimal' → logprob: -6.856950283050537
    8. 'd' → logprob: -7.231950283050537
    9. ' ' → logprob: -7.356950283050537
    10. ' distance' → logprob: -7.606950283050537

Token 255: ' de' (ID: 334)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -1.1130584478378296
    2. ' des' → logprob: -1.3630584478378296
    3. 'max' → logprob: -1.4880584478378296
    4. ' de' → logprob: -2.988058567047119
    5. 'de' → logprob: -3.738058567047119
    6. ' du' → logprob: -3.738058567047119
    7. 'des' → logprob: -3.863058567047119
    8. 'min' → logprob: -4.113058567047119
    9. '   ' → logprob: -4.363058567047119
    10. ' minimale' → logprob: -4.488058567047119

Token 256: ' départ' (ID: 32693)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4096035659313202
    2. 'l' → logprob: -1.2846035957336426
    3. 'ch' → logprob: -3.2846035957336426
    4. 'd' → logprob: -4.659603595733643
    5. ' chacun' → logprob: -5.409603595733643
    6. ' d' → logprob: -5.659603595733643
    7. 'cha' → logprob: -6.534603595733643
    8. 'min' → logprob: -6.784603595733643
    9. ' ' → logprob: -7.659603595733643
    10. ' min' → logprob: -7.784603595733643

Token 257: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.7363870143890381
    2. '   ' → logprob: -1.111387014389038
    3. ',' → logprob: -2.486387014389038
    4. ' ou' → logprob: -2.861387014389038
    5. ' et' → logprob: -3.736387014389038
    6. 'et' → logprob: -4.611387252807617
    7. ')' → logprob: -5.111387252807617
    8. ' or' → logprob: -5.861387252807617
    9. 'ou' → logprob: -5.986387252807617
    10. ' ' → logprob: -6.361387252807617

Token 258: ' d' (ID: 272)
  Prédit: ' celle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' celle' → logprob: -0.17481914162635803
    2. 'celle' → logprob: -2.549819231033325
    3. ' de' → logprob: -3.299819231033325
    4. ' la' → logprob: -3.799819231033325
    5. 'de' → logprob: -4.424818992614746
    6. 'la' → logprob: -5.424818992614746
    7. ' ' → logprob: -6.549818992614746
    8. ' du' → logprob: -6.549818992614746
    9. 'd' → logprob: -6.799818992614746
    10. ' celui' → logprob: -7.674818992614746

Token 259: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.02808467485010624
    2. ''arr' → logprob: -4.153084754943848
    3. ''arrive' → logprob: -5.153084754943848
    4. 'arr' → logprob: -5.903084754943848
    5. 'e' → logprob: -6.028084754943848
    6. 'u' → logprob: -7.528084754943848
    7. '’arrivée' → logprob: -9.028084754943848
    8. ''accueil' → logprob: -9.528084754943848
    9. ''' → logprob: -9.528084754943848
    10. ' arrivée' → logprob: -9.653084754943848

Token 260: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21030749380588531
    2. ')' → logprob: -2.3353075981140137
    3. '.' → logprob: -3.0853075981140137
    4. ',' → logprob: -3.3353075981140137
    5. 'def' → logprob: -6.210307598114014
    6. '\n' → logprob: -6.335307598114014
    7. '    
' → logprob: -6.335307598114014
    8. '#' → logprob: -6.460307598114014
    9. '<|end|>' → logprob: -6.835307598114014
    10. '...' → logprob: -7.835307598114014

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04140609875321388
    2. '    
' → logprob: -3.7914061546325684
    3. '<|end|>' → logprob: -5.416406154632568
    4. 'def' → logprob: -5.541406154632568
    5. ')' → logprob: -5.541406154632568
    6. '\n' → logprob: -6.416406154632568
    7. '  
' → logprob: -6.916406154632568
    8. '\' → logprob: -7.541406154632568
    9. ' 
' → logprob: -7.541406154632568
    10. '    ' → logprob: -8.04140567779541

Token 262: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10109542310237885
    2. '    
' → logprob: -2.72609543800354
    3. ' 
' → logprob: -4.726095199584961
    4. '\n' → logprob: -5.351095199584961
    5. ')' → logprob: -5.476095199584961
    6. '  
' → logprob: -5.976095199584961
    7. '
' → logprob: -6.101095199584961
    8. 'def' → logprob: -6.226095199584961
    9. '\' → logprob: -6.476095199584961
    10. '   
' → logprob: -6.851095199584961

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3523285686969757
    2. '    
' → logprob: -1.2273285388946533
    3. '
' → logprob: -6.852328777313232
    4. 'def' → logprob: -6.977328777313232
    5. '    
    
' → logprob: -7.102328777313232
    6. '    ' → logprob: -8.102328300476074
    7. '        
' → logprob: -9.102328300476074
    8. ' 
' → logprob: -9.102328300476074
    9. '\n' → logprob: -9.477328300476074
    10. '    

' → logprob: -9.852328300476074

Token 264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2194947898387909
    2. '    
' → logprob: -1.7194948196411133
    3. 'def' → logprob: -4.719494819641113
    4. '
' → logprob: -5.219494819641113
    5. '#' (adapté à ' #') → logprob: -7.094494819641113
    6. '    ' → logprob: -7.219494819641113
    7. '    
    
' → logprob: -7.594494819641113
    8. ' 
' → logprob: -8.219494819641113
    9. '        
' → logprob: -8.344494819641113
    10. '   
' → logprob: -8.844494819641113

Token 265: ' Pro' (ID: 1258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.534206211566925
    2. 'def' → logprob: -2.0342061519622803
    3. '#' → logprob: -2.1592061519622803
    4. 'max' → logprob: -3.5342061519622803
    5. 'distance' → logprob: -3.6592061519622803
    6. ' max' → logprob: -4.159206390380859
    7. 'from' → logprob: -4.159206390380859
    8. ' #' → logprob: -4.284206390380859
    9. 'n' → logprob: -4.534206390380859
    10. ' def' → logprob: -4.784206390380859

Token 266: 'bl' (ID: 1751)
  Prédit: 'gram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gram' → logprob: -0.5466449856758118
    2. 'bl' → logprob: -1.546644926071167
    3. 'cess' → logprob: -2.796644926071167
    4. 'blem' → logprob: -3.046644926071167
    5. 'def' → logprob: -3.671644926071167
    6. '#' → logprob: -4.546645164489746
    7. '
' → logprob: -5.046645164489746
    8. 'm' → logprob: -5.046645164489746
    9. 'c' → logprob: -5.296645164489746
    10. 'ble' → logprob: -5.296645164489746

Token 267: 'ème' (ID: 9767)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.020566415041685104
    2. 'blem' → logprob: -4.020566463470459
    3. 'ble' → logprob: -6.395566463470459
    4. 'gram' → logprob: -8.6455659866333
    5. 'b' → logprob: -8.8955659866333
    6. 'm' → logprob: -9.2705659866333
    7. 'cess' → logprob: -9.5205659866333
    8. '#' → logprob: -9.6455659866333
    9. ' bl' → logprob: -9.6455659866333
    10. '
' → logprob: -11.3955659866333

Token 268: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4145244061946869
    2. '   ' → logprob: -2.7895243167877197
    3. ',' → logprob: -3.0395243167877197
    4. '#' → logprob: -3.0395243167877197
    5. ' =' → logprob: -3.0395243167877197
    6. '=' → logprob: -3.4145243167877197
    7. ' :' → logprob: -4.039524555206299
    8. 'def' → logprob: -4.039524555206299
    9. '.' → logprob: -4.289524555206299
    10. ' de' → logprob: -4.539524555206299

Token 269: ' déterminer' (ID: 122024)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0858522653579712
    2. '   ' → logprob: -1.3358522653579712
    3. 'def' → logprob: -1.4608522653579712
    4. ' #' → logprob: -2.9608521461486816
    5. ' from' → logprob: -3.5858521461486816
    6. '#' → logprob: -3.8358521461486816
    7. 'from' → logprob: -4.210852146148682
    8. ' n' → logprob: -4.710852146148682
    9. ' N' → logprob: -5.210852146148682
    10. ' import' → logprob: -5.460852146148682

Token 270: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.0325150191783905
    2. 'si' → logprob: -3.782515048980713
    3. ' if' → logprob: -5.157515048980713
    4. ' s' → logprob: -6.157515048980713
    5. 'if' → logprob: -7.282515048980713
    6. 's' → logprob: -8.032514572143555
    7. '   ' → logprob: -9.032514572143555
    8. ' la' → logprob: -9.157514572143555
    9. '```' → logprob: -10.657514572143555
    10. ' ' → logprob: -10.782514572143555

Token 271: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.18924152851104736
    2. ' il' → logprob: -2.814241409301758
    3. 'i' → logprob: -3.064241409301758
    4. 'u' → logprob: -3.064241409301758
    5. 'il' → logprob: -5.314241409301758
    6. '   ' → logprob: -5.564241409301758
    7. ''' → logprob: -6.064241409301758
    8. ' la' → logprob: -6.439241409301758
    9. ' le' → logprob: -6.814241409301758
    10. '’il' → logprob: -6.939241409301758

Token 272: ' existe' (ID: 19498)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5304388403892517
    2. ' peut' → logprob: -1.0304388999938965
    3. 'est' → logprob: -3.6554388999938965
    4. ' existe' → logprob: -4.9054388999938965
    5. ' ' → logprob: -5.0304388999938965
    6. ' ' → logprob: -5.6554388999938965
    7. ' possible' → logprob: -5.9054388999938965
    8. ' peux' → logprob: -6.0304388999938965
    9. '_' → logprob: -6.6554388999938965
    10. ''est' → logprob: -6.7804388999938965

Token 273: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.009565542452037334
    2. 'un' → logprob: -4.884565353393555
    3. ' une' → logprob: -6.509565353393555
    4. ' ' → logprob: -8.384565353393555
    5. 'une' → logprob: -9.384565353393555
    6. ' des' → logprob: -10.009565353393555
    7. ' #' → logprob: -11.509565353393555
    8. '#' → logprob: -11.634565353393555
    9. 's' → logprob: -11.634565353393555
    10. '   ' → logprob: -11.884565353393555

Token 274: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.4118075370788574
    2. 'che' → logprob: -1.4118075370788574
    3. ' trajet' → logprob: -3.4118075370788574
    4. ' parcours' → logprob: -4.661807537078857
    5. 'traj' → logprob: -4.661807537078857
    6. ' ' → logprob: -5.036807537078857
    7. ' moyen' → logprob: -5.286807537078857
    8. 's' → logprob: -5.786807537078857
    9. '#' → logprob: -5.911807537078857
    10. 'par' → logprob: -6.036807537078857

Token 275: ' allant' (ID: 122150)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.6208307147026062
    2. ' de' → logprob: -1.495830774307251
    3. ' allant' → logprob: -2.620830774307251
    4. ' entre' → logprob: -3.120830774307251
    5. ' du' → logprob: -3.745830774307251
    6. 'from' → logprob: -3.745830774307251
    7. ' permettant' → logprob: -4.620830535888672
    8. '#' → logprob: -4.620830535888672
    9. ' from' → logprob: -4.745830535888672
    10. ' qui' → logprob: -4.745830535888672

Token 276: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1129603385925293
    2. 'de' → logprob: -1.2379603385925293
    3. ' du' → logprob: -1.6129603385925293
    4. 'du' → logprob: -1.9879603385925293
    5. 'from' → logprob: -3.8629603385925293
    6. ' from' → logprob: -4.862960338592529
    7. '#' → logprob: -5.112960338592529
    8. ' jusqu' → logprob: -5.112960338592529
    9. ' ' → logprob: -7.362960338592529
    10. ' #' → logprob: -7.362960338592529

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3703588843345642
    2. ' ' → logprob: -1.245358943939209
    3. ' trampoline' → logprob: -4.245358943939209
    4. ' tramp' → logprob: -5.995358943939209
    5. 'tr' → logprob: -6.745358943939209
    6. 'le' → logprob: -6.995358943939209
    7. ' le' → logprob: -7.245358943939209
    8. ' la' → logprob: -7.870358943939209
    9. '1' → logprob: -7.870358943939209
    10. 'l' → logprob: -7.995358943939209

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05143742263317108
    2. ' ' → logprob: -3.0514373779296875
    3. 'tr' → logprob: -7.0514373779296875
    4. 'le' → logprob: -7.1764373779296875
    5. ' trampoline' → logprob: -7.1764373779296875
    6. ' le' → logprob: -8.551437377929688
    7. ' tramp' → logprob: -9.176437377929688
    8. 'l' → logprob: -9.926437377929688
    9. ' la' → logprob: -10.301437377929688
    10. 'la' → logprob: -10.676437377929688

Token 279: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.028769686818122864
    2. 'à' → logprob: -4.153769493103027
    3. ' jusqu' → logprob: -5.153769493103027
    4. ' ' → logprob: -5.278769493103027
    5. ' au' → logprob: -7.403769493103027
    6. ' to' → logprob: -8.028769493103027
    7. ' (' → logprob: -8.528769493103027
    8. ' a' → logprob: -8.903769493103027
    9. ' vers' → logprob: -8.903769493103027
    10. ' ' → logprob: -9.028769493103027

Token 280: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14276237785816193
    2. 'N' → logprob: -2.0177624225616455
    3. ' ' → logprob: -10.642762184143066
    4. '0' → logprob: -11.017762184143066
    5. '   ' → logprob: -11.267762184143066
    6. ' (' → logprob: -11.517762184143066
    7. '(N' → logprob: -12.142762184143066
    8. 'n' → logprob: -12.392762184143066
    9. '    ' → logprob: -12.517762184143066
    10. '	N' → logprob: -12.642762184143066

Token 281: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06670262664556503
    2. ' -' → logprob: -2.8167026042938232
    3. ')' → logprob: -6.816702842712402
    4. ',' → logprob: -6.941702842712402
    5. '+' → logprob: -7.691702842712402
    6. ' (' → logprob: -7.941702842712402
    7. ' ' → logprob: -8.066702842712402
    8. '   ' → logprob: -8.316702842712402
    9. '0' → logprob: -8.816702842712402
    10. ' and' → logprob: -8.941702842712402

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010374527191743255
    2. ' ' → logprob: -6.87603759765625
    3. '-' → logprob: -13.50103759765625
    4. '
' → logprob: -13.62603759765625
    5. ')' → logprob: -14.62603759765625
    6. '   ' → logprob: -14.87603759765625
    7. '```' → logprob: -15.12603759765625
    8. '

' → logprob: -15.37603759765625
    9. ',' → logprob: -16.06353759765625
    10. '  ' → logprob: -16.37603759765625

Token 283: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02658962458372116
    2. ',' → logprob: -4.276589393615723
    3. '    
' → logprob: -5.526589393615723
    4. 'def' → logprob: -6.026589393615723
    5. '
' → logprob: -6.276589393615723
    6. ' et' → logprob: -6.776589393615723
    7. '.' → logprob: -7.401589393615723
    8. '```' → logprob: -8.151589393615723
    9. ' en' → logprob: -8.276589393615723
    10. ' ,' → logprob: -8.526589393615723

Token 284: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.047427985817193985
    2. 'de' → logprob: -4.047428131103516
    3. ' retour' → logprob: -4.547428131103516
    4. ' puis' → logprob: -4.922428131103516
    5. ' ' → logprob: -6.047428131103516
    6. '0' → logprob: -6.922428131103516
    7. ' revenir' → logprob: -6.922428131103516
    8. ' back' → logprob: -7.297428131103516
    9. 'p' → logprob: -7.422428131103516
    10. '#' → logprob: -7.422428131103516

Token 285: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5179958343505859
    2. ' N' → logprob: -1.142995834350586
    3. '0' → logprob: -2.767995834350586
    4. ' ' → logprob: -4.017995834350586
    5. '(N' → logprob: -6.142995834350586
    6. ' (' → logprob: -6.767995834350586
    7. '```' → logprob: -7.892995834350586
    8. '1' → logprob: -8.142995834350586
    9. '10' → logprob: -9.017995834350586
    10. '(' → logprob: -9.267995834350586

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018793709576129913
    2. ' -' → logprob: -4.01879358291626
    3. ' ' → logprob: -9.018794059753418
    4. '<|end|>' → logprob: -9.643794059753418
    5. '-
' → logprob: -9.768794059753418
    6. ')' → logprob: -10.018794059753418
    7. '#' → logprob: -10.268794059753418
    8. '1' → logprob: -10.268794059753418
    9. '   ' → logprob: -10.268794059753418
    10. '```' → logprob: -10.393794059753418

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005463610286824405
    2. ' ' → logprob: -8.0005464553833
    3. '2' → logprob: -8.5005464553833
    4. '```' → logprob: -13.1255464553833
    5. '-' → logprob: -13.2505464553833
    6. 'import' → logprob: -14.3755464553833
    7. '<|end|>' → logprob: -14.7505464553833
    8. '3' → logprob: -14.7505464553833
    9. 'N' → logprob: -15.3755464553833
    10. '   ' → logprob: -15.6255464553833

Token 288: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06203310936689377
    2. 'à' → logprob: -3.437033176422119
    3. ' to' → logprob: -4.187033176422119
    4. ' jusqu' → logprob: -5.187033176422119
    5. ' ' → logprob: -6.062033176422119
    6. ' vers' → logprob: -6.187033176422119
    7. 'to' → logprob: -7.062033176422119
    8. ' a' → logprob: -7.812033176422119
    9. ' ' → logprob: -8.062032699584961
    10. ' back' → logprob: -8.562032699584961

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038045622408390045
    2. ' ' → logprob: -3.288045644760132
    3. '1' → logprob: -13.413045883178711
    4. 'N' → logprob: -14.288045883178711
    5. ' ' → logprob: -14.788045883178711
    6. ' N' → logprob: -15.100545883178711
    7. '
' → logprob: -15.413045883178711
    8. '```' → logprob: -15.600545883178711
    9. ',' → logprob: -16.03804588317871
    10. '۰' → logprob: -16.53804588317871

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -16.500179290771484
    4. '```' → logprob: -17.125179290771484
    5. '2' → logprob: -17.937679290771484
    6. '۰' → logprob: -18.250179290771484
    7. ' ' → logprob: -18.375179290771484
    8. '<|end|>' → logprob: -18.437679290771484
    9. '`' → logprob: -18.562679290771484
    10. '.' → logprob: -19.000179290771484

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0665367916226387
    2. '    
' → logprob: -3.0665369033813477
    3. '
' → logprob: -5.066536903381348
    4. 'def' → logprob: -5.816536903381348
    5. ')' → logprob: -6.191536903381348
    6. '.' → logprob: -6.316536903381348
    7. ',' → logprob: -6.566536903381348
    8. '\n' → logprob: -7.191536903381348
    9. '    ' → logprob: -7.566536903381348
    10. '    
    
' → logprob: -8.066536903381348

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13115496933460236
    2. '    
' → logprob: -2.131155014038086
    3. '
' → logprob: -6.756155014038086
    4. '    
    
' → logprob: -6.756155014038086
    5. 'def' → logprob: -7.131155014038086
    6. ',' → logprob: -8.631155014038086
    7. '    ' → logprob: -8.631155014038086
    8. ')' → logprob: -9.131155014038086
    9. '    

' → logprob: -9.256155014038086
    10. '

' → logprob: -9.506155014038086

Token 293: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17117296159267426
    2. '    
' → logprob: -2.046172857284546
    3. '.' → logprob: -4.796173095703125
    4. '
' → logprob: -5.421173095703125
    5. '    ' → logprob: -5.671173095703125
    6. 'def' → logprob: -5.671173095703125
    7. '    
    
' → logprob: -5.921173095703125
    8. ')' → logprob: -6.546173095703125
    9. ',' → logprob: -6.546173095703125
    10. '\n' → logprob: -7.171173095703125

Token 294: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15733548998832703
    2. '    
' → logprob: -2.0323355197906494
    3. '    ' → logprob: -5.28233528137207
    4. '
' → logprob: -6.15733528137207
    5. 'def' → logprob: -6.53233528137207
    6. '#' → logprob: -6.78233528137207
    7. '    
    
' → logprob: -7.03233528137207
    8. '.' → logprob: -7.28233528137207
    9. '\n' → logprob: -7.40733528137207
    10. ',' → logprob: -8.03233528137207

Token 295: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0562115907669067
    2. 'les' → logprob: -1.3062115907669067
    3. ' un' → logprob: -1.8062115907669067
    4. ' le' → logprob: -2.431211471557617
    5. 'le' → logprob: -3.181211471557617
    6. ' la' → logprob: -3.931211471557617
    7. ' ce' → logprob: -4.556211471557617
    8. 'l' → logprob: -4.681211471557617
    9. ' l' → logprob: -4.931211471557617
    10. 'un' → logprob: -5.056211471557617

Token 296: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3451777696609497
    2. 'graph' → logprob: -1.9701777696609497
    3. ' graph' → logprob: -2.22017765045166
    4. ' grap' → logprob: -3.22017765045166
    5. 'sens' → logprob: -7.09517765045166
    6. ' sens' → logprob: -7.59517765045166
    7. '_gr' → logprob: -7.59517765045166
    8. 'code' → logprob: -7.97017765045166
    9. ' code' → logprob: -8.34517765045166
    10. ' espace' → logprob: -8.84517765045166

Token 297: 'he' (ID: 273)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.06745631992816925
    2. 'h' → logprob: -3.4424562454223633
    3. 'phe' → logprob: -3.8174562454223633
    4. 'aphe' → logprob: -4.692456245422363
    5. 'p' → logprob: -7.442456245422363
    6. 'aph' → logprob: -7.567456245422363
    7. 'he' → logprob: -8.192456245422363
    8. '#' → logprob: -8.567456245422363
    9. 'phi' → logprob: -9.067456245422363
    10. '   ' → logprob: -10.067456245422363

Token 298: ' déf' (ID: 23956)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15729668736457825
    2. ',' → logprob: -2.282296657562256
    3. '
' → logprob: -4.532296657562256
    4. '    
' → logprob: -5.032296657562256
    5. '\n' → logprob: -5.157296657562256
    6. 'def' → logprob: -5.532296657562256
    7. ':' → logprob: -5.907296657562256
    8. '  
' → logprob: -5.907296657562256
    9. '\' → logprob: -6.407296657562256
    10. '#' → logprob: -6.532296657562256

Token 299: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.0014829591382294893
    2. 'init' → logprob: -6.751482963562012
    3. 'inition' → logprob: -9.126482963562012
    4. 'inis' → logprob: -9.751482963562012
    5. 'initi' → logprob: -10.251482963562012
    6. 'in' → logprob: -10.626482963562012
    7. 'inie' → logprob: -10.751482963562012
    8. 'ni' → logprob: -11.126482963562012
    9. 'inir' → logprob: -11.626482963562012
    10. 'iné' → logprob: -11.876482963562012

Token 300: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.15756911039352417
    2. ',' → logprob: -3.032569169998169
    3. 'par' → logprob: -3.157569169998169
    4. '.' → logprob: -3.157569169998169
    5. '#' → logprob: -5.40756893157959
    6. ' ' → logprob: -6.65756893157959
    7. '   ' → logprob: -6.90756893157959
    8. 'def' → logprob: -7.03256893157959
    9. ' by' → logprob: -7.03256893157959
    10. ')' → logprob: -7.15756893157959

Token 301: ' ces' (ID: 10532)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2457444667816162
    2. 'les' → logprob: -1.2457444667816162
    3. 'la' → logprob: -2.245744466781616
    4. ' la' → logprob: -2.370744466781616
    5. ' d' → logprob: -2.745744466781616
    6. ' les' → logprob: -2.745744466781616
    7. 'le' → logprob: -2.995744466781616
    8. ' le' → logprob: -4.370744705200195
    9. 'range' → logprob: -5.245744705200195
    10. '#' → logprob: -5.370744705200195

Token 302: ' arcs' (ID: 150448)
  Prédit: ' tramp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tramp' → logprob: -0.1803247034549713
    2. ' ' → logprob: -2.8053247928619385
    3. 's' → logprob: -4.180324554443359
    4. ' liens' → logprob: -4.305324554443359
    5. '_tr' → logprob: -4.555324554443359
    6. 'tr' → logprob: -4.680324554443359
    7. ' lignes' → logprob: -4.930324554443359
    8. '_' → logprob: -5.305324554443359
    9. '   ' → logprob: -5.305324554443359
    10. ' trampoline' → logprob: -5.430324554443359

Token 303: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34749409556388855
    2. '    
' → logprob: -1.347494125366211
    3. '
' → logprob: -4.347494125366211
    4. 'def' → logprob: -4.972494125366211
    5. ')' → logprob: -5.097494125366211
    6. '    
    
' → logprob: -6.097494125366211
    7. '\n' → logprob: -6.972494125366211
    8. '    ' → logprob: -7.222494125366211
    9. ',' → logprob: -7.222494125366211
    10. '

' → logprob: -7.972494125366211

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1407984495162964
    2. 'def' → logprob: -2.890798568725586
    3. '    
' → logprob: -3.015798568725586
    4. '
' → logprob: -3.765798568725586
    5. '    
    
' → logprob: -7.140798568725586
    6. '

' → logprob: -7.640798568725586
    7. '\n' → logprob: -8.140798568725586
    8. '    ' → logprob: -8.265798568725586
    9. '<|end|>' → logprob: -8.390798568725586
    10. '    

' → logprob: -8.515798568725586

Token 305: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24012510478496552
    2. '    
' → logprob: -1.615125060081482
    3. '\n' → logprob: -4.8651251792907715
    4. '
' → logprob: -5.4901251792907715
    5. '    
    
' → logprob: -6.6151251792907715
    6. 'def' → logprob: -7.7401251792907715
    7. '  
' → logprob: -8.490124702453613
    8. ' 
' → logprob: -8.740124702453613
    9. '   
' → logprob: -9.365124702453613
    10. '\' → logprob: -9.615124702453613

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35357028245925903
    2. '    
' → logprob: -1.2285702228546143
    3. '
' → logprob: -6.228570461273193
    4. '    ' → logprob: -6.478570461273193
    5. '    
    
' → logprob: -6.853570461273193
    6. '\n' → logprob: -8.728569984436035
    7. '<|end|>' → logprob: -9.978569984436035
    8. '        
' → logprob: -9.978569984436035
    9. 'def' → logprob: -10.353569984436035
    10. '    
    
    
' → logprob: -10.478569984436035

Token 307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19299277663230896
    2. '    
' → logprob: -2.192992687225342
    3. '
' → logprob: -3.067992687225342
    4. '#' (adapté à ' #') → logprob: -4.942992687225342
    5. 'def' → logprob: -6.692992687225342
    6. '   
' → logprob: -6.817992687225342
    7. '  
' → logprob: -6.942992687225342
    8. 'graph' → logprob: -7.317992687225342
    9. 'max' → logprob: -7.442992687225342
    10. '    
    
' → logprob: -7.442992687225342

Token 308: ' Observation' (ID: 143762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17018412053585052
    2. '
' → logprob: -3.5451841354370117
    3. 'def' → logprob: -3.7951841354370117
    4. '    
' → logprob: -3.7951841354370117
    5. 'distance' → logprob: -4.295184135437012
    6. '#' → logprob: -4.670184135437012
    7. 'visited' → logprob: -4.795184135437012
    8. 'n' → logprob: -4.920184135437012
    9. ' visited' → logprob: -4.920184135437012
    10. 'dp' → logprob: -5.170184135437012

Token 309: ' importante' (ID: 13431)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26066359877586365
    2. ' :' → logprob: -1.760663628578186
    3. '   ' → logprob: -3.1356635093688965
    4. ':
' → logprob: -4.8856635093688965
    5. ' :
' → logprob: -6.0106635093688965
    6. '    ' → logprob: -7.3856635093688965
    7. ',' → logprob: -7.5106635093688965
    8. ' de' → logprob: -7.7606635093688965
    9. '    
' → logprob: -8.135663986206055
    10. ' suivante' → logprob: -8.135663986206055

Token 310: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12197056412696838
    2. ' :' → logprob: -2.2469706535339355
    3. ':
' → logprob: -5.4969706535339355
    4. ',' → logprob: -5.8719706535339355
    5. '   ' → logprob: -6.7469706535339355
    6. ' :
' → logprob: -7.3719706535339355
    7. '#' → logprob: -9.496970176696777
    8. ':\' → logprob: -9.871970176696777
    9. ':

' → logprob: -10.371970176696777
    10. ' suivante' → logprob: -10.371970176696777

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004097396973520517
    2. '#' → logprob: -6.3790974617004395
    3. '    
' → logprob: -6.6290974617004395
    4. '    ' → logprob: -7.1290974617004395
    5. ' #' → logprob: -8.629096984863281
    6. '
' → logprob: -10.379096984863281
    7. '    
    
' → logprob: -11.129096984863281
    8. '       ' → logprob: -12.004096984863281
    9. 'for' → logprob: -12.879096984863281
    10. 'La' → logprob: -12.879096984863281

Token 312: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010363411158323288
    2. '    ' → logprob: -4.760363578796387
    3. '    
' → logprob: -6.760363578796387
    4. '#' (adapté à ' #') → logprob: -8.260363578796387
    5. ' #' → logprob: -9.010363578796387
    6. ' for' → logprob: -10.260363578796387
    7. ' La' → logprob: -10.510363578796387
    8. '
' → logprob: -10.760363578796387
    9. ' Le' → logprob: -11.135363578796387
    10. '   ' → logprob: -11.635363578796387

Token 313: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29784050583839417
    2. '#' → logprob: -1.9228404760360718
    3. ' #' → logprob: -2.7978405952453613
    4. '    
' → logprob: -3.9228405952453613
    5. ' for' → logprob: -5.422840595245361
    6. ' max' → logprob: -5.422840595245361
    7. ' La' → logprob: -5.797840595245361
    8. ' L' → logprob: -6.172840595245361
    9. ' from' → logprob: -6.172840595245361
    10. '
' → logprob: -6.547840595245361

Token 314: ' grap' (ID: 60955)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9844944477081299
    2. ' jumper' → logprob: -1.3594944477081299
    3. ' saut' → logprob: -2.48449444770813
    4. 's' → logprob: -2.60949444770813
    5. ' problème' → logprob: -2.73449444770813
    6. ' sa' → logprob: -3.98449444770813
    7. 'def' → logprob: -4.484494209289551
    8. 'code' → logprob: -4.859494209289551
    9. 'jum' → logprob: -4.859494209289551
    10. ' graph' → logprob: -4.859494209289551

Token 315: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.48038026690483093
    2. 'he' → logprob: -0.9803802967071533
    3. 'ph' → logprob: -5.730380058288574
    4. 'phe' → logprob: -6.355380058288574
    5. '#' → logprob: -7.105380058288574
    6. ' h' → logprob: -9.105380058288574
    7. 'aphe' → logprob: -9.480380058288574
    8. 'heme' → logprob: -9.730380058288574
    9. 'hé' → logprob: -9.980380058288574
    10. 'e' → logprob: -10.230380058288574

Token 316: ' des' (ID: 731)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.03175855427980423
    2. 'est' → logprob: -3.6567585468292236
    3. ' complet' → logprob: -6.281758785247803
    4. '#' → logprob: -7.281758785247803
    5. ' des' → logprob: -7.406758785247803
    6. ' peut' → logprob: -7.656758785247803
    7. ' is' → logprob: -8.281758308410645
    8. 's' → logprob: -8.531758308410645
    9. ' #' → logprob: -8.656758308410645
    10. '   ' → logprob: -8.906758308410645

Token 317: ' transitions' (ID: 59824)
  Prédit: ' tramp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tramp' → logprob: -0.3296508491039276
    2. 'tr' → logprob: -1.57965087890625
    3. 's' → logprob: -3.45465087890625
    4. ' sa' → logprob: -4.95465087890625
    5. 'conn' → logprob: -5.32965087890625
    6. ' saut' → logprob: -5.57965087890625
    7. ' indices' → logprob: -5.95465087890625
    8. ' trampoline' → logprob: -6.07965087890625
    9. ' nodes' → logprob: -6.39215087890625
    10. 'sa' → logprob: -6.45465087890625

Token 318: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.010579644702374935
    2. 'est' → logprob: -5.135579586029053
    3. '#' → logprob: -6.885579586029053
    4. ' des' → logprob: -7.260579586029053
    5. 's' → logprob: -7.760579586029053
    6. ' is' → logprob: -8.010580062866211
    7. ' directed' → logprob: -8.010580062866211
    8. ' #' → logprob: -8.135580062866211
    9. ' complet' → logprob: -8.510580062866211
    10. ' peut' → logprob: -8.760580062866211

Token 319: ' base' (ID: 3611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.340580552816391
    2. 'compose' → logprob: -3.215580463409424
    3. 'dé' → logprob: -3.340580463409424
    4. 'prés' → logprob: -3.590580463409424
    5. ' construit' → logprob: -3.715580463409424
    6. 't' → logprob: -3.840580463409424
    7. 'st' → logprob: -4.715580463409424
    8. 'ont' → logprob: -4.715580463409424
    9. 'def' → logprob: -4.715580463409424
    10. 'ré' → logprob: -5.215580463409424

Token 320: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.20903776586055756
    2. 'sur' → logprob: -1.8340377807617188
    3. '_sur' → logprob: -4.084037780761719
    4. '   ' → logprob: -5.584037780761719
    5. '_' → logprob: -6.459037780761719
    6. ' =' → logprob: -6.459037780761719
    7. '=' → logprob: -7.209037780761719
    8. ' uniquement' → logprob: -7.334037780761719
    9. ' essentiellement' → logprob: -7.459037780761719
    10. 'ur' → logprob: -7.834037780761719

Token 321: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2857632040977478
    2. 'la' → logprob: -2.2857632637023926
    3. 'les' → logprob: -3.5357632637023926
    4. ' les' → logprob: -3.5357632637023926
    5. ' l' → logprob: -3.6607632637023926
    6. ' des' → logprob: -3.6607632637023926
    7. 'l' → logprob: -4.535763263702393
    8. ' ' → logprob: -5.035763263702393
    9. ' un' → logprob: -5.160763263702393
    10. ' une' → logprob: -5.410763263702393

Token 322: ' distance' (ID: 9324)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.0387365818023682
    2. ' propriété' → logprob: -1.1637365818023682
    3. 'distance' → logprob: -3.038736581802368
    4. ' chaîne' → logprob: -3.163736581802368
    5. 'relation' → logprob: -3.663736581802368
    6. ' distance' → logprob: -3.663736581802368
    7. ' relation' → logprob: -4.163736343383789
    8. 'chaine' → logprob: -4.288736343383789
    9. ' liste' → logprob: -4.413736343383789
    10. ' ligne' → logprob: -4.663736343383789

Token 323: ' horizont' (ID: 69308)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.6865498423576355
    2. 'max' → logprob: -1.1865499019622803
    3. ' de' → logprob: -3.1865499019622803
    4. ' max' → logprob: -3.6865499019622803
    5. ' horizont' → logprob: -3.6865499019622803
    6. ' entre' → logprob: -4.061549663543701
    7. '_max' → logprob: -4.561549663543701
    8. ' maximal' → logprob: -4.561549663543701
    9. ' ' → logprob: -4.686549663543701
    10. 'de' → logprob: -4.936549663543701

Token 324: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.12206901609897614
    2. 'ion' → logprob: -3.1220691204071045
    3. 'aire' → logprob: -3.2470691204071045
    4. '   ' → logprob: -4.622068881988525
    5. 'e' → logprob: -4.747068881988525
    6. 'ée' → logprob: -5.872068881988525
    7. 'nale' → logprob: -6.122068881988525
    8. 'ionale' → logprob: -6.872068881988525
    9. 'é' → logprob: -7.247068881988525
    10. 'ière' → logprob: -7.497068881988525

Token 325: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7199083566665649
    2. '<|end|>' → logprob: -0.9699083566665649
    3. ')' → logprob: -2.5949082374572754
    4. ' )' → logprob: -3.5949082374572754
    5. ',' → logprob: -4.344908237457275
    6. '<|end|>' → logprob: -4.844908237457275
    7. ' ,' → logprob: -6.219908237457275
    8. '  ' → logprob: -6.469908237457275
    9. '   ' → logprob: -6.469908237457275
    10. '.' → logprob: -6.844908237457275

Token 326: '10' (ID: 702)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.1064072847366333
    2. ' maximale' → logprob: -1.4814072847366333
    3. ' de' → logprob: -1.8564072847366333
    4. 'de' → logprob: -2.4814071655273438
    5. 'max' → logprob: -2.8564071655273438
    6. '   ' → logprob: -3.4814071655273438
    7. ' d' → logprob: -4.231407165527344
    8. 'entre' → logprob: -4.231407165527344
    9. ' ' → logprob: -4.356407165527344
    10. ' between' → logprob: -4.356407165527344

Token 327: '*m' (ID: 85049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23110561072826385
    2. ' )' → logprob: -2.2311055660247803
    3. ' *' → logprob: -3.1061055660247803
    4. '**' → logprob: -3.7311055660247803
    5. '*' → logprob: -4.606105804443359
    6. ' **' → logprob: -5.106105804443359
    7. ' ' → logprob: -5.481105804443359
    8. '   ' → logprob: -5.606105804443359
    9. ' ' → logprob: -5.981105804443359
    10. ',' → logprob: -7.731105804443359

Token 328: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15788738429546356
    2. '   ' → logprob: -2.9078874588012695
    3. 'ultip' → logprob: -3.5328874588012695
    4. 'm' → logprob: -4.6578874588012695
    5. '  ' → logprob: -5.4078874588012695
    6. 'ètre' → logprob: -5.4078874588012695
    7. ']' → logprob: -5.9078874588012695
    8. ',' → logprob: -6.0328874588012695
    9. 'odule' → logprob: -6.0328874588012695
    10. '),' → logprob: -6.0328874588012695

Token 329: '   ' (ID: 271)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8437675833702087
    2. 'm' → logprob: -1.0937676429748535
    3. '#' → logprob: -2.2187676429748535
    4. ' où' → logprob: -2.7187676429748535
    5. ' et' → logprob: -3.8437676429748535
    6. 'où' → logprob: -4.3437676429748535
    7. ' where' → logprob: -5.4687676429748535
    8. '   ' → logprob: -5.5937676429748535
    9. ' donc' → logprob: -5.7187676429748535
    10. ' mais' → logprob: -6.2187676429748535

Token 330: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7972931861877441
    2. 'm' → logprob: -0.9222931861877441
    3. 'où' → logprob: -2.672293186187744
    4. ' m' → logprob: -3.172293186187744
    5. ' où' → logprob: -3.922293186187744
    6. 'et' → logprob: -5.172293186187744
    7. ' #' → logprob: -5.297293186187744
    8. '   ' → logprob: -5.547293186187744
    9. ' et' → logprob: -6.047293186187744
    10. ' where' → logprob: -6.422293186187744

Token 331: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16184501349925995
    2. ' #' → logprob: -3.1618449687957764
    3. 'm' → logprob: -3.2868449687957764
    4. ' m' → logprob: -3.4118449687957764
    5. '   ' → logprob: -4.6618452072143555
    6. ' et' → logprob: -5.1618452072143555
    7. ' la' → logprob: -5.7868452072143555
    8. ' donc' → logprob: -6.1618452072143555
    9. ' ' → logprob: -6.4118452072143555
    10. 'le' → logprob: -6.5368452072143555

Token 332: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0872882604599
    2. ' les' → logprob: -1.3372882604599
    3. ' m' → logprob: -1.4622882604599
    4. ' l' → logprob: -3.7122883796691895
    5. ' une' → logprob: -4.0872883796691895
    6. 'les' → logprob: -4.2122883796691895
    7. ' on' → logprob: -4.2122883796691895
    8. ' le' → logprob: -4.5872883796691895
    9. ' chaque' → logprob: -4.5872883796691895
    10. ' ' → logprob: -4.8372883796691895

Token 333: ' condition' (ID: 7060)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.873396396636963
    2. ' portée' → logprob: -2.373396396636963
    3. 's' → logprob: -2.748396396636963
    4. ' plus' → logprob: -2.748396396636963
    5. 'distance' → logprob: -2.748396396636963
    6. ' meilleure' → logprob: -2.748396396636963
    7. 'port' → logprob: -2.998396396636963
    8. ' port' → logprob: -2.998396396636963
    9. ' solution' → logprob: -3.873396396636963
    10. 'n' → logprob: -3.998396396636963

Token 334: ' min' (ID: 1349)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1420397758483887
    2. ' s' → logprob: -1.3920397758483887
    3. 's' → logprob: -2.1420397758483887
    4. ' d' → logprob: -2.2670397758483887
    5. ' suivante' → logprob: -2.3920397758483887
    6. ' est' → logprob: -3.3920397758483887
    7. ' =' → logprob: -4.142039775848389
    8. ' continue' → logprob: -4.392039775848389
    9. ' que' → logprob: -4.767039775848389
    10. 'de' → logprob: -5.142039775848389

Token 335: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07938222587108612
    2. '(' → logprob: -2.5793821811676025
    3. ' (' → logprob: -8.829381942749023
    4. '(
' → logprob: -9.079381942749023
    5. '(distance' → logprob: -9.329381942749023
    6. '(len' → logprob: -10.704381942749023
    7. '(dist' → logprob: -10.829381942749023
    8. '(abs' → logprob: -11.454381942749023
    9. '(i' → logprob: -11.829381942749023
    10. '(a' → logprob: -11.829381942749023

Token 336: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00036084887688048184
    2. '[' → logprob: -8.125360488891602
    3. '[j' → logprob: -10.250360488891602
    4. ')' → logprob: -11.125360488891602
    5. ' [' → logprob: -11.750360488891602
    6. '[
' → logprob: -13.375360488891602
    7. '   ' → logprob: -13.750360488891602
    8. '(i' → logprob: -14.375360488891602
    9. '[min' → logprob: -14.750360488891602
    10. '[u' → logprob: -14.875360488891602

Token 337: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025823991745710373
    2. '],' → logprob: -4.275824069976807
    3. '[j' → logprob: -4.525824069976807
    4. '[' → logprob: -7.400824069976807
    5. '[
' → logprob: -10.150823593139648
    6. ']' → logprob: -10.900823593139648
    7. ',' → logprob: -11.025823593139648
    8. '],[' → logprob: -11.150823593139648
    9. '[k' → logprob: -11.900823593139648
    10. '   ' → logprob: -12.150823593139648

Token 338: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4298548400402069
    2. ' d' → logprob: -1.0548548698425293
    3. ' ' → logprob: -7.929854869842529
    4. '   ' → logprob: -8.554854393005371
    5. '[' → logprob: -8.804854393005371
    6. '10' → logprob: -8.804854393005371
    7. '    ' → logprob: -9.804854393005371
    8. ')' → logprob: -9.929854393005371
    9. ' ' → logprob: -9.929854393005371
    10. '  ' → logprob: -10.929854393005371

Token 339: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0020809052512049675
    2. '[i' → logprob: -6.502080917358398
    3. '[' → logprob: -7.627080917358398
    4. '],' → logprob: -10.377080917358398
    5. 'j' → logprob: -10.877080917358398
    6. '])' → logprob: -11.377080917358398
    7. ']' → logprob: -12.127080917358398
    8. '   ' → logprob: -12.252080917358398
    9. '][' → logprob: -12.502080917358398
    10. '),' → logprob: -12.502080917358398

Token 340: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011680031195282936
    2. '[i' → logprob: -5.2616801261901855
    3. ')>' → logprob: -6.1366801261901855
    4. ')>=' → logprob: -7.0116801261901855
    5. '[j' → logprob: -7.2616801261901855
    6. ')==' → logprob: -7.3866801261901855
    7. ')<=' → logprob: -7.7616801261901855
    8. '])' → logprob: -8.011679649353027
    9. ' )' → logprob: -8.386679649353027
    10. '))' → logprob: -8.761679649353027

Token 341: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20749647915363312
    2. ' >=' → logprob: -2.332496404647827
    3. '   ' → logprob: -3.582496404647827
    4. '>=' → logprob: -3.707496404647827
    5. ' <=' → logprob: -4.957496643066406
    6. ' )' → logprob: -5.082496643066406
    7. ',' → logprob: -5.457496643066406
    8. ')>=' → logprob: -5.707496643066406
    9. '<=' → logprob: -6.332496643066406
    10. '>' → logprob: -6.832496643066406

Token 342: ' ' (ID: 220)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3248216509819031
    2. 'abs' → logprob: -1.3248217105865479
    3. '10' → logprob: -5.449821472167969
    4. ' ' → logprob: -5.949821472167969
    5. ' (' → logprob: -6.199821472167969
    6. '(abs' → logprob: -6.574821472167969
    7. ' j' → logprob: -7.324821472167969
    8. '(j' → logprob: -8.824821472167969
    9. '|' → logprob: -9.199821472167969
    10. 'j' → logprob: -9.449821472167969

Token 343: '10' (ID: 702)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5825954675674438
    2. ' abs' → logprob: -0.8325954675674438
    3. '10' → logprob: -6.082595348358154
    4. '(abs' → logprob: -6.332595348358154
    5. ' ' → logprob: -6.957595348358154
    6. ' (' → logprob: -7.082595348358154
    7. '(j' → logprob: -7.957595348358154
    8. ' j' → logprob: -8.457595825195312
    9. '(' → logprob: -9.207595825195312
    10. 'j' → logprob: -9.957595825195312

Token 344: '*' (ID: 9)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9814178347587585
    2. ')' → logprob: -1.2314178943634033
    3. '):' → logprob: -2.2314178943634033
    4. ':' → logprob: -2.6064178943634033
    5. ' *' → logprob: -3.1064178943634033
    6. '**' → logprob: -3.4814178943634033
    7. ' ' → logprob: -3.6064178943634033
    8. '*' → logprob: -4.356417655944824
    9. '  ' → logprob: -5.231417655944824
    10. '):
' → logprob: -5.356417655944824

Token 345: '|' (ID: 91)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1523653268814087
    2. ' abs' → logprob: -2.277365207672119
    3. 'm' → logprob: -3.777365207672119
    4. '(abs' → logprob: -4.652365207672119
    5. '|' → logprob: -5.277365207672119
    6. '(j' → logprob: -7.027365207672119
    7. '(m' → logprob: -9.152365684509277
    8. ' (' → logprob: -9.652365684509277
    9. ' m' → logprob: -9.777365684509277
    10. '(' → logprob: -10.402365684509277

Token 346: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.167833611369133
    2. '(j' → logprob: -1.9178335666656494
    3. ' (' → logprob: -5.5428338050842285
    4. ' j' → logprob: -6.1678338050842285
    5. 'abs' → logprob: -7.4178338050842285
    6. '(abs' → logprob: -7.9178338050842285
    7. ' abs' → logprob: -8.54283332824707
    8. '(' → logprob: -8.91783332824707
    9. 'i' → logprob: -9.29283332824707
    10. '(i' → logprob: -10.04283332824707

Token 347: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02516542747616768
    2. '-' → logprob: -3.900165319442749
    3. '-i' → logprob: -5.400165557861328
    4. '-j' → logprob: -10.025165557861328
    5. ' ' → logprob: -10.275165557861328
    6. 'i' → logprob: -12.650165557861328
    7. ' i' → logprob: -12.650165557861328
    8. ' ' → logprob: -12.650165557861328
    9. '   ' → logprob: -13.275165557861328
    10. '  ' → logprob: -13.525165557861328

Token 348: '|.
' (ID: 46359)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0014223761390894651
    2. ')' → logprob: -7.25142240524292
    3. '])' → logprob: -8.501421928405762
    4. ')|' → logprob: -8.626421928405762
    5. '|)
' → logprob: -9.001421928405762
    6. ']' → logprob: -9.626421928405762
    7. ']|' → logprob: -9.751421928405762
    8. ' |' → logprob: -10.251421928405762
    9. '|
' → logprob: -11.626421928405762
    10. '[' → logprob: -12.001421928405762

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05564706772565842
    2. '    
' → logprob: -3.180647134780884
    3. '<|end|>' → logprob: -5.430646896362305
    4. '\n' → logprob: -6.430646896362305
    5. ')' → logprob: -6.805646896362305
    6. '    
    
' → logprob: -6.930646896362305
    7. 'def' → logprob: -7.055646896362305
    8. '    ' → logprob: -7.680646896362305
    9. ' 
' → logprob: -7.680646896362305
    10. '  
' → logprob: -7.680646896362305

Token 350: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02857867255806923
    2. '    
' → logprob: -4.028578758239746
    3. ')' → logprob: -5.653578758239746
    4. '\n' → logprob: -6.653578758239746
    5. 'def' → logprob: -7.403578758239746
    6. '    
    
' → logprob: -7.403578758239746
    7. '    ' → logprob: -7.653578758239746
    8. '  
' → logprob: -7.778578758239746
    9. '
' → logprob: -7.903578758239746
    10. ' 
' → logprob: -8.028578758239746

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28827711939811707
    2. '    
' → logprob: -1.4132771492004395
    3. '    ' → logprob: -6.2882771492004395
    4. '
' → logprob: -6.5382771492004395
    5. '    
    
' → logprob: -6.7882771492004395
    6. '<|end|>' → logprob: -6.7882771492004395
    7. '<|end|>' → logprob: -8.788276672363281
    8. ')' → logprob: -8.913276672363281
    9. 'n' → logprob: -8.913276672363281
    10. ' 
' → logprob: -8.913276672363281

Token 352: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05670879781246185
    2. '    
' → logprob: -3.556708812713623
    3. '
' → logprob: -3.931708812713623
    4. 'def' → logprob: -6.056708812713623
    5. '#' (adapté à ' #') → logprob: -6.431708812713623
    6. 'max' → logprob: -7.181708812713623
    7. 'n' → logprob: -7.806708812713623
    8. '   
' → logprob: -8.306708335876465
    9. 'visited' → logprob: -8.431708335876465
    10. 'dp' → logprob: -8.806708335876465

Token 353: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03356662765145302
    2. 'def' → logprob: -5.033566474914551
    3. 'n' → logprob: -5.283566474914551
    4. '#' → logprob: -5.783566474914551
    5. ' #' → logprob: -6.033566474914551
    6. '    
' → logprob: -6.033566474914551
    7. ' n' → logprob: -6.283566474914551
    8. '
' → logprob: -6.283566474914551
    9. 'max' → logprob: -6.408566474914551
    10. 'visited' → logprob: -6.783566474914551

Token 354: ' une' (ID: 2463)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6131789684295654
    2. 'i' → logprob: -0.9881789684295654
    3. ' j' → logprob: -2.9881789684295654
    4. 'j' → logprob: -4.4881792068481445
    5. ' continuer' → logprob: -4.8631792068481445
    6. ' optimiser' → logprob: -5.8631792068481445
    7. ' éviter' → logprob: -5.9881792068481445
    8. 'optim' → logprob: -6.4881792068481445
    9. ' améliorer' → logprob: -6.8631792068481445
    10. ' la' → logprob: -7.1131792068481445

Token 355: ' direction' (ID: 9262)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.7556096315383911
    2. ' i' → logprob: -1.8806096315383911
    3. ' raison' → logprob: -2.1306095123291016
    4. 'i' → logprob: -2.2556095123291016
    5. 'raison' → logprob: -2.3806095123291016
    6. 'j' → logprob: -3.2556095123291016
    7. 'distance' → logprob: -3.5056095123291016
    8. ' meilleure' → logprob: -3.6306095123291016
    9. ' question' → logprob: -3.8806095123291016
    10. 'range' → logprob: -3.8806095123291016

Token 356: ' donnée' (ID: 130126)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.289555549621582
    2. ' i' → logprob: -1.664555549621582
    3. '=' → logprob: -1.914555549621582
    4. ' =' → logprob: -2.664555549621582
    5. ' ,' → logprob: -3.289555549621582
    6. ' allant' → logprob: -3.289555549621582
    7. ' vers' → logprob: -3.664555549621582
    8. ' dans' → logprob: -3.789555549621582
    9. ' j' → logprob: -3.789555549621582
    10. 'al' → logprob: -4.039555549621582

Token 357: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5914373397827148
    2. ':' → logprob: -0.9664373397827148
    3. ' :' → logprob: -3.466437339782715
    4. ' ,' → logprob: -3.466437339782715
    5. 'def' → logprob: -7.466437339782715
    6. ' i' → logprob: -7.966437339782715
    7. ':
' → logprob: -8.341437339782715
    8. ' ' → logprob: -8.466437339782715
    9. '   ' → logprob: -8.466437339782715
    10. ' de' → logprob: -8.591437339782715

Token 358: 'aller' (ID: 11605)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.122302770614624
    2. 'i' → logprob: -1.872302770614624
    3. ' aller' → logprob: -2.622302770614624
    4. 'all' → logprob: -2.872302770614624
    5. ' forward' → logprob: -3.372302770614624
    6. ')' → logprob: -3.497302770614624
    7. ' right' → logprob: -3.497302770614624
    8. 'aller' → logprob: -3.622302770614624
    9. ' for' → logprob: -3.747302770614624
    10. ' j' → logprob: -3.872302770614624

Token 359: ' ou' (ID: 2031)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4847966432571411
    2. ',' → logprob: -2.1097965240478516
    3. '+' → logprob: -2.6097965240478516
    4. ' ou' → logprob: -2.7347965240478516
    5. '):' → logprob: -3.3597965240478516
    6. '):
' → logprob: -3.7347965240478516
    7. '   ' → logprob: -4.359796524047852
    8. ' +' → logprob: -4.859796524047852
    9. '=' → logprob: -5.109796524047852
    10. ')' → logprob: -5.234796524047852

Token 360: ' retour' (ID: 30714)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.321258008480072
    2. ' retour' → logprob: -1.3212580680847168
    3. 'return' → logprob: -5.446258068084717
    4. '#' → logprob: -6.946258068084717
    5. ')' → logprob: -7.446258068084717
    6. 'def' → logprob: -7.821258068084717
    7. '```' → logprob: -7.946258068084717
    8. ' return' → logprob: -8.821257591247559
    9. 'sens' → logprob: -8.821257591247559
    10. 'reverse' → logprob: -8.946257591247559

Token 361: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09063708037137985
    2. '):' → logprob: -2.840636968612671
    3. '):
' → logprob: -3.715636968612671
    4. ')' → logprob: -6.09063720703125
    5. ',' → logprob: -7.59063720703125
    6. '):

' → logprob: -7.84063720703125
    7. ' ),' → logprob: -8.09063720703125
    8. '),
' → logprob: -8.46563720703125
    9. '   ' → logprob: -9.21563720703125
    10. ':' → logprob: -10.09063720703125

Token 362: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3145875036716461
    2. ' on' → logprob: -2.1895875930786133
    3. '   ' → logprob: -2.6895875930786133
    4. ' #' → logprob: -2.9395875930786133
    5. ' il' → logprob: -4.314587593078613
    6. 'def' → logprob: -5.314587593078613
    7. 'on' → logprob: -5.439587593078613
    8. ' return' → logprob: -5.439587593078613
    9. 'return' → logprob: -5.689587593078613
    10. ' for' → logprob: -7.314587593078613

Token 363: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.9123705625534058
    2. 'pe' → logprob: -1.7873705625534058
    3. ' peux' → logprob: -1.9123705625534058
    4. 'def' → logprob: -2.6623706817626953
    5. '   ' → logprob: -3.4123706817626953
    6. '#' → logprob: -3.9123706817626953
    7. 'expl' → logprob: -4.037370681762695
    8. ' pourra' → logprob: -4.287370681762695
    9. ' #' → logprob: -4.537370681762695
    10. ' doit' → logprob: -4.537370681762695

Token 364: ' représ' (ID: 31534)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8840326070785522
    2. ' parcour' → logprob: -1.3840326070785522
    3. ' utiliser' → logprob: -2.009032726287842
    4. 'impl' → logprob: -2.759032726287842
    5. 'faire' → logprob: -3.759032726287842
    6. ' effectuer' → logprob: -4.134032726287842
    7. 'expl' → logprob: -4.259032726287842
    8. ' explorer' → logprob: -4.759032726287842
    9. ' construire' → logprob: -4.759032726287842
    10. 'sim' → logprob: -5.384032726287842

Token 365: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.4960678219795227
    2. 'er' → logprob: -0.9960678219795227
    3. 'ent' → logprob: -4.121068000793457
    4. 'anter' → logprob: -5.871068000793457
    5. 'e' → logprob: -6.371068000793457
    6. 'ater' → logprob: -7.871068000793457
    7. '   ' → logprob: -9.121068000793457
    8. 'iter' → logprob: -9.496068000793457
    9. 'a' → logprob: -9.871068000793457
    10. 'érer' → logprob: -10.371068000793457

Token 366: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.40569087862968445
    2. ' une' → logprob: -1.5306909084320068
    3. 'un' → logprob: -2.905690908432007
    4. 'une' → logprob: -3.655690908432007
    5. ' la' → logprob: -5.030690670013428
    6. 'le' → logprob: -5.280690670013428
    7. 'la' → logprob: -5.405690670013428
    8. ' le' → logprob: -5.405690670013428
    9. ' chaque' → logprob: -6.155690670013428
    10. ' uniquement' → logprob: -6.155690670013428

Token 367: ' grap' (ID: 60955)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.2965940237045288
    2. 'graph' → logprob: -2.1715941429138184
    3. ' grap' → logprob: -2.2965941429138184
    4. 'gr' → logprob: -2.5465941429138184
    5. 'che' → logprob: -2.5465941429138184
    6. ' trajet' → logprob: -2.9215941429138184
    7. 's' → logprob: -3.0465941429138184
    8. ' saut' → logprob: -3.0465941429138184
    9. ' parcours' → logprob: -3.5465941429138184
    10. ' chemin' → logprob: -3.9215941429138184

Token 368: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.9142408967018127
    2. 'aphe' → logprob: -1.539240837097168
    3. 'rap' → logprob: -1.789240837097168
    4. 'raph' → logprob: -2.164240837097168
    5. 'h' → logprob: -2.789240837097168
    6. 'r' → logprob: -4.664240837097168
    7. 'aph' → logprob: -4.789240837097168
    8. 'ph' → logprob: -5.414240837097168
    9. 'def' → logprob: -6.039240837097168
    10. '   ' → logprob: -6.039240837097168

Token 369: '
' (ID: 198)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9466822743415833
    2. 's' → logprob: -2.1966822147369385
    3. ' sous' → logprob: -2.1966822147369385
    4. 'comme' → logprob: -2.1966822147369385
    5. 'par' → logprob: -2.3216822147369385
    6. ' comme' → logprob: -2.5716822147369385
    7. 'en' → logprob: -3.3216822147369385
    8. ' en' → logprob: -3.4466822147369385
    9. '   ' → logprob: -5.071682453155518
    10. ' ' → logprob: -5.446682453155518

Token 370: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5161703824996948
    2. ' des' → logprob: -2.0161705017089844
    3. ' sous' → logprob: -2.5161705017089844
    4. '_' → logprob: -3.5161705017089844
    5. ' complet' → logprob: -3.6411705017089844
    6. '   ' → logprob: -3.8911705017089844
    7. ')' → logprob: -4.266170501708984
    8. ',' → logprob: -4.391170501708984
    9. ' par' → logprob: -4.516170501708984
    10. '[' → logprob: -4.641170501708984

Token 371: ' #' (ID: 1069)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.2891323566436768
    2. ' sous' → logprob: -1.2891323566436768
    3. 's' → logprob: -2.2891323566436768
    4. 'par' → logprob: -2.4141323566436768
    5. 'en' → logprob: -2.9141323566436768
    6. ' en' → logprob: -2.9141323566436768
    7. 'comme' → logprob: -3.0391323566436768
    8. ' comme' → logprob: -3.4141323566436768
    9. '   ' → logprob: -3.5391323566436768
    10. '#' (adapté à ' #') → logprob: -4.664132118225098

Token 372: ' orient' (ID: 13198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.145105004310608
    2. ' par' → logprob: -1.770105004310608
    3. 'par' → logprob: -2.1451048851013184
    4. ' sous' → logprob: -2.1451048851013184
    5. 'comme' → logprob: -2.3951048851013184
    6. 'en' → logprob: -2.5201048851013184
    7. ' en' → logprob: -3.5201048851013184
    8. ' comme' → logprob: -3.8951048851013184
    9. '#' → logprob: -4.770104885101318
    10. 'compl' → logprob: -5.395104885101318

Token 373: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007893478497862816
    2. 'ed' → logprob: -5.1328935623168945
    3. 'ée' → logprob: -6.5078935623168945
    4. '=' → logprob: -8.757893562316895
    5. '```' → logprob: -9.007893562316895
    6. 'e' → logprob: -9.882893562316895
    7. 'ee' → logprob: -10.132893562316895
    8. 'és' → logprob: -10.507893562316895
    9. '#' → logprob: -10.882893562316895
    10. 'ated' → logprob: -11.132893562316895

Token 374: ' et' (ID: 859)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.8652284741401672
    2. ' comme' → logprob: -1.7402284145355225
    3. ' par' → logprob: -2.2402284145355225
    4. ' en' → logprob: -2.3652284145355225
    5. 'comme' → logprob: -2.9902284145355225
    6. 's' → logprob: -3.1152284145355225
    7. 'en' → logprob: -3.1152284145355225
    8. ',' → logprob: -4.490228652954102
    9. 'par' → logprob: -4.990228652954102
    10. '.' → logprob: -5.240228652954102

Token 375: ' vérifier' (ID: 93671)
  Prédit: ' explorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' explorer' → logprob: -0.8889044523239136
    2. ' effectuer' → logprob: -2.388904571533203
    3. ' vérifier' → logprob: -2.388904571533203
    4. ' parcour' → logprob: -2.388904571533203
    5. ' analyser' → logprob: -2.388904571533203
    6. ' utiliser' → logprob: -3.138904571533203
    7. ' construire' → logprob: -3.888904571533203
    8. ' tester' → logprob: -4.013904571533203
    9. ' coder' → logprob: -4.013904571533203
    10. 'expl' → logprob: -4.263904571533203

Token 376: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.6392127275466919
    2. ' la' → logprob: -1.014212727546692
    3. 'si' → logprob: -3.6392126083374023
    4. ' s' → logprob: -4.139212608337402
    5. 'la' → logprob: -4.139212608337402
    6. ' if' → logprob: -4.264212608337402
    7. ' ' → logprob: -4.764212608337402
    8. 'le' → logprob: -5.264212608337402
    9. 's' → logprob: -5.514212608337402
    10. ',' → logprob: -5.764212608337402

Token 377: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.718015730381012
    2. ' il' → logprob: -1.8430156707763672
    3. ' un' → logprob: -2.093015670776367
    4. ' une' → logprob: -2.593015670776367
    5. ' la' → logprob: -3.093015670776367
    6. 'on' → logprob: -3.843015670776367
    7. 'il' → logprob: -4.343015670776367
    8. ' le' → logprob: -4.468015670776367
    9. ' there' → logprob: -4.968015670776367
    10. 'une' → logprob: -4.968015670776367

Token 378: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.0676223486661911
    2. 'pe' → logprob: -3.317622423171997
    3. ' peux' → logprob: -3.692622423171997
    4. ' atteint' → logprob: -6.942622184753418
    5. ' a' → logprob: -7.317622184753418
    6. 'a' → logprob: -7.567622184753418
    7. ' can' → logprob: -7.817622184753418
    8. 'can' → logprob: -7.817622184753418
    9. 'arr' → logprob: -8.317622184753418
    10. ' ' → logprob: -8.942622184753418

Token 379: ' se' (ID: 458)
  Prédit: ' atteindre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.7054970264434814
    2. 'atte' → logprob: -0.9554970264434814
    3. 're' → logprob: -3.3304970264434814
    4. 'aller' → logprob: -3.4554970264434814
    5. ' aller' → logprob: -4.455496788024902
    6. ' rejoindre' → logprob: -4.580496788024902
    7. ' parcour' → logprob: -5.205496788024902
    8. ' at' → logprob: -5.455496788024902
    9. ' atte' → logprob: -5.580496788024902
    10. ' ' → logprob: -6.080496788024902

Token 380: ' rendre' (ID: 44629)
  Prédit: ' déplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.9310823082923889
    2. ' rendre' → logprob: -1.0560822486877441
    3. 'r' → logprob: -1.5560822486877441
    4. 're' → logprob: -4.181082248687744
    5. '_re' → logprob: -5.556082248687744
    6. 'dé' → logprob: -5.681082248687744
    7. 'render' → logprob: -5.681082248687744
    8. ' ' → logprob: -6.431082248687744
    9. '   ' → logprob: -6.431082248687744
    10. 'u' → logprob: -6.431082248687744

Token 381: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3654828071594238
    2. 'de' → logprob: -1.3654828071594238
    3. ' jusqu' → logprob: -1.7404828071594238
    4. ' à' → logprob: -2.240482807159424
    5. ' au' → logprob: -2.615482807159424
    6. 'au' → logprob: -3.115482807159424
    7. 'jus' → logprob: -3.240482807159424
    8. 'à' → logprob: -3.865482807159424
    9. ' jusque' → logprob: -5.115482807159424
    10. 'du' → logprob: -5.365482807159424

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7087133526802063
    2. 'i' → logprob: -1.3337132930755615
    3. ' i' → logprob: -1.9587132930755615
    4. ' ' → logprob: -2.7087132930755615
    5. 'l' → logprob: -4.208713531494141
    6. 'un' → logprob: -5.583713531494141
    7. 'tr' → logprob: -5.958713531494141
    8. ' l' → logprob: -5.958713531494141
    9. 'j' → logprob: -6.208713531494141
    10. ' un' → logprob: -6.458713531494141

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09383834898471832
    2. 'i' → logprob: -2.7188384532928467
    3. ' ' → logprob: -4.218838214874268
    4. ' i' → logprob: -4.843838214874268
    5. 'l' → logprob: -7.843838214874268
    6. 'j' → logprob: -8.843838691711426
    7. 'un' → logprob: -8.843838691711426
    8. 'la' → logprob: -10.218838691711426
    9. ' la' → logprob: -10.343838691711426
    10. ' l' → logprob: -10.593838691711426

Token 384: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.041006747633218765
    2. ' ' → logprob: -3.9160068035125732
    3. 'à' → logprob: -4.166006565093994
    4. ' jusqu' → logprob: -6.166006565093994
    5. ' to' → logprob: -6.791006565093994
    6. ' vers' → logprob: -7.541006565093994
    7. ' ' → logprob: -7.791006565093994
    8. '   ' → logprob: -9.416007041931152
    9. ' au' → logprob: -9.416007041931152
    10. '  ' → logprob: -9.791007041931152

Token 385: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.38805094361305237
    2. 'N' → logprob: -1.13805091381073
    3. ' j' → logprob: -7.8880510330200195
    4. ' i' → logprob: -8.51305103302002
    5. 'i' → logprob: -8.76305103302002
    6. 'j' → logprob: -8.88805103302002
    7. ' ' → logprob: -9.26305103302002
    8. '1' → logprob: -9.76305103302002
    9. ' n' → logprob: -10.26305103302002
    10. 'n' → logprob: -10.26305103302002

Token 386: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.531813702778891e-05
    2. ' -' → logprob: -9.75009536743164
    3. '1' → logprob: -10.37509536743164
    4. '   ' → logprob: -13.50009536743164
    5. '```' → logprob: -13.62509536743164
    6. '#' → logprob: -14.62509536743164
    7. '−' → logprob: -14.75009536743164
    8. ')' → logprob: -14.93759536743164
    9. ' ' → logprob: -15.00009536743164
    10. '
' → logprob: -15.62509536743164

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '2' → logprob: -14.625110626220703
    4. '   ' → logprob: -14.875110626220703
    5. '-' → logprob: -15.875110626220703
    6. '```' → logprob: -16.250110626220703
    7. ')' → logprob: -16.375110626220703
    8. '3' → logprob: -17.187610626220703
    9. ' ' → logprob: -17.250110626220703
    10. '  ' → logprob: -18.000110626220703

Token 388: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47484487295150757
    2. ':' → logprob: -1.4748449325561523
    3. '.' → logprob: -3.3498449325561523
    4. 'def' → logprob: -3.7248449325561523
    5. ')' → logprob: -3.8498449325561523
    6. ',' → logprob: -4.224844932556152
    7. ' ' → logprob: -4.224844932556152
    8. '    
' → logprob: -4.474844932556152
    9. '  
' → logprob: -5.349844932556152
    10. '  ' → logprob: -5.849844932556152

Token 389: 'aller' (ID: 11605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21804217994213104
    2. ').' → logprob: -1.7180421352386475
    3. ' )' → logprob: -4.468042373657227
    4. '.' → logprob: -6.218042373657227
    5. ' ).' → logprob: -6.718042373657227
    6. '   ' → logprob: -8.218042373657227
    7. ' ' → logprob: -8.468042373657227
    8. ' en' → logprob: -8.593042373657227
    9. ')\' → logprob: -8.968042373657227
    10. '):' → logprob: -9.093042373657227

Token 390: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025060687214136124
    2. ').' → logprob: -3.7750606536865234
    3. ' )' → logprob: -7.650060653686523
    4. '   ' → logprob: -8.275060653686523
    5. '),' → logprob: -8.525060653686523
    6. '.' → logprob: -8.775060653686523
    7. ' et' → logprob: -8.775060653686523
    8. ' ou' → logprob: -9.275060653686523
    9. ',' → logprob: -9.650060653686523
    10. 'et' → logprob: -9.650060653686523

Token 391: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.03751080855727196
    2. 'p' → logprob: -3.912510871887207
    3. '   ' → logprob: -4.287510871887207
    4. '#' → logprob: -7.412510871887207
    5. 'et' → logprob: -7.662510871887207
    6. ' et' → logprob: -7.787510871887207
    7. ' then' → logprob: -7.912510871887207
    8. ' #' → logprob: -8.287510871887207
    9. '    ' → logprob: -8.537510871887207
    10. ' p' → logprob: -8.537510871887207

Token 392: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7196003794670105
    2. 'de' → logprob: -0.7196003794670105
    3. '#' → logprob: -3.9696004390716553
    4. 'from' → logprob: -6.219600200653076
    5. ' from' → logprob: -6.344600200653076
    6. '   ' → logprob: -6.719600200653076
    7. 'def' → logprob: -6.969600200653076
    8. ' #' → logprob: -7.344600200653076
    9. ' ensuite' → logprob: -9.094600677490234
    10. 'ens' → logprob: -9.219600677490234

Token 393: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16438785195350647
    2. ' N' → logprob: -1.914387822151184
    3. '0' → logprob: -5.6643877029418945
    4. ' ' → logprob: -7.9143877029418945
    5. '(N' → logprob: -8.789387702941895
    6. ' (' → logprob: -10.539387702941895
    7. '#' → logprob: -10.664387702941895
    8. 'n' → logprob: -11.039387702941895
    9. ' ' → logprob: -11.039387702941895
    10. '[N' → logprob: -11.039387702941895

Token 394: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010185176506638527
    2. ' -' → logprob: -7.126018524169922
    3. '#' → logprob: -9.626018524169922
    4. '1' → logprob: -10.126018524169922
    5. '   ' → logprob: -11.001018524169922
    6. '
' → logprob: -11.126018524169922
    7. '+' → logprob: -12.188518524169922
    8. ' ' → logprob: -12.251018524169922
    9. 'to' → logprob: -12.313518524169922
    10. '−' → logprob: -12.313518524169922

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030188478529453278
    2. '-' → logprob: -3.53018856048584
    3. ' ' → logprob: -7.78018856048584
    4. ' -' → logprob: -12.28018856048584
    5. '2' → logprob: -13.28018856048584
    6. '<|end|>' → logprob: -13.78018856048584
    7. '[' → logprob: -14.03018856048584
    8. '	' → logprob: -14.03018856048584
    9. '.' → logprob: -14.21768856048584
    10. '```' → logprob: -14.21768856048584

Token 396: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.051151812076568604
    2. 'à' → logprob: -3.551151752471924
    3. ' to' → logprob: -4.301151752471924
    4. '<|end|>' → logprob: -5.551151752471924
    5. 'to' → logprob: -6.051151752471924
    6. ')' → logprob: -7.926151752471924
    7. ''à' → logprob: -8.426152229309082
    8. '```' → logprob: -8.676152229309082
    9. ' ' → logprob: -9.051152229309082
    10. ' ' → logprob: -9.051152229309082

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029855892062187195
    2. ' ' → logprob: -3.529855966567993
    3. 'N' → logprob: -9.529855728149414
    4. ' N' → logprob: -10.404855728149414
    5. '1' → logprob: -13.904855728149414
    6. ' ' → logprob: -14.654855728149414
    7. '```' → logprob: -14.904855728149414
    8. '...' → logprob: -15.654855728149414
    9. '10' → logprob: -15.904855728149414
    10. 'n' → logprob: -16.967355728149414

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -15.625036239624023
    4. 'N' → logprob: -15.875036239624023
    5. '1' → logprob: -17.125036239624023
    6. '۰' → logprob: -17.687536239624023
    7. ' ' → logprob: -17.750036239624023
    8. '`' → logprob: -18.000036239624023
    9. '
' → logprob: -18.437536239624023
    10. ' ' → logprob: -18.562536239624023

Token 399: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45168453454971313
    2. ')' → logprob: -2.0766844749450684
    3. ':' → logprob: -2.0766844749450684
    4. '   ' → logprob: -2.8266844749450684
    5. ',' → logprob: -3.9516844749450684
    6. 'def' → logprob: -4.326684474945068
    7. '):' → logprob: -5.326684474945068
    8. ' (' → logprob: -5.826684474945068
    9. '#' → logprob: -6.076684474945068
    10. '(' → logprob: -6.076684474945068

Token 400: 'ret' (ID: 3431)
  Prédit: ' aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aller' → logprob: -1.1048369407653809
    2. 'aller' → logprob: -1.7298369407653809
    3. ' ' → logprob: -1.9798369407653809
    4. ')' → logprob: -2.229836940765381
    5. ' retour' → logprob: -2.229836940765381
    6. '0' → logprob: -2.604836940765381
    7. ' N' → logprob: -3.229836940765381
    8. 'N' → logprob: -4.604836940765381
    9. ' return' → logprob: -6.104836940765381
    10. ' (' → logprob: -6.354836940765381

Token 401: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.5877149701118469
    2. 'urn' → logprob: -0.9627149701118469
    3. ')' → logprob: -2.837714910507202
    4. 'ourn' → logprob: -6.587715148925781
    5. '),' → logprob: -6.837715148925781
    6. ' )' → logprob: -8.587715148925781
    7. 'ur' → logprob: -8.587715148925781
    8. 'u' → logprob: -8.712715148925781
    9. '   ' → logprob: -8.962715148925781
    10. '))' → logprob: -9.212715148925781

Token 402: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3491402864456177
    2. ').' → logprob: -1.2241402864456177
    3. ')
' → logprob: -8.599140167236328
    4. '.' → logprob: -8.974140167236328
    5. ' )' → logprob: -9.349140167236328
    6. '):' → logprob: -9.724140167236328
    7. '),' → logprob: -9.974140167236328
    8. ').
' → logprob: -10.349140167236328
    9. '   ' → logprob: -11.099140167236328
    10. 'e' → logprob: -11.224140167236328

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08185549080371857
    2. '    
' → logprob: -2.706855535507202
    3. 'def' → logprob: -5.581855297088623
    4. '
' → logprob: -5.706855297088623
    5. '\n' → logprob: -6.081855297088623
    6. '    
    
' → logprob: -7.206855297088623
    7. '    

' → logprob: -8.331855773925781
    8. '  
' → logprob: -8.456855773925781
    9. '\' → logprob: -8.581855773925781
    10. '   
' → logprob: -8.831855773925781

Token 404: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1127466931939125
    2. '    
' → logprob: -2.3627467155456543
    3. '\n' → logprob: -5.362746715545654
    4. '\' → logprob: -6.737746715545654
    5. 'def' → logprob: -6.737746715545654
    6. '    
    
' → logprob: -6.862746715545654
    7. '
' → logprob: -6.987746715545654
    8. '   
' → logprob: -7.487746715545654
    9. ':' → logprob: -7.612746715545654
    10. ' 
' → logprob: -7.612746715545654

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28701096773147583
    2. '    
' → logprob: -1.412010908126831
    3. '
' → logprob: -5.53701114654541
    4. '    
    
' → logprob: -7.28701114654541
    5. '    ' → logprob: -7.66201114654541
    6. 'def' → logprob: -8.41201114654541
    7. ' 
' → logprob: -8.91201114654541
    8. '

' → logprob: -9.41201114654541
    9. '     
' → logprob: -9.78701114654541
    10. '   
' → logprob: -9.78701114654541

Token 406: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08130284398794174
    2. '    
' → logprob: -2.9563028812408447
    3. '
' → logprob: -4.581302642822266
    4. 'def' → logprob: -4.706302642822266
    5. '#' (adapté à ' #') → logprob: -6.331302642822266
    6. '   
' → logprob: -7.081302642822266
    7. ' 
' → logprob: -7.581302642822266
    8. 'from' → logprob: -7.581302642822266
    9. '  
' → logprob: -7.706302642822266
    10. '    
    
' → logprob: -7.956302642822266

Token 407: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12767405807971954
    2. 'max' → logprob: -3.877674102783203
    3. 'for' → logprob: -4.127674102783203
    4. ' for' → logprob: -4.502674102783203
    5. 'def' → logprob: -4.502674102783203
    6. ' max' → logprob: -4.627674102783203
    7. '#' → logprob: -4.752674102783203
    8. ' #' → logprob: -5.002674102783203
    9. '    
' → logprob: -5.002674102783203
    10. '
' → logprob: -5.127674102783203

Token 408: ' vérifier' (ID: 93671)
  Prédit: ' cela'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cela' → logprob: -1.719109296798706
    2. ' continuer' → logprob: -2.219109296798706
    3. ' la' → logprob: -2.344109296798706
    4. 'l' → logprob: -2.594109296798706
    5. ' vérifier' → logprob: -2.719109296798706
    6. 'impl' → logprob: -2.844109296798706
    7. ' ce' → logprob: -3.094109296798706
    8. ' l' → logprob: -3.344109296798706
    9. ' éviter' → logprob: -3.469109296798706
    10. ' optimiser' → logprob: -3.719109296798706

Token 409: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0550590753555298
    2. ' l' → logprob: -1.8050590753555298
    3. ' ' → logprob: -1.9300590753555298
    4. '_' → logprob: -2.5550589561462402
    5. 'l' → logprob: -3.3050589561462402
    6. ' aller' → logprob: -3.3050589561462402
    7. ' i' → logprob: -3.4300589561462402
    8. ' le' → logprob: -3.5550589561462402
    9. 'la' → logprob: -3.6800589561462402
    10. 'le' → logprob: -4.05505895614624

Token 410: ' connect' (ID: 4837)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4919102191925049
    2. 'i' → logprob: -1.8669102191925049
    3. ' direction' → logprob: -2.491910219192505
    4. ' traversal' → logprob: -2.491910219192505
    5. 's' → logprob: -3.241910219192505
    6. 'distance' → logprob: -3.366910219192505
    7. 'direction' → logprob: -3.616910219192505
    8. ' distance' → logprob: -3.866910219192505
    9. ' ' → logprob: -3.991910219192505
    10. ' trajet' → logprob: -4.116909980773926

Token 411: 'ivité' (ID: 73445)
  Prédit: 'ivité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivité' → logprob: -0.006816600915044546
    2. 'iv' → logprob: -5.881816387176514
    3. 'ivity' → logprob: -6.131816387176514
    4. 'ion' → logprob: -6.631816387176514
    5. 'ivit' → logprob: -7.631816387176514
    6. 'ité' → logprob: -11.006816864013672
    7. 'é' → logprob: -12.506816864013672
    8. '#' → logprob: -13.381816864013672
    9. 'itiv' → logprob: -13.381816864013672
    10. 'ividad' → logprob: -13.506816864013672

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001843324746005237
    2. ' entre' → logprob: -7.626843452453613
    3. 'du' → logprob: -8.001843452453613
    4. ' ,' → logprob: -8.376843452453613
    5. ',
' → logprob: -8.626843452453613
    6. ' du' → logprob: -9.001843452453613
    7. ' between' → logprob: -9.626843452453613
    8. 'entre' → logprob: -9.751843452453613
    9. 'de' → logprob: -9.876843452453613
    10. '#' → logprob: -10.001843452453613

Token 413: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.17261455953121185
    2. '#' → logprob: -3.297614574432373
    3. 'on' → logprob: -3.547614574432373
    4. 'def' → logprob: -3.797614574432373
    5. '   ' → logprob: -3.922614574432373
    6. ' il' → logprob: -4.047614574432373
    7. ' #' → logprob: -4.422614574432373
    8. ' nous' → logprob: -4.922614574432373
    9. ' we' → logprob: -5.797614574432373
    10. ' ' → logprob: -6.047614574432373

Token 414: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.11545077711343765
    2. 'pe' → logprob: -3.115450859069824
    3. ' peut' → logprob: -3.740450859069824
    4. 'util' → logprob: -3.865450859069824
    5. ' utiliser' → logprob: -5.615450859069824
    6. 'effect' → logprob: -5.990450859069824
    7. ' pourra' → logprob: -5.990450859069824
    8. ' utilise' → logprob: -6.115450859069824
    9. 'can' → logprob: -6.740450859069824
    10. ' can' → logprob: -6.990450859069824

Token 415: ' construire' (ID: 92473)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.10052409023046494
    2. 'util' → logprob: -2.9755241870880127
    3. ' effectuer' → logprob: -3.4755241870880127
    4. 'faire' → logprob: -5.725523948669434
    5. 'impl' → logprob: -5.850523948669434
    6. ' continuer' → logprob: -6.600523948669434
    7. ' faire' → logprob: -6.725523948669434
    8. 'effect' → logprob: -6.725523948669434
    9. ' parcour' → logprob: -6.975523948669434
    10. ''utiliser' → logprob: -7.350523948669434

Token 416: ' le' (ID: 505)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.23217074573040009
    2. ' un' → logprob: -2.482170820236206
    3. ' des' → logprob: -2.482170820236206
    4. 'de' → logprob: -5.107170581817627
    5. ' two' → logprob: -5.232170581817627
    6. ' une' → logprob: -5.232170581817627
    7. ' le' → logprob: -5.482170581817627
    8. 'un' → logprob: -5.482170581817627
    9. 'des' → logprob: -5.732170581817627
    10. ' ' → logprob: -5.857170581817627

Token 417: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.9364778399467468
    2. 'graph' → logprob: -1.4364778995513916
    3. 'gr' → logprob: -1.5614778995513916
    4. ' graph' → logprob: -1.9364778995513916
    5. ' adjacency' → logprob: -4.6864776611328125
    6. 'adj' → logprob: -6.5614776611328125
    7. 's' → logprob: -6.5614776611328125
    8. ' tableau' → logprob: -7.1864776611328125
    9. 'def' → logprob: -7.5614776611328125
    10. 'liste' → logprob: -7.8114776611328125

Token 418: 'he' (ID: 273)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.03342217952013016
    2. 'rap' → logprob: -4.033421993255615
    3. 'aph' → logprob: -4.533421993255615
    4. 'aphe' → logprob: -5.783421993255615
    5. 'raf' → logprob: -7.408421993255615
    6. 'r' → logprob: -7.783421993255615
    7. 'def' → logprob: -9.283422470092773
    8. 'ap' → logprob: -10.408422470092773
    9. '#' → logprob: -10.783422470092773
    10. 'ph' → logprob: -11.033422470092773

Token 419: ' orient' (ID: 13198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2309150695800781
    2. ' =' → logprob: -1.2309150695800781
    3. ',' → logprob: -1.8559150695800781
    4. ' et' → logprob: -2.730915069580078
    5. '.' → logprob: -3.355915069580078
    6. ' en' → logprob: -3.355915069580078
    7. ' ' → logprob: -3.855915069580078
    8. 'adj' → logprob: -4.355915069580078
    9. ' complet' → logprob: -4.730915069580078
    10. ' adjacency' → logprob: -4.730915069580078

Token 420: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005516022793017328
    2. 'ée' → logprob: -8.375551223754883
    3. '   ' → logprob: -8.875551223754883
    4. 'ed' → logprob: -10.500551223754883
    5. '=' → logprob: -10.625551223754883
    6. 'e' → logprob: -11.375551223754883
    7. 'É' → logprob: -11.375551223754883
    8. 'è' → logprob: -11.500551223754883
    9. 'éd' → logprob: -11.500551223754883
    10. 'édé' → logprob: -11.875551223754883

Token 421: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8849526643753052
    2. ' en' → logprob: -1.6349526643753052
    3. ' et' → logprob: -2.2599525451660156
    4. '.' → logprob: -3.0099525451660156
    5. ' ' → logprob: -3.2599525451660156
    6. ' de' → logprob: -3.6349525451660156
    7. ' =' → logprob: -3.6349525451660156
    8. ' des' → logprob: -4.009952545166016
    9. ' sous' → logprob: -4.134952545166016
    10. ' complet' → logprob: -4.134952545166016

Token 422: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.17310453951358795
    2. 'une' → logprob: -3.1731045246124268
    3. 'la' → logprob: -3.6731045246124268
    4. 'de' → logprob: -3.9231045246124268
    5. 'cha' → logprob: -4.173104763031006
    6. ' les' → logprob: -4.423104763031006
    7. 'both' → logprob: -4.923104763031006
    8. ' chaque' → logprob: -5.048104763031006
    9. 'le' → logprob: -5.173104763031006
    10. 'sens' → logprob: -5.423104763031006

Token 423: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.22185833752155304
    2. ' deux' → logprob: -1.8468583822250366
    3. 'sens' → logprob: -3.846858263015747
    4. 'dire' → logprob: -4.971858501434326
    5. ' sens' → logprob: -5.721858501434326
    6. ' two' → logprob: -6.721858501434326
    7. 'def' → logprob: -6.721858501434326
    8. '#' → logprob: -6.846858501434326
    9. 'two' → logprob: -6.846858501434326
    10. '2' → logprob: -6.971858501434326

Token 424: ' sens' (ID: 5050)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.8838534355163574
    2. 'dire' → logprob: -1.0088534355163574
    3. 'sens' → logprob: -1.7588534355163574
    4. ' sens' → logprob: -3.0088534355163574
    5. 'direction' → logprob: -8.133853912353516
    6. ' ' → logprob: -9.383853912353516
    7. '#' → logprob: -9.883853912353516
    8. 'direct' → logprob: -10.633853912353516
    9. 'def' → logprob: -10.883853912353516
    10. 's' → logprob: -10.883853912353516

Token 425: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3656703233718872
    2. ' et' → logprob: -1.9906703233718872
    3. '.' → logprob: -2.3656702041625977
    4. '   ' → logprob: -3.4906702041625977
    5. 'et' → logprob: -4.740670204162598
    6. ':' → logprob: -4.865670204162598
    7. ' puis' → logprob: -5.115670204162598
    8. ' ' → logprob: -5.865670204162598
    9. '
' → logprob: -6.115670204162598
    10. ')' → logprob: -6.240670204162598

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10277728736400604
    2. '    
' → logprob: -2.4777772426605225
    3. '
' → logprob: -4.727777481079102
    4. 'def' → logprob: -6.477777481079102
    5. '    ' → logprob: -6.727777481079102
    6. ' 
' → logprob: -7.602777481079102
    7. '#' → logprob: -8.602777481079102
    8. '\n' → logprob: -8.727777481079102
    9. '    
    
' → logprob: -8.852777481079102
    10. ',' → logprob: -8.977777481079102

Token 427: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06183848902583122
    2. '    
' → logprob: -3.936838388442993
    3. '
' → logprob: -4.936838626861572
    4. '    ' → logprob: -5.436838626861572
    5. 'for' → logprob: -5.561838626861572
    6. ' ' → logprob: -5.686838626861572
    7. ' for' → logprob: -5.811838626861572
    8. 'def' → logprob: -5.811838626861572
    9. ')' → logprob: -6.311838626861572
    10. '#' (adapté à ' #') → logprob: -6.811838626861572

Token 428: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3975486755371094
    2. '```' → logprob: -1.6475486755371094
    3. '#' → logprob: -2.2725486755371094
    4. 'for' → logprob: -2.3975486755371094
    5. '    
' → logprob: -2.6475486755371094
    6. ' for' → logprob: -2.6475486755371094
    7. 'def' → logprob: -2.7725486755371094
    8. '
' → logprob: -3.1475486755371094
    9. ' #' → logprob: -3.2725486755371094
    10. 'import' → logprob: -4.397548675537109

Token 429: ' Ar' (ID: 1754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.018850564956665
    2. ' range' → logprob: -1.018850564956665
    3. 'range' → logprob: -2.268850564956665
    4. ' for' → logprob: -2.393850564956665
    5. ' aller' → logprob: -3.268850564956665
    6. 'def' → logprob: -4.643850326538086
    7. 'lambda' → logprob: -5.643850326538086
    8. 'all' → logprob: -5.893850326538086
    9. '#' → logprob: -5.893850326538086
    10. ' lambda' → logprob: -6.268850326538086

Token 430: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.01729876548051834
    2. 'c' → logprob: -4.767298698425293
    3. 'r' → logprob: -5.267298698425293
    4. 'êtes' → logprob: -5.892298698425293
    5. 'e' → logprob: -8.892298698425293
    6. 'gs' → logprob: -9.517298698425293
    7. '=' → logprob: -9.892298698425293
    8. 'g' → logprob: -10.017298698425293
    9. 'bres' → logprob: -10.142298698425293
    10. 'rows' → logprob: -10.392298698425293

Token 431: ' aller' (ID: 18383)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -1.0996208190917969
    2. ' allant' → logprob: -1.8496208190917969
    3. ' entre' → logprob: -2.099620819091797
    4. ' vers' → logprob: -2.724620819091797
    5. ' dans' → logprob: -2.849620819091797
    6. ' de' → logprob: -3.099620819091797
    7. ' aller' → logprob: -3.474620819091797
    8. ' possibles' → logprob: -3.849620819091797
    9. '[i' → logprob: -3.974620819091797
    10. '   ' → logprob: -4.349620819091797

Token 432: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8790934085845947
    2. '   ' → logprob: -1.3790934085845947
    3. ' =' → logprob: -2.0040934085845947
    4. ',' → logprob: -2.6290934085845947
    5. '=' → logprob: -2.7540934085845947
    6. ' ' → logprob: -3.8790934085845947
    7. 's' → logprob: -5.254093170166016
    8. '[' → logprob: -5.504093170166016
    9. '#' → logprob: -5.754093170166016
    10. '.' → logprob: -5.754093170166016

Token 433: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4805898368358612
    2. ' for' → logprob: -1.6055898666381836
    3. 'from' → logprob: -2.2305898666381836
    4. ' {' → logprob: -4.230589866638184
    5. 'range' → logprob: -4.480589866638184
    6. '[i' → logprob: -4.855589866638184
    7. '{' → logprob: -4.980589866638184
    8. ' i' → logprob: -4.980589866638184
    9. ' range' → logprob: -5.355589866638184
    10. '   ' → logprob: -5.355589866638184

Token 434: ' ->' (ID: 2747)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2932772934436798
    2. ' +' → logprob: -1.5432772636413574
    3. ' <' → logprob: -3.7932772636413574
    4. ' in' → logprob: -4.668277263641357
    5. '<' → logprob: -5.918277263641357
    6. ' ' → logprob: -6.543277263641357
    7. ' for' → logprob: -6.793277263641357
    8. ',' → logprob: -7.043277263641357
    9. ' ->' → logprob: -7.418277263641357
    10. 'for' → logprob: -7.668277263641357

Token 435: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2091599404811859
    2. ' i' → logprob: -1.7091599702835083
    3. 'j' → logprob: -5.084159851074219
    4. ' j' → logprob: -6.584159851074219
    5. ' (' → logprob: -10.334159851074219
    6. '(i' → logprob: -10.584159851074219
    7. ' ' → logprob: -10.584159851074219
    8. '   ' → logprob: -11.084159851074219
    9. ' ' → logprob: -11.709159851074219
    10. '	i' → logprob: -11.709159851074219

Token 436: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.821995735168457
    2. '   ' → logprob: -1.071995735168457
    3. ' j' → logprob: -2.571995735168457
    4. ',' → logprob: -2.821995735168457
    5. ' for' → logprob: -3.821995735168457
    6. ' if' → logprob: -3.946995735168457
    7. ' (' → logprob: -4.821995735168457
    8. ' avec' → logprob: -5.196995735168457
    9. ' s' → logprob: -5.321995735168457
    10. 's' → logprob: -5.321995735168457

Token 437: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10567647963762283
    2. 'j' → logprob: -2.3556764125823975
    3. ' i' → logprob: -5.605676651000977
    4. 'i' → logprob: -7.730676651000977
    5. ' ' → logprob: -8.105676651000977
    6. 'abs' → logprob: -8.230676651000977
    7. ' abs' → logprob: -8.230676651000977
    8. '   ' → logprob: -8.980676651000977
    9. ' (' → logprob: -9.355676651000977
    10. ' ' → logprob: -9.480676651000977

Token 438: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3776562511920929
    2. '<' → logprob: -1.5026562213897705
    3. '+' → logprob: -2.5026562213897705
    4. ' +' → logprob: -4.75265645980835
    5. ' ' → logprob: -7.75265645980835
    6. ' j' → logprob: -8.377655982971191
    7. '<i' → logprob: -8.627655982971191
    8. ' ' → logprob: -9.502655982971191
    9. '+j' → logprob: -9.502655982971191
    10. 'j' → logprob: -9.752655982971191

Token 439: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11295211315155029
    2. ' j' → logprob: -2.23795223236084
    3. '	j' → logprob: -9.36295223236084
    4. '<|end|>' → logprob: -10.86295223236084
    5. '<|end|>' → logprob: -12.11295223236084
    6. '=j' → logprob: -12.36295223236084
    7. '+' → logprob: -12.48795223236084
    8. ' ' → logprob: -13.11295223236084
    9. '   ' → logprob: -13.86295223236084
    10. '[j' → logprob: -13.86295223236084

Token 440: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8175945281982422
    2. '   ' → logprob: -1.1925945281982422
    3. ' et' → logprob: -2.067594528198242
    4. ' (' → logprob: -3.317594528198242
    5. ' for' → logprob: -4.192594528198242
    6. ' and' → logprob: -4.317594528198242
    7. ' if' → logprob: -4.317594528198242
    8. ' ' → logprob: -4.442594528198242
    9. '    ' → logprob: -5.192594528198242
    10. ' s' → logprob: -5.567594528198242

Token 441: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4128219485282898
    2. 'min' → logprob: -1.6628220081329346
    3. ' abs' → logprob: -2.7878220081329346
    4. ' d' → logprob: -3.1628220081329346
    5. 'abs' → logprob: -4.2878217697143555
    6. 'd' → logprob: -4.4128217697143555
    7. ' (' → logprob: -4.9128217697143555
    8. '10' → logprob: -5.5378217697143555
    9. ' ' → logprob: -5.6628217697143555
    10. ' j' → logprob: -6.4128217697143555

Token 442: '10' (ID: 702)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.559260368347168
    2. '10' → logprob: -2.309260368347168
    3. '(j' → logprob: -2.309260368347168
    4. 'd' → logprob: -2.934260368347168
    5. ' abs' → logprob: -2.934260368347168
    6. '(abs' → logprob: -3.184260368347168
    7. '(d' → logprob: -3.434260368347168
    8. 'min' → logprob: -3.809260368347168
    9. ' (' → logprob: -4.559260368347168
    10. 'j' → logprob: -4.809260368347168

Token 443: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023271916434168816
    2. ' *' → logprob: -4.1482720375061035
    3. '*(' → logprob: -5.6482720375061035
    4. '*j' → logprob: -5.7732720375061035
    5. '*m' → logprob: -9.023271560668945
    6. ' <=' → logprob: -9.273271560668945
    7. '*i' → logprob: -9.523271560668945
    8. '[j' → logprob: -9.773271560668945
    9. '<=' → logprob: -9.773271560668945
    10. '*[' → logprob: -9.898271560668945

Token 444: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.030109019950032234
    2. '(j' → logprob: -3.78010892868042
    3. ' j' → logprob: -5.28010892868042
    4. 'abs' → logprob: -6.65510892868042
    5. ' (' → logprob: -8.530109405517578
    6. ' abs' → logprob: -8.780109405517578
    7. '(abs' → logprob: -10.155109405517578
    8. '[j' → logprob: -10.780109405517578
    9. '	j' → logprob: -11.655109405517578
    10. 'min' → logprob: -11.905109405517578

Token 445: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.376444011926651
    2. '-' → logprob: -1.3764439821243286
    3. '-i' → logprob: -2.876444101333618
    4. '-j' → logprob: -5.501443862915039
    5. ')' → logprob: -7.376443862915039
    6. '<=' → logprob: -10.001443862915039
    7. ' <=' → logprob: -10.751443862915039
    8. '-)' → logprob: -10.751443862915039
    9. ')<=' → logprob: -11.126443862915039
    10. ' ' → logprob: -11.251443862915039

Token 446: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044459011405706406
    2. ')<=' → logprob: -5.629446029663086
    3. '<=' → logprob: -7.629446029663086
    4. ' )' → logprob: -8.254446029663086
    5. ' <=' → logprob: -9.754446029663086
    6. '')' → logprob: -10.629446029663086
    7. '[' → logprob: -12.379446029663086
    8. '")' → logprob: -12.754446029663086
    9. ')<' → logprob: -13.879446029663086
    10. '*)' → logprob: -13.879446029663086

Token 447: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22545258700847626
    2. '<=' → logprob: -1.6004525423049927
    3. ')<=' → logprob: -11.350452423095703
    4. ' ' → logprob: -11.975452423095703
    5. ' ' → logprob: -12.225452423095703
    6. ')' → logprob: -12.350452423095703
    7. ']<=' → logprob: -12.850452423095703
    8. ' ≤' → logprob: -13.225452423095703
    9. '=' → logprob: -13.600452423095703
    10. '<' → logprob: -14.350452423095703

Token 448: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023248974233865738
    2. ' min' → logprob: -3.7732489109039307
    3. 'd' → logprob: -14.273248672485352
    4. '	min' → logprob: -14.273248672485352
    5. '   ' → logprob: -14.898248672485352
    6. '(min' → logprob: -15.148248672485352
    7. 'minimum' → logprob: -15.148248672485352
    8. '[min' → logprob: -15.273248672485352
    9. '_min' → logprob: -15.898248672485352
    10. 'mini' → logprob: -15.898248672485352

Token 449: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16032101213932037
    2. '(' → logprob: -1.9103209972381592
    3. ' (' → logprob: -9.410321235656738
    4. '(
' → logprob: -11.285321235656738
    5. 'd' → logprob: -13.660321235656738
    6. '((' → logprob: -15.160321235656738
    7. '(min' → logprob: -15.160321235656738
    8. '(i' → logprob: -16.285320281982422
    9. '(

' → logprob: -16.285320281982422
    10. '(space' → logprob: -16.285320281982422

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026300468016415834
    2. '[' → logprob: -8.750263214111328
    3. '[j' → logprob: -9.250263214111328
    4. ' [' → logprob: -12.375263214111328
    5. '[
' → logprob: -12.875263214111328
    6. ')' → logprob: -14.500263214111328
    7. 'i' → logprob: -15.250263214111328
    8. '[I' → logprob: -15.625263214111328
    9. '   ' → logprob: -16.375263214111328
    10. ')[' → logprob: -16.500263214111328

Token 451: '],' (ID: 2155)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7492636442184448
    2. '],' → logprob: -0.9992636442184448
    3. '[i' → logprob: -2.4992637634277344
    4. ',' → logprob: -2.7492637634277344
    5. '[' → logprob: -4.999263763427734
    6. ',j' → logprob: -5.624263763427734
    7. '),' → logprob: -6.999263763427734
    8. '],[' → logprob: -7.749263763427734
    9. ' ,' → logprob: -7.874263763427734
    10. '[
' → logprob: -7.874263763427734

Token 452: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5232282876968384
    2. 'd' → logprob: -0.8982282876968384
    3. '10' → logprob: -9.773228645324707
    4. ' ' → logprob: -10.398228645324707
    5. ' ' → logprob: -11.273228645324707
    6. '	d' → logprob: -13.523228645324707
    7. ')' → logprob: -13.898228645324707
    8. '   ' → logprob: -14.148228645324707
    9. ',' → logprob: -14.773228645324707
    10. '```' → logprob: -14.898228645324707

Token 453: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001732663222355768
    2. '[i' → logprob: -9.125173568725586
    3. 'j' → logprob: -10.000173568725586
    4. '[' → logprob: -11.500173568725586
    5. ']' → logprob: -12.500173568725586
    6. ' [' → logprob: -13.625173568725586
    7. '   ' → logprob: -14.000173568725586
    8. '[
' → logprob: -14.125173568725586
    9. '],' → logprob: -14.500173568725586
    10. ' ' → logprob: -15.250173568725586

Token 454: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0627550482749939
    2. ')' → logprob: -2.8127551078796387
    3. '])
' → logprob: -7.937755107879639
    4. ')
' → logprob: -9.31275463104248
    5. ')])' → logprob: -9.43775463104248
    6. ')]' → logprob: -10.06275463104248
    7. '))' → logprob: -10.43775463104248
    8. ']),' → logprob: -10.56275463104248
    9. '   ' → logprob: -10.93775463104248
    10. '})' → logprob: -11.06275463104248

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013618605211377144
    2. ')' → logprob: -4.888618469238281
    3. '#' → logprob: -6.388618469238281
    4. '\n' → logprob: -6.638618469238281
    5. '    
' → logprob: -7.388618469238281
    6. '
' → logprob: -7.388618469238281
    7. ',' → logprob: -7.888618469238281
    8. 'def' → logprob: -8.138618469238281
    9. '  
' → logprob: -8.888618469238281
    10. '.' → logprob: -9.138618469238281

Token 456: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012722006998956203
    2. '#' (adapté à ' #') → logprob: -4.762722015380859
    3. '
' → logprob: -6.512722015380859
    4. '    
' → logprob: -6.762722015380859
    5. '#
' → logprob: -7.887722015380859
    6. ')' → logprob: -8.26272201538086
    7. 'for' → logprob: -9.01272201538086
    8. ',' → logprob: -9.01272201538086
    9. '\n' → logprob: -9.38772201538086
    10. 'def' → logprob: -9.51272201538086

Token 457: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02233739383518696
    2. '#' → logprob: -4.022337436676025
    3. '
' → logprob: -6.272337436676025
    4. 'def' → logprob: -7.772337436676025
    5. '\n' → logprob: -8.022336959838867
    6. '    
' → logprob: -8.147336959838867
    7. '#
' → logprob: -8.272336959838867
    8. ')' → logprob: -8.522336959838867
    9. ',' → logprob: -8.897336959838867
    10. ' ' → logprob: -9.397336959838867

Token 458: ' Ar' (ID: 1754)
  Prédit: ' Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ar' → logprob: -0.8618310689926147
    2. 'Ar' → logprob: -0.9868310689926147
    3. '#' → logprob: -1.7368310689926147
    4. ' #' → logprob: -4.361831188201904
    5. ' arcs' → logprob: -4.861831188201904
    6. ' ' → logprob: -5.736831188201904
    7. ' ' → logprob: -6.611831188201904
    8. 'def' → logprob: -7.361831188201904
    9. ' j' → logprob: -7.611831188201904
    10. '   ' → logprob: -7.861831188201904

Token 459: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0004242395516484976
    2. 'c' → logprob: -7.875424385070801
    3. '```' → logprob: -11.3754243850708
    4. 'cts' → logprob: -12.5004243850708
    5. '\' → logprob: -12.7504243850708
    6. '``' → logprob: -13.0004243850708
    7. '[' → logprob: -13.6254243850708
    8. 'Cs' → logprob: -13.6254243850708
    9. '>' → logprob: -13.7504243850708
    10. 'ç' → logprob: -13.8754243850708

Token 460: ' retour' (ID: 30714)
  Prédit: ' retour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retour' → logprob: -0.18608568608760834
    2. ' aller' → logprob: -2.1860857009887695
    3. 'ret' → logprob: -3.5610857009887695
    4. 'aller' → logprob: -4.6860857009887695
    5. ' return' → logprob: -5.1860857009887695
    6. ' revenir' → logprob: -5.1860857009887695
    7. ' retourner' → logprob: -5.8110857009887695
    8. ' ret' → logprob: -6.9360857009887695
    9. 'return' → logprob: -7.0610857009887695
    10. ' ' → logprob: -7.0610857009887695

Token 461: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.04897304251790047
    2. ':' → logprob: -3.0489730834960938
    3. ' =' → logprob: -8.673973083496094
    4. ' ' → logprob: -10.048973083496094
    5. 'def' → logprob: -10.048973083496094
    6. '   ' → logprob: -10.173973083496094
    7. ' ' → logprob: -10.298973083496094
    8. '#' → logprob: -10.923973083496094
    9. ' #' → logprob: -12.298973083496094
    10. ',' → logprob: -12.673973083496094

Token 462: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15232183039188385
    2. ' j' → logprob: -2.4023218154907227
    3. 'i' → logprob: -3.1523218154907227
    4. 'j' → logprob: -5.152321815490723
    5. ' ' → logprob: -7.277321815490723
    6. '   ' → logprob: -8.527321815490723
    7. ' (' → logprob: -8.527321815490723
    8. ' lambda' → logprob: -8.902321815490723
    9. 'lambda' → logprob: -9.027321815490723
    10. '[i' → logprob: -9.277321815490723

Token 463: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.10466081649065018
    2. '->' → logprob: -2.354660749435425
    3. ' >' → logprob: -6.104660987854004
    4. '>' → logprob: -6.479660987854004
    5. ' <' → logprob: -8.104660987854004
    6. '-' → logprob: -8.729660987854004
    7. '<' → logprob: -9.354660987854004
    8. ' -' → logprob: -9.979660987854004
    9. ' <-' → logprob: -10.104660987854004
    10. ' ' → logprob: -11.479660987854004

Token 464: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20144569873809814
    2. 'i' → logprob: -1.7014456987380981
    3. '	i' → logprob: -10.951445579528809
    4. ' ' → logprob: -12.076445579528809
    5. ' ' → logprob: -12.201445579528809
    6. ' j' → logprob: -12.826445579528809
    7. 'j' → logprob: -13.951445579528809
    8. '_i' → logprob: -15.576445579528809
    9. ',i' → logprob: -16.076446533203125
    10. '   ' → logprob: -16.701446533203125

Token 465: ' avec' (ID: 3937)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.982006311416626
    2. ' avec' → logprob: -1.107006311416626
    3. '<|end|>' → logprob: -1.732006311416626
    4. ' if' → logprob: -2.732006311416626
    5. ' ' → logprob: -3.607006311416626
    6. 'with' → logprob: -4.232006072998047
    7. ' (' → logprob: -5.482006072998047
    8. ')' → logprob: -6.107006072998047
    9. ' ' → logprob: -6.607006072998047
    10. ',' → logprob: -7.232006072998047

Token 466: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8280465602874756
    2. ' j' → logprob: -1.0780465602874756
    3. 'i' → logprob: -2.2030465602874756
    4. ' i' → logprob: -2.2030465602874756
    5. '10' → logprob: -6.453046798706055
    6. ' ' → logprob: -8.453046798706055
    7. ' (' → logprob: -10.703046798706055
    8. '0' → logprob: -11.328046798706055
    9. '(i' → logprob: -11.328046798706055
    10. 'abs' → logprob: -11.390546798706055

Token 467: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08366041630506516
    2. '>' → logprob: -2.833660364151001
    3. ' <' → logprob: -4.08366060256958
    4. ' >' → logprob: -5.45866060256958
    5. '<i' → logprob: -8.583660125732422
    6. ')' → logprob: -9.958660125732422
    7. '><' → logprob: -10.208660125732422
    8. ')<' → logprob: -11.583660125732422
    9. '<|end|>' → logprob: -12.083660125732422
    10. ')>' → logprob: -12.083660125732422

Token 468: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014025058771949261
    2. ' j' → logprob: -8.875140190124512
    3. 'i' → logprob: -15.125140190124512
    4. '	j' → logprob: -16.500141143798828
    5. '<|end|>' → logprob: -18.000141143798828
    6. ' ' → logprob: -18.625141143798828
    7. '```' → logprob: -18.750141143798828
    8. ' ' → logprob: -18.875141143798828
    9. '_j' → logprob: -19.500141143798828
    10. '   ' → logprob: -19.750141143798828

Token 469: ' même' (ID: 9679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8581185340881348
    2. ' if' → logprob: -0.8581185340881348
    3. '<|end|>' → logprob: -2.1081185340881348
    4. 'if' → logprob: -4.233118534088135
    5. '   ' → logprob: -5.358118534088135
    6. ' si' → logprob: -5.483118534088135
    7. '<|end|>' → logprob: -6.358118534088135
    8. ',' → logprob: -6.733118534088135
    9. ' )' → logprob: -7.108118534088135
    10. ':' → logprob: -7.858118534088135

Token 470: ' condition' (ID: 7060)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3899314403533936
    2. '<|end|>' → logprob: -1.5149314403533936
    3. 'if' → logprob: -2.1399314403533936
    4. ' si' → logprob: -2.2649314403533936
    5. ' et' → logprob: -2.7649314403533936
    6. '<=' → logprob: -3.2649314403533936
    7. 'and' → logprob: -3.6399314403533936
    8. '<' → logprob: -3.8899314403533936
    9. ')' → logprob: -4.014931678771973
    10. '   ' → logprob: -4.014931678771973

Token 471: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06994643062353134
    2. '    
' → logprob: -3.819946527481079
    3. '\n' → logprob: -3.944946527481079
    4. ')' → logprob: -4.8199462890625
    5. '.' → logprob: -5.4449462890625
    6. '
' → logprob: -5.5699462890625
    7. ',' → logprob: -5.6949462890625
    8. ':' → logprob: -6.4449462890625
    9. '  
' → logprob: -6.4449462890625
    10. 'def' → logprob: -7.4449462890625

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0124862315133214
    2. '    
' → logprob: -4.637486457824707
    3. '<|end|>' → logprob: -6.262486457824707
    4. 'def' → logprob: -7.512486457824707
    5. '<|end|>' → logprob: -9.637486457824707
    6. '    ' → logprob: -10.262486457824707
    7. '    
    
' → logprob: -10.262486457824707
    8. ')' → logprob: -10.387486457824707
    9. '\' → logprob: -10.887486457824707
    10. 'import' → logprob: -10.887486457824707

Token 473: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05245465412735939
    2. '    
' → logprob: -3.052454710006714
    3. '
' → logprob: -6.927454471588135
    4. 'def' → logprob: -6.927454471588135
    5. '    ' → logprob: -7.552454471588135
    6. ')' → logprob: -8.177454948425293
    7. '<|end|>' → logprob: -8.552454948425293
    8. '   
' → logprob: -9.177454948425293
    9. ' 
' → logprob: -9.302454948425293
    10. '    
    
' → logprob: -9.302454948425293

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3676435649394989
    2. '    
' → logprob: -1.2426435947418213
    3. '
' → logprob: -4.117643356323242
    4. 'def' → logprob: -6.367643356323242
    5. '    
    
' → logprob: -8.242643356323242
    6. '    ' → logprob: -8.492643356323242
    7. '<|end|>' → logprob: -9.117643356323242
    8. '        
' → logprob: -9.367643356323242
    9. ' 
' → logprob: -9.742643356323242
    10. '  
' → logprob: -10.117643356323242

Token 475: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18621402978897095
    2. '    
' → logprob: -2.311213970184326
    3. '
' → logprob: -2.686213970184326
    4. 'def' → logprob: -6.686213970184326
    5. '#' (adapté à ' #') → logprob: -7.561213970184326
    6. '   
' → logprob: -8.561214447021484
    7. '  
' → logprob: -8.811214447021484
    8. '        
' → logprob: -9.311214447021484
    9. ' 
' → logprob: -9.686214447021484
    10. '    
    
' → logprob: -9.811214447021484

Token 476: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10349671542644501
    2. '#' → logprob: -3.603496789932251
    3. 'for' → logprob: -4.353496551513672
    4. 'graph' → logprob: -4.478496551513672
    5. 'n' → logprob: -4.853496551513672
    6. ' #' → logprob: -4.978496551513672
    7. '    
' → logprob: -4.978496551513672
    8. 'def' → logprob: -5.228496551513672
    9. '
' → logprob: -5.603496551513672
    10. ' for' → logprob: -5.603496551513672

Token 477: ' faire' (ID: 8119)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09809071570634842
    2. 'i' → logprob: -2.598090648651123
    3. ' j' → logprob: -5.348090648651123
    4. ' construire' → logprob: -5.348090648651123
    5. ' continuer' → logprob: -5.973090648651123
    6. ' aller' → logprob: -6.723090648651123
    7. ' chaque' → logprob: -6.848090648651123
    8. ' la' → logprob: -7.223090648651123
    9. ' ' → logprob: -7.473090648651123
    10. ' vérifier' → logprob: -7.598090648651123

Token 478: ' cela' (ID: 17542)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4534473419189453
    2. ' ' → logprob: -2.3284473419189453
    3. ' un' → logprob: -2.7034473419189453
    4. 'i' → logprob: -2.8284473419189453
    5. ' une' → logprob: -2.9534473419189453
    6. ' chaque' → logprob: -3.8284473419189453
    7. ' j' → logprob: -4.453447341918945
    8. ' la' → logprob: -4.578447341918945
    9. ' continuer' → logprob: -4.828447341918945
    10. ' l' → logprob: -5.328447341918945

Token 479: ' efficacement' (ID: 155449)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05877026915550232
    2. ' in' → logprob: -3.308770179748535
    3. ':' → logprob: -5.058770179748535
    4. ' i' → logprob: -5.183770179748535
    5. ' ,' → logprob: -5.183770179748535
    6. 'in' → logprob: -7.058770179748535
    7. ' ' → logprob: -7.808770179748535
    8. ' dans' → logprob: -8.183770179748535
    9. ' j' → logprob: -8.558770179748535
    10. ' en' → logprob: -8.558770179748535

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016999337822198868
    2. ' ,' → logprob: -6.501699924468994
    3. ',
' → logprob: -9.501700401306152
    4. ':' → logprob: -10.001700401306152
    5. 'import' → logprob: -11.251700401306152
    6. '   ' → logprob: -11.501700401306152
    7. '#' → logprob: -11.626700401306152
    8. '<|end|>' → logprob: -11.626700401306152
    9. 'def' → logprob: -11.751700401306152
    10. 'for' → logprob: -11.751700401306152

Token 481: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7303236126899719
    2. ' for' → logprob: -0.8553236126899719
    3. ' il' → logprob: -2.980323553085327
    4. '   ' → logprob: -4.355323791503906
    5. ' nous' → logprob: -4.855323791503906
    6. 'for' → logprob: -4.980323791503906
    7. ' n' → logprob: -5.480323791503906
    8. ' pass' → logprob: -5.980323791503906
    9. ' pour' → logprob: -6.230323791503906
    10. ' ' → logprob: -6.605323791503906

Token 482: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.04299874231219292
    2. ' peut' → logprob: -4.542998790740967
    3. 'def' → logprob: -5.167998790740967
    4. ' can' → logprob: -5.292998790740967
    5. ' def' → logprob: -5.792998790740967
    6. ' ' → logprob: -5.917998790740967
    7. ' vais' → logprob: -6.167998790740967
    8. ' pourra' → logprob: -6.167998790740967
    9. ' continue' → logprob: -6.292998790740967
    10. ' for' → logprob: -7.042998790740967

Token 483: ' explo' (ID: 35916)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.5309314727783203
    2. ' parcour' → logprob: -1.4059314727783203
    3. 'util' → logprob: -2.9059314727783203
    4. 'tr' → logprob: -3.4059314727783203
    5. ' continuer' → logprob: -4.15593147277832
    6. ' construire' → logprob: -4.65593147277832
    7. 'impl' → logprob: -4.90593147277832
    8. 'for' → logprob: -5.03093147277832
    9. 'contin' → logprob: -5.15593147277832
    10. ' iter' → logprob: -5.28093147277832

Token 484: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.016598820686340332
    2. 'r' → logprob: -4.766598701477051
    3. ' iter' → logprob: -6.016598701477051
    4. 'riter' → logprob: -6.141598701477051
    5. 'o' → logprob: -6.766598701477051
    6. '```' → logprob: -8.01659870147705
    7. 'Iter' → logprob: -8.64159870147705
    8. '   ' → logprob: -8.64159870147705
    9. '#' → logprob: -8.76659870147705
    10. 'i' → logprob: -8.89159870147705

Token 485: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19643287360668182
    2. ' une' → logprob: -2.8214328289031982
    3. ' l' → logprob: -3.1964328289031982
    4. ' un' → logprob: -3.1964328289031982
    5. ' les' → logprob: -3.9464328289031982
    6. ' le' → logprob: -5.071433067321777
    7. 'la' → logprob: -5.571433067321777
    8. 'une' → logprob: -6.321433067321777
    9. 'les' → logprob: -6.571433067321777
    10. ' des' → logprob: -6.821433067321777

Token 486: ' approche' (ID: 102373)
  Prédit: ' approche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approche' → logprob: -1.0675475597381592
    2. ' double' → logprob: -1.9425475597381592
    3. 'de' → logprob: -2.192547559738159
    4. ' technique' → logprob: -2.317547559738159
    5. ' boucle' → logprob: -3.067547559738159
    6. 'double' → logprob: -3.317547559738159
    7. ' two' → logprob: -4.067547798156738
    8. ' structure' → logprob: -4.067547798156738
    9. 'appro' → logprob: -4.317547798156738
    10. 'two' → logprob: -4.317547798156738

Token 487: ' basée' (ID: 153941)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.025471806526184
    2. ' par' → logprob: -1.400471806526184
    3. 'de' → logprob: -2.0254716873168945
    4. ' gl' → logprob: -2.1504716873168945
    5. ' two' → logprob: -2.9004716873168945
    6. 'par' → logprob: -3.7754716873168945
    7. ' à' → logprob: -4.5254716873168945
    8. ' deux' → logprob: -4.5254716873168945
    9. ' double' → logprob: -5.2754716873168945
    10. ' en' → logprob: -5.4004716873168945

Token 488: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.2857661545276642
    2. 'sur' → logprob: -1.4107661247253418
    3. '_sur' → logprob: -5.410766124725342
    4. '_' → logprob: -9.7857666015625
    5. '#' → logprob: -10.7857666015625
    6. 's' → logprob: -11.4107666015625
    7. 'import' → logprob: -11.5357666015625
    8. ' on' → logprob: -12.1607666015625
    9. 'e' → logprob: -12.4107666015625
    10. '```' → logprob: -12.4107666015625

Token 489: ' les' (ID: 1341)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2435113191604614
    2. ' deux' → logprob: -1.7435113191604614
    3. 'la' → logprob: -1.9935113191604614
    4. 'l' → logprob: -2.493511199951172
    5. 'une' → logprob: -2.493511199951172
    6. ' la' → logprob: -3.243511199951172
    7. ' une' → logprob: -3.493511199951172
    8. 'un' → logprob: -3.743511199951172
    9. 'two' → logprob: -3.743511199951172
    10. ' un' → logprob: -4.118511199951172

Token 490: ' interv' (ID: 37413)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.3625081777572632
    2. ' distances' → logprob: -1.7375081777572632
    3. 'de' → logprob: -2.7375082969665527
    4. 's' → logprob: -2.7375082969665527
    5. ' intervals' → logprob: -2.7375082969665527
    6. 'tr' → logprob: -2.8625082969665527
    7. ' sa' → logprob: -2.9875082969665527
    8. ' interv' → logprob: -3.2375082969665527
    9. 'indices' → logprob: -3.4875082969665527
    10. ' indices' → logprob: -3.6125082969665527

Token 491: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6504457592964172
    2. 'als' → logprob: -0.9004457592964172
    3. 'ales' → logprob: -3.4004456996917725
    4. 'alles' → logprob: -3.6504456996917725
    5. '```' → logprob: -5.525445938110352
    6. 'ents' → logprob: -6.400445938110352
    7. '   ' → logprob: -7.275445938110352
    8. 's' → logprob: -7.650445938110352
    9. '#' → logprob: -7.900445938110352
    10. 'ale' → logprob: -8.150445938110352

Token 492: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.532295286655426
    2. ':' → logprob: -1.2822952270507812
    3. ',' → logprob: -3.1572952270507812
    4. ' :' → logprob: -3.7822952270507812
    5. ')' → logprob: -4.907295227050781
    6. '.' → logprob: -5.282295227050781
    7. '    
' → logprob: -5.407295227050781
    8. ' ' → logprob: -5.407295227050781
    9. '    ' → logprob: -5.407295227050781
    10. '[' → logprob: -5.532295227050781

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04440901800990105
    2. '    
' → logprob: -3.1694090366363525
    3. '<|end|>' → logprob: -7.919408798217773
    4. '  
' → logprob: -8.794408798217773
    5. ' 
' → logprob: -8.794408798217773
    6. '    ' → logprob: -8.919408798217773
    7. '
' → logprob: -8.919408798217773
    8. '\n' → logprob: -9.669408798217773
    9. '        
' → logprob: -9.794408798217773
    10. ')' → logprob: -10.044408798217773

Token 494: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0427231527864933
    2. '    
' → logprob: -4.042723178863525
    3. ':' → logprob: -5.417723178863525
    4. '    ' → logprob: -5.417723178863525
    5. ' ' → logprob: -5.667723178863525
    6. ')' → logprob: -5.917723178863525
    7. ' 
' → logprob: -6.417723178863525
    8. '  
' → logprob: -6.417723178863525
    9. '\' → logprob: -7.292723178863525
    10. '   
' → logprob: -7.292723178863525

Token 495: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6411181688308716
    2. '   ' → logprob: -0.7661181688308716
    3. '
' → logprob: -5.391118049621582
    4. '    ' → logprob: -6.141118049621582
    5. '    
    
' → logprob: -7.141118049621582
    6. ' 
' → logprob: -8.141118049621582
    7. '        
' → logprob: -8.641118049621582
    8. '     
' → logprob: -9.016118049621582
    9. '  
' → logprob: -9.391118049621582
    10. '   
' → logprob: -9.391118049621582

Token 496: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07352232187986374
    2. '    
' → logprob: -3.1985223293304443
    3. '
' → logprob: -4.198522090911865
    4. 'max' → logprob: -5.198522090911865
    5. '#' (adapté à ' #') → logprob: -6.198522090911865
    6. ' max' → logprob: -6.573522090911865
    7. 'def' → logprob: -6.698522090911865
    8. ' 
' → logprob: -6.823522090911865
    9. '   
' → logprob: -6.948522090911865
    10. '  
' → logprob: -7.198522090911865

Token 497: ' Alg' (ID: 31776)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17026114463806152
    2. ' max' → logprob: -2.7952611446380615
    3. 'def' → logprob: -3.5452611446380615
    4. 'max' → logprob: -3.5452611446380615
    5. '    
' → logprob: -4.670261383056641
    6. ' #' → logprob: -4.920261383056641
    7. '#' → logprob: -5.170261383056641
    8. ' def' → logprob: -5.670261383056641
    9. ' 
' → logprob: -5.795261383056641
    10. 'n' → logprob: -6.045261383056641

Token 498: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.005627512466162443
    2. 'orithm' → logprob: -6.005627632141113
    3. 'or' → logprob: -6.630627632141113
    4. 'o' → logprob: -7.630627632141113
    5. 'orithms' → logprob: -7.755627632141113
    6. '   ' → logprob: -7.880627632141113
    7. '#' → logprob: -8.755627632141113
    8. 'ort' → logprob: -9.380627632141113
    9. 'r' → logprob: -10.005627632141113
    10. '    ' → logprob: -10.255627632141113

Token 499: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -2.4272752852994017e-05
    2. 'm' → logprob: -10.75002384185791
    3. 'mes' → logprob: -14.00002384185791
    4. 'hme' → logprob: -14.12502384185791
    5. '_me' → logprob: -15.12502384185791
    6. ' me' → logprob: -15.12502384185791
    7. 'mme' → logprob: -16.000024795532227
    8. '```' → logprob: -16.125024795532227
    9. '	me' → logprob: -16.250024795532227
    10. '   ' → logprob: -16.375024795532227

Token 500: ' efficace' (ID: 54338)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5710169672966003
    2. ' :' → logprob: -1.3210170269012451
    3. ' =' → logprob: -2.071017026901245
    4. '   ' → logprob: -3.821017026901245
    5. 'def' → logprob: -5.196016788482666
    6. '=' → logprob: -5.696016788482666
    7. ' :
' → logprob: -5.821016788482666
    8. ' ' → logprob: -6.321016788482666
    9. ' def' → logprob: -6.321016788482666
    10. '_' → logprob: -7.196016788482666

Token 501: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47357580065727234
    2. ' :' → logprob: -1.2235758304595947
    3. '   ' → logprob: -2.7235758304595947
    4. ' :
' → logprob: -4.848575592041016
    5. ' =' → logprob: -5.348575592041016
    6. ':
' → logprob: -5.848575592041016
    7. '=' → logprob: -7.598575592041016
    8. 'def' → logprob: -8.348575592041016
    9. ',' → logprob: -8.723575592041016
    10. '    
' → logprob: -8.723575592041016

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06763838976621628
    2. '    ' → logprob: -3.567638397216797
    3. '    
' → logprob: -3.692638397216797
    4. ' 
' → logprob: -5.942638397216797
    5. '
' → logprob: -6.067638397216797
    6. '     
' → logprob: -6.067638397216797
    7. '```' → logprob: -6.442638397216797
    8. '  
' → logprob: -7.317638397216797
    9. 'def' → logprob: -7.442638397216797
    10. ' def' → logprob: -7.567638397216797

Token 503: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00950578972697258
    2. '    
' → logprob: -6.009505748748779
    3. '```' → logprob: -6.759505748748779
    4. '
' → logprob: -6.884505748748779
    5. ' #' → logprob: -7.009505748748779
    6. '#' → logprob: -7.009505748748779
    7. '    ' → logprob: -7.009505748748779
    8. ' max' → logprob: -7.634505748748779
    9. 'def' → logprob: -8.134506225585938
    10. ' for' → logprob: -8.509506225585938

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003219422185793519
    2. '    ' → logprob: -6.5032196044921875
    3. '    
' → logprob: -6.8782196044921875
    4. '#' → logprob: -7.7532196044921875
    5. 'def' → logprob: -9.628219604492188
    6. '
' → logprob: -10.128219604492188
    7. ' #' → logprob: -10.128219604492188
    8. '     
' → logprob: -10.878219604492188
    9. ' ' → logprob: -11.628219604492188
    10. '   ' → logprob: -11.628219604492188

Token 505: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0217772014439106
    2. '    
' → logprob: -4.521777153015137
    3. '    ' → logprob: -5.146777153015137
    4. ' #' → logprob: -6.271777153015137
    5. '#' (adapté à ' #') → logprob: -6.396777153015137
    6. '     
' → logprob: -7.521777153015137
    7. '
' → logprob: -8.521777153015137
    8. ' 
' → logprob: -8.896777153015137
    9. ' ' → logprob: -9.771777153015137
    10. '    
    
' → logprob: -9.896777153015137

Token 506: ' Given' (ID: 29844)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9297125935554504
    2. '   ' → logprob: -1.0547125339508057
    3. ' #' → logprob: -2.4297125339508057
    4. '#' → logprob: -3.1797125339508057
    5. ' from' → logprob: -3.6797125339508057
    6. 'max' → logprob: -3.8047125339508057
    7. ' def' → logprob: -4.179712772369385
    8. 'def' → logprob: -4.304712772369385
    9. ' for' → logprob: -4.679712772369385
    10. 'from' → logprob: -4.804712772369385

Token 507: ' the' (ID: 290)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6689276099205017
    2. ' ' → logprob: -0.9189276099205017
    3. '    ' → logprob: -4.0439276695251465
    4. 'def' → logprob: -4.2939276695251465
    5. '   ' → logprob: -4.4189276695251465
    6. ' ' → logprob: -4.5439276695251465
    7. ' def' → logprob: -4.9189276695251465
    8. '  ' → logprob: -5.5439276695251465
    9. 'N' → logprob: -5.6689276695251465
    10. ' `' → logprob: -6.0439276695251465

Token 508: ' large' (ID: 4410)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.461613655090332
    2. ' code' → logprob: -1.461613655090332
    3. ' next' → logprob: -1.586613655090332
    4. ' current' → logprob: -2.461613655090332
    5. ' following' → logprob: -2.461613655090332
    6. ' problem' → logprob: -3.211613655090332
    7. ' array' → logprob: -3.836613655090332
    8. ' list' → logprob: -4.836613655090332
    9. ' jumper' → logprob: -5.086613655090332
    10. ' rest' → logprob: -5.336613655090332

Token 509: ' constraint' (ID: 44762)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6749600172042847
    2. ' _' → logprob: -1.9249600172042847
    3. ' ' → logprob: -2.174960136413574
    4. ' space' → logprob: -2.549960136413574
    5. ' N' → logprob: -2.799960136413574
    6. 'space' → logprob: -3.424960136413574
    7. 'N' → logprob: -4.049960136413574
    8. ' #' → logprob: -5.049960136413574
    9. '  ' → logprob: -5.549960136413574
    10. ' 
' → logprob: -5.674960136413574

Token 510: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01597207970917225
    2. ' s' → logprob: -4.890972137451172
    3. ',' → logprob: -5.765972137451172
    4. ':' → logprob: -5.890972137451172
    5. ' de' → logprob: -6.765972137451172
    6. ' of' → logprob: -8.890972137451172
    7. ' on' → logprob: -9.015972137451172
    8. ' suivante' → logprob: -9.015972137451172
    9. '<|end|>' → logprob: -9.265972137451172
    10. ' (' → logprob: -9.265972137451172

Token 511: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.24916471540927887
    2. ' N' → logprob: -2.1241648197174072
    3. ')' → logprob: -3.1241648197174072
    4. ' ' → logprob: -3.8741648197174072
    5. 's' → logprob: -4.624164581298828
    6. '),' → logprob: -5.249164581298828
    7. ',' → logprob: -6.124164581298828
    8. '   ' → logprob: -6.124164581298828
    9. ' )' → logprob: -6.374164581298828
    10. ' n' → logprob: -6.624164581298828

Token 512: ' up' (ID: 869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.379647433757782
    2. ')' → logprob: -1.7546474933624268
    3. '[' → logprob: -2.7546474933624268
    4. ' =' → logprob: -3.1296474933624268
    5. '+' → logprob: -4.254647254943848
    6. '**' → logprob: -5.504647254943848
    7. ',' → logprob: -6.254647254943848
    8. '<|end|>' → logprob: -6.254647254943848
    9. ' ' → logprob: -6.379647254943848
    10. '_' → logprob: -6.504647254943848

Token 513: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9508472084999084
    2. '=' → logprob: -1.2008471488952637
    3. 'N' → logprob: -2.9508471488952637
    4. 'n' → logprob: -3.2008471488952637
    5. '_' → logprob: -3.3258471488952637
    6. 'per' → logprob: -3.8258471488952637
    7. 'def' → logprob: -4.075847148895264
    8. '^' → logprob: -4.200847148895264
    9. '   ' → logprob: -4.325847148895264
    10. '_to' → logprob: -4.325847148895264

Token 514: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4797683358192444
    2. '10' → logprob: -1.2297682762145996
    3. ')' → logprob: -2.7297682762145996
    4. ' )' → logprob: -4.8547682762146
    5. ' =' → logprob: -5.7297682762146
    6. '1' → logprob: -6.1047682762146
    7. ' ' → logprob: -6.1047682762146
    8. '=' → logprob: -6.3547682762146
    9. '100' → logprob: -6.6047682762146
    10. '```' → logprob: -6.8547682762146

Token 515: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003127448493614793
    2. '100' → logprob: -6.253127574920654
    3. ' ' → logprob: -6.878127574920654
    4. '1' → logprob: -9.378127098083496
    5. '```' → logprob: -10.128127098083496
    6. '2' → logprob: -11.378127098083496
    7. 'int' → logprob: -11.753127098083496
    8. '20' → logprob: -12.503127098083496
    9. ' ' → logprob: -12.503127098083496
    10. '200' → logprob: -12.878127098083496

Token 516: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0173799991607666
    2. '**' → logprob: -1.1423799991607666
    3. ' *' → logprob: -1.5173799991607666
    4. '0' → logprob: -4.0173797607421875
    5. ' ' → logprob: -4.0173797607421875
    6. '000' → logprob: -4.6423797607421875
    7. '6' → logprob: -4.8923797607421875
    8. ')' → logprob: -5.0173797607421875
    9. ' **' → logprob: -5.0173797607421875
    10. '2' → logprob: -5.1423797607421875

Token 517: '10' (ID: 702)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6107609868049622
    2. '*' → logprob: -1.2357609272003174
    3. '0' → logprob: -2.9857609272003174
    4. ' ' → logprob: -3.2357609272003174
    5. ')' → logprob: -3.7357609272003174
    6. '   ' → logprob: -4.4857611656188965
    7. '10' → logprob: -4.6107611656188965
    8. '**' → logprob: -4.7357611656188965
    9. '000' → logprob: -5.3607611656188965
    10. '2' → logprob: -5.4857611656188965

Token 518: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.21161913871765137
    2. '^' → logprob: -1.9616191387176514
    3. '3' → logprob: -4.2116193771362305
    4. '5' → logprob: -4.2116193771362305
    5. '6' → logprob: -4.8366193771362305
    6. '4' → logprob: -5.4616193771362305
    7. '000' → logprob: -5.4616193771362305
    8. '0' → logprob: -7.0866193771362305
    9. ' **' → logprob: -7.2116193771362305
    10. ')' → logprob: -7.3366193771362305

Token 519: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20544767379760742
    2. '6' → logprob: -1.7054476737976074
    3. '3' → logprob: -5.955447673797607
    4. '4' → logprob: -7.830447673797607
    5. '**' → logprob: -7.830447673797607
    6. '^' → logprob: -8.330448150634766
    7. '7' → logprob: -8.580448150634766
    8. '9' → logprob: -8.955448150634766
    9. ' ' → logprob: -9.830448150634766
    10. '```' → logprob: -11.205448150634766

Token 520: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03331645205616951
    2. '):' → logprob: -4.033316612243652
    3. '),' → logprob: -4.408316612243652
    4. ',' → logprob: -7.033316612243652
    5. ' )' → logprob: -7.283316612243652
    6. '):
' → logprob: -7.283316612243652
    7. ')
' → logprob: -8.658316612243652
    8. ':' → logprob: -9.033316612243652
    9. '   ' → logprob: -9.658316612243652
    10. '[' → logprob: -9.783316612243652

Token 521: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3658686876296997
    2. ' ' → logprob: -1.6158686876296997
    3. ')' → logprob: -1.9908686876296997
    4. ' #' → logprob: -2.49086856842041
    5. '#' → logprob: -2.61586856842041
    6. ' 
' → logprob: -2.86586856842041
    7. ' ' → logprob: -3.61586856842041
    8. ' we' → logprob: -4.36586856842041
    9. ' il' → logprob: -4.49086856842041
    10. '   ' → logprob: -4.61586856842041

Token 522: ' est' (ID: 893)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.19116587936878204
    2. ' faudra' → logprob: -2.0661659240722656
    3. ' faudrait' → logprob: -3.4411659240722656
    4. ' est' → logprob: -4.816165924072266
    5. ' n' → logprob: -6.441165924072266
    6. ')' → logprob: -7.066165924072266
    7. 'f' → logprob: -7.191165924072266
    8. '   ' → logprob: -7.441165924072266
    9. ' ' → logprob: -7.566165924072266
    10. 's' → logprob: -7.941165924072266

Token 523: ' impossible' (ID: 19786)
  Prédit: ' nécessaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.8017744421958923
    2. ' impossible' → logprob: -1.176774501800537
    3. ' préférable' → logprob: -2.676774501800537
    4. ' possible' → logprob: -3.176774501800537
    5. ' difficile' → logprob: -3.551774501800537
    6. ' important' → logprob: -3.676774501800537
    7. ' inutile' → logprob: -4.301774501800537
    8. 'import' → logprob: -4.426774501800537
    9. ' essentiel' → logprob: -4.426774501800537
    10. 'possible' → logprob: -5.051774501800537

Token 524: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10146696865558624
    2. '<|end|>' → logprob: -3.1014668941497803
    3. ' d' → logprob: -3.2264668941497803
    4. 'import' → logprob: -5.976467132568359
    5. 'de' → logprob: -5.976467132568359
    6. ' ' → logprob: -6.601467132568359
    7. ' to' → logprob: -6.851467132568359
    8. 'd' → logprob: -6.976467132568359
    9. '<|end|>' → logprob: -7.226467132568359
    10. ')' → logprob: -7.726467132568359

Token 525: ' vérifier' (ID: 93671)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.16493506729602814
    2. ' construire' → logprob: -2.0399351119995117
    3. ' créer' → logprob: -5.039935111999512
    4. ' vérifier' → logprob: -6.039935111999512
    5. ' ' → logprob: -6.164935111999512
    6. ' iter' → logprob: -6.414935111999512
    7. 'n' → logprob: -6.539935111999512
    8. ' faire' → logprob: -7.164935111999512
    9. 'faire' → logprob: -7.289935111999512
    10. 'expl' → logprob: -7.414935111999512

Token 526: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3467315435409546
    2. ' chaque' → logprob: -2.221731662750244
    3. '_' → logprob: -2.346731662750244
    4. ' tous' → logprob: -3.596731662750244
    5. '  
' → logprob: -5.096731662750244
    6. ' toutes' → logprob: -5.096731662750244
    7. '   ' → logprob: -5.221731662750244
    8. 't' → logprob: -5.346731662750244
    9. ' les' → logprob: -5.471731662750244
    10. '    ' → logprob: -5.846731662750244

Token 527: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.27618783712387085
    2. 'les' → logprob: -1.5261878967285156
    3. ' j' → logprob: -4.901187896728516
    4. ' ' → logprob: -5.526187896728516
    5. ' i' → logprob: -5.651187896728516
    6. ' pairs' → logprob: -5.651187896728516
    7. '_' → logprob: -7.026187896728516
    8. ' voisins' → logprob: -7.151187896728516
    9. 'i' → logprob: -7.401187896728516
    10. ' indices' → logprob: -7.776187896728516

Token 528: ' couples' (ID: 29972)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.39236995577812195
    2. ' i' → logprob: -2.1423699855804443
    3. 'pairs' → logprob: -2.8923699855804443
    4. ' p' → logprob: -3.1423699855804443
    5. ' ' → logprob: -3.6423699855804443
    6. 'i' → logprob: -3.8923699855804443
    7. ' voisins' → logprob: -3.8923699855804443
    8. ' indices' → logprob: -4.392369747161865
    9. ' j' → logprob: -4.767369747161865
    10. 'indices' → logprob: -5.892369747161865

Token 529: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' #
' (ID: 21888)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.040701150894165
    2. '   ' → logprob: -1.290701150894165
    3. '.' → logprob: -2.540701150894165
    4. '<|end|>' → logprob: -2.665701150894165
    5. ':' → logprob: -3.540701150894165
    6. '\n' → logprob: -3.665701150894165
    7. '  
' → logprob: -3.665701150894165
    8. ',' → logprob: -3.665701150894165
    9. ' ' → logprob: -4.040700912475586
    10. '...' → logprob: -4.165700912475586

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03518146276473999
    2. '    
' → logprob: -3.5351815223693848
    3. '#' → logprob: -6.535181522369385
    4. '  
' → logprob: -6.785181522369385
    5. ' 
' → logprob: -7.410181522369385
    6. ')' → logprob: -7.660181522369385
    7. '   
' → logprob: -8.160181045532227
    8. '...' → logprob: -8.535181045532227
    9. '\n' → logprob: -8.535181045532227
    10. 'def' → logprob: -8.910181045532227

Token 533: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043775495141744614
    2. '    
' → logprob: -3.4187755584716797
    3. '#' (adapté à ' #') → logprob: -6.29377555847168
    4. ')' → logprob: -6.29377555847168
    5. '  
' → logprob: -6.66877555847168
    6. ' 
' → logprob: -7.16877555847168
    7. '   
' → logprob: -7.29377555847168
    8. '    ' → logprob: -7.41877555847168
    9. '...' → logprob: -7.54377555847168
    10. '
' → logprob: -7.79377555847168

Token 534: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5035562515258789
    2. '\n' → logprob: -2.378556251525879
    3. ' 
' → logprob: -2.753556251525879
    4. ' ' → logprob: -2.878556251525879
    5. '    
' → logprob: -3.003556251525879
    6. '  
' → logprob: -4.003556251525879
    7. '\' → logprob: -4.128556251525879
    8. '
' → logprob: -4.253556251525879
    9. '#' → logprob: -4.503556251525879
    10. ')' → logprob: -4.503556251525879

Token 535: 'isons' (ID: 47841)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.22175082564353943
    2. 'isez' → logprob: -2.7217507362365723
    3. '#' → logprob: -2.9717507362365723
    4. 'er' → logprob: -3.8467507362365723
    5. 'isé' → logprob: -3.8467507362365723
    6. 'ons' → logprob: -4.471750736236572
    7. 'isant' → logprob: -5.096750736236572
    8. '```' → logprob: -5.096750736236572
    9. 'e' → logprob: -5.846750736236572
    10. 'isons' → logprob: -6.096750736236572

Token 536: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.56082683801651
    2. ' une' → logprob: -0.93582683801651
    3. ' un' → logprob: -3.6858267784118652
    4. 'un' → logprob: -4.685826778411865
    5. 'l' → logprob: -7.060826778411865
    6. ' l' → logprob: -8.060827255249023
    7. ' la' → logprob: -8.185827255249023
    8. ' ' → logprob: -8.310827255249023
    9. 'la' → logprob: -8.810827255249023
    10. 'u' → logprob: -8.935827255249023

Token 537: ' travers' (ID: 26957)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3087881803512573
    2. 'double' → logprob: -1.9337881803512573
    3. ' double' → logprob: -2.183788299560547
    4. 'two' → logprob: -2.183788299560547
    5. 'stack' → logprob: -2.683788299560547
    6. 'mon' → logprob: -2.933788299560547
    7. ' stack' → logprob: -2.933788299560547
    8. 'deque' → logprob: -3.433788299560547
    9. ' approche' → logprob: -3.683788299560547
    10. ' two' → logprob: -3.683788299560547

Token 538: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.431135356426239
    2. 'ée' → logprob: -1.1811354160308838
    3. 'al' → logprob: -3.681135416030884
    4. 'é' → logprob: -4.931135177612305
    5. 'ee' → logprob: -4.931135177612305
    6. 'er' → logprob: -5.931135177612305
    7. '#' → logprob: -8.306135177612305
    8. 'a' → logprob: -8.681135177612305
    9. 'ation' → logprob: -9.306135177612305
    10. 'ion' → logprob: -9.431135177612305

Token 539: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.42259544134140015
    2. 'en' → logprob: -1.172595500946045
    3. 'b' → logprob: -5.547595500946045
    4. 'pro' → logprob: -5.547595500946045
    5. 'dfs' → logprob: -5.922595500946045
    6. 'de' → logprob: -6.172595500946045
    7. ' de' → logprob: -6.172595500946045
    8. ' à' → logprob: -6.297595500946045
    9. 'par' → logprob: -6.422595500946045
    10. ' par' → logprob: -6.547595500946045

Token 540: ' deux' (ID: 10301)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.07268277555704117
    2. 'b' → logprob: -3.5726828575134277
    3. 'double' → logprob: -4.072682857513428
    4. ' largeur' → logprob: -4.822682857513428
    5. ' deux' → logprob: -5.822682857513428
    6. ' large' → logprob: -5.822682857513428
    7. 'two' → logprob: -6.447682857513428
    8. ' ' → logprob: -6.697682857513428
    9. 'de' → logprob: -6.697682857513428
    10. 'B' → logprob: -6.822682857513428

Token 541: ' phases' (ID: 48910)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.209693431854248
    2. ' ' → logprob: -1.459693431854248
    3. 'p' → logprob: -1.834693431854248
    4. 'for' → logprob: -2.459693431854248
    5. 'passes' → logprob: -2.584693431854248
    6. '
' → logprob: -3.834693431854248
    7. ' ' → logprob: -4.084693431854248
    8. 'pass' → logprob: -4.459693431854248
    9. 'pointer' → logprob: -4.459693431854248
    10. '  ' → logprob: -4.584693431854248

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11374121904373169
    2. 'def' → logprob: -3.613741159439087
    3. ' :' → logprob: -3.738741159439087
    4. '   ' → logprob: -3.863741159439087
    5. ':
' → logprob: -3.988741159439087
    6. ',' → logprob: -5.363741397857666
    7. '.' → logprob: -5.488741397857666
    8. '#' → logprob: -6.238741397857666
    9. 'for' → logprob: -6.738741397857666
    10. ' :
' → logprob: -7.113741397857666

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026468075811862946
    2. '#' → logprob: -3.77646803855896
    3. '    
' → logprob: -7.276468276977539
    4. 'def' → logprob: -7.651468276977539
    5. ' #' → logprob: -7.776468276977539
    6. '    ' → logprob: -8.151468276977539
    7. ' ' → logprob: -8.526468276977539
    8. '#
' → logprob: -8.526468276977539
    9. '  ' → logprob: -8.651468276977539
    10. 'for' → logprob: -8.901468276977539

Token 544: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004528384655714035
    2. '#' (adapté à ' #') → logprob: -6.004528522491455
    3. '    
' → logprob: -6.504528522491455
    4. '
' → logprob: -9.254528045654297
    5. ' #' → logprob: -9.254528045654297
    6. 'def' → logprob: -9.754528045654297
    7. ')' → logprob: -9.879528045654297
    8. '    ' → logprob: -10.004528045654297
    9. '```' → logprob: -10.379528045654297
    10. '\n' → logprob: -10.879528045654297

Token 545: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048175979405641556
    2. '    
' → logprob: -4.423175811767578
    3. '#' → logprob: -4.673175811767578
    4. ' #' → logprob: -5.048175811767578
    5. '    ' → logprob: -5.423175811767578
    6. '
' → logprob: -5.798175811767578
    7. ' for' → logprob: -6.298175811767578
    8. ' 
' → logprob: -6.298175811767578
    9. 'for' → logprob: -6.673175811767578
    10. ' ' → logprob: -6.923175811767578

Token 546: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6037582755088806
    2. '   ' → logprob: -1.6037583351135254
    3. ' #' → logprob: -2.6037583351135254
    4. ' for' → logprob: -2.8537583351135254
    5. 'for' → logprob: -2.8537583351135254
    6. 'def' → logprob: -4.353758335113525
    7. 'max' → logprob: -4.353758335113525
    8. ' max' → logprob: -4.728758335113525
    9. ' i' → logprob: -5.103758335113525
    10. 'i' → logprob: -5.603758335113525

Token 547: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.916661262512207
    2. '.' → logprob: -1.916661262512207
    3. ':' → logprob: -2.041661262512207
    4. ' =' → logprob: -2.291661262512207
    5. 'def' → logprob: -2.666661262512207
    6. '#' → logprob: -3.041661262512207
    7. '   ' → logprob: -3.541661262512207
    8. '=' → logprob: -3.916661262512207
    9. ',' → logprob: -5.041661262512207
    10. 'for' → logprob: -5.041661262512207

Token 548: ' Sens' (ID: 47208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1285820007324219
    2. 'max' → logprob: -2.003582000732422
    3. 'visited' → logprob: -2.378582000732422
    4. 'for' → logprob: -2.878582000732422
    5. ' max' → logprob: -2.878582000732422
    6. 'Constru' → logprob: -2.878582000732422
    7. 'from' → logprob: -3.003582000732422
    8. ' #' → logprob: -3.128582000732422
    9. ' Constru' → logprob: -3.753582000732422
    10. 'Util' → logprob: -4.003582000732422

Token 549: ' aller' (ID: 18383)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359939575195312
    2. ' =' → logprob: -2.0109939575195312
    3. 'aller' → logprob: -2.6359939575195312
    4. ' aller' → logprob: -2.6359939575195312
    5. '_' → logprob: -2.7609939575195312
    6. ' ' → logprob: -3.3859939575195312
    7. ' de' → logprob: -3.8859939575195312
    8. 'e' → logprob: -4.760993957519531
    9. ' ->' → logprob: -4.760993957519531
    10. 'all' → logprob: -5.010993957519531

Token 550: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027817243710160255
    2. ' :' → logprob: -3.6528172492980957
    3. ':
' → logprob: -7.027817249298096
    4. '   ' → logprob: -8.902816772460938
    5. ',' → logprob: -9.027816772460938
    6. ' ' → logprob: -9.777816772460938
    7. '):' → logprob: -9.777816772460938
    8. ' ' → logprob: -10.027816772460938
    9. ' :
' → logprob: -10.027816772460938
    10. '.' → logprob: -10.652816772460938

Token 551: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3029739260673523
    2. '):' → logprob: -1.427973985671997
    3. '):
' → logprob: -4.552973747253418
    4. ' )' → logprob: -6.302973747253418
    5. 'for' → logprob: -6.427973747253418
    6. ')
' → logprob: -7.052973747253418
    7. '=' → logprob: -7.427973747253418
    8. '0' → logprob: -7.427973747253418
    9. 'N' → logprob: -7.427973747253418
    10. 'def' → logprob: -7.677973747253418

Token 552: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10078657418489456
    2. ' ' → logprob: -2.3507866859436035
    3. ')' → logprob: -8.975786209106445
    4. 'l' → logprob: -9.225786209106445
    5. ' ' → logprob: -9.600786209106445
    6. ' l' → logprob: -9.850786209106445
    7. ' N' → logprob: -10.350786209106445
    8. ' la' → logprob: -10.475786209106445
    9. '```' → logprob: -10.725786209106445
    10. 'N' → logprob: -10.850786209106445

Token 553: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00220461655408144
    2. ' ' → logprob: -6.252204418182373
    3. ')' → logprob: -8.377204895019531
    4. 'def' → logprob: -11.377204895019531
    5. 'i' → logprob: -12.002204895019531
    6. '`' → logprob: -12.252204895019531
    7. ' ' → logprob: -12.252204895019531
    8. '```' → logprob: -12.252204895019531
    9. 'l' → logprob: -13.127204895019531
    10. 'N' → logprob: -13.377204895019531

Token 554: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10303099453449249
    2. ' ' → logprob: -3.3530309200286865
    3. ' to' → logprob: -3.8530309200286865
    4. 'à' → logprob: -4.103031158447266
    5. ')' → logprob: -5.103031158447266
    6. '   ' → logprob: -5.103031158447266
    7. ',' → logprob: -5.478031158447266
    8. ' jusqu' → logprob: -5.978031158447266
    9. ' ->' → logprob: -6.353031158447266
    10. ' )' → logprob: -7.103031158447266

Token 555: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22567643225193024
    2. ' N' → logprob: -1.600676417350769
    3. '1' → logprob: -9.100676536560059
    4. ' ' → logprob: -10.475676536560059
    5. ' ' → logprob: -10.475676536560059
    6. '   ' → logprob: -10.600676536560059
    7. ')' → logprob: -11.225676536560059
    8. 'i' → logprob: -11.350676536560059
    9. '`' → logprob: -12.100676536560059
    10. 'j' → logprob: -12.100676536560059

Token 556: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002922325860708952
    2. ' -' → logprob: -6.002922534942627
    3. ')' → logprob: -8.002922058105469
    4. '):
' → logprob: -10.252922058105469
    5. '-
' → logprob: -10.627922058105469
    6. '):' → logprob: -10.752922058105469
    7. '),' → logprob: -12.127922058105469
    8. '-)' → logprob: -12.502922058105469
    9. '1' → logprob: -12.752922058105469
    10. ' ' → logprob: -12.752922058105469

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011808235431089997
    2. '-' → logprob: -6.751180648803711
    3. ' ' → logprob: -11.751180648803711
    4. ')' → logprob: -13.876180648803711
    5. ' -' → logprob: -14.376180648803711
    6. '
' → logprob: -14.751180648803711
    7. '   ' → logprob: -15.126180648803711
    8. '```' → logprob: -15.126180648803711
    9. '#' → logprob: -16.75118064880371
    10. 'm' → logprob: -17.12618064880371

Token 558: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.500013530254364
    2. '):' → logprob: -1.3750135898590088
    3. '):
' → logprob: -2.000013589859009
    4. '):

' → logprob: -5.62501335144043
    5. '):
' → logprob: -7.00001335144043
    6. ')
' → logprob: -7.87501335144043
    7. '   ' → logprob: -9.00001335144043
    8. ' )' → logprob: -9.87501335144043
    9. ':' → logprob: -9.87501335144043
    10. '#' → logprob: -10.12501335144043

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003237243974581361
    2. '    
' → logprob: -6.128237247467041
    3. '
' → logprob: -7.378237247467041
    4. '```' → logprob: -9.128236770629883
    5. '    ' → logprob: -9.503236770629883
    6. 'for' → logprob: -10.003236770629883
    7. ' for' → logprob: -10.003236770629883
    8. ')' → logprob: -10.128236770629883
    9. '   ' → logprob: -11.128236770629883
    10. '   
' → logprob: -11.128236770629883

Token 560: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034734364598989487
    2. '    
' → logprob: -6.128473281860352
    3. '
' → logprob: -7.503473281860352
    4. 'visited' → logprob: -8.878473281860352
    5. '```' → logprob: -9.378473281860352
    6. '    ' → logprob: -9.628473281860352
    7. ' for' → logprob: -9.628473281860352
    8. 'for' → logprob: -9.878473281860352
    9. ' ' → logprob: -10.128473281860352
    10. '   ' → logprob: -10.128473281860352

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1488487273454666
    2. '
' → logprob: -2.89884877204895
    3. '```' → logprob: -3.27384877204895
    4. '    
' → logprob: -4.148848533630371
    5. 'def' → logprob: -4.648848533630371
    6. 'visited' → logprob: -5.773848533630371
    7. ')' → logprob: -6.023848533630371
    8. ' visited' → logprob: -6.023848533630371
    9. '#' → logprob: -6.273848533630371
    10. 'dp' → logprob: -6.398848533630371

Token 562: ' On' (ID: 2160)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -1.3407350778579712
    2. 'visited' → logprob: -1.4657350778579712
    3. '   ' → logprob: -1.5907350778579712
    4. 'reachable' → logprob: -1.5907350778579712
    5. ' visited' → logprob: -3.9657349586486816
    6. 'max' → logprob: -4.465734958648682
    7. 'from' → logprob: -4.590734958648682
    8. '#' → logprob: -4.840734958648682
    9. 'vis' → logprob: -4.965734958648682
    10. 'dp' → logprob: -4.965734958648682

Token 563: ' veut' (ID: 41653)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.2853187918663025
    2. ' peux' → logprob: -3.1603188514709473
    3. ' commence' → logprob: -3.2853188514709473
    4. 'e' → logprob: -3.6603188514709473
    5. ' part' → logprob: -3.7853188514709473
    6. 'expl' → logprob: -4.035318851470947
    7. 'n' → logprob: -4.535318851470947
    8. ' avance' → logprob: -4.910318851470947
    9. ' doit' → logprob: -5.160318851470947
    10. ' explore' → logprob: -5.160318851470947

Token 564: ' vérifier' (ID: 93671)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9353435039520264
    2. ' vérifier' → logprob: -1.1853435039520264
    3. ' savoir' → logprob: -2.1853435039520264
    4. 'tr' → logprob: -2.6853435039520264
    5. 's' → logprob: -3.1853435039520264
    6. 'voir' → logprob: -3.8103435039520264
    7. ' trouver' → logprob: -4.9353437423706055
    8. ' déterminer' → logprob: -5.1853437423706055
    9. ' parcour' → logprob: -5.3103437423706055
    10. 'ver' → logprob: -5.6853437423706055

Token 565: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.11583815515041351
    2. 'si' → logprob: -2.490838050842285
    3. ' if' → logprob: -4.740838050842285
    4. ' la' → logprob: -5.115838050842285
    5. ' s' → logprob: -5.865838050842285
    6. '   ' → logprob: -5.865838050842285
    7. ' que' → logprob: -6.490838050842285
    8. 's' → logprob: -6.865838050842285
    9. 'if' → logprob: -6.990838050842285
    10. 'la' → logprob: -6.990838050842285

Token 566: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.38712427020072937
    2. ' il' → logprob: -1.6371243000030518
    3. ' i' → logprob: -3.1371243000030518
    4. ' j' → logprob: -3.7621243000030518
    5. ' le' → logprob: -4.512124061584473
    6. ' possible' → logprob: -4.762124061584473
    7. ' ' → logprob: -4.887124061584473
    8. ' la' → logprob: -5.137124061584473
    9. 'on' → logprob: -5.262124061584473
    10. ' there' → logprob: -5.637124061584473

Token 567: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.04994070902466774
    2. 'pe' → logprob: -3.174940824508667
    3. ' peux' → logprob: -5.424940586090088
    4. 'est' → logprob: -7.549940586090088
    5. ' ' → logprob: -7.799940586090088
    6. ' ' → logprob: -8.049941062927246
    7. '_pe' → logprob: -8.424941062927246
    8. ' pe' → logprob: -9.174941062927246
    9. 'a' → logprob: -9.299941062927246
    10. ']' → logprob: -9.424941062927246

Token 568: ' "' (ID: 392)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.7136908173561096
    2. ' atteindre' → logprob: -0.9636908173561096
    3. 'aller' → logprob: -2.713690757751465
    4. ' aller' → logprob: -3.713690757751465
    5. 're' → logprob: -4.463690757751465
    6. ' avancer' → logprob: -5.588690757751465
    7. ' ' → logprob: -5.713690757751465
    8. ' at' → logprob: -5.838690757751465
    9. ' atte' → logprob: -5.963690757751465
    10. 'arr' → logprob: -6.088690757751465

Token 569: 'march' (ID: 134218)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.10258075594902039
    2. 're' → logprob: -3.1025807857513428
    3. 'aller' → logprob: -3.6025807857513428
    4. ' atteindre' → logprob: -4.727580547332764
    5. 'arr' → logprob: -5.352580547332764
    6. ' at' → logprob: -5.977580547332764
    7. ' ' → logprob: -6.227580547332764
    8. ' aller' → logprob: -7.102580547332764
    9. 'at' → logprob: -7.227580547332764
    10. ' rejoindre' → logprob: -7.352580547332764

Token 570: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00027587503427639604
    2. 'e' → logprob: -8.250275611877441
    3. '#' → logprob: -12.250275611877441
    4. 'h' → logprob: -12.625275611877441
    5. 'r' → logprob: -12.750275611877441
    6. '   ' → logprob: -14.500275611877441
    7. 'é' → logprob: -14.750275611877441
    8. 'her' → logprob: -14.750275611877441
    9. ' ' → logprob: -15.250275611877441
    10. '_er' → logprob: -15.375275611877441

Token 571: '"' (ID: 1)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.41014283895492554
    2. ' jusqu' → logprob: -2.1601428985595703
    3. ' ' → logprob: -2.5351428985595703
    4. ' sur' → logprob: -3.4101428985595703
    5. ' vers' → logprob: -3.5351428985595703
    6. 'de' → logprob: -3.7851428985595703
    7. '_' → logprob: -4.53514289855957
    8. '"' → logprob: -5.03514289855957
    9. ' entre' → logprob: -5.28514289855957
    10. 'sur' → logprob: -5.28514289855957

Token 572: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.7261086106300354
    2. ' de' → logprob: -1.4761085510253906
    3. 'jus' → logprob: -2.2261085510253906
    4. 'de' → logprob: -2.8511085510253906
    5. ' vers' → logprob: -3.3511085510253906
    6. 'from' → logprob: -4.101108551025391
    7. ' sur' → logprob: -4.351108551025391
    8. 'dep' → logprob: -4.726108551025391
    9. ' d' → logprob: -4.976108551025391
    10. ' from' → logprob: -5.101108551025391

Token 573: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6789972186088562
    2. 'i' → logprob: -0.9289972186088562
    3. ' trampoline' → logprob: -3.553997278213501
    4. 'tr' → logprob: -3.678997278213501
    5. ' ' → logprob: -4.303997039794922
    6. '0' → logprob: -4.803997039794922
    7. 'un' → logprob: -5.053997039794922
    8. ' un' → logprob: -5.178997039794922
    9. ' tramp' → logprob: -5.303997039794922
    10. '1' → logprob: -5.928997039794922

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5472923517227173
    2. 'i' → logprob: -1.2972923517227173
    3. ' i' → logprob: -2.6722922325134277
    4. ' ' → logprob: -3.4222922325134277
    5. '1' → logprob: -3.5472922325134277
    6. 'tr' → logprob: -4.797292232513428
    7. 'un' → logprob: -5.297292232513428
    8. ' un' → logprob: -6.797292232513428
    9. 'l' → logprob: -7.547292232513428
    10. 'le' → logprob: -7.672292232513428

Token 575: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35247206687927246
    2. ' à' → logprob: -1.2274720668792725
    3. 'à' → logprob: -6.977472305297852
    4. ' ' → logprob: -7.227472305297852
    5. ' jusqu' → logprob: -7.227472305297852
    6. '   ' → logprob: -7.477472305297852
    7. ' to' → logprob: -8.477472305297852
    8. '  ' → logprob: -8.602472305297852
    9. ' vers' → logprob: -8.727472305297852
    10. '`' → logprob: -9.977472305297852

Token 576: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6359590291976929
    2. ' N' → logprob: -0.7609590291976929
    3. ' ' → logprob: -6.885959148406982
    4. '   ' → logprob: -7.385959148406982
    5. 'j' → logprob: -7.760959148406982
    6. '1' → logprob: -8.010958671569824
    7. ' j' → logprob: -8.135958671569824
    8. 'i' → logprob: -8.260958671569824
    9. '```' → logprob: -9.510958671569824
    10. ' i' → logprob: -9.635958671569824

Token 577: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001739912899211049
    2. ' -' → logprob: -6.376739978790283
    3. '-
' → logprob: -10.626739501953125
    4. ' ' → logprob: -12.751739501953125
    5. '1' → logprob: -13.251739501953125
    6. '   ' → logprob: -13.501739501953125
    7. '[-' → logprob: -13.751739501953125
    8. '```' → logprob: -13.751739501953125
    9. '	' → logprob: -14.001739501953125
    10. '−' → logprob: -14.001739501953125

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021874953527003527
    2. '-' → logprob: -6.127187728881836
    3. ' ' → logprob: -13.252187728881836
    4. '   ' → logprob: -15.502187728881836
    5. ' -' → logprob: -16.127187728881836
    6. '```' → logprob: -16.127187728881836
    7. ')' → logprob: -16.877187728881836
    8. '
' → logprob: -17.377187728881836
    9. '2' → logprob: -17.502187728881836
    10. 'i' → logprob: -18.127187728881836

Token 579: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.17830291390419006
    2. '.' → logprob: -2.9283030033111572
    3. ',' → logprob: -3.0533030033111572
    4. '   ' → logprob: -3.3033030033111572
    5. 'en' → logprob: -5.303302764892578
    6. ' dans' → logprob: -5.553302764892578
    7. ' ' → logprob: -5.803302764892578
    8. ' via' → logprob: -5.928302764892578
    9. ' jusqu' → logprob: -6.053302764892578
    10. '```' → logprob: -6.428302764892578

Token 580: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.38145169615745544
    2. 'des' → logprob: -2.1314516067504883
    3. ' les' → logprob: -2.6314516067504883
    4. 'les' → logprob: -3.3814516067504883
    5. ' un' → logprob: -3.6314516067504883
    6. ' i' → logprob: -4.631451606750488
    7. ' une' → logprob: -4.631451606750488
    8. 'j' → logprob: -5.131451606750488
    9. ' la' → logprob: -5.256451606750488
    10. 'i' → logprob: -5.381451606750488

Token 581: ' arcs' (ID: 150448)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7613844871520996
    2. ' sa' → logprob: -2.7613844871520996
    3. 'indices' → logprob: -3.0113844871520996
    4. ' distances' → logprob: -3.0113844871520996
    5. '```' → logprob: -3.5113844871520996
    6. ' indices' → logprob: -3.6363844871520996
    7. ' saut' → logprob: -3.6363844871520996
    8. ')' → logprob: -4.0113844871521
    9. 'dist' → logprob: -4.2613844871521
    10. 'diff' → logprob: -4.3863844871521

Token 582: ' i' (ID: 575)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.08361293375492096
    2. ' suivant' → logprob: -3.3336129188537598
    3. ' ' → logprob: -4.58361291885376
    4. ' suivante' → logprob: -5.08361291885376
    5. ' i' → logprob: -5.70861291885376
    6. 'su' → logprob: -5.83361291885376
    7. 's' → logprob: -5.83361291885376
    8. '   ' → logprob: -5.83361291885376
    9. ' allant' → logprob: -6.33361291885376
    10. ' suivantes' → logprob: -6.33361291885376

Token 583: '->' (ID: 609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7198508381843567
    2. '+' → logprob: -0.9698508381843567
    3. ' <' → logprob: -2.094850778579712
    4. ' ->' → logprob: -4.719851016998291
    5. '<' → logprob: -7.219851016998291
    6. ' <=' → logprob: -7.969851016998291
    7. ' ' → logprob: -8.094850540161133
    8. '   ' → logprob: -8.594850540161133
    9. ' +
' → logprob: -9.844850540161133
    10. '+
' → logprob: -9.969850540161133

Token 584: 'j' (ID: 73)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7549967765808105
    2. 'j' → logprob: -1.1299967765808105
    3. ' i' → logprob: -2.0049967765808105
    4. 'i' → logprob: -2.7549967765808105
    5. '+' → logprob: -5.7549967765808105
    6. ' (' → logprob: -6.0049967765808105
    7. ' ' → logprob: -6.2549967765808105
    8. ' +' → logprob: -7.6299967765808105
    9. '```' → logprob: -8.754997253417969
    10. ' ' → logprob: -9.879997253417969

Token 585: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7874740362167358
    2. ',' → logprob: -1.5374740362167358
    3. ' ' → logprob: -2.2874741554260254
    4. ' en' → logprob: -2.7874741554260254
    5. 's' → logprob: -3.0374741554260254
    6. ' suivants' → logprob: -3.5374741554260254
    7. ' suivant' → logprob: -4.662474155426025
    8. ' (' → logprob: -4.787474155426025
    9. ':' → logprob: -4.787474155426025
    10. '  ' → logprob: -5.037474155426025

Token 586: 'j' (ID: 73)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7480853796005249
    2. ' j' → logprob: -1.123085379600525
    3. ' +' → logprob: -2.3730854988098145
    4. '1' → logprob: -3.3730854988098145
    5. ' )' → logprob: -3.9980854988098145
    6. ' i' → logprob: -4.2480854988098145
    7. 'j' → logprob: -4.3730854988098145
    8. ' ' → logprob: -4.3730854988098145
    9. ')' → logprob: -4.8730854988098145
    10. '   ' → logprob: -6.1230854988098145

Token 587: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5371920466423035
    2. '>' → logprob: -1.6621921062469482
    3. ' <' → logprob: -2.6621921062469482
    4. ' <=' → logprob: -2.9121921062469482
    5. '+' → logprob: -3.0371921062469482
    6. '=' → logprob: -4.287191867828369
    7. ')' → logprob: -4.537191867828369
    8. '<=' → logprob: -4.537191867828369
    9. '<' → logprob: -5.162191867828369
    10. ' +' → logprob: -5.162191867828369

Token 588: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20308361947536469
    2. ' i' → logprob: -1.7030836343765259
    3. ')' → logprob: -7.578083515167236
    4. 'j' → logprob: -8.203083992004395
    5. '```' → logprob: -8.328083992004395
    6. ' ' → logprob: -8.578083992004395
    7. '   ' → logprob: -9.453083992004395
    8. '	i' → logprob: -9.828083992004395
    9. ' j' → logprob: -10.078083992004395
    10. '``' → logprob: -10.328083992004395

Token 589: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05475035682320595
    2. ').' → logprob: -3.679750442504883
    3. '):' → logprob: -4.304750442504883
    4. ' )' → logprob: -5.304750442504883
    5. ')
' → logprob: -6.054750442504883
    6. '):
' → logprob: -6.054750442504883
    7. '),' → logprob: -6.554750442504883
    8. '   ' → logprob: -6.929750442504883
    9. '+' → logprob: -7.304750442504883
    10. ',' → logprob: -8.054750442504883

Token 590: ' satisf' (ID: 8824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06531137228012085
    2. ':' → logprob: -3.3153114318847656
    3. '.' → logprob: -4.940311431884766
    4. ',' → logprob: -5.190311431884766
    5. '    
' → logprob: -5.315311431884766
    6. ')' → logprob: -6.065311431884766
    7. '
' → logprob: -6.690311431884766
    8. ':
' → logprob: -6.815311431884766
    9. '):' → logprob: -6.940311431884766
    10. '):
' → logprob: -7.315311431884766

Token 591: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.5361030697822571
    2. 'a' → logprob: -1.6611030101776123
    3. 'ait' → logprob: -2.0361030101776123
    4. '   ' → logprob: -2.5361030101776123
    5. 'aient' → logprob: -5.786103248596191
    6. '       ' → logprob: -6.286103248596191
    7. 'aites' → logprob: -6.536103248596191
    8. 'aits' → logprob: -6.786103248596191
    9. '```' → logprob: -6.786103248596191
    10. 'e' → logprob: -7.161103248596191

Token 592: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.016987409442663193
    2. '   ' → logprob: -5.141987323760986
    3. 'ent' → logprob: -5.766987323760986
    4. 'es' → logprob: -6.641987323760986
    5. 'ait' → logprob: -6.766987323760986
    6. '#' → logprob: -7.016987323760986
    7. 's' → logprob: -7.391987323760986
    8. 'aient' → logprob: -7.641987323760986
    9. 'ante' → logprob: -7.766987323760986
    10. 'ants' → logprob: -8.016987800598145

Token 593: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.536096453666687
    2. ' <=' → logprob: -1.536096453666687
    3. '   ' → logprob: -1.911096453666687
    4. '```' → logprob: -2.2860965728759766
    5. ' la' → logprob: -2.7860965728759766
    6. ' j' → logprob: -2.7860965728759766
    7. ':' → logprob: -3.6610965728759766
    8. '10' → logprob: -3.6610965728759766
    9. ' `' → logprob: -4.161096572875977
    10. '  ' → logprob: -4.161096572875977

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40110209584236145
    2. ' =' → logprob: -2.276102066040039
    3. ' à' → logprob: -2.901102066040039
    4. ')' → logprob: -3.776102066040039
    5. '    ' → logprob: -3.901102066040039
    6. ' <=' → logprob: -3.901102066040039
    7. '=' → logprob: -3.901102066040039
    8. '```' → logprob: -3.901102066040039
    9. ' j' → logprob: -4.026102066040039
    10. ' ' → logprob: -4.776102066040039

Token 595: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701258659362793
    2. ' à' → logprob: -2.0201258659362793
    3. '=' → logprob: -3.6451258659362793
    4. ' =' → logprob: -4.020125865936279
    5. '    ' → logprob: -4.395125865936279
    6. 'à' → logprob: -4.770125865936279
    7. '<=' → logprob: -4.770125865936279
    8. ' <=' → logprob: -4.895125865936279
    9. '```' → logprob: -5.270125865936279
    10. ')' → logprob: -6.020125865936279

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17353396117687225
    2. ')' → logprob: -3.7985339164733887
    3. '    ' → logprob: -4.298533916473389
    4. ''' → logprob: -4.298533916473389
    5. ' <=' → logprob: -4.298533916473389
    6. '```' → logprob: -4.298533916473389
    7. '[i' → logprob: -4.548533916473389
    8. ' =' → logprob: -4.673533916473389
    9. '_' → logprob: -5.173533916473389
    10. ' ' → logprob: -5.173533916473389

Token 597: ' ' (ID: 220)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9459813237190247
    2. ' <=' → logprob: -1.4459812641143799
    3. '10' → logprob: -2.07098126411438
    4. ' ' → logprob: -3.07098126411438
    5. '   ' → logprob: -3.07098126411438
    6. ' j' → logprob: -3.32098126411438
    7. '=' → logprob: -3.69598126411438
    8. '+' → logprob: -3.82098126411438
    9. '1' → logprob: -3.94598126411438
    10. ' +' → logprob: -4.445981502532959

Token 598: '10' (ID: 702)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3974578082561493
    2. ' j' → logprob: -2.2724578380584717
    3. '<=' → logprob: -2.3974578380584717
    4. '   ' → logprob: -3.3974578380584717
    5. ' ' → logprob: -3.5224578380584717
    6. '10' → logprob: -3.7724578380584717
    7. '=' → logprob: -4.522457599639893
    8. ' =' → logprob: -5.397457599639893
    9. ''' → logprob: -5.522457599639893
    10. ')' → logprob: -5.647457599639893

Token 599: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.5327576398849487
    2. '*' → logprob: -0.9077576398849487
    3. ' *' → logprob: -4.657757759094238
    4. '*j' → logprob: -10.032757759094238
    5. ' *(' → logprob: -11.157757759094238
    6. '   ' → logprob: -11.407757759094238
    7. '(j' → logprob: -11.782757759094238
    8. '(' → logprob: -11.907757759094238
    9. '**' → logprob: -12.907757759094238
    10. '*((' → logprob: -13.032757759094238

Token 600: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19756510853767395
    2. '1' → logprob: -1.9475650787353516
    3. '(j' → logprob: -3.4475650787353516
    4. ' j' → logprob: -5.822565078735352
    5. ' (' → logprob: -6.447565078735352
    6. ' ' → logprob: -9.072565078735352
    7. ')' → logprob: -9.947565078735352
    8. '[j' → logprob: -10.697565078735352
    9. '(' → logprob: -11.197565078735352
    10. '+' → logprob: -11.322565078735352

Token 601: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7126206755638123
    2. '-' → logprob: -1.337620735168457
    3. '+' → logprob: -2.337620735168457
    4. ')' → logprob: -2.712620735168457
    5. ' <=' → logprob: -3.337620735168457
    6. '<=' → logprob: -3.712620735168457
    7. ' +' → logprob: -4.837620735168457
    8. '   ' → logprob: -5.212620735168457
    9. '-j' → logprob: -5.712620735168457
    10. '[' → logprob: -6.962620735168457

Token 602: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028514713048934937
    2. ')<=' → logprob: -6.377851486206055
    3. ' )' → logprob: -7.127851486206055
    4. '<=' → logprob: -8.877851486206055
    5. ' <=' → logprob: -9.252851486206055
    6. '')' → logprob: -11.002851486206055
    7. '*)' → logprob: -11.127851486206055
    8. '`)' → logprob: -11.502851486206055
    9. ')
' → logprob: -11.627851486206055
    10. '")' → logprob: -11.627851486206055

Token 603: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.062128227204084396
    2. '<=' → logprob: -2.8121283054351807
    3. ')' → logprob: -9.437128067016602
    4. ')<=' → logprob: -10.312128067016602
    5. '```' → logprob: -11.062128067016602
    6. ' ' → logprob: -11.687128067016602
    7. '   ' → logprob: -11.937128067016602
    8. ' ≤' → logprob: -12.812128067016602
    9. ' <' → logprob: -13.187128067016602
    10. ']<=' → logprob: -13.312128067016602

Token 604: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9857420325279236
    2. ' d' → logprob: -1.1107420921325684
    3. 'd' → logprob: -1.7357420921325684
    4. 'min' → logprob: -2.1107420921325684
    5. ' ' → logprob: -10.23574161529541
    6. ' ' → logprob: -11.23574161529541
    7. '```' → logprob: -11.23574161529541
    8. 'max' → logprob: -11.61074161529541
    9. '[min' → logprob: -12.48574161529541
    10. ' max' → logprob: -12.67324161529541

Token 605: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.388067364692688
    2. '(' → logprob: -1.138067364692688
    3. ' (' → logprob: -6.888067245483398
    4. '(
' → logprob: -8.763067245483398
    5. 'd' → logprob: -12.138067245483398
    6. ' d' → logprob: -12.263067245483398
    7. ' (
' → logprob: -13.638067245483398
    8. ',' → logprob: -13.763067245483398
    9. ' ' → logprob: -13.888067245483398
    10. '"' → logprob: -14.138067245483398

Token 606: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.051286131143569946
    2. '[j' → logprob: -3.176286220550537
    3. '[' → logprob: -4.801286220550537
    4. '[
' → logprob: -10.926285743713379
    5. ' [' → logprob: -12.301285743713379
    6. ')' → logprob: -13.551285743713379
    7. '   ' → logprob: -13.551285743713379
    8. '[min' → logprob: -14.176285743713379
    9. '[I' → logprob: -14.301285743713379
    10. '[user' → logprob: -14.426285743713379

Token 607: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.008104100823402405
    2. '[i' → logprob: -5.38310432434082
    3. '[j' → logprob: -6.00810432434082
    4. ',' → logprob: -7.50810432434082
    5. ']' → logprob: -8.88310432434082
    6. '),' → logprob: -9.38310432434082
    7. '[' → logprob: -9.63310432434082
    8. '   ' → logprob: -10.00810432434082
    9. '],[' → logprob: -10.13310432434082
    10. ' ],' → logprob: -10.38310432434082

Token 608: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17988735437393188
    2. 'd' → logprob: -1.804887294769287
    3. ' ' → logprob: -9.679887771606445
    4. '   ' → logprob: -10.054887771606445
    5. ' ' → logprob: -11.554887771606445
    6. '    ' → logprob: -12.179887771606445
    7. '```' → logprob: -12.304887771606445
    8. '[' → logprob: -12.804887771606445
    9. ')' → logprob: -13.367387771606445
    10. '  ' → logprob: -13.367387771606445

Token 609: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005563974846154451
    2. 'j' → logprob: -5.630564212799072
    3. '[i' → logprob: -6.255564212799072
    4. '[' → logprob: -11.255563735961914
    5. ']' → logprob: -12.255563735961914
    6. 'i' → logprob: -12.505563735961914
    7. ' j' → logprob: -12.505563735961914
    8. '
' → logprob: -13.005563735961914
    9. '])' → logprob: -13.130563735961914
    10. '[
' → logprob: -13.130563735961914

Token 610: ']).
' (ID: 135644)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003865516046062112
    2. '])
' → logprob: -5.878865718841553
    3. ']).' → logprob: -7.503865718841553
    4. '])
' → logprob: -8.503865242004395
    5. '[i' → logprob: -9.878865242004395
    6. ']))' → logprob: -10.253865242004395
    7. ']),' → logprob: -10.253865242004395
    8. '   ' → logprob: -10.253865242004395
    9. '[j' → logprob: -10.378865242004395
    10. '])

' → logprob: -10.503865242004395

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01080609206110239
    2. 'def' → logprob: -5.510806083679199
    3. '    
' → logprob: -5.635806083679199
    4. ')' → logprob: -6.385806083679199
    5. '    ' → logprob: -7.885806083679199
    6. '#' → logprob: -8.3858060836792
    7. '
' → logprob: -9.3858060836792
    8. ' ' → logprob: -9.3858060836792
    9. '     
' → logprob: -9.3858060836792
    10. ' def' → logprob: -9.6358060836792

Token 612: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015035520773380995
    2. '    
' → logprob: -7.0015034675598145
    3. ')' → logprob: -8.001503944396973
    4. 'def' → logprob: -9.001503944396973
    5. '
' → logprob: -10.751503944396973
    6. '    ' → logprob: -10.876503944396973
    7. '```' → logprob: -11.501503944396973
    8. '    
    
' → logprob: -11.626503944396973
    9. '       ' → logprob: -11.876503944396973
    10. '   
' → logprob: -11.876503944396973

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006079291459172964
    2. '    
' → logprob: -5.131079196929932
    3. ')' → logprob: -10.50607967376709
    4. '
' → logprob: -10.50607967376709
    5. '#' → logprob: -11.00607967376709
    6. '    ' → logprob: -11.13107967376709
    7. ' 
' → logprob: -11.63107967376709
    8. '   
' → logprob: -11.63107967376709
    9. '    
    
' → logprob: -11.88107967376709
    10. 'def' → logprob: -12.13107967376709

Token 614: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025592572055757046
    2. '    
' → logprob: -6.127559185028076
    3. '#' (adapté à ' #') → logprob: -9.002559661865234
    4. '
' → logprob: -9.502559661865234
    5. ')' → logprob: -10.127559661865234
    6. 'def' → logprob: -10.127559661865234
    7. ' ' → logprob: -11.127559661865234
    8. '   
' → logprob: -11.502559661865234
    9. '   ' → logprob: -11.502559661865234
    10. '    ' → logprob: -11.627559661865234

Token 615: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21907219290733337
    2. 'max' → logprob: -2.094072103500366
    3. '#' → logprob: -3.594072103500366
    4. ' max' → logprob: -4.344072341918945
    5. 'def' → logprob: -4.719072341918945
    6. 'for' → logprob: -5.344072341918945
    7. 'i' → logprob: -5.719072341918945
    8. 'reachable' → logprob: -5.719072341918945
    9. ' reachable' → logprob: -5.844072341918945
    10. '    
' → logprob: -6.594072341918945

Token 616: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6206614375114441
    2. 'max' → logprob: -1.3706614971160889
    3. '#' → logprob: -2.120661497116089
    4. 'def' → logprob: -3.870661497116089
    5. 'for' → logprob: -3.870661497116089
    6. 'i' → logprob: -4.12066125869751
    7. 'reachable' → logprob: -5.12066125869751
    8. 'from' → logprob: -5.87066125869751
    9. 'visited' → logprob: -5.87066125869751
    10. 'left' → logprob: -5.99566125869751

Token 617: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.077528764260933e-05
    2. '   ' → logprob: -10.125081062316895
    3. '#' → logprob: -11.000081062316895
    4. 'def' → logprob: -11.500081062316895
    5. ' .' → logprob: -12.500081062316895
    6. '.
' → logprob: -12.750081062316895
    7. ').' → logprob: -13.625081062316895
    8. '0' → logprob: -14.125081062316895
    9. '\.' → logprob: -14.250081062316895
    10. '2' → logprob: -14.625081062316895

Token 618: ' Sens' (ID: 47208)
  Prédit: 'Sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sens' → logprob: -0.5774840116500854
    2. ' Sens' → logprob: -1.5774840116500854
    3. '#' → logprob: -1.7024840116500854
    4. ' #' → logprob: -4.577484130859375
    5. 'Retour' → logprob: -4.952484130859375
    6. 'return' → logprob: -5.077484130859375
    7. 'def' → logprob: -5.077484130859375
    8. '   ' → logprob: -5.952484130859375
    9. 'ret' → logprob: -6.077484130859375
    10. 'sens' → logprob: -6.202484130859375

Token 619: ' retour' (ID: 30714)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3503910005092621
    2. ' retour' → logprob: -1.2253910303115845
    3. 'aller' → logprob: -7.350390911102295
    4. 'return' → logprob: -7.600390911102295
    5. ' aller' → logprob: -8.350391387939453
    6. ' ret' → logprob: -9.850391387939453
    7. ' ' → logprob: -9.975391387939453
    8. ' return' → logprob: -10.225391387939453
    9. '```' → logprob: -10.225391387939453
    10. 'inverse' → logprob: -10.537891387939453

Token 620: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6533024311065674
    2. '   ' → logprob: -1.2783024311065674
    3. ' (' → logprob: -1.7783024311065674
    4. '(' → logprob: -4.028302192687988
    5. ' :' → logprob: -4.653302192687988
    6. 'def' → logprob: -6.778302192687988
    7. '#' → logprob: -7.153302192687988
    8. ':
' → logprob: -7.153302192687988
    9. '):' → logprob: -7.778302192687988
    10. ',' → logprob: -7.903302192687988

Token 621: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12182999402284622
    2. ' de' → logprob: -2.7468299865722656
    3. 'def' → logprob: -4.371829986572266
    4. 'N' → logprob: -4.496829986572266
    5. ')' → logprob: -4.621829986572266
    6. '   ' → logprob: -5.246829986572266
    7. ' N' → logprob: -5.621829986572266
    8. 'from' → logprob: -6.496829986572266
    9. 'd' → logprob: -6.746829986572266
    10. '0' → logprob: -6.871829986572266

Token 622: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2699636220932007
    2. ' N' → logprob: -1.5199636220932007
    3. '0' → logprob: -4.14496374130249
    4. ' ' → logprob: -6.39496374130249
    5. '1' → logprob: -9.394963264465332
    6. ')' → logprob: -9.644963264465332
    7. 'j' → logprob: -10.019963264465332
    8. '(N' → logprob: -10.394963264465332
    9. ' (' → logprob: -10.832463264465332
    10. '   ' → logprob: -10.894963264465332

Token 623: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00022928470571059734
    2. ' -' → logprob: -8.750228881835938
    3. '```' → logprob: -11.000228881835938
    4. '#' → logprob: -11.250228881835938
    5. ' to' → logprob: -11.750228881835938
    6. 'to' → logprob: -11.875228881835938
    7. '->' → logprob: -12.250228881835938
    8. ')' → logprob: -12.500228881835938
    9. '+' → logprob: -12.625228881835938
    10. '1' → logprob: -13.000228881835938

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.376848902320489e-05
    2. '-' → logprob: -9.500093460083008
    3. ' ' → logprob: -12.000093460083008
    4. '2' → logprob: -12.250093460083008
    5. ')' → logprob: -12.875093460083008
    6. '
' → logprob: -14.000093460083008
    7. '10' → logprob: -14.625093460083008
    8. '```' → logprob: -14.937593460083008
    9. '3' → logprob: -15.125093460083008
    10. ',' → logprob: -15.437593460083008

Token 625: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.49074381589889526
    2. 'à' → logprob: -1.74074387550354
    3. '-' → logprob: -2.36574387550354
    4. ')' → logprob: -2.99074387550354
    5. ' to' → logprob: -3.49074387550354
    6. 'to' → logprob: -4.240743637084961
    7. ' vers' → logprob: -4.740743637084961
    8. ' ' → logprob: -5.240743637084961
    9. ' -' → logprob: -6.490743637084961
    10. ''à' → logprob: -6.615743637084961

Token 626: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006831994745880365
    2. ' ' → logprob: -5.006832122802734
    3. 'N' → logprob: -9.881832122802734
    4. ' N' → logprob: -10.756832122802734
    5. '1' → logprob: -11.256832122802734
    6. '```' → logprob: -11.756832122802734
    7. '   ' → logprob: -11.881832122802734
    8. ')' → logprob: -12.131832122802734
    9. '`' → logprob: -13.444332122802734
    10. '
' → logprob: -13.569332122802734

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.248469718324486e-05
    2. 'N' → logprob: -11.500022888183594
    3. ' ' → logprob: -11.875022888183594
    4. '```' → logprob: -12.875022888183594
    5. '1' → logprob: -13.125022888183594
    6. '   ' → logprob: -15.500022888183594
    7. ')' → logprob: -16.000022888183594
    8. '...' → logprob: -16.562522888183594
    9. '-' → logprob: -16.625022888183594
    10. '`' → logprob: -16.812522888183594

Token 628: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03156580403447151
    2. ')' → logprob: -3.6565659046173096
    3. '):
' → logprob: -5.2815656661987305
    4. ':' → logprob: -9.28156566619873
    5. '):

' → logprob: -10.03156566619873
    6. '#' → logprob: -11.65656566619873
    7. '):
' → logprob: -12.03156566619873
    8. ' ):' → logprob: -12.03156566619873
    9. '   ' → logprob: -13.28156566619873
    10. 'def' → logprob: -13.40656566619873

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03697054088115692
    2. ')' → logprob: -4.286970615386963
    3. '<|end|>' → logprob: -4.286970615386963
    4. '    
' → logprob: -6.161970615386963
    5. ':' → logprob: -6.286970615386963
    6. '#' → logprob: -6.536970615386963
    7. '    ' → logprob: -7.536970615386963
    8. '[' → logprob: -7.661970615386963
    9. '\' → logprob: -7.911970615386963
    10. '<|end|>' → logprob: -7.911970615386963

Token 630: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019300032407045364
    2. '#' (adapté à ' #') → logprob: -4.8942999839782715
    3. 'def' → logprob: -5.2692999839782715
    4. '    
' → logprob: -5.8942999839782715
    5. ':' → logprob: -6.3942999839782715
    6. '```' → logprob: -7.6442999839782715
    7. ')' → logprob: -7.7692999839782715
    8. '
' → logprob: -7.8942999839782715
    9. '<|end|>' → logprob: -8.26930046081543
    10. '[' → logprob: -9.01930046081543

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051209911704063416
    2. '#' → logprob: -4.051209926605225
    3. '[' → logprob: -4.551209926605225
    4. '    ' → logprob: -4.926209926605225
    5. 'def' → logprob: -5.301209926605225
    6. ')' → logprob: -6.301209926605225
    7. '    
' → logprob: -6.426209926605225
    8. '<|end|>' → logprob: -7.051209926605225
    9. '   ' → logprob: -7.426209926605225
    10. '	' → logprob: -7.551209926605225

Token 632: ' De' (ID: 1516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06298577040433884
    2. 'On' → logprob: -3.18798565864563
    3. '#' → logprob: -4.562985897064209
    4. 'def' → logprob: -6.187985897064209
    5. 'Pour' → logprob: -6.187985897064209
    6. '  ' → logprob: -6.812985897064209
    7. ' On' → logprob: -6.937985897064209
    8. 'Util' → logprob: -7.687985897064209
    9. ' ' → logprob: -7.687985897064209
    10. 'for' → logprob: -7.937985897064209

Token 633: ' manière' (ID: 35013)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.712615430355072
    2. 'N' → logprob: -1.8376154899597168
    3. ' N' → logprob: -1.8376154899597168
    4. ' ' → logprob: -2.087615489959717
    5. 'f' → logprob: -2.837615489959717
    6. ' la' → logprob: -6.962615489959717
    7. '   ' → logprob: -7.212615489959717
    8. '```' → logprob: -7.212615489959717
    9. ' f' → logprob: -7.337615489959717
    10. 'def' → logprob: -7.337615489959717

Token 634: ' similaire' (ID: 170967)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.24515466392040253
    2. ' sym' → logprob: -2.245154619216919
    3. 'inverse' → logprob: -2.620154619216919
    4. 'sim' → logprob: -4.120154857635498
    5. 'op' → logprob: -4.870154857635498
    6. 'reverse' → logprob: -5.495154857635498
    7. ' similaire' → logprob: -5.870154857635498
    8. 'bid' → logprob: -6.620154857635498
    9. 'direct' → logprob: -7.120154857635498
    10. 'in' → logprob: -7.120154857635498

Token 635: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7359444499015808
    2. ':' → logprob: -0.9859444499015808
    3. ',' → logprob: -2.7359445095062256
    4. '.' → logprob: -3.2359445095062256
    5. 'def' → logprob: -3.9859445095062256
    6. '#' → logprob: -4.4859442710876465
    7. ' (' → logprob: -5.4859442710876465
    8. ')' → logprob: -6.4859442710876465
    9. '```' → logprob: -6.8609442710876465
    10. ' ' → logprob: -7.1109442710876465

Token 636: ' vérifier' (ID: 93671)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.429545521736145
    2. '   ' → logprob: -1.179545521736145
    3. '#' → logprob: -3.8045454025268555
    4. 'on' → logprob: -4.4295454025268555
    5. '    ' → logprob: -5.8045454025268555
    6. ' ' → logprob: -6.5545454025268555
    7. 'def' → logprob: -7.8045454025268555
    8. ' continuer' → logprob: -7.9295454025268555
    9. ' je' → logprob: -8.554545402526855
    10. '   ' → logprob: -8.554545402526855

Token 637: ' la' (ID: 557)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.48235681653022766
    2. ' si' → logprob: -0.9823567867279053
    3. 'if' → logprob: -5.732357025146484
    4. ' if' → logprob: -6.232357025146484
    5. '   ' → logprob: -7.232357025146484
    6. 's' → logprob: -7.357357025146484
    7. 'on' → logprob: -7.482357025146484
    8. ' on' → logprob: -8.482357025146484
    9. ' ' → logprob: -8.607357025146484
    10. 'de' → logprob: -8.857357025146484

Token 638: ' connect' (ID: 4837)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.33841222524642944
    2. 'contin' → logprob: -2.338412284851074
    3. 'possible' → logprob: -3.088412284851074
    4. ' possibilité' → logprob: -3.088412284851074
    5. 'cap' → logprob: -3.838412284851074
    6. 'connect' → logprob: -3.963412284851074
    7. 'pos' → logprob: -4.713412284851074
    8. 'distance' → logprob: -4.713412284851074
    9. 'connexion' → logprob: -4.838412284851074
    10. ' poss' → logprob: -5.713412284851074

Token 639: 'ivité' (ID: 73445)
  Prédit: 'ivité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivité' → logprob: -0.23201723396778107
    2. 'ité' → logprob: -1.6070172786712646
    3. 'ivity' → logprob: -5.8570170402526855
    4. 'ity' → logprob: -6.6070170402526855
    5. 'itiv' → logprob: -7.2320170402526855
    6. 'ibilité' → logprob: -7.8570170402526855
    7. '#' → logprob: -7.9820170402526855
    8. 'ion' → logprob: -8.232017517089844
    9. 'itivity' → logprob: -8.357017517089844
    10. 'iv' → logprob: -9.232017517089844

Token 640: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48405641317367554
    2. 'de' → logprob: -2.3590564727783203
    3. ' de' → logprob: -2.6090564727783203
    4. ' entre' → logprob: -3.1090564727783203
    5. 'from' → logprob: -3.6090564727783203
    6. 'entre' → logprob: -4.10905647277832
    7. 'du' → logprob: -4.48405647277832
    8. 'dep' → logprob: -4.60905647277832
    9. ',' → logprob: -4.73405647277832
    10. 'def' → logprob: -4.85905647277832

Token 641: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.22536000609397888
    2. 'util' → logprob: -2.4753599166870117
    3. 'su' → logprob: -2.8503599166870117
    4. 'part' → logprob: -4.350359916687012
    5. ' parcour' → logprob: -4.975359916687012
    6. 'b' → logprob: -5.725359916687012
    7. 'continu' → logprob: -5.850359916687012
    8. ' sens' → logprob: -5.975359916687012
    9. 's' → logprob: -5.975359916687012
    10. 'con' → logprob: -6.100359916687012

Token 642: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.2451159507036209
    2. 'inverse' → logprob: -1.6201159954071045
    3. 'aller' → logprob: -4.995115756988525
    4. ' retour' → logprob: -6.120115756988525
    5. ' oppos' → logprob: -6.245115756988525
    6. ' aller' → logprob: -6.370115756988525
    7. 'ret' → logprob: -6.995115756988525
    8. ' invers' → logprob: -6.995115756988525
    9. 'op' → logprob: -7.120115756988525
    10. ' reverse' → logprob: -7.120115756988525

Token 643: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2007215917110443
    2. '.' → logprob: -2.200721502304077
    3. ':' → logprob: -3.450721502304077
    4. ')' → logprob: -4.200721740722656
    5. ',' → logprob: -4.825721740722656
    6. 'def' → logprob: -4.950721740722656
    7. '<|end|>' → logprob: -5.325721740722656
    8. '):' → logprob: -6.450721740722656
    9. '```' → logprob: -7.575721740722656
    10. ').' → logprob: -7.950721740722656

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029727580025792122
    2. '    
' → logprob: -3.9047276973724365
    3. 'def' → logprob: -5.529727458953857
    4. ')' → logprob: -6.404727458953857
    5. ':' → logprob: -7.154727458953857
    6. '\' → logprob: -7.404727458953857
    7. '\n' → logprob: -7.904727458953857
    8. '
' → logprob: -8.529727935791016
    9. '  
' → logprob: -8.654727935791016
    10. '<|end|>' → logprob: -8.654727935791016

Token 645: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0377490371465683
    2. '    
' → logprob: -3.6627490520477295
    3. 'def' → logprob: -5.91274881362915
    4. ')' → logprob: -6.03774881362915
    5. ':' → logprob: -6.53774881362915
    6. '\' → logprob: -6.78774881362915
    7. '\n' → logprob: -6.78774881362915
    8. '
' → logprob: -7.16274881362915
    9. '    
    
' → logprob: -8.412749290466309
    10. '<|end|>' → logprob: -8.412749290466309

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0936557799577713
    2. '    
' → logprob: -2.468655824661255
    3. '
' → logprob: -5.968655586242676
    4. 'def' → logprob: -6.718655586242676
    5. '    
    
' → logprob: -8.343655586242676
    6. '<|end|>' → logprob: -8.468655586242676
    7. '```' → logprob: -9.468655586242676
    8. ' 
' → logprob: -9.593655586242676
    9. '<|end|>' → logprob: -9.968655586242676
    10. '  
' → logprob: -10.218655586242676

Token 647: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042365577071905136
    2. '    
' → logprob: -3.292365550994873
    3. '
' → logprob: -6.292365550994873
    4. 'def' → logprob: -6.417365550994873
    5. ')' → logprob: -8.292366027832031
    6. '    
    
' → logprob: -9.167366027832031
    7. '#' (adapté à ' #') → logprob: -9.542366027832031
    8. '\' → logprob: -10.042366027832031
    9. ' 
' → logprob: -10.167366027832031
    10. '```' → logprob: -10.167366027832031

Token 648: ' Appro' (ID: 24145)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3049046993255615
    2. 'def' → logprob: -1.5549046993255615
    3. '    
' → logprob: -3.6799046993255615
    4. '#' → logprob: -4.304904937744141
    5. 'from' → logprob: -5.179904937744141
    6. '
' → logprob: -5.554904937744141
    7. 'import' → logprob: -6.179904937744141
    8. 'max' → logprob: -7.929904937744141
    9. ' def' → logprob: -8.55490493774414
    10. ' #' → logprob: -9.05490493774414

Token 649: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.011528866365551949
    2. 'ach' → logprob: -4.511528968811035
    3. 'ch' → logprob: -8.636528968811035
    4. 'ache' → logprob: -8.886528968811035
    5. '#' → logprob: -9.136528968811035
    6. 'x' → logprob: -11.011528968811035
    7. 'ches' → logprob: -11.261528968811035
    8. '   ' → logprob: -12.761528968811035
    9. '##' → logprob: -13.136528968811035
    10. 'visionnement' → logprob: -13.136528968811035

Token 650: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09190210700035095
    2. ' =' → logprob: -2.716902017593384
    3. ' :' → logprob: -4.591902256011963
    4. '=' → logprob: -5.216902256011963
    5. ':
' → logprob: -5.591902256011963
    6. 'def' → logprob: -7.341902256011963
    7. '   ' → logprob: -7.716902256011963
    8. '[' → logprob: -7.841902256011963
    9. '[]' → logprob: -8.966901779174805
    10. ' ' → logprob: -9.466901779174805

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028162896633148193
    2. '#' → logprob: -6.877816200256348
    3. '    
' → logprob: -6.877816200256348
    4. '    ' → logprob: -7.877816200256348
    5. 'def' → logprob: -9.127816200256348
    6. ' #' → logprob: -9.377816200256348
    7. '
' → logprob: -10.127816200256348
    8. 'from' → logprob: -10.252816200256348
    9. '```' → logprob: -10.627816200256348
    10. ' ' → logprob: -11.127816200256348

Token 652: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024875495582818985
    2. '    
' → logprob: -7.127487659454346
    3. '    ' → logprob: -7.252487659454346
    4. '#' (adapté à ' #') → logprob: -8.127487182617188
    5. 'def' → logprob: -8.627487182617188
    6. '
' → logprob: -9.252487182617188
    7. ' #' → logprob: -9.502487182617188
    8. '```' → logprob: -9.752487182617188
    9. 'from' → logprob: -10.252487182617188
    10. 'import' → logprob: -10.252487182617188

Token 653: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.195185124874115
    2. 'def' → logprob: -2.3201851844787598
    3. '#' → logprob: -3.3201851844787598
    4. '    
' → logprob: -4.69518518447876
    5. '
' → logprob: -4.82018518447876
    6. 'from' → logprob: -4.94518518447876
    7. '"""
' → logprob: -5.32018518447876
    8. ' def' → logprob: -6.19518518447876
    9. '```' → logprob: -6.44518518447876
    10. '[
' → logprob: -6.44518518447876

Token 654: ' trampoline' (ID: 162506)
  Prédit: ' trampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trampoline' → logprob: -0.1995263546705246
    2. 'tr' → logprob: -2.324526309967041
    3. ' tramp' → logprob: -2.824526309967041
    4. 'i' → logprob: -5.074526309967041
    5. 'indice' → logprob: -5.324526309967041
    6. 'position' → logprob: -5.699526309967041
    7. ' position' → logprob: -5.949526309967041
    8. ' i' → logprob: -6.449526309967041
    9. 'index' → logprob: -7.199526309967041
    10. ' indice' → logprob: -7.449526309967041

Token 655: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43939271569252014
    2. 'i' → logprob: -1.0643926858901978
    3. '[i' → logprob: -5.189392566680908
    4. '_i' → logprob: -6.189392566680908
    5. ' peut' → logprob: -7.064392566680908
    6. ' a' → logprob: -7.189392566680908
    7. ' est' → logprob: -8.064393043518066
    8. ' ' → logprob: -8.564393043518066
    9. ' ' → logprob: -8.814393043518066
    10. '[' → logprob: -9.064393043518066

Token 656: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.6972374320030212
    2. ' est' → logprob: -1.822237491607666
    3. ' i' → logprob: -2.822237491607666
    4. ' =' → logprob: -2.947237491607666
    5. ' représente' → logprob: -2.947237491607666
    6. '[i' → logprob: -3.947237491607666
    7. 'i' → logprob: -4.072237491607666
    8. ':' → logprob: -4.197237491607666
    9. ' possède' → logprob: -4.197237491607666
    10. ' a' → logprob: -4.322237491607666

Token 657: ' atteindre' (ID: 95734)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26614657044410706
    2. 'sa' → logprob: -3.016146659851074
    3. 'atte' → logprob: -3.141146659851074
    4. ' sa' → logprob: -3.641146659851074
    5. ' at' → logprob: -4.141146659851074
    6. ' atteindre' → logprob: -4.516146659851074
    7. ' ' → logprob: -4.766146659851074
    8. 'faire' → logprob: -4.766146659851074
    9. ' faire' → logprob: -5.391146659851074
    10. 'atter' → logprob: -5.516146659851074

Token 658: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.751724123954773
    2. ' les' → logprob: -1.626724123954773
    3. ' tous' → logprob: -2.5017242431640625
    4. 'j' → logprob: -2.8767242431640625
    5. ' j' → logprob: -2.8767242431640625
    6. ' au' → logprob: -4.2517242431640625
    7. ' jusqu' → logprob: -4.2517242431640625
    8. 'une' → logprob: -4.3767242431640625
    9. ' ' → logprob: -4.3767242431640625
    10. ' des' → logprob: -4.5017242431640625

Token 659: ' tramp' (ID: 94418)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.3879621028900146
    2. ' indices' → logprob: -1.6379621028900146
    3. ' tramp' → logprob: -1.7629621028900146
    4. 'tr' → logprob: -1.8879621028900146
    5. 'i' → logprob: -2.1379621028900146
    6. 'positions' → logprob: -3.7629621028900146
    7. 'j' → logprob: -3.8879621028900146
    8. ' i' → logprob: -4.137962341308594
    9. ' positions' → logprob: -4.387962341308594
    10. ' prochains' → logprob: -4.887962341308594

Token 660: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.0502452626824379
    2. 'oline' → logprob: -3.0502452850341797
    3. 'olini' → logprob: -8.17524528503418
    4. '   ' → logprob: -8.30024528503418
    5. 'olim' → logprob: -8.30024528503418
    6. 'olone' → logprob: -8.67524528503418
    7. 'pl' → logprob: -8.80024528503418
    8. 'olin' → logprob: -9.55024528503418
    9. 'olino' → logprob: -9.92524528503418
    10. 'opl' → logprob: -10.17524528503418

Token 661: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.06252148002386093
    2. 'in' → logprob: -3.937521457672119
    3. 'ine' → logprob: -4.062521457672119
    4. '#' → logprob: -5.437521457672119
    5. 'i' → logprob: -5.437521457672119
    6. '[i' → logprob: -5.687521457672119
    7. 'ol' → logprob: -5.937521457672119
    8. '   ' → logprob: -6.312521457672119
    9. 'es' → logprob: -6.437521457672119
    10. 'ins' → logprob: -6.562521457672119

Token 662: ' j' (ID: 441)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.6603884100914001
    2. ' j' → logprob: -1.535388469696045
    3. 'j' → logprob: -2.285388469696045
    4. ' i' → logprob: -3.410388469696045
    5. ' suivantes' → logprob: -3.535388469696045
    6. ' suivant' → logprob: -3.785388469696045
    7. ' voisins' → logprob: -3.785388469696045
    8. 'i' → logprob: -4.410388469696045
    9. ' adj' → logprob: -4.660388469696045
    10. 'adj' → logprob: -4.910388469696045

Token 663: ' sup' (ID: 1982)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.7274989485740662
    2. ' tels' → logprob: -1.852499008178711
    3. ' suivant' → logprob: -2.477499008178711
    4. ' j' → logprob: -3.102499008178711
    5. ' such' → logprob: -3.352499008178711
    6. ' suivantes' → logprob: -3.602499008178711
    7. '>' → logprob: -3.852499008178711
    8. '>=' → logprob: -3.977499008178711
    9. ' suivante' → logprob: -4.227499008178711
    10. '   ' → logprob: -4.227499008178711

Token 664: 'érieurs' (ID: 97672)
  Prédit: 'érieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.8595787882804871
    2. 'érieurs' → logprob: -0.8595787882804871
    3. 'pl' → logprob: -2.234578847885132
    4. 'érieures' → logprob: -4.734578609466553
    5. 'é' → logprob: -4.984578609466553
    6. '>' → logprob: -5.234578609466553
    7. 'érieure' → logprob: -5.359578609466553
    8. '   ' → logprob: -5.484578609466553
    9. '=' → logprob: -5.859578609466553
    10. 'port' → logprob: -5.859578609466553

Token 665: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7916293144226074
    2. ' suivants' → logprob: -1.5416293144226074
    3. ' =' → logprob: -2.4166293144226074
    4. ' à' → logprob: -2.9166293144226074
    5. '=i' → logprob: -3.1666293144226074
    6. ',' → logprob: -3.7916293144226074
    7. '[i' → logprob: -4.166629314422607
    8. '   ' → logprob: -4.416629314422607
    9. ' suivant' → logprob: -4.666629314422607
    10. ' (' → logprob: -4.916629314422607

Token 666: ' un' (ID: 537)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2543271780014038
    2. 'l' → logprob: -1.5043271780014038
    3. 'range' → logprob: -1.6293271780014038
    4. 'interval' → logprob: -2.6293272972106934
    5. 'une' → logprob: -3.0043272972106934
    6. 'i' → logprob: -3.3793272972106934
    7. '[i' → logprob: -3.6293272972106934
    8. 'un' → logprob: -4.129327297210693
    9. ' la' → logprob: -4.129327297210693
    10. '[' → logprob: -4.379327297210693

Token 667: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2907644212245941
    2. ' interval' → logprob: -1.7907644510269165
    3. 'range' → logprob: -3.540764331817627
    4. 'certain' → logprob: -4.290764331817627
    5. 'segment' → logprob: -4.665764331817627
    6. ' range' → logprob: -5.040764331817627
    7. '```' → logprob: -5.290764331817627
    8. ' segment' → logprob: -5.665764331817627
    9. 'ensemble' → logprob: -6.290764331817627
    10. ']' → logprob: -6.790764331817627

Token 668: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2651939392089844
    2. 'val' → logprob: -2.1401939392089844
    3. '[' → logprob: -3.0151939392089844
    4. 'le' → logprob: -4.015193939208984
    5. 'al' → logprob: -4.265193939208984
    6. 'v' → logprob: -4.515193939208984
    7. 'de' → logprob: -5.515193939208984
    8. '   ' → logprob: -5.765193939208984
    9. 'vale' → logprob: -5.765193939208984
    10. ']' → logprob: -6.390193939208984

Token 669: ' correspondant' (ID: 146058)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8065618276596069
    2. '[' → logprob: -1.556561827659607
    3. ' [' → logprob: -1.556561827659607
    4. '[j' → logprob: -2.6815619468688965
    5. ' de' → logprob: -3.8065619468688965
    6. 'de' → logprob: -4.3065619468688965
    7. '[max' → logprob: -5.0565619468688965
    8. '   ' → logprob: -5.4315619468688965
    9. '```' → logprob: -5.4315619468688965
    10. '[start' → logprob: -6.0565619468688965

Token 670: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3392958343029022
    2. ' à' → logprob: -2.3392958641052246
    3. '[i' → logprob: -2.5892958641052246
    4. ' de' → logprob: -3.9642958641052246
    5. '[j' → logprob: -4.089295864105225
    6. ' [' → logprob: -4.464295864105225
    7. '   ' → logprob: -4.714295864105225
    8. ' ' → logprob: -5.089295864105225
    9. 'de' → logprob: -5.089295864105225
    10. 's' → logprob: -5.214295864105225

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07432994991540909
    2. '```' → logprob: -3.5743298530578613
    3. '#' → logprob: -5.199329853057861
    4. '[i' → logprob: -5.324329853057861
    5. '[' → logprob: -5.449329853057861
    6. '`' → logprob: -5.824329853057861
    7. ' j' → logprob: -5.949329853057861
    8. ' i' → logprob: -5.949329853057861
    9. ':' → logprob: -5.949329853057861
    10. ',' → logprob: -6.199329853057861

Token 672: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026323866099119186
    2. '#' → logprob: -4.2763237953186035
    3. '[' → logprob: -5.4013237953186035
    4. '_' → logprob: -6.7763237953186035
    5. ',' → logprob: -7.1513237953186035
    6. ':' → logprob: -7.4013237953186035
    7. ' =' → logprob: -7.7763237953186035
    8. '[i' → logprob: -7.7763237953186035
    9. ' j' → logprob: -7.9013237953186035
    10. ' #' → logprob: -7.9013237953186035

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05037008598446846
    2. '#' → logprob: -3.05036997795105
    3. 'i' → logprob: -7.925370216369629
    4. '[' → logprob: -8.425370216369629
    5. '[i' → logprob: -8.800370216369629
    6. ')' → logprob: -9.175370216369629
    7. '    ' → logprob: -9.175370216369629
    8. '...' → logprob: -9.425370216369629
    9. ' #' → logprob: -9.425370216369629
    10. ' i' → logprob: -9.550370216369629

Token 674: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02543834038078785
    2. '#' (adapté à ' #') → logprob: -3.7754383087158203
    3. 'for' → logprob: -7.77543830871582
    4. 'i' → logprob: -8.02543830871582
    5. ' #' → logprob: -8.15043830871582
    6. '    ' → logprob: -8.40043830871582
    7. '    
' → logprob: -8.52543830871582
    8. 'max' → logprob: -9.02543830871582
    9. '```' → logprob: -9.27543830871582
    10. ' i' → logprob: -9.40043830871582

Token 675: ' Con' (ID: 1532)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09412255138158798
    2. '#' → logprob: -3.0941226482391357
    3. 'max' → logprob: -4.219122409820557
    4. ' max' → logprob: -4.719122409820557
    5. '    
' → logprob: -5.344122409820557
    6. ' #' → logprob: -5.469122409820557
    7. 'def' → logprob: -6.219122409820557
    8. ' i' → logprob: -6.969122409820557
    9. '_' → logprob: -7.094122409820557
    10. 'i' → logprob: -7.094122409820557

Token 676: 'cr' (ID: 798)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.567547619342804
    2. 't' → logprob: -1.1925475597381592
    3. 'tin' → logprob: -3.067547559738159
    4. 'cept' → logprob: -3.317547559738159
    5. 'st' → logprob: -3.317547559738159
    6. 'str' → logprob: -5.442547798156738
    7. 'sid' → logprob: -6.192547798156738
    8. 'tra' → logprob: -6.692547798156738
    9. 'cepts' → logprob: -7.317547798156738
    10. 'd' → logprob: -7.692547798156738

Token 677: 'ètement' (ID: 66251)
  Prédit: 'ètement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètement' → logprob: -0.04781307652592659
    2. 'ète' → logprob: -3.7978131771087646
    3. 'ét' → logprob: -5.1728129386901855
    4. '#' → logprob: -5.5478129386901855
    5. 'êt' → logprob: -5.6728129386901855
    6. 'è' → logprob: -5.9228129386901855
    7. 'et' → logprob: -6.2978129386901855
    8. 'èt' → logprob: -6.5478129386901855
    9. 'êtement' → logprob: -6.6728129386901855
    10. 'é' → logprob: -6.9228129386901855

Token 678: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5940616130828857
    2. ':' → logprob: -0.9690616130828857
    3. '   ' → logprob: -2.9690616130828857
    4. ':
' → logprob: -4.844061851501465
    5. ' :' → logprob: -5.719061851501465
    6. '#' → logprob: -6.469061851501465
    7. ',
' → logprob: -6.594061851501465
    8. ' ,' → logprob: -6.594061851501465
    9. ' :
' → logprob: -8.344061851501465
    10. 'for' → logprob: -8.469061851501465

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057982444763183594
    2. '#' → logprob: -2.9329824447631836
    3. 'for' → logprob: -6.432982444763184
    4. ' #' → logprob: -7.182982444763184
    5. '    ' → logprob: -8.307982444763184
    6. ' for' → logprob: -8.307982444763184
    7. 'def' → logprob: -9.432982444763184
    8. '    
' → logprob: -10.432982444763184
    9. '
' → logprob: -10.682982444763184
    10. ' ' → logprob: -10.682982444763184

Token 680: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001695176586508751
    2. '#' → logprob: -6.626695156097412
    3. 'for' → logprob: -8.50169563293457
    4. ' for' → logprob: -10.00169563293457
    5. '    ' → logprob: -10.37669563293457
    6. ' #' → logprob: -10.62669563293457
    7. 'def' → logprob: -10.75169563293457
    8. '
' → logprob: -11.37669563293457
    9. '    
' → logprob: -11.37669563293457
    10. '```' → logprob: -11.75169563293457

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007576577831059694
    2. '#' → logprob: -5.0075764656066895
    3. '```' → logprob: -7.1325764656066895
    4. ' #' → logprob: -11.257576942443848
    5. '
' → logprob: -11.257576942443848
    6. '    ' → logprob: -11.882576942443848
    7. 'for' → logprob: -12.007576942443848
    8. 'def' → logprob: -12.257576942443848
    9. '    
' → logprob: -12.507576942443848
    10. '``' → logprob: -12.632576942443848

Token 682: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20695483684539795
    2. '#' (adapté à ' #') → logprob: -1.706954836845398
    3. 'for' → logprob: -5.5819549560546875
    4. ' #' → logprob: -7.2069549560546875
    5. 'def' → logprob: -7.4569549560546875
    6. 'from' → logprob: -8.956954956054688
    7. ' for' → logprob: -9.831954956054688
    8. '```' → logprob: -10.081954956054688
    9. '    ' → logprob: -10.206954956054688
    10. '    
' → logprob: -10.706954956054688

Token 683: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7291601896286011
    2. 'for' → logprob: -1.729160189628601
    3. ' for' → logprob: -1.979160189628601
    4. '#' → logprob: -2.2291603088378906
    5. ' #' → logprob: -2.9791603088378906
    6. ' max' → logprob: -4.604160308837891
    7. 'from' → logprob: -5.104160308837891
    8. 'def' → logprob: -5.229160308837891
    9. 'max' → logprob: -5.604160308837891
    10. 'Pour' → logprob: -6.229160308837891

Token 684: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2151549756526947
    2. ' chaque' → logprob: -1.965155005455017
    3. 'i' → logprob: -2.9651548862457275
    4. ' each' → logprob: -6.590155124664307
    5. ' ' → logprob: -8.590154647827148
    6. ' j' → logprob: -9.090154647827148
    7. 'each' → logprob: -9.215154647827148
    8. ' ' → logprob: -10.340154647827148
    9. 'j' → logprob: -11.090154647827148
    10. ' chacun' → logprob: -11.965154647827148

Token 685: ' trampoline' (ID: 162506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4852961301803589
    2. ' i' → logprob: -0.9852961301803589
    3. ' trampoline' → logprob: -4.735296249389648
    4. 'tr' → logprob: -6.735296249389648
    5. ' tramp' → logprob: -7.485296249389648
    6. 'indice' → logprob: -8.610296249389648
    7. ' ' → logprob: -8.735296249389648
    8. ' ' → logprob: -9.860296249389648
    9. '```' → logprob: -10.235296249389648
    10. '_tr' → logprob: -10.485296249389648

Token 686: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023782387375831604
    2. 'i' → logprob: -3.77378249168396
    3. ',' → logprob: -7.898782253265381
    4. ' ,' → logprob: -10.273782730102539
    5. ' ' → logprob: -10.648782730102539
    6. ' ' → logprob: -10.773782730102539
    7. ' j' → logprob: -10.773782730102539
    8. '   ' → logprob: -10.898782730102539
    9. ' `' → logprob: -11.023782730102539
    10. '_i' → logprob: -11.898782730102539

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0767582431435585
    2. '   ' → logprob: -3.0767581462860107
    3. ':' → logprob: -4.20175838470459
    4. ' ,' → logprob: -4.70175838470459
    5. ':
' → logprob: -6.82675838470459
    6. ',
' → logprob: -7.07675838470459
    7. '=' → logprob: -8.57675838470459
    8. ' i' → logprob: -8.57675838470459
    9. ' ' → logprob: -8.70175838470459
    10. ' =' → logprob: -8.82675838470459

Token 688: ' défin' (ID: 57890)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.17822319269180298
    2. ' max' → logprob: -2.178223133087158
    3. 'max' → logprob: -4.553223133087158
    4. ' j' → logprob: -4.803223133087158
    5. 'on' → logprob: -4.928223133087158
    6. ' min' → logprob: -5.803223133087158
    7. ' reachable' → logprob: -6.053223133087158
    8. ' l' → logprob: -6.178223133087158
    9. ' possible' → logprob: -6.303223133087158
    10. ' start' → logprob: -6.303223133087158

Token 689: 'issons' (ID: 56456)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9411428570747375
    2. 'issons' → logprob: -0.9411428570747375
    3. '#' → logprob: -2.9411427974700928
    4. 'is' → logprob: -2.9411427974700928
    5. 'it' → logprob: -2.9411427974700928
    6. '   ' → logprob: -3.6911427974700928
    7. '```' → logprob: -5.066143035888672
    8. '=' → logprob: -5.191143035888672
    9. 'issant' → logprob: -5.566143035888672
    10. 'e' → logprob: -6.066143035888672

Token 690: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.632004976272583
    2. ' la' → logprob: -1.632004976272583
    3. ' sa' → logprob: -2.507004976272583
    4. 'un' → logprob: -2.757004976272583
    5. ' une' → logprob: -2.757004976272583
    6. ' max' → logprob: -2.757004976272583
    7. 'max' → logprob: -2.757004976272583
    8. ' reachable' → logprob: -2.882004976272583
    9. ' l' → logprob: -3.507004976272583
    10. 'une' → logprob: -3.632004976272583

Token 691: ' interval' (ID: 17116)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6812252402305603
    2. 'interval' → logprob: -2.056225299835205
    3. 'reach' → logprob: -2.056225299835205
    4. ' max' → logprob: -3.056225299835205
    5. 'right' → logprob: -3.681225299835205
    6. 'port' → logprob: -4.056225299835205
    7. 'reachable' → logprob: -4.056225299835205
    8. ' reach' → logprob: -4.306225299835205
    9. '```' → logprob: -4.431225299835205
    10. 's' → logprob: -4.431225299835205

Token 692: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.02705349028110504
    2. '_' → logprob: -4.277053356170654
    3. 'e' → logprob: -4.902053356170654
    4. ' de' → logprob: -6.277053356170654
    5. '   ' → logprob: -6.402053356170654
    6. 'de' → logprob: -7.777053356170654
    7. '[' → logprob: -7.902053356170654
    8. ' _' → logprob: -8.152053833007812
    9. ' ' → logprob: -8.277053833007812
    10. '    ' → logprob: -9.652053833007812

Token 693: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3010578155517578
    2. '[i' → logprob: -1.3010578155517578
    3. '[' → logprob: -1.5510578155517578
    4. ' de' → logprob: -2.426057815551758
    5. ' [' → logprob: -2.551057815551758
    6. '[start' → logprob: -4.301057815551758
    7. '=' → logprob: -4.551057815551758
    8. 'de' → logprob: -4.676057815551758
    9. '[j' → logprob: -4.926057815551758
    10. '   ' → logprob: -5.051057815551758

Token 694: ' saut' (ID: 111480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.878847599029541
    2. 'j' → logprob: -2.003847599029541
    3. 'port' → logprob: -2.503847599029541
    4. 'reachable' → logprob: -2.503847599029541
    5. ' saut' → logprob: -2.753847599029541
    6. 'reach' → logprob: -3.253847599029541
    7. 'sa' → logprob: -3.878847599029541
    8. 'positions' → logprob: -4.003847599029541
    9. 'jump' → logprob: -4.128847599029541
    10. 'poss' → logprob: -4.253847599029541

Token 695: ' vers' (ID: 3640)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6772560477256775
    2. '[i' → logprob: -1.6772561073303223
    3. '[' → logprob: -2.1772561073303223
    4. '=' → logprob: -2.6772561073303223
    5. ' [' → logprob: -2.6772561073303223
    6. ':' → logprob: -4.552256107330322
    7. '=[' → logprob: -4.677256107330322
    8. '[start' → logprob: -4.677256107330322
    9. ' de' → logprob: -5.677256107330322
    10. '_start' → logprob: -5.677256107330322

Token 696: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.40878382325172424
    2. 'j' → logprob: -2.2837839126586914
    3. 'i' → logprob: -2.6587839126586914
    4. '[j' → logprob: -3.1587839126586914
    5. 'l' → logprob: -3.2837839126586914
    6. '[i' → logprob: -3.4087839126586914
    7. 'les' → logprob: -4.283783912658691
    8. 'le' → logprob: -4.408783912658691
    9. '[' → logprob: -4.533783912658691
    10. 'dro' → logprob: -5.533783912658691

Token 697: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.6558501720428467
    2. ' droite' → logprob: -0.7808501720428467
    3. 'i' → logprob: -5.155850410461426
    4. '```' → logprob: -6.030850410461426
    5. ' ' → logprob: -6.280850410461426
    6. ' i' → logprob: -6.405850410461426
    7. 'd' → logprob: -6.405850410461426
    8. 'g' → logprob: -6.780850410461426
    9. 'pro' → logprob: -6.780850410461426
    10. 'right' → logprob: -6.780850410461426

Token 698: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2348800897598267
    2. ' =' → logprob: -1.7348800897598267
    3. '[i' → logprob: -1.8598800897598267
    4. ' [' → logprob: -2.109879970550537
    5. '   ' → logprob: -2.234879970550537
    6. ':' → logprob: -2.484879970550537
    7. '[j' → logprob: -3.984879970550537
    8. '=' → logprob: -4.984879970550537
    9. ' :' → logprob: -4.984879970550537
    10. ',' → logprob: -5.109879970550537

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1172212362289429
    2. ' (' → logprob: -1.3672212362289429
    3. ' [' → logprob: -1.4922212362289429
    4. '[' → logprob: -2.6172213554382324
    5. '[i' → logprob: -3.3672213554382324
    6. ' =' → logprob: -3.7422213554382324
    7. '[start' → logprob: -4.242221355438232
    8. ' i' → logprob: -4.617221355438232
    9. '(i' → logprob: -4.867221355438232
    10. '[j' → logprob: -5.492221355438232

Token 700: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5379204750061035
    2. ' max' → logprob: -1.7879204750061035
    3. ' (' → logprob: -2.4129204750061035
    4. ' [' → logprob: -3.2879204750061035
    5. 'max' → logprob: -3.6629204750061035
    6. ' start' → logprob: -4.5379204750061035
    7. '[' → logprob: -4.6629204750061035
    8. '(max' → logprob: -4.7879204750061035
    9. '[start' → logprob: -5.0379204750061035
    10. ' j' → logprob: -5.2879204750061035

Token 701: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2340829372406006
    2. ' (' → logprob: -1.3590829372406006
    3. '[i' → logprob: -2.3590829372406006
    4. '(i' → logprob: -2.7340829372406006
    5. '[j' → logprob: -2.8590829372406006
    6. '(max' → logprob: -3.4840829372406006
    7. ' [' → logprob: -3.4840829372406006
    8. ' max' → logprob: -3.9840829372406006
    9. '[start' → logprob: -3.9840829372406006
    10. '(j' → logprob: -4.10908317565918

Token 702: ' Le' (ID: 2018)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.497592568397522
    2. 'max' → logprob: -1.622592568397522
    3. ' max' → logprob: -2.2475924491882324
    4. ' start' → logprob: -2.6225924491882324
    5. 'i' → logprob: -2.7475924491882324
    6. 'j' → logprob: -3.1225924491882324
    7. ' i' → logprob: -3.2475924491882324
    8. 'right' → logprob: -3.3725924491882324
    9. ' j' → logprob: -3.4975924491882324
    10. 'left' → logprob: -3.6225924491882324

Token 703: ' index' (ID: 3472)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7761351466178894
    2. 'max' → logprob: -2.401135206222534
    3. ' maximum' → logprob: -2.526135206222534
    4. ' plus' → logprob: -2.651135206222534
    5. 'i' → logprob: -2.901135206222534
    6. 's' → logprob: -3.276135206222534
    7. ' i' → logprob: -3.526135206222534
    8. '_max' → logprob: -4.151134967803955
    9. ' min' → logprob: -4.276134967803955
    10. 'a' → logprob: -4.276134967803955

Token 704: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1348413228988647
    2. ' =' → logprob: -2.0098414421081543
    3. ' de' → logprob: -2.1348414421081543
    4. 's' → logprob: -2.6348414421081543
    5. '_min' → logprob: -2.8848414421081543
    6. ' maximal' → logprob: -3.2598414421081543
    7. '_max' → logprob: -3.5098414421081543
    8. 'max' → logprob: -3.6348414421081543
    9. ' max' → logprob: -3.7598414421081543
    10. ' minimal' → logprob: -3.8848414421081543

Token 705: ' doit' (ID: 21822)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4442111551761627
    2. 's' → logprob: -2.19421124458313
    3. ' est' → logprob: -3.44421124458313
    4. ' ' → logprob: -3.56921124458313
    5. ' >' → logprob: -3.81921124458313
    6. ' i' → logprob: -3.81921124458313
    7. ' >=' → logprob: -3.81921124458313
    8. '>' → logprob: -3.94421124458313
    9. ' such' → logprob: -4.319211006164551
    10. ' j' → logprob: -4.444211006164551

Token 706: ' vérifier' (ID: 93671)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.15159311890602112
    2. ' be' → logprob: -2.6515932083129883
    3. 's' → logprob: -3.5265932083129883
    4. 'être' → logprob: -4.526593208312988
    5. ' ' → logprob: -4.776593208312988
    6. ' aller' → logprob: -5.651593208312988
    7. ' satisfaire' → logprob: -6.151593208312988
    8. ' <=' → logprob: -6.276593208312988
    9. ' etre' → logprob: -6.276593208312988
    10. ' ' → logprob: -6.401593208312988

Token 707: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.18623927235603333
    2. 'j' → logprob: -2.436239242553711
    3. ' i' → logprob: -2.936239242553711
    4. ' ' → logprob: -4.311239242553711
    5. 'i' → logprob: -4.936239242553711
    6. '   ' → logprob: -4.936239242553711
    7. '  ' → logprob: -7.561239242553711
    8. '```' → logprob: -8.311239242553711
    9. ' <=' → logprob: -8.686239242553711
    10. '    ' → logprob: -9.061239242553711

Token 708: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5474691390991211
    2. ' >' → logprob: -1.297469139099121
    3. ' >=' → logprob: -2.922469139099121
    4. '>' → logprob: -3.047469139099121
    5. '<=' → logprob: -3.547469139099121
    6. '>=' → logprob: -4.797469139099121
    7. ' ≤' → logprob: -5.172469139099121
    8. ' <' → logprob: -7.422469139099121
    9. ' i' → logprob: -7.672469139099121
    10. '```' → logprob: -7.672469139099121

Token 709: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0067170290276408195
    2. ' i' → logprob: -5.006717205047607
    3. '	i' → logprob: -14.00671672821045
    4. '   ' → logprob: -14.50671672821045
    5. ' ' → logprob: -15.25671672821045
    6. '  ' → logprob: -16.756717681884766
    7. '<|end|>' → logprob: -16.756717681884766
    8. '=i' → logprob: -17.256717681884766
    9. '_i' → logprob: -17.756717681884766
    10. '[i' → logprob: -18.131717681884766

Token 710: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3908671438694
    2. 'and' → logprob: -1.2658671140670776
    3. ' et' → logprob: -3.765867233276367
    4. 'et' → logprob: -4.015867233276367
    5. '   ' → logprob: -8.515867233276367
    6. ',' → logprob: -9.765867233276367
    7. ' ' → logprob: -10.265867233276367
    8. '```' → logprob: -11.765867233276367
    9. ' ' → logprob: -11.765867233276367
    10. 'ains' → logprob: -12.140867233276367

Token 711: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16841602325439453
    2. ' et' → logprob: -2.5434160232543945
    3. 'and' → logprob: -2.6684160232543945
    4. 'et' → logprob: -5.4184160232543945
    5. '   ' → logprob: -6.1684160232543945
    6. ' ' → logprob: -8.168416023254395
    7. ',' → logprob: -9.418416023254395
    8. ' ' → logprob: -10.668416023254395
    9. '    ' → logprob: -10.918416023254395
    10. '  ' → logprob: -11.293416023254395

Token 712: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08696524053812027
    2. 'and' → logprob: -2.711965322494507
    3. ' et' → logprob: -4.461965084075928
    4. '   ' → logprob: -5.836965084075928
    5. ',' → logprob: -6.961965084075928
    6. 'et' → logprob: -7.211965084075928
    7. '<|end|>' → logprob: -8.711965560913086
    8. ' ' → logprob: -8.836965560913086
    9. ')' → logprob: -8.961965560913086
    10. '    ' → logprob: -9.961965560913086

Token 713: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10904429107904434
    2. ' et' → logprob: -2.859044313430786
    3. 'and' → logprob: -3.234044313430786
    4. '   ' → logprob: -5.984044075012207
    5. 'et' → logprob: -6.609044075012207
    6. '+' → logprob: -6.859044075012207
    7. ' ' → logprob: -7.359044075012207
    8. ',' → logprob: -7.859044075012207
    9. ' +' → logprob: -9.234044075012207
    10. '#' → logprob: -10.109044075012207

Token 714: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.40335097908973694
    2. ' j' → logprob: -1.1533509492874146
    3. 'd' → logprob: -5.278350830078125
    4. 'i' → logprob: -5.903350830078125
    5. ' i' → logprob: -6.028350830078125
    6. ' d' → logprob: -6.028350830078125
    7. '10' → logprob: -6.653350830078125
    8. ' ' → logprob: -7.528350830078125
    9. ' ' → logprob: -7.778350830078125
    10. '```' → logprob: -7.903350830078125

Token 715: '10' (ID: 702)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.039049264043569565
    2. ' j' → logprob: -3.4140491485595703
    3. 'd' → logprob: -6.03904914855957
    4. 'i' → logprob: -6.41404914855957
    5. '10' → logprob: -7.28904914855957
    6. ' i' → logprob: -8.16404914855957
    7. ' d' → logprob: -8.78904914855957
    8. '(j' → logprob: -9.66404914855957
    9. ' ' → logprob: -10.53904914855957
    10. '```' → logprob: -10.66404914855957

Token 716: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.21330732107162476
    2. '*' → logprob: -1.9633073806762695
    3. ' *' → logprob: -2.9633073806762695
    4. ' *(' → logprob: -10.46330738067627
    5. '*j' → logprob: -11.58830738067627
    6. '*((' → logprob: -11.83830738067627
    7. '<=' → logprob: -13.46330738067627
    8. ' <=' → logprob: -13.71330738067627
    9. '*[' → logprob: -13.83830738067627
    10. '**' → logprob: -14.08830738067627

Token 717: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002178096678107977
    2. '(j' → logprob: -6.502178192138672
    3. ' j' → logprob: -7.377178192138672
    4. ' (' → logprob: -10.627178192138672
    5. 'i' → logprob: -11.502178192138672
    6. '[j' → logprob: -13.127178192138672
    7. '   ' → logprob: -13.377178192138672
    8. 'min' → logprob: -13.377178192138672
    9. '(i' → logprob: -13.377178192138672
    10. '(' → logprob: -13.502178192138672

Token 718: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20372726023197174
    2. '-' → logprob: -1.7037272453308105
    3. '-i' → logprob: -6.0787272453308105
    4. ')' → logprob: -11.328727722167969
    5. ' ' → logprob: -12.828727722167969
    6. '<|end|>' → logprob: -13.703727722167969
    7. '-j' → logprob: -13.953727722167969
    8. 'i' → logprob: -14.953727722167969
    9. ' ' → logprob: -15.078727722167969
    10. '<|end|>' → logprob: -15.453727722167969

Token 719: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10050231963396072
    2. ' i' → logprob: -2.3505022525787354
    3. '1' → logprob: -8.475502014160156
    4. ' ' → logprob: -10.350502014160156
    5. ')' → logprob: -11.100502014160156
    6. ' (' → logprob: -11.850502014160156
    7. 'j' → logprob: -12.225502014160156
    8. '	i' → logprob: -12.225502014160156
    9. ' ' → logprob: -12.350502014160156
    10. '_i' → logprob: -12.600502014160156

Token 720: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004129152512177825
    2. ')<=' → logprob: -7.875412940979004
    3. ' )' → logprob: -11.250412940979004
    4. ' <=' → logprob: -11.875412940979004
    5. '<=' → logprob: -12.250412940979004
    6. '   ' → logprob: -13.750412940979004
    7. '[' → logprob: -13.875412940979004
    8. ')<' → logprob: -14.000412940979004
    9. '')' → logprob: -14.125412940979004
    10. ' ' → logprob: -14.500412940979004

Token 721: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.023291829973459244
    2. '<=' → logprob: -3.773291826248169
    3. ' ≤' → logprob: -11.02329158782959
    4. ')<=' → logprob: -11.52329158782959
    5. ' ' → logprob: -11.64829158782959
    6. ' ' → logprob: -12.27329158782959
    7. ')' → logprob: -12.64829158782959
    8. '≤' → logprob: -14.52329158782959
    9. '```' → logprob: -14.52329158782959
    10. ']<=' → logprob: -14.64829158782959

Token 722: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20358626544475555
    2. ' d' → logprob: -1.703586220741272
    3. 'min' → logprob: -6.453586101531982
    4. ' min' → logprob: -7.453586101531982
    5. ' ' → logprob: -11.82858657836914
    6. ' ' → logprob: -12.70358657836914
    7. '	d' → logprob: -13.32858657836914
    8. '   ' → logprob: -13.70358657836914
    9. 'max' → logprob: -14.57858657836914
    10. '```' → logprob: -14.57858657836914

Token 723: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019305046589579433
    2. '[j' → logprob: -8.875192642211914
    3. '[' → logprob: -10.375192642211914
    4. ' [' → logprob: -11.000192642211914
    5. '   ' → logprob: -12.875192642211914
    6. 'i' → logprob: -13.625192642211914
    7. '```' → logprob: -15.000192642211914
    8. 's' → logprob: -15.625192642211914
    9. ' ' → logprob: -16.125192642211914
    10. ' i' → logprob: -16.375192642211914

Token 724: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03379691392183304
    2. '   ' → logprob: -4.783796787261963
    3. ']' → logprob: -5.533796787261963
    4. '+' → logprob: -5.533796787261963
    5. ')
' → logprob: -5.783796787261963
    6. '])' → logprob: -5.908796787261963
    7. ')+' → logprob: -5.908796787261963
    8. '),' → logprob: -6.158796787261963
    9. ' +' → logprob: -6.283796787261963
    10. ' and' → logprob: -6.908796787261963

Token 725: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0509337186813354
    2. ' j' → logprob: -1.6759337186813354
    3. ' et' → logprob: -1.8009337186813354
    4. ' and' → logprob: -2.175933837890625
    5. ' +' → logprob: -3.175933837890625
    6. ' donc' → logprob: -3.800933837890625
    7. ' ' → logprob: -4.050933837890625
    8. '+' → logprob: -4.300933837890625
    9. '    ' → logprob: -4.675933837890625
    10. ' d' → logprob: -4.800933837890625

Token 726: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.40566593408584595
    2. 'j' → logprob: -1.5306658744812012
    3. '(j' → logprob: -2.405665874481201
    4. ' (' → logprob: -3.780665874481201
    5. 'd' → logprob: -7.030665874481201
    6. ' d' → logprob: -7.155665874481201
    7. 'max' → logprob: -7.655665874481201
    8. '   ' → logprob: -7.780665874481201
    9. ' max' → logprob: -8.15566635131836
    10. ' ' → logprob: -8.40566635131836

Token 727: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03265290707349777
    2. '<=' → logprob: -3.7826528549194336
    3. ' ≤' → logprob: -4.782652854919434
    4. ' <' → logprob: -7.407652854919434
    5. '≤' → logprob: -8.907652854919434
    6. ' ' → logprob: -9.782652854919434
    7. '<' → logprob: -10.032652854919434
    8. ' >' → logprob: -10.157652854919434
    9. ' ' → logprob: -10.407652854919434
    10. '>' → logprob: -11.157652854919434

Token 728: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759583711624146
    2. 'i' → logprob: -0.8259583711624146
    3. '   ' → logprob: -11.450958251953125
    4. ' ' → logprob: -11.825958251953125
    5. ' ' → logprob: -15.200958251953125
    6. '	i' → logprob: -15.200958251953125
    7. '  ' → logprob: -15.450958251953125
    8. '(i' → logprob: -16.450958251953125
    9. '```' → logprob: -16.700958251953125
    10. ' (' → logprob: -17.075958251953125

Token 729: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10024808347225189
    2. '+' → logprob: -2.350248098373413
    3. '+d' → logprob: -11.100248336791992
    4. 'd' → logprob: -11.600248336791992
    5. ' ' → logprob: -12.350248336791992
    6. '+i' → logprob: -12.850248336791992
    7. '   ' → logprob: -13.350248336791992
    8. ' plus' → logprob: -13.475248336791992
    9. '[i' → logprob: -13.600248336791992
    10. '[' → logprob: -13.850248336791992

Token 730: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07567861676216125
    2. ' d' → logprob: -2.700678586959839
    3. '(d' → logprob: -5.325678825378418
    4. ' (' → logprob: -7.200678825378418
    5. ' ' → logprob: -9.700678825378418
    6. '   ' → logprob: -10.325678825378418
    7. '(' → logprob: -11.200678825378418
    8. '  ' → logprob: -12.825678825378418
    9. '	d' → logprob: -13.325678825378418
    10. '[d' → logprob: -14.700678825378418

Token 731: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003992104611825198
    2. '[' → logprob: -8.125399589538574
    3. 'i' → logprob: -9.375399589538574
    4. '//' → logprob: -11.500399589538574
    5. '[j' → logprob: -12.875399589538574
    6. ' //' → logprob: -13.125399589538574
    7. ' [' → logprob: -13.875399589538574
    8. '[
' → logprob: -14.000399589538574
    9. '_i' → logprob: -15.125399589538574
    10. '```' → logprob: -15.125399589538574

Token 732: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02137901820242405
    2. '[' → logprob: -3.896378993988037
    3. '//' → logprob: -8.146379470825195
    4. '[j' → logprob: -8.271379470825195
    5. ' //' → logprob: -9.021379470825195
    6. '   ' → logprob: -9.146379470825195
    7. ' ' → logprob: -11.021379470825195
    8. ']' → logprob: -11.396379470825195
    9. 'i' → logprob: -11.646379470825195
    10. '```' → logprob: -12.146379470825195

Token 733: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5393438339233398
    2. ' //' → logprob: -0.9143438339233398
    3. '[i' → logprob: -4.41434383392334
    4. '[' → logprob: -6.03934383392334
    5. '```' → logprob: -7.53934383392334
    6. '#' → logprob: -8.28934383392334
    7. ' ' → logprob: -8.66434383392334
    8. '   ' → logprob: -8.66434383392334
    9. '`' → logprob: -9.66434383392334
    10. '[]' → logprob: -9.78934383392334

Token 734: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -17.000036239624023
    4. '```' → logprob: -17.000036239624023
    5. '   ' → logprob: -17.125036239624023
    6. '9' → logprob: -19.375036239624023
    7. '(' → logprob: -19.500036239624023
    8. '  ' → logprob: -19.500036239624023
    9. '0' → logprob: -19.500036239624023
    10. '
' → logprob: -19.750036239624023

Token 735: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6780226826667786
    2. ' +' → logprob: -0.8030226826667786
    3. '   ' → logprob: -3.178022623062134
    4. '+
' → logprob: -6.803022861480713
    5. ' +
' → logprob: -7.803022861480713
    6. ')' → logprob: -7.803022861480713
    7. ' ' → logprob: -8.678022384643555
    8. '       ' → logprob: -9.303022384643555
    9. '[' → logprob: -9.678022384643555
    10. '
' → logprob: -9.803022384643555

Token 736: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7391484975814819
    2. '   ' → logprob: -0.8641484975814819
    3. '+' → logprob: -2.3641486167907715
    4. ' ' → logprob: -6.1141486167907715
    5. ')' → logprob: -7.4891486167907715
    6. ' (' → logprob: -7.4891486167907715
    7. '#' → logprob: -7.8641486167907715
    8. '```' → logprob: -7.9891486167907715
    9. '<|end|>' → logprob: -7.9891486167907715
    10. '  ' → logprob: -8.114148139953613

Token 737: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03810620680451393
    2. '
' → logprob: -3.6631062030792236
    3. '#' (adapté à ' #') → logprob: -6.163106441497803
    4. ' +' → logprob: -6.538106441497803
    5. '    
' → logprob: -6.788106441497803
    6. 'def' → logprob: -7.038106441497803
    7. ' (' → logprob: -7.163106441497803
    8. '+' → logprob: -7.413106441497803
    9. ',' → logprob: -7.413106441497803
    10. '<|end|>' → logprob: -7.663106441497803

Token 738: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011054771952331066
    2. ' ' → logprob: -6.011054992675781
    3. '\' → logprob: -6.761054992675781
    4. '#' → logprob: -7.136054992675781
    5. '.' → logprob: -7.386054992675781
    6. '    
' → logprob: -7.386054992675781
    7. '  
' → logprob: -7.511054992675781
    8. '
' → logprob: -7.636054992675781
    9. '<|end|>' → logprob: -7.636054992675781
    10. ',' → logprob: -7.761054992675781

Token 739: ' De' (ID: 1516)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2201088666915894
    2. '   ' → logprob: -1.8451088666915894
    3. ' d' → logprob: -1.9701088666915894
    4. 'd' → logprob: -3.095108985900879
    5. ' i' → logprob: -3.095108985900879
    6. ' ' → logprob: -3.220108985900879
    7. 'j' → logprob: -3.470108985900879
    8. ' max' → logprob: -3.470108985900879
    9. '#' → logprob: -3.845108985900879
    10. '10' → logprob: -3.970108985900879

Token 740: ' même' (ID: 9679)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2695566415786743
    2. ' plus' → logprob: -1.6445566415786743
    3. 'f' → logprob: -3.6445565223693848
    4. 'j' → logprob: -5.019556522369385
    5. '+' → logprob: -5.644556522369385
    6. 'i' → logprob: -5.894556522369385
    7. 'l' → logprob: -7.519556522369385
    8. '_plus' → logprob: -7.644556522369385
    9. 'fin' → logprob: -7.894556522369385
    10. ' +' → logprob: -7.894556522369385

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3207720518112183
    2. ' j' → logprob: -1.5707720518112183
    3. '(j' → logprob: -2.320772171020508
    4. ' for' → logprob: -2.570772171020508
    5. 'for' → logprob: -2.695772171020508
    6. 'j' → logprob: -3.195772171020508
    7. ' (' → logprob: -3.195772171020508
    8. ' d' → logprob: -3.570772171020508
    9. ' pour' → logprob: -3.570772171020508
    10. '#' → logprob: -3.820772171020508

Token 742: ' pour' (ID: 1930)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.757764995098114
    2. ' ' → logprob: -1.1327650547027588
    3. '10' → logprob: -2.132765054702759
    4. ' d' → logprob: -3.132765054702759
    5. 'j' → logprob: -4.00776481628418
    6. 'd' → logprob: -4.75776481628418
    7. ' pour' → logprob: -5.50776481628418
    8. ' for' → logprob: -5.63276481628418
    9. 'for' → logprob: -6.00776481628418
    10. ' ' → logprob: -6.13276481628418

Token 743: ' que' (ID: 661)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7239223122596741
    2. 'j' → logprob: -1.2239222526550293
    3. ' chaque' → logprob: -2.0989222526550293
    4. ' ' → logprob: -4.223922252655029
    5. ' d' → logprob: -4.348922252655029
    6. 'd' → logprob: -4.473922252655029
    7. 'cha' → logprob: -4.598922252655029
    8. 'le' → logprob: -4.848922252655029
    9. 'la' → logprob: -5.098922252655029
    10. ' la' → logprob: -5.098922252655029

Token 744: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.44063422083854675
    2. 'j' → logprob: -1.0656342506408691
    3. ' chaque' → logprob: -5.940634250640869
    4. ' ' → logprob: -6.690634250640869
    5. 'd' → logprob: -6.690634250640869
    6. ' la' → logprob: -6.815634250640869
    7. ' d' → logprob: -6.815634250640869
    8. 'l' → logprob: -6.940634250640869
    9. ' le' → logprob: -6.940634250640869
    10. ' l' → logprob: -7.440634250640869

Token 745: ' puisse' (ID: 77890)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.019678814336657524
    2. '<=' → logprob: -4.144678592681885
    3. ' <' → logprob: -7.144678592681885
    4. ')' → logprob: -7.269678592681885
    5. ' >' → logprob: -7.269678592681885
    6. 's' → logprob: -8.144679069519043
    7. ' puisse' → logprob: -8.394679069519043
    8. ' soit' → logprob: -9.019679069519043
    9. ' -' → logprob: -9.019679069519043
    10. ' >=' → logprob: -9.144679069519043

Token 746: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6208621263504028
    2. ' être' → logprob: -1.8708621263504028
    3. 'atte' → logprob: -2.1208620071411133
    4. 're' → logprob: -3.2458620071411133
    5. ' ' → logprob: -3.8708620071411133
    6. ' atteindre' → logprob: -3.8708620071411133
    7. 'sa' → logprob: -4.245862007141113
    8. ' also' → logprob: -4.495862007141113
    9. 'aller' → logprob: -4.620862007141113
    10. 'se' → logprob: -4.745862007141113

Token 747: ' atteint' (ID: 104876)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.7147064208984375
    2. ' atteint' → logprob: -1.3397064208984375
    3. 'accessible' → logprob: -2.0897064208984375
    4. ' accessible' → logprob: -3.5897064208984375
    5. 'reachable' → logprob: -3.8397064208984375
    6. 're' → logprob: -4.0897064208984375
    7. ' atte' → logprob: -5.0897064208984375
    8. 'égal' → logprob: -5.2147064208984375
    9. 'at' → logprob: -5.5897064208984375
    10. ' reachable' → logprob: -5.5897064208984375

Token 748: ',' (ID: 11)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4218830168247223
    2. ' depuis' → logprob: -2.0468831062316895
    3. ',' → logprob: -2.6718831062316895
    4. ' +' → logprob: -3.2968831062316895
    5. ' de' → logprob: -3.6718831062316895
    6. '+' → logprob: -3.7968831062316895
    7. ' plus' → logprob: -4.4218831062316895
    8. ' dans' → logprob: -4.6718831062316895
    9. ' ' → logprob: -5.2968831062316895
    10. ' (' → logprob: -5.7968831062316895

Token 749: ' d' (ID: 272)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.259642630815506
    2. ' il' → logprob: -2.3846426010131836
    3. ' d' → logprob: -2.8846426010131836
    4. '10' → logprob: -3.8846426010131836
    5. 'j' → logprob: -4.009642601013184
    6. ' ' → logprob: -4.259642601013184
    7. 'd' → logprob: -4.509642601013184
    8. ' #' → logprob: -5.009642601013184
    9. '#' → logprob: -5.384642601013184
    10. ' ' → logprob: -6.634642601013184

Token 750: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007297091069631279
    2. '[i' → logprob: -7.500729560852051
    3. '[' → logprob: -9.00072956085205
    4. 'j' → logprob: -10.37572956085205
    5. ' [' → logprob: -11.37572956085205
    6. 'e' → logprob: -12.87572956085205
    7. '   ' → logprob: -13.62572956085205
    8. ' j' → logprob: -13.62572956085205
    9. '```' → logprob: -13.87572956085205
    10. '[u' → logprob: -14.00072956085205

Token 751: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04377514868974686
    2. '//' → logprob: -4.5437750816345215
    3. '[i' → logprob: -4.6687750816345215
    4. '```' → logprob: -5.5437750816345215
    5. ']>=' → logprob: -5.5437750816345215
    6. '[j' → logprob: -5.6687750816345215
    7. ']>' → logprob: -6.0437750816345215
    8. '],' → logprob: -6.2937750816345215
    9. '']' → logprob: -6.5437750816345215
    10. '   ' → logprob: -6.7937750816345215

Token 752: ' >=' (ID: 5064)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.838398277759552
    2. '[j' → logprob: -1.4633982181549072
    3. '[' → logprob: -2.3383982181549072
    4. ' >=' → logprob: -2.3383982181549072
    5. '```' → logprob: -3.3383982181549072
    6. ' <=' → logprob: -3.9633982181549072
    7. '>=' → logprob: -4.213398456573486
    8. ']' → logprob: -4.338398456573486
    9. '//' → logprob: -4.338398456573486
    10. ')' → logprob: -4.838398456573486

Token 753: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19826066493988037
    2. ' ' → logprob: -2.19826078414917
    3. ' (' → logprob: -4.19826078414917
    4. 'i' → logprob: -4.57326078414917
    5. ' i' → logprob: -4.57326078414917
    6. ' j' → logprob: -4.94826078414917
    7. '(i' → logprob: -5.19826078414917
    8. ' abs' → logprob: -5.69826078414917
    9. 'min' → logprob: -5.82326078414917
    10. 'j' → logprob: -6.07326078414917

Token 754: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02838112600147724
    2. '(j' → logprob: -4.77838134765625
    3. '(' → logprob: -4.90338134765625
    4. ' ' → logprob: -5.27838134765625
    5. 'abs' → logprob: -5.77838134765625
    6. ' (' → logprob: -6.27838134765625
    7. '(i' → logprob: -7.15338134765625
    8. 'j' → logprob: -8.15338134765625
    9. '(abs' → logprob: -8.27838134765625
    10. ' abs' → logprob: -8.52838134765625

Token 755: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09231936931610107
    2. '[' → logprob: -3.5923194885253906
    3. ' *' → logprob: -3.8423194885253906
    4. '*(' → logprob: -4.342319488525391
    5. '[j' → logprob: -5.217319488525391
    6. ')' → logprob: -5.717319488525391
    7. '(' → logprob: -5.842319488525391
    8. '(j' → logprob: -6.467319488525391
    9. '+' → logprob: -6.592319488525391
    10. ''' → logprob: -6.842319488525391

Token 756: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0404663011431694
    2. '(j' → logprob: -3.41546630859375
    3. ' j' → logprob: -5.29046630859375
    4. ' (' → logprob: -6.41546630859375
    5. 'abs' → logprob: -11.16546630859375
    6. 'i' → logprob: -11.16546630859375
    7. '(' → logprob: -11.29046630859375
    8. '   ' → logprob: -11.29046630859375
    9. '[j' → logprob: -11.41546630859375
    10. '(i' → logprob: -11.66546630859375

Token 757: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07386405020952225
    2. '-' → logprob: -2.698863983154297
    3. '-i' → logprob: -5.698863983154297
    4. '-j' → logprob: -7.823863983154297
    5. '+' → logprob: -9.448863983154297
    6. ')' → logprob: -10.448863983154297
    7. ' ' → logprob: -10.823863983154297
    8. '   ' → logprob: -11.073863983154297
    9. ' +' → logprob: -11.823863983154297
    10. '  ' → logprob: -12.323863983154297

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012935701524838805
    2. ')
' → logprob: -7.751293659210205
    3. ')+' → logprob: -8.001293182373047
    4. '+' → logprob: -8.751293182373047
    5. '),' → logprob: -9.126293182373047
    6. '   ' → logprob: -10.001293182373047
    7. ')`' → logprob: -10.001293182373047
    8. ')**' → logprob: -10.126293182373047
    9. '))' → logprob: -10.501293182373047
    10. ')]' → logprob: -11.001293182373047

Token 759: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0171008110046387
    2. '   ' → logprob: -1.7671008110046387
    3. '#' → logprob: -2.2671008110046387
    4. ']' → logprob: -2.8921008110046387
    5. ''' → logprob: -3.0171008110046387
    6. ' j' → logprob: -3.1421008110046387
    7. '[' → logprob: -3.5171008110046387
    8. '```' → logprob: -3.6421008110046387
    9. '[j' → logprob: -3.8921008110046387
    10. '\' → logprob: -4.142100811004639

Token 760: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007629819680005312
    2. ')' → logprob: -5.257629871368408
    3. '.' → logprob: -7.757629871368408
    4. '\' → logprob: -8.13262939453125
    5. '    ' → logprob: -8.88262939453125
    6. '#' → logprob: -9.00762939453125
    7. ' )' → logprob: -9.13262939453125
    8. '    
' → logprob: -9.13262939453125
    9. ')
' → logprob: -9.25762939453125
    10. ' ' → logprob: -9.25762939453125

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006208428181707859
    2. '    
' → logprob: -5.381208419799805
    3. '#' → logprob: -7.006208419799805
    4. '\' → logprob: -9.256208419799805
    5. '#
' → logprob: -9.506208419799805
    6. '
' → logprob: -9.631208419799805
    7. '```' → logprob: -9.756208419799805
    8. '<|end|>' → logprob: -9.881208419799805
    9. '    ' → logprob: -10.006208419799805
    10. '       ' → logprob: -10.256208419799805

Token 762: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008872774429619312
    2. '    
' → logprob: -5.258872985839844
    3. '#' (adapté à ' #') → logprob: -5.883872985839844
    4. '
' → logprob: -8.133872985839844
    5. 'def' → logprob: -8.633872985839844
    6. '<|end|>' → logprob: -9.258872985839844
    7. '  
' → logprob: -10.008872985839844
    8. '```' → logprob: -10.008872985839844
    9. '#
' → logprob: -10.258872985839844
    10. ')' → logprob: -10.883872985839844

Token 763: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17384780943393707
    2. '#' → logprob: -1.9238477945327759
    3. '    
' → logprob: -4.923847675323486
    4. '#
' → logprob: -6.173847675323486
    5. '
' → logprob: -6.548847675323486
    6. 'def' → logprob: -7.298847675323486
    7. '  
' → logprob: -7.423847675323486
    8. '```' → logprob: -7.798847675323486
    9. ' #' → logprob: -8.048848152160645
    10. ' 
' → logprob: -9.423848152160645

Token 764: ' la' (ID: 557)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16865874826908112
    2. 'cha' → logprob: -2.66865873336792
    3. ' continuer' → logprob: -4.29365873336792
    4. ' j' → logprob: -4.66865873336792
    5. 'v' → logprob: -4.91865873336792
    6. 'contin' → logprob: -4.91865873336792
    7. ' ' → logprob: -5.16865873336792
    8. ' each' → logprob: -5.54365873336792
    9. ' poursuivre' → logprob: -5.79365873336792
    10. 'each' → logprob: -5.79365873336792

Token 765: ' portée' (ID: 106795)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6668574810028076
    2. 'i' → logprob: -1.9168574810028076
    3. ' i' → logprob: -2.7918574810028076
    4. ' ' → logprob: -3.5418574810028076
    5. 'n' → logprob: -4.041857719421387
    6. ' solution' → logprob: -4.166857719421387
    7. 'r' → logprob: -4.416857719421387
    8. ' return' → logprob: -4.416857719421387
    9. ' sens' → logprob: -4.416857719421387
    10. '#' → logprob: -4.666857719421387

Token 766: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8094435930252075
    2. 'max' → logprob: -1.8094435930252075
    3. ' maximale' → logprob: -1.9344435930252075
    4. '[i' → logprob: -2.059443473815918
    5. '_max' → logprob: -2.059443473815918
    6. '_' → logprob: -2.309443473815918
    7. ' ' → logprob: -2.809443473815918
    8. '[max' → logprob: -3.934443473815918
    9. ' maximal' → logprob: -4.309443473815918
    10. ' max' → logprob: -4.559443473815918

Token 767: ' trampoline' (ID: 162506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29036280512809753
    2. ' saut' → logprob: -2.79036283493042
    3. 'aller' → logprob: -3.29036283493042
    4. 'tr' → logprob: -3.54036283493042
    5. 'sa' → logprob: -3.54036283493042
    6. 'j' → logprob: -4.29036283493042
    7. '```' → logprob: -4.29036283493042
    8. 'd' → logprob: -4.91536283493042
    9. 'jum' → logprob: -5.04036283493042
    10. 'jump' → logprob: -5.04036283493042

Token 768: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6372925043106079
    2. ' j' → logprob: -1.512292504310608
    3. 'i' → logprob: -2.1372923851013184
    4. ' ' → logprob: -3.0122923851013184
    5. 'j' → logprob: -3.8872923851013184
    6. '[i' → logprob: -4.262292385101318
    7. '[' → logprob: -4.762292385101318
    8. '_' → logprob: -5.262292385101318
    9. 's' → logprob: -5.387292385101318
    10. '[j' → logprob: -5.512292385101318

Token 769: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1444396674633026
    2. 'e' → logprob: -3.144439697265625
    3. ''i' → logprob: -3.644439697265625
    4. '[' → logprob: -3.769439697265625
    5. '[j' → logprob: -3.894439697265625
    6. ''' → logprob: -4.644439697265625
    7. ''[' → logprob: -5.144439697265625
    8. 'i' → logprob: -6.394439697265625
    9. 'u' → logprob: -7.144439697265625
    10. ''e' → logprob: -7.519439697265625

Token 770: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29200279712677
    2. '],' → logprob: -1.54200279712677
    3. '])' → logprob: -4.4170026779174805
    4. '']' → logprob: -4.6670026779174805
    5. '[j' → logprob: -4.7920026779174805
    6. '[i' → logprob: -6.5420026779174805
    7. ''],' → logprob: -6.7920026779174805
    8. '[' → logprob: -7.1670026779174805
    9. ']'' → logprob: -7.1670026779174805
    10. '```' → logprob: -7.4170026779174805

Token 771: ' pour' (ID: 1930)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4500384032726288
    2. ' >=' → logprob: -1.7000384330749512
    3. '>=' → logprob: -2.950038433074951
    4. ']' → logprob: -3.575038433074951
    5. '#' → logprob: -3.950038433074951
    6. '[i' → logprob: -4.450038433074951
    7. '[' → logprob: -4.575038433074951
    8. ',' → logprob: -5.200038433074951
    9. ''' → logprob: -5.200038433074951
    10. ')' → logprob: -5.450038433074951

Token 772: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5917520523071289
    2. ' j' → logprob: -0.9667520523071289
    3. ' chaque' → logprob: -3.966752052307129
    4. 'i' → logprob: -5.216752052307129
    5. 'aller' → logprob: -5.466752052307129
    6. 'le' → logprob: -5.466752052307129
    7. 'l' → logprob: -5.466752052307129
    8. ' ' → logprob: -5.466752052307129
    9. ' sa' → logprob: -5.591752052307129
    10. 's' → logprob: -5.716752052307129

Token 773: ' >' (ID: 1424)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48062029480934143
    2. ' <=' → logprob: -2.3556203842163086
    3. '<=' → logprob: -2.6056203842163086
    4. '],' → logprob: -3.6056203842163086
    5. 'ans' → logprob: -4.230620384216309
    6. 'e' → logprob: -4.355620384216309
    7. ' ]' → logprob: -4.355620384216309
    8. '[i' → logprob: -4.480620384216309
    9. '[j' → logprob: -4.730620384216309
    10. '+' → logprob: -4.855620384216309

Token 774: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02144354209303856
    2. ' i' → logprob: -3.8964436054229736
    3. 'j' → logprob: -7.2714433670043945
    4. '   ' → logprob: -9.521443367004395
    5. ' j' → logprob: -9.771443367004395
    6. ' ' → logprob: -11.021443367004395
    7. '[i' → logprob: -11.396443367004395
    8. ']' → logprob: -11.521443367004395
    9. '```' → logprob: -11.896443367004395
    10. '[' → logprob: -12.771443367004395

Token 775: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8225568532943726
    2. '],' → logprob: -1.5725568532943726
    3. ',' → logprob: -2.572556972503662
    4. '//' → logprob: -2.697556972503662
    5. ':' → logprob: -2.947556972503662
    6. '[j' → logprob: -3.197556972503662
    7. '#' → logprob: -3.322556972503662
    8. '[i' → logprob: -4.697556972503662
    9. ')' → logprob: -4.822556972503662
    10. '[' → logprob: -4.822556972503662

Token 776: ' on' (ID: 402)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.08520758152008057
    2. ' j' → logprob: -3.710207462310791
    3. ' ' → logprob: -3.960207462310791
    4. ' on' → logprob: -4.710207462310791
    5. '#' → logprob: -5.585207462310791
    6. ' ' → logprob: -5.585207462310791
    7. ' le' → logprob: -5.585207462310791
    8. ')' → logprob: -5.710207462310791
    9. ' la' → logprob: -5.835207462310791
    10. ',' → logprob: -6.210207462310791

Token 777: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.4675520658493042
    2. ' doit' → logprob: -1.4675520658493042
    3. ' peut' → logprob: -2.9675521850585938
    4. ' peux' → logprob: -3.4675521850585938
    5. '#' → logprob: -3.9675521850585938
    6. 'pe' → logprob: -4.717552185058594
    7. ' do' → logprob: -4.967552185058594
    8. ' continue' → logprob: -5.717552185058594
    9. ' veut' → logprob: -5.842552185058594
    10. 's' → logprob: -6.592552185058594

Token 778: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.28305667638778687
    2. ' considérer' → logprob: -3.0330567359924316
    3. ' continuer' → logprob: -3.4080567359924316
    4. 'v' → logprob: -3.4080567359924316
    5. ' trouver' → logprob: -4.158056735992432
    6. ' prendre' → logprob: -4.283056735992432
    7. ' pouvoir' → logprob: -4.783056735992432
    8. 'contin' → logprob: -4.908056735992432
    9. 'prendre' → logprob: -4.908056735992432
    10. 'tenir' → logprob: -5.033056735992432

Token 779: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7358893752098083
    2. ' si' → logprob: -1.4858894348144531
    3. ' if' → logprob: -1.7358894348144531
    4. 'que' → logprob: -3.610889434814453
    5. 'si' → logprob: -3.860889434814453
    6. 'j' → logprob: -4.610889434814453
    7. ' j' → logprob: -4.610889434814453
    8. ' ' → logprob: -4.860889434814453
    9. 'if' → logprob: -4.860889434814453
    10. ' aussi' → logprob: -5.360889434814453

Token 780: ' condition' (ID: 7060)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.053645372390747
    2. ' condition' → logprob: -1.553645372390747
    3. ' j' → logprob: -2.303645372390747
    4. ' valeur' → logprob: -2.803645372390747
    5. 'condition' → logprob: -3.053645372390747
    6. ' val' → logprob: -3.303645372390747
    7. ' distance' → logprob: -3.803645372390747
    8. ' ' → logprob: -3.928645372390747
    9. ' valid' → logprob: -4.178645133972168
    10. ' contin' → logprob: -4.428645133972168

Token 781: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4473580121994019
    2. ' suivante' → logprob: -1.6973580121994019
    3. '[j' → logprob: -1.9473580121994019
    4. ' ' → logprob: -2.6973581314086914
    5. '[' → logprob: -3.0723581314086914
    6. ' de' → logprob: -3.1973581314086914
    7. 's' → logprob: -3.3223581314086914
    8. ':' → logprob: -3.4473581314086914
    9. '```' → logprob: -3.5723581314086914
    10. '[i' → logprob: -3.5723581314086914

Token 782: ' :
' (ID: 10039)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4254463016986847
    2. 'd' → logprob: -1.3004462718963623
    3. ' j' → logprob: -3.4254462718963623
    4. '10' → logprob: -3.9254462718963623
    5. ' ' → logprob: -4.425446510314941
    6. 'j' → logprob: -4.925446510314941
    7. ' ' → logprob: -7.300446510314941
    8. '  ' → logprob: -8.175446510314941
    9. '```' → logprob: -8.550446510314941
    10. ' la' → logprob: -8.737946510314941

Token 783: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8934187293052673
    2. ' j' → logprob: -1.018418788909912
    3. '10' → logprob: -2.268418788909912
    4. ' ' → logprob: -2.768418788909912
    5. 'd' → logprob: -3.393418788909912
    6. 'j' → logprob: -5.018418788909912
    7. ' ' → logprob: -5.018418788909912
    8. ' (' → logprob: -5.518418788909912
    9. '  ' → logprob: -5.643418788909912
    10. '    ' → logprob: -5.893418788909912

Token 784: ' #' (ID: 1069)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8845117688179016
    2. ' d' → logprob: -1.2595117092132568
    3. '10' → logprob: -1.8845117092132568
    4. ' ' → logprob: -2.384511709213257
    5. 'd' → logprob: -3.634511709213257
    6. 'j' → logprob: -4.634511947631836
    7. ' (' → logprob: -5.384511947631836
    8. '   ' → logprob: -5.384511947631836
    9. '  ' → logprob: -5.509511947631836
    10. ' ' → logprob: -5.759511947631836

Token 785: ' ' (ID: 220)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8747298121452332
    2. ' j' → logprob: -0.9997298121452332
    3. ' ' → logprob: -2.499729871749878
    4. 'd' → logprob: -2.749729871749878
    5. 'j' → logprob: -3.499729871749878
    6. '10' → logprob: -3.499729871749878
    7. ' (' → logprob: -6.374729633331299
    8. ' ' → logprob: -6.374729633331299
    9. ' abs' → logprob: -7.374729633331299
    10. '  ' → logprob: -7.624729633331299

Token 786: '10' (ID: 702)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2470471858978271
    2. 'j' → logprob: -1.3720471858978271
    3. 'd' → logprob: -1.7470471858978271
    4. '10' → logprob: -1.9970471858978271
    5. ' d' → logprob: -2.497047185897827
    6. ' ' → logprob: -2.997047185897827
    7. '#' → logprob: -5.247047424316406
    8. ' la' → logprob: -6.622047424316406
    9. ' il' → logprob: -6.872047424316406
    10. ' le' → logprob: -7.247047424316406

Token 787: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.060477305203676224
    2. '*' → logprob: -3.1854772567749023
    3. ' *' → logprob: -4.060477256774902
    4. ' *(' → logprob: -9.810477256774902
    5. '*j' → logprob: -10.935477256774902
    6. '(j' → logprob: -11.935477256774902
    7. ' (' → logprob: -13.435477256774902
    8. '**' → logprob: -14.185477256774902
    9. '   ' → logprob: -14.185477256774902
    10. '(' → logprob: -14.185477256774902

Token 788: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007586462306790054
    2. ' j' → logprob: -7.250758647918701
    3. '(j' → logprob: -10.875758171081543
    4. 'i' → logprob: -11.500758171081543
    5. '|' → logprob: -11.750758171081543
    6. '   ' → logprob: -13.125758171081543
    7. ')' → logprob: -13.375758171081543
    8. ' ' → logprob: -13.500758171081543
    9. '	j' → logprob: -13.625758171081543
    10. 'abs' → logprob: -13.938258171081543

Token 789: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22604946792125702
    2. ')' → logprob: -2.2260494232177734
    3. '-' → logprob: -2.9760494232177734
    4. '*(' → logprob: -3.7260494232177734
    5. ' <=' → logprob: -5.601049423217773
    6. ' (' → logprob: -5.976049423217773
    7. ')*(' → logprob: -5.976049423217773
    8. '+' → logprob: -6.101049423217773
    9. '*' → logprob: -6.851049423217773
    10. '<=' → logprob: -7.101049423217773

Token 790: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05785848945379257
    2. ' i' → logprob: -2.932858467102051
    3. 'j' → logprob: -6.057858467102051
    4. ' j' → logprob: -7.932858467102051
    5. ' ' → logprob: -9.18285846710205
    6. ')' → logprob: -9.30785846710205
    7. '	i' → logprob: -11.12035846710205
    8. '   ' → logprob: -11.30785846710205
    9. ' ' → logprob: -11.62035846710205
    10. '_i' → logprob: -12.05785846710205

Token 791: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.615255839889869e-05
    2. ' )' → logprob: -10.000096321105957
    3. ')<=' → logprob: -10.125096321105957
    4. '))' → logprob: -12.875096321105957
    5. '）' → logprob: -13.625096321105957
    6. '')' → logprob: -14.250096321105957
    7. '")' → logprob: -14.375096321105957
    8. ')
' → logprob: -14.375096321105957
    9. ')`' → logprob: -14.500096321105957
    10. '`)' → logprob: -14.750096321105957

Token 792: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0014936764491721988
    2. '<=' → logprob: -6.626493453979492
    3. ')' → logprob: -9.751493453979492
    4. ' ' → logprob: -10.126493453979492
    5. ')<=' → logprob: -10.251493453979492
    6. ' )' → logprob: -11.501493453979492
    7. ' <' → logprob: -12.126493453979492
    8. ' ' → logprob: -12.251493453979492
    9. ' ≤' → logprob: -12.876493453979492
    10. '*' → logprob: -13.001493453979492

Token 793: ' d' (ID: 272)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4061123728752136
    2. 'min' → logprob: -1.1561124324798584
    3. 'd' → logprob: -4.656112194061279
    4. ' d' → logprob: -4.656112194061279
    5. ' ' → logprob: -11.281112670898438
    6. '   ' → logprob: -11.406112670898438
    7. ' ' → logprob: -12.281112670898438
    8. '	min' → logprob: -12.531112670898438
    9. '  ' → logprob: -13.031112670898438
    10. ' minimum' → logprob: -13.031112670898438

Token 794: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5373197793960571
    2. '[' → logprob: -1.1623197793960571
    3. '[i' → logprob: -2.4123196601867676
    4. ']' → logprob: -4.537319660186768
    5. ')' → logprob: -7.037319660186768
    6. '[
' → logprob: -7.287319660186768
    7. '   ' → logprob: -8.162320137023926
    8. '_' → logprob: -8.912320137023926
    9. ' [' → logprob: -9.287320137023926
    10. '[]' → logprob: -9.412320137023926

Token 795: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.708946943283081
    2. '])' → logprob: -1.458946943283081
    3. ']' → logprob: -1.583946943283081
    4. '   ' → logprob: -3.458946943283081
    5. '[i' → logprob: -4.33394718170166
    6. '[j' → logprob: -4.70894718170166
    7. ')
' → logprob: -5.45894718170166
    8. '])
' → logprob: -5.70894718170166
    9. ')]' → logprob: -6.08394718170166
    10. '[' → logprob: -6.58394718170166

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034962546080350876
    2. ')' → logprob: -4.6599626541137695
    3. '.' → logprob: -5.1599626541137695
    4. '#' → logprob: -5.4099626541137695
    5. '<|end|>' → logprob: -5.7849626541137695
    6. '\' → logprob: -6.0349626541137695
    7. '```' → logprob: -6.0349626541137695
    8. '\n' → logprob: -6.7849626541137695
    9. '    
' → logprob: -7.6599626541137695
    10. '...' → logprob: -7.6599626541137695

Token 797: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22001972794532776
    2. ')' → logprob: -2.845019817352295
    3. '\' → logprob: -2.845019817352295
    4. '#' → logprob: -3.345019817352295
    5. '.' → logprob: -4.845019817352295
    6. ' ' → logprob: -5.095019817352295
    7. '\n' → logprob: -5.095019817352295
    8. '  
' → logprob: -5.970019817352295
    9. ' ' → logprob: -6.095019817352295
    10. '[' → logprob: -6.095019817352295

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014264225959777832
    2. '#' → logprob: -4.764264106750488
    3. '    
' → logprob: -6.014264106750488
    4. '#
' → logprob: -6.514264106750488
    5. '
' → logprob: -7.514264106750488
    6. '<|end|>' → logprob: -7.639264106750488
    7. '```' → logprob: -8.889264106750488
    8. '  
' → logprob: -9.264264106750488
    9. '<|end|>' → logprob: -9.264264106750488
    10. '\' → logprob: -9.514264106750488

Token 799: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13696259260177612
    2. '#' (adapté à ' #') → logprob: -2.136962652206421
    3. '#
' → logprob: -4.886962413787842
    4. '    
' → logprob: -6.511962413787842
    5. '```' → logprob: -8.386962890625
    6. '
' → logprob: -9.136962890625
    7. '\' → logprob: -9.136962890625
    8. '<|end|>' → logprob: -9.261962890625
    9. 'def' → logprob: -9.511962890625
    10. ' #' → logprob: -9.761962890625

Token 800: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3523831367492676
    2. '   ' → logprob: -1.7273831367492676
    3. ' j' → logprob: -2.1023831367492676
    4. '<|end|>' → logprob: -2.6023831367492676
    5. ' ' → logprob: -2.7273831367492676
    6. ' 
' → logprob: -2.8523831367492676
    7. ')' → logprob: -3.4773831367492676
    8. '\' → logprob: -3.7273831367492676
    9. '    
' → logprob: -3.7273831367492676
    10. '[' → logprob: -3.8523831367492676

Token 801: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.10044702142477036
    2. ' doit' → logprob: -3.600446939468384
    3. ' peux' → logprob: -3.975446939468384
    4. 'pe' → logprob: -4.475447177886963
    5. 'def' → logprob: -4.475447177886963
    6. 'do' → logprob: -4.725447177886963
    7. ' can' → logprob: -5.725447177886963
    8. '#' → logprob: -6.100447177886963
    9. ' devra' → logprob: -6.225447177886963
    10. 'n' → logprob: -6.725447177886963

Token 802: ' remar' (ID: 64497)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.7146632671356201
    2. ' utiliser' → logprob: -1.3396632671356201
    3. 'contin' → logprob: -2.33966326713562
    4. 'util' → logprob: -3.08966326713562
    5. 'impl' → logprob: -4.089663505554199
    6. ' compléter' → logprob: -4.214663505554199
    7. ' explo' → logprob: -4.464663505554199
    8. ' poursuivre' → logprob: -4.589663505554199
    9. 'pré' → logprob: -4.589663505554199
    10. ' procéder' → logprob: -5.339663505554199

Token 803: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.012318090535700321
    2. 'qu' → logprob: -5.262318134307861
    3. 'r' → logprob: -6.137318134307861
    4. 'que' → logprob: -6.262318134307861
    5. 'ter' → logprob: -7.012318134307861
    6. '#' → logprob: -7.387318134307861
    7. 'q' → logprob: -7.512318134307861
    8. 'er' → logprob: -8.262317657470703
    9. 'rer' → logprob: -9.262317657470703
    10. 'ler' → logprob: -9.387317657470703

Token 804: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2103855311870575
    2. ' ' → logprob: -1.9603855609893799
    3. ' that' → logprob: -4.335385322570801
    4. '<|end|>' → logprob: -4.335385322570801
    5. ',' → logprob: -5.085385322570801
    6. ' ' → logprob: -5.585385322570801
    7. '[' → logprob: -5.960385322570801
    8. '_' → logprob: -5.960385322570801
    9. ''' → logprob: -7.335385322570801
    10. ' qu' → logprob: -7.335385322570801

Token 805: ' pour' (ID: 1930)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6674411296844482
    2. ' la' → logprob: -1.5424411296844482
    3. ',' → logprob: -3.2924411296844482
    4. ' j' → logprob: -3.4174411296844482
    5. ' ' → logprob: -3.5424411296844482
    6. ' l' → logprob: -3.7924411296844482
    7. ' for' → logprob: -4.042441368103027
    8. ' ' → logprob: -4.167441368103027
    9. ' on' → logprob: -4.667441368103027
    10. ' le' → logprob: -4.667441368103027

Token 806: ' pouvoir' (ID: 27197)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.29770755767822266
    2. ' j' → logprob: -1.4227075576782227
    3. ' ' → logprob: -4.797707557678223
    4. 'j' → logprob: -6.672707557678223
    5. ' each' → logprob: -6.672707557678223
    6. ' continuer' → logprob: -6.922707557678223
    7. ' tout' → logprob: -7.172707557678223
    8. ' i' → logprob: -7.172707557678223
    9. ' le' → logprob: -7.922707557678223
    10. ' every' → logprob: -8.297707557678223

Token 807: ' sa' (ID: 880)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19542662799358368
    2. ' _' → logprob: -2.9454267024993896
    3. ' atteindre' → logprob: -3.4454267024993896
    4. ' ' → logprob: -3.6954267024993896
    5. ' continuer' → logprob: -3.9454267024993896
    6. ' accéder' → logprob: -5.1954264640808105
    7. ' j' → logprob: -5.3204264640808105
    8. '_j' → logprob: -5.5704264640808105
    9. ' reachable' → logprob: -6.1954264640808105
    10. ' se' → logprob: -6.3204264640808105

Token 808: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.14859065413475037
    2. 'ut' → logprob: -2.898590564727783
    3. 'u' → logprob: -3.523590564727783
    4. 'voir' → logprob: -4.648590564727783
    5. 'ute' → logprob: -4.898590564727783
    6. 'uts' → logprob: -5.023590564727783
    7. 'v' → logprob: -5.648590564727783
    8. 'util' → logprob: -6.148590564727783
    9. 't' → logprob: -6.398590564727783
    10. '
' → logprob: -6.398590564727783

Token 809: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7942281365394592
    2. 'de' → logprob: -1.5442280769348145
    3. ' d' → logprob: -1.7942280769348145
    4. 'd' → logprob: -2.0442280769348145
    5. ' vers' → logprob: -4.0442280769348145
    6. 'from' → logprob: -5.2942280769348145
    7. ' from' → logprob: -5.7942280769348145
    8. ' jusqu' → logprob: -6.2942280769348145
    9. ' à' → logprob: -6.5442280769348145
    10. 'jus' → logprob: -6.5442280769348145

Token 810: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27380311489105225
    2. ' j' → logprob: -1.7738031148910522
    3. 'i' → logprob: -2.898803234100342
    4. 'j' → logprob: -4.523803234100342
    5. ' un' → logprob: -6.148803234100342
    6. ' ' → logprob: -7.273803234100342
    7. 'un' → logprob: -8.523802757263184
    8. ' ' → logprob: -9.023802757263184
    9. ' l' → logprob: -9.148802757263184
    10. '_' → logprob: -9.273802757263184

Token 811: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.2613357603549957
    2. ' à' → logprob: -2.636335849761963
    3. '+' → logprob: -2.886335849761963
    4. ' ->' → logprob: -2.886335849761963
    5. ' ' → logprob: -4.136335849761963
    6. ' +' → logprob: -4.511335849761963
    7. '   ' → logprob: -5.261335849761963
    8. ''' → logprob: -6.261335849761963
    9. '->' → logprob: -6.386335849761963
    10. ' jusqu' → logprob: -6.636335849761963

Token 812: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.21930457651615143
    2. 'j' → logprob: -1.7193045616149902
    3. ' un' → logprob: -4.34430456161499
    4. ' i' → logprob: -6.09430456161499
    5. ' ' → logprob: -6.71930456161499
    6. 'i' → logprob: -7.21930456161499
    7. 'un' → logprob: -8.719305038452148
    8. ' une' → logprob: -9.594305038452148
    9. '```' → logprob: -9.594305038452148
    10. ' ' → logprob: -9.719305038452148

Token 813: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03491845354437828
    2. ' ,' → logprob: -3.7849185466766357
    3. ')' → logprob: -5.909918308258057
    4. ' ' → logprob: -6.284918308258057
    5. ' (' → logprob: -6.659918308258057
    6. '),' → logprob: -6.909918308258057
    7. ',
' → logprob: -7.034918308258057
    8. ' j' → logprob: -7.534918308258057
    9. '+' → logprob: -7.659918308258057
    10. '   ' → logprob: -7.784918308258057

Token 814: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1998018026351929
    2. ' j' → logprob: -1.3248018026351929
    3. '    ' → logprob: -1.9498018026351929
    4. '   ' → logprob: -2.4498019218444824
    5. '10' → logprob: -2.8248019218444824
    6. ' (' → logprob: -2.9498019218444824
    7. ' i' → logprob: -4.074801921844482
    8. ' if' → logprob: -4.199801921844482
    9. ')' → logprob: -4.574801921844482
    10. ' )' → logprob: -4.574801921844482

Token 815: ' #' (ID: 1069)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.41399842500686646
    2. ' ' → logprob: -2.2889983654022217
    3. ' #' → logprob: -2.6639983654022217
    4. '#' (adapté à ' #') → logprob: -3.2889983654022217
    5. '10' → logprob: -3.4139983654022217
    6. ' (' → logprob: -3.9139983654022217
    7. ' i' → logprob: -4.413998603820801
    8. '   ' → logprob: -4.538998603820801
    9. ')' → logprob: -4.663998603820801
    10. ' )' → logprob: -4.788998603820801

Token 816: ' ' (ID: 220)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.108405590057373
    2. ' j' → logprob: -1.358405590057373
    3. ' if' → logprob: -2.233405590057373
    4. '10' → logprob: -2.358405590057373
    5. '#' → logprob: -2.483405590057373
    6. ' ' → logprob: -2.983405590057373
    7. ' (' → logprob: -3.358405590057373
    8. 'if' → logprob: -4.733405590057373
    9. ' i' → logprob: -4.983405590057373
    10. '   ' → logprob: -5.233405590057373

Token 817: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2017476558685303
    2. ' ' → logprob: -1.7017476558685303
    3. ' j' → logprob: -1.9517476558685303
    4. '#' → logprob: -2.9517476558685303
    5. '10' → logprob: -2.9517476558685303
    6. ' (' → logprob: -3.0767476558685303
    7. ' #' → logprob: -3.3267476558685303
    8. ' i' → logprob: -3.3267476558685303
    9. ' if' → logprob: -3.7017476558685303
    10. ' abs' → logprob: -3.8267476558685303

Token 818: '10' (ID: 702)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25514739751815796
    2. 'min' → logprob: -2.0051474571228027
    3. '10' → logprob: -3.5051474571228027
    4. ' j' → logprob: -4.005147457122803
    5. ' ' → logprob: -4.130147457122803
    6. ' abs' → logprob: -4.755147457122803
    7. 'j' → logprob: -5.130147457122803
    8. 'abs' → logprob: -5.380147457122803
    9. ' d' → logprob: -5.880147457122803
    10. ' i' → logprob: -6.505147457122803

Token 819: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6159263849258423
    2. '*(' → logprob: -0.8659263849258423
    3. ' *' → logprob: -3.2409262657165527
    4. '(' → logprob: -10.615926742553711
    5. ' *(' → logprob: -10.740926742553711
    6. ' (' → logprob: -11.865926742553711
    7. '(j' → logprob: -11.990926742553711
    8. '*j' → logprob: -12.490926742553711
    9. '**' → logprob: -13.615926742553711
    10. '*
' → logprob: -13.990926742553711

Token 820: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0022009287495166063
    2. '(j' → logprob: -6.877201080322266
    3. ' j' → logprob: -6.877201080322266
    4. 'i' → logprob: -9.877201080322266
    5. 'abs' → logprob: -10.127201080322266
    6. ' (' → logprob: -10.752201080322266
    7. '|' → logprob: -12.127201080322266
    8. '[j' → logprob: -13.064701080322266
    9. ' abs' → logprob: -13.189701080322266
    10. '	j' → logprob: -13.314701080322266

Token 821: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030540484935045242
    2. ')' → logprob: -4.155540466308594
    3. '-' → logprob: -4.655540466308594
    4. ' <=' → logprob: -6.155540466308594
    5. ' )' → logprob: -7.405540466308594
    6. '+' → logprob: -7.530540466308594
    7. ' +' → logprob: -7.655540466308594
    8. ' ' → logprob: -8.280540466308594
    9. '-)' → logprob: -8.280540466308594
    10. '   ' → logprob: -8.780540466308594

Token 822: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2811734676361084
    2. ' i' → logprob: -1.4061734676361084
    3. ' ' → logprob: -11.531173706054688
    4. '	i' → logprob: -11.781173706054688
    5. ' ' → logprob: -12.406173706054688
    6. '_i' → logprob: -14.906173706054688
    7. ')' → logprob: -14.906173706054688
    8. '  ' → logprob: -15.656173706054688
    9. 'j' → logprob: -16.031173706054688
    10. ' j' → logprob: -16.031173706054688

Token 823: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006784808938391507
    2. ' )' → logprob: -7.500678539276123
    3. ')<=' → logprob: -9.125678062438965
    4. '*)' → logprob: -12.875678062438965
    5. ' <=' → logprob: -13.000678062438965
    6. '')' → logprob: -13.250678062438965
    7. '[' → logprob: -13.750678062438965
    8. ')`' → logprob: -13.875678062438965
    9. '")' → logprob: -14.000678062438965
    10. ')
' → logprob: -14.125678062438965

Token 824: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.001713974168524146
    2. '<=' → logprob: -7.126713752746582
    3. ')' → logprob: -7.376713752746582
    4. ' )' → logprob: -9.001713752746582
    5. ')<=' → logprob: -9.001713752746582
    6. ' ' → logprob: -11.126713752746582
    7. ' ≤' → logprob: -11.501713752746582
    8. ' ' → logprob: -12.251713752746582
    9. '  ' → logprob: -12.501713752746582
    10. ' <' → logprob: -14.501713752746582

Token 825: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3269282877445221
    2. ' min' → logprob: -1.3269282579421997
    3. 'd' → logprob: -4.82692813873291
    4. ' d' → logprob: -5.20192813873291
    5. '	min' → logprob: -11.32692813873291
    6. '   ' → logprob: -11.57692813873291
    7. ' ' → logprob: -11.57692813873291
    8. ' ' → logprob: -11.70192813873291
    9. '[min' → logprob: -12.70192813873291
    10. '  ' → logprob: -13.07692813873291

Token 826: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.31959080696105957
    2. '[i' → logprob: -1.3195908069610596
    3. '[' → logprob: -5.0695905685424805
    4. '[
' → logprob: -11.56959056854248
    5. '\[' → logprob: -12.69459056854248
    6. 'i' → logprob: -13.19459056854248
    7. 'j' → logprob: -13.31959056854248
    8. '```' → logprob: -13.56959056854248
    9. ' [' → logprob: -13.81959056854248
    10. '   ' → logprob: -14.06959056854248

Token 827: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01544012688100338
    2. ' and' → logprob: -5.140439987182617
    3. ' )' → logprob: -5.640439987182617
    4. '),' → logprob: -6.390439987182617
    5. ']' → logprob: -6.515439987182617
    6. '])' → logprob: -6.890439987182617
    7. 'and' → logprob: -7.640439987182617
    8. '   ' → logprob: -7.765439987182617
    9. '[j' → logprob: -8.515439987182617
    10. '[' → logprob: -8.765439987182617

Token 828: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4801844656467438
    2. '   ' → logprob: -1.8551844358444214
    3. ' and' → logprob: -2.605184555053711
    4. ' ' → logprob: -3.855184555053711
    5. ',' → logprob: -3.980184555053711
    6. '<|end|>' → logprob: -4.105184555053711
    7. '[' → logprob: -4.355184555053711
    8. '    ' → logprob: -4.730184555053711
    9. ':' → logprob: -4.855184555053711
    10. '*' → logprob: -5.105184555053711

Token 829: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07874777913093567
    2. 'and' → logprob: -2.9537477493286133
    3. ')' → logprob: -4.703747749328613
    4. ' et' → logprob: -4.828747749328613
    5. '<|end|>' → logprob: -5.953747749328613
    6. '   ' → logprob: -7.078747749328613
    7. ' ' → logprob: -7.203747749328613
    8. 'et' → logprob: -7.453747749328613
    9. ' or' → logprob: -7.828747749328613
    10. ',' → logprob: -7.828747749328613

Token 830: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01605607196688652
    2. '10' → logprob: -4.141056060791016
    3. ' ' → logprob: -11.516056060791016
    4. ' d' → logprob: -12.891056060791016
    5. '  ' → logprob: -12.891056060791016
    6. '```' → logprob: -13.516056060791016
    7. 'd' → logprob: -14.016056060791016
    8. ' j' → logprob: -14.266056060791016
    9. '   ' → logprob: -14.641056060791016
    10. '
' → logprob: -14.953556060791016

Token 831: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012906422838568687
    2. '10' → logprob: -4.762906551361084
    3. ' d' → logprob: -5.512906551361084
    4. ' ' → logprob: -9.012906074523926
    5. 'd' → logprob: -9.262906074523926
    6. ' j' → logprob: -11.012906074523926
    7. ' min' → logprob: -12.012906074523926
    8. '    ' → logprob: -13.637906074523926
    9. ' 
' → logprob: -14.012906074523926
    10. '   ' → logprob: -14.012906074523926

Token 832: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.020168688148260117
    2. '*' → logprob: -4.145168781280518
    3. ' *' → logprob: -5.520168781280518
    4. ' *(' → logprob: -9.27016830444336
    5. ' (' → logprob: -12.39516830444336
    6. '(j' → logprob: -12.39516830444336
    7. '(' → logprob: -12.52016830444336
    8. '*[' → logprob: -12.52016830444336
    9. '[' → logprob: -13.14516830444336
    10. '   ' → logprob: -13.39516830444336

Token 833: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003039154689759016
    2. 'd' → logprob: -6.378039360046387
    3. ' j' → logprob: -7.503039360046387
    4. '(j' → logprob: -7.878039360046387
    5. '[j' → logprob: -8.378039360046387
    6. 'i' → logprob: -9.003039360046387
    7. 'min' → logprob: -10.628039360046387
    8. '	j' → logprob: -11.878039360046387
    9. ' d' → logprob: -12.628039360046387
    10. '```' → logprob: -12.753039360046387

Token 834: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10107354819774628
    2. ' (' → logprob: -3.4760735034942627
    3. '*(' → logprob: -3.6010735034942627
    4. '-' → logprob: -4.726073741912842
    5. ' <=' → logprob: -5.101073741912842
    6. ' *' → logprob: -5.101073741912842
    7. ')' → logprob: -5.476073741912842
    8. ' *(' → logprob: -6.226073741912842
    9. '[' → logprob: -6.351073741912842
    10. ')*(' → logprob: -6.476073741912842

Token 835: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2843615710735321
    2. 'i' → logprob: -1.4093616008758545
    3. ' j' → logprob: -5.909361362457275
    4. ' i' → logprob: -7.659361362457275
    5. ' ' → logprob: -11.534361839294434
    6. ')' → logprob: -13.034361839294434
    7. '	j' → logprob: -13.409361839294434
    8. '```' → logprob: -13.409361839294434
    9. '   ' → logprob: -13.659361839294434
    10. '[j' → logprob: -14.659361839294434

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000958627846557647
    2. ')<=' → logprob: -7.250958442687988
    3. ' )' → logprob: -8.750958442687988
    4. '<=' → logprob: -10.250958442687988
    5. ' <=' → logprob: -11.000958442687988
    6. '[' → logprob: -11.500958442687988
    7. '*)' → logprob: -12.625958442687988
    8. '[j' → logprob: -12.750958442687988
    9. '   ' → logprob: -12.750958442687988
    10. '[i' → logprob: -12.875958442687988

Token 837: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04862971603870392
    2. '<=' → logprob: -3.0486297607421875
    3. ' <' → logprob: -11.548629760742188
    4. ' ≤' → logprob: -11.548629760742188
    5. ')<=' → logprob: -12.298629760742188
    6. '[' → logprob: -12.548629760742188
    7. ')' → logprob: -12.548629760742188
    8. ' ' → logprob: -13.173629760742188
    9. '```' → logprob: -13.298629760742188
    10. '<' → logprob: -13.298629760742188

Token 838: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6858078837394714
    2. 'd' → logprob: -0.8108078837394714
    3. ' min' → logprob: -3.435807943344116
    4. 'min' → logprob: -3.935807943344116
    5. ' ' → logprob: -9.810808181762695
    6. ' ' → logprob: -10.810808181762695
    7. '	d' → logprob: -12.560808181762695
    8. '   ' → logprob: -13.060808181762695
    9. '  ' → logprob: -13.685808181762695
    10. '	min' → logprob: -13.810808181762695

Token 839: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0937238335609436
    2. '[' → logprob: -2.468723773956299
    3. '[i' → logprob: -5.468723773956299
    4. '[
' → logprob: -8.843724250793457
    5. '\[' → logprob: -9.093724250793457
    6. ']' → logprob: -9.593724250793457
    7. 'j' → logprob: -9.843724250793457
    8. ' [' → logprob: -10.093724250793457
    9. ')' → logprob: -10.593724250793457
    10. '```' → logprob: -10.843724250793457

Token 840: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3835534155368805
    2. ']' → logprob: -1.258553385734558
    3. '])' → logprob: -3.6335535049438477
    4. '[i' → logprob: -5.758553504943848
    5. '[j' → logprob: -6.508553504943848
    6. ')
' → logprob: -7.133553504943848
    7. '   ' → logprob: -7.508553504943848
    8. '[' → logprob: -7.883553504943848
    9. ')]' → logprob: -7.883553504943848
    10. ']
' → logprob: -8.008553504943848

Token 841: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.801559329032898
    2. '\' → logprob: -2.0515594482421875
    3. ''' → logprob: -2.5515594482421875
    4. '[' → logprob: -2.5515594482421875
    5. ')' → logprob: -2.8015594482421875
    6. '\n' → logprob: -2.8015594482421875
    7. ' ' → logprob: -3.8015594482421875
    8. '.' → logprob: -3.9265594482421875
    9. '"' → logprob: -4.1765594482421875
    10. '[i' → logprob: -4.6765594482421875

Token 842: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2632221579551697
    2. ')' → logprob: -2.1382222175598145
    3. '<|end|>' → logprob: -4.0132222175598145
    4. '\n' → logprob: -4.1382222175598145
    5. '.' → logprob: -4.2632222175598145
    6. '[' → logprob: -4.6382222175598145
    7. '```' → logprob: -4.8882222175598145
    8. '[i' → logprob: -5.0132222175598145
    9. '\' → logprob: -5.1382222175598145
    10. ' ' → logprob: -5.1382222175598145

Token 843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019454145804047585
    2. '    
' → logprob: -7.001945495605469
    3. '       ' → logprob: -8.876945495605469
    4. '.' → logprob: -9.126945495605469
    5. '
' → logprob: -9.376945495605469
    6. '#' → logprob: -9.501945495605469
    7. ')' → logprob: -9.876945495605469
    8. '<|end|>' → logprob: -9.876945495605469
    9. '...' → logprob: -10.001945495605469
    10. 'def' → logprob: -10.001945495605469

Token 844: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004802834242582321
    2. '    
' → logprob: -6.629802703857422
    3. '\' → logprob: -7.504802703857422
    4. ')' → logprob: -7.754802703857422
    5. '\n' → logprob: -8.129802703857422
    6. '.' → logprob: -8.504802703857422
    7. '#' (adapté à ' #') → logprob: -8.504802703857422
    8. ' ' → logprob: -8.754802703857422
    9. '[' → logprob: -8.879802703857422
    10. 'i' → logprob: -9.004802703857422

Token 845: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13014447689056396
    2. ' ' → logprob: -3.7551445960998535
    3. '\n' → logprob: -4.1301445960998535
    4. ' j' → logprob: -4.2551445960998535
    5. '\' → logprob: -5.0051445960998535
    6. '#' → logprob: -5.1301445960998535
    7. '[' → logprob: -5.2551445960998535
    8. '       ' → logprob: -5.2551445960998535
    9. ' ' → logprob: -5.2551445960998535
    10. ')' → logprob: -5.2551445960998535

Token 846: ' conséquent' (ID: 117211)
  Prédit: ' conséquent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conséquent' → logprob: -0.9585997462272644
    2. 'cons' → logprob: -1.7085998058319092
    3. 'fois' → logprob: -2.208599805831909
    4. 'contre' → logprob: -2.458599805831909
    5. '
' → logprob: -2.833599805831909
    6. '#' → logprob: -3.208599805831909
    7. '```' → logprob: -3.333599805831909
    8. 'con' → logprob: -3.833599805831909
    9. 'ailleurs' → logprob: -4.45859956741333
    10. ' ' → logprob: -4.70859956741333

Token 847: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5949657559394836
    2. '   ' → logprob: -1.2199656963348389
    3. ' j' → logprob: -3.219965696334839
    4. ' (' → logprob: -3.969965696334839
    5. '#' → logprob: -4.094965934753418
    6. '
' → logprob: -4.594965934753418
    7. ',
' → logprob: -5.094965934753418
    8. ':' → logprob: -5.344965934753418
    9. ' ' → logprob: -5.469965934753418
    10. 'for' → logprob: -5.469965934753418

Token 848: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0850086584687233
    2. '#' → logprob: -2.5850086212158203
    3. ' #' → logprob: -5.46000862121582
    4. ' j' → logprob: -7.08500862121582
    5. ' ' → logprob: -8.71000862121582
    6. '```' → logprob: -8.83500862121582
    7. '    ' → logprob: -8.96000862121582
    8. '       ' → logprob: -9.58500862121582
    9. '10' → logprob: -9.83500862121582
    10. ' =' → logprob: -9.96000862121582

Token 849: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011764278635382652
    2. '#' (adapté à ' #') → logprob: -5.386764049530029
    3. 'for' → logprob: -6.261764049530029
    4. ' for' → logprob: -6.386764049530029
    5. '    ' → logprob: -6.636764049530029
    6. 'def' → logprob: -7.011764049530029
    7. '
' → logprob: -8.886764526367188
    8. '       ' → logprob: -9.011764526367188
    9. '  ' → logprob: -9.011764526367188
    10. ' ' → logprob: -9.136764526367188

Token 850: ' j' (ID: 441)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7921762466430664
    2. ' #' → logprob: -1.6671762466430664
    3. '   ' → logprob: -2.0421762466430664
    4. ' for' → logprob: -2.4171762466430664
    5. 'for' → logprob: -3.4171762466430664
    6. ' max' → logprob: -3.6671762466430664
    7. ' j' → logprob: -4.042176246643066
    8. ' ' → logprob: -4.042176246643066
    9. ' ' → logprob: -4.792176246643066
    10. 'max' → logprob: -5.042176246643066

Token 851: ' peut' (ID: 9216)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05829176679253578
    2. ' ≤' → logprob: -3.1832916736602783
    3. ' >' → logprob: -5.183291912078857
    4. '<=' → logprob: -5.433291912078857
    5. ' +' → logprob: -6.683291912078857
    6. ' <' → logprob: -7.058291912078857
    7. ' in' → logprob: -7.433291912078857
    8. '+' → logprob: -7.433291912078857
    9. '>' → logprob: -7.433291912078857
    10. '≤' → logprob: -8.3082914352417

Token 852: ' être' (ID: 9104)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7017013430595398
    2. ' aller' → logprob: -1.0767014026641846
    3. ' être' → logprob: -2.3267014026641846
    4. '<=' → logprob: -3.9517014026641846
    5. ' ->' → logprob: -4.4517011642456055
    6. 'être' → logprob: -4.4517011642456055
    7. ' ' → logprob: -4.5767011642456055
    8. 'aller' → logprob: -5.7017011642456055
    9. ' ≤' → logprob: -6.4517011642456055
    10. 's' → logprob: -6.5767011642456055

Token 853: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.4297869205474854
    2. ' dans' → logprob: -1.5547869205474854
    3. ' atteint' → logprob: -1.6797869205474854
    4. ' au' → logprob: -2.3047869205474854
    5. '<=' → logprob: -2.9297869205474854
    6. 'atte' → logprob: -3.6797869205474854
    7. '>' → logprob: -3.9297869205474854
    8. 'au' → logprob: -3.9297869205474854
    9. 'su' → logprob: -4.179786682128906
    10. ' ' → logprob: -4.429786682128906

Token 854: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5688849091529846
    2. 'range' → logprob: -1.0688848495483398
    3. '[i' → logprob: -3.19388484954834
    4. ' [' → logprob: -4.06888484954834
    5. ' la' → logprob: -4.19388484954834
    6. ' i' → logprob: -4.94388484954834
    7. '[' → logprob: -5.31888484954834
    8. 'i' → logprob: -6.56888484954834
    9. ' l' → logprob: -7.06888484954834
    10. ' ' → logprob: -7.19388484954834

Token 855: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0890280157327652
    2. ' i' → logprob: -2.4640281200408936
    3. '(i' → logprob: -9.964028358459473
    4. ' (' → logprob: -10.964028358459473
    5. '[i' → logprob: -12.214028358459473
    6. ' ' → logprob: -12.464028358459473
    7. '	i' → logprob: -12.589028358459473
    8. '   ' → logprob: -13.089028358459473
    9. '{i' → logprob: -13.214028358459473
    10. ',' → logprob: -13.464028358459473

Token 856: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34844884276390076
    2. ' +' → logprob: -1.2234488725662231
    3. ']+' → logprob: -14.098448753356934
    4. '+i' → logprob: -14.348448753356934
    5. '+j' → logprob: -14.598448753356934
    6. '1' → logprob: -14.723448753356934
    7. ',' → logprob: -14.973448753356934
    8. ' ' → logprob: -15.473448753356934
    9. ' plus' → logprob: -15.473448753356934
    10. '+
' → logprob: -15.598448753356934

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001035787514410913
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -13.751035690307617
    4. ' ' → logprob: -14.626035690307617
    5. '  ' → logprob: -15.001035690307617
    6. '```' → logprob: -15.251035690307617
    7. '
' → logprob: -16.063535690307617
    8. ',' → logprob: -16.376035690307617
    9. '<|end|>' → logprob: -16.438535690307617
    10. '0' → logprob: -16.501035690307617

Token 858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01295267604291439
    2. ' ,' → logprob: -4.38795280456543
    3. ',i' → logprob: -8.38795280456543
    4. ',j' → logprob: -8.51295280456543
    5. ',
' → logprob: -11.88795280456543
    6. ' ' → logprob: -13.01295280456543
    7. '   ' → logprob: -13.63795280456543
    8. '...' → logprob: -14.13795280456543
    9. '```' → logprob: -14.51295280456543
    10. ' j' → logprob: -14.51295280456543

Token 859: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4784322679042816
    2. 'i' → logprob: -0.978432297706604
    3. ' (' → logprob: -5.9784321784973145
    4. 'min' → logprob: -7.3534321784973145
    5. ' min' → logprob: -7.4784321784973145
    6. '(i' → logprob: -8.103432655334473
    7. ' ' → logprob: -8.853432655334473
    8. '   ' → logprob: -10.728432655334473
    9. ' ' → logprob: -10.728432655334473
    10. 'j' → logprob: -11.228432655334473

Token 860: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20148944854736328
    2. ' +' → logprob: -1.7014894485473633
    3. '1' → logprob: -10.326489448547363
    4. '+j' → logprob: -11.576489448547363
    5. ' +
' → logprob: -12.076489448547363
    6. '+d' → logprob: -12.326489448547363
    7. '+i' → logprob: -12.326489448547363
    8. '+
' → logprob: -12.451489448547363
    9. '+n' → logprob: -13.326489448547363
    10. ']+' → logprob: -13.576489448547363

Token 861: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2207309454679489
    2. ' d' → logprob: -2.095731019973755
    3. '(d' → logprob: -2.845731019973755
    4. ' (' → logprob: -4.095730781555176
    5. '(' → logprob: -8.345730781555176
    6. ' ' → logprob: -10.345730781555176
    7. '1' → logprob: -11.470730781555176
    8. '[d' → logprob: -11.845730781555176
    9. '{' → logprob: -11.908230781555176
    10. 'min' → logprob: -11.970730781555176

Token 862: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.580929347255733e-05
    2. '[j' → logprob: -11.750016212463379
    3. '[' → logprob: -11.875016212463379
    4. 'i' → logprob: -14.125016212463379
    5. '//' → logprob: -17.125015258789062
    6. '[
' → logprob: -17.250015258789062
    7. '   ' → logprob: -17.375015258789062
    8. ']' → logprob: -18.000015258789062
    9. '```' → logprob: -18.125015258789062
    10. '_i' → logprob: -18.625015258789062

Token 863: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002470350591465831
    2. '//' → logprob: -8.50024700164795
    3. '']//' → logprob: -10.75024700164795
    4. ')//' → logprob: -11.50024700164795
    5. '   ' → logprob: -12.75024700164795
    6. '']' → logprob: -12.75024700164795
    7. ' ]' → logprob: -13.12524700164795
    8. ' //' → logprob: -13.62524700164795
    9. ')' → logprob: -14.87524700164795
    10. '[i' → logprob: -15.12524700164795

Token 864: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0004972710739821196
    2. ' //' → logprob: -8.125496864318848
    3. ']' → logprob: -8.875496864318848
    4. '#' → logprob: -10.750496864318848
    5. ')//' → logprob: -11.000496864318848
    6. '```' → logprob: -11.125496864318848
    7. '[' → logprob: -13.250496864318848
    8. '']//' → logprob: -13.375496864318848
    9. '   ' → logprob: -13.625496864318848
    10. ')' → logprob: -14.000496864318848

Token 865: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -16.875085830688477
    4. '۱۰' → logprob: -17.125085830688477
    5. '   ' → logprob: -17.500085830688477
    6. '{' → logprob: -18.250085830688477
    7. '(' → logprob: -18.625085830688477
    8. '  ' → logprob: -18.875085830688477
    9. ' ' → logprob: -19.125085830688477
    10. '' → logprob: -19.375085830688477

Token 866: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.87500762939453
    4. '۱۰' → logprob: -20.12500762939453
    5. '' → logprob: -21.87500762939453
    6. '   ' → logprob: -22.25000762939453
    7. '<|end|>' → logprob: -22.75000762939453
    8. '  ' → logprob: -22.87500762939453
    9. ' ' → logprob: -23.00000762939453
    10. '１０' → logprob: -23.00000762939453

Token 867: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07941371202468872
    2. ' +' → logprob: -2.579413652420044
    3. ']' → logprob: -7.579413890838623
    4. ']+' → logprob: -12.204413414001465
    5. '+]' → logprob: -12.204413414001465
    6. '   ' → logprob: -13.829413414001465
    7. ' ' → logprob: -15.204413414001465
    8. ' ' → logprob: -15.454413414001465
    9. ' ]' → logprob: -15.454413414001465
    10. ')' → logprob: -15.454413414001465

Token 868: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2790224850177765
    2. '```' → logprob: -2.904022455215454
    3. '[' → logprob: -3.029022455215454
    4. ')' → logprob: -3.529022455215454
    5. '   ' → logprob: -3.654022455215454
    6. 'def' → logprob: -4.154022693634033
    7. ',' → logprob: -4.279022693634033
    8. '[i' → logprob: -4.654022693634033
    9. '[j' → logprob: -5.029022693634033
    10. ']' → logprob: -5.154022693634033

Token 869: 'en' (ID: 262)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2757563292980194
    2. ' +' → logprob: -2.025756359100342
    3. ']' → logprob: -2.275756359100342
    4. ')' → logprob: -5.400756359100342
    5. ']+' → logprob: -7.400756359100342
    6. ',' → logprob: -7.525756359100342
    7. '   ' → logprob: -9.275755882263184
    8. ' ]' → logprob: -9.525755882263184
    9. '],' → logprob: -9.900755882263184
    10. '])' → logprob: -10.025755882263184

Token 870: ' respect' (ID: 5618)
  Prédit: 'clusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusive' → logprob: -1.2773395776748657
    2. 'plus' → logprob: -1.5273395776748657
    3. 'inclusive' → logprob: -2.027339458465576
    4. 'j' → logprob: -3.152339458465576
    5. '+' → logprob: -3.277339458465576
    6. 'included' → logprob: -3.527339458465576
    7. 'range' → logprob: -3.527339458465576
    8. 'clus' → logprob: -4.152339458465576
    9. ' inclus' → logprob: -4.277339458465576
    10. '```' → logprob: -4.527339458465576

Token 871: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3901243507862091
    2. 'e' → logprob: -1.2651243209838867
    3. 'ent' → logprob: -4.890124320983887
    4. '#' → logprob: -5.015124320983887
    5. 'de' → logprob: -6.015124320983887
    6. 'é' → logprob: -6.015124320983887
    7. '=' → logprob: -6.265124320983887
    8. ']' → logprob: -6.390124320983887
    9. ' des' → logprob: -6.390124320983887
    10. '```' → logprob: -6.390124320983887

Token 872: ' j' (ID: 441)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7702643871307373
    2. 'len' → logprob: -1.0202643871307373
    3. ' len' → logprob: -2.2702643871307373
    4. ' j' → logprob: -4.020264625549316
    5. 'la' → logprob: -4.270264625549316
    6. 'min' → logprob: -4.770264625549316
    7. ' N' → logprob: -5.145264625549316
    8. ' les' → logprob: -5.145264625549316
    9. ' min' → logprob: -5.270264625549316
    10. 'N' → logprob: -5.895264625549316

Token 873: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08057490736246109
    2. ' +' → logprob: -3.3305749893188477
    3. ' <=' → logprob: -3.8305749893188477
    4. ' <' → logprob: -4.830574989318848
    5. '<=' → logprob: -5.330574989318848
    6. 'max' → logprob: -6.455574989318848
    7. ' ≤' → logprob: -6.580574989318848
    8. ']' → logprob: -6.580574989318848
    9. ')' → logprob: -7.580574989318848
    10. '≤' → logprob: -7.955574989318848

Token 874: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010429323883727193
    2. ' N' → logprob: -6.87604284286499
    3. 'n' → logprob: -11.751043319702148
    4. '   ' → logprob: -13.501043319702148
    5. 'len' → logprob: -15.501043319702148
    6. '```' → logprob: -15.751043319702148
    7. ' ' → logprob: -16.25104331970215
    8. ' ' → logprob: -16.50104331970215
    9. '	N' → logprob: -16.75104331970215
    10. '_N' → logprob: -17.37604331970215

Token 875: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38054159283638
    2. ']' → logprob: -1.2555415630340576
    3. '+' → logprob: -3.7555415630340576
    4. ')]' → logprob: -5.755541801452637
    5. '])' → logprob: -6.505541801452637
    6. '   ' → logprob: -6.630541801452637
    7. ' +' → logprob: -7.380541801452637
    8. ' )' → logprob: -8.005541801452637
    9. ',' → logprob: -8.130541801452637
    10. '),' → logprob: -8.505541801452637

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03960135951638222
    2. ')' → logprob: -4.0396013259887695
    3. '[' → logprob: -5.9146013259887695
    4. '<|end|>' → logprob: -6.1646013259887695
    5. '[i' → logprob: -6.2896013259887695
    6. ',' → logprob: -6.4146013259887695
    7. 'def' → logprob: -6.5396013259887695
    8. '[j' → logprob: -6.5396013259887695
    9. '```' → logprob: -6.6646013259887695
    10. '...' → logprob: -6.7896013259887695

Token 877: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1163293793797493
    2. '#' (adapté à ' #') → logprob: -3.2413294315338135
    3. ')' → logprob: -3.2413294315338135
    4. ',' → logprob: -5.241329193115234
    5. '```' → logprob: -5.491329193115234
    6. '<|end|>' → logprob: -5.616329193115234
    7. ' ' → logprob: -5.866329193115234
    8. '.' → logprob: -6.241329193115234
    9. 'def' → logprob: -6.491329193115234
    10. '...' → logprob: -6.741329193115234

Token 878: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3829290270805359
    2. '#' → logprob: -1.8829290866851807
    3. ' j' → logprob: -3.2579290866851807
    4. ')' → logprob: -3.8829290866851807
    5. ',' → logprob: -4.132928848266602
    6. ' #' → logprob: -4.132928848266602
    7. ' ' → logprob: -4.257928848266602
    8. ' ' → logprob: -4.757928848266602
    9. '+' → logprob: -5.132928848266602
    10. '[' → logprob: -5.507928848266602

Token 879: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1588232517242432
    2. ' for' → logprob: -2.033823251724243
    3. '   ' → logprob: -2.033823251724243
    4. 'for' → logprob: -2.033823251724243
    5. ' #' → logprob: -2.658823251724243
    6. ' on' → logprob: -3.158823251724243
    7. ',' → logprob: -3.408823251724243
    8. ' pour' → logprob: -3.408823251724243
    9. ' il' → logprob: -4.283823013305664
    10. ' vérifier' → logprob: -4.408823013305664

Token 880: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9758645296096802
    2. ' il' → logprob: -1.4758645296096802
    3. ' for' → logprob: -2.3508644104003906
    4. 'for' → logprob: -2.4758644104003906
    5. 'on' → logprob: -2.8508644104003906
    6. ' pour' → logprob: -3.4758644104003906
    7. '#' → logprob: -3.4758644104003906
    8. ' j' → logprob: -3.9758644104003906
    9. 'j' → logprob: -4.350864410400391
    10. ' vérifier' → logprob: -4.600864410400391

Token 881: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.3848367929458618
    2. 'v' → logprob: -2.0098366737365723
    3. ' doit' → logprob: -2.5098366737365723
    4. 'dev' → logprob: -3.7598366737365723
    5. ' vér' → logprob: -3.7598366737365723
    6. 'pe' → logprob: -4.509836673736572
    7. ' do' → logprob: -5.009836673736572
    8. '#' → logprob: -5.009836673736572
    9. ' devra' → logprob: -5.759836673736572
    10. ' ' → logprob: -5.884836673736572

Token 882: ' s' (ID: 265)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.3034428656101227
    2. 'v' → logprob: -1.4284428358078003
    3. ' filtr' → logprob: -4.30344295501709
    4. ' v' → logprob: -6.55344295501709
    5. ' ' → logprob: -6.67844295501709
    6. 'fil' → logprob: -7.17844295501709
    7. 'filter' → logprob: -7.55344295501709
    8. 'ver' → logprob: -7.80344295501709
    9. ' ' → logprob: -7.80344295501709
    10. ' s' → logprob: -7.92844295501709

Token 883: ''assurer' (ID: 193756)
  Prédit: ''assurer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''assurer' → logprob: -0.009207349270582199
    2. '’assurer' → logprob: -5.509207248687744
    3. 'e' → logprob: -6.634207248687744
    4. 'é' → logprob: -6.634207248687744
    5. 'atisf' → logprob: -7.009207248687744
    6. ''ass' → logprob: -7.134207248687744
    7. 'u' → logprob: -8.259207725524902
    8. 'v' → logprob: -8.384207725524902
    9. 'ur' → logprob: -9.384207725524902
    10. 'ass' → logprob: -9.884207725524902

Token 884: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.022539997473359108
    2. 'que' → logprob: -3.8975400924682617
    3. ' that' → logprob: -6.647540092468262
    4. 'that' → logprob: -8.647540092468262
    5. '<|end|>' → logprob: -9.397540092468262
    6. ' qu' → logprob: -9.397540092468262
    7. ' ' → logprob: -9.897540092468262
    8. ' ' → logprob: -9.897540092468262
    9. ' j' → logprob: -10.022540092468262
    10. ')' → logprob: -10.397540092468262

Token 885: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08121590316295624
    2. 'd' → logprob: -2.5812158584594727
    3. '10' → logprob: -6.831215858459473
    4. ' ' → logprob: -6.956215858459473
    5. ' min' → logprob: -9.331215858459473
    6. ' ' → logprob: -9.956215858459473
    7. 'min' → logprob: -10.456215858459473
    8. ' j' → logprob: -10.706215858459473
    9. '   ' → logprob: -10.706215858459473
    10. '  ' → logprob: -10.831215858459473

Token 886: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.625011444091797
    3. ' [' → logprob: -13.625011444091797
    4. 'j' → logprob: -14.250011444091797
    5. '_j' → logprob: -15.000011444091797
    6. '[i' → logprob: -16.625011444091797
    7. '	j' → logprob: -16.750011444091797
    8. ' j' → logprob: -17.000011444091797
    9. '```' → logprob: -17.375011444091797
    10. ' ' → logprob: -18.750011444091797

Token 887: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08259192109107971
    2. ']>=' → logprob: -3.082592010498047
    3. '[j' → logprob: -3.457592010498047
    4. '[' → logprob: -7.082592010498047
    5. ' ]' → logprob: -7.332592010498047
    6. '>=' → logprob: -9.207592010498047
    7. ' >=' → logprob: -9.207592010498047
    8. ']>' → logprob: -9.582592010498047
    9. '   ' → logprob: -9.707592010498047
    10. '[i' → logprob: -10.832592010498047

Token 888: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11255892366170883
    2. '>=' → logprob: -2.6125588417053223
    3. '[j' → logprob: -3.6125588417053223
    4. '[' → logprob: -5.862558841705322
    5. ']>=' → logprob: -6.612558841705322
    6. ')>=' → logprob: -7.362558841705322
    7. ' ' → logprob: -7.987558841705322
    8. '   ' → logprob: -8.23755931854248
    9. '```' → logprob: -8.86255931854248
    10. ']' → logprob: -9.48755931854248

Token 889: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005965176969766617
    2. ' ' → logprob: -5.130965232849121
    3. ' (' → logprob: -11.130965232849121
    4. '   ' → logprob: -11.630965232849121
    5. '(' → logprob: -11.755965232849121
    6. '(j' → logprob: -13.255965232849121
    7. '```' → logprob: -14.255965232849121
    8. '  ' → logprob: -14.255965232849121
    9. ' ' → logprob: -14.630965232849121
    10. '    ' → logprob: -14.880965232849121

Token 890: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010676169040380046
    2. ' ' → logprob: -9.625106811523438
    3. '(' → logprob: -10.875106811523438
    4. '(j' → logprob: -11.125106811523438
    5. ' (' → logprob: -13.125106811523438
    6. 'j' → logprob: -13.375106811523438
    7. '   ' → logprob: -13.500106811523438
    8. '```' → logprob: -14.125106811523438
    9. '100' → logprob: -14.750106811523438
    10. '  ' → logprob: -15.875106811523438

Token 891: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5920624732971191
    2. '*(' → logprob: -1.0920624732971191
    3. ' *' → logprob: -2.342062473297119
    4. '   ' → logprob: -5.092062473297119
    5. '(j' → logprob: -5.967062473297119
    6. ')' → logprob: -6.217062473297119
    7. ' (' → logprob: -6.842062473297119
    8. '[j' → logprob: -7.092062473297119
    9. '*j' → logprob: -7.092062473297119
    10. '(' → logprob: -8.092061996459961

Token 892: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.003680240362882614
    2. ' (' → logprob: -5.628680229187012
    3. 'j' → logprob: -9.503680229187012
    4. '(' → logprob: -12.878680229187012
    5. '(abs' → logprob: -14.128680229187012
    6. '[j' → logprob: -14.378680229187012
    7. ' j' → logprob: -14.378680229187012
    8. '   ' → logprob: -14.628680229187012
    9. ' ' → logprob: -15.753680229187012
    10. ')' → logprob: -15.878680229187012

Token 893: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.021014656871557236
    2. '-' → logprob: -3.89601469039917
    3. '-i' → logprob: -8.146014213562012
    4. '-j' → logprob: -8.646014213562012
    5. ')' → logprob: -12.896014213562012
    6. ' ' → logprob: -13.396014213562012
    7. '   ' → logprob: -14.521014213562012
    8. '[' → logprob: -15.021014213562012
    9. '[i' → logprob: -15.146014213562012
    10. ' ' → logprob: -15.146014213562012

Token 894: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04313758388161659
    2. ' i' → logprob: -3.168137550354004
    3. 'j' → logprob: -9.543137550354004
    4. '	i' → logprob: -11.043137550354004
    5. ' ' → logprob: -11.168137550354004
    6. '   ' → logprob: -11.293137550354004
    7. ' j' → logprob: -11.418137550354004
    8. ' ' → logprob: -12.418137550354004
    9. '  ' → logprob: -12.918137550354004
    10. ')' → logprob: -13.293137550354004

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006011271849274635
    2. ']' → logprob: -5.756011486053467
    3. '])' → logprob: -7.006011486053467
    4. ' )' → logprob: -7.506011486053467
    5. '   ' → logprob: -7.756011486053467
    6. ')]' → logprob: -8.006011009216309
    7. '+' → logprob: -8.881011009216309
    8. ')])' → logprob: -9.131011009216309
    9. ')`' → logprob: -10.131011009216309
    10. '[' → logprob: -10.131011009216309

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2359417974948883
    2. '\n' → logprob: -2.7359418869018555
    3. '\' → logprob: -3.1109418869018555
    4. ')' → logprob: -4.4859418869018555
    5. '[' → logprob: -4.6109418869018555
    6. '    
' → logprob: -4.6109418869018555
    7. '.' → logprob: -4.7359418869018555
    8. '[j' → logprob: -4.7359418869018555
    9. '<|end|>' → logprob: -4.9859418869018555
    10. ''' → logprob: -5.1109418869018555

Token 897: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04929003491997719
    2. '    
' → logprob: -3.9242899417877197
    3. '.' → logprob: -4.674290180206299
    4. '  
' → logprob: -4.924290180206299
    5. '\' → logprob: -5.549290180206299
    6. '\n' → logprob: -6.174290180206299
    7. ' ' → logprob: -7.174290180206299
    8. ' 
' → logprob: -7.174290180206299
    9. ')' → logprob: -7.299290180206299
    10. '   
' → logprob: -7.424290180206299

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056249042972922325
    2. '    
' → logprob: -5.380624771118164
    3. 'def' → logprob: -7.880624771118164
    4. '#' → logprob: -9.130624771118164
    5. '
' → logprob: -9.255624771118164
    6. '<|end|>' → logprob: -9.380624771118164
    7. '    ' → logprob: -10.005624771118164
    8. '  
' → logprob: -10.005624771118164
    9. '       ' → logprob: -10.130624771118164
    10. ')' → logprob: -10.505624771118164

Token 899: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03359268605709076
    2. '    
' → logprob: -3.533592700958252
    3. '
' → logprob: -6.658592700958252
    4. '  
' → logprob: -7.408592700958252
    5. '#' (adapté à ' #') → logprob: -7.783592700958252
    6. 'def' → logprob: -7.908592700958252
    7. ' 
' → logprob: -8.408592224121094
    8. '\' → logprob: -9.283592224121094
    9. '    ' → logprob: -9.283592224121094
    10. '     
' → logprob: -9.283592224121094

Token 900: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5230055451393127
    2. 'def' → logprob: -1.148005485534668
    3. '#' → logprob: -2.773005485534668
    4. '    
' → logprob: -4.398005485534668
    5. '
' → logprob: -5.148005485534668
    6. '```' → logprob: -6.148005485534668
    7. 'from' → logprob: -6.523005485534668
    8. 'import' → logprob: -7.273005485534668
    9. ' def' → logprob: -7.398005485534668
    10. '  
' → logprob: -7.398005485534668

Token 901: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7143082618713379
    2. ' peut' → logprob: -1.464308261871338
    3. ' peux' → logprob: -1.589308261871338
    4. '#' → logprob: -4.464308261871338
    5. ' can' → logprob: -4.589308261871338
    6. ' est' → logprob: -4.714308261871338
    7. '_' → logprob: -5.089308261871338
    8. 'do' → logprob: -5.464308261871338
    9. 'va' → logprob: -5.714308261871338
    10. ' pe' → logprob: -5.839308261871338

Token 902: ' donc' (ID: 14206)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.5249911546707153
    2. ' continuer' → logprob: -1.2749911546707153
    3. 'util' → logprob: -2.899991035461426
    4. 'contin' → logprob: -3.899991035461426
    5. ' poursuivre' → logprob: -4.649991035461426
    6. ' compléter' → logprob: -5.274991035461426
    7. ' explo' → logprob: -6.024991035461426
    8. ' vérifier' → logprob: -6.024991035461426
    9. 'impl' → logprob: -6.024991035461426
    10. ' effectuer' → logprob: -6.274991035461426

Token 903: ',' (ID: 11)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.40697556734085083
    2. 'tr' → logprob: -2.281975507736206
    3. 'util' → logprob: -3.281975507736206
    4. 'contin' → logprob: -3.531975507736206
    5. ' filtr' → logprob: -3.531975507736206
    6. ' continuer' → logprob: -3.656975507736206
    7. ' prec' → logprob: -3.781975507736206
    8. ' utiliser' → logprob: -3.906975507736206
    9. 'pr' → logprob: -4.656975746154785
    10. ' pré' → logprob: -5.031975746154785

Token 904: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.726939857006073
    2. ' continuer' → logprob: -2.1019399166107178
    3. ' utiliser' → logprob: -2.2269399166107178
    4. 'for' → logprob: -2.4769399166107178
    5. ' pour' → logprob: -2.9769399166107178
    6. ' construire' → logprob: -3.7269399166107178
    7. 'contin' → logprob: -3.9769399166107178
    8. ' créer' → logprob: -3.9769399166107178
    9. ' parcour' → logprob: -4.726939678192139
    10. ' par' → logprob: -4.976939678192139

Token 905: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05781043320894241
    2. 'cha' → logprob: -3.8078105449676514
    3. ' continuer' → logprob: -4.557810306549072
    4. ' each' → logprob: -5.557810306549072
    5. 'i' → logprob: -6.182810306549072
    6. 'ch' → logprob: -6.307810306549072
    7. ' i' → logprob: -6.307810306549072
    8. 'each' → logprob: -6.432810306549072
    9. 'contin' → logprob: -6.807810306549072
    10. ' cha' → logprob: -7.057810306549072

Token 906: ' sens' (ID: 5050)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7468229532241821
    2. 'i' → logprob: -0.8718229532241821
    3. ' next' → logprob: -3.3718228340148926
    4. '_' → logprob: -3.6218228340148926
    5. ' prochain' → logprob: -4.246822834014893
    6. ' _' → logprob: -4.496822834014893
    7. ' j' → logprob: -5.496822834014893
    8. 'j' → logprob: -5.496822834014893
    9. 'next' → logprob: -6.496822834014893
    10. ' ' → logprob: -7.121822834014893

Token 907: ' aller' (ID: 18383)
  Prédit: ' aller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aller' → logprob: -0.10301690548658371
    2. 'aller' → logprob: -2.8530168533325195
    3. ' ' → logprob: -4.3530168533325195
    4. '_' → logprob: -4.8530168533325195
    5. ' suivant' → logprob: -5.3530168533325195
    6. ' retour' → logprob: -5.6030168533325195
    7. ' de' → logprob: -6.7280168533325195
    8. ' ' → logprob: -6.7280168533325195
    9. ' all' → logprob: -6.8530168533325195
    10. ' inverse' → logprob: -6.9780168533325195

Token 908: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014650908298790455
    2. ':' → logprob: -5.389650821685791
    3. ' continuer' → logprob: -5.514650821685791
    4. ' ,' → logprob: -6.014650821685791
    5. '   ' → logprob: -6.514650821685791
    6. ' ' → logprob: -7.389650821685791
    7. ',
' → logprob: -7.639650821685791
    8. '[' → logprob: -8.63965129852295
    9. ' construire' → logprob: -9.51465129852295
    10. ' créer' → logprob: -9.63965129852295

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012476218864321709
    2. ' construire' → logprob: -5.137476444244385
    3. ' continuer' → logprob: -6.387476444244385
    4. '#' → logprob: -6.762476444244385
    5. '    ' → logprob: -7.137476444244385
    6. '    
' → logprob: -7.637476444244385
    7. ' créer' → logprob: -8.137475967407227
    8. ' utiliser' → logprob: -8.262475967407227
    9. ' effectuer' → logprob: -8.387475967407227
    10. ',' → logprob: -8.512475967407227

Token 910: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026047831401228905
    2. '#' (adapté à ' #') → logprob: -3.776047945022583
    3. 'def' → logprob: -7.651047706604004
    4. ' #' → logprob: -7.776047706604004
    5. '#
' → logprob: -8.026047706604004
    6. '    
' → logprob: -8.026047706604004
    7. '    ' → logprob: -8.401047706604004
    8. ' construire' → logprob: -8.776047706604004
    9. 'for' → logprob: -8.901047706604004
    10. ' continuer' → logprob: -9.401047706604004

Token 911: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9603872895240784
    2. '   ' → logprob: -1.3353872299194336
    3. ' construire' → logprob: -2.5853872299194336
    4. ' #' → logprob: -3.2103872299194336
    5. 'tr' → logprob: -3.3353872299194336
    6. ' utiliser' → logprob: -3.7103872299194336
    7. ' parcour' → logprob: -3.8353872299194336
    8. 'from' → logprob: -3.8353872299194336
    9. ' créer' → logprob: -4.210387229919434
    10. ' continuer' → logprob: -4.335387229919434

Token 912: ' pour' (ID: 1930)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.445218563079834
    2. 'tr' → logprob: -3.070218563079834
    3. 'maint' → logprob: -3.070218563079834
    4. 'Pré' → logprob: -3.570218563079834
    5. ' parcour' → logprob: -3.695218563079834
    6. ' construire' → logprob: -3.820218563079834
    7. 'pr' → logprob: -3.820218563079834
    8. ' pré' → logprob: -3.945218563079834
    9. ' créer' → logprob: -4.195218563079834
    10. 'Créer' → logprob: -4.695218563079834

Token 913: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.48619189858436584
    2. ' i' → logprob: -1.2361918687820435
    3. ' chaque' → logprob: -3.361191987991333
    4. 'j' → logprob: -3.361191987991333
    5. 'i' → logprob: -3.736191987991333
    6. ' each' → logprob: -7.111191749572754
    7. ' ' → logprob: -8.486191749572754
    8. 'each' → logprob: -8.736191749572754
    9. ' idx' → logprob: -10.986191749572754
    10. ' ' → logprob: -11.111191749572754

Token 914: ' trampoline' (ID: 162506)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5021013617515564
    2. 'i' → logprob: -1.1271014213562012
    3. ' j' → logprob: -3.002101421356201
    4. 'j' → logprob: -4.127101421356201
    5. ' trampoline' → logprob: -5.877101421356201
    6. ' ' → logprob: -7.627101421356201
    7. 'tr' → logprob: -7.877101421356201
    8. ' tramp' → logprob: -8.252100944519043
    9. 'indice' → logprob: -8.627100944519043
    10. ' ' → logprob: -8.752100944519043

Token 915: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026890458539128304
    2. 'i' → logprob: -3.651890516281128
    3. ',' → logprob: -8.401890754699707
    4. ' ,' → logprob: -8.526890754699707
    5. ' ' → logprob: -9.026890754699707
    6. ' ' → logprob: -11.276890754699707
    7. ' j' → logprob: -11.401890754699707
    8. ' `' → logprob: -12.026890754699707
    9. '_i' → logprob: -12.151890754699707
    10. '[i' → logprob: -12.776890754699707

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07150928676128387
    2. '   ' → logprob: -3.69650936126709
    3. ' ,' → logprob: -3.69650936126709
    4. ':' → logprob: -4.07150936126709
    5. ',
' → logprob: -7.19650936126709
    6. ':
' → logprob: -7.57150936126709
    7. ' ' → logprob: -8.69650936126709
    8. ',i' → logprob: -8.82150936126709
    9. ' continuer' → logprob: -9.57150936126709
    10. ' i' → logprob: -9.69650936126709

Token 917: ' on' (ID: 402)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.4660983085632324
    2. ' parcour' → logprob: -1.7160983085632324
    3. ' trouver' → logprob: -2.2160983085632324
    4. ' calcul' → logprob: -2.3410983085632324
    5. ' déterminer' → logprob: -2.5910983085632324
    6. ' chercher' → logprob: -2.8410983085632324
    7. ' identifier' → logprob: -3.3410983085632324
    8. ' rechercher' → logprob: -3.4660983085632324
    9. ' mar' → logprob: -4.341098308563232
    10. ' considérer' → logprob: -4.341098308563232

Token 918: ' connaît' (ID: 124118)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.630733847618103
    2. 'pe' → logprob: -1.505733847618103
    3. ' peux' → logprob: -2.5057339668273926
    4. ' veut' → logprob: -3.6307339668273926
    5. 'aj' → logprob: -4.380733966827393
    6. ' crée' → logprob: -4.505733966827393
    7. ' pourra' → logprob: -4.630733966827393
    8. 'cherche' → logprob: -4.630733966827393
    9. ' va' → logprob: -5.255733966827393
    10. 's' → logprob: -5.255733966827393

Token 919: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9733254313468933
    2. ' ' → logprob: -1.598325490951538
    3. ' les' → logprob: -2.473325490951538
    4. 'le' → logprob: -3.098325490951538
    5. ' le' → logprob: -3.098325490951538
    6. '_' → logprob: -3.348325490951538
    7. '  ' → logprob: -3.598325490951538
    8. ' ' → logprob: -3.598325490951538
    9. ' la' → logprob: -3.723325490951538
    10. 'les' → logprob: -3.973325490951538

Token 920: ''' (ID: 6)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.7797152996063232
    2. ' plus' → logprob: -1.7797152996063232
    3. 'max' → logprob: -2.4047152996063232
    4. ' maximum' → logprob: -2.4047152996063232
    5. ' max' → logprob: -2.5297152996063232
    6. ' possible' → logprob: -3.4047152996063232
    7. ' maximal' → logprob: -3.4047152996063232
    8. 'right' → logprob: -3.5297152996063232
    9. 'plus' → logprob: -3.5297152996063232
    10. ' range' → logprob: -3.7797152996063232

Token 921: 'interval' (ID: 37558)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.6329786777496338
    2. 'max' → logprob: -1.8829786777496338
    3. ' reachable' → logprob: -1.8829786777496338
    4. ' interval' → logprob: -2.507978677749634
    5. 'reachable' → logprob: -3.007978677749634
    6. ' next' → logprob: -3.007978677749634
    7. 'interval' → logprob: -3.132978677749634
    8. ' maximum' → logprob: -3.132978677749634
    9. 'possible' → logprob: -3.632978677749634
    10. ' possible' → logprob: -3.632978677749634

Token 922: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04606658220291138
    2. 'le' → logprob: -3.4210665225982666
    3. ' e' → logprob: -4.546066761016846
    4. '   ' → logprob: -7.921066761016846
    5. ' ' → logprob: -8.171066284179688
    6. '[' → logprob: -8.421066284179688
    7. '       ' → logprob: -9.046066284179688
    8. '_' → logprob: -9.046066284179688
    9. ',' → logprob: -9.296066284179688
    10. ':' → logprob: -9.671066284179688

Token 923: ' des' (ID: 731)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3755195140838623
    2. '[' → logprob: -1.5005195140838623
    3. ' [' → logprob: -1.5005195140838623
    4. ' de' → logprob: -1.6255195140838623
    5. ' ' → logprob: -3.2505195140838623
    6. '   ' → logprob: -4.125519752502441
    7. ' i' → logprob: -4.500519752502441
    8. 'de' → logprob: -5.000519752502441
    9. '[j' → logprob: -5.125519752502441
    10. ' j' → logprob: -5.125519752502441

Token 924: ' indices' (ID: 30378)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7282792329788208
    2. 'indices' → logprob: -1.8532792329788208
    3. ' indices' → logprob: -1.8532792329788208
    4. 's' → logprob: -2.7282791137695312
    5. ' j' → logprob: -3.2282791137695312
    6. ' sa' → logprob: -3.2282791137695312
    7. 'reachable' → logprob: -4.603279113769531
    8. ' saut' → logprob: -4.728279113769531
    9. ' reachable' → logprob: -5.353279113769531
    10. 'tr' → logprob: -5.603279113769531

Token 925: ' possibles' (ID: 97753)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.4692742824554443
    2. '[i' → logprob: -1.4692742824554443
    3. ' suivant' → logprob: -2.2192742824554443
    4. ' i' → logprob: -2.5942742824554443
    5. ' suivante' → logprob: -2.5942742824554443
    6. ' suivants' → logprob: -2.5942742824554443
    7. ' [' → logprob: -2.7192742824554443
    8. '[j' → logprob: -2.8442742824554443
    9. '[' → logprob: -3.0942742824554443
    10. ' de' → logprob: -5.219274520874023

Token 926: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.08053719997406
    2. '[i' → logprob: -1.70553719997406
    3. ' [' → logprob: -1.95553719997406
    4. ' j' → logprob: -1.95553719997406
    5. '   ' → logprob: -3.3305373191833496
    6. '[j' → logprob: -3.3305373191833496
    7. ' i' → logprob: -3.5805373191833496
    8. ' de' → logprob: -3.8305373191833496
    9. ',' → logprob: -4.33053731918335
    10. ' suivants' → logprob: -4.58053731918335

Token 927: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.030273720622062683
    2. 'sa' → logprob: -4.530273914337158
    3. 's' → logprob: -4.905273914337158
    4. 'aller' → logprob: -5.530273914337158
    5. 'expl' → logprob: -5.780273914337158
    6. 'dro' → logprob: -7.030273914337158
    7. 'at' → logprob: -7.155273914337158
    8. 'j' → logprob: -7.655273914337158
    9. 'su' → logprob: -8.2802734375
    10. ' atteindre' → logprob: -8.4052734375

Token 928: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2945340871810913
    2. '[i' → logprob: -1.6695340871810913
    3. '[' → logprob: -3.544534206390381
    4. ',' → logprob: -4.669534206390381
    5. ' i' → logprob: -5.169534206390381
    6. ' ' → logprob: -5.794534206390381
    7. '[
' → logprob: -6.294534206390381
    8. '[j' → logprob: -6.419534206390381
    9. '_' → logprob: -6.794534206390381
    10. 'i' → logprob: -6.794534206390381

Token 929: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3388546407222748
    2. 'i' → logprob: -1.8388546705245972
    3. ' j' → logprob: -2.5888545513153076
    4. ' i' → logprob: -3.2138545513153076
    5. 'aller' → logprob: -5.338854789733887
    6. ' sa' → logprob: -6.588854789733887
    7. 's' → logprob: -6.838854789733887
    8. 'la' → logprob: -7.088854789733887
    9. 'sa' → logprob: -7.213854789733887
    10. 'l' → logprob: -7.338854789733887

Token 930: ' :
' (ID: 10039)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8678604364395142
    2. '   ' → logprob: -0.9928604364395142
    3. ':' → logprob: -2.4928603172302246
    4. '[' → logprob: -2.9928603172302246
    5. ',' → logprob: -3.9928603172302246
    6. '+' → logprob: -4.492860317230225
    7. '[j' → logprob: -4.617860317230225
    8. '```' → logprob: -4.992860317230225
    9. ' =' → logprob: -5.367860317230225
    10. ' +' → logprob: -6.117860317230225

Token 931: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0145232677459717
    2. ' i' → logprob: -1.1395232677459717
    3. '   ' → logprob: -2.0145232677459717
    4. 'i' → logprob: -2.5145232677459717
    5. ' [' → logprob: -2.8895232677459717
    6. ' ' → logprob: -3.7645232677459717
    7. '[' → logprob: -4.639523506164551
    8. ' (' → logprob: -5.014523506164551
    9. '(i' → logprob: -5.889523506164551
    10. ' range' → logprob: -6.639523506164551

Token 932: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8183620572090149
    2. '[i' → logprob: -1.3183619976043701
    3. '   ' → logprob: -1.5683619976043701
    4. ' [' → logprob: -3.31836199760437
    5. '[
' → logprob: -4.318362236022949
    6. ' ' → logprob: -5.068362236022949
    7. '+' → logprob: -5.443362236022949
    8. ' i' → logprob: -5.693362236022949
    9. 'i' → logprob: -6.068362236022949
    10. '[j' → logprob: -6.318362236022949

Token 933: '  ' (ID: 256)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9109784364700317
    2. '[' → logprob: -1.4109784364700317
    3. '   ' → logprob: -1.9109784364700317
    4. ' i' → logprob: -2.785978317260742
    5. 'i' → logprob: -3.035978317260742
    6. ' [' → logprob: -3.410978317260742
    7. '[
' → logprob: -4.410978317260742
    8. ' =' → logprob: -4.535978317260742
    9. ' ' → logprob: -4.660978317260742
    10. ' (' → logprob: -5.660978317260742

Token 934: ' j' (ID: 441)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.832840085029602
    2. ' (' → logprob: -1.582840085029602
    3. '[' → logprob: -2.4578399658203125
    4. ' i' → logprob: -2.5828399658203125
    5. '(i' → logprob: -2.9578399658203125
    6. 'i' → logprob: -3.0828399658203125
    7. '(' → logprob: -3.7078399658203125
    8. ' [' → logprob: -3.7078399658203125
    9. ' ' → logprob: -4.7078399658203125
    10. '[
' → logprob: -4.8328399658203125

Token 935: ' �' (ID: 35353)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6273370385169983
    2. ' <=' → logprob: -1.0023369789123535
    3. '+' → logprob: -3.7523369789123535
    4. '<=' → logprob: -3.7523369789123535
    5. ' +' → logprob: -5.0023369789123535
    6. 'in' → logprob: -5.1273369789123535
    7. ' >' → logprob: -5.2523369789123535
    8. ' \' → logprob: -5.5023369789123535
    9. ' ≤' → logprob: -5.5023369789123535
    10. '   ' → logprob: -5.6273369789123535

Token 936: '�' (ID: 230)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2360156774520874
    2. '+' → logprob: -2.361015796661377
    3. ' in' → logprob: -3.486015796661377
    4. '≤' → logprob: -3.611015796661377
    5. ' <=' → logprob: -3.736015796661377
    6. '\xe2\x88' → logprob: -4.986015796661377
    7. 'n' → logprob: -5.486015796661377
    8. 'in' → logprob: -5.611015796661377
    9. ' \' → logprob: -5.861015796661377
    10. '\' → logprob: -5.986015796661377

Token 937: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4489454925060272
    2. '[' → logprob: -2.0739455223083496
    3. ' i' → logprob: -2.9489455223083496
    4. 'i' → logprob: -3.0739455223083496
    5. ' [' → logprob: -3.4489455223083496
    6. ']' → logprob: -3.9489455223083496
    7. 'range' → logprob: -3.9489455223083496
    8. ' range' → logprob: -4.19894552230835
    9. ',' → logprob: -4.94894552230835
    10. '(i' → logprob: -5.32394552230835

Token 938: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0789266899228096
    2. ' i' → logprob: -2.5789268016815186
    3. '(i' → logprob: -11.078927040100098
    4. '   ' → logprob: -12.078927040100098
    5. ' (' → logprob: -12.328927040100098
    6. '{i' → logprob: -12.953927040100098
    7. '[i' → logprob: -13.203927040100098
    8. '	i' → logprob: -13.203927040100098
    9. ' ' → logprob: -13.328927040100098
    10. '```' → logprob: -13.828927040100098

Token 939: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029769349843263626
    2. ' +' → logprob: -3.5297694206237793
    3. '+
' → logprob: -11.654768943786621
    4. '+i' → logprob: -12.404768943786621
    5. ',' → logprob: -13.654768943786621
    6. ' +
' → logprob: -14.279768943786621
    7. ']+' → logprob: -14.529768943786621
    8. '[' → logprob: -14.529768943786621
    9. '1' → logprob: -14.904768943786621
    10. ' ' → logprob: -14.904768943786621

Token 940: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -15.75023078918457
    4. '   ' → logprob: -16.12523078918457
    5. '  ' → logprob: -17.37523078918457
    6. '`' → logprob: -17.75023078918457
    7. ' ' → logprob: -18.12523078918457
    8. '2' → logprob: -18.50023078918457
    9. '
' → logprob: -18.81273078918457
    10. ',' → logprob: -18.93773078918457

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.87501335144043
    4. 'import' → logprob: -17.37501335144043
    5. 'from' → logprob: -17.37501335144043
    6. '
' → logprob: -18.00001335144043
    7. ']' → logprob: -18.62501335144043
    8. '   ' → logprob: -19.00001335144043
    9. ',' → logprob: -19.00001335144043
    10. '  ' → logprob: -19.37501335144043

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018536528572440147
    2. ' ,' → logprob: -4.018536567687988
    3. ',
' → logprob: -8.018536567687988
    4. ',i' → logprob: -10.268536567687988
    5. '+' → logprob: -12.018536567687988
    6. ' ,
' → logprob: -12.393536567687988
    7. ',j' → logprob: -12.768536567687988
    8. '   ' → logprob: -12.768536567687988
    9. ' ' → logprob: -13.393536567687988
    10. '```' → logprob: -14.268536567687988

Token 943: ' min' (ID: 1349)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5795178413391113
    2. ' i' → logprob: -0.8295178413391113
    3. ' min' → logprob: -6.079517841339111
    4. 'min' → logprob: -6.829517841339111
    5. ' ' → logprob: -9.204517364501953
    6. ' ' → logprob: -10.329517364501953
    7. '(i' → logprob: -11.329517364501953
    8. '   ' → logprob: -11.454517364501953
    9. ' (' → logprob: -12.017017364501953
    10. '{i' → logprob: -12.392017364501953

Token 944: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6766619086265564
    2. '(i' → logprob: -0.8016619086265564
    3. '(N' → logprob: -3.426661968231201
    4. '(
' → logprob: -4.926661968231201
    5. ' (' → logprob: -6.676661968231201
    6. ',' → logprob: -6.676661968231201
    7. 'N' → logprob: -7.676661968231201
    8. '(I' → logprob: -9.426661491394043
    9. ' (,' → logprob: -9.551661491394043
    10. '(+' → logprob: -10.176661491394043

Token 945: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04062153398990631
    2. '-' → logprob: -3.290621519088745
    3. ')' → logprob: -6.915621757507324
    4. '),' → logprob: -7.790621757507324
    5. ' -' → logprob: -7.790621757507324
    6. ' ,' → logprob: -8.915621757507324
    7. ',i' → logprob: -9.040621757507324
    8. ',
' → logprob: -9.790621757507324
    9. ',j' → logprob: -9.915621757507324
    10. '[' → logprob: -10.040621757507324

Token 946: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003772531636059284
    2. ',' → logprob: -6.128772735595703
    3. ')' → logprob: -7.128772735595703
    4. ' ' → logprob: -7.253772735595703
    5. ' ,' → logprob: -11.128772735595703
    6. '-' → logprob: -11.128772735595703
    7. '),' → logprob: -11.253772735595703
    8. ' -' → logprob: -11.628772735595703
    9. ' ' → logprob: -12.003772735595703
    10. '```' → logprob: -12.253772735595703

Token 947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. ' ' → logprob: -10.250039100646973
    3. '2' → logprob: -13.250039100646973
    4. '```' → logprob: -14.125039100646973
    5. ')' → logprob: -14.875039100646973
    6. '   ' → logprob: -15.375039100646973
    7. '
' → logprob: -15.750039100646973
    8. ',' → logprob: -16.125038146972656
    9. '10' → logprob: -16.875038146972656
    10. ' ' → logprob: -17.187538146972656

Token 948: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6490768790245056
    2. '+' → logprob: -1.5240769386291504
    3. ']' → logprob: -1.7740769386291504
    4. ',' → logprob: -3.2740769386291504
    5. ' +' → logprob: -3.6490769386291504
    6. ')' → logprob: -4.02407693862915
    7. '],' → logprob: -6.52407693862915
    8. ')],' → logprob: -6.77407693862915
    9. '])' → logprob: -7.02407693862915
    10. '-' → logprob: -7.39907693862915

Token 949: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22558359801769257
    2. ' i' → logprob: -1.600583553314209
    3. ' ' → logprob: -9.475584030151367
    4. ' ' → logprob: -10.475584030151367
    5. '   ' → logprob: -11.225584030151367
    6. '	i' → logprob: -11.725584030151367
    7. ')' → logprob: -11.850584030151367
    8. '  ' → logprob: -11.975584030151367
    9. '(i' → logprob: -12.225584030151367
    10. '[i' → logprob: -12.225584030151367

Token 950: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015112892724573612
    2. ' i' → logprob: -6.501511096954346
    3. '(i' → logprob: -13.126511573791504
    4. '   ' → logprob: -13.376511573791504
    5. '```' → logprob: -13.501511573791504
    6. ' ' → logprob: -14.001511573791504
    7. '[i' → logprob: -14.001511573791504
    8. '	i' → logprob: -15.001511573791504
    9. ')i' → logprob: -15.126511573791504
    10. '  ' → logprob: -15.126511573791504

Token 951: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326635479927063
    2. '+' → logprob: -0.7576635479927063
    3. '+d' → logprob: -10.00766372680664
    4. ')' → logprob: -12.38266372680664
    5. '+i' → logprob: -12.50766372680664
    6. ')+' → logprob: -13.13266372680664
    7. ' ' → logprob: -13.25766372680664
    8. ']+' → logprob: -13.88266372680664
    9. '[' → logprob: -14.00766372680664
    10. '   ' → logprob: -14.38266372680664

Token 952: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.476601243019104
    2. 'd' → logprob: -0.976601243019104
    3. '(d' → logprob: -6.6016011238098145
    4. ' (' → logprob: -6.9766011238098145
    5. ' ' → logprob: -9.101601600646973
    6. ' ' → logprob: -9.726601600646973
    7. '(' → logprob: -10.851601600646973
    8. '   ' → logprob: -11.726601600646973
    9. '	d' → logprob: -12.164101600646973
    10. '  ' → logprob: -12.226601600646973

Token 953: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.125016212463379
    3. '[j' → logprob: -14.250016212463379
    4. 'i' → logprob: -15.000016212463379
    5. '[user' → logprob: -15.000016212463379
    6. '[
' → logprob: -15.625016212463379
    7. ' [' → logprob: -15.875016212463379
    8. '[I' → logprob: -18.250017166137695
    9. '[int' → logprob: -18.375017166137695
    10. '[ind' → logprob: -18.625017166137695

Token 954: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01925687864422798
    2. '//' → logprob: -5.019257068634033
    3. ')' → logprob: -5.269257068634033
    4. ' //' → logprob: -5.644257068634033
    5. ')]' → logprob: -6.644257068634033
    6. '])' → logprob: -7.269257068634033
    7. '   ' → logprob: -7.269257068634033
    8. ')//' → logprob: -7.769257068634033
    9. '+' → logprob: -9.019256591796875
    10. ' ' → logprob: -9.144256591796875

Token 955: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.16660742461681366
    2. '//' → logprob: -1.91660737991333
    3. ']' → logprob: -5.66660737991333
    4. ')' → logprob: -6.79160737991333
    5. ')//' → logprob: -6.79160737991333
    6. '   ' → logprob: -8.416607856750488
    7. ' ' → logprob: -8.666607856750488
    8. '[' → logprob: -9.291607856750488
    9. '#' → logprob: -10.166607856750488
    10. '']//' → logprob: -11.041607856750488

Token 956: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011715330183506012
    2. ' ' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.876171112060547
    4. '```' → logprob: -15.001171112060547
    5. ' ' → logprob: -15.626171112060547
    6. ')' → logprob: -15.626171112060547
    7. '  ' → logprob: -15.751171112060547
    8. '	' → logprob: -16.376171112060547
    9. '[' → logprob: -17.251171112060547
    10. '۱۰' → logprob: -17.876171112060547

Token 957: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.00001335144043
    4. '   ' → logprob: -17.37501335144043
    5. '[' → logprob: -18.00001335144043
    6. '  ' → logprob: -18.12501335144043
    7. ')' → logprob: -18.25001335144043
    8. '' → logprob: -19.12501335144043
    9. ' ' → logprob: -19.25001335144043
    10. '۱۰' → logprob: -19.87501335144043

Token 958: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04358846694231033
    2. '+' → logprob: -3.293588399887085
    3. ' +' → logprob: -5.918588638305664
    4. ')' → logprob: -7.168588638305664
    5. ']' → logprob: -7.293588638305664
    6. ')])' → logprob: -7.293588638305664
    7. ')]
' → logprob: -8.168588638305664
    8. '])]' → logprob: -9.293588638305664
    9. '])' → logprob: -9.418588638305664
    10. ')],' → logprob: -9.793588638305664

Token 959: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06631001085042953
    2. '#' → logprob: -3.191309928894043
    3. '\' → logprob: -5.691309928894043
    4. '\n' → logprob: -5.691309928894043
    5. '.' → logprob: -6.191309928894043
    6. ',' → logprob: -6.191309928894043
    7. '```' → logprob: -6.191309928894043
    8. ')' → logprob: -6.191309928894043
    9. '    
' → logprob: -6.691309928894043
    10. '[' → logprob: -6.691309928894043

Token 960: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040566585958004
    2. ')' → logprob: -4.665566444396973
    3. '[' → logprob: -5.290566444396973
    4. '    
' → logprob: -5.790566444396973
    5. '\' → logprob: -5.915566444396973
    6. '\n' → logprob: -5.915566444396973
    7. ',' → logprob: -5.915566444396973
    8. ' ' → logprob: -6.165566444396973
    9. '  
' → logprob: -6.290566444396973
    10. '.' → logprob: -6.915566444396973

Token 961: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03157065063714981
    2. '#' → logprob: -4.1565704345703125
    3. '    
' → logprob: -4.5315704345703125
    4. '
' → logprob: -7.2815704345703125
    5. ',' → logprob: -7.2815704345703125
    6. '#
' → logprob: -7.5315704345703125
    7. '  
' → logprob: -8.031570434570312
    8. ')' → logprob: -8.031570434570312
    9. 'def' → logprob: -8.281570434570312
    10. '       ' → logprob: -8.531570434570312

Token 962: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.7610722780227661
    2. ' ' → logprob: -2.0110721588134766
    3. 'on' → logprob: -2.2610721588134766
    4. 'Pour' → logprob: -2.3860721588134766
    5. 'pour' → logprob: -2.7610721588134766
    6. 'On' → logprob: -2.7610721588134766
    7. ' parcour' → logprob: -2.8860721588134766
    8. ' pour' → logprob: -3.0110721588134766
    9. ' filtr' → logprob: -3.2610721588134766
    10. 'for' → logprob: -3.6360721588134766

Token 963: ' chois' (ID: 33475)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.2756042182445526
    2. ' peut' → logprob: -1.900604248046875
    3. 'pe' → logprob: -2.775604248046875
    4. '_pe' → logprob: -4.400604248046875
    5. ' peu' → logprob: -6.025604248046875
    6. ' pe' → logprob: -6.025604248046875
    7. ' ' → logprob: -6.900604248046875
    8. ' veut' → logprob: -6.900604248046875
    9. ' doit' → logprob: -7.025604248046875
    10. '_' → logprob: -7.025604248046875

Token 964: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028633661568164825
    2. 'it' → logprob: -6.25286340713501
    3. 'ert' → logprob: -8.252862930297852
    4. 'er' → logprob: -9.002862930297852
    5. 'et' → logprob: -9.127862930297852
    6. 'rit' → logprob: -9.377862930297852
    7. 'rt' → logprob: -9.502862930297852
    8. 'e' → logprob: -9.877862930297852
    9. 'oit' → logprob: -10.002862930297852
    10. 'erit' → logprob: -10.002862930297852

Token 965: ' parmi' (ID: 51713)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8194749355316162
    2. ' les' → logprob: -1.5694749355316162
    3. ' uniquement' → logprob: -1.5694749355316162
    4. 'j' → logprob: -3.569474935531616
    5. ' ceux' → logprob: -3.694474935531616
    6. ' seulement' → logprob: -3.819474935531616
    7. 'les' → logprob: -3.819474935531616
    8. ' ' → logprob: -5.194475173950195
    9. ' un' → logprob: -5.319475173950195
    10. ' parmi' → logprob: -5.444475173950195

Token 966: ' ces' (ID: 10532)
  Prédit: ' ces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.08474364876747131
    2. 'ces' → logprob: -2.8347437381744385
    3. 'j' → logprob: -4.834743499755859
    4. ' j' → logprob: -5.459743499755859
    5. ' les' → logprob: -5.834743499755859
    6. 'les' → logprob: -5.834743499755859
    7. ' ce' → logprob: -6.584743499755859
    8. ' cette' → logprob: -7.584743499755859
    9. ' ceux' → logprob: -7.709743499755859
    10. 'ce' → logprob: -7.959743499755859

Token 967: ' j' (ID: 441)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.5975509285926819
    2. ' j' → logprob: -1.222550868988037
    3. 'j' → logprob: -2.597550868988037
    4. 'indices' → logprob: -2.722550868988037
    5. '_indices' → logprob: -5.347550868988037
    6. '_j' → logprob: -5.847550868988037
    7. '_' → logprob: -6.847550868988037
    8. '[j' → logprob: -6.972550868988037
    9. ' tramp' → logprob: -6.972550868988037
    10. ' _' → logprob: -7.347550868988037

Token 968: ' ceux' (ID: 26863)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24747787415981293
    2. ' s' → logprob: -1.8724778890609741
    3. '[' → logprob: -3.7474777698516846
    4. ',' → logprob: -5.122478008270264
    5. '[j' → logprob: -5.497478008270264
    6. '```' → logprob: -5.622478008270264
    7. '[i' → logprob: -5.872478008270264
    8. ' ' → logprob: -5.872478008270264
    9. '[s' → logprob: -5.997478008270264
    10. ')' → logprob: -6.122478008270264

Token 969: ' qui' (ID: 2780)
  Prédit: ' dont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dont' → logprob: -1.892212152481079
    2. 'dont' → logprob: -2.017212152481079
    3. ' tels' → logprob: -2.017212152481079
    4. ' pour' → logprob: -2.142212152481079
    5. 'pour' → logprob: -2.392212152481079
    6. ' qui' → logprob: -2.392212152481079
    7. ' ' → logprob: -2.517212152481079
    8. 'où' → logprob: -3.392212152481079
    9. 'qui' → logprob: -3.642212152481079
    10. 'for' → logprob: -3.642212152481079

Token 970: ' vér' (ID: 42524)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6848557591438293
    2. ' ont' → logprob: -1.1848556995391846
    3. 's' → logprob: -2.0598556995391846
    4. 'n' → logprob: -4.059855937957764
    5. ' peuvent' → logprob: -4.559855937957764
    6. ' satisf' → logprob: -4.684855937957764
    7. ' poss' → logprob: -4.934855937957764
    8. ''ont' → logprob: -5.684855937957764
    9. ' sont' → logprob: -5.934855937957764
    10. ' n' → logprob: -6.684855937957764

Token 971: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031332748476415873
    2. 'él' → logprob: -6.253133296966553
    3. 'é' → logprob: -8.378132820129395
    4. '```' → logprob: -8.378132820129395
    5. 'éf' → logprob: -8.753132820129395
    6. 'el' → logprob: -9.253132820129395
    7. 'èl' → logprob: -9.753132820129395
    8. '`' → logprob: -10.128132820129395
    9. '{' → logprob: -10.378132820129395
    10. 'ifiant' → logprob: -10.503132820129395

Token 972: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00278419628739357
    2. 'i' → logprob: -6.627784252166748
    3. 'if' → logprob: -7.502784252166748
    4. 'f' → logprob: -7.877784252166748
    5. '\' → logprob: -8.87778377532959
    6. '`' → logprob: -9.12778377532959
    7. '#' → logprob: -9.62778377532959
    8. 'aient' → logprob: -9.75278377532959
    9. '```' → logprob: -10.25278377532959
    10. 'ï' → logprob: -11.25278377532959

Token 973: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0337785929441452
    2. 'd' → logprob: -3.533778667449951
    3. ' ' → logprob: -6.408778667449951
    4. '   ' → logprob: -7.283778667449951
    5. '  ' → logprob: -7.533778667449951
    6. ' j' → logprob: -7.533778667449951
    7. '    ' → logprob: -8.783778190612793
    8. '```' → logprob: -9.033778190612793
    9. ' ' → logprob: -9.408778190612793
    10. ' >=' → logprob: -10.408778190612793

Token 974: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.816591434879228e-05
    2. '[' → logprob: -9.50008773803711
    3. ' [' → logprob: -12.25008773803711
    4. 'j' → logprob: -12.25008773803711
    5. '```' → logprob: -13.50008773803711
    6. '[i' → logprob: -14.50008773803711
    7. '\[' → logprob: -15.00008773803711
    8. '[
' → logprob: -15.12508773803711
    9. '   ' → logprob: -15.25008773803711
    10. '_j' → logprob: -16.00008773803711

Token 975: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.056686282157898
    2. ' >=' → logprob: -1.306686282157898
    3. ']>=' → logprob: -1.931686282157898
    4. '>=' → logprob: -2.1816864013671875
    5. '[j' → logprob: -2.1816864013671875
    6. '[' → logprob: -5.4316864013671875
    7. '   ' → logprob: -6.0566864013671875
    8. ' ]' → logprob: -6.4316864013671875
    9. ' ' → logprob: -6.8066864013671875
    10. '[]' → logprob: -8.181686401367188

Token 976: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.046398598700761795
    2. '>=' → logprob: -3.671398639678955
    3. '[j' → logprob: -4.546398639678955
    4. '[i' → logprob: -5.171398639678955
    5. '[' → logprob: -6.421398639678955
    6. '```' → logprob: -7.046398639678955
    7. ']>=' → logprob: -8.171398162841797
    8. ']' → logprob: -8.421398162841797
    9. '   ' → logprob: -9.171398162841797
    10. ')>=' → logprob: -9.671398162841797

Token 977: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2565613389015198
    2. ' ' → logprob: -1.506561279296875
    3. ' (' → logprob: -5.506561279296875
    4. '   ' → logprob: -8.631561279296875
    5. '  ' → logprob: -9.131561279296875
    6. '(' → logprob: -9.256561279296875
    7. '    ' → logprob: -9.631561279296875
    8. '(j' → logprob: -10.381561279296875
    9. ' ' → logprob: -11.006561279296875
    10. '```' → logprob: -11.381561279296875

Token 978: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016482800710946321
    2. ' ' → logprob: -6.501648426055908
    3. '(' → logprob: -9.37664794921875
    4. '(j' → logprob: -10.50164794921875
    5. ' (' → logprob: -11.25164794921875
    6. '```' → logprob: -11.62664794921875
    7. '   ' → logprob: -12.25164794921875
    8. 'j' → logprob: -13.50164794921875
    9. '  ' → logprob: -13.87664794921875
    10. '
' → logprob: -14.25164794921875

Token 979: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.23123283684253693
    2. '*' → logprob: -1.6062328815460205
    3. ' *' → logprob: -5.356232643127441
    4. '(j' → logprob: -7.606232643127441
    5. '(' → logprob: -8.106232643127441
    6. '*j' → logprob: -10.106232643127441
    7. '[' → logprob: -10.231232643127441
    8. ' *(' → logprob: -10.356232643127441
    9. ' (' → logprob: -10.356232643127441
    10. '*[' → logprob: -10.606232643127441

Token 980: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.12705442309379578
    2. ' (' → logprob: -2.127054452896118
    3. '(' → logprob: -9.377054214477539
    4. 'j' → logprob: -11.377054214477539
    5. ')' → logprob: -11.877054214477539
    6. '(i' → logprob: -12.127054214477539
    7. ' ' → logprob: -12.252054214477539
    8. ' j' → logprob: -12.877054214477539
    9. '(
' → logprob: -13.627054214477539
    10. '((' → logprob: -13.814554214477539

Token 981: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008894636295735836
    2. '-' → logprob: -4.758894443511963
    3. '-i' → logprob: -8.258894920349121
    4. ' ' → logprob: -11.633894920349121
    5. ')' → logprob: -12.383894920349121
    6. '   ' → logprob: -12.758894920349121
    7. '[i' → logprob: -14.008894920349121
    8. ' ' → logprob: -14.258894920349121
    9. ' -
' → logprob: -14.758894920349121
    10. '-j' → logprob: -14.758894920349121

Token 982: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02090841718018055
    2. ' i' → logprob: -3.8959083557128906
    3. '(i' → logprob: -8.52090835571289
    4. ' (' → logprob: -9.52090835571289
    5. ' ' → logprob: -10.39590835571289
    6. 'j' → logprob: -10.64590835571289
    7. '   ' → logprob: -11.14590835571289
    8. '_i' → logprob: -12.27090835571289
    9. '	i' → logprob: -12.64590835571289
    10. '  ' → logprob: -12.64590835571289

Token 983: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25107577443122864
    2. ')' → logprob: -1.8760757446289062
    3. '])' → logprob: -3.0010757446289062
    4. ')]' → logprob: -4.376075744628906
    5. '   ' → logprob: -5.751075744628906
    6. ']
' → logprob: -7.251075744628906
    7. ' ]' → logprob: -7.501075744628906
    8. ')])' → logprob: -8.001075744628906
    9. ')
' → logprob: -8.251075744628906
    10. '+' → logprob: -8.251075744628906

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6404540538787842
    2. '[' → logprob: -2.015454053878784
    3. ',' → logprob: -3.015454053878784
    4. ')' → logprob: -3.015454053878784
    5. ' ' → logprob: -3.015454053878784
    6. ']' → logprob: -3.140454053878784
    7. '\' → logprob: -3.515454053878784
    8. '.' → logprob: -4.140454292297363
    9. ''' → logprob: -4.265454292297363
    10. '[
' → logprob: -4.765454292297363

Token 985: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2593388855457306
    2. '\' → logprob: -2.634338855743408
    3. '\n' → logprob: -2.884338855743408
    4. '[' → logprob: -4.134338855743408
    5. ']' → logprob: -4.759338855743408
    6. '    
' → logprob: -4.759338855743408
    7. '  
' → logprob: -5.009338855743408
    8. '
' → logprob: -5.134338855743408
    9. '.' → logprob: -5.134338855743408
    10. ',' → logprob: -5.259338855743408

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008864864706993103
    2. '    
' → logprob: -4.883864879608154
    3. '<|end|>' → logprob: -7.883864879608154
    4. ')' → logprob: -8.633864402770996
    5. '       ' → logprob: -9.383864402770996
    6. '[' → logprob: -9.383864402770996
    7. '  
' → logprob: -9.508864402770996
    8. '#' → logprob: -9.883864402770996
    9. '
' → logprob: -10.008864402770996
    10. '<|end|>' → logprob: -10.133864402770996

Token 987: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10531915724277496
    2. '    
' → logprob: -2.3553192615509033
    3. '
' → logprob: -5.855319023132324
    4. '#' (adapté à ' #') → logprob: -6.605319023132324
    5. '  
' → logprob: -8.855319023132324
    6. 'def' → logprob: -8.980319023132324
    7. '#
' → logprob: -9.230319023132324
    8. '   
' → logprob: -9.480319023132324
    9. '```' → logprob: -10.105319023132324
    10. '     
' → logprob: -10.105319023132324

Token 988: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0894339308142662
    2. '    
' → logprob: -3.4644339084625244
    3. '\n' → logprob: -3.9644339084625244
    4. '  
' → logprob: -5.0894341468811035
    5. '\' → logprob: -5.3394341468811035
    6. ' 
' → logprob: -5.4644341468811035
    7. '
' → logprob: -5.4644341468811035
    8. '#' → logprob: -6.2144341468811035
    9. '   
' → logprob: -6.7144341468811035
    10. ' ' → logprob: -6.8394341468811035

Token 989: ' faudrait' (ID: 128958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0543816089630127
    2. ' est' → logprob: -1.6793816089630127
    3. ' faut' → logprob: -2.5543816089630127
    4. 's' → logprob: -2.6793816089630127
    5. 'est' → logprob: -2.9293816089630127
    6. ''est' → logprob: -2.9293816089630127
    7. ' n' → logprob: -3.0543816089630127
    8. '#' → logprob: -3.1793816089630127
    9. ' faudra' → logprob: -3.5543816089630127
    10. ' reste' → logprob: -4.179381370544434

Token 990: ' vérifier' (ID: 93671)
  Prédit: 'impl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impl' → logprob: -1.4348951578140259
    2. 'maint' → logprob: -1.5598951578140259
    3. ' parcour' → logprob: -2.8098950386047363
    4. ' construire' → logprob: -3.1848950386047363
    5. 'possible' → logprob: -3.1848950386047363
    6. ' possible' → logprob: -3.5598950386047363
    7. 'util' → logprob: -3.5598950386047363
    8. ' utiliser' → logprob: -3.6848950386047363
    9. 'tr' → logprob: -3.6848950386047363
    10. '```' → logprob: -3.8098950386047363

Token 991: ' ce' (ID: 2357)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.1871353387832642
    2. ' if' → logprob: -1.9371353387832642
    3. ' ' → logprob: -2.3121352195739746
    4. '```' → logprob: -2.6871352195739746
    5. ' la' → logprob: -2.8121352195739746
    6. 'si' → logprob: -3.4371352195739746
    7. 's' → logprob: -3.5621352195739746
    8. 'if' → logprob: -3.8121352195739746
    9. 'for' → logprob: -4.062135219573975
    10. '[' → logprob: -4.062135219573975

Token 992: ' crit' (ID: 6709)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.31892797350883484
    2. 's' → logprob: -1.5689280033111572
    3. 'x' → logprob: -4.443927764892578
    4. '_' → logprob: -4.818927764892578
    5. 'qui' → logprob: -4.943927764892578
    6. ' qui' → logprob: -5.318927764892578
    7. 'u' → logprob: -5.443927764892578
    8. '#' → logprob: -5.443927764892578
    9. 'pend' → logprob: -5.818927764892578
    10. 'qu' → logprob: -6.068927764892578

Token 993: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.000455340719781816
    2. 'è' → logprob: -8.000454902648926
    3. '�' → logprob: -10.000454902648926
    4. '#' → logprob: -11.125454902648926
    5. '`' → logprob: -11.250454902648926
    6. 'èr' → logprob: -11.500454902648926
    7. '```' → logprob: -12.125454902648926
    8. '_' → logprob: -12.625454902648926
    9. 'ètre' → logprob: -12.625454902648926
    10. 'ères' → logprob: -12.750454902648926

Token 994: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1473661661148071
    2. '.' → logprob: -2.0223660469055176
    3. 's' → logprob: -2.2723660469055176
    4. ',' → logprob: -2.2723660469055176
    5. ' ' → logprob: -2.2723660469055176
    6. ']' → logprob: -3.5223660469055176
    7. '#' → logprob: -3.7723660469055176
    8. '[' → logprob: -3.8973660469055176
    9. ':' → logprob: -3.8973660469055176
    10. '[j' → logprob: -4.022366046905518

Token 995: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7525059580802917
    2. ' chaque' → logprob: -1.2525060176849365
    3. ' tous' → logprob: -1.7525060176849365
    4. 'cha' → logprob: -3.2525060176849365
    5. 'tout' → logprob: -5.002505779266357
    6. 'les' → logprob: -5.127505779266357
    7. ' ' → logprob: -5.502505779266357
    8. 'ces' → logprob: -6.002505779266357
    9. ' les' → logprob: -6.377505779266357
    10. ' chacun' → logprob: -6.502505779266357

Token 996: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2471073865890503
    2. ' les' → logprob: -2.24710750579834
    3. ' j' → logprob: -2.62210750579834
    4. 'les' → logprob: -3.37210750579834
    5. ' ' → logprob: -6.24710750579834
    6. ' ceux' → logprob: -6.74710750579834
    7. '```' → logprob: -6.99710750579834
    8. ']' → logprob: -7.87210750579834
    9. ' ' → logprob: -8.37210750579834
    10. ' possible' → logprob: -8.68460750579834

Token 997: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20347373187541962
    2. ' j' → logprob: -1.828473687171936
    3. ' tramp' → logprob: -4.9534735679626465
    4. 'indices' → logprob: -5.2034735679626465
    5. ' indices' → logprob: -5.4534735679626465
    6. 'tr' → logprob: -6.2034735679626465
    7. ' trampoline' → logprob: -6.9534735679626465
    8. 'i' → logprob: -7.2034735679626465
    9. ' ' → logprob: -7.9534735679626465
    10. 'poss' → logprob: -8.328474044799805

Token 998: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1528016328811646
    2. ',' → logprob: -1.7778016328811646
    3. '.' → logprob: -1.9028016328811646
    4. ' dans' → logprob: -2.277801513671875
    5. ' s' → logprob: -2.402801513671875
    6. ' ' → logprob: -3.402801513671875
    7. ')' → logprob: -3.777801513671875
    8. ']' → logprob: -4.027801513671875
    9. '<|end|>' → logprob: -4.152801513671875
    10. 'dans' → logprob: -4.277801513671875

Token 999: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1560440063476562
    2. ' l' → logprob: -1.1560440063476562
    3. ' cet' → logprob: -2.2810440063476562
    4. ' ce' → logprob: -2.7810440063476562
    5. ' cette' → logprob: -3.0310440063476562
    6. '[' → logprob: -3.2810440063476562
    7. '[l' → logprob: -3.4060440063476562
    8. ' la' → logprob: -3.6560440063476562
    9. 'cet' → logprob: -4.031044006347656
    10. '[i' → logprob: -4.281044006347656

Token 1000: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.018862271681427956
    2. ' interval' → logprob: -4.018862247467041
    3. '_interval' → logprob: -8.1438627243042
    4. '_' → logprob: -9.1438627243042
    5. '[' → logprob: -9.3938627243042
    6. 'inter' → logprob: -9.8938627243042
    7. '#' → logprob: -10.2688627243042
    8. ' ' → logprob: -10.8938627243042
    9. 'ensemble' → logprob: -10.8938627243042
    10. ' ' → logprob: -11.1438627243042

Token 1001: 'le' (ID: 282)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4614420533180237
    2. 'e' → logprob: -1.461441993713379
    3. 'u' → logprob: -2.961441993713379
    4. 'le' → logprob: -3.711441993713379
    5. '[' → logprob: -4.711441993713379
    6. '']' → logprob: -4.836441993713379
    7. 'v' → logprob: -4.961441993713379
    8. 'aire' → logprob: -5.461441993713379
    9. 've' → logprob: -5.586441993713379
    10. ')' → logprob: -5.836441993713379

Token 1002: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24637016654014587
    2. '.' → logprob: -2.3713700771331787
    3. ',' → logprob: -2.9963700771331787
    4. ':' → logprob: -3.6213700771331787
    5. '#' → logprob: -4.371370315551758
    6. ',
' → logprob: -5.496370315551758
    7. 'def' → logprob: -5.621370315551758
    8. ' ' → logprob: -5.871370315551758
    9. '[' → logprob: -5.996370315551758
    10. ':
' → logprob: -6.246370315551758

Token 1003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023853512480854988
    2. '#' → logprob: -4.148853302001953
    3. '    
' → logprob: -5.648853302001953
    4. '\' → logprob: -7.273853302001953
    5. '  
' → logprob: -7.523853302001953
    6. '[' → logprob: -7.523853302001953
    7. '.' → logprob: -7.773853302001953
    8. '<|end|>' → logprob: -7.898853302001953
    9. '...' → logprob: -8.148853302001953
    10. '#
' → logprob: -8.398853302001953

Token 1004: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011641046963632107
    2. '    
' → logprob: -4.761641025543213
    3. '#' → logprob: -7.261641025543213
    4. '    ' → logprob: -8.011641502380371
    5. '       ' → logprob: -8.261641502380371
    6. '  
' → logprob: -8.386641502380371
    7. '.' → logprob: -8.636641502380371
    8. ')' → logprob: -8.636641502380371
    9. '[' → logprob: -9.136641502380371
    10. ',' → logprob: -9.261641502380371

Token 1005: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013966037891805172
    2. '    
' → logprob: -4.388966083526611
    3. '#' → logprob: -7.638966083526611
    4. '
' → logprob: -8.013965606689453
    5. 'def' → logprob: -9.013965606689453
    6. '```' → logprob: -9.513965606689453
    7. '  
' → logprob: -9.638965606689453
    8. '       ' → logprob: -9.638965606689453
    9. 'import' → logprob: -9.638965606689453
    10. '    ' → logprob: -10.263965606689453

Token 1006: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014742527157068253
    2. '#' (adapté à ' #') → logprob: -4.889742374420166
    3. '    
' → logprob: -5.264742374420166
    4. '#
' → logprob: -6.889742374420166
    5. 'def' → logprob: -8.139742851257324
    6. '```' → logprob: -8.389742851257324
    7. '
' → logprob: -9.014742851257324
    8. 'import' → logprob: -9.014742851257324
    9. 'from' → logprob: -9.639742851257324
    10. '       ' → logprob: -10.764742851257324

Token 1007: ' Faire' (ID: 104849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009705095551908016
    2. '#' → logprob: -5.134705066680908
    3. '    
' → logprob: -6.384705066680908
    4. 'def' → logprob: -6.884705066680908
    5. 'from' → logprob: -8.009705543518066
    6. 'import' → logprob: -8.509705543518066
    7. '#
' → logprob: -8.759705543518066
    8. '```' → logprob: -8.884705543518066
    9. '
' → logprob: -9.134705543518066
    10. '       ' → logprob: -10.509705543518066

Token 1008: ' cela' (ID: 17542)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7936592698097229
    2. '   ' → logprob: -1.5436592102050781
    3. 'une' → logprob: -1.6686592102050781
    4. 'for' → logprob: -3.543659210205078
    5. 'import' → logprob: -3.793659210205078
    6. 'def' → logprob: -4.293659210205078
    7. ' un' → logprob: -4.293659210205078
    8. '```' → logprob: -4.793659210205078
    9. ' une' → logprob: -4.918659210205078
    10. 'au' → logprob: -5.043659210205078

Token 1009: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45211392641067505
    2. 'pour' → logprob: -2.0771138668060303
    3. 'efficient' → logprob: -2.4521138668060303
    4. 'de' → logprob: -3.5771138668060303
    5. '```' → logprob: -4.077114105224609
    6. 'na' → logprob: -4.327114105224609
    7. ' for' → logprob: -4.452114105224609
    8. 'en' → logprob: -4.452114105224609
    9. 'import' → logprob: -4.452114105224609
    10. ' efficiently' → logprob: -4.952114105224609

Token 1010: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2752735912799835
    2. ' chaque' → logprob: -2.150273561477661
    3. 'tout' → logprob: -3.025273561477661
    4. 'cha' → logprob: -3.525273561477661
    5. ' tous' → logprob: -3.900273561477661
    6. ' ' → logprob: -4.77527379989624
    7. 'i' → logprob: -5.40027379989624
    8. 'all' → logprob: -5.77527379989624
    9. ' j' → logprob: -6.65027379989624
    10. 'j' → logprob: -6.77527379989624

Token 1011: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.43413591384887695
    2. 'j' → logprob: -2.559135913848877
    3. ' i' → logprob: -2.684135913848877
    4. 'i' → logprob: -2.684135913848877
    5. ' j' → logprob: -2.684135913848877
    6. 'les' → logprob: -2.809135913848877
    7. ' ' → logprob: -4.809135913848877
    8. '   ' → logprob: -8.059135437011719
    9. '```' → logprob: -8.309135437011719
    10. ' ' → logprob: -8.559135437011719

Token 1012: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05078737065196037
    2. ' i' → logprob: -3.6757874488830566
    3. 'j' → logprob: -4.300787448883057
    4. ' tramp' → logprob: -4.925787448883057
    5. ' j' → logprob: -6.675787448883057
    6. 'tr' → logprob: -6.800787448883057
    7. ' ' → logprob: -7.925787448883057
    8. ' trampoline' → logprob: -8.800786972045898
    9. 'indices' → logprob: -9.050786972045898
    10. ' indices' → logprob: -9.550786972045898

Token 1013: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9091215133666992
    2. '#' → logprob: -2.284121513366699
    3. ':' → logprob: -2.409121513366699
    4. ':
' → logprob: -2.409121513366699
    5. ' est' → logprob: -2.659121513366699
    6. 'import' → logprob: -2.659121513366699
    7. ' n' → logprob: -3.534121513366699
    8. ' serait' → logprob: -3.534121513366699
    9. '
' → logprob: -3.909121513366699
    10. ' ' → logprob: -4.784121513366699

Token 1014: ' naï' (ID: 153475)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15074309706687927
    2. ' #' → logprob: -3.025743007659912
    3. ' mais' → logprob: -3.775743007659912
    4. ' et' → logprob: -3.900743007659912
    5. ' puis' → logprob: -4.150743007659912
    6. ' ce' → logprob: -5.525743007659912
    7. ' c' → logprob: -5.650743007659912
    8. '   ' → logprob: -5.775743007659912
    9. ' en' → logprob: -5.900743007659912
    10. ' j' → logprob: -5.900743007659912

Token 1015: 'vement' (ID: 9725)
  Prédit: 'ivement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.08532942086458206
    2. 'vement' → logprob: -2.835329532623291
    3. 'ï' → logprob: -3.960329532623291
    4. 'vel' → logprob: -6.710329532623291
    5. 'î' → logprob: -6.835329532623291
    6. 'ively' → logprob: -8.335329055786133
    7. 'veau' → logprob: -8.835329055786133
    8. 've' → logprob: -8.960329055786133
    9. '```' → logprob: -8.960329055786133
    10. 'ı' → logprob: -9.210329055786133

Token 1016: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37456730008125305
    2. ',' → logprob: -1.9995672702789307
    3. ':
' → logprob: -2.9995672702789307
    4. '#' → logprob: -3.3745672702789307
    5. ' serait' → logprob: -3.4995672702789307
    6. '```' → logprob: -3.4995672702789307
    7. '   ' → logprob: -5.49956750869751
    8. ' =' → logprob: -5.74956750869751
    9. '=' → logprob: -5.87456750869751
    10. ' would' → logprob: -5.99956750869751

Token 1017: ' est' (ID: 893)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9373499751091003
    2. '#' → logprob: -1.6873500347137451
    3. ' serait' → logprob: -1.8123500347137451
    4. ' #' → logprob: -2.937350034713745
    5. ' =' → logprob: -3.687350034713745
    6. ':' → logprob: -3.812350034713745
    7. ' est' → logprob: -4.062349796295166
    8. '       ' → logprob: -4.187349796295166
    9. '   ' → logprob: -4.312349796295166
    10. ' ' → logprob: -4.562349796295166

Token 1018: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.1993151158094406
    2. ' impossible' → logprob: -2.324315071105957
    3. 'ine' → logprob: -3.699315071105957
    4. 't' → logprob: -4.574315071105957
    5. 'im' → logprob: -4.699315071105957
    6. 'O' → logprob: -4.824315071105957
    7. ' O' → logprob: -5.449315071105957
    8. ' T' → logprob: -5.574315071105957
    9. 'T' → logprob: -5.824315071105957
    10. 'in' → logprob: -5.824315071105957

Token 1019: ' coûte' (ID: 118994)
  Prédit: ' long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.15541192889213562
    2. ' coute' → logprob: -3.405411958694458
    3. ' coûte' → logprob: -3.530411958694458
    4. ' slow' → logprob: -3.780411958694458
    5. '_' → logprob: -4.655411720275879
    6. ' costly' → logprob: -4.780411720275879
    7. ' lento' → logprob: -5.405411720275879
    8. ' lente' → logprob: -5.530411720275879
    9. 'n' → logprob: -5.530411720275879
    10. ' _' → logprob: -5.655411720275879

Token 1020: 'ux' (ID: 1778)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.05949947610497475
    2. 'ux' → logprob: -3.559499502182007
    3. 'e' → logprob: -4.434499263763428
    4. 'ieux' → logprob: -4.684499263763428
    5. 'ueux' → logprob: -5.309499263763428
    6. 'x' → logprob: -6.309499263763428
    7. 'if' → logprob: -7.059499263763428
    8. 'é' → logprob: -9.434499740600586
    9. '#' → logprob: -9.559499740600586
    10. '```' → logprob: -9.934499740600586

Token 1021: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17156405746936798
    2. '.' → logprob: -2.4215641021728516
    3. '.
' → logprob: -4.046564102172852
    4. ',' → logprob: -4.296564102172852
    5. ':' → logprob: -4.796564102172852
    6. '    
' → logprob: -5.171564102172852
    7. ',
' → logprob: -5.171564102172852
    8. '#' → logprob: -5.421564102172852
    9. 'def' → logprob: -6.421564102172852
    10. '
' → logprob: -6.546564102172852

Token 1022: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9493659138679504
    2. '   ' → logprob: -1.0743658542633057
    3. '<|end|>' → logprob: -1.9493658542633057
    4. '[' → logprob: -3.4493658542633057
    5. '<|end|>' → logprob: -3.5743658542633057
    6. '...' → logprob: -3.5743658542633057
    7. '.' → logprob: -4.699366092681885
    8. '[
' → logprob: -4.949366092681885
    9. '\' → logprob: -4.949366092681885
    10. '```' → logprob: -5.699366092681885

Token 1023: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18936368823051453
    2. '#' → logprob: -2.564363718032837
    3. '<|end|>' → logprob: -3.189363718032837
    4. '    
' → logprob: -4.689363479614258
    5. '[' → logprob: -4.814363479614258
    6. ')' → logprob: -5.064363479614258
    7. '<|end|>' → logprob: -5.064363479614258
    8. '\' → logprob: -5.439363479614258
    9. '...' → logprob: -5.564363479614258
    10. '.' → logprob: -5.689363479614258

Token 1024: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2638936936855316
    2. '   ' → logprob: -1.513893723487854
    3. '#
' → logprob: -5.1388936042785645
    4. '```' → logprob: -6.7638936042785645
    5. 'import' → logprob: -7.1388936042785645
    6. '\' → logprob: -7.3888936042785645
    7. '    
' → logprob: -7.6388936042785645
    8. 'Continue' → logprob: -7.6388936042785645
    9. '<|end|>' → logprob: -7.6388936042785645
    10. '<|end|>' → logprob: -7.7638936042785645

Token 1025: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2756824791431427
    2. '#
' → logprob: -1.7756824493408203
    3. '   ' → logprob: -2.6506824493408203
    4. '    
' → logprob: -7.77568244934082
    5. '```' → logprob: -8.65068244934082
    6. '"""
' → logprob: -9.52568244934082
    7. 'import' → logprob: -9.77568244934082
    8. 'from' → logprob: -10.02568244934082
    9. '
' → logprob: -10.65068244934082
    10. '\' → logprob: -10.77568244934082

Token 1026: ' Optim' (ID: 38267)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09052328765392303
    2. '#
' → logprob: -2.7155232429504395
    3. '   ' → logprob: -4.7155232429504395
    4. '\' → logprob: -5.8405232429504395
    5. '    
' → logprob: -6.5905232429504395
    6. 'from' → logprob: -6.8405232429504395
    7. 'import' → logprob: -6.9655232429504395
    8. '[
' → logprob: -6.9655232429504395
    9. 'def' → logprob: -7.0905232429504395
    10. '
' → logprob: -7.0905232429504395

Token 1027: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.08036207407712936
    2. 'isé' → logprob: -2.95536208152771
    3. 'ization' → logprob: -3.95536208152771
    4. '```' → logprob: -6.580361843109131
    5. 'isée' → logprob: -6.705361843109131
    6. '#' → logprob: -7.455361843109131
    7. 'al' → logprob: -7.455361843109131
    8. 'ized' → logprob: -7.705361843109131
    9. 'iser' → logprob: -7.705361843109131
    10. 'ise' → logprob: -8.330362319946289

Token 1028: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09350650757551193
    2. ' :' → logprob: -2.8435065746307373
    3. ':
' → logprob: -3.8435065746307373
    4. '#' → logprob: -5.593506336212158
    5. ':

' → logprob: -6.468506336212158
    6. ' :
' → logprob: -6.718506336212158
    7. ',' → logprob: -7.968506336212158
    8. 'import' → logprob: -7.968506336212158
    9. ' =' → logprob: -8.218506813049316
    10. '#:' → logprob: -8.343506813049316

Token 1029: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020878417417407036
    2. '   ' → logprob: -4.270878314971924
    3. '#
' → logprob: -5.520878314971924
    4. ' #' → logprob: -6.520878314971924
    5. '    
' → logprob: -7.645878314971924
    6. 'from' → logprob: -8.145878791809082
    7. '\' → logprob: -9.645878791809082
    8. '```' → logprob: -10.395878791809082
    9. 'import' → logprob: -10.520878791809082
    10. '    ' → logprob: -10.645878791809082

Token 1030: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.011778880842030048
    2. '#
' → logprob: -5.136778831481934
    3. '   ' → logprob: -6.261778831481934
    4. 'from' → logprob: -6.386778831481934
    5. 'Util' → logprob: -7.261778831481934
    6. '[
' → logprob: -7.761778831481934
    7. 'Pour' → logprob: -8.511778831481934
    8. 'for' → logprob: -8.886778831481934
    9. '    
' → logprob: -9.011778831481934
    10. ' #' → logprob: -9.386778831481934

Token 1031: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02299410291016102
    2. '#
' → logprob: -4.147994041442871
    3. 'from' → logprob: -5.647994041442871
    4. 'Util' → logprob: -6.772994041442871
    5. ' #' → logprob: -7.522994041442871
    6. 'Pour' → logprob: -7.522994041442871
    7. '[
' → logprob: -8.772994041442871
    8. '"""
' → logprob: -8.772994041442871
    9. ' from' → logprob: -9.147994041442871
    10. 'On' → logprob: -9.147994041442871

Token 1032: ' va' (ID: 3423)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7858529686927795
    2. ' peut' → logprob: -0.7858529686927795
    3. ' peux' → logprob: -4.160852909088135
    4. 'pour' → logprob: -4.410852909088135
    5. 'u' → logprob: -4.535852909088135
    6. 'e' → logprob: -5.035852909088135
    7. ''util' → logprob: -5.035852909088135
    8. 'n' → logprob: -5.285852909088135
    9. '
' → logprob: -5.660852909088135
    10. '_pe' → logprob: -5.785852909088135

Token 1033: ' parcour' (ID: 130642)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.3269224464893341
    2. 'tr' → logprob: -2.2019224166870117
    3. 'impl' → logprob: -3.3269224166870117
    4. 'contin' → logprob: -3.3269224166870117
    5. 'pré' → logprob: -3.3269224166870117
    6. ' utiliser' → logprob: -3.8269224166870117
    7. 'trait' → logprob: -4.326922416687012
    8. 'pr' → logprob: -5.576922416687012
    9. 'con' → logprob: -5.951922416687012
    10. 'repr' → logprob: -6.576922416687012

Token 1034: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0008894255734048784
    2. 'oir' → logprob: -8.125889778137207
    3. 'er' → logprob: -8.250889778137207
    4. 'r' → logprob: -8.500889778137207
    5. 're' → logprob: -10.000889778137207
    6. 'rir' → logprob: -10.750889778137207
    7. '#' → logprob: -10.875889778137207
    8. '
' → logprob: -11.750889778137207
    9. '```' → logprob: -12.000889778137207
    10. 'i' → logprob: -12.250889778137207

Token 1035: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.4381287097930908
    2. ' l' → logprob: -1.5631287097930908
    3. ' la' → logprob: -2.188128709793091
    4. 'les' → logprob: -2.438128709793091
    5. 'l' → logprob: -2.563128709793091
    6. ' i' → logprob: -2.688128709793091
    7. 'i' → logprob: -2.938128709793091
    8. 'la' → logprob: -3.313128709793091
    9. ' le' → logprob: -3.313128709793091
    10. ' tous' → logprob: -3.938128709793091

Token 1036: ' tramp' (ID: 94418)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8284249305725098
    2. ' tramp' → logprob: -1.8284249305725098
    3. ' indices' → logprob: -1.9534249305725098
    4. 'indices' → logprob: -2.0784249305725098
    5. ' i' → logprob: -2.5784249305725098
    6. 'tr' → logprob: -3.2034249305725098
    7. 'd' → logprob: -5.32842493057251
    8. 'j' → logprob: -6.32842493057251
    9. ' trampoline' → logprob: -6.32842493057251
    10. ' d' → logprob: -6.45342493057251

Token 1037: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.00021212305000517517
    2. 'lines' → logprob: -9.375211715698242
    3. 'l' → logprob: -9.750211715698242
    4. 'oints' → logprob: -10.375211715698242
    5. 'olin' → logprob: -11.625211715698242
    6. 'oines' → logprob: -11.625211715698242
    7. 'oint' → logprob: -12.625211715698242
    8. 'oline' → logprob: -12.625211715698242
    9. 'olini' → logprob: -12.875211715698242
    10. 'o' → logprob: -13.000211715698242

Token 1038: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -6.12258882028982e-05
    2. 'in' → logprob: -11.12506103515625
    3. 'ins' → logprob: -11.25006103515625
    4. 'lines' → logprob: -11.62506103515625
    5. 'aines' → logprob: -12.62506103515625
    6. '
' → logprob: -13.00006103515625
    7. '#' → logprob: -13.12506103515625
    8. 'ains' → logprob: -13.12506103515625
    9. 'INES' → logprob: -13.12506103515625
    10. '```' → logprob: -13.50006103515625

Token 1039: ' et' (ID: 859)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9599586725234985
    2. 'en' → logprob: -1.4599586725234985
    3. 'i' → logprob: -1.9599586725234985
    4. ' i' → logprob: -2.334958553314209
    5. '[i' → logprob: -3.334958553314209
    6. ',' → logprob: -3.459958553314209
    7. 'dans' → logprob: -4.209958553314209
    8. ' suivant' → logprob: -4.709958553314209
    9. ' suivants' → logprob: -4.709958553314209
    10. '   ' → logprob: -4.834958553314209

Token 1040: ' déterminer' (ID: 122024)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.9773577451705933
    2. ' construire' → logprob: -1.3523577451705933
    3. ' maintenir' → logprob: -3.102357864379883
    4. '#' → logprob: -3.102357864379883
    5. ' utiliser' → logprob: -3.227357864379883
    6. ' stock' → logprob: -3.477357864379883
    7. 'util' → logprob: -3.477357864379883
    8. ' créer' → logprob: -3.602357864379883
    9. ' #' → logprob: -4.227357864379883
    10. 'mettre' → logprob: -4.227357864379883

Token 1041: ' la' (ID: 557)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.29173290729522705
    2. ',' → logprob: -2.4167327880859375
    3. 'les' → logprob: -2.6667327880859375
    4. 'la' → logprob: -3.5417327880859375
    5. ' pour' → logprob: -3.6667327880859375
    6. 'le' → logprob: -4.1667327880859375
    7. 'for' → logprob: -4.9167327880859375
    8. 'une' → logprob: -5.5417327880859375
    9. 'l' → logprob: -6.0417327880859375
    10. 'progress' → logprob: -6.1667327880859375

Token 1042: ' portée' (ID: 106795)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -1.5159989595413208
    2. 'plus' → logprob: -1.5159989595413208
    3. 'port' → logprob: -1.7659989595413208
    4. 'me' → logprob: -2.3909988403320312
    5. 'poss' → logprob: -2.7659988403320312
    6. ' plus' → logprob: -3.3909988403320312
    7. 'pro' → logprob: -3.5159988403320312
    8. 'possible' → logprob: -3.8909988403320312
    9. ' plage' → logprob: -4.140998840332031
    10. ' portée' → logprob: -4.390998840332031

Token 1043: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -1.0116945505142212
    2. 'max' → logprob: -1.6366945505142212
    3. 'de' → logprob: -1.7616945505142212
    4. ' de' → logprob: -2.2616944313049316
    5. '_max' → logprob: -2.5116944313049316
    6. ' max' → logprob: -3.0116944313049316
    7. '_' → logprob: -5.011694431304932
    8. ' des' → logprob: -5.761694431304932
    9. ' ' → logprob: -5.761694431304932
    10. ' maximal' → logprob: -5.886694431304932

Token 1044: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6189714670181274
    2. 'max' → logprob: -1.6189714670181274
    3. ' de' → logprob: -2.243971347808838
    4. ' maximale' → logprob: -2.868971347808838
    5. '   ' → logprob: -3.993971347808838
    6. 'du' → logprob: -4.368971347808838
    7. 'possible' → logprob: -4.868971347808838
    8. 'pour' → logprob: -4.993971347808838
    9. ' ' → logprob: -5.368971347808838
    10. '_max' → logprob: -5.368971347808838

Token 1045: ' saut' (ID: 111480)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.9980772733688354
    2. 's' → logprob: -1.1230772733688354
    3. ' saut' → logprob: -2.248077392578125
    4. 'l' → logprob: -2.623077392578125
    5. 'la' → logprob: -3.248077392578125
    6. 'port' → logprob: -4.248077392578125
    7. 'reach' → logprob: -4.498077392578125
    8. 'leur' → logprob: -4.623077392578125
    9. 'ch' → logprob: -4.873077392578125
    10. ' chaque' → logprob: -4.873077392578125

Token 1046: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1419475078582764
    2. ' possible' → logprob: -1.5169475078582764
    3. 'possible' → logprob: -2.3919475078582764
    4. '_possible' → logprob: -2.6419475078582764
    5. ' maximale' → logprob: -2.8919475078582764
    6. ' ' → logprob: -3.3919475078582764
    7. ' max' → logprob: -3.6419475078582764
    8. ' vers' → logprob: -3.7669475078582764
    9. 'max' → logprob: -3.7669475078582764
    10. ',' → logprob: -3.8919475078582764

Token 1047: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03438013046979904
    2. 'l' → logprob: -4.409379959106445
    3. 'le' → logprob: -5.034379959106445
    4. 'dro' → logprob: -5.159379959106445
    5. ' la' → logprob: -5.409379959106445
    6. '```' → logprob: -6.409379959106445
    7. ' ' → logprob: -6.534379959106445
    8. '   ' → logprob: -7.409379959106445
    9. 'i' → logprob: -8.284379959106445
    10. '_la' → logprob: -8.784379959106445

Token 1048: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.0032448475249111652
    2. ' droite' → logprob: -6.003244876861572
    3. 'd' → logprob: -8.128244400024414
    4. ' ' → logprob: -8.253244400024414
    5. 'right' → logprob: -9.128244400024414
    6. '```' → logprob: -9.878244400024414
    7. '   ' → logprob: -10.753244400024414
    8. ' ' → logprob: -12.003244400024414
    9. '-dro' → logprob: -12.503244400024414
    10. 'g' → logprob: -13.003244400024414

Token 1049: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7323203086853027
    2. '.' → logprob: -1.4823203086853027
    3. ',' → logprob: -2.2323203086853027
    4. ':' → logprob: -3.1073203086853027
    5. ' en' → logprob: -3.3573203086853027
    6. '```' → logprob: -4.107320308685303
    7. ' possible' → logprob: -4.232320308685303
    8. ' ' → logprob: -4.232320308685303
    9. 'possible' → logprob: -4.607320308685303
    10. 'en' → logprob: -5.107320308685303

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.441198468208313
    2. ' i' → logprob: -2.0661983489990234
    3. ',' → logprob: -2.3161983489990234
    4. ' ' → logprob: -2.4411983489990234
    5. ' en' → logprob: -2.8161983489990234
    6. ' pour' → logprob: -2.9411983489990234
    7. ':' → logprob: -3.0661983489990234
    8. 'i' → logprob: -3.1911983489990234
    9. 'pour' → logprob: -3.6911983489990234
    10. 'en' → logprob: -3.9411983489990234

Token 1051: ' #' (ID: 1069)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.9490324854850769
    2. '#' (adapté à ' #') → logprob: -1.8240325450897217
    3. 'max' → logprob: -2.0740325450897217
    4. '.' → logprob: -2.6990325450897217
    5. '   ' → logprob: -2.9490325450897217
    6. ',' → logprob: -3.1990325450897217
    7. 'possible' → logprob: -3.1990325450897217
    8. 'en' → logprob: -3.3240325450897217
    9. ' ' → logprob: -3.9490325450897217
    10. 'à' → logprob: -4.324032306671143

Token 1052: ' par' (ID: 686)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.766851544380188
    2. 'i' → logprob: -2.1418514251708984
    3. 'pour' → logprob: -2.2668514251708984
    4. 'possible' → logprob: -2.6418514251708984
    5. 'en' → logprob: -3.0168514251708984
    6. ' ' → logprob: -3.3918514251708984
    7. ',' → logprob: -3.8918514251708984
    8. ' i' → logprob: -4.016851425170898
    9. 'à' → logprob: -4.141851425170898
    10. ' maximale' → logprob: -4.391851425170898

Token 1053: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.587738573551178
    2. '   ' → logprob: -1.8377385139465332
    3. 'un' → logprob: -2.212738513946533
    4. 'une' → logprob: -3.837738513946533
    5. 'rapport' → logprob: -3.962738513946533
    6. 'cour' → logprob: -4.087738513946533
    7. 'indice' → logprob: -4.212738513946533
    8. ' ' → logprob: -4.337738513946533
    9. '#' → logprob: -4.837738513946533
    10. 'pas' → logprob: -5.212738513946533

Token 1054: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0013988018035889
    2. '_' → logprob: -1.6263988018035889
    3. '[i' → logprob: -1.7513988018035889
    4. ' =' → logprob: -2.001398801803589
    5. '[' → logprob: -3.126398801803589
    6. '_max' → logprob: -4.251399040222168
    7. '```' → logprob: -4.876399040222168
    8. ':' → logprob: -5.001399040222168
    9. '.' → logprob: -5.251399040222168
    10. ',' → logprob: -5.626399040222168

Token 1055: ' segment' (ID: 14806)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6920351386070251
    2. ' une' → logprob: -2.31703519821167
    3. 'un' → logprob: -2.69203519821167
    4. 'une' → logprob: -2.81703519821167
    5. ' un' → logprob: -3.19203519821167
    6. 'interval' → logprob: -3.31703519821167
    7. 'two' → logprob: -3.56703519821167
    8. ' bfs' → logprob: -3.56703519821167
    9. ' two' → logprob: -4.19203519821167
    10. 'gre' → logprob: -4.31703519821167

Token 1056: ' tree' (ID: 8165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028477640822529793
    2. '_tree' → logprob: -3.778477668762207
    3. ' _' → logprob: -5.528477668762207
    4. 'tree' → logprob: -8.028477668762207
    5. '_t' → logprob: -8.778477668762207
    6. '_[' → logprob: -8.778477668762207
    7. '_
' → logprob: -8.903477668762207
    8. '[' → logprob: -9.028477668762207
    9. ')' → logprob: -9.903477668762207
    10. ' tree' → logprob: -9.903477668762207

Token 1057: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9548155665397644
    2. '[' → logprob: -1.3298156261444092
    3. 'def' → logprob: -2.204815626144409
    4. '_' → logprob: -2.329815626144409
    5. ':' → logprob: -2.954815626144409
    6. '[
' → logprob: -4.20481538772583
    7. ']' → logprob: -4.70481538772583
    8. '[i' → logprob: -5.07981538772583
    9. ',' → logprob: -5.20481538772583
    10. '.' → logprob: -5.20481538772583

Token 1058: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07272622734308243
    2. ':' → logprob: -4.072726249694824
    3. 'def' → logprob: -4.822726249694824
    4. '_' → logprob: -5.072726249694824
    5. '[' → logprob: -5.447726249694824
    6. '\' → logprob: -5.447726249694824
    7. ' def' → logprob: -5.697726249694824
    8. '#' → logprob: -5.822726249694824
    9. ',' → logprob: -6.072726249694824
    10. '"' → logprob: -6.197726249694824

Token 1059: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40373751521110535
    2. '_' → logprob: -1.7787375450134277
    3. '\' → logprob: -2.7787375450134277
    4. 'def' → logprob: -4.028737545013428
    5. '\n' → logprob: -4.403737545013428
    6. ' ' → logprob: -4.528737545013428
    7. '[' → logprob: -5.028737545013428
    8. '#' → logprob: -5.153737545013428
    9. '_
' → logprob: -5.403737545013428
    10. '    
' → logprob: -5.528737545013428

Token 1060: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00454689608886838
    2. '    
' → logprob: -6.129547119140625
    3. '    ' → logprob: -7.504547119140625
    4. '```' → logprob: -7.879547119140625
    5. '#' → logprob: -8.129547119140625
    6. '[' → logprob: -8.629547119140625
    7. ':' → logprob: -8.754547119140625
    8. 'def' → logprob: -8.754547119140625
    9. '\' → logprob: -9.254547119140625
    10. '       ' → logprob: -9.379547119140625

Token 1061: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025846652686595917
    2. '    
' → logprob: -4.025846481323242
    3. '
' → logprob: -5.525846481323242
    4. 'def' → logprob: -6.025846481323242
    5. '#' (adapté à ' #') → logprob: -7.650846481323242
    6. '```' → logprob: -8.525846481323242
    7. '    
    
' → logprob: -9.525846481323242
    8. '  
' → logprob: -9.525846481323242
    9. '    ' → logprob: -9.900846481323242
    10. 'from' → logprob: -10.025846481323242

Token 1062: ' Str' (ID: 5641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5909402370452881
    2. '   ' → logprob: -1.590940237045288
    3. '"' → logprob: -2.840940237045288
    4. '_' → logprob: -3.340940237045288
    5. '\' → logprob: -3.715940237045288
    6. '\n' → logprob: -3.715940237045288
    7. ':' → logprob: -3.715940237045288
    8. '#' → logprob: -4.590940475463867
    9. '"\' → logprob: -4.590940475463867
    10. ')' → logprob: -4.840940475463867

Token 1063: 'atég' (ID: 25440)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.294014811515808
    2. 'ategy' → logprob: -1.544014811515808
    3. 'atég' → logprob: -1.544014811515808
    4. 'é' → logprob: -2.2940149307250977
    5. 'e' → logprob: -2.2940149307250977
    6. 'uct' → logprob: -4.169014930725098
    7. 'eam' → logprob: -4.169014930725098
    8. 'ateg' → logprob: -4.669014930725098
    9. 'ép' → logprob: -4.794014930725098
    10. 'ess' → logprob: -5.169014930725098

Token 1064: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.4697483479976654
    2. 'e' → logprob: -1.7197483777999878
    3. 'é' → logprob: -2.4697482585906982
    4. 'eg' → logprob: -3.0947482585906982
    5. 'ège' → logprob: -3.4697482585906982
    6. 'gie' → logprob: -4.594748497009277
    7. 'egy' → logprob: -4.719748497009277
    8. 'è' → logprob: -5.594748497009277
    9. 'ég' → logprob: -5.969748497009277
    10. 'ue' → logprob: -6.469748497009277

Token 1065: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07419516146183014
    2. ' :' → logprob: -3.449195146560669
    3. ' =' → logprob: -4.199195384979248
    4. ':
' → logprob: -4.199195384979248
    5. '   ' → logprob: -5.199195384979248
    6. '=' → logprob: -6.074195384979248
    7. ' :
' → logprob: -7.699195384979248
    8. ' ' → logprob: -8.57419490814209
    9. '[' → logprob: -8.94919490814209
    10. 'def' → logprob: -9.19919490814209

Token 1066: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007718668202869594
    2. '    ' → logprob: -7.500771999359131
    3. '    
' → logprob: -9.375771522521973
    4. '#' → logprob: -9.625771522521973
    5. 'for' → logprob: -11.250771522521973
    6. ' for' → logprob: -11.500771522521973
    7. '
' → logprob: -12.000771522521973
    8. ' ' → logprob: -12.000771522521973
    9. 'from' → logprob: -12.375771522521973
    10. '   ' → logprob: -12.375771522521973

Token 1067: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011323550716042519
    2. '#' (adapté à ' #') → logprob: -4.51132345199585
    3. 'for' → logprob: -9.261323928833008
    4. 'def' → logprob: -9.761323928833008
    5. '    
' → logprob: -10.386323928833008
    6. 'from' → logprob: -10.636323928833008
    7. '    ' → logprob: -11.261323928833008
    8. '
' → logprob: -11.636323928833008
    9. 'max' → logprob: -11.886323928833008
    10. ' #' → logprob: -12.136323928833008

Token 1068: ' Constru' (ID: 98396)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.394784152507782
    2. '   ' → logprob: -1.1447842121124268
    3. ' #' → logprob: -5.519783973693848
    4. 'def' → logprob: -6.769783973693848
    5. '```' → logprob: -7.644783973693848
    6. 'dp' → logprob: -7.894783973693848
    7. 'max' → logprob: -8.019783973693848
    8. 'for' → logprob: -8.144783973693848
    9. 'from' → logprob: -8.394783973693848
    10. '    
' → logprob: -8.769783973693848

Token 1069: 'ire' (ID: 594)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8884300589561462
    2. 'ire' → logprob: -0.8884300589561462
    3. 'ct' → logprob: -2.888430118560791
    4. 'ction' → logprob: -3.513430118560791
    5. '#' → logprob: -4.138430118560791
    6. '   ' → logprob: -4.763430118560791
    7. 'ctions' → logprob: -4.888430118560791
    8. 'it' → logprob: -5.013430118560791
    9. 'isons' → logprob: -5.263430118560791
    10. '
' → logprob: -5.388430118560791

Token 1070: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5793351531028748
    2. ' un' → logprob: -1.3293352127075195
    3. 'une' → logprob: -1.8293352127075195
    4. ' une' → logprob: -4.9543352127075195
    5. 'le' → logprob: -6.5793352127075195
    6. ' ' → logprob: -6.9543352127075195
    7. 'la' → logprob: -6.9543352127075195
    8. 'des' → logprob: -7.3293352127075195
    9. '   ' → logprob: -7.7043352127075195
    10. '#' → logprob: -7.8293352127075195

Token 1071: ' grap' (ID: 60955)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5828232169151306
    2. ' segment' → logprob: -1.9578232765197754
    3. 'graph' → logprob: -2.2078232765197754
    4. 'dp' → logprob: -2.7078232765197754
    5. 'table' → logprob: -3.0828232765197754
    6. ' tableau' → logprob: -3.5828232765197754
    7. 'deque' → logprob: -4.582823276519775
    8. 's' → logprob: -4.957823276519775
    9. 'gr' → logprob: -5.207823276519775
    10. ' grap' → logprob: -5.207823276519775

Token 1072: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007104166783392429
    2. 'ph' → logprob: -5.757104396820068
    3. 'he' → logprob: -6.257104396820068
    4. 'aphe' → logprob: -6.882104396820068
    5. ' h' → logprob: -7.882104396820068
    6. '#' → logprob: -8.63210391998291
    7. 'p' → logprob: -9.63210391998291
    8. '
' → logprob: -9.63210391998291
    9. 'phe' → logprob: -9.75710391998291
    10. ' ' → logprob: -9.75710391998291

Token 1073: ' implic' (ID: 48641)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.8267109394073486
    2. ' orient' → logprob: -1.3267109394073486
    3. 'or' → logprob: -1.9517109394073486
    4. '[' → logprob: -3.8267109394073486
    5. ' oriented' → logprob: -3.9517109394073486
    6. '_or' → logprob: -4.4517107009887695
    7. ' =' → logprob: -4.4517107009887695
    8. ' or' → logprob: -4.7017107009887695
    9. ' ' → logprob: -4.8267107009887695
    10. ':' → logprob: -5.0767107009887695

Token 1074: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5718188881874084
    2. 'ité' → logprob: -1.1968188285827637
    3. 'ite' → logprob: -2.6968188285827637
    4. 'é' → logprob: -3.5718188285827637
    5. 'e' → logprob: -4.321818828582764
    6. 't' → logprob: -5.446818828582764
    7. 'u' → logprob: -5.821818828582764
    8. 'ète' → logprob: -6.071818828582764
    9. 'ié' → logprob: -6.196818828582764
    10. 'i' → logprob: -6.321818828582764

Token 1075: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9919082522392273
    2. '_' → logprob: -1.366908311843872
    3. ',' → logprob: -2.366908311843872
    4. ':' → logprob: -2.741908311843872
    5. '[
' → logprob: -3.366908311843872
    6. ' ' → logprob: -3.491908311843872
    7. '.' → logprob: -3.866908311843872
    8. '   ' → logprob: -3.866908311843872
    9. ' =' → logprob: -3.991908311843872
    10. '=' → logprob: -4.366908073425293

Token 1076: ':
' (ID: 734)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.39983418583869934
    2. ' on' → logprob: -1.899834156036377
    3. 'les' → logprob: -3.149834156036377
    4. 'on' → logprob: -3.524834156036377
    5. ' les' → logprob: -4.274834156036377
    6. 'l' → logprob: -4.274834156036377
    7. ' l' → logprob: -4.524834156036377
    8. 'le' → logprob: -4.649834156036377
    9. ' pour' → logprob: -4.774834156036377
    10. ' for' → logprob: -4.774834156036377

Token 1077: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1667671650648117
    2. '   ' → logprob: -2.541767120361328
    3. ' #' → logprob: -3.291767120361328
    4. ' i' → logprob: -3.916767120361328
    5. 'i' → logprob: -4.291767120361328
    6. '    ' → logprob: -7.916767120361328
    7. '[' → logprob: -8.041767120361328
    8. '[i' → logprob: -8.041767120361328
    9. ' indices' → logprob: -8.166767120361328
    10. ' ' → logprob: -8.291767120361328

Token 1078: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2387928068637848
    2. '   ' → logprob: -1.9887927770614624
    3. ' #' → logprob: -3.363792896270752
    4. 'i' → logprob: -3.863792896270752
    5. ' i' → logprob: -4.738792896270752
    6. ' ' → logprob: -6.238792896270752
    7. '[i' → logprob: -6.238792896270752
    8. '[' → logprob: -6.363792896270752
    9. '[
' → logprob: -6.863792896270752
    10. ' =' → logprob: -6.863792896270752

Token 1079: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1310240626335144
    2. ' #' → logprob: -2.631024122238159
    3. '   ' → logprob: -4.00602388381958
    4. 'i' → logprob: -4.25602388381958
    5. ' i' → logprob: -4.88102388381958
    6. ' chaque' → logprob: -6.25602388381958
    7. '[i' → logprob: -6.88102388381958
    8. ' ' → logprob: -7.25602388381958
    9. ' pour' → logprob: -7.25602388381958
    10. '`' → logprob: -7.50602388381958

Token 1080: ' On' (ID: 2160)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5752617120742798
    2. '#' → logprob: -2.2002615928649902
    3. ' pour' → logprob: -2.2002615928649902
    4. 'les' → logprob: -3.5752615928649902
    5. ' les' → logprob: -3.5752615928649902
    6. ' on' → logprob: -3.5752615928649902
    7. 'i' → logprob: -3.7002615928649902
    8. 'Chaque' → logprob: -4.20026159286499
    9. ' for' → logprob: -4.32526159286499
    10. 'pour' → logprob: -4.70026159286499

Token 1081: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.8366377353668213
    2. 'pe' → logprob: -1.4616377353668213
    3. 's' → logprob: -2.9616377353668213
    4. ' construit' → logprob: -3.0866377353668213
    5. 'n' → logprob: -3.5866377353668213
    6. 'maint' → logprob: -3.7116377353668213
    7. 'part' → logprob: -3.8366377353668213
    8. 'est' → logprob: -3.9616377353668213
    9. 'util' → logprob: -4.336637496948242
    10. ' peux' → logprob: -4.711637496948242

Token 1082: ' aller' (ID: 18383)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.6033620238304138
    2. 'aller' → logprob: -1.6033620834350586
    3. 're' → logprob: -3.2283620834350586
    4. 'repr' → logprob: -3.2283620834350586
    5. 'util' → logprob: -3.6033620834350586
    6. 'dire' → logprob: -3.9783620834350586
    7. 's' → logprob: -4.603362083435059
    8. 'part' → logprob: -4.978362083435059
    9. 'faire' → logprob: -4.978362083435059
    10. 'aj' → logprob: -4.978362083435059

Token 1083: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6635368466377258
    2. ' de' → logprob: -1.288536787033081
    3. 'd' → logprob: -3.413536787033081
    4. 'au' → logprob: -3.413536787033081
    5. ' ' → logprob: -3.663536787033081
    6. 'vers' → logprob: -3.913536787033081
    7. 'from' → logprob: -4.28853702545166
    8. '   ' → logprob: -4.41353702545166
    9. 'jus' → logprob: -4.53853702545166
    10. 'à' → logprob: -4.66353702545166

Token 1084: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3875877261161804
    2. ' i' → logprob: -1.1375877857208252
    3. ' ' → logprob: -9.137587547302246
    4. 'un' → logprob: -9.512587547302246
    5. 'l' → logprob: -9.637587547302246
    6. '```' → logprob: -9.637587547302246
    7. ' chaque' → logprob: -9.637587547302246
    8. ' un' → logprob: -9.887587547302246
    9. '`' → logprob: -10.012587547302246
    10. 'j' → logprob: -10.012587547302246

Token 1085: ' à' (ID: 1221)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.08289557695388794
    2. ' vers' → logprob: -3.082895517349243
    3. ' à' → logprob: -3.707895517349243
    4. ' ' → logprob: -5.582895755767822
    5. '   ' → logprob: -6.582895755767822
    6. '->' → logprob: -6.957895755767822
    7. ' -->' → logprob: -7.457895755767822
    8. ' →' → logprob: -7.582895755767822
    9. ' +' → logprob: -8.332895278930664
    10. ' to' → logprob: -8.457895278930664

Token 1086: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5390662550926208
    2. ' i' → logprob: -0.9140662550926208
    3. 'j' → logprob: -4.789066314697266
    4. ' j' → logprob: -5.039066314697266
    5. ' ' → logprob: -7.164066314697266
    6. ' ' → logprob: -9.164066314697266
    7. '`' → logprob: -10.914066314697266
    8. '
' → logprob: -11.039066314697266
    9. ',' → logprob: -11.289066314697266
    10. 'l' → logprob: -11.414066314697266

Token 1087: ' >' (ID: 1424)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ->' → logprob: -1.0929977893829346
    2. 's' → logprob: -2.3429977893829346
    3. ' ' → logprob: -2.3429977893829346
    4. '   ' → logprob: -2.5929977893829346
    5. '[' → logprob: -2.8429977893829346
    6. '+' → logprob: -2.9679977893829346
    7. '[i' → logprob: -3.2179977893829346
    8. ' +' → logprob: -3.2179977893829346
    9. ' (' → logprob: -3.8429977893829346
    10. ' j' → logprob: -3.9679977893829346

Token 1088: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07894079387187958
    2. ' i' → logprob: -2.5789408683776855
    3. ' ' → logprob: -10.328940391540527
    4. '_i' → logprob: -12.203940391540527
    5. '	i' → logprob: -12.578940391540527
    6. ' ' → logprob: -12.953940391540527
    7. 'j' → logprob: -13.453940391540527
    8. '[i' → logprob: -13.453940391540527
    9. '   ' → logprob: -13.828940391540527
    10. '  ' → logprob: -14.453940391540527

Token 1089: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7769296765327454
    2. ' if' → logprob: -1.2769296169281006
    3. ',' → logprob: -2.7769296169281006
    4. ' ' → logprob: -2.9019296169281006
    5. ' s' → logprob: -4.27692985534668
    6. '+' → logprob: -4.40192985534668
    7. '```' → logprob: -4.40192985534668
    8. '[i' → logprob: -4.52692985534668
    9. '[' → logprob: -4.65192985534668
    10. 's' → logprob: -4.77692985534668

Token 1090: ' si' (ID: 1784)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.645957350730896
    2. ' ' → logprob: -2.5209574699401855
    3. ' avec' → logprob: -2.6459574699401855
    4. ' if' → logprob: -2.8959574699401855
    5. 'j' → logprob: -3.1459574699401855
    6. ' si' → logprob: -3.2709574699401855
    7. '   ' → logprob: -3.7709574699401855
    8. ' où' → logprob: -3.8959574699401855
    9. '`' → logprob: -4.1459574699401855
    10. ' s' → logprob: -4.5209574699401855

Token 1091: ' ' (ID: 220)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2299412488937378
    2. 'j' → logprob: -1.3549412488937378
    3. ' d' → logprob: -1.7299412488937378
    4. 'd' → logprob: -1.7299412488937378
    5. '10' → logprob: -2.9799413681030273
    6. ' ' → logprob: -3.9799413681030273
    7. ' (' → logprob: -5.229941368103027
    8. ' min' → logprob: -5.354941368103027
    9. ' i' → logprob: -5.479941368103027
    10. 'min' → logprob: -5.979941368103027

Token 1092: '10' (ID: 702)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.33376240730285645
    2. 'd' → logprob: -2.2087624073028564
    3. ' j' → logprob: -2.5837624073028564
    4. '10' → logprob: -3.2087624073028564
    5. 'i' → logprob: -3.9587624073028564
    6. ' d' → logprob: -4.583762168884277
    7. ' ' → logprob: -4.833762168884277
    8. ' i' → logprob: -4.833762168884277
    9. 'min' → logprob: -5.208762168884277
    10. ' min' → logprob: -6.208762168884277

Token 1093: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.10230378806591034
    2. '*' → logprob: -2.3523037433624268
    3. ' *' → logprob: -6.227303981781006
    4. '*
' → logprob: -9.977303504943848
    5. '(j' → logprob: -10.602303504943848
    6. '*j' → logprob: -11.477303504943848
    7. '(' → logprob: -11.852303504943848
    8. '**' → logprob: -12.227303504943848
    9. ' *(' → logprob: -12.227303504943848
    10. '   ' → logprob: -12.727303504943848

Token 1094: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033510822686366737
    2. '(j' → logprob: -8.250334739685059
    3. ' j' → logprob: -9.625334739685059
    4. 'i' → logprob: -12.375334739685059
    5. '[j' → logprob: -13.750334739685059
    6. ' (' → logprob: -14.000334739685059
    7. '	j' → logprob: -14.750334739685059
    8. ')' → logprob: -15.250334739685059
    9. 'min' → logprob: -15.500334739685059
    10. '   ' → logprob: -16.000335693359375

Token 1095: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16527344286441803
    2. '-' → logprob: -1.9152734279632568
    3. ')' → logprob: -5.915273666381836
    4. ' ' → logprob: -7.165273666381836
    5. '+' → logprob: -7.790273666381836
    6. '   ' → logprob: -8.665273666381836
    7. '*(' → logprob: -9.040273666381836
    8. '  ' → logprob: -9.165273666381836
    9. '*' → logprob: -9.165273666381836
    10. ' (' → logprob: -9.415273666381836

Token 1096: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06200197711586952
    2. ' i' → logprob: -2.812001943588257
    3. ' ' → logprob: -11.062002182006836
    4. '1' → logprob: -11.812002182006836
    5. '_i' → logprob: -12.437002182006836
    6. ')' → logprob: -12.812002182006836
    7. '	i' → logprob: -13.312002182006836
    8. ' ' → logprob: -14.062002182006836
    9. '   ' → logprob: -14.562002182006836
    10. '```' → logprob: -14.812002182006836

Token 1097: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002354832977289334
    2. ')<=' → logprob: -8.500235557556152
    3. ' )' → logprob: -10.625235557556152
    4. '[' → logprob: -13.625235557556152
    5. '")' → logprob: -14.125235557556152
    6. '）' → logprob: -14.250235557556152
    7. '))' → logprob: -14.250235557556152
    8. '')' → logprob: -14.375235557556152
    9. '`)' → logprob: -14.375235557556152
    10. '   ' → logprob: -14.750235557556152

Token 1098: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006253453902900219
    2. '<=' → logprob: -5.131253242492676
    3. ')' → logprob: -8.756253242492676
    4. ')<=' → logprob: -9.256253242492676
    5. ' ' → logprob: -10.381253242492676
    6. ' )' → logprob: -11.381253242492676
    7. '```' → logprob: -11.631253242492676
    8. ' ≤' → logprob: -12.006253242492676
    9. ' ' → logprob: -12.131253242492676
    10. ' <' → logprob: -12.631253242492676

Token 1099: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03431125357747078
    2. 'd' → logprob: -3.534311294555664
    3. ' min' → logprob: -5.409311294555664
    4. ' d' → logprob: -9.659311294555664
    5. '   ' → logprob: -13.034311294555664
    6. 'minimum' → logprob: -13.284311294555664
    7. 'max' → logprob: -13.284311294555664
    8. '	min' → logprob: -13.534311294555664
    9. 'mini' → logprob: -14.284311294555664
    10. ' ' → logprob: -14.409311294555664

Token 1100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04555818811058998
    2. '[j' → logprob: -3.545558214187622
    3. '[' → logprob: -4.170557975769043
    4. ' [' → logprob: -9.295557975769043
    5. '```' → logprob: -10.545557975769043
    6. '[
' → logprob: -10.670557975769043
    7. 'i' → logprob: -10.670557975769043
    8. '\[' → logprob: -11.170557975769043
    9. '   ' → logprob: -11.420557975769043
    10. ''' → logprob: -11.670557975769043

Token 1101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5172146558761597
    2. ')' → logprob: -1.0172146558761597
    3. '])' → logprob: -3.517214775085449
    4. '   ' → logprob: -5.892214775085449
    5. ' and' → logprob: -6.267214775085449
    6. '],' → logprob: -6.392214775085449
    7. '),' → logprob: -6.392214775085449
    8. '[i' → logprob: -7.517214775085449
    9. ')
' → logprob: -7.642214775085449
    10. ')]' → logprob: -7.642214775085449

Token 1102: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8855558633804321
    2. ')' → logprob: -1.7605558633804321
    3. ':' → logprob: -2.0105557441711426
    4. '[' → logprob: -2.8855557441711426
    5. '_' → logprob: -3.3855557441711426
    6. '.' → logprob: -3.7605557441711426
    7. ' ' → logprob: -3.8855557441711426
    8. ',' → logprob: -3.8855557441711426
    9. ']' → logprob: -4.260555744171143
    10. '```' → logprob: -4.385555744171143

Token 1103: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5744670033454895
    2. ' ' → logprob: -1.4494669437408447
    3. 'd' → logprob: -2.0744669437408447
    4. ' d' → logprob: -2.5744669437408447
    5. '   ' → logprob: -8.824466705322266
    6. '  ' → logprob: -9.074466705322266
    7. 'min' → logprob: -10.074466705322266
    8. ' j' → logprob: -10.074466705322266
    9. ' min' → logprob: -10.199466705322266
    10. ' ' → logprob: -10.699466705322266

Token 1104: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5343414545059204
    2. '10' → logprob: -1.1593414545059204
    3. ' d' → logprob: -2.659341335296631
    4. ' ' → logprob: -3.534341335296631
    5. 'min' → logprob: -7.534341335296631
    6. '   ' → logprob: -9.034341812133789
    7. ' min' → logprob: -9.284341812133789
    8. '  ' → logprob: -9.409341812133789
    9. 'j' → logprob: -10.034341812133789
    10. ' j' → logprob: -10.034341812133789

Token 1105: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0006537011358886957
    2. '*' → logprob: -7.6256537437438965
    3. ' *' → logprob: -9.125653266906738
    4. '[j' → logprob: -10.375653266906738
    5. '*[' → logprob: -11.250653266906738
    6. ' *(' → logprob: -11.625653266906738
    7. '*j' → logprob: -13.500653266906738
    8. '(j' → logprob: -13.625653266906738
    9. '   ' → logprob: -14.875653266906738
    10. '*((' → logprob: -15.250653266906738

Token 1106: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004599823441822082
    2. ' j' → logprob: -8.000459671020508
    3. 'i' → logprob: -9.125459671020508
    4. '[j' → logprob: -11.375459671020508
    5. '   ' → logprob: -14.125459671020508
    6. '```' → logprob: -14.125459671020508
    7. ')' → logprob: -14.375459671020508
    8. '	j' → logprob: -14.500459671020508
    9. '(j' → logprob: -15.000459671020508
    10. ' i' → logprob: -15.375459671020508

Token 1107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3949032723903656
    2. '-' → logprob: -1.269903302192688
    3. '[j' → logprob: -3.3949031829833984
    4. '[' → logprob: -5.394903182983398
    5. '[i' → logprob: -5.769903182983398
    6. '-j' → logprob: -6.519903182983398
    7. '+' → logprob: -6.644903182983398
    8. '-i' → logprob: -7.894903182983398
    9. '   ' → logprob: -8.019903182983398
    10. ')' → logprob: -8.769903182983398

Token 1108: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16129997372627258
    2. 'i' → logprob: -1.9112999439239502
    3. ' j' → logprob: -7.036300182342529
    4. ' i' → logprob: -8.911299705505371
    5. '[j' → logprob: -10.536299705505371
    6. '[i' → logprob: -11.786299705505371
    7. '   ' → logprob: -12.536299705505371
    8. '```' → logprob: -12.536299705505371
    9. '	j' → logprob: -12.536299705505371
    10. '_j' → logprob: -12.911299705505371

Token 1109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022152265533804893
    2. ')<=' → logprob: -4.147152423858643
    3. '<=' → logprob: -5.397152423858643
    4. ' <=' → logprob: -7.147152423858643
    5. ' )' → logprob: -8.647151947021484
    6. '[' → logprob: -8.647151947021484
    7. '[j' → logprob: -8.897151947021484
    8. ']<=' → logprob: -9.647151947021484
    9. ']' → logprob: -9.897151947021484
    10. '[])' → logprob: -10.022151947021484

Token 1110: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22588872909545898
    2. '<=' → logprob: -1.600888729095459
    3. ')<=' → logprob: -8.725889205932617
    4. ')' → logprob: -9.350889205932617
    5. ']<=' → logprob: -10.100889205932617
    6. ' <' → logprob: -10.600889205932617
    7. ' ' → logprob: -10.725889205932617
    8. '[' → logprob: -10.725889205932617
    9. '```' → logprob: -10.975889205932617
    10. '<' → logprob: -11.225889205932617

Token 1111: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3484715223312378
    2. ' d' → logprob: -1.2234715223312378
    3. '```' → logprob: -11.348471641540527
    4. ' ' → logprob: -12.348471641540527
    5. ' ' → logprob: -13.223471641540527
    6. '   ' → logprob: -13.223471641540527
    7. 'min' → logprob: -13.348471641540527
    8. ' min' → logprob: -13.598471641540527
    9. '    ' → logprob: -14.473471641540527
    10. '	d' → logprob: -14.848471641540527

Token 1112: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10182610154151917
    2. '[i' → logprob: -2.3518261909484863
    3. ']' → logprob: -7.101826190948486
    4. '[' → logprob: -8.226825714111328
    5. 'j' → logprob: -8.226825714111328
    6. '[
' → logprob: -9.101825714111328
    7. 'i' → logprob: -9.976825714111328
    8. ')' → logprob: -10.601825714111328
    9. '][' → logprob: -11.101825714111328
    10. ' [' → logprob: -11.601825714111328

Token 1113: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1302696317434311
    2. ')' → logprob: -2.6302695274353027
    3. '])' → logprob: -3.2552695274353027
    4. ']
' → logprob: -5.130269527435303
    5. '   ' → logprob: -6.005269527435303
    6. '])
' → logprob: -7.505269527435303
    7. ')
' → logprob: -7.630269527435303
    8. '],' → logprob: -7.755269527435303
    9. ')]' → logprob: -7.755269527435303
    10. '].' → logprob: -9.130270004272461

Token 1114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08708904683589935
    2. '#' → logprob: -3.7120890617370605
    3. '.' → logprob: -4.0870890617370605
    4. '\' → logprob: -4.2120890617370605
    5. '[' → logprob: -5.3370890617370605
    6. '```' → logprob: -5.4620890617370605
    7. '\n' → logprob: -5.7120890617370605
    8. '<|end|>' → logprob: -6.3370890617370605
    9. '    
' → logprob: -6.5870890617370605
    10. ' ' → logprob: -6.7120890617370605

Token 1115: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08594559878110886
    2. '#' → logprob: -3.9609456062316895
    3. '\' → logprob: -4.4609456062316895
    4. ')' → logprob: -4.7109456062316895
    5. '"' → logprob: -5.2109456062316895
    6. 'def' → logprob: -5.5859456062316895
    7. '[' → logprob: -5.5859456062316895
    8. '.' → logprob: -5.7109456062316895
    9. '\n' → logprob: -5.7109456062316895
    10. '       ' → logprob: -6.2109456062316895

Token 1116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013667171820998192
    2. '#' → logprob: -4.638667106628418
    3. '    
' → logprob: -6.763667106628418
    4. ')' → logprob: -7.763667106628418
    5. 'def' → logprob: -8.013667106628418
    6. '       ' → logprob: -8.138667106628418
    7. '<|end|>' → logprob: -8.263667106628418
    8. '.' → logprob: -8.513667106628418
    9. '[' → logprob: -8.638667106628418
    10. '    ' → logprob: -8.763667106628418

Token 1117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006255231332033873
    2. '    
' → logprob: -6.006255149841309
    3. '#' (adapté à ' #') → logprob: -6.256255149841309
    4. 'def' → logprob: -7.381255149841309
    5. ')' → logprob: -7.631255149841309
    6. '
' → logprob: -8.631255149841309
    7. 'from' → logprob: -9.381255149841309
    8. 'import' → logprob: -9.756255149841309
    9. '  
' → logprob: -9.756255149841309
    10. '    ' → logprob: -10.006255149841309

Token 1118: ' Rem' (ID: 6890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25651291012763977
    2. 'def' → logprob: -2.2565128803253174
    3. '\' → logprob: -3.8815128803253174
    4. ')' → logprob: -4.2565131187438965
    5. ':' → logprob: -4.2565131187438965
    6. '[' → logprob: -4.3815131187438965
    7. '#' → logprob: -4.5065131187438965
    8. '_' → logprob: -5.0065131187438965
    9. '[
' → logprob: -5.2565131187438965
    10. '\n' → logprob: -5.3815131187438965

Token 1119: 'arqu' (ID: 45810)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.5631769895553589
    2. 'placer' → logprob: -1.6881769895553589
    3. 'arque' → logprob: -1.8131769895553589
    4. 'pl' → logprob: -2.0631771087646484
    5. 'arqu' → logprob: -2.0631771087646484
    6. 'plac' → logprob: -2.1881771087646484
    7. 'pla' → logprob: -3.3131771087646484
    8. 'place' → logprob: -3.9381771087646484
    9. 'erc' → logprob: -4.688177108764648
    10. 'er' → logprob: -6.313177108764648

Token 1120: 'ons' (ID: 1808)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038206957280635834
    2. 'nts' → logprob: -3.7882070541381836
    3. 'nt' → logprob: -5.038207054138184
    4. 'ques' → logprob: -6.163207054138184
    5. 'q' → logprob: -6.788207054138184
    6. 'r' → logprob: -7.163207054138184
    7. 'ns' → logprob: -7.413207054138184
    8. 'ç' → logprob: -7.663207054138184
    9. '#' → logprob: -7.663207054138184
    10. 'que' → logprob: -7.913207054138184

Token 1121: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.25150951743125916
    2. '_' → logprob: -2.501509428024292
    3. ' ' → logprob: -3.501509428024292
    4. ',' → logprob: -3.626509428024292
    5. ' that' → logprob: -4.001509666442871
    6. ':' → logprob: -4.501509666442871
    7. ' ' → logprob: -4.751509666442871
    8. ' maintenant' → logprob: -5.251509666442871
    9. ' _' → logprob: -5.501509666442871
    10. '[' → logprob: -5.751509666442871

Token 1122: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0503313541412354
    2. ' la' → logprob: -1.5503313541412354
    3. 'la' → logprob: -2.1753313541412354
    4. ' le' → logprob: -2.5503313541412354
    5. 'les' → logprob: -3.1753313541412354
    6. 'pour' → logprob: -3.1753313541412354
    7. 'l' → logprob: -3.8003313541412354
    8. ' pour' → logprob: -3.9253313541412354
    9. ' ' → logprob: -4.175331115722656
    10. ' j' → logprob: -4.175331115722656

Token 1123: ' condition' (ID: 7060)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8507200479507446
    2. ' condition' → logprob: -2.225719928741455
    3. 'max' → logprob: -2.600719928741455
    4. ' plus' → logprob: -2.975719928741455
    5. ' max' → logprob: -3.100719928741455
    6. 'condition' → logprob: -3.100719928741455
    7. ' d' → logprob: -3.350719928741455
    8. 's' → logprob: -3.475719928741455
    9. '#' → logprob: -3.600719928741455
    10. 'd' → logprob: -3.725719928741455

Token 1124: ' ' (ID: 220)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.793750524520874
    2. 's' → logprob: -1.543750524520874
    3. ' s' → logprob: -2.293750524520874
    4. ' de' → logprob: -2.793750524520874
    5. ' est' → logprob: -3.168750524520874
    6. ' ' → logprob: -4.043750762939453
    7. '_' → logprob: -4.293750762939453
    8. ' d' → logprob: -4.418750762939453
    9. 'n' → logprob: -4.418750762939453
    10. 'est' → logprob: -4.668750762939453

Token 1125: '10' (ID: 702)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.0890356302261353
    2. 'd' → logprob: -2.0890355110168457
    3. ' j' → logprob: -2.2140355110168457
    4. '10' → logprob: -2.3390355110168457
    5. 'de' → logprob: -2.9640355110168457
    6. 'j' → logprob: -3.2140355110168457
    7. ' ' → logprob: -3.2140355110168457
    8. ' est' → logprob: -3.3390355110168457
    9. ' d' → logprob: -3.5890355110168457
    10. '#' → logprob: -3.7140355110168457

Token 1126: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.23293335735797882
    2. '*' → logprob: -1.6079334020614624
    3. ' *' → logprob: -5.857933521270752
    4. '*
' → logprob: -6.482933521270752
    5. '(j' → logprob: -6.857933521270752
    6. '`' → logprob: -7.857933521270752
    7. '(' → logprob: -7.982933521270752
    8. '*((' → logprob: -8.107933044433594
    9. '*j' → logprob: -8.107933044433594
    10. '**' → logprob: -8.857933044433594

Token 1127: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.13123609125614166
    2. '(' → logprob: -2.1312360763549805
    3. '(
' → logprob: -6.0062360763549805
    4. '*' → logprob: -7.5062360763549805
    5. ')' → logprob: -7.7562360763549805
    6. ' (' → logprob: -7.8812360763549805
    7. 'j' → logprob: -8.50623607635498
    8. '(i' → logprob: -8.88123607635498
    9. '*(' → logprob: -9.75623607635498
    10. '*j' → logprob: -11.63123607635498

Token 1128: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4949697256088257
    2. '*(' → logprob: -1.1199697256088257
    3. ')' → logprob: -3.3699698448181152
    4. '*)' → logprob: -5.119969844818115
    5. '*
' → logprob: -5.494969844818115
    6. '-' → logprob: -5.619969844818115
    7. '[' → logprob: -5.744969844818115
    8. ')*(' → logprob: -5.744969844818115
    9. ')*' → logprob: -5.994969844818115
    10. ' *' → logprob: -6.119969844818115

Token 1129: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008942607790231705
    2. ' i' → logprob: -4.758942604064941
    3. ')' → logprob: -8.633942604064941
    4. ' ' → logprob: -9.508942604064941
    5. ' ' → logprob: -11.008942604064941
    6. '<|end|>' → logprob: -11.008942604064941
    7. '_i' → logprob: -11.258942604064941
    8. 'j' → logprob: -12.133942604064941
    9. '	i' → logprob: -12.508942604064941
    10. ' )' → logprob: -12.633942604064941

Token 1130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007859884761273861
    2. '*)' → logprob: -5.382859706878662
    3. '*' → logprob: -6.632859706878662
    4. ' )' → logprob: -7.382859706878662
    5. ')*' → logprob: -7.632859706878662
    6. ')<=' → logprob: -7.632859706878662
    7. ' <=' → logprob: -9.88286018371582
    8. '[' → logprob: -10.38286018371582
    9. '*(' → logprob: -10.50786018371582
    10. '<=' → logprob: -10.63286018371582

Token 1131: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0904848575592041
    2. ')' → logprob: -3.215484857559204
    3. '<=' → logprob: -3.340484857559204
    4. '*' → logprob: -5.215484619140625
    5. ')<=' → logprob: -6.590484619140625
    6. ' ' → logprob: -6.715484619140625
    7. ' )' → logprob: -7.215484619140625
    8. '```' → logprob: -7.215484619140625
    9. '*(' → logprob: -8.340484619140625
    10. '*)' → logprob: -8.715484619140625

Token 1132: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012277702800929546
    2. ' d' → logprob: -5.012277603149414
    3. 'min' → logprob: -5.762277603149414
    4. 'max' → logprob: -7.137277603149414
    5. ' min' → logprob: -7.637277603149414
    6. 'N' → logprob: -7.887277603149414
    7. 'j' → logprob: -8.387277603149414
    8. '10' → logprob: -8.637277603149414
    9. ' ' → logprob: -9.137277603149414
    10. ' max' → logprob: -10.137277603149414

Token 1133: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.08508200943470001
    2. '[i' → logprob: -2.7100820541381836
    3. '[' → logprob: -4.335082054138184
    4. '```' → logprob: -7.835082054138184
    5. '[
' → logprob: -7.960082054138184
    6. '\[' → logprob: -8.460082054138184
    7. ']' → logprob: -8.585082054138184
    8. '
' → logprob: -8.960082054138184
    9. '`' → logprob: -9.335082054138184
    10. 'j' → logprob: -9.335082054138184

Token 1134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25707945227622986
    2. '])' → logprob: -2.5070793628692627
    3. ')' → logprob: -2.6320793628692627
    4. '[i' → logprob: -3.0070793628692627
    5. '[j' → logprob: -4.007079601287842
    6. '[' → logprob: -6.007079601287842
    7. '   ' → logprob: -7.257079601287842
    8. ')]' → logprob: -7.632079601287842
    9. '])
' → logprob: -7.882079601287842
    10. ']
' → logprob: -8.007079124450684

Token 1135: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9898428916931152
    2. ':' → logprob: -1.6148428916931152
    3. '[j' → logprob: -2.7398428916931152
    4. '<|end|>' → logprob: -2.7398428916931152
    5. '[' → logprob: -2.8648428916931152
    6. ' continue' → logprob: -3.6148428916931152
    7. ' ' → logprob: -3.7398428916931152
    8. ',' → logprob: -3.8648428916931152
    9. ' )' → logprob: -4.239842891693115
    10. ']' → logprob: -4.239842891693115

Token 1136: ' critique' (ID: 56899)
  Prédit: ' toujours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toujours' → logprob: -0.7516431212425232
    2. 'v' → logprob: -1.876643180847168
    3. ' vér' → logprob: -2.626643180847168
    4. 'tou' → logprob: -2.751643180847168
    5. 'strict' → logprob: -3.251643180847168
    6. ' strict' → logprob: -3.876643180847168
    7. 's' → logprob: -3.876643180847168
    8. '```' → logprob: -4.001643180847168
    9. ' respect' → logprob: -4.376643180847168
    10. 'respect' → logprob: -4.626643180847168

Token 1137: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2060434818267822
    2. '   ' → logprob: -1.5810434818267822
    3. '[j' → logprob: -2.0810434818267822
    4. ':' → logprob: -2.5810434818267822
    5. '[i' → logprob: -2.9560434818267822
    6. '[
' → logprob: -3.0810434818267822
    7. ',' → logprob: -3.2060434818267822
    8. ')' → logprob: -3.7060434818267822
    9. '<|end|>' → logprob: -3.9560434818267822
    10. '.' → logprob: -4.331043243408203

Token 1138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2326194792985916
    2. '\n' → logprob: -3.232619524002075
    3. '"' → logprob: -3.982619524002075
    4. ' j' → logprob: -4.232619285583496
    5. '[
' → logprob: -4.232619285583496
    6. '[' → logprob: -4.357619285583496
    7. '[j' → logprob: -4.607619285583496
    8. '\' → logprob: -4.732619285583496
    9. ')' → logprob: -4.857619285583496
    10. ' ' → logprob: -4.982619285583496

Token 1139: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0451219081878662
    2. '\n' → logprob: -1.6701219081878662
    3. ')' → logprob: -2.045121908187866
    4. '[' → logprob: -2.170121908187866
    5. ':' → logprob: -3.295121908187866
    6. '\' → logprob: -3.545121908187866
    7. '[
' → logprob: -3.670121908187866
    8. ' ' → logprob: -4.170122146606445
    9. ']' → logprob: -4.420122146606445
    10. '[i' → logprob: -4.545122146606445

Token 1140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007672171574085951
    2. '    
' → logprob: -5.882672309875488
    3. '#' → logprob: -6.132672309875488
    4. ')' → logprob: -7.757672309875488
    5. '       ' → logprob: -8.007672309875488
    6. 'def' → logprob: -8.257672309875488
    7. '```' → logprob: -8.382672309875488
    8. '    ' → logprob: -8.882672309875488
    9. '  
' → logprob: -9.132672309875488
    10. '[' → logprob: -9.132672309875488

Token 1141: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008620131760835648
    2. '    
' → logprob: -6.008620262145996
    3. ')' → logprob: -6.883620262145996
    4. '       ' → logprob: -6.883620262145996
    5. '\n' → logprob: -7.383620262145996
    6. '    ' → logprob: -7.758620262145996
    7. '#' (adapté à ' #') → logprob: -7.758620262145996
    8. '[' → logprob: -8.008620262145996
    9. '\' → logprob: -8.008620262145996
    10. '"' → logprob: -8.883620262145996

Token 1142: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6479867100715637
    2. '\n' → logprob: -2.022986650466919
    3. '#' → logprob: -3.022986650466919
    4. '[' → logprob: -3.272986650466919
    5. ')' → logprob: -3.397986650466919
    6. '\' → logprob: -3.522986650466919
    7. ' j' → logprob: -3.647986650466919
    8. 'def' → logprob: -3.772986650466919
    9. '    
' → logprob: -3.897986650466919
    10. 'j' → logprob: -4.397986888885498

Token 1143: ' vérifier' (ID: 93671)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8526815176010132
    2. ' chaque' → logprob: -1.4776815176010132
    3. 'i' → logprob: -1.9776815176010132
    4. ' j' → logprob: -2.8526816368103027
    5. 'v' → logprob: -3.6026816368103027
    6. 'cha' → logprob: -3.8526816368103027
    7. 'impl' → logprob: -4.102681636810303
    8. 'cela' → logprob: -4.102681636810303
    9. ' i' → logprob: -4.477681636810303
    10. 'contin' → logprob: -4.852681636810303

Token 1144: ' si' (ID: 1784)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1083837747573853
    2. ' j' → logprob: -1.2333837747573853
    3. '_' → logprob: -1.9833837747573853
    4. ' ' → logprob: -3.1083836555480957
    5. 'i' → logprob: -3.3583836555480957
    6. '[j' → logprob: -3.3583836555480957
    7. '[' → logprob: -3.9833836555480957
    8. ' la' → logprob: -3.9833836555480957
    9. 'l' → logprob: -4.483383655548096
    10. ' chaque' → logprob: -4.733383655548096

Token 1145: ' on' (ID: 402)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7401374578475952
    2. ' j' → logprob: -1.6151374578475952
    3. '10' → logprob: -2.2401375770568848
    4. 'd' → logprob: -2.3651375770568848
    5. ' ' → logprob: -2.7401375770568848
    6. ' d' → logprob: -3.6151375770568848
    7. 'i' → logprob: -4.490137577056885
    8. ' i' → logprob: -4.615137577056885
    9. ' on' → logprob: -6.240137577056885
    10. ' (' → logprob: -6.740137577056885

Token 1146: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.41733646392822266
    2. ' peut' → logprob: -1.1673364639282227
    3. ' peux' → logprob: -5.417336463928223
    4. 'est' → logprob: -5.542336463928223
    5. 'possible' → logprob: -5.667336463928223
    6. '_' → logprob: -5.667336463928223
    7. '_pe' → logprob: -5.792336463928223
    8. '[' → logprob: -6.542336463928223
    9. 'pour' → logprob: -6.667336463928223
    10. ' ' → logprob: -6.792336463928223

Token 1147: ' atteindre' (ID: 95734)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.7840853333473206
    2. ' sa' → logprob: -1.9090852737426758
    3. 'atte' → logprob: -2.034085273742676
    4. 'contin' → logprob: -2.534085273742676
    5. 's' → logprob: -2.659085273742676
    6. 'sa' → logprob: -3.659085273742676
    7. ' aller' → logprob: -3.909085273742676
    8. ' continuer' → logprob: -4.034085273742676
    9. 're' → logprob: -5.284085273742676
    10. 'all' → logprob: -5.409085273742676

Token 1148: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38022398948669434
    2. '[j' → logprob: -2.0052239894866943
    3. 'le' → logprob: -3.5052239894866943
    4. '[' → logprob: -3.5052239894866943
    5. ' j' → logprob: -3.7552239894866943
    6. '   ' → logprob: -4.255224227905273
    7. ' ' → logprob: -4.380224227905273
    8. '[i' → logprob: -4.380224227905273
    9. ' le' → logprob: -4.505224227905273
    10. 'i' → logprob: -4.755224227905273

Token 1149: ' droite' (ID: 61428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0587116479873657
    2. 'i' → logprob: -1.4337116479873657
    3. 'position' → logprob: -3.183711528778076
    4. ']' → logprob: -3.308711528778076
    5. 's' → logprob: -3.308711528778076
    6. 'pro' → logprob: -3.433711528778076
    7. 'n' → logprob: -3.433711528778076
    8. ')' → logprob: -3.558711528778076
    9. ' ' → logprob: -3.933711528778076
    10. '[' → logprob: -3.933711528778076

Token 1150: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0952156782150269
    2. '[j' → logprob: -1.5952156782150269
    3. '[i' → logprob: -2.0952157974243164
    4. '[' → logprob: -2.5952157974243164
    5. ' ' → logprob: -2.7202157974243164
    6. '   ' → logprob: -3.2202157974243164
    7. ' j' → logprob: -3.8452157974243164
    8. ' ,' → logprob: -3.9702157974243164
    9. ' (' → logprob: -4.470215797424316
    10. ':' → logprob: -4.595215797424316

Token 1151: '’à' (ID: 32891)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.972130537033081
    2. ''' → logprob: -1.722130537033081
    3. ' ' → logprob: -2.222130537033081
    4. '_' → logprob: -2.972130537033081
    5. 'à' → logprob: -3.222130537033081
    6. 'u' → logprob: -3.597130537033081
    7. ''au' → logprob: -3.597130537033081
    8. ' à' → logprob: -3.722130537033081
    9. '`' → logprob: -3.847130537033081
    10. '’à' → logprob: -3.972130537033081

Token 1152: ' un' (ID: 537)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26289311051368713
    2. 'j' → logprob: -1.8878930807113647
    3. 'l' → logprob: -3.5128931999206543
    4. ' N' → logprob: -3.5128931999206543
    5. 'la' → logprob: -5.012893199920654
    6. ' j' → logprob: -5.387893199920654
    7. 'i' → logprob: -6.012893199920654
    8. ' ' → logprob: -6.762893199920654
    9. ' la' → logprob: -7.012893199920654
    10. ' l' → logprob: -7.512893199920654

Token 1153: ' certain' (ID: 4454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6624984741210938
    2. 'position' → logprob: -1.6624984741210938
    3. ' position' → logprob: -2.0374984741210938
    4. ' j' → logprob: -2.1624984741210938
    5. 'j' → logprob: -2.5374984741210938
    6. 'tr' → logprob: -2.9124984741210938
    7. 'indice' → logprob: -3.0374984741210938
    8. ' ' → logprob: -3.1624984741210938
    9. 'certain' → logprob: -3.7874984741210938
    10. 'i' → logprob: -4.287498474121094

Token 1154: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4590229392051697
    2. 'indice' → logprob: -1.4590229988098145
    3. 'index' → logprob: -2.9590229988098145
    4. 'position' → logprob: -4.4590229988098145
    5. 'j' → logprob: -4.5840229988098145
    6. 'point' → logprob: -4.8340229988098145
    7. 'i' → logprob: -5.0840229988098145
    8. ' ' → logprob: -5.0840229988098145
    9. ' indice' → logprob: -5.2090229988098145
    10. '_j' → logprob: -5.3340229988098145

Token 1155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2663749158382416
    2. ' ' → logprob: -2.5163748264312744
    3. ' j' → logprob: -2.8913748264312744
    4. ' ,' → logprob: -3.6413748264312744
    5. 'j' → logprob: -3.7663748264312744
    6. '```' → logprob: -4.7663750648498535
    7. ' ' → logprob: -5.3913750648498535
    8. '_' → logprob: -5.6413750648498535
    9. '[' → logprob: -5.7663750648498535
    10. 'i' → logprob: -5.8913750648498535

Token 1156: ' on' (ID: 402)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.8443020582199097
    2. ' j' → logprob: -0.9693020582199097
    3. ' on' → logprob: -3.094302177429199
    4. ' ' → logprob: -3.344302177429199
    5. '#' → logprob: -3.469302177429199
    6. ',' → logprob: -3.969302177429199
    7. ' i' → logprob: -4.594302177429199
    8. ' #' → logprob: -4.719302177429199
    9. ' ' → logprob: -4.844302177429199
    10. 'il' → logprob: -4.969302177429199

Token 1157: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.4886821508407593
    2. '#' → logprob: -1.6136821508407593
    3. ' peut' → logprob: -1.6136821508407593
    4. ' continue' → logprob: -2.738682270050049
    5. 'do' → logprob: -2.863682270050049
    6. 'pe' → logprob: -2.988682270050049
    7. 'continue' → logprob: -3.363682270050049
    8. '_' → logprob: -3.488682270050049
    9. 'contin' → logprob: -3.738682270050049
    10. ' doit' → logprob: -3.738682270050049

Token 1158: ' impl' (ID: 15443)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.8553163409233093
    2. ' continuer' → logprob: -1.355316400527954
    3. ' utiliser' → logprob: -1.855316400527954
    4. 'util' → logprob: -2.605316400527954
    5. '#' → logprob: -3.605316400527954
    6. ' ' → logprob: -5.105316162109375
    7. '_' → logprob: -5.355316162109375
    8. ' avancer' → logprob: -5.730316162109375
    9. 'maint' → logprob: -5.855316162109375
    10. ''utiliser' → logprob: -5.980316162109375

Token 1159: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.29018640518188477
    2. 'ement' → logprob: -1.5401864051818848
    3. 'é' → logprob: -3.4151864051818848
    4. 'ements' → logprob: -7.415186405181885
    5. 'ém' → logprob: -7.915186405181885
    6. 'ment' → logprob: -8.165185928344727
    7. 'e' → logprob: -8.290185928344727
    8. 'emente' → logprob: -8.290185928344727
    9. 'iquer' → logprob: -8.290185928344727
    10. 'éer' → logprob: -8.415185928344727

Token 1160: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0037276302464306355
    2. 'e' → logprob: -6.253727436065674
    3. 'ent' → logprob: -6.503727436065674
    4. 'enter' → logprob: -8.378727912902832
    5. 'é' → logprob: -10.003727912902832
    6. '   ' → logprob: -11.253727912902832
    7. '```' → logprob: -13.378727912902832
    8. 'entation' → logprob: -13.378727912902832
    9. '#' → logprob: -14.128727912902832
    10. 'éter' → logprob: -14.503727912902832

Token 1161: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2912519574165344
    2. ' une' → logprob: -2.1662518978118896
    3. 'un' → logprob: -2.4162518978118896
    4. 'une' → logprob: -4.291252136230469
    5. '   ' → logprob: -4.541252136230469
    6. '```' → logprob: -4.916252136230469
    7. ' ' → logprob: -5.166252136230469
    8. ' la' → logprob: -6.541252136230469
    9. '`' → logprob: -6.791252136230469
    10. ':' → logprob: -7.291252136230469

Token 1162: ' balay' (ID: 186956)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.21715262532234192
    2. 'segment' → logprob: -2.0921525955200195
    3. ' tableau' → logprob: -3.7171525955200195
    4. 's' → logprob: -4.7171525955200195
    5. ' poin' → logprob: -5.3421525955200195
    6. 'dp' → logprob: -5.9671525955200195
    7. 'ptr' → logprob: -6.2171525955200195
    8. 'max' → logprob: -6.4671525955200195
    9. '```' → logprob: -6.5921525955200195
    10. 'p' → logprob: -6.9671525955200195

Token 1163: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.10685012489557266
    2. 'n' → logprob: -3.7318501472473145
    3. 'ç' → logprob: -3.9818501472473145
    4. 'ance' → logprob: -4.6068501472473145
    5. 'ancement' → logprob: -4.6068501472473145
    6. 'nage' → logprob: -4.8568501472473145
    7. 'ancer' → logprob: -5.1068501472473145
    8. 'er' → logprob: -5.3568501472473145
    9. 'rage' → logprob: -5.4818501472473145
    10. 'anç' → logprob: -6.2318501472473145

Token 1164: ' lin' (ID: 14432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10575852543115616
    2. '_' → logprob: -2.7307584285736084
    3. '<|end|>' → logprob: -4.9807586669921875
    4. '[' → logprob: -5.2307586669921875
    5. ')' → logprob: -5.7307586669921875
    6. ',' → logprob: -6.1057586669921875
    7. ' 
' → logprob: -6.3557586669921875
    8. '  ' → logprob: -6.4807586669921875
    9. '   ' → logprob: -6.4807586669921875
    10. '.' → logprob: -6.4807586669921875

Token 1165: 'é' (ID: 377)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.042326491326093674
    2. 'naire' → logprob: -3.9173264503479004
    3. 'é' → logprob: -4.4173264503479
    4. 'e' → logprob: -5.2923264503479
    5. '#' → logprob: -7.4173264503479
    6. 'ine' → logprob: -7.7923264503479
    7. 'a' → logprob: -8.042326927185059
    8. 'n' → logprob: -8.292326927185059
    9. '   ' → logprob: -8.667326927185059
    10. 'def' → logprob: -8.667326927185059

Token 1166: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.02698677033185959
    2. 'e' → logprob: -4.151986598968506
    3. 'é' → logprob: -5.401986598968506
    4. 'a' → logprob: -6.026986598968506
    5. 'naire' → logprob: -6.526986598968506
    6. '#' → logprob: -7.776986598968506
    7. 'ar' → logprob: -8.401987075805664
    8. 'space' → logprob: -8.526987075805664
    9. 'air' → logprob: -8.901987075805664
    10. '```' → logprob: -9.026987075805664

Token 1167: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4738538265228271
    2. '   ' → logprob: -1.4738538265228271
    3. '_' → logprob: -1.5988538265228271
    4. ',' → logprob: -1.8488538265228271
    5. ')' → logprob: -3.223853826522827
    6. '.' → logprob: -3.973853826522827
    7. '[' → logprob: -3.973853826522827
    8. ':' → logprob: -4.098854064941406
    9. '#' → logprob: -4.223854064941406
    10. '    ' → logprob: -4.598854064941406

Token 1168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10523214191198349
    2. ':' → logprob: -3.4802322387695312
    3. 'def' → logprob: -3.8552322387695312
    4. '\n' → logprob: -4.605232238769531
    5. '    
' → logprob: -4.730232238769531
    6. '
' → logprob: -5.355232238769531
    7. '```' → logprob: -5.855232238769531
    8. '\' → logprob: -5.855232238769531
    9. ')' → logprob: -6.105232238769531
    10. '    ' → logprob: -6.230232238769531

Token 1169: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01913982443511486
    2. '    
' → logprob: -4.519139766693115
    3. '
' → logprob: -6.144139766693115
    4. ':' → logprob: -6.644139766693115
    5. 'def' → logprob: -6.644139766693115
    6. '    ' → logprob: -7.394139766693115
    7. ')' → logprob: -7.394139766693115
    8. '\' → logprob: -7.894139766693115
    9. '\n' → logprob: -7.894139766693115
    10. '```' → logprob: -8.769140243530273

Token 1170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19620482623577118
    2. '    
' → logprob: -2.446204900741577
    3. '\n' → logprob: -3.071204900741577
    4. 'def' → logprob: -4.071204662322998
    5. '\' → logprob: -5.071204662322998
    6. '
' → logprob: -5.321204662322998
    7. '#' → logprob: -6.071204662322998
    8. '    ' → logprob: -6.196204662322998
    9. '  
' → logprob: -6.196204662322998
    10. '    
    
' → logprob: -6.196204662322998

Token 1171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05154963210225105
    2. '\n' → logprob: -3.8015496730804443
    3. ':' → logprob: -4.676549434661865
    4. 'def' → logprob: -5.301549434661865
    5. '    
' → logprob: -5.426549434661865
    6. '\' → logprob: -6.051549434661865
    7. '       ' → logprob: -7.051549434661865
    8. '    ' → logprob: -7.176549434661865
    9. '```' → logprob: -7.176549434661865
    10. '
' → logprob: -7.301549434661865

Token 1172: ' Impl' (ID: 144563)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11332311481237411
    2. '\n' → logprob: -3.613323211669922
    3. 'def' → logprob: -4.238323211669922
    4. '    
' → logprob: -4.363323211669922
    5. '\' → logprob: -4.738323211669922
    6. ':' → logprob: -5.363323211669922
    7. '_' → logprob: -5.488323211669922
    8. '
' → logprob: -5.488323211669922
    9. '#' → logprob: -5.488323211669922
    10. ' ' → logprob: -5.863323211669922

Token 1173: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.2823895812034607
    2. 'é' → logprob: -1.7823896408081055
    3. 'ement' → logprob: -2.6573896408081055
    4. '   ' → logprob: -6.0323896408081055
    5. 'e' → logprob: -6.1573896408081055
    6. '```' → logprob: -6.9073896408081055
    7. 'def' → logprob: -7.0323896408081055
    8. '#' → logprob: -7.5323896408081055
    9. 'ment' → logprob: -8.157389640808105
    10. 'è' → logprob: -9.907389640808105

Token 1174: 'ation' (ID: 387)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.37747523188591003
    2. 'mentation' → logprob: -2.1274752616882324
    3. 'enter' → logprob: -2.2524752616882324
    4. 'entation' → logprob: -3.0024752616882324
    5. 'er' → logprob: -3.8774752616882324
    6. 'ent' → logprob: -4.752475261688232
    7. 'ter' → logprob: -5.502475261688232
    8. 'mented' → logprob: -6.252475261688232
    9. 'ented' → logprob: -6.627475261688232
    10. 'def' → logprob: -7.002475261688232

Token 1175: ' pratique' (ID: 42780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32475265860557556
    2. 'def' → logprob: -2.1997525691986084
    3. ' :' → logprob: -2.4497525691986084
    4. '   ' → logprob: -3.0747525691986084
    5. ':
' → logprob: -4.3247528076171875
    6. '```' → logprob: -5.0747528076171875
    7. ' def' → logprob: -5.5747528076171875
    8. ' :
' → logprob: -5.9497528076171875
    9. ' =' → logprob: -6.4497528076171875
    10. '
' → logprob: -6.5747528076171875

Token 1176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.133260115981102
    2. '   ' → logprob: -2.5082600116729736
    3. ':
' → logprob: -3.3832600116729736
    4. ' :' → logprob: -5.258260250091553
    5. 'def' → logprob: -6.508260250091553
    6. ' :
' → logprob: -7.133260250091553
    7. '):' → logprob: -7.883260250091553
    8. ',' → logprob: -8.133259773254395
    9. '():' → logprob: -8.258259773254395
    10. ' def' → logprob: -8.758259773254395

Token 1177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01110689528286457
    2. '```' → logprob: -5.011106967926025
    3. 'def' → logprob: -5.886106967926025
    4. '    
' → logprob: -7.011106967926025
    5. '
' → logprob: -8.136106491088867
    6. '    ' → logprob: -8.511106491088867
    7. ':' → logprob: -10.011106491088867
    8. '#' → logprob: -10.136106491088867
    9. '``' → logprob: -10.636106491088867
    10. 'for' → logprob: -11.011106491088867

Token 1178: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010534112807363272
    2. '```' → logprob: -7.876053333282471
    3. '#' (adapté à ' #') → logprob: -8.251053810119629
    4. '    
' → logprob: -8.501053810119629
    5. '
' → logprob: -9.001053810119629
    6. 'for' → logprob: -11.001053810119629
    7. 'def' → logprob: -11.251053810119629
    8. 'n' → logprob: -11.501053810119629
    9. '``' → logprob: -11.501053810119629
    10. 'max' → logprob: -12.126053810119629

Token 1179: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23251225054264069
    2. 'def' → logprob: -2.3575122356414795
    3. '```' → logprob: -2.7325122356414795
    4. '    
' → logprob: -4.982512474060059
    5. '#' → logprob: -5.357512474060059
    6. '``' → logprob: -5.607512474060059
    7. '
' → logprob: -5.857512474060059
    8. ':' → logprob: -5.857512474060059
    9. ' i' → logprob: -6.232512474060059
    10. ' 
' → logprob: -6.232512474060059

Token 1180: ' va' (ID: 3423)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.41883385181427
    2. ' peut' → logprob: -1.41883385181427
    3. ' va' → logprob: -1.54383385181427
    4. 'va' → logprob: -2.4188337326049805
    5. ' continue' → logprob: -3.7938337326049805
    6. 'util' → logprob: -4.0438337326049805
    7. ' peux' → logprob: -4.2938337326049805
    8. 'pour' → logprob: -4.2938337326049805
    9. 'continue' → logprob: -4.2938337326049805
    10. ' utilise' → logprob: -4.5438337326049805

Token 1181: ' déterminer' (ID: 122024)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -1.0986475944519043
    2. ' construire' → logprob: -1.5986475944519043
    3. 'contin' → logprob: -1.7236475944519043
    4. ' continuer' → logprob: -2.3486475944519043
    5. ' créer' → logprob: -3.0986475944519043
    6. ' utiliser' → logprob: -3.4736475944519043
    7. '   ' → logprob: -3.8486475944519043
    8. 'util' → logprob: -4.223647594451904
    9. ' ' → logprob: -4.223647594451904
    10. 'maint' → logprob: -4.348647594451904

Token 1182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5423365831375122
    2. 'le' → logprob: -1.6673365831375122
    3. '   ' → logprob: -1.9173365831375122
    4. '_' → logprob: -2.4173364639282227
    5. 'la' → logprob: -2.4173364639282227
    6. ' la' → logprob: -2.6673364639282227
    7. 'for' → logprob: -3.0423364639282227
    8. ' ' → logprob: -3.7923364639282227
    9. 'à' → logprob: -4.667336463928223
    10. '`' → logprob: -4.667336463928223

Token 1183: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.25587940216064453
    2. ' pour' → logprob: -1.6308794021606445
    3. 'for' → logprob: -4.1308794021606445
    4. ' for' → logprob: -4.6308794021606445
    5. 'à' → logprob: -7.0058794021606445
    6. ' ' → logprob: -7.2558794021606445
    7. '   ' → logprob: -7.7558794021606445
    8. 'au' → logprob: -8.505879402160645
    9. '```' → logprob: -8.505879402160645
    10. ',' → logprob: -8.755879402160645

Token 1184: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.12078201770782471
    2. 'cha' → logprob: -2.245781898498535
    3. 'i' → logprob: -5.745781898498535
    4. 'each' → logprob: -6.495781898498535
    5. ' i' → logprob: -7.370781898498535
    6. '   ' → logprob: -7.370781898498535
    7. ' each' → logprob: -7.370781898498535
    8. 'ch' → logprob: -7.620781898498535
    9. ' ' → logprob: -7.995781898498535
    10. ' cha' → logprob: -8.495781898498535

Token 1185: ' trampoline' (ID: 162506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4597807824611664
    2. ' i' → logprob: -1.8347808122634888
    3. ' trampoline' → logprob: -1.8347808122634888
    4. 'tr' → logprob: -3.459780693054199
    5. ' tramp' → logprob: -4.584780693054199
    6. '_' → logprob: -5.959780693054199
    7. 'indice' → logprob: -6.084780693054199
    8. '_tr' → logprob: -7.209780693054199
    9. ' ' → logprob: -7.459780693054199
    10. 'index' → logprob: -7.709780693054199

Token 1186: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07500921189785004
    2. 'i' → logprob: -3.2000091075897217
    3. ' ' → logprob: -3.8250091075897217
    4. ' _' → logprob: -5.950009346008301
    5. ' ,' → logprob: -6.200009346008301
    6. ',' → logprob: -6.450009346008301
    7. ' ' → logprob: -6.700009346008301
    8. '_' → logprob: -6.700009346008301
    9. ' `' → logprob: -7.450009346008301
    10. '_i' → logprob: -8.8250093460083

Token 1187: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08143558353185654
    2. ' le' → logprob: -3.7064356803894043
    3. ' sa' → logprob: -3.8314356803894043
    4. ' l' → logprob: -4.581435680389404
    5. 'le' → logprob: -4.831435680389404
    6. ' son' → logprob: -5.831435680389404
    7. 'la' → logprob: -6.456435680389404
    8. ' ' → logprob: -6.706435680389404
    9. ' jusqu' → logprob: -6.706435680389404
    10. ' les' → logprob: -7.331435680389404

Token 1188: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23233839869499207
    2. ' max' → logprob: -2.6073384284973145
    3. 'next' → logprob: -3.8573384284973145
    4. 'maximum' → logprob: -3.8573384284973145
    5. 'plus' → logprob: -4.2323384284973145
    6. ' maximum' → logprob: -4.6073384284973145
    7. 'right' → logprob: -4.7323384284973145
    8. 'reach' → logprob: -4.7323384284973145
    9. 'dp' → logprob: -4.8573384284973145
    10. 's' → logprob: -5.1073384284973145

Token 1189: ' reachable' (ID: 143580)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0685590505599976
    2. 'reachable' → logprob: -1.5685590505599976
    3. '_at' → logprob: -1.5685590505599976
    4. ' reachable' → logprob: -2.443559169769287
    5. '_re' → logprob: -2.818559169769287
    6. 'reach' → logprob: -4.318559169769287
    7. 'de' → logprob: -4.943559169769287
    8. '_de' → logprob: -5.068559169769287
    9. '_jump' → logprob: -5.193559169769287
    10. 'At' → logprob: -5.193559169769287

Token 1190: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.257046639919281
    2. '_index' → logprob: -2.507046699523926
    3. '_right' → logprob: -3.257046699523926
    4. '_max' → logprob: -4.007046699523926
    5. '_idx' → logprob: -4.632046699523926
    6. '[i' → logprob: -4.882046699523926
    7. '[' → logprob: -5.007046699523926
    8. '_j' → logprob: -5.132046699523926
    9. ' _' → logprob: -5.132046699523926
    10. '_possible' → logprob: -5.382046699523926

Token 1191: ' vers' (ID: 3640)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9427358508110046
    2. ' =' → logprob: -1.0677359104156494
    3. '_' → logprob: -2.1927359104156494
    4. '   ' → logprob: -2.9427359104156494
    5. '=' → logprob: -3.5677359104156494
    6. ' _' → logprob: -4.44273567199707
    7. '  ' → logprob: -4.94273567199707
    8. '[' → logprob: -4.94273567199707
    9. ' à' → logprob: -5.19273567199707
    10. ':' → logprob: -5.31773567199707

Token 1192: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.004335883539170027
    2. ' la' → logprob: -5.629335880279541
    3. 'dro' → logprob: -8.2543363571167
    4. ' ' → logprob: -8.5043363571167
    5. '```' → logprob: -9.5043363571167
    6. ' ' → logprob: -10.1293363571167
    7. 'le' → logprob: -10.1293363571167
    8. 'l' → logprob: -10.2543363571167
    9. '   ' → logprob: -10.3793363571167
    10. '_la' → logprob: -11.0043363571167

Token 1193: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.544244110584259
    2. 'dro' → logprob: -0.919244110584259
    3. 'right' → logprob: -5.169244289398193
    4. ' ' → logprob: -5.169244289398193
    5. '_right' → logprob: -5.669244289398193
    6. ' ' → logprob: -6.544244289398193
    7. ' right' → logprob: -6.919244289398193
    8. ' droit' → logprob: -6.919244289398193
    9. '_d' → logprob: -6.919244289398193
    10. ' _' → logprob: -7.419244289398193

Token 1194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7783512473106384
    2. ' =' → logprob: -0.9033512473106384
    3. '[i' → logprob: -3.903351306915283
    4. ' ' → logprob: -4.028351306915283
    5. ',' → logprob: -4.153351306915283
    6. ':' → logprob: -4.403351306915283
    7. '_' → logprob: -4.653351306915283
    8. '[' → logprob: -4.903351306915283
    9. '_possible' → logprob: -4.903351306915283
    10. '=' → logprob: -5.028351306915283

Token 1195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2922014594078064
    2. ' =' → logprob: -2.792201519012451
    3. ':' → logprob: -3.042201519012451
    4. ',' → logprob: -3.042201519012451
    5. ' i' → logprob: -4.042201519012451
    6. ' ' → logprob: -4.417201519012451
    7. '```' → logprob: -4.417201519012451
    8. ' possible' → logprob: -4.917201519012451
    9. '=' → logprob: -5.042201519012451
    10. 'i' → logprob: -5.042201519012451

Token 1196: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.155079185962677
    2. ' =' → logprob: -3.6550791263580322
    3. ' ' → logprob: -3.6550791263580322
    4. ':' → logprob: -3.7800791263580322
    5. ',' → logprob: -4.280079364776611
    6. '=' → logprob: -4.780079364776611
    7. ' possible' → logprob: -4.905079364776611
    8. '  ' → logprob: -5.405079364776611
    9. 'possible' → logprob: -5.405079364776611
    10. '.' → logprob: -5.405079364776611

Token 1197: ' qu' (ID: 474)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38769084215164185
    2. '   ' → logprob: -2.012690782546997
    3. '=' → logprob: -2.637690782546997
    4. ' ' → logprob: -3.012690782546997
    5. ',' → logprob: -4.262691020965576
    6. '_' → logprob: -4.387691020965576
    7. '[i' → logprob: -4.762691020965576
    8. ':' → logprob: -5.387691020965576
    9. '[' → logprob: -5.762691020965576
    10. 'i' → logprob: -6.137691020965576

Token 1198: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08448315411806107
    2. ''' → logprob: -2.5844831466674805
    3. 'u' → logprob: -6.4594831466674805
    4. ''est' → logprob: -6.7094831466674805
    5. 'i' → logprob: -7.2094831466674805
    6. ''e' → logprob: -7.8344831466674805
    7. '`' → logprob: -8.20948314666748
    8. ''''' → logprob: -8.58448314666748
    9. '```' → logprob: -9.33448314666748
    10. ''''
' → logprob: -9.33448314666748

Token 1199: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.15418186783790588
    2. ' peux' → logprob: -3.154181957244873
    3. '_' → logprob: -3.279181957244873
    4. ' va' → logprob: -4.279181957244873
    5. '[' → logprob: -4.654181957244873
    6. ' can' → logprob: -4.904181957244873
    7. ' pourra' → logprob: -5.404181957244873
    8. ' ' → logprob: -6.154181957244873
    9. '_can' → logprob: -6.154181957244873
    10. ' peu' → logprob: -6.404181957244873

Token 1200: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.048068735748529434
    2. 'util' → logprob: -4.423068523406982
    3. 'ob' → logprob: -5.423068523406982
    4. 'mettre' → logprob: -5.673068523406982
    5. 'aller' → logprob: -5.798068523406982
    6. ' at' → logprob: -5.798068523406982
    7. '   ' → logprob: -6.048068523406982
    8. ' ' → logprob: -6.048068523406982
    9. ' atteindre' → logprob: -6.548068523406982
    10. 'aj' → logprob: -6.798068523406982

Token 1201: ' soigne' (ID: 196385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31988945603370667
    2. ' ' → logprob: -2.819889545440674
    3. ' =' → logprob: -2.944889545440674
    4. ',' → logprob: -3.444889545440674
    5. ':' → logprob: -3.819889545440674
    6. '=' → logprob: -4.194889545440674
    7. '[' → logprob: -4.319889545440674
    8. ' jusqu' → logprob: -4.569889545440674
    9. '[i' → logprob: -4.694889545440674
    10. '.' → logprob: -4.819889545440674

Token 1202: 'usement' (ID: 30201)
  Prédit: 'usement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usement' → logprob: -0.0019498213659971952
    2. 'urement' → logprob: -6.751949787139893
    3. 'use' → logprob: -8.37695026397705
    4. 'u' → logprob: -8.37695026397705
    5. 'ument' → logprob: -9.75195026397705
    6. 'r' → logprob: -9.87695026397705
    7. 'urs' → logprob: -10.37695026397705
    8. '-' → logprob: -10.50195026397705
    9. 'ur' → logprob: -10.62695026397705
    10. '#' → logprob: -11.00195026397705

Token 1203: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12385476380586624
    2. ':' → logprob: -2.998854875564575
    3. ' ' → logprob: -4.248854637145996
    4. ',' → logprob: -4.498854637145996
    5. ' =' → logprob: -4.623854637145996
    6. '.' → logprob: -5.123854637145996
    7. ' :' → logprob: -5.998854637145996
    8. '    
' → logprob: -5.998854637145996
    9. '  ' → logprob: -6.248854637145996
    10. '    ' → logprob: -6.373854637145996

Token 1204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052319467067718506
    2. 'def' → logprob: -3.9273195266723633
    3. '    
' → logprob: -5.427319526672363
    4. ' ' → logprob: -5.677319526672363
    5. '
' → logprob: -5.802319526672363
    6. '_' → logprob: -5.927319526672363
    7. ':' → logprob: -6.052319526672363
    8. ',' → logprob: -6.302319526672363
    9. '    ' → logprob: -6.427319526672363
    10. '\' → logprob: -6.427319526672363

Token 1205: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06455349177122116
    2. 'def' → logprob: -3.1895534992218018
    3. '    
' → logprob: -4.689553260803223
    4. '
' → logprob: -5.189553260803223
    5. '```' → logprob: -6.939553260803223
    6. '\' → logprob: -7.064553260803223
    7. '    ' → logprob: -7.189553260803223
    8. ')' → logprob: -7.189553260803223
    9. ':' → logprob: -7.564553260803223
    10. ' def' → logprob: -8.189553260803223

Token 1206: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5713691711425781
    2. '\n' → logprob: -2.071369171142578
    3. '\' → logprob: -2.196369171142578
    4. 'def' → logprob: -2.946369171142578
    5. ':' → logprob: -2.946369171142578
    6. ' ' → logprob: -4.446369171142578
    7. '```' → logprob: -4.571369171142578
    8. '
' → logprob: -4.821369171142578
    9. '    ' → logprob: -5.071369171142578
    10. ' def' → logprob: -5.196369171142578

Token 1207: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20154500007629395
    2. ' on' → logprob: -2.951545000076294
    3. ' return' → logprob: -3.451545000076294
    4. 'return' → logprob: -3.951545000076294
    5. ' continuer' → logprob: -4.201544761657715
    6. ' for' → logprob: -4.326544761657715
    7. 'on' → logprob: -4.451544761657715
    8. '#' → logprob: -5.076544761657715
    9. 'def' → logprob: -5.326544761657715
    10. 'for' → logprob: -5.451544761657715

Token 1208: ' vérifier' (ID: 93671)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1155076026916504
    2. ' vais' → logprob: -1.4905076026916504
    3. 'contin' → logprob: -2.1155076026916504
    4. ' va' → logprob: -2.4905076026916504
    5. 'continue' → logprob: -2.6155076026916504
    6. ' peux' → logprob: -2.6155076026916504
    7. 'vais' → logprob: -3.6155076026916504
    8. 'va' → logprob: -4.61550760269165
    9. ' pourra' → logprob: -5.24050760269165
    10. '#' → logprob: -5.36550760269165

Token 1209: 'a' (ID: 64)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49236947298049927
    2. ' si' → logprob: -1.8673694133758545
    3. ' if' → logprob: -2.4923694133758545
    4. 'ra' → logprob: -2.8673694133758545
    5. 'si' → logprob: -3.7423694133758545
    6. 's' → logprob: -3.9923694133758545
    7. '-' → logprob: -4.742369651794434
    8. '   ' → logprob: -4.742369651794434
    9. 'if' → logprob: -5.242369651794434
    10. 'r' → logprob: -5.367369651794434

Token 1210: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.4709055721759796
    2. 'si' → logprob: -1.2209055423736572
    3. ' if' → logprob: -4.095905780792236
    4. 'la' → logprob: -4.220905780792236
    5. ',' → logprob: -4.720905780792236
    6. 'if' → logprob: -4.845905780792236
    7. '   ' → logprob: -4.970905780792236
    8. 's' → logprob: -5.220905780792236
    9. ' s' → logprob: -5.720905780792236
    10. 'le' → logprob: -5.720905780792236

Token 1211: ' on' (ID: 402)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.2792701721191406
    2. ' max' → logprob: -1.7792701721191406
    3. 'max' → logprob: -1.9042701721191406
    4. ' on' → logprob: -2.2792701721191406
    5. ' la' → logprob: -2.7792701721191406
    6. ' le' → logprob: -2.9042701721191406
    7. 'N' → logprob: -2.9042701721191406
    8. ' j' → logprob: -3.7792701721191406
    9. ' l' → logprob: -4.404270172119141
    10. 'le' → logprob: -4.404270172119141

Token 1212: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.04042680934071541
    2. ' peut' → logprob: -3.540426731109619
    3. ' peux' → logprob: -5.790426731109619
    4. '_pe' → logprob: -5.790426731109619
    5. 'pour' → logprob: -6.665426731109619
    6. '#' → logprob: -7.290426731109619
    7. ' ' → logprob: -7.790426731109619
    8. 'can' → logprob: -7.915426731109619
    9. '_p' → logprob: -7.915426731109619
    10. '_' → logprob: -8.165427207946777

Token 1213: ' finalement' (ID: 77979)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.1344698667526245
    2. 'aller' → logprob: -2.384469985961914
    3. ' atteindre' → logprob: -4.509469985961914
    4. 're' → logprob: -5.134469985961914
    5. 'contin' → logprob: -5.509469985961914
    6. ' at' → logprob: -6.259469985961914
    7. ' ' → logprob: -6.634469985961914
    8. ' continuer' → logprob: -6.634469985961914
    9. ' aller' → logprob: -7.009469985961914
    10. 'all' → logprob: -7.259469985961914

Token 1214: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.027137143537402153
    2. 'aller' → logprob: -4.152137279510498
    3. ' atteindre' → logprob: -5.402137279510498
    4. 're' → logprob: -5.902137279510498
    5. 'contin' → logprob: -7.402137279510498
    6. ' ' → logprob: -7.652137279510498
    7. 'at' → logprob: -8.15213680267334
    8. ' at' → logprob: -8.40213680267334
    9. '   ' → logprob: -8.77713680267334
    10. ' continuer' → logprob: -9.02713680267334

Token 1215: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6558306813240051
    2. ' N' → logprob: -0.7808306813240051
    3. ' le' → logprob: -4.6558308601379395
    4. ' la' → logprob: -5.7808308601379395
    5. '```' → logprob: -5.9058308601379395
    6. ' ' → logprob: -6.0308308601379395
    7. 'le' → logprob: -6.1558308601379395
    8. 'la' → logprob: -6.9058308601379395
    9. '`' → logprob: -7.7808308601379395
    10. ' l' → logprob: -8.030830383300781

Token 1216: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002453422639518976
    2. ')' → logprob: -7.377453327178955
    3. ' -' → logprob: -7.627453327178955
    4. '[-' → logprob: -7.627453327178955
    5. '[' → logprob: -8.252453804016113
    6. '_' → logprob: -8.627453804016113
    7. '-
' → logprob: -8.627453804016113
    8. ']' → logprob: -10.127453804016113
    9. '−' → logprob: -10.877453804016113
    10. '```' → logprob: -11.002453804016113

Token 1217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009058646392077208
    2. '-' → logprob: -7.375905990600586
    3. ')' → logprob: -8.500905990600586
    4. ' ' → logprob: -10.625905990600586
    5. '>' → logprob: -10.875905990600586
    6. '#' → logprob: -11.625905990600586
    7. '```' → logprob: -11.875905990600586
    8. ' ' → logprob: -12.125905990600586
    9. ' -' → logprob: -12.625905990600586
    10. '`' → logprob: -13.625905990600586

Token 1218: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6590351462364197
    2. ':' → logprob: -1.7840352058410645
    3. '_' → logprob: -2.2840352058410645
    4. 'def' → logprob: -2.5340352058410645
    5. '[' → logprob: -3.4090352058410645
    6. ')' → logprob: -4.1590352058410645
    7. ' def' → logprob: -4.2840352058410645
    8. ':
' → logprob: -4.6590352058410645
    9. '[
' → logprob: -4.9090352058410645
    10. '_
' → logprob: -5.1590352058410645

Token 1219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.754695475101471
    2. 'def' → logprob: -1.1296954154968262
    3. ':' → logprob: -2.004695415496826
    4. ' def' → logprob: -4.379695415496826
    5. '
' → logprob: -4.379695415496826
    6. '    
' → logprob: -4.754695415496826
    7. '_' → logprob: -5.129695415496826
    8. ' :' → logprob: -5.754695415496826
    9. '\' → logprob: -5.879695415496826
    10. ':
' → logprob: -6.004695415496826

Token 1220: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4533034563064575
    2. ':' → logprob: -1.5783034563064575
    3. '   ' → logprob: -2.203303337097168
    4. ' def' → logprob: -3.953303337097168
    5. ' :' → logprob: -5.328303337097168
    6. '\' → logprob: -5.453303337097168
    7. '
' → logprob: -5.453303337097168
    8. ':
' → logprob: -6.078303337097168
    9. ')' → logprob: -6.578303337097168
    10. ' ' → logprob: -6.578303337097168

Token 1221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.063270702958107
    2. 'def' → logprob: -3.3132708072662354
    3. '    
' → logprob: -3.9382708072662354
    4. '
' → logprob: -6.563270568847656
    5. ':' → logprob: -7.438270568847656
    6. '\' → logprob: -7.438270568847656
    7. '  
' → logprob: -7.688270568847656
    8. ')' → logprob: -8.188270568847656
    9. '#' → logprob: -8.188270568847656
    10. '    ' → logprob: -8.438270568847656

Token 1222: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47536468505859375
    2. 'def' → logprob: -1.2253646850585938
    3. '    
' → logprob: -3.6003646850585938
    4. '
' → logprob: -3.7253646850585938
    5. '\' → logprob: -4.350364685058594
    6. '\n' → logprob: -5.100364685058594
    7. ':' → logprob: -5.475364685058594
    8. '  
' → logprob: -6.350364685058594
    9. ' 
' → logprob: -7.100364685058594
    10. '#' → logprob: -7.225364685058594

Token 1223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20859818160533905
    2. 'def' → logprob: -1.8335981369018555
    3. '    
' → logprob: -4.0835981369018555
    4. ':' → logprob: -5.8335981369018555
    5. '#' → logprob: -6.3335981369018555
    6. '  
' → logprob: -7.2085981369018555
    7. '
' → logprob: -7.2085981369018555
    8. '    ' → logprob: -7.4585981369018555
    9. '```' → logprob: -7.4585981369018555
    10. ' def' → logprob: -7.5835981369018555

Token 1224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13531547784805298
    2. 'def' → logprob: -2.510315418243408
    3. '#' (adapté à ' #') → logprob: -4.135315418243408
    4. '    
' → logprob: -4.260315418243408
    5. '
' → logprob: -4.885315418243408
    6. ')' → logprob: -6.635315418243408
    7. '  
' → logprob: -6.885315418243408
    8. '\' → logprob: -7.510315418243408
    9. '_' → logprob: -8.010315895080566
    10. 'i' → logprob: -8.010315895080566

Token 1225: ' Même' (ID: 89628)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3041248619556427
    2. '   ' → logprob: -2.1791248321533203
    3. 'max' → logprob: -2.3041248321533203
    4. '#' → logprob: -4.17912483215332
    5. '    
' → logprob: -4.17912483215332
    6. 'reachable' → logprob: -5.17912483215332
    7. '
' → logprob: -5.42912483215332
    8. 'dp' → logprob: -5.67912483215332
    9. ' reachable' → logprob: -7.30412483215332
    10. 'visited' → logprob: -7.42912483215332

Token 1226: ' rais' (ID: 8690)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5888190865516663
    2. '   ' → logprob: -1.2138190269470215
    3. '_' → logprob: -3.0888190269470215
    4. '\n' → logprob: -3.7138190269470215
    5. '#' → logprob: -4.2138190269470215
    6. ' ' → logprob: -4.7138190269470215
    7. '  ' → logprob: -5.0888190269470215
    8. '.' → logprob: -5.0888190269470215
    9. ')' → logprob: -5.2138190269470215
    10. '\' → logprob: -5.3388190269470215

Token 1227: 'onnement' (ID: 52552)
  Prédit: 'onnement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnement' → logprob: -0.9645419120788574
    2. 'on' → logprob: -1.2145419120788574
    3. 'son' → logprob: -1.2145419120788574
    4. '#' → logprob: -4.464541912078857
    5. '
' → logprob: -6.214541912078857
    6. 'ons' → logprob: -6.339541912078857
    7. 'e' → logprob: -6.589541912078857
    8. '```' → logprob: -7.214541912078857
    9. 'onn' → logprob: -7.464541912078857
    10. '>' → logprob: -7.589541912078857

Token 1228: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4999929666519165
    2. ':' → logprob: -1.3749929666519165
    3. ',' → logprob: -3.124992847442627
    4. 'def' → logprob: -4.249992847442627
    5. '.' → logprob: -4.499992847442627
    6. '[i' → logprob: -4.749992847442627
    7. '  ' → logprob: -4.874992847442627
    8. '#' → logprob: -5.124992847442627
    9. '    ' → logprob: -5.249992847442627
    10. '[' → logprob: -5.374992847442627

Token 1229: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04315550625324249
    2. ' le' → logprob: -4.043155670166016
    3. 'la' → logprob: -4.418155670166016
    4. 'l' → logprob: -4.668155670166016
    5. '#' → logprob: -6.918155670166016
    6. 'sens' → logprob: -7.168155670166016
    7. ' ' → logprob: -8.043155670166016
    8. ' la' → logprob: -8.043155670166016
    9. 'ret' → logprob: -8.168155670166016
    10. ' sens' → logprob: -9.043155670166016

Token 1230: ' retour' (ID: 30714)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.2928345203399658
    2. 'ret' → logprob: -1.5428345203399658
    3. ' retour' → logprob: -4.042834281921387
    4. ' sens' → logprob: -4.667834281921387
    5. 'aller' → logprob: -5.167834281921387
    6. '#' → logprob: -5.542834281921387
    7. 'g' → logprob: -6.667834281921387
    8. 'return' → logprob: -7.042834281921387
    9. ' #' → logprob: -8.167834281921387
    10. ' gauche' → logprob: -8.667834281921387

Token 1231: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9899550676345825
    2. 'def' → logprob: -1.2399550676345825
    3. '   ' → logprob: -1.8649550676345825
    4. ':
' → logprob: -1.9899550676345825
    5. '):' → logprob: -4.489954948425293
    6. '    
' → logprob: -4.739954948425293
    7. '
' → logprob: -5.239954948425293
    8. '):
' → logprob: -5.864954948425293
    9. '":' → logprob: -5.989954948425293
    10. '```' → logprob: -5.989954948425293

Token 1232: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25217434763908386
    2. '#' → logprob: -1.8771743774414062
    3. 'def' → logprob: -4.002174377441406
    4. '    
' → logprob: -4.127174377441406
    5. ' #' → logprob: -4.627174377441406
    6. ' en' → logprob: -5.252174377441406
    7. ' mais' → logprob: -5.377174377441406
    8. '    ' → logprob: -5.877174377441406
    9. ' avec' → logprob: -6.127174377441406
    10. ' ' → logprob: -6.377174377441406

Token 1233: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10795871913433075
    2. ' N' → logprob: -2.9829587936401367
    3. '0' → logprob: -4.982958793640137
    4. 'p' → logprob: -5.482958793640137
    5. ' bas' → logprob: -5.607958793640137
    6. '#' → logprob: -5.732958793640137
    7. 'c' → logprob: -5.732958793640137
    8. 'o' → logprob: -5.732958793640137
    9. 'a' → logprob: -5.982958793640137
    10. 'au' → logprob: -6.107958793640137

Token 1234: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0445127372804563e-05
    2. ' -' → logprob: -11.87501049041748
    3. '#' → logprob: -13.12501049041748
    4. '```' → logprob: -14.37501049041748
    5. '−' → logprob: -15.25001049041748
    6. '-
' → logprob: -15.87501049041748
    7. '–' → logprob: -16.125009536743164
    8. '
' → logprob: -16.250009536743164
    9. 'e' → logprob: -16.625009536743164
    10. '->' → logprob: -17.500009536743164

Token 1235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005070421029813588
    2. '-' → logprob: -7.62550687789917
    3. '2' → logprob: -12.125507354736328
    4. '
' → logprob: -12.250507354736328
    5. '```' → logprob: -13.000507354736328
    6. '#' → logprob: -13.500507354736328
    7. ' ' → logprob: -13.625507354736328
    8. ' ' → logprob: -13.625507354736328
    9. ' -' → logprob: -14.000507354736328
    10. '`' → logprob: -15.250507354736328

Token 1236: ' vers' (ID: 3640)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.438110113143921
    2. ' vers' → logprob: -1.438110113143921
    3. '-' → logprob: -1.688110113143921
    4. 'à' → logprob: -2.063110113143921
    5. ' ' → logprob: -2.563110113143921
    6. ' ->' → logprob: -3.813110113143921
    7. ')' → logprob: -3.813110113143921
    8. 'au' → logprob: -3.813110113143921
    9. ' -' → logprob: -4.1881103515625
    10. '->' → logprob: -4.8131103515625

Token 1237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003661002730950713
    2. ' ' → logprob: -5.753661155700684
    3. 'N' → logprob: -7.753661155700684
    4. ' N' → logprob: -10.878661155700684
    5. ' ' → logprob: -11.128661155700684
    6. '```' → logprob: -12.128661155700684
    7. 'l' → logprob: -12.503661155700684
    8. '1' → logprob: -12.628661155700684
    9. 'le' → logprob: -13.628661155700684
    10. '`' → logprob: -14.003661155700684

Token 1238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. 'N' → logprob: -12.375007629394531
    3. ' ' → logprob: -13.000007629394531
    4. '```' → logprob: -14.375007629394531
    5. '1' → logprob: -15.250007629394531
    6. '۰' → logprob: -16.00000762939453
    7. '`' → logprob: -17.00000762939453
    8. ' ' → logprob: -17.25000762939453
    9. '﻿' → logprob: -17.81250762939453
    10. 'O' → logprob: -17.81250762939453

Token 1239: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13055486977100372
    2. 'def' → logprob: -2.3805549144744873
    3. ':
' → logprob: -4.130554676055908
    4. '
' → logprob: -5.630554676055908
    5. ' def' → logprob: -5.630554676055908
    6. '_' → logprob: -6.630554676055908
    7. ' :' → logprob: -6.755554676055908
    8. '   ' → logprob: -7.005554676055908
    9. '):' → logprob: -7.755554676055908
    10. ':def' → logprob: -7.755554676055908

Token 1240: ' arcs' (ID: 150448)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6305316686630249
    2. 'l' → logprob: -1.380531668663025
    3. 'une' → logprob: -2.3805317878723145
    4. 'i' → logprob: -3.7555317878723145
    5. 'un' → logprob: -3.8805317878723145
    6. 'le' → logprob: -4.0055317878723145
    7. 'les' → logprob: -4.7555317878723145
    8. '```' → logprob: -4.8805317878723145
    9. 'pas' → logprob: -4.8805317878723145
    10. 'g' → logprob: -5.2555317878723145

Token 1241: ' invers' (ID: 38721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759748220443726
    2. 'def' → logprob: -1.7009748220443726
    3. ':
' → logprob: -2.325974941253662
    4. '   ' → logprob: -2.825974941253662
    5. '_' → logprob: -3.700974941253662
    6. '```' → logprob: -3.825974941253662
    7. '):' → logprob: -4.575974941253662
    8. '(
' → logprob: -5.575974941253662
    9. '
' → logprob: -5.700974941253662
    10. '[' → logprob: -5.700974941253662

Token 1242: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0861302614212036
    2. ')' → logprob: -1.3361302614212036
    3. ':' → logprob: -1.4611302614212036
    4. '=' → logprob: -2.961130142211914
    5. 'es' → logprob: -3.961130142211914
    6. '->' → logprob: -4.086130142211914
    7. ')
' → logprob: -4.086130142211914
    8. ']' → logprob: -4.586130142211914
    9. ' ->' → logprob: -4.586130142211914
    10. '   ' → logprob: -4.836130142211914

Token 1243: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47589805722236633
    2. '   ' → logprob: -1.975898027420044
    3. ':' → logprob: -2.225898027420044
    4. '
' → logprob: -2.725898027420044
    5. ':
' → logprob: -3.600898027420044
    6. '    
' → logprob: -4.225898265838623
    7. '\n' → logprob: -5.350898265838623
    8. '\' → logprob: -6.225898265838623
    9. '):' → logprob: -6.350898265838623
    10. '_' → logprob: -6.600898265838623

Token 1244: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3968363404273987
    2. 'def' → logprob: -1.896836280822754
    3. ':' → logprob: -2.146836280822754
    4. '
' → logprob: -3.771836280822754
    5. '    
' → logprob: -4.521836280822754
    6. '\' → logprob: -5.021836280822754
    7. ':
' → logprob: -5.271836280822754
    8. ' def' → logprob: -5.646836280822754
    9. '\n' → logprob: -6.271836280822754
    10. '):' → logprob: -6.521836280822754

Token 1245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7424418330192566
    2. 'def' → logprob: -0.7424418330192566
    3. '    
' → logprob: -3.4924418926239014
    4. '
' → logprob: -4.242441654205322
    5. '```' → logprob: -7.242441654205322
    6. 'dp' → logprob: -7.617441654205322
    7. '\' → logprob: -7.992441654205322
    8. '  
' → logprob: -8.24244213104248
    9. '

' → logprob: -8.36744213104248
    10. '   
' → logprob: -8.61744213104248

Token 1246: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08754315972328186
    2. 'N' → logprob: -3.587543249130249
    3. '#' (adapté à ' #') → logprob: -4.33754301071167
    4. 'max' → logprob: -4.33754301071167
    5. 'reachable' → logprob: -4.58754301071167
    6. '    
' → logprob: -5.08754301071167
    7. 'dp' → logprob: -5.46254301071167
    8. 'n' → logprob: -5.96254301071167
    9. 'visited' → logprob: -6.08754301071167
    10. 'def' → logprob: -6.21254301071167

Token 1247: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.176003098487854
    2. 'N' → logprob: -2.4260029792785645
    3. '#' → logprob: -3.9260029792785645
    4. 'max' → logprob: -4.0510029792785645
    5. 'dp' → logprob: -4.4260029792785645
    6. 'reachable' → logprob: -4.4260029792785645
    7. 'def' → logprob: -6.0510029792785645
    8. '    
' → logprob: -6.0510029792785645
    9. 'visited' → logprob: -6.0510029792785645
    10. 'n' → logprob: -6.6760029792785645

Token 1248: ' qui' (ID: 2780)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6008776426315308
    2. 'def' → logprob: -1.1008776426315308
    3. ' can' → logprob: -2.2258777618408203
    4. 'reachable' → logprob: -5.85087776184082
    5. ' bfs' → logprob: -6.10087776184082
    6. ' def' → logprob: -6.35087776184082
    7. ' reachable' → logprob: -6.60087776184082
    8. 'dfs' → logprob: -7.72587776184082
    9. 'max' → logprob: -7.72587776184082
    10. ' max' → logprob: -7.85087776184082

Token 1249: ' calc' (ID: 25691)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.3816191852092743
    2. ' dé' → logprob: -2.8816192150115967
    3. ' permet' → logprob: -3.0066192150115967
    4. 'def' → logprob: -3.0066192150115967
    5. 'dé' → logprob: -3.1316192150115967
    6. 'v' → logprob: -3.7566192150115967
    7. ' prend' → logprob: -4.131618976593018
    8. ' trouve' → logprob: -4.381618976593018
    9. ' retourne' → logprob: -4.631618976593018
    10. ' calc' → logprob: -4.756618976593018

Token 1250: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.2550930082798004
    2. 'ul' → logprob: -1.630092978477478
    3. 'ulate' → logprob: -4.005093097686768
    4. 'ulte' → logprob: -5.755093097686768
    5. 'cule' → logprob: -6.630093097686768
    6. 'alc' → logprob: -6.630093097686768
    7. 'uler' → logprob: -6.630093097686768
    8. 'alculate' → logprob: -7.255093097686768
    9. 'ulé' → logprob: -7.505093097686768
    10. 'def' → logprob: -7.505093097686768

Token 1251: ' si' (ID: 1784)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9407951235771179
    2. ' le' → logprob: -1.1907951831817627
    3. '_max' → logprob: -2.6907951831817627
    4. '   ' → logprob: -2.8157951831817627
    5. '_le' → logprob: -2.8157951831817627
    6. 'max' → logprob: -3.3157951831817627
    7. ' max' → logprob: -3.6907951831817627
    8. '_' → logprob: -4.315794944763184
    9. 'le' → logprob: -4.565794944763184
    10. ' ' → logprob: -4.690794944763184

Token 1252: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.9882263541221619
    2. 'possible' → logprob: -1.2382264137268066
    3. ' on' → logprob: -1.7382264137268066
    4. ' possible' → logprob: -2.7382264137268066
    5. 'reachable' → logprob: -3.8632264137268066
    6. 'le' → logprob: -4.113226413726807
    7. 'can' → logprob: -4.113226413726807
    8. 'def' → logprob: -4.488226413726807
    9. 'la' → logprob: -5.113226413726807
    10. ' reachable' → logprob: -5.363226413726807

Token 1253: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.10829360783100128
    2. '_pe' → logprob: -2.4832935333251953
    3. ' peut' → logprob: -4.233293533325195
    4. '_' → logprob: -6.608293533325195
    5. ' peux' → logprob: -7.108293533325195
    6. 'est' → logprob: -7.108293533325195
    7. ' ' → logprob: -7.608293533325195
    8. '_p' → logprob: -8.108293533325195
    9. '_can' → logprob: -8.108293533325195
    10. ' pe' → logprob: -8.983293533325195

Token 1254: ' aller' (ID: 18383)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.5059152841567993
    2. '_re' → logprob: -1.6309152841567993
    3. '_at' → logprob: -2.0059151649475098
    4. 're' → logprob: -3.3809151649475098
    5. ' atteindre' → logprob: -4.63091516494751
    6. '_' → logprob: -5.13091516494751
    7. 'at' → logprob: -5.13091516494751
    8. 'reach' → logprob: -5.50591516494751
    9. ' at' → logprob: -6.38091516494751
    10. 'aller' → logprob: -6.50591516494751

Token 1255: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.6316131949424744
    2. '_' → logprob: -1.7566132545471191
    3. 'de' → logprob: -2.131613254547119
    4. ' de' → logprob: -2.506613254547119
    5. '_right' → logprob: -3.381613254547119
    6. '_from' → logprob: -4.256613254547119
    7. 'jus' → logprob: -4.631613254547119
    8. ' ' → logprob: -4.881613254547119
    9. '   ' → logprob: -5.506613254547119
    10. ' _' → logprob: -5.631613254547119

Token 1256: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7720115184783936
    2. ' start' → logprob: -1.8970115184783936
    3. ' i' → logprob: -2.1470115184783936
    4. 'un' → logprob: -2.2720115184783936
    5. 'l' → logprob: -2.3970115184783936
    6. ' gauche' → logprob: -2.3970115184783936
    7. 'start' → logprob: -2.7720115184783936
    8. ' l' → logprob: -2.7720115184783936
    9. ' un' → logprob: -2.8970115184783936
    10. ' ' → logprob: -4.522011756896973

Token 1257: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7973744869232178
    2. '_to' → logprob: -1.2973744869232178
    3. ' _' → logprob: -2.4223744869232178
    4. 'à' → logprob: -2.6723744869232178
    5. ' vers' → logprob: -3.4223744869232178
    6. ' à' → logprob: -3.4223744869232178
    7. '```' → logprob: -3.7973744869232178
    8. '   ' → logprob: -4.797374725341797
    9. ' ' → logprob: -4.922374725341797
    10. '_a' → logprob: -5.797374725341797

Token 1258: ' goal' (ID: 8583)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.4290967583656311
    2. 'end' → logprob: -1.0540966987609863
    3. ' ' → logprob: -8.554097175598145
    4. ' stop' → logprob: -9.679097175598145
    5. 'stop' → logprob: -9.804097175598145
    6. 'dest' → logprob: -10.929097175598145
    7. ' finish' → logprob: -11.554097175598145
    8. ' target' → logprob: -11.679097175598145
    9. 'finish' → logprob: -11.804097175598145
    10. 'target' → logprob: -11.929097175598145

Token 1259: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06155022978782654
    2. '(start' → logprob: -3.9365501403808594
    3. ' def' → logprob: -4.311550140380859
    4. ' (' → logprob: -4.811550140380859
    5. '```' → logprob: -5.811550140380859
    6. ':' → logprob: -6.061550140380859
    7. '
' → logprob: -6.186550140380859
    8. '(
' → logprob: -6.561550140380859
    9. '_start' → logprob: -6.686550140380859
    10. '(n' → logprob: -6.811550140380859

Token 1260: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1200765371322632
    2. 'la' → logprob: -1.4950765371322632
    3. 'un' → logprob: -1.8700765371322632
    4. 'le' → logprob: -2.6200766563415527
    5. 'une' → logprob: -2.8700766563415527
    6. ' la' → logprob: -3.2450766563415527
    7. ' un' → logprob: -3.8700766563415527
    8. ' une' → logprob: -3.8700766563415527
    9. 'l' → logprob: -4.120076656341553
    10. 'sens' → logprob: -4.370076656341553

Token 1261: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4923553466796875
    2. 'direction' → logprob: -1.4923553466796875
    3. 'pl' → logprob: -2.2423553466796875
    4. 'port' → logprob: -2.4923553466796875
    5. 'range' → logprob: -2.6173553466796875
    6. ' direction' → logprob: -2.7423553466796875
    7. 'fonction' → logprob: -2.9923553466796875
    8. 'liste' → logprob: -3.1173553466796875
    9. ' portée' → logprob: -3.4923553466796875
    10. ' plage' → logprob: -3.9923553466796875

Token 1262: ' donnée' (ID: 130126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2179166078567505
    2. ' (' → logprob: -2.592916488647461
    3. '(start' → logprob: -2.592916488647461
    4. '(n' → logprob: -4.717916488647461
    5. ' def' → logprob: -5.342916488647461
    6. ':' → logprob: -5.342916488647461
    7. '   ' → logprob: -5.342916488647461
    8. '(N' → logprob: -5.717916488647461
    9. '
' → logprob: -6.092916488647461
    10. '(direction' → logprob: -6.092916488647461

Token 1263: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053193166851997375
    2. '(N' → logprob: -4.178193092346191
    3. '(n' → logprob: -5.053193092346191
    4. ':' → logprob: -5.178193092346191
    5. '(direction' → logprob: -5.178193092346191
    6. '(start' → logprob: -5.553193092346191
    7. '
' → logprob: -6.053193092346191
    8. '   ' → logprob: -6.178193092346191
    9. ' (' → logprob: -6.303193092346191
    10. '(s' → logprob: -6.803193092346191

Token 1264: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00554203987121582
    2. '   ' → logprob: -6.005541801452637
    3. '```' → logprob: -6.630541801452637
    4. '
' → logprob: -8.005541801452637
    5. ':
' → logprob: -8.505541801452637
    6. ' (' → logprob: -8.505541801452637
    7. ':' → logprob: -8.755541801452637
    8. ' def' → logprob: -8.880541801452637
    9. '(n' → logprob: -8.880541801452637
    10. '(start' → logprob: -8.880541801452637

Token 1265: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009503662586212158
    2. '
' → logprob: -4.7595038414001465
    3. ' def' → logprob: -7.2595038414001465
    4. '```' → logprob: -9.384503364562988
    5. '   ' → logprob: -9.634503364562988
    6. '    
' → logprob: -11.509503364562988
    7. ':def' → logprob: -12.384503364562988
    8. '  
' → logprob: -12.384503364562988
    9. '
' → logprob: -12.759503364562988
    10. '(def' → logprob: -13.259503364562988

Token 1266: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013339745812118053
    2. '
' → logprob: -4.638339519500732
    3. ' def' → logprob: -6.013339519500732
    4. '   ' → logprob: -7.388339519500732
    5. '    
' → logprob: -8.51333999633789
    6. '  
' → logprob: -8.88833999633789
    7. '```' → logprob: -9.63833999633789
    8. ' 
' → logprob: -10.13833999633789
    9. ':' → logprob: -11.38833999633789
    10. '   
' → logprob: -11.76333999633789

Token 1267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5077518224716187
    2. ':' → logprob: -1.8827518224716187
    3. ',' → logprob: -2.382751941680908
    4. ' =' → logprob: -2.507751941680908
    5. '):' → logprob: -3.132751941680908
    6. 'def' → logprob: -4.882751941680908
    7. '):
' → logprob: -5.382751941680908
    8. ' :' → logprob: -5.382751941680908
    9. '   ' → logprob: -5.632751941680908
    10. ')' → logprob: -5.757751941680908

Token 1268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3167169988155365
    2. '"' → logprob: -1.9417170286178589
    3. ' ' → logprob: -2.3167169094085693
    4. ' "' → logprob: -3.6917169094085693
    5. ' '' → logprob: -6.441717147827148
    6. ''' → logprob: -6.816717147827148
    7. ' True' → logprob: -7.066717147827148
    8. 'True' → logprob: -7.691717147827148
    9. '">' → logprob: -9.191717147827148
    10. ' +' → logprob: -9.441717147827148

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01723431795835495
    2. '"' → logprob: -4.5172343254089355
    3. ' ' → logprob: -5.1422343254089355
    4. ''' → logprob: -8.767233848571777
    5. ' "' → logprob: -9.142233848571777
    6. 'True' → logprob: -10.392233848571777
    7. ' '' → logprob: -11.767233848571777
    8. '+' → logprob: -12.267233848571777
    9. ' True' → logprob: -12.267233848571777
    10. ' +' → logprob: -12.517233848571777

Token 1270: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21609556674957275
    2. 'def' → logprob: -1.7160955667495728
    3. ':
' → logprob: -5.091095447540283
    4. ' def' → logprob: -5.591095447540283
    5. ':def' → logprob: -6.216095447540283
    6. ' :' → logprob: -7.216095447540283
    7. ',' → logprob: -7.341095447540283
    8. '):' → logprob: -7.966095447540283
    9. '   ' → logprob: -8.966095924377441
    10. '
' → logprob: -9.091095924377441

Token 1271: 'aller' (ID: 11605)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7777920961380005
    2. ')' → logprob: -1.1527920961380005
    3. '"' → logprob: -2.527791976928711
    4. 'def' → logprob: -3.152791976928711
    5. 'all' → logprob: -3.902791976928711
    6. 'forward' → logprob: -4.402791976928711
    7. ''' → logprob: -4.777791976928711
    8. ' right' → logprob: -4.902791976928711
    9. 'aller' → logprob: -5.152791976928711
    10. ''all' → logprob: -5.152791976928711

Token 1272: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004288880620151758
    2. ')
' → logprob: -7.004288673400879
    3. '):' → logprob: -7.129288673400879
    4. ' )' → logprob: -7.254288673400879
    5. '):
' → logprob: -7.379288673400879
    6. '),' → logprob: -7.754288673400879
    7. '   ' → logprob: -8.254288673400879
    8. ' ou' → logprob: -8.629288673400879
    9. ',' → logprob: -8.879288673400879
    10. ' or' → logprob: -9.754288673400879

Token 1273: ' gauche' (ID: 58367)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4633796513080597
    2. 'start' → logprob: -1.3383796215057373
    3. ' ' → logprob: -3.4633796215057373
    4. ',' → logprob: -3.5883796215057373
    5. ')' → logprob: -3.9633796215057373
    6. '1' → logprob: -4.213379859924316
    7. '0' → logprob: -5.213379859924316
    8. ' ,' → logprob: -5.588379859924316
    9. ' )' → logprob: -5.713379859924316
    10. ',start' → logprob: -7.463379859924316

Token 1274: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07079664617776871
    2. ' vers' → logprob: -2.9457967281341553
    3. 'à' → logprob: -4.320796489715576
    4. ' to' → logprob: -7.320796489715576
    5. ')' → logprob: -7.445796489715576
    6. ',' → logprob: -7.445796489715576
    7. ' ' → logprob: -8.445796966552734
    8. ' ' → logprob: -8.945796966552734
    9. 'vers' → logprob: -9.195796966552734
    10. 'to' → logprob: -9.945796966552734

Token 1275: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.21794192492961884
    2. 'dro' → logprob: -1.7179418802261353
    3. 'right' → logprob: -4.717941761016846
    4. ' right' → logprob: -5.217941761016846
    5. 'N' → logprob: -7.342941761016846
    6. ' N' → logprob: -7.717941761016846
    7. ' ' → logprob: -7.842941761016846
    8. '1' → logprob: -9.342942237854004
    9. '0' → logprob: -9.467942237854004
    10. ' dro' → logprob: -9.717942237854004

Token 1276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021804844960570335
    2. ')
' → logprob: -4.1468048095703125
    3. '):
' → logprob: -6.1468048095703125
    4. '):' → logprob: -6.3968048095703125
    5. '),' → logprob: -7.1468048095703125
    6. '   ' → logprob: -7.6468048095703125
    7. 'def' → logprob: -8.396804809570312
    8. ')

' → logprob: -8.646804809570312
    9. ',' → logprob: -9.271804809570312
    10. ' )' → logprob: -9.646804809570312

Token 1277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.181308388710022
    2. 'def' → logprob: -1.306308388710022
    3. '(direction' → logprob: -1.431308388710022
    4. 'direction' → logprob: -2.8063082695007324
    5. '```' → logprob: -3.4313082695007324
    6. '):
' → logprob: -4.056308269500732
    7. ',' → logprob: -4.181308269500732
    8. '):' → logprob: -4.306308269500732
    9. ':' → logprob: -4.556308269500732
    10. '=' → logprob: -4.931308269500732

Token 1278: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8407366871833801
    2. '   ' → logprob: -1.4657366275787354
    3. '(direction' → logprob: -1.8407366275787354
    4. 'direction' → logprob: -2.5907366275787354
    5. '=' → logprob: -3.3407366275787354
    6. ',' → logprob: -3.4657366275787354
    7. '):' → logprob: -4.9657368659973145
    8. '(
' → logprob: -5.3407368659973145
    9. '```' → logprob: -5.3407368659973145
    10. ' =' → logprob: -5.4657368659973145

Token 1279: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6785925030708313
    2. 'direction' → logprob: -1.0535924434661865
    3. ' direction' → logprob: -3.1785924434661865
    4. ':' → logprob: -3.5535924434661865
    5. '   ' → logprob: -3.9285924434661865
    6. ' def' → logprob: -4.303592681884766
    7. '(direction' → logprob: -4.428592681884766
    8. ')' → logprob: -5.053592681884766
    9. '):' → logprob: -5.178592681884766
    10. '=' → logprob: -5.428592681884766

Token 1280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04869024083018303
    2. ' =' → logprob: -3.0486903190612793
    3. 'def' → logprob: -9.673689842224121
    4. ')' → logprob: -11.048689842224121
    5. '=True' → logprob: -12.048689842224121
    6. '   ' → logprob: -12.298689842224121
    7. '=
' → logprob: -12.548689842224121
    8. ' def' → logprob: -13.298689842224121
    9. ' ' → logprob: -13.423689842224121
    10. ',' → logprob: -13.423689842224121

Token 1281: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016412507742643356
    2. '1' → logprob: -4.516412734985352
    3. ' -' → logprob: -5.391412734985352
    4. ' ' → logprob: -7.141412734985352
    5. '   ' → logprob: -13.766412734985352
    6. '−' → logprob: -14.266412734985352
    7. '=' → logprob: -14.891412734985352
    8. '+' → logprob: -15.266412734985352
    9. '```' → logprob: -16.01641273498535
    10. ')' → logprob: -16.01641273498535

Token 1282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011021859245374799
    2. ' ' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.375110626220703
    4. '=' → logprob: -14.500110626220703
    5. ' ' → logprob: -16.875110626220703
    6. '  ' → logprob: -17.125110626220703
    7. '<|end|>' → logprob: -17.500110626220703
    8. ')' → logprob: -17.875110626220703
    9. '	' → logprob: -18.125110626220703
    10. ' =' → logprob: -18.375110626220703

Token 1283: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09592780470848083
    2. '
' → logprob: -2.8459277153015137
    3. ' def' → logprob: -4.970927715301514
    4. '   ' → logprob: -4.970927715301514
    5. ':' → logprob: -5.095927715301514
    6. ' (' → logprob: -6.095927715301514
    7. '=' → logprob: -6.095927715301514
    8. '):
' → logprob: -6.220927715301514
    9. ':
' → logprob: -6.845927715301514
    10. ' =' → logprob: -6.970927715301514

Token 1284: 'ret' (ID: 3431)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33603134751319885
    2. 'aller' → logprob: -2.711031436920166
    3. ')' → logprob: -2.836031436920166
    4. ' aller' → logprob: -3.086031436920166
    5. 'start' → logprob: -3.211031436920166
    6. ' ' → logprob: -3.836031436920166
    7. 'right' → logprob: -4.086031436920166
    8. 'all' → logprob: -4.711031436920166
    9. ''aller' → logprob: -5.336031436920166
    10. ' start' → logprob: -5.711031436920166

Token 1285: 'our' (ID: 401)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.005376641638576984
    2. 'our' → logprob: -6.255376815795898
    3. 'ur' → logprob: -6.505376815795898
    4. 'u' → logprob: -7.255376815795898
    5. ')' → logprob: -8.255376815795898
    6. 'un' → logprob: -8.380376815795898
    7. '=' → logprob: -9.255376815795898
    8. 'turn' → logprob: -9.255376815795898
    9. '1' → logprob: -9.380376815795898
    10. 'er' → logprob: -9.755376815795898

Token 1286: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23208653926849365
    2. '):
' → logprob: -2.482086658477783
    3. '):' → logprob: -2.982086658477783
    4. '=' → logprob: -2.982086658477783
    5. '   ' → logprob: -4.107086658477783
    6. 'def' → logprob: -6.357086658477783
    7. '):

' → logprob: -6.982086658477783
    8. ')
' → logprob: -7.232086658477783
    9. ' =' → logprob: -7.357086658477783
    10. '=True' → logprob: -7.482086658477783

Token 1287: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021639669314026833
    2. ' ' → logprob: -3.896639585494995
    3. 'right' → logprob: -7.646639823913574
    4. ' droite' → logprob: -8.271639823913574
    5. ')' → logprob: -9.146639823913574
    6. ' right' → logprob: -9.396639823913574
    7. '   ' → logprob: -10.021639823913574
    8. ' gauche' → logprob: -10.146639823913574
    9. ' -' → logprob: -11.271639823913574
    10. '+' → logprob: -11.396639823913574

Token 1288: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5816485285758972
    2. 'à' → logprob: -0.8316485285758972
    3. ' to' → logprob: -6.081648349761963
    4. 'to' → logprob: -6.581648349761963
    5. ')' → logprob: -7.581648349761963
    6. ' vers' → logprob: -7.956648349761963
    7. ' ' → logprob: -8.456648826599121
    8. '   ' → logprob: -8.581648826599121
    9. '-à' → logprob: -8.831648826599121
    10. '=' → logprob: -8.956648826599121

Token 1289: ' gauche' (ID: 58367)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059173811227083206
    2. '-' → logprob: -3.059173822402954
    3. ' ' → logprob: -5.059173583984375
    4. ' -' → logprob: -6.684173583984375
    5. ' droite' → logprob: -6.934173583984375
    6. ' gauche' → logprob: -7.309173583984375
    7. 'right' → logprob: -7.434173583984375
    8. 'left' → logprob: -7.559173583984375
    9. 'dro' → logprob: -10.309173583984375
    10. 'g' → logprob: -10.434173583984375

Token 1290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34480020403862
    2. '):' → logprob: -1.3448002338409424
    3. '):
' → logprob: -3.5948002338409424
    4. '   ' → logprob: -5.719799995422363
    5. ')
' → logprob: -8.469799995422363
    6. '):

' → logprob: -10.594799995422363
    7. 'def' → logprob: -10.844799995422363
    8. '):
' → logprob: -11.344799995422363
    9. ':' → logprob: -11.594799995422363
    10. ' )' → logprob: -12.344799995422363

Token 1291: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7592616081237793
    2. '   ' → logprob: -1.1342616081237793
    3. ':' → logprob: -1.8842616081237793
    4. '```' → logprob: -3.7592616081237793
    5. ':
' → logprob: -4.259261608123779
    6. '):' → logprob: -5.009261608123779
    7. '(direction' → logprob: -6.134261608123779
    8. '):
' → logprob: -6.134261608123779
    9. '():' → logprob: -6.384261608123779
    10. '(' → logprob: -6.509261608123779

Token 1292: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12799516320228577
    2. '   ' → logprob: -2.252995252609253
    3. ':' → logprob: -5.752995014190674
    4. ':
' → logprob: -5.877995014190674
    5. '
' → logprob: -5.877995014190674
    6. '):
' → logprob: -6.252995014190674
    7. '    
' → logprob: -6.877995014190674
    8. '):' → logprob: -7.002995014190674
    9. '```' → logprob: -7.002995014190674
    10. 'direction' → logprob: -7.752995014190674

Token 1293: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0670918226242065
    2. 'can' → logprob: -1.0670918226242065
    3. 'reachable' → logprob: -1.8170918226242065
    4. ' bfs' → logprob: -3.192091941833496
    5. ' reachable' → logprob: -3.192091941833496
    6. 'b' → logprob: -4.067091941833496
    7. 'max' → logprob: -4.067091941833496
    8. ' max' → logprob: -4.692091941833496
    9. 'is' → logprob: -5.067091941833496
    10. 'check' → logprob: -5.817091941833496

Token 1294: '_re' (ID: 3067)
  Prédit: '_complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_complete' → logprob: -0.15554501116275787
    2. '_' → logprob: -2.0305449962615967
    3. '_continue' → logprob: -5.405545234680176
    4. '_jump' → logprob: -6.530545234680176
    5. '_re' → logprob: -6.655545234680176
    6. '_tr' → logprob: -7.030545234680176
    7. '_completion' → logprob: -7.405545234680176
    8. '_move' → logprob: -7.530545234680176
    9. ' _' → logprob: -7.530545234680176
    10. 'complete' → logprob: -7.905545234680176

Token 1295: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00034535606391727924
    2. '_' → logprob: -8.375345230102539
    3. 'achable' → logprob: -9.750345230102539
    4. 'a' → logprob: -10.750345230102539
    5. 'ac' → logprob: -11.375345230102539
    6. 'ch' → logprob: -12.375345230102539
    7. 'each' → logprob: -12.375345230102539
    8. 'ache' → logprob: -12.750345230102539
    9. '   ' → logprob: -13.625345230102539
    10. '
' → logprob: -13.750345230102539

Token 1296: '(d' (ID: 2572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3279789388179779
    2. '(' → logprob: -1.7029789686203003
    3. '(start' → logprob: -2.8279788494110107
    4. '_from' → logprob: -4.07797908782959
    5. ' (' → logprob: -4.70297908782959
    6. '_(' → logprob: -5.70297908782959
    7. '(direction' → logprob: -6.07797908782959
    8. '_direction' → logprob: -6.45297908782959
    9. '_in' → logprob: -6.82797908782959
    10. '_start' → logprob: -7.70297908782959

Token 1297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04203713685274124
    2. '):' → logprob: -3.91703724861145
    3. '[' → logprob: -4.667037010192871
    4. ')' → logprob: -5.167037010192871
    5. '):
' → logprob: -6.292037010192871
    6. ',d' → logprob: -6.417037010192871
    7. '   ' → logprob: -6.917037010192871
    8. ' ,' → logprob: -7.792037010192871
    9. ',
' → logprob: -8.792037010192871
    10. '[d' → logprob: -8.792037010192871

Token 1298: ' start' (ID: 1604)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.619035005569458
    2. ' direction' → logprob: -0.869035005569458
    3. 'start' → logprob: -3.744035005569458
    4. 'N' → logprob: -4.869034767150879
    5. ' start' → logprob: -4.994034767150879
    6. '   ' → logprob: -6.244034767150879
    7. ' N' → logprob: -6.494034767150879
    8. ')' → logprob: -8.619034767150879
    9. '    ' → logprob: -9.619034767150879
    10. 'distance' → logprob: -9.994034767150879

Token 1299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03542323783040047
    2. '[' → logprob: -3.9104232788085938
    3. '):
' → logprob: -5.285423278808594
    4. '   ' → logprob: -5.535423278808594
    5. '):' → logprob: -6.160423278808594
    6. ',
' → logprob: -6.160423278808594
    7. ' ,' → logprob: -7.410423278808594
    8. '+' → logprob: -8.535423278808594
    9. '[
' → logprob: -8.660423278808594
    10. ')' → logprob: -8.785423278808594

Token 1300: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.16032201051712036
    2. ' goal' → logprob: -2.1603219509124756
    3. 'end' → logprob: -3.7853219509124756
    4. 'direction' → logprob: -5.160322189331055
    5. ' end' → logprob: -5.910322189331055
    6. ' direction' → logprob: -6.535322189331055
    7. 'N' → logprob: -9.660322189331055
    8. '   ' → logprob: -9.910322189331055
    9. 'stop' → logprob: -9.910322189331055
    10. ' ' → logprob: -11.160322189331055

Token 1301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36025387048721313
    2. '):' → logprob: -1.3602538108825684
    3. '):
' → logprob: -3.1102538108825684
    4. '   ' → logprob: -7.110253810882568
    5. ')' → logprob: -8.235254287719727
    6. '):
' → logprob: -8.985254287719727
    7. ' ,' → logprob: -10.485254287719727
    8. '[' → logprob: -10.735254287719727
    9. '[]):' → logprob: -11.235254287719727
    10. ',
' → logprob: -11.610254287719727

Token 1302: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.3359983563423157
    2. 'direction' → logprob: -1.835998296737671
    3. 'N' → logprob: -3.085998296737671
    4. ' N' → logprob: -3.335998296737671
    5. '   ' → logprob: -3.960998296737671
    6. ')' → logprob: -5.08599853515625
    7. '):
' → logprob: -5.46099853515625
    8. ' step' → logprob: -5.58599853515625
    9. 'step' → logprob: -6.21099853515625
    10. '    ' → logprob: -6.58599853515625

Token 1303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04880945384502411
    2. '):
' → logprob: -3.04880952835083
    3. '   ' → logprob: -9.423809051513672
    4. ')' → logprob: -10.048809051513672
    5. ',' → logprob: -10.048809051513672
    6. '):
' → logprob: -10.173809051513672
    7. ':' → logprob: -11.548809051513672
    8. '):

' → logprob: -13.798809051513672
    9. ' ):' → logprob: -13.923809051513672
    10. '[]):' → logprob: -13.923809051513672

Token 1304: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19462919235229492
    2. '   ' → logprob: -1.944629192352295
    3. '```' → logprob: -4.569629192352295
    4. '(' → logprob: -5.069629192352295
    5. ':
' → logprob: -5.194629192352295
    6. ' :' → logprob: -5.819629192352295
    7. '       ' → logprob: -5.944629192352295
    8. '(d' → logprob: -6.194629192352295
    9. '():' → logprob: -7.069629192352295
    10. '[' → logprob: -7.194629192352295

Token 1305: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.943615198135376
    2. '       ' → logprob: -1.193615198135376
    3. ' [' → logprob: -2.943615198135376
    4. ':' → logprob: -3.318615198135376
    5. ' (' → logprob: -3.443615198135376
    6. '   ' → logprob: -3.568615198135376
    7. ':
' → logprob: -4.068614959716797
    8. ' 
' → logprob: -4.068614959716797
    9. '(' → logprob: -4.193614959716797
    10. '[
' → logprob: -4.818614959716797

Token 1306: ' On' (ID: 2160)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2499648779630661
    2. 'n' → logprob: -1.6249648332595825
    3. '   ' → logprob: -3.999964952468872
    4. ' n' → logprob: -5.999964714050293
    5. ' N' → logprob: -6.124964714050293
    6. '       ' → logprob: -6.874964714050293
    7. 'from' → logprob: -9.249964714050293
    8. 'reachable' → logprob: -9.999964714050293
    9. 'visited' → logprob: -10.624964714050293
    10. 'dp' → logprob: -11.624964714050293

Token 1307: ' travaille' (ID: 92596)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7733535766601562
    2. ' =' → logprob: -0.8983535766601562
    3. 'def' → logprob: -3.0233535766601562
    4. '       ' → logprob: -3.3983535766601562
    5. '   ' → logprob: -4.273353576660156
    6. 'n' → logprob: -4.648353576660156
    7. 'len' → logprob: -6.023353576660156
    8. ' n' → logprob: -6.273353576660156
    9. ' va' → logprob: -6.273353576660156
    10. 'range' → logprob: -6.523353576660156

Token 1308: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0695304870605469
    2. ' avec' → logprob: -1.8195304870605469
    3. '   ' → logprob: -1.9445304870605469
    4. 'sur' → logprob: -2.069530487060547
    5. ' sur' → logprob: -2.944530487060547
    6. 'avec' → logprob: -3.069530487060547
    7. '[' → logprob: -3.944530487060547
    8. ' uniquement' → logprob: -4.069530487060547
    9. ' with' → logprob: -4.319530487060547
    10. 'with' → logprob: -4.694530487060547

Token 1309: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37663960456848145
    2. 'len' → logprob: -2.1266396045684814
    3. ' la' → logprob: -3.0016396045684814
    4. 'range' → logprob: -3.2516396045684814
    5. ' d' → logprob: -3.5016396045684814
    6. 'N' → logprob: -3.6266396045684814
    7. 'la' → logprob: -4.126639366149902
    8. ' range' → logprob: -4.376639366149902
    9. ' N' → logprob: -5.376639366149902
    10. ' len' → logprob: -5.626639366149902

Token 1310: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2144804000854492
    2. 'd' → logprob: -1.8394804000854492
    3. '[' → logprob: -2.339480400085449
    4. ' d' → logprob: -2.464480400085449
    5. 'ist' → logprob: -2.714480400085449
    6. 'a' → logprob: -2.714480400085449
    7. '   ' → logprob: -3.089480400085449
    8. ''' → logprob: -3.339480400085449
    9. '[
' → logprob: -4.339480400085449
    10. 'en' → logprob: -4.464480400085449

Token 1311: 'interval' (ID: 37558)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9785508513450623
    2. 'range' → logprob: -1.728550910949707
    3. 'N' → logprob: -2.228550910949707
    4. ' range' → logprob: -2.853550910949707
    5. '[' → logprob: -3.103550910949707
    6. 'd' → logprob: -3.228550910949707
    7. '   ' → logprob: -3.853550910949707
    8. '[]' → logprob: -3.978550910949707
    9. '[
' → logprob: -4.353550910949707
    10. ' N' → logprob: -4.728550910949707

Token 1312: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12344423681497574
    2. 'le' → logprob: -2.6234443187713623
    3. '[' → logprob: -3.6234443187713623
    4. 'v' → logprob: -4.248444080352783
    5. '[
' → logprob: -6.873444080352783
    6. 'val' → logprob: -8.123444557189941
    7. '       ' → logprob: -8.248444557189941
    8. ']' → logprob: -8.248444557189941
    9. '[e' → logprob: -8.623444557189941
    10. '[]' → logprob: -9.623444557189941

Token 1313: ' selon' (ID: 27571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5908467769622803
    2. ' =' → logprob: -1.0908467769622803
    3. ':' → logprob: -2.9658467769622803
    4. '=' → logprob: -3.3408467769622803
    5. ' :' → logprob: -5.465847015380859
    6. ' [' → logprob: -5.840847015380859
    7. '[
' → logprob: -5.840847015380859
    8. 's' → logprob: -5.965847015380859
    9. ' d' → logprob: -6.090847015380859
    10. 'd' → logprob: -6.465847015380859

Token 1314: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.7166739106178284
    2. ' direction' → logprob: -1.4666738510131836
    3. 'range' → logprob: -2.0916738510131836
    4. ' la' → logprob: -2.7166738510131836
    5. ' range' → logprob: -3.3416738510131836
    6. 'la' → logprob: -3.8416738510131836
    7. 'len' → logprob: -4.591673851013184
    8. '       ' → logprob: -4.966673851013184
    9. 'abs' → logprob: -4.966673851013184
    10. '   ' → logprob: -5.716673851013184

Token 1315: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2502114176750183
    2. ':
' → logprob: -2.500211477279663
    3. ' =' → logprob: -2.500211477279663
    4. '[' → logprob: -4.125211238861084
    5. ' :' → logprob: -4.375211238861084
    6. '=' → logprob: -4.625211238861084
    7. '       ' → logprob: -5.500211238861084
    8. '   ' → logprob: -5.625211238861084
    9. ' :
' → logprob: -6.250211238861084
    10. ',' → logprob: -6.375211238861084

Token 1316: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.944088876247406
    2. '       ' → logprob: -0.944088876247406
    3. '```' → logprob: -2.194088935852051
    4. '[' → logprob: -3.569088935852051
    5. ' :' → logprob: -3.694088935852051
    6. '   ' → logprob: -3.694088935852051
    7. ' =' → logprob: -4.319088935852051
    8. '=' → logprob: -4.944088935852051
    9. ':
' → logprob: -5.069088935852051
    10. '(' → logprob: -7.444088935852051

Token 1317: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9766020774841309
    2. ' ' → logprob: -1.7266020774841309
    3. 'n' → logprob: -2.601602077484131
    4. ' n' → logprob: -2.726602077484131
    5. ' 
' → logprob: -2.851602077484131
    6. '```' → logprob: -3.601602077484131
    7. '    ' → logprob: -3.726602077484131
    8. '        
' → logprob: -3.851602077484131
    9. '     
' → logprob: -4.226602077484131
    10. '   ' → logprob: -4.226602077484131

Token 1318: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7585632801055908
    2. ' ' → logprob: -1.3835632801055908
    3. '\n' → logprob: -3.008563280105591
    4. ' ' → logprob: -3.383563280105591
    5. ' 
' → logprob: -3.508563280105591
    6. '        ' → logprob: -3.883563280105591
    7. '        
' → logprob: -3.883563280105591
    8. '\' → logprob: -4.258563041687012
    9. ' \' → logprob: -4.258563041687012
    10. '\t' → logprob: -4.258563041687012

Token 1319: ''idée' (ID: 131945)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.3743392527103424
    2. 'e' → logprob: -1.87433922290802
    3. 'ambda' → logprob: -2.9993393421173096
    4. 'eft' → logprob: -3.1243393421173096
    5. 'ength' → logprob: -3.2493393421173096
    6. 'i' → logprob: -5.2493391036987305
    7. 'a' → logprob: -5.3743391036987305
    8. '   ' → logprob: -5.9993391036987305
    9. 'imit' → logprob: -6.2493391036987305
    10. '=' → logprob: -6.2493391036987305

Token 1320: ':' (ID: 25)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5995667576789856
    2. '=' → logprob: -1.7245666980743408
    3. ':' → logprob: -1.9745666980743408
    4. ' =' → logprob: -2.599566698074341
    5. 'est' → logprob: -4.59956693649292
    6. ' :' → logprob: -4.72456693649292
    7. 's' → logprob: -4.84956693649292
    8. ' s' → logprob: -4.84956693649292
    9. ' ' → logprob: -5.22456693649292
    10. ' ' → logprob: -5.34956693649292

Token 1321: ' on' (ID: 402)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9775587320327759
    2. 'n' → logprob: -1.7275587320327759
    3. ' n' → logprob: -2.1025586128234863
    4. ' i' → logprob: -2.4775586128234863
    5. ' current' → logprob: -3.2275586128234863
    6. 'i' → logprob: -3.3525586128234863
    7. ' ' → logprob: -3.7275586128234863
    8. ' next' → logprob: -3.7275586128234863
    9. ' ' → logprob: -3.8525586128234863
    10. '       ' → logprob: -4.102558612823486

Token 1322: ' maint' (ID: 5425)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.6321426630020142
    2. '   ' → logprob: -2.0071425437927246
    3. 'continue' → logprob: -2.5071425437927246
    4. 'avance' → logprob: -2.7571425437927246
    5. 'n' → logprob: -2.8821425437927246
    6. 'util' → logprob: -3.2571425437927246
    7. 'expl' → logprob: -3.2571425437927246
    8. '       ' → logprob: -3.5071425437927246
    9. ' continue' → logprob: -3.7571425437927246
    10. ' va' → logprob: -4.007142543792725

Token 1323: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00020020268857479095
    2. 'ien' → logprob: -9.500200271606445
    3. 'e' → logprob: -10.375200271606445
    4. '   ' → logprob: -10.750200271606445
    5. 'ent' → logprob: -10.750200271606445
    6. '       ' → logprob: -11.000200271606445
    7. 'int' → logprob: -11.500200271606445
    8. 'iend' → logprob: -12.625200271606445
    9. 'iens' → logprob: -12.625200271606445
    10. 'enant' → logprob: -12.750200271606445

Token 1324: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7428231835365295
    2. ' une' → logprob: -1.3678231239318848
    3. 'un' → logprob: -2.1178231239318848
    4. 'max' → logprob: -2.8678231239318848
    5. ' max' → logprob: -3.2428231239318848
    6. 'une' → logprob: -3.8678231239318848
    7. ' la' → logprob: -4.617823123931885
    8. ' reachable' → logprob: -5.367823123931885
    9. '       ' → logprob: -5.867823123931885
    10. '   ' → logprob: -5.867823123931885

Token 1325: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20869579911231995
    2. ' max' → logprob: -2.083695888519287
    3. 'plus' → logprob: -3.708695888519287
    4. 'maximum' → logprob: -4.458695888519287
    5. ' maximum' → logprob: -4.583695888519287
    6. 'current' → logprob: -5.458695888519287
    7. ' plus' → logprob: -6.208695888519287
    8. ' current' → logprob: -6.458695888519287
    9. '_max' → logprob: -6.583695888519287
    10. 'reachable' → logprob: -6.833695888519287

Token 1326: ' reachable' (ID: 143580)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.09925461560487747
    2. 'reachable' → logprob: -3.474254608154297
    3. '_at' → logprob: -3.599254608154297
    4. '_' → logprob: -3.724254608154297
    5. ' reachable' → logprob: -5.224254608154297
    6. 'reach' → logprob: -5.974254608154297
    7. 'Reach' → logprob: -7.099254608154297
    8. 'At' → logprob: -7.599254608154297
    9. '   ' → logprob: -7.849254608154297
    10. '_access' → logprob: -7.974254608154297

Token 1327: ' via' (ID: 4493)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.08603157848119736
    2. ' =' → logprob: -3.336031675338745
    3. 'index' → logprob: -4.211031436920166
    4. '_' → logprob: -4.211031436920166
    5. '_idx' → logprob: -4.586031436920166
    6. ' index' → logprob: -6.336031436920166
    7. '=' → logprob: -6.461031436920166
    8. ' _' → logprob: -7.086031436920166
    9. '_right' → logprob: -8.086031913757324
    10. '   ' → logprob: -8.211031913757324

Token 1328: ' une' (ID: 2463)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.7237590551376343
    2. ' une' → logprob: -2.348759174346924
    3. ' max' → logprob: -2.598759174346924
    4. 'max' → logprob: -2.723759174346924
    5. 'reachable' → logprob: -2.848759174346924
    6. ' un' → logprob: -3.473759174346924
    7. ' current' → logprob: -3.723759174346924
    8. ' reach' → logprob: -4.348759174346924
    9. 'un' → logprob: -4.348759174346924
    10. ' l' → logprob: -4.348759174346924

Token 1329: ' exploration' (ID: 38070)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.374292016029358
    2. ' queue' → logprob: -1.374292016029358
    3. 'max' → logprob: -1.874292016029358
    4. ' max' → logprob: -2.8742918968200684
    5. ' reachable' → logprob: -2.9992918968200684
    6. ' window' → logprob: -3.1242918968200684
    7. 'range' → logprob: -3.4992918968200684
    8. 'window' → logprob: -4.124291896820068
    9. 'fen' → logprob: -4.249291896820068
    10. 'reachable' → logprob: -4.374291896820068

Token 1330: ' efficace' (ID: 54338)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36153462529182434
    2. '   ' → logprob: -2.736534595489502
    3. ':' → logprob: -3.111534595489502
    4. '       ' → logprob: -3.611534595489502
    5. '=' → logprob: -4.236534595489502
    6. ' reachable' → logprob: -4.236534595489502
    7. ' :' → logprob: -4.486534595489502
    8. '_token' → logprob: -4.611534595489502
    9. ' suivante' → logprob: -4.611534595489502
    10. '_max' → logprob: -4.861534595489502

Token 1331: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3719203770160675
    2. ':' → logprob: -1.9969203472137451
    3. '   ' → logprob: -3.121920347213745
    4. ' :' → logprob: -3.246920347213745
    5. ',' → logprob: -4.371920585632324
    6. ' =' → logprob: -4.621920585632324
    7. ')' → logprob: -4.746920585632324
    8. ' ' → logprob: -4.996920585632324
    9. '        
' → logprob: -4.996920585632324
    10. '_' → logprob: -5.121920585632324

Token 1332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36128994822502136
    2. ':' → logprob: -1.4862899780273438
    3. ' :' → logprob: -3.2362899780273438
    4. '(' → logprob: -4.986289978027344
    5. ':
' → logprob: -5.486289978027344
    6. ' (' → logprob: -5.736289978027344
    7. '        ' → logprob: -5.861289978027344
    8. '   ' → logprob: -5.861289978027344
    9. '(
' → logprob: -5.986289978027344
    10. '    ' → logprob: -6.236289978027344

Token 1333: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41393861174583435
    2. 'max' → logprob: -1.6639386415481567
    3. ' max' → logprob: -3.288938522338867
    4. ' reachable' → logprob: -3.913938522338867
    5. 'reachable' → logprob: -4.038938522338867
    6. 'n' → logprob: -4.038938522338867
    7. '   ' → logprob: -4.413938522338867
    8. 'left' → logprob: -4.788938522338867
    9. 'next' → logprob: -5.413938522338867
    10. ' n' → logprob: -5.538938522338867

Token 1334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148973166942596
    2. ' =' → logprob: -1.7014896869659424
    3. '   ' → logprob: -10.701489448547363
    4. '=int' → logprob: -10.826489448547363
    5. '       ' → logprob: -11.201489448547363
    6. '=len' → logprob: -12.326489448547363
    7. '    ' → logprob: -12.576489448547363
    8. ')' → logprob: -12.701489448547363
    9. ',' → logprob: -12.951489448547363
    10. '	' → logprob: -13.076489448547363

Token 1335: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1602243334054947
    2. ' len' → logprob: -1.9102243185043335
    3. '(len' → logprob: -16.66022491455078
    4. '[len' → logprob: -16.91022491455078
    5. 'd' → logprob: -17.16022491455078
    6. '	len' → logprob: -18.28522491455078
    7. '=len' → logprob: -19.28522491455078
    8. '   ' → logprob: -20.03522491455078
    9. ' ' → logprob: -20.28522491455078
    10. ' d' → logprob: -20.66022491455078

Token 1336: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00010223194840364158
    2. '(' → logprob: -9.625102043151855
    3. 'd' → logprob: -10.500102043151855
    4. ' (' → logprob: -11.750102043151855
    5. '(
' → logprob: -15.000102043151855
    6. ' d' → logprob: -15.875102043151855
    7. ')' → logprob: -17.125102996826172
    8. '(space' → logprob: -17.375102996826172
    9. '	d' → logprob: -17.500102996826172
    10. 'space' → logprob: -17.500102996826172

Token 1337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026420122012495995
    2. ')
' → logprob: -3.6514201164245605
    3. '       ' → logprob: -9.401420593261719
    4. ')
' → logprob: -11.401420593261719
    5. ')d' → logprob: -11.401420593261719
    6. '   ' → logprob: -12.526420593261719
    7. 'd' → logprob: -12.526420593261719
    8. ' )' → logprob: -13.151420593261719
    9. ')

' → logprob: -13.776420593261719
    10. 'def' → logprob: -14.401420593261719

Token 1338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6478781700134277
    2. '
' → logprob: -2.0228781700134277
    3. '        
' → logprob: -2.2728781700134277
    4. '    
' → logprob: -2.6478781700134277
    5. '```' → logprob: -3.1478781700134277
    6. ':' → logprob: -3.2728781700134277
    7. '   ' → logprob: -3.7728781700134277
    8. ' 
' → logprob: -3.8978781700134277
    9. '  
' → logprob: -4.272878170013428
    10. ' =' → logprob: -4.772878170013428

Token 1339: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2046648263931274
    2. 'max' → logprob: -1.4546648263931274
    3. ' reachable' → logprob: -1.7046648263931274
    4. '       ' → logprob: -2.454664707183838
    5. '   ' → logprob: -2.704664707183838
    6. '
' → logprob: -3.454664707183838
    7. 'reachable' → logprob: -3.829664707183838
    8. '        
' → logprob: -3.954664707183838
    9. 'visited' → logprob: -4.079664707183838
    10. ' visited' → logprob: -4.704664707183838

Token 1340: ' reachable' (ID: 143580)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5972111821174622
    2. '   ' → logprob: -1.5972111225128174
    3. ' max' → logprob: -2.2222111225128174
    4. 'reachable' → logprob: -2.8472111225128174
    5. ' reachable' → logprob: -3.4722111225128174
    6. 'visited' → logprob: -4.0972113609313965
    7. 'right' → logprob: -5.0972113609313965
    8. 'dp' → logprob: -5.3472113609313965
    9. '       ' → logprob: -5.7222113609313965
    10. 'next' → logprob: -5.8472113609313965

Token 1341: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0891038104891777
    2. '=' → logprob: -2.4641036987304688
    3. '=[' → logprob: -9.214103698730469
    4. '[' → logprob: -10.464103698730469
    5. '   ' → logprob: -11.214103698730469
    6. 's' → logprob: -12.214103698730469
    7. ',' → logprob: -13.089103698730469
    8. ' ' → logprob: -13.089103698730469
    9. 'max' → logprob: -13.214103698730469
    10. ' =[' → logprob: -13.464103698730469

Token 1342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004715991672128439
    2. ' ]' → logprob: -5.879715919494629
    3. ']=' → logprob: -6.504715919494629
    4. ' =' → logprob: -8.504715919494629
    5. '=' → logprob: -9.379715919494629
    6. ')' → logprob: -10.379715919494629
    7. '       ' → logprob: -10.754715919494629
    8. '   ' → logprob: -10.879715919494629
    9. '[' → logprob: -11.629715919494629
    10. ']
' → logprob: -11.629715919494629

Token 1343: ' indique' (ID: 97324)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931841969490051
    2. ' =' → logprob: -0.6931841969490051
    3. '=[' → logprob: -10.943183898925781
    4. '[' → logprob: -12.068183898925781
    5. '=False' → logprob: -12.318183898925781
    6. '=True' → logprob: -12.693183898925781
    7. '=[]' → logprob: -13.693183898925781
    8. ']' → logprob: -14.193183898925781
    9. '=
' → logprob: -14.443183898925781
    10. ' =[' → logprob: -14.443183898925781

Token 1344: ' si' (ID: 1784)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2109961211681366
    2. 'True' → logprob: -1.835996150970459
    3. ' le' → logprob: -4.335996150970459
    4. ' la' → logprob: -4.835996150970459
    5. ' False' → logprob: -5.835996150970459
    6. 'False' → logprob: -6.085996150970459
    7. 'le' → logprob: -6.835996150970459
    8. ' if' → logprob: -7.460996150970459
    9. '=' → logprob: -7.835996150970459
    10. ' =' → logprob: -8.0859956741333

Token 1345: ' on' (ID: 402)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.40033653378486633
    2. ' i' → logprob: -1.775336503982544
    3. 'True' → logprob: -2.275336503982544
    4. 'i' → logprob: -3.275336503982544
    5. ' reachable' → logprob: -4.400336742401123
    6. ' False' → logprob: -5.900336742401123
    7. 'reachable' → logprob: -6.275336742401123
    8. 'False' → logprob: -6.900336742401123
    9. ' ' → logprob: -7.650336742401123
    10. ' d' → logprob: -7.900336742401123

Token 1346: ' peut' (ID: 9216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9285537600517273
    2. ' peux' → logprob: -1.428553819656372
    3. ' peut' → logprob: -1.553553819656372
    4. '[' → logprob: -2.928553819656372
    5. ' est' → logprob: -4.053553581237793
    6. ' ' → logprob: -4.553553581237793
    7. 's' → logprob: -4.928553581237793
    8. ' can' → logprob: -4.928553581237793
    9. 'possible' → logprob: -5.053553581237793
    10. 'pe' → logprob: -5.178553581237793

Token 1347: ' atteindre' (ID: 95734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.927108645439148
    2. ' atteindre' → logprob: -1.302108645439148
    3. 'atte' → logprob: -2.0521087646484375
    4. ' at' → logprob: -3.0521087646484375
    5. ' atte' → logprob: -3.1771087646484375
    6. 'True' → logprob: -4.0521087646484375
    7. ' ' → logprob: -4.1771087646484375
    8. 're' → logprob: -4.4271087646484375
    9. 'reach' → logprob: -4.6771087646484375
    10. ' atteint' → logprob: -4.8021087646484375

Token 1348: ' trampoline' (ID: 162506)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.052967291325330734
    2. 'i' → logprob: -3.3029673099517822
    3. '[i' → logprob: -4.552967071533203
    4. ' True' → logprob: -5.677967071533203
    5. ' le' → logprob: -8.427967071533203
    6. 'True' → logprob: -8.927967071533203
    7. ' la' → logprob: -9.052967071533203
    8. '	i' → logprob: -9.177967071533203
    9. ' ' → logprob: -9.302967071533203
    10. ' ' → logprob: -10.052967071533203

Token 1349: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12334530055522919
    2. ' i' → logprob: -2.498345375061035
    3. '_' → logprob: -4.373345375061035
    4. '[' → logprob: -5.373345375061035
    5. 'i' → logprob: -5.373345375061035
    6. ' _' → logprob: -5.498345375061035
    7. '_i' → logprob: -5.873345375061035
    8. '   ' → logprob: -7.123345375061035
    9. ' ' → logprob: -7.373345375061035
    10. ' [' → logprob: -7.623345375061035

Token 1350: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160634845495224
    2. '=' → logprob: -2.035634756088257
    3. '   ' → logprob: -4.535634994506836
    4. '       ' → logprob: -5.660634994506836
    5. '=True' → logprob: -6.660634994506836
    6. '[' → logprob: -7.410634994506836
    7. '
' → logprob: -7.660634994506836
    8. '=
' → logprob: -8.160634994506836
    9. '[i' → logprob: -8.410634994506836
    10. '=False' → logprob: -9.410634994506836

Token 1351: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7513213157653809
    2. '       ' → logprob: -0.8763213157653809
    3. '=' → logprob: -2.376321315765381
    4. '   ' → logprob: -4.751321315765381
    5. '```' → logprob: -5.501321315765381
    6. '[' → logprob: -5.751321315765381
    7. '
' → logprob: -7.626321315765381
    8. ':' → logprob: -8.001321792602539
    9. '=True' → logprob: -8.001321792602539
    10. '[i' → logprob: -8.501321792602539

Token 1352: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.18066854774951935
    2. ' reachable' → logprob: -2.305668592453003
    3. '       ' → logprob: -3.180668592453003
    4. '   ' → logprob: -3.930668592453003
    5. '```' → logprob: -6.055668354034424
    6. '[' → logprob: -7.930668354034424
    7. ' =' → logprob: -8.055668830871582
    8. ' ' → logprob: -8.680668830871582
    9. '    ' → logprob: -8.680668830871582
    10. ' ' → logprob: -8.805668830871582

Token 1353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742739498615265
    2. ' =' → logprob: -0.9742739200592041
    3. '=[' → logprob: -8.599273681640625
    4. '[' → logprob: -11.849273681640625
    5. '[i' → logprob: -12.849273681640625
    6. ' =[' → logprob: -14.099273681640625
    7. '   ' → logprob: -14.224273681640625
    8. '=[]' → logprob: -14.724273681640625
    9. ' ' → logprob: -15.224273681640625
    10. '```' → logprob: -15.349273681640625

Token 1354: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01816106028854847
    2. ' [' → logprob: -4.018161296844482
    3. '{' → logprob: -12.768160820007324
    4. '[start' → logprob: -13.018160820007324
    5. '[N' → logprob: -13.143160820007324
    6. '[i' → logprob: -13.518160820007324
    7. '[int' → logprob: -14.768160820007324
    8. '[n' → logprob: -15.018160820007324
    9. '   ' → logprob: -15.143160820007324
    10. '[node' → logprob: -15.393160820007324

Token 1355: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.700132997939363e-05
    2. ' False' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. '0' → logprob: -17.000017166137695
    5. '(False' → logprob: -17.625017166137695
    6. '       ' → logprob: -18.625017166137695
    7. 'True' → logprob: -18.750017166137695
    8. '=False' → logprob: -20.000017166137695
    9. '           ' → logprob: -20.250017166137695
    10. '     ' → logprob: -20.500017166137695

Token 1356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019967835396528244
    2. ' for' → logprob: -4.769968032836914
    3. ',' → logprob: -5.144968032836914
    4. ' ]' → logprob: -6.144968032836914
    5. '       ' → logprob: -6.269968032836914
    6. '[' → logprob: -7.894968032836914
    7. ')' → logprob: -8.394968032836914
    8. ']*' → logprob: -8.519968032836914
    9. '<|end|>' → logprob: -8.769968032836914
    10. 'for' → logprob: -9.269968032836914

Token 1357: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26452234387397766
    2. '<|end|>' → logprob: -1.6395223140716553
    3. ']' → logprob: -4.264522552490234
    4. '       ' → logprob: -4.764522552490234
    5. '<|end|>' → logprob: -5.514522552490234
    6. ')' → logprob: -5.514522552490234
    7. ' ]' → logprob: -6.889522552490234
    8. '```' → logprob: -7.264522552490234
    9. '   ' → logprob: -7.389522552490234
    10. ',' → logprob: -7.639522552490234

Token 1358: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001170132018160075
    2. '(N' → logprob: -9.125117301940918
    3. ' N' → logprob: -12.375117301940918
    4. '       ' → logprob: -13.250117301940918
    5. '   ' → logprob: -13.375117301940918
    6. '(' → logprob: -15.125117301940918
    7. ' (' → logprob: -15.875117301940918
    8. '           ' → logprob: -17.5001163482666
    9. '	N' → logprob: -17.6251163482666
    10. '[N' → logprob: -17.6251163482666

Token 1359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4422050714492798
    2. 'reachable' → logprob: -1.8172050714492798
    3. '[' → logprob: -3.4422049522399902
    4. ',' → logprob: -3.6922049522399902
    5. '        
' → logprob: -3.6922049522399902
    6. '```' → logprob: -3.8172049522399902
    7. ' reachable' → logprob: -3.8172049522399902
    8. '<|end|>' → logprob: -3.9422049522399902
    9. ')' → logprob: -4.06720495223999
    10. '   ' → logprob: -5.06720495223999

Token 1360: '       ' (ID: 309)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.2590639591217041
    2. ' reachable' → logprob: -2.259063959121704
    3. '       ' → logprob: -2.384063959121704
    4. '   ' → logprob: -3.634063959121704
    5. '    ' → logprob: -7.134063720703125
    6. '```' → logprob: -7.259063720703125
    7. ' ' → logprob: -7.259063720703125
    8. ' ' → logprob: -7.634063720703125
    9. '[' → logprob: -7.634063720703125
    10. 'reach' → logprob: -8.259063720703125

Token 1361: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.008735123090445995
    2. '       ' → logprob: -4.883735179901123
    3. '   ' → logprob: -7.133735179901123
    4. ' reachable' → logprob: -8.133734703063965
    5. '```' → logprob: -11.133734703063965
    6. 'reach' → logprob: -11.258734703063965
    7. 'ready' → logprob: -13.133734703063965
    8. ' ' → logprob: -13.258734703063965
    9. '           ' → logprob: -13.883734703063965
    10. '        
' → logprob: -14.008734703063965

Token 1362: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.16024312376976013
    2. '[' → logprob: -1.9102431535720825
    3. '=' → logprob: -11.660243034362793
    4. ' [' → logprob: -13.410243034362793
    5. '[source' → logprob: -13.535243034362793
    6. '=start' → logprob: -13.660243034362793
    7. '       ' → logprob: -14.160243034362793
    8. '[current' → logprob: -14.160243034362793
    9. '[end' → logprob: -14.285243034362793
    10. '[first' → logprob: -14.660243034362793

Token 1363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011927293380722404
    2. ' ]' → logprob: -7.126192569732666
    3. ']=' → logprob: -8.626193046569824
    4. '=' → logprob: -8.751193046569824
    5. '[' → logprob: -10.501193046569824
    6. ' =' → logprob: -11.626193046569824
    7. '       ' → logprob: -12.126193046569824
    8. '   ' → logprob: -12.501193046569824
    9. ']
' → logprob: -13.376193046569824
    10. ')' → logprob: -14.126193046569824

Token 1364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007418495370075107
    2. ' =' → logprob: -7.250741958618164
    3. '=True' → logprob: -10.375741958618164
    4. '=
' → logprob: -15.000741958618164
    5. '[' → logprob: -15.250741958618164
    6. '=False' → logprob: -16.000741958618164
    7. ']' → logprob: -16.750741958618164
    8. ']=' → logprob: -17.625741958618164
    9. '=true' → logprob: -18.500741958618164
    10. ')' → logprob: -18.750741958618164

Token 1365: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.375158309936523
    4. '1' → logprob: -20.000158309936523
    5. '(True' → logprob: -20.250158309936523
    6. '=True' → logprob: -21.375158309936523
    7. 'true' → logprob: -23.500158309936523
    8. 'False' → logprob: -23.500158309936523
    9. '       ' → logprob: -23.750158309936523
    10. '    ' → logprob: -23.875158309936523

Token 1366: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5826256275177002
    2. '   ' → logprob: -0.8326256275177002
    3. ' max' → logprob: -6.207625389099121
    4. ' next' → logprob: -6.457625389099121
    5. ' i' → logprob: -7.207625389099121
    6. 'max' → logprob: -8.082625389099121
    7. ' for' → logprob: -8.082625389099121
    8. '        
' → logprob: -8.207625389099121
    9. ' current' → logprob: -8.332625389099121
    10. '```' → logprob: -8.707625389099121

Token 1368: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06152445450425148
    2. 'from' → logprob: -3.6865243911743164
    3. 'queue' → logprob: -4.061524391174316
    4. 'if' → logprob: -5.061524391174316
    5. 'next' → logprob: -5.436524391174316
    6. '   ' → logprob: -5.686524391174316
    7. 'front' → logprob: -6.811524391174316
    8. 'current' → logprob: -7.561524391174316
    9. 'for' → logprob: -7.686524391174316
    10. 'reachable' → logprob: -8.186524391174316

Token 1369: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10295097529888153
    2. 'from' → logprob: -2.8529510498046875
    3. 'queue' → logprob: -4.1029510498046875
    4. '   ' → logprob: -4.1029510498046875
    5. 'next' → logprob: -6.2279510498046875
    6. '       ' → logprob: -6.7279510498046875
    7. 'right' → logprob: -6.8529510498046875
    8. ' max' → logprob: -7.4779510498046875
    9. 'reachable' → logprob: -7.6029510498046875
    10. 'reach' → logprob: -7.9779510498046875

Token 1370: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0024779161904007196
    2. 'Reach' → logprob: -6.627478122711182
    3. 'reachable' → logprob: -7.877478122711182
    4. '_right' → logprob: -8.002477645874023
    5. '_index' → logprob: -8.502477645874023
    6. '_pos' → logprob: -9.377477645874023
    7. '_jump' → logprob: -9.752477645874023
    8. 'reach' → logprob: -9.877477645874023
    9. '_range' → logprob: -11.502477645874023
    10. ' reachable' → logprob: -12.002477645874023

Token 1371: 'ach' (ID: 678)
  Prédit: 'achable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.01677115634083748
    2. 'ach' → logprob: -4.14177131652832
    3. 'reachable' → logprob: -7.51677131652832
    4. 'ached' → logprob: -9.14177131652832
    5. 'each' → logprob: -9.89177131652832
    6. '_' → logprob: -11.39177131652832
    7. 'ache' → logprob: -12.01677131652832
    8. 'aching' → logprob: -12.39177131652832
    9. 'acher' → logprob: -13.01677131652832
    10. 'a' → logprob: -13.14177131652832

Token 1372: ' indique' (ID: 97324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28136035799980164
    2. '=' → logprob: -1.406360387802124
    3. '   ' → logprob: -9.156360626220703
    4. '    ' → logprob: -10.531360626220703
    5. '	' → logprob: -11.156360626220703
    6. '_idx' → logprob: -11.656360626220703
    7. '[' → logprob: -12.031360626220703
    8. '=None' → logprob: -12.281360626220703
    9. ')' → logprob: -12.406360626220703
    10. '=[]' → logprob: -12.406360626220703

Token 1373: ' jusqu' (ID: 21961)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9500799775123596
    2. 'the' → logprob: -1.5750799179077148
    3. ' =' → logprob: -2.450079917907715
    4. ' la' → logprob: -2.575079917907715
    5. ' the' → logprob: -2.700079917907715
    6. ' le' → logprob: -3.325079917907715
    7. '=' → logprob: -3.325079917907715
    8. 'max' → logprob: -3.575079917907715
    9. ' ' → logprob: -3.950079917907715
    10. '       ' → logprob: -4.700079917907715

Token 1374: ''où' (ID: 186468)
  Prédit: ''où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''où' → logprob: -0.2332880049943924
    2. ''à' → logprob: -1.858288049697876
    3. ''au' → logprob: -3.233288049697876
    4. '’où' → logprob: -5.108287811279297
    5. 'où' → logprob: -5.608287811279297
    6. 'au' → logprob: -6.983287811279297
    7. 'which' → logprob: -7.483287811279297
    8. 'à' → logprob: -7.733287811279297
    9. '’à' → logprob: -8.108287811279297
    10. ''' → logprob: -8.108287811279297

Token 1375: ' on' (ID: 402)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.7369359731674194
    2. ' reachable' → logprob: -1.3619359731674194
    3. 'on' → logprob: -2.236936092376709
    4. '       ' → logprob: -2.486936092376709
    5. ' on' → logprob: -2.736936092376709
    6. ' =' → logprob: -6.486936092376709
    7. '_on' → logprob: -6.736936092376709
    8. 'reach' → logprob: -6.736936092376709
    9. 'le' → logprob: -7.486936092376709
    10. ' nous' → logprob: -7.486936092376709

Token 1376: ' a' (ID: 261)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.28626373410224915
    2. ' peut' → logprob: -1.4112637042999268
    3. ' peux' → logprob: -6.286263942718506
    4. '_pe' → logprob: -6.786263942718506
    5. 'pour' → logprob: -7.661263942718506
    6. 'pu' → logprob: -8.161263465881348
    7. 'can' → logprob: -8.286263465881348
    8. ' ' → logprob: -8.286263465881348
    9. 'p' → logprob: -8.911263465881348
    10. ' pe' → logprob: -9.036263465881348

Token 1377: ' réussi' (ID: 85398)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.0021716742776334286
    2. 'p' → logprob: -6.877171516418457
    3. 'max' → logprob: -8.252171516418457
    4. 'pus' → logprob: -8.377171516418457
    5. 'atte' → logprob: -8.627171516418457
    6. 'pour' → logprob: -9.377171516418457
    7. ' ' → logprob: -9.627171516418457
    8. 'pe' → logprob: -9.752171516418457
    9. 'le' → logprob: -10.377171516418457
    10. 'reach' → logprob: -10.627171516418457

Token 1378: ' à' (ID: 1221)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.13515552878379822
    2. '_at' → logprob: -2.635155439376831
    3. '_' → logprob: -3.260155439376831
    4. '   ' → logprob: -5.51015567779541
    5. ' =' → logprob: -6.26015567779541
    6. '=' → logprob: -6.63515567779541
    7. ' ' → logprob: -7.01015567779541
    8. '_de' → logprob: -7.13515567779541
    9. '_arr' → logprob: -7.26015567779541
    10. 'd' → logprob: -7.26015567779541

Token 1379: ' se' (ID: 458)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.06460288912057877
    2. 'reach' → logprob: -3.814602851867676
    3. 'aller' → logprob: -4.314602851867676
    4. ' atteindre' → logprob: -4.939602851867676
    5. 'ét' → logprob: -5.814602851867676
    6. '   ' → logprob: -5.939602851867676
    7. 'at' → logprob: -6.314602851867676
    8. 'expl' → logprob: -6.689602851867676
    9. ' ' → logprob: -6.939602851867676
    10. 'max' → logprob: -7.439602851867676

Token 1380: ' prop' (ID: 5892)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.7211369872093201
    2. 'max' → logprob: -1.3461370468139648
    3. 'reach' → logprob: -2.971137046813965
    4. 't' → logprob: -2.971137046813965
    5. 're' → logprob: -3.846137046813965
    6. 'reachable' → logprob: -4.471137046813965
    7. 'placer' → logprob: -4.846137046813965
    8. '   ' → logprob: -4.846137046813965
    9. 'allow' → logprob: -4.971137046813965
    10. 'r' → logprob: -5.096137046813965

Token 1381: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.30924904346466064
    2. 'g' → logprob: -2.184248924255371
    3. 'r' → logprob: -2.934248924255371
    4. 'ger' → logprob: -4.559248924255371
    5. 'nger' → logprob: -4.809248924255371
    6. 'pager' → logprob: -4.809248924255371
    7. 'ul' → logprob: -4.934248924255371
    8. 'ag' → logprob: -5.059248924255371
    9. 'rg' → logprob: -5.184248924255371
    10. 'l' → logprob: -5.434248924255371

Token 1382: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009052686509676278
    2. '=' → logprob: -7.1259050369262695
    3. '       ' → logprob: -10.25090503692627
    4. ' :' → logprob: -10.75090503692627
    5. ' ' → logprob: -11.75090503692627
    6. ':' → logprob: -12.00090503692627
    7. '_max' → logprob: -12.25090503692627
    8. 'max' → logprob: -12.37590503692627
    9. ' ' → logprob: -12.50090503692627
    10. ',' → logprob: -12.87590503692627

Token 1383: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13569463789463043
    2. '       ' → logprob: -2.260694742202759
    3. '=' → logprob: -3.885694742202759
    4. '   ' → logprob: -7.38569450378418
    5. ':' → logprob: -7.63569450378418
    6. ' :' → logprob: -8.63569450378418
    7. '[' → logprob: -8.63569450378418
    8. '```' → logprob: -8.63569450378418
    9. '	' → logprob: -9.38569450378418
    10. ' ' → logprob: -9.88569450378418

Token 1384: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12956690788269043
    2. ' max' → logprob: -2.1295669078826904
    3. '       ' → logprob: -6.1295671463012695
    4. '0' → logprob: -8.37956714630127
    5. '   ' → logprob: -8.75456714630127
    6. '	max' → logprob: -10.87956714630127
    7. ' ' → logprob: -11.00456714630127
    8. '```' → logprob: -11.50456714630127
    9. ' =' → logprob: -12.00456714630127
    10. '=' → logprob: -12.50456714630127

Token 1385: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.1472419600977446e-06
    2. ' _' → logprob: -14.750000953674316
    3. '_' → logprob: -16.000001907348633
    4. '\' → logprob: -16.500001907348633
    5. '_range' → logprob: -16.625001907348633
    6. '_possible' → logprob: -16.875001907348633
    7. ')' → logprob: -17.000001907348633
    8. ')_' → logprob: -17.375001907348633
    9. '_release' → logprob: -17.500001907348633
    10. '_RE' → logprob: -17.500001907348633

Token 1386: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.014653132297098637
    2. 'reach' → logprob: -4.264653205871582
    3. 'each' → logprob: -7.889653205871582
    4. 'Reach' → logprob: -10.639653205871582
    5. '_' → logprob: -10.764653205871582
    6. 'atch' → logprob: -11.014653205871582
    7. '   ' → logprob: -11.639653205871582
    8. 'ch' → logprob: -11.764653205871582
    9. 'arch' → logprob: -12.014653205871582
    10. 'achable' → logprob: -12.014653205871582

Token 1387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029806962236762047
    2. '=' → logprob: -3.5298068523406982
    3. '[' → logprob: -10.529807090759277
    4. ' ' → logprob: -11.779807090759277
    5. '       ' → logprob: -12.154807090759277
    6. '	' → logprob: -12.529807090759277
    7. '   ' → logprob: -12.904807090759277
    8. ',' → logprob: -13.279807090759277
    9. ')' → logprob: -13.529807090759277
    10. '    ' → logprob: -13.654807090759277

Token 1388: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009165783412754536
    2. ' start' → logprob: -7.000916481018066
    3. '	start' → logprob: -12.875916481018066
    4. '=start' → logprob: -13.875916481018066
    5. '0' → logprob: -14.125916481018066
    6. '[start' → logprob: -14.375916481018066
    7. '       ' → logprob: -15.625916481018066
    8. '   ' → logprob: -16.000917434692383
    9. '(start' → logprob: -18.500917434692383
    10. ' ' → logprob: -19.125917434692383

Token 1389: '
        
' (ID: 20417)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4008631706237793
    2. ' +' → logprob: -1.1508631706237793
    3. '<|end|>' → logprob: -4.650863170623779
    4. '
' → logprob: -6.275863170623779
    5. '       ' → logprob: -7.150863170623779
    6. ')' → logprob: -7.900863170623779
    7. '+
' → logprob: -8.025863647460938
    8. '<|end|>' → logprob: -8.275863647460938
    9. ' +
' → logprob: -9.150863647460938
    10. '[' → logprob: -9.525863647460938

Token 1390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17844490706920624
    2. '
' → logprob: -2.3034448623657227
    3. '        
' → logprob: -3.4284448623657227
    4. '    
' → logprob: -4.928444862365723
    5. '```' → logprob: -5.053444862365723
    6. '  
' → logprob: -5.678444862365723
    7. '<|end|>' → logprob: -5.928444862365723
    8. '   ' → logprob: -5.928444862365723
    9. ' 
' → logprob: -6.178444862365723
    10. '	' → logprob: -6.428444862365723

Token 1391: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14831247925758362
    2. ' for' → logprob: -2.773312568664551
    3. '   ' → logprob: -3.148312568664551
    4. 'for' → logprob: -4.023312568664551
    5. '        
' → logprob: -5.148312568664551
    6. '
' → logprob: -5.648312568664551
    7. '```' → logprob: -6.773312568664551
    8. '    
' → logprob: -6.898312568664551
    9. ' i' → logprob: -7.148312568664551
    10. '	' → logprob: -7.898312568664551

Token 1392: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6626195311546326
    2. 'for' → logprob: -1.4126195907592773
    3. 'if' → logprob: -1.6626195907592773
    4. '       ' → logprob: -4.287619590759277
    5. '   ' → logprob: -4.412619590759277
    6. 'range' → logprob: -4.537619590759277
    7. ' i' → logprob: -5.787619590759277
    8. 'idx' → logprob: -6.037619590759277
    9. 'step' → logprob: -6.037619590759277
    10. 'current' → logprob: -6.412619590759277

Token 1393: ' parc' (ID: 22138)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21720749139785767
    2. 'for' → logprob: -2.092207431793213
    3. ' =' → logprob: -3.092207431793213
    4. 'range' → logprob: -4.842207431793213
    5. '       ' → logprob: -5.342207431793213
    6. ' for' → logprob: -5.592207431793213
    7. 'continue' → logprob: -5.842207431793213
    8. '   ' → logprob: -6.717207431793213
    9. '+=' → logprob: -7.092207431793213
    10. 'def' → logprob: -7.092207431793213

Token 1394: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.10270370543003082
    2. 'ourt' → logprob: -2.477703809738159
    3. 'oure' → logprob: -4.97770357131958
    4. 'c' → logprob: -6.35270357131958
    5. '_' → logprob: -6.97770357131958
    6. 'court' → logprob: -7.10270357131958
    7. '#' → logprob: -7.47770357131958
    8. 'our' → logprob: -7.85270357131958
    9. '\' → logprob: -7.97770357131958
    10. '```' → logprob: -8.227704048156738

Token 1395: ' dans' (ID: 2671)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6088457703590393
    2. 'range' → logprob: -1.4838457107543945
    3. ' i' → logprob: -1.7338457107543945
    4. ' ' → logprob: -3.9838457107543945
    5. '    ' → logprob: -4.9838457107543945
    6. ' la' → logprob: -5.1088457107543945
    7. '(range' → logprob: -5.7338457107543945
    8. 'i' → logprob: -6.4838457107543945
    9. ')' → logprob: -6.4838457107543945
    10. '   ' → logprob: -6.6088457107543945

Token 1396: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01151778269559145
    2. ' range' → logprob: -4.5115180015563965
    3. '(range' → logprob: -8.386517524719238
    4. 'la' → logprob: -9.011517524719238
    5. 'direction' → logprob: -10.011517524719238
    6. ' la' → logprob: -10.511517524719238
    7. '   ' → logprob: -11.636517524719238
    8. '	range' → logprob: -11.761517524719238
    9. 'le' → logprob: -11.886517524719238
    10. ')' → logprob: -11.886517524719238

Token 1397: ' direction' (ID: 9262)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.040908679366111755
    2. ' range' → logprob: -3.2909085750579834
    3. 'direction' → logprob: -7.0409088134765625
    4. 'for' → logprob: -7.2909088134765625
    5. '(range' → logprob: -8.040908813476562
    6. 'if' → logprob: -8.665908813476562
    7. '   ' → logprob: -9.290908813476562
    8. ' direction' → logprob: -9.415908813476562
    9. ' for' → logprob: -9.415908813476562
    10. '+' → logprob: -9.540908813476562

Token 1398: ' demand' (ID: 8492)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1315467357635498
    2. '=' → logprob: -1.2565467357635498
    3. ' +' → logprob: -2.50654673576355
    4. '       ' → logprob: -2.50654673576355
    5. ':' → logprob: -2.63154673576355
    6. '   ' → logprob: -3.38154673576355
    7. '+' → logprob: -3.63154673576355
    8. ' +=' → logprob: -4.006546974182129
    9. ' in' → logprob: -4.256546974182129
    10. ' if' → logprob: -4.256546974182129

Token 1399: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7624766826629639
    2. ' =' → logprob: -1.8874766826629639
    3. 'ée' → logprob: -2.012476682662964
    4. '=' → logprob: -2.512476682662964
    5. ' ' → logprob: -2.887476682662964
    6. 'ion' → logprob: -3.512476682662964
    7. 'e' → logprob: -3.637476682662964
    8. 'ation' → logprob: -4.012476921081543
    9. '  ' → logprob: -5.262476921081543
    10. ':' → logprob: -5.512476921081543

Token 1400: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8920332193374634
    2. ' =' → logprob: -1.2670332193374634
    3. ' in' → logprob: -3.017033100128174
    4. '       ' → logprob: -3.017033100128174
    5. ':
' → logprob: -3.267033100128174
    6. '=' → logprob: -3.267033100128174
    7. '   ' → logprob: -3.517033100128174
    8. '```' → logprob: -3.767033100128174
    9. ' for' → logprob: -3.892033100128174
    10. ' :' → logprob: -4.517033100128174

Token 1401: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39919525384902954
    2. '   ' → logprob: -2.2741951942443848
    3. ' in' → logprob: -2.6491951942443848
    4. ',' → logprob: -3.2741951942443848
    5. ' =' → logprob: -3.5241951942443848
    6. ' en' → logprob: -3.7741951942443848
    7. ' for' → logprob: -4.149195194244385
    8. '       ' → logprob: -4.524195194244385
    9. '=' → logprob: -4.649195194244385
    10. '```' → logprob: -5.274195194244385

Token 1402: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5181384682655334
    2. ' i' → logprob: -1.2681384086608887
    3. 'for' → logprob: -2.8931384086608887
    4. '   ' → logprob: -3.8931384086608887
    5. ' if' → logprob: -4.268138408660889
    6. '       ' → logprob: -4.393138408660889
    7. 'i' → logprob: -5.643138408660889
    8. ' 
' → logprob: -5.768138408660889
    9. ' range' → logprob: -5.893138408660889
    10. ':' → logprob: -6.393138408660889

Token 1403: ' La' (ID: 3038)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6196969151496887
    2. '   ' → logprob: -1.369696855545044
    3. 'for' → logprob: -1.994696855545044
    4. '       ' → logprob: -3.369696855545044
    5. ' if' → logprob: -5.119697093963623
    6. '    ' → logprob: -5.619697093963623
    7. ' i' → logprob: -5.744697093963623
    8. ':' → logprob: -5.994697093963623
    9. ' =' → logprob: -5.994697093963623
    10. ' range' → logprob: -6.369697093963623

Token 1404: ' condition' (ID: 7060)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.483636736869812
    2. '_' → logprob: -1.858636736869812
    3. 'for' → logprob: -2.2336368560791016
    4. ' for' → logprob: -2.4836368560791016
    5. ' _' → logprob: -4.108636856079102
    6. ' ' → logprob: -5.858636856079102
    7. ' =' → logprob: -5.858636856079102
    8. '   ' → logprob: -6.108636856079102
    9. ' i' → logprob: -6.858636856079102
    10. '=' → logprob: -6.858636856079102

Token 1405: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8137173056602478
    2. ' ' → logprob: -1.4387173652648926
    3. '=' → logprob: -1.8137173652648926
    4. ':' → logprob: -2.5637173652648926
    5. ' :' → logprob: -3.0637173652648926
    6. ' est' → logprob: -4.188717365264893
    7. ' s' → logprob: -5.563717365264893
    8. 's' → logprob: -5.563717365264893
    9. '_' → logprob: -5.938717365264893
    10. ' de' → logprob: -6.688717365264893

Token 1406: ' saut' (ID: 111480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7373623847961426
    2. 'range' → logprob: -1.6123623847961426
    3. 'for' → logprob: -2.7373623847961426
    4. 'bou' → logprob: -2.7373623847961426
    5. 'i' → logprob: -3.6123623847961426
    6. 'continu' → logprob: -3.8623623847961426
    7. 'la' → logprob: -3.8623623847961426
    8. 'continue' → logprob: -4.112362384796143
    9. ' saut' → logprob: -4.237362384796143
    10. 'contin' → logprob: -4.487362384796143

Token 1407: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35180428624153137
    2. '=' → logprob: -1.851804256439209
    3. ' ' → logprob: -2.851804256439209
    4. ':' → logprob: -3.351804256439209
    5. ' est' → logprob: -4.351804256439209
    6. ' :' → logprob: -4.976804256439209
    7. '   ' → logprob: -5.601804256439209
    8. '_' → logprob: -5.976804256439209
    9. 's' → logprob: -5.976804256439209
    10. ' suivante' → logprob: -5.976804256439209

Token 1408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2005397081375122
    2. ' ' → logprob: -1.3255397081375122
    3. ' :' → logprob: -1.8255397081375122
    4. '    ' → logprob: -2.9505395889282227
    5. ''' → logprob: -3.4505395889282227
    6. ' (' → logprob: -3.8255395889282227
    7. '        ' → logprob: -4.075539588928223
    8. ' =' → logprob: -4.075539588928223
    9. ' direction' → logprob: -4.075539588928223
    10. '"' → logprob: -4.200539588928223

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5975147485733032
    2. ' ' → logprob: -1.2225147485733032
    3. '        ' → logprob: -3.0975146293640137
    4. '    ' → logprob: -3.5975146293640137
    5. ' 
' → logprob: -4.347514629364014
    6. ' if' → logprob: -4.722514629364014
    7. ' for' → logprob: -5.222514629364014
    8. '           ' → logprob: -5.222514629364014
    9. ' (' → logprob: -5.222514629364014
    10. '        
' → logprob: -5.222514629364014

Token 1410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2510841190814972
    2. ' #' → logprob: -3.001084089279175
    3. '        ' → logprob: -3.251084089279175
    4. '#' (adapté à ' #') → logprob: -3.501084089279175
    5. ' for' → logprob: -3.626084089279175
    6. 'for' → logprob: -4.376084327697754
    7. ' ' → logprob: -4.376084327697754
    8. '           ' → logprob: -4.501084327697754
    9. '    ' → logprob: -4.751084327697754
    10. '   ' → logprob: -4.876084327697754

Token 1411: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.192575454711914
    2. '#' → logprob: -1.942575454711914
    3. '       ' → logprob: -1.942575454711914
    4. ' #' → logprob: -2.067575454711914
    5. ' for' → logprob: -2.317575454711914
    6. 'for' → logprob: -3.942575454711914
    7. '        ' → logprob: -4.067575454711914
    8. ' if' → logprob: -4.067575454711914
    9. ' (' → logprob: -4.192575454711914
    10. '```' → logprob: -4.192575454711914

Token 1412: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15970684587955475
    2. ' j' → logprob: -2.5347068309783936
    3. 'i' → logprob: -2.7847068309783936
    4. 'j' → logprob: -5.284707069396973
    5. ' ' → logprob: -6.784707069396973
    6. ' ' → logprob: -8.784707069396973
    7. '  ' → logprob: -10.034707069396973
    8. ' next' → logprob: -10.284707069396973
    9. '	i' → logprob: -10.409707069396973
    10. '   ' → logprob: -10.534707069396973

Token 1413: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09035363048315048
    2. 'in' → logprob: -2.8403537273406982
    3. ' <' → logprob: -3.9653537273406982
    4. '<' → logprob: -6.090353488922119
    5. ' ' → logprob: -6.590353488922119
    6. ' i' → logprob: -6.840353488922119
    7. '   ' → logprob: -6.840353488922119
    8. '+' → logprob: -7.340353488922119
    9. 'i' → logprob: -7.590353488922119
    10. ',' → logprob: -8.465353965759277

Token 1414: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0060833222232759
    2. ' <=' → logprob: -6.5060834884643555
    3. 'in' → logprob: -6.6310834884643555
    4. ' <' → logprob: -6.7560834884643555
    5. '   ' → logprob: -7.7560834884643555
    6. ',' → logprob: -8.256083488464355
    7. '=' → logprob: -8.506083488464355
    8. ' =' → logprob: -8.506083488464355
    9. ':' → logprob: -8.756083488464355
    10. '<=' → logprob: -9.006083488464355

Token 1415: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.11893775314092636
    2. ' j' → logprob: -2.9939377307891846
    3. 'direction' → logprob: -3.4939377307891846
    4. ' i' → logprob: -4.243937969207764
    5. ' (' → logprob: -4.618937969207764
    6. ' ' → logprob: -5.993937969207764
    7. 'j' → logprob: -6.118937969207764
    8. '(direction' → logprob: -6.868937969207764
    9. ' abs' → logprob: -7.618937969207764
    10. 'i' → logprob: -7.993937969207764

Token 1416: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2486782819032669
    2. ' =' → logprob: -2.623678207397461
    3. '==' → logprob: -2.623678207397461
    4. '=' → logprob: -2.748678207397461
    5. ' +' → logprob: -5.623678207397461
    6. ' ' → logprob: -6.873678207397461
    7. '   ' → logprob: -7.248678207397461
    8. '+' → logprob: -7.498678207397461
    9. '[' → logprob: -7.623678207397461
    10. ')' → logprob: -7.748678207397461

Token 1417: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5782185792922974
    2. '1' → logprob: -0.8282185792922974
    3. ' +' → logprob: -7.078218460083008
    4. ' >' → logprob: -7.078218460083008
    5. '+' → logprob: -8.328218460083008
    6. '>' → logprob: -9.203218460083008
    7. '=' → logprob: -9.578218460083008
    8. ' =' → logprob: -9.703218460083008
    9. '  ' → logprob: -10.953218460083008
    10. '">' → logprob: -11.453218460083008

Token 1418: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25697213411331177
    2. ' if' → logprob: -2.631972074508667
    3. ' :' → logprob: -3.131972074508667
    4. ',' → logprob: -3.756972074508667
    5. '=' → logprob: -4.131972312927246
    6. ':
' → logprob: -4.131972312927246
    7. ' =' → logprob: -4.131972312927246
    8. ' j' → logprob: -4.881972312927246
    9. '   ' → logprob: -5.506972312927246
    10. 'if' → logprob: -5.506972312927246

Token 1419: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10291872173547745
    2. ' j' → logprob: -3.2279186248779297
    3. ' i' → logprob: -3.7279186248779297
    4. 'if' → logprob: -3.9779186248779297
    5. ' ' → logprob: -4.72791862487793
    6. ' (' → logprob: -6.35291862487793
    7. ' for' → logprob: -6.85291862487793
    8. 'j' → logprob: -7.10291862487793
    9. '    ' → logprob: -7.72791862487793
    10. 'i' → logprob: -7.97791862487793

Token 1420: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.27291446924209595
    2. '<' → logprob: -1.7729144096374512
    3. '+' → logprob: -3.397914409637451
    4. ' <=' → logprob: -4.147914409637451
    5. ' +' → logprob: -5.647914409637451
    6. '<=' → logprob: -5.772914409637451
    7. ' ->' → logprob: -5.897914409637451
    8. '<n' → logprob: -6.397914409637451
    9. '=' → logprob: -6.897914409637451
    10. '   ' → logprob: -7.272914409637451

Token 1421: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6974052786827087
    2. ' j' → logprob: -0.6974052786827087
    3. '+' → logprob: -6.1974053382873535
    4. '=' → logprob: -7.0724053382873535
    5. ',' → logprob: -8.197404861450195
    6. ' +' → logprob: -8.447404861450195
    7. ' ' → logprob: -8.697404861450195
    8. ' N' → logprob: -9.572404861450195
    9. '       ' → logprob: -9.822404861450195
    10. '	j' → logprob: -10.072404861450195

Token 1422: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1661525964736938
    2. '       ' → logprob: -1.1661525964736938
    3. ' and' → logprob: -2.0411524772644043
    4. ',' → logprob: -3.0411524772644043
    5. ' et' → logprob: -3.0411524772644043
    6. ' :' → logprob: -3.6661524772644043
    7. ':
' → logprob: -3.9161524772644043
    8. ')' → logprob: -4.166152477264404
    9. ' ' → logprob: -4.791152477264404
    10. '   ' → logprob: -4.791152477264404

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47717729210853577
    2. ':' → logprob: -1.3521772623062134
    3. ',' → logprob: -3.352177381515503
    4. ')' → logprob: -4.102177143096924
    5. ' :' → logprob: -4.352177143096924
    6. '<|end|>' → logprob: -4.602177143096924
    7. '        ' → logprob: -4.852177143096924
    8. '[' → logprob: -5.227177143096924
    9. ' and' → logprob: -5.727177143096924
    10. '#' → logprob: -5.852177143096924

Token 1424: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4403350353240967
    2. ':' → logprob: -1.5653350353240967
    3. ',' → logprob: -2.8153350353240967
    4. ':
' → logprob: -4.065335273742676
    5. ' :' → logprob: -4.440335273742676
    6. ' =' → logprob: -4.940335273742676
    7. '#' (adapté à ' #') → logprob: -5.065335273742676
    8. ' and' → logprob: -5.190335273742676
    9. ' et' → logprob: -5.315335273742676
    10. '=' → logprob: -5.565335273742676

Token 1425: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1957198530435562
    2. '#' → logprob: -3.1957199573516846
    3. ':' → logprob: -3.8207199573516846
    4. ' #' → logprob: -4.1957197189331055
    5. ' for' → logprob: -4.4457197189331055
    6. ' and' → logprob: -4.8207197189331055
    7. '```' → logprob: -4.8207197189331055
    8. ' if' → logprob: -4.9457197189331055
    9. ' j' → logprob: -4.9457197189331055
    10. ',' → logprob: -5.0707197189331055

Token 1426: '10' (ID: 702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8535653948783875
    2. '=' → logprob: -1.6035654544830322
    3. ':' → logprob: -2.6035654544830322
    4. ' =' → logprob: -2.8535654544830322
    5. '   ' → logprob: -3.2285654544830322
    6. ' j' → logprob: -3.3535654544830322
    7. ' if' → logprob: -3.7285654544830322
    8. ' ' → logprob: -3.9785654544830322
    9. '#' → logprob: -4.478565216064453
    10. ' (' → logprob: -4.728565216064453

Token 1427: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20299285650253296
    2. '*(' → logprob: -1.7029929161071777
    3. ' *' → logprob: -6.452992916107178
    4. '*j' → logprob: -13.45299243927002
    5. ' *(' → logprob: -14.70299243927002
    6. '**' → logprob: -15.45299243927002
    7. '*((' → logprob: -16.327993392944336
    8. '(' → logprob: -16.452993392944336
    9. '*\' → logprob: -17.202993392944336
    10. '*
' → logprob: -17.327993392944336

Token 1428: '|' (ID: 91)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.8057703375816345
    2. 'j' → logprob: -0.9307703375816345
    3. ')' → logprob: -1.9307703971862793
    4. '(' → logprob: -5.180770397186279
    5. ' (' → logprob: -5.805770397186279
    6. 'abs' → logprob: -6.180770397186279
    7. ' )' → logprob: -6.930770397186279
    8. '(abs' → logprob: -7.930770397186279
    9. ' j' → logprob: -8.305769920349121
    10. 'max' → logprob: -8.680769920349121

Token 1429: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013988104183226824
    2. ' j' → logprob: -7.376399040222168
    3. 'i' → logprob: -8.126399040222168
    4. ')' → logprob: -8.876399040222168
    5. '+' → logprob: -9.001399040222168
    6. 'direction' → logprob: -9.251399040222168
    7. '   ' → logprob: -10.376399040222168
    8. ' ' → logprob: -10.876399040222168
    9. ' direction' → logprob: -11.251399040222168
    10. '(j' → logprob: -11.376399040222168

Token 1430: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07911890745162964
    2. '-' → logprob: -2.5791189670562744
    3. ' ' → logprob: -9.579118728637695
    4. '-j' → logprob: -9.954118728637695
    5. '-i' → logprob: -10.079118728637695
    6. '   ' → logprob: -10.329118728637695
    7. '  ' → logprob: -11.454118728637695
    8. '    ' → logprob: -12.204118728637695
    9. ')' → logprob: -12.454118728637695
    10. '[' → logprob: -12.829118728637695

Token 1431: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007686366327106953
    2. ' i' → logprob: -4.882686138153076
    3. ' ' → logprob: -10.632686614990234
    4. 'direction' → logprob: -10.632686614990234
    5. ' direction' → logprob: -11.507686614990234
    6. '   ' → logprob: -11.507686614990234
    7. '  ' → logprob: -12.632686614990234
    8. '_i' → logprob: -13.007686614990234
    9. 'j' → logprob: -13.257686614990234
    10. '	i' → logprob: -13.507686614990234

Token 1432: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.2820025682449341
    2. ')' → logprob: -1.407002568244934
    3. ')|' → logprob: -7.4070024490356445
    4. ' )' → logprob: -8.907002449035645
    5. ' |' → logprob: -10.282002449035645
    6. '*)' → logprob: -10.907002449035645
    7. '|)
' → logprob: -11.407002449035645
    8. ')*' → logprob: -12.282002449035645
    9. ')<=' → logprob: -12.532002449035645
    10. '*' → logprob: -12.657002449035645

Token 1433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010209545493125916
    2. ' )' → logprob: -4.760209560394287
    3. ' <=' → logprob: -6.760209560394287
    4. ')<=' → logprob: -8.510209083557129
    5. '<=' → logprob: -8.635209083557129
    6. '')' → logprob: -11.760209083557129
    7. '`)' → logprob: -11.885209083557129
    8. '=' → logprob: -12.010209083557129
    9. ' ' → logprob: -12.260209083557129
    10. '*)' → logprob: -12.385209083557129

Token 1434: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004071397706866264
    2. '<=' → logprob: -5.629071235656738
    3. ')' → logprob: -8.379071235656738
    4. ' ' → logprob: -9.129071235656738
    5. ')<=' → logprob: -9.379071235656738
    6. ' )' → logprob: -10.754071235656738
    7. ' ≤' → logprob: -12.254071235656738
    8. '    ' → logprob: -12.629071235656738
    9. ' ' → logprob: -12.879071235656738
    10. '=' → logprob: -13.004071235656738

Token 1435: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12694764137268066
    2. ' min' → logprob: -2.1269476413726807
    3. 'd' → logprob: -11.501947402954102
    4. ' d' → logprob: -12.751947402954102
    5. '	min' → logprob: -13.376947402954102
    6. '   ' → logprob: -13.626947402954102
    7. 'max' → logprob: -13.626947402954102
    8. ' ' → logprob: -14.751947402954102
    9. '(min' → logprob: -14.751947402954102
    10. '
' → logprob: -15.001947402954102

Token 1436: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.39782872796058655
    2. '[' → logprob: -1.3978286981582642
    3. '[j' → logprob: -2.5228288173675537
    4. '[max' → logprob: -8.022829055786133
    5. ')' → logprob: -8.397829055786133
    6. '[
' → logprob: -9.147829055786133
    7. '       ' → logprob: -9.897829055786133
    8. ']' → logprob: -10.397829055786133
    9. '   ' → logprob: -10.772829055786133
    10. '[position' → logprob: -11.147829055786133

Token 1437: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7236775159835815
    2. ']' → logprob: -0.9736775159835815
    3. '])' → logprob: -2.098677635192871
    4. '       ' → logprob: -5.348677635192871
    5. '],' → logprob: -5.598677635192871
    6. '),' → logprob: -6.348677635192871
    7. ')]' → logprob: -6.848677635192871
    8. '   ' → logprob: -7.098677635192871
    9. ' and' → logprob: -7.473677635192871
    10. '[i' → logprob: -7.848677635192871

Token 1438: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7527427673339844
    2. '       ' → logprob: -0.8777427673339844
    3. ')' → logprob: -3.5027427673339844
    4. ' ' → logprob: -4.002742767333984
    5. ' or' → logprob: -4.127742767333984
    6. ' et' → logprob: -4.377742767333984
    7. ' ' → logprob: -4.877742767333984
    8. ' 
' → logprob: -5.502742767333984
    9. '        ' → logprob: -5.752742767333984
    10. 'and' → logprob: -6.002742767333984

Token 1439: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4542672038078308
    2. '10' → logprob: -1.4542672634124756
    3. ' d' → logprob: -2.0792672634124756
    4. 'd' → logprob: -5.2042670249938965
    5. '```' → logprob: -7.5792670249938965
    6. ' ' → logprob: -8.454267501831055
    7. '[' → logprob: -9.079267501831055
    8. '`' → logprob: -10.954267501831055
    9. '       ' → logprob: -11.079267501831055
    10. '``' → logprob: -11.329267501831055

Token 1440: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5164884328842163
    2. '10' → logprob: -1.0164884328842163
    3. ' d' → logprob: -4.016488552093506
    4. 'min' → logprob: -4.391488552093506
    5. ' ' → logprob: -4.641488552093506
    6. ' min' → logprob: -7.391488552093506
    7. 'direction' → logprob: -8.391488075256348
    8. 'max' → logprob: -8.516488075256348
    9. '```' → logprob: -9.516488075256348
    10. '   ' → logprob: -10.016488075256348

Token 1441: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.5894907116889954
    2. '*' → logprob: -0.8394907116889954
    3. ' *' → logprob: -4.33949089050293
    4. '*[' → logprob: -8.58949089050293
    5. '[j' → logprob: -9.08949089050293
    6. '[' → logprob: -10.08949089050293
    7. '*j' → logprob: -10.46449089050293
    8. '   ' → logprob: -11.21449089050293
    9. ' *(' → logprob: -11.33949089050293
    10. '**' → logprob: -11.96449089050293

Token 1442: '|' (ID: 91)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21256738901138306
    2. ' j' → logprob: -1.9625673294067383
    3. '|' → logprob: -3.2125673294067383
    4. ' |' → logprob: -4.962567329406738
    5. '[j' → logprob: -6.087567329406738
    6. 'abs' → logprob: -7.587567329406738
    7. ' abs' → logprob: -8.087567329406738
    8. 'max' → logprob: -8.462567329406738
    9. ' ' → logprob: -8.962567329406738
    10. ' max' → logprob: -9.837567329406738

Token 1443: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010711279697716236
    2. ' j' → logprob: -4.760711193084717
    3. 'i' → logprob: -6.385711193084717
    4. '[j' → logprob: -8.010711669921875
    5. ' i' → logprob: -9.885711669921875
    6. ' ' → logprob: -12.010711669921875
    7. '[i' → logprob: -12.010711669921875
    8. '   ' → logprob: -12.635711669921875
    9. '[' → logprob: -12.760711669921875
    10. '	j' → logprob: -13.385711669921875

Token 1444: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04921501502394676
    2. '-' → logprob: -3.049215078353882
    3. '-i' → logprob: -7.674214839935303
    4. '-j' → logprob: -8.924215316772461
    5. '	' → logprob: -11.174215316772461
    6. '   ' → logprob: -11.799215316772461
    7. ' ' → logprob: -12.674215316772461
    8. '[' → logprob: -13.799215316772461
    9. '-next' → logprob: -14.549215316772461
    10. '    ' → logprob: -14.924215316772461

Token 1445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006395249627530575
    2. 'j' → logprob: -5.50639533996582
    3. ' i' → logprob: -6.13139533996582
    4. ' ' → logprob: -10.13139533996582
    5. '   ' → logprob: -10.25639533996582
    6. ' j' → logprob: -10.50639533996582
    7. '  ' → logprob: -11.00639533996582
    8. 'direction' → logprob: -11.88139533996582
    9. '```' → logprob: -12.88139533996582
    10. 'user' → logprob: -13.25639533996582

Token 1446: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.04901764914393425
    2. ')' → logprob: -3.0490176677703857
    3. ')|' → logprob: -8.174017906188965
    4. '])' → logprob: -9.674017906188965
    5. '|)
' → logprob: -10.674017906188965
    6. '`)' → logprob: -10.924017906188965
    7. ')<=' → logprob: -11.424017906188965
    8. '<=' → logprob: -12.549017906188965
    9. '[' → logprob: -12.674017906188965
    10. ' |' → logprob: -12.674017906188965

Token 1447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037034007254987955
    2. ')<=' → logprob: -6.378703594207764
    3. ' )' → logprob: -7.003703594207764
    4. ' <=' → logprob: -7.253703594207764
    5. '<=' → logprob: -8.253703117370605
    6. ']' → logprob: -11.253703117370605
    7. '`)' → logprob: -11.253703117370605
    8. ')]' → logprob: -11.378703117370605
    9. '       ' → logprob: -11.503703117370605
    10. '')' → logprob: -11.503703117370605

Token 1448: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.103011853992939
    2. '<=' → logprob: -2.3530118465423584
    3. ')' → logprob: -7.1030120849609375
    4. '[' → logprob: -7.4780120849609375
    5. '[i' → logprob: -7.6030120849609375
    6. '=' → logprob: -8.728012084960938
    7. '[j' → logprob: -9.103012084960938
    8. ']' → logprob: -9.103012084960938
    9. ')<=' → logprob: -9.228012084960938
    10. ' >=' → logprob: -9.478012084960938

Token 1449: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25199005007743835
    2. 'd' → logprob: -1.5019900798797607
    3. ' ' → logprob: -9.87699031829834
    4. '```' → logprob: -13.12699031829834
    5. ' ' → logprob: -13.25199031829834
    6. '	d' → logprob: -13.62699031829834
    7. 's' → logprob: -14.00199031829834
    8. '[' → logprob: -14.87699031829834
    9. '[d' → logprob: -15.00199031829834
    10. '`' → logprob: -15.12699031829834

Token 1450: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5373772978782654
    2. '[i' → logprob: -1.4123773574829102
    3. '[' → logprob: -1.7873773574829102
    4. ')' → logprob: -5.78737735748291
    5. ']' → logprob: -7.03737735748291
    6. '[
' → logprob: -8.28737735748291
    7. '])' → logprob: -9.41237735748291
    8. 'j' → logprob: -9.66237735748291
    9. '   ' → logprob: -9.78737735748291
    10. '```' → logprob: -10.16237735748291

Token 1451: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029337773099541664
    2. ')
' → logprob: -3.6543378829956055
    3. '       ' → logprob: -6.0293378829956055
    4. ']' → logprob: -8.154337882995605
    5. ' )' → logprob: -9.529337882995605
    6. '   ' → logprob: -10.279337882995605
    7. '])' → logprob: -10.279337882995605
    8. '```' → logprob: -10.279337882995605
    9. '#' → logprob: -10.404337882995605
    10. ']
' → logprob: -11.404337882995605

Token 1452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006525537930428982
    2. '        
' → logprob: -5.75652551651001
    3. '\n' → logprob: -7.38152551651001
    4. '\' → logprob: -7.88152551651001
    5. '   ' → logprob: -8.131525993347168
    6. ' 
' → logprob: -8.256525993347168
    7. ')' → logprob: -8.256525993347168
    8. '<|end|>' → logprob: -8.506525993347168
    9. ',' → logprob: -9.131525993347168
    10. ' ' → logprob: -9.256525993347168

Token 1453: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1471196562051773
    2. '        
' → logprob: -2.3971197605133057
    3. '
' → logprob: -4.147119522094727
    4. ' 
' → logprob: -5.147119522094727
    5. '\n' → logprob: -5.272119522094727
    6. '    
' → logprob: -5.272119522094727
    7. '   ' → logprob: -5.272119522094727
    8. '  
' → logprob: -5.897119522094727
    9. '    ' → logprob: -7.147119522094727
    10. '\' → logprob: -7.147119522094727

Token 1454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008207561448216438
    2. '        
' → logprob: -5.38320779800415
    3. '
' → logprob: -5.75820779800415
    4. '   ' → logprob: -8.133207321166992
    5. '        ' → logprob: -10.133207321166992
    6. '    
' → logprob: -10.508207321166992
    7. '    ' → logprob: -10.633207321166992
    8. '        
        
' → logprob: -12.008207321166992
    9. ' 
' → logprob: -12.508207321166992
    10. '           ' → logprob: -12.508207321166992

Token 1455: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09955249726772308
    2. '   ' → logprob: -2.7245523929595947
    3. '        
' → logprob: -4.349552631378174
    4. '
' → logprob: -4.974552631378174
    5. '    
' → logprob: -5.724552631378174
    6. 'i' → logprob: -5.849552631378174
    7. 'for' → logprob: -6.474552631378174
    8. ' i' → logprob: -7.099552631378174
    9. ' for' → logprob: -8.224552154541016
    10. 'j' → logprob: -9.099552154541016

Token 1456: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.494545578956604
    2. ' i' → logprob: -1.619545578956604
    3. 'i' → logprob: -1.869545578956604
    4. '   ' → logprob: -4.2445454597473145
    5. 'j' → logprob: -4.9945454597473145
    6. '        
' → logprob: -5.4945454597473145
    7. ' for' → logprob: -5.9945454597473145
    8. '
' → logprob: -6.3695454597473145
    9. 'for' → logprob: -6.4945454597473145
    10. ' j' → logprob: -6.7445454597473145

Token 1457: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.911378026008606
    2. ' =' → logprob: -1.536378026008606
    3. '=' → logprob: -2.4113779067993164
    4. ' continue' → logprob: -2.7863779067993164
    5. ' for' → logprob: -2.9113779067993164
    6. '    ' → logprob: -3.0363779067993164
    7. '   ' → logprob: -3.5363779067993164
    8. 'continue' → logprob: -4.161377906799316
    9. '       ' → logprob: -4.286377906799316
    10. 'contin' → logprob: -4.411377906799316

Token 1458: ' avancer' (ID: 151163)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.8489490747451782
    2. ' continuer' → logprob: -1.7239490747451782
    3. ' parcour' → logprob: -2.3489489555358887
    4. 'util' → logprob: -2.4739489555358887
    5. ' utiliser' → logprob: -2.4739489555358887
    6. 'impl' → logprob: -3.5989489555358887
    7. 'maint' → logprob: -3.9739489555358887
    8. ' avancer' → logprob: -4.223948955535889
    9. ' iter' → logprob: -4.473948955535889
    10. '   ' → logprob: -4.723948955535889

Token 1459: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7666041254997253
    2. ' i' → logprob: -2.01660418510437
    3. ' ' → logprob: -2.14160418510437
    4. ' d' → logprob: -2.26660418510437
    5. ' dans' → logprob: -2.76660418510437
    6. ' step' → logprob: -3.89160418510437
    7. ' à' → logprob: -4.266603946685791
    8. ' _' → logprob: -4.391603946685791
    9. ' =' → logprob: -4.516603946685791
    10. ' pas' → logprob: -4.891603946685791

Token 1460: ' ét' (ID: 4976)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7990912199020386
    2. ' continu' → logprob: -2.174091339111328
    3. ' for' → logprob: -3.049091339111328
    4. '```' → logprob: -3.049091339111328
    5. 'pas' → logprob: -3.174091339111328
    6. ' ' → logprob: -3.174091339111328
    7. ' utilisant' → logprob: -3.299091339111328
    8. ' range' → logprob: -3.424091339111328
    9. ' bloc' → logprob: -3.424091339111328
    10. 'bloc' → logprob: -3.549091339111328

Token 1461: 'endant' (ID: 11380)
  Prédit: 'ape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.24355725944042206
    2. 'endue' → logprob: -3.4935572147369385
    3. 'endant' → logprob: -4.118557453155518
    4. 'a' → logprob: -4.118557453155518
    5. 'endre' → logprob: -4.118557453155518
    6. 'i' → logprob: -4.368557453155518
    7. '#' → logprob: -4.493557453155518
    8. '   ' → logprob: -4.618557453155518
    9. ']' → logprob: -4.868557453155518
    10. 'r' → logprob: -5.181057453155518

Token 1462: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8297080993652344
    2. 'max' → logprob: -1.3297080993652344
    3. ' max' → logprob: -2.3297080993652344
    4. ' le' → logprob: -2.4547080993652344
    5. 'le' → logprob: -3.3297080993652344
    6. ' l' → logprob: -3.5797080993652344
    7. 'la' → logprob: -3.9547080993652344
    8. 'l' → logprob: -4.579708099365234
    9. ' progressivement' → logprob: -4.954708099365234
    10. ' notre' → logprob: -5.829708099365234

Token 1463: ' zone' (ID: 15070)
  Prédit: ' portée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' portée' → logprob: -0.5083299875259399
    2. 'max' → logprob: -1.75832998752594
    3. ' reachable' → logprob: -3.2583298683166504
    4. 'port' → logprob: -3.3833298683166504
    5. 'reach' → logprob: -3.6333298683166504
    6. ' max' → logprob: -3.7583298683166504
    7. 'fen' → logprob: -3.8833298683166504
    8. 'reachable' → logprob: -4.25832986831665
    9. ' reach' → logprob: -4.25832986831665
    10. ' fenêtre' → logprob: -5.00832986831665

Token 1464: ' reachable' (ID: 143580)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.306883692741394
    2. ' reachable' → logprob: -1.556883692741394
    3. ' _' → logprob: -2.5568838119506836
    4. '_' → logprob: -2.6818838119506836
    5. 'reachable' → logprob: -2.9318838119506836
    6. 'max' → logprob: -3.3068838119506836
    7. ' max' → logprob: -3.3068838119506836
    8. '_max' → logprob: -3.3068838119506836
    9. ' maximale' → logprob: -3.8068838119506836
    10. ' suivante' → logprob: -3.8068838119506836

Token 1465: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6210977435112
    2. 's' → logprob: -2.2460978031158447
    3. '_' → logprob: -2.7460978031158447
    4. '[' → logprob: -2.8710978031158447
    5. '   ' → logprob: -3.1210978031158447
    6. ',' → logprob: -3.1210978031158447
    7. ':' → logprob: -3.6210978031158447
    8. '       ' → logprob: -4.246097564697266
    9. ' =' → logprob: -4.496097564697266
    10. ')' → logprob: -4.621097564697266

Token 1466: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01924881897866726
    2. '        
' → logprob: -4.644248962402344
    3. '   ' → logprob: -6.019248962402344
    4. '```' → logprob: -6.144248962402344
    5. '    
' → logprob: -7.144248962402344
    6. ' 
' → logprob: -7.394248962402344
    7. '\' → logprob: -7.394248962402344
    8. '    ' → logprob: -7.644248962402344
    9. '\n' → logprob: -8.019248962402344
    10. '  
' → logprob: -8.144248962402344

Token 1467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09748976677656174
    2. '   ' → logprob: -3.097489833831787
    3. '        
' → logprob: -4.097489833831787
    4. '    
' → logprob: -4.472489833831787
    5. ' 
' → logprob: -4.847489833831787
    6. '
' → logprob: -5.597489833831787
    7. ' i' → logprob: -6.222489833831787
    8. '\' → logprob: -6.722489833831787
    9. ' for' → logprob: -6.722489833831787
    10. '  
' → logprob: -7.347489833831787

Token 1468: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.685919463634491
    2. ' i' → logprob: -1.1859195232391357
    3. '       ' → logprob: -2.1859195232391357
    4. ' for' → logprob: -3.0609195232391357
    5. 'i' → logprob: -3.9359195232391357
    6. 'for' → logprob: -5.435919284820557
    7. '    
' → logprob: -6.435919284820557
    8. '
' → logprob: -6.685919284820557
    9. '        
' → logprob: -6.810919284820557
    10. ' current' → logprob: -7.060919284820557

Token 1469: ' Pour' (ID: 13931)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4358898997306824
    2. '   ' → logprob: -1.6858899593353271
    3. 'i' → logprob: -2.935889959335327
    4. '       ' → logprob: -3.060889959335327
    5. ' for' → logprob: -3.435889959335327
    6. ' start' → logprob: -4.560889720916748
    7. ' current' → logprob: -5.560889720916748
    8. ' pos' → logprob: -5.685889720916748
    9. ' next' → logprob: -5.685889720916748
    10. '    ' → logprob: -6.060889720916748

Token 1470: ' faciliter' (ID: 106284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6531885266304016
    2. 'i' → logprob: -0.7781885266304016
    3. ' j' → logprob: -4.403188705444336
    4. 'j' → logprob: -5.778188705444336
    5. ' idx' → logprob: -6.528188705444336
    6. 'pos' → logprob: -7.153188705444336
    7. ' pos' → logprob: -7.278188705444336
    8. ' _' → logprob: -7.528188705444336
    9. ' next' → logprob: -7.903188705444336
    10. ' ' → logprob: -8.278188705444336

Token 1471: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5449290871620178
    2. 'i' → logprob: -1.044929027557373
    3. ' j' → logprob: -3.919929027557373
    4. ' idx' → logprob: -4.294929027557373
    5. ' l' → logprob: -4.419929027557373
    6. 'l' → logprob: -5.294929027557373
    7. ' _' → logprob: -5.794929027557373
    8. '_' → logprob: -6.044929027557373
    9. ' la' → logprob: -6.044929027557373
    10. ' index' → logprob: -6.169929027557373

Token 1472: ' balay' (ID: 186956)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.391053169965744
    2. ' i' → logprob: -1.5160531997680664
    3. '_' → logprob: -3.5160531997680664
    4. ' ' → logprob: -3.6410531997680664
    5. ' =' → logprob: -4.516053199768066
    6. '=' → logprob: -4.891053199768066
    7. ' _' → logprob: -5.641053199768066
    8. 'range' → logprob: -5.641053199768066
    9. 'index' → logprob: -5.766053199768066
    10. ' range' → logprob: -5.766053199768066

Token 1473: 'age' (ID: 477)
  Prédit: 'nage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nage' → logprob: -0.6789887547492981
    2. 'n' → logprob: -1.1789886951446533
    3. 'ancement' → logprob: -2.5539886951446533
    4. 'nement' → logprob: -2.6789886951446533
    5. 'nance' → logprob: -3.9289886951446533
    6. 'age' → logprob: -4.928988933563232
    7. 'ç' → logprob: -6.303988933563232
    8. 'in' → logprob: -6.553988933563232
    9. 'ance' → logprob: -6.928988933563232
    10. '#' → logprob: -7.428988933563232

Token 1474: ' efficace' (ID: 54338)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5922089219093323
    2. ',' → logprob: -2.0922088623046875
    3. '=' → logprob: -2.3422088623046875
    4. '   ' → logprob: -2.8422088623046875
    5. 'for' → logprob: -2.8422088623046875
    6. '       ' → logprob: -3.8422088623046875
    7. ' for' → logprob: -4.8422088623046875
    8. ' i' → logprob: -4.8422088623046875
    9. 'de' → logprob: -4.9672088623046875
    10. ':' → logprob: -5.0922088623046875

Token 1475: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.099970817565918
    2. ' =' → logprob: -1.349970817565918
    3. ':' → logprob: -1.849970817565918
    4. '       ' → logprob: -2.474970817565918
    5. '   ' → logprob: -2.474970817565918
    6. '=' → logprob: -4.474970817565918
    7. ':
' → logprob: -4.724970817565918
    8. '```' → logprob: -4.849970817565918
    9. ',
' → logprob: -5.099970817565918
    10. ' :' → logprob: -5.224970817565918

Token 1476: ' gén' (ID: 15330)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1263773441314697
    2. ' =' → logprob: -2.5013773441314697
    3. ' continue' → logprob: -2.6263773441314697
    4. '<|end|>' → logprob: -2.6263773441314697
    5. ' ' → logprob: -2.8763773441314697
    6. '    ' → logprob: -3.1263773441314697
    7. '=' → logprob: -3.1263773441314697
    8. 'for' → logprob: -3.1263773441314697
    9. ' range' → logprob: -3.2513773441314697
    10. ' for' → logprob: -3.3763773441314697

Token 1477: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.06397464871406555
    2. 'érer' → logprob: -3.188974618911743
    3. 'er' → logprob: -4.563974857330322
    4. 'def' → logprob: -5.938974857330322
    5. 'è' → logprob: -6.688974857330322
    6. '#' → logprob: -7.188974857330322
    7. 'range' → logprob: -7.188974857330322
    8. '```' → logprob: -7.438974857330322
    9. 'èrent' → logprob: -7.938974857330322
    10. 'r' → logprob: -8.063974380493164

Token 1478: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.398804783821106
    2. 'une' → logprob: -1.523804783821106
    3. 'un' → logprob: -1.648804783821106
    4. ' un' → logprob: -2.5238046646118164
    5. ' des' → logprob: -2.6488046646118164
    6. 'des' → logprob: -2.8988046646118164
    7. 'a' → logprob: -3.5238046646118164
    8. 'events' → logprob: -3.6488046646118164
    9. ' deux' → logprob: -4.148804664611816
    10. ' a' → logprob: -4.898804664611816

Token 1479: ' tableau' (ID: 67053)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.8480983376502991
    2. 'queue' → logprob: -1.5980982780456543
    3. 'next' → logprob: -2.0980982780456543
    4. 'list' → logprob: -2.2230982780456543
    5. 'liste' → logprob: -3.4730982780456543
    6. 'stack' → logprob: -4.098098278045654
    7. 'from' → logprob: -4.473098278045654
    8. ' events' → logprob: -4.848098278045654
    9. ' next' → logprob: -4.848098278045654
    10. 'import' → logprob: -5.098098278045654

Token 1480: ' "' (ID: 392)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.2262318134307861
    2. ' des' → logprob: -1.4762318134307861
    3. ' =' → logprob: -1.7262318134307861
    4. 'de' → logprob: -3.101231813430786
    5. 'd' → logprob: -3.226231813430786
    6. '=' → logprob: -3.351231813430786
    7. '[' → logprob: -3.476231813430786
    8. 's' → logprob: -4.101231575012207
    9. ' de' → logprob: -4.476231575012207
    10. ' of' → logprob: -4.601231575012207

Token 1481: 'lim' (ID: 5406)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4657425880432129
    2. 'max' → logprob: -1.590742588043213
    3. ' next' → logprob: -2.715742588043213
    4. ' jumps' → logprob: -4.590742588043213
    5. 'next' → logprob: -4.715742588043213
    6. ' jump' → logprob: -4.715742588043213
    7. ' min' → logprob: -4.715742588043213
    8. 'jump' → logprob: -4.715742588043213
    9. ' d' → logprob: -5.465742588043213
    10. ' of' → logprob: -5.840742588043213

Token 1482: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5003180503845215
    2. 'ite' → logprob: -1.8753180503845215
    3. 'ites' → logprob: -2.3753180503845215
    4. 'its' → logprob: -2.5003180503845215
    5. 'mit' → logprob: -4.1253180503845215
    6. '```' → logprob: -5.1253180503845215
    7. 'iter' → logprob: -5.5003180503845215
    8. 'max' → logprob: -5.5003180503845215
    9. 'inf' → logprob: -5.6253180503845215
    10. ']' → logprob: -5.8753180503845215

Token 1483: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4340037405490875
    2. '_s' → logprob: -1.8090037107467651
    3. '_re' → logprob: -2.9340038299560547
    4. '_jump' → logprob: -3.4340038299560547
    5. '_at' → logprob: -3.6840038299560547
    6. ' =' → logprob: -3.6840038299560547
    7. '_max' → logprob: -3.8090038299560547
    8. '_' → logprob: -4.184003829956055
    9. '_de' → logprob: -6.184003829956055
    10. ')' → logprob: -6.309003829956055

Token 1484: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02598150633275509
    2. '=' → logprob: -4.650981426239014
    3. '_max' → logprob: -5.400981426239014
    4. '_' → logprob: -5.525981426239014
    5. '_s' → logprob: -6.400981426239014
    6. 's' → logprob: -6.900981426239014
    7. '_limit' → logprob: -7.275981426239014
    8. '_d' → logprob: -7.900981426239014
    9. '_distance' → logprob: -7.900981426239014
    10. '_lim' → logprob: -8.025981903076172

Token 1485: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06664876639842987
    2. '=' → logprob: -2.8166487216949463
    3. '[i' → logprob: -6.816648960113525
    4. '[' → logprob: -6.941648960113525
    5. '=[' → logprob: -7.066648960113525
    6. ' est' → logprob: -8.066648483276367
    7. '   ' → logprob: -8.191648483276367
    8. 'est' → logprob: -8.441648483276367
    9. ':' → logprob: -8.566648483276367
    10. '       ' → logprob: -8.941648483276367

Token 1486: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5248488187789917
    2. '   ' → logprob: -2.0248489379882812
    3. ')' → logprob: -2.2748489379882812
    4. ' les' → logprob: -2.5248489379882812
    5. 'les' → logprob: -2.5248489379882812
    6. ' la' → logprob: -2.8998489379882812
    7. '[' → logprob: -3.0248489379882812
    8. 'le' → logprob: -3.1498489379882812
    9. ',' → logprob: -3.3998489379882812
    10. 'la' → logprob: -3.8998489379882812

Token 1487: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6171691417694092
    2. ' chaque' → logprob: -0.9921691417694092
    3. 'each' → logprob: -2.617169141769409
    4. ' i' → logprob: -4.867169380187988
    5. 'j' → logprob: -5.617169380187988
    6. ' each' → logprob: -6.992169380187988
    7. 'ch' → logprob: -7.242169380187988
    8. '[i' → logprob: -7.742169380187988
    9. 'every' → logprob: -8.117169380187988
    10. ' ' → logprob: -8.242169380187988

Token 1488: ' trampoline' (ID: 162506)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3692469894886017
    2. 'i' → logprob: -1.2442469596862793
    3. 'indice' → logprob: -4.869246959686279
    4. 'index' → logprob: -5.244246959686279
    5. ' index' → logprob: -6.619246959686279
    6. 'j' → logprob: -6.744246959686279
    7. ' j' → logprob: -7.369246959686279
    8. 'idx' → logprob: -7.369246959686279
    9. '```' → logprob: -7.369246959686279
    10. ' idx' → logprob: -7.494246959686279

Token 1489: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21138015389442444
    2. '[i' → logprob: -2.7113802433013916
    3. 'i' → logprob: -3.2113802433013916
    4. ' d' → logprob: -3.3363802433013916
    5. ' j' → logprob: -3.8363802433013916
    6. 'd' → logprob: -5.3363800048828125
    7. ' ' → logprob: -5.4613800048828125
    8. '[j' → logprob: -5.9613800048828125
    9. ' reachable' → logprob: -6.4613800048828125
    10. ' possible' → logprob: -6.4613800048828125

Token 1490: '       ' (ID: 309)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1791940927505493
    2. ' =' → logprob: -1.6791940927505493
    3. '   ' → logprob: -2.4291939735412598
    4. '_' → logprob: -2.5541939735412598
    5. '[' → logprob: -2.6791939735412598
    6. ',' → logprob: -3.1791939735412598
    7. ' ' → logprob: -3.4291939735412598
    8. 'd' → logprob: -3.8041939735412598
    9. ' i' → logprob: -3.9291939735412598
    10. ' d' → logprob: -4.05419397354126

Token 1491: ' #' (ID: 1069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8467230200767517
    2. 'i' → logprob: -1.0967230796813965
    3. '[i' → logprob: -2.3467230796813965
    4. ' =' → logprob: -3.2217230796813965
    5. '_' → logprob: -3.5967230796813965
    6. '   ' → logprob: -4.0967230796813965
    7. '_i' → logprob: -4.3467230796813965
    8. ' _' → logprob: -4.5967230796813965
    9. ' ' → logprob: -4.8467230796813965
    10. ',' → logprob: -5.0967230796813965

Token 1492: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3194599747657776
    2. ' i' → logprob: -1.6944599151611328
    3. '[i' → logprob: -3.444459915161133
    4. '_' → logprob: -4.069459915161133
    5. ' =' → logprob: -4.569459915161133
    6. ' ' → logprob: -5.319459915161133
    7. '=' → logprob: -5.569459915161133
    8. '_i' → logprob: -5.694459915161133
    9. '   ' → logprob: -6.194459915161133
    10. 'j' → logprob: -6.319459915161133

Token 1493: ' max' (ID: 2999)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.8684508204460144
    2. 'max' → logprob: -1.3684508800506592
    3. ' maximum' → logprob: -1.3684508800506592
    4. ' max' → logprob: -3.493450880050659
    5. 'nombre' → logprob: -4.74345064163208
    6. 'd' → logprob: -4.74345064163208
    7. 'plus' → logprob: -5.11845064163208
    8. ' nombre' → logprob: -5.36845064163208
    9. ' maximal' → logprob: -6.49345064163208
    10. 'minimum' → logprob: -6.49345064163208

Token 1494: ' j' (ID: 441)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.010477961972355843
    2. ' reachable' → logprob: -5.7604780197143555
    3. '_' → logprob: -6.0104780197143555
    4. 'Reach' → logprob: -6.5104780197143555
    5. 'reachable' → logprob: -7.2604780197143555
    6. '_at' → logprob: -7.5104780197143555
    7. '_jump' → logprob: -7.5104780197143555
    8. '_possible' → logprob: -8.135478019714355
    9. '_index' → logprob: -8.635478019714355
    10. '_range' → logprob: -9.135478019714355

Token 1495: ' tel' (ID: 10716)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.2138962745666504
    2. '_' → logprob: -2.3388962745666504
    3. ' =' → logprob: -3.8388962745666504
    4. '_at' → logprob: -4.08889627456665
    5. '_possible' → logprob: -4.46389627456665
    6. ' atteint' → logprob: -4.83889627456665
    7. 'reachable' → logprob: -5.08889627456665
    8. ']' → logprob: -5.21389627456665
    9. '[' → logprob: -5.71389627456665
    10. ' reach' → logprob: -5.83889627456665

Token 1496: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.3666498064994812
    2. '=' → logprob: -2.116649866104126
    3. 'à' → logprob: -2.366649866104126
    4. ' que' → logprob: -3.866649866104126
    5. '```' → logprob: -3.991649866104126
    6. 'qu' → logprob: -4.116649627685547
    7. '   ' → logprob: -4.366649627685547
    8. 'possible' → logprob: -5.616649627685547
    9. '       ' → logprob: -5.991649627685547
    10. 'i' → logprob: -6.491649627685547

Token 1497: ' j' (ID: 441)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9891334772109985
    2. ' ' → logprob: -1.2391334772109985
    3. ' d' → logprob: -2.114133358001709
    4. 'd' → logprob: -2.864133358001709
    5. ' abs' → logprob: -3.114133358001709
    6. ' j' → logprob: -3.489133358001709
    7. ' direction' → logprob: -3.739133358001709
    8. ' (' → logprob: -3.739133358001709
    9. 'abs' → logprob: -4.114133358001709
    10. 'j' → logprob: -5.239133358001709

Token 1498: ' dans' (ID: 2671)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16703158617019653
    2. ' =' → logprob: -2.6670315265655518
    3. '=' → logprob: -3.4170315265655518
    4. '<=' → logprob: -4.542031764984131
    5. ' >=' → logprob: -4.667031764984131
    6. ' <' → logprob: -5.042031764984131
    7. '[' → logprob: -5.292031764984131
    8. ' ≤' → logprob: -5.917031764984131
    9. ']' → logprob: -6.167031764984131
    10. '```' → logprob: -6.167031764984131

Token 1499: ' direction' (ID: 9262)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1526641845703125
    2. ' range' → logprob: -2.0276641845703125
    3. '[' → logprob: -5.1526641845703125
    4. '[i' → logprob: -7.1526641845703125
    5. '   ' → logprob: -7.5276641845703125
    6. '[N' → logprob: -7.5276641845703125
    7. ' [' → logprob: -7.9026641845703125
    8. 'reachable' → logprob: -8.152664184570312
    9. '(range' → logprob: -8.277664184570312
    10. ' la' → logprob: -8.652664184570312

Token 1500: ' puisse' (ID: 77890)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4029228389263153
    2. '=' → logprob: -1.7779228687286377
    3. '[' → logprob: -3.2779228687286377
    4. ']' → logprob: -3.5279228687286377
    5. ' ==' → logprob: -3.7779228687286377
    6. '   ' → logprob: -4.402922630310059
    7. '_' → logprob: -4.527922630310059
    8. '```' → logprob: -4.652922630310059
    9. '       ' → logprob: -5.402922630310059
    10. ' +' → logprob: -5.402922630310059

Token 1501: ' être' (ID: 9104)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.444815993309021
    2. 'être' → logprob: -1.819815993309021
    3. ' atteindre' → logprob: -2.4448161125183105
    4. '_' → logprob: -3.6948161125183105
    5. ' être' → logprob: -3.9448161125183105
    6. 'aller' → logprob: -3.9448161125183105
    7. '_at' → logprob: -4.3198161125183105
    8. ' ' → logprob: -5.5698161125183105
    9. ' ' → logprob: -5.5698161125183105
    10. ' aller' → logprob: -5.6948161125183105

Token 1502: ' rejoint' (ID: 159331)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.517064094543457
    2. 'reachable' → logprob: -1.517064094543457
    3. 'd' → logprob: -3.017064094543457
    4. ' d' → logprob: -3.392064094543457
    5. 'max' → logprob: -3.892064094543457
    6. 'direction' → logprob: -4.142064094543457
    7. ' reached' → logprob: -4.142064094543457
    8. ' direction' → logprob: -4.267064094543457
    9. 'reach' → logprob: -4.767064094543457
    10. ' atteint' → logprob: -5.392064094543457

Token 1503: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0941542312502861
    2. '=' → logprob: -3.719154119491577
    3. 's' → logprob: -3.844154119491577
    4. '   ' → logprob: -4.594154357910156
    5. ':' → logprob: -4.969154357910156
    6. '[' → logprob: -5.219154357910156
    7. '_' → logprob: -5.844154357910156
    8. '[i' → logprob: -5.969154357910156
    9. ' :' → logprob: -6.219154357910156
    10. ']' → logprob: -6.344154357910156

Token 1504: '        
' (ID: 3564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.217493936419487
    2. '   ' → logprob: -2.717494010925293
    3. 's' → logprob: -2.967494010925293
    4. '=' → logprob: -3.342494010925293
    5. '_' → logprob: -4.467494010925293
    6. '       ' → logprob: -4.717494010925293
    7. '[' → logprob: -5.092494010925293
    8. ':' → logprob: -5.592494010925293
    9. ' ' → logprob: -5.842494010925293
    10. ' :' → logprob: -6.092494010925293

Token 1505: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1579810231924057
    2. '   ' → logprob: -2.9079809188842773
    3. '_' → logprob: -3.5329809188842773
    4. '=' → logprob: -3.9079809188842773
    5. '       ' → logprob: -3.9079809188842773
    6. 's' → logprob: -4.532980918884277
    7. ' ' → logprob: -6.407980918884277
    8. '    ' → logprob: -6.657980918884277
    9. '[' → logprob: -6.907980918884277
    10. ':' → logprob: -7.032980918884277

Token 1506: ' #' (ID: 1069)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.7761063575744629
    2. '   ' → logprob: -1.901106357574463
    3. 'limit' → logprob: -2.026106357574463
    4. ' limite' → logprob: -2.776106357574463
    5. ' =' → logprob: -3.151106357574463
    6. '       ' → logprob: -3.276106357574463
    7. ' limites' → logprob: -3.526106357574463
    8. 'limits' → logprob: -4.151106357574463
    9. '=' → logprob: -4.276106357574463
    10. ' limits' → logprob: -4.651106357574463

Token 1507: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32723143696784973
    2. '   ' → logprob: -2.3272314071655273
    3. 'limit' → logprob: -2.7022314071655273
    4. '        
' → logprob: -3.4522314071655273
    5. 'lim' → logprob: -3.5772314071655273
    6. 'max' → logprob: -4.202231407165527
    7. 'n' → logprob: -4.827231407165527
    8. '
' → logprob: -5.077231407165527
    9. ' max' → logprob: -5.452231407165527
    10. '    
' → logprob: -5.577231407165527

Token 1508: ' crée' (ID: 102256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7696438431739807
    2. '=' → logprob: -0.8946438431739807
    3. '_' → logprob: -3.769643783569336
    4. ' continue' → logprob: -3.769643783569336
    5. 'continue' → logprob: -3.894643783569336
    6. ' va' → logprob: -4.894643783569336
    7. 'contin' → logprob: -4.894643783569336
    8. '_continue' → logprob: -4.894643783569336
    9. 'def' → logprob: -5.019643783569336
    10. '       ' → logprob: -5.769643783569336

Token 1509: ' un' (ID: 537)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.70728999376297
    2. '[' → logprob: -1.9572899341583252
    3. ' limit' → logprob: -2.207289934158325
    4. ' un' → logprob: -2.582289934158325
    5. ' une' → logprob: -3.582289934158325
    6. ' [' → logprob: -3.582289934158325
    7. ' limite' → logprob: -3.832289934158325
    8. 'limits' → logprob: -3.957289934158325
    9. 'une' → logprob: -4.332290172576904
    10. ' limits' → logprob: -4.332290172576904

Token 1510: ' tableau' (ID: 67053)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.31385648250579834
    2. 'limit' → logprob: -2.438856601715088
    3. 'tab' → logprob: -3.063856601715088
    4. ' tableau' → logprob: -3.188856601715088
    5. 'limits' → logprob: -4.063856601715088
    6. 'interval' → logprob: -4.563856601715088
    7. 'max' → logprob: -4.563856601715088
    8. 'table' → logprob: -4.563856601715088
    9. ' array' → logprob: -4.688856601715088
    10. 'list' → logprob: -5.188856601715088

Token 1511: ' next' (ID: 2613)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9424930214881897
    2. ' =' → logprob: -2.317492961883545
    3. 'lim' → logprob: -2.692492961883545
    4. 'des' → logprob: -2.942492961883545
    5. 'max' → logprob: -3.067492961883545
    6. ' limits' → logprob: -3.192492961883545
    7. '_limit' → logprob: -3.317492961883545
    8. '_lim' → logprob: -3.317492961883545
    9. ' limites' → logprob: -3.317492961883545
    10. '_limits' → logprob: -3.567492961883545

Token 1512: '_max' (ID: 13731)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.4979445934295654
    2. '_indices' → logprob: -1.4979445934295654
    3. '_' → logprob: -1.6229445934295654
    4. '_pos' → logprob: -2.8729445934295654
    5. '_max' → logprob: -2.9979445934295654
    6. '_jump' → logprob: -3.1229445934295654
    7. '_lim' → logprob: -3.2479445934295654
    8. '_limits' → logprob: -3.4979445934295654
    9. '_re' → logprob: -3.6229445934295654
    10. '_positions' → logprob: -3.6229445934295654

Token 1513: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.3319293260574341
    2. '_jump' → logprob: -1.456929326057434
    3. '_' → logprob: -4.0819292068481445
    4. '_index' → logprob: -4.7069292068481445
    5. '_range' → logprob: -5.2069292068481445
    6. '_indices' → logprob: -5.7069292068481445
    7. 'Reach' → logprob: -5.8319292068481445
    8. '_limit' → logprob: -6.0819292068481445
    9. ' =' → logprob: -6.3319292068481445
    10. '_idx' → logprob: -6.5819292068481445

Token 1514: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0009118211455643177
    2. 'achable' → logprob: -7.125911712646484
    3. '_' → logprob: -10.125911712646484
    4. 'each' → logprob: -10.875911712646484
    5. 'Ach' → logprob: -11.500911712646484
    6. 'reach' → logprob: -11.625911712646484
    7. 'a' → logprob: -12.125911712646484
    8. '   ' → logprob: -12.875911712646484
    9. 'ache' → logprob: -13.375911712646484
    10. '
' → logprob: -13.375911712646484

Token 1515: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036332078743726015
    2. '=' → logprob: -5.62863302230835
    3. '[]' → logprob: -11.378633499145508
    4. 's' → logprob: -11.753633499145508
    5. '[' → logprob: -12.003633499145508
    6. ' ' → logprob: -13.378633499145508
    7. '=[' → logprob: -13.503633499145508
    8. '=[]' → logprob: -13.753633499145508
    9. '   ' → logprob: -14.128633499145508
    10. '```' → logprob: -14.628633499145508

Token 1516: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.971957266330719
    2. ' [' → logprob: -1.5969572067260742
    3. ' i' → logprob: -1.9719572067260742
    4. '[i' → logprob: -2.346957206726074
    5. '[]' → logprob: -3.471957206726074
    6. '    ' → logprob: -3.471957206726074
    7. 'i' → logprob: -3.721957206726074
    8. '   ' → logprob: -3.971957206726074
    9. ' next' → logprob: -4.221957206726074
    10. 'max' → logprob: -4.721957206726074

Token 1517: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5198224782943726
    2. ' chaque' → logprob: -1.1448224782943726
    3. 'each' → logprob: -3.269822597503662
    4. ' i' → logprob: -3.394822597503662
    5. ' each' → logprob: -4.394822597503662
    6. 'j' → logprob: -6.644822597503662
    7. ' ' → logprob: -8.019822120666504
    8. '[i' → logprob: -8.644822120666504
    9. 'cada' → logprob: -8.769822120666504
    10. '```' → logprob: -8.894822120666504

Token 1518: ' trampoline' (ID: 162506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5551549792289734
    2. '_' → logprob: -1.1801550388336182
    3. ' i' → logprob: -2.680155038833618
    4. 'indice' → logprob: -4.055154800415039
    5. 'index' → logprob: -4.305154800415039
    6. ' _' → logprob: -5.055154800415039
    7. '_i' → logprob: -5.555154800415039
    8. 'idx' → logprob: -6.555154800415039
    9. '_index' → logprob: -6.555154800415039
    10. '```' → logprob: -6.930154800415039

Token 1519: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22686243057250977
    2. '[' → logprob: -2.1018624305725098
    3. '_' → logprob: -3.6018624305725098
    4. ' _' → logprob: -3.8518624305725098
    5. ' i' → logprob: -4.97686243057251
    6. ' [' → logprob: -5.72686243057251
    7. '[]' → logprob: -5.85186243057251
    8. '[next' → logprob: -5.97686243057251
    9. '[j' → logprob: -6.10186243057251
    10. '_next' → logprob: -6.10186243057251

Token 1520: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0644285678863525
    2. ' =' → logprob: -1.1894285678863525
    3. '[i' → logprob: -1.3144285678863525
    4. '[next' → logprob: -3.8144285678863525
    5. '_next' → logprob: -4.564428329467773
    6. '=' → logprob: -4.564428329467773
    7. '_' → logprob: -4.939428329467773
    8. '[]' → logprob: -5.564428329467773
    9. '   ' → logprob: -5.564428329467773
    10. ']' → logprob: -5.689428329467773

Token 1521: ' définit' (ID: 89835)
  Prédit: 'met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'met' → logprob: -1.21056067943573
    2. '=' → logprob: -1.33556067943573
    3. ' =' → logprob: -2.2105607986450195
    4. ' met' → logprob: -2.3355607986450195
    5. ' stock' → logprob: -2.4605607986450195
    6. '[' → logprob: -3.2105607986450195
    7. 'stock' → logprob: -3.4605607986450195
    8. '_' → logprob: -4.4605607986450195
    9. '_met' → logprob: -5.2105607986450195
    10. 'place' → logprob: -5.4605607986450195

Token 1522: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15308448672294617
    2. '=' → logprob: -3.6530845165252686
    3. '_' → logprob: -3.9030845165252686
    4. ' ' → logprob: -4.0280842781066895
    5. ' la' → logprob: -4.2780842781066895
    6. ' le' → logprob: -4.7780842781066895
    7. '[' → logprob: -4.9030842781066895
    8. '[i' → logprob: -5.0280842781066895
    9. ' l' → logprob: -5.0280842781066895
    10. ' _' → logprob: -5.2780842781066895

Token 1523: ' limite' (ID: 48939)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.538627564907074
    2. ' max' → logprob: -1.6636276245117188
    3. '[' → logprob: -3.6636276245117188
    4. '_max' → logprob: -3.9136276245117188
    5. 'limit' → logprob: -4.163627624511719
    6. '\t' → logprob: -4.288627624511719
    7. 'lim' → logprob: -4.413627624511719
    8. '`' → logprob: -4.538627624511719
    9. ' =' → logprob: -4.663627624511719
    10. ' maximum' → logprob: -4.913627624511719

Token 1524: ' maximale' (ID: 76380)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6608924865722656
    2. ' _' → logprob: -2.1608924865722656
    3. ' de' → logprob: -2.6608924865722656
    4. '_' → logprob: -3.0358924865722656
    5. ' maximale' → logprob: -3.0358924865722656
    6. '_max' → logprob: -3.1608924865722656
    7. '[i' → logprob: -3.9108924865722656
    8. '_possible' → logprob: -4.035892486572266
    9. '   ' → logprob: -4.285892486572266
    10. '[' → logprob: -4.410892486572266

Token 1525: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6424645185470581
    2. ' reachable' → logprob: -2.0174646377563477
    3. ' =' → logprob: -2.8924646377563477
    4. '_' → logprob: -3.0174646377563477
    5. 'de' → logprob: -3.6424646377563477
    6. '_possible' → logprob: -3.7674646377563477
    7. ' possible' → logprob: -4.017464637756348
    8. '[i' → logprob: -4.267464637756348
    9. '_de' → logprob: -4.267464637756348
    10. ' d' → logprob: -4.392464637756348

Token 1526: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.828141450881958
    2. ''accès' → logprob: -1.203141450881958
    3. 'e' → logprob: -2.828141450881958
    4. 'indice' → logprob: -3.328141450881958
    5. ' i' → logprob: -3.578141450881958
    6. ''' → logprob: -3.828141450881958
    7. '’accès' → logprob: -4.328141212463379
    8. ''i' → logprob: -4.703141212463379
    9. ' saut' → logprob: -4.953141212463379
    10. '_i' → logprob: -5.078141212463379

Token 1527: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.7586696147918701
    2. 'ex' → logprob: -0.8836696147918701
    3. 'i' → logprob: -2.25866961479187
    4. 'e' → logprob: -6.008669853210449
    5. ' i' → logprob: -6.008669853210449
    6. ' ' → logprob: -6.258669853210449
    7. '```' → logprob: -6.508669853210449
    8. '   ' → logprob: -6.758669853210449
    9. 'ices' → logprob: -7.008669853210449
    10. '_' → logprob: -7.883669853210449

Token 1528: '
' (ID: 198)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.7173284888267517
    2. ' vers' → logprob: -1.4673285484313965
    3. ' atte' → logprob: -2.2173285484313965
    4. ' accessible' → logprob: -3.0923285484313965
    5. ' =' → logprob: -3.4673285484313965
    6. ' possible' → logprob: -4.4673285484313965
    7. ' ' → logprob: -4.4673285484313965
    8. '   ' → logprob: -4.7173285484313965
    9. 'reachable' → logprob: -4.7173285484313965
    10. ' à' → logprob: -5.2173285484313965

Token 1529: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8062145113945007
    2. '_' → logprob: -2.1812145709991455
    3. '```' → logprob: -2.6812145709991455
    4. '       ' → logprob: -2.8062145709991455
    5. '   ' → logprob: -2.8062145709991455
    6. '[i' → logprob: -3.3062145709991455
    7. ' _' → logprob: -3.5562145709991455
    8. '=' → logprob: -3.5562145709991455
    9. ' suivante' → logprob: -3.8062145709991455
    10. '_possible' → logprob: -4.056214332580566

Token 1530: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06186717376112938
    2. '=' → logprob: -3.5618672370910645
    3. ' ' → logprob: -5.1868672370910645
    4. '	' → logprob: -5.4368672370910645
    5. '       ' → logprob: -5.6868672370910645
    6. '   ' → logprob: -5.8118672370910645
    7. ' possible' → logprob: -5.9368672370910645
    8. ' suivante' → logprob: -5.9368672370910645
    9. ' i' → logprob: -6.3118672370910645
    10. '[i' → logprob: -6.4368672370910645

Token 1531: ' atte' (ID: 43312)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20042866468429565
    2. '=' → logprob: -1.8254287242889404
    3. '[' → logprob: -5.325428485870361
    4. '_' → logprob: -5.450428485870361
    5. ' ' → logprob: -5.700428485870361
    6. '   ' → logprob: -6.450428485870361
    7. '[i' → logprob: -7.200428485870361
    8. '[]' → logprob: -7.325428485870361
    9. '_next' → logprob: -7.325428485870361
    10. '       ' → logprob: -8.07542896270752

Token 1532: 'ign' (ID: 733)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.7115652561187744
    2. 'ign' → logprob: -0.9615652561187744
    3. 'int' → logprob: -3.2115652561187744
    4. 'n' → logprob: -4.086565017700195
    5. 'ints' → logprob: -4.211565017700195
    6. 'c' → logprob: -4.711565017700195
    7. 'i' → logprob: -4.836565017700195
    8. 'ignant' → logprob: -5.336565017700195
    9. 'in' → logprob: -5.461565017700195
    10. 'ç' → logprob: -5.711565017700195

Token 1533: 'able' (ID: 562)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.07338874787092209
    2. 'int' → logprob: -3.3233888149261475
    3. 'ign' → logprob: -3.4483888149261475
    4. 'ind' → logprob: -7.323388576507568
    5. 'e' → logprob: -7.573388576507568
    6. 'ignant' → logprob: -8.323389053344727
    7. 'i' → logprob: -8.573389053344727
    8. 'ints' → logprob: -8.823389053344727
    9. 'igne' → logprob: -9.198389053344727
    10. 'able' → logprob: -9.323389053344727

Token 1534: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0686890259385109
    2. '=' → logprob: -3.0686891078948975
    3. '_' → logprob: -5.068688869476318
    4. '   ' → logprob: -5.318688869476318
    5. 's' → logprob: -5.943688869476318
    6. ' ' → logprob: -6.318688869476318
    7. '       ' → logprob: -6.693688869476318
    8. '[' → logprob: -6.818688869476318
    9. ' vers' → logprob: -8.318689346313477
    10. '_right' → logprob: -8.568689346313477

Token 1535: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34862834215164185
    2. 'i' → logprob: -1.223628282546997
    3. '[i' → logprob: -8.973628044128418
    4. '	i' → logprob: -10.473628044128418
    5. '_i' → logprob: -11.473628044128418
    6. ' ' → logprob: -12.473628044128418
    7. 'l' → logprob: -12.973628044128418
    8. '```' → logprob: -13.098628044128418
    9. '   ' → logprob: -13.223628044128418
    10. '(i' → logprob: -13.473628044128418

Token 1536: ' selon' (ID: 27571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014388911426067352
    2. '=' → logprob: -4.6393890380859375
    3. '   ' → logprob: -6.2643890380859375
    4. 's' → logprob: -6.6393890380859375
    5. '       ' → logprob: -7.2643890380859375
    6. '_' → logprob: -9.139389038085938
    7. '[' → logprob: -9.264389038085938
    8. ':' → logprob: -9.389389038085938
    9. '_next' → logprob: -9.639389038085938
    10. ']' → logprob: -9.764389038085938

Token 1537: ' d' (ID: 272)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.43646883964538574
    2. 'direction' → logprob: -1.0614688396453857
    3. ' la' → logprob: -4.936469078063965
    4. 'la' → logprob: -8.561469078063965
    5. '(direction' → logprob: -8.561469078063965
    6. ' sa' → logprob: -10.061469078063965
    7. ' ' → logprob: -10.561469078063965
    8. ' le' → logprob: -11.061469078063965
    9. '_direction' → logprob: -11.186469078063965
    10. ' l' → logprob: -11.186469078063965

Token 1538: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15815028548240662
    2. '[i' → logprob: -2.4081501960754395
    3. '<|end|>' → logprob: -4.0331501960754395
    4. '<|end|>' → logprob: -5.1581501960754395
    5. '[next' → logprob: -5.5331501960754395
    6. ' [' → logprob: -5.6581501960754395
    7. ' ' → logprob: -6.1581501960754395
    8. ']' → logprob: -6.2831501960754395
    9. ' =' → logprob: -6.4081501960754395
    10. ',' → logprob: -6.5331501960754395

Token 1539: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04212307557463646
    2. ']
' → logprob: -3.2921230792999268
    3. '[i' → logprob: -6.167122840881348
    4. '   ' → logprob: -7.792122840881348
    5. ' ]' → logprob: -8.292122840881348
    6. '],' → logprob: -8.542122840881348
    7. ']
' → logprob: -8.917122840881348
    8. '])' → logprob: -8.917122840881348
    9. '']' → logprob: -9.042122840881348
    10. ']:
' → logprob: -9.042122840881348

Token 1540: '        
' (ID: 3564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.449791818857193
    2. '       ' → logprob: -1.5747917890548706
    3. '   ' → logprob: -2.32479190826416
    4. '=' → logprob: -4.19979190826416
    5. '```' → logprob: -4.94979190826416
    6. '
' → logprob: -5.57479190826416
    7. '[' → logprob: -5.57479190826416
    8. '`' → logprob: -5.94979190826416
    9. ' next' → logprob: -6.07479190826416
    10. ':' → logprob: -6.07479190826416

Token 1541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3000043034553528
    2. '        
' → logprob: -2.425004243850708
    3. ' =' → logprob: -2.425004243850708
    4. '   ' → logprob: -3.675004243850708
    5. '=' → logprob: -3.925004243850708
    6. '    
' → logprob: -4.800004482269287
    7. ' ' → logprob: -5.675004482269287
    8. '[' → logprob: -5.800004482269287
    9. '        ' → logprob: -5.925004482269287
    10. ' 
' → logprob: -6.050004482269287

Token 1542: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -1.2795058488845825
    2. '       ' → logprob: -1.5295058488845825
    3. '   ' → logprob: -1.7795058488845825
    4. '
' → logprob: -1.7795058488845825
    5. ' next' → logprob: -1.9045058488845825
    6. '        
' → logprob: -4.654505729675293
    7. '    
' → logprob: -5.529505729675293
    8. 'max' → logprob: -6.404505729675293
    9. '[next' → logprob: -7.154505729675293
    10. ' max' → logprob: -7.404505729675293

Token 1543: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -9.281485836254433e-05
    2. '_' → logprob: -10.000092506408691
    3. 'max' → logprob: -10.875092506408691
    4. '_re' → logprob: -11.000092506408691
    5. 'Max' → logprob: -12.500092506408691
    6. '_MAX' → logprob: -13.500092506408691
    7. '_min' → logprob: -14.125092506408691
    8. ' _' → logprob: -14.250092506408691
    9. '_step' → logprob: -14.500092506408691
    10. '_range' → logprob: -14.750092506408691

Token 1544: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00035691517405211926
    2. '_max' → logprob: -8.000356674194336
    3. '_' → logprob: -11.250356674194336
    4. ')_' → logprob: -13.625356674194336
    5. '_possible' → logprob: -14.000356674194336
    6. ' _' → logprob: -14.250356674194336
    7. '\' → logprob: -14.500356674194336
    8. '_release' → logprob: -14.625356674194336
    9. '_range' → logprob: -15.000356674194336
    10. 're' → logprob: -15.125356674194336

Token 1545: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00014191943046171218
    2. 'each' → logprob: -9.625142097473145
    3. 'reach' → logprob: -9.875142097473145
    4. 'achable' → logprob: -12.750142097473145
    5. 'ch' → logprob: -12.875142097473145
    6. '_' → logprob: -12.875142097473145
    7. 'arch' → logprob: -13.000142097473145
    8. 'acht' → logprob: -13.125142097473145
    9. 'Ach' → logprob: -13.750142097473145
    10. 'act' → logprob: -13.875142097473145

Token 1546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024312376976013
    2. ' =' → logprob: -1.9102431535720825
    3. '=[' → logprob: -11.410243034362793
    4. '[' → logprob: -12.535243034362793
    5. '=[]' → logprob: -12.910243034362793
    6. '   ' → logprob: -13.785243034362793
    7. '	' → logprob: -15.785243034362793
    8. ']' → logprob: -15.785243034362793
    9. ' =[' → logprob: -16.16024398803711
    10. '＝' → logprob: -16.28524398803711

Token 1547: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0546974316239357
    2. ' [' → logprob: -3.4296975135803223
    3. '[d' → logprob: -3.9296975135803223
    4. '[N' → logprob: -7.429697513580322
    5. '[i' → logprob: -8.304697036743164
    6. '[-' → logprob: -8.429697036743164
    7. '   ' → logprob: -10.054697036743164
    8. '[len' → logprob: -10.679697036743164
    9. '[n' → logprob: -11.304697036743164
    10. 'd' → logprob: -11.929697036743164

Token 1548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015892064198851585
    2. '-' → logprob: -4.890892028808594
    3. 'i' → logprob: -6.015892028808594
    4. '(' → logprob: -6.140892028808594
    5. '(i' → logprob: -6.640892028808594
    6. '(-' → logprob: -6.890892028808594
    7. 'min' → logprob: -7.140892028808594
    8. ' ' → logprob: -9.390892028808594
    9. 'max' → logprob: -9.515892028808594
    10. '(min' → logprob: -9.765892028808594

Token 1549: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02773248963057995
    2. ']*' → logprob: -4.1527323722839355
    3. ' for' → logprob: -4.7777323722839355
    4. ' ]' → logprob: -6.7777323722839355
    5. 'for' → logprob: -6.9027323722839355
    6. ' if' → logprob: -8.027732849121094
    7. ' +' → logprob: -8.527732849121094
    8. '       ' → logprob: -8.902732849121094
    9. '+' → logprob: -9.277732849121094
    10. '        ' → logprob: -9.652732849121094

Token 1550: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.723352049040841e-06
    2. 'len' → logprob: -12.625004768371582
    3. '(N' → logprob: -14.625004768371582
    4. ' N' → logprob: -14.625004768371582
    5. '       ' → logprob: -15.500004768371582
    6. '   ' → logprob: -15.625004768371582
    7. '           ' → logprob: -17.875003814697266
    8. '(len' → logprob: -17.875003814697266
    9. '```' → logprob: -18.625003814697266
    10. '         ' → logprob: -18.875003814697266

Token 1551: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21255651116371155
    2. ' if' → logprob: -1.8375564813613892
    3. ' 
' → logprob: -4.8375563621521
    4. 'if' → logprob: -5.2125563621521
    5. '        
' → logprob: -5.4625563621521
    6. 'for' → logprob: -5.5875563621521
    7. '       ' → logprob: -5.8375563621521
    8. ' for' → logprob: -5.9625563621521
    9. '    
' → logprob: -6.7125563621521
    10. '	
' → logprob: -6.7125563621521

Token 1552: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36286240816116333
    2. '       ' → logprob: -1.4878623485565186
    3. 'for' → logprob: -2.8628623485565186
    4. ' if' → logprob: -4.112862586975098
    5. '   ' → logprob: -6.237862586975098
    6. '	for' → logprob: -6.987862586975098
    7. '        
' → logprob: -7.862862586975098
    8. '	' → logprob: -8.362862586975098
    9. '
' → logprob: -8.487862586975098
    10. ' ' → logprob: -8.612862586975098

Token 1553: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15137264132499695
    2. '       ' → logprob: -2.2763726711273193
    3. ' for' → logprob: -3.2763726711273193
    4. 'if' (adapté à ' if') → logprob: -10.276372909545898
    5. 'range' → logprob: -12.026372909545898
    6. 'import' → logprob: -12.401372909545898
    7. '```' → logprob: -13.526372909545898
    8. ' if' → logprob: -13.526372909545898
    9. '   ' → logprob: -13.651372909545898
    10. '	for' → logprob: -13.776372909545898

Token 1554: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.25195762515068054
    2. ' direction' → logprob: -1.501957654953003
    3. '1' → logprob: -11.251957893371582
    4. '       ' → logprob: -11.876957893371582
    5. '(direction' → logprob: -12.751957893371582
    6. '   ' → logprob: -13.126957893371582
    7. 'd' → logprob: -13.876957893371582
    8. 'dire' → logprob: -14.001957893371582
    9. '    ' → logprob: -14.501957893371582
    10. 'direct' → logprob: -15.376957893371582

Token 1555: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5769122242927551
    2. '==' → logprob: -0.8269122242927551
    3. '=' → logprob: -7.0769124031066895
    4. '[' → logprob: -10.201911926269531
    5. ':' → logprob: -10.451911926269531
    6. ' =' → logprob: -10.951911926269531
    7. ')==' → logprob: -11.951911926269531
    8. '{' → logprob: -12.076911926269531
    9. ']==' → logprob: -12.201911926269531
    10. '>' → logprob: -12.326911926269531

Token 1556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.393150329589844
    4. ' ' → logprob: -18.268150329589844
    5. '=' → logprob: -19.143150329589844
    6. '+' → logprob: -19.143150329589844
    7. '>' → logprob: -19.143150329589844
    8. '       ' → logprob: -19.643150329589844
    9. '  ' → logprob: -19.768150329589844
    10. '```' → logprob: -20.018150329589844

Token 1557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '>' → logprob: -16.250059127807617
    4. '+' → logprob: -17.375059127807617
    5. '   ' → logprob: -18.750059127807617
    6. '=' → logprob: -18.875059127807617
    7. '```' → logprob: -20.625059127807617
    8. '۱' → logprob: -21.500059127807617
    9. '  ' → logprob: -21.750059127807617
    10. '{' → logprob: -22.000059127807617

Token 1558: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02996198832988739
    2. ':
' → logprob: -3.5299620628356934
    3. '       ' → logprob: -9.529961585998535
    4. '=' → logprob: -9.654961585998535
    5. ' =' → logprob: -10.779961585998535
    6. ' :' → logprob: -11.154961585998535
    7. '   ' → logprob: -11.654961585998535
    8. '[' → logprob: -11.654961585998535
    9. '           ' → logprob: -11.779961585998535
    10. ',' → logprob: -12.904961585998535

Token 1559: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29827433824539185
    2. ' for' → logprob: -1.923274278640747
    3. '           ' → logprob: -2.673274278640747
    4. '	       ' → logprob: -4.423274517059326
    5. 'for' → logprob: -4.548274517059326
    6. '        ' → logprob: -5.298274517059326
    7. '   ' → logprob: -5.548274517059326
    8. '	   ' → logprob: -5.673274517059326
    9. '	' → logprob: -6.423274517059326
    10. '	for' → logprob: -7.173274517059326

Token 1560: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8368804454803467
    2. ' for' → logprob: -0.9618804454803467
    3. 'for' → logprob: -1.7118804454803467
    4. '       ' → logprob: -6.086880683898926
    5. '   ' → logprob: -6.586880683898926
    6. ' ' → logprob: -8.586880683898926
    7. '	       ' → logprob: -8.961880683898926
    8. ' range' → logprob: -9.586880683898926
    9. '	for' → logprob: -9.961880683898926
    10. 'range' → logprob: -10.211880683898926

Token 1561: ' vers' (ID: 3640)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.180823564529419
    2. 'i' → logprob: -1.555823564529419
    3. ' i' → logprob: -1.680823564529419
    4. 'for' → logprob: -2.430823564529419
    5. '0' → logprob: -2.930823564529419
    6. ' N' → logprob: -3.430823564529419
    7. ' range' → logprob: -3.430823564529419
    8. '1' → logprob: -3.805823564529419
    9. '   ' → logprob: -4.18082332611084
    10. 'range' → logprob: -4.43082332611084

Token 1562: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0041007995605469
    2. ' droite' → logprob: -1.5041007995605469
    3. ' N' → logprob: -1.7541007995605469
    4. 'N' → logprob: -2.879100799560547
    5. ' right' → logprob: -3.754100799560547
    6. 'right' → logprob: -3.754100799560547
    7. ' i' → logprob: -4.254100799560547
    8. ' ' → logprob: -4.254100799560547
    9. 'la' → logprob: -4.379100799560547
    10. ' =' → logprob: -4.504100799560547

Token 1563: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4754757285118103
    2. ' droite' → logprob: -1.725475788116455
    3. ' right' → logprob: -1.725475788116455
    4. '1' → logprob: -4.850475788116455
    5. ' ' → logprob: -4.975475788116455
    6. 'dro' → logprob: -5.225475788116455
    7. '0' → logprob: -7.975475788116455
    8. '_right' → logprob: -7.975475788116455
    9. ' droit' → logprob: -8.100475311279297
    10. 'N' → logprob: -8.600475311279297

Token 1564: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6927849650382996
    2. ' =' → logprob: -1.4427850246429443
    3. ':' → logprob: -2.1927850246429443
    4. ':
' → logprob: -3.5677850246429443
    5. '=' → logprob: -3.6927850246429443
    6. ' for' → logprob: -3.9427850246429443
    7. '
' → logprob: -4.317784786224365
    8. '[' → logprob: -4.442784786224365
    9. '           ' → logprob: -4.817784786224365
    10. ' i' → logprob: -4.817784786224365

Token 1565: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7470000982284546
    2. '           ' → logprob: -0.7470000982284546
    3. ':' → logprob: -4.247000217437744
    4. '=' → logprob: -4.497000217437744
    5. '       ' → logprob: -4.747000217437744
    6. ' for' → logprob: -4.872000217437744
    7. '
' → logprob: -5.872000217437744
    8. '   ' → logprob: -6.497000217437744
    9. ':
' → logprob: -6.747000217437744
    10. 'for' → logprob: -6.872000217437744

Token 1566: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.836390495300293
    2. '           ' → logprob: -1.211390495300293
    3. 'for' (adapté à ' for') → logprob: -1.336390495300293
    4. '       ' → logprob: -5.711390495300293
    5. '   ' → logprob: -6.336390495300293
    6. ' range' → logprob: -8.836390495300293
    7. ' next' → logprob: -8.961390495300293
    8. '[i' → logprob: -8.961390495300293
    9. '```' → logprob: -9.211390495300293
    10. 'range' → logprob: -9.336390495300293

Token 1567: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048642918467522
    2. ' i' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.261048316955566
    4. '0' → logprob: -15.511048316955566
    5. '	i' → logprob: -16.511049270629883
    6. '   ' → logprob: -16.761049270629883
    7. '_i' → logprob: -16.761049270629883
    8. '```' → logprob: -16.761049270629883
    9. 'range' → logprob: -16.886049270629883
    10. ' ' → logprob: -17.511049270629883

Token 1568: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038227152079343796
    2. 'in' → logprob: -3.288227081298828
    3. 'range' → logprob: -10.413227081298828
    4. ' ' → logprob: -10.538227081298828
    5. ',' → logprob: -11.038227081298828
    6. '=' → logprob: -11.163227081298828
    7. '	in' → logprob: -11.663227081298828
    8. '_in' → logprob: -11.913227081298828
    9. '1' → logprob: -11.913227081298828
    10. ')' → logprob: -12.038227081298828

Token 1569: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020741820335388
    2. ' range' → logprob: -2.3502073287963867
    3. '(range' → logprob: -15.225207328796387
    4. '0' → logprob: -15.600207328796387
    5. '	range' → logprob: -15.975207328796387
    6. ' ' → logprob: -16.850208282470703
    7. ' xrange' → logprob: -17.100208282470703
    8. ')' → logprob: -17.475208282470703
    9. '_' → logprob: -18.350208282470703
    10. 'in' → logprob: -18.975208282470703

Token 1570: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0018327304860576987
    2. '           ' → logprob: -7.126832962036133
    3. '1' → logprob: -7.751832962036133
    4. '(N' → logprob: -8.001832962036133
    5. '0' → logprob: -9.251832962036133
    6. ' N' → logprob: -9.376832962036133
    7. '       ' → logprob: -10.001832962036133
    8. '   ' → logprob: -10.751832962036133
    9. '(' → logprob: -12.126832962036133
    10. 'i' → logprob: -12.376832962036133

Token 1571: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07532192021608353
    2. '):' → logprob: -2.825321912765503
    3. '-' → logprob: -4.575322151184082
    4. ' -' → logprob: -6.700322151184082
    5. '       ' → logprob: -7.325322151184082
    6. '+' → logprob: -7.700322151184082
    7. '   ' → logprob: -8.700322151184082
    8. '):
' → logprob: -8.825322151184082
    9. '           ' → logprob: -9.075322151184082
    10. ')' → logprob: -9.450322151184082

Token 1572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001020067255012691
    2. ' next' → logprob: -7.3760199546813965
    3. 'next' → logprob: -8.001020431518555
    4. '[next' → logprob: -10.376020431518555
    5. '   ' → logprob: -12.001020431518555
    6. '           ' → logprob: -12.376020431518555
    7. '(next' → logprob: -12.501020431518555
    8. ' =' → logprob: -12.751020431518555
    9. ',next' → logprob: -12.751020431518555
    10. '       ' → logprob: -13.751020431518555

Token 1573: ' jump' (ID: 13843)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.004254219587892294
    2. ' next' → logprob: -6.379254341125488
    3. '               ' → logprob: -6.504254341125488
    4. 'limit' → logprob: -7.504254341125488
    5. '                   ' → logprob: -8.379254341125488
    6. '   ' → logprob: -9.129254341125488
    7. 'max' → logprob: -9.879254341125488
    8. 'if' → logprob: -10.129254341125488
    9. 'lim' → logprob: -10.879254341125488
    10. '[next' → logprob: -11.254254341125488

Token 1574: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.42979153990745544
    2. '=' → logprob: -1.8047915697097778
    3. '_range' → logprob: -2.3047914505004883
    4. ' =' → logprob: -3.4297914505004883
    5. 'max' → logprob: -4.179791450500488
    6. '_limit' → logprob: -4.679791450500488
    7. '_len' → logprob: -4.929791450500488
    8. '_dist' → logprob: -5.429791450500488
    9. '_distance' → logprob: -5.804791450500488
    10. '_possible' → logprob: -5.804791450500488

Token 1575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14353203773498535
    2. ' =' → logprob: -2.0185320377349854
    3. '=i' → logprob: -7.143531799316406
    4. '_index' → logprob: -10.768531799316406
    5. '=index' → logprob: -11.643531799316406
    6. '=re' → logprob: -11.893531799316406
    7. '_distance' → logprob: -12.268531799316406
    8. 'reach' → logprob: -12.643531799316406
    9. '=max' → logprob: -12.893531799316406
    10. '_idx' → logprob: -12.893531799316406

Token 1576: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24807021021842957
    2. ' i' → logprob: -2.248070240020752
    3. 'min' → logprob: -2.748070240020752
    4. ' min' → logprob: -2.998070240020752
    5. '   ' → logprob: -9.623069763183594
    6. '           ' → logprob: -10.373069763183594
    7. ' ' → logprob: -11.248069763183594
    8. '  ' → logprob: -11.373069763183594
    9. '               ' → logprob: -11.623069763183594
    10. '(i' → logprob: -12.123069763183594

Token 1577: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931484341621399
    2. ' +' → logprob: -0.6931484341621399
    3. ' ' → logprob: -15.068148612976074
    4. '+i' → logprob: -15.943148612976074
    5. '[' → logprob: -16.068147659301758
    6. ' +
' → logprob: -16.443147659301758
    7. ' plus' → logprob: -16.568147659301758
    8. ' ' → logprob: -16.693147659301758
    9. '+[' → logprob: -16.693147659301758
    10. '+
' → logprob: -17.193147659301758

Token 1578: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01651815138757229
    2. '(d' → logprob: -4.6415181159973145
    3. ' d' → logprob: -5.0165181159973145
    4. ' (' → logprob: -9.141518592834473
    5. '(' → logprob: -13.016518592834473
    6. '   ' → logprob: -13.766518592834473
    7. '	d' → logprob: -14.266518592834473
    8. ' ' → logprob: -15.016518592834473
    9. '       ' → logprob: -15.891518592834473
    10. '  ' → logprob: -16.891517639160156

Token 1579: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007866371306590736
    2. '[' → logprob: -7.375786781311035
    3. '<|end|>' → logprob: -8.875786781311035
    4. 'i' → logprob: -11.500786781311035
    5. '[
' → logprob: -12.500786781311035
    6. '<|end|>' → logprob: -12.875786781311035
    7. '[int' → logprob: -13.750786781311035
    8. '```' → logprob: -14.625786781311035
    9. '[token' → logprob: -14.875786781311035
    10. '(i' → logprob: -15.000786781311035

Token 1580: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09613335132598877
    2. ']' → logprob: -2.471133232116699
    3. '//' → logprob: -4.971133232116699
    4. 'i' → logprob: -9.4711332321167
    5. ')//' → logprob: -9.7211332321167
    6. '[' → logprob: -10.0961332321167
    7. ' //' → logprob: -10.5961332321167
    8. ')' → logprob: -11.5961332321167
    9. '   ' → logprob: -12.2211332321167
    10. '']//' → logprob: -12.9711332321167

Token 1581: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00528308842331171
    2. ' //' → logprob: -5.255282878875732
    3. '[' → logprob: -10.50528335571289
    4. ')//' → logprob: -12.13028335571289
    5. '//=' → logprob: -12.38028335571289
    6. '           ' → logprob: -12.63028335571289
    7. '#' → logprob: -12.75528335571289
    8. '                   ' → logprob: -13.63028335571289
    9. '               ' → logprob: -13.63028335571289
    10. ' ' → logprob: -14.50528335571289

Token 1582: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۱۰' → logprob: -21.25
    4. '   ' → logprob: -22.75
    5. '1' → logprob: -22.75
    6. '```' → logprob: -23.0
    7. '１０' → logprob: -24.0
    8. '  ' → logprob: -24.125
    9. '           ' → logprob: -24.125
    10. '१०' → logprob: -24.5

Token 1583: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۱۰' → logprob: -21.625
    4. '   ' → logprob: -23.0
    5. '1' → logprob: -23.25
    6. '```' → logprob: -23.5
    7. '１０' → logprob: -23.625
    8. '	' → logprob: -23.75
    9. '१०' → logprob: -24.0
    10. '১০' → logprob: -24.5

Token 1584: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21721652150154114
    2. '               ' → logprob: -2.3422164916992188
    3. 'if' → logprob: -2.9672164916992188
    4. '
' → logprob: -3.8422164916992188
    5. '<|end|>' → logprob: -4.092216491699219
    6. '           ' → logprob: -4.967216491699219
    7. '<|end|>' → logprob: -6.967216491699219
    8. ')' → logprob: -7.467216491699219
    9. '                   ' → logprob: -8.717216491699219
    10. '                ' → logprob: -8.967216491699219

Token 1585: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5403176546096802
    2. '               ' → logprob: -0.9153176546096802
    3. '           ' → logprob: -4.290317535400391
    4. 'if' → logprob: -6.290317535400391
    5. '
' → logprob: -7.415317535400391
    6. '<|end|>' → logprob: -8.04031753540039
    7. '			' → logprob: -9.16531753540039
    8. '<|end|>' → logprob: -9.41531753540039
    9. ' ' → logprob: -9.79031753540039
    10. '       ' → logprob: -9.91531753540039

Token 1586: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6014205813407898
    2. 'if' (adapté à ' if') → logprob: -1.1014206409454346
    3. ' next' → logprob: -2.4764206409454346
    4. ' if' → logprob: -3.3514206409454346
    5. '               ' → logprob: -8.101420402526855
    6. 'min' → logprob: -9.601420402526855
    7. 'max' → logprob: -10.601420402526855
    8. '           ' → logprob: -10.601420402526855
    9. '[next' → logprob: -10.601420402526855
    10. '                   ' → logprob: -11.476420402526855

Token 1587: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.02058124542236328
    2. ' jump' → logprob: -3.8955812454223633
    3. 'j' → logprob: -10.520581245422363
    4. 'next' → logprob: -12.395581245422363
    5. '   ' → logprob: -13.270581245422363
    6. 'jum' → logprob: -13.770581245422363
    7. 'jmp' → logprob: -13.770581245422363
    8. '               ' → logprob: -14.020581245422363
    9. ' next' → logprob: -14.145581245422363
    10. '_jump' → logprob: -14.645581245422363

Token 1588: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00019138160860165954
    2. 'max' → logprob: -8.750191688537598
    3. '>=' → logprob: -11.875191688537598
    4. '[i' → logprob: -12.125191688537598
    5. 'Max' → logprob: -12.750191688537598
    6. '>' → logprob: -12.750191688537598
    7. 's' → logprob: -13.000191688537598
    8. '<' → logprob: -13.500191688537598
    9. '_MAX' → logprob: -13.750191688537598
    10. 'i' → logprob: -13.750191688537598

Token 1589: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6482046842575073
    2. '=' → logprob: -0.7732046842575073
    3. '>' → logprob: -4.773204803466797
    4. ' =' → logprob: -6.148204803466797
    5. '<|end|>' → logprob: -6.273204803466797
    6. ' >=' → logprob: -6.523204803466797
    7. '>N' → logprob: -7.148204803466797
    8. '≥' → logprob: -8.273204803466797
    9. ']>=' → logprob: -8.898204803466797
    10. ')>=' → logprob: -9.523204803466797

Token 1590: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.8325677703833207e-05
    2. 'i' → logprob: -10.625028610229492
    3. '0' → logprob: -12.750028610229492
    4. ' N' → logprob: -14.375028610229492
    5. '                   ' → logprob: -15.625028610229492
    6. '               ' → logprob: -16.500028610229492
    7. '   ' → logprob: -16.625028610229492
    8. '           ' → logprob: -16.875028610229492
    9. '1' → logprob: -17.250028610229492
    10. '                       ' → logprob: -18.000028610229492

Token 1591: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0657234713435173
    2. ':
' → logprob: -2.815723419189453
    3. '):' → logprob: -6.565723419189453
    4. '):
' → logprob: -7.190723419189453
    5. '[i' → logprob: -7.940723419189453
    6. '[' → logprob: -7.940723419189453
    7. ')' → logprob: -8.315723419189453
    8. '               ' → logprob: -8.690723419189453
    9. '-' → logprob: -9.065723419189453
    10. '           ' → logprob: -9.315723419189453

Token 1592: '                   ' (ID: 699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40995094180107117
    2. '=' → logprob: -1.4099509716033936
    3. ':' → logprob: -3.0349509716033936
    4. '                   ' → logprob: -3.5349509716033936
    5. '               ' → logprob: -4.9099507331848145
    6. ':
' → logprob: -5.0349507331848145
    7. '=N' → logprob: -7.9099507331848145
    8. '                       ' → logprob: -9.159951210021973
    9. '=False' → logprob: -9.284951210021973
    10. '=True' → logprob: -9.409951210021973

Token 1593: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' (adapté à ' jump') → logprob: -0.024755682796239853
    2. 'N' → logprob: -4.024755477905273
    3. '                   ' → logprob: -5.774755477905273
    4. ' jump' → logprob: -6.024755477905273
    5. '               ' → logprob: -7.149755477905273
    6. 'next' → logprob: -9.024755477905273
    7. 'n' → logprob: -10.149755477905273
    8. '=' → logprob: -10.774755477905273
    9. '                       ' → logprob: -11.024755477905273
    10. '           ' → logprob: -11.149755477905273

Token 1594: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.666993507067673e-05
    2. 'max' → logprob: -10.250036239624023
    3. '=' → logprob: -14.875036239624023
    4. 'Max' → logprob: -15.000036239624023
    5. '_MAX' → logprob: -15.125036239624023
    6. '_min' → logprob: -16.125036239624023
    7. 'maxlength' → logprob: -16.375036239624023
    8. '           ' → logprob: -17.250036239624023
    9. '[' → logprob: -17.500036239624023
    10. '               ' → logprob: -17.500036239624023

Token 1595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5094070477061905e-05
    2. ' =' → logprob: -11.125015258789062
    3. '=N' → logprob: -15.500015258789062
    4. '=
' → logprob: -16.000015258789062
    5. '.=' → logprob: -19.500015258789062
    6. '=}' → logprob: -20.000015258789062
    7. '=n' → logprob: -20.125015258789062
    8. '=

' → logprob: -20.125015258789062
    9. '   ' → logprob: -20.625015258789062
    10. '＝' → logprob: -20.625015258789062

Token 1596: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.15310683415737e-05
    2. ' N' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.75002098083496
    4. '                   ' → logprob: -18.87502098083496
    5. 'n' → logprob: -19.12502098083496
    6. '               ' → logprob: -20.25002098083496
    7. '                       ' → logprob: -20.75002098083496
    8. '           ' → logprob: -20.75002098083496
    9. '	N' → logprob: -20.75002098083496
    10. ' ' → logprob: -22.00002098083496

Token 1597: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01814994215965271
    2. ' -' → logprob: -4.0181498527526855
    3. '–' → logprob: -17.018150329589844
    4. '−' → logprob: -17.143150329589844
    5. '               ' → logprob: -18.143150329589844
    6. '                   ' → logprob: -18.643150329589844
    7. '           ' → logprob: -19.018150329589844
    8. '```' → logprob: -19.643150329589844
    9. '1' → logprob: -20.018150329589844
    10. '[' → logprob: -20.018150329589844

Token 1598: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -19.75
    5. '<|end|>' → logprob: -21.0
    6. '           ' → logprob: -21.0
    7. '       ' → logprob: -21.625
    8. '-' → logprob: -22.375
    9. '
' → logprob: -22.375
    10. '2' → logprob: -22.5

Token 1599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.625
    4. '<|end|>' → logprob: -20.5
    5. '```' → logprob: -20.5
    6. '           ' → logprob: -21.875
    7. '       ' → logprob: -22.25
    8. '۱' → logprob: -22.5
    9. '
' → logprob: -22.75
    10. '<|end|>' → logprob: -23.25

Token 1600: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04575987532734871
    2. '<|end|>' → logprob: -3.295759916305542
    3. ')' → logprob: -5.670759677886963
    4. '
' → logprob: -6.545759677886963
    5. '<|end|>' → logprob: -6.670759677886963
    6. '                
' → logprob: -7.795759677886963
    7. ' else' → logprob: -8.295760154724121
    8. 'else' → logprob: -8.795760154724121
    9. '\n' → logprob: -8.795760154724121
    10. '[' → logprob: -9.670760154724121

Token 1601: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001375591498799622
    2. 'next' → logprob: -7.876375675201416
    3. ' next' → logprob: -8.251375198364258
    4. ')' → logprob: -8.376375198364258
    5. 'else' → logprob: -8.876375198364258
    6. '[next' → logprob: -9.751375198364258
    7. '<|end|>' → logprob: -9.876375198364258
    8. ' else' → logprob: -10.001375198364258
    9. '
' → logprob: -10.001375198364258
    10. ',' → logprob: -10.626375198364258

Token 1602: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.07954539358615875
    2. ' next' → logprob: -2.954545497894287
    3. '               ' → logprob: -4.704545497894287
    4. '           ' → logprob: -4.704545497894287
    5. 'for' → logprob: -5.579545497894287
    6. ' for' → logprob: -6.829545497894287
    7. 'if' → logprob: -7.704545497894287
    8. 'while' → logprob: -8.204545021057129
    9. '       ' → logprob: -8.704545021057129
    10. ' if' → logprob: -9.329545021057129

Token 1603: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -9.13388703338569e-06
    2. 'max' → logprob: -11.625009536743164
    3. 'Max' → logprob: -15.625009536743164
    4. '_MAX' → logprob: -17.750009536743164
    5. '_token' → logprob: -18.375009536743164
    6. '_min' → logprob: -18.625009536743164
    7. '[' → logprob: -19.125009536743164
    8. 's' → logprob: -19.125009536743164
    9. '_next' → logprob: -19.375009536743164
    10. '_tokens' → logprob: -19.875009536743164

Token 1604: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -6.432518421206623e-05
    2. 'reach' → logprob: -10.1250638961792
    3. 're' → logprob: -11.6250638961792
    4. '=' → logprob: -12.1250638961792
    5. '[' → logprob: -12.2500638961792
    6. '\' → logprob: -13.1250638961792
    7. 'reachable' → logprob: -14.5000638961792
    8. '	re' → logprob: -14.5000638961792
    9. ' =' → logprob: -14.7500638961792
    10. 'max' → logprob: -15.6250638961792

Token 1605: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0010538881178945303
    2. 'reach' → logprob: -7.126053810119629
    3. 'each' → logprob: -8.376053810119629
    4. 'arch' → logprob: -12.001053810119629
    5. 'ch' → logprob: -13.126053810119629
    6. 'Each' → logprob: -13.501053810119629
    7. '_re' → logprob: -13.626053810119629
    8. 'atch' → logprob: -13.751053810119629
    9. 'acht' → logprob: -13.751053810119629
    10. 'achable' → logprob: -13.876053810119629

Token 1606: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.625000953674316
    3. '[' → logprob: -14.750000953674316
    4. '\[' → logprob: -17.875
    5. '[I' → logprob: -17.875
    6. '[
' → logprob: -18.625
    7. '[j' → logprob: -18.875
    8. ')[' → logprob: -18.875
    9. 'i' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 1607: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931560039520264
    2. ' =' → logprob: -0.6931560039520264
    3. '=j' → logprob: -12.818156242370605
    4. '=max' → logprob: -13.068156242370605
    5. ']=' → logprob: -13.568156242370605
    6. ']' → logprob: -13.943156242370605
    7. '=min' → logprob: -14.693156242370605
    8. '=
' → logprob: -14.818156242370605
    9. ' =
' → logprob: -15.443156242370605
    10. ')' → logprob: -16.06815528869629

Token 1608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00017982252757064998
    2. ' =' → logprob: -8.6251802444458
    3. '=max' → logprob: -15.8751802444458
    4. '+=' → logprob: -16.750179290771484
    5. '=i' → logprob: -17.250179290771484
    6. '=int' → logprob: -17.500179290771484
    7. '=
' → logprob: -17.500179290771484
    8. '=j' → logprob: -17.625179290771484
    9. '=min' → logprob: -18.125179290771484
    10. '.=' → logprob: -18.250179290771484

Token 1609: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.0011711753904819489
    2. ' jump' → logprob: -6.751171112060547
    3. 'j' → logprob: -14.501171112060547
    4. '   ' → logprob: -15.626171112060547
    5. 'min' → logprob: -15.751171112060547
    6. ' ' → logprob: -17.001171112060547
    7. 'jmp' → logprob: -17.501171112060547
    8. 'max' → logprob: -17.876171112060547
    9. '_jump' → logprob: -18.751171112060547
    10. '.jump' → logprob: -18.876171112060547

Token 1610: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.246537173457909e-06
    2. 'max' → logprob: -12.625003814697266
    3. '_min' → logprob: -14.500003814697266
    4. 'Max' → logprob: -15.250003814697266
    5. '_MAX' → logprob: -16.250003814697266
    6. '_Max' → logprob: -19.375003814697266
    7. '_' → logprob: -19.625003814697266
    8. ' max' → logprob: -20.000003814697266
    9. '+' → logprob: -20.125003814697266
    10. '[max' → logprob: -20.375003814697266

Token 1611: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1612: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8558605313301086
    2. '<|end|>' → logprob: -1.6058604717254639
    3. 'else' → logprob: -2.105860471725464
    4. '
' → logprob: -2.355860471725464
    5. ' else' → logprob: -3.230860471725464
    6. '```' → logprob: -3.855860471725464
    7. '   ' → logprob: -4.355860710144043
    8. 'elif' → logprob: -4.355860710144043
    9. '           ' → logprob: -4.730860710144043
    10. ')' → logprob: -4.855860710144043

Token 1613: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2414650917053223
    2. '       ' → logprob: -1.4914650917053223
    3. 'j' → logprob: -2.1164650917053223
    4. '#' (adapté à ' #') → logprob: -2.3664650917053223
    5. 'for' → logprob: -2.9914650917053223
    6. 'max' → logprob: -3.1164650917053223
    7. 'min' → logprob: -3.2414650917053223
    8. 'valid' → logprob: -3.6164650917053223
    9. 'right' → logprob: -3.8664650917053223
    10. '   ' → logprob: -3.8664650917053223

Token 1614: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6604363918304443
    2. 'queue' → logprob: -1.7854363918304443
    3. 'from' → logprob: -2.0354363918304443
    4. 'i' → logprob: -2.1604363918304443
    5. 'pos' → logprob: -2.1604363918304443
    6. 'max' → logprob: -2.1604363918304443
    7. '#' → logprob: -3.7854363918304443
    8. '   ' → logprob: -3.7854363918304443
    9. 'for' → logprob: -3.9104363918304443
    10. 'reachable' → logprob: -4.535436630249023

Token 1615: ' avance' (ID: 81376)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28542622923851013
    2. '=' → logprob: -1.9104262590408325
    3. '       ' → logprob: -2.410426139831543
    4. '   ' → logprob: -6.035426139831543
    5. '           ' → logprob: -6.785426139831543
    6. '```' → logprob: -6.785426139831543
    7. 'for' → logprob: -7.035426139831543
    8. 'max' → logprob: -7.285426139831543
    9. 'def' → logprob: -7.285426139831543
    10. '        ' → logprob: -7.660426139831543

Token 1616: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.12589693069458
    2. '       ' → logprob: -1.62589693069458
    3. '           ' → logprob: -1.87589693069458
    4. ' i' → logprob: -2.25089693069458
    5. '=' → logprob: -2.87589693069458
    6. 'i' → logprob: -3.50089693069458
    7. ' in' → logprob: -3.87589693069458
    8. ':' → logprob: -4.37589693069458
    9. ' +=' → logprob: -4.75089693069458
    10. 'for' → logprob: -4.87589693069458

Token 1617: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036582681350409985
    2. 'start' → logprob: -5.878658294677734
    3. 'left' → logprob: -7.753658294677734
    4. 'i' → logprob: -8.378658294677734
    5. 'max' → logprob: -9.503658294677734
    6. ' ' → logprob: -9.628658294677734
    7. '1' → logprob: -11.378658294677734
    8. 'l' → logprob: -11.378658294677734
    9. ' start' → logprob: -12.003658294677734
    10. 'range' → logprob: -12.753658294677734

Token 1618: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8123418688774109
    2. ' +' → logprob: -1.5623419284820557
    3. ' jusqu' → logprob: -2.4373419284820557
    4. '           ' → logprob: -2.6873419284820557
    5. ':' → logprob: -2.8123419284820557
    6. '
' → logprob: -3.5623419284820557
    7. '       ' → logprob: -3.6873419284820557
    8. ' =' → logprob: -4.437341690063477
    9. '            
' → logprob: -4.437341690063477
    10. '=' → logprob: -4.937341690063477

Token 1619: ' goal' (ID: 8583)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.457669562427327e-05
    2. ' N' → logprob: -10.00007438659668
    3. 'max' → logprob: -10.50007438659668
    4. '   ' → logprob: -13.75007438659668
    5. 'n' → logprob: -15.87507438659668
    6. '       ' → logprob: -16.37507438659668
    7. ' max' → logprob: -17.00007438659668
    8. '	N' → logprob: -17.12507438659668
    9. '0' → logprob: -17.62507438659668
    10. '
' → logprob: -17.62507438659668

Token 1620: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33331021666526794
    2. '
' → logprob: -1.4583102464675903
    3. '   ' → logprob: -4.083310127258301
    4. ':' → logprob: -5.208310127258301
    5. '           ' → logprob: -5.583310127258301
    6. ' +' → logprob: -5.583310127258301
    7. ' for' → logprob: -5.833310127258301
    8. '```' → logprob: -5.833310127258301
    9. '    
' → logprob: -6.208310127258301
    10. ':
' → logprob: -6.583310127258301

Token 1621: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026735646650195122
    2. '           ' → logprob: -4.526735782623291
    3. '   ' → logprob: -5.276735782623291
    4. '```' → logprob: -5.901735782623291
    5. '
' → logprob: -6.651735782623291
    6. ':' → logprob: -6.651735782623291
    7. ':
' → logprob: -7.276735782623291
    8. ' for' → logprob: -7.401735782623291
    9. '[' → logprob: -7.526735782623291
    10. ',' → logprob: -7.651735782623291

Token 1622: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16439220309257507
    2. ' i' → logprob: -2.4143922328948975
    3. 'i' (adapté à ' i') → logprob: -3.5393922328948975
    4. ' for' → logprob: -3.9143922328948975
    5. 'for' → logprob: -5.039391994476318
    6. '   ' → logprob: -5.539391994476318
    7. '           ' → logprob: -7.289391994476318
    8. '0' → logprob: -8.039392471313477
    9. ' current' → logprob: -8.039392471313477
    10. 'current' → logprob: -8.039392471313477

Token 1623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3142617642879486
    2. '=' → logprob: -1.314261794090271
    3. ' +=' → logprob: -7.3142619132995605
    4. '+=' → logprob: -8.939261436462402
    5. ' ' → logprob: -9.814261436462402
    6. ',' → logprob: -9.814261436462402
    7. ' in' → logprob: -9.939261436462402
    8. '        ' → logprob: -11.814261436462402
    9. ' ,' → logprob: -12.064261436462402
    10. '   ' → logprob: -12.439261436462402

Token 1624: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.023423079401254654
    2. '0' → logprob: -3.773423194885254
    3. ' start' → logprob: -8.648423194885254
    4. ' ' → logprob: -13.648423194885254
    5. '	start' → logprob: -15.023423194885254
    6. 'max' → logprob: -15.773423194885254
    7. '[start' → logprob: -15.773423194885254
    8. '=start' → logprob: -15.898423194885254
    9. '1' → logprob: -16.398422241210938
    10. 'star' → logprob: -16.773422241210938

Token 1625: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37344658374786377
    2. '<|end|>' → logprob: -2.123446464538574
    3. '+' → logprob: -2.748446464538574
    4. '<|end|>' → logprob: -3.248446464538574
    5. ' 
' → logprob: -3.748446464538574
    6. '       ' → logprob: -3.998446464538574
    7. ' +' → logprob: -3.998446464538574
    8. '  
' → logprob: -4.998446464538574
    9. ':' → logprob: -5.873446464538574
    10. '           ' → logprob: -5.873446464538574

Token 1626: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4483533203601837
    2. '
' → logprob: -1.0733532905578613
    3. '           ' → logprob: -5.198353290557861
    4. '        
' → logprob: -5.948353290557861
    5. ':
' → logprob: -6.573353290557861
    6. ':' → logprob: -6.573353290557861
    7. '```' → logprob: -6.573353290557861
    8. ' 
' → logprob: -6.823353290557861
    9. '
' → logprob: -7.198353290557861
    10. '   ' → logprob: -7.198353290557861

Token 1627: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.374487042427063
    2. 'while' (adapté à ' while') → logprob: -1.624487042427063
    3. ' while' → logprob: -1.749487042427063
    4. ' 
' → logprob: -1.749487042427063
    5. '       ' → logprob: -2.6244869232177734
    6. ' ' → logprob: -3.2494869232177734
    7. '0' → logprob: -3.8744869232177734
    8. '           ' → logprob: -4.624486923217773
    9. '1' → logprob: -4.624486923217773
    10. ':' → logprob: -4.874486923217773

Token 1628: ' i' (ID: 575)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3581351637840271
    2. 'i' → logprob: -1.3581352233886719
    3. ' max' → logprob: -3.608135223388672
    4. ' i' → logprob: -4.233135223388672
    5. 'N' → logprob: -6.983135223388672
    6. 'True' → logprob: -7.483135223388672
    7. '   ' → logprob: -8.233135223388672
    8. 'goal' → logprob: -8.608135223388672
    9. ' True' → logprob: -8.858135223388672
    10. ' N' → logprob: -9.733135223388672

Token 1629: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07010393589735031
    2. '<=' → logprob: -2.695103883743286
    3. ' <' → logprob: -8.820103645324707
    4. ')<=' → logprob: -12.320103645324707
    5. ' ' → logprob: -12.445103645324707
    6. ' !=' → logprob: -13.070103645324707
    7. '+' → logprob: -13.445103645324707
    8. '<' → logprob: -13.570103645324707
    9. '	' → logprob: -13.945103645324707
    10. ' ≤' → logprob: -14.195103645324707

Token 1630: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00012606535165105015
    2. ' max' → logprob: -9.000125885009766
    3. 'next' → logprob: -13.625125885009766
    4. 'goal' → logprob: -14.375125885009766
    5. '   ' → logprob: -15.000125885009766
    6. 'N' → logprob: -15.875125885009766
    7. '	max' → logprob: -15.875125885009766
    8. ' ' → logprob: -16.000125885009766
    9. 'min' → logprob: -17.000125885009766
    10. '  ' → logprob: -17.250125885009766

Token 1631: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.0087516784551553e-05
    2. 're' → logprob: -12.37501049041748
    3. 'reach' → logprob: -12.50001049041748
    4. '(i' → logprob: -14.50001049041748
    5. '(re' → logprob: -14.87501049041748
    6. '(max' → logprob: -15.12501049041748
    7. 'i' → logprob: -15.50001049041748
    8. '\' → logprob: -15.50001049041748
    9. 'reachable' → logprob: -15.75001049041748
    10. 'max' → logprob: -15.75001049041748

Token 1632: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0007480407948605716
    2. 'reach' → logprob: -8.000747680664062
    3. 'ch' → logprob: -8.375747680664062
    4. '_re' → logprob: -9.625747680664062
    5. 'Reach' → logprob: -10.250747680664062
    6. 'each' → logprob: -10.500747680664062
    7. 'i' → logprob: -11.000747680664062
    8. 'a' → logprob: -12.250747680664062
    9. 'ac' → logprob: -12.375747680664062
    10. 'max' → logprob: -12.625747680664062

Token 1633: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1298270225524902
    2. ' and' → logprob: -1.1298270225524902
    3. ':' → logprob: -1.5048270225524902
    4. ' +' → logprob: -2.5048270225524902
    5. ':
' → logprob: -3.3798270225524902
    6. 'and' → logprob: -4.75482702255249
    7. '           ' → logprob: -6.00482702255249
    8. ' :' → logprob: -7.00482702255249
    9. '       ' → logprob: -7.50482702255249
    10. '               ' → logprob: -7.87982702255249

Token 1634: ' i' (ID: 575)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13320063054561615
    2. 'i' → logprob: -2.2582006454467773
    3. 'goal' → logprob: -4.508200645446777
    4. ' max' → logprob: -5.008200645446777
    5. ' i' → logprob: -6.633200645446777
    6. 'True' → logprob: -7.383200645446777
    7. ' goal' → logprob: -8.633200645446777
    8. '   ' → logprob: -9.133200645446777
    9. ' True' → logprob: -10.008200645446777
    10. 'N' → logprob: -10.133200645446777

Token 1635: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05721394717693329
    2. ' +' → logprob: -3.0572140216827393
    3. ' <' → logprob: -5.55721378326416
    4. '<' → logprob: -6.43221378326416
    5. '+=' → logprob: -7.05721378326416
    6. '<=' → logprob: -7.18221378326416
    7. ' +=' → logprob: -7.55721378326416
    8. ' <=' → logprob: -7.68221378326416
    9. '<len' → logprob: -9.43221378326416
    10. '[' → logprob: -10.05721378326416

Token 1636: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002991132438182831
    2. 'goal' → logprob: -6.127991199493408
    3. ' N' → logprob: -7.252991199493408
    4. ' goal' → logprob: -10.00299072265625
    5. '   ' → logprob: -10.50299072265625
    6. '=' → logprob: -11.25299072265625
    7. ' ' → logprob: -13.00299072265625
    8. '       ' → logprob: -13.00299072265625
    9. '           ' → logprob: -13.12799072265625
    10. '  ' → logprob: -13.75299072265625

Token 1637: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5507358312606812
    2. ':
' → logprob: -1.3007358312606812
    3. ' and' → logprob: -2.1757359504699707
    4. '+' → logprob: -3.5507359504699707
    5. 'and' → logprob: -6.175735950469971
    6. ' :' → logprob: -6.425735950469971
    7. ' +' → logprob: -6.550735950469971
    8. '           ' → logprob: -7.175735950469971
    9. '):
' → logprob: -7.300735950469971
    10. ' :
' → logprob: -7.675735950469971

Token 1638: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29982754588127136
    2. ':' → logprob: -1.6748275756835938
    3. ':
' → logprob: -4.049827575683594
    4. '           ' → logprob: -4.549827575683594
    5. ' :' → logprob: -4.799827575683594
    6. ' 
' → logprob: -4.924827575683594
    7. '       ' → logprob: -5.299827575683594
    8. '                
' → logprob: -5.549827575683594
    9. '   ' → logprob: -5.924827575683594
    10. '    
' → logprob: -6.299827575683594

Token 1639: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6776110529899597
    2. 'if' (adapté à ' if') → logprob: -0.9276110529899597
    3. '           ' → logprob: -2.6776111125946045
    4. 'for' → logprob: -4.427610874176025
    5. '   ' → logprob: -4.927610874176025
    6. ' if' → logprob: -5.177610874176025
    7. 'next' → logprob: -6.302610874176025
    8. 'j' → logprob: -8.177611351013184
    9. 'max' → logprob: -8.427611351013184
    10. '                   ' → logprob: -8.677611351013184

Token 1640: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0009626734536141157
    2. 'direction' → logprob: -8.250962257385254
    3. 'not' → logprob: -8.625962257385254
    4. '       ' → logprob: -9.125962257385254
    5. ' reachable' → logprob: -9.500962257385254
    6. '   ' → logprob: -9.625962257385254
    7. '           ' → logprob: -9.625962257385254
    8. 'd' → logprob: -9.625962257385254
    9. 'next' → logprob: -9.875962257385254
    10. 'reach' → logprob: -10.000962257385254

Token 1641: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004546254931483418
    2. '[' → logprob: -7.750454425811768
    3. ' [' → logprob: -11.000454902648926
    4. '               ' → logprob: -12.250454902648926
    5. '[j' → logprob: -14.125454902648926
    6. '                   ' → logprob: -14.625454902648926
    7. 'i' → logprob: -14.875454902648926
    8. '[
' → logprob: -15.500454902648926
    9. '```' → logprob: -15.875454902648926
    10. '                ' → logprob: -16.00045394897461

Token 1642: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.9793549180030823
    2. ':' → logprob: -1.2293548583984375
    3. ':
' → logprob: -1.3543548583984375
    4. ']:' → logprob: -3.7293548583984375
    5. ']' → logprob: -3.8543548583984375
    6. '==' → logprob: -4.6043548583984375
    7. ']==' → logprob: -5.3543548583984375
    8. '       ' → logprob: -5.6043548583984375
    9. '):
' → logprob: -5.9793548583984375
    10. '   ' → logprob: -6.4793548583984375

Token 1643: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014819695614278316
    2. ':' → logprob: -5.389819622039795
    3. ':
' → logprob: -6.014819622039795
    4. '```' → logprob: -6.764819622039795
    5. '                    
' → logprob: -6.889819622039795
    6. ' =' → logprob: -6.889819622039795
    7. '           ' → logprob: -7.139819622039795
    8. '               ' → logprob: -7.514819622039795
    9. '
' → logprob: -7.764819622039795
    10. ',' → logprob: -8.014820098876953

Token 1644: ' #' (ID: 1069)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5885254740715027
    2. '                   ' → logprob: -1.4635255336761475
    3. 'next' → logprob: -2.7135255336761475
    4. 'for' → logprob: -3.3385255336761475
    5. 'lim' → logprob: -3.5885255336761475
    6. 'max' → logprob: -3.7135255336761475
    7. 'j' → logprob: -4.838525295257568
    8. '#' (adapté à ' #') → logprob: -4.838525295257568
    9. '                       ' → logprob: -4.963525295257568
    10. 'right' → logprob: -5.463525295257568

Token 1645: ' On' (ID: 2160)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.2679141759872437
    2. 'for' → logprob: -1.7679141759872437
    3. '                   ' → logprob: -2.017914295196533
    4. 'max' → logprob: -2.267914295196533
    5. 'next' → logprob: -2.392914295196533
    6. 'lim' → logprob: -3.267914295196533
    7. 'min' → logprob: -3.267914295196533
    8. 'right' → logprob: -3.642914295196533
    9. 'left' → logprob: -4.142914295196533
    10. 'fur' → logprob: -4.142914295196533

Token 1646: ' essay' (ID: 9635)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2604430615901947
    2. 'for' → logprob: -2.5104429721832275
    3. '=' → logprob: -3.3854429721832275
    4. '                   ' → logprob: -3.5104429721832275
    5. '=max' → logprob: -4.010443210601807
    6. '                       ' → logprob: -4.510443210601807
    7. ' =' → logprob: -4.885443210601807
    8. ' max' → logprob: -4.885443210601807
    9. 'next' → logprob: -5.010443210601807
    10. '#' → logprob: -5.385443210601807

Token 1647: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22236964106559753
    2. 't' → logprob: -2.59736967086792
    3. 'de' → logprob: -2.59736967086792
    4. 'te' → logprob: -3.59736967086792
    5. 'ève' → logprob: -5.59736967086792
    6. 'ze' → logprob: -5.84736967086792
    7. 'le' → logprob: -5.97236967086792
    8. 'ète' → logprob: -6.97236967086792
    9. 'ote' → logprob: -6.97236967086792
    10. 'ue' → logprob: -7.09736967086792

Token 1648: ' d' (ID: 272)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42350494861602783
    2. ' de' → logprob: -1.7985049486160278
    3. '                       ' → logprob: -2.4235048294067383
    4. ' d' → logprob: -3.9235048294067383
    5. ':' → logprob: -4.048504829406738
    6. 'to' → logprob: -4.173504829406738
    7. '                   ' → logprob: -5.173504829406738
    8. 'd' → logprob: -5.298504829406738
    9. '                    ' → logprob: -5.673504829406738
    10. 'j' → logprob: -5.923504829406738

Token 1649: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.6715272665023804
    2. 'ét' → logprob: -1.4215272665023804
    3. 'extend' → logprob: -2.04652738571167
    4. ''aller' → logprob: -4.04652738571167
    5. 'et' → logprob: -4.17152738571167
    6. 'expand' → logprob: -4.17152738571167
    7. 'expl' → logprob: -4.67152738571167
    8. 'aller' → logprob: -4.92152738571167
    9. '’ét' → logprob: -5.17152738571167
    10. 'atte' → logprob: -5.42152738571167

Token 1650: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.00011391390580683947
    2. 'andre' → logprob: -10.625113487243652
    3. 'end' → logprob: -11.375113487243652
    4. 'dre' → logprob: -11.625113487243652
    5. 'endres' → logprob: -11.625113487243652
    6. 'endr' → logprob: -11.750113487243652
    7. 'nd' → logprob: -11.875113487243652
    8. 'endra' → logprob: -12.125113487243652
    9. '...' → logprob: -12.125113487243652
    10. '#' → logprob: -12.625113487243652

Token 1651: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07610081881284714
    2. ' max' → logprob: -3.2011008262634277
    3. 'next' → logprob: -4.326100826263428
    4. '                   ' → logprob: -5.576100826263428
    5. 'le' → logprob: -5.701100826263428
    6. 'la' → logprob: -5.826100826263428
    7. ' la' → logprob: -6.326100826263428
    8. ' next' → logprob: -6.451100826263428
    9. '               ' → logprob: -6.951100826263428
    10. ' le' → logprob: -7.201100826263428

Token 1652: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -6.704273118884885e-07
    2. '\' → logprob: -15.000000953674316
    3. '_' → logprob: -17.25
    4. '```' → logprob: -17.25
    5. 're' → logprob: -17.375
    6. 'i' → logprob: -17.625
    7. 'reach' → logprob: -17.625
    8. 'Reach' → logprob: -17.75
    9. '   ' → logprob: -17.875
    10. '_possible' → logprob: -18.0

Token 1653: 'ach' (ID: 678)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.04218924418091774
    2. 'ach' → logprob: -3.417189359664917
    3. 'reach' → logprob: -5.167189121246338
    4. '_re' → logprob: -6.292189121246338
    5. 'e' → logprob: -7.542189121246338
    6. '_each' → logprob: -8.292189598083496
    7. 'ech' → logprob: -9.042189598083496
    8. ' each' → logprob: -10.917189598083496
    9. 'Each' → logprob: -11.792189598083496
    10. ' reach' → logprob: -12.042189598083496

Token 1654: ' vers' (ID: 3640)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3571650981903076
    2. ' =' → logprob: -1.4821650981903076
    3. '<|end|>' → logprob: -1.9821650981903076
    4. '                   ' → logprob: -2.1071650981903076
    5. '                       ' → logprob: -3.1071650981903076
    6. '=' → logprob: -3.2321650981903076
    7. ' :' → logprob: -3.2321650981903076
    8. '<|end|>' → logprob: -3.4821650981903076
    9. ' to' → logprob: -4.482165336608887
    10. '                        
' → logprob: -4.482165336608887

Token 1655: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0918465405702591
    2. 'min' → logprob: -2.966846466064453
    3. ' next' → logprob: -3.966846466064453
    4. 'i' → logprob: -4.966846466064453
    5. 'max' → logprob: -5.466846466064453
    6. 'right' → logprob: -5.466846466064453
    7. ' min' → logprob: -6.591846466064453
    8. ' i' → logprob: -8.591846466064453
    9. '[next' → logprob: -9.466846466064453
    10. '   ' → logprob: -9.716846466064453

Token 1656: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.339278580620885e-06
    2. 'max' → logprob: -13.875001907348633
    3. '_min' → logprob: -14.125001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_token' → logprob: -15.375001907348633
    6. '_tokens' → logprob: -17.250001907348633
    7. '_MAX' → logprob: -17.375001907348633
    8. '_next' → logprob: -17.625001907348633
    9. ' _' → logprob: -17.875001907348633
    10. '```' → logprob: -18.000001907348633

Token 1657: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0001431114797014743
    2. 'reach' → logprob: -9.000143051147461
    3. 're' → logprob: -11.250143051147461
    4. 'i' → logprob: -13.000143051147461
    5. '[i' → logprob: -13.375143051147461
    6. '\' → logprob: -14.750143051147461
    7. 'Reach' → logprob: -14.875143051147461
    8. '   ' → logprob: -15.000143051147461
    9. '```' → logprob: -15.000143051147461
    10. '	re' → logprob: -15.250143051147461

Token 1658: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.2083803415298462
    2. 'reach' → logprob: -2.0833802223205566
    3. 'each' → logprob: -2.8333802223205566
    4. '_re' → logprob: -5.458380222320557
    5. 're' → logprob: -9.708380699157715
    6. 'e' → logprob: -9.708380699157715
    7. 'Reach' → logprob: -9.833380699157715
    8. 'ech' → logprob: -10.083380699157715
    9. 'ch' → logprob: -10.083380699157715
    10. 'ich' → logprob: -10.333380699157715

Token 1659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006882481975480914
    2. '[next' → logprob: -7.750688076019287
    3. '[' → logprob: -8.375688552856445
    4. ' [' → logprob: -11.875688552856445
    5. '   ' → logprob: -12.625688552856445
    6. '```' → logprob: -12.875688552856445
    7. '       ' → logprob: -13.375688552856445
    8. '[j' → logprob: -13.500688552856445
    9. 'next' → logprob: -13.750688552856445
    10. 'i' → logprob: -13.750688552856445

Token 1660: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24403193593025208
    2. ']+' → logprob: -2.2440319061279297
    3. ']:
' → logprob: -2.6190319061279297
    4. ']:' → logprob: -4.24403190612793
    5. '+' → logprob: -4.36903190612793
    6. ' +' → logprob: -5.24403190612793
    7. '[i' → logprob: -6.24403190612793
    8. '                   ' → logprob: -6.61903190612793
    9. ' ]' → logprob: -7.86903190612793
    10. '               ' → logprob: -8.11903190612793

Token 1661: ' en' (ID: 469)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16288095712661743
    2. ' for' → logprob: -4.162880897521973
    3. ' i' → logprob: -4.162880897521973
    4. ' ' → logprob: -4.162880897521973
    5. ' while' → logprob: -4.287880897521973
    6. ' max' → logprob: -4.287880897521973
    7. ' next' → logprob: -4.662880897521973
    8. ' j' → logprob: -4.787880897521973
    9. '                    
' → logprob: -4.787880897521973
    10. 'j' → logprob: -5.162880897521973

Token 1662: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7323130965232849
    2. 'i' → logprob: -1.7323131561279297
    3. 'range' → logprob: -2.2323131561279297
    4. 'respect' → logprob: -2.6073131561279297
    5. 'increment' → logprob: -3.1073131561279297
    6. 'tenant' → logprob: -3.3573131561279297
    7. 'max' → logprob: -3.7323131561279297
    8. 'consider' → logprob: -3.8573131561279297
    9. '#' → logprob: -5.35731315612793
    10. 'augment' → logprob: -5.73231315612793

Token 1663: 'ifiant' (ID: 91447)
  Prédit: 'ifiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiant' → logprob: -0.338735967874527
    2. 'ant' → logprob: -2.463736057281494
    3. 'orm' → logprob: -2.713736057281494
    4. 'oyant' → logprob: -3.088736057281494
    5. 'érant' → logprob: -3.463736057281494
    6. 'ard' → logprob: -4.338736057281494
    7. 'istant' → logprob: -5.213736057281494
    8. 'aurant' → logprob: -5.213736057281494
    9. 'or' → logprob: -5.588736057281494
    10. 'asant' → logprob: -5.713736057281494

Token 1664: ' les' (ID: 1341)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8252822756767273
    2. ' if' → logprob: -1.700282335281372
    3. 'j' → logprob: -1.950282335281372
    4. 'for' → logprob: -2.450282335281372
    5. ' j' → logprob: -3.950282335281372
    6. 'd' → logprob: -4.075282096862793
    7. 'si' → logprob: -4.325282096862793
    8. ' que' → logprob: -4.450282096862793
    9. 'that' → logprob: -4.575282096862793
    10. '       ' → logprob: -4.825282096862793

Token 1665: ' conditions' (ID: 6409)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0693458318710327
    2. 'indices' → logprob: -1.4443458318710327
    3. 'j' → logprob: -2.0693459510803223
    4. ' indices' → logprob: -2.1943459510803223
    5. ' for' → logprob: -2.6943459510803223
    6. ' j' → logprob: -2.9443459510803223
    7. 'positions' → logprob: -4.444345951080322
    8. ' conditions' → logprob: -4.944345951080322
    9. 'indexes' → logprob: -5.069345951080322
    10. 'conditions' → logprob: -5.194345951080322

Token 1666: ' sur' (ID: 1512)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04468263313174248
    2. '                    
' → logprob: -4.919682502746582
    3. ' for' → logprob: -5.044682502746582
    4. '                       ' → logprob: -5.169682502746582
    5. ' =' → logprob: -5.419682502746582
    6. ':' → logprob: -5.419682502746582
    7. '               ' → logprob: -5.794682502746582
    8. '                        
' → logprob: -6.419682502746582
    9. ' :' → logprob: -6.669682502746582
    10. '<|end|>' → logprob: -6.669682502746582

Token 1667: ' d' (ID: 272)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1195298507809639
    2. 'd' → logprob: -2.744529962539673
    3. 'l' → logprob: -4.619529724121094
    4. 'indices' → logprob: -4.619529724121094
    5. ' j' → logprob: -5.369529724121094
    6. 'range' → logprob: -5.494529724121094
    7. 'les' → logprob: -5.744529724121094
    8. 'i' → logprob: -6.119529724121094
    9. 'the' → logprob: -6.244529724121094
    10. 'le' → logprob: -6.244529724121094

Token 1668: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1019335389137268
    2. '[' → logprob: -2.476933479309082
    3. '[]' → logprob: -5.601933479309082
    4. '[next' → logprob: -5.726933479309082
    5. '                   ' → logprob: -6.726933479309082
    6. '[i' → logprob: -7.601933479309082
    7. '<|end|>' → logprob: -7.601933479309082
    8. '                    
' → logprob: -7.726933479309082
    9. '                    ' → logprob: -7.726933479309082
    10. 'j' → logprob: -7.976933479309082

Token 1669: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19075283408164978
    2. ']:
' → logprob: -2.4407527446746826
    3. '[j' → logprob: -4.065752983093262
    4. '[i' → logprob: -4.065752983093262
    5. '[' → logprob: -4.190752983093262
    6. ']:' → logprob: -4.690752983093262
    7. ' ]' → logprob: -5.440752983093262
    8. '                   ' → logprob: -5.815752983093262
    9. ']
' → logprob: -6.065752983093262
    10. ']==' → logprob: -6.065752983093262

Token 1670: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6903873682022095
    2. ':' → logprob: -1.5653873682022095
    3. '                       ' → logprob: -1.6903873682022095
    4. '<|end|>' → logprob: -3.44038724899292
    5. ' :' → logprob: -4.56538724899292
    6. '                        
' → logprob: -4.69038724899292
    7. '               ' → logprob: -4.81538724899292
    8. '                    ' → logprob: -5.31538724899292
    9. '```' → logprob: -5.31538724899292
    10. ',' → logprob: -5.69038724899292

Token 1671: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4413618743419647
    2. 'j' → logprob: -1.566361904144287
    3. ' j' → logprob: -2.691361904144287
    4. ' next' → logprob: -3.441361904144287
    5. 'next' → logprob: -3.816361904144287
    6. ' for' → logprob: -4.441361904144287
    7. 'for' → logprob: -5.566361904144287
    8. '   ' → logprob: -6.066361904144287
    9. '```' → logprob: -6.941361904144287
    10. '                       ' → logprob: -7.066361904144287

Token 1672: ' Contra' (ID: 98337)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.49518918991088867
    2. 'j' → logprob: -1.2451891899108887
    3. ' j' → logprob: -2.4951891899108887
    4. ' next' → logprob: -5.120189189910889
    5. 'next' → logprob: -5.620189189910889
    6. '```' → logprob: -5.745189189910889
    7. 'i' → logprob: -6.245189189910889
    8. ' i' → logprob: -6.370189189910889
    9. ' for' → logprob: -6.870189189910889
    10. '               ' → logprob: -7.245189189910889

Token 1673: 'irement' (ID: 19343)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1799721717834473
    2. 'irement' → logprob: -1.3049721717834473
    3. 'in' → logprob: -2.0549721717834473
    4. 'inement' → logprob: -2.1799721717834473
    5. 'int' → logprob: -2.9299721717834473
    6. 'indre' → logprob: -3.9299721717834473
    7. 'ry' → logprob: -4.304972171783447
    8. 'ignant' → logprob: -4.429972171783447
    9. '   ' → logprob: -4.804972171783447
    10. 'rc' → logprob: -4.929972171783447

Token 1674: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2869860827922821
    2. '                   ' → logprob: -1.6619861125946045
    3. ' à' → logprob: -3.2869861125946045
    4. 'aux' → logprob: -4.661985874176025
    5. ' aux' → logprob: -5.161985874176025
    6. 'au' → logprob: -5.536985874176025
    7. '                       ' → logprob: -6.911985874176025
    8. '                    ' → logprob: -7.161985874176025
    9. '               ' → logprob: -8.536986351013184
    10. '                           ' → logprob: -8.661986351013184

Token 1675: ' notre' (ID: 12092)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3768739700317383
    2. 'max' → logprob: -1.7518739700317383
    3. ' i' → logprob: -2.2518739700317383
    4. 'prev' → logprob: -2.6268739700317383
    5. ' la' → logprob: -2.7518739700317383
    6. 'next' → logprob: -2.8768739700317383
    7. 'range' → logprob: -3.2518739700317383
    8. ' max' → logprob: -3.3768739700317383
    9. 'previous' → logprob: -3.5018739700317383
    10. ' next' → logprob: -3.6268739700317383

Token 1676: ' première' (ID: 23423)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.0416516065597534
    2. ' code' → logprob: -2.166651725769043
    3. ' previous' → logprob: -2.416651725769043
    4. '_' → logprob: -2.541651725769043
    5. ' précédent' → logprob: -2.916651725769043
    6. 'previous' → logprob: -3.041651725769043
    7. 'appro' → logprob: -3.416651725769043
    8. ' précédente' → logprob: -3.541651725769043
    9. ' approach' → logprob: -3.791651725769043
    10. 'code' → logprob: -4.041651725769043

Token 1677: ' idée' (ID: 64187)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.9975980520248413
    2. 'it' → logprob: -2.497598171234131
    3. 'impl' → logprob: -2.872598171234131
    4. '#' → logprob: -2.997598171234131
    5. 'for' → logprob: -3.122598171234131
    6. ' boucle' → logprob: -3.122598171234131
    7. ' approche' → logprob: -3.372598171234131
    8. 'range' → logprob: -3.747598171234131
    9. 'i' → logprob: -3.872598171234131
    10. 'iteration' → logprob: -3.872598171234131

Token 1678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0253286249935627
    2. '                   ' → logprob: -4.525328636169434
    3. ':' → logprob: -4.900328636169434
    4. ' ,' → logprob: -5.400328636169434
    5. ',
' → logprob: -7.275328636169434
    6. '_,' → logprob: -7.775328636169434
    7. ',j' → logprob: -7.900328636169434
    8. '                       ' → logprob: -8.650328636169434
    9. ' :' → logprob: -9.025328636169434
    10. ':
' → logprob: -9.900328636169434

Token 1679: ' on' (ID: 402)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7042577862739563
    2. ' j' → logprob: -0.8292577862739563
    3. '                   ' → logprob: -3.0792577266693115
    4. 'next' → logprob: -5.829257965087891
    5. ' for' → logprob: -5.954257965087891
    6. 'for' → logprob: -5.954257965087891
    7. '#' → logprob: -5.954257965087891
    8. ' next' → logprob: -6.079257965087891
    9. ' #' → logprob: -6.204257965087891
    10. ' ' → logprob: -6.204257965087891

Token 1680: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.1446533352136612
    2. ' doit' → logprob: -2.8946533203125
    3. ' devra' → logprob: -3.5196533203125
    4. ' do' → logprob: -4.8946533203125
    5. 'va' → logprob: -4.8946533203125
    6. 'n' → logprob: -4.8946533203125
    7. 'avance' → logprob: -5.1446533203125
    8. ' va' → logprob: -5.3946533203125
    9. ' ne' → logprob: -5.3946533203125
    10. 'ne' → logprob: -5.5196533203125

Token 1681: ' vérifier' (ID: 93671)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.21676599979400635
    2. 'v' → logprob: -3.716765880584717
    3. ' continuer' → logprob: -3.841765880584717
    4. 'j' → logprob: -3.966765880584717
    5. ' ' → logprob: -4.091765880584717
    6. ' avancer' → logprob: -4.091765880584717
    7. 'prendre' → logprob: -4.216765880584717
    8. 'increment' → logprob: -4.216765880584717
    9. '   ' → logprob: -4.716765880584717
    10. ' ' → logprob: -5.216765880584717

Token 1682: ' condition' (ID: 7060)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2212283611297607
    2. ' les' → logprob: -1.5962283611297607
    3. 'j' → logprob: -2.2212283611297607
    4. ' l' → logprob: -2.3462283611297607
    5. 'l' → logprob: -2.5962283611297607
    6. ' j' → logprob: -3.0962283611297607
    7. 'for' → logprob: -3.9712283611297607
    8. 'si' → logprob: -3.9712283611297607
    9. '[j' → logprob: -4.22122859954834
    10. 'if' → logprob: -4.34622859954834

Token 1683: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.7366910576820374
    2. ' sur' → logprob: -0.9866910576820374
    3. ' j' → logprob: -3.3616909980773926
    4. '[j' → logprob: -3.6116909980773926
    5. ' de' → logprob: -4.361690998077393
    6. ' for' → logprob: -4.486690998077393
    7. ' d' → logprob: -4.861690998077393
    8. 'for' → logprob: -5.236690998077393
    9. 'j' → logprob: -5.486690998077393
    10. ' if' → logprob: -5.486690998077393

Token 1684: ' d' (ID: 272)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4077019989490509
    2. 'd' → logprob: -1.1577019691467285
    3. ' j' → logprob: -5.2827019691467285
    4. 'next' → logprob: -5.5327019691467285
    5. '[j' → logprob: -5.7827019691467285
    6. ' d' → logprob: -6.0327019691467285
    7. 'reachable' → logprob: -6.5327019691467285
    8. '```' → logprob: -7.0327019691467285
    9. '<|end|>' → logprob: -7.1577019691467285
    10. ')' → logprob: -7.2827019691467285

Token 1685: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.28874871134757996
    2. '[' → logprob: -1.5387487411499023
    3. '[next' → logprob: -3.6637487411499023
    4. '                   ' → logprob: -5.663748741149902
    5. '[i' → logprob: -5.788748741149902
    6. ' [' → logprob: -7.538748741149902
    7. 'j' → logprob: -7.913748741149902
    8. '```' → logprob: -8.163748741149902
    9. '                    ' → logprob: -8.288748741149902
    10. '[
' → logprob: -8.413748741149902

Token 1686: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5783059597015381
    2. '[j' → logprob: -1.078305959701538
    3. '[' → logprob: -3.078305959701538
    4. '[i' → logprob: -3.703305959701538
    5. ' ]' → logprob: -4.453306198120117
    6. '                   ' → logprob: -5.703306198120117
    7. '[
' → logprob: -6.203306198120117
    8. ']>=' → logprob: -6.578306198120117
    9. '[next' → logprob: -6.828306198120117
    10. ']
' → logprob: -7.078306198120117

Token 1687: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.036738909780979156
    2. '                    ' → logprob: -4.161738872528076
    3. ' ' → logprob: -5.536738872528076
    4. '                    
' → logprob: -5.661738872528076
    5. '                     
' → logprob: -6.161738872528076
    6. ' ' → logprob: -6.411738872528076
    7. '```' → logprob: -6.536738872528076
    8. '               ' → logprob: -6.786738872528076
    9. ',' → logprob: -7.286738872528076
    10. ' et' → logprob: -7.286738872528076

Token 1688: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02430853806436062
    2. ' j' → logprob: -4.649308681488037
    3. 'j' → logprob: -5.274308681488037
    4. '                    
' → logprob: -6.024308681488037
    5. '               ' → logprob: -6.524308681488037
    6. ' for' → logprob: -6.524308681488037
    7. '```' → logprob: -7.274308681488037
    8. '                    ' → logprob: -7.524308681488037
    9. 'for' → logprob: -7.649308681488037
    10. '                       ' → logprob: -8.274308204650879

Token 1689: ' Pour' (ID: 13931)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1197095587849617
    2. ' j' → logprob: -3.1197094917297363
    3. 'j' → logprob: -3.2447094917297363
    4. ' i' → logprob: -5.119709491729736
    5. '               ' → logprob: -5.244709491729736
    6. 'i' → logprob: -5.869709491729736
    7. ' for' → logprob: -5.869709491729736
    8. '```' → logprob: -5.869709491729736
    9. '                    ' → logprob: -6.244709491729736
    10. '                       ' → logprob: -6.369709491729736

Token 1690: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014270463027060032
    2. ' j' → logprob: -4.264270305633545
    3. 'next' → logprob: -10.514270782470703
    4. '   ' → logprob: -10.514270782470703
    5. '	j' → logprob: -11.514270782470703
    6. '       ' → logprob: -11.764270782470703
    7. '_j' → logprob: -11.889270782470703
    8. ' ' → logprob: -12.639270782470703
    9. ' next' → logprob: -12.889270782470703
    10. '```' → logprob: -12.889270782470703

Token 1691: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5382217764854431
    2. '=' → logprob: -1.288221836090088
    3. ' =' → logprob: -2.538221836090088
    4. ' in' → logprob: -3.163221836090088
    5. 'dans' → logprob: -5.288221836090088
    6. 'from' → logprob: -5.663221836090088
    7. '=i' → logprob: -6.038221836090088
    8. 'en' → logprob: -6.913221836090088
    9. ')' → logprob: -7.038221836090088
    10. ' en' → logprob: -7.163221836090088

Token 1692: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006736215204000473
    2. ' range' → logprob: -5.0067362785339355
    3. 'i' → logprob: -11.256735801696777
    4. 'next' → logprob: -12.131735801696777
    5. ' i' → logprob: -14.506735801696777
    6. '(range' → logprob: -14.631735801696777
    7. 'reach' → logprob: -14.631735801696777
    8. '	range' → logprob: -14.631735801696777
    9. 'list' → logprob: -15.506735801696777
    10. ' next' → logprob: -16.131736755371094

Token 1693: 'max' (ID: 3228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02138671837747097
    2. ' i' → logprob: -3.8963866233825684
    3. ')' → logprob: -7.771386623382568
    4. '(i' → logprob: -9.271387100219727
    5. '{i' → logprob: -9.521387100219727
    6. '   ' → logprob: -10.146387100219727
    7. ')i' → logprob: -10.396387100219727
    8. '	i' → logprob: -10.521387100219727
    9. '[i' → logprob: -10.771387100219727
    10. ' (' → logprob: -11.021387100219727

Token 1694: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.25000286102295
    3. '(i' → logprob: -14.37500286102295
    4. 're' → logprob: -15.12500286102295
    5. '_i' → logprob: -16.000003814697266
    6. '\' → logprob: -16.125003814697266
    7. 'i' → logprob: -16.500003814697266
    8. '_r' → logprob: -17.750003814697266
    9. '	re' → logprob: -18.000003814697266
    10. '(re' → logprob: -18.000003814697266

Token 1695: 'ach' (ID: 678)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.8014978766441345
    2. 'reach' → logprob: -1.3014979362487793
    3. 'ach' → logprob: -1.4264979362487793
    4. 'each' → logprob: -3.6764979362487793
    5. 'e' → logprob: -4.801497936248779
    6. 'Reach' → logprob: -6.426497936248779
    7. 'ech' → logprob: -7.051497936248779
    8. ' reach' → logprob: -7.176497936248779
    9. '_e' → logprob: -7.301497936248779
    10. 'i' → logprob: -7.551497936248779

Token 1696: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16024331748485565
    2. ' +' → logprob: -1.910243272781372
    3. ']+' → logprob: -12.285243034362793
    4. '+j' → logprob: -12.535243034362793
    5. '+i' → logprob: -12.660243034362793
    6. '+
' → logprob: -13.160243034362793
    7. ',' → logprob: -13.160243034362793
    8. ']' → logprob: -14.285243034362793
    9. ' ' → logprob: -14.410243034362793
    10. ' +
' → logprob: -14.660243034362793

Token 1697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.625012397766113
    3. ',' → logprob: -13.250012397766113
    4. '```' → logprob: -14.875012397766113
    5. ' ' → logprob: -15.375012397766113
    6. ')' → logprob: -15.375012397766113
    7. '...' → logprob: -15.875012397766113
    8. '   ' → logprob: -16.875011444091797
    9. ' ,' → logprob: -17.000011444091797
    10. '
' → logprob: -17.250011444091797

Token 1698: ')' (ID: 8)
  Prédit: '):('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):(' → logprob: -0.09996151179075241
    2. ')' → logprob: -2.849961519241333
    3. ',' → logprob: -3.474961519241333
    4. '):' → logprob: -5.474961280822754
    5. '):
' → logprob: -7.099961280822754
    6. ')..' → logprob: -7.724961280822754
    7. ' ,' → logprob: -8.224961280822754
    8. ',j' → logprob: -8.599961280822754
    9. '),(' → logprob: -8.724961280822754
    10. ')...' → logprob: -9.349961280822754

Token 1699: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7305342555046082
    2. ':' → logprob: -0.7305342555046082
    3. '..' → logprob: -5.105534076690674
    4. ':
' → logprob: -5.355534076690674
    5. ' :' → logprob: -5.355534076690674
    6. ',j' → logprob: -5.605534076690674
    7. ':j' → logprob: -5.730534076690674
    8. ' ,' → logprob: -6.230534076690674
    9. ' <=' → logprob: -6.355534076690674
    10. ',
' → logprob: -6.480534076690674

Token 1700: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06856971234083176
    2. ' next' → logprob: -3.1935696601867676
    3. '(next' → logprob: -3.6935696601867676
    4. '[next' → logprob: -8.318570137023926
    5. 'min' → logprob: -9.443570137023926
    6. ' (' → logprob: -10.943570137023926
    7. ' min' → logprob: -11.818570137023926
    8. '	next' → logprob: -12.443570137023926
    9. '(min' → logprob: -12.693570137023926
    10. ',next' → logprob: -13.068570137023926

Token 1701: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.011373155459296e-05
    2. 'max' → logprob: -11.000030517578125
    3. '_re' → logprob: -11.750030517578125
    4. '_' → logprob: -12.625030517578125
    5. '_min' → logprob: -14.375030517578125
    6. ' _' → logprob: -14.625030517578125
    7. '_MAX' → logprob: -15.000030517578125
    8. 'Max' → logprob: -15.875030517578125
    9. '```' → logprob: -16.125030517578125
    10. '[_' → logprob: -16.250030517578125

Token 1702: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -4.961759259458631e-06
    2. 're' → logprob: -13.750004768371582
    3. '\' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.000004768371582
    5. 'reach' → logprob: -14.875004768371582
    6. '                   ' → logprob: -15.000004768371582
    7. '[i' → logprob: -15.125004768371582
    8. '               ' → logprob: -15.500004768371582
    9. '```' → logprob: -15.500004768371582
    10. '       ' → logprob: -15.750004768371582

Token 1703: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.007640582509338856
    2. 'reach' → logprob: -5.132640361785889
    3. 'each' → logprob: -6.507640361785889
    4. '_re' → logprob: -8.632640838623047
    5. 'ich' → logprob: -12.007640838623047
    6. 'i' → logprob: -12.007640838623047
    7. 'ch' → logprob: -12.257640838623047
    8. '[i' → logprob: -12.632640838623047
    9. ' reach' → logprob: -13.007640838623047
    10. 'Reach' → logprob: -13.257640838623047

Token 1704: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18765832483768463
    2. ' +' → logprob: -1.8126583099365234
    3. '[i' → logprob: -5.312658309936523
    4. '[' → logprob: -6.937658309936523
    5. '[j' → logprob: -6.937658309936523
    6. ':
' → logprob: -8.687658309936523
    7. '                   ' → logprob: -8.812658309936523
    8. '```' → logprob: -9.187658309936523
    9. '+j' → logprob: -9.187658309936523
    10. '+i' → logprob: -9.312658309936523

Token 1705: '],' (ID: 2155)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5074164271354675
    2. '+' → logprob: -1.1324164867401123
    3. ']' → logprob: -3.2574164867401123
    4. ']:' → logprob: -4.632416248321533
    5. '):
' → logprob: -4.632416248321533
    6. ']+' → logprob: -4.632416248321533
    7. ' +' → logprob: -5.257416248321533
    8. '[i' → logprob: -7.132416248321533
    9. ':' → logprob: -8.257416725158691
    10. ':
' → logprob: -8.382416725158691

Token 1706: ' on' (ID: 402)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6016269326210022
    2. ' for' → logprob: -1.8516268730163574
    3. 'j' → logprob: -2.1016268730163574
    4. ' ' → logprob: -2.9766268730163574
    5. ' ' → logprob: -3.2266268730163574
    6. 'for' → logprob: -4.101626873016357
    7. '```' → logprob: -4.601626873016357
    8. ' if' → logprob: -4.851626873016357
    9. '<|end|>' → logprob: -4.976626873016357
    10. ')' → logprob: -4.976626873016357

Token 1707: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.516983687877655
    2. ' for' → logprob: -1.6419837474822998
    3. ':' → logprob: -1.8919837474822998
    4. ')' → logprob: -5.016983509063721
    5. '<|end|>' → logprob: -5.016983509063721
    6. '<|end|>' → logprob: -5.516983509063721
    7. '...' → logprob: -5.891983509063721
    8. '                           ' → logprob: -5.891983509063721
    9. '**' → logprob: -5.954483509063721
    10. '```' → logprob: -6.204483509063721

Token 1708: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0955214574933052
    2. 'rif' → logprob: -2.4705214500427246
    3. 'r' → logprob: -5.970521450042725
    4. 'if' → logprob: -6.595521450042725
    5. 'ra' → logprob: -7.095521450042725
    6. 'rite' → logprob: -7.845521450042725
    7. '```' → logprob: -8.345521926879883
    8. 'ife' → logprob: -8.970521926879883
    9. 'er' → logprob: -9.345521926879883
    10. 'rit' → logprob: -9.470521926879883

Token 1709: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4373242259025574
    2. 'if' → logprob: -1.8123242855072021
    3. ' d' → logprob: -2.437324285507202
    4. ' j' → logprob: -3.562324285507202
    5. 'd' → logprob: -4.062324047088623
    6. '```' → logprob: -4.187324047088623
    7. '   ' → logprob: -4.687324047088623
    8. ' ' → logprob: -4.812324047088623
    9. ''' → logprob: -5.437324047088623
    10. 'j' → logprob: -5.562324047088623

Token 1710: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4771311283111572
    2. 'if' → logprob: -1.8521311283111572
    3. 'j' → logprob: -1.9771311283111572
    4. ' if' → logprob: -3.2271311283111572
    5. ' d' → logprob: -3.7271311283111572
    6. ' j' → logprob: -4.352130889892578
    7. 'for' → logprob: -5.852130889892578
    8. '   ' → logprob: -6.977130889892578
    9. 'while' → logprob: -7.352130889892578
    10. '(j' → logprob: -7.477130889892578

Token 1711: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.3908894956111908
    2. '*' → logprob: -1.1408895254135132
    3. '(j' → logprob: -6.265889644622803
    4. '*j' → logprob: -6.765889644622803
    5. '(' → logprob: -7.140889644622803
    6. ' *' → logprob: -9.265889167785645
    7. '*
' → logprob: -10.390889167785645
    8. '(
' → logprob: -11.140889167785645
    9. '[j' → logprob: -11.515889167785645
    10. ' (' → logprob: -12.390889167785645

Token 1712: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008143932209350169
    2. ' j' → logprob: -7.125814437866211
    3. '(j' → logprob: -13.125814437866211
    4. '	j' → logprob: -13.125814437866211
    5. '[j' → logprob: -13.250814437866211
    6. ')' → logprob: -13.500814437866211
    7. '<|end|>' → logprob: -13.625814437866211
    8. ' ' → logprob: -14.875814437866211
    9. ',j' → logprob: -15.500814437866211
    10. '   ' → logprob: -15.750814437866211

Token 1713: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3176107108592987
    2. '-' → logprob: -1.317610740661621
    3. '-i' → logprob: -5.442610740661621
    4. '-
' → logprob: -13.067610740661621
    5. ')' → logprob: -13.442610740661621
    6. '<|end|>' → logprob: -14.067610740661621
    7. '[i' → logprob: -14.192610740661621
    8. '   ' → logprob: -14.442610740661621
    9. ' -
' → logprob: -14.567610740661621
    10. ' ' → logprob: -14.567610740661621

Token 1714: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024829115718603134
    2. ' i' → logprob: -6.002482891082764
    3. ' ' → logprob: -12.502483367919922
    4. '	i' → logprob: -13.002483367919922
    5. '   ' → logprob: -13.752483367919922
    6. '  ' → logprob: -16.127483367919922
    7. '_i' → logprob: -18.002483367919922
    8. '    ' → logprob: -18.002483367919922
    9. ' ' → logprob: -19.127483367919922
    10. '     ' → logprob: -19.127483367919922

Token 1715: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001105683040805161
    2. ' )' → logprob: -7.126105785369873
    3. ')<=' → logprob: -8.251105308532715
    4. '<=' → logprob: -11.501105308532715
    5. '')' → logprob: -12.126105308532715
    6. '[' → logprob: -12.501105308532715
    7. ' <=' → logprob: -12.626105308532715
    8. '[j' → logprob: -12.626105308532715
    9. '   ' → logprob: -13.001105308532715
    10. '```' → logprob: -13.251105308532715

Token 1716: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02362079918384552
    2. '<=' → logprob: -3.773620843887329
    3. '```' → logprob: -8.52362060546875
    4. ')' → logprob: -9.89862060546875
    5. ')<=' → logprob: -9.89862060546875
    6. ' ' → logprob: -10.52362060546875
    7. '   ' → logprob: -11.52362060546875
    8. '[j' → logprob: -12.14862060546875
    9. ' )' → logprob: -12.27362060546875
    10. '[' → logprob: -12.52362060546875

Token 1717: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16023743152618408
    2. ' d' → logprob: -1.910237431526184
    3. ' min' → logprob: -12.285237312316895
    4. 'min' → logprob: -13.035237312316895
    5. '	d' → logprob: -13.160237312316895
    6. ' ' → logprob: -13.785237312316895
    7. '```' → logprob: -14.285237312316895
    8. '10' → logprob: -14.285237312316895
    9. ' ' → logprob: -14.410237312316895
    10. '    ' → logprob: -14.535237312316895

Token 1718: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004233801271766424
    2. '[' → logprob: -5.5042338371276855
    3. '[
' → logprob: -9.004233360290527
    4. '[i' → logprob: -11.004233360290527
    5. '```' → logprob: -11.879233360290527
    6. '\[' → logprob: -12.754233360290527
    7. ' [' → logprob: -13.379233360290527
    8. 'j' → logprob: -14.004233360290527
    9. '_j' → logprob: -14.129233360290527
    10. '[js' → logprob: -14.254233360290527

Token 1719: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019357789307832718
    2. '                   ' → logprob: -5.019357681274414
    3. '[j' → logprob: -5.144357681274414
    4. ']' → logprob: -6.394357681274414
    5. '):' → logprob: -6.394357681274414
    6. '):
' → logprob: -7.144357681274414
    7. ')
' → logprob: -7.769357681274414
    8. ' )' → logprob: -7.769357681274414
    9. '[' → logprob: -7.769357681274414
    10. '                       ' → logprob: -8.019357681274414

Token 1720: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21048037707805634
    2. ' and' → logprob: -3.0854804515838623
    3. '                       ' → logprob: -3.0854804515838623
    4. ':' → logprob: -3.4604804515838623
    5. ':
' → logprob: -3.5854804515838623
    6. 'for' → logprob: -4.585480213165283
    7. '               ' → logprob: -5.585480213165283
    8. ' :
' → logprob: -5.835480213165283
    9. 'and' → logprob: -5.960480213165283
    10. '[' → logprob: -6.085480213165283

Token 1721: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14771978557109833
    2. ' for' → logprob: -2.8977198600769043
    3. 'for' → logprob: -3.0227198600769043
    4. '               ' → logprob: -4.397719860076904
    5. '                       ' → logprob: -4.897719860076904
    6. '```' → logprob: -6.022719860076904
    7. '                    ' → logprob: -6.147719860076904
    8. '                    
' → logprob: -6.522719860076904
    9. '           ' → logprob: -6.897719860076904
    10. '				' → logprob: -7.147719860076904

Token 1722: ' Si' (ID: 7832)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2894751727581024
    2. 'for' → logprob: -2.039475202560425
    3. ' for' → logprob: -2.164475202560425
    4. 'j' → logprob: -5.914474964141846
    5. ' j' → logprob: -6.789474964141846
    6. '```' → logprob: -6.789474964141846
    7. '               ' → logprob: -7.539474964141846
    8. '                       ' → logprob: -8.039475440979004
    9. ' ' → logprob: -9.039475440979004
    10. '                    ' → logprob: -9.289475440979004

Token 1723: ' ok' (ID: 4763)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.6262462139129639
    2. 'j' → logprob: -2.001246213912964
    3. ' reachable' → logprob: -2.376246213912964
    4. 'd' → logprob: -3.001246213912964
    5. '10' → logprob: -3.001246213912964
    6. 'next' → logprob: -3.001246213912964
    7. ' j' → logprob: -3.501246213912964
    8. ' next' → logprob: -3.751246213912964
    9. 'direction' → logprob: -4.626246452331543
    10. ' d' → logprob: -4.876246452331543

Token 1724: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04835432767868042
    2. ',' → logprob: -3.423354387283325
    3. ':
' → logprob: -4.673354148864746
    4. '                   ' → logprob: -6.548354148864746
    5. ' :' → logprob: -6.548354148864746
    6. '                       ' → logprob: -6.923354148864746
    7. ' for' → logprob: -7.923354148864746
    8. 'for' → logprob: -8.173354148864746
    9. '                           ' → logprob: -8.798354148864746
    10. ' ,' → logprob: -9.298354148864746

Token 1725: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.7986273169517517
    2. ' reachable' → logprob: -0.9236273169517517
    3. '                       ' → logprob: -2.1736273765563965
    4. ' for' → logprob: -4.1736273765563965
    5. '                   ' → logprob: -4.1736273765563965
    6. ' ' → logprob: -5.7986273765563965
    7. 'for' → logprob: -6.4236273765563965
    8. '                           ' → logprob: -7.1736273765563965
    9. 'j' → logprob: -7.7986273765563965
    10. '```' → logprob: -7.7986273765563965

Token 1726: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10030953586101532
    2. '[' → logprob: -2.3503096103668213
    3. ' [' → logprob: -10.100309371948242
    4. '[i' → logprob: -10.850309371948242
    5. '                   ' → logprob: -10.975309371948242
    6. '[next' → logprob: -11.475309371948242
    7. '[
' → logprob: -12.350309371948242
    8. '```' → logprob: -13.225309371948242
    9. '               ' → logprob: -13.850309371948242
    10. '                           ' → logprob: -13.975309371948242

Token 1727: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011715499684214592
    2. '[j' → logprob: -4.886715412139893
    3. ']=' → logprob: -5.636715412139893
    4. '[' → logprob: -8.01171588897705
    5. '[i' → logprob: -9.01171588897705
    6. '=' → logprob: -10.51171588897705
    7. '                   ' → logprob: -10.76171588897705
    8. ' =' → logprob: -11.76171588897705
    9. ' ]' → logprob: -12.13671588897705
    10. '           ' → logprob: -12.51171588897705

Token 1728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023502500727772713
    2. ' =' → logprob: -3.7735025882720947
    3. '[' → logprob: -8.898502349853516
    4. '=True' → logprob: -9.773502349853516
    5. '[j' → logprob: -10.273502349853516
    6. '                   ' → logprob: -11.773502349853516
    7. '                       ' → logprob: -12.148502349853516
    8. '                           ' → logprob: -12.273502349853516
    9. ']=' → logprob: -13.023502349853516
    10. ']' → logprob: -13.273502349853516

Token 1729: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005234121344983578
    2. ' True' → logprob: -5.255234241485596
    3. '(True' → logprob: -15.630233764648438
    4. '=True' → logprob: -15.880233764648438
    5. '                   ' → logprob: -18.630233764648438
    6. '[' → logprob: -18.630233764648438
    7. '   ' → logprob: -19.005233764648438
    8. 'true' → logprob: -19.005233764648438
    9. '_true' → logprob: -19.255233764648438
    10. '                       ' → logprob: -19.255233764648438

Token 1730: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03170058876276016
    2. '                    
' → logprob: -4.906700611114502
    3. '                       ' → logprob: -4.906700611114502
    4. 'for' → logprob: -5.656700611114502
    5. '               ' → logprob: -5.906700611114502
    6. ' for' → logprob: -6.656700611114502
    7. '                    ' → logprob: -6.781700611114502
    8. ',' → logprob: -6.906700611114502
    9. '<|end|>' → logprob: -7.031700611114502
    10. '                        
' → logprob: -7.156700611114502

Token 1731: ' et' (ID: 859)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6600702404975891
    2. 'j' → logprob: -1.0350701808929443
    3. ' ' → logprob: -3.1600701808929443
    4. '                   ' → logprob: -4.285070419311523
    5. ' ' → logprob: -4.285070419311523
    6. '                    ' → logprob: -4.410070419311523
    7. '                               ' → logprob: -4.910070419311523
    8. '                           ' → logprob: -5.160070419311523
    9. ')' → logprob: -5.285070419311523
    10. '                            ' → logprob: -5.410070419311523

Token 1732: ' on' (ID: 402)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4384588897228241
    2. 'max' → logprob: -1.0634589195251465
    3. '                   ' → logprob: -5.3134589195251465
    4. ' j' → logprob: -6.1884589195251465
    5. '                       ' → logprob: -6.8134589195251465
    6. 'j' → logprob: -7.5634589195251465
    7. '                    ' → logprob: -7.9384589195251465
    8. ' ' → logprob: -8.813458442687988
    9. '                           ' → logprob: -9.438458442687988
    10. ')' → logprob: -9.813458442687988

Token 1733: ' ét' (ID: 4976)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011793611571192741
    2. ' max' → logprob: -5.761793613433838
    3. 'for' → logprob: -6.261793613433838
    4. '                   ' → logprob: -7.011793613433838
    5. '           ' → logprob: -7.261793613433838
    6. '                       ' → logprob: -7.386793613433838
    7. '_max' → logprob: -7.636793613433838
    8. 'extends' → logprob: -7.761793613433838
    9. 's' → logprob: -7.886793613433838
    10. '                           ' → logprob: -8.13679313659668

Token 1734: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04428129270672798
    2. 'ends' → logprob: -3.794281244277954
    3. 'and' → logprob: -4.794281482696533
    4. '
' → logprob: -5.419281482696533
    5. 'nd' → logprob: -6.294281482696533
    6. 'endra' → logprob: -6.794281482696533
    7. '   ' → logprob: -7.419281482696533
    8. '...' → logprob: -7.794281482696533
    9. '...
' → logprob: -7.794281482696533
    10. 'endre' → logprob: -8.044281005859375

Token 1735: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1460697501897812
    2. 'max' → logprob: -2.0210697650909424
    3. '                   ' → logprob: -6.396069526672363
    4. '_max' → logprob: -7.521069526672363
    5. ' j' → logprob: -7.896069526672363
    6. ' le' → logprob: -8.771069526672363
    7. ' ' → logprob: -9.271069526672363
    8. '                       ' → logprob: -9.396069526672363
    9. ' next' → logprob: -9.896069526672363
    10. ' _' → logprob: -9.896069526672363

Token 1736: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.2664456789934775e-06
    2. '\' → logprob: -14.250000953674316
    3. '	re' → logprob: -15.500000953674316
    4. 're' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '	' → logprob: -17.750001907348633
    7. 'reach' → logprob: -18.125001907348633
    8. '_j' → logprob: -18.250001907348633
    9. '_RE' → logprob: -18.250001907348633
    10. '' → logprob: -18.875001907348633

Token 1737: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.025972334668040276
    2. 'each' → logprob: -3.900972366333008
    3. 'reach' → logprob: -5.275972366333008
    4. 'Each' → logprob: -9.275972366333008
    5. '_re' → logprob: -9.650972366333008
    6. 'Reach' → logprob: -10.275972366333008
    7. 'ech' → logprob: -10.775972366333008
    8. ' each' → logprob: -11.150972366333008
    9. 'a' → logprob: -11.150972366333008
    10. '_each' → logprob: -11.150972366333008

Token 1738: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8255969285964966
    2. '=' → logprob: -1.0755969285964966
    3. ' +=' → logprob: -1.9505969285964966
    4. '+=' → logprob: -3.200596809387207
    5. '+' → logprob: -3.575596809387207
    6. ' +' → logprob: -6.200596809387207
    7. ' ' → logprob: -6.200596809387207
    8. '                   ' → logprob: -7.075596809387207
    9. '<|end|>' → logprob: -7.450596809387207
    10. '=j' → logprob: -7.700596809387207

Token 1739: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01565292477607727
    2. '                    ' → logprob: -5.265653133392334
    3. '                       ' → logprob: -5.765653133392334
    4. '               ' → logprob: -5.890653133392334
    5. '                    
' → logprob: -6.765653133392334
    6. ')' → logprob: -7.890653133392334
    7. ' ' → logprob: -7.890653133392334
    8. ' for' → logprob: -8.140652656555176
    9. '<|end|>' → logprob: -8.390652656555176
    10. '				' → logprob: -9.015652656555176

Token 1740: ' from' (ID: 591)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3066684901714325
    2. ' for' → logprob: -1.8066685199737549
    3. 'for' → logprob: -3.431668519973755
    4. '                       ' → logprob: -4.181668281555176
    5. ' j' → logprob: -4.431668281555176
    6. ' i' → logprob: -4.681668281555176
    7. '               ' → logprob: -5.056668281555176
    8. 'j' → logprob: -5.556668281555176
    9. '                    ' → logprob: -5.806668281555176
    10. '                           ' → logprob: -5.806668281555176

Token 1741: '_idx' (ID: 15257)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.22051496803760529
    2. 'collections' → logprob: -1.7205150127410889
    3. 'heap' → logprob: -3.970515012741089
    4. ' bis' → logprob: -10.220515251159668
    5. 'it' → logprob: -11.970515251159668
    6. 'math' → logprob: -12.220515251159668
    7. ' collections' → logprob: -12.845515251159668
    8. 'sorted' → logprob: -13.095515251159668
    9. 'queue' → logprob: -13.345515251159668
    10. ' itertools' → logprob: -14.345515251159668

Token 1742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232036709785461
    2. ' =' → logprob: -0.8982036709785461
    3. '=max' → logprob: -9.89820384979248
    4. '=
' → logprob: -11.39820384979248
    5. ',' → logprob: -12.64820384979248
    6. '=j' → logprob: -12.89820384979248
    7. '	' → logprob: -13.14820384979248
    8. ' ' → logprob: -13.89820384979248
    9. '		' → logprob: -14.02320384979248
    10. '=int' → logprob: -14.02320384979248

Token 1743: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009157438762485981
    2. ' max' → logprob: -7.00091552734375
    3. '                   ' → logprob: -13.12591552734375
    4. '(max' → logprob: -13.37591552734375
    5. '=max' → logprob: -15.00091552734375
    6. '	max' → logprob: -15.37591552734375
    7. '[max' → logprob: -16.50091552734375
    8. '=' → logprob: -17.62591552734375
    9. 'maximum' → logprob: -17.75091552734375
    10. '_max' → logprob: -17.87591552734375

Token 1744: '(max' (ID: 17178)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.375020027160645
    3. '(i' → logprob: -12.250020027160645
    4. '(max' → logprob: -14.000020027160645
    5. 'reach' → logprob: -14.125020027160645
    6. 're' → logprob: -14.375020027160645
    7. '\' → logprob: -14.500020027160645
    8. 'Reach' → logprob: -15.250020027160645
    9. '_RE' → logprob: -15.750020027160645
    10. '   ' → logprob: -16.000019073486328

Token 1745: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -8.2994620242971e-06
    2. '\' → logprob: -13.125008583068848
    3. 'reach' → logprob: -13.250008583068848
    4. '(re' → logprob: -13.250008583068848
    5. '(i' → logprob: -14.000008583068848
    6. '(' → logprob: -14.000008583068848
    7. 're' → logprob: -14.125008583068848
    8. '	re' → logprob: -15.625008583068848
    9. ')' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.12500762939453

Token 1746: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.03928517550230026
    2. 'each' → logprob: -3.539285182952881
    3. 'reach' → logprob: -4.914285182952881
    4. 'ch' → logprob: -7.289285182952881
    5. '_re' → logprob: -7.289285182952881
    6. 'e' → logprob: -8.539284706115723
    7. 'Reach' → logprob: -9.414284706115723
    8. 'ich' → logprob: -9.414284706115723
    9. '_each' → logprob: -9.414284706115723
    10. 'ech' → logprob: -9.789284706115723

Token 1747: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026373684406280518
    2. ' +' → logprob: -3.6513736248016357
    3. ')+' → logprob: -9.651373863220215
    4. ')' → logprob: -12.401373863220215
    5. '+i' → logprob: -13.776373863220215
    6. ',' → logprob: -14.276373863220215
    7. ']+' → logprob: -14.651373863220215
    8. ' plus' → logprob: -15.151373863220215
    9. '           ' → logprob: -15.276373863220215
    10. '       ' → logprob: -15.401373863220215

Token 1748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.500019073486328
    4. ',' → logprob: -16.375019073486328
    5. '0' → logprob: -16.625019073486328
    6. '
' → logprob: -17.812519073486328
    7. 'from' → logprob: -18.187519073486328
    8. '=' → logprob: -18.375019073486328
    9. '```' → logprob: -18.437519073486328
    10. '  ' → logprob: -18.437519073486328

Token 1749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045864954590797424
    2. ',i' → logprob: -3.545865058898926
    3. ',j' → logprob: -4.420865058898926
    4. ' ,' → logprob: -5.920865058898926
    5. '                   ' → logprob: -7.170865058898926
    6. ',
' → logprob: -8.420865058898926
    7. ',to' → logprob: -9.295865058898926
    8. '                       ' → logprob: -10.420865058898926
    9. ',next' → logprob: -11.170865058898926
    10. ',b' → logprob: -11.170865058898926

Token 1750: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0035011228173971176
    2. ' i' → logprob: -5.878500938415527
    3. '                   ' → logprob: -7.378500938415527
    4. '                       ' → logprob: -10.253500938415527
    5. '                           ' → logprob: -10.878500938415527
    6. '               ' → logprob: -12.628500938415527
    7. '           ' → logprob: -13.003500938415527
    8. '   ' → logprob: -13.378500938415527
    9. '                               ' → logprob: -13.378500938415527
    10. '                    ' → logprob: -13.503500938415527

Token 1751: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05490913987159729
    2. ' +' → logprob: -2.9299092292785645
    3. ')' → logprob: -11.179908752441406
    4. ')+' → logprob: -12.179908752441406
    5. '+
' → logprob: -13.179908752441406
    6. '<|end|>' → logprob: -13.429908752441406
    7. '+i' → logprob: -13.679908752441406
    8. '<|end|>' → logprob: -13.804908752441406
    9. ' +
' → logprob: -14.179908752441406
    10. '()+' → logprob: -15.054908752441406

Token 1752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -14.375008583068848
    4. '   ' → logprob: -14.500008583068848
    5. '  ' → logprob: -17.875009536743164
    6. '``' → logprob: -18.625009536743164
    7. '       ' → logprob: -18.875009536743164
    8. '0' → logprob: -19.125009536743164
    9. '    ' → logprob: -19.187509536743164
    10. '<|end|>' → logprob: -19.500009536743164

Token 1753: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11692281067371368
    2. '                   ' → logprob: -2.7419228553771973
    3. ')
' → logprob: -3.2419228553771973
    4. ',' → logprob: -5.991922855377197
    5. '               ' → logprob: -6.616922855377197
    6. ',j' → logprob: -7.116922855377197
    7. '):
' → logprob: -7.741922855377197
    8. '<|end|>' → logprob: -7.991922855377197
    9. ' )' → logprob: -8.616922378540039
    10. '                       ' → logprob: -8.616922378540039

Token 1754: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0782989040017128
    2. '                    ' → logprob: -3.203298807144165
    3. ')' → logprob: -5.453299045562744
    4. '               ' → logprob: -5.453299045562744
    5. '<|end|>' → logprob: -5.578299045562744
    6. ' for' → logprob: -5.703299045562744
    7. '```' → logprob: -5.703299045562744
    8. 'for' → logprob: -5.953299045562744
    9. ':' → logprob: -6.328299045562744
    10. '                    
' → logprob: -6.578299045562744

Token 1755: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26790961623191833
    2. ' for' → logprob: -2.642909526824951
    3. 'to' (adapté à ' to') → logprob: -2.892909526824951
    4. '                   ' → logprob: -3.142909526824951
    5. ' to' → logprob: -3.142909526824951
    6. '```' → logprob: -4.517909526824951
    7. 'range' → logprob: -5.392909526824951
    8. 'next' → logprob: -5.642909526824951
    9. ' next' → logprob: -7.142909526824951
    10. '               ' → logprob: -7.517909526824951

Token 1756: '_idx' (ID: 15257)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3224154710769653
    2. '(next' → logprob: -1.4474154710769653
    3. '[next' → logprob: -1.6974154710769653
    4. '_next' → logprob: -2.322415351867676
    5. '=' → logprob: -2.572415351867676
    6. ' =' → logprob: -2.822415351867676
    7. '_idx' → logprob: -3.322415351867676
    8. '_max' → logprob: -4.447415351867676
    9. ' next' → logprob: -4.697415351867676
    10. '_index' → logprob: -5.197415351867676

Token 1757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42871665954589844
    2. ' =' → logprob: -1.0537166595458984
    3. '=
' → logprob: -12.803716659545898
    4. '                   ' → logprob: -13.803716659545898
    5. '=max' → logprob: -13.803716659545898
    6. '[next' → logprob: -13.928716659545898
    7. '```' → logprob: -14.053716659545898
    8. '           ' → logprob: -14.303716659545898
    9. '=min' → logprob: -14.303716659545898
    10. ',' → logprob: -14.303716659545898

Token 1758: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.127089262008667
    2. ' next' → logprob: -2.127089262008667
    3. 'min' → logprob: -9.002089500427246
    4. ' min' → logprob: -10.627089500427246
    5. '                   ' → logprob: -12.377089500427246
    6. '   ' → logprob: -12.377089500427246
    7. '           ' → logprob: -13.377089500427246
    8. '	next' → logprob: -13.627089500427246
    9. '               ' → logprob: -13.877089500427246
    10. '                       ' → logprob: -14.502089500427246

Token 1759: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.868328920158092e-05
    2. 'max' → logprob: -10.500028610229492
    3. '_min' → logprob: -14.875028610229492
    4. '[i' → logprob: -15.125028610229492
    5. '_next' → logprob: -15.625028610229492
    6. 'Max' → logprob: -15.750028610229492
    7. '_re' → logprob: -16.375028610229492
    8. '_MAX' → logprob: -17.375028610229492
    9. ')' → logprob: -18.000028610229492
    10. '(i' → logprob: -18.125028610229492

Token 1760: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0009973214473575354
    2. 'reach' → logprob: -7.000997543334961
    3. 're' → logprob: -10.250997543334961
    4. '[i' → logprob: -10.375997543334961
    5. 'i' → logprob: -11.375997543334961
    6. '   ' → logprob: -12.750997543334961
    7. '       ' → logprob: -14.625997543334961
    8. 'Reach' → logprob: -14.750997543334961
    9. '_i' → logprob: -14.875997543334961
    10. 'max' → logprob: -15.000997543334961

Token 1761: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0028412528336048126
    2. 'reach' → logprob: -6.377841472625732
    3. 'each' → logprob: -7.002841472625732
    4. '_re' → logprob: -9.002840995788574
    5. 'ich' → logprob: -10.127840995788574
    6. 'ch' → logprob: -10.502840995788574
    7. 'Each' → logprob: -11.752840995788574
    8. 'Reach' → logprob: -12.502840995788574
    9. '_each' → logprob: -12.877840995788574
    10. 're' → logprob: -13.252840995788574

Token 1762: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. 'i' → logprob: -12.500006675720215
    3. '[' → logprob: -13.250006675720215
    4. ' [' → logprob: -15.500006675720215
    5. '	i' → logprob: -15.500006675720215
    6. ',i' → logprob: -15.875006675720215
    7. '```' → logprob: -15.875006675720215
    8. '[I' → logprob: -16.1250057220459
    9. '{i' → logprob: -16.3750057220459
    10. ' i' → logprob: -16.7500057220459

Token 1763: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.234491229057312
    2. ']' → logprob: -2.6094913482666016
    3. ' +' → logprob: -2.7344913482666016
    4. ']+' → logprob: -3.2344913482666016
    5. ')' → logprob: -4.234491348266602
    6. '[i' → logprob: -4.359491348266602
    7. ')+' → logprob: -6.234491348266602
    8. '+i' → logprob: -7.734491348266602
    9. '[' → logprob: -7.984491348266602
    10. '[next' → logprob: -8.609491348266602

Token 1764: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12184815853834152
    2. ':' → logprob: -2.4968481063842773
    3. '                       ' → logprob: -5.121848106384277
    4. '               ' → logprob: -5.246848106384277
    5. ':
' → logprob: -5.371848106384277
    6. '```' → logprob: -5.621848106384277
    7. '<|end|>' → logprob: -5.746848106384277
    8. '       ' → logprob: -5.871848106384277
    9. '                    
' → logprob: -6.621848106384277
    10. '           ' → logprob: -7.246848106384277

Token 1765: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4892662465572357
    2. ' for' → logprob: -1.739266276359558
    3. '                   ' → logprob: -1.739266276359558
    4. 'j' → logprob: -3.4892661571502686
    5. '```' → logprob: -6.364266395568848
    6. '                       ' → logprob: -6.989266395568848
    7. ' j' → logprob: -7.114266395568848
    8. '
' → logprob: -7.614266395568848
    9. '               ' → logprob: -7.614266395568848
    10. '                    
' → logprob: -8.614266395568848

Token 1766: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06206212937831879
    2. ' j' → logprob: -2.8120620250701904
    3. '                   ' → logprob: -9.81206226348877
    4. '	j' → logprob: -11.06206226348877
    5. '                    ' → logprob: -11.68706226348877
    6. '    ' → logprob: -12.31206226348877
    7. '   ' → logprob: -12.68706226348877
    8. '$j' → logprob: -13.06206226348877
    9. '                       ' → logprob: -14.06206226348877
    10. '_j' → logprob: -14.31206226348877

Token 1767: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018061673268675804
    2. 'in' → logprob: -4.268061637878418
    3. ' ' → logprob: -6.393061637878418
    4. '<|end|>' → logprob: -6.643061637878418
    5. '<|end|>' → logprob: -8.143061637878418
    6. 'from' → logprob: -8.893061637878418
    7. '=' → logprob: -9.018061637878418
    8. ')' → logprob: -9.393061637878418
    9. ' j' → logprob: -9.393061637878418
    10. 'j' → logprob: -10.268061637878418

Token 1768: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4789215624332428
    2. 'from' → logprob: -0.9789215326309204
    3. ' range' → logprob: -5.353921413421631
    4. ' from' → logprob: -9.603921890258789
    5. '(from' → logprob: -10.978921890258789
    6. '[from' → logprob: -11.228921890258789
    7. '(range' → logprob: -12.603921890258789
    8. 'in' → logprob: -14.353921890258789
    9. 'for' → logprob: -15.353921890258789
    10. ')' → logprob: -15.478921890258789

Token 1769: '(from' (ID: 32142)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0001817297888919711
    2. '(from' → logprob: -8.875182151794434
    3. '[from' → logprob: -10.625182151794434
    4. ' from' → logprob: -11.000182151794434
    5. ')' → logprob: -15.250182151794434
    6. '.from' → logprob: -15.375182151794434
    7. '{' → logprob: -15.750182151794434
    8. 'j' → logprob: -16.125181198120117
    9. '	from' → logprob: -16.625181198120117
    10. 'for' → logprob: -16.875181198120117

Token 1770: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0010089923162013292
    2. 'idx' → logprob: -7.501008987426758
    3. 'from' → logprob: -8.626008987426758
    4. '_j' → logprob: -9.876008987426758
    5. '_re' → logprob: -10.251008987426758
    6. '(j' → logprob: -10.376008987426758
    7. '(idx' → logprob: -10.376008987426758
    8. 'max' → logprob: -10.626008987426758
    9. '_max' → logprob: -11.001008987426758
    10. '   ' → logprob: -11.251008987426758

Token 1771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029762184247374535
    2. ',j' → logprob: -3.6547622680664062
    3. ' ,' → logprob: -5.779762268066406
    4. ',to' → logprob: -8.154762268066406
    5. ',next' → logprob: -11.154762268066406
    6. 'j' → logprob: -11.404762268066406
    7. '<|end|>' → logprob: -11.904762268066406
    8. ',len' → logprob: -11.904762268066406
    9. 'to' → logprob: -12.154762268066406
    10. '                   ' → logprob: -12.279762268066406

Token 1772: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -7.52919222577475e-05
    2. ' to' → logprob: -9.500075340270996
    3. '(to' → logprob: -15.625075340270996
    4. '                   ' → logprob: -15.875075340270996
    5. '               ' → logprob: -16.87507438659668
    6. '   ' → logprob: -17.37507438659668
    7. '	to' → logprob: -18.25007438659668
    8. '           ' → logprob: -18.62507438659668
    9. '                       ' → logprob: -19.25007438659668
    10. '                    ' → logprob: -19.87507438659668

Token 1773: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.005123107694089413
    2. 'idx' → logprob: -5.380123138427734
    3. 'x' → logprob: -8.380123138427734
    4. 'i' → logprob: -8.505123138427734
    5. 'Idx' → logprob: -10.880123138427734
    6. 'ex' → logprob: -11.380123138427734
    7. 'o' → logprob: -11.630123138427734
    8. 'j' → logprob: -12.255123138427734
    9. '+' → logprob: -12.630123138427734
    10. 'to' → logprob: -12.630123138427734

Token 1774: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05488555505871773
    2. ' +' → logprob: -2.9298856258392334
    3. '()+' → logprob: -14.304885864257812
    4. '+j' → logprob: -14.554885864257812
    5. '+
' → logprob: -14.929885864257812
    6. '<|end|>' → logprob: -15.054885864257812
    7. '＋' → logprob: -15.179885864257812
    8. ')+' → logprob: -15.554885864257812
    9. '[' → logprob: -15.679885864257812
    10. '<|end|>' → logprob: -15.929885864257812

Token 1775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '):
' → logprob: -17.75
    4. ')' → logprob: -18.125
    5. ',' → logprob: -20.0
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. '0' → logprob: -20.875
    9. '۱' → logprob: -21.0
    10. '=' → logprob: -21.125

Token 1776: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1592574268579483
    2. '):' → logprob: -2.034257411956787
    3. ':' → logprob: -4.534257411956787
    4. '<|end|>' → logprob: -6.159257411956787
    5. ')' → logprob: -6.784257411956787
    6. '                       ' → logprob: -7.159257411956787
    7. '):
' → logprob: -8.409257888793945
    8. '                           ' → logprob: -8.534257888793945
    9. '<|end|>' → logprob: -8.659257888793945
    10. ':
' → logprob: -8.659257888793945

Token 1777: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003034397726878524
    2. '                           ' → logprob: -7.003034591674805
    3. ' if' → logprob: -7.628034591674805
    4. '                        ' → logprob: -8.128034591674805
    5. '                               ' → logprob: -8.253034591674805
    6. '	                   ' → logprob: -8.378034591674805
    7. '                        
' → logprob: -8.503034591674805
    8. '	                       ' → logprob: -8.503034591674805
    9. '```' → logprob: -9.628034591674805
    10. ' ' → logprob: -9.753034591674805

Token 1778: ' distance' (ID: 9324)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03234583139419556
    2. ' if' → logprob: -3.657345771789551
    3. '                           ' → logprob: -5.157345771789551
    4. '                               ' → logprob: -8.90734577178955
    5. '10' → logprob: -9.40734577178955
    6. '   ' → logprob: -10.28234577178955
    7. '                       ' → logprob: -12.40734577178955
    8. '                                   ' → logprob: -12.90734577178955
    9. '	if' → logprob: -12.90734577178955
    10. ' ' → logprob: -13.40734577178955

Token 1779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6528015732765198
    2. '=' → logprob: -1.027801513671875
    3. ' ==' → logprob: -2.402801513671875
    4. '==' → logprob: -4.277801513671875
    5. '=j' → logprob: -4.777801513671875
    6. '(j' → logprob: -5.777801513671875
    7. '                           ' → logprob: -6.152801513671875
    8. ')' → logprob: -7.402801513671875
    9. '                               ' → logprob: -7.777801513671875
    10. ' <=' → logprob: -8.027801513671875

Token 1780: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14852212369441986
    2. '(j' → logprob: -2.398522138595581
    3. ' (' → logprob: -3.648522138595581
    4. ' ' → logprob: -4.398521900177002
    5. '(' → logprob: -4.898521900177002
    6. '                           ' → logprob: -7.523521900177002
    7. 'abs' → logprob: -7.773521900177002
    8. '(abs' → logprob: -9.27352237701416
    9. '                       ' → logprob: -9.89852237701416
    10. '   ' → logprob: -10.02352237701416

Token 1781: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09725064039230347
    2. '(j' → logprob: -2.4722506999969482
    3. ' (' → logprob: -5.972250461578369
    4. ' ' → logprob: -6.222250461578369
    5. '(' → logprob: -6.347250461578369
    6. 'abs' → logprob: -7.347250461578369
    7. '                           ' → logprob: -7.597250461578369
    8. '(i' → logprob: -8.847250938415527
    9. '(abs' → logprob: -9.097250938415527
    10. 'j' → logprob: -9.222250938415527

Token 1782: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.07378090173006058
    2. '*' → logprob: -2.8237810134887695
    3. ' *' → logprob: -4.4487810134887695
    4. '*j' → logprob: -10.19878101348877
    5. '*((' → logprob: -12.32378101348877
    6. ' *(' → logprob: -12.32378101348877
    7. '(j' → logprob: -12.94878101348877
    8. '                       ' → logprob: -13.57378101348877
    9. '                           ' → logprob: -14.94878101348877
    10. '                               ' → logprob: -15.69878101348877

Token 1783: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0002795703476294875
    2. ' (' → logprob: -8.250279426574707
    3. '(abs' → logprob: -11.000279426574707
    4. '(' → logprob: -13.500279426574707
    5. 'abs' → logprob: -16.500280380249023
    6. '(k' → logprob: -16.875280380249023
    7. '(js' → logprob: -17.875280380249023
    8. '   ' → logprob: -17.875280380249023
    9. '[j' → logprob: -18.125280380249023
    10. '(i' → logprob: -18.125280380249023

Token 1784: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004737822338938713
    2. '(j' → logprob: -5.379737854003906
    3. ' j' → logprob: -9.129737854003906
    4. ' (' → logprob: -12.504737854003906
    5. 'abs' → logprob: -13.254737854003906
    6. '	j' → logprob: -13.629737854003906
    7. '[j' → logprob: -14.379737854003906
    8. '(' → logprob: -14.504737854003906
    9. '(abs' → logprob: -14.879737854003906
    10. '_j' → logprob: -15.004737854003906

Token 1785: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760324597358704
    2. ' -' → logprob: -0.8260324597358704
    3. ')' → logprob: -10.326032638549805
    4. '-j' → logprob: -10.826032638549805
    5. ' ' → logprob: -11.201032638549805
    6. '<|end|>' → logprob: -11.451032638549805
    7. '                       ' → logprob: -12.951032638549805
    8. '                           ' → logprob: -13.451032638549805
    9. '-i' → logprob: -13.576032638549805
    10. '[' → logprob: -13.576032638549805

Token 1786: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00029637437546625733
    2. ' i' → logprob: -8.125296592712402
    3. '	i' → logprob: -15.500296592712402
    4. '   ' → logprob: -16.500295639038086
    5. ' ' → logprob: -17.750295639038086
    6. '                   ' → logprob: -19.000295639038086
    7. '                       ' → logprob: -19.000295639038086
    8. '  ' → logprob: -19.125295639038086
    9. '                           ' → logprob: -19.125295639038086
    10. ')i' → logprob: -19.625295639038086

Token 1787: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02177930437028408
    2. ')
' → logprob: -4.146779537200928
    3. '                       ' → logprob: -5.396779537200928
    4. ' )' → logprob: -7.646779537200928
    5. '<=' → logprob: -8.14677906036377
    6. ')<=' → logprob: -8.77177906036377
    7. '                           ' → logprob: -8.89677906036377
    8. ' <=' → logprob: -10.52177906036377
    9. ' )
' → logprob: -10.64677906036377
    10. '                        ' → logprob: -10.89677906036377

Token 1788: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007660295814275742
    2. '                        
' → logprob: -7.875765800476074
    3. '<|end|>' → logprob: -8.875765800476074
    4. '                        ' → logprob: -9.250765800476074
    5. 'if' → logprob: -10.000765800476074
    6. '                           ' → logprob: -10.625765800476074
    7. '```' → logprob: -11.000765800476074
    8. ' if' → logprob: -11.125765800476074
    9. ')' → logprob: -11.750765800476074
    10. '					' → logprob: -11.750765800476074

Token 1789: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002983048325404525
    2. ' if' → logprob: -5.877983093261719
    3. '                       ' → logprob: -8.752983093261719
    4. '                           ' → logprob: -11.127983093261719
    5. '```' → logprob: -12.502983093261719
    6. '                               ' → logprob: -14.002983093261719
    7. 'If' → logprob: -15.502983093261719
    8. '           ' → logprob: -15.877983093261719
    9. '                   ' → logprob: -15.877983093261719
    10. '	if' → logprob: -16.00298309326172

Token 1790: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.390074759721756
    2. 'distance' → logprob: -1.1400747299194336
    3. ' d' → logprob: -6.265074729919434
    4. ' distance' → logprob: -7.640074729919434
    5. '                       ' → logprob: -8.015074729919434
    6. '                           ' → logprob: -8.140074729919434
    7. '	d' → logprob: -9.640074729919434
    8. '                               ' → logprob: -10.140074729919434
    9. '                   ' → logprob: -11.390074729919434
    10. '                        ' → logprob: -11.515074729919434

Token 1791: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28117457032203674
    2. '<=' → logprob: -1.4061745405197144
    3. ')<=' → logprob: -11.656174659729004
    4. ')' → logprob: -12.656174659729004
    5. ']<=' → logprob: -12.656174659729004
    6. '                        ' → logprob: -13.156174659729004
    7. ' ' → logprob: -14.156174659729004
    8. '<|end|>' → logprob: -14.156174659729004
    9. '[' → logprob: -14.281174659729004
    10. ' ' → logprob: -14.281174659729004

Token 1792: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031900706235319376
    2. ' d' → logprob: -5.753190040588379
    3. '	d' → logprob: -11.878190040588379
    4. 'min' → logprob: -12.753190040588379
    5. ' min' → logprob: -14.378190040588379
    6. '   ' → logprob: -14.878190040588379
    7. '                       ' → logprob: -15.628190040588379
    8. '                   ' → logprob: -15.753190040588379
    9. '           ' → logprob: -15.753190040588379
    10. '       ' → logprob: -16.003190994262695

Token 1793: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.817902173381299e-05
    2. 'j' → logprob: -9.37509822845459
    3. '[i' → logprob: -11.25009822845459
    4. '[' → logprob: -15.62509822845459
    5. '	j' → logprob: -16.625097274780273
    6. '   ' → logprob: -17.875097274780273
    7. 'i' → logprob: -18.125097274780273
    8. ' j' → logprob: -18.750097274780273
    9. ' [' → logprob: -19.000097274780273
    10. '                   ' → logprob: -19.125097274780273

Token 1794: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12888725101947784
    2. '):' → logprob: -2.628887176513672
    3. '                       ' → logprob: -4.253887176513672
    4. ']:
' → logprob: -4.503887176513672
    5. ')' → logprob: -4.753887176513672
    6. '                           ' → logprob: -4.878887176513672
    7. ']' → logprob: -6.253887176513672
    8. ' and' → logprob: -6.628887176513672
    9. ']:' → logprob: -6.628887176513672
    10. ']):
' → logprob: -6.628887176513672

Token 1795: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.010378395207226276
    2. '                       ' → logprob: -5.385378360748291
    3. ' and' → logprob: -5.885378360748291
    4. '                               ' → logprob: -7.260378360748291
    5. ':' → logprob: -7.385378360748291
    6. '           ' → logprob: -7.510378360748291
    7. ':
' → logprob: -7.635378360748291
    8. '                            ' → logprob: -9.13537883758545
    9. ')' → logprob: -9.38537883758545
    10. '               ' → logprob: -9.51037883758545

Token 1796: ' if' (ID: 538)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0002354832977289334
    2. ' reachable' → logprob: -9.250235557556152
    3. '                           ' → logprob: -9.625235557556152
    4. '                               ' → logprob: -9.625235557556152
    5. '                                   ' → logprob: -13.375235557556152
    6. '   ' → logprob: -13.625235557556152
    7. 'reach' → logprob: -13.875235557556152
    8. '                       ' → logprob: -14.375235557556152
    9. '                             ' → logprob: -14.500235557556152
    10. '```' → logprob: -14.625235557556152

Token 1797: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.19370490312576294
    2. 'reachable' → logprob: -1.9437048435211182
    3. ' not' → logprob: -3.443704843521118
    4. ' reachable' → logprob: -7.943705081939697
    5. '!' → logprob: -9.193704605102539
    6. 'j' → logprob: -9.318704605102539
    7. 'True' → logprob: -9.443704605102539
    8. '   ' → logprob: -9.568704605102539
    9. '           ' → logprob: -9.693704605102539
    10. '                       ' → logprob: -10.568704605102539

Token 1798: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0011724866926670074
    2. ' reachable' → logprob: -6.7511725425720215
    3. 'reach' → logprob: -13.501172065734863
    4. '   ' → logprob: -14.251172065734863
    5. 'accessible' → logprob: -16.50117301940918
    6. '       ' → logprob: -17.00117301940918
    7. 'ready' → logprob: -17.12617301940918
    8. '           ' → logprob: -17.25117301940918
    9. ' ' → logprob: -17.62617301940918
    10. ' ' → logprob: -17.87617301940918

Token 1799: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.500006675720215
    3. ' [' → logprob: -13.250006675720215
    4. '                           ' → logprob: -14.250006675720215
    5. '[i' → logprob: -14.625006675720215
    6. '                   ' → logprob: -16.00000762939453
    7. '                               ' → logprob: -17.00000762939453
    8. '                       ' → logprob: -17.12500762939453
    9. '[js' → logprob: -17.12500762939453
    10. '```' → logprob: -17.12500762939453

Token 1800: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.022856038063764572
    2. '[j' → logprob: -4.89785623550415
    3. ']:' → logprob: -4.89785623550415
    4. '                           ' → logprob: -5.27285623550415
    5. ']' → logprob: -6.64785623550415
    6. '):
' → logprob: -7.77285623550415
    7. '                               ' → logprob: -8.147855758666992
    8. '                       ' → logprob: -8.272855758666992
    9. '[i' → logprob: -9.897855758666992
    10. ']):
' → logprob: -10.272855758666992

Token 1801: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.10479307919740677
    2. '                           ' → logprob: -2.354793071746826
    3. '                                   ' → logprob: -6.729793071746826
    4. '                       ' → logprob: -7.479793071746826
    5. ' ' → logprob: -7.604793071746826
    6. '```' → logprob: -7.854793071746826
    7. '                            ' → logprob: -7.979793071746826
    8. '                             ' → logprob: -8.354793548583984
    9. '<|end|>' → logprob: -8.604793548583984
    10. '                            
' → logprob: -8.729793548583984

Token 1802: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.013355037197470665
    2. ' reachable' → logprob: -4.763355255126953
    3. '                               ' → logprob: -5.388355255126953
    4. '                                   ' → logprob: -9.513355255126953
    5. '                           ' → logprob: -10.763355255126953
    6. 'reach' → logprob: -11.138355255126953
    7. '                       ' → logprob: -11.763355255126953
    8. '                                ' → logprob: -11.763355255126953
    9. 'ready' → logprob: -12.013355255126953
    10. '                              ' → logprob: -12.388355255126953

Token 1803: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. '                           ' → logprob: -15.375001907348633
    4. ' [' → logprob: -16.375001907348633
    5. 'j' → logprob: -16.750001907348633
    6. '                               ' → logprob: -16.875001907348633
    7. '[js' → logprob: -17.250001907348633
    8. '```' → logprob: -17.375001907348633
    9. '                       ' → logprob: -17.625001907348633
    10. '	j' → logprob: -17.875001907348633

Token 1804: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.395711749792099
    2. '[j' → logprob: -1.1457117795944214
    3. ']=' → logprob: -4.770711898803711
    4. '                           ' → logprob: -9.145711898803711
    5. '                               ' → logprob: -9.395711898803711
    6. '[i' → logprob: -10.145711898803711
    7. '[' → logprob: -11.145711898803711
    8. '                       ' → logprob: -11.270711898803711
    9. 'j' → logprob: -11.645711898803711
    10. ')' → logprob: -11.645711898803711

Token 1805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03615131229162216
    2. ' =' → logprob: -4.03615140914917
    3. '[j' → logprob: -4.03615140914917
    4. '                           ' → logprob: -9.161150932312012
    5. '                               ' → logprob: -10.036150932312012
    6. '                                   ' → logprob: -11.911150932312012
    7. '[' → logprob: -12.411150932312012
    8. ']' → logprob: -12.411150932312012
    9. '                       ' → logprob: -12.786150932312012
    10. '=True' → logprob: -13.036150932312012

Token 1806: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.15310683415737e-05
    2. ' True' → logprob: -10.750021934509277
    3. '(True' → logprob: -17.62502098083496
    4. '=True' → logprob: -19.12502098083496
    5. 'true' → logprob: -20.75002098083496
    6. '[' → logprob: -21.75002098083496
    7. '                           ' → logprob: -21.87502098083496
    8. '                               ' → logprob: -22.25002098083496
    9. '   ' → logprob: -22.25002098083496
    10. '.True' → logprob: -22.75002098083496

Token 1807: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0050836107693612576
    2. '
' → logprob: -5.6300835609436035
    3. '                                
' → logprob: -7.6300835609436035
    4. '                                   ' → logprob: -7.8800835609436035
    5. '                           ' → logprob: -8.630084037780762
    6. '                                ' → logprob: -8.880084037780762
    7. '               ' → logprob: -10.005084037780762
    8. '                   ' → logprob: -10.005084037780762
    9. ',' → logprob: -10.255084037780762
    10. '                                       ' → logprob: -10.505084037780762

Token 1808: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06114931032061577
    2. '<|end|>' → logprob: -3.8111493587493896
    3. '\n' → logprob: -4.6861491203308105
    4. '
' → logprob: -4.6861491203308105
    5. '                                
' → logprob: -4.9361491203308105
    6. '```' → logprob: -5.1861491203308105
    7. '                                   ' → logprob: -6.6861491203308105
    8. '                                ' → logprob: -6.8111491203308105
    9. '\' → logprob: -7.3111491203308105
    10. ',' → logprob: -7.8111491203308105

Token 1809: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12838180363178253
    2. 'if' → logprob: -2.1283817291259766
    3. '                                   ' → logprob: -7.253381729125977
    4. '                               ' → logprob: -7.628381729125977
    5. ' max' → logprob: -8.878381729125977
    6. ' if' → logprob: -9.878381729125977
    7. 'j' → logprob: -10.753381729125977
    8. '                                       ' → logprob: -10.753381729125977
    9. '                           ' → logprob: -12.253381729125977
    10. '                                ' → logprob: -12.628381729125977

Token 1810: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -7.896309739408025e-07
    2. 're' → logprob: -14.625000953674316
    3. 'reach' → logprob: -16.25
    4. '\' → logprob: -16.5
    5. 'Reach' → logprob: -17.75
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '	re' → logprob: -18.625
    9. 'reachable' → logprob: -19.25
    10. 'Re' → logprob: -19.5

Token 1811: 'ach' (ID: 678)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.434257835149765
    2. 'ach' → logprob: -1.3092578649520874
    3. 'each' → logprob: -2.934257745742798
    4. '_re' → logprob: -3.559257745742798
    5. 'e' → logprob: -8.309257507324219
    6. 'Reach' → logprob: -9.059257507324219
    7. 'reachable' → logprob: -9.559257507324219
    8. ' reach' → logprob: -9.684257507324219
    9. 'ech' → logprob: -10.559257507324219
    10. '_each' → logprob: -10.684257507324219

Token 1812: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005240156780928373
    2. ' =' → logprob: -5.255239963531494
    3. '=j' → logprob: -12.005240440368652
    4. '<|end|>' → logprob: -16.005239486694336
    5. '=max' → logprob: -16.630239486694336
    6. '+=' → logprob: -16.630239486694336
    7. '=
' → logprob: -17.755239486694336
    8. '＝' → logprob: -19.005239486694336
    9. '=end' → logprob: -19.005239486694336
    10. '.=' → logprob: -19.255239486694336

Token 1813: ' max' (ID: 2999)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005444537382572889
    2. 'max' → logprob: -7.750544548034668
    3. ' j' → logprob: -9.125544548034668
    4. ' max' → logprob: -12.250544548034668
    5. '	j' → logprob: -16.75054359436035
    6. '                           ' → logprob: -17.25054359436035
    7. '                               ' → logprob: -17.37554359436035
    8. '                            ' → logprob: -18.00054359436035
    9. '                                   ' → logprob: -19.00054359436035
    10. '   ' → logprob: -20.00054359436035

Token 1814: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7879137992858887
    2. '(max' → logprob: -0.9129137992858887
    3. '(' → logprob: -2.5379137992858887
    4. '(j' → logprob: -2.9129137992858887
    5. 'j' → logprob: -4.912913799285889
    6. ' max' → logprob: -6.662913799285889
    7. 'reachable' → logprob: -7.662913799285889
    8. ' (' → logprob: -7.787913799285889
    9. '_max' → logprob: -8.537914276123047
    10. '(
' → logprob: -8.662914276123047

Token 1815: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0008673948468640447
    2. 'reach' → logprob: -7.1258673667907715
    3. 're' → logprob: -10.62586784362793
    4. 'reachable' → logprob: -10.62586784362793
    5. 'Reach' → logprob: -11.75086784362793
    6. '_j' → logprob: -13.62586784362793
    7. ' reach' → logprob: -14.00086784362793
    8. '   ' → logprob: -14.50086784362793
    9. 'j' → logprob: -14.62586784362793
    10. '	re' → logprob: -14.87586784362793

Token 1816: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.05915718525648117
    2. 'each' → logprob: -3.184157133102417
    3. 'reach' → logprob: -4.559157371520996
    4. '_re' → logprob: -5.684157371520996
    5. '_each' → logprob: -7.809157371520996
    6. 'ch' → logprob: -7.934157371520996
    7. 'ech' → logprob: -8.059157371520996
    8. '_' → logprob: -8.434157371520996
    9. 'e' → logprob: -8.559157371520996
    10. 'Reach' → logprob: -9.184157371520996

Token 1817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4704844653606415
    2. ',j' → logprob: -1.0954844951629639
    3. ' ,' → logprob: -3.220484495162964
    4. ',max' → logprob: -8.095484733581543
    5. ',
' → logprob: -8.220484733581543
    6. '                               ' → logprob: -9.345484733581543
    7. 'j' → logprob: -9.470484733581543
    8. ' j' → logprob: -10.220484733581543
    9. '[j' → logprob: -10.595484733581543
    10. '                           ' → logprob: -10.595484733581543

Token 1818: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001503313542343676
    2. ' j' → logprob: -6.5015034675598145
    3. '                           ' → logprob: -14.626502990722656
    4. '                               ' → logprob: -15.126502990722656
    5. '	j' → logprob: -16.876502990722656
    6. '$j' → logprob: -16.876502990722656
    7. '                                   ' → logprob: -17.126502990722656
    8. '                            ' → logprob: -17.626502990722656
    9. '                       ' → logprob: -18.001502990722656
    10. '   ' → logprob: -19.251502990722656

Token 1819: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019173922191839665
    2. ')
' → logprob: -8.750191688537598
    3. ' )' → logprob: -11.625191688537598
    4. '                           ' → logprob: -11.750191688537598
    5. '<|end|>' → logprob: -12.000191688537598
    6. '                       ' → logprob: -12.500191688537598
    7. '                               ' → logprob: -13.000191688537598
    8. ')}' → logprob: -13.875191688537598
    9. ')return' → logprob: -15.000191688537598
    10. ')#' → logprob: -15.000191688537598

Token 1820: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1821: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1822: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04219507798552513
    2. ':' → logprob: -3.2921950817108154
    3. ':
' → logprob: -6.917194843292236
    4. '                               ' → logprob: -7.042194843292236
    5. '           ' → logprob: -7.542194843292236
    6. '   ' → logprob: -7.917194843292236
    7. '                       ' → logprob: -8.417195320129395
    8. '                            ' → logprob: -8.792195320129395
    9. '						' → logprob: -9.167195320129395
    10. '                   ' → logprob: -9.167195320129395

Token 1823: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0036952088121324778
    2. 'break' → logprob: -6.378695011138916
    3. ' break' → logprob: -7.878695011138916
    4. '           ' → logprob: -8.128695487976074
    5. '						' → logprob: -8.378695487976074
    6. '   ' → logprob: -8.503695487976074
    7. '                               ' → logprob: -8.878695487976074
    8. '                       ' → logprob: -9.003695487976074
    9. '	break' → logprob: -9.003695487976074
    10. '                            ' → logprob: -9.503695487976074

Token 1824: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0005965200834907591
    2. ' break' → logprob: -7.500596523284912
    3. 'continue' → logprob: -10.250596046447754
    4. 'pass' → logprob: -12.000596046447754
    5. '                           ' → logprob: -14.625596046447754
    6. '	break' → logprob: -14.875596046447754
    7. '   ' → logprob: -15.000596046447754
    8. ' continue' → logprob: -15.625596046447754
    9. '                       ' → logprob: -15.750596046447754
    10. '#' (adapté à ' #') → logprob: -16.00059700012207

Token 1825: ' Si' (ID: 7832)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014925522729754448
    2. 'continue' → logprob: -4.889925479888916
    3. 'pass' → logprob: -5.764925479888916
    4. ' break' → logprob: -5.889925479888916
    5. '#' → logprob: -6.889925479888916
    6. ' continue' → logprob: -8.764925956726074
    7. ' pass' → logprob: -9.014925956726074
    8. '                           ' → logprob: -10.014925956726074
    9. ' ' → logprob: -11.514925956726074
    10. '	break' → logprob: -11.514925956726074

Token 1826: ' la' (ID: 557)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0805474519729614
    2. 'distance' → logprob: -1.0805474519729614
    3. ' distance' → logprob: -1.7055474519729614
    4. ' not' → logprob: -2.705547332763672
    5. ' la' → logprob: -3.705547332763672
    6. ' le' → logprob: -4.330547332763672
    7. 'j' → logprob: -4.705547332763672
    8. 'not' → logprob: -4.955547332763672
    9. ' d' → logprob: -5.455547332763672
    10. ' on' → logprob: -5.830547332763672

Token 1827: ' condition' (ID: 7060)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7346263527870178
    2. ' distance' → logprob: -1.234626293182373
    3. 'j' → logprob: -1.859626293182373
    4. ' j' → logprob: -3.484626293182373
    5. 'd' → logprob: -3.609626293182373
    6. ' d' → logprob: -5.609626293182373
    7. ' condition' → logprob: -5.734626293182373
    8. 'n' → logprob: -6.484626293182373
    9. 'condition' → logprob: -6.484626293182373
    10. ' ' → logprob: -6.734626293182373

Token 1828: ' est' (ID: 893)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7752400040626526
    2. ' n' → logprob: -1.0252399444580078
    3. ' j' → logprob: -2.900239944458008
    4. ' est' → logprob: -2.900239944458008
    5. 'est' → logprob: -4.150239944458008
    6. 'j' → logprob: -4.275239944458008
    7. ' not' → logprob: -4.900239944458008
    8. ' fails' → logprob: -5.150239944458008
    9. '<=' → logprob: -5.650239944458008
    10. 'fail' → logprob: -5.900239944458008

Token 1829: ' fa' (ID: 2229)
  Prédit: ' viol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' viol' → logprob: -1.079211950302124
    2. ' violated' → logprob: -1.579211950302124
    3. 'viol' → logprob: -1.579211950302124
    4. ' False' → logprob: -2.079211950302124
    5. 'False' → logprob: -2.829211950302124
    6. ' not' → logprob: -4.204212188720703
    7. ' false' → logprob: -4.454212188720703
    8. 'false' → logprob: -4.579212188720703
    9. 'not' → logprob: -4.829212188720703
    10. 'fail' → logprob: -5.829212188720703

Token 1830: 'usse' (ID: 32419)
  Prédit: 'usse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usse' → logprob: -0.9626343846321106
    2. 'ible' → logprob: -1.2126343250274658
    3. 'ill' → logprob: -1.9626343250274658
    4. 'ile' → logprob: -2.462634325027466
    5. 'ite' → logprob: -2.837634325027466
    6. 'ilte' → logprob: -4.587634563446045
    7. 'il' → logprob: -5.087634563446045
    8. 'ute' → logprob: -5.587634563446045
    9. 'iled' → logprob: -5.837634563446045
    10. 'îte' → logprob: -5.962634563446045

Token 1831: ' pour' (ID: 1930)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.19255369901657104
    2. ',' → logprob: -1.8175537586212158
    3. '                               ' → logprob: -4.817553520202637
    4. ' ,' → logprob: -6.317553520202637
    5. '                                   ' → logprob: -7.692553520202637
    6. ':' → logprob: -7.942553520202637
    7. '                       ' → logprob: -8.067553520202637
    8. '<|end|>' → logprob: -8.067553520202637
    9. '                            ' → logprob: -8.442553520202637
    10. ':
' → logprob: -8.442553520202637

Token 1832: ' un' (ID: 537)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008827611454762518
    2. 'le' → logprob: -7.500882625579834
    3. ' j' → logprob: -8.875883102416992
    4. 'la' → logprob: -9.750883102416992
    5. 'some' → logprob: -10.250883102416992
    6. 'un' → logprob: -10.750883102416992
    7. '   ' → logprob: -11.625883102416992
    8. 'une' → logprob: -11.625883102416992
    9. 'l' → logprob: -12.000883102416992
    10. 'the' → logprob: -12.250883102416992

Token 1833: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0039927964098751545
    2. ' j' → logprob: -6.753993034362793
    3. ']' → logprob: -7.003993034362793
    4. 'indice' → logprob: -7.253993034362793
    5. ')' → logprob: -8.128993034362793
    6. 's' → logprob: -8.878993034362793
    7. '```' → logprob: -8.878993034362793
    8. 'break' → logprob: -9.128993034362793
    9. 'for' → logprob: -9.378993034362793
    10. 'continue' → logprob: -9.753993034362793

Token 1834: ' donné' (ID: 52079)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37364548444747925
    2. '                           ' → logprob: -1.623645544052124
    3. ':' → logprob: -2.623645544052124
    4. ':
' → logprob: -4.498645305633545
    5. ' ,' → logprob: -5.123645305633545
    6. '<|end|>' → logprob: -5.498645305633545
    7. '```' → logprob: -5.623645305633545
    8. '#' → logprob: -5.998645305633545
    9. ',
' → logprob: -6.248645305633545
    10. '                               ' → logprob: -6.623645305633545

Token 1835: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17585362493991852
    2. '                           ' → logprob: -2.050853729248047
    3. ':' → logprob: -3.925853729248047
    4. ' ,' → logprob: -5.425853729248047
    5. ':
' → logprob: -6.175853729248047
    6. ',
' → logprob: -6.550853729248047
    7. '                               ' → logprob: -6.800853729248047
    8. '                            
' → logprob: -6.925853729248047
    9. ',j' → logprob: -7.550853729248047
    10. ' :' → logprob: -7.925853729248047

Token 1836: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007049248553812504
    2. '                               ' → logprob: -5.882049083709717
    3. '                            ' → logprob: -6.882049083709717
    4. ' break' → logprob: -7.007049083709717
    5. ' ' → logprob: -7.382049083709717
    6. '<|end|>' → logprob: -7.507049083709717
    7. '                            
' → logprob: -8.632049560546875
    8. 'break' → logprob: -8.757049560546875
    9. '						' → logprob: -9.257049560546875
    10. '                       ' → logprob: -9.257049560546875

Token 1837: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.39251837134361267
    2. 'break' → logprob: -1.392518401145935
    3. '                               ' → logprob: -2.8925182819366455
    4. '#' (adapté à ' #') → logprob: -5.017518520355225
    5. ' break' → logprob: -5.142518520355225
    6. '                                   ' → logprob: -5.892518520355225
    7. ' ' → logprob: -6.142518520355225
    8. '                            ' → logprob: -7.142518520355225
    9. '                       ' → logprob: -7.392518520355225
    10. '                             ' → logprob: -7.767518520355225

Token 1838: ' et' (ID: 859)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.32627153396606445
    2. 'break' → logprob: -1.3262715339660645
    3. '#' → logprob: -4.8262715339660645
    4. '                               ' → logprob: -5.8262715339660645
    5. ' break' → logprob: -6.8262715339660645
    6. '                                   ' → logprob: -8.701271057128906
    7. '                       ' → logprob: -9.076271057128906
    8. '           ' → logprob: -9.076271057128906
    9. '```' → logprob: -9.201271057128906
    10. ' #' → logprob: -9.576271057128906

Token 1839: ' comme' (ID: 7971)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.38888365030288696
    2. 'qu' → logprob: -1.8888835906982422
    3. ' que' → logprob: -3.388883590698242
    4. 'que' → logprob: -3.763883590698242
    5. '#' → logprob: -4.013883590698242
    6. 'pas' → logprob: -4.013883590698242
    7. 'else' → logprob: -4.513883590698242
    8. ' qu' → logprob: -4.888883590698242
    9. ' vu' → logprob: -5.263883590698242
    10. 'le' → logprob: -5.263883590698242

Token 1840: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004329352639615536
    2. 'j' → logprob: -6.879329204559326
    3. 'le' → logprob: -7.004329204559326
    4. 'la' → logprob: -7.004329204559326
    5. ' d' → logprob: -7.254329204559326
    6. 'distance' → logprob: -7.754329204559326
    7. 'les' → logprob: -9.879329681396484
    8. 'l' → logprob: -10.004329681396484
    9. ' le' → logprob: -10.254329681396484
    10. '   ' → logprob: -10.379329681396484

Token 1841: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002941095153801143
    2. '[' → logprob: -9.000293731689453
    3. 'j' → logprob: -9.250293731689453
    4. ']' → logprob: -10.125293731689453
    5. 'istance' → logprob: -12.000293731689453
    6. '[i' → logprob: -12.250293731689453
    7. '_j' → logprob: -12.375293731689453
    8. ')' → logprob: -12.875293731689453
    9. '[
' → logprob: -12.875293731689453
    10. '```' → logprob: -13.000293731689453

Token 1842: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06735335290431976
    2. '[j' → logprob: -3.0673532485961914
    3. ']>=' → logprob: -4.192353248596191
    4. ']>' → logprob: -6.942353248596191
    5. '>=' → logprob: -7.567353248596191
    6. '[' → logprob: -7.817353248596191
    7. 's' → logprob: -8.067353248596191
    8. '']' → logprob: -8.442353248596191
    9. 'j' → logprob: -8.817353248596191
    10. ']<=' → logprob: -8.942353248596191

Token 1843: ' est' (ID: 893)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01946897804737091
    2. ' est' → logprob: -5.519468784332275
    3. '                           ' → logprob: -6.019468784332275
    4. '[' → logprob: -6.019468784332275
    5. '<=' → logprob: -6.644468784332275
    6. ' <=' → logprob: -6.644468784332275
    7. '>=' → logprob: -6.644468784332275
    8. ']' → logprob: -6.644468784332275
    9. 's' → logprob: -6.769468784332275
    10. ' >=' → logprob: -7.269468784332275

Token 1844: ' indépendante' (ID: 188424)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.08856771886348724
    2. 'd' → logprob: -2.7135677337646484
    3. 'tri' → logprob: -4.838567733764648
    4. 'tr' → logprob: -5.838567733764648
    5. 'non' → logprob: -6.213567733764648
    6. 'de' → logprob: -6.838567733764648
    7. 'en' → logprob: -7.338567733764648
    8. 'moins' → logprob: -7.713567733764648
    9. 'un' → logprob: -7.838567733764648
    10. 'strict' → logprob: -7.963567733764648

Token 1845: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9761151075363159
    2. ' des' → logprob: -1.476115107536316
    3. 'de' → logprob: -1.476115107536316
    4. ',' → logprob: -2.3511152267456055
    5. 'des' → logprob: -3.3511152267456055
    6. ' du' → logprob: -3.9761152267456055
    7. ' j' → logprob: -5.3511152267456055
    8. '                           ' → logprob: -5.4761152267456055
    9. '<|end|>' → logprob: -6.7261152267456055
    10. 'd' → logprob: -7.1011152267456055

Token 1846: ' continuer' (ID: 75597)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3390793204307556
    2. '                           ' → logprob: -2.0890793800354004
    3. ' break' → logprob: -2.9640793800354004
    4. 'continue' → logprob: -3.3390793800354004
    5. ' on' → logprob: -3.5890793800354004
    6. ' continuer' → logprob: -3.9640793800354004
    7. 'break' → logprob: -4.8390793800354
    8. ' ' → logprob: -5.0890793800354
    9. 'contin' → logprob: -5.9640793800354
    10. ' #' → logprob: -6.2140793800354

Token 1847: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1848: ' un' (ID: 537)
  Prédit: 'ussi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ussi' → logprob: -0.6939903497695923
    2. 'n' → logprob: -1.6939903497695923
    3. 'pp' → logprob: -2.3189902305603027
    4. 'ux' → logprob: -3.4439902305603027
    5. 'contin' → logprob: -3.4439902305603027
    6. 'ucune' → logprob: -4.443990230560303
    7. 'j' → logprob: -4.568990230560303
    8. 'ccess' → logprob: -4.568990230560303
    9. ' continuer' → logprob: -4.568990230560303
    10. 'près' → logprob: -4.693990230560303

Token 1849: ' j' (ID: 441)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.770971953868866
    2. 'u' → logprob: -1.5209720134735107
    3. 'j' → logprob: -2.0209720134735107
    4. 'ussi' → logprob: -2.1459720134735107
    5. 'ucune' → logprob: -3.8959720134735107
    6. 'ucun' → logprob: -4.520971775054932
    7. 'aut' → logprob: -4.645971775054932
    8. 'près' → logprob: -5.145971775054932
    9. 'pp' → logprob: -5.645971775054932
    10. 'un' → logprob: -6.020971775054932

Token 1850: ' supérieur' (ID: 98491)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1189769506454468
    2. '++' → logprob: -1.7439769506454468
    3. ')' → logprob: -2.1189770698547363
    4. '>' → logprob: -2.4939770698547363
    5. 's' → logprob: -2.7439770698547363
    6. '=' → logprob: -3.1189770698547363
    7. '<|end|>' → logprob: -3.4939770698547363
    8. '                           ' → logprob: -3.6189770698547363
    9. '```' → logprob: -3.9939770698547363
    10. '+=' → logprob: -4.118977069854736

Token 1851: ' ne' (ID: 453)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4083365201950073
    2. ' continue' → logprob: -2.408336639404297
    3. '<|end|>' → logprob: -2.533336639404297
    4. ')' → logprob: -3.158336639404297
    5. ' ' → logprob: -3.658336639404297
    6. 'continue' → logprob: -4.033336639404297
    7. ' continues' → logprob: -4.408336639404297
    8. '                               ' → logprob: -4.408336639404297
    9. ' )' → logprob: -4.783336639404297
    10. 's' → logprob: -4.908336639404297

Token 1852: ' garantit' (ID: 182078)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.32974880933761597
    2. 'sera' → logprob: -2.5797488689422607
    3. 'fera' → logprob: -3.2047488689422607
    4. ' pas' → logprob: -3.3297488689422607
    5. 'a' → logprob: -3.9547488689422607
    6. 'aur' → logprob: -4.079748630523682
    7. 'f' → logprob: -4.329748630523682
    8. 'pour' → logprob: -4.329748630523682
    9. 'sert' → logprob: -4.579748630523682
    10. 'pose' → logprob: -4.579748630523682

Token 1853: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.050585996359586716
    2. ' rien' → logprob: -3.550585985183716
    3. 'pas' → logprob: -3.925585985183716
    4. 'ra' → logprob: -7.925586223602295
    5. ' pas' → logprob: -8.050585746765137
    6. 'ri' → logprob: -9.800585746765137
    7. 'nothing' → logprob: -10.425585746765137
    8. ' ' → logprob: -11.050585746765137
    9. 'strict' → logprob: -11.300585746765137
    10. ' ' → logprob: -11.300585746765137

Token 1854: '.
' (ID: 558)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02959924377501011
    2. '.' → logprob: -5.404599189758301
    3. '                               ' → logprob: -5.404599189758301
    4. '                       ' → logprob: -5.779599189758301
    5. '                            
' → logprob: -5.779599189758301
    6. ' ' → logprob: -5.904599189758301
    7. ',' → logprob: -6.654599189758301
    8. '                            ' → logprob: -6.654599189758301
    9. '<|end|>' → logprob: -6.779599189758301
    10. ' continue' → logprob: -6.779599189758301

Token 1855: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005269803572446108
    2. '                            ' → logprob: -6.880270004272461
    3. ' ' → logprob: -7.005270004272461
    4. '<|end|>' → logprob: -7.005270004272461
    5. '                               ' → logprob: -7.130270004272461
    6. '                            
' → logprob: -7.880270004272461
    7. '                       ' → logprob: -8.255270004272461
    8. ' ' → logprob: -8.255270004272461
    9. ' continue' → logprob: -9.255270004272461
    10. '           ' → logprob: -9.380270004272461

Token 1856: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.22424110770225525
    2. '                           ' → logprob: -2.724241018295288
    3. 'continue' → logprob: -2.849241018295288
    4. '                               ' → logprob: -3.849241018295288
    5. ' 
' → logprob: -4.099241256713867
    6. '                            ' → logprob: -4.349241256713867
    7. ' ' → logprob: -5.349241256713867
    8. '                            
' → logprob: -5.474241256713867
    9. ' ' → logprob: -5.974241256713867
    10. '                             ' → logprob: -6.099241256713867

Token 1857: ' Mais' (ID: 13880)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.34495407342910767
    2. '                           ' → logprob: -1.594954013824463
    3. ' ' → logprob: -3.719954013824463
    4. 'continue' → logprob: -4.219954013824463
    5. ' ' → logprob: -4.594954013824463
    6. '                            ' → logprob: -4.719954013824463
    7. '                               ' → logprob: -4.719954013824463
    8. '```' → logprob: -5.219954013824463
    9. ' #' → logprob: -6.219954013824463
    10. ' 
' → logprob: -6.344954013824463

Token 1858: ' d' (ID: 272)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15639135241508484
    2. ' ' → logprob: -3.0313913822174072
    3. ' continuer' → logprob: -3.6563913822174072
    4. 'continue' → logprob: -4.406391143798828
    5. '                           ' → logprob: -4.531391143798828
    6. ' j' → logprob: -4.531391143798828
    7. ' continu' → logprob: -4.781391143798828
    8. ' continues' → logprob: -5.031391143798828
    9. ' #' → logprob: -5.906391143798828
    10. ' continuing' → logprob: -6.406391143798828

Token 1859: ' est' (ID: 893)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005406428826972842
    2. '[' → logprob: -8.000540733337402
    3. ']' → logprob: -9.875540733337402
    4. 'j' → logprob: -10.125540733337402
    5. '```' → logprob: -10.500540733337402
    6. '[
' → logprob: -10.750540733337402
    7. '[i' → logprob: -11.250540733337402
    8. ')' → logprob: -11.750540733337402
    9. '[]' → logprob: -12.000540733337402
    10. '_j' → logprob: -12.625540733337402

Token 1860: ' arbit' (ID: 96555)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2575826346874237
    2. 'cro' → logprob: -1.632582664489746
    3. 'sorted' → logprob: -4.132582664489746
    4. 'non' → logprob: -6.132582664489746
    5. 'mon' → logprob: -6.257582664489746
    6. '[' → logprob: -6.257582664489746
    7. ' cro' → logprob: -6.382582664489746
    8. 'strict' → logprob: -6.882582664489746
    9. 'tr' → logprob: -7.007582664489746
    10. ' monoton' → logprob: -7.132582664489746

Token 1861: 'ra' (ID: 614)
  Prédit: 'inaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.05602630600333214
    2. '[j' → logprob: -3.9310262203216553
    3. 'j' → logprob: -4.556026458740234
    4. '[]' → logprob: -5.806026458740234
    5. 'ère' → logprob: -6.181026458740234
    6. 'rière' → logprob: -6.431026458740234
    7. '[' → logprob: -6.681026458740234
    8. 'onnée' → logprob: -6.681026458740234
    9. 'ène' → logprob: -7.306026458740234
    10. 'érieure' → logprob: -7.431026458740234

Token 1862: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.012435591779649258
    2. 'irement' → logprob: -4.637435436248779
    3. '#' → logprob: -7.637435436248779
    4. ')' → logprob: -7.887435436248779
    5. 'ry' → logprob: -7.887435436248779
    6. '}' → logprob: -8.012435913085938
    7. ']' → logprob: -8.262435913085938
    8. '```' → logprob: -8.762435913085938
    9. 're' → logprob: -8.887435913085938
    10. 'r' → logprob: -9.637435913085938

Token 1863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3330641984939575
    2. '<|end|>' → logprob: -1.3330641984939575
    3. ')' → logprob: -1.8330641984939575
    4. '                           ' → logprob: -1.9580641984939575
    5. '.' → logprob: -2.958064079284668
    6. ' ' → logprob: -3.208064079284668
    7. '<|end|>' → logprob: -4.333064079284668
    8. ':' → logprob: -4.958064079284668
    9. ' ' → logprob: -5.208064079284668
    10. ' ,' → logprob: -5.333064079284668

Token 1864: ' donc' (ID: 14206)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.034515008330345154
    2. 'continue' → logprob: -3.909514904022217
    3. ' ' → logprob: -5.534514904022217
    4. ' continuer' → logprob: -5.909514904022217
    5. ' continues' → logprob: -6.409514904022217
    6. '                           ' → logprob: -6.534514904022217
    7. 'contin' → logprob: -6.784514904022217
    8. ' pass' → logprob: -7.659514904022217
    9. ' continued' → logprob: -8.034515380859375
    10. ' ' → logprob: -8.034515380859375

Token 1865: ' on' (ID: 402)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02796991728246212
    2. ' continuer' → logprob: -4.152969837188721
    3. 'continue' → logprob: -5.152969837188721
    4. ' pass' → logprob: -6.027969837188721
    5. ' continues' → logprob: -7.152969837188721
    6. 'contin' → logprob: -7.152969837188721
    7. ' continu' → logprob: -7.777969837188721
    8. '                           ' → logprob: -8.027970314025879
    9. ' ' → logprob: -8.027970314025879
    10. ' ' → logprob: -9.027970314025879

Token 1866: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17376314103603363
    2. ' continue' → logprob: -1.9237631559371948
    3. 'contin' → logprob: -4.798763275146484
    4. 'do' → logprob: -5.423763275146484
    5. 'continu' → logprob: -8.048763275146484
    6. ' doit' → logprob: -8.798763275146484
    7. '_continue' → logprob: -8.798763275146484
    8. ' continues' → logprob: -9.798763275146484
    9. ' do' → logprob: -10.923763275146484
    10. ' continu' → logprob: -11.173763275146484

Token 1867: ' tester' (ID: 51819)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.042230166494846344
    2. 'continue' → logprob: -3.7922301292419434
    3. ' continuer' → logprob: -4.042230129241943
    4. 'continu' → logprob: -7.542230129241943
    5. ' continue' → logprob: -7.667230129241943
    6. 'continued' → logprob: -9.542230606079102
    7. ' continues' → logprob: -10.167230606079102
    8. ' poursuivre' → logprob: -10.167230606079102
    9. 'pass' → logprob: -10.792230606079102
    10. '                           ' → logprob: -11.292230606079102

Token 1868: ' tous' (ID: 10688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7916990518569946
    2. ' j' → logprob: -1.0416990518569946
    3. ' ' → logprob: -2.791698932647705
    4. ' )' → logprob: -3.166698932647705
    5. 'j' → logprob: -3.291698932647705
    6. ' continuer' → logprob: -4.291698932647705
    7. ' continue' → logprob: -4.541698932647705
    8. 'continue' → logprob: -4.916698932647705
    9. 'contin' → logprob: -5.291698932647705
    10. ' ' → logprob: -6.166698932647705

Token 1869: '.
' (ID: 558)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3728468120098114
    2. ' j' → logprob: -2.247846841812134
    3. '<|end|>' → logprob: -2.747846841812134
    4. ')' → logprob: -3.372846841812134
    5. 'contin' → logprob: -3.997846841812134
    6. '.' → logprob: -4.372846603393555
    7. ',j' → logprob: -4.497846603393555
    8. '(j' → logprob: -4.872846603393555
    9. '```' → logprob: -4.872846603393555
    10. ':' → logprob: -4.997846603393555

Token 1870: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.22680863738059998
    2. '<|end|>' → logprob: -1.9768086671829224
    3. ' ' → logprob: -4.351808547973633
    4. '                               ' → logprob: -4.476808547973633
    5. '\n' → logprob: -5.101808547973633
    6. '                            ' → logprob: -5.226808547973633
    7. '<|end|>' → logprob: -5.351808547973633
    8. '```' → logprob: -5.601808547973633
    9. '\' → logprob: -5.851808547973633
    10. '                       ' → logprob: -5.851808547973633

Token 1871: ' pass' (ID: 1853)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33274397253990173
    2. 'continue' → logprob: -1.3327440023422241
    3. '                           ' → logprob: -4.582744121551514
    4. ' pass' → logprob: -5.457744121551514
    5. '                               ' → logprob: -6.332744121551514
    6. 'pass' (adapté à ' pass') → logprob: -6.957744121551514
    7. ')' → logprob: -7.957744121551514
    8. '```' → logprob: -8.207743644714355
    9. ' ' → logprob: -8.457743644714355
    10. '                                   ' → logprob: -8.457743644714355

Token 1872: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1873: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35676392912864685
    2. '<|end|>' → logprob: -2.3567638397216797
    3. '                       ' → logprob: -2.4817638397216797
    4. '               ' → logprob: -2.6067638397216797
    5. '                           ' → logprob: -3.6067638397216797
    6. '<|end|>' → logprob: -4.98176383972168
    7. ')' → logprob: -5.35676383972168
    8. '           ' → logprob: -5.98176383972168
    9. '                    ' → logprob: -7.10676383972168
    10. '                ' → logprob: -7.23176383972168

Token 1874: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009350438485853374
    2. 'i' (adapté à ' i') → logprob: -7.750935077667236
    3. '                   ' → logprob: -8.500934600830078
    4. '           ' → logprob: -9.250934600830078
    5. '
' → logprob: -9.375934600830078
    6. '```' → logprob: -9.875934600830078
    7. ' i' → logprob: -10.750934600830078
    8. '       ' → logprob: -10.875934600830078
    9. '                       ' → logprob: -11.375934600830078
    10. '                
' → logprob: -12.500934600830078

Token 1875: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31340792775154114
    2. ' +=' → logprob: -1.3134078979492188
    3. '=' → logprob: -8.938407897949219
    4. ' =' → logprob: -11.563407897949219
    5. '   ' → logprob: -13.063407897949219
    6. ']+=' → logprob: -13.563407897949219
    7. '    ' → logprob: -14.563407897949219
    8. '       ' → logprob: -14.688407897949219
    9. '```' → logprob: -15.313407897949219
    10. '           ' → logprob: -15.688407897949219

Token 1876: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.875
    5. '<|end|>' → logprob: -22.5
    6. '۱' → logprob: -22.625
    7. '１' → logprob: -23.375
    8. '0' → logprob: -23.75
    9. '१' → logprob: -24.0
    10. '১' → logprob: -24.375

Token 1877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -21.0
    4. '１' → logprob: -21.125
    5. '```' → logprob: -21.375
    6. '۱' → logprob: -21.75
    7. '१' → logprob: -22.625
    8. '১' → logprob: -23.0
    9. '١' → logprob: -23.8125
    10. '0' → logprob: -24.0625

Token 1878: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4682760536670685
    2. '<|end|>' → logprob: -1.093276023864746
    3. '       ' → logprob: -3.968276023864746
    4. '<|end|>' → logprob: -4.718276023864746
    5. '        
' → logprob: -5.343276023864746
    6. 'return' → logprob: -6.843276023864746
    7. '        ' → logprob: -7.218276023864746
    8. '		
' → logprob: -7.593276023864746
    9. ' 
' → logprob: -7.593276023864746
    10. '  
' → logprob: -7.718276023864746

Token 1879: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09677807241678238
    2. '
' → logprob: -3.096778154373169
    3. '        
' → logprob: -3.096778154373169
    4. 'return' → logprob: -7.09677791595459
    5. '<|end|>' → logprob: -7.47177791595459
    6. '    
' → logprob: -8.59677791595459
    7. '```' → logprob: -9.34677791595459
    8. '            
' → logprob: -9.84677791595459
    9. '  
' → logprob: -10.47177791595459
    10. '   ' → logprob: -10.97177791595459

Token 1880: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17700150609016418
    2. 'return' (adapté à ' return') → logprob: -2.177001476287842
    3. '
' → logprob: -3.052001476287842
    4. '           ' → logprob: -7.427001476287842
    5. '        
' → logprob: -7.552001476287842
    6. ' return' → logprob: -8.177001953125
    7. '    
' → logprob: -10.052001953125
    8. '   ' → logprob: -10.052001953125
    9. 'if' → logprob: -10.552001953125
    10. '```' → logprob: -10.677001953125

Token 1881: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0032130072358995676
    2. '"' → logprob: -6.128212928771973
    3. ' reachable' → logprob: -7.503212928771973
    4. 'max' → logprob: -7.878212928771973
    5. 'True' → logprob: -10.503212928771973
    6. ''re' → logprob: -10.878212928771973
    7. ''' → logprob: -11.003212928771973
    8. 'reach' → logprob: -11.253212928771973
    9. ' ' → logprob: -12.378212928771973
    10. ' "' → logprob: -12.503212928771973

Token 1882: '[' (ID: 58)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.18239200115203857
    2. '[-' → logprob: -1.8073920011520386
    3. '[' → logprob: -6.057392120361328
    4. '[end' → logprob: -9.057392120361328
    5. '[max' → logprob: -9.557392120361328
    6. '[next' → logprob: -10.807392120361328
    7. '```' → logprob: -10.807392120361328
    8. '==' → logprob: -11.057392120361328
    9. '[n' → logprob: -11.307392120361328
    10. '       ' → logprob: -11.932392120361328

Token 1883: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.0008227337966673076
    2. 'N' → logprob: -7.1258225440979
    3. ' goal' → logprob: -11.000823020935059
    4. '(goal' → logprob: -13.625823020935059
    5. '   ' → logprob: -15.625823020935059
    6. ' N' → logprob: -16.500822067260742
    7. '(N' → logprob: -16.625822067260742
    8. '-' → logprob: -17.000822067260742
    9. '.goal' → logprob: -17.000822067260742
    10. 'Goal' → logprob: -17.375822067260742

Token 1884: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.629921436891891e-05
    2. ']
' → logprob: -11.25002670288086
    3. ' ]' → logprob: -11.75002670288086
    4. ')' → logprob: -13.25002670288086
    5. '[' → logprob: -14.00002670288086
    6. '])' → logprob: -14.12502670288086
    7. ']==' → logprob: -14.37502670288086
    8. ']>' → logprob: -14.75002670288086
    9. ')]' → logprob: -14.87502670288086
    10. '       ' → logprob: -16.25002670288086

Token 1885: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006619684863835573
    2. 'else' → logprob: -6.006619453430176
    3. '
' → logprob: -6.131619453430176
    4. '        
' → logprob: -7.256619453430176
    5. '   ' → logprob: -8.006619453430176
    6. '```' → logprob: -8.381619453430176
    7. '<|end|>' → logprob: -8.506619453430176
    8. 'return' → logprob: -8.631619453430176
    9. '	' → logprob: -9.506619453430176
    10. 'elif' → logprob: -9.506619453430176

Token 1886: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011541512794792652
    2. 'else' → logprob: -7.126153945922852
    3. '```' → logprob: -9.876153945922852
    4. ' else' → logprob: -10.001153945922852
    5. '<|end|>' → logprob: -10.126153945922852
    6. 'elif' → logprob: -10.126153945922852
    7. '	' → logprob: -10.251153945922852
    8. '        
' → logprob: -10.376153945922852
    9. '
' → logprob: -10.626153945922852
    10. '[' → logprob: -10.751153945922852

Token 1887: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3169930577278137
    2. '       ' → logprob: -1.316992998123169
    3. ' else' → logprob: -5.816993236541748
    4. 'elif' → logprob: -7.691993236541748
    5. '```' → logprob: -8.81699275970459
    6. '   ' → logprob: -9.31699275970459
    7. '
' → logprob: -9.94199275970459
    8. '	else' → logprob: -13.44199275970459
    9. '{
' → logprob: -13.69199275970459
    10. '        
' → logprob: -14.19199275970459

Token 1888: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1809173971414566
    2. ':
' → logprob: -1.8059173822402954
    3. '        ' → logprob: -8.055917739868164
    4. '       ' → logprob: -8.180917739868164
    5. '{' → logprob: -8.430917739868164
    6. ' :' → logprob: -8.430917739868164
    7. ' :
' → logprob: -10.180917739868164
    8. '=' → logprob: -10.680917739868164
    9. '           ' → logprob: -11.180917739868164
    10. ':
' → logprob: -11.430917739868164

Token 1889: '           ' (ID: 352)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.1284630298614502
    2. '       ' → logprob: -1.2534630298614502
    3. '   ' → logprob: -1.6284630298614502
    4. '#' → logprob: -2.25346302986145
    5. '           ' → logprob: -4.003462791442871
    6. '    ' → logprob: -4.378462791442871
    7. '[' → logprob: -4.628462791442871
    8. '	' → logprob: -4.878462791442871
    9. '
' → logprob: -4.878462791442871
    10. ' ' → logprob: -5.003462791442871

Token 1890: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.26054346561431885
    2. '           ' → logprob: -1.5105434656143188
    3. '       ' → logprob: -5.260543346405029
    4. ' #' → logprob: -6.260543346405029
    5. 'for' → logprob: -7.260543346405029
    6. '   ' → logprob: -7.635543346405029
    7. '
' → logprob: -8.635543823242188
    8. '```' → logprob: -9.760543823242188
    9. '{
' → logprob: -10.760543823242188
    10. ' for' → logprob: -12.135543823242188

Token 1891: ' direction' (ID: 9262)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12292876094579697
    2. '           ' → logprob: -2.2479288578033447
    3. ' #' → logprob: -4.747928619384766
    4. '       ' → logprob: -7.372928619384766
    5. '   ' → logprob: -7.622928619384766
    6. 'for' → logprob: -8.747928619384766
    7. '
' → logprob: -10.122928619384766
    8. '```' → logprob: -11.122928619384766
    9. ' ' → logprob: -11.747928619384766
    10. ' for' → logprob: -11.872928619384766

Token 1892: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0844174325466156
    2. '==' → logprob: -2.8344173431396484
    3. '=' → logprob: -4.334417343139648
    4. ' =' → logprob: -4.709417343139648
    5. '==-' → logprob: -9.709417343139648
    6. '           ' → logprob: -11.084417343139648
    7. '   ' → logprob: -13.959417343139648
    8. ':' → logprob: -14.334417343139648
    9. '```' → logprob: -14.834417343139648
    10. ' ' → logprob: -14.959417343139648

Token 1893: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01814994215965271
    2. ' -' → logprob: -4.0181498527526855
    3. '1' → logprob: -17.393150329589844
    4. '−' → logprob: -19.518150329589844
    5. '```' → logprob: -20.143150329589844
    6. ' ' → logprob: -20.393150329589844
    7. '           ' → logprob: -20.768150329589844
    8. '	' → logprob: -21.768150329589844
    9. '\-' → logprob: -22.018150329589844
    10. '   ' → logprob: -22.018150329589844

Token 1894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. ' ' → logprob: -20.875
    4. '```' → logprob: -21.0
    5. '１' → logprob: -21.25
    6. '۱' → logprob: -21.875
    7. '   ' → logprob: -22.0
    8. '=' → logprob: -22.375
    9. '१' → logprob: -22.625
    10. '১' → logprob: -22.75

Token 1895: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1267220675945282
    2. ':' → logprob: -2.3767220973968506
    3. ':
' → logprob: -4.5017218589782715
    4. '		' → logprob: -5.5017218589782715
    5. '
' → logprob: -5.8767218589782715
    6. ' for' → logprob: -6.0017218589782715
    7. '	       ' → logprob: -6.1267218589782715
    8. ',' → logprob: -7.2517218589782715
    9. '<|end|>' → logprob: -7.7517218589782715
    10. '```' → logprob: -8.62672233581543

Token 1896: ' vers' (ID: 3640)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2148670107126236
    2. ' for' → logprob: -2.464867115020752
    3. '           ' → logprob: -2.714867115020752
    4. '#' → logprob: -3.339867115020752
    5. ' #' → logprob: -5.464867115020752
    6. '       ' → logprob: -6.089867115020752
    7. '```' → logprob: -10.089866638183594
    8. '   ' → logprob: -10.339866638183594
    9. '
' → logprob: -10.589866638183594
    10. '	for' → logprob: -10.714866638183594

Token 1897: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0005256305448710918
    2. 'g' → logprob: -7.87552547454834
    3. ' la' → logprob: -9.37552547454834
    4. 'left' → logprob: -10.62552547454834
    5. 'le' → logprob: -10.75052547454834
    6. '_la' → logprob: -11.75052547454834
    7. '_g' → logprob: -13.37552547454834
    8. 'l' → logprob: -13.87552547454834
    9. ' gauche' → logprob: -14.37552547454834
    10. 'lac' → logprob: -14.62552547454834

Token 1898: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0008639379520900548
    2. 'left' → logprob: -7.125864028930664
    3. ' gauche' → logprob: -10.875864028930664
    4. '0' → logprob: -11.125864028930664
    5. 'gau' → logprob: -11.625864028930664
    6. '_g' → logprob: -11.750864028930664
    7. 'dro' → logprob: -11.875864028930664
    8. '```' → logprob: -14.250864028930664
    9. '#g' → logprob: -15.250864028930664
    10. ' ' → logprob: -15.375864028930664

Token 1899: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1226358637213707
    2. 'for' → logprob: -3.247635841369629
    3. ' for' → logprob: -3.497635841369629
    4. ':' → logprob: -4.372635841369629
    5. ':
' → logprob: -4.997635841369629
    6. '
' → logprob: -5.122635841369629
    7. '```' → logprob: -5.247635841369629
    8. ',' → logprob: -5.372635841369629
    9. '<|end|>' → logprob: -6.372635841369629
    10. '[' → logprob: -6.622635841369629

Token 1900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006489054299890995
    2. 'for' → logprob: -5.756489276885986
    3. ' for' → logprob: -6.256489276885986
    4. '       ' → logprob: -7.381489276885986
    5. '```' → logprob: -7.506489276885986
    6. '
' → logprob: -9.506488800048828
    7. '#' → logprob: -10.131488800048828
    8. '            
' → logprob: -10.631488800048828
    9. '	       ' → logprob: -11.256488800048828
    10. '   ' → logprob: -11.506488800048828

Token 1901: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005757896578870714
    2. ' for' → logprob: -7.875576019287109
    3. '           ' → logprob: -8.62557601928711
    4. '#' (adapté à ' #') → logprob: -11.25057601928711
    5. '       ' → logprob: -13.12557601928711
    6. 'next' → logprob: -14.87557601928711
    7. '```' → logprob: -15.12557601928711
    8. '	for' → logprob: -15.50057601928711
    9. '
' → logprob: -16.62557601928711
    10. ' ' → logprob: -16.75057601928711

Token 1902: ' mêmes' (ID: 71634)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20490947365760803
    2. 'for' → logprob: -1.7049094438552856
    3. '       ' → logprob: -6.329909324645996
    4. ' for' → logprob: -6.579909324645996
    5. '```' → logprob: -8.204909324645996
    6. '   ' → logprob: -10.829909324645996
    7. '               ' → logprob: -11.954909324645996
    8. '#' → logprob: -12.454909324645996
    9. '          ' → logprob: -12.579909324645996
    10. '
' → logprob: -12.954909324645996

Token 1903: ' raisonn' (ID: 144705)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.6836320757865906
    2. 'princip' → logprob: -0.8086320757865906
    3. 'logic' → logprob: -3.9336321353912354
    4. '   ' → logprob: -5.433631896972656
    5. 'calcul' → logprob: -5.683631896972656
    6. '```' → logprob: -5.683631896972656
    7. '       ' → logprob: -5.808631896972656
    8. 'for' → logprob: -6.058631896972656
    9. '           ' → logprob: -6.183631896972656
    10. 'prin' → logprob: -6.558631896972656

Token 1904: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -2.7968066206085496e-05
    2. 'ents' → logprob: -11.250027656555176
    3. 'ments' → logprob: -11.625027656555176
    4. 'ons' → logprob: -12.875027656555176
    5. 'ement' → logprob: -13.625027656555176
    6. 'nements' → logprob: -13.750027656555176
    7. 'éments' → logprob: -15.375027656555176
    8. 'EMENTS' → logprob: -15.375027656555176
    9. '#' → logprob: -15.500027656555176
    10. 'ations' → logprob: -15.750027656555176

Token 1905: ' mais' (ID: 2899)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007425837218761444
    2. ' for' → logprob: -5.132425785064697
    3. 'for' → logprob: -7.632425785064697
    4. '
' → logprob: -8.257426261901855
    5. '            
' → logprob: -8.632426261901855
    6. ':' → logprob: -9.257426261901855
    7. '	       ' → logprob: -9.382426261901855
    8. '       ' → logprob: -9.382426261901855
    9. '		' → logprob: -9.632426261901855
    10. ',' → logprob: -10.257426261901855

Token 1906: ' indices' (ID: 30378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021863624453544617
    2. ' for' → logprob: -4.1468634605407715
    3. 'pour' → logprob: -6.0218634605407715
    4. 'range' → logprob: -6.1468634605407715
    5. '           ' → logprob: -7.3968634605407715
    6. ' pour' → logprob: -8.39686393737793
    7. ' range' → logprob: -8.77186393737793
    8. 'reverse' → logprob: -8.77186393737793
    9. 'inverse' → logprob: -10.89686393737793
    10. 'en' → logprob: -10.89686393737793

Token 1907: ' décro' (ID: 176854)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4080539643764496
    2. 'range' → logprob: -2.0330538749694824
    3. ' =' → logprob: -2.7830538749694824
    4. ' range' → logprob: -3.2830538749694824
    5. 'à' → logprob: -4.158053874969482
    6. 'en' → logprob: -4.283053874969482
    7. ':' → logprob: -4.533053874969482
    8. 'in' → logprob: -4.658053874969482
    9. 'reverse' → logprob: -4.783053874969482
    10. '           ' → logprob: -4.783053874969482

Token 1908: 'issants' (ID: 133997)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12113386392593384
    2. 'issants' → logprob: -3.496133804321289
    3. 'v' → logprob: -3.746133804321289
    4. '#' → logprob: -4.121133804321289
    5. 'issant' → logprob: -4.746133804321289
    6. 'rant' → logprob: -5.621133804321289
    7. '
' → logprob: -5.996133804321289
    8. 'rent' → logprob: -5.996133804321289
    9. ']' → logprob: -6.496133804321289
    10. '\' → logprob: -6.621133804321289

Token 1909: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22626091539859772
    2. ' for' → logprob: -2.2262609004974365
    3. 'for' → logprob: -3.4762609004974365
    4. '		' → logprob: -4.226261138916016
    5. '<|end|>' → logprob: -4.476261138916016
    6. '            
' → logprob: -4.976261138916016
    7. '
' → logprob: -5.226261138916016
    8. '[' → logprob: -5.476261138916016
    9. ':' → logprob: -5.601261138916016
    10. '	       ' → logprob: -5.976261138916016

Token 1910: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5183119773864746
    2. '           ' → logprob: -1.0183119773864746
    3. ' for' → logprob: -4.518311977386475
    4. '[' → logprob: -5.143311977386475
    5. '   ' → logprob: -5.393311977386475
    6. '```' → logprob: -5.393311977386475
    7. 'for' → logprob: -5.518311977386475
    8. '        
' → logprob: -5.643311977386475
    9. '
' → logprob: -6.018311977386475
    10. '<|end|>' → logprob: -6.518311977386475

Token 1911: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12593841552734375
    2. 'for' (adapté à ' for') → logprob: -2.7509384155273438
    3. '       ' → logprob: -3.6259384155273438
    4. ' for' → logprob: -4.375938415527344
    5. '
' → logprob: -4.750938415527344
    6. '```' → logprob: -5.625938415527344
    7. '   ' → logprob: -7.000938415527344
    8. '	for' → logprob: -8.000938415527344
    9. '	       ' → logprob: -8.000938415527344
    10. '		' → logprob: -8.000938415527344

Token 1912: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00030709904967807233
    2. ' i' → logprob: -8.375307083129883
    3. 'j' → logprob: -9.500307083129883
    4. '   ' → logprob: -14.250307083129883
    5. 'idx' → logprob: -15.125307083129883
    6. ' ' → logprob: -15.375307083129883
    7. '	i' → logprob: -15.750307083129883
    8. ' j' → logprob: -16.500307083129883
    9. 'N' → logprob: -16.625307083129883
    10. '  ' → logprob: -17.000307083129883

Token 1913: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012560747563838959
    2. 'in' → logprob: -4.387560844421387
    3. 'range' → logprob: -10.137560844421387
    4. 'd' → logprob: -13.012560844421387
    5. 'en' → logprob: -13.387560844421387
    6. ' ' → logprob: -13.512560844421387
    7. 'dans' → logprob: -13.512560844421387
    8. 'n' → logprob: -13.887560844421387
    9. ' en' → logprob: -14.137560844421387
    10. ' ' → logprob: -14.637560844421387

Token 1914: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002619318547658622
    2. ' range' → logprob: -8.250262260437012
    3. 're' → logprob: -14.375262260437012
    4. 'reverse' → logprob: -17.875261306762695
    5. ' reversed' → logprob: -20.000261306762695
    6. '(range' → logprob: -20.875261306762695
    7. '	range' → logprob: -20.875261306762695
    8. ' ' → logprob: -21.125261306762695
    9. '  ' → logprob: -21.125261306762695
    10. '   ' → logprob: -21.375261306762695

Token 1915: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5760831832885742
    2. '(N' → logprob: -0.8260831832885742
    3. '1' → logprob: -9.076083183288574
    4. '(' → logprob: -10.701083183288574
    5. '	N' → logprob: -13.326083183288574
    6. '   ' → logprob: -13.451083183288574
    7. '           ' → logprob: -14.076083183288574
    8. '       ' → logprob: -14.576083183288574
    9. ',N' → logprob: -14.576083183288574
    10. '0' → logprob: -14.826083183288574

Token 1916: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003832140937447548
    2. ' -' → logprob: -5.6288323402404785
    3. '):
' → logprob: -8.37883186340332
    4. '           ' → logprob: -14.00383186340332
    5. '   ' → logprob: -15.12883186340332
    6. '       ' → logprob: -15.12883186340332
    7. ':' → logprob: -15.75383186340332
    8. '```' → logprob: -15.87883186340332
    9. ' ' → logprob: -16.00383186340332
    10. '):' → logprob: -16.62883186340332

Token 1917: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030638687312602997
    2. 'next' → logprob: -6.003063678741455
    3. ' next' → logprob: -7.628063678741455
    4. ':' → logprob: -10.878064155578613
    5. '```' → logprob: -10.878064155578613
    6. '[next' → logprob: -11.128064155578613
    7. ':
' → logprob: -11.628064155578613
    8. '):
' → logprob: -11.628064155578613
    9. ',next' → logprob: -11.753064155578613
    10. '	next' → logprob: -12.878064155578613

Token 1918: ' jump' (ID: 13843)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6642415523529053
    2. 'jump' (adapté à ' jump') → logprob: -0.7892415523529053
    3. 'limit' → logprob: -4.414241790771484
    4. 'prev' → logprob: -5.039241790771484
    5. '               ' → logprob: -5.539241790771484
    6. 'max' → logprob: -5.914241790771484
    7. 'min' → logprob: -6.414241790771484
    8. 'lim' → logprob: -6.789241790771484
    9. ' jump' → logprob: -7.164241790771484
    10. 'left' → logprob: -7.414241790771484

Token 1919: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.001058295019902289
    2. 'max' → logprob: -7.501058101654053
    3. '_min' → logprob: -7.626058101654053
    4. 's' → logprob: -11.251058578491211
    5. '_' → logprob: -14.126058578491211
    6. 'maxlength' → logprob: -14.376058578491211
    7. '=' → logprob: -14.751058578491211
    8. '_MAX' → logprob: -14.751058578491211
    9. 'Max' → logprob: -15.251058578491211
    10. '           ' → logprob: -15.251058578491211

Token 1920: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231301784515381
    2. '=' → logprob: -0.8981301784515381
    3. '=i' → logprob: -12.398130416870117
    4. ' ' → logprob: -14.398130416870117
    5. '=
' → logprob: -14.648130416870117
    6. '   ' → logprob: -15.523130416870117
    7. '=int' → logprob: -15.648130416870117
    8. '=min' → logprob: -15.773130416870117
    9. '=max' → logprob: -15.773130416870117
    10. '＝' → logprob: -15.898130416870117

Token 1921: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43047311902046204
    2. 'max' → logprob: -1.0554730892181396
    3. ' max' → logprob: -6.805473327636719
    4. ' i' → logprob: -7.430473327636719
    5. '0' → logprob: -9.930473327636719
    6. '   ' → logprob: -12.305473327636719
    7. ' ' → logprob: -12.805473327636719
    8. '(i' → logprob: -12.805473327636719
    9. '(max' → logprob: -12.930473327636719
    10. 'min' → logprob: -13.555473327636719

Token 1922: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11282730847597122
    2. ' -' → logprob: -2.2378273010253906
    3. '+' → logprob: -13.61282730102539
    4. '           ' → logprob: -13.98782730102539
    5. '[' → logprob: -14.48782730102539
    6. ' ' → logprob: -14.86282730102539
    7. '−' → logprob: -15.36282730102539
    8. '         ' → logprob: -15.48782730102539
    9. '—' → logprob: -15.61282730102539
    10. '=' → logprob: -15.61282730102539

Token 1923: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07206658273935318
    2. '(d' → logprob: -2.69706654548645
    3. ' d' → logprob: -6.197066783905029
    4. ' (' → logprob: -9.697066307067871
    5. '   ' → logprob: -11.197066307067871
    6. '(' → logprob: -11.697066307067871
    7. '	d' → logprob: -12.072066307067871
    8. '       ' → logprob: -14.072066307067871
    9. '           ' → logprob: -14.697066307067871
    10. '[d' → logprob: -14.822066307067871

Token 1924: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.436450636712834e-05
    2. '[' → logprob: -9.875094413757324
    3. '<|end|>' → logprob: -11.000094413757324
    4. '<|end|>' → logprob: -11.250094413757324
    5. 'i' → logprob: -11.750094413757324
    6. '(i' → logprob: -13.625094413757324
    7. '[]' → logprob: -13.875094413757324
    8. '[I' → logprob: -14.125094413757324
    9. '[int' → logprob: -14.500094413757324
    10. ' i' → logprob: -14.750094413757324

Token 1925: ']' (ID: 60)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5240864157676697
    2. ' //' → logprob: -0.8990864157676697
    3. ']' → logprob: -7.1490864753723145
    4. '#' → logprob: -10.149085998535156
    5. ' ' → logprob: -10.149085998535156
    6. '[' → logprob: -10.399085998535156
    7. '           ' → logprob: -11.149085998535156
    8. ')' → logprob: -11.399085998535156
    9. '               ' → logprob: -12.274085998535156
    10. ' ' → logprob: -12.274085998535156

Token 1926: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.01815205067396164
    2. ' //' → logprob: -4.018152236938477
    3. '#' → logprob: -13.518152236938477
    4. ' ' → logprob: -14.768152236938477
    5. '//=' → logprob: -16.018152236938477
    6. '           ' → logprob: -16.643152236938477
    7. ' ' → logprob: -16.768152236938477
    8. '```' → logprob: -17.393152236938477
    9. '   ' → logprob: -17.518152236938477
    10. '%' → logprob: -18.143152236938477

Token 1927: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '           ' → logprob: -15.500009536743164
    4. '   ' → logprob: -17.875009536743164
    5. '               ' → logprob: -18.625009536743164
    6. '```' → logprob: -19.125009536743164
    7. '                   ' → logprob: -19.250009536743164
    8. '[' → logprob: -19.500009536743164
    9. '  ' → logprob: -20.000009536743164
    10. '       ' → logprob: -20.375009536743164

Token 1928: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '           ' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. '```' → logprob: -20.0
    6. '  ' → logprob: -20.5
    7. '               ' → logprob: -21.375
    8. '                   ' → logprob: -21.5
    9. '۱۰' → logprob: -21.5
    10. '       ' → logprob: -21.625

Token 1929: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5184487700462341
    2. 'if' → logprob: -1.018448829650879
    3. '               ' → logprob: -3.518448829650879
    4. '
' → logprob: -4.768448829650879
    5. '           ' → logprob: -6.018448829650879
    6. '<|end|>' → logprob: -6.268448829650879
    7. '			' → logprob: -8.143448829650879
    8. '	if' → logprob: -9.393448829650879
    9. '0' → logprob: -9.393448829650879
    10. '<|end|>' → logprob: -9.518448829650879

Token 1930: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018537821248173714
    2. ' if' → logprob: -4.268537998199463
    3. 'if' → logprob: -5.518537998199463
    4. '<|end|>' → logprob: -8.268537521362305
    5. '           ' → logprob: -10.518537521362305
    6. '<|end|>' → logprob: -11.643537521362305
    7. ',' → logprob: -11.768537521362305
    8. '```' → logprob: -12.018537521362305
    9. '                   ' → logprob: -12.393537521362305
    10. 'for' → logprob: -12.393537521362305

Token 1931: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004145591985434294
    2. ' if' → logprob: -5.504145622253418
    3. '               ' → logprob: -9.754145622253418
    4. 'next' → logprob: -11.629145622253418
    5. ' next' → logprob: -16.0041446685791
    6. '	if' → logprob: -17.2541446685791
    7. '           ' → logprob: -17.2541446685791
    8. '```' → logprob: -17.7541446685791
    9. '[next' → logprob: -17.7541446685791
    10. '                
' → logprob: -18.2541446685791

Token 1932: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.014165629632771015
    2. ' jump' → logprob: -4.26416540145874
    3. 'j' → logprob: -13.764165878295898
    4. ' ' → logprob: -15.514165878295898
    5. '.jump' → logprob: -15.514165878295898
    6. 'jmp' → logprob: -15.764165878295898
    7. '_jump' → logprob: -15.764165878295898
    8. 'Jump' → logprob: -16.1391658782959
    9. '0' → logprob: -16.3891658782959
    10. 'jum' → logprob: -16.5141658782959

Token 1933: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0014227337669581175
    2. 'min' → logprob: -6.751422882080078
    3. '<' → logprob: -9.001422882080078
    4. 'jump' → logprob: -9.251422882080078
    5. '_max' → logprob: -10.626422882080078
    6. '_jump' → logprob: -12.501422882080078
    7. '_MIN' → logprob: -13.626422882080078
    8. 'Min' → logprob: -14.126422882080078
    9. ' jump' → logprob: -14.251422882080078
    10. ' <' → logprob: -15.126422882080078

Token 1934: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002957258140668273
    2. ' <' → logprob: -5.877957344055176
    3. '=' → logprob: -9.377957344055176
    4. '<|end|>' → logprob: -10.752957344055176
    5. '<int' → logprob: -11.377957344055176
    6. ' =' → logprob: -11.377957344055176
    7. '[' → logprob: -12.502957344055176
    8. '<i' → logprob: -13.377957344055176
    9. '<il' → logprob: -13.377957344055176
    10. '<class' → logprob: -13.502957344055176

Token 1935: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.00002670288086
    4. '           ' → logprob: -20.50002670288086
    5. '       ' → logprob: -20.87502670288086
    6. '۰' → logprob: -21.00002670288086
    7. '  ' → logprob: -21.25002670288086
    8. '               ' → logprob: -21.75002670288086
    9. '                   ' → logprob: -22.37502670288086
    10. '=' → logprob: -22.37502670288086

Token 1936: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.375
    4. '۰' → logprob: -20.75
    5. '00' → logprob: -22.0
    6. '```' → logprob: -22.625
    7. '  ' → logprob: -22.875
    8. '       ' → logprob: -22.875
    9. ' ' → logprob: -23.0
    10. '=' → logprob: -23.125

Token 1937: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.519858181476593
    2. '                   ' → logprob: -1.3948581218719482
    3. ':' → logprob: -2.1448581218719482
    4. '               ' → logprob: -3.3948581218719482
    5. '):
' → logprob: -6.144858360290527
    6. '=' → logprob: -6.144858360290527
    7. ' =' → logprob: -7.144858360290527
    8. '           ' → logprob: -7.519858360290527
    9. ',' → logprob: -8.519858360290527
    10. 'jump' → logprob: -8.519858360290527

Token 1938: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005862074438482523
    2. '               ' → logprob: -5.380862236022949
    3. 'jump' → logprob: -8.25586223602295
    4. ' jump' → logprob: -8.50586223602295
    5. '           ' → logprob: -8.88086223602295
    6. '		           ' → logprob: -8.88086223602295
    7. '                    ' → logprob: -9.13086223602295
    8. '	               ' → logprob: -9.38086223602295
    9. '				' → logprob: -10.00586223602295
    10. '                       ' → logprob: -10.00586223602295

Token 1939: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' (adapté à ' jump') → logprob: -0.04879742115736008
    2. '0' → logprob: -3.048797369003296
    3. ' jump' → logprob: -8.673797607421875
    4. '           ' → logprob: -11.298797607421875
    5. '   ' → logprob: -11.423797607421875
    6. '               ' → logprob: -11.548797607421875
    7. '                   ' → logprob: -12.673797607421875
    8. '       ' → logprob: -14.298797607421875
    9. ' ' → logprob: -14.673797607421875
    10. 'j' → logprob: -15.173797607421875

Token 1940: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.080963092041202e-06
    2. 'min' → logprob: -12.375004768371582
    3. '_max' → logprob: -14.250004768371582
    4. '=' → logprob: -16.3750057220459
    5. '[' → logprob: -17.2500057220459
    6. '[min' → logprob: -18.0000057220459
    7. '_MIN' → logprob: -19.0000057220459
    8. '	min' → logprob: -19.2500057220459
    9. '[i' → logprob: -20.1250057220459
    10. '=min' → logprob: -20.2500057220459

Token 1941: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589076846838
    2. ' =' → logprob: -3.048588991165161
    3. '=
' → logprob: -13.673588752746582
    4. '=True' → logprob: -15.923588752746582
    5. '=None' → logprob: -16.2985897064209
    6. '=False' → logprob: -16.6735897064209
    7. '=-' → logprob: -17.0485897064209
    8. '               ' → logprob: -17.1735897064209
    9. '                   ' → logprob: -17.7985897064209
    10. '=int' → logprob: -17.7985897064209

Token 1942: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.375009536743164
    4. ' ' → logprob: -20.500009536743164
    5. '           ' → logprob: -21.125009536743164
    6. '                   ' → logprob: -21.375009536743164
    7. '۰' → logprob: -21.500009536743164
    8. '               ' → logprob: -21.500009536743164
    9. '00' → logprob: -22.125009536743164
    10. '  ' → logprob: -22.250009536743164

Token 1943: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.5
    4. '۰' → logprob: -21.25
    5. '00' → logprob: -21.75
    6. '```' → logprob: -21.875
    7. '[' → logprob: -22.75
    8. ' ' → logprob: -22.875
    9. '000' → logprob: -23.25
    10. '       ' → logprob: -23.375

Token 1944: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007547161658294499
    2. 'next' → logprob: -8.125754356384277
    3. ' next' → logprob: -8.250754356384277
    4. '
' → logprob: -9.250754356384277
    5. '[next' → logprob: -10.250754356384277
    6. '           ' → logprob: -10.625754356384277
    7. '                   ' → logprob: -11.125754356384277
    8. '(next' → logprob: -11.875754356384277
    9. '```' → logprob: -12.500754356384277
    10. ',next' → logprob: -12.750754356384277

Token 1945: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018501311540603638
    2. 'next' → logprob: -4.268501281738281
    3. ' next' → logprob: -6.143501281738281
    4. '           ' → logprob: -6.393501281738281
    5. '```' → logprob: -8.143501281738281
    6. '[next' → logprob: -9.518501281738281
    7. '(next' → logprob: -10.143501281738281
    8. ',next' → logprob: -10.768501281738281
    9. '                   ' → logprob: -10.893501281738281
    10. 'for' → logprob: -10.893501281738281

Token 1946: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0063643320463597775
    2. '               ' → logprob: -5.256364345550537
    3. '           ' → logprob: -7.131364345550537
    4. ' next' → logprob: -8.131363868713379
    5. '```' → logprob: -11.131363868713379
    6. '[next' → logprob: -11.881363868713379
    7. '	next' → logprob: -12.631363868713379
    8. '   ' → logprob: -12.756363868713379
    9. '       ' → logprob: -13.006363868713379
    10. 'for' → logprob: -13.381363868713379

Token 1947: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0002547832846175879
    2. 'max' → logprob: -8.75025463104248
    3. '_min' → logprob: -9.25025463104248
    4. 'Max' → logprob: -15.87525463104248
    5. '_' → logprob: -16.500255584716797
    6. '_MAX' → logprob: -18.250255584716797
    7. '```' → logprob: -18.250255584716797
    8. 's' → logprob: -18.500255584716797
    9. '_re' → logprob: -18.625255584716797
    10. '#' → logprob: -18.750255584716797

Token 1948: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0007709132041782141
    2. 'reach' → logprob: -7.3757710456848145
    3. 'reachable' → logprob: -10.125770568847656
    4. '_jump' → logprob: -10.750770568847656
    5. '=' → logprob: -11.000770568847656
    6. '[' → logprob: -11.500770568847656
    7. 're' → logprob: -11.625770568847656
    8. 'Reach' → logprob: -11.625770568847656
    9. ' reach' → logprob: -12.250770568847656
    10. '           ' → logprob: -12.250770568847656

Token 1949: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.030514704063534737
    2. 'each' → logprob: -4.030514717102051
    3. 'reach' → logprob: -4.405514717102051
    4. '_re' → logprob: -10.65551471710205
    5. 'Each' → logprob: -11.15551471710205
    6. 'Reach' → logprob: -11.65551471710205
    7. 'ch' → logprob: -12.53051471710205
    8. 're' → logprob: -12.78051471710205
    9. 'acht' → logprob: -12.78051471710205
    10. 'acher' → logprob: -13.03051471710205

Token 1950: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005196166690438986
    2. '=' → logprob: -5.6301960945129395
    3. ' =' → logprob: -6.7551960945129395
    4. '[' → logprob: -8.130196571350098
    5. ' [' → logprob: -9.630196571350098
    6. '=[' → logprob: -10.255196571350098
    7. '=i' → logprob: -11.255196571350098
    8. '[j' → logprob: -12.005196571350098
    9. 'i' → logprob: -12.755196571350098
    10. '   ' → logprob: -13.755196571350098

Token 1951: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1428336799144745
    2. ' =' → logprob: -2.017833709716797
    3. '[i' → logprob: -9.392833709716797
    4. '[' → logprob: -10.142833709716797
    5. '=i' → logprob: -11.267833709716797
    6. ']' → logprob: -12.267833709716797
    7. ']=' → logprob: -12.642833709716797
    8. '   ' → logprob: -12.892833709716797
    9. '[j' → logprob: -13.017833709716797
    10. '=
' → logprob: -13.267833709716797

Token 1952: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235291086137295
    2. ' =' → logprob: -5.255235195159912
    3. '=i' → logprob: -14.00523567199707
    4. '=
' → logprob: -14.75523567199707
    5. '[' → logprob: -16.13023567199707
    6. '=-' → logprob: -16.63023567199707
    7. '=int' → logprob: -17.38023567199707
    8. '=j' → logprob: -17.88023567199707
    9. '   ' → logprob: -18.00523567199707
    10. ' ' → logprob: -18.50523567199707

Token 1953: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -7.52919222577475e-05
    2. ' jump' → logprob: -9.500075340270996
    3. 'j' → logprob: -15.000075340270996
    4. '[j' → logprob: -17.62507438659668
    5. 'jmp' → logprob: -17.75007438659668
    6. ' ' → logprob: -19.37507438659668
    7. '_jump' → logprob: -19.37507438659668
    8. '   ' → logprob: -19.50007438659668
    9. '	j' → logprob: -19.62507438659668
    10. '.jump' → logprob: -19.75007438659668

Token 1954: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0008079635445028543
    2. 'min' → logprob: -7.125807762145996
    3. 'Min' → logprob: -13.875807762145996
    4. '[' → logprob: -14.000807762145996
    5. '[min' → logprob: -15.000807762145996
    6. '_max' → logprob: -15.125807762145996
    7. '[i' → logprob: -15.125807762145996
    8. 'i' → logprob: -15.625807762145996
    9. '_MIN' → logprob: -15.750807762145996
    10. '	min' → logprob: -16.625808715820312

Token 1955: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9157970547676086
    2. '        
' → logprob: -1.1657969951629639
    3. '    
' → logprob: -1.4157969951629639
    4. '            
' → logprob: -3.915796995162964
    5. '  
' → logprob: -5.040797233581543
    6. '       ' → logprob: -5.540797233581543
    7. '<|end|>' → logprob: -5.540797233581543
    8. '		
' → logprob: -6.040797233581543
    9. '	
' → logprob: -6.040797233581543
    10. '           ' → logprob: -6.915797233581543

Token 1956: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1697394698858261
    2. '           ' → logprob: -2.5447394847869873
    3. '```' → logprob: -3.2947394847869873
    4. 'i' → logprob: -3.4197394847869873
    5. '   ' → logprob: -6.169739246368408
    6. 'for' → logprob: -6.544739246368408
    7. '        
' → logprob: -7.169739246368408
    8. ' i' → logprob: -7.169739246368408
    9. ' for' → logprob: -7.794739246368408
    10. '
' → logprob: -8.044739723205566

Token 1957: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2855128049850464
    2. '       ' → logprob: -1.5355128049850464
    3. '```' → logprob: -3.535512924194336
    4. 'while' → logprob: -6.535512924194336
    5. 'j' → logprob: -7.035512924194336
    6. ' i' → logprob: -7.410512924194336
    7. '   ' → logprob: -7.785512924194336
    8. '``' → logprob: -8.410512924194336
    9. '#' → logprob: -8.910512924194336
    10. '           ' → logprob: -9.035512924194336

Token 1958: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018189044669270515
    2. ' =' → logprob: -4.018188953399658
    3. '-=' → logprob: -11.518189430236816
    4. '=i' → logprob: -11.768189430236816
    5. '=max' → logprob: -11.893189430236816
    6. '=N' → logprob: -12.893189430236816
    7. '=-' → logprob: -13.268189430236816
    8. '+=' → logprob: -13.393189430236816
    9. '=
' → logprob: -13.518189430236816
    10. '=int' → logprob: -13.643189430236816

Token 1959: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5016013979911804
    2. 'N' → logprob: -1.5016014575958252
    3. 'goal' → logprob: -2.126601457595825
    4. 'max' → logprob: -3.001601457595825
    5. 'len' → logprob: -6.876601219177246
    6. ' start' → logprob: -7.876601219177246
    7. '0' → logprob: -7.876601219177246
    8. ' goal' → logprob: -8.376601219177246
    9. '   ' → logprob: -9.001601219177246
    10. ' N' → logprob: -9.126601219177246

Token 1960: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43412941694259644
    2. '>=' → logprob: -1.6841294765472412
    3. 'while' → logprob: -2.809129476547241
    4. '<|end|>' → logprob: -3.059129476547241
    5. '>' → logprob: -4.559129238128662
    6. ' =' → logprob: -4.809129238128662
    7. ',' → logprob: -5.059129238128662
    8. ' while' → logprob: -5.184129238128662
    9. ' -=' → logprob: -5.309129238128662
    10. '           ' → logprob: -5.809129238128662

Token 1961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1732983589172363
    2. '       ' → logprob: -1.2982983589172363
    3. 'while' → logprob: -1.5482983589172363
    4. ' while' → logprob: -2.0482983589172363
    5. '	while' → logprob: -3.2982983589172363
    6. '```' → logprob: -4.548298358917236
    7. ':
' → logprob: -4.798298358917236
    8. '<|end|>' → logprob: -5.173298358917236
    9. ':' → logprob: -5.923298358917236
    10. '
' → logprob: -5.923298358917236

Token 1962: ' min' (ID: 1349)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03880320489406586
    2. '       ' → logprob: -3.9138031005859375
    3. ' while' → logprob: -5.0388031005859375
    4. '   ' → logprob: -5.0388031005859375
    5. '           ' → logprob: -5.6638031005859375
    6. '```' → logprob: -7.0388031005859375
    7. '	while' → logprob: -7.9138031005859375
    8. '
' → logprob: -8.538803100585938
    9. '``' → logprob: -8.788803100585938
    10. '    
' → logprob: -11.163803100585938

Token 1963: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.002167986473068595
    2. '(i' → logprob: -7.00216817855835
    3. 're' → logprob: -8.002167701721191
    4. '_' → logprob: -8.252167701721191
    5. ' =' → logprob: -8.877167701721191
    6. 'i' → logprob: -8.877167701721191
    7. 'reachable' → logprob: -9.127167701721191
    8. 'reach' → logprob: -9.627167701721191
    9. '_index' → logprob: -10.127167701721191
    10. '_i' → logprob: -10.627167701721191

Token 1964: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0018854460213333368
    2. 'achable' → logprob: -6.501885414123535
    3. 'each' → logprob: -8.126885414123535
    4. 'reach' → logprob: -10.376885414123535
    5. 'ch' → logprob: -11.001885414123535
    6. 'ache' → logprob: -11.376885414123535
    7. 'arch' → logprob: -12.376885414123535
    8. 'ached' → logprob: -12.751885414123535
    9. 'atch' → logprob: -13.126885414123535
    10. 'ac' → logprob: -13.251885414123535

Token 1965: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16054783761501312
    2. '=' → logprob: -1.9105478525161743
    3. '           ' → logprob: -9.160548210144043
    4. '=-' → logprob: -9.785548210144043
    5. '            ' → logprob: -10.785548210144043
    6. '   ' → logprob: -10.785548210144043
    7. '=min' → logprob: -10.910548210144043
    8. '       ' → logprob: -10.910548210144043
    9. ' -=' → logprob: -11.160548210144043
    10. '=True' → logprob: -11.660548210144043

Token 1966: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13667887449264526
    2. 'goal' → logprob: -2.63667893409729
    3. '0' → logprob: -3.13667893409729
    4. 'i' → logprob: -5.011678695678711
    5. ' start' → logprob: -6.136678695678711
    6. 'N' → logprob: -6.136678695678711
    7. 'min' → logprob: -7.136678695678711
    8. ' goal' → logprob: -7.511678695678711
    9. 'max' → logprob: -9.261678695678711
    10. ' ' → logprob: -9.386678695678711

Token 1967: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6167039275169373
    2. ' -' → logprob: -1.366703987121582
    3. '-' → logprob: -2.116703987121582
    4. '<|end|>' → logprob: -2.741703987121582
    5. ' -=' → logprob: -4.991703987121582
    6. ' =' → logprob: -5.116703987121582
    7. '```' → logprob: -5.866703987121582
    8. '<|end|>' → logprob: -6.741703987121582
    9. '=' → logprob: -6.866703987121582
    10. '       ' → logprob: -7.991703987121582

Token 1968: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3538561761379242
    2. '<|end|>' → logprob: -2.103856086730957
    3. '```' → logprob: -2.478856086730957
    4. '       ' → logprob: -3.353856086730957
    5. '	       ' → logprob: -3.603856086730957
    6. '<|end|>' → logprob: -4.978856086730957
    7. '	while' → logprob: -5.728856086730957
    8. 'while' → logprob: -6.103856086730957
    9. '	   ' → logprob: -6.103856086730957
    10. ' =' → logprob: -6.103856086730957

Token 1969: ' reachable' (ID: 143580)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00010223194840364158
    2. '       ' → logprob: -9.375102043151855
    3. '```' → logprob: -11.750102043151855
    4. ' while' → logprob: -11.875102043151855
    5. '           ' → logprob: -13.500102043151855
    6. '	while' → logprob: -14.125102043151855
    7. '   ' → logprob: -15.875102043151855
    8. '``' → logprob: -16.125102996826172
    9. 'if' → logprob: -16.625102996826172
    10. '
' → logprob: -17.500102996826172

Token 1970: '[start' (ID: 62179)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5514718294143677
    2. '[i' → logprob: -1.5514718294143677
    3. '[min' → logprob: -1.6764718294143677
    4. '=' → logprob: -3.926471710205078
    5. '[max' → logprob: -6.926471710205078
    6. '[next' → logprob: -6.926471710205078
    7. ' =' → logprob: -7.301471710205078
    8. '[int' → logprob: -7.926471710205078
    9. '=True' → logprob: -8.176471710205078
    10. '[end' → logprob: -8.301471710205078

Token 1971: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6142647862434387
    2. '=' → logprob: -0.8642647862434387
    3. ' =' → logprob: -3.364264726638794
    4. ']=' → logprob: -5.989264965057373
    5. '=True' → logprob: -7.739264965057373
    6. ' ]' → logprob: -10.114264488220215
    7. '           ' → logprob: -11.989264488220215
    8. '=False' → logprob: -11.989264488220215
    9. ')' → logprob: -12.239264488220215
    10. '       ' → logprob: -12.739264488220215

Token 1972: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014222975820302963
    2. ' =' → logprob: -4.264223098754883
    3. '=True' → logprob: -9.889223098754883
    4. '           ' → logprob: -12.889223098754883
    5. '       ' → logprob: -13.139223098754883
    6. '[' → logprob: -13.514223098754883
    7. '   ' → logprob: -13.514223098754883
    8. '=
' → logprob: -14.389223098754883
    9. ']' → logprob: -14.764223098754883
    10. '	' → logprob: -16.139223098754883

Token 1973: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.008129963040119e-06
    2. ' True' → logprob: -12.500003814697266
    3. 'False' → logprob: -15.625003814697266
    4. '(True' → logprob: -20.000003814697266
    5. '1' → logprob: -20.375003814697266
    6. '=True' → logprob: -20.500003814697266
    7. '[' → logprob: -21.250003814697266
    8. 'true' → logprob: -22.875003814697266
    9. '_true' → logprob: -23.750003814697266
    10. '   ' → logprob: -23.875003814697266

Token 1974: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021196510642766953
    2. '       ' → logprob: -5.146196365356445
    3. '	while' → logprob: -5.271196365356445
    4. '	       ' → logprob: -5.521196365356445
    5. 'while' → logprob: -5.771196365356445
    6. '   ' → logprob: -7.021196365356445
    7. '```' → logprob: -7.271196365356445
    8. ' while' → logprob: -7.646196365356445
    9. '		' → logprob: -8.146196365356445
    10. '	   ' → logprob: -8.396196365356445

Token 1976: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.037805166095495224
    2. ' while' → logprob: -4.162805080413818
    3. '           ' → logprob: -4.287805080413818
    4. '       ' → logprob: -5.787805080413818
    5. '	while' → logprob: -5.787805080413818
    6. '```' → logprob: -6.912805080413818
    7. '	       ' → logprob: -7.787805080413818
    8. 'i' → logprob: -9.537805557250977
    9. '   ' → logprob: -9.537805557250977
    10. '	   ' → logprob: -10.787805557250977

Token 1977: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06365702301263809
    2. ' i' → logprob: -2.81365704536438
    3. 'min' → logprob: -6.688656806945801
    4. ' min' → logprob: -8.0636568069458
    5. '   ' → logprob: -9.4386568069458
    6. '0' → logprob: -10.9386568069458
    7. '(i' → logprob: -11.8136568069458
    8. ' ' → logprob: -12.1886568069458
    9. '	i' → logprob: -12.1886568069458
    10. 'True' → logprob: -12.5636568069458

Token 1978: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03134540095925331
    2. '>=' → logprob: -3.5313453674316406
    3. ' <=' → logprob: -7.031345367431641
    4. ' -=' → logprob: -7.781345367431641
    5. ' >' → logprob: -8.78134536743164
    6. '<=' → logprob: -10.65634536743164
    7. '   ' → logprob: -11.15634536743164
    8. '>' → logprob: -11.15634536743164
    9. '           ' → logprob: -11.40634536743164
    10. '        ' → logprob: -11.40634536743164

Token 1979: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012577339075505733
    2. ' ' → logprob: -7.00125789642334
    3. 'min' → logprob: -8.25125789642334
    4. 'start' → logprob: -9.75125789642334
    5. 'max' → logprob: -11.25125789642334
    6. 'goal' → logprob: -12.12625789642334
    7. ' min' → logprob: -12.50125789642334
    8. '   ' → logprob: -13.25125789642334
    9. ' start' → logprob: -14.37625789642334
    10. 'end' → logprob: -14.37625789642334

Token 1980: '_re' (ID: 3067)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019841869361698627
    2. '_re' → logprob: -7.626984119415283
    3. '           ' → logprob: -7.626984119415283
    4. '               ' → logprob: -8.126984596252441
    5. ' ' → logprob: -8.376984596252441
    6. 'i' → logprob: -8.876984596252441
    7. '=' → logprob: -9.001984596252441
    8. '1' → logprob: -10.001984596252441
    9. '       ' → logprob: -10.376984596252441
    10. ')' → logprob: -10.501984596252441

Token 1981: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.001043647644110024
    2. 'ch' → logprob: -8.001043319702148
    3. 'reach' → logprob: -8.251043319702148
    4. 'each' → logprob: -8.626043319702148
    5. 'Reach' → logprob: -10.001043319702148
    6. '_' → logprob: -10.251043319702148
    7. '_re' → logprob: -10.376043319702148
    8. 'ac' → logprob: -10.501043319702148
    9. 'arch' → logprob: -11.251043319702148
    10. 'acht' → logprob: -11.501043319702148

Token 1982: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.698519766330719
    2. ':
' → logprob: -1.3235197067260742
    3. ':' → logprob: -1.8235197067260742
    4. 'and' → logprob: -2.948519706726074
    5. '<|end|>' → logprob: -5.198519706726074
    6. '           ' → logprob: -5.323519706726074
    7. '       ' → logprob: -5.448519706726074
    8. '```' → logprob: -5.948519706726074
    9. '               ' → logprob: -6.823519706726074
    10. '   ' → logprob: -7.198519706726074

Token 1983: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06203748658299446
    2. ' ' → logprob: -2.812037467956543
    3. ' i' → logprob: -10.312037467956543
    4. 'i' → logprob: -11.562037467956543
    5. '   ' → logprob: -11.812037467956543
    6. ' True' → logprob: -12.187037467956543
    7. 'True' → logprob: -12.437037467956543
    8. ' -' → logprob: -12.812037467956543
    9. '```' → logprob: -13.562037467956543
    10. '-' → logprob: -13.687037467956543

Token 1984: ' >=' (ID: 5064)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.9143972396850586
    2. '-=' → logprob: -1.4143972396850586
    3. '-' → logprob: -1.5393972396850586
    4. '>=' → logprob: -2.4143972396850586
    5. ' >=' → logprob: -3.4143972396850586
    6. '>-' → logprob: -5.164397239685059
    7. ' -' → logprob: -5.289397239685059
    8. '>' → logprob: -5.414397239685059
    9. ' >' → logprob: -6.914397239685059
    10. '--' → logprob: -7.289397239685059

Token 1985: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -15.875179290771484
    4. '1' → logprob: -19.125179290771484
    5. '  ' → logprob: -19.250179290771484
    6. '       ' → logprob: -19.375179290771484
    7. ' ' → logprob: -19.500179290771484
    8. '           ' → logprob: -20.000179290771484
    9. 'goal' → logprob: -20.125179290771484
    10. 'direction' → logprob: -20.250179290771484

Token 1986: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '           ' → logprob: -21.125001907348633
    5. '1' → logprob: -21.250001907348633
    6. '```' → logprob: -21.750001907348633
    7. '۰' → logprob: -22.125001907348633
    8. '       ' → logprob: -22.125001907348633
    9. '[' → logprob: -23.000001907348633
    10. ' ' → logprob: -23.125001907348633

Token 1987: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3979732394218445
    2. ':' → logprob: -1.1479732990264893
    3. '               ' → logprob: -5.02297306060791
    4. '```' → logprob: -6.52297306060791
    5. ' and' → logprob: -7.02297306060791
    6. '<|end|>' → logprob: -7.64797306060791
    7. '):
' → logprob: -7.89797306060791
    8. '       ' → logprob: -8.27297306060791
    9. ' :
' → logprob: -8.39797306060791
    10. ' :' → logprob: -8.89797306060791

Token 1988: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005106864497065544
    2. '```' → logprob: -6.3801069259643555
    3. '		       ' → logprob: -7.0051069259643555
    4. '	           ' → logprob: -7.2551069259643555
    5. '	       ' → logprob: -7.6301069259643555
    6. '	' → logprob: -8.255106925964355
    7. '<|end|>' → logprob: -8.380106925964355
    8. '			' → logprob: -8.755106925964355
    9. '       ' → logprob: -9.255106925964355
    10. '			   ' → logprob: -9.755106925964355

Token 1989: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1364123374223709
    2. ' if' → logprob: -2.3864123821258545
    3. 'if' (adapté à ' if') → logprob: -3.5114123821258545
    4. '                   ' → logprob: -6.511412143707275
    5. '	           ' → logprob: -7.011412143707275
    6. '```' → logprob: -7.011412143707275
    7. '                ' → logprob: -7.886412143707275
    8. '           ' → logprob: -8.011412620544434
    9. '	               ' → logprob: -8.011412620544434
    10. '	if' → logprob: -8.136412620544434

Token 1990: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.023270636796951294
    2. ' reachable' → logprob: -3.773270606994629
    3. '               ' → logprob: -11.273270606994629
    4. '           ' → logprob: -12.648270606994629
    5. 'ready' → logprob: -13.023270606994629
    6. '   ' → logprob: -13.398270606994629
    7. '                   ' → logprob: -13.773270606994629
    8. 'reach' → logprob: -13.898270606994629
    9. ' ' → logprob: -14.023270606994629
    10. 'not' → logprob: -14.898270606994629

Token 1991: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[j' → logprob: -16.875
    5. '[
' → logprob: -17.25
    6. '```' → logprob: -17.5
    7. ' [' → logprob: -18.125
    8. '[int' → logprob: -19.125
    9. '
' → logprob: -19.125
    10. '[I' → logprob: -19.625

Token 1992: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.008352040313184261
    2. ':
' → logprob: -5.758351802825928
    3. ']:' → logprob: -7.008351802825928
    4. ':' → logprob: -7.133351802825928
    5. '']:
' → logprob: -7.258351802825928
    6. '               ' → logprob: -7.383351802825928
    7. '                   ' → logprob: -7.508351802825928
    8. ']==' → logprob: -7.633351802825928
    9. '):
' → logprob: -8.383352279663086
    10. ']' → logprob: -8.508352279663086

Token 1993: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007292950991541147
    2. '```' → logprob: -5.007292747497559
    3. '#' → logprob: -9.132292747497559
    4. '               ' → logprob: -9.507292747497559
    5. '	               ' → logprob: -9.632292747497559
    6. '                       ' → logprob: -9.882292747497559
    7. '		           ' → logprob: -10.007292747497559
    8. '                    ' → logprob: -10.132292747497559
    9. '			       ' → logprob: -10.507292747497559
    10. '           ' → logprob: -10.882292747497559

Token 1994: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09638550877571106
    2. '#' (adapté à ' #') → logprob: -2.8463854789733887
    3. '                   ' → logprob: -3.8463854789733887
    4. 'min' → logprob: -4.721385478973389
    5. 'for' → logprob: -6.221385478973389
    6. 'next' → logprob: -7.846385478973389
    7. 'j' → logprob: -8.096385955810547
    8. '```' → logprob: -8.471385955810547
    9. 'start' → logprob: -8.721385955810547
    10. '                       ' → logprob: -9.221385955810547

Token 1995: ' On' (ID: 2160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2236752063035965
    2. '#' → logprob: -1.97367525100708
    3. 'from' → logprob: -2.84867525100708
    4. '```' → logprob: -6.22367525100708
    5. '                       ' → logprob: -7.22367525100708
    6. '               ' → logprob: -7.72367525100708
    7. '   ' → logprob: -9.223674774169922
    8. '           ' → logprob: -9.723674774169922
    9. ' #' → logprob: -9.973674774169922
    10. 'next' → logprob: -10.223674774169922

Token 1996: ' essay' (ID: 9635)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.0311886072158813
    2. 'min' → logprob: -1.5311886072158813
    3. 'from' → logprob: -1.6561886072158813
    4. '=' → logprob: -3.531188488006592
    5. '                   ' → logprob: -3.656188488006592
    6. '#' → logprob: -3.781188488006592
    7. '_min' → logprob: -4.031188488006592
    8. 'i' → logprob: -4.031188488006592
    9. '               ' → logprob: -4.281188488006592
    10. 'for' → logprob: -4.531188488006592

Token 1997: 'e' (ID: 68)
  Prédit: 'aye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aye' → logprob: -1.1160695552825928
    2. 'ss' → logprob: -1.4910695552825928
    3. 'ye' → logprob: -1.8660695552825928
    4. 'e' → logprob: -2.4910695552825928
    5. 'eye' → logprob: -2.4910695552825928
    6. 't' → logprob: -3.7410695552825928
    7. 'se' → logprob: -3.9910695552825928
    8. 'de' → logprob: -3.9910695552825928
    9. 'te' → logprob: -4.741069793701172
    10. 'ess' → logprob: -5.116069793701172

Token 1998: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10524502396583557
    2. 'd' → logprob: -2.3552451133728027
    3. ' de' → logprob: -6.480245113372803
    4. '                    ' → logprob: -6.605245113372803
    5. '                   ' → logprob: -6.730245113372803
    6. '    ' → logprob: -7.730245113372803
    7. '                ' → logprob: -8.855244636535645
    8. 'de' → logprob: -9.605244636535645
    9. '        ' → logprob: -9.855244636535645
    10. '                  ' → logprob: -9.980244636535645

Token 1999: ''et' (ID: 88821)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.08324424177408218
    2. 'extend' → logprob: -2.8332443237304688
    3. ' ét' → logprob: -4.333244323730469
    4. 'min' → logprob: -5.833244323730469
    5. 'desc' → logprob: -6.583244323730469
    6. 'ext' → logprob: -6.708244323730469
    7. ''ét' → logprob: -7.208244323730469
    8. 'max' → logprob: -7.833244323730469
    9. 'expand' → logprob: -8.208244323730469
    10. 'et' → logprob: -8.833244323730469

Token 2000: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.00016861737822182477
    2. 'end' → logprob: -10.375168800354004
    3. 'endres' → logprob: -10.500168800354004
    4. 'andre' → logprob: -11.125168800354004
    5. 'nd' → logprob: -11.375168800354004
    6. '...' → logprob: -11.750168800354004
    7. 'endr' → logprob: -11.750168800354004
    8. '   ' → logprob: -11.750168800354004
    9. '#' → logprob: -12.250168800354004
    10. 'endra' → logprob: -12.375168800354004

Token 2001: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.019419290125370026
    2. ' min' → logprob: -4.019419193267822
    3. 'max' → logprob: -6.769419193267822
    4. '	min' → logprob: -9.76941967010498
    5. 'i' → logprob: -10.51941967010498
    6. '(min' → logprob: -11.89441967010498
    7. '                   ' → logprob: -11.89441967010498
    8. ' max' → logprob: -12.01941967010498
    9. '_min' → logprob: -12.76941967010498
    10. ' i' → logprob: -12.89441967010498

Token 2002: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -3.47626737493556e-05
    2. 'i' → logprob: -11.12503433227539
    3. 'reach' → logprob: -11.62503433227539
    4. '_' → logprob: -12.50003433227539
    5. 're' → logprob: -13.12503433227539
    6. '(i' → logprob: -13.50003433227539
    7. '\' → logprob: -14.25003433227539
    8. '```' → logprob: -14.25003433227539
    9. '_i' → logprob: -15.12503433227539
    10. 'Reach' → logprob: -15.25003433227539

Token 2003: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0021711974404752254
    2. 'each' → logprob: -7.252171039581299
    3. 'reach' → logprob: -7.627171039581299
    4. 'achable' → logprob: -8.002171516418457
    5. 'ch' → logprob: -8.877171516418457
    6. '_' → logprob: -9.127171516418457
    7. 'a' → logprob: -10.002171516418457
    8. 'ache' → logprob: -10.002171516418457
    9. 'i' → logprob: -10.377171516418457
    10. 'ac' → logprob: -10.627171516418457

Token 2004: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.35509657859802246
    2. '                   ' → logprob: -1.6050965785980225
    3. ' =' → logprob: -3.1050965785980225
    4. '=' → logprob: -3.4800965785980225
    5. 'vers' → logprob: -5.105096817016602
    6. '```' → logprob: -5.105096817016602
    7. ' à' → logprob: -6.355096817016602
    8. '-' → logprob: -6.605096817016602
    9. '               ' → logprob: -6.730096817016602
    10. ' -=' → logprob: -7.105096817016602

Token 2005: ' next' (ID: 2613)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3460243344306946
    2. 'i' → logprob: -1.3460242748260498
    3. 'next' → logprob: -4.346024513244629
    4. ' min' → logprob: -4.721024513244629
    5. 'max' → logprob: -5.096024513244629
    6. ' i' → logprob: -5.846024513244629
    7. '(i' → logprob: -7.721024513244629
    8. ' next' → logprob: -7.971024513244629
    9. '(min' → logprob: -9.221024513244629
    10. '[i' → logprob: -9.471024513244629

Token 2006: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00044032474397681653
    2. 'max' → logprob: -8.12544059753418
    3. '_min' → logprob: -9.00044059753418
    4. '```' → logprob: -11.50044059753418
    5. '_' → logprob: -13.25044059753418
    6. '-' → logprob: -13.50044059753418
    7. '_re' → logprob: -13.62544059753418
    8. 'Max' → logprob: -14.12544059753418
    9. '#' → logprob: -14.50044059753418
    10. '\' → logprob: -14.50044059753418

Token 2007: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00195384887047112
    2. 'i' → logprob: -6.751954078674316
    3. 're' → logprob: -7.626954078674316
    4. 'reach' → logprob: -8.376954078674316
    5. '[i' → logprob: -10.626954078674316
    6. '_i' → logprob: -12.001954078674316
    7. '                   ' → logprob: -12.501954078674316
    8. '   ' → logprob: -12.751954078674316
    9. ')' → logprob: -12.751954078674316
    10. '(i' → logprob: -13.126954078674316

Token 2008: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.005029290448874235
    2. 'each' → logprob: -5.755029201507568
    3. 'reach' → logprob: -6.380029201507568
    4. 'ch' → logprob: -10.130029678344727
    5. 'ich' → logprob: -10.505029678344727
    6. 'i' → logprob: -10.880029678344727
    7. 'Each' → logprob: -11.380029678344727
    8. 'acht' → logprob: -12.005029678344727
    9. 'ech' → logprob: -12.130029678344727
    10. 'hach' → logprob: -12.505029678344727

Token 2009: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.860340752406046e-05
    2. '[' → logprob: -10.2500581741333
    3. 'i' → logprob: -11.3750581741333
    4. '[j' → logprob: -11.7500581741333
    5. '```' → logprob: -13.7500581741333
    6. '   ' → logprob: -14.2500581741333
    7. '[
' → logprob: -14.6250581741333
    8. '[-' → logprob: -15.0000581741333
    9. '[next' → logprob: -15.5000581741333
    10. '                   ' → logprob: -15.7500581741333

Token 2010: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7792797684669495
    2. ':' → logprob: -1.5292797088623047
    3. ':
' → logprob: -1.7792797088623047
    4. '                   ' → logprob: -2.4042797088623047
    5. ' -' → logprob: -2.9042797088623047
    6. '                       ' → logprob: -5.404279708862305
    7. '):
' → logprob: -6.279279708862305
    8. ',' → logprob: -6.779279708862305
    9. ' :' → logprob: -7.529279708862305
    10. ' :
' → logprob: -7.529279708862305

Token 2011: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7774423360824585
    2. '                   ' → logprob: -0.7774423360824585
    3. '                       ' → logprob: -3.402442455291748
    4. ' :' → logprob: -4.277442455291748
    5. '```' → logprob: -4.402442455291748
    6. ',' → logprob: -4.902442455291748
    7. ':
' → logprob: -5.402442455291748
    8. '-' → logprob: -6.527442455291748
    9. ' ' → logprob: -6.652442455291748
    10. '                    ' → logprob: -6.777442455291748

Token 2012: ' i' (ID: 575)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1358250379562378
    2. '=' → logprob: -2.7608251571655273
    3. ' next' → logprob: -3.8858251571655273
    4. '[next' → logprob: -4.635825157165527
    5. '(next' → logprob: -4.760825157165527
    6. 'min' → logprob: -4.760825157165527
    7. '=min' → logprob: -6.010825157165527
    8. '0' → logprob: -6.010825157165527
    9. '...' → logprob: -6.260825157165527
    10. ' =' → logprob: -6.385825157165527

Token 2013: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2858611047267914
    2. '                       ' → logprob: -2.285861015319824
    3. ':' → logprob: -2.410861015319824
    4. '```' → logprob: -4.035861015319824
    5. ':
' → logprob: -4.285861015319824
    6. ' :' → logprob: -4.410861015319824
    7. ',' → logprob: -6.035861015319824
    8. ' :
' → logprob: -6.285861015319824
    9. '               ' → logprob: -6.535861015319824
    10. '                        
' → logprob: -7.035861015319824

Token 2014: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2273549735546112
    2. '                       ' → logprob: -1.7273550033569336
    3. ':' → logprob: -4.977355003356934
    4. '```' → logprob: -5.102355003356934
    5. ' :' → logprob: -5.727355003356934
    6. '       ' → logprob: -6.102355003356934
    7. '               ' → logprob: -6.602355003356934
    8. '                    ' → logprob: -7.102355003356934
    9. ' ' → logprob: -7.102355003356934
    10. '	' → logprob: -7.727355003356934

Token 2015: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.2960587739944458
    2. '                   ' → logprob: -1.6710587739944458
    3. 'for' → logprob: -3.6710586547851562
    4. '#' → logprob: -4.046058654785156
    5. '```' → logprob: -4.546058654785156
    6. ' from' → logprob: -5.171058654785156
    7. '                       ' → logprob: -6.296058654785156
    8. 'start' → logprob: -6.671058654785156
    9. 'next' → logprob: -6.921058654785156
    10. '               ' → logprob: -7.046058654785156

Token 2016: '_idx' (ID: 15257)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6114308834075928
    2. 'min' → logprob: -1.1114308834075928
    3. 'i' → logprob: -2.2364308834075928
    4. 'next' → logprob: -4.986431121826172
    5. ' min' → logprob: -5.236431121826172
    6. ' max' → logprob: -5.361431121826172
    7. '=' → logprob: -6.986431121826172
    8. ' i' → logprob: -7.361431121826172
    9. '_min' → logprob: -7.736431121826172
    10. '(min' → logprob: -7.986431121826172

Token 2017: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25478991866111755
    2. ' =' → logprob: -1.50478994846344
    3. '=i' → logprob: -6.25478982925415
    4. '=max' → logprob: -7.75478982925415
    5. '=min' → logprob: -7.75478982925415
    6. '                   ' → logprob: -10.504790306091309
    7. '=int' → logprob: -11.879790306091309
    8. 'max' → logprob: -12.004790306091309
    9. ',' → logprob: -12.129790306091309
    10. 'i' → logprob: -12.879790306091309

Token 2018: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19655656814575195
    2. 'next' → logprob: -2.446556568145752
    3. 'max' → logprob: -2.446556568145752
    4. 'i' → logprob: -5.321556568145752
    5. ' min' → logprob: -8.696556091308594
    6. ' next' → logprob: -10.071556091308594
    7. 'direction' → logprob: -10.446556091308594
    8. '(min' → logprob: -10.571556091308594
    9. '(next' → logprob: -10.571556091308594
    10. ' max' → logprob: -11.071556091308594

Token 2019: '(min' (ID: 26035)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.2122417688369751
    2. '(min' → logprob: -1.837241768836975
    3. '(i' → logprob: -3.9622416496276855
    4. '(next' → logprob: -4.5872416496276855
    5. '(max' → logprob: -6.0872416496276855
    6. 're' → logprob: -8.962242126464844
    7. 'reach' → logprob: -9.337242126464844
    8. '(re' → logprob: -9.462242126464844
    9. '(from' → logprob: -9.462242126464844
    10. '_next' → logprob: -10.212242126464844

Token 2020: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.002304412191733718
    2. 'reach' → logprob: -6.127304553985596
    3. 'i' → logprob: -10.127304077148438
    4. 're' → logprob: -10.502304077148438
    5. 'from' → logprob: -11.502304077148438
    6. '(max' → logprob: -11.627304077148438
    7. '(i' → logprob: -11.752304077148438
    8. '(re' → logprob: -12.127304077148438
    9. 'ach' → logprob: -12.252304077148438
    10. 'reachable' → logprob: -12.752304077148438

Token 2021: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.009128909558057785
    2. 'reach' → logprob: -5.009129047393799
    3. 'each' → logprob: -6.759129047393799
    4. '_re' → logprob: -7.509129047393799
    5. 'ch' → logprob: -9.00912857055664
    6. 'arch' → logprob: -9.50912857055664
    7. 'Reach' → logprob: -9.63412857055664
    8. 'atch' → logprob: -10.13412857055664
    9. 'achable' → logprob: -10.50912857055664
    10. 'i' → logprob: -10.57162857055664

Token 2022: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010005383752286434
    2. ' -' → logprob: -4.760005474090576
    3. ',' → logprob: -7.010005474090576
    4. '+' → logprob: -7.760005474090576
    5. ',i' → logprob: -10.260004997253418
    6. 'from' → logprob: -12.885004997253418
    7. '```' → logprob: -13.260004997253418
    8. ' +' → logprob: -13.385004997253418
    9. '()-' → logprob: -13.385004997253418
    10. ',-' → logprob: -13.635004997253418

Token 2023: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003469057264737785
    2. '-' → logprob: -8.000347137451172
    3. '10' → logprob: -13.000347137451172
    4. ' -' → logprob: -13.250347137451172
    5. '```' → logprob: -13.250347137451172
    6. ' ' → logprob: -13.375347137451172
    7. '<|end|>' → logprob: -14.750347137451172
    8. ',' → logprob: -14.750347137451172
    9. 's' → logprob: -15.000347137451172
    10. '+' → logprob: -15.125347137451172

Token 2024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028181221336126328
    2. '-' → logprob: -4.153181076049805
    3. ' -' → logprob: -5.278181076049805
    4. ' ,' → logprob: -6.028181076049805
    5. '+' → logprob: -6.153181076049805
    6. '                   ' → logprob: -6.653181076049805
    7. '```' → logprob: -7.278181076049805
    8. ' +' → logprob: -8.653181076049805
    9. ',
' → logprob: -9.778181076049805
    10. '               ' → logprob: -9.903181076049805

Token 2025: ' i' (ID: 575)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.017733929678797722
    2. ' next' → logprob: -4.142734050750732
    3. 'i' → logprob: -6.517734050750732
    4. '(next' → logprob: -9.767733573913574
    5. '0' → logprob: -10.142733573913574
    6. '   ' → logprob: -10.267733573913574
    7. '[next' → logprob: -10.517733573913574
    8. ' i' → logprob: -11.017733573913574
    9. '	next' → logprob: -11.517733573913574
    10. 'direction' → logprob: -12.392733573913574

Token 2026: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1825561672449112
    2. ' -' → logprob: -1.80755615234375
    3. ')' → logprob: -5.93255615234375
    4. ')-' → logprob: -9.93255615234375
    5. '+' → logprob: -10.68255615234375
    6. ',' → logprob: -11.05755615234375
    7. '                   ' → logprob: -11.55755615234375
    8. '-)' → logprob: -12.05755615234375
    9. '```' → logprob: -12.05755615234375
    10. '-
' → logprob: -12.30755615234375

Token 2027: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021557629224844277
    2. '10' → logprob: -8.750215530395508
    3. 'd' → logprob: -10.000215530395508
    4. ' ' → logprob: -12.500215530395508
    5. 'i' → logprob: -13.500215530395508
    6. 'direction' → logprob: -13.500215530395508
    7. '```' → logprob: -14.000215530395508
    8. '-' → logprob: -14.250215530395508
    9. '0' → logprob: -14.375215530395508
    10. '(' → logprob: -14.500215530395508

Token 2028: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2122185230255127
    2. ')' → logprob: -2.2122185230255127
    3. '-' → logprob: -3.2122185230255127
    4. '                   ' → logprob: -3.8372185230255127
    5. ',' → logprob: -5.212218284606934
    6. ' -' → logprob: -5.712218284606934
    7. '):
' → logprob: -6.087218284606934
    8. '```' → logprob: -6.087218284606934
    9. ')-' → logprob: -6.087218284606934
    10. '+' → logprob: -6.837218284606934

Token 2029: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7571467161178589
    2. '```' → logprob: -1.0071467161178589
    3. '-' → logprob: -3.6321468353271484
    4. ' =' → logprob: -4.007146835327148
    5. '           ' → logprob: -4.507146835327148
    6. '=' → logprob: -4.507146835327148
    7. '+' → logprob: -4.632146835327148
    8. ':
' → logprob: -4.632146835327148
    9. '<|end|>' → logprob: -4.757146835327148
    10. '
' → logprob: -4.882146835327148

Token 2030: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42490842938423157
    2. '```' → logprob: -1.2999083995819092
    3. '               ' → logprob: -4.049908638000488
    4. '                    ' → logprob: -4.299908638000488
    5. ' for' → logprob: -4.924908638000488
    6. 'for' → logprob: -5.049908638000488
    7. ':' → logprob: -5.049908638000488
    8. '                       ' → logprob: -5.549908638000488
    9. '	               ' → logprob: -6.799908638000488
    10. ' :' → logprob: -6.799908638000488

Token 2031: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.06477854400873184
    2. '_max' → logprob: -3.8147785663604736
    3. 'max' → logprob: -4.1897783279418945
    4. 'idx' → logprob: -4.3147783279418945
    5. '=' → logprob: -4.8147783279418945
    6. ' =' → logprob: -6.8147783279418945
    7. 'next' → logprob: -6.9397783279418945
    8. '_next' → logprob: -7.4397783279418945
    9. '_min' → logprob: -8.564778327941895
    10. 'i' → logprob: -8.564778327941895

Token 2032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006864440161734819
    2. ' =' → logprob: -5.006864547729492
    3. '=max' → logprob: -9.631864547729492
    4. ',' → logprob: -10.506864547729492
    5. 'to' → logprob: -11.131864547729492
    6. '=min' → logprob: -11.381864547729492
    7. 'next' → logprob: -11.631864547729492
    8. '=
' → logprob: -12.006864547729492
    9. '=end' → logprob: -13.256864547729492
    10. ' next' → logprob: -13.256864547729492

Token 2033: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0009125363430939615
    2. ' next' → logprob: -7.000912666320801
    3. '[next' → logprob: -14.8759126663208
    4. '	next' → logprob: -15.1259126663208
    5. '(next' → logprob: -15.5009126663208
    6. '   ' → logprob: -16.625911712646484
    7. '0' → logprob: -17.375911712646484
    8. '           ' → logprob: -18.500911712646484
    9. '                   ' → logprob: -18.750911712646484
    10. 'max' → logprob: -18.875911712646484

Token 2034: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00047535591875202954
    2. '_idx' → logprob: -8.00047492980957
    3. 'max' → logprob: -9.12547492980957
    4. '_re' → logprob: -11.00047492980957
    5. '(i' → logprob: -12.12547492980957
    6. 'idx' → logprob: -12.62547492980957
    7. 'Max' → logprob: -13.62547492980957
    8. '_min' → logprob: -14.00047492980957
    9. '(max' → logprob: -14.12547492980957
    10. '_next' → logprob: -14.25047492980957

Token 2035: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.2058267593383789
    2. 'ach' → logprob: -2.080826759338379
    3. 'reach' → logprob: -2.830826759338379
    4. 'ch' → logprob: -7.830826759338379
    5. 're' → logprob: -7.830826759338379
    6. 'max' → logprob: -8.330826759338379
    7. '_max' → logprob: -8.580826759338379
    8. 'atch' → logprob: -9.080826759338379
    9. '_' → logprob: -9.205826759338379
    10. 'each' → logprob: -9.330826759338379

Token 2036: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.01744719222187996
    2. 'each' → logprob: -4.392446994781494
    3. 'reach' → logprob: -5.767446994781494
    4. 'ch' → logprob: -6.892446994781494
    5. '_re' → logprob: -8.267447471618652
    6. '_each' → logprob: -9.017447471618652
    7. 'a' → logprob: -10.142447471618652
    8. '_' → logprob: -10.267447471618652
    9. 'ac' → logprob: -10.517447471618652
    10. 'i' → logprob: -10.517447471618652

Token 2037: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.637786231702194e-05
    2. 'i' → logprob: -9.500086784362793
    3. '[' → logprob: -12.375086784362793
    4. '```' → logprob: -12.875086784362793
    5. ',i' → logprob: -13.375086784362793
    6. '	i' → logprob: -14.250086784362793
    7. ' i' → logprob: -14.625086784362793
    8. ']' → logprob: -14.750086784362793
    9. '(i' → logprob: -14.875086784362793
    10. '<|end|>' → logprob: -15.125086784362793

Token 2038: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9475567936897278
    2. '+' → logprob: -1.322556734085083
    3. ']' → logprob: -1.322556734085083
    4. ']+' → logprob: -3.572556734085083
    5. ')' → logprob: -3.822556734085083
    6. ' -' → logprob: -4.197556972503662
    7. ' +' → logprob: -5.197556972503662
    8. ']-' → logprob: -5.822556972503662
    9. '```' → logprob: -6.322556972503662
    10. ']
' → logprob: -7.197556972503662

Token 2039: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.06891225278377533
    2. '                   ' → logprob: -3.8189122676849365
    3. ':' → logprob: -4.068912029266357
    4. ':
' → logprob: -4.193912029266357
    5. '                       ' → logprob: -5.693912029266357
    6. '-' → logprob: -6.318912029266357
    7. '<|end|>' → logprob: -6.318912029266357
    8. '               ' → logprob: -7.318912029266357
    9. '=' → logprob: -7.818912029266357
    10. '                               ' → logprob: -7.943912029266357

Token 2040: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3461918830871582
    2. 'for' → logprob: -1.3461918830871582
    3. '                   ' → logprob: -1.7211918830871582
    4. '               ' → logprob: -2.596191883087158
    5. '                       ' → logprob: -3.096191883087158
    6. '```' → logprob: -3.221191883087158
    7. 'if' → logprob: -4.221191883087158
    8. '	       ' → logprob: -4.346191883087158
    9. '<|end|>' → logprob: -4.346191883087158
    10. '	               ' → logprob: -4.596191883087158

Token 2041: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37814953923225403
    2. 'j' → logprob: -2.3781495094299316
    3. ' for' → logprob: -2.5031495094299316
    4. '                   ' → logprob: -2.8781495094299316
    5. '```' → logprob: -3.1281495094299316
    6. 'while' → logprob: -4.753149509429932
    7. 'range' → logprob: -4.878149509429932
    8. '               ' → logprob: -5.003149509429932
    9. 'i' → logprob: -5.753149509429932
    10. ' j' → logprob: -5.878149509429932

Token 2042: ' ordre' (ID: 103061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024694276973605156
    2. ' range' → logprob: -4.149694442749023
    3. 'for' → logprob: -4.774694442749023
    4. ' for' → logprob: -9.649694442749023
    5. 're' → logprob: -10.399694442749023
    6. '```' → logprob: -10.899694442749023
    7. '       ' → logprob: -11.399694442749023
    8. '           ' → logprob: -11.649694442749023
    9. 'reverse' → logprob: -11.774694442749023
    10. 'continue' → logprob: -11.899694442749023

Token 2043: ' décro' (ID: 176854)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10716770589351654
    2. 'range' → logprob: -2.8571677207946777
    3. ' for' → logprob: -3.6071677207946777
    4. 'reverse' → logprob: -4.607167720794678
    5. ' range' → logprob: -5.982167720794678
    6. 're' → logprob: -6.732167720794678
    7. '               ' → logprob: -7.357167720794678
    8. ' reverse' → logprob: -7.482167720794678
    9. '   ' → logprob: -7.607167720794678
    10. '           ' → logprob: -7.607167720794678

Token 2044: 'issant' (ID: 31359)
  Prédit: 'chant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chant' → logprob: -0.6341389417648315
    2. 'ch' → logprob: -0.8841389417648315
    3. 'sent' → logprob: -3.384139060974121
    4. 'ss' → logprob: -5.259139060974121
    5. 'chent' → logprob: -5.259139060974121
    6. 'che' → logprob: -5.884139060974121
    7. 'nant' → logprob: -6.009139060974121
    8. 'çant' → logprob: -6.384139060974121
    9. 'ché' → logprob: -6.759139060974121
    10. 'sc' → logprob: -7.134139060974121

Token 2045: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4010453224182129
    2. ' for' → logprob: -1.651045322418213
    3. '                   ' → logprob: -2.026045322418213
    4. 'j' → logprob: -5.776045322418213
    5. '                       ' → logprob: -7.526045322418213
    6. ',' → logprob: -7.776045322418213
    7. '	               ' → logprob: -8.026044845581055
    8. '	for' → logprob: -8.151044845581055
    9. '                    ' → logprob: -8.401044845581055
    10. '               ' → logprob: -8.526044845581055

Token 2046: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.057460132986307144
    2. ' for' → logprob: -3.807460069656372
    3. 'for' → logprob: -4.057460308074951
    4. '```' → logprob: -4.182460308074951
    5. '                    ' → logprob: -7.682460308074951
    6. '                       ' → logprob: -8.182459831237793
    7. '               ' → logprob: -8.932459831237793
    8. ':
' → logprob: -10.682459831237793
    9. '``' → logprob: -10.682459831237793
    10. '                    
' → logprob: -10.807459831237793

Token 2047: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36622366309165955
    2. ' for' → logprob: -1.241223692893982
    3. '                   ' → logprob: -4.4912238121032715
    4. 'range' → logprob: -5.9912238121032715
    5. '```' → logprob: -5.9912238121032715
    6. '                       ' → logprob: -7.8662238121032715
    7. ' range' → logprob: -7.9912238121032715
    8. 'j' → logprob: -8.741223335266113
    9. '                    ' → logprob: -9.116223335266113
    10. '	for' → logprob: -9.491223335266113

Token 2048: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.8087270038668066e-05
    2. ' j' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.125027656555176
    4. '```' → logprob: -16.125028610229492
    5. '	j' → logprob: -17.000028610229492
    6. 'k' → logprob: -17.375028610229492
    7. '       ' → logprob: -18.125028610229492
    8. '               ' → logprob: -18.250028610229492
    9. '                   ' → logprob: -18.375028610229492
    10. '           ' → logprob: -18.625028610229492

Token 2049: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02976333536207676
    2. 'in' → logprob: -3.5297632217407227
    3. 'range' → logprob: -11.904763221740723
    4. 'en' → logprob: -13.654763221740723
    5. ' ' → logprob: -13.779763221740723
    6. ' en' → logprob: -13.904763221740723
    7. ' j' → logprob: -15.154763221740723
    8. 'from' → logprob: -15.154763221740723
    9. ' ' → logprob: -15.279763221740723
    10. '	in' → logprob: -15.404763221740723

Token 2050: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.6100132496794686e-05
    2. 'i' → logprob: -10.500056266784668
    3. ' range' → logprob: -10.625056266784668
    4. 're' → logprob: -12.625056266784668
    5. '   ' → logprob: -15.250056266784668
    6. '(range' → logprob: -15.500056266784668
    7. 'in' → logprob: -15.625056266784668
    8. 'reverse' → logprob: -15.875056266784668
    9. 'from' → logprob: -17.12505531311035
    10. '(i' → logprob: -17.62505531311035

Token 2051: '(from' (ID: 32142)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007854487630538642
    2. 'from' → logprob: -7.3757853507995605
    3. '(i' → logprob: -9.750785827636719
    4. ' i' → logprob: -10.125785827636719
    5. 'j' → logprob: -10.625785827636719
    6. 'to' → logprob: -10.750785827636719
    7. 'min' → logprob: -11.500785827636719
    8. '   ' → logprob: -13.125785827636719
    9. '(from' → logprob: -15.000785827636719
    10. '           ' → logprob: -15.375785827636719

Token 2052: '_idx' (ID: 15257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019185843120794743
    2. ' i' → logprob: -9.375191688537598
    3. 'j' → logprob: -10.375191688537598
    4. 'to' → logprob: -10.375191688537598
    5. '(i' → logprob: -10.750191688537598
    6. '_i' → logprob: -11.750191688537598
    7. '[i' → logprob: -12.625191688537598
    8. 'from' → logprob: -12.750191688537598
    9. 'min' → logprob: -12.875191688537598
    10. '                   ' → logprob: -14.250191688537598

Token 2053: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000683126098010689
    2. ' ,' → logprob: -8.000682830810547
    3. ',j' → logprob: -8.125682830810547
    4. ',to' → logprob: -10.625682830810547
    5. '                   ' → logprob: -12.125682830810547
    6. ',
' → logprob: -12.500682830810547
    7. 'to' → logprob: -12.875682830810547
    8. '-' → logprob: -13.250682830810547
    9. '               ' → logprob: -13.375682830810547
    10. '           ' → logprob: -13.500682830810547

Token 2054: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0003986144147347659
    2. ' to' → logprob: -7.875398635864258
    3. 'next' → logprob: -11.000398635864258
    4. '   ' → logprob: -13.875398635864258
    5. '	to' → logprob: -15.250398635864258
    6. ' next' → logprob: -15.375398635864258
    7. '               ' → logprob: -16.625398635864258
    8. '                   ' → logprob: -16.750398635864258
    9. '  ' → logprob: -17.000398635864258
    10. '(to' → logprob: -17.125398635864258

Token 2055: '_idx' (ID: 15257)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06293114274740219
    2. 'next' → logprob: -2.8129310607910156
    3. '(next' → logprob: -7.812931060791016
    4. ' next' → logprob: -8.687931060791016
    5. ' to' → logprob: -8.812931060791016
    6. 'i' → logprob: -8.812931060791016
    7. '[next' → logprob: -10.937931060791016
    8. '=' → logprob: -11.312931060791016
    9. '_next' → logprob: -11.437931060791016
    10. 'j' → logprob: -11.687931060791016

Token 2056: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2339935302734375
    2. ',' → logprob: -1.6089935302734375
    3. ' -' → logprob: -4.8589935302734375
    4. ',-' → logprob: -8.233993530273438
    5. ',
' → logprob: -8.733993530273438
    6. ' ,' → logprob: -8.733993530273438
    7. '-,' → logprob: -9.358993530273438
    8. '```' → logprob: -10.608993530273438
    9. ',j' → logprob: -11.358993530273438
    10. '+' → logprob: -11.733993530273438

Token 2057: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '-' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. '...' → logprob: -17.125001907348633
    7. '10' → logprob: -18.250001907348633
    8. ' -' → logprob: -18.625001907348633
    9. '  ' → logprob: -18.687501907348633
    10. '0' → logprob: -18.812501907348633

Token 2058: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029349105898290873
    2. ',-' → logprob: -5.87793493270874
    3. '                   ' → logprob: -10.127934455871582
    4. '-' → logprob: -10.377934455871582
    5. ',
' → logprob: -10.627934455871582
    6. '```' → logprob: -11.627934455871582
    7. ' ,' → logprob: -12.127934455871582
    8. ':-' → logprob: -12.627934455871582
    9. '               ' → logprob: -13.377934455871582
    10. '           ' → logprob: -13.627934455871582

Token 2059: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002187376143410802
    2. ' -' → logprob: -6.127187252044678
    3. '                   ' → logprob: -14.002187728881836
    4. '-step' → logprob: -14.752187728881836
    5. '```' → logprob: -14.877187728881836
    6. '   ' → logprob: -15.877187728881836
    7. ' ' → logprob: -16.627187728881836
    8. ',-' → logprob: -16.752187728881836
    9. '-j' → logprob: -16.877187728881836
    10. '           ' → logprob: -17.377187728881836

Token 2060: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -17.5
    4. ')' → logprob: -18.5
    5. '10' → logprob: -19.75
    6. '   ' → logprob: -19.875
    7. '):
' → logprob: -20.5
    8. '۱' → logprob: -20.625
    9. '<|end|>' → logprob: -20.625
    10. '           ' → logprob: -21.0

Token 2061: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030233588069677353
    2. '):' → logprob: -3.65523362159729
    3. ':' → logprob: -6.155233383178711
    4. '                       ' → logprob: -7.405233383178711
    5. ':
' → logprob: -7.655233383178711
    6. '                   ' → logprob: -8.405233383178711
    7. ')' → logprob: -9.405233383178711
    8. '                           ' → logprob: -9.530233383178711
    9. '):
' → logprob: -9.905233383178711
    10. ' :' → logprob: -10.030233383178711

Token 2062: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012652091681957245
    2. '                           ' → logprob: -5.3876519203186035
    3. '                        ' → logprob: -5.6376519203186035
    4. '<|end|>' → logprob: -6.3876519203186035
    5. '                        
' → logprob: -7.5126519203186035
    6. '                               ' → logprob: -7.6376519203186035
    7. '                   ' → logprob: -8.012652397155762
    8. '	                       ' → logprob: -8.137652397155762
    9. '	                   ' → logprob: -8.387652397155762
    10. ' if' → logprob: -8.637652397155762

Token 2063: ' distance' (ID: 9324)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8035371899604797
    2. 'distance' (adapté à ' distance') → logprob: -1.053537130355835
    3. '10' → logprob: -1.928537130355835
    4. ' ' → logprob: -3.678537130355835
    5. ' if' → logprob: -4.553537368774414
    6. ' distance' → logprob: -5.178537368774414
    7. 'if' → logprob: -5.178537368774414
    8. '                               ' → logprob: -5.678537368774414
    9. '                            ' → logprob: -6.678537368774414
    10. '                       ' → logprob: -6.678537368774414

Token 2064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151231110095978
    2. '=' → logprob: -4.01815128326416
    3. ')' → logprob: -14.76815128326416
    4. ' ' → logprob: -15.14315128326416
    5. ' ' → logprob: -15.64315128326416
    6. '                        ' → logprob: -16.018150329589844
    7. '<|end|>' → logprob: -16.643150329589844
    8. '```' → logprob: -16.893150329589844
    9. ' =
' → logprob: -17.018150329589844
    10. '                           ' → logprob: -17.268150329589844

Token 2065: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03804252669215202
    2. ' ' → logprob: -3.2880425453186035
    3. '```' → logprob: -15.413042068481445
    4. '                           ' → logprob: -16.163042068481445
    5. '                               ' → logprob: -16.288042068481445
    6. '                        ' → logprob: -16.788042068481445
    7. '                            ' → logprob: -16.788042068481445
    8. '   ' → logprob: -16.913042068481445
    9. '0' → logprob: -17.163042068481445
    10. ' ' → logprob: -17.288042068481445

Token 2066: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0017037445213645697
    2. ' ' → logprob: -6.37670373916626
    3. '                               ' → logprob: -15.251704216003418
    4. '                       ' → logprob: -15.376704216003418
    5. '                           ' → logprob: -15.501704216003418
    6. '0' → logprob: -15.626704216003418
    7. '   ' → logprob: -15.876704216003418
    8. '                   ' → logprob: -16.5017032623291
    9. '           ' → logprob: -16.6267032623291
    10. '                        ' → logprob: -16.8767032623291

Token 2067: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19696585834026337
    2. ' *' → logprob: -1.8219658136367798
    3. '*(' → logprob: -4.07196569442749
    4. '*j' → logprob: -10.946966171264648
    5. '                       ' → logprob: -11.821966171264648
    6. '	' → logprob: -13.821966171264648
    7. '                        ' → logprob: -13.946966171264648
    8. ' *(' → logprob: -14.446966171264648
    9. '					' → logprob: -14.696966171264648
    10. '*((' → logprob: -14.696966171264648

Token 2068: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002204262651503086
    2. '(abs' → logprob: -6.377204418182373
    3. ' (' → logprob: -8.002203941345215
    4. '(j' → logprob: -9.127203941345215
    5. 'abs' → logprob: -10.127203941345215
    6. '(' → logprob: -11.252203941345215
    7. ' abs' → logprob: -12.752203941345215
    8. '(ii' → logprob: -14.252203941345215
    9. '(I' → logprob: -14.752203941345215
    10. '[i' → logprob: -15.127203941345215

Token 2069: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19703897833824158
    2. '(i' → logprob: -1.822039008140564
    3. 'abs' → logprob: -4.5720391273498535
    4. ' i' → logprob: -5.6970391273498535
    5. ' (' → logprob: -6.3220391273498535
    6. '(abs' → logprob: -7.1970391273498535
    7. '(' → logprob: -8.072038650512695
    8. 'j' → logprob: -8.197038650512695
    9. ' abs' → logprob: -8.822038650512695
    10. '(j' → logprob: -9.697038650512695

Token 2070: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3887190520763397
    2. ' -' → logprob: -1.138719081878662
    3. '-j' → logprob: -6.513719081878662
    4. '<|end|>' → logprob: -8.513718605041504
    5. ' ' → logprob: -10.013718605041504
    6. ')' → logprob: -10.013718605041504
    7. '–' → logprob: -10.763718605041504
    8. '<|end|>' → logprob: -12.013718605041504
    9. '—' → logprob: -12.138718605041504
    10. '-token' → logprob: -12.388718605041504

Token 2071: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015860427811276168
    2. ' j' → logprob: -8.750158309936523
    3. '                       ' → logprob: -16.625158309936523
    4. '	j' → logprob: -17.250158309936523
    5. '[j' → logprob: -17.750158309936523
    6. '                           ' → logprob: -17.750158309936523
    7. '   ' → logprob: -17.875158309936523
    8. '$j' → logprob: -18.625158309936523
    9. ')' → logprob: -18.875158309936523
    10. ' ' → logprob: -20.000158309936523

Token 2072: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14468209445476532
    2. ')' → logprob: -2.0196821689605713
    3. '                       ' → logprob: -6.894681930541992
    4. '):
' → logprob: -7.019681930541992
    5. ')
' → logprob: -10.019681930541992
    6. ' )
' → logprob: -10.519681930541992
    7. '```' → logprob: -12.269681930541992
    8. ' )' → logprob: -12.644681930541992
    9. ')

' → logprob: -12.769681930541992
    10. '                           ' → logprob: -13.019681930541992

Token 2073: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.025874532759189606
    2. '<|end|>' → logprob: -4.525874614715576
    3. '                        ' → logprob: -5.150874614715576
    4. '```' → logprob: -5.275874614715576
    5. '                           ' → logprob: -6.650874614715576
    6. ' if' → logprob: -7.025874614715576
    7. '                        
' → logprob: -7.150874614715576
    8. 'if' → logprob: -8.775874137878418
    9. '           ' → logprob: -9.400874137878418
    10. '                         ' → logprob: -9.650874137878418

Token 2074: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11371037364006042
    2. ' if' → logprob: -2.238710403442383
    3. '                           ' → logprob: -7.363710403442383
    4. '                       ' → logprob: -8.738710403442383
    5. '```' → logprob: -9.613710403442383
    6. '	if' → logprob: -11.863710403442383
    7. '<|end|>' → logprob: -11.863710403442383
    8. '                               ' → logprob: -12.613710403442383
    9. '           ' → logprob: -13.488710403442383
    10. ' ' → logprob: -13.613710403442383

Token 2075: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.014187362976372242
    2. ' distance' → logprob: -4.264187335968018
    3. 'd' → logprob: -11.264187812805176
    4. '                           ' → logprob: -12.264187812805176
    5. '(distance' → logprob: -12.514187812805176
    6. '10' → logprob: -13.639187812805176
    7. '                               ' → logprob: -14.639187812805176
    8. '```' → logprob: -15.389187812805176
    9. 'j' → logprob: -15.764187812805176
    10. ' d' → logprob: -16.13918685913086

Token 2076: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04859338700771332
    2. '<=' → logprob: -3.048593282699585
    3. '                        ' → logprob: -13.298593521118164
    4. '                       ' → logprob: -13.798593521118164
    5. '```' → logprob: -13.798593521118164
    6. '                           ' → logprob: -14.423593521118164
    7. ')<=' → logprob: -14.423593521118164
    8. '                          ' → logprob: -15.548593521118164
    9. '                            ' → logprob: -15.798593521118164
    10. ')' → logprob: -16.048593521118164

Token 2077: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10021109133958817
    2. ' d' → logprob: -2.3502111434936523
    3. '```' → logprob: -13.850211143493652
    4. ' ' → logprob: -13.975211143493652
    5. '   ' → logprob: -14.475211143493652
    6. ' ' → logprob: -15.100211143493652
    7. '           ' → logprob: -15.225211143493652
    8. '	d' → logprob: -15.350211143493652
    9. '       ' → logprob: -15.475211143493652
    10. '    ' → logprob: -15.725211143493652

Token 2078: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0021893989760428667
    2. 'j' → logprob: -6.127189636230469
    3. '[i' → logprob: -13.252189636230469
    4. '[' → logprob: -13.502189636230469
    5. ' [' → logprob: -15.127189636230469
    6. '```' → logprob: -15.127189636230469
    7. '	j' → logprob: -16.37718963623047
    8. ' j' → logprob: -16.37718963623047
    9. '   ' → logprob: -16.62718963623047
    10. '[
' → logprob: -16.75218963623047

Token 2079: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5993893146514893
    2. '):
' → logprob: -0.9743893146514893
    3. '                           ' → logprob: -3.5993893146514893
    4. ']:' → logprob: -3.7243893146514893
    5. '):' → logprob: -4.97438907623291
    6. ']):
' → logprob: -4.97438907623291
    7. '                       ' → logprob: -5.47438907623291
    8. ']' → logprob: -6.47438907623291
    9. ']):' → logprob: -7.47438907623291
    10. ':
' → logprob: -8.22438907623291

Token 2080: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0017709736712276936
    2. ':' → logprob: -7.626770973205566
    3. '                       ' → logprob: -7.751770973205566
    4. ':
' → logprob: -8.376770973205566
    5. '                               ' → logprob: -8.626770973205566
    6. '                            ' → logprob: -9.251770973205566
    7. '<|end|>' → logprob: -9.751770973205566
    8. '```' → logprob: -9.751770973205566
    9. '):
' → logprob: -9.876770973205566
    10. '           ' → logprob: -10.376770973205566

Token 2081: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7353852987289429
    2. 'reachable' → logprob: -1.3603852987289429
    3. '                           ' → logprob: -1.9853852987289429
    4. ' if' → logprob: -2.7353854179382324
    5. 'if' (adapté à ' if') → logprob: -3.3603854179382324
    6. ' reachable' → logprob: -3.8603854179382324
    7. '```' → logprob: -5.985385417938232
    8. '                                   ' → logprob: -7.110385417938232
    9. '                       ' → logprob: -7.610385417938232
    10. '                            ' → logprob: -7.860385417938232

Token 2082: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3132631778717041
    2. ' not' → logprob: -1.313263177871704
    3. '	not' → logprob: -14.438262939453125
    4. '(not' → logprob: -14.938262939453125
    5. ' ' → logprob: -15.813262939453125
    6. '!' → logprob: -16.313262939453125
    7. 'j' → logprob: -16.313262939453125
    8. '                           ' → logprob: -16.563262939453125
    9. '                               ' → logprob: -16.688262939453125
    10. 'True' → logprob: -17.188262939453125

Token 2083: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.03365619108080864
    2. ' reachable' → logprob: -3.408656120300293
    3. 'reach' → logprob: -12.533656120300293
    4. 'ready' → logprob: -13.658656120300293
    5. '```' → logprob: -13.783656120300293
    6. ' ' → logprob: -13.908656120300293
    7. '                           ' → logprob: -13.908656120300293
    8. '                       ' → logprob: -14.033656120300293
    9. 'visible' → logprob: -15.533656120300293
    10. '                               ' → logprob: -15.658656120300293

Token 2084: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.000006675720215
    3. 'j' → logprob: -14.125006675720215
    4. ' [' → logprob: -16.25000762939453
    5. '```' → logprob: -17.12500762939453
    6. '[
' → logprob: -17.37500762939453
    7. '[i' → logprob: -18.12500762939453
    8. '                           ' → logprob: -18.25000762939453
    9. '_j' → logprob: -19.00000762939453
    10. '(j' → logprob: -19.12500762939453

Token 2085: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.01252296008169651
    2. '                               ' → logprob: -5.012523174285889
    3. '):
' → logprob: -6.012523174285889
    4. ']:' → logprob: -6.137523174285889
    5. '                           ' → logprob: -7.887523174285889
    6. '']:
' → logprob: -8.51252269744873
    7. '"]:
' → logprob: -9.01252269744873
    8. '[j' → logprob: -9.13752269744873
    9. ']' → logprob: -9.51252269744873
    10. '():
' → logprob: -9.88752269744873

Token 2086: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0067310030572116375
    2. '```' → logprob: -5.256731033325195
    3. '<|end|>' → logprob: -7.131731033325195
    4. '                           ' → logprob: -7.631731033325195
    5. '                                ' → logprob: -10.256731033325195
    6. '                            ' → logprob: -10.381731033325195
    7. '                                
' → logprob: -10.631731033325195
    8. ' ' → logprob: -10.631731033325195
    9. '                       ' → logprob: -10.881731033325195
    10. '``' → logprob: -11.131731033325195

Token 2087: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.7789345383644104
    2. '                               ' → logprob: -1.2789344787597656
    3. ' reachable' → logprob: -1.4039344787597656
    4. '```' → logprob: -4.403934478759766
    5. '                           ' → logprob: -6.153934478759766
    6. '                                   ' → logprob: -7.028934478759766
    7. '``' → logprob: -7.278934478759766
    8. ' ' → logprob: -8.153934478759766
    9. '                                ' → logprob: -8.528934478759766
    10. '                       ' → logprob: -9.028934478759766

Token 2088: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.36574100604048e-06
    2. ' [' → logprob: -13.250004768371582
    3. '[' → logprob: -13.750004768371582
    4. '                           ' → logprob: -14.375004768371582
    5. 'j' → logprob: -15.250004768371582
    6. '```' → logprob: -15.250004768371582
    7. '                               ' → logprob: -15.875004768371582
    8. '[
' → logprob: -16.250003814697266
    9. '                       ' → logprob: -16.375003814697266
    10. '                                   ' → logprob: -17.375003814697266

Token 2089: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04981448873877525
    2. '[j' → logprob: -3.174814462661743
    3. ']=' → logprob: -5.049814701080322
    4. '                               ' → logprob: -8.424814224243164
    5. '                           ' → logprob: -9.799814224243164
    6. ' ]' → logprob: -10.299814224243164
    7. '=' → logprob: -10.424814224243164
    8. '[' → logprob: -11.674814224243164
    9. '                                   ' → logprob: -11.924814224243164
    10. '']' → logprob: -12.424814224243164

Token 2090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871181011199951
    2. ' =' → logprob: -1.1371181011199951
    3. '                               ' → logprob: -8.887118339538574
    4. '=True' → logprob: -9.262118339538574
    5. '                                   ' → logprob: -12.387118339538574
    6. '[' → logprob: -12.512118339538574
    7. '                                ' → logprob: -13.512118339538574
    8. '=
' → logprob: -13.637118339538574
    9. '=False' → logprob: -14.137118339538574
    10. '                           ' → logprob: -14.262118339538574

Token 2091: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -17.00247573852539
    4. '=True' → logprob: -17.12747573852539
    5. '                               ' → logprob: -20.62747573852539
    6. 'true' → logprob: -20.87747573852539
    7. '1' → logprob: -21.12747573852539
    8. 'False' → logprob: -21.37747573852539
    9. '[' → logprob: -21.50247573852539
    10. '                           ' → logprob: -21.62747573852539

Token 2092: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.01008446142077446
    2. '```' → logprob: -5.135084629058838
    3. '                                ' → logprob: -6.260084629058838
    4. '                                   ' → logprob: -6.510084629058838
    5. '                           ' → logprob: -8.51008415222168
    6. '``' → logprob: -9.13508415222168
    7. '                                
' → logprob: -9.13508415222168
    8. '                                       ' → logprob: -9.51008415222168
    9. '                              ' → logprob: -9.88508415222168
    10. '                                 ' → logprob: -10.26008415222168

Token 2093: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.019062867388129234
    2. '```' → logprob: -4.6440629959106445
    3. '<|end|>' → logprob: -6.1440629959106445
    4. '                                ' → logprob: -6.2690629959106445
    5. '                                
' → logprob: -6.5190629959106445
    6. '                                   ' → logprob: -7.1440629959106445
    7. '``' → logprob: -7.5190629959106445
    8. '                           ' → logprob: -7.6440629959106445
    9. ' ' → logprob: -8.019062995910645
    10. '\
' → logprob: -8.144062995910645

Token 2094: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0002116462419508025
    2. ' min' → logprob: -8.500211715698242
    3. '                               ' → logprob: -11.875211715698242
    4. '                                   ' → logprob: -14.250211715698242
    5. 'if' → logprob: -14.625211715698242
    6. '                           ' → logprob: -16.625211715698242
    7. 'max' → logprob: -17.250211715698242
    8. '
' → logprob: -17.375211715698242
    9. '```' → logprob: -18.000211715698242
    10. '                                ' → logprob: -18.625211715698242

Token 2095: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.2664456789934775e-06
    2. 're' → logprob: -14.125000953674316
    3. 'reach' → logprob: -15.250000953674316
    4. '\' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'min' → logprob: -17.375001907348633
    7. '_min' → logprob: -17.750001907348633
    8. 'Reach' → logprob: -17.750001907348633
    9. 'reachable' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633

Token 2096: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00272522890008986
    2. 'reach' → logprob: -6.127725124359131
    3. '_re' → logprob: -7.752725124359131
    4. 'each' → logprob: -9.627725601196289
    5. 'ch' → logprob: -10.627725601196289
    6. 're' → logprob: -12.002725601196289
    7. '_' → logprob: -12.752725601196289
    8. 'atch' → logprob: -13.502725601196289
    9. 'Reach' → logprob: -13.627725601196289
    10. ' reach' → logprob: -14.002725601196289

Token 2097: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889385521411896
    2. ' =' → logprob: -2.5788938999176025
    3. '=min' → logprob: -12.703893661499023
    4. '=j' → logprob: -14.453893661499023
    5. '=max' → logprob: -15.203893661499023
    6. '   ' → logprob: -16.078893661499023
    7. '```' → logprob: -16.953893661499023
    8. '=int' → logprob: -17.328893661499023
    9. '=
' → logprob: -17.578893661499023
    10. '                           ' → logprob: -17.703893661499023

Token 2098: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23600523173809052
    2. 'j' → logprob: -2.2360053062438965
    3. ' min' → logprob: -2.3610053062438965
    4. 'max' → logprob: -5.3610053062438965
    5. ' j' → logprob: -5.4860053062438965
    6. ' max' → logprob: -8.736004829406738
    7. '   ' → logprob: -12.611004829406738
    8. '	min' → logprob: -12.611004829406738
    9. '	j' → logprob: -12.986004829406738
    10. ' ' → logprob: -14.486004829406738

Token 2099: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.005261629819869995
    2. 'min' → logprob: -5.255261421203613
    3. '(j' → logprob: -10.755261421203613
    4. '(' → logprob: -12.755261421203613
    5. ' min' → logprob: -13.880261421203613
    6. '(max' → logprob: -14.880261421203613
    7. '(
' → logprob: -14.880261421203613
    8. 'reachable' → logprob: -14.880261421203613
    9. '	min' → logprob: -15.255261421203613
    10. '(re' → logprob: -15.380261421203613

Token 2100: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00018852073117159307
    2. 'reach' → logprob: -9.000188827514648
    3. 're' → logprob: -10.000188827514648
    4. '(j' → logprob: -12.625188827514648
    5. 'reachable' → logprob: -12.750188827514648
    6. '(re' → logprob: -12.750188827514648
    7. '(min' → logprob: -13.250188827514648
    8. 'Reach' → logprob: -13.375188827514648
    9. 'j' → logprob: -14.000188827514648
    10. '_j' → logprob: -14.125188827514648

Token 2101: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.007034562528133392
    2. '_re' → logprob: -5.132034778594971
    3. 'reach' → logprob: -7.882034778594971
    4. 'each' → logprob: -8.382034301757812
    5. '_' → logprob: -9.382034301757812
    6. 'ch' → logprob: -9.507034301757812
    7. 'acht' → logprob: -9.882034301757812
    8. 'Reach' → logprob: -9.882034301757812
    9. '_ch' → logprob: -10.632034301757812
    10. 'ac' → logprob: -11.007034301757812

Token 2102: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.42992424964904785
    2. ',' → logprob: -1.0549242496490479
    3. ' ,' → logprob: -7.054924011230469
    4. '                               ' → logprob: -8.554924011230469
    5. '[j' → logprob: -9.429924011230469
    6. 'j' → logprob: -11.054924011230469
    7. ' -' → logprob: -11.554924011230469
    8. '                                   ' → logprob: -11.554924011230469
    9. '                           ' → logprob: -11.679924011230469
    10. '-' → logprob: -11.929924011230469

Token 2103: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.517272024415433e-05
    2. ' j' → logprob: -9.500075340270996
    3. '                               ' → logprob: -15.625075340270996
    4. '                                   ' → logprob: -17.00007438659668
    5. '                           ' → logprob: -17.12507438659668
    6. '	j' → logprob: -18.75007438659668
    7. '   ' → logprob: -18.87507438659668
    8. '$j' → logprob: -19.50007438659668
    9. '                                       ' → logprob: -20.00007438659668
    10. '                            ' → logprob: -20.37507438659668

Token 2104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07048773020505905
    2. ')
' → logprob: -2.6954877376556396
    3. '                           ' → logprob: -7.9454874992370605
    4. '                               ' → logprob: -9.320487976074219
    5. '                       ' → logprob: -9.695487976074219
    6. '```' → logprob: -11.695487976074219
    7. '               ' → logprob: -12.070487976074219
    8. '           ' → logprob: -12.195487976074219
    9. '<|end|>' → logprob: -12.445487976074219
    10. '):
' → logprob: -12.570487976074219

Token 2105: '                       ' (ID: 968)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0721570253372192
    2. '                               ' → logprob: -1.1971570253372192
    3. '                           ' → logprob: -1.4471570253372192
    4. '<|end|>' → logprob: -2.4471569061279297
    5. '                       ' → logprob: -4.19715690612793
    6. '               ' → logprob: -5.94715690612793
    7. '```' → logprob: -5.94715690612793
    8. '                            ' → logprob: -5.94715690612793
    9. '                                ' → logprob: -6.19715690612793
    10. '                   ' → logprob: -6.57215690612793

Token 2106: ' else' (ID: 1203)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8224561810493469
    2. '               ' → logprob: -1.3224561214447021
    3. ')' → logprob: -2.322456121444702
    4. '                   ' → logprob: -2.697456121444702
    5. '                               ' → logprob: -2.947456121444702
    6. '           ' → logprob: -3.822456121444702
    7. '<|end|>' → logprob: -3.947456121444702
    8. '                       ' → logprob: -4.072456359863281
    9. '```' → logprob: -5.822456359863281
    10. '                ' → logprob: -6.072456359863281

Token 2107: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3431704044342041
    2. ':' → logprob: -1.343170404434204
    3. ' :' → logprob: -4.718170166015625
    4. ':
' → logprob: -4.718170166015625
    5. '                            ' → logprob: -5.343170166015625
    6. '                               ' → logprob: -5.718170166015625
    7. '<|end|>' → logprob: -6.718170166015625
    8. '                       ' → logprob: -7.218170166015625
    9. '                          ' → logprob: -8.468170166015625
    10. ' :
' → logprob: -8.468170166015625

Token 2108: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4256228804588318
    2. '                            ' → logprob: -1.1756229400634766
    3. '                             ' → logprob: -4.300622940063477
    4. '                               ' → logprob: -4.300622940063477
    5. '                        ' → logprob: -6.675622940063477
    6. '```' → logprob: -6.675622940063477
    7. '                            
' → logprob: -6.925622940063477
    8. ' :' → logprob: -6.925622940063477
    9. ' ' → logprob: -7.050622940063477
    10. ':' → logprob: -7.050622940063477

Token 2109: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0232712030410767
    2. ' pass' → logprob: -1.3982712030410767
    3. '                           ' → logprob: -1.5232712030410767
    4. '                               ' → logprob: -2.023271083831787
    5. 'continue' → logprob: -4.023271083831787
    6. '                            ' → logprob: -4.898271083831787
    7. '```' → logprob: -4.898271083831787
    8. 'pass' → logprob: -5.523271083831787
    9. ' ' → logprob: -6.648271083831787
    10. '                                   ' → logprob: -6.648271083831787

Token 2110: ' Même' (ID: 89628)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.21321362257003784
    2. ' continue' → logprob: -2.2132136821746826
    3. 'pass' → logprob: -3.4632136821746826
    4. 'continue' → logprob: -3.5882136821746826
    5. '                           ' → logprob: -4.3382134437561035
    6. '                               ' → logprob: -5.2132134437561035
    7. ')' → logprob: -5.8382134437561035
    8. '```' → logprob: -6.8382134437561035
    9. ' ' → logprob: -7.9632134437561035
    10. '                            ' → logprob: -8.213213920593262

Token 2111: ' rais' (ID: 8690)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3457041084766388
    2. '<|end|>' → logprob: -1.8457040786743164
    3. 'continue' → logprob: -2.3457040786743164
    4. ' pass' → logprob: -4.595704078674316
    5. '<|end|>' → logprob: -5.345704078674316
    6. ')' → logprob: -5.470704078674316
    7. '                           ' → logprob: -5.970704078674316
    8. ' continue' → logprob: -6.470704078674316
    9. '#' → logprob: -6.720704078674316
    10. '
' → logprob: -6.845704078674316

Token 2112: 'onnement' (ID: 52552)
  Prédit: 'son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'son' → logprob: -0.43250390887260437
    2. 'ons' → logprob: -1.9325039386749268
    3. '#' → logprob: -2.8075039386749268
    4. 'sons' → logprob: -2.9325039386749268
    5. 'ponse' → logprob: -3.4325039386749268
    6. 'on' → logprob: -3.5575039386749268
    7. 'çon' → logprob: -4.807503700256348
    8. 'onnement' → logprob: -5.057503700256348
    9. 'lon' → logprob: -6.182503700256348
    10. 'ont' → logprob: -6.307503700256348

Token 2113: ' que' (ID: 661)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7582733631134033
    2. '                           ' → logprob: -1.0082733631134033
    3. ' pass' → logprob: -2.6332733631134033
    4. 'continue' → logprob: -3.0082733631134033
    5. '<|end|>' → logprob: -4.133273124694824
    6. ' continues' → logprob: -4.508273124694824
    7. '                               ' → logprob: -5.258273124694824
    8. 'pass' → logprob: -5.758273124694824
    9. ':' → logprob: -6.133273124694824
    10. '                            ' → logprob: -6.383273124694824

Token 2114: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6698610782623291
    2. 'j' → logprob: -1.919861078262329
    3. 'plus' → logprob: -2.169861078262329
    4. 'above' → logprob: -2.794861078262329
    5. 'pass' → logprob: -3.044861078262329
    6. 'pour' → logprob: -3.294861078262329
    7. 'ci' → logprob: -3.919861078262329
    8. 'avant' → logprob: -4.04486083984375
    9. 'before' → logprob: -4.54486083984375
    10. 'previous' → logprob: -4.66986083984375

Token 2115: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013346440391615033
    2. ' j' → logprob: -6.7513346672058105
    3. '```' → logprob: -10.001334190368652
    4. 'reachable' → logprob: -10.126334190368652
    5. '[j' → logprob: -11.376334190368652
    6. 'd' → logprob: -11.751334190368652
    7. '       ' → logprob: -12.251334190368652
    8. ')' → logprob: -12.376334190368652
    9. 'next' → logprob: -12.501334190368652
    10. '                   ' → logprob: -12.501334190368652

Token 2116: ''aller' (ID: 153207)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5161329507827759
    2. 'j' → logprob: -1.3911329507827759
    3. 'continue' → logprob: -3.0161328315734863
    4. ''autre' → logprob: -4.016132831573486
    5. 'reachable' → logprob: -4.016132831573486
    6. 'if' → logprob: -4.391132831573486
    7. ' précédent' → logprob: -4.641132831573486
    8. 'pr' → logprob: -4.641132831573486
    9. 'previous' → logprob: -4.766132831573486
    10. 'elif' → logprob: -5.766132831573486

Token 2117: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5384778380393982
    2. ')' → logprob: -1.038477897644043
    3. '<|end|>' → logprob: -4.038477897644043
    4. '                               ' → logprob: -4.288477897644043
    5. ' pass' → logprob: -5.038477897644043
    6. ' )' → logprob: -5.038477897644043
    7. ' continue' → logprob: -5.538477897644043
    8. '                            ' → logprob: -6.163477897644043
    9. '                       ' → logprob: -6.413477897644043
    10. '):' → logprob: -6.413477897644043

Token 2118: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09418059885501862
    2. '                               ' → logprob: -2.9691805839538574
    3. '                            ' → logprob: -3.5941805839538574
    4. '```' → logprob: -5.219180583953857
    5. ' pass' → logprob: -7.094180583953857
    6. ' ' → logprob: -7.219180583953857
    7. ' continue' → logprob: -7.344180583953857
    8. ')' → logprob: -7.719180583953857
    9. '                             ' → logprob: -7.719180583953857
    10. '<|end|>' → logprob: -7.719180583953857

Token 2119: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.03239557892084122
    2. '                               ' → logprob: -4.282395362854004
    3. '                           ' → logprob: -5.032395362854004
    4. 'pass' (adapté à ' pass') → logprob: -5.157395362854004
    5. ' continue' → logprob: -5.282395362854004
    6. 'continue' → logprob: -8.282395362854004
    7. ' ' → logprob: -8.532395362854004
    8. '                            ' → logprob: -9.032395362854004
    9. '                             ' → logprob: -9.907395362854004
    10. '           ' → logprob: -10.907395362854004

Token 2120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2121: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3354873657226562
    2. '                           ' → logprob: -1.4604873657226562
    3. '                       ' → logprob: -1.8354873657226562
    4. ')' → logprob: -2.2104873657226562
    5. '<|end|>' → logprob: -2.3354873657226562
    6. '                               ' → logprob: -2.8354873657226562
    7. '               ' → logprob: -3.5854873657226562
    8. '                   ' → logprob: -4.210487365722656
    9. '                        ' → logprob: -4.460487365722656
    10. '                            ' → logprob: -4.960487365722656

Token 2122: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021586354821920395
    2. '                   ' → logprob: -4.5215864181518555
    3. '```' → logprob: -5.5215864181518555
    4. '           ' → logprob: -6.1465864181518555
    5. '       ' → logprob: -6.7715864181518555
    6. 'i' (adapté à ' i') → logprob: -7.2715864181518555
    7. '                       ' → logprob: -7.2715864181518555
    8. '                               ' → logprob: -7.5215864181518555
    9. '   ' → logprob: -8.146586418151855
    10. ' i' → logprob: -8.271586418151855

Token 2123: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.18206365406513214
    2. '-=' → logprob: -1.8070636987686157
    3. '+=' → logprob: -6.682063579559326
    4. ' +=' → logprob: -7.057063579559326
    5. '-' → logprob: -9.057064056396484
    6. '=' → logprob: -10.307064056396484
    7. '   ' → logprob: -11.182064056396484
    8. ' -' → logprob: -11.807064056396484
    9. ' ' → logprob: -11.932064056396484
    10. ' ' → logprob: -12.307064056396484

Token 2124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -18.625
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -21.0
    6. '0' → logprob: -21.625
    7. '۱' → logprob: -21.875
    8. '१' → logprob: -22.125
    9. '１' → logprob: -22.25
    10. '<|end|>' → logprob: -22.5

Token 2125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.125001907348633
    4. '<|end|>' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '۱' → logprob: -20.750001907348633
    7. '１' → logprob: -21.250001907348633
    8. '       ' → logprob: -21.312501907348633
    9. '0' → logprob: -21.437501907348633
    10. '१' → logprob: -21.500001907348633

Token 2126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2772577106952667
    2. '           ' → logprob: -1.6522576808929443
    3. '<|end|>' → logprob: -3.9022576808929443
    4. '
' → logprob: -4.652257919311523
    5. '        
' → logprob: -5.027257919311523
    6. '   ' → logprob: -5.527257919311523
    7. '```' → logprob: -5.902257919311523
    8. 'return' → logprob: -6.402257919311523
    9. '            
' → logprob: -6.402257919311523
    10. '    
' → logprob: -6.777257919311523

Token 2127: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14254428446292877
    2. '           ' → logprob: -2.1425442695617676
    3. '
' → logprob: -4.767544269561768
    4. '        
' → logprob: -5.767544269561768
    5. '```' → logprob: -6.267544269561768
    6. '               ' → logprob: -7.017544269561768
    7. '<|end|>' → logprob: -8.017544746398926
    8. '   ' → logprob: -8.142544746398926
    9. '            
' → logprob: -8.392544746398926
    10. 'return' → logprob: -9.017544746398926

Token 2128: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28816157579421997
    2. 'return' (adapté à ' return') → logprob: -1.7881615161895752
    3. '
' → logprob: -2.913161516189575
    4. '           ' → logprob: -4.413161754608154
    5. '```' → logprob: -4.788161754608154
    6. '   ' → logprob: -5.413161754608154
    7. ' return' → logprob: -5.913161754608154
    8. '        
' → logprob: -7.663161754608154
    9. '    
' → logprob: -8.163161277770996
    10. '               ' → logprob: -8.788161277770996

Token 2129: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.00027337539358995855
    2. ' reachable' → logprob: -8.250273704528809
    3. '   ' → logprob: -11.875273704528809
    4. 'reach' → logprob: -13.250273704528809
    5. 'ready' → logprob: -14.625273704528809
    6. ' ' → logprob: -14.625273704528809
    7. 'bool' → logprob: -14.625273704528809
    8. '```' → logprob: -15.250273704528809
    9. '       ' → logprob: -15.375273704528809
    10. '     ' → logprob: -15.375273704528809

Token 2130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008709948509931564
    2. '[N' → logprob: -4.758709907531738
    3. 'goal' → logprob: -10.633709907531738
    4. ' [' → logprob: -11.008709907531738
    5. '[start' → logprob: -11.133709907531738
    6. '(goal' → logprob: -11.383709907531738
    7. ' ' → logprob: -11.883709907531738
    8. '[user' → logprob: -12.258709907531738
    9. '[target' → logprob: -12.258709907531738
    10. 'True' → logprob: -12.508709907531738

Token 2131: 'goal' (ID: 47313)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2694714367389679
    2. 'goal' → logprob: -2.0194714069366455
    3. 'start' → logprob: -2.2694714069366455
    4. ' ' → logprob: -9.894471168518066
    5. ' goal' → logprob: -10.519471168518066
    6. ' start' → logprob: -10.769471168518066
    7. '   ' → logprob: -11.644471168518066
    8. 'Goal' → logprob: -13.144471168518066
    9. '(goal' → logprob: -13.144471168518066
    10. '[start' → logprob: -13.394471168518066

Token 2132: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01037166640162468
    2. ']' → logprob: -5.010371685028076
    3. '<|end|>' → logprob: -6.510371685028076
    4. '[' → logprob: -6.635371685028076
    5. ')
' → logprob: -8.385371208190918
    6. '       ' → logprob: -8.385371208190918
    7. '}' → logprob: -8.760371208190918
    8. '   ' → logprob: -9.135371208190918
    9. '<|end|>' → logprob: -10.885371208190918
    10. '[
' → logprob: -11.135371208190918

Token 2133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6215090155601501
    2. '<|end|>' → logprob: -1.246509075164795
    3. ')' → logprob: -2.496509075164795
    4. ':' → logprob: -2.996509075164795
    5. '       ' → logprob: -3.496509075164795
    6. '```' → logprob: -5.246509075164795
    7. '):' → logprob: -6.371509075164795
    8. '<|end|>' → logprob: -6.996509075164795
    9. '#' → logprob: -7.121509075164795
    10. '+' → logprob: -7.621509075164795

Token 2134: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33049246668815613
    2. 'def' → logprob: -1.8304924964904785
    3. '```' → logprob: -3.3304924964904785
    4. 'return' → logprob: -3.4554924964904785
    5. ')' → logprob: -3.9554924964904785
    6. '<|end|>' → logprob: -4.5804924964904785
    7. '
' → logprob: -5.2054924964904785
    8. '    
' → logprob: -5.4554924964904785
    9. '#' (adapté à ' #') → logprob: -5.7054924964904785
    10. ':' → logprob: -5.9554924964904785

Token 2135: ' App' (ID: 2583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35106030106544495
    2. 'return' → logprob: -1.4760602712631226
    3. 'result' → logprob: -3.601060390472412
    4. '#' → logprob: -4.601060390472412
    5. 'can' → logprob: -4.601060390472412
    6. 'if' → logprob: -4.851060390472412
    7. 'all' → logprob: -5.601060390472412
    8. 'go' → logprob: -5.601060390472412
    9. 'reachable' → logprob: -6.976060390472412
    10. 'answer' → logprob: -7.226060390472412

Token 2136: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.22544211149215698
    2. 'ly' → logprob: -1.9754421710968018
    3. 'eler' → logprob: -2.9754421710968018
    4. 'l' → logprob: -5.350441932678223
    5. '   ' → logprob: -6.350441932678223
    6. 'er' → logprob: -6.475441932678223
    7. 'lay' → logprob: -7.475441932678223
    8. 'le' → logprob: -7.850441932678223
    9. 'end' → logprob: -7.975441932678223
    10. 'ro' → logprob: -8.100441932678223

Token 2137: ' des' (ID: 731)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5166488885879517
    2. '   ' → logprob: -1.8916488885879517
    3. ' can' → logprob: -1.8916488885879517
    4. '(' → logprob: -2.641648769378662
    5. '(can' → logprob: -3.766648769378662
    6. ' =' → logprob: -6.391648769378662
    7. '(
' → logprob: -6.891648769378662
    8. 'return' → logprob: -7.016648769378662
    9. '_can' → logprob: -7.391648769378662
    10. 'def' → logprob: -7.516648769378662

Token 2138: ' deux' (ID: 10301)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.001302618533372879
    2. 'result' → logprob: -7.751302719116211
    3. ' can' → logprob: -8.126302719116211
    4. 'results' → logprob: -8.376302719116211
    5. '   ' → logprob: -8.876302719116211
    6. 'return' → logprob: -9.126302719116211
    7. '#' → logprob: -10.501302719116211
    8. 'res' → logprob: -11.126302719116211
    9. 'def' → logprob: -11.251302719116211
    10. ' ' → logprob: -12.001302719116211

Token 2139: ' phases' (ID: 48910)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.29824814200401306
    2. 'dire' → logprob: -2.173248052597046
    3. ' directions' → logprob: -3.048248052597046
    4. 'calls' → logprob: -4.173248291015625
    5. ' can' → logprob: -4.423248291015625
    6. 'sens' → logprob: -4.548248291015625
    7. 'results' → logprob: -4.673248291015625
    8. '   ' → logprob: -4.923248291015625
    9. 'return' → logprob: -5.048248291015625
    10. 'res' → logprob: -5.423248291015625

Token 2140: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8896914124488831
    2. 'result' → logprob: -1.0146913528442383
    3. '    
' → logprob: -2.3896913528442383
    4. '
' → logprob: -3.3896913528442383
    5. 'all' → logprob: -4.014691352844238
    6. 'return' → logprob: -4.139691352844238
    7. '  
' → logprob: -4.514691352844238
    8. ' result' → logprob: -4.764691352844238
    9. '```' → logprob: -5.139691352844238
    10. 'def' → logprob: -5.389691352844238

Token 2141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020611843094229698
    2. ' result' → logprob: -4.770611763000488
    3. ' return' → logprob: -5.270611763000488
    4. '    
' → logprob: -5.395611763000488
    5. 'result' → logprob: -7.270611763000488
    6. '```' → logprob: -7.520611763000488
    7. '
' → logprob: -8.770611763000488
    8. ' retour' → logprob: -8.895611763000488
    9. 'return' → logprob: -9.020611763000488
    10. '    ' → logprob: -9.270611763000488

Token 2142: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05540291965007782
    2. ' if' → logprob: -3.930402994155884
    3. 'if' → logprob: -4.430402755737305
    4. 'all' → logprob: -5.055402755737305
    5. 'return' → logprob: -5.680402755737305
    6. 'result' → logprob: -6.305402755737305
    7. ' return' → logprob: -6.555402755737305
    8. 'go' → logprob: -6.555402755737305
    9. 'reachable' → logprob: -6.555402755737305
    10. 'res' → logprob: -7.055402755737305

Token 2143: '_go' (ID: 90361)
  Prédit: '_complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_complete' → logprob: -0.028444506227970123
    2. '_re' → logprob: -3.653444528579712
    3. '_com' → logprob: -7.153444290161133
    4. 'complete' → logprob: -7.153444290161133
    5. '_completion' → logprob: -8.903444290161133
    6. '_can' → logprob: -9.028444290161133
    7. '   ' → logprob: -9.028444290161133
    8. ')' → logprob: -9.903444290161133
    9. '_continue' → logprob: -10.278444290161133
    10. ' complete' → logprob: -10.528444290161133

Token 2144: ' =' (ID: 314)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.6407084465026855
    2. '_complete' → logprob: -2.1407084465026855
    3. '[' → logprob: -2.2657084465026855
    4. ' =' → logprob: -2.2657084465026855
    5. '=' → logprob: -3.2657084465026855
    6. '_to' → logprob: -3.3907084465026855
    7. 'from' → logprob: -3.8907084465026855
    8. '   ' → logprob: -4.1407084465026855
    9. '_right' → logprob: -4.6407084465026855
    10. '_forward' → logprob: -5.2657084465026855

Token 2145: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3868912160396576
    2. ' can' → logprob: -1.13689124584198
    3. '   ' → logprob: -11.38689136505127
    4. '	can' → logprob: -12.63689136505127
    5. 'True' → logprob: -12.88689136505127
    6. ' True' → logprob: -13.63689136505127
    7. '(can' → logprob: -13.88689136505127
    8. '_can' → logprob: -14.63689136505127
    9. ' ' → logprob: -15.13689136505127
    10. '  ' → logprob: -16.136890411376953

Token 2146: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.03842964768409729
    2. '_complete' → logprob: -3.2884297370910645
    3. 're' → logprob: -9.163429260253906
    4. '_go' → logprob: -9.788429260253906
    5. '_can' → logprob: -9.788429260253906
    6. 'complete' → logprob: -10.288429260253906
    7. '_completion' → logprob: -10.288429260253906
    8. '_continue' → logprob: -10.288429260253906
    9. '_com' → logprob: -10.663429260253906
    10. '   ' → logprob: -11.913429260253906

Token 2147: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0008283290662802756
    2. 'reach' → logprob: -7.500828266143799
    3. 'each' → logprob: -8.625828742980957
    4. 'ch' → logprob: -10.875828742980957
    5. '_complete' → logprob: -11.625828742980957
    6. 'atch' → logprob: -11.875828742980957
    7. '_each' → logprob: -11.875828742980957
    8. '_re' → logprob: -12.000828742980957
    9. 'acht' → logprob: -12.000828742980957
    10. '_' → logprob: -12.125828742980957

Token 2148: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.5027299822540954e-05
    2. '(' → logprob: -10.125055313110352
    3. ' (' → logprob: -12.500055313110352
    4. '[' → logprob: -12.750055313110352
    5. '(
' → logprob: -12.875055313110352
    6. '```' → logprob: -13.125055313110352
    7. '[d' → logprob: -13.500055313110352
    8. '(distance' → logprob: -13.625055313110352
    9. 'd' → logprob: -14.750055313110352
    10. ')' → logprob: -15.250055313110352

Token 2149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.375014305114746
    3. ',N' → logprob: -13.625014305114746
    4. '   ' → logprob: -13.625014305114746
    5. ',d' → logprob: -15.250014305114746
    6. ',n' → logprob: -16.375015258789062
    7. ',
' → logprob: -16.375015258789062
    8. 'd' → logprob: -16.750015258789062
    9. '```' → logprob: -16.750015258789062
    10. 'N' → logprob: -17.250015258789062

Token 2150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. ')' → logprob: -20.0000057220459
    5. ' ' → logprob: -21.3750057220459
    6. '  ' → logprob: -22.5000057220459
    7. '۰' → logprob: -22.5000057220459
    8. '[' → logprob: -23.3750057220459
    9. 'start' → logprob: -23.5000057220459
    10. '```' → logprob: -23.6250057220459

Token 2151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ')' → logprob: -20.625
    4. '[' → logprob: -21.5
    5. '   ' → logprob: -21.75
    6. '```' → logprob: -21.75
    7. '۰' → logprob: -22.125
    8. ' ' → logprob: -23.125
    9. '=' → logprob: -24.0
    10. ',' → logprob: -24.25

Token 2152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8444881536415778e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ')' → logprob: -14.875028610229492
    4. '   ' → logprob: -15.500028610229492
    5. ',
' → logprob: -15.875028610229492
    6. '```' → logprob: -17.000028610229492
    7. '<|end|>' → logprob: -17.250028610229492
    8. '‌,' → logprob: -17.375028610229492
    9. ',",' → logprob: -18.250028610229492
    10. ',)' → logprob: -18.500028610229492

Token 2153: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018183069303631783
    2. ' N' → logprob: -4.01818323135376
    3. '   ' → logprob: -10.393182754516602
    4. '    ' → logprob: -13.768182754516602
    5. '	N' → logprob: -14.643182754516602
    6. ' ' → logprob: -14.893182754516602
    7. '  ' → logprob: -15.393182754516602
    8. 'n' → logprob: -16.3931827545166
    9. ' ' → logprob: -16.8931827545166
    10. '     ' → logprob: -17.1431827545166

Token 2154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007115975022315979
    2. ' -' → logprob: -7.250711441040039
    3. ')' → logprob: -13.875711441040039
    4. '[' → logprob: -15.375711441040039
    5. '   ' → logprob: -15.625711441040039
    6. '−' → logprob: -16.37571144104004
    7. '<|end|>' → logprob: -17.12571144104004
    8. '–' → logprob: -17.37571144104004
    9. ')-' → logprob: -17.50071144104004
    10. '_MINUS' → logprob: -17.75071144104004

Token 2155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.25
    5. '<|end|>' → logprob: -16.25
    6. '**' → logprob: -17.375
    7. '[' → logprob: -18.0
    8. ')' → logprob: -18.125
    9. '<|end|>' → logprob: -18.125
    10. '۱' → logprob: -19.25

Token 2156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -15.375000953674316
    4. '<|end|>' → logprob: -16.75
    5. ')' → logprob: -17.5
    6. '2' → logprob: -17.875
    7. '   ' → logprob: -18.125
    8. '**' → logprob: -19.0
    9. '`' → logprob: -19.375
    10. '-' → logprob: -19.5

Token 2157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.519893501419574e-05
    2. ')' → logprob: -9.37509536743164
    3. '   ' → logprob: -11.75009536743164
    4. ' ,' → logprob: -13.25009536743164
    5. ',)' → logprob: -14.37509536743164
    6. ')
' → logprob: -17.75009536743164
    7. ' )' → logprob: -17.87509536743164
    8. '  ' → logprob: -18.25009536743164
    9. ',)
' → logprob: -18.87509536743164
    10. '    ' → logprob: -19.00009536743164

Token 2158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.875710487365723
    4. '  ' → logprob: -19.375709533691406
    5. ')' → logprob: -19.500709533691406
    6. '    ' → logprob: -20.250709533691406
    7. '۱' → logprob: -20.500709533691406
    8. '```' → logprob: -20.625709533691406
    9. '+' → logprob: -20.750709533691406
    10. '１' → logprob: -20.875709533691406

Token 2159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -21.625001907348633
    5. '  ' → logprob: -22.125001907348633
    6. '۱' → logprob: -22.625001907348633
    7. ')' → logprob: -22.875001907348633
    8. '１' → logprob: -23.250001907348633
    9. '+' → logprob: -23.375001907348633
    10. '`' → logprob: -23.875001907348633

Token 2160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16068154573440552
    2. ')
' → logprob: -1.9106814861297607
    3. '   ' → logprob: -7.78568172454834
    4. ')
' → logprob: -10.16068172454834
    5. ')

' → logprob: -13.28568172454834
    6. ')#' → logprob: -15.41068172454834
    7. ')`
' → logprob: -15.53568172454834
    8. ' )' → logprob: -15.66068172454834
    9. ')\' → logprob: -16.035680770874023
    10. ')`' → logprob: -16.160680770874023

Token 2161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005740117747336626
    2. 'can' → logprob: -5.630740165710449
    3. '
' → logprob: -6.505740165710449
    4. '    
' → logprob: -8.38074016571045
    5. 'if' → logprob: -9.00574016571045
    6. ' if' → logprob: -9.25574016571045
    7. '```' → logprob: -9.50574016571045
    8. ' can' → logprob: -9.88074016571045
    9. 'and' → logprob: -10.50574016571045
    10. ' and' → logprob: -11.00574016571045

Token 2162: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.02459251694381237
    2. '   ' → logprob: -3.899592399597168
    3. ' can' → logprob: -6.024592399597168
    4. 'if' → logprob: -6.524592399597168
    5. ' if' → logprob: -9.399592399597168
    6. '```' → logprob: -10.024592399597168
    7. ' ' → logprob: -10.774592399597168
    8. '	can' → logprob: -12.899592399597168
    9. 'return' → logprob: -13.274592399597168
    10. '    
' → logprob: -13.399592399597168

Token 2163: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.08955034613609314
    2. '_back' → logprob: -2.589550256729126
    3. '_ret' → logprob: -4.839550495147705
    4. 'return' → logprob: -6.214550495147705
    5. '_go' → logprob: -7.839550495147705
    6. 'ret' → logprob: -8.464550018310547
    7. 'back' → logprob: -10.089550018310547
    8. '_re' → logprob: -10.714550018310547
    9. '_' → logprob: -10.964550018310547
    10. 'come' → logprob: -12.839550018310547

Token 2164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761160254478455
    2. '=' → logprob: -0.8261160254478455
    3. '   ' → logprob: -9.076115608215332
    4. '_' → logprob: -11.076115608215332
    5. ')' → logprob: -11.576115608215332
    6. '(' → logprob: -11.701115608215332
    7. ' ' → logprob: -11.826115608215332
    8. '  ' → logprob: -12.326115608215332
    9. '=True' → logprob: -13.076115608215332
    10. ',' → logprob: -13.201115608215332

Token 2165: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.05489762872457504
    2. ' can' → logprob: -2.9298975467681885
    3. '(can' → logprob: -11.30489730834961
    4. '	can' → logprob: -13.42989730834961
    5. '_can' → logprob: -14.30489730834961
    6. 'True' → logprob: -15.05489730834961
    7. '.can' → logprob: -15.17989730834961
    8. '   ' → logprob: -16.05489730834961
    9. ' ' → logprob: -16.67989730834961
    10. 'Can' → logprob: -16.67989730834961

Token 2166: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0003273600013926625
    2. '_complete' → logprob: -8.750327110290527
    3. '_return' → logprob: -9.000327110290527
    4. 're' → logprob: -10.750327110290527
    5. '_can' → logprob: -11.875327110290527
    6. 'can' → logprob: -12.000327110290527
    7. 'return' → logprob: -12.500327110290527
    8. 'reach' → logprob: -12.750327110290527
    9. 'complete' → logprob: -13.500327110290527
    10. 'Reach' → logprob: -14.125327110290527

Token 2167: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0001673061487963423
    2. 'ch' → logprob: -9.375166893005371
    3. 'each' → logprob: -10.500166893005371
    4. '_complete' → logprob: -11.625166893005371
    5. 'reach' → logprob: -11.750166893005371
    6. 'atch' → logprob: -11.875166893005371
    7. 'a' → logprob: -12.250166893005371
    8. 'complete' → logprob: -12.500166893005371
    9. 'can' → logprob: -12.625166893005371
    10. '_' → logprob: -13.000166893005371

Token 2168: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3856492842023727e-06
    2. 'd' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '```' → logprob: -18.125001907348633
    7. '[d' → logprob: -18.625001907348633
    8. '	d' → logprob: -19.000001907348633
    9. ')' → logprob: -19.000001907348633
    10. '(
' → logprob: -19.750001907348633

Token 2169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003628342878073454
    2. '(d' → logprob: -5.878628253936768
    3. ',d' → logprob: -7.253628253936768
    4. 'd' → logprob: -9.878628730773926
    5. ' ,' → logprob: -9.878628730773926
    6. '   ' → logprob: -12.378628730773926
    7. '(' → logprob: -12.628628730773926
    8. ' d' → logprob: -13.378628730773926
    9. ' (' → logprob: -13.503628730773926
    10. ')' → logprob: -14.378628730773926

Token 2170: ' N' (ID: 478)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2821834683418274
    2. ' d' → logprob: -1.4071834087371826
    3. '   ' → logprob: -7.282183647155762
    4. 'N' → logprob: -9.282183647155762
    5. '[' → logprob: -10.157183647155762
    6. ' ' → logprob: -10.282183647155762
    7. ' [' → logprob: -10.407183647155762
    8. ' N' → logprob: -10.532183647155762
    9. '[N' → logprob: -10.532183647155762
    10. '    ' → logprob: -10.657183647155762

Token 2171: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14268136024475098
    2. ' -' → logprob: -2.017681360244751
    3. '   ' → logprob: -12.392681121826172
    4. ')' → logprob: -14.767681121826172
    5. ' ' → logprob: -14.767681121826172
    6. '1' → logprob: -14.892681121826172
    7. '[' → logprob: -15.267681121826172
    8. 'user' → logprob: -15.642681121826172
    9. '```' → logprob: -16.142681121826172
    10. '_' → logprob: -16.267681121826172

Token 2172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002918446552939713
    2. '2' → logprob: -8.50029182434082
    3. ' ' → logprob: -9.37529182434082
    4. '   ' → logprob: -13.37529182434082
    5. '```' → logprob: -14.12529182434082
    6. '-' → logprob: -14.62529182434082
    7. ')' → logprob: -16.18779182434082
    8. '3' → logprob: -16.18779182434082
    9. '       ' → logprob: -16.68779182434082
    10. '>' → logprob: -16.87529182434082

Token 2173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.250009536743164
    3. '2' → logprob: -13.125009536743164
    4. '-' → logprob: -13.125009536743164
    5. '   ' → logprob: -15.000009536743164
    6. '
' → logprob: -15.625009536743164
    7. '```' → logprob: -15.937509536743164
    8. '0' → logprob: -17.812509536743164
    9. '       ' → logprob: -17.875009536743164
    10. '...' → logprob: -17.875009536743164

Token 2174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027230256819166243
    2. ' ,' → logprob: -8.250272750854492
    3. '   ' → logprob: -12.125272750854492
    4. ',d' → logprob: -13.250272750854492
    5. 'd' → logprob: -13.625272750854492
    6. ',
' → logprob: -14.125272750854492
    7. ')' → logprob: -14.250272750854492
    8. ',-' → logprob: -14.750272750854492
    9. '-' → logprob: -15.375272750854492
    10. '_,' → logprob: -15.875272750854492

Token 2175: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06134911999106407
    2. ' -' → logprob: -3.3113491535186768
    3. '0' → logprob: -3.8113491535186768
    4. ' ' → logprob: -7.061348915100098
    5. '```' → logprob: -10.686348915100098
    6. ')' → logprob: -11.436348915100098
    7. '   ' → logprob: -11.561348915100098
    8. '`' → logprob: -12.561348915100098
    9. '1' → logprob: -12.686348915100098
    10. ',' → logprob: -13.311348915100098

Token 2176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04420497640967369
    2. '-' → logprob: -3.1692049503326416
    3. ' ' → logprob: -7.294205188751221
    4. ' -' → logprob: -7.669205188751221
    5. '   ' → logprob: -10.294204711914062
    6. '(' → logprob: -12.419204711914062
    7. '-(' → logprob: -12.419204711914062
    8. '```' → logprob: -12.419204711914062
    9. '  ' → logprob: -13.044204711914062
    10. '
' → logprob: -13.294204711914062

Token 2177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5014188799541444e-05
    2. ' ,' → logprob: -10.250044822692871
    3. '   ' → logprob: -11.625044822692871
    4. ')' → logprob: -15.000044822692871
    5. ',
' → logprob: -16.375045776367188
    6. '       ' → logprob: -17.250045776367188
    7. '    ' → logprob: -17.500045776367188
    8. '‌,' → logprob: -17.625045776367188
    9. '```' → logprob: -17.750045776367188
    10. '	' → logprob: -18.250045776367188

Token 2178: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.505351095460355e-05
    2. ' -' → logprob: -9.500075340270996
    3. '1' → logprob: -16.00007438659668
    4. '```' → logprob: -19.37507438659668
    5. '   ' → logprob: -19.50007438659668
    6. ')' → logprob: -20.75007438659668
    7. '−' → logprob: -21.62507438659668
    8. ' ' → logprob: -23.12507438659668
    9. '           ' → logprob: -23.12507438659668
    10. '	' → logprob: -23.25007438659668

Token 2179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. ')' → logprob: -20.375
    4. '۱' → logprob: -20.5
    5. '１' → logprob: -20.875
    6. '```' → logprob: -21.375
    7. '<|end|>' → logprob: -21.5
    8. '१' → logprob: -21.5
    9. '১' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 2180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007461408386006951
    2. ')
' → logprob: -7.250746250152588
    3. '   ' → logprob: -10.25074577331543
    4. ')

' → logprob: -15.12574577331543
    5. '))' → logprob: -15.25074577331543
    6. ' )' → logprob: -16.00074577331543
    7. ')`' → logprob: -16.62574577331543
    8. ')**' → logprob: -17.00074577331543
    9. ')`
' → logprob: -17.50074577331543
    10. ')
' → logprob: -17.50074577331543

Token 2181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.885492621222511e-05
    2. 'return' → logprob: -10.250068664550781
    3. '```' → logprob: -10.625068664550781
    4. '	return' → logprob: -12.625068664550781
    5. ' return' → logprob: -12.750068664550781
    6. '    
' → logprob: -13.375068664550781
    7. '       ' → logprob: -14.625068664550781
    8. '<|end|>' → logprob: -14.875068664550781
    9. '   ' → logprob: -15.750068664550781
    10. '``' → logprob: -16.50006866455078

Token 2182: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005092272534966469
    2. 'return' (adapté à ' return') → logprob: -5.505092144012451
    3. 'if' → logprob: -7.005092144012451
    4. '```' → logprob: -9.25509262084961
    5. ' if' → logprob: -12.13009262084961
    6. ' return' → logprob: -12.50509262084961
    7. '       ' → logprob: -14.38009262084961
    8. '    
' → logprob: -14.88009262084961
    9. '
' → logprob: -15.50509262084961
    10. '	return' → logprob: -15.63009262084961

Token 2183: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3870972990989685
    2. ' "' → logprob: -1.1370973587036133
    3. '   ' → logprob: -8.762097358703613
    4. ''' → logprob: -10.137097358703613
    5. ' '' → logprob: -11.012097358703613
    6. '("' → logprob: -12.137097358703613
    7. ' ' → logprob: -12.262097358703613
    8. ' yes' → logprob: -13.637097358703613
    9. ' ' → logprob: -14.387097358703613
    10. '"is' → logprob: -15.137097358703613

Token 2184: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.31358402967453003
    2. '"' → logprob: -1.3135840892791748
    3. ''' → logprob: -8.063584327697754
    4. ' yes' → logprob: -12.063584327697754
    5. 'ye' → logprob: -13.813584327697754
    6. 'YES' → logprob: -15.313584327697754
    7. '_yes' → logprob: -15.563584327697754
    8. ''y' → logprob: -16.188583374023438
    9. 'Yes' → logprob: -16.563583374023438
    10. ''ny' → logprob: -17.813583374023438

Token 2185: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002745673293247819
    2. ' if' → logprob: -6.377745628356934
    3. 'if' → logprob: -6.877745628356934
    4. '   ' → logprob: -11.502745628356934
    5. '```' → logprob: -13.377745628356934
    6. ''' → logprob: -14.502745628356934
    7. ' "' → logprob: -16.25274658203125
    8. '       ' → logprob: -17.25274658203125
    9. '"""' → logprob: -17.25274658203125
    10. '    ' → logprob: -17.37774658203125

Token 2186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7178155183792114
    2. ' if' → logprob: -0.7178155183792114
    3. '   ' → logprob: -3.717815399169922
    4. 'else' → logprob: -9.842815399169922
    5. ' ' → logprob: -11.717815399169922
    6. '	if' → logprob: -11.967815399169922
    7. '  ' → logprob: -12.092815399169922
    8. '    
' → logprob: -13.342815399169922
    9. '    ' → logprob: -13.467815399169922
    10. ' else' → logprob: -14.217815399169922

Token 2187: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.07889111340045929
    2. ' can' → logprob: -2.5788910388946533
    3. '(can' → logprob: -14.203890800476074
    4. '	can' → logprob: -14.953890800476074
    5. '   ' → logprob: -15.078890800476074
    6. ' ' → logprob: -17.07889175415039
    7. '_can' → logprob: -18.45389175415039
    8. ' ' → logprob: -19.32889175415039
    9. '  ' → logprob: -19.82889175415039
    10. '.can' → logprob: -20.07889175415039

Token 2188: '_go' (ID: 90361)
  Prédit: '_go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_go' → logprob: -9.088346359931165e-07
    2. 'go' → logprob: -14.125000953674316
    3. '_can' → logprob: -16.375
    4. '(go' → logprob: -18.25
    5. '_return' → logprob: -19.5
    6. '	go' → logprob: -19.75
    7. '_complete' → logprob: -20.0
    8. 'Go' → logprob: -20.125
    9. '_' → logprob: -20.125
    10. '\' → logprob: -20.25

Token 2189: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27424654364585876
    2. 'and' → logprob: -1.5242465734481812
    3. ' else' → logprob: -3.8992464542388916
    4. 'else' → logprob: -6.524246692657471
    5. '==' → logprob: -8.399246215820312
    6. ' ==' → logprob: -9.774246215820312
    7. '   ' → logprob: -10.274246215820312
    8. ' ' → logprob: -11.399246215820312
    9. '    ' → logprob: -11.399246215820312
    10. '  ' → logprob: -13.024246215820312

Token 2190: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.018150877207517624
    2. ' can' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.64315128326416
    4. ' ' → logprob: -15.51815128326416
    5. '	can' → logprob: -16.018150329589844
    6. '_can' → logprob: -16.268150329589844
    7. '  ' → logprob: -17.143150329589844
    8. ' ' → logprob: -17.143150329589844
    9. '"' → logprob: -18.018150329589844
    10. '(can' → logprob: -18.018150329589844

Token 2191: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.1366971731185913
    2. 'turn' → logprob: -2.386697292327881
    3. 'eturn' → logprob: -3.886697292327881
    4. 'return' → logprob: -4.886697292327881
    5. '_turn' → logprob: -5.011697292327881
    6. 'urn' → logprob: -6.886697292327881
    7. 't' → logprob: -10.261696815490723
    8. 'tur' → logprob: -10.636696815490723
    9. 'ut' → logprob: -11.386696815490723
    10. '_' → logprob: -11.761696815490723

Token 2192: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2193: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -9.491498531133402e-06
    2. ' "' → logprob: -11.625009536743164
    3. ''' → logprob: -14.500009536743164
    4. '   ' → logprob: -18.625009536743164
    5. '"No' → logprob: -18.750009536743164
    6. '("' → logprob: -18.875009536743164
    7. ' ' → logprob: -20.375009536743164
    8. '	' → logprob: -21.000009536743164
    9. '`' → logprob: -21.125009536743164
    10. '```' → logprob: -21.375009536743164

Token 2194: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -8.2994620242971e-06
    2. '"' → logprob: -11.750008583068848
    3. ' no' → logprob: -14.750008583068848
    4. '	no' → logprob: -19.25000762939453
    5. '"No' → logprob: -20.75000762939453
    6. ''' → logprob: -21.12500762939453
    7. 'No' → logprob: -21.50000762939453
    8. '""' → logprob: -22.50000762939453
    9. 'n' → logprob: -22.75000762939453
    10. '_no' → logprob: -23.12500762939453

Token 2195: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2196: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2197: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47415217757225037
    2. '__' → logprob: -0.9741522073745728
    3. '_name' → logprob: -10.974152565002441
    4. 'name' → logprob: -10.974152565002441
    5. ' ' → logprob: -11.224152565002441
    6. '___' → logprob: -11.224152565002441
    7. ' "__' → logprob: -12.474152565002441
    8. 'True' → logprob: -13.099152565002441
    9. '_' → logprob: -13.224152565002441
    10. ' ' → logprob: -13.474152565002441

Token 2198: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023843852803111076
    2. ' __' → logprob: -3.898843765258789
    3. 'name' → logprob: -5.773843765258789
    4. '_name' → logprob: -9.148843765258789
    5. '__":
' → logprob: -10.523843765258789
    6. '﻿' → logprob: -11.148843765258789
    7. '__.__' → logprob: -11.898843765258789
    8. '```' → logprob: -12.273843765258789
    9. '___' → logprob: -12.523843765258789
    10. '__':
' → logprob: -12.773843765258789

Token 2199: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00012023169983876869
    2. 'name' → logprob: -9.125120162963867
    3. '__.__' → logprob: -12.000120162963867
    4. '=="' → logprob: -13.625120162963867
    5. '__("' → logprob: -14.000120162963867
    6. '==' → logprob: -14.125120162963867
    7. 'main' → logprob: -14.250120162963867
    8. '__":
' → logprob: -14.750120162963867
    9. '__.' → logprob: -14.750120162963867
    10. '___' → logprob: -15.000120162963867

Token 2200: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001597460824996233
    2. '=="' → logprob: -6.8765974044799805
    3. '==' → logprob: -8.50159740447998
    4. ' ==' → logprob: -8.62659740447998
    5. '__.__' → logprob: -9.37659740447998
    6. '__":
' → logprob: -9.50159740447998
    7. '__["' → logprob: -12.12659740447998
    8. '__("' → logprob: -12.50159740447998
    9. '____' → logprob: -12.75159740447998
    10. '___' → logprob: -12.75159740447998

Token 2201: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000743399141356349
    2. ''' → logprob: -7.250743389129639
    3. ' "__' → logprob: -10.500743865966797
    4. '__' → logprob: -12.125743865966797
    5. '"name' → logprob: -15.250743865966797
    6. '   ' → logprob: -16.125743865966797
    7. ' '__' → logprob: -16.750743865966797
    8. '"user' → logprob: -16.750743865966797
    9. '"class' → logprob: -17.250743865966797
    10. '("__' → logprob: -18.375743865966797

Token 2202: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5451681974809617e-05
    2. 'name' → logprob: -11.750015258789062
    3. '__' → logprob: -11.875015258789062
    4. ' main' → logprob: -14.875015258789062
    5. '_main' → logprob: -15.750015258789062
    6. 'Main' → logprob: -18.250015258789062
    7. ' "__' → logprob: -18.500015258789062
    8. '(main' → logprob: -18.500015258789062
    9. '	main' → logprob: -18.625015258789062
    10. 'MAIN' → logprob: -18.625015258789062

Token 2203: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3985472619533539
    2. '__":
' → logprob: -1.1485472917556763
    3. '__':
' → logprob: -4.648547172546387
    4. '__:' → logprob: -6.398547172546387
    5. '():
' → logprob: -8.148547172546387
    6. ':' → logprob: -10.773547172546387
    7. '__);
' → logprob: -11.523547172546387
    8. ':
' → logprob: -11.773547172546387
    9. '__((' → logprob: -12.148547172546387
    10. '__);
/' → logprob: -12.273547172546387

Token 2204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002236970467492938
    2. '```' → logprob: -6.377236843109131
    3. 'import' → logprob: -8.252237319946289
    4. '	import' → logprob: -9.502237319946289
    5. '   ' → logprob: -9.752237319946289
    6. '    
' → logprob: -10.002237319946289
    7. ' import' → logprob: -11.502237319946289
    8. ' input' → logprob: -11.627237319946289
    9. '<|end|>' → logprob: -11.877237319946289
    10. '	input' → logprob: -11.877237319946289

Token 2205: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015148505568504333
    2. 'n' → logprob: -4.765148639678955
    3. 'import' → logprob: -6.015148639678955
    4. 'N' → logprob: -6.140148639678955
    5. ' n' → logprob: -6.640148639678955
    6. '```' → logprob: -7.765148639678955
    7. '	n' → logprob: -9.640148162841797
    8. ' N' → logprob: -9.890148162841797
    9. ' import' → logprob: -10.515148162841797
    10. '	import' → logprob: -11.765148162841797

Token 2206: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8423148989677429
    2. '()' → logprob: -0.9673148989677429
    3. '_data' → logprob: -1.9673149585723877
    4. '_lines' → logprob: -3.2173149585723877
    5. '_' → logprob: -5.342314720153809
    6. '=' → logprob: -6.592314720153809
    7. '_l' → logprob: -6.717314720153809
    8. '_str' → logprob: -7.467314720153809
    9. 's' → logprob: -8.342314720153809
    10. 'data' → logprob: -8.717314720153809

Token 2207: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000748994410969317
    2. ' sys' → logprob: -7.250749111175537
    3. 'lambda' → logprob: -10.750748634338379
    4. 'input' → logprob: -11.000748634338379
    5. '=sys' → logprob: -14.625748634338379
    6. '	sys' → logprob: -15.125748634338379
    7. 'stdin' → logprob: -16.125749588012695
    8. 'open' → logprob: -16.125749588012695
    9. ' lambda' → logprob: -17.000749588012695
    10. '(sys' → logprob: -17.625749588012695

Token 2208: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002738522016443312
    2. '.readline' → logprob: -8.750273704528809
    3. '.stdout' → logprob: -10.125273704528809
    4. '.' → logprob: -10.875273704528809
    5. 'stdin' → logprob: -11.000273704528809
    6. '(stdin' → logprob: -11.125273704528809
    7. '.argv' → logprob: -12.000273704528809
    8. '.setdefault' → logprob: -12.000273704528809
    9. '.std' → logprob: -12.375273704528809
    10. '().' → logprob: -12.750273704528809

Token 2209: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.018953735008835793
    2. 'read' → logprob: -4.018953800201416
    3. '_read' → logprob: -7.893953800201416
    4. '.readlines' → logprob: -8.768953323364258
    5. ' readline' → logprob: -9.393953323364258
    6. '.read' → logprob: -9.893953323364258
    7. 'rea' → logprob: -10.268953323364258
    8. 'readonly' → logprob: -11.518953323364258
    9. '<|end|>' → logprob: -11.518953323364258
    10. '.stdin' → logprob: -11.768953323364258

Token 2210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016238800017163157
    2. '
' → logprob: -7.25162410736084
    3. '()
' → logprob: -7.87662410736084
    4. '()' → logprob: -8.25162410736084
    5. '    
' → logprob: -8.50162410736084
    6. '().' → logprob: -10.75162410736084
    7. 'N' → logprob: -10.75162410736084
    8. 'n' → logprob: -11.62662410736084
    9. '(N' → logprob: -12.62662410736084
    10. 'def' → logprob: -13.00162410736084

Token 2211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0420718714594841
    2. 'N' → logprob: -3.29207181930542
    3. 'n' → logprob: -5.54207181930542
    4. '    
' → logprob: -9.542072296142578
    5. 't' → logprob: -11.292072296142578
    6. '```' → logprob: -11.542072296142578
    7. '	N' → logprob: -12.667072296142578
    8. '
' → logprob: -12.667072296142578
    9. 'num' → logprob: -13.417072296142578
    10. '	n' → logprob: -13.792072296142578

Token 2212: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00046296243090182543
    2. '   ' → logprob: -8.250462532043457
    3. 'n' → logprob: -9.000462532043457
    4. 'T' → logprob: -9.500462532043457
    5. 't' → logprob: -13.250462532043457
    6. ' N' → logprob: -14.125462532043457
    7. '```' → logprob: -14.750462532043457
    8. 'Q' → logprob: -15.375462532043457
    9. '    
' → logprob: -15.875462532043457
    10. '#' → logprob: -16.750463485717773

Token 2213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07712061703205109
    2. ' =' → logprob: -2.702120542526245
    3. '=int' → logprob: -4.952120780944824
    4. ',' → logprob: -10.202120780944824
    5. '   ' → logprob: -10.702120780944824
    6. 'int' → logprob: -10.952120780944824
    7. '(int' → logprob: -12.327120780944824
    8. '()' → logprob: -12.327120780944824
    9. ' ' → logprob: -13.702120780944824
    10. '＝' → logprob: -14.702120780944824

Token 2214: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858771339058876
    2. ' int' → logprob: -3.0485877990722656
    3. '=int' → logprob: -15.923587799072266
    4. '[int' → logprob: -16.048587799072266
    5. '(int' → logprob: -17.298587799072266
    6. '<int' → logprob: -19.173587799072266
    7. '	int' → logprob: -19.798587799072266
    8. ' ' → logprob: -20.548587799072266
    9. ':int' → logprob: -21.423587799072266
    10. ',int' → logprob: -21.923587799072266

Token 2215: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001455236109904945
    2. '(sys' → logprob: -7.001455307006836
    3. '()' → logprob: -8.126455307006836
    4. 'input' → logprob: -8.376455307006836
    5. '(' → logprob: -11.126455307006836
    6. '()
' → logprob: -13.751455307006836
    7. ' (' → logprob: -14.251455307006836
    8. 'sys' → logprob: -14.251455307006836
    9. '=input' → logprob: -14.876455307006836
    10. ' input' → logprob: -16.001455307006836

Token 2216: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01215416844934225
    2. '().' → logprob: -4.7621541023254395
    3. '()' → logprob: -6.0121541023254395
    4. '())
' → logprob: -6.8871541023254395
    5. ')' → logprob: -9.762154579162598
    6. '(' → logprob: -12.887154579162598
    7. '())

' → logprob: -13.887154579162598
    8. ' ())' → logprob: -13.887154579162598
    9. '()
' → logprob: -14.012154579162598
    10. '())
' → logprob: -15.012154579162598

Token 2217: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002445317804813385
    2. '   ' → logprob: -8.375244140625
    3. ' d' → logprob: -11.250244140625
    4. '	d' → logprob: -14.625244140625
    5. '    
' → logprob: -15.000244140625
    6. '```' → logprob: -15.875244140625
    7. '_d' → logprob: -17.750244140625
    8. 'D' → logprob: -18.375244140625
    9. '
' → logprob: -18.750244140625
    10. '  ' → logprob: -19.000244140625

Token 2218: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0002072357019642368
    2. '   ' → logprob: -8.50020694732666
    3. ' d' → logprob: -12.75020694732666
    4. '    
' → logprob: -15.00020694732666
    5. '```' → logprob: -15.12520694732666
    6. '	d' → logprob: -16.125207901000977
    7. '_d' → logprob: -16.250207901000977
    8. '
' → logprob: -16.875207901000977
    9. 'D' → logprob: -18.625207901000977
    10. '  ' → logprob: -18.875207901000977

Token 2219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016787484055384994
    2. ' =' → logprob: -6.876678943634033
    3. '()' → logprob: -7.376678943634033
    4. '[:]' → logprob: -12.626678466796875
    5. '=[]' → logprob: -12.876678466796875
    6. '[]' → logprob: -12.876678466796875
    7. 's' → logprob: -12.876678466796875
    8. '_' → logprob: -13.126678466796875
    9. '   ' → logprob: -13.251678466796875
    10. '=list' → logprob: -13.626678466796875

Token 2220: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.522638169466518e-05
    2. '[list' → logprob: -10.750024795532227
    3. ' list' → logprob: -12.500024795532227
    4. '[' → logprob: -18.500024795532227
    5. '(list' → logprob: -20.250024795532227
    6. '=list' → logprob: -20.750024795532227
    7. '	list' → logprob: -20.875024795532227
    8. ':list' → logprob: -22.500024795532227
    9. 'List' → logprob: -22.750024795532227
    10. '[List' → logprob: -22.875024795532227

Token 2221: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -17.125
    3. ']int' → logprob: -17.125
    4. '[int' → logprob: -17.75
    5. '(int' → logprob: -18.0
    6. ':int' → logprob: -18.625
    7. '<int' → logprob: -18.625
    8. '=int' → logprob: -19.5
    9. '	int' → logprob: -20.125
    10. '0' → logprob: -20.5

Token 2222: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000344044849043712
    2. 'input' → logprob: -8.000344276428223
    3. '()' → logprob: -12.250344276428223
    4. '(' → logprob: -13.000344276428223
    5. '()]' → logprob: -14.250344276428223
    6. '(x' → logprob: -14.375344276428223
    7. '=input' → logprob: -16.125343322753906
    8. ' input' → logprob: -16.500343322753906
    9. '(
' → logprob: -17.250343322753906
    10. ' (' → logprob: -17.500343322753906

Token 2223: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006439079996198416
    2. '().' → logprob: -5.256439208984375
    3. '()' → logprob: -6.756439208984375
    4. '()]' → logprob: -10.506439208984375
    5. '())
' → logprob: -11.506439208984375
    6. '()
' → logprob: -12.881439208984375
    7. ' ())' → logprob: -14.506439208984375
    8. ')' → logprob: -15.006439208984375
    9. '()),' → logprob: -16.881439208984375
    10. '()[' → logprob: -16.881439208984375

Token 2224: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010241642594337463
    2. 'for' → logprob: -4.760241508483887
    3. '().' → logprob: -7.135241508483887
    4. ' for' → logprob: -7.135241508483887
    5. '   ' → logprob: -11.135241508483887
    6. '()]' → logprob: -12.385241508483887
    7. '()[' → logprob: -12.885241508483887
    8. '	for' → logprob: -13.135241508483887
    9. ' ' → logprob: -13.385241508483887
    10. ')' → logprob: -13.510241508483887

Token 2225: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012814223300665617
    2. '_i' → logprob: -6.751281261444092
    3. '_range' → logprob: -9.37628173828125
    4. '_in' → logprob: -11.75128173828125
    5. '_line' → logprob: -12.50128173828125
    6. '_j' → logprob: -12.50128173828125
    7. ' _' → logprob: -12.87628173828125
    8. 'i' → logprob: -13.12628173828125
    9. '_d' → logprob: -14.00128173828125
    10. '_n' → logprob: -14.50128173828125

Token 2226: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18446436524391174
    2. ' range' → logprob: -1.8094643354415894
    3. 'in' → logprob: -5.934464454650879
    4. '_' → logprob: -6.809464454650879
    5. ' in' → logprob: -7.059464454650879
    6. 'i' → logprob: -9.684464454650879
    7. '	range' → logprob: -11.809464454650879
    8. ' ' → logprob: -12.059464454650879
    9. 'd' → logprob: -12.434464454650879
    10. '(range' → logprob: -12.559464454650879

Token 2227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.339278580620885e-06
    2. ' range' → logprob: -13.000001907348633
    3. '	range' → logprob: -19.125001907348633
    4. '(range' → logprob: -20.000001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '  ' → logprob: -23.500001907348633
    7. ' ' → logprob: -23.625001907348633
    8. 'rang' → logprob: -23.625001907348633
    9. '
' → logprob: -24.375001907348633
    10. '.range' → logprob: -24.750001907348633

Token 2228: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011049585416913033
    2. 'N' → logprob: -4.511049747467041
    3. '	N' → logprob: -13.636049270629883
    4. '(' → logprob: -14.636049270629883
    5. '   ' → logprob: -16.261049270629883
    6. ' N' → logprob: -17.011049270629883
    7. 'range' → logprob: -18.011049270629883
    8. '<N' → logprob: -18.261049270629883
    9. '_N' → logprob: -18.386049270629883
    10. '[N' → logprob: -18.511049270629883

Token 2229: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3139690160751343
    2. ']' → logprob: -1.3139690160751343
    3. ')' → logprob: -7.438969135284424
    4. '])' → logprob: -9.188968658447266
    5. '()]' → logprob: -12.438968658447266
    6. '])]' → logprob: -12.438968658447266
    7. ']
' → logprob: -12.563968658447266
    8. ' ]' → logprob: -12.938968658447266
    9. '   ' → logprob: -13.938968658447266
    10. ')]
' → logprob: -14.063968658447266

Token 2230: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0036100437864661217
    2. '   ' → logprob: -5.753610134124756
    3. ' print' → logprob: -8.378609657287598
    4. 'result' → logprob: -9.503609657287598
    5. '
' → logprob: -9.753609657287598
    6. '    
' → logprob: -10.378609657287598
    7. '```' → logprob: -10.628609657287598
    8. '	print' → logprob: -12.128609657287598
    9. '  
' → logprob: -12.503609657287598
    10. '``' → logprob: -14.128609657287598

Token 2231: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.451116051815916e-05
    2. '   ' → logprob: -10.750024795532227
    3. 'result' → logprob: -13.250024795532227
    4. ' print' → logprob: -13.750024795532227
    5. '```' → logprob: -16.500024795532227
    6. '    
' → logprob: -17.125024795532227
    7. '
' → logprob: -17.625024795532227
    8. '	print' → logprob: -18.750024795532227
    9. 'res' → logprob: -20.125024795532227
    10. 'answer' → logprob: -20.750024795532227

Token 2232: '(can' (ID: 165148)
  Prédit: '(can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(can' → logprob: -4.0126840758603066e-05
    2. '(' → logprob: -10.250040054321289
    3. 'can' → logprob: -12.375040054321289
    4. '("' → logprob: -15.375040054321289
    5. '(c' → logprob: -16.75004005432129
    6. '((' → logprob: -16.87504005432129
    7. '()' → logprob: -17.37504005432129
    8. '(call' → logprob: -17.50004005432129
    9. ' can' → logprob: -17.62504005432129
    10. '	can' → logprob: -17.75004005432129

Token 2233: '_complete' (ID: 67286)
  Prédit: '_complete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_complete' → logprob: -0.0005535095697268844
    2. 'complete' → logprob: -7.500553607940674
    3. 'Complete' → logprob: -16.000553131103516
    4. ' complete' → logprob: -16.125553131103516
    5. '_COMPLETE' → logprob: -16.375553131103516
    6. '_completed' → logprob: -17.375553131103516
    7. '_com' → logprob: -17.500553131103516
    8. '_completion' → logprob: -18.125553131103516
    9. '\' → logprob: -18.375553131103516
    10. 'com' → logprob: -18.500553131103516

Token 2234: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.00014048899174667895
    2. 'round' → logprob: -8.875140190124512
    3. '(round' → logprob: -15.500140190124512
    4. 'Round' → logprob: -16.125141143798828
    5. '```' → logprob: -16.500141143798828
    6. '_trip' → logprob: -17.375141143798828
    7. '_r' → logprob: -17.750141143798828
    8. '_' → logprob: -17.875141143798828
    9. 'a' → logprob: -17.875141143798828
    10. '_complete' → logprob: -18.375141143798828

Token 2235: 'trip' (ID: 51122)
  Prédit: 'trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.6240566083070007e-06
    2. '_trip' → logprob: -14.125001907348633
    3. 'ip' → logprob: -14.875001907348633
    4. 'tip' → logprob: -15.000001907348633
    5. ' trip' → logprob: -16.000001907348633
    6. 'tr' → logprob: -17.125001907348633
    7. '-trip' → logprob: -19.125001907348633
    8. 'up' → logprob: -19.125001907348633
    9. 'Trip' → logprob: -19.375001907348633
    10. 'rip' → logprob: -19.500001907348633

Token 2236: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.47435107827186584
    2. '(d' → logprob: -0.9743510484695435
    3. '(' → logprob: -8.724350929260254
    4. '(len' → logprob: -9.849350929260254
    5. ' (' → logprob: -10.349350929260254
    6. '((' → logprob: -11.349350929260254
    7. ')' → logprob: -11.599350929260254
    8. '(D' → logprob: -12.724350929260254
    9. '(n' → logprob: -13.849350929260254
    10. 'd' → logprob: -14.474350929260254

Token 2237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015080781886354089
    2. ',d' → logprob: -6.5015082359313965
    3. ' ,' → logprob: -12.751507759094238
    4. ',
' → logprob: -13.001507759094238
    5. '(' → logprob: -15.376507759094238
    6. 'd' → logprob: -15.751507759094238
    7. '   ' → logprob: -17.001508712768555
    8. ',p' → logprob: -17.501508712768555
    9. ',D' → logprob: -17.501508712768555
    10. ')' → logprob: -17.751508712768555

Token 2238: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.615255839889869e-05
    2. ' d' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. ')d' → logprob: -19.50009536743164
    5. '	d' → logprob: -19.75009536743164
    6. '(d' → logprob: -20.62509536743164
    7. ')' → logprob: -20.87509536743164
    8. '  ' → logprob: -21.87509536743164
    9. ' ' → logprob: -22.12509536743164
    10. '$d' → logprob: -22.25009536743164

Token 2239: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519502341747284
    2. ')' → logprob: -1.5019502639770508
    3. '())' → logprob: -11.12695026397705
    4. '))
' → logprob: -12.87695026397705
    5. '()))' → logprob: -13.37695026397705
    6. '()' → logprob: -14.25195026397705
    7. ')))' → logprob: -14.62695026397705
    8. ')
' → logprob: -15.12695026397705
    9. '])' → logprob: -15.12695026397705
    10. '})' → logprob: -15.50195026397705


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2237
Tokens correctement prédits (1ère position, stricte): 758
Tokens correctement prédits (1ère position, avec adaptation): 790
Tokens correctement prédits (top 10): 1598
Précision stricte (1ère position): 33.88%
Précision adaptée (1ère position): 35.32%
Précision (top 10): 71.43%
================================================================================
